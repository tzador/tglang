(defn count-sum
  "Calculate the sum of a list of numbers using a recursive approach"
  [nums]
  (cond
    (empty? nums) 0                                      ; base case: empty list, sum is 0
    (= (count nums) 1) (first nums)                       ; base case: one element, sum is the element itself
    :else (+ (first nums) (count-sum (rest nums)))))       ; recursive case: sum the first element and the result of recursively calling count-sum on the rest of the list
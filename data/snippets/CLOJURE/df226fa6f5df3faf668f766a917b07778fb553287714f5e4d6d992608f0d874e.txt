(defn pivot [lst low high] 
   (let [pivot (nth lst high) 
         (higher-lower (reduce (fn [acc x] 
                                (if (> x pivot) 
                                    [(first acc) (concat (second acc) (list x))] 
                                    [(concat (first acc) (list x)) (second acc)])) 
                            [[] []] 
                            lst))] 
     (concat (pivot (first higher-lower)) [pivot] (pivot (second higher-lower)))))
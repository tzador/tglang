(defn print-nested-list [lst]
    "This function takes in a nested list and prints out all the elements in the list"
    (cond
        (empty? lst) (println "Empty list provided!")
        (not (list? lst)) (println "Please provide a list!")
        :else (doseq [e lst]
                (if (list? e)
                    (print-nested-list e)
                    (prn e)))))
(def currency {"USD" "dollar", "EUR" "euro", "JPY" "yen"}) ; Creates a map containing currency codes and their corresponding names
(defn convert-currency [amount from to] ; Defines a function that takes in an amount, source currency, and target currency
  (let [source (currency from) ; Gets the name of the source currency from the map
        target (currency to) ; Gets the name of the target currency from the map
        rate (get-rates from to)] ; Retrieves the exchange rate from a third-party API
    (println (str "Converting " amount " " source " to " target "...")))
  (* amount rate)) ; Multiplies the amount by the exchange rate to get the converted amount

(defn get-rates [from to] ; Defines a function that takes in two currency codes
  (let [response (http/get (str "https://api.exchangeratesapi.io/latest?base=" from "&symbols=" to)) ; Sends a GET request to the API and stores the response
        body (:body response) ; Gets the body from the response
        json-body (json/read-str body) ; Converts the body to a Clojure map
        rates (get-in json-body [:rates to])] ; Gets the exchange rate from the map
    rates)) ; Returns the exchange rate

(println (convert-currency 100 "USD" "EUR")) ; Prints the result of converting 100 USD to EUR
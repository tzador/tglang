(defn longest-common-prefix
  "Finds the longest common prefix from a list of strings"
  [strings]
  (if (empty? strings)
    "" ;; if the list is empty, return empty string
    (reduce
      (fn [prefix string]
        ;; Use built-in function find to return
        ;; the index of the first mismatch between
        ;; prefix and current string
        (let [mismatch-index (find
                               (partial not=)
                               prefix
                               string)]
          ;; If there is a mismatch, use substring
          ;; to return only the first part of prefix
          ;; that is common to all strings
          (if mismatch-index
            (subs prefix 0 mismatch-index)
            prefix)))
      ;; Initialize prefix with first string
      (first strings)
      ;; Apply reduce to each string in the list, starting
      ;; from the second string
      (rest strings))))
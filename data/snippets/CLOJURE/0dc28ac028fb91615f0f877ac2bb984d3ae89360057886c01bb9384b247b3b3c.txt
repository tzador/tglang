(defn get-even-numbers [lst]
  "A function that takes in a list and returns only the even numbers in the list"
  (filter even? lst))

;; This function utilizes Clojure's filter function to filter out only the even numbers in a given list.

(get-even-numbers [1 2 3 4 5 6 7 8]) ; => (2 4 6 8)

(defn calculate-sum [lst]
  "A function that takes in a list of numbers and calculates the sum"
  (apply + lst))

;; This function uses Clojure's apply function to apply the + operator to the numbers in a list and calculates the sum.

(calculate-sum [1 2 3 4 5]) ; => 15

(defn calculate-average [lst]
  "A function that takes in a list of numbers and calculates the average"
  (let [sum (calculate-sum lst) ; use the calculate-sum function to get the sum of the list
        count (count lst)] ; use Clojure's count function to get the length of the list
    (/ sum count))) ; divide the sum by the length to get the average

;; This function uses the let binding to store the sum and count variables, then divides the sum by the count to get the average.

(calculate-average [1 2 3 4 5]) ; => 3
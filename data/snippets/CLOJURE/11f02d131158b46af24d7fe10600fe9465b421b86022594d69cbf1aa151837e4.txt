(defn recursive-fib [n] ; define a recursive function to calculate Fibonacci sequence

  (if (<= n 1) ; base case: if n is 0 or 1, return n
    n
    (+ (recursive-fib (- n 1)) (recursive-fib (- n 2))) ; recursive call to calculate previous two numbers in sequence and add them together
  )
)

(defn print-sequence [n] ; define a function to print a sequence of numbers in a list

  (if (<= n 0) ; base case: if n is 0 or negative, return an empty list
    '()
    (conj (print-sequence (- n 1)) (recursive-fib n)) ; recursive call to add the next Fibonacci number to the list
  )
)

(print-sequence 10) ; prints the first 10 numbers in the Fibonacci sequence
(defn sum-factors [n]
  "Returns the sum of all factors of n"
  (let [factors (into #{} (filter #(zero? (rem n %)) (range 1 (inc (quot n 2)))))]
    (reduce + factors)))

(defn is-perfect-number [n]
  "Checks if n is a perfect number or not"
  (let [sum (sum-factors n)]
    (if (= sum n)
      true
      false)))

(defn run-perfect-number-check [n]
  "Runs the perfect number check function and prints the result"
  (if (is-perfect-number n)
    (println (str n " is a perfect number"))
    (println (str n " is not a perfect number"))))

;; Example usage
(run-perfect-number-check 6)
;; Output: "6 is a perfect number"

(run-perfect-number-check 8)
;; Output: "8 is not a perfect number"
(defn split-by-step
  "Splits a sequence into two sequences, with the first sequence containing
  the elements up until the specified index and the second sequence containing
  the elements after the specified index. Takes a step size as an optional
  argument, defaulting to 1."
  [seq index & [step]]
  (let [step (if (number? step) (max 1 step) 1)
        start (max 0 index)
        end (count seq)
        first (take-nth step (drop start (range end)))
        second (take-nth step (drop (+ start step) (range end)))]
    [first second]))
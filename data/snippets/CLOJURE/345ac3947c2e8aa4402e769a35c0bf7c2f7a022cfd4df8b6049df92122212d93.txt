;; define a function that takes in a list of numbers
(defn sum-of-squares [num-list]
  ;; create an empty list to store squared numbers
  (def squared-list '())
  ;; loop through the input list
  (loop [x num-list]
    ;; if list is empty, return squared list
    (if (empty? x)
      squared-list
      ;; else square the first number and add it to squared list
      (do
        (def squared-num (* (first x) (first x)))
        (conj squared-list squared-num)
        ;; recursively call function on remaining list
        (recur (rest x))))))
        
;; example input list
(def numbers '(1 2 3 4 5)) 
;; call function and print output
(prn (sum-of-squares numbers)) 
;; expected output: [1 4 9 16 25]
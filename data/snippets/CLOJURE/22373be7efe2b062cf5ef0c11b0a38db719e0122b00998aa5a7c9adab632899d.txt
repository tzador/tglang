;; Defining a function with optional parameters
(defn calculate-total
  "Calculates the total cost of an order, with an optional discount percentage"
  [item-price quantity & {:keys [discount]}]
  (let [total (* item-price quantity)]
    (if discount
      (* total (- 100 discount) 0.01)
      total)))
      
;; Calling the function with only required parameters
(calculate-total 20 10)
;; Output: 200

;; Calling the function with optional discount percentage
(calculate-total 20 10 :discount 25)
;; Output: 150
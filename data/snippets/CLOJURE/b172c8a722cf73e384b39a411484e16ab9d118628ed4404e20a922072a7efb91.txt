(defn map-vec
  "Takes a function f and a vector of elements as arguments.
   Applies f to each element in the vector and returns a new vector
   with the results."
  [f elements]
  (loop [result [] elements elements]
    (if (empty? elements)
      result
      (recur (conj result (f (first elements))) (rest elements)))))

(map-vec (fn [x] (* x x)) [1 2 3 4 5]) ; Output: [1 4 9 16 25]

(map-vec str ["Hello" "world"]) ; Output: ["Hello" "world"]
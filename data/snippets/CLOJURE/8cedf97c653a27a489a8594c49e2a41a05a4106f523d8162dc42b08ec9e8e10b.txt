;; This function applies a transformation to a sequence of numbers
;; It takes in two parameters: a transformation function and a sequence of numbers
(defn apply-transformation [fn seq-numbers]
  ;; Initialize an empty vector to hold the transformed numbers
  (let [transformed-nums []]
    ;; Loop through the sequence of numbers 
    (doseq [num seq-numbers]
      ;; Apply the transformation function to each number and add it to the vector
      (conj transformed-nums (fn num)))
    ;; Return the transformed numbers vector as the output
    transformed-nums))

;; Example usage: square each number in a sequence of numbers
(apply-transformation square [1 2 3 4 5])
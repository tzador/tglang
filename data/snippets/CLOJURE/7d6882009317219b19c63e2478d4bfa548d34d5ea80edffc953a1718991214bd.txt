(defn fib [n]    ; defining a function named "fib" with input "n" 
  (let [a (atom [])]    ; creating a mutable reference (atom) containing an empty vector 
    (swap! a conj 0 1)  ; swapping the reference with the vector [0 1] 
    (dotimes [i n] (swap! a conj (nth @a (- i 2) (+ (first @a) (second @a)))))  ; using dotimes to iterate through n values 
    (println "The first" n "numbers of the Fibonacci sequence are:" @a)))  ; printing the final vector containing the first n numbers of the sequence 

(fib 10) ; calling the fib function with input 10
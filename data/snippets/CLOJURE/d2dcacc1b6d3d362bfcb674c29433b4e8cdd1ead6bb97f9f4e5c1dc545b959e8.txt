;; Define a higher-order function that takes in two functions and returns their composition
(defn compose [f g]
  (fn [& args]
    (f (apply g args))))

;; Define a function that will add one to any given number
(defn increment [x]
  (+ x 1))

;; Define a function that will multiply any given number by two
(defn double [x]
  (* x 2))

;; Define a function that will square any given number
(defn square [x]
  (* x x))

;; Compose the increment, double, and square functions into a new function
(def inc-double-square (compose increment (compose double square))) 

;; Test the resulting function with input of 5
(inc-double-square 5)
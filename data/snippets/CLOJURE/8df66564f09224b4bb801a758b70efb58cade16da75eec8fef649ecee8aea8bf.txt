(defn longest-common-subsequence
    "Dynamic programming solution to the Longest Common subsequence problem. Takes two strings as input and returns the length of the longest common subsequence."

    [s1 s2]
    (let [m (inc (count s1))
          n (inc (count s2))
          DP (make-array IntegerTYPE m n)]
        (loop [i m]
            (when (> i 0)
                (loop [j n]
                    (when (> j 0)
                        (let [a (- i 1)
                              b (- j 1)]
                            (if (.= (s1 a) (s2 b))
                                (aset DP i j (inc (aget DP (- i 1) (- j 1))))
                                (aset DP i j (max (aget DP (- i 1) j) (aget DP i (- j 1))))))
                        (recur (dec j))))
                (recur (dec i))))
        (aget DP m n)))
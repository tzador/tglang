(defn factorial
  "Calculates factorial of n, using tail recursion for efficiency."
  [n]
  (loop [n n                  ; create initial binding for n
         fac 1]               ; create initial binding for fac
    (if (= n 1)               ; check if n is equal to 1
      fac                     ; if true, return current value of fac
      (recur (dec n)          ; if false, call 'recur' with decremented n
             (* fac n)))))    ; update fac by multiplying with current n
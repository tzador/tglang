;; This function takes in a list of numbers and returns a list of their squares
(defn square-values
  ;; Function signature: [List] -> [List]
  [numbers]
  ;; Base case: If the list is empty, return empty list
  (if (empty? numbers)
    '()
    ;; Recursive case: Square the first number and recursively call the function
    ;; on the rest of the list, then concatenate the squared number to the
    ;; result of the recursive call.
    (concat [(square (first numbers))] (square-values (rest numbers)))))
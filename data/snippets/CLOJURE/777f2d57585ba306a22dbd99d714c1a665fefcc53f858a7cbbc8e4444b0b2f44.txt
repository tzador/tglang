(defn recursive-function [n]
  "A function that takes in a number and recursively calculates its factorial"
  (if (<= n 1)
    1
    (* n (recursive-function (dec n)))
  )
)

(defn wrapper-function [n]
  "A wrapper function that prompts the user for a number and calls the recursive function on it"
  (println "Enter a number:")
  (let [input (read-line)]
    (if (re-find #"\d+" input)
      (recursive-function (Integer/parseInt input))
      (do
        (println "Invalid input. Please enter a valid number.")
        (recur n)))) ; uses recur to start the wrapper function again if the input is invalid

(println "Factorial of 5 = " (wrapper-function 5))

; Output: Factorial of 5 = 120
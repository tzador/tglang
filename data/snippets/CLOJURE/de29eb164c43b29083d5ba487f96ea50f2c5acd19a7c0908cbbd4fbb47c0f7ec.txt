(defn- binary-search [coll search]
  "Performs a binary search on a sorted collection to find the index of the given element"
  (let [low (atom 0)
        high (atom (dec (count coll)))]
    (letfn [(average [x y] (int (/ (+ x y) 2)))
            (get-mid [] (average @low @high))
            (mid-elem [] (get @coll (get-mid)))
            (update-low [] (swap! low inc))
            (update-high [] (swap! high dec))
            (search-iter [lo hi]
                         (when (>= lo hi)
                           (let [mid-index (int (/ (+ lo hi) 2))
                                 mid-elem (get coll mid-index)]
                             (cond
                               (= search mid-elem) mid-index
                               (< search mid-elem) (do (update-high) (search-iter lo mid-index))
                               (> search mid-elem) (do (update-low) (search-iter (inc mid-index) hi))))))]
      (search-iter @low @high))))
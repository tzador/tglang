(ns my-app.core
  (:require [clojure.string :as str]))
  
(defn area [height width]
  "Calculate the area of a rectangle by multiplying its height and width"
  (* height width))
  
(defn perimeter [height width]
  "Calculate the perimeter of a rectangle by adding the length of all its sides"
  (* 2 (+ height width)))
  
(defn- triangle-area [base height]
  "Calculate the area of a triangle by multiplying its base and height then dividing by 2"
  (/ (* base height) 2))
  
(defn- triangle-perimeter [side-1 side-2 side-3]
  "Calculate the perimeter of a triangle by adding the length of all its sides"
  (apply + (values {:side-1 side-1 :side-2 side-2 :side-3 side-3})))
  
(defn shape-properties [shape & args]
  "Calculate the properties of a shape based on its type and provided arguments"
  (case shape
    :rectangle (let [height (first args)
                     width (nth args 1)]
                  [:area (area height width)
                   :perimeter (perimeter height width)])
    :triangle (let [base (first args)
                    height (nth args 1)]
                 [:area (triangle-area base height)
                  :perimeter (triangle-perimeter base (+ height height) (hypot base height))])))
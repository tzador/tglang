(defn recursive-fib [n]
  "Returns the nth Fibonacci number"
  (if (< n 2)
      n
      (+ (recursive-fib (- n 1))
         (recursive-fib (- n 2)))))

(comment
  "This is a recursive function to calculate the nth Fibonacci number.
  It takes in a parameter n, and returns the sum of the previous two numbers in the Fibonacci sequence.
  For example, (recursive-fib 8) would return 21, as the 8th Fibonacci number is 21.
  This function uses the concept of recursion, making calls to itself to solve smaller subproblems.
  This code snippet showcases one of the many uses and benefits of functional programming in Clojure."
)

(recursive-fib 10) ;; returns 55, the 10th Fibonacci number
(defmacro concat-string [str1 str2]
  "This is a macro that concatenates two strings into one."
  `(str ~str1 ~str2)) ; uses backquote for splicing

(def str3 (concat-string "Hello" "World"))
(println str3) ; prints Hello World

(defn get-anagrams [word-list]
  "This function takes in a list of words and returns a list of all possible anagrams."
  (if (<= (count word-list) 1)
    `((first word-list))
    (apply concat
      (for [char (string/split (first word-list) #"")]
        (concat-string (str char) (get-anagrams (rest word-list)))))))

(println (get-anagrams ["paper" "triangle"])) ; prints ("paper" "triangle" "pairepg" "paigepg" "trinagle" "trianglep" "paergpi" "pieagpr")
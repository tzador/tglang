(defn my-func [a b]
  "This is a function that takes in two arguments, a and b"
  (let [c (inc a)
        d (dec b)]
    "Using the let binding, we define two new variables c and d
    c is the incremented value of a and d is the decremented value of b"
    (+ c d)))
; this line is a comment
(comment "This is a comment that will not be evaluated, useful for adding notes and annotations to code")

(let [my-list [1 2 3 4 5] ; define a list with 5 elements
      my-map {:a 1 :b 2 :c 3}] ; define a map with 3 key-value pairs
  (doseq [num my-list] ; loop through each element in the list
    (prn num)) ; print the element
  (doseq [[key value] my-map] ; loop through each key-value pair in the map
    (println (str key " = " value)) ; print the key and value in a string
    (println "This is another line of code"))) ; print another line of code
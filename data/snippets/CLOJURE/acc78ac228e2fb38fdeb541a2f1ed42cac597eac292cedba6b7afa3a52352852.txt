(defn get-square-root [x] ;; defining the function with one input parameter
  (loop [guess 1 
         ;; setting initial guess to 1
         result 1] ;; setting initial result to 1 as well
    (if (= (Math/abs (- (* result result) x)) ;; checking if the absolute difference between the square of the result and the input number is equal to 0
           0) 
      ;; if it is, then return the result
      result
      ;; if it isn't, then use the Newton's method to update the guess and result
      (recur (double (/ (+ result (/ x result)) 2)) 
             ;; new guess = half of the sum of result and x/result
             (/ (+ result (/ x result)) 2))) ;; new result = half of the sum of result and x/result
      ))
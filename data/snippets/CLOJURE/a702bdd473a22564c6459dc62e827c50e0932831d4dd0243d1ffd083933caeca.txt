(defmacro for [bindings & body] ; defining a macro function called "for"
  (if (seq bindings)
    `(loop [~(first bindings) (first (next bindings))] ; setting up loop with first binding and rest of bindings
       (if ~@(first bindings) ; first part of for loop: condition
         (do ~@body ; execute body if condition is true
           (recur ~@(rest bindings))) ; recur to next binding
         (do ~@body))) ; second part of for loop: execute body if no condition
       `(~@(rest (rest bindings)) ~@body)) ; recur to next body with remaining bindings
    `(do ~@body) ; execute body if no bindings are given
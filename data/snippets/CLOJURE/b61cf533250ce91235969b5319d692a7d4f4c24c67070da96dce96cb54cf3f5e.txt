(defn bubble-sort [coll]
  (loop [current-seq coll
         swapped true
         result []]
    (if (not swapped)
      result
      (let [swap-index (reduce 
                         #(if (< (current-seq %1) (current-seq %2))
                            %1
                            %2)
                         (range (dec (count current-seq))))
            current-seq-with-swap (vec (concat (take swap-index current-seq)
                                               (drop (+ 1 swap-index) current-seq)))]
        (recur current-seq-with-swap
               (if (= swap-index 0)
                 false
                 true)
               (assoc result swap-index (current-seq swap-index)))))))
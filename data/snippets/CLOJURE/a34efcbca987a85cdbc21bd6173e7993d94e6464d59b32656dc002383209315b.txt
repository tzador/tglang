(defn special-list [x]  ; function takes in a single parameter 'x'
  (if (empty? x)  ; checks if 'x' is empty
    (print "List is empty")  ;; if 'x' is empty, prints the message
    (let [result []]  ; creates a new empty list to store the result
      (while (> (count x) 0)  ; while loop condition, runs while 'x' still has elements
        (if (= (first x) 0)  ; checks if the first element of 'x' is 0
          (do  ;; if first element is 0, add it to 'result' and remove it from 'x'
            (def result (concat result [0]))
            (def x (rest x)))
          (def result  ;; if first element is not 0, add it to 'result' and remove it from 'x'
            (concat result [(first x)]))
            (def x (rest x)))
        (if (empty? x)  ;; checks again if 'x' is empty after the manipulation
          (print "All elements in list are non-zero")
          (print "Result so far:" result)))  ;; if 'x' still has elements, prints the current result
      (print "Final result:" result))))  ;; after the loop, prints the final result
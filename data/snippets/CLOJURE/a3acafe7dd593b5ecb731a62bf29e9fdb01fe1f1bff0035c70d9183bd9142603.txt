;; This is a function that takes in a list of numbers
(defn sum-of-square-seq
  [nums]
  ;; This is an accumulator that starts at 0
  (let [acc 0]
    ;; This is a loop that iterates through the list of numbers
    (doseq [n nums]
      ;; This is a conditional statement that checks if the number is even
      (if (even? n)
        ;; This is a recur statement that adds the squared even number to the accumulator
        (recur (inc acc) (* n n))
        ;; This is a recur statement that adds the odd number to the accumulator
        (recur acc n))))
  ;; This is the final value of the accumulator, which represents the sum of squared even numbers in the list
  acc)
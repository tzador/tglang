(defn fib [n]
  "Calculates the nth Fibonacci number recursively.
   Uses memoization for improved performance."
  (let [cache (atom {})]
    (defn fib-internal [n]
      (if (or (= n 0) (= n 1))
        n
        (if (contains? @cache n)
          (get @cache n)
          (let [result (+ (fib-internal (- n 1)) (fib-internal (- n 2)))]
            (swap! cache assoc n result); memoization
            result)))))
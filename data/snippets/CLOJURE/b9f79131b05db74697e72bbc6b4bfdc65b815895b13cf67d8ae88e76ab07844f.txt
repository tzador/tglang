(defn calculate-fact [x]
  (let [fact (atom 1)] ; create an atom with initial value of 1
    (loop [y 1]
      (if (> y x) ; check if y is greater than x
        @fact ; if yes, return current value of atom
        (do ; if no, update atom value and call function recursively
          (reset! fact (* @fact y)) ; reset the atom by multiplying current value with y
          (recur (inc y)))))) ; call function recursively with incremented y value
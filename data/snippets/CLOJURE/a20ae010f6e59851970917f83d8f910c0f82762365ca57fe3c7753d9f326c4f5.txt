(defn fibonacci [n]
  (if (< n 2)
    n
    (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

(def memo-fibonacci
  (memoize fibonacci))

(comment
"This is a memoized version of the classic fibonacci function in Clojure.
The memoize function takes in a function as an argument and returns a memoized version of it,
which caches the returned values for future calls with the same input(s).
This code snippet uses dynamic programming to calculate the fibonacci sequence,
reducing the number of function calls and improving time complexity.
The memo-fibonacci function uses the memoized fibonacci function to avoid repetitive calculations.
This results in a more efficient and faster way to calculate the fibonacci sequence.")
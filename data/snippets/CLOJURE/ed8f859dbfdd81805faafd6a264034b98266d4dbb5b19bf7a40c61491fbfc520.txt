(defn sum-to-n [n]             ; defining a function with the parameter n
  (loop [sum 0                  ; initializing a loop with sum = 0
         i 1]                   ; starting point for i is 1
    (cond (= i n)               ; checking if i is equal to n
          (+ sum n)             ; if yes, then add sum and n and return the result
          :else                 ; if not, continue the loop
          (recur (+ sum i)      ; recursively call the loop function with updated sum (sum + i) 
                 (inc i)))))     ; and updated i (i + 1, increments i by 1)
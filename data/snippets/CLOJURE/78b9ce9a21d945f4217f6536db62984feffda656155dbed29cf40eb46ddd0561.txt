;; Define a function that takes in a string and returns the reverse
(defn string-reverse [str]
  (reduce str
    (fn [rev char]
      (str char rev))))
      
;; Example call with a string
(string-reverse "hello") ; Output: "olleh"

;; Create a list with numbers from 1 to 10
(def numbers (range 1 11))

;; Filter the numbers list to only include even numbers
(filter even? numbers) ; Output: (2 4 6 8 10)

;; Use the map function to add 1 to each number in the list
(map inc numbers) ; Output: (2 3 4 5 6 7 8 9 10 11)

;; Define a function that checks if a number is prime
(defn is-prime? [num]
  (if (= num 2)
    true
    (->> (range 2 num)
         (map #(= (rem num %) 0))
         (not-any? true?))))
         
;; Example call with a number
(is-prime? 17) ; Output: true
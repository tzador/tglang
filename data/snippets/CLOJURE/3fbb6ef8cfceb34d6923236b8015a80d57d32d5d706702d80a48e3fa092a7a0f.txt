(defn my-function [args] ; Define a function called 'my-function' that takes in 'args' as a parameter
  (let [result (reduce (fn [acc x] (* acc x)) 1 args)] ; Define a variable 'result' that calculates the product of the elements in 'args' using the 'reduce' function with an anonymous function as the argument
    (if (> result 50) ; If the value of 'result' is greater than 50
      :big-result ; Return the keyword ':big-result'
      (reverse (drop 3 args))))) ; Otherwise, return the first 3 elements of 'args' in reverse order using the 'drop' and 'reverse' functions.
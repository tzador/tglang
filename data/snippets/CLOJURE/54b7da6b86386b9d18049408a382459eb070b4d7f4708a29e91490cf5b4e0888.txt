(defn bubble-sort [coll]
  (loop [coll coll]
    (if-let [sorted-coll (bubble coll)]
      (recur sorted-coll)
      coll)))

(defn bubble [coll]
  (let [n (count coll)]
    (loop [i (dec n), l coll, swapped? false]
      (if (zero? i)
        [l swapped?]
        (let [curr (nth l i)
              nex  (nth l (inc i))]
          (if (and nex (> curr nex))
            (recur i (assoc (assoc l i nex) (inc i) curr) true)
            (recur (dec i) l swapped?)))))))
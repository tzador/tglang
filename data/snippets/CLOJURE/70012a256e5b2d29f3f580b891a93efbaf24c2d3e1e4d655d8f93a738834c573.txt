(defn recursive-fib [n]
  "A function that calculates the nth Fibonacci number recursively."
  (if (or (= n 0) (= n 1))
    n
    (+ (recursive-fib (- n 1)) (recursive-fib (- n 2)))))

(println "Enter a number:")
(let [n (Integer/parseInt (read-line))]
  (println "The nth Fibonacci number is:" (recursive-fib n)))

; Output:
; A function that calculates the nth Fibonacci number recursively.
; 
; (defn recursive-fib [n]
;   (if (or (= n 0) (= n 1))
;     n
;     (+ (recursive-fib (- n 1)) (recursive-fib (- n 2)))))
; 
; (println "Enter a number:")
; (let [n (Integer/parseInt (read-line))]
;   (println "The nth Fibonacci number is:" (recursive-fib n)))
;
; Output:
; Enter a number:
; 5
; The nth Fibonacci number is: 5
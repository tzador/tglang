(defn insert-sort [lst]
  (loop [sorted (list (first lst))
        unsorted (rest lst)]
      (if (empty? unsorted)
          sorted
          (let [item (first unsorted)
                new-sorted (conj (take-while #(>= item %) sorted) item)
                new-unsorted (rest (drop-while #(>= item %) sorted))]
             (recur new-sorted (concat new-unsorted (rest unsorted)))))))
(defn map-indexed
  [f coll]
  (loop [i 0
         s (seq coll)]
    (when s
      (lazy-seq
       (cons (f i (first s))
             (map-indexed f (nnext s)))))))

; f - the function to be applied to each element
; coll - the collection to be mapped over

(def letters ["a" "b" "c" "d"])
(defn add-index [index letter]
  (str index letter))

(map-indexed add-index letters) ; returns (0 "a" 1 "b" 2 "c" 3 "d")

; Output:
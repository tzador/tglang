(ns game.rules
  (:require [game.deck :refer [shuffle]]))

(defn compare [hand1 hand2]
  "Compares two hands of cards and returns 1 if hand1 wins,
   -1 if hand2 wins, and 0 if it's a tie."
  (let [hand1-sorted (sort hand1)
        hand2-sorted (sort hand2)]
    (def rule-straight {:rule-name "Straight"
                        :rule-function
                        (fn [hand]
                          (let [suit-val (fn [card]
                                          (case (card-suit card)
                                            :clubs 0
                                            :diamonds 1
                                            :hearts 2
                                            :spades 3))
                                sorted-hand (sort (map suit-val hand))
                                is-straight (fn [hand]
                                              (let [lowest (first hand)
                                                    len (count hand)
                                                    straight (range lowest
                                                                    (+ lowest len))]
                                                (= straight hand)))
                                check-lowest (fn [hand-check]
                                               (if (and (= (last pad-hand-check)
                                                           (dec (second hand-check)))
                                                        (not= (second (last hand-check))
                                                              (dec (first hand-check))))
                                                 (dec (last hand-check))
                                                 (last hand-check)))
                                straight-hand (if (map is-straight hand)
                                                 hand
                                                 (update-in hand
                                                            [(:ind-rule lowest)]
                                                            check-lowest))]
                            (if (contains? straight-hand {:kind :straight})
                              (update-in hand [:ind-rule] inc)
                              hand)))))}))
(-> (shuffle hand1-sorted)
    (rule-straight (:rule-map game))
    (compare hand2-sorted)))
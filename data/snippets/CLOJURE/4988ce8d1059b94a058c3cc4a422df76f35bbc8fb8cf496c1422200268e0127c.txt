;;;nested functions inside a higher-order function for sorting a vector of numbers
(defn sort-numbers [numbers]
  (defn quicksort [x]
    (if (empty? x)
        '()
        (let [pivot (first x)]
          (concat (quicksort (filter #(< % pivot) (rest x))) 
                  (list pivot) 
                  (quicksort (filter #(>= % pivot) (rest x)))))))
  (quicksort numbers))
 
(sort-numbers [8 4 2 7 1 3 6 5])
(defn factorial [n]
  "Calculates the factorial of a given number"
  (if (<= n 1)
    1
    (* n (factorial (dec n)))))

(defn fibonacci [n]
  "Calculates the nth term in the Fibonacci sequence"
  (if (<= n 1)
    n
    (+ (fibonacci (- n 1))
       (fibonacci (- n 2)))))
       
(defn is-prime? [n]
  "Checks if a given number is prime"
  (if (<= n 1)
    false
    (loop [i 2]
      (if (= i n)
        true
        (if (zero? (mod n i))
          false
          (recur (inc i)))))))
;; This code snippet defines three functions: factorial, fibonacci, and is-prime?. 

;; The factorial function recursively calculates the factorial of a given number. It takes in a parameter 'n' and uses an 'if' statement to check if 'n' is less than or equal to 1. If so, it returns 1, otherwise it multiplies 'n' with the factorial of 'n-1' using the 'dec' function.

;; The fibonacci function recursively calculates the nth term in the Fibonacci sequence. It also takes in a parameter 'n', and uses an 'if' statement to check if 'n' is less than or equal to 1. If so, it returns 'n', otherwise it sums the previous two terms in the sequence by recursively calling the fibonacci function with 'n-1' and 'n-2' as parameters.

;; The is-prime? function checks if a given number is prime by using a 'loop' statement with a recursive 'recur' function. It starts at 2 and checks if 'i' is equal to 'n'. If so, it returns true, otherwise it checks if 'n' is divisible by 'i'. If not, it increments 'i' and recursively calls 'recur' with the new value of 'i'. This continues until either 'i' is equal to 'n' or 'n' is found to be divisible by 'i', in which case it returns false.

(def userInput (read-line))
;; This line of code takes user input from the console and stores it in the variable 'userInput'. 

(println "The factorial of" userInput "is" (factorial (int userInput)))
;; This line uses the 'println' function to print out the result of calling the factorial function on the user input, casted as an integer using the 'int' function. The other parts of the statement are just string literals and variables concatenated using the 'str' function.
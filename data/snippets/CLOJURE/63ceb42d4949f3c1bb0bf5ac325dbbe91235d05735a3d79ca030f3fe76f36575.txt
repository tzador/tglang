;; Here, we are defining a function called "outer-fn" which takes in two arguments, "num1" and "num2"
(defn outer-fn [num1 num2]
  ;; Here, we are defining a local variable "sum" that holds the sum of "num1" and "num2"
  (let [sum (+ num1 num2)]
    ;; Here, we are defining an inner function called "inner-fn" that takes no arguments
    (fn []
      ;; Here, we are returning the value of "sum"
      sum))))
;; Here, we are calling the function "outer-fn" with arguments 5 and 10 and assigning the returned function to a variable "inner-fn"
(def inner-fn (outer-fn 5 10))
;; Here, we are calling the function "inner-fn" which will return the value of "sum", which is the sum of 5 and 10
(inner-fn)
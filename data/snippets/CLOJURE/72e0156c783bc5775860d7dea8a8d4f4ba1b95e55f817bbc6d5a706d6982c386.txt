(defn is-prime? [n] ;;function to check if number is prime
  (cond ;; begin conditional statement
    (= n 1) false ;;if number is 1, it is not prime
    (and (>= n 2) (= n 2)) true ;;if number is 2, it is prime
    (even? n) false ;;if number is even, it is not prime
    :else (loop [i 3] ;;else statement, initiate loop starting at 3
            (if (< i n) ;;if i is less than n
              (if (zero? (mod n i)) false ;;and if n is divisible by i, it is not prime
                  (recur (+ i 2))) ;;otherwise, increment i by 2 and recur
              true))) ;;if none of the previous conditions are met, n is prime
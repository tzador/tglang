(defn longest-substring [s]
  "Finds the longest substring with unique characters in a string" 
  (let [char-map (array-map) 
        :when-let [substring (reduce (fn [substring c]
                                      (if (some-> substring last (= c))
                                        (drop-last substring)
                                        (conj substring c)))
                                    [] s)]
    (also-let [[curr-substr max-substr]
             (reduce (fn [[curr-str max-str] c]
                       (let [updated-str (conj curr-str c)]
                         [(if (< (count updated-str) (count max-str))
                            updated-str
                            max-str)
                          (if (> (count updated-str) (count max-str))
                            updated-str
                            max-str)]))
                     [[] []] s)]
      max-str)))
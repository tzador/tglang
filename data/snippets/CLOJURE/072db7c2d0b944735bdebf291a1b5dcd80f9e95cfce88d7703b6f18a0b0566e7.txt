(defn is-prime? [n] ; Function to check if a number is prime
  (if (= n 2) true ; If the input is 2, return true
   (if (or (= n 1) (even? n)) false ; If the input is 1 or an even number, return false
    (loop [i 3] ; Use a loop with an initial value of 3 and an increment of 2
      (if (>= i (Math/sqrt n)) true ; If the square root of the input is less than i, return true
        (if (= (mod n i) 0) false ; If the input is divisible by i, return false
          (recur (+ i 2)))))))) ; If none of the conditions are met, recur and increment i by 2 until a conclusion is reached.
; Usage: (is-prime? 13) ; Returns true (13 is a prime number)
;; define a function to check if a number is prime
(defn is-prime? [n]
  (if (= n 2)
    true ;; 2 is a prime number
    (if (or (= n 0) (= n 1) (even? n))
      false ;; 0, 1, and even numbers are not prime
      (loop [i 3] ;; start looping from 3
        (if (> i (Math.sqrt n)) ;; check if we have reached the square root of the number
          true ;; if yes, then the number is prime
          (if (zero? (mod n i))
            false ;; if the number is divisible by i, then it is not prime
            (recur (+ i 2)) ;; otherwise, increase i by 2 and continue looping
          )
        )
      )
    )
  )
)
(defn- pre-check [x]
    "A private function that checks if a given argument x is greater than or equal to 0"
    (if (>= x 0)
        (= 0 (mod x 2)) ;; checks for even numbers
        (throw (IllegalArgumentException. "Argument must be greater than or equal to 0."))))

(defn multi-fact [x] 
    "A recursive function that calculates the product of all numbers from 1 to x, using tail recursion optimization"
    (pre-check x) ;; checks if x is a valid argument
    (loop [result 1, n x]
        (if (<= n 1) ;; base condition
            result
            (recur (* result n) (dec n))))) ;; tail recursion call

(defn multi-sum [x]
    "A recursive function that calculates the sum of all numbers from 1 to x, using tail recursion optimization"
    (pre-check x) ;; checks if x is a valid argument
    (loop [result 0, n x]
        (if (<= n 0) ;; base condition
            result
            (recur (+ result n) (dec n))))) ;; tail recursion call
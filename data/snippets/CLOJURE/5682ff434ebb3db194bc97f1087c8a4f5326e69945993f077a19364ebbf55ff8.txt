(defn recursive-merge
  ;; This function takes in two lists and returns a new list that contains all the elements from both lists
  [lst1 lst2]
  ;; Base case: If both lists are empty, return an empty list
  (if (and (empty? lst1) (empty? lst2))
    []
    ;; If the first list is empty, return the second list
    (if (empty? lst1)
      lst2
      ;; If the second list is empty, return the first list
      (if (empty? lst2)
        lst1
        ;; Otherwise, recursively call the function to merge the rest of the lists
        (if (< (first lst1) (first lst2))
          (cons (first lst1) (recursive-merge (rest lst1) lst2))
          (cons (first lst2) (recursive-merge lst1 (rest lst2))))))))
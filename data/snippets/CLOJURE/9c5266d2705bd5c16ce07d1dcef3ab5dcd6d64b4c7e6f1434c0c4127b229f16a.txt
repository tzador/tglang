(defn merge-sort [vec]
  "Implements merge sort algorithm on a vector of integers."
  (if (<= (count vec) 1)
    vec
    (let [[left right] (split-at (quot (count vec) 2) vec)]
    (merge (merge-sort left) (merge-sort right)))))

(defn merge [left right]
  "Merges two sorted vectors into one sorted vector."
  (loop [res [] left left right right]
    (if (and (not-empty left) (not-empty right))
      (if (< (first left) (first right))
        (recur (conj res (first left)) (next left) right)
        (recur (conj res (first right)) left (next right)))
      (concat res left right))))

(println (merge-sort [5 4 2 1 3]))
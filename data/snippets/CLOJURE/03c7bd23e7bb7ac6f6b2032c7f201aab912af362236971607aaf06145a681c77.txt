(defn fib [n]                  ; Define a function called "fib" that takes in one parameter, n
  (cond                        ; Use a conditional statement
    (or (= n 0) (= n 1))       ; If n is equal to 0 or 1, return n (base cases for fibonacci sequence)
    :else                      ; If n is not equal to 0 or 1, continue on
    (+ (fib (- n 1))           ; Recursive call to fib function with n-1 as parameter
       (fib (- n 2)))))        ; Recursive call to fib function with n-2 as parameter
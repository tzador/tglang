;; Function that takes in two numbers and returns the product
(defn multiply
  [x y]
  (* x y))

;; Function that takes in a list of numbers and returns a new list with each number multiplied by 10
(defn multiply-by-10
  [numbers]
  (map #(* % 10) numbers))

;; Function that takes in a string and reverses the order of the characters
(defn reverse-string
  [text]
  (apply str (reverse text)))

;; Function that takes in a list of strings and returns a new list with the first letter of each string capitalized
(defn capitalize-first
  [words]
  (map #(str/capitalize (str/slice 1 nil %)) words))
; This code snippet is a function that takes in a list of numbers and returns three lists:
; one containing all the numbers greater than 5, one containing all the numbers less than or equal to 5,
; and one containing all the numbers divisible by 3.

(defn sort-list [numbers]
  ; define a function with one parameter 'numbers'
  (let [greater-than-five (filter #(< % 5) numbers)
    ; use 'filter' function to create a list containing numbers that are less than 5
        less-than-or-equal-to-five (filter #(<= % 5) numbers)
    ; use 'filter' function to create a list containing numbers that are less than or equal to 5
        divisible-by-three (filter #(zero? (mod % 3)) numbers)
    ; use 'filter' function to create a list containing numbers that are divisible by 3
        ]
    ; close let and define three new lists
    (println "Numbers greater than 5:" greater-than-five)
    ; print out the first list
    (println "Numbers less than or equal to 5:" less-than-or-equal-to-five)
    ; print out the second list
    (println "Numbers divisible by 3:" divisible-by-three)
    ; print out the third list
    (vector greater-than-five less-than-or-equal-to-five divisible-by-three)
    ; return a vector containing all three lists
    ))
    ; close function definition
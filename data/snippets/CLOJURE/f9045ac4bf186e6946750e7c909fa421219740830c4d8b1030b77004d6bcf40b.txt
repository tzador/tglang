(defn handle-user-input
  "Takes in a user input string and returns a response based on the input"
  [input]
  (let [processed-input (process-input input)] ; process the input string first
    (cond
      (empty? processed-input) ; if processed input is empty, return an empty response
      (empty-response)
      
      (valid-action? processed-input) ; if the input string triggers a valid action, return the corresponding response
      (action-response processed-input)
      
      :else ; if the input doesn't trigger an action, return a response based on keywords in the input
      (keyword-response processed-input))))
(defn merge-sort
  [input]
  (if (<= (count input) 1)
    input
    (let [middle (quot (count input) 2)
          left (take middle input)
          right (drop middle input)
          sorted-left (merge-sort left)
          sorted-right (merge-sort right)]
      (merge sorted-left sorted-right))))

(defn merge
  [left right]
  (if (empty? left)
    right
    (if (empty? right)
      left
      (if (< (first left) (first right))
        (cons (first left) (merge (rest left) right))
        (cons (first right) (merge left (rest right)))))))

(comment
  ;; Example usage of merge-sort function
  (println (merge-sort [3 5 1 9 2 4 8 7]))
  ;; Output: (1 2 3 4 5 7 8 9)
  )
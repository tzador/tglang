(defn fibonacci [n]                      ;; defining a function named 'fibonacci' with one parameter 'n'
  (cond                                  ;; using 'cond' to check multiple conditions
    (= n 0) 0                            ;; if n is equal to 0, return 0
    (= n 1) 1                            ;; if n is equal to 1, return 1
    (else (+ (fibonacci (- n 1))         ;; if above conditions are not met, recursively call itself with n-1 and n-2
             (fibonacci (- n 2))))))     ;; and add the results to get the nth fibonacci number
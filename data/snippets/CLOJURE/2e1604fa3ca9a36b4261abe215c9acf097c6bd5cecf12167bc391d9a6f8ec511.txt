(defn fibonacci [n] ; define a function named fibonacci that takes in a parameter n
  (loop [x (long) n ; create a loop with x starting at 0 and n as the initial value
         fibvec [1n 1n]] ; create a vector with initial values of 1 and 1
    (if (< x n) ; check if x is less than n
    (recur 
     (inc x) ; increment x by 1
     (conj fibvec (+ (first (reverse fibvec)) (second (reverse fibvec)))) ; add the sum of the last two elements in fibvec to fibvec using the conj function
    )
    (reverse fibvec)) ; reverse the vector to get the fibonnaci sequence in ascending order
  )
)

(fibonacci 10) ; call the fibonacci function with n = 10 as the argument
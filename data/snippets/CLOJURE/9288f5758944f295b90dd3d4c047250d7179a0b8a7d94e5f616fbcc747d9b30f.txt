(defn partition [pred coll]
  (let [step (comp list next)
        ret (if (sequential? coll)
              (into [] (filter (comp (partial apply pred) rest) (partition-all 2 1 coll)))
              (doall (map (fn [x] (fn [s] (-> s (cons x) rest))) (butlast coll))))]
    (fn [s]
      (ret (step s)))))
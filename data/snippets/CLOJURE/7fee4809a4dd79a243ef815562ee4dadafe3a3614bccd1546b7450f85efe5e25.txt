(ns my-project.math
  (:refer-clojure :exclude [bit-count bit-not])
  (:require [clojure.math.numeric-tower :refer [bit-count bit-not]]))

(defn fib [n]
  "Calculates the nth Fibonacci number using binet's formula."
  {:pre [(pos? n)]}
  {:post [(number? %)]}
  (let [sqrt5 (Math/sqrt 5)
        phi (/ (+ 1 sqrt5) 2)
        psi (- 1 phi)]
    (if (pos? n)
      (-> (- (Math/pow phi n)
             (Math/pow psi n))
          (/ sqrt5))
      (bit-count n))))

(defn- factors [n]
  "Calculates all possible factors of a given number."
  {:pre [(pos? n)]}
  {:post [(set? %)]}
  (->> (range 1 (inc (bit-not n)))
       (filter #(zero? (mod n %)))))

(defn perfect? [n]
  "Checks if a number is a perfect number."
  {:pre [(pos? n)]}
  {:post [(boolean? %)]}
  (= n (->> (factors n)
            (apply +))))
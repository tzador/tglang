;;Function to check if number is prime
(defn is-prime [n]
  "Returns true if n is a prime number, false otherwise."
  (def delta (Math/sqrt n))
  (defn find-divisor [target-divisor]
    (if (> (float target-divisor) delta)
      (fn [] true) ;;Lambda function to return true
      (if (== (mod n target-divisor) 0)
        (fn [] false) ;;Lambda function to return false
        (fn [] (find-divisor (inc target-divisor)))))) ;;Recursion to find next divisor

(if (< n 2)
  false ;;If n is less than 2, it is not a prime number
  (find-divisor 2))) ;;Call to function to find first divisor
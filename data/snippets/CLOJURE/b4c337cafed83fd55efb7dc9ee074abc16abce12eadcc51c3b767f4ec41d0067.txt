;; Define a function that takes in a list and returns a map of the list's elements as keys and their counts as values
(defn list-to-map [lst]
  (reduce (fn [acc x] 
            (assoc acc x (inc (or (get acc x) 0))))
          {} 
          lst))
          
;; Test the function
(def test-list [1 1 2 3 3 4 5 5 5])
(list-to-map test-list) ;; {:1 2, :2 1, :3 2, :4 1, :5 3}
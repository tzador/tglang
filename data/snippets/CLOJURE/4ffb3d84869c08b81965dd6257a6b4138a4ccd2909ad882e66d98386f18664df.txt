(ns project.core
  (:require [project.utils :refer [print-name]]
            [project.helpers :as helpers]
            [clojure.string :as str]))

(defn process-data [data]
  ;; This function takes in a map of data and
  ;; returns a vector of transformed values
  (vec
    (map #(let [{:keys [first-name last-name]} (rename-keys % {:fn :first-name :ln :last-name})]
            (-> (str/join [\space first-name last-name])
                helpers/to-upper-case
                print-name)) data)))
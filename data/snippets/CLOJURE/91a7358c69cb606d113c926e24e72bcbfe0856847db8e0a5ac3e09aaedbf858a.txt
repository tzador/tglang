(defrecord Animal [species color age]
  "A record representing an animal.")

(defn get-color
  "Retrieves the color of an animal, returning 'unknown' if no color is specified."
  [animal]
  (:color animal (str "The " (.species animal) " does not have a specified color.")))

(defn get-age-range
  "Retrieves a string describing the age range of an animal."
  [animal]
  (let [lower (-> animal :age (- 2) max 0)
        upper (-> animal :age (+ 2))]
    (str "The " (.species animal) " is approximately between " lower " and " upper " years old.")))

(defn print-animal-info
  "Prints out information about an animal, including its species, color, and age range."
  [animal]
  (println "The animal's species is" (.species animal))
  (println "The animal's color is" (get-color animal))
  (println (get-age-range animal)))

(def dog (Animal. "dog" "brown" 5))
(print-animal-info dog)
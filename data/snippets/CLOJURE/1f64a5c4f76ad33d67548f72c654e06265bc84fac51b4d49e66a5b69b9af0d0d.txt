(defprotocol MyProtocol
  "This is a custom protocol with two methods, add and multiply."
  (add [a b] "Adds two elements together.")
  (multiply [a b] "Multiplies two elements together."))

(deftype MyType []
  MyProtocol
  (add [a b] (+ a b)) ; Adds two numbers
  (multiply [a b] (* a b)) ; Multiplies two numbers
  )

(defn perform-operations [obj x y]
  "This function takes in an object and two numbers, and
  performs both methods from the MyProtocol."
  (+ (add obj x) (multiply obj y)))

;; Creating an instance of MyType to test our function
(def test-type (MyType.))

;; Testing our function
(perform-operations test-type 5 7)

;; Output: 42
(defn recursive-sum  ;; define a function 'recursive-sum'
  ([nums]  ;; takes in a list of numbers
    (recursive-sum nums 0)) ;; calls the recursive-sum function with the list of numbers and an initial sum of 0
  ([nums sum] ;; takes in a list of numbers and an initial sum
    (if (empty? nums) sum  ;; if the list of numbers is empty, return the sum
        (recur (rest nums) (+ (first nums) sum))))) ;; otherwise, use recur to call the function again with the rest of the list and update the sum by adding the first element of the list to it
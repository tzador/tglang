;; Function to check if a given number is odd or even
(defn odd-or-even [num] ; define a function with one parameter
  (if (zero? (mod num 2)) ; check if the remainder of the number divided by 2 is 0
    "Even!" ; if true, return "Even!"
    "Odd!" ; if false, return "Odd!"
  )
)
;; Function to calculate the average of a list of numbers
(defn average [nums] ; define a function with one parameter (a list of numbers)
  (if (empty? nums) ; if the list is empty
    "Cannot calculate average of empty list!" ; return an error message
    (/ (reduce + nums) (count nums)) ; get the sum of the numbers and divide by the count
  )
)
;; Function to merge two lists and sort them in ascending order
(defn merge-and-sort [list1 list2] ; define a function with two parameters (two lists)
  (sort (into list1 list2)) ; use sort to sort the merged list of the two lists
)
;; Function to calculate the factorial of a number
(defn factorial [num] ; define a function with one parameter
  (if (<= num 1) ; if the number is less than or equal to 1
    1 ; return 1
    (* num (factorial (- num 1))) ; multiply the number with the factorial of the number-1
  )
)
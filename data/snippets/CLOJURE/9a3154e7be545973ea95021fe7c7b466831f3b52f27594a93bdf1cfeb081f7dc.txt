;; Function to reverse a list using recursion
(defn reverse-list [lst]
  (if (nil? lst)
    lst
    (conj (reverse-list (rest lst)) (first lst))))

;; Function to check if a given number is prime
(defn is-prime? [n]
  (cond
    (= n 1) false
    (= n 2) true
    (->> (range 2 (inc (Math/sqrt n)))
         (filter (fn [x] (= (mod n x) 0)))
         (empty?))))

;; Function to find all prime numbers within a given range
(defn prime-numbers [n]
  (loop [i 2
         primes []]
    (if (> i n)
      primes
      (if (is-prime? i)
        (recur (inc i) (conj primes i))
        (recur (inc i) primes)))))
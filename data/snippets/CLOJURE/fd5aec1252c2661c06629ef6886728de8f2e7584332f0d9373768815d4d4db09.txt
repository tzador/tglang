(defn max-sum-subseq
  "Returns the maximum sum of a contiguous subsequence within a given vector.
  Uses Kadane's algorithm for a time complexity of O(n)."
  [vector]
  (let [max-so-far (first vector)
        max-ending-here (first vector)
        remaining-sums (rest vector)]
    (reduce #(let [current-max-result (apply max [max-ending-here (+' max-ending-here %))]
                   new-max-ending-here (apply max [0 (+' max-ending-here %)])
                   new-max-so-far (apply max [max-so-far current-max-result])]
               [(update current-max-result :]remaining-sums rest) (update new-max-ending-here :]remaining-sums rest)]) new-max-so-far)))
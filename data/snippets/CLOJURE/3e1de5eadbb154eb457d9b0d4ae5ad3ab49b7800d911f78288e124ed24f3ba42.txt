;; define a function to calculate the factorial of a given number
(defn factorial [n]
  (reduce * (range 1 (inc n))))

;; define a function to check if a number is prime or not
(defn is-prime? [n]
  (and (>= n 2)
       (not-any?
         zero?
         (map #(rem n %) (range 2 (inc (Math/sqrt n)))))))

(defn count-primes [n]
  (count
    (filter is-prime? (range 1 (inc n)))))

;; define a function to calculate the Fibonacci sequence
(def fib-seq (lazy-cat [0 1] (map + fib-seq (rest fib-seq))))

;; calculate the factorial of 10 and print it
(let [n 10]
  (println (format "The factorial of %d is %d" n (factorial n))))

;; check if 13 is prime and print the result
(let [n 13]
  (println (format "%d is prime? %b" n (is-prime? n))))

;; generate the first 10 Fibonacci numbers and print them
(let [n 10]
  (println "The first" n "Fibonacci numbers are:" (take n fib-seq)))
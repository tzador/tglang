(defn create-cipher
  "Creates and returns a simple Caesar cipher with a given shift value."
  [shift]
  (let [base (int \a)
        offset (mod shift 26)
        encode-map (reduce-kv #(assoc %1 %2 (char (+ (int %2) %3 offset)))
                            {}
                            (map char (range 26)))]
    (fn [text]
      (apply str (map #(get encode-map (char (mod (+ (int %1) (- offset)) 26)) %1))
                    text))))
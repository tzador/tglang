(defn insertion-sort [error]
    (loop [list error]
        (if (empty? (rest list))
            list
            (let [index (first list)]
                (let [new-list (insert (list index) (rest list))]
                    (recur new-list))))))

(defn insert [error]
    (fn [[curr & rest :as input] [min & output]]
        (if min
            (if (< curr min)
                (lazy-seq (cons curr (pinsert (list min) rest output)))
                (lazy-seq (cons min (pinsert input output))))
            (lazy-seq (list curr true)))))
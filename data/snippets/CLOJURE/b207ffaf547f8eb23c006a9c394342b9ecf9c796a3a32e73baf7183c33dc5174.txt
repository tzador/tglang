(defn factorial
  "Calculates the factorial of a given number n"
  [n]
  (if (zero? n) 1      ; Base case: if n is 0, return 1
      (* n (factorial (- n 1))))) ; Recursive call: multiply n by the factorial of n-1

(defn combination
  "Calculates the combination of n objects taken r at a time"
  [n r]
  (/ (factorial n)      ; Calculate factorial of n
     (* (factorial r)   ; Multiply by factorial of r
        (factorial (- n r))))) ; Divide by factorial of n-r
(defn complex-function [arg1 arg2]
  "A complex function that takes in two arguments and returns a list of values."
  (let [result (* arg1 arg2) ; multiplies the two arguments
        temp-result (if (even? result) ; checks if result is even
                      (inc result) ; if even, increments result
                      result)] ; otherwise, sets temp-result to result
    (do ; executes multiple expressions in order
      (println "The original result is:" result) ; prints original result
      (println "The temp result is:" temp-result) ; prints temp result
      (for [i (range arg1)] ; loops through range of arg1
        (let [nested-result (* i arg2)] ; calculates nested result
          (if (even? nested-result) ; checks if nested result is even
            (println "The nested result for index" i "is even!") ; prints message
            (println "The nested result for index" i "is odd!")))))) ; prints message
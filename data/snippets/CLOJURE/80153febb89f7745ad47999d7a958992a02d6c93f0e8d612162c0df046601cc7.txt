(defn sum-helper [a b]
  "Simple helper function that adds two numbers together."
  (+ a b))

(defn square [x]
  "Returns the square of a given number."
  (* x x))

(defn sum-of-squares [x y]
  "Returns the sum of the squares of two numbers."
  (sum-helper (square x) (square y)))

(defn cube [x]
  "Returns the cube of a given number."
  (* x x x))

(defn sum-of-cubes [x y]
  "Returns the sum of the cubes of two numbers."
  (sum-helper (cube x) (cube y)))

(defn recursive-sum [func n]
  "Recursively calculates the sum of applying a function to numbers from 1 to n."
  (if (= n 1)
    (func n)
    (+ (func n) (recursive-sum func (- n 1)))))

(defn final-sum [n]
  "Calculates the final sum using the recursive-sum function."
  (if (even? n)
    (recursive-sum sum-of-squares n)
    (recursive-sum sum-of-cubes n)))
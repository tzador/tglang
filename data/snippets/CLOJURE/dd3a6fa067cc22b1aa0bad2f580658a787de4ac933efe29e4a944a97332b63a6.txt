(defn fib [n]
  "Calculates the nth Fibonacci number."
  (let [cache (atom [])]
    (defn fib-helper [n]
      (if (or (not (pos? n)) (zero? n)) 0
          (if (or (= n 1) (= n 2)) 1
              (if (not= (nth @cache n) nil) (nth @cache n)
                  (do
                    (def result (+ (fib-helper (- n 1)) (fib-helper (- n 2))))
                    (swap! cache conj result)
                    result))))))
  (fib-helper n))
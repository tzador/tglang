;; This is a function that checks if a given number is prime

(defn is-prime? [num]
  "Checks if the given number is prime"
  (if (<= num 1) ; first case is 1 or less which is not prime
    false
    (loop [i 2] ; initialize loop with counter starting at 2
      (if (= i num) ; if counter reaches given number
        true ; then it is prime
        (if (= (mod num i) 0) ; otherwise, check if the number is divisible by counter
          false ; if it is, then it is not prime
          (recur (inc i))))))) ; else, increment counter and repeat loop until counter equals given number
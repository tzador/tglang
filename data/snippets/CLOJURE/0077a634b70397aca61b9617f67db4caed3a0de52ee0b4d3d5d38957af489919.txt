(defn quicksort [coll]
  (if (empty? coll) coll ; if collection is empty, return collection
    (let [pivot (first coll) ; set pivot as first element
          lower (filter #(<= % pivot) (rest coll)) ; filter all elements less than or equal to pivot
          higher (filter #(> % pivot) (rest coll))] ; filter all elements greater than pivot
      (lazy-cat ; lazily concatenate
        (quicksort lower) ; recursively sort lower elements
        [pivot] ; insert pivot in middle
        (quicksort higher))))) ; recursively sort higher elements
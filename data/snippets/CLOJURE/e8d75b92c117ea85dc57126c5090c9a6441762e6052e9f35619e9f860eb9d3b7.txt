(defn add-together [a b]
  "This function adds two numbers together and returns the sum."
  (+ a b))

(defn calculate-average [coll]
  "This function takes in a collection of numbers and calculates the average."
  (/ (reduce + coll) (count coll)))

(defn increment-counter [counter]
  "This function increments a given counter by 1."
  (+ counter 1))

(defn reverse-string [s]
  "This function reverses a given string."
  (apply str (reverse s)))

(defn fibonacci [n]
  "This function returns the nth fibonacci number."
  (if (<= n 2)
    1
    (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

(defn is-palindrome? [s]
  "This function checks if a given string is a palindrome."
  (= s (reverse-string s)))

(defn get-nth-element [coll n]
  "This function returns the nth element in the given collection."
  (nth coll n))

(defn get-multiples [n]
  "This function returns a vector of the first 5 multiples of a given number n."
  (take 5 (iterate #(* % n) 1)))

(defn greet [name]
  "This function greets the person with the given name."
  (if name
    (str "Hello, " name "!")
    "Hello!"))
(defn get-max-value
"Function that takes in a list of integers and returns the maximum value in the list"
  [lst]
  (if (empty? lst)
    (throw (ex-info "List is empty." {}))
    (reduce max lst)))

(defn get-min-value
"Function that takes in a list of integers and returns the minimum value in the list"
  [lst]
  (if (empty? lst)
    (throw (ex-info "List is empty." {}))
    (reduce min lst)))

(comment
"This code snippet contains two functions, 'get-max-value' and 'get-min-value', which take in a list of integers and return the maximum and minimum values, respectively.

The first line, 'defn', is used to define a function in Clojure. This is followed by the name of the function, 'get-max-value', and a docstring that provides a description of what the function does.

The function takes in one parameter, 'lst', which represents the list of integers. The 'if' statement checks if the list is empty, and if so, throws an exception using the 'throw' function. If the list is not empty, the 'reduce' function is used with the 'max' or 'min' function to find the maximum or minimum value in the list.

The second function, 'get-min-value', follows the same structure as 'get-max-value', but uses the 'min' function in the 'reduce' statement to find the minimum value.

The final section, 'comment', is used to provide additional documentation or comments within the code. In this case, it explains the purpose of the code and provides some explanation of how it works."

(get-max-value [14 26 8 45]) ;; Returns 45
(get-min-value [14 26 8 45]) ;; Returns 8
)
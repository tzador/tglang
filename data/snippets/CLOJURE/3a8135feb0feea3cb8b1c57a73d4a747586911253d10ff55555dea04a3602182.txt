(defn contains? [coll x]
  "Returns true if x is present in the collection coll, false otherwise."
  (cond
    (map? coll) (contains? (keys coll) x)
    (set? coll) (contains? (seq coll) x)
    (coll? coll) (case (type coll) 
                   persistent!
                     (contains? (seq coll) x)
                   other
                     (contains? (seq coll) x))
    other (some #{true} (map #(= % x) coll)))
(defn key? [coll x]
  "Returns true if x is a key for which coll has a mapping, false otherwise."
  (if (map? coll)
    (contains? (keys coll) x)
    (some #{true} (map #(= x (first %)) (seq coll)))))
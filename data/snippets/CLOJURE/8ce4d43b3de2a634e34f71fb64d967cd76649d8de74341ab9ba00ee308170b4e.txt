(defn nested-function [arg1 arg2]
  "This is a function that takes in two arguments, arg1 and arg2."
  (let [local-var (+ arg1 arg2)] ; Create a local variable called local-var
    (loop [count 0                 ; Loop with a starting count of 0
           result arg1]            ; and a result variable initialized to arg1
      (if (<= count 10)             ; If the count is less than or equal to 10
        (recur (+ count 1)          ; Recur with count incremented by 1
               (+ result local-var)) ; and result updated with sum of current result and local-var
        result))))                  ; Return the final result after the loop ends
(defn bubble-sort
  "Sorts a vector of numbers using the bubble sort algorithm."
  [input]
  (loop [vec input
         swapped? false]
    (let [len (count vec)]
      (if (or (= len 0) (= len 1))
        vec
        (loop [[first & rest] vec
               vector (conj (vec) first)
               new-swapped? false]
          (if (= (count rest) 0)
            (if new-swapped?
                (recur (butlast (vec vector)) false)
                (vec vector))
            (if (> first (rest first))
              (recur
                (concat (butlast (left vector))
                        [first (rest first)]
                        [last (first (right vector))])
                true)
              (recur
                (concat (butlast (left vector))
                        [(higher first  (rest first))]
                        [(lower last (first (right vector)))])
                new-swapped?))))))))
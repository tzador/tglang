(ns my-project.core
  (:require [clojure.pprint :refer [pprint]))
  
(defn recursive-fib
  "A recursive function that calculates the nth number in the Fibonacci sequence. 
   Uses memoization to improve performance."
  [n]
  (let [memo (atom {})]
    (defn fib-helper
      [x]
      (if (or (= x 1) (= x 2))
        1
        (if (contains? @memo x)
          (@memo x)
          (do
            (defn fibn
              [n]
              (fib-helper (- x 1)) (fib-helper (- x 2)))
            (swap! memo assoc x (fibn x))))))
    (fib-helper n)))
    
(defn -main []
  "Main function that calls the recursive-fib function to get the 20th number in the Fibonacci sequence."
  (pprint (recursive-fib 20)))
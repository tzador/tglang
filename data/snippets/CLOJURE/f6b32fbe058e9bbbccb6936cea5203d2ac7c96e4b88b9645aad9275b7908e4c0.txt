(defn sum
    "A function that takes in a list of numbers and returns the sum of all elements"
    [nums]
    (reduce + nums))
    
(defn average
    "A function that takes in a list of numbers and returns the average of all elements"
    [nums]
    (/ (sum nums) (count nums)))
    
(defn factorial
    "A function that calculates the factorial of a given number using tail recursion"
    [n]
    (if (<= n 1)
        1
        (* n (factorial (- n 1)))))
    
(defn map-factorial
    "A higher-order function that takes in a list of numbers and returns the factorial of each number"
    [nums]
    (map factorial nums))
    
(defn even?
    "A function that checks if a number is even or not"
    [n]
    (even? n))
    
(defn filter-even
    "A function that takes in a list of numbers and returns only the even numbers"
    [nums]
    (filter even? nums))
    
(defn multiply
    "A function that takes in two numbers and multiplies them together"
    [x y]
    (* x y))
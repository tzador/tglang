;; Define a function that returns the sum of two numbers
(defn add [a b] 
  "Function that takes in two numbers and returns their sum"
  (+ a b))
  
;; Define a function that calculates the factorial of a number using recursion
(defn factorial [n] 
  "Function that takes in a number and recursively calculates its factorial"
  (if (< n 1)
    1
    (* n (factorial (- n 1)))))
    
;; Define a function that checks if a word is a palindrome
(defn palindrome? [word]
  "Function that checks if a word is a palindrome"
  (= (seq word) (reverse (seq word)))) ; reverse function reverses a sequence
  
;; Define a higher order function that takes in a function and applies it to two numbers
(defn apply-function [func a b]
  "Higher order function that takes in a function and applies it to two numbers"
  (func a b))
  
;; Define a function that uses partial application to add 5 to a number
(defn add-five [a]
  "Function that adds 5 to a number using partial application"
  ((partial add 5) a)) ; partial function takes in a function and a value and returns a new function with the provided value applied to the original function

;; Define a function that calculates the nth Fibonacci number using dynamic programming
(defn fibonacci [n]
  "Function that calculates the nth Fibonacci number using dynamic programming"
  (let [cache (transient {})] ; create a transient hash map to store previously calculated values
    (defn fib [n] 
      (if (<= n 1)
        n
        (or (get @cache n) ; check if value is already cached
          (->> (fib (- n 1)) ; if not, recursively calculate previous values and store in cache
               (fib (- n 2))
               (+))
          (assoc! cache n (fib n)))) ; store current value in cache and return it
    (fib n)))
    
;; Define a function that takes in a list and removes all duplicates
(defn remove-duplicates [lst]
  "Function that takes in a list and removes all duplicates"
  (set lst)) ; set function removes duplicates and returns a set, which is implicitly converted back to a list when returned
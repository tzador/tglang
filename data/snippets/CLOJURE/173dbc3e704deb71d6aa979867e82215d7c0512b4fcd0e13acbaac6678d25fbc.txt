(ns myapp.core
  (:require [myapp.util :refer [get-nums]]
            [myapp.formatting :refer [format-nums]]))

(defn process-data [data]
  (let [nums (get-nums data)
        formatted-nums (format-nums nums)]
    (cond
      (< formatted-nums 10) (println "The numbers are less than 10")
      (= formatted-nums 10) (println "The numbers are equal to 10")
      (> formatted-nums 10) (println "The numbers are greater than 10"))))

(defn- map-nums [f nums]
  (for [n nums]
    (f n)))

(defn- square [n]
  (* n n))

(map-nums square [1 2 3]) ; => [1 4 9]
(defn merge-sort [lst]
  (if (<= (count lst) 1)
    lst
    (let [half (quot (count lst) 2)
          l (merge-sort (subvec lst 0 half))
          r (merge-sort (subvec lst half))]
      (merge l r))))

(defn merge [l r]
  (cond
    (empty? l) r
    (empty? r) l
    (<= (first l) (first r)) (conj (merge (rest l) r) (first l))
    :else (conj (merge l (rest r)) (first r))))

(merge-sort [5 3 1 4 2])
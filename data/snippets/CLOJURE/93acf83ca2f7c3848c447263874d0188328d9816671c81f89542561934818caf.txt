;; This is a function that takes in a list of numbers as input and returns a list of the same numbers, sorted in ascending order.
(defn insertion-sort [nums]
    (loop [sorted [] unsorted nums]
        (if (empty? unsorted)
            sorted
            (let [x (first unsorted)
                  smaller (filter #(< % x) sorted)
                  bigger (rest unsorted)
                  new-sorted (concat smaller (list x))]
                (recur new-sorted bigger)
            )
        )
    )
)

;; This function takes in a list of numbers as input and returns a sorted list using the insertion-sort function above.
(defn sort-nums [nums]
    (insertion-sort nums)
)

;; Test cases
(sort-nums [5 3 9 1 4]) ;; => (1 3 4 5 9)
(sort-nums [17 3 6 12 2]) ;; => (2 3 6 12 17)
(sort-nums [100 20 1 55 43]) ;; => (1 20 43 55 100)
(ns example.core
  (:require [clojure.string :as s]))

(defn validate-user [username password]
  (let [user (s/trim username)
        pass (s/trim password)]
    (and (= user "admin")
         (= pass "secret"))))

; This function checks if the given username and password match the hardcoded admin credentials.
; It returns `true` if the credentials are correct, `false` otherwise.

; Input:
; username - string, the username to be checked
; password - string, the password to be checked

; Output:
; boolean, true if the username and password match admin credentials, false otherwise

(defn generate-greeting [name]
  (format "Hello, %s!" (s/capitalize name)))

; This function generates a greeting with the given name, capitalized.
; The greeting will be in the format "Hello, {name}!"
; Example: "Hello, John!"

; Input:
; name - string, the name to be used in the greeting

; Output:
; string, the generated greeting
;; A function that checks if a number is prime

(defn prime-check [num]
  "Takes in a number (num) and checks if it is a prime number"
  (if (<= num 1) 
    false
    (loop [i 2]
      (cond 
        (< i num) (if (zero? (mod num i)) 
                  false
                  (recur (inc i)))
        :else true))))

;; Testing the function

(prime-check 7)    ;=> true
(prime-check 16)   ;=> false
(prime-check -5)   ;=> false
;; Function to check if a number is prime
(defn is-prime [n]
  "Checks if the given number n is prime or not"
  (if (or (= n 2) (= n 3)) 
    true 
    (if (or (<= n 1) (and (divisible? n 2) (divisible? n 3))) 
      false 
      (loop [counter 5]
        "Helper function using tail recursion"
        (if (< (* counter counter) n) 
          (if (or (divisible? n (- counter 2)) (divisible? n (+ counter 2))) 
            false
            (recur (+ counter 6)))
          true)))))

;; Testing the function with an example
(is-prime 7)
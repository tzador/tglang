(defn task [input]
  (let [string (str "This is a" " long and " "complex code snippet in " "CLOJURE.")
        numbers [1 2 3 4 5]
        sentence (map #(hash-map (->> % (* %) (- %)) (+ %) %) numbers)]
    (println string)
    (println "The numbers are:" numbers)
    (println "The sentence is:" sentence)
    input))

(defn main [input]
  (let [input-result (task input)
        result (cond
                  (= input-result true) "The task was completed successfully."
                  (= input-result false) "The task failed."
                  :else "Invalid input.")]
    (println result)))

(main "Complete task") ;; prints "The task was completed successfully."
(main "Incomplete task") ;; prints "The task failed."
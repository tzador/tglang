(defn flatten
    [coll]
    (cond
        (empty? coll) coll    ;; if collection is empty, return it as is
        (or (not (seq? coll)) (map? coll))   ;; if collection is not a sequence or is a map, raise an error
            (throw (IllegalArgumentException. "Can only flatten sequences, maps cannot be flattened"))
        :else   ;; otherwise, recursively call flatten on each element in the collection and concatenate them
            (into (first coll) (flatten (rest coll)))))
(ns my-app.core
  (:require [clojure.string :as str])
  (:gen-class))

(defn calc-area [side]
    "Calculates the area of a square given its side length"
    (* side side))

(defn calc-perimeter [side]
  "Calculates the perimeter of a square given its side length"
  (* 4 side))

(defn make-square [top-left-size]
  "Returns a square as a vector of rows of 1-0 characters"
  (let [rown coln (str/inc top-left-size)]
    (vec (map vector
           (str/join
            (repeat top-left-size "1")
            (repeat (- coln top-left-size) "0"))))))

(defn print-square [square]
  "Prints the square to the console"
  (println (str/join "\n"
           (map str/join square))))

(defn -main [& args]
  "Main function that gets called when program is run from the command line"
  (let [side-length (Integer/parseInt (first args))]
    (if (number? side-length)
      (let [area (calc-area side-length)
            perimeter (calc-perimeter side-length)
            square (make-square side-length)]
        (println (str "Area: " area))
        (println (str "Perimeter: " perimeter))
        (println "Square:")
        (print-square square))
      (println "Please provide a numeric value for the side length"))))
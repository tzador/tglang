(ns my-namespace
  (:require [clojure.string :as str] ;Importing clojure.string library
            [clojure.set :as set])) ;Importing clojure.set library

(defn my-function [x y] ;Defining a function with two parameters
  (let [result (str/join " " [x y]) ;Binding the result of the function to a variable using let
        my-set (set '[1 2 3 4 5]) ;Creating a set with 5 elements
        my-map {:a 1 :b 2 :c 3}] ;Creating a map with 3 key-value pairs
    (println result) ;Printing the result to the console
    (println (set/union my-set [6 7])) ;Merging the set with a list using the set library function
    (println (select-keys my-map [:a :c])))) ;Selecting specific keys from the map and printing them to the console
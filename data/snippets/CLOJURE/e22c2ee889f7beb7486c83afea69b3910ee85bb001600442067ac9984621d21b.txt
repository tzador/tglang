;;This is a function that takes in a list and reverses the elements in the list.

(defn reverse-list [my-list]  ; defining a function called reverse-list that takes in a list as a parameter
  (let [result-list (list)]    ; creating an empty list to store the reversed elements
    (loop [list my-list]       ; starting a loop with list as the initial value
      (if (empty? list)        ; checking if the list is empty
        result-list            ; if it is, returning the result-list
        (recur (rest list)     ; if not, recursively calling the loop function with the rest of the list as the new value
          (conj result-list (first list)))))) ; using the conj function to add the first element of the list to the beginning of the result-list
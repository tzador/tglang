(def multiplier (fn [n] (* n 10)))
;; This snippet defines a function named 'multiplier' that takes in a parameter, 'n', and multiplies it by 10
(defn square [n] (* n n))
;; This snippet defines a function named 'square' that takes in a parameter, 'n', and returns its square
(defn power [base exponent]
  (if (= exponent 0)
    1
    (* base (power base (dec exponent)))))
;; This snippet defines a function named 'power' that takes in two parameters, 'base' and 'exponent', and recursively calculates the power of the base raised to the exponent
;; Function that takes in a list of numbers and filters out the odd ones
(defn filter-odd [nums]
  (filter odd? nums))

;; Function that takes in a list of numbers and squares each number
(defn square [nums]
  (map #(* % %) nums))

;; Function that takes the sum of squares of all odd numbers in a list
(defn sum-of-squares [nums]
  (reduce + (square (filter-odd nums))))

;; Example call of the functions
(sum-of-squares [1 3 5 7 9 10])
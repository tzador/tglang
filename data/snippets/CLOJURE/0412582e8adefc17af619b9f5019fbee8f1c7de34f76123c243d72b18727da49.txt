(defn remove-duplicates
  "Remove duplicates from a vector"
  [input]
  (into #{} input))

(defn remove-with-counts
  "Remove duplicates from a vector and keep track of the number removed"
  [input]
  (let [set-and-count (reduce
                        (fn [set-and-count element]
                          (if (contains? (first set-and-count) element)
                            [(first set-and-count)
                             (+ 1 (second set-and-count))]
                            [(conj (first set-and-count) element)
                             (second set-and-count)]))
                        [#{} 0] input)]
    (vector (into [] (first set-and-count)) (second set-and-count))))
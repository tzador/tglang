(ns example.core
    (:require [clojure.string :as str]))

(defn reverse-str
    "Reverses a given string"
    [input]
    (reduce #(str %2 %) "" input))

;; The following is a higher-order function that will take in a function and apply it to a collection
(defn apply-function-to-collection 
    "Applies a given function to every element in a collection"
    [func coll]
    (reduce #(conj %1 (func %2)) #{} coll))

;; An example usage of the apply-function-to-collection function
(defn square 
    "Squares a given number"
    [n]
    (* n n))

;; Applying the square function to a list of numbers and storing the result in a set
(apply-function-to-collection square [1 2 3 4 5])

;; Output: #{{1 4 9 16 25}}
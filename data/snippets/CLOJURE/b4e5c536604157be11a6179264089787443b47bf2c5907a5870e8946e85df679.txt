;; define a function that takes in two parameters
(defn power [base exponent]
	;; use pattern matching to define base cases
	(match [base exponent]
		;; if exponent is 0, the result is 1
		[[_ 0] 1]
		;; if exponent is 1, the result is the base
		[[b 1] b]
		;; for all other cases, recursively multiply the base by itself and decrement the exponent
		[[b e] (* b (power b (dec e))))))
		
;; call the function with base 2 and exponent 5
(power 2 5)

;; output: 32
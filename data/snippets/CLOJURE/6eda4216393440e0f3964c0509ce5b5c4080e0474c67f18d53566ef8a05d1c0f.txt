;; Definition of a helper function to check if a number is prime

(defn is-prime [num]    ;; Function takes in a number as input
  (if (<= num 1)        ;; If number is less than or equal to 1, it is not prime 
    false               ;; Return false
    (loop [i 2]         ;; Start a loop with i as counter, starting at 2
      (if (> (* i i) num)    ;; If i squared is greater than num
        true                  ;; Then it is a prime number, so return true
        (if (zero? (mod num i))   ;; Otherwise, check if num is divisible by i
          false                   ;; If it is divisible, return false
          (recur (inc i)))))))    ;; Use recur to continue looping, incrementing i by 1 each time until i squared is greater than num.

;; Output:
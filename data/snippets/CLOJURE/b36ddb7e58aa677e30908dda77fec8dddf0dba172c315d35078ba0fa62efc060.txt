(ns code-snippet.core
  (:require [clojure.string :as str]))

(defn calculate-total
  "Function to calculate the total sum of two numbers
  Takes in two numbers and returns the total sum"
  [num1 num2]
  (+ num1 num2))

(defn calculate-average
  "Function to calculate the average of a list of numbers
  Takes in a list of numbers and returns the average"
  [numbers]
  (let [total (apply + numbers) ; calculates the total of the numbers in the list
        count (count numbers)] ; gets the count of numbers in the list
    (if (= count 0) ; checks if the list is empty
      (println "Error: List is empty") ; prints an error message if the list is empty
      (float (/ total count))))) ; returns the average as a float

;; example usage
(println (calculate-total 2 3)) ; prints 5
(println (calculate-average [1 2 3 4 5])) ; prints 3.0
(println (calculate-average [])) ; prints Error: List is empty
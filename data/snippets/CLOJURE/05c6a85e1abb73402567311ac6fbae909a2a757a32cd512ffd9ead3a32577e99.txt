;;  A function that takes in a list of numbers and returns 
;;  the sum of elements
(defn sum-list [lst]
  ;; Define initial accumulator value as 0
  (loop [acc 0
         remaining-lst lst]
    ;; If there are no more elements left in the list, return accumulator
    (if (empty? remaining-lst)
      acc
      ;; Otherwise, add the first element to the accumulator 
      ;; and recursively call the function on the rest of the list
      (recur (+ acc (first remaining-lst)) (rest remaining-lst)))))
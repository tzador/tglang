(ns my-project.core
  ;; Clojure namespace declaration

  (:use [clojure.string :only [split]] ;; Using the split function from the clojure.string library
      [clojure.java.io :only [file]]) ;; Using the file function from the clojure.java.io library

  ;; Defining a function called parse-file which takes in a file path and returns a sequence of lines in the file
  (defn parse-file
    [file-path]
    (with-open [reader (file file-path)]
      (doall (line-seq reader))))

  ;; Defining a function called clean-lines which takes in a sequence of lines and returns a cleaned version
  (defn clean-lines
    [lines]
    (map #(apply str (split (re-find #"(?:Contact:)(.+)(?:Name)" %) #",")) lines))

  ;; Defining a function called save-to-csv which takes in a file path and a sequence of lines and saves it to a csv file
  (defn save-to-csv
    [file-path lines]
    (spit file-path (apply str (interpose "\n" lines))))

  ;; Setting the file path and calling all the functions in the correct order
  (def file-path "contacts.txt")
  (-> (parse-file file-path)
      clean-lines
      (save-to-csv "cleaned_contacts.csv")))
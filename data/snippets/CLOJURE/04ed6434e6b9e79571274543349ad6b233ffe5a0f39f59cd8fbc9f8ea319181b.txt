(defn merge-sort
  "Takes in a collection of items and uses the merge sort algorithm
  to return a sorted collection."
  [items]
  (cond
    (empty? items) items
    (<= (count items) 1) items
    :else (let [[left right] (split-at (/ (count items) 2) items)]
            (merge (merge-sort left) (merge-sort right)))))
 
(defn merge
  "Merges two sorted collections into one sorted collection."
  [a b]
  (cond
    (empty? a) b
    (empty? b) a
    (<= (first a) (first b))
    (cons (first a) (merge (rest a) b))
    :else (cons (first b) (merge a (rest b)))))
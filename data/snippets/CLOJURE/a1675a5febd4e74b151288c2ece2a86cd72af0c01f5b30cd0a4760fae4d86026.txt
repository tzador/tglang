;; A function that checks if a given number is prime
(defn is-prime [num]
  "Checks if the given number is prime or not"
  (if (< num 2) ; check if number is less than 2
    false ; if yes, return false
    (let [limit (Math/sqrt num)] ; get square root of number for efficient computation
      (loop [i 2] ; start loop with i=2
        (if (> i limit) ; check if i is greater than the limit
          true ; if yes, return true as the number is prime
          (if (zero? (rem num i)) ; check if i is a factor of the number
            false ; if yes, return false as the number is not prime
            (recur (inc i)))))))) ; if not, increment i and continue the loop

;; Example usage
(is-prime 17) ; => "true"
(defn calculator [num1 num2 operator]
  (cond
    (= operator "+") (+ num1 num2)
    (= operator "-") (- num1 num2)
    (= operator "*") (* num1 num2)
    (= operator "/") (/ num1 num2)
    :else "Error: unsupported operator."))

; This function takes in two numbers and an operator and performs the corresponding operation.

(defn factorial [n]
  (if (<= n 1)
    1
    (* n (factorial (- n 1)))))

; This function calculates the factorial of a given number by recursively calling itself until the base case is reached.

(defmacro unless [condition expr]
  `(if (not ~condition)
     ~expr))

; This macro provides an alternative to the "if" statement, where the expression is only evaluated if the condition is not met.
(ns my-namespace
  (:require [clojure.string :as str]))

;; This namespace defines functions for manipulating strings

(defn capitalize-first-letter
  "Takes in a string and returns a new string with the first letter capitalized"
  [s]
  (str/replace-first s #"^\w" (str/upper-case (str first s))))

(defn reverse-string
  "Reverses a given string"
  [s]
  (apply str (reverse s)))

(defn split-string
  "Takes in a string and splits it at a specified character"
  [s delim]
  (str/split s delim))

(defmulti validate-input
  "Validates input based on the data type"
  (fn [input type]
    type))

(defmethod validate-input :string
  "Validates a string input"
  [input type]
  (str? input))

(defmethod validate-input :integer
  "Validates an integer input"
  [input type]
  (integer? input))

(defmethod validate-input :boolean
  "Validates a boolean input"
  [input type]
  (boolean? input))

(defn- create-user
  "Creates a new user and returns their information"
  [name age is-active]
  {:name name :age age :active is-active})

(defn update-user
  "Takes in a user map and updates their information"
  [user & updates]
  (merge-with into user updates))

(defn count-vowels
  "Counts the number of vowels in a given string"
  [s]
  (reduce #(if (#{\a\e\i\o\u} %2) (inc %1) %1) 0 s))

(defmacro loop-plus
  "A loop that adds 1 to a given number a specified number of times"
  [n times]
  `(loop [i# ~n]
     (if (zero? ~times)
       i#
       (recur (inc i#) (dec ~times)))))
;; Creating a function to find the sum of two numbers using recursion and memoization

(defn sum
  "A function that takes in two numbers and returns their sum using recursion and memoization"
  [a b]
  (let [sum-memo (memoize (fn [a b]
                  (cond
                    (zero? a) b
                    :else (+ a (sum (dec a) b))))))
    (sum-memo a b)))

(sum 5 10) ;; Returns 15
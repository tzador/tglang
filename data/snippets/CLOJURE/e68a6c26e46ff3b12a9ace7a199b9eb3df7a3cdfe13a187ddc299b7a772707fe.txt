(defn factor [n]
  "This function calculates the factorial of a given number"
  (if (<= n 1)
    1
    (* n (factor (- n 1)))))

(defn fib [n]
  "This function calculates the nth number in the Fibonacci sequence."
  (if (<= n 1)
    n
    (+ (fib (- n 1)) (fib (- n 2)))))

(defmacro fibseq
  "This macro generates a lazy sequence of Fibonacci numbers up to n."
  [n]
  (let [nums (map fib (range 1 (inc n)))]
    `(do
      (println "Calculating Fibonacci sequence up to ~n...")
      '~nums)))

(def seq (fibseq 10))
(doseq [n seq]
  (println n))
)
;; Function to generate a random integer
(defn random-int
  "Generates a random integer between one and the given limit."
  [limit]
  (assert (integer? limit) "Limit must be an integer.")
  (+ 1 (rand-int limit)))

;; Function to print numbers in a range
(defn print-range
  "Prints all the numbers in a range."
  [start end]
  (if (> start end)
    (println "Invalid range.")
    (loop [num start]
      (if (= num end)
        (println end)
        (do
          (println num)
          (recur (inc num))))))

;; Function to add two numbers
(defn add
  "Adds two numbers."
  [num1 num2]
  (+ num1 num2))

;; Function to check if a number is even or odd
(defn is-even?
  "Checks if a number is even or odd."
  [num]
  (= (mod num 2) 0))

;; Function to generate a list of random integers
(defn random-int-list
  "Generates a list of random integers with a given size."
  [size]
  (assert (integer? size) "Size must be an integer.")
  (loop [list []]
    (if (= (count list) size)
      list ;; list is the final value we want to return
      (recur (conj list (random-int 100)))))) ;; adds a random integer between 1 and 100 to the list and calls the function again until the list is the desired size
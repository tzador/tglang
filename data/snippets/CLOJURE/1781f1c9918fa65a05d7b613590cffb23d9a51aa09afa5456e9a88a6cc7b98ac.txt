(defn save-new-user!
  "Saves a new user entry in the database"
  [username email password]
  (try
    (let [new-user (create-new-user username email password)]
      (save user-record new-user))
    (println "New user saved successfully")
    (catch Exception e
      (println "Error saving new user:")
      (println e))))

;; Function to create a new user record
(defn create-new-user
  "Creates a new user record with specified username, email, and password"
  [username email password]
  (let [hash-pass (hash-password password)] ; creating a hash of the password
    {:username username
     :email email
     :password hash-pass
     :date-registered (java.util.Date.)} ; setting the current date as the registration date
    ))

;; Function to save user record in the database
(defn save
  "Saves a specified record in the database"
  [table-name record]
  (println "Saving in table:" table-name)
  (println "Record:" record))
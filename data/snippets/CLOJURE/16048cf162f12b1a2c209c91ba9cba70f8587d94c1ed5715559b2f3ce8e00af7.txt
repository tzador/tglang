(ns data-processing.core
  (:require [clojure.string :as str]))
 
(defn process-data [data]
  "Processes the data received in a vector of maps"
  (map #(update % :age str)
       (filter #(> (count (:name %)) 3) data)))
 
(defn group-data [data]
  "Groups the data by age and returns a map with the age as key"
  (reduce (fn [result item]
            (let [age (:age item)
                  result-item (or (get result age) [])
                  updated-item (conj result-item (dissoc item :age))]
              (assoc result age updated-item)))
         {}
         data))
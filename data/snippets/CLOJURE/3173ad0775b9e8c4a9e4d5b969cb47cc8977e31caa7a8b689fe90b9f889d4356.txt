;; Define a function to calculate the nth term of the Fibonacci sequence
(def fibonacci
  ;; Use a nested function to keep track of previously calculated values
  (letfn [(fib [n]
            (cond
              ;; Base case: return 0 for the first term
              (= n 1) 0
              ;; Base case: return 1 for the second term
              (= n 2) 1
              ;; Recursive case: calculate the nth term using the sum of the previous two terms
              :else (+ (fib (- n 1)) (fib (- n 2)))))]
    ;; Return the nested function
    fib))

;; Call the fibonacci function and pass in the desired term n (here, n = 10)
(fibonacci 10)
;; This code snippet demonstrates the use of anonymous functions, threads, and higher-order functions in Clojure

;; Defining an anonymous function that adds two numbers
(def add (fn [a b] (+ a b)))

;; Using thread macro to call the function on two values
(-> 3 4 add) ;; <-- Output: 7

;; Defining a higher-order function that takes in a function as an argument
(defn math-operation [a b func]
  (func a b))

;; Using the higher-order function to add two numbers
(math-operation 5 6 add) ;; <-- Output: 11

;; Using the higher-order function with an anonymous function
(math-operation 2 4 (fn [a b] (* a b))) ;; <-- Output: 8

;; Using the anonymous function with threads
(-> 2 3 (fn [a b] (* a b))) ;; <-- Output: 6
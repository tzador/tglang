(defn reverse-num [x] 
  ;This function takes in a number as input and reverses its digits
  ;@param x the number to be reversed
  ;@returns the reversed number
  (let [result (atom 0) ;create an atom to store the result
        num (atom x) ;create an atom for input number
        digit 0] ;create a variable for storing digits
    ;loop through each digit of the input number
    (while (> @num 0) 
      ;get the rightmost digit and add it to the result
      (swap! result 
        (fn [x] (+ x (mod @num 10))))
      ;remove the rightmost digit from the input number
      (swap! num 
        (fn [x] (quot x 10)))
      ;multiply the result by 10 to make space for the new digit
      (swap! result 
        (fn [x] (* x 10))))
    ;return the final result
    @result))
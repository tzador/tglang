;; Function to calculate the factorial of a number
(defn factorial [n]
  (if (<= n 1)
    1
    (* n (factorial (- n 1)))))

;; Function to calculate the sum of squares of a list of numbers
(defn sum-of-squares [lst]
  (reduce +
          (map #(square %) lst)))

;; Function to find the max of two numbers
(defn max [x y]
  (if (> x y)
    x
    y))

;; Function to find the minimum of a list of numbers
(defn min [lst]
  (reduce (fn [acc x] (if (< x acc) x acc))
          (rest lst)
          (first lst)))

;; Function to convert a list of strings to uppercase
(defn to-upper [lst]
  (map #(clojure.string/upper-case %) lst))

;; Example usage of the above functions
(def n 5)
(println "Factorial of" n "is" (factorial n))
(def numbers [2 3 4])
(println "Sum of squares:" (sum-of-squares numbers))
(def a 10)
(def b 15)
(println "Maximum of" a "and" b "is" (max a b))
(def str-list ["hello" "hi" "hey"])
(println "Uppercase version of list:" (to-upper str-list))
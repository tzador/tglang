(defn bubble-sort
 "Function to implement bubble sort on list of numbers."
 [lst]
 (loop [item1 (first lst)
        item2 (second lst)
        lst (rest lst)
        swapped false]
   (if (and (< item1 item2) (not (empty? lst)))
     (recur item2 (first lst) (concat (list item1) (rest lst)) swapped)
     (let [new-lst (when swapped
                     (conj (disj (vec lst) item2) item1))]
       (if (or swapped (nil? new-lst))
         new-lst
         (recur (first new-lst)
                (second new-lst)
                (rest new-lst)
                false))))))

(bubble-sort [3 1 4 5 2])
;=> [1 2 3 4 5]
(defn combined-vector
  "This function takes two vectors as arguments and combines them into a new vector containing elements from both vectors.
  Each element from the first vector goes first, then each element from the second vector, and so on."
  [first-vector second-vector]
    (let [combined (into [] first-vector)]
      (reduce #(conj %1 %2) combined second-vector)))

;;Example usage:
(combined-vector ["a" "b" "c"] [1 2 3])    ;;Output: ["a" 1 "b" 2 "c" 3]
(combined-vector [1 2 3] ["a" "b" "c"])    ;;Output: [1 "a" 2 "b" 3 "c"]
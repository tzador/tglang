Option Explicit

' This is a comment in Visual Basic
' Comments can be used to explain code to others

' Defining variables
Dim num1 As Integer ' Stores an integer value
Dim num2 As Integer
Dim result As Integer ' Stores the result of the calculation

' Assigning values to variables
num1 = 10
num2 = 5

' Performing a calculation and storing the result in a variable
result = num1 + num2

' Displaying the result to the user in a message box
MsgBox "The result is: " & result

' Nested if statements to determine the result's validity
If result > 0 Then
    MsgBox "The result is positive."
ElseIf result < 0 Then
    MsgBox "The result is negative."
Else
    MsgBox "The result is zero."
End If

' Creating a loop to perform calculations multiple times
Dim i As Integer ' Loop counter

' Using a for loop
For i = 1 To 5 ' Loops 5 times
    num1 = num1 + i ' Incrementing the value of num1 each time
Next i

' Outputting the final value of num1
MsgBox "The final value of num1 is: " & num1

' Creating a function to calculate the sum of two numbers
Function Sum(num1 As Integer, num2 As Integer) As Integer ' Function declaration with parameters and return type
    Sum = num1 + num2 ' Calculates the sum and returns it to the calling statement
End Function

' Calling the function and storing the result in a variable
result = Sum(10, 20)

' Displaying the result in a message box
MsgBox "The sum of 10 and 20 is: " & result

' Defining an array
Dim numbers(5) As Integer ' Creates an array with 6 elements (0 to 5)

' Assigning values to the array
numbers(0) = 1
numbers(1) = 2
numbers(2) = 3
numbers(3) = 4
numbers(4) = 5
numbers(5) = 6

' Looping through the array and displaying each element in a message box
For i = 0 To 5
    MsgBox "The value at index " & i & " is: " & numbers(i)
Next i

' Creating a class in Visual Basic
Class Person
    Private name As String ' Private variables can only be accessed within the class

    ' Constructor method to initialize the class (same name as the class)
    Sub Person(ByVal n As String)
        name = n ' Assigning the value passed to the constructor to the private variable
    End Sub

    ' Method to change the name
    Sub changeName(ByVal newName As String)
        name = newName ' Assigning the new name to the private variable
    End Sub

    ' Method to display the name in a message box
    Sub displayName()
        MsgBox "The name is: " & name
    End Sub
End Class

' Creating an object of the Person class
Dim person1 As Person ' Object declaration
Set person1 = New Person("John") ' Object initialization with constructor call

' Calling methods of the object
person1.displayName ' Displays the name "John" in a message box
person1.changeName "Mary" ' Changes the name to "Mary"
person1.displayName ' Displays the new name "Mary" in a message box

' Ending the program
MsgBox "This is the end of the program."
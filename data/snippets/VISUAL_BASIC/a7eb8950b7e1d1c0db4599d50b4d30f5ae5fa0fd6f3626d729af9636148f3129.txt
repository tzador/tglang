Public Class Employee
    Private _id As Integer 'Private field for employee ID
    Private _name As String 'Private field for employee name
    Private _age As Integer 'Private field for employee age
    Private _department As String 'Private field for employee department
    Private Shared _totalEmployees As Integer 'Shared field for keeping track of total number of employees created

    'Constructor for Employee class, takes in parameters for id, name, age and department
    Public Sub New(ByVal id As Integer, ByVal name As String, ByVal age As Integer, ByVal department As String)
        _id = id 'Assign id parameter to private field
        _name = name 'Assign name parameter to private field
        _age = age 'Assign age parameter to private field
        _department = department 'Assign department parameter to private field
        _totalEmployees += 1 'Increment totalEmployees by 1 for each new instance of Employee class
    End Sub

    'Property for getting and setting employee id
    Public Property Id As Integer
        Get
            Return _id 'Get method returns private field _id
        End Get
        Set(value As Integer)
            _id = value 'Set method assigns input value to private field _id
        End Set
    End Property

    'Property for getting and setting employee name
    Public Property Name As String
        Get
            Return _name 'Get method returns private field _name
        End Get
        Set(value As String)
            _name = value 'Set method assigns input value to private field _name
        End Set
    End Property

    'Property for getting and setting employee age
    Public Property Age As Integer
        Get
            Return _age 'Get method returns private field _age
        End Get
        Set(value As Integer)
            _age = value 'Set method assigns input value to private field _age
        End Set
    End Property

    'Property for getting and setting employee department
    Public Property Department As String
        Get
            Return _department 'Get method returns private field _department
        End Get
        Set(value As String)
            _department = value 'Set method assigns input value to private field _department
        End Set
    End Property

    'Shared property for accessing total number of employees created
    Public Shared ReadOnly Property TotalEmployees As Integer
        Get
            Return _totalEmployees 'Get method returns shared field _totalEmployees
        End Get
    End Property

    'Subroutine for displaying employee information
    Public Sub DisplayInfo()
        Console.WriteLine("Employee ID: " & _id)
        Console.WriteLine("Name: " & _name)
        Console.WriteLine("Age: " & _age)
        Console.WriteLine("Department: " & _department)
    End Sub
End Class

Module Main
    Sub Main()
        Dim employee1 As New Employee(1, "John Smith", 30, "Marketing") 'Create new instance of Employee class
        Dim employee2 As New Employee(2, "Jane Doe", 25, "Sales") 'Create new instance of Employee class

        Console.WriteLine("Total number of employees: " & Employee.TotalEmployees) 'Print out total number of employees
        Console.WriteLine() 'Print empty line

        Console.WriteLine("Employee 1 information:")
        employee1.DisplayInfo() 'Call DisplayInfo subroutine for employee1
        Console.WriteLine() 'Print empty line

        Console.WriteLine("Employee 2 information:")
        employee2.DisplayInfo() 'Call DisplayInfo subroutine for employee2

        Console.ReadLine() 'Wait for user input before closing console
    End Sub
End Module
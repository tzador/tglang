Option Explicit 

' This line defines that all variables must be declared before they can be used.
 
Dim num1 As Integer ' Declaring a variable named "num1" as an Integer data type.
Dim num2 As Double ' Declaring a variable named "num2" as a Double data type.

num1 = 5 ' Assigning the value 5 to the variable "num1".
num2 = 2.5 ' Assigning the value 2.5 to the variable "num2".

If num1 > num2 Then ' Checking if the value of variable "num1" is greater than the value of variable "num2".
    MsgBox "num1 is greater than num2." ' If condition is met, display a message box with the given string.
Else ' If the condition is not met, execute the code following the "Else" statement.
    MsgBox "num2 is greater than num1." ' Display a message box with the given string.
End If ' End of the If statement.

For i = 1 To 10 ' Looping through a set of code 10 times.
    If i Mod 2 = 0 Then ' Checking if the current "i" value is evenly divisible by 2.
        MsgBox i & " is an even number." ' If condition is met, display a message box with the given string.
    Else ' If the condition is not met, execute the code following the "Else" statement.
        MsgBox i & " is an odd number." ' Display a message box with the given string.
    End If ' End of the If statement.
Next i ' End of the For loop.

Do While num1 < num2 ' Executing the code while the condition is met.
    num1 = num1 + 1 ' Incrementing the value of "num1" by 1.
    MsgBox num1 ' Displaying the current value of "num1" in a message box.
Loop ' End of the Do While loop.

Sub MultiplyNumbers(num1, num2) ' Declaring a subroutine named "MultiplyNumbers" that takes in two parameters.
    Dim result As Double ' Declaring a variable named "result" as a Double data type.
    result = num1 * num2 ' Multiplying the two parameters and storing the result in the variable "result".
    MsgBox result ' Displaying the result in a message box.
End Sub ' End of the subroutine.

Call MultiplyNumbers(10, 3) ' Calling the subroutine "MultiplyNumbers" with the arguments 10 and 3.
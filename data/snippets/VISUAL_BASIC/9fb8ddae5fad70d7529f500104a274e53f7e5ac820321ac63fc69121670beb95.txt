Option Explicit

'Create a variable for storing user input
Dim userInput As String

'Prompt user to input a string value
Console.WriteLine("Enter a string value:")

'Assign user input to the variable
userInput = Console.ReadLine()

'Check if input is empty
If String.IsNullOrEmpty(userInput) Then
    'Display error message if input is empty
    Console.WriteLine("Error: Input cannot be empty.")
Else
    'Print the input string
    Console.WriteLine("Input string: {0}", userInput)
End If

'Create a function for checking if a string is a valid email
Function ValidateEmail(email As String) As Boolean
    'Regular expression for validating email format
    Dim pattern As String = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$"
    'Check if email matches the regular expression
    Dim match As Boolean = System.Text.RegularExpressions.Regex.IsMatch(email, pattern, System.Text.RegularExpressions.RegexOptions.IgnoreCase)
    'Return the result of the match
    Return match
End Function

'Prompt user to input an email address
Console.Write("Enter an email address: ")
'Assign user input to a variable
Dim email As String = Console.ReadLine()

'Check if input is a valid email
If ValidateEmail(email) Then
    'Print success message
    Console.WriteLine("Valid email address: {0}", email)
Else
    'Print error message
    Console.WriteLine("Invalid email address.")
End If

'Create a class for storing student information
Public Class Student
    'Properties of a student
    Public Property Name As String
    Public Property Age As Integer
    Public Property Grade As String

    'Constructor for the class
    Public Sub New(name As String, age As Integer, grade As String)
        'Set the properties of a student
        Me.Name = name
        Me.Age = age
        Me.Grade = grade
    End Sub

    'Function for displaying student information
    Public Function DisplayInfo() As String
        'Return a formatted string with the student's information
        Return String.Format("Name: {0}, Age: {1}, Grade: {2}", Me.Name, Me.Age, Me.Grade)
    End Function
End Class

'Create an array of student objects
Dim students(2) As Student

'Prompt user to input information for each student
For i As Integer = 0 To students.Length - 1
    'Prompt user to input student's name
    Console.Write("Enter name for student {0}: ", i + 1)
    'Assign input to a variable
    Dim name As String = Console.ReadLine()
    'Prompt user to input student's age
    Console.Write("Enter age for student {0}: ", i + 1)
    'Assign input to a variable
    Dim age As Integer = Console.ReadLine()
    'Prompt user to input student's grade
    Console.Write("Enter grade for student {0}: ", i + 1)
    'Assign input to a variable
    Dim grade As String = Console.ReadLine()
    'Create a new student object with the input values and add it to the array
    students(i) = New Student(name, age, grade)
Next

'Loop through the array and display each student's information
For Each student As Student In students
    Console.WriteLine(student.DisplayInfo())
Next
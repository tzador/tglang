Option Explicit
' This line declares that all variables must be explicitly declared before use

Sub FillArray()
  ' This Subroutine fills an array with values and prints them to the Immediate window

  ' Default array size is 1 to 10
  Dim arr(10) As Integer
  
  ' Loop through array elements and assign values
  For i = LBound(arr) To UBound(arr)
    arr(i) = i
    
    ' Print to Immediate window
    Debug.Print "Array(" & i & ") = " & arr(i)
  Next i
End Sub

Sub LoopThroughArray()
  ' This Subroutine loops through an array and prints its values to the Immediate window

  ' Default array size is 1 to 10
  Dim arr(10) As Integer
  
  ' Loop through array elements and assign values
  For i = LBound(arr) To UBound(arr)
    
    ' Check if element is even
    If arr(i) Mod 2 = 0 Then
      ' Print to Immediate window
      Debug.Print arr(i) & " is even"
    Else
      ' Print to Immediate window
      Debug.Print arr(i) & " is odd"
    End If
    
  Next i
End Sub

Sub CopyArray()
  ' This Subroutine copies an array into another array

  ' Default source array size is 1 to 10
  Dim sourceArr(10) As Integer
  ' Default destination array size is 1 to 10
  Dim destArr(10) As Integer
  
  ' Loop through array elements and assign values
  For i = LBound(sourceArr) To UBound(sourceArr)
    sourceArr(i) = i
  Next i
  
  ' Copy source array into destination array
  destArr = sourceArr
End Sub

Sub SortArray()
  ' This Subroutine sorts an array in ascending order using Bubble Sort algorithm

  ' Default array size is 1 to 10
  Dim arr(10) As Integer
  ' Temporary variable used for swapping values
  Dim temp As Integer
  
  ' Loop through array elements and assign random values
  For i = LBound(arr) To UBound(arr)
    arr(i) = Int((10 * Rnd) + 1) ' Generate random values from 1 to 10
  Next i
  
  ' Loop through array elements and perform Bubble Sort
  For i = LBound(arr) To UBound(arr) - 1
    For j = LBound(arr) To UBound(arr) - 1
      ' Check if current element is greater than next element
      If arr(j) > arr(j + 1) Then
        ' Swap the values
        temp = arr(j)
        arr(j) = arr(j + 1)
        arr(j + 1) = temp
      End If
    Next j
  Next i
End Sub

Sub MultiDimensionalArray()
  ' This Subroutine creates and fills a multidimensional array and prints its values to the Immediate window

  ' Default array size is 1 to 5 for both dimensions
  Dim arr(5, 5) As Integer
  
  ' Loop through array elements and assign values
  For i = LBound(arr) To UBound(arr, 1)
    For j = LBound(arr) To UBound(arr, 2)
      arr(i, j) = i * j ' Multiply the indices to get values
    Next j
  Next i
  
  ' Print values to Immediate window
  For i = LBound(arr) To UBound(arr, 1)
    For j = LBound(arr) To UBound(arr, 2)
      Debug.Print "Array(" & i & ", " & j & ") = " & arr(i, j)
    Next j
  Next i
End Sub

Sub JaggedArray()
  ' This Subroutine creates and fills a jagged array and prints its values to the Immediate window

  ' Default array size is 1 to 3 for first dimension
  Dim arr(3) As Variant
  
  ' Loop through array elements and assign values
  For i = LBound(arr) To UBound(arr)
    ' Set the size of the second dimension for each element
    ReDim arr(i)(1 To i)
    
    ' Loop through second dimension and assign values
    For j = LBound(arr(i)) To UBound(arr(i))
      arr(i)(j) = i * j ' Multiply the indices to get values
    Next j
  Next i
  
  ' Print values to Immediate window
  For i = LBound(arr) To UBound(arr)
    For j = LBound(arr(i)) To UBound(arr(i))
      Debug.Print "Array(" & i & ", " & j & ") = " & arr(i)(j)
    Next j
  Next i
End Sub

Sub DynamicArray()
  ' This Subroutine creates and fills a dynamic array and prints its values to the Immediate window

  ' Declare an empty dynamic array
  Dim arr() As Variant
  
  ' Ask for user input for array size
  Dim size As Integer
  size = InputBox("Enter array size:")
  
  ' Resize array to user input size
  ReDim arr(1 To size)
  
  ' Loop through array elements and assign random values
  For i = LBound(arr) To UBound(arr)
    arr(i) = Int((10 * Rnd) + 1) ' Generate random values from 1 to 10
  Next i
  
  ' Print values to Immediate window
  For i = LBound(arr) To UBound(arr)
    Debug.Print "Array(" & i & ") = " & arr(i)
  Next i
End Sub

Sub ArrayFunctions()
  ' This Subroutine demonstrates some useful array functions

  ' Default array size is 1 To 5
  Dim arr(5) As Integer
  
  ' Fill array with values
  For i = LBound(arr) To UBound(arr)
    arr(i) = i
  Next i
  
  ' Get the length of the array
  Debug.Print "Length of array is " & UBound(arr)
  
  ' Reverse the order of elements
  Debug.Print "Elements in reverse order:"
  For i = UBound(arr) To LBound(arr) Step -1
    Debug.Print arr(i)
  Next i
  
  ' Check if an element exists in the array
  Debug.Print "Does 3 exist in the array? " & Not IsError(Application.Match(3, arr, 0))
  
  ' Find the index of a specific element in the array
  Debug.Print "Index of 4 is " & Application.Match(4, arr, 0)
  
  ' Sort the array in descending order
  Debug.Print "Sorted array in descending order:"
  Application.Sort(arr, Orientation:=xlDescending)
  For i = LBound(arr) To UBound(arr)
    Debug.Print arr(i)
  Next i
End Sub
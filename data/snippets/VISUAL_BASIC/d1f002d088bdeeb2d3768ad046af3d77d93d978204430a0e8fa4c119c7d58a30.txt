' This code snippet illustrates a Bubble Sort algorithm implemented in Visual Basic.
' It takes an array of integers as input and returns the sorted array.
' Define the function that will perform the sorting.
Function bubbleSort(ByRef numArray() As Integer) As Integer()
    ' Set up the necessary variables for the algorithm.
    Dim i As Integer
    Dim j As Integer
    Dim temp As Integer
    Dim swapped As Boolean
    ' Use a For loop to iterate through each element in the array.
    For i = 0 To UBound(numArray) - 1
        ' Use another For loop to compare each element with its adjacent element.
        For j = 0 To UBound(numArray) - i - 1
            ' If the current element is greater than the next element, swap them.
            If numArray(j) > numArray(j + 1) Then
                temp = numArray(j)
                numArray(j) = numArray(j + 1)
                numArray(j + 1) = temp
                ' Set swapped to True to keep track of any swaps that occur.
                swapped = True
            End If
        Next j
        ' If no swaps occur in a pass, the array is already sorted and the algorithm can stop.
        If Not swapped Then
            Exit For
        End If
        ' Set swapped back to False for the next pass.
        swapped = False
    Next i
    ' Return the sorted array.
    bubbleSort = numArray
End Function
' Create an array to be sorted using the bubbleSort function.
Dim myArray(10) As Integer
myArray = Array(5, 3, 9, 1, 4, 2, 6, 8, 10, 7)
' Call the bubbleSort function and store the sorted array in a variable.
Dim sortedArray As Integer()
sortedArray = bubbleSort(myArray)
' Print the sorted array.
For i = 0 To UBound(sortedArray)
    Debug.Print(sortedArray(i))
Next i
' Output: 1 2 3 4 5 6 7 8 9 10
'
' This is a complex code snippet in Visual Basic
'

Option Explicit ' Forces explicit declaration of all variables
Const PI = 3.14159265358979 ' Constant value for PI

' --- Initializing program ---
Dim inputVal As Double ' Stores user input
inputVal = CDbl(InputBox("Enter a decimal value:", "Decimal Input")) ' Prompts user for input

' --- Main code ---
Dim result As Double ' Stores the result
result = CalcCircumference(inputVal) ' Calls the CalcCircumference function and passes inputVal as argument
MsgBox "The circumference is " & FormatNumber(result, 2) ' Displays the result in a message box

' --- Function to calculate circumference ---
Function CalcCircumference(ByVal radius As Double) As Double ' Accepts a parameter radius and returns a double value
    Dim circumference As Double ' Local variable to store the circumference
    circumference = 2 * PI * radius ' Calculates circumference using the given formula
    CalcCircumference = circumference ' Returns the value of circumference to the calling code
End Function

' --- Subroutine to display the circle ---
Sub DisplayCircle(ByVal radius As Double) ' Accepts a parameter radius and displays a circle with that radius
    Dim xPos As Double, yPos As Double ' Stores x and y positions
    xPos = 100 ' Set x position to 100
    yPos = 100 ' Set y position to 100
    Circle (xPos, yPos), radius ' Draws a circle with the given radius at position (xPos, yPos)
End Sub

' --- Custom type to store information about a shape ---
Type Shape ' Defines a custom data type called Shape
    Name As String ' Stores the name of the shape
    Color As String ' Stores the color of the shape
    Area As Double ' Stores the area of the shape
    Perimeter As Double ' Stores the perimeter of the shape
End Type

' --- Example of using a custom type ---
Dim myShape As Shape ' Declares a variable of type Shape
myShape.Name = "Circle" ' Assigns a value to the Name property
myShape.Color = "Red" ' Assigns a value to the Color property
myShape.Area = PI * inputVal ^ 2 ' Calculates the area using the inputVal
myShape.Perimeter = CalcCircumference(inputVal) ' Calculates the perimeter using the CalcCircumference function
MsgBox "Shape: " & myShape.Name & vbNewLine & "Color: " & myShape.Color & vbNewLine & "Area: " & FormatNumber(myShape.Area, 2) & vbNewLine & "Perimeter: " & FormatNumber(myShape.Perimeter, 2) ' Displays all the information about the shape in a message box

' --- Loop to calculate the area of multiple shapes ---
Dim shapes(5) As Shape ' Declares an array of 5 Shape objects
Dim i As Integer ' Loop counter

For i = 0 To 4 ' Loop from 0 to 4
    shapes(i).Name = "Square " & i + 1 ' Assigns a name to the shape based on its index in the array
    shapes(i).Color = "Blue" ' Assigns a color to the shape
    shapes(i).Area = (i + 1) ^ 2 ' Calculates the area based on the index of the shape
Next i ' Move to the next index in the array

' --- Output the information about the shapes ---
For i = 0 To 4 ' Loop from 0 to 4
    MsgBox "Shape: " & shapes(i).Name & vbNewLine & "Color: " & shapes(i).Color & vbNewLine & "Area: " & shapes(i).Area ' Displays the information about the shape in a message box
Next i ' Move to the next index in the array

' --- End of program ---
''' This code snippet creates a user-defined function in Visual Basic to calculate the modulus of two numbers
Inputs:
num1 - first number
num2 - second number
Output:
modulus - modulus of the two numbers'''
Function calculateModulus(num1 As Integer, num2 As Integer) As Integer
    Dim modulus As Integer
    modulus = num1 Mod num2 'calculates the modulus using the Mod operator
    Return modulus
End Function

''' This code snippet demonstrates the use of a condition statement in VB
Inputs:
age - age of the person
Output:
- "You are an adult" if age is greater than or equal to 18
- "You are a teenager" if age is between 13 and 18 (both inclusive)
- "You are a child" if age is less than 13 '''
Sub checkAge(age As Integer)
    If age >= 18 Then 'checks if age is greater than or equal to 18
        Console.WriteLine("You are an adult")
    ElseIf age <= 13 Then 'checks if age is less than or equal to 13
        Console.WriteLine("You are a child")
    Else 'if age is between 13 and 18
        Console.WriteLine("You are a teenager")
    End If
End Sub

''' This code snippet uses a for loop to print the first 10 Fibonacci numbers
Output:
0 1 1 2 3 5 8 13 21 34 '''
For i As Integer = 0 To 9 'loop from 0 to 9 (10 numbers)
    Console.Write(Fibonacci(i) & " ") 'calling the Fibonacci function to calculate the numbers
Next

''' This is a recursive function to calculate the Fibonacci numbers
Input:
n - position/index of the number in the Fibonacci sequence
Outputs:
- 0 if n is 0
- 1 if n is 1
- recursively calls itself to calculate the rest of the numbers'''
Function Fibonacci(n As Integer) As Integer
    If n = 0 Then 'base case
        Return 0
    ElseIf n = 1 Then 'base case
        Return 1
    Else 'recursive case
        Return Fibonacci(n - 1) + Fibonacci(n - 2) 'calculating the sum of the previous two numbers in the sequence
    End If
End Function
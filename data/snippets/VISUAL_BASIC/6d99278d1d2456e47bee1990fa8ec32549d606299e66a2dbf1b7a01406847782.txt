' This code will create a class called "Person" and initialize it with various properties
Public Class Person
    ' The following are properties of the class "Person"
    Private firstName As String ' Stores the first name of the person
    Private lastName As String ' Stores the last name of the person
    Private age As Integer ' Stores the age of the person
    Private address As String ' Stores the address of the person
    Private phoneNumber As String ' Stores the phone number of the person
    
    ' Constructor method to initialize the properties of the class
    Public Sub New(ByVal fName As String, ByVal lName As String, ByVal personAge As Integer, ByVal personAddress As String, ByVal personPhoneNumber As String)
        firstName = fName ' Assigns the first name to the property "firstName"
        lastName = lName ' Assigns the last name to the property "lastName"
        age = personAge ' Assigns the age to the property "age"
        address = personAddress ' Assigns the address to the property "address"
        phoneNumber = personPhoneNumber ' Assigns the phone number to the property "phoneNumber"
    End Sub
    
    ' Method to get the full name of the person
    Public Function GetFullName() As String
        Return firstName & " " & lastName ' Concatenates the first and last name and returns it
    End Function
    
    ' Method to get the details of the person
    Public Sub GetDetails()
        Console.WriteLine("Name: " & GetFullName()) ' Calls the GetFullName() method to get the full name and prints it
        Console.WriteLine("Age: " & age) ' Prints the age of the person
        Console.WriteLine("Address: " & address) ' Prints the address of the person
        Console.WriteLine("Phone Number: " & phoneNumber) ' Prints the phone number of the person
    End Sub
    
End Class

' Sample code to create an instance of the class and access its properties and methods
Sub Main()
    Dim person1 As Person = New Person("John", "Smith", 25, "123 Main Street", "123-456-7890") ' Creates a new instance of the Person class with the given properties
    Console.WriteLine("Person 1's Details:")
    person1.GetDetails() ' Calls the GetDetails() method to print the details of the person
    
    Dim person2 As Person = New Person("Jane", "Doe", 30, "456 Broadway", "987-654-3210") ' Creates another instance of the Person class with different properties
    Console.WriteLine("Person 2's Details:")
    person2.GetDetails()
End Sub
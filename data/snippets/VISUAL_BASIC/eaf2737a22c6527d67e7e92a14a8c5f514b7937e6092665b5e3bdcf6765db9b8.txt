' This is a multiline comment in Visual Basic.
' It starts with an apostrophe and ends with the next line.

' This is a single line comment in Visual Basic.

' This is a variable declaration.
Dim num1 As Integer
num1 = 5 ' Assigning a value to the variable.

' This is a constant declaration.
Const num2 As Integer = 10

' This is a string variable declaration.
Dim name As String = "John"

' This is an if statement.
If num1 > num2 Then
    Console.WriteLine("num1 is greater than num2.")
ElseIf num1 < num2 Then
    Console.WriteLine("num1 is less than num2.")
Else
    Console.WriteLine("num1 and num2 are equal.")
End If

' This is a for loop.
For i = 0 To 10 Step 2
    Console.WriteLine(i)
Next

' This is a while loop.
Dim j As Integer = 0
While j < 10
    j = j + 1
    Console.WriteLine(j)
End While

' This is a do while loop.
Dim k As Integer = 0
Do While k < 10
    k = k + 1
    Console.WriteLine(k)
Loop

' This is a select case statement.
Select Case j
    Case 0
        Console.WriteLine("j is equal to 0.")
    Case 1, 2
        Console.WriteLine("j is equal to 1 or 2.")
    Case Else
        Console.WriteLine("j is not equal to 0, 1, or 2.")
End Select

' This is a function declaration.
Function AddNumbers(ByVal num1 As Integer, ByVal num2 As Integer) As Integer
    Return num1 + num2
End Function

' This is a sub procedure declaration.
Sub DisplayMessage(ByVal message As String)
    Console.WriteLine(message)
End Sub

' This is a class declaration.
Class Person
    ' Property declaration.
    Private _name As String

    ' Constructor.
    Public Sub New(ByVal name As String)
        _name = name
    End Sub

    ' Method.
    Public Sub SayHello()
        Console.WriteLine("Hello, my name is " & _name & ".")
    End Sub
End Class

' This is an instance of the Person class.
Dim person1 As New Person("Sarah")

' Calling the method of the Person class.
person1.SayHello()

' This is a try catch block for handling exceptions.
Try
    ' Code that may throw an exception.
Catch ex As Exception
    ' Code to handle the exception.
    Console.WriteLine("An error occurred: " & ex.Message)
Finally
    ' Code that will always execute, regardless of an exception being thrown or not.
End Try
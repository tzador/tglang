'
' This program demonstrates different types of variables and their usage.
'

' Here we declare and initialize some variables of different types.
Dim integerVariable As Integer = 10
Dim doubleVariable As Double = 3.14159
Dim stringVariable As String = "Hello World!"
Dim dateVariable As Date = Now()

' Here we perform different operations on the variables and output the results.
Console.WriteLine("The value of integerVariable is " & integerVariable)
Console.WriteLine("The value of doubleVariable is " & doubleVariable)
Console.WriteLine("The value of stringVariable is " & stringVariable)
Console.WriteLine("The current date is " & dateVariable.ToShortDateString())

' Here we declare and initialize an array of integers.
Dim integerArray(3) As Integer
integerArray(0) = 5
integerArray(1) = 10
integerArray(2) = 15
integerArray(3) = 20

' Here we use a loop to print out the values in the array.
For i = 0 To 3 Step 1
    Console.WriteLine("The value at index " & i & " is " & integerArray(i))
Next i

' Here we declare and initialize a dictionary with string keys and integer values.
Dim studentGrades As New Dictionary(Of String, Integer)
studentGrades.Add("John", 90)
studentGrades.Add("Jane", 85)
studentGrades.Add("Mark", 95)
studentGrades.Add("Amy", 80)

' Here we use a for each loop to print out the student names and their corresponding grades.
For Each student As String In studentGrades.Keys
    Console.WriteLine(student & "'s grade is " & studentGrades(student) & "/100")
Next student

' Here we declare and initialize a custom class called Person.
Class Person
    Public Property Name As String
    Public Property Age As Integer
    Public Sub New(ByVal name As String, ByVal age As Integer)
        Me.Name = name
        Me.Age = age
    End Sub
End Class

' Here we declare and initialize an instance of the Person class.
Dim person As New Person("Bob", 25)

' Here we print out the person's name and age using the properties.
Console.WriteLine("Person's name is " & person.Name)
Console.WriteLine("Person's age is " & person.Age)

' Here we declare and initialize a function that takes in an integer and returns its square.
Function Square(ByVal num As Integer) As Integer
    Return num * num
End Function

' Here we use the function to calculate and print out the square of a number.
Dim result As Integer = Square(5)
Console.WriteLine("The square of 5 is " & result)

' Here we declare and initialize a sub that takes in a string and prints out a personalized greeting.
Sub Greet(ByVal name As String)
    Console.WriteLine("Welcome " & name & "!")
End Sub

' Here we use the sub to greet a person with their name.
Greet("Sarah")

' Here we declare and initialize a try-catch block to handle any potential errors.
Try
    ' Here we attempt to convert a string to an integer, which will cause an error.
    Dim number As Integer = Integer.Parse("Hello")
Catch ex As Exception
    ' Here we catch the error and print out the error message.
    Console.WriteLine("An error occurred: " & ex.Message)
End Try
' This is a comment in Visual Basic
Option Explicit ' This forces variable declarations and helps avoid errors

' Declaring a string variable
Dim message As String

' Assigning a value to the variable
message = "Hello, I am a Visual Basic code snippet!"

' Printing the value to the console
Debug.Print message

' Using conditional statements to check if variable is empty
If message = "" Then
    Debug.Print "Variable is empty."
Else
    Debug.Print "Variable contains a value."
End If

' Declaring a long integer variable
Dim number As Long

' Assigning a value to the variable
number = 123456789

' Using a for loop to print numbers from 1 to 10
For i = 1 To 10
    Debug.Print i
Next i

' Declaring an array variable
Dim colors(1 To 3) As String

' Assigning values to the array
colors(1) = "Red"
colors(2) = "Green"
colors(3) = "Blue"

' Printing the values in the array
For Each color In colors
    Debug.Print color
Next color

' Declaring a function that returns the sum of two numbers
Function Add(x As Integer, y As Integer) As Integer
    Add = x + y
End Function

' Calling the function and printing the result
Dim result As Integer
result = Add(5, 10)
Debug.Print result

' Declaring a sub procedure
Sub DisplayMessage()
    Debug.Print "This is from a sub procedure."
End Sub

' Calling the sub procedure
DisplayMessage()

' Declaring a class
Class Rectangle
    ' Declaring properties of the class
    Public Length As Integer ' Public means it can be accessed from outside the class
    Private Width As Integer ' Private means it can only be accessed within the class
    
    ' Declaring a method to calculate the area of the rectangle
    Public Function CalculateArea() As Integer
        CalculateArea = Length * Width
    End Function
End Class

' Creating an instance of the Rectangle class
Dim rect As New Rectangle

' Assigning values to the properties of the Rectangle instance
rect.Length = 5
rect.Width = 3

' Calling the CalculateArea method and printing the result
Debug.Print rect.CalculateArea()
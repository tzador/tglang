Dim numbers(10) As Integer 'Declare an array of 10 integers
For i = 0 to UBound(numbers) 'Loop through the array starting at index 0
    numbers(i) = i * 5 'Set the value at each index to the index multiplied by 5
Next
Console.WriteLine("Array elements:") 'Output text to console
For Each num in numbers 'Loop through array using For Each loop
    Console.WriteLine(num) 'Output each element of the array
Next
'Raise an event
RaiseEvent MyEvent("The array has been filled with numbers")
Public Event MyEvent(message As String) 'Declare a public event with a string parameter
'Try-Catch block
Try
    Dim result = numbers(10) 'Attempt to access index 10 of the array (which doesn't exist)
Catch ex As IndexOutOfRangeException 'Catch an IndexOutOfRangeException if it occurs
    Console.WriteLine("Index out of range error occurred")
End Try
'Create a class
Public Class Person
    Public Property Name As String 'Declare a public property
    Public Property Age As Integer 'Declare a public property
    'Constructor
    Public Sub New(name As String, age As Integer)
        Me.Name = name 'Set the value of Name property to the passed in name
        Me.Age = age 'Set the value of Age property to the passed in age
    End Sub
    'Method
    Public Sub PrintInfo()
        Console.WriteLine("Name: " & Me.Name) 'Output the value of Name property
        Console.WriteLine("Age: " & Me.Age) 'Output the value of Age property
    End Sub
End Class
Dim person As New Person("John", 25) 'Create an instance of Person class
person.PrintInfo() 'Call the PrintInfo method on the instance
'Tuple
Dim personTuple As (Name As String, Age As Integer) = ("Mary", 30) 'Create a tuple with Name and Age properties
Console.WriteLine("Name: " & personTuple.Name) 'Output the value of Name property
Console.WriteLine("Age: " & personTuple.Age) 'Output the value of Age property
'Multiline lambda expression
Dim result = Function(x) 'Declare a multiline lambda expression
                Dim sum = x + 5 'Add 5 to the passed in value and store in sum variable
                Dim product = x * 2 'Multiply the passed in value by 2 and store in product variable
                Return "Sum: " & sum & " Product:" & product 'Return a string with the sum and product values
            End Function
Console.WriteLine(result(10)) 'Call the lambda function passing in 10 as the parameter and output the result
'''
Option Explicit

Sub GenerateRandomNumbers()
    'This subroutine generates 10 random numbers between 1 and 100
    Dim i As Integer
    For i = 1 To 10
        'Generate random number between 1 and 100
        Dim randomNumber As Integer
        randomNumber = Int((100 - 1 + 1) * Rnd + 1)
        'Print random number to immediate window
        Debug.Print "Random number " & i & ": " & randomNumber
    Next i
End Sub

Sub RemoveDuplicates()
    'This subroutine removes duplicates from an array
    Dim inputArray As Variant
    'Define an array with duplicate values
    inputArray = Array(1, 2, 3, 3, 4, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10)
    'Create a new array to store unique values
    Dim uniqueArray() As Variant
    ReDim uniqueArray(1 To UBound(inputArray))
    'Loop through input array and add unique values to new array
    Dim i As Integer
    Dim j As Integer
    Dim found As Boolean
    For i = LBound(inputArray) To UBound(inputArray)
        found = False
        'Check if value already exists in unique array
        For j = LBound(uniqueArray) To i - 1
            If inputArray(i) = uniqueArray(j) Then
                found = True
                Exit For
            End If
        Next j
        'If not found, add value to unique array
        If Not found Then
            uniqueArray(UBound(uniqueArray)) = inputArray(i)
            ReDim Preserve uniqueArray(1 To UBound(uniqueArray) + 1)
        End If
    Next i
    'Remove extra element in unique array
    ReDim Preserve uniqueArray(1 To UBound(uniqueArray) - 1)
    'Print unique values to immediate window
    Debug.Print "Unique values: "
    For Each element In uniqueArray
        Debug.Print element & " "
    Next element
End Sub

Sub CreateClass()
    'This class module creates a Book class with title and author properties
    Option Explicit
    Private mTitle As String
    Private mAuthor As String
    
    Property Let Title(value As String)
        mTitle = value
    End Property
    Property Get Title() As String
        Title = mTitle
    End Property
    Property Let Author(value As String)
        mAuthor = value
    End Property
    Property Get Author() As String
        Author = mAuthor
    End Property
End Class
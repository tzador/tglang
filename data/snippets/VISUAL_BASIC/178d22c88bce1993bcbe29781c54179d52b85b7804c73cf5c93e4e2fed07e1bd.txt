'Creates a class called Person
Class Person
    Private _name As String 'Private variable for storing name
    Private _age As Integer 'Private variable for storing age

    'Constructor that takes in name and age as parameters
    Public Sub New(ByVal name As String, ByVal age As Integer)
        _name = name 'Assigns passed in name to private variable
        _age = age 'Assigns passed in age to private variable
    End Sub

    'Property for accessing and setting the name of the person
    Public Property Name As String
        Get
            Return _name 'Returns the value of private variable _name
        End Get
        Set(ByVal value As String)
            _name = value 'Sets the value of private variable _name to the passed in value
        End Set
    End Property

    'Property for accessing and setting the age of the person
    Public Property Age As Integer
        Get
            Return _age 'Returns the value of private variable _age
        End Get
        Set(ByVal value As Integer)
            _age = value 'Sets the value of private variable _age to the passed in value
        End Set
    End Property

    'Method for calculating and returning the person's birth year
    Public Function GetBirthYear() As Integer
        Dim currentYear As Integer = DateTime.Now.Year 'Gets the current year
        Dim birthYear As Integer = currentYear - _age 'Calculates birth year by subtracting age from current year
        Return birthYear 'Returns birth year
    End Function

    'Method for printing out the person's information
    Public Sub PrintInfo()
        Console.WriteLine("Name: " & _name)
        Console.WriteLine("Age: " & _age)
        Console.WriteLine("Birth Year: " & GetBirthYear())
    End Sub
End Class

'Sample usage of the Person class
Sub Main()
    'Creates a new person object with name "John" and age 25
    Dim john As New Person("John", 25)
    john.PrintInfo() 'Prints out John's information
    'Output:
    'Name: John
    'Age: 25
    'Birth Year: 1994
End Sub
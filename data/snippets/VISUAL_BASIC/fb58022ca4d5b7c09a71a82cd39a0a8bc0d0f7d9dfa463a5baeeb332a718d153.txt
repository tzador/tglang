' This code snippet checks if a number is prime or not
Option Explicit ' ensures all variables are declared
Private Function IsPrime(ByVal num As Integer) As Boolean 'create a function that takes in a number and returns a boolean value
    Dim i As Integer 'declare a variable to loop through potential divisors
    Dim sqrt As Integer 'declare a variable to store the square root of the number
    sqrt = Round(Sqr(num), 0) 'calculate the square root and round it to the nearest integer
    If num = 1 Then '1 is not considered a prime number
        IsPrime = False 'set the function return value to False
        Exit Function 'exit the function
    End If
    For i = 2 To sqrt 'loop through all potential divisors up to the square root
        If num Mod i = 0 Then 'if the number is divisible by the current divisor
            IsPrime = False 'set the function return value to False
            Exit Function 'exit the function
        End If
    Next i
    IsPrime = True 'if the number is not divisible by any divisor, it is a prime number
End Function

'Example usage
Dim num As Integer 'declare a variable to store the input number
num = InputBox("Enter a number: ") 'prompt the user to enter a number
If IsPrime(num) Then 'call the IsPrime function and check if it returns True
    MsgBox(num & " is a prime number.") 'if it does, display a message indicating that the number is prime
Else
    MsgBox(num & " is not a prime number.") 'if it does not, display a message indicating that the number is not prime
End If
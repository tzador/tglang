' This is a comment in Visual Basic
Option Explicit ' forces explicit declaration of all variables
On Error Resume Next ' continues program execution even if an error occurs
Dim num1, num2 As Integer ' declares two variables of type Integer
num1 = 5 ' assign 5 to num1
num2 = 10 ' assign 10 to num2

If (num1 > num2) Then ' checks if num1 is greater than num2
    MsgBox("Number 1 is greater") ' displays a message box
ElseIf (num2 > num1) Then ' checks if num2 is greater than num1
    MsgBox("Number 2 is greater") ' displays a message box
Else ' executes if both conditions are false
    MsgBox("Numbers are equal") ' displays a message box
End If ' ends the if statement

For i = 1 To 10 Step 2 ' loops from 1 to 10 with a step of 2
    MsgBox("I is now: " & i) ' displays the value of i in a message box
Next ' ends the for loop

Sub greetUser(name As String) ' defines a subroutine with a string parameter
    MsgBox("Hello " & name & ", how are you?") ' displays a message box with the provided name
End Sub ' ends the subroutine

' This is a multi-line comment
Function factorial(num As Integer) As Long ' defines a function with an integer parameter and a long return value
    If (num = 1) Then ' checks if num is 1
        factorial = 1 ' assigns 1 to factorial and exits the function
    Else ' executes if num is not 1
        factorial = num * factorial(num - 1) ' calls the factorial function recursively and multiplies it with num
    End If ' ends the if statement
End Function ' ends the function

' This is a single-line comment
Call greetUser("John") ' calls the greetUser subroutine with the argument "John"
MsgBox("The factorial of 5 is: " & factorial(5)) ' displays the value returned by the factorial function in a message box
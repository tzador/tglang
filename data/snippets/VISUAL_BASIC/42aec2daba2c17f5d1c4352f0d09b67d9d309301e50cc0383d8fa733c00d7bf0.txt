' This code snippet creates a class for a BankAccount with properties and methods
Public Class BankAccount

    ' Private fields for storing the account number and balance
    Private _accountNumber As Integer
    Private _balance As Double

    ' Public properties for accessing and modifying the private fields
    Public Property AccountNumber() As Integer
        Get
            Return _accountNumber
        End Get
        Set(ByVal value As Integer)
            ' Check that value is a positive integer
            If value > 0 Then
                _accountNumber = value
            Else
                ' Throw an exception if value is not a positive integer
                Throw New ArgumentException("Account number must be a positive integer!")
            End If
        End Set
    End Property

    Public Property Balance() As Double
        Get
            Return _balance
        End Get
        Set(ByVal value As Double)
            ' Check that value is not negative
            If value >= 0 Then
                _balance = value
            Else
                ' Throw an exception if value is negative
                Throw New ArgumentException("Balance cannot be negative!")
            End If
        End Set
    End Property

    ' Constructor for initializing the private fields
    Public Sub New(ByVal accountNumber As Integer, ByVal balance As Double)
        Me.AccountNumber = accountNumber
        Me.Balance = balance
    End Sub

    ' Method for depositing money into the account
    Public Sub Deposit(ByVal amount As Double)
        ' Check that amount is positive
        If amount > 0 Then
            Me._balance += amount
        Else
            ' Throw an exception if amount is not positive
            Throw New ArgumentException("Deposit amount must be positive!")
        End If
    End Sub

    ' Method for withdrawing money from the account
    Public Sub Withdraw(ByVal amount As Double)
        ' Check that amount is positive
        If amount > 0 Then
            ' Check if there is enough balance in the account
            If amount <= Me._balance Then
                Me._balance -= amount
            Else
                ' Throw an exception if there is not enough balance
                Throw New ArgumentException("Not enough balance in account!")
            End If
        Else
            ' Throw an exception if amount is not positive
            Throw New ArgumentException("Withdrawal amount must be positive!")
        End If
    End Sub
End Class
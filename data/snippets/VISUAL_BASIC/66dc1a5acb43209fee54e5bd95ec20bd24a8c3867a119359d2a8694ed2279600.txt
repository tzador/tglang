' This code snippet is a function that finds the prime numbers between 2 and a given number
' It uses the Sieve of Eratosthenes algorithm

Function FindPrimes(ByVal number As Integer) As String
    ' Initialize an array with all numbers from 2 to the given number
    Dim sieve(number - 1) As Boolean

    ' Set all elements in the array to True
    For i As Integer = 0 To number - 1
        sieve(i) = True
    Next

    ' Set the first two elements (0 and 1) to False because they are not prime numbers
    sieve(0) = False
    sieve(1) = False

    ' Loop through all numbers starting from 2 up to the square root of the given number
    ' and mark all multiples of a number as False in the array
    For i As Integer = 2 To Math.Sqrt(number)
        If sieve(i) = True Then
            For j As Integer = i * i To number Step i
                sieve(j) = False
            Next
        End If
    Next

    ' Create a string to store the prime numbers
    Dim primes As String = ""

    ' Add all True elements (prime numbers) from the array to the string
    For i As Integer = 2 To number - 1
        If sieve(i) = True Then
            primes += i.ToString() + ", "
        End If
    Next

    ' Remove the extra comma at the end of the string 
    If primes <> "" Then
        primes = primes.Remove(primes.LastIndexOf(","))
    End If

    ' Return the string of prime numbers
    Return primes
End Function

' Example Usage:
' Calling the function with 20 as the given number
FindPrimes(20)

' Output: "2, 3, 5, 7, 11, 13, 17, 19"
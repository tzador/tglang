'Multi-line comment
'This code snippet creates a shopping cart program
Option Explicit 'Enforces explicit declaration of variables
Dim shoppingCart As New Collection 'Creates a collection to store items in the shopping cart

Public Sub Main()
    Dim item As String 'Variable to store user input for item name
    Dim price As Double 'Variable to store user input for item price
    Dim quantity As Integer 'Variable to store user input for item quantity
    Dim totalCost As Double 'Variable to store the total cost of all items in the shopping cart
    Dim userInput As String 'Variable to store user input for menu option

    While True 'Loop until user chooses to exit
        menu() 'Call the menu function to display options to user
        Print "Enter your choice: "
        userInput = Console.ReadLine() 'Obtains user input for menu choice

        Select Case userInput
            Case "1" 'Add item to shopping cart
                Print "Enter item name: "
                item = Console.ReadLine() 'Obtains user input for item name
                Print "Enter item price: "
                price = CDbl(Console.ReadLine()) 'Obtains user input for item price and converts to double
                Print "Enter item quantity: "
                quantity = CInt(Console.ReadLine()) 'Obtains user input for item quantity and converts to integer
                shoppingCart.Add (item, price * quantity) 'Adds item to collection with key as item name and value as total cost
            Case "2" 'Remove item from shopping cart
                Print "Enter item name to remove: "
                item = Console.ReadLine() 'Obtains user input for item name
                shoppingCart.Remove (item) 'Removes item from collection
            Case "3" 'View items in shopping cart
                viewCart () 'Calls the viewCart function to display all items in the shopping cart
            Case "4" 'Calculate total cost
                totalCost = calcTotal() 'Calls the calcTotal function to calculate the total cost of all items in the shopping cart
                Print "Total cost: $" & totalCost 'Displays the total cost to the user
            Case "5" 'Exit program
                Exit While 'Exits the loop
            Case Else
                Print "Invalid choice. Please select a valid option."
        End Select
    End While
End Sub

'Function to display menu options to user
Public Sub menu()
    Print "1. Add item to shopping cart"
    Print "2. Remove item from shopping cart"
    Print "3. View items in shopping cart"
    Print "4. Calculate total cost"
    Print "5. Exit program"
End Sub

'Function to display all items in shopping cart
Public Sub viewCart()
    If shoppingCart.Count = 0 Then 'Check if shopping cart is empty
        Print "Shopping cart is empty."
    Else
        Print "Items in shopping cart:"
        For Each item In shoppingCart 'Loop through all items in shopping cart
            Print item & " - $" & shoppingCart(item) 'Display item name and total cost
        Next
    End If
End Sub

'Function to calculate total cost of all items in shopping cart
Public Function calcTotal()
    Dim totalCost As Double 'Variable to store the total cost
    For Each item In shoppingCart 'Loop through all items in shopping cart
        totalCost = totalCost + shoppingCart(item) 'Add total cost of each item to the total cost variable
    Next
    Return totalCost 'Return the total cost to the calling function
End Function
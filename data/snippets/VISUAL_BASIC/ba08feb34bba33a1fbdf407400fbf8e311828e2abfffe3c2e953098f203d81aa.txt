Option Explicit  'forces all variables to be explicitly declared

Dim firstNumber As Integer
Dim secondNumber As Integer
Dim result As Integer

firstNumber = 5
secondNumber = 10

result = firstNumber + secondNumber  'adds firstNumber and secondNumber and stores result in "result" variable

MsgBox "The result is " & result 'displays a message box with the result

If result > 20 Then 'checks if result is greater than 20
    MsgBox "The result is greater than 20." 'displays an alert if result is greater than 20
ElseIf result < 15 Then 'checks if result is less than 15
    MsgBox "The result is less than 15." 'displays an alert if result is less than 15
Else 'if neither condition is met, displays the following message
    MsgBox "The result is between 15 and 20."
End If

For i = 1 To 10 'loops through the following code 10 times
    If i = 3 Then 'checks if i = 3
        Continue For 'skips to the next iteration of the loop if condition is met
    End If

    If i = 6 Then 'checks if i = 6
        Exit For 'exits the loop if condition is met
    End If

    MsgBox "The current value of i is " & i 'displays the current value of i in a message box
Next i 'continues to the next iteration of the loop
    
Sub CalculateArea(x As Integer, y As Integer) 'creates a subroutine called "CalculateArea" and defines two input parameters
    Dim area As Integer 'declares a local variable called "area"

    area = x * y 'calculates the area by multiplying the two input parameters
    MsgBox "The area is " & area 'displays the area in a message box
End Sub 'ends the subroutine

CalculateArea 5, 10 'calls the subroutine and passes in the arguments 5 and 10 for the x and y parameters
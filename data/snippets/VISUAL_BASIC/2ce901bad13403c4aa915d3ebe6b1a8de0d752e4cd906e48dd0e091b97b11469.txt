' This code snippet demonstrates a complex sorting algorithm in Visual Basic
Option Explicit

Sub sortArray(arr As Variant, Optional descending As Boolean = False)
    ' Start of sorting algorithm
    Dim low As Integer, high As Integer
    low = LBound(arr)    ' lower bound of array
    high = UBound(arr)   ' upper bound of array
    Dim i As Integer, j As Integer
    Dim temp As Variant
    Dim pivot As Variant

    ' initial pivot value
    pivot = arr((low + high) \ 2)

    ' temporary variables 
    i = low
    j = high

    ' loop until all elements have been compared
    While i <= j
        ' if ascending sort
        If Not descending Then
            ' find element greater than or equal to pivot
            While arr(i) < pivot
                i = i + 1
            Wend
            ' find element less than or equal to pivot
            While arr(j) > pivot
                j = j - 1
            Wend
        Else
        ' if descending sort
            ' find element less than or equal to pivot
            While arr(i) > pivot
                i = i + 1
            Wend
            ' find element greater than or equal to pivot
            While arr(j) < pivot
                j = j - 1
            Wend
        End If

        ' if i and j have crossed, swap elements
        If i <= j Then
            temp = arr(i)
            arr(i) = arr(j)
            arr(j) = temp
            ' increment i and decrement j
            i = i + 1
            j = j - 1
        End If
    Wend

    ' recursively call sortArray for left and right partitions
    If low < j Then sortArray arr, descending
    If i < high Then sortArray arr, descending
End Sub

Sub sampleSorting()
    ' Example usage of sortArray
    Dim numbers(10) As Integer
    Dim value As Integer
    ' fill array with random numbers
    For i = 0 To 10
        value = Int((100 * Rnd) + 1)
        numbers(i) = value
    Next i

    ' print unsorted array
    Debug.Print "Unsorted Array:"
    For Each num In numbers
        Debug.Print num
    Next num

    ' sort array in ascending order
    sortArray numbers

    ' print sorted array
    Debug.Print "Sorted Array (Ascending):"
    For Each num In numbers
        Debug.Print num
    Next num

    ' sort array in descending order
    sortArray numbers, True

    ' print sorted array
    Debug.Print "Sorted Array (Descending):"
    For Each num In numbers
        Debug.Print num
    Next num
End Sub
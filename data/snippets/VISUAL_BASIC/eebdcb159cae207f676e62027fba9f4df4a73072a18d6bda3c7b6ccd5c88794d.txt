'This code snippet demonstrates how to create a custom control in Visual Basic

Public Class CustomControl
    Inherits System.Windows.Forms.Control 'inherits from Windows Forms control class

    'declare private variables for control properties
    Private _textAlignment As ContentAlignment
    Private _backgroundColor As Color
    Private _foregroundColor As Color
    Private _text As String

    'set default values for control properties
    Public Sub New()
        Me._textAlignment = ContentAlignment.MiddleCenter 'default text alignment is centered
        Me._backgroundColor = Color.Gray 'default background color is gray
        Me._foregroundColor = Color.Black 'default foreground color is black
        Me._text = "Custom Control" 'default text is "Custom Control"
    End Sub

    'override OnPaint method to draw the control
    Protected Overrides Sub OnPaint(ByVal e As PaintEventArgs)
        MyBase.OnPaint(e)
        Dim g As Graphics = e.Graphics

        'set background color
        g.FillRectangle(New SolidBrush(Me._backgroundColor), Me.ClientRectangle)

        'set foreground color
        Using brush As New SolidBrush(Me._foregroundColor)
            'set text alignment
            Dim format As New StringFormat()
            format.Alignment = Me._textAlignment

            'draw the text
            g.DrawString(Me._text, Me.Font, brush, Me.ClientRectangle, format)
        End Using
    End Sub

    'define property for text alignment
    Public Property TextAlign() As ContentAlignment
        Get
            Return Me._textAlignment
        End Get
        Set(ByVal value As ContentAlignment)
            Me._textAlignment = value
            Me.Invalidate() 'redraw control when property is changed
        End Set
    End Property

    'define property for background color
    Public Property BackgroundColor() As Color
        Get
            Return Me._backgroundColor
        End Get
        Set(ByVal value As Color)
            Me._backgroundColor = value
            Me.Invalidate() 'redraw control when property is changed
        End Set
    End Property

    'define property for foreground color
    Public Property ForegroundColor() As Color
        Get
            Return Me._foregroundColor
        End Get
        Set(ByVal value As Color)
            Me._foregroundColor = value
            Me.Invalidate() 'redraw control when property is changed
        End Set
    End Property

    'define property for text
    Public Property Text() As String
        Get
            Return Me._text
        End Get
        Set(ByVal value As String)
            Me._text = value
            Me.Invalidate() 'redraw control when property is changed
        End Set
    End Property
End Class
' This is a complex code snippet in VISUAL_BASIC
' It creates a class and implements multiple interfaces

Public Class ComplexClass
    Implements IFirstInterface, ISecondInterface, IThirdInterface

    ' Properties for the complex class
    Public Property Name As String
    Public Property Age As Integer
    Public Property Status As Boolean

    ' Constructor for the complex class
    Public Sub New(ByVal name As String, ByVal age As Integer, ByVal status As Boolean)
        Me.Name = name
        Me.Age = age
        Me.Status = status
    End Sub

    ' Method to display information about the class
    Public Sub DisplayInfo()
        Console.WriteLine("Name: " & Name)
        Console.WriteLine("Age: " & Age)
        If Status Then
            Console.WriteLine("Status: Active")
        Else
            Console.WriteLine("Status: Inactive")
        End If
    End Sub

    ' Method from the first interface
    Public Sub MethodFromFirstInterface() Implements IFirstInterface.MethodFromFirstInterface
        Console.WriteLine("This method belongs to the first interface")
    End Sub

    ' Method from the second interface
    Public Sub MethodFromSecondInterface() Implements ISecondInterface.MethodFromSecondInterface
        Console.WriteLine("This method belongs to the second interface")
    End Sub

    ' Method from the third interface
    Public Sub MethodFromThirdInterface() Implements IThirdInterface.MethodFromThirdInterface
        Console.WriteLine("This method belongs to the third interface")
    End Sub
End Class

' First interface with a method declaration
Public Interface IFirstInterface
    Sub MethodFromFirstInterface()
End Interface

' Second interface with a method declaration
Public Interface ISecondInterface
    Sub MethodFromSecondInterface()
End Interface

' Third interface with a method declaration
Public Interface IThirdInterface
    Sub MethodFromThirdInterface()
End Interface
'Set up variables
Dim num1 As Integer = 10
Dim num2 As Integer = 20

'Perform calculation
Dim result As Integer = num1 + num2

'Output result
Console.WriteLine("The sum of " & num1.ToString() & " and " & num2.ToString() & " is " & result.ToString())

'Set up loop to print even numbers from 0 to 10
For number As Integer = 0 To 10
    If number Mod 2 = 0 Then 'Check if number is even
        Console.WriteLine(number.ToString())
    End If
Next

'Set up array
Dim fruits As String() = {"apple", "orange", "banana"}

'Loop through array and print each fruit
For Each fruit As String In fruits
    Console.WriteLine(fruit)
Next

'Create custom class
Class Person
    Public Property Name As String
    Public Property Age As Integer
End Class

'Initialize list of persons
Dim people As New List(Of Person)

'Add persons to list
people.Add(New Person() With {.Name = "John", .Age = 30})
people.Add(New Person() With {.Name = "Sarah", .Age = 25})
people.Add(New Person() With {.Name = "Mike", .Age = 35})

'Loop through list and print each person's name and age
For Each person As Person In people
    Console.WriteLine(person.Name & " is " & person.Age & " years old.")
Next

'Create function to check if a number is a prime number
Function IsPrime(ByVal number As Integer) As Boolean
    'If number is 1, it is not a prime number
    If number = 1 Then
        Return False
    End If
    
    'Loop through numbers from 2 to number-1
    For i As Integer = 2 To (number - 1)
        'Check if number is divisible by i
        If number Mod i = 0 Then
            Return False 'Not a prime number
        End If
    Next
    
    Return True 'Number is a prime number
End Function

'Call function to check if a number is prime
Dim num As Integer = 7
If IsPrime(num) Then
    Console.WriteLine(num.ToString() & " is a prime number.")
Else
    Console.WriteLine(num.ToString() & " is not a prime number.")
End If

'Create class with constructors
Class Animal
    Public Property Name As String
    Public Property Species As String
    
    'Default constructor with no parameters
    Sub New()
    End Sub
    
    'Constructor with parameters
    Sub New(ByVal name As String, ByVal species As String)
        Me.Name = name
        Me.Species = species
    End Sub
    
    'Override ToString method to return name and species of animal
    Public Overrides Function ToString() As String
        Return Me.Name & " is a " & Me.Species
    End Function
End Class

'Create instance of animal with default constructor
Dim cat As New Animal()

'Create instance of animal with constructor
Dim dog As New Animal("Max", "dog")

'Print animal information
Console.WriteLine(cat.ToString())
Console.WriteLine(dog.ToString())

'Create class with inheritance
Class Car
    Public Property Brand As String
    Public Property Model As String
    Public Property Year As Integer
    
    'Constructor with parameters
    Sub New(ByVal brand As String, ByVal model As String, ByVal year As Integer)
    Me.Brand = brand
    Me.Model = model
    Me.Year = year
    End Sub
    
    'Override ToString method to return brand, model, and year of car
    Public Overrides Function ToString() As String
        Return Me.Year.ToString() & " " & Me.Brand & " " & Me.Model
    End Function
End Class

'Create class that inherits from Car
Class ElectricCar
    Inherits Car
    
    Public Property BatteryLife As Integer 'Additional property specific to electric cars
    
    'Constructor with parameters
    Sub New(ByVal brand As String, ByVal model As String, ByVal year As Integer, ByVal batteryLife As Integer)
        MyBase.New(brand, model, year) 'Call base constructor
        Me.BatteryLife = batteryLife
    End Sub
    
    'Override ToString method to include battery life
    Public Overrides Function ToString() As String
        Return Me.Year.ToString() & " " & Me.Brand & " " & Me.Model & ", with a battery life of " & Me.BatteryLife & " miles"
    End Function
End Class

'Create instance of car and electric car
Dim car As New Car("Toyota", "Camry", 2021)
Dim electricCar As New ElectricCar("Tesla", "Model S", 2020, 300)

'Print car information
Console.WriteLine(car.ToString())
Console.WriteLine(electricCar.ToString())
Option Explicit 'forces variable declaration to prevent errors

Sub CountAndSort() 'starts the sub procedure
    Dim ws As Worksheet 'declares a variable as a worksheet
    Set ws = ThisWorkbook.Sheets("Sheet1") 'sets the variable to refer to Sheet1
    Dim lastRow As Long 'declares a variable as a long integer
    
    'counts the number of rows with values in column A and stores it in the "lastRow" variable
    lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row 
    
    Dim names() As String 'declares a dynamic array to store the names
    Dim count() As Integer 'declares a dynamic array to store the counts
    
    ReDim names(1 To lastRow) 'resizes the arrays to the number of rows with values
    ReDim count(1 To lastRow)
    
    Dim i As Integer 'declares a counter variable
    
    'loop through each cell in column A and store the names in the array "names"
    For i = 1 To lastRow 
        names(i) = ws.Cells(i, 1) 'stores the value in the current cell
    Next i
    
    'loop through each name in the array "names"
    For i = 1 To lastRow 
        Dim j As Integer 'declares a secondary counter variable
        'compares the current name with the names in the array
        For j = 1 To lastRow 
            'if the names match, increase the count in the corresponding position in the "count" array
            If names(i) = names(j) Then 
                count(i) = count(i) + 1 
            End If
        Next j
    Next i
    
    Dim tempName As String 'declares a temporary variable to store a name
    Dim tempCount As Integer 'declares a temporary variable to store a count
    
    'sort the arrays in descending order based on the count values
    For i = 1 To lastRow 
        For j = i + 1 To lastRow 
            'if the count of the current name is less than the count of the next name, swap the positions
            If count(i) < count(j) Then  
                tempName = names(i) 'temporary variable holds the current name
                tempCount = count(i) 'temporary variable holds the current count
                'swap the names and counts
                names(i) = names(j) 
                count(i) = count(j)
                names(j) = tempName
                count(j) = tempCount
            End If
        Next j
    Next i
    
    'output the sorted names and counts in a new column next to the existing data
    ws.Columns(2).Resize(lastRow) = Application.Transpose(names) 
    ws.Columns(3).Resize(lastRow) = Application.Transpose(count)
    
    MsgBox "Names and counts have been sorted and output in columns B and C." 'notifies the user
    
End Sub
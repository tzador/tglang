// Objective-C implementation of a binary search algorithm

// Function for performing binary search on an array
-(NSInteger)binarySearch:(NSArray *)array withTarget:(NSNumber *)target {
    // declaring variables
    NSInteger low = 0;
    NSInteger high = [array count] - 1;
    NSInteger mid;

    // loop until low and high are equal
    while (low <= high) {
        // find the middle element of the array
        mid = (low + high) / 2;
        
        // if the middle element is equal to the target, return its index
        if ([array[mid] isEqualToNumber:target]) {
            return mid;
        }
        
        // if the target is less than the middle element, search on the left half of the array
        else if ([array[mid] compare:target] == NSOrderedDescending) {
            high = mid - 1;
        }
        
        // if the target is greater than the middle element, search on the right half of the array
        else {
            low = mid + 1;
        }
    }

    // return -1 if target is not found in the array
    return -1;
}

// Example usage
NSArray *arr = @[@1, @2, @3, @4, @5, @6];
NSNumber *target = @4;

// Calling the binarySearch function and storing the returned index
NSInteger index = [self binarySearch:arr withTarget:target];

// Printing the index of the target element
NSLog(@"The index of %@ is %ld", target, index);
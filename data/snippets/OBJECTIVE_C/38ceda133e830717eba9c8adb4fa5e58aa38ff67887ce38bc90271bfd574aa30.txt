@interface Person : NSObject //defining a class named 'Person' that inherits from 'NSObject'
//setting up property declarations
@property (nonatomic, strong) NSString *name; //a string property for storing name
@property (nonatomic, strong) NSNumber *age; //a number property for storing age
@property (nonatomic, strong) NSString *occupation; //a string property for storing occupation
//setting up method declarations
-(void)introduceSelf; //a method for introducing the person
-(NSArray *)getHobbies; //a method for returning an array of hobbies
@end //end of class declaration

@implementation Person //implementing the class 'Person'
-(void)introduceSelf { //implementation of 'introduceSelf' method
    NSLog(@"Hi, my name is %@ and I am %@ years old. I am a %@.", self.name, self.age, self.occupation); //printing out introduction using property values
}

-(NSArray *)getHobbies { //implementation of 'getHobbies' method
    NSArray *hobbies = @[@"reading", @"hiking", @"painting"]; //creating an array with some hobby options
    NSLog(@"My hobbies are: %@", hobbies); //printing out all hobbies
    return hobbies; //returning the array of hobbies
}
@end //end of class implementation

//creating an instance of 'Person' named 'John'
Person *john = [[Person alloc] init]; //allocating and initializing the object
john.name = @"John"; //setting the name property
john.age = @25; //setting the age property
john.occupation = @"teacher"; //setting the occupation property

[john introduceSelf]; //calling the 'introduceSelf' method
NSArray *johnHobbies = [john getHobbies]; //calling the 'getHobbies' method and storing the returned array in a variable
NSLog(@"John's hobbies are: %@", johnHobbies); //printing out John's hobbies using the returned array
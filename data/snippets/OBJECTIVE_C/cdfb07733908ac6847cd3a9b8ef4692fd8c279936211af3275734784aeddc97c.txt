#import <Foundation/Foundation.h>

// A simple Objective-C class
@interface Person : NSObject

// Annotating properties as 'strong' to indicate they are properties
// that retain their assigned values
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSNumber *age;
@property (nonatomic, strong) NSString *occupation;
@property (nonatomic, strong) NSMutableString *notes;

// Annotating a method as 'nonnull' to indicate it cannot accept nil values
- (instancetype)initWithName:(nonnull NSString *)name
                    andAge:(nonnull NSNumber *)age
              andOccupation:(nonnull NSString *)occupation;

// Annotating a method as 'nullable' to indicate it may return a nil value
- (nullable NSString *)getNotes;

@end

@implementation Person

// Annotating the class method as 'nonnull' to indicate it cannot return a nil value
+ (nonnull instancetype)personWithName:(nonnull NSString *)name
                                andAge:(nonnull NSNumber *)age
                          andOccupation:(nonnull NSString *)occupation {

// Initializing and returning an instance of the Person class
    return [[Person alloc] initWithName:name andAge:age andOccupation:occupation];
}

// Implementing the designated initializer with our annotated properties
// and returning an instance of the Person class
- (instancetype)initWithName:(nonnull NSString *)name
                      andAge:(nonnull NSNumber *)age
                andOccupation:(nonnull NSString *)occupation {
    
    self = [super init];
    if (self) {
        self.name = name;
        self.age = age;
        self.occupation = occupation;
        
        // Initializing our notes property as a mutable string
        self.notes = [[NSMutableString alloc] init];
    }
    return self;
}

// Implementing the getNotes method and returning our notes property
- (NSString *)getNotes {
    return self.notes;
}

@end

// Creating an instance of the Person class and assigning values to its properties
Person *person = [[Person alloc] initWithName:@"John" andAge:@27 andOccupation:@"Software Engineer"];

// Calling the getNotes method and appending a note to the notes property
[person getNotes];
[person.notes appendString:@"John is a hardworking and dedicated engineer."];

// Logging the values of the properties using NSlog
NSLog(@"Name: %@", person.name);
NSLog(@"Age: %@", person.age);
NSLog(@"Occupation: %@", person.occupation);
NSLog(@"Notes: %@", [person getNotes]);
 
// Output:
// Name: John
// Age: 27
// Occupation: Software Engineer
// Notes: John is a hardworking and dedicated engineer.
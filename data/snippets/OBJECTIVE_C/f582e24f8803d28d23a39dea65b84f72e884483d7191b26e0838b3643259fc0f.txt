// User-defined class Vehicle
@interface Vehicle : NSObject
{
    // Instance variables
    NSString *_make;
    NSString *_model;
    int _year;
}

// Property declarations for private instance variables
@property (nonatomic, strong) NSString *make;
@property (nonatomic, strong) NSString *model;
@property (nonatomic) int year;

// Method declarations
-(void)drive;
-(void)brake;
-(NSString *)getFullName;

@end

@implementation Vehicle

// Setters and getters for properties
-(void)setMake:(NSString *)make {
    _make = make;
}
-(NSString *)getMake {
    return _make;
}

-(void)setModel:(NSString *)model {
    _model = model;
}
-(NSString *)getModel {
    return _model;
}

-(void)setYear:(int)year {
    _year = year;
}
-(int)getYear {
    return _year;
}

// Method implementations
-(void)drive {
    NSLog(@"The %@ %@ is now driving.", self.make, self.model);
}

-(void)brake {
    NSLog(@"The %@ %@ is now braking.", self.make, self.model);
}

-(NSString *)getFullName {
    NSString *fullName = [NSString stringWithFormat:@"%d %@ %@", self.year, self.make, self.model];
    return fullName;
}

@end

// Instantiate a vehicle object
Vehicle *myVehicle = [[Vehicle alloc] init];

// Set properties
[myVehicle setMake:@"Ford"];
[myVehicle setModel:@"Mustang"];
[myVehicle setYear:2015];

// Get properties and call methods
NSLog(@"My favorite car is the %@ %@ from %d.", [myVehicle getMake], [myVehicle getModel], [myVehicle getYear]);
[myVehicle drive];
[myVehicle brake];
NSString *fullName = [myVehicle getFullName];
NSLog(@"The full name of my vehicle is: %@", fullName);
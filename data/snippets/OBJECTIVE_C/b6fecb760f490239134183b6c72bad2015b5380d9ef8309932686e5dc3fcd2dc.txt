// Declare a class named Person
@interface Person : NSObject    

// Declare properties for person's name and age
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) NSInteger age;

// Declare a method to initialize a person with a given name and age
- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age;   

// Declare a method to print out the person's information
- (void)printPersonInfo;   

// Declare a custom exception
@interface PersonException : NSException

// Declare a method to handle the exception by printing out the error message
- (void)handleException:(PersonException *)exception;   

// Implementation of the Person class methods
@implementation Person

// Initialize method implementation
- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age{
    self = [super init]; // call superclass' init method
    if (self) {
        self.name = name; // set name property
        self.age = age;   // set age property
    }
    return self;
}

// Print person's information method implementation
- (void)printPersonInfo{
    NSLog(@"Name: %@, Age: %ld", self.name, (long)self.age);
}

// Implementation of custom exception methods
@implementation PersonException

// Exception handling method implementation
- (void)handleException:(PersonException *)exception{
    NSLog(@"Error: %@", [exception reason]);
}

// Main function
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // Create a new instance of Person
        Person *person = [[Person alloc] initWithName:@"John" andAge:30];
        
        // Try to access a non-existent property
        @try{
            NSLog(@"%@",person.address); // throws PersonException
        }
        @catch (PersonException *exception){
            // Handle the exception by printing out the error message
            [exception handleException:exception];
        }
        
        // Print person's information
        [person printPersonInfo];
    }
    return 0;
}
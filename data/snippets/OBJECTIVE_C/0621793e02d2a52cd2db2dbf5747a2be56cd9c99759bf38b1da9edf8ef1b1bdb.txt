//Objective-C class implementation

//Header file (.h)
#import <Foundation/Foundation.h>

//Declare class
@interface Animal : NSObject

//Properties
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) NSInteger age;
@property (nonatomic, strong) NSArray *favoriteFoods;

//Methods
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age favoriteFoods:(NSArray *)foods;
- (void)speak;
- (BOOL)isOld;
- (NSString *)description;

@end

//Implementation file (.m)
#import "Animal.h"

//Implementation of methods
@implementation Animal

//Custom initializer method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age favoriteFoods:(NSArray *)foods {
    self = [super init]; //call superclass's initializer
    if (self) {
        self.name = name;
        self.age = age;
        self.favoriteFoods = foods;
    }
    return self;
}

//Method to make animal speak
- (void)speak {
    NSLog(@"%@ says: Hello world!", self.name);
}

//Method to check if animal is old
- (BOOL)isOld {
    return self.age > 10;
}

//Description method to provide information about the animal
- (NSString *)description {
    return [NSString stringWithFormat:@"Name: %@, Age: %ld, Favorite Foods: %@", self.name, (long)self.age, self.favoriteFoods];
}

@end

//Main method
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        
        //Create an instance of Animal class
        Animal *cat = [[Animal alloc] initWithName:@"Fluffy" age:5 favoriteFoods:@[@"Tuna", @"Milk", @"Catnip"]];
        
        //Call methods
        [cat speak];
        NSLog(@"Is %@ old? %@", cat.name, [cat isOld] ? @"Yes" : @"No");
        NSLog(@"%@", [cat description]);
        
    }
    return 0;
}
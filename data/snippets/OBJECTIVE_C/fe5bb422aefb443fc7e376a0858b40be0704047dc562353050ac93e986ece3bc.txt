// Object class declaration
@interface Object : NSObject
{
    // Private variables
    NSString *name;
    int age;
}

// Public properties
@property (nonatomic, strong) NSString *address;
@property (nonatomic, assign) BOOL isAlive;

// Initialization method
- (instancetype)initWithName:(NSString *)objectName andAge:(int)objectAge;

// Static method to calculate years since object's creation
+ (int)calculateYearsSinceCreation:(Object *)object;

// Instance method to print object's information
- (void)printInfo;

@end

// Object class implementation
@implementation Object

// Initialization method implementation
- (instancetype)initWithName:(NSString *)objectName andAge:(int)objectAge
{
    self = [super init];
    if (self) {
        // Set initial values for private variables
        self.name = objectName;
        self.age = objectAge;
    }
    return self;
}

// Static method implementation
+ (int)calculateYearsSinceCreation:(Object *)object
{
    // Get current year
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSDateComponents *components = [calendar components:NSCalendarUnitYear
                                               fromDate:[NSDate date]];

    // Calculate years since object's creation
    int currentYear = (int)[components year];
    int objectYear = [object.age integerValue];
    int yearsSinceCreation = currentYear - objectYear;

    return yearsSinceCreation;
}

// Instance method implementation
- (void)printInfo
{
    // Print object's information
    NSLog(@"Name: %@", self.name);
    NSLog(@"Age: %d", self.age);
    NSLog(@"Address: %@", self.address);
    NSLog(@"Is alive: %d", self.isAlive);
}

@end
//This code snippet demonstrates the use of object-oriented programming in Objective-C

//Create an interface for a Shape class
@interface Shape : NSObject

//Declare properties for the shape's name, number of sides, and area
@property (strong, nonatomic) NSString *name;
@property (nonatomic) int sides;
@property (nonatomic) double area;

//Declare a method to calculate the area of the shape
- (double)calculateArea;

@end

//Implement the Shape class
@implementation Shape

//Implement the calculateArea method
- (double)calculateArea {
    //This method will be overridden by subclasses
    return 0.0;
}

@end

//Create a subclass of Shape for a rectangle
@interface Rectangle : Shape

//Declare properties for the rectangle's length and width
@property (nonatomic) double length;
@property (nonatomic) double width;

//Implement the calculateArea method to calculate the area of a rectangle
- (double)calculateArea {
    //Use the formula: area = length * width
    return self.length * self.width;
}

@end

//Create a subclass of Shape for a circle
@interface Circle : Shape

//Declare a property for the circle's radius
@property (nonatomic) double radius;

//Implement the calculateArea method to calculate the area of a circle
- (double)calculateArea {
    //Use the formula: area = Ï€ * radius^2
    return M_PI * pow(self.radius, 2);
}

@end

//Instantiate a Rectangle object
Rectangle *rectangle = [[Rectangle alloc] init];

//Set the rectangle's properties
rectangle.name = @"Rectangle";
rectangle.sides = 4;
rectangle.length = 10.0;
rectangle.width = 5.0;

//Call the calculateArea method and print the result
NSLog(@"The area of the %@ is %.2f", rectangle.name, [rectangle calculateArea]);

//Instantiate a Circle object
Circle *circle = [[Circle alloc] init];

//Set the circle's properties
circle.name = @"Circle";
circle.sides = 0;
circle.radius = 7.5;

//Call the calculateArea method and print the result
NSLog(@"The area of the %@ is %.2f", circle.name, [circle calculateArea]);
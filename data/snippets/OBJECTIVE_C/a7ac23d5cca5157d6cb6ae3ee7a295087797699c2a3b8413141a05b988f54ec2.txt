/*
This is a complex code snippet in Objective-C that implements a custom data structure class called MyArray.
The class has properties and methods to add, remove, and access elements in the array, as well as sort the array in ascending order.
*/

// MyArray.h file
#import <Foundation/Foundation.h>

@interface MyArray : NSObject

// Properties
@property (nonatomic, strong) NSMutableArray *array;
@property (nonatomic, assign) int size;

// Methods
- (void)addElement:(id)object; // adds an element to the end of the array
- (void)removeElement:(id)object; // removes the first instance of the specified element
- (id)objectAtIndex:(int)index; // returns the element at the specified index
- (void)sortAscending; // sorts the array in ascending order

@end

// MyArray.m file
#import "MyArray.h"

@implementation MyArray

// Implementation of methods
- (void)addElement:(id)object {
    [self.array addObject:object]; // adds the object to the end of the array
    self.size++; // increases the size of the array
}

- (void)removeElement:(id)object {
    [self.array removeObject:object]; // removes the first instance of the specified element from the array
    self.size--; // decreases the size of the array
}

- (id)objectAtIndex:(int)index {
    return [self.array objectAtIndex:index]; // returns the element at the specified index
}

- (void)sortAscending {
    [self.array sortUsingComparator:^NSComparisonResult(id obj1, id obj2) {
        // custom sorting algorithm to compare two objects and return the comparison result
        // this implementation uses the Object's "compare" method to compare two objects
        return [obj1 compare:obj2];
    }];
}

@end

// Implementation in main file
int main() {
    // create a new instance of MyArray and add some elements
    MyArray *myArray = [[MyArray alloc] init];
    [myArray addElement:@"b"];
    [myArray addElement:@"a"];
    [myArray addElement:@"c"];
    
    // sort the array and print the elements in sorted order
    [myArray sortAscending];
    for (int i = 0; i < myArray.size; i++) {
        NSString *element = [myArray objectAtIndex:i];
        NSLog(@"%@", element);
    }
    
    // output: a, b, c
}
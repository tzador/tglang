@interface CustomView : UIView

@property (nonatomic, strong) UILabel *titleLabel;
@property (nonatomic, strong) UIImageView *imageView;
@property (nonatomic, strong) UIButton *button;

/**
 *  Sets the properties and initializes all the subviews.
 */
- (void)setupViews;

/**
 *  Calculates and sets the frame of the subviews depending on the parent view's frame.
 *
 *  @param parentFrame The frame of the parent view.
 */
- (void)layoutViewsForParentFrame:(CGRect)parentFrame;

@end

@implementation CustomView

- (instancetype)init
{
    self = [super init];
    if (self) {
        [self setupViews]; // Initialize and setup all subviews
    }
    return self;
}

- (void)setupViews
{
    self.titleLabel = [[UILabel alloc] init]; // Initialize label
    [self addSubview:self.titleLabel]; // Add label as subview
    
    self.imageView = [[UIImageView alloc] init]; // Initialize image view
    [self addSubview:self.imageView]; // Add image view as subview
    
    self.button = [[UIButton alloc] init]; // Initialize button
    [self addSubview:self.button]; // Add button as subview
    
    [self layoutViewsForParentFrame:self.frame]; // Call layout method to set frames
}

- (void)layoutViewsForParentFrame:(CGRect)parentFrame
{
    // Calculate frames for subviews
    
    CGFloat padding = 10.0; // Set padding
    
    CGRect titleLabelFrame = CGRectMake(padding, padding, parentFrame.size.width - 2 * padding, 40.0); // Frame for title label
    self.titleLabel.frame = titleLabelFrame;
    
    CGRect imageViewFrame = CGRectMake(padding, CGRectGetMaxY(titleLabelFrame) + padding, 100.0, 100.0); // Frame for image view
    self.imageView.frame = imageViewFrame;
    
    CGRect buttonFrame = CGRectMake(CGRectGetMaxX(imageViewFrame) + padding, CGRectGetMaxY(titleLabelFrame) + padding, 100.0, 50.0); // Frame for button
    self.button.frame = buttonFrame;
}

@end
// This is a class for a shopping cart
// The class has properties for items, quantities, and total cost

@interface ShoppingCart : NSObject

@property (nonatomic, strong) NSArray *items; // array of items in the cart
@property (nonatomic, strong) NSArray *quantities; // array of quantities for each item
@property (nonatomic, assign) float totalCost; // total cost of all items in the cart

/**
 Method to add an item with specified quantity to the cart
 
 @param item The item to be added to the cart
 @param quantity The quantity of the item to be added
 */
- (void)addItem:(id)item withQuantity:(int)quantity;

/**
 Method to remove an item from the cart
 
 @param item The item to be removed from the cart
 */
- (void)removeItem:(id)item;

/**
 Method to update the quantity of an item in the cart
 
 @param item The item to be updated
 @param quantity The new quantity for the item
 */
- (void)updateItem:(id)item withQuantity:(int)quantity;

/**
 Method to calculate the total cost of all items in the cart
 */
- (void)calculateTotalCost;

@end

@implementation ShoppingCart

- (void)addItem:(id)item withQuantity:(int)quantity {
    // check if item is already in the cart
    if ([self.items containsObject:item]) {
        // get the index of the item
        NSUInteger index = [self.items indexOfObject:item];
        // update the quantity for that item
        int currentQuantity = [self.quantities[index] intValue];
        currentQuantity += quantity;
        self.quantities[index] = @(currentQuantity);
    } else { // if item is not in the cart, add it to the arrays
        [self.items addObject:item];
        [self.quantities addObject:@(quantity)];
    }
    // recalculate the total cost
    [self calculateTotalCost];
}

- (void)removeItem:(id)item {
    // get the index of the item
    NSUInteger index = [self.items indexOfObject:item];
    // remove the item and quantity from the arrays
    [self.items removeObjectAtIndex:index];
    [self.quantities removeObjectAtIndex:index];
    // recalculate the total cost
    [self calculateTotalCost];
}

- (void)updateItem:(id)item withQuantity:(int)quantity {
    // get the index of the item
    NSUInteger index = [self.items indexOfObject:item];
    // update the quantity for that item
    self.quantities[index] = @(quantity);
    // recalculate the total cost
    [self calculateTotalCost];
}

- (void)calculateTotalCost {
    float total = 0;
    // loop through all items in the cart
    for (int i = 0; i < self.items.count; i++) {
        // get the unit price for the item
        float unitPrice = [self.items[i] unitPrice];
        // get the quantity for the item
        int quantity = [self.quantities[i] intValue];
        // calculate the subtotal for this item
        float subtotal = unitPrice * quantity;
        // add to the total cost
        total += subtotal;
    }
    // update the totalCost property
    self.totalCost = total;
}

@end
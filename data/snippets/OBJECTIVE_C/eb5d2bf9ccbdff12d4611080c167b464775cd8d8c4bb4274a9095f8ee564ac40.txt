#import <Foundation/Foundation.h>

// Creating a parent class
@interface Shape : NSObject {
    // Defining instance variables
    float _width;
    float _height;
}

// Defining methods for setting width and height
-(void)setWidth:(float)width;
-(void)setHeight:(float)height;

// Defining methods for getting area and perimeter
-(float)area;
-(float)perimeter;

@end

// Implementing the parent class
@implementation Shape

// Implementing the setWidth and setHeight methods
-(void)setWidth:(float)width {
    _width = width;
}

-(void)setHeight:(float)height {
    _height = height;
}

// Implementing the area and perimeter methods
-(float)area {
    return _width * _height;
}

-(float)perimeter {
    return 2 * (_width + _height);
}

@end

// Creating a child class that inherits from Shape
@interface Rectangle : Shape
@end

// Implementing the child class
@implementation Rectangle

// Overriding the area and perimeter methods
-(float)area {
    // Calling the parent class's area method
    float parentArea = [super area];
    // Adding an extra calculation
    return parentArea + (_width * _height);
}

-(float)perimeter {
    // Calling the parent class's perimeter method
    float parentPerimeter = [super perimeter];
    // Adding an extra calculation
    return parentPerimeter * 2;
}

@end

// Main function
int main (int argc, const char * argv[]) {
    // Creating an instance of Shape
    Shape *myShape = [[Shape alloc] init];
    // Setting width and height
    [myShape setWidth:5.0];
    [myShape setHeight:7.0];
    
    // Creating an instance of Rectangle
    Rectangle *myRectangle = [[Rectangle alloc] init];
    // Setting width and height
    [myRectangle setWidth:10.0];
    [myRectangle setHeight:5.0];
    
    // Printing the area of myShape
    NSLog(@"The area of myShape is %f", [myShape area]);
    // Printing the perimeter of myShape
    NSLog(@"The perimeter of myShape is %f", [myShape perimeter]);
    
    // Printing the area of myRectangle
    NSLog(@"The area of myRectangle is %f", [myRectangle area]);
    // Printing the perimeter of myRectangle
    NSLog(@"The perimeter of myRectangle is %f", [myRectangle perimeter]);
    
    return 0;
}

/* Output:
The area of myShape is 35.000000
The perimeter of myShape is 24.000000
The area of myRectangle is 60.000000
The perimeter of myRectangle is 30.000000
*/
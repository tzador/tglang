#import <UIKit/UIKit.h> //Importing UIKit framework

@interface MyClass : NSObject //Declaring a class named MyClass that inherits from NSObject

@property (nonatomic, assign) int myNumber; //Declaring a property named myNumber with type int
@property (nonatomic, strong) NSString *myString; //Declaring a property named myString with type NSString

//Declaring a method named multiplyWithNumber that takes in an integer parameter and returns an integer
-(int)multiplyWithNumber:(int)number;

//Declaring a method named concatenateWithString that takes in a string parameter and returns a string
-(NSString *)concatenateWithString:(NSString *)string;

@end //End of interface declaration

@implementation MyClass //Implementation of MyClass

-(int)multiplyWithNumber:(int)number { //Implementation of multiplyWithNumber method
    int result = self.myNumber * number; //Multiplying the value of myNumber property with the given parameter
    return result; //Returning the result
}

-(NSString *)concatenateWithString:(NSString *)string { //Implementation of concatenateWithString method
    NSString *concatenatedString = [self.myString stringByAppendingString:string]; //Concatenating the value of myString property with the given parameter
    return concatenatedString; //Returning the concatenated string
}

@end //End of implementation

int main() { //Main function
    MyClass *myObject = [[MyClass alloc] init]; //Initializing an instance of MyClass
    myObject.myNumber = 5; //Setting the value of myNumber property to 5
    myObject.myString = @"Hello "; //Setting the value of myString property to "Hello"
    
    int result = [myObject multiplyWithNumber:3]; //Calling multiplyWithNumber method on myObject with parameter 3
    NSLog(@"%d", result); //Printing the result to the console
    
    NSString *concatenatedString = [myObject concatenateWithString:@"World!"]; //Calling concatenateWithString method on myObject with parameter "World!"
    NSLog(@"%@", concatenatedString); //Printing the concatenated string to the console
}
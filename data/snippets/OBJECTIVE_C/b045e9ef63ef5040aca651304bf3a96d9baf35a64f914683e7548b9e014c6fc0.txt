// Create a custom class named "Person"
@interface Person : NSObject

// Define properties for the person's name, age, and gender
@property (nonatomic, strong) NSString *name;
@property (nonatomic) NSInteger age;
@property (nonatomic) NSString *gender;

// Method to initialize the person's name, age, and gender
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age gender:(NSString *)gender;

// Method to say a greeting
- (void)sayHello;

// Method to calculate the person's birth year based on their age
- (NSInteger)calculateBirthYear;

@end

// Implementation of the "Person" class
@implementation Person

// Initialization method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age gender:(NSString *)gender {
    self = [super init];

    // If the initialization is successful, assign the name, age, and gender properties
    if (self) {
        self.name = name;
        self.age = age;
        self.gender = gender;
    }

    return self;
}

// Implementation of the "sayHello" method to print a greeting
- (void)sayHello {
    NSLog(@"Hello, my name is %@", self.name);
}

// Implementation of the "calculateBirthYear" method
- (NSInteger)calculateBirthYear {
    // Get the current year and subtract the person's age from it
    NSDateComponents *components = [[NSCalendar currentCalendar] components:NSCalendarUnitYear fromDate:[NSDate date]];
    NSInteger currentYear = [components year];
    NSInteger birthYear = currentYear - self.age;
    return birthYear;
}

@end

// Main method to test the "Person" class
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // Create an instance of the "Person" class
        Person *person = [[Person alloc] initWithName:@"John" age:30 gender:@"Male"];

        // Call the "sayHello" method to print a greeting
        [person sayHello];

        // Calculate the person's birth year and print it
        NSInteger birthYear = [person calculateBirthYear];
        NSLog(@"I was born in %ld", (long)birthYear);

        return 0;
    }
}
// This is a program in Objective-C to implement a stack data structure

// Declaring a Node class to hold data and pointers
@interface Node : NSObject

@property (nonatomic, strong) id data;
@property (nonatomic, strong) Node *next;

- (instancetype)initWithData:(id)data;

@end

@implementation Node

// Initializing the node with data and setting the next pointer to nil
- (instancetype)initWithData:(id)data
{
    self = [super init];
    if (self) {
        self.data = data;
        self.next = nil;
    }
    return self;
}

@end

// Declaring a Stack class to manipulate the nodes
@interface Stack : NSObject

@property (nonatomic, strong) Node *top;

// Method to check if the stack is empty
- (BOOL)isEmpty;

// Method to add a new node to the top of the stack
- (void)push:(id)data;

// Method to remove the top node from the stack and return its data
- (id)pop;

@end

@implementation Stack

// Implementing the isEmpty method to check if the top is nil
- (BOOL)isEmpty
{
    if (self.top == nil) {
        return YES;
    } else {
        return NO;
    }
}

// Implementing the push method to add a new node to the top of the stack
- (void)push:(id)data
{
    Node *newNode = [[Node alloc] initWithData:data];
    newNode.next = self.top;
    self.top = newNode;
}

// Implementing the pop method to remove the top node from the stack and return its data
- (id)pop
{
    if ([self isEmpty]) {
        return nil;
    } else {
        Node *poppedNode = self.top;
        self.top = self.top.next;
        return poppedNode.data;
    }
}

@end

// Example usage of the stack data structure
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // Creating a stack object
        Stack *stack = [[Stack alloc] init];
        
        // Adding elements to the stack using the push method
        [stack push:@"Hello"];
        [stack push:@"World"];
        [stack push:@"Objective-C"];
        
        // Removing elements from the stack using the pop method
        id poppedElement = [stack pop];
        NSLog(@"%@", poppedElement); // Output: Objective-C
        poppedElement = [stack pop];
        NSLog(@"%@", poppedElement); // Output: World
        poppedElement = [stack pop];
        NSLog(@"%@", poppedElement); // Output: Hello
    }
    return 0;
}
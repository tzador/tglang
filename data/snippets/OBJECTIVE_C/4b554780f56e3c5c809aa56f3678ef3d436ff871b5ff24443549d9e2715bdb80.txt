//This code snippet creates a custom table view controller with a search bar and displays dynamic data from an array of objects, using table view delegate methods and data source methods.

//Import necessary frameworks
#import <UIKit/UIKit.h>

//Create a custom table view controller class
@interface CustomTableViewController : UITableViewController <UISearchBarDelegate>

//Declare properties for the view controller
@property (strong, nonatomic) NSMutableArray *dataArray;
@property (strong, nonatomic) NSArray *filteredArray;
@property (strong, nonatomic) UISearchBar *searchBar;

@end

@implementation CustomTableViewController

//Initialize properties in viewDidLoad method
- (void)viewDidLoad {
    [super viewDidLoad];
    
    //Initialize data array with objects
    self.dataArray = [[NSMutableArray alloc] initWithObjects:@"John",@"Samantha",@"James",@"Emily",@"Michael",@"Emma",@"Sophia",@"Daniel",@"Olivia",@"Liam", nil];
    
    //Set title for navigation bar
    self.navigationItem.title = @"Custom Table View";
    
    //Initialize search bar
    self.searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(0, 0, self.tableView.frame.size.width, 44)];
    self.searchBar.delegate = self;
    
    //Add search bar to table header view
    self.tableView.tableHeaderView = self.searchBar;
}

//Set number of sections in table view
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

//Set number of rows in each section
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (self.searchBar.text.length > 0) {
        return [self.filteredArray count];
    } else {
        return [self.dataArray count];
    }
}

//Set height for table view cells
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 44;
}

//Populate table view cells with data from arrays
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    //Dequeue reusable cell
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"Cell" forIndexPath:indexPath];
    
    //Get object for current row based on search text
    NSString *text = self.searchBar.text.length > 0 ? self.filteredArray[indexPath.row] : self.dataArray[indexPath.row];
    
    //Set text label
    cell.textLabel.text = text;
    
    return cell;
}

//Implement search bar delegate method to filter data
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText {
    //Filter data using predicate
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF contains[c] %@",searchText];
    self.filteredArray = [self.dataArray filteredArrayUsingPredicate:predicate];
    
    //Reload table view to show filtered data
    [self.tableView reloadData];
}

@end
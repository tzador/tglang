//declaring a class
@interface Car : NSObject

//specifying instance variables
@property (nonatomic, strong) NSString *make;
@property (nonatomic, strong) NSString *model;
@property (nonatomic, assign) int year;
@property (nonatomic, assign) float currentMileage;

//defining methods
- (void)startEngine;
- (void)accelerateToSpeed:(float)speed;
- (void)breakHard;
- (void)updateCurrentMileage;

@end

//implementing the class
@implementation Car

//initializing method
- (instancetype)initWithMake:(NSString *)make model:(NSString *)model year:(int)year currentMileage:(float)currentMileage {
    self = [super init];
    if (self) {
        self.make = make;
        self.model = model;
        self.year = year;
        self.currentMileage = currentMileage;
    }
    return self;
}

//start engine method
- (void)startEngine {
    NSLog(@"The %@ %@ has been turned on.", self.make, self.model);
}

//acceleration method
- (void)accelerateToSpeed:(float)speed {
    NSLog(@"The %@ %@ has accelerated to %.1f miles per hour.", self.make, self.model, speed);
}

//break hard method
- (void)breakHard {
    NSLog(@"The %@ %@ has come to a sudden stop.", self.make, self.model);
}

//update current mileage method
- (void)updateCurrentMileage {
    NSLog(@"The %@ %@'s current mileage is now %.1f", self.make, self.model, self.currentMileage);
}

@end

//creating an instance of the Car class
Car *myCar = [[Car alloc] initWithMake:@"Toyota" model:@"Camry" year:2010 currentMileage:74500.5];

//calling methods on the instance
[myCar startEngine];
[myCar accelerateToSpeed:45.5];
[myCar breakHard];

//updating the current mileage
[myCar updateCurrentMileage];
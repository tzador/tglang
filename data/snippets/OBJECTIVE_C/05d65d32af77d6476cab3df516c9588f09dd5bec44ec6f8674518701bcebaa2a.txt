// This is a complex code snippet in OBJECTIVE_C

// Import foundation framework
#import <Foundation/Foundation.h>

// Define a new class
@interface ComplexObject : NSObject

// Declare properties
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSArray *array;

// Initialize method
- (instancetype)initWithName:(NSString *)name array:(NSArray *)array;

@end

// Implementation of the class
@implementation ComplexObject

// Custom initializer
- (instancetype)initWithName:(NSString *)name array:(NSArray *)array {
    self = [super init];
    if (self) {
        self.name = name;
        self.array = array;
        [self doSomeComplexTask];
    }
    return self;
}

// Method to perform a complex task
- (void)doSomeComplexTask {
    // Perform complex task using the properties
    NSDictionary *dict = @{@"property_name": self.name, @"property_array": self.array};
    NSLog(@"The result of the complex task is %@", dict);
}

@end

// Example usage
// Initialize a new instance of ComplexObject
ComplexObject *myObject = [[ComplexObject alloc] initWithName:@"Objective-C" array:@[@"property1", @"property2", @"property3"]];
// Output: The result of the complex task is {
//    property_name = "Objective-C";
//    property_array =     (
//        property1,
//        property2,
//        property3
//    );
//}
// Accessing the properties
NSLog(@"The name of the object is %@", myObject.name); // Output: The name of the object is Objective-C
NSLog(@"The array of the object is %@", myObject.array); // Output: The array of the object is (
//    property1,
//    property2,
//    property3
//)
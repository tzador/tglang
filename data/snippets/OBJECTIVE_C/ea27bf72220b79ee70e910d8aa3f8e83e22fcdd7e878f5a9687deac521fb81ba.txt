//This code snippet creates a class and uses common OOP concepts
#import <Foundation/Foundation.h> //importing the Foundation framework

/* Our class is called "Person" and it inherits from the NSObject class */
@interface Person : NSObject
/*declaring instance variables (private properties) for our class*/
@property(nonatomic) NSString *name;
@property(nonatomic) int age;
@property(nonatomic) NSString *occupation;

/*declaring methods (functions) for our class*/
- (void)sayHelloTo:(NSString *)personName;
- (void)introduce;

/*declaring an initializer (constructor) for our class*/
- (id)initWithName:(NSString *)name andAge:(int)age andOccupation:(NSString *)occupation;

@end

/*implementation of our class*/
@implementation Person	//note: the interface must be implemented

/*implementation of our initializer*/
- (id)initWithName:(NSString *)name andAge:(int)age andOccupation:(NSString *)occupation {
    self = [super init];	//calling the initializer of the superclass NSObject
    if (self) {
        //setting the instance variables to the passed in values
        self.name = name;
        self.age = age;
        self.occupation = occupation;
    }
    return self;
}

/*implementation of the sayHelloTo method*/
- (void)sayHelloTo:(NSString *)personName {
    NSLog(@"Hello %@, my name is %@.", personName, self.name);	//print out a greeting
}

/*implementation of the introduce method*/
- (void)introduce {
    NSLog(@"My name is %@. I am %d years old and I work as a %@.", self.name, self.age, self.occupation);	//print out information about the person
}

@end

/*main function*/
int main(int argc, const char * argv[]) {
    @autoreleasepool {	//creating an autorelease pool for our objects
        //creating an instance of our Person class using our initializer
        Person *person = [[Person alloc] initWithName:@"John" andAge:25 andOccupation:@"Software Developer"];
        //calling the sayHelloTo method
        [person sayHelloTo:@"Bob"];
        //calling the introduce method
        [person introduce];
    }
    return 0;
}
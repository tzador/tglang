// This code snippet creates a custom UIView subclass that draws a gradient background and rotates when tapped

#import <UIKit/UIKit.h> // Importing UIKit framework for iOS development

@interface GradientView : UIView // Creating custom UIView subclass named GradientView
@property (nonatomic, strong) UIColor *topColor; // Property for top color of gradient background
@property (nonatomic, strong) UIColor *bottomColor; // Property for bottom color of gradient background
@end

@implementation GradientView // Implementation of GradientView 

- (void)drawRect:(CGRect)rect { // Drawing the gradient background in the specified rect
    CGContextRef context = UIGraphicsGetCurrentContext();
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();

    // Setting the gradient colors
    CGFloat locations[] = { 0.0, 1.0 };
    NSArray *colors = @[(__bridge id)self.topColor.CGColor, (__bridge id)self.bottomColor.CGColor];
    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)colors, locations);

    // Filling the background with gradient
    CGContextSaveGState(context);
    CGContextAddRect(context, rect);
    CGContextClip(context);
    CGContextDrawLinearGradient(context, gradient, CGPointMake(0, 0), CGPointMake(0, rect.size.height), 0);

    // Drawing a circle with a shadow that will rotate
    CGFloat circleSize = 50.0;
    CGRect circleRect = CGRectMake(CGRectGetMidX(rect) - (circleSize/2), CGRectGetMidY(rect) - (circleSize/2), circleSize, circleSize);
    CGContextAddEllipseInRect(context, circleRect);
    CGContextSetShadowWithColor(context, CGSizeZero, 5.0, [[UIColor blackColor]CGColor]);
    CGContextSetFillColorWithColor(context, [UIColor whiteColor].CGColor);
    CGContextFillPath(context);

    CGContextRestoreGState(context);

    // Rotating the circle when tapped
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(handleTap:)];
    [self addGestureRecognizer:tap];
}

// Method to handle tap gesture
- (void)handleTap:(UITapGestureRecognizer *)gesture {
    [UIView animateWithDuration:0.5 animations:^{
        self.transform = CGAffineTransformMakeRotation(M_PI_2); // Rotating view by 90 degrees
    }];
}

@end
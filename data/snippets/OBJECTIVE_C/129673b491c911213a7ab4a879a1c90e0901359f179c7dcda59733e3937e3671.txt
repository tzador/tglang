#import <Foundation/Foundation.h>  // import Foundation framework

// define a protocol with required and optional methods
@protocol MyProtocol <NSObject> 

@required

// method that takes in a string argument
- (void)printString:(NSString *)str;

@optional

// method that takes in an integer argument
- (void)printInteger:(int)num;

@end

// define a class that conforms to the protocol
@interface MyClass : NSObject <MyProtocol>

@end

@implementation MyClass

// implementation of required method
- (void)printString:(NSString *)str {
    NSLog(@"%@", str);
}

// implementation of optional method
- (void)printInteger:(int)num {
    NSLog(@"%d", num);
}

@end

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        
        // create an instance of MyClass
        MyClass *myObject = [[MyClass alloc] init];
        
        // call the required method
        [myObject printString:@"Hello World"];
        
        // check if optional method is implemented before calling it
        if ([myObject respondsToSelector:@selector(printInteger:)]) {
            // call the optional method
            [myObject printInteger:123];
        }
    }
    return 0;
}
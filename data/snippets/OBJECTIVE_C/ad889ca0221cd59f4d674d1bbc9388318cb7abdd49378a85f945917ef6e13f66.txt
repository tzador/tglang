#import <Foundation/Foundation.h> //Importing the Foundation framework

@interface Person : NSObject //Defining a Person class
{
    NSString *firstName; //Instance variable for first name
    NSString *lastName; //Instance variable for last name
}

-(id)initWithFirstName:(NSString *)first lastName:(NSString *)last; //Initializing method for Person class
//Returns an instance of the Person class with the given first and last name

-(NSString *)fullName; //Method to get the full name of the person
//Return type of NSString

@property (nonatomic, copy) NSString *firstName; //Getter and setter method for first name
@property (nonatomic, copy) NSString *lastName; //Getter and setter method for last name

@end

@implementation Person //Implementation of Person class

-(id)initWithFirstName:(NSString *)first lastName:(NSString *)last //Initializing method
{
    self = [super init]; //calling superclass's init method
    if (self){ //Checking if superclass init method was successful
        _firstName = [first copy]; //Copy ensures that the NSMutableString can't be altered externally
        _lastName = [last copy];
    }
    return self; //Returning the instance of the Person class
}

-(NSString *)fullName //Implementation of fullName method
{
    NSString *fullName = [NSString stringWithFormat:@"%@ %@", self.firstName, self.lastName]; //Using string formatting to combine the first and last name into one string
    return fullName; //Returning the full name
}

@end

int main (int argc, const char *argv[])
{
    //Creating an instance of the Person class with the init method
    Person *person = [[Person alloc] initWithFirstName:@"John" lastName:@"Smith"];
    
    //Printing out the full name of the person using the fullName method
    NSLog(@"%@", [person fullName]); //Output: John Smith
    
    //Changing the first name using the setter method
    person.firstName = @"Jane";
    
    //Printing out the updated full name
    NSLog(@"%@", [person fullName]); //Output: Jane Smith
    
    return 0; //Returning 0 to indicate a successful execution
}
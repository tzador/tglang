// Create a class called "Person"
@interface Person : NSObject
// Create properties for "name", "age", and "occupation"
@property (nonatomic, strong) NSString *name;
@property (nonatomic) int age;
@property (nonatomic, strong) NSString *occupation;

// Create a method to introduce the person
- (void)introduce {
    NSLog(@"Hi, my name is %@. I am %d years old and I work as a %@.", self.name, self.age, self.occupation);
}

// Create a method to calculate the person's retirement age based on their occupation
- (int)calculateRetirementAge {
    if ([self.occupation isEqualToString:@"doctor"]) {
        return self.age + 65;
    } else if ([self.occupation isEqualToString:@"teacher"]) {
        return self.age + 60;
    } else if ([self.occupation isEqualToString:@"engineer"]) {
        return self.age + 70;
    } else {
        return self.age + 65;
    }
}

// Create a method to check if the person is eligible to retire
- (BOOL)canRetire {
    if ([self calculateRetirementAge] <= 65) {
        return YES;
    } else {
        return NO;
    }
}

// Create an array of "Person" objects
NSMutableArray *people = [[NSMutableArray alloc] init];
[people addObject:[[Person alloc] initWithName:@"John" age:45 occupation:@"doctor"]];
[people addObject:[[Person alloc] initWithName:@"Jane" age:35 occupation:@"teacher"]];
[people addObject:[[Person alloc] initWithName:@"Jack" age:50 occupation:@"engineer"]];
[people addObject:[[Person alloc] initWithName:@"Jill" age:60 occupation:@"retired"]];

// Loop through the array and print information about each person
for (Person *person in people) {
    [person introduce];
    if ([person canRetire]) {
        NSLog(@"%@ is eligible to retire.", person.name);
    } else {
        NSLog(@"%@ still needs to work for %@ more years.", person.name, @([person calculateRetirementAge] - 65));
    }
}
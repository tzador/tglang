#import <Foundation/Foundation.h> //import the foundation framework

@interface Person : NSObject //define a class named Person that inherits from NSObject
@property (nonatomic, strong) NSString *name; //define a property called name of type NSString
@property (nonatomic, assign) NSInteger age; //define a property called age of type NSInteger
@property (nonatomic, strong) NSMutableArray *hobbies; //define a property called hobbies of type NSMutableArray
@end //end of interface

@implementation Person //implementation of the Person class
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age { //initialize method that takes in a name and age
    self = [super init]; //call the superclass's init method
    if (self) { //if initialization is successful
        self.name = name; //set the name property to the given name
        self.age = age; //set the age property to the given age
        self.hobbies = [NSMutableArray new]; //initialize the hobbies property as a new mutable array
    }
    return self; //return the initialized object
}

- (void)addHobby:(NSString *)hobby { //method to add a hobby to the hobbies property
    [self.hobbies addObject:hobby]; //add the given hobby to the hobbies array
}

- (void)printInformation { //method to print out the person's information
    NSLog(@"Name: %@ Age: %ld", self.name, (long)self.age); //use NSLog to print out the name and age properties
    for (NSString *hobby in self.hobbies) { //loop through each hobby in the hobbies array
        NSLog(@"Hobby: %@", hobby); //print out the hobby
    }
}

@end //end of implementation

int main(int argc, const char * argv[]) { //main method
    @autoreleasepool { //create an autoreleasepool to manage memory
        Person *person = [[Person alloc] initWithName:@"John" age:30]; //create a new Person object with name "John" and age 30
        [person addHobby:@"Reading"]; //add the hobby "Reading" to the person's hobbies array
        [person addHobby:@"Sports"]; //add the hobby "Sports" to the person's hobbies array
        [person printInformation]; //call the printInformation method to print out the person's information
    }
    return 0; //end of main method
}
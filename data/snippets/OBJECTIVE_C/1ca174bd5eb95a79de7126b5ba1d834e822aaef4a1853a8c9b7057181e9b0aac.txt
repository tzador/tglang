// This code snippet creates a custom view with a gradient background
#import <UIKit/UIKit.h> // import the UIKit framework

@interface CustomView : UIView // declare a new class called CustomView that inherits from UIView
@property (nonatomic, strong) CAGradientLayer *gradientLayer; // declare a property for the gradient layer

- (void)setupGradientLayer; // declare a method to setup the gradient layer
@end

@implementation CustomView // implementation of the CustomView class

- (instancetype)initWithFrame:(CGRect)frame { // initialize method for the CustomView class
    self = [super initWithFrame:frame]; // call the superclass's initialization method
    if (self) {
        [self setupGradientLayer]; // call the setupGradientLayer method to create the gradient layer
    }
    return self;
}

- (void)layoutSubviews { // method to handle view updates
    [super layoutSubviews]; // call the superclass's layoutSubviews method
    self.gradientLayer.frame = self.bounds; // set the gradient layer's frame to match the view's bounds
}

- (void)setupGradientLayer { // implementation of the setupGradientLayer method
    self.gradientLayer = [CAGradientLayer layer]; // initialize a new CAGradientLayer and assign it to the property
    self.gradientLayer.colors = @[ // set the colors for the gradient layer
        (id)[UIColor blueColor].CGColor, // starting color at the top of the gradient
        (id)[UIColor redColor].CGColor // ending color at the bottom of the gradient
    ];
    self.gradientLayer.startPoint = CGPointMake(0.5, 0.0); // set the starting point of the gradient to the center top
    self.gradientLayer.endPoint = CGPointMake(0.5, 1.0); // set the ending point of the gradient to the center bottom
    [self.layer insertSublayer:self.gradientLayer atIndex:0]; // insert the gradient layer at the bottom of the view's layer
}

@end

// To use this custom view in your code, you can simply initialize an instance of the CustomView class and add it to your desired view hierarchy:
CustomView *customView = [[CustomView alloc] initWithFrame:CGRectMake(0, 0, 200, 200)]; // initialize a new CustomView with a frame
[self.view addSubview:customView]; // add the customView to the desired view hierarchy
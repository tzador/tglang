//this is a custom class called Person
@interface Person : NSObject //defining the interface of the Person class
@property (nonatomic, strong) NSString *name; // defining a property called name with type NSString
@property (nonatomic, assign) int age; // defining a property called age with type int
@property (nonatomic, strong) NSString *occupation; // defining a property called occupation with type NSString
- (instancetype)initWithName:(NSString *)name age:(int)age occupation:(NSString *)occupation; // defining a custom initializer with name, age, and occupation parameters
- (void)introduceSelf; // defining a method to introduce the person
@end //ending the interface

//implementation of the Person class
@implementation Person //defining the implementation of the Person class
- (instancetype)initWithName:(NSString *)name age:(int)age occupation:(NSString *)occupation { //custom initializer implementation
    self = [super init]; //calling the super class initializer and setting it to self
    if (self) { // checking if self is not nil
        self.name = name; // setting the name property to the passed in name parameter
        self.age = age; // setting the age property to the passed in age parameter
        self.occupation = occupation; // setting the occupation property to the passed in occupation parameter
    }
    return self; //returning the initialized instance of Person
}

- (void)introduceSelf { //implementation of the introduceSelf method
    NSLog(@"Hi, my name is %@, I am %d years old, and I work as a %@.", self.name, self.age, self.occupation); //printing out a formatted introduction using the properties of the person
}

@end //ending the implementation
#import <Foundation/Foundation.h>

// Comments can be added using double slashes

/* Multi-line comments
can also be added
using this syntax */

// Declaring a class named "Person"
@interface Person : NSObject

// Properties of the class
@property (strong, nonatomic) NSString *name; // Name of person
@property (nonatomic) NSInteger age; // Age of person

// Methods of the class
- (void)sayHello; // Method to greet a person
- (void)introduce; // Method to introduce a person
- (void)celebrateBirthday; // Method to increment person's age
@end // End of interface

// Implementation of the "Person" class
@implementation Person

// Method to greet the person with their name
- (void)sayHello
{
    NSLog(@"Hello, my name is %@", self.name);
}

// Method to introduce the person with their name and age
- (void)introduce
{
    NSLog(@"Hi, my name is %@ and I am %ld years old.", self.name, (long)self.age);
}

// Method to celebrate the person's birthday and increment their age by 1
- (void)celebrateBirthday
{
    self.age++;
    NSLog(@"Happy birthday to me! I am now %ld years old.", (long)self.age);
}

@end // End of implementation

// Main function to test the 'Person' class
int main(int argc, const char * argv[])
{
    @autoreleasepool {
        // Creating an instance of the 'Person' class
        Person *person = [[Person alloc] init];
        
        // Setting the values of the properties
        person.name = @"John";
        person.age = 25;
        
        // Calling the 'sayHello' method to greet the person
        [person sayHello];
        
        // Calling the 'introduce' method to introduce the person
        [person introduce];
        
        // Calling the 'celebrateBirthday' method to celebrate the person's birthday
        [person celebrateBirthday];
        
        // Output:
        // Hello, my name is John
        // Hi, my name is John and I am 25 years old.
        // Happy birthday to me! I am now 26 years old.
    }
    return 0;
}
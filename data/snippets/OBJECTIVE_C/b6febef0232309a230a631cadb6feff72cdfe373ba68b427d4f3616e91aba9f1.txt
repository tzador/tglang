//Defining a class
@interface MyClass : NSObject

@property int myInt; //defining a property
@property (nonatomic, strong) NSString *myString; //defining a strong string property
@property (nonatomic, weak) NSObject *myObject; //defining a weak object property

//Defining a method
- (void)myMethodWithInt:(int)myInt andObject:(NSObject *)myObject {
    self.myInt = myInt; //setting the int property to the passed in value
    self.myObject = myObject; // setting the object property to the passed in object
}

@end

//Initializing an instance of the class
MyClass *myClass = [[MyClass alloc] init];

//Calling the method on the instance
[myClass myMethodWithInt:5 andObject:[[NSObject alloc] init]];

//Creating a custom class category
@interface NSObject (MyCustomCategory)

- (void)myCustomMethod;

@end

//Implementing the method in the category
@implementation NSObject (MyCustomCategory)

- (void)myCustomMethod {
    NSLog(@"My custom method was called");
}

@end

//Adding an instance variable inside the category
#import <objc/runtime.h>

static char myCharKey; //creating a unique key for the instance variable

@interface NSObject (MyCustomCategory)

@property (nonatomic, strong) NSString *myString; //defining a strong string property

@end

@implementation NSObject (MyCustomCategory)

- (void)setMyString:(NSString *)myString { //custom setter method
    objc_setAssociatedObject(self, &myCharKey, myString, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

- (NSString *)myString { //custom getter method
    return objc_getAssociatedObject(self, &myCharKey);
}

@end
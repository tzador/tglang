#import <Foundation/Foundation.h>

//Define protocol with required methods
@protocol PersonProtocol <NSObject>
@required
- (NSString *)getName;
- (void)performActionWithObject:(id)object;
@end

//Implement protocol in a class
@interface Person : NSObject <PersonProtocol>
//Properties
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSString *occupation;

//Initializer method
- (id)initWithName:(NSString *)name andOccupation:(NSString *)occupation;

//Methods
- (NSString *)getName {
    return _name;
}

- (void)performActionWithObject:(id)object {
    if ([object isKindOfClass:[NSNumber class]]) {
        NSNumber *number = (NSNumber *)object;
        NSLog(@"%@ is %@ years old", _name, number);
    } else if ([object isKindOfClass:[NSString class]]) {
        NSString *string = (NSString *)object;
        NSLog(@"%@ is %@ by profession", _name, string);
    } else {
        NSLog(@"Invalid object");
    }
}

@end

//Create instance of Person class
Person *person = [[Person alloc] initWithName:@"John" andOccupation:@"Doctor"];

//Call protocol methods on instance
NSString *name = [person getName];
NSLog(@"My name is %@", name);
// Output: My name is John

NSNumber *age = [NSNumber numberWithInt:27];
[person performActionWithObject:age];
// Output: John is 27 years old

NSString *profession = @"Engineer";
[person performActionWithObject:profession];
// Output: John is Engineer by profession
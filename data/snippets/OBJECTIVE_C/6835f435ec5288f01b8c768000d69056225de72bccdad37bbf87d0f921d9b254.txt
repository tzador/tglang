// Class declaration for a custom UIViewController
@interface CustomViewController : UIViewController

// Property declaration for a UILabel instance
@property (strong, nonatomic) UILabel *titleLabel;

// Property declaration for a UIButton instance
@property (strong, nonatomic) UIButton *actionButton;

// Method declaration for initializing the view controller with a custom title
- (instancetype)initWithTitle:(NSString *)title;

// Method declaration for handling an action when the button is pressed
- (void)buttonPressed;

@end

// Implementation of the custom UIViewController class
@implementation CustomViewController

// Override of the default init method
- (instancetype)init
{
    // Calls the superclass' init method
    self = [super init]; 
    if (self) {
        // Custom initialization code here
    }
    return self;
}

// Custom initializer that sets the title of the view controller
- (instancetype)initWithTitle:(NSString *)title
{
    // Calls the superclass' init method
    self = [super init]; 
    if (self) {
        // Sets the title of the view controller
        self.title = title;
    }
    return self;
}

// Override of the default viewDidLoad method
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    // Creates a new UILabel instance with a frame of (0, 0, 200, 50)
    self.titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 200, 50)];
    
    // Sets the text of the label
    self.titleLabel.text = self.title;
    
    // Adds the label as a subview to the view controller's view
    [self.view addSubview:self.titleLabel];
    
    // Creates a new UIButton instance with a frame of (50, 100, 200, 50)
    self.actionButton = [[UIButton alloc] initWithFrame:CGRectMake(50, 100, 200, 50)];
    
    // Sets the title of the button
    [self.actionButton setTitle:@"Press Me!" forState:UIControlStateNormal];
    
    // Sets the action for when the button is pressed
    [self.actionButton addTarget:self action:@selector(buttonPressed) forControlEvents:UIControlEventTouchUpInside];
    
    // Adds the button as a subview to the view controller's view
    [self.view addSubview:self.actionButton];
}

// Method that is called when the button is pressed
- (void)buttonPressed
{
    // Displays an alert view with the view controller's title as the title and a message
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:self.title message:@"Button Pressed!" preferredStyle:UIAlertControllerStyleAlert];
    
    // Adds an OK button to the alert view
    [alert addAction:[UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:nil]];
    
    // Presents the alert view
    [self presentViewController:alert animated:YES completion:nil];
}

@end
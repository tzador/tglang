// This is a complex code snippet in OBJECTIVE_C

#import <Foundation/Foundation.h> // import the Foundation framework

// Define a custom class called "Car"
@interface Car : NSObject // declare the interface with the superclass NSObject
@property (nonatomic) NSString *make; // define a property "make" with datatype NSString
@property (nonatomic) NSString *model; // define a property "model" with datatype NSString
@property (nonatomic) NSString *color; // define a property "color" with datatype NSString
@property (nonatomic) int year; // define a property "year" with datatype int
@property (nonatomic) BOOL isRunning; // define a property "isRunning" with datatype BOOL
- (instancetype)initWithMake:(NSString*)make model:(NSString*)model color:(NSString*)color year:(int)year; // define an initializer method with parameters
- (void)startEngine; // define a method "startEngine" with no parameters and void return type
- (void)drive:(int)speed; // define a method "drive" with parameter "speed" of type int and void return type
@end // end of interface

// Implement the methods of the Car class
@implementation Car // start implementation
- (instancetype)initWithMake:(NSString*)make model:(NSString*)model color:(NSString*)color year:(int)year // initialize method definition
{
    self = [super init]; // call superclass initializer and assign it to self variable
    if (self) { // if initialization is successful
        _make = make; // set property "make" to value of parameter "make"
        _model = model; // set property "model" to value of parameter "model"
        _color = color; // set property "color" to value of parameter "color"
        _year = year; // set property "year" to value of parameter "year"
        _isRunning = NO; // set property "isRunning" to default value of "NO"
    }
    return self; // return self variable
}
- (void)startEngine // startEngine method definition
{
    self.isRunning = YES; // set property "isRunning" to "YES"
    NSLog(@"The %@ %@ is now running.", self.make, self.model); // log a message with the values of the "make" and "model" properties
}
- (void)drive:(int)speed // drive method definition
{
    if (self.isRunning) { // if car is running
        NSLog(@"The %@ %@ is driving at %d mph.", self.make, self.model, speed); // log a message with the values of the "make", "model" and "speed" parameters
    }
    else { // if car is not running
        NSLog(@"The %@ %@ is not able to drive because the engine is not started.", self.make, self.model); // log a message with the values of the "make" and "model" properties
    }
}
@end // end of implementation

int main(int argc, const char * argv[]) // main function definition
{
    @autoreleasepool { // create autorelease pool
        Car *myCar = [[Car alloc] initWithMake:@"Toyota" model:@"Camry" color:@"Silver" year:2021]; // create instance of Car class with specified values
        [myCar startEngine]; // call startEngine method
        [myCar drive:50]; // call drive method with speed parameter
    }
    return 0; // return 0 as success
}
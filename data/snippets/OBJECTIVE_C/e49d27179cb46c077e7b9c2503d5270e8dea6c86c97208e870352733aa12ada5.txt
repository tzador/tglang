// Objective-C class for a bank account
// Header file

#import <Foundation/Foundation.h>

// Creating a public class named BankAccount
@interface BankAccount : NSObject 

@property (nonatomic, strong) NSString *accountNumber; // Declaring a property for account number
@property (nonatomic, strong) NSString *accountHolderName; // Declaring a property for account holder name
@property (nonatomic, assign) float balance; // Declaring a property for account balance

// Method to deposit money into the account
- (void)depositAmount:(float)amount; 

// Method to withdraw money from the account
- (void)withdrawAmount:(float)amount;

@end

// Implementation file

#import "BankAccount.h"

@implementation BankAccount

// Implementing the deposit method
- (void)depositAmount:(float)amount {
    self.balance += amount; // Adding the deposited amount to the balance
    NSLog(@"%@ deposited into account %@", @(amount), self.accountNumber); // Printing a message to the console
}

// Implementing the withdraw method
- (void)withdrawAmount:(float)amount {
    if (self.balance >= amount) { // Checking if there are sufficient funds in the account
        self.balance -= amount; // Subtracting the withdrawn amount from the balance
        NSLog(@"%@ withdrawn from account %@", @(amount), self.accountNumber); // Printing a message to the console
    } else {
        NSLog(@"Withdrawal amount exceeds account balance."); // Printing an error message if there are insufficient funds
    }
}

@end

// Main program
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        BankAccount *account = [[BankAccount alloc] init]; // Creating a new instance of BankAccount class
        account.accountNumber = @"123456789"; // Setting account number
        account.accountHolderName = @"John Doe"; // Setting account holder name
        account.balance = 5000.00; // Setting initial balance
        
        NSLog(@"Account holder %@ has account %@ with balance of %@", 
              account.accountHolderName, account.accountNumber, @(account.balance)); // Printing the account details to the console
        
        [account depositAmount:1000.00]; // Depositing an amount of 1000.00 into the account
        [account withdrawAmount:2500.00]; // Withdrawing an amount of 2500.00 from the account
        [account withdrawAmount:4000.00]; // Attempting to withdraw an amount of 4000.00 from the account (which will result in an error)
    }
}
//Declaring a class named "Student"
@interface Student : NSObject

//Instance variables/properties of the class
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) int age;
@property (nonatomic, assign) float gpa;
@property (nonatomic, assign) BOOL isEnrolled;

//Class methods with return types
+(void)setMaximumGPA:(float)maxGPA;
+(float)getMaximumGPA;
+(BOOL)checkEnrollmentStatus;

//Initializing method for the class
-(instancetype)initWithName:(NSString *)name age:(int)age gpa:(float)gpa;

@end

@implementation Student

//Initializing method implementation
-(instancetype)initWithName:(NSString *)name age:(int)age gpa:(float)gpa {
    self = [super init];
    if (self) {
        self.name = name;
        self.age = age;
        self.gpa = gpa;
        self.isEnrolled = NO;
    }
    return self;
}

//Class method implementation
+(void)setMaximumGPA:(float)maxGPA {
    //Some code here to set maximum GPA
}

//Class method implementation
+(float)getMaximumGPA {
    //Some code here to get maximum GPA
}

//Class method implementation
+(BOOL)checkEnrollmentStatus {
    //Some code here to check enrollment status
}

@end

//Main function where the Student class is used
int main(int argc, char* argv[]) {

//Creating instances of the Student class
Student *student1 = [[Student alloc] initWithName:@"John" age:21 gpa:3.5];
Student *student2 = [[Student alloc] initWithName:@"Jane" age:20 gpa:3.8];

NSLog(@"Student 1's information:");
NSLog(@"Name: %@", student1.name);
NSLog(@"Age: %d", student1.age);
NSLog(@"GPA: %.2f", student1.gpa);

NSLog(@"Student 2's information:");
NSLog(@"Name: %@", student2.name);
NSLog(@"Age: %d", student2.age);
NSLog(@"GPA: %.2f", student2.gpa);

//Using a class method to set the maximum GPA
[Student setMaximumGPA:4.0];

//Using a class method to get the maximum GPA
float maxGPA = [Student getMaximumGPA];

//Using a class method to check enrollment status
BOOL isEnrolled = [Student checkEnrollmentStatus];

//Condition to check and enroll student 1 if their GPA is above the maximum GPA
if (student1.gpa > maxGPA && !isEnrolled) {
    student1.isEnrolled = YES;
}

//Condition to check and enroll student2 if their GPA is above the maximum GPA
if (student2.gpa > maxGPA && !isEnrolled) {
    student2.isEnrolled = YES;
}

NSLog(@"Student 1's enrollment status: %@", student1.isEnrolled ? @"Enrolled" : @"Not Enrolled");
NSLog(@"Student 2's enrollment status: %@", student2.isEnrolled ? @"Enrolled" : @"Not Enrolled");

return 0;
}
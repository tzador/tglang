// Declare variable of type NSNumber
NSNumber *myNumber = @42;

// Declare an NSArray with string objects
NSArray *myStringArray = @[@"Objective-C", @"is", @"my", @"favorite", @"language"];

// Loop through array and print each element
for (NSString *str in myStringArray) {
    NSLog(@"%@", str);
}

// Declare a dictionary with key-value pairs of NSString and NSNumber
NSDictionary *myDictionary = @{@"Name": @"John Smith", @"Age": @35, @"Salary": @65000};

// Loop through dictionary and print each pair
for (NSString *key in myDictionary) {
    NSLog(@"Key: %@, Value: %@", key, myDictionary[key]);
}

// Create a custom class called Player
@interface Player : NSObject

// Declare properties for the class
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) int jerseyNumber;
@property (nonatomic, strong) NSString *position;

// Declare initialization method for the class
- (instancetype)initWithName:(NSString *)name jerseyNumber:(int)jerseyNumber position:(NSString *)position;

@end

// Implement the initialization method
@implementation Player

- (instancetype)initWithName:(NSString *)name jerseyNumber:(int)jerseyNumber position:(NSString *)position {
    self = [super init];
    if (self) {
        self.name = name;
        self.jerseyNumber = jerseyNumber;
        self.position = position;
    }
    return self;
}

@end

// Create an instance of the Player class and initialize with method
Player *myPlayer = [[Player alloc] initWithName:@"LeBron James" jerseyNumber:23 position:@"Small Forward"];

// Print values of properties for the instance
NSLog(@"Name: %@, Jersey Number: %d, Position: %@", myPlayer.name, myPlayer.jerseyNumber, myPlayer.position);
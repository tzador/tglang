#import <Foundation/Foundation.h> // Import Foundation framework
@class Person; // Declare Person class
@protocol Greetable <NSObject> // Declare protocol Greetable

@required // Required methods for protocol
- (NSString *)greet; // Declare required method greet
- (void)introduceTo:(Person *)person; // Declare required method introduceTo:

@optional // Optional methods for protocol
- (void)makeSmallTalk; // Declare optional method makeSmallTalk

@end // End protocol declaration

@interface Person : NSObject <Greetable> // Declare Person class as conforming to Greetable protocol

@property (nonatomic, strong) NSString *name; // Declare name property

- (instancetype)initWithName:(NSString *)name; // Declare initializer with name parameter

@end // End Person interface declaration

@implementation Person // Start implementation of Person class

- (instancetype)initWithName:(NSString *)name { // Implementation of initializer
    self = [super init]; // Call super init
    if (self) {
        self.name = name; // Set name property
    }
    return self; // Return self
}

- (NSString *)greet { // Implementation of required method greet
    return [NSString stringWithFormat:@"Hello, my name is %@.", self.name]; // Return greeting with name
}

- (void)introduceTo:(Person *)person { // Implementation of required method introduceTo:
    NSLog(@"Nice to meet you, %@. My name is %@.", person.name, self.name); // Log introduction statement
}

- (void)makeSmallTalk { // Implementation of optional method makeSmallTalk
    NSLog(@"Can you believe this weather?"); // Log small talk statement
}

@end // End implementation of Person class

int main(int argc, const char * argv[]) { // Main function
    @autoreleasepool { // Autorelease pool for memory management
        Person *person1 = [[Person alloc] initWithName:@"John"]; // Initialize person1 with name John
        Person *person2 = [[Person alloc] initWithName:@"Jane"]; // Initialize person2 with name Jane
        
        [person1 greet]; // Call greet method on person1
        [person2 greet]; // Call greet method on person2
        
        [person1 introduceTo:person2]; // Call introduceTo: method on person1, passing in person2 as parameter
        [person2 makeSmallTalk]; // Call makeSmallTalk method on person2
    }
    return 0; // Exit main function with success
}
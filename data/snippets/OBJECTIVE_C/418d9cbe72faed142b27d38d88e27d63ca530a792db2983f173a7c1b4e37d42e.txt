// This is a complex code snippet in OBJECTIVE_C that uses multiple classes and functions

#import <Foundation/Foundation.h> // importing the Foundation framework

@interface Person : NSObject // defining a class called Person
@property (nonatomic, strong) NSString *name;  // declaring a property of type NSString called 'name'
@property (nonatomic) int age; // declaring a property of type int called 'age'

- (instancetype)initWithName:(NSString *)name andAge:(int)age; // declaring a custom initializer method

- (void)introduce; // declaring a method to introduce the Person object

@end

@implementation Person // implementing the Person class
- (instancetype)initWithName:(NSString *)name andAge:(int)age // implementing the custom initializer method
{
    self = [super init]; // calling the super class's initialization method
    if (self) {
        self.name = name; // setting the 'name' property to the value passed as parameter
        self.age = age; // setting the 'age' property to the value passed as parameter
    }
    return self; // returning the initialized Person object
}

- (void)introduce // implementing the introduce method
{
    NSLog(@"Hi, my name is %@ and I am %d years old.", self.name, self.age); // printing a message with the object's properties
}

@end

int main(int argc, const char * argv[]) { // defining the main function
    @autoreleasepool {
        Person *person = [[Person alloc]initWithName:@"John" andAge:25]; // creating a Person object using the custom initializer method
        [person introduce]; // calling the introduce method on the Person object
    }
    return 0; // exiting the program
}
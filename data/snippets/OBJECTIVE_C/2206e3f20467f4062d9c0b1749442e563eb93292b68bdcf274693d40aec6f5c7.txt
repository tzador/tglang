// Create an NSMutableArray object with initial capacity of 10
NSMutableArray *myArray = [[NSMutableArray alloc]initWithCapacity:10];

// Add strings to the array
[myArray addObject:@"Hello"];
[myArray addObject:@"World"];

// Add a dictionary to the array
NSDictionary *myDictionary = @{@"Key1":@"Value1", @"Key2":@"Value2"};
[myArray addObject:myDictionary];

// Create a new array with the same contents as myArray
NSMutableArray *newArray = [NSMutableArray arrayWithArray:myArray];

// Insert a new string at index 1
[newArray insertObject:@"Goodbye" atIndex:1];

// Remove the object at index 2
[newArray removeObjectAtIndex:2];

// Loop through the array and print out all objects
for (int i = 0; i < newArray.count; i++) {
    NSLog(@"%@", newArray[i]);
}

// Sort the array in ascending order
[newArray sortUsingSelector:@selector(localizedCaseInsensitiveCompare:)];

// Convert the array to a string with commas separating each element
NSString *arrayString = [newArray componentsJoinedByString:@","];

// Create a new string by combining two strings from the array
NSString *combinedString = [NSString stringWithFormat:@"%@ %@", newArray[0], newArray[1]];

// Reverse the order of the elements in the array
[newArray reverseObjectEnumerator];

// Set a new object at a specific index
[newArray replaceObjectAtIndex:0 withObject:@"Programming"];

// Check if the array contains a specific object
if ([newArray containsObject:@"World"]) {
    NSLog(@"The array contains 'World'");
}

// Clear all objects from the array
[newArray removeAllObjects];

// Release memory allocated for the arrays
[myArray release];
[newArray release];
// Declare a custom class named "Person"
@interface Person : NSObject

// Properties
@property (strong, nonatomic) NSString *name;
@property (nonatomic) NSInteger age;

// Initializer method
- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age;

// Class method to create an instance of the Person class
+ (instancetype)createWithName:(NSString *)name andAge:(NSInteger)age;

// Instance method to print the person's information
- (void)printInfo;

// Implementation of the initializer method
@implementation Person

- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age {
    // Initialize the object
    self = [super init];
    
    // If the object was successfully initialized
    if (self) {
        // Set the name and age properties
        self.name = name;
        self.age = age;
    }
    
    return self;
}

// Implementation of the class method
+ (instancetype)createWithName:(NSString *)name andAge:(NSInteger)age {
    // Create an instance of the person class using alloc and initWithName methods
    Person *person = [[Person alloc] initWithName:name andAge:age];
    
    // Return the created instance
    return person;
}

// Implementation of the printInfo method
- (void)printInfo {
    // Print the person's information to the console
    NSLog(@"Name: %@, Age: %d", self.name, self.age);
}

@end

// Using the Person class
// Create an instance of the Person class using the createWithName class method
Person *person = [Person createWithName:@"John" andAge:25];

// Call the printInfo method to print the person's information
[person printInfo];

// Output: Name: John, Age: 25
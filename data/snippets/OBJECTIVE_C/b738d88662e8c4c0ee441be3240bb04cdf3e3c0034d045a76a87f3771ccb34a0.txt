//This is a class declaration
//It defines a class called Person
@interface Person: NSObject

//These are properties of the Person class
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSDate *birthdate;
@property (nonatomic, assign) NSInteger age;

//This is a method declaration
//It calculates the age of the person based on their birthdate
- (void)calculateAge;

@end

@implementation Person

//This is the implementation of the calculateAge method
- (void)calculateAge {
    //Create an instance of NSCalendar to perform date calculations
    NSCalendar *calendar = [[NSCalendar alloc] initWithCalendarIdentifier:NSCalendarIdentifierGregorian];
    
    //Get the current date
    NSDate *currentDate = [NSDate date];
    
    //Define components for date calculations
    NSDateComponents *birthComponents = [calendar components:NSCalendarUnitYear | NSCalendarUnitMonth | NSCalendarUnitDay fromDate:self.birthdate];
    NSDateComponents *currentComponents = [calendar components:NSCalendarUnitYear | NSCalendarUnitMonth | NSCalendarUnitDay fromDate:currentDate];
    
    //Calculate age by comparing the years and adjusting for any remaining months or days
    self.age = [currentComponents year] - [birthComponents year];
    if ([currentComponents month] < [birthComponents month]) {
        self.age--;
    } else if ([currentComponents month] == [birthComponents month]) {
        if ([currentComponents day] < [birthComponents day]) {
            self.age--;
        }
    }
}

@end

//This is an instance of the Person class
Person *person = [[Person alloc] init];

//Set the properties for the person
person.name = @"John Smith";
person.birthdate = [NSDate dateWithTimeIntervalSince1970:0];

//Call the calculateAge method to get the age of the person
[person calculateAge];

//Print the person's name and age
NSLog(@"%@ is %ld years old.", person.name, (long)person.age);
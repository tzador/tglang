#import<Foundation/Foundation.h> //importing Foundation framework
#import<UIKit/UIKit.h> //importing UIKit framework

@interface Person : NSObject //defining a class named Person
{
  NSString *name; //declaring a string variable named name
  int age; //declaring an integer variable named age
}

@property (nonatomic, strong) NSString *name; //declaring a property for the name variable
@property (nonatomic, assign) int age; //declaring a property for the age variable

- (instancetype)initWithName:(NSString *)name andAge:(int)age; //declaring a custom initializer method

- (void)sayHello; //declaring a method to say hello

- (void)greet:(NSString *)personName; //declaring a method to greet a specific person

@end

@implementation Person //implementing the Person class

- (instancetype)initWithName:(NSString *)name andAge:(int)age //implementing the custom initializer method
{
  self = [super init]; //calling the superclass initializer
  if (self) {
    self.name = name; //assigning the name argument to the name property
    self.age = age; //assigning the age argument to the age property
  }
  return self;
}

- (void)sayHello //implementing the sayHello method
{
  NSLog(@"Hello, my name is %@ and I am %d years old!", self.name, self.age); //printing a greeting with the person's name and age
}

- (void)greet:(NSString *)personName //implementing the greet method
{
  NSLog(@"Hello %@, my name is %@!", personName, self.name); //greeting the person with their name and introducing oneself
}

@end

int main() //main function
{
  Person *john = [[Person alloc] initWithName:@"John" andAge:25]; //initializing a Person object with the name John and age 25
  [john sayHello]; //calling the sayHello method on the john object
  [john greet:@"Mary"]; //calling the greet method on the john object, greeting Mary

  return 0;
}
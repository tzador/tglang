#import <Foundation/Foundation.h>  // Imports the Foundation framework

// Defining a Class called Person, which inherits from NSObject
@interface Person : NSObject {  // `@interface` keyword is used to declare a class
    NSString *name;  // Instance variable to store person's name
    int age;  // Instance variable to store person's age
}

@property (nonatomic, strong) NSString *name;  // `@property` declaration for name variable
@property (nonatomic) int age;  // `@property` declaration for age variable

- (instancetype)initWithName:(NSString *)n age:(int)a;  // Instance method declaration
- (void)printInfo;  // Instance method declaration

@end  // `@end` keyword marks the end of the interface

// Implementation of the Person class
@implementation Person  // `@implementation` keyword is used to implement a class

// Custom initializer for the Person class
- (instancetype)initWithName:(NSString *)n age:(int)a {
    self = [super init];  // Calls superclass initializer, in this case, NSObject init
    if (self) {
        self.name = n;  // Sets the person's name
        self.age = a;  // Sets the person's age
    }
    return self;  // Returns the initialized Person object
}

// Instance method to print person's info
- (void)printInfo {
    NSLog(@"Name: %@\nAge: %d", self.name, self.age);  // Logs the person's name and age
}

@end  // `@end` keyword marks the end of the implementation

// `main` function, the starting point of the Objective-C program
int main(int argc, const char * argv[]) {
    @autoreleasepool {  // `@autoreleasepool` keyword is used for automatic memory management
        // Creates a new Person object using the initializer
        Person *person = [[Person alloc] initWithName:@"John" age:25];
        [person printInfo];  // Calls the printInfo method on the Person object
    }
    return 0;  // Returns 0 to indicate successful program execution
}
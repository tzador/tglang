// Declaring a class named Person
@interface Person : NSObject

@property (nonatomic, strong) NSString *name; // Property for storing person's name
@property (nonatomic, assign) NSInteger age; // Property for storing person's age
@property (nonatomic, strong) NSArray *hobbies; // Property for storing person's hobbies (array of strings)

- (instancetype)initWithName:(NSString *)name age:(NSInteger)age hobbies:(NSArray *)hobbies; // Initialization method for Person class

@end

// Implementation of Person class
@implementation Person

// Implementation of initialization method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age hobbies:(NSArray *)hobbies {
    self = [super init]; // Calling super class initializer
    
    if (self) {
        self.name = name; // Initializing name property
        self.age = age; // Initializing age property
        self.hobbies = hobbies; // Initializing hobbies property
    }
    
    return self; // Returning initialized object
}

@end

int main(int argc, char * argv[]) {
    Person *person1 = [[Person alloc] initWithName:@"John" age:25 hobbies:@[@"reading", @"coding", @"hiking"]]; // Initializing person object with name, age, and hobbies
    Person *person2 = [[Person alloc] init]; // Initializing empty person object
    
    person2.name = @"Jane"; // Setting name property
    person2.age = 30; // Setting age property
    person2.hobbies = @[@"painting", @"baking", @"playing guitar"]; // Setting hobbies property
    
    NSLog(@"Name: %@, Age: %ld, Hobbies: %@", person1.name, (long)person1.age, person1.hobbies); // Printing person1's information
    NSLog(@"Name: %@, Age: %ld, Hobbies: %@", person2.name, (long)person2.age, person2.hobbies); // Printing person2's information
    
    /* Output:
        Name: John, Age: 25, Hobbies: (
            reading,
            coding,
            hiking
        )
        Name: Jane, Age: 30, Hobbies: (
            painting,
            baking,
            playing guitar
        )
    */
    
    return 0;
}
#pragma mark - NSObject
// This is a preprocessor directive that creates a new section in the code

@interface Person : NSObject
// This is an interface declaration for the Person class, which inherits from the NSObject class

@property (nonatomic, strong) NSString *name;
// This is a property declaration for the name variable, which is a NSString object that is strongly held

@property (nonatomic, assign) NSInteger age;
// This is a property declaration for the age variable, which is an integer that is assigned a value

- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age;
// This is an instance method declaration for the initWithName:andAge: method, which initializes a Person object with a name and age

- (void)sayHello;
// This is an instance method declaration for the sayHello method, which prints a greeting message

@end
// This marks the end of the interface declaration for the Person class

@implementation Person
// This is an implementation declaration for the Person class, where the methods declared in the interface are defined

- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age {
    // This is the implementation for the initWithName:andAge: method
    self = [super init];
    // This calls the init method of the superclass (NSObject) and assigns it to the self variable, which represents the current instance of the Person class
    if (self) {
        self.name = name;
        self.age = age;
        // This assigns the passed in values to the name and age properties of the Person class
    }
    return self;
    // This returns the initialized instance of the Person class
}

- (void)sayHello {
    // This is the implementation for the sayHello method
    NSLog(@"Hello, my name is %@ and I am %li years old.", self.name, (long)self.age);
    // This uses the NSLog function to print a greeting message, using the current instance's name and age properties
}

@end
// This marks the end of the implementation for the Person class

int main(int argc, const char * argv[]) {
    // This is the main function of the program
    @autoreleasepool {
        // This is an autoreleasepool, which manages memory for the current scope
        Person *person = [[Person alloc] initWithName:@"John" andAge:30];
        // This creates a new instance of the Person class using the initWithName:andAge: method, passing in the values "John" and 30
        [person sayHello];
        // This calls the sayHello method on the person instance, which prints a greeting message
    }
    return 0;
    // This returns the exit code 0, indicating the program ran successfully
}
//Declare complex data type
    @interface Book : NSObject //Declare Book class as a subclass of NSObject
    @property (strong, nonatomic) NSString *title; //Declare property for title
    @property (strong, nonatomic) NSString *author; //Declare property for author
    @property (nonatomic, getter=isAvailable) BOOL available; //Declare property for availability with getter method
    - (instancetype)initWithTitle:(NSString *)title andAuthor:(NSString *)author; //Declare initializer method
    @end //End interface declaration
    
    //Implement complex data type
    @implementation Book //Begin implementation
    - (instancetype)initWithTitle:(NSString *)title andAuthor:(NSString *)author //Implementation of initializer
    {
        self = [super init]; //Init superclass
        if (self) { //If self exists
            _title = title; //Set property for title
            _author = author; //Set property for author
            _available = YES; //Set property for availability to true by default
        }
        return self; //Return self
    }
    
    -(void)setAvailable:(BOOL)available //Setter method for availability property
    {
        if (available == NO) { //If availability is set to false
            NSLog(@"This book is currently unavailable"); //Print message
        }
        _available = available; //Set property for availability
    }
    
    @end //End implementation
//Description: This snippet creates a complex object with properties and methods

//Header file:

@interface ComplexObject : NSObject

//property declaration
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) int age;
@property (nonatomic, assign) float height;

//method declaration
-(void)greetWithName:(NSString *)name;
-(void)changeAgeBy:(int)years;
-(void)calculateHeightRatio;

@end

//Implementation file:

@implementation ComplexObject

//initializer method
-(instancetype)initWithName:(NSString *)name age:(int)age height:(float)height {
    self = [super init];
    if (self) {
        self.name = name;
        self.age = age;
        self.height = height;
    }
    return self;
}

//method to greet with a custom name
-(void)greetWithName:(NSString *)name {
    NSLog(@"Hello, %@!", name);
}

//method to modify age by a specified number of years
-(void)changeAgeBy:(int)years {
    self.age += years;
    NSLog(@"New age: %d", self.age);
}

//method to calculate the ratio of height to age
-(void)calculateHeightRatio {
    float ratio = self.height / self.age;
    NSLog(@"Height to age ratio: %f", ratio);
}

@end

//Code snippet usage:

//creating a complex object with given properties
ComplexObject *myObject = [[ComplexObject alloc] initWithName:@"John" age:30 height:1.75];

//greeting with a custom name
[myObject greetWithName:@"Jane"];

//changing age by 5 years
[myObject changeAgeBy:5];

//calculating height ratio
[myObject calculateHeightRatio];
// This is a complex code snippet in Objective-C
#import <Foundation/Foundation.h> // header file for Foundation framework
#include <stdio.h> // standard input/output library

@interface Person : NSObject // declaring a class named Person
@property NSString *name; // declaring a property 'name' of type NSString
@property int age; // declaring a property 'age' of type int

-(void)sayName; // declaring a method 'sayName' with return type void
-(void)updateAge:(int)newAge; // declaring a method 'updateAge' with a parameter of type int

@end // ending declaration of Person class

@implementation Person // implementing the Person class
-(void)sayName // defining the sayName method
{
    NSLog(@"Hello, my name is %@", self.name); // printing out a message with the value of the 'name' property
}
-(void)updateAge:(int)newAge // defining the updateAge method with a parameter
{
    if (newAge >= 0) // checking if the newAge parameter is a positive integer
    {
        self.age = newAge; // setting the value of the 'age' property to the value of the newAge parameter
    }
    else // if the newAge parameter is not a positive integer
    {
        NSLog(@"Invalid age"); // printing out a message
    }
}
@end // ending the implementation of the Person class

int main() {
    @autoreleasepool { // creating an autorelease pool for memory management
        Person *person1 = [[Person alloc] init]; // creating an instance of the Person class
        [person1 setName:@"John"]; // setting the value of the 'name' property to "John"
        [person1 setAge:25]; // setting the value of the 'age' property to 25
        [person1 sayName]; // calling the sayName method on the person1 instance
        [person1 updateAge:30]; // calling the updateAge method on the person1 instance with the new value of 30
        [person1 sayName]; // calling the sayName method again to print the updated name and age
    }
    return 0; // terminating the program
}
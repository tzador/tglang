// This code snippet creates a custom UIView and adds it as a subview to an existing view

// Importing necessary frameworks
#import <UIKit/UIKit.h>

// Defining a custom UIView subclass with a border and gradient background
@interface CustomView : UIView
@property (nonatomic, strong) UIColor *borderColor; // the color of the view's border
@property (nonatomic, strong) UIColor *gradientStartColor; // the start color of the view's gradient background
@property (nonatomic, strong) UIColor *gradientEndColor; // the end color of the view's gradient background
@end

@implementation CustomView

- (instancetype)initWithFrame:(CGRect)frame {
    self = [super initWithFrame:frame];
    if (self) {
        // set default values for border and gradient colors
        _borderColor = [UIColor blackColor];
        _gradientStartColor = [UIColor whiteColor];
        _gradientEndColor = [UIColor lightGrayColor];
    }
    return self;
}

- (void)drawRect:(CGRect)rect {
    // get the current graphics context
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    // create a gradient color space
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    
    // define the start and end colors for the gradient using the properties set by the user
    NSArray *colors = @[(__bridge id)self.gradientStartColor.CGColor, (__bridge id)self.gradientEndColor.CGColor];
    
    // create the gradient object
    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (CFArrayRef)colors, NULL);
    
    // define the start and end points for the gradient
    CGPoint startPoint = CGPointMake(0, 0);
    CGPoint endPoint = CGPointMake(self.frame.size.width, self.frame.size.height);
    
    // draw the gradient background
    CGContextDrawLinearGradient(context, gradient, startPoint, endPoint, kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
    
    // draw the border
    CGContextSetStrokeColorWithColor(context, self.borderColor.CGColor);
    CGContextSetLineWidth(context, 2.0);
    CGContextStrokeRect(context, self.bounds);
    
    // release the memory used by the gradient, colors, and color space objects
    CGGradientRelease(gradient);
    CGColorSpaceRelease(colorSpace);
}

@end

// Creating an instance of the custom UIView class and adding it as a subview to an existing view
CustomView *myCustomView = [[CustomView alloc] initWithFrame:CGRectMake(50, 50, 100, 50)];
myCustomView.borderColor = [UIColor blueColor]; // setting the border color to blue
myCustomView.gradientStartColor = [UIColor redColor]; // setting the gradient start color to red
myCustomView.gradientEndColor = [UIColor yellowColor]; // setting the gradient end color to yellow
[self.view addSubview:myCustomView]; // adding the custom view as a subview to an existing view
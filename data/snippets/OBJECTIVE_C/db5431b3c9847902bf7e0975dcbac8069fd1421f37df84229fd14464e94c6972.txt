#import <Foundation/Foundation.h> // Importing the Foundation framework
#define PI 3.14159 // Defining a constant
@interface Circle : NSObject
@property (nonatomic, assign) float radius; // Declaring a property
@property (nonatomic, assign, readonly) float area; // Declaring a readonly property
@property (nonatomic, assign, readonly) float circumference;
- (id)initWithRadius:(float)radius; // Initializing method
- (float)calculateArea; // Method for calculating area
- (float)calculateCircumference; // Method for calculating circumference
@end

@implementation Circle
- (id)initWithRadius:(float)radius
{
    if (self = [super init]) {
        self.radius = radius; // Setting the value for radius property
    }
    return self;
}

- (float)calculateArea
{
    return PI * self.radius * self.radius; // Calculating area using the constant PI and the radius property
}

- (float)calculateCircumference
{
    return 2 * PI * self.radius; // Calculating circumference using the constant PI and the radius property
}

- (float)area
{
    return [self calculateArea]; // Returning the calculated area
}

- (float)circumference
{
    return [self calculateCircumference]; // Returning the calculated circumference
}
@end

int main(int argc, const char * argv[])
{
    @autoreleasepool {
        Circle *myCircle = [[Circle alloc] initWithRadius:5.0]; // Creating a new Circle object with radius 5.0
        NSLog(@"The calculated area is: %f", myCircle.area); // Printing the calculated area using the area property
        NSLog(@"The calculated circumference is: %f", myCircle.circumference); // Printing the calculated circumference using the circumference property
    }
    return 0;
} // The main function where the Circle object is created and its properties are used for calculating and printing the area and circumference.
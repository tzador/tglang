#import <Foundation/Foundation.h> //Imports the Foundation framework

//Interface (Class declaration)
@interface Student: NSObject //Creates a class named Student which is a subclass of the NSObject class
{
    NSString* firstName; //Declares a private property of type NSString named firstName
    NSString* lastName; //Declares a private property of type NSString named lastName
}
@property(nonatomic, strong) NSString* fullName; //Declares a public property of type NSString named fullName with setters and getters automatically generated
@property(nonatomic, assign) int age; //Declares a public property of type int named age with setters and getters automatically generated

-(instancetype)initWithFirstName:(NSString*)first_name andLastName:(NSString*)last_name andAge:(int)student_age; //Constructor method with three parameters that initializes the firstName, lastName, and age properties
-(void)study; //Method declaration without any parameters or return type
@end //End of interface

//Implementation
@implementation Student //Implementation of the Student class
-(instancetype)initWithFirstName:(NSString*)first_name andLastName:(NSString*)last_name andAge:(int)student_age //Implementation of the constructor method
{
    self = [super init]; //Calls the superclass' init method
    if (self) { //Checks if initialization was successful
        firstName = [first_name copy]; //Assigns the firstName property with the value of the first_name parameter
        lastName = [last_name copy]; //Assigns the lastName property with the value of the last_name parameter
        self.age = student_age; //Uses the setter method to assign the value of the age property
    }
    return self; //Returns an instance of the Student class
}

-(void)study //Implementation of the study method
{
    NSLog(@"%@ is studying", self.fullName); //Uses the %@ placeholder to print the value of the fullName property
}
@end //End of implementation

//Main function
int main () //Main function definition
{
    Student *john = [[Student alloc] initWithFirstName:@"John" andLastName:@"Doe" andAge:21]; //Creates an instance of the Student class and calls the constructor method with the given parameters
    john.fullName = @"Johnathan Doe"; //Uses the setter method to assign a new value to the fullName property
    john.age += 1; //Uses the getter method to get the current value of the age property, adds 1, and uses the setter method to assign the new value
    [john study]; //Calls the study method on the john instance
    return 0; //End of main function
}
// This is a comment in Objective-C
#import <Foundation/Foundation.h>  // Importing the Foundation framework

// Creating a new class called "Book"
@interface Book : NSObject

// Declaring properties of the class
@property (strong, nonatomic) NSString *title;
@property (strong, nonatomic) NSString *author;
@property (nonatomic) int numberOfPages;
@property (nonatomic) BOOL isRead;

// Declaring methods of the class
- (instancetype)initWithTitle:(NSString *)title andAuthor:(NSString *)author;

// Declaring a class method that returns a new instance of the Book class
+ (Book *)createBookWithTitle:(NSString *)title andAuthor:(NSString *)author;

@end

// This is the implementation of the Book class
@implementation Book

// This is the initializer method for the Book class
- (instancetype)initWithTitle:(NSString *)title andAuthor:(NSString *)author {
    self = [super init];
    if (self) {
        self.title = title;
        self.author = author;
        self.isRead = NO;
    }
    return self;
}

// This is the class method for creating a new instance of the Book class
+ (Book *)createBookWithTitle:(NSString *)title andAuthor:(NSString *)author {
    Book *newBook = [[Book alloc] initWithTitle:title andAuthor:author];
    return newBook;
}

@end

// This is the main function where the code will be executed
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // Creating a new instance of the Book class
        Book *myBook = [Book createBookWithTitle:@"Frankenstein" andAuthor:@"Mary Shelley"];
        
        // Printing the details of the book object
        NSLog(@"Title: %@, Author: %@, Number of Pages: %d, Read: %d", myBook.title, myBook.author, myBook.numberOfPages, myBook.isRead);
    }
    return 0;
}
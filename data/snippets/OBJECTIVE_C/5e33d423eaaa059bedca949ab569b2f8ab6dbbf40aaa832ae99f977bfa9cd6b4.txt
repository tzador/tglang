@interface Animal : NSObject //defines class called Animal based on NSObject
@property (nonatomic, strong) NSString *name; //defines name property as strong NSObject
@property (nonatomic, strong) NSString *species; //defines species property as strong NSObject

- (instancetype)initWithName:(NSString *)name species:(NSString *)species; //method to initialize Animal objects with name and species

+ (instancetype)animalWithName:(NSString *)name species:(NSString *)species; //class method to create and return Animal objects with specified name and species

- (void)makeSound; //method to print a generic sound for the animal

@end

@implementation Animal

- (instancetype)initWithName:(NSString *)name species:(NSString *)species
{
    self = [super init]; //calls superclass NSObject's designated initializer method
    if (self) {
        _name = name; //assigns name parameter to instance variable _name
        _species = species; //assigns species parameter to instance variable _species
    }
    return self; //returns initialized Animal object
}

+ (instancetype)animalWithName:(NSString *)name species:(NSString *)species
{
    Animal *animal = [[self alloc] initWithName:name species:species]; //creates new Animal object using designated initializer method
    return animal; //returns created Animal object
}

- (void)makeSound
{
    NSLog(@"%@ makes a sound", self.species); //prints out the species of the animal and states that it makes a sound
}

@end

int main(int argc, const char * argv[]) {
    
    //creating a new instance of Animal called "lion"
    Animal *lion = [[Animal alloc] initWithName:@"Simba" species:@"Lion"];
    
    //calling the makeSound method on the lion instance
    [lion makeSound];
    
    return 0;
}
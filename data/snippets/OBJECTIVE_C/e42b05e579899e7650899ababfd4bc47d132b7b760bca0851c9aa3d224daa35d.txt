// This is a long and complex code snippet in Objective-C 

#import <Foundation/Foundation.h> // Importing the Foundation framework for access to fundamental classes, data types, and operations

// Defining a custom class called "Person" 
// In Objective-C, classes are represented by an "@interface" declaration followed by a "@implementation" 

@interface Person : NSObject { // The ":NSObject" specifies that Person inherits from the NSObject class
    
    NSString *_name; // Declaring an instance variable called "_name" of type NSString, which will store a person's name
    NSInteger _age; // Declaring an instance variable called "_age" of type NSInteger, which will store a person's age
}

@property (nonatomic, copy) NSString *name; // Declaring a property called "name" with the keyword "nonatomic" specifying that it is not thread-safe

@property (nonatomic) NSInteger age; // Declaring a property called "age"

// Declaring a method called "introduce" which prints out a statement including the person's name and age

- (void)introduce { // The "-" before "introduce" specifies that it is an instance method (versus a class method using "+")
    NSLog(@"Hi, my name is %@ and I am %ld years old.", self.name, (long)self.age); // Using the "self" keyword to access the instance variables within the method
}

@end

// Implementation of the Person class

@implementation Person

// Implementing the "setName" and "getName" methods
// Objective-C uses dot syntax to access properties, so these methods will set and get the "name" property

- (void)setName:(NSString *)name { // The ":" indicates that this method takes in a parameter called "name" of type NSString
    _name = [name copy]; // Using the "copy" method to make sure the string is not mutable
}

- (NSString *)getName {
    return _name;
}

// Implementing the "setAge" and "getAge" methods

- (void)setAge:(NSInteger)age {
    _age = age;
}

- (NSInteger)getAge {
    return _age;
}

@end

// Main function, where the code will execute

int main(int argc, const char * argv[]) {
    @autoreleasepool { // Autorelease pool to manage memory usage
        
        Person *john = [[Person alloc] init]; // Creating an instance of the Person class called "john"
        
        john.name = @"John"; // Setting the "name" property for john to "John"
        [john setAge:25]; // Using the "setAge" method to set the "age" instance variable for john to 25
        
        [john introduce]; // Calling the "introduce" method for john, which will print out "Hi, my name is John and I am 25 years old."
    }
    return 0;
}
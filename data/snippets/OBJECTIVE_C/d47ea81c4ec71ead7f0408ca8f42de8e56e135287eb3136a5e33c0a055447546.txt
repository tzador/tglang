/*
 This is a complex Objective-C code snippet that creates a class called "Person" which has attributes name and age.
 The class also has a function that returns a string with the person's name and age.
 */

#import <Foundation/Foundation.h> //imports the Foundation framework which provides the base classes and data types for Objective-C programming

@interface Person : NSObject //declares the Person class as a subclass of NSObject
{
    NSString *name; //declares a private instance variable called "name" of type NSString
    int age; //declares a private instance integer variable called "age"
}

-(NSString *)concatenateNameandAge; //declares a method that returns an NSString object

@end //ends the interface declaration

@implementation Person //defines the implementation of the class

-(NSString *)concatenateNameandAge //implements the concatenateNameandAge method
{
    NSString *personInfo = [NSString stringWithFormat:@"My name is %@ and I am %d years old.", name, age]; //creates a string using the instance variables "name" and "age"
    return personInfo; //returns the string
}

@end //ends the implementation

int main(int argc, const char * argv[]) { //main function
    @autoreleasepool { //autorelease pool
        Person *person = [[Person alloc] init]; //instantiates a Person object
        [person setName:@"John Doe"]; //calls the setName method to set the value of the "name" instance variable
        [person setAge:25]; //calls the setAge method to set the value of the "age" instance variable
        NSString *info = [person concatenateNameandAge]; //calls the concatenateNameandAge method to get the string with the person's information
        NSLog(@"%@", info); //prints the string to the console
    }
    return 0; //returns 0 to indicate successful execution of main function
}
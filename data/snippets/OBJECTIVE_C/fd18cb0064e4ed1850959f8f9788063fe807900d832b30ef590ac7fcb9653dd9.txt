// This is a custom animation function that uses Core Graphics to animate a UIView's transform property
// It takes in a target UIView, a duration for the animation, and a CGAffineTransform containing the desired transform values
// The completion block is called when the animation has finished
- (void)animateView:(UIView *)targetView withDuration:(NSTimeInterval)duration transform:(CGAffineTransform)transform completion:(void (^)(BOOL finished))completion {

    // Initialize a CABasicAnimation using the transform key path
    CABasicAnimation *animation = [CABasicAnimation animationWithKeyPath:@"transform"];

    // Set the animation's duration and timing function
    animation.duration = duration;
    animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];

    // Set the animation's from and to values to the CGAffineTransform's current and desired values
    animation.fromValue = [NSValue valueWithCGAffineTransform:targetView.transform];
    animation.toValue = [NSValue valueWithCGAffineTransform:transform];

    // Add a completion block to be called when the animation has finished
    animation.completion = ^(BOOL finished){

        // Call the provided completion block with the finished value
        completion(finished);

        // Remove the animation from the target view's layer
        [targetView.layer removeAnimationForKey:@"transform"];
    };

    // Add the animation to the target view's layer
    [targetView.layer addAnimation:animation forKey:@"transform"];
}
#import <UIKit/UIKit.h>

//Declares a custom class named "MyCustomClass"
@interface MyCustomClass : NSObject

//Declares a public property named "myPublicProperty" of type NSString
@property (nonatomic, strong) NSString *myPublicProperty;

//Declares a private property named "myPrivateProperty" of type NSArray
@property (nonatomic, strong) NSArray *myPrivateProperty;

//Declares a public method named "myPublicMethod" with a return type of void and takes in a NSString parameter
- (void)myPublicMethod:(NSString *)inputString;

//Declares a private method named "myPrivateMethod" with a return type of BOOL and takes in an NSInteger parameter
- (BOOL)myPrivateMethod:(NSInteger)inputInteger;

@end

//Implements the custom class "MyCustomClass"
@implementation MyCustomClass

//Implementation of the public method "myPublicMethod"
- (void)myPublicMethod:(NSString *)inputString {

    NSLog(@"Input string is: %@", inputString); //Prints the input string to the console
}

//Implementation of the private method "myPrivateMethod"
- (BOOL)myPrivateMethod:(NSInteger)inputInteger {

    if (inputInteger > 10) { //Checks if the input integer is greater than 10
        return YES;
    }
    else {
        return NO;
    }
}

@end

//Instantiate an instance of the custom class "MyCustomClass"
MyCustomClass *myObject = [[MyCustomClass alloc] init];

//Set the value of the public property "myPublicProperty"
myObject.myPublicProperty = @"Hello World";

//Call the public method "myPublicMethod" with the input string
[myObject myPublicMethod:@"This is an input string"];

//Get the value of the private property "myPrivateProperty"
NSArray *privateProperty = myObject.myPrivateProperty;

//Call the private method "myPrivateMethod" with the input integer and store the return value
BOOL returnVal = [myObject myPrivateMethod:20];

//Print the return value to the console
NSLog(@"Return value is: %d", returnVal);
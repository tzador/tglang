#import <Foundation/Foundation.h> // Imports Foundation framework for the use of Objecitve-C language

// Defining a class called Employee
@interface Employee: NSObject

// Initializing instance variables for the Employee class
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSString *position;
@property (nonatomic) int yearsOfExperience;
@property (nonatomic) double salary;

// Defining a method that calculates the employee's salary based on their position and years of experience
-(double)calculateSalary;

@end

// Implementing the Employee class
@implementation Employee

// Implementing the calculateSalary method
-(double)calculateSalary {
    if ([self.position isEqualToString:@"Manager"]) { // Checks if the employee is a Manager
        return self.yearsOfExperience * 100000; // Calculates salary based on years of experience
    }
    else if ([self.position isEqualToString:@"Developer"]) { // Checks if the employee is a Developer
        return self.yearsOfExperience * 80000; // Calculates salary based on years of experience
    }
    else if ([self.position isEqualToString:@"Salesperson"]) { // Checks if the employee is a Salesperson
        return self.yearsOfExperience * 60000; // Calculates salary based on years of experience
    }
    else { // Default case
        return 0; // Returns 0 if the employee's position is not recognized
    }
}

@end

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // Creating a new instance of Employee class and setting values for the instance variables
        Employee *employee1 = [[Employee alloc] init];
        employee1.name = @"John Smith";
        employee1.position = @"Developer";
        employee1.yearsOfExperience = 3;
        
        // Printing employee information and salary
        NSLog(@"Name: %@\nPosition: %@\nYears of Experience: %i\nSalary: $%.2f", employee1.name, employee1.position, employee1.yearsOfExperience, [employee1 calculateSalary]);
    }
    return 0;
}
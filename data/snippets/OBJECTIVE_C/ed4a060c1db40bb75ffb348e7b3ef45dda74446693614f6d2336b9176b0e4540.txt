// Create a class named Person
@interface Person : NSObject

// Properties of the class
@property (strong, nonatomic) NSString *name; 
@property (nonatomic) NSUInteger age; 
@property (strong, nonatomic) NSArray *hobbies;

// Method to initialize a Person object with provided name and age
- (instancetype)initWithName:(NSString *)name andAge:(NSUInteger)age;

// Method to add a hobby to the hobbies array
- (void)addHobby:(NSString *)hobby;

@end

// Implementation of the Person class
@implementation Person

// Implementation of the initializer method
- (instancetype)initWithName:(NSString *)name andAge:(NSUInteger)age
{
    self = [super init]; // Call the superclass' initializer
    
    if (self) {
        // Set the provided name and age to the corresponding properties
        self.name = name;
        self.age = age;
        
        // Initialize the hobbies array
        self.hobbies = [[NSArray alloc] init];
    }
    
    return self; // Return the initialized object
}

// Implementation of the addHobby method
- (void)addHobby:(NSString *)hobby
{
    // Convert the hobbies array to a mutable array
    NSMutableArray *mutableHobbies = [NSMutableArray arrayWithArray:self.hobbies];
    
    // Add the provided hobby to the array
    [mutableHobbies addObject:hobby];
    
    // Convert the mutable array back to an immutable array
    self.hobbies = [NSArray arrayWithArray:mutableHobbies];
}

@end

// Create an instance of the Person class with the name "Jane" and age 25
Person *person = [[Person alloc] initWithName:@"Jane" andAge:25];

//Add hobbies to the hobbies array
[person addHobby:@"Reading"];
[person addHobby:@"Coding"];
[person addHobby:@"Hiking"];

// Print out the person's name, age, and hobbies
NSLog(@"%@ is %lu years old and enjoys %@", person.name, person.age, [person.hobbies componentsJoinedByString:@", "]);

// Output:
// Jane is 25 years old and enjoys Reading, Coding, Hiking
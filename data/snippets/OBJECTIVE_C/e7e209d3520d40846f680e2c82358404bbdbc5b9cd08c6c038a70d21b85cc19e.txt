// Declaring a class "Employee"
@interface Employee : NSObject

// Properties of the Employee class
@property (nonatomic, strong) NSString *firstName; // Employee's first name
@property (nonatomic, strong) NSString *lastName; // Employee's last name
@property (nonatomic, assign) NSInteger age; // Employee's age
@property (nonatomic, strong) NSNumber *salary; // Employee's salary
@property (nonatomic, strong) NSMutableArray *projects; // Employee's list of projects

// Creating a method to calculate bonus based on employee's salary
- (NSNumber *)calculateBonus {
    // Checking if salary is above $50,000
    if (self.salary.intValue > 50000) {
        // Calculating bonus as 10% of salary
        NSNumber *bonus = [NSNumber numberWithDouble: (self.salary.floatValue * 0.10)];
        return bonus;
    }
    else {
        // No bonus for salary below $50,000
        NSNumber *bonus = [NSNumber numberWithInteger: 0];
        return bonus;
    }
}

@end

// Creating an instance of the Employee class
Employee *employee = [[Employee alloc] init];

// Setting values for Employee's properties
employee.firstName = @"John";
employee.lastName = @"Doe";
employee.age = 35;
employee.salary = [NSNumber numberWithInteger: 60000];
employee.projects = [[NSMutableArray alloc] initWithObjects: @"Project A", @"Project B", @"Project C", nil];

// Printing out Employee's information
NSLog(@"Employee Information:");
NSLog(@"First Name: %@", employee.firstName);
NSLog(@"Last Name: %@", employee.lastName);
NSLog(@"Age: %ld", (long)employee.age);
NSLog(@"Salary: $%.2f", employee.salary.floatValue);
NSLog(@"Projects: %@", employee.projects);

// Calculating and printing out Employee's bonus
NSNumber *bonus = [employee calculateBonus];
NSLog(@"Bonus: $%.2f", bonus.floatValue);
#import <Foundation/Foundation.h> //Import Foundation framework

//Interface for a Bank Account object
@interface BankAccount: NSObject

//Properties to store account details
@property (nonatomic, strong) NSString *accountNumber;
@property (nonatomic, strong) NSString *accountHolder;
@property (nonatomic, assign) double balance;

//Methods to deposit and withdraw funds
- (void) deposit:(double)amount;
- (void) withdraw:(double)amount;

@end

//Implementation of the BankAccount interface
@implementation BankAccount

- (void) deposit:(double)amount {
    //Add deposited amount to current balance
    self.balance += amount;
    NSLog(@"$%.2f deposited. Current balance: $%.2f", amount, self.balance);
}

- (void) withdraw:(double)amount {
    //Check if withdrawal amount is greater than current balance
    if (amount > self.balance) {
        NSLog(@"Insufficient funds. Current balance: $%.2f", self.balance);
    } else {
        //Subtract withdrawn amount from current balance
        self.balance -= amount;
        NSLog(@"$%.2f withdrawn. Current balance: $%.2f", amount, self.balance);
    }
}

@end

//Create a new instance of BankAccount
BankAccount *bankAccount = [[BankAccount alloc] init];

//Set account details
bankAccount.accountNumber = @"123456789";
bankAccount.accountHolder = @"John Smith";
bankAccount.balance = 5000.00;

//Deposit $1000
[bankAccount deposit:1000.00]; //Output: $1000.00 deposited. Current balance: $6000.00

//Withdraw $2000
[bankAccount withdraw:2000.00]; //Output: $2000.00 withdrawn. Current balance: $4000.00

//Withdraw $6000
[bankAccount withdraw:6000.00]; //Output: Insufficient funds. Current balance: $4000.00
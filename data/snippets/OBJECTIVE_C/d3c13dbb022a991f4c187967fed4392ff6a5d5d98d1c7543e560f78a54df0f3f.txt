/* This is a complex code snippet in OBJECTIVE_C 
   that uses inheritance and protocols */

// Creating a protocol for a shape
@protocol ShapeProtocol
- (double)calculateArea;
@end

// Creating a class for a rectangle that conforms to the ShapeProtocol
@interface Rectangle : NSObject <ShapeProtocol>
@property (nonatomic, assign) double width;
@property (nonatomic, assign) double height;
- (instancetype)initWithWidth:(double)width andHeight:(double)height;
@end

@implementation Rectangle // implementation of the Rectangle class
- (instancetype)initWithWidth:(double)width andHeight:(double)height {
   self = [super init];
   if (self) {
      self.width = width;
      self.height = height;
   }
   return self;
}

- (double)calculateArea { // implementing the calculateArea method from ShapeProtocol
   return self.width * self.height;
}
@end

// Creating a class for a square that inherits from Rectangle
@interface Square : Rectangle
@property (nonatomic, assign) double sideLength;
- (instancetype)initWithSideLength:(double)sideLength;
@end

@implementation Square
- (instancetype)initWithSideLength:(double)sideLength {
   self = [super initWithWidth:sideLength andHeight:sideLength];
   if (self) {
      self.sideLength = sideLength;
   }
   return self;
}
@end

// Creating a class for a circle that conforms to the ShapeProtocol
@interface Circle : NSObject <ShapeProtocol>
@property (nonatomic, assign) double radius;
- (instancetype)initWithRadius:(double)radius;
@end

@implementation Circle
- (instancetype)initWithRadius:(double)radius {
   self = [super init];
   if (self) {
      self.radius = radius;
   }
   return self;
}

- (double)calculateArea { // implementing the calculateArea method from ShapeProtocol
   return M_PI * pow(self.radius, 2);
}
@end

// Using the classes and protocols in the code snippet
Rectangle *rectangle = [[Rectangle alloc] initWithWidth:5 andHeight:3];
Square *square = [[Square alloc] initWithSideLength:4];
Circle *circle = [[Circle alloc] initWithRadius:2];

// Calling the calculateArea method on each shape and printing the result
double rectangleArea = [rectangle calculateArea];
double squareArea = [square calculateArea];
double circleArea = [circle calculateArea];

NSLog(@"The area of the rectangle is %f, the area of the square is %f, and the area of the circle is %f.", rectangleArea, squareArea, circleArea);
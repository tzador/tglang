// This is a custom class in Objective-C for a task list app

// Import required libraries
#import <Foundation/Foundation.h>

// Create custom task class
@interface Task : NSObject

// Properties
@property (strong, nonatomic) NSString *title; // The title of the task
@property (nonatomic) BOOL isComplete; // Indicates whether the task is complete or not
@property (strong, nonatomic) NSDate *dueDate; // The due date of the task
@property (strong, nonatomic) NSMutableArray *subTasks; // An array of sub-tasks for the main task

// Custom initializer
- (id)initWithTitle:(NSString *)title dueDate:(NSDate *)dueDate;

// Methods
- (void)addSubTask:(Task *)task; // Adds a sub-task to the main task
- (void)completeTask; // Mark the task as complete
- (BOOL)checkIfOverdue; // Checks if the task is overdue
- (void)printTaskDetails; // Prints out the details of the task

@end

@implementation Task

// Custom initializer
- (id)initWithTitle:(NSString *)title dueDate:(NSDate *)dueDate {
    self = [super init];
    if (self) {
        self.title = title;
        self.isComplete = false;
        self.dueDate = dueDate;
        self.subTasks = [[NSMutableArray alloc] init];
    }
    return self;
}

// Adds a sub-task to the main task
- (void)addSubTask:(Task *)task {
    [self.subTasks addObject:task];
}

// Mark the task as complete
- (void)completeTask {
    self.isComplete = true;
}

// Checks if the task is overdue
- (BOOL)checkIfOverdue {
    NSDate *currentDate = [NSDate date];
    if ([currentDate compare:self.dueDate] == NSOrderedDescending) { // If current date is later than due date
        return true;
    }
    return false;
}

// Prints out the details of the task
- (void)printTaskDetails {
    NSLog(@"Task Title: %@", self.title);
    NSLog(@"Due Date: %@", self.dueDate);
    if (self.isComplete) {
        NSLog(@"Task Status: Completed");
    } else {
        NSLog(@"Task Status: Incomplete");
    }
    if ([self.subTasks count] > 0) {
        NSLog(@"Sub-tasks: %li", [self.subTasks count]);
    }
}

@end

// Create a task list
NSMutableArray *taskList = [[NSMutableArray alloc] init];

// Create two tasks and add them to the list
Task *task1 = [[Task alloc] initWithTitle:@"Do laundry" dueDate:[NSDate dateWithTimeIntervalSinceNow:604800]]; // Due date is one week from now
[taskList addObject:task1];

Task *task2 = [[Task alloc] initWithTitle:@"Buy groceries" dueDate:[NSDate dateWithTimeIntervalSinceNow:259200]]; // Due date is three days from now
[taskList addObject:task2];

// Add a sub-task to the first task
Task *subTask = [[Task alloc] initWithTitle:@"Fold clothes" dueDate:[NSDate dateWithTimeIntervalSinceNow:172800]]; // Due date is two days from now
[task1 addSubTask:subTask];

// Print out the task list
for (Task *task in taskList) {
    [task printTaskDetails];
}
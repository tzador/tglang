// This code snippet is a simple implementation of a linked list data structure in Objective-C.

// Define the Node class
@interface Node : NSObject 
@property(nonatomic, strong) id data; // property to store data
@property(nonatomic, strong) Node *next; // pointer to next node
@end

// Implementation of Node class
@implementation Node 
- (instancetype)initWithData:(id)data {
    self = [super init];
    if (self) {
        self.data = data;
        self.next = nil;
    }
    return self;
}
@end

// Define the Linked List class
@interface LinkedList : NSObject 
@property(nonatomic, strong) Node *head; // pointer to first node 
@property(nonatomic, strong) Node *tail; // pointer to last node
@end

// Implementation of Linked List class
@implementation LinkedList
- (instancetype)init {
    self = [super init];
    if (self) {
        self.head = nil;
        self.tail = nil;
    }
    return self;
}

// Method to add a new node to the end of the linked list
- (void)addNodeWithData:(id)data {
    Node *newNode = [[Node alloc] initWithData:data];
    if (self.head == nil) {
        self.head = newNode;
        self.tail = newNode;
    } else {
        self.tail.next = newNode;
        self.tail = newNode;
    }
}

// Method to print all the nodes in the linked list
- (void)printList {
    Node *current = self.head;
    while (current != nil) {
        NSLog(@"%@", current.data);
        current = current.next;
    }
}
@end
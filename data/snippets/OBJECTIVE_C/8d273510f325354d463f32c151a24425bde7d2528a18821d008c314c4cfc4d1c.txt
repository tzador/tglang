@interface Animal : NSObject //Defining a custom class called 'Animal' that inherits from the NSObject class

@property (nonatomic, strong) NSString *name; //Declaring a property for the animal's name
@property (nonatomic, strong) NSString *type; //Declaring a property for the animal's type

- (instancetype)initWithName:(NSString *)name type:(NSString *)type; //Declaring a custom initializer method

- (void)makeSound; //Declaring a method to make the animal's sound

@end

@implementation Animal //Implementation of the Animal class

- (instancetype)initWithName:(NSString *)name type:(NSString *)type { //Implementation of the custom initializer
    self = [super init];
    if (self) {
        _name = name;
        _type = type;
    }
    return self;
}

- (void)makeSound { //Implementation of the makeSound method
    if ([self.type isEqualToString:@"mammal"]) { //Checking if the animal is a mammal
        NSLog(@"%@ makes a grunt sound.", self.name);
    } else if ([self.type isEqualToString:@"bird"]) { //Checking if the animal is a bird
        NSLog(@"%@ makes a chirp sound.", self.name);
    } else if ([self.type isEqualToString:@"reptile"]) { //Checking if the animal is a reptile
        NSLog(@"%@ makes a hiss sound.", self.name);
    } else { //Default case
        NSLog(@"%@ makes an unknown sound.", self.name);
    }
}

@end

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        Animal *lion = [[Animal alloc] initWithName:@"Leo" type:@"mammal"]; //Creating an instance of the Animal class for a lion
        Animal *eagle = [[Animal alloc] initWithName:@"Ed" type:@"bird"]; //Creating an instance of the Animal class for an eagle
        Animal *snake = [[Animal alloc] initWithName:@"Sam" type:@"reptile"]; //Creating an instance of the Animal class for a snake

        [lion makeSound]; //Calling the makeSound method for the lion instance
        [eagle makeSound]; //Calling the makeSound method for the eagle instance
        [snake makeSound]; //Calling the makeSound method for the snake instance
    }
    return 0;
}
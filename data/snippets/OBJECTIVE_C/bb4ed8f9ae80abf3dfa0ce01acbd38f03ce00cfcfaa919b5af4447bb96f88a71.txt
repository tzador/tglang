#import <Foundation/Foundation.h>  // importing Foundation framework

@interface User : NSObject // creating User class with NSObject as its superclass

@property (nonatomic, strong) NSString *username; // creating NSString property called 'username'
@property (nonatomic, strong) NSString *password; // creating NSString property called 'password'
@property (nonatomic, assign) NSInteger age; // creating integer property called 'age'

- (void)loginWithUsername:(NSString *)username andPassword:(NSString *)password; // declaring login method with two NSString parameters
- (void)changePassword:(NSString *)newPassword; // declaring change password method with one NSString parameter
- (void)logout; // declaring logout method

@end  // ending the interface declaration

@implementation User // implementing the User class

- (void)loginWithUsername:(NSString *)username andPassword:(NSString *)password { // defining the login method
    if ([username isEqualToString:self.username] && // checking if the username matches the saved username
        [password isEqualToString:self.password]) { // checking if the password matches the saved password
        NSLog(@"Login successful!"); // displaying a success message if login is successful
    } else {
        NSLog(@"Incorrect username or password."); // displaying an error message if login fails
    }
}

- (void)changePassword:(NSString *)newPassword { // defining the change password method
    self.password = newPassword; // updating the password property with the new password
    NSLog(@"Password changed successfully!"); // displaying a success message
}

- (void)logout { // defining the logout method
    self.username = nil; // setting the username property to nil
    self.password = nil; // setting the password property to nil
    NSLog(@"Logged out successfully."); // displaying a success message
}

@end // ending the implementation

int main(int argc, const char * argv[]) { // main function
    @autoreleasepool { // creating an autorelease pool to handle memory management
    
        User *user1 = [[User alloc] init]; // creating a User object using the default init method
        user1.username = @"JohnDoe"; // setting the username property
        user1.password = @"password123"; // setting the password property
        user1.age = 25; // setting the age property
        
        [user1 loginWithUsername:@"JohnDoe" andPassword:@"password123"]; // calling the login method with correct credentials
        [user1 changePassword:@"newpassword"]; // calling the change password method
        [user1 logout]; // calling the logout method
    }
    return 0; // returning 0 to signify successful execution
}
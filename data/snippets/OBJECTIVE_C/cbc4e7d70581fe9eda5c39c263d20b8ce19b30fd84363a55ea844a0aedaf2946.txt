- (void)createNewObjectWithName:(NSString *)name andDetails:(NSDictionary *)details {
    // This method creates a new object with a given name and details

    // Check if name parameter is nil
    if (name == nil) {
        NSLog(@"Error: name parameter cannot be nil.");
        return;
    }

    // Create new object with name
    NSObject *object = [[NSObject alloc] init];
    object.name = name;

    // Check if details parameter is nil
    if (details == nil) {
        NSLog(@"Error: details parameter cannot be nil.");
        return;
    }

    // Set details for object
    object.details = details;

    // Save object to database
    [self saveObject:object];
}

- (void)saveObject:(NSObject *)object {
    // This method saves the given object to the database

    // Check if object is nil
    if (object == nil) {
        NSLog(@"Error: object parameter cannot be nil.");
        return;
    }

    // Convert object to JSON data
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:[object toDictionary] options:NSJSONWritingPrettyPrinted error:nil];

    // Create URL for API endpoint
    NSURL *url = [NSURL URLWithString:@"https://api.example.com/object"];

    // Create request with JSON data
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];
    [request setHTTPMethod:@"POST"];
    [request setHTTPBody:jsonData];

    // Initialize session
    NSURLSession *session = [NSURLSession sharedSession];

    // Create data task with request
    NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
        // Check for error
        if (error != nil) {
            NSLog(@"Error: %@", error.localizedDescription);
            return;
        }

        // Parse JSON response from server
        NSDictionary *responseDict = [NSJSONSerialization JSONObjectWithData:data options:kNilOptions error:nil];

        // Check if response contains success status
        if ([responseDict[@"status"] isEqualToString:@"success"]) {
            NSLog(@"Object saved successfully.");
        } else {
            NSLog(@"Error: object could not be saved.");
        }
    }];

    // Start data task
    [dataTask resume];
}

@interface NSObject : NSObject

@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSDictionary *details;

- (instancetype)initWithName:(NSString *)name;

- (NSDictionary *)toDictionary;

@end

@implementation NSObject

- (instancetype)initWithName:(NSString *)name {
    self = [super init];
    if (self) {
        self.name = name;
    }
    return self;
}

- (NSDictionary *)toDictionary {
    // Convert object properties to dictionary
    return @{ @"name": self.name, @"details": self.details };
}

@end
// Creating a custom class called "Employee"
@interface Employee : NSObject

// Defining properties for the Employee class
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSNumber *age;
@property (nonatomic, strong) NSString *position;
@property (nonatomic, strong) NSNumber *salary;

// Declaring methods for the Employee class
- (instancetype)initWithName:(NSString *)name age:(NSNumber *)age position:(NSString *)position salary:(NSNumber *)salary;
- (void)printEmployeeInfo;
- (void)calculateBonus;

@end

// Implementing the methods for the Employee class
@implementation Employee

// Initializing the Employee class with the provided information
- (instancetype)initWithName:(NSString *)name age:(NSNumber *)age position:(NSString *)position salary:(NSNumber *)salary {
    self = [super init];
    
    if (self) {
        self.name = name;
        self.age = age;
        self.position = position;
        self.salary = salary;
    }
    
    return self;
}

// Printing out the employee's information
- (void)printEmployeeInfo {
    NSLog(@"%@ is %d years old and works as a %@ with a salary of $%d", self.name, [self.age intValue], self.position, [self.salary intValue]);
}

// Calculating and printing out the employee's bonus based on their salary
- (void)calculateBonus {
    int bonus = [self.salary intValue] * 0.1;
    NSLog(@"%@'s bonus will be $%d", self.name, bonus);
}

@end

// Creating an instance of the Employee class and setting its properties
Employee *john = [[Employee alloc] initWithName:@"John Smith" age:@35 position:@"Manager" salary:@75000];

// Calling the methods on the john instance
[john printEmployeeInfo];
[john calculateBonus];
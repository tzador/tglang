// This is a complex code snippet in OBJECTIVE-C
// It shows how to create and use a custom class with properties, methods, and inheritance
// Author: John Smith
// Date: 05/20/2021

// Define the interface for our custom class
@interface Person : NSObject

// Declare properties for the class
@property(nonatomic, strong) NSString *name;
@property(nonatomic, assign) int age;
@property(nonatomic, strong) NSArray *hobbies;

// Declare methods for the class
- (void)introduceSelf;
- (void)addHobby:(NSString *)hobby;
- (void)printHobbies;

@end

// Implementation of the class
@implementation Person

// Method to introduce the person
- (void)introduceSelf {
    NSLog(@"My name is %@ and I am %d years old.", self.name, self.age);
}

// Method to add a new hobby to the person's list of hobbies
- (void)addHobby:(NSString *)hobby {
    NSMutableArray *tempArray = [self.hobbies mutableCopy]; // Create a mutable copy of the current hobbies array
    [tempArray addObject:hobby]; // Add the new hobby to the array
    self.hobbies = tempArray; // Set the updated hobbies array as the new property value
}

// Method to print all of the person's hobbies
- (void)printHobbies {
    for (NSString *hobby in self.hobbies) {
        NSLog(@"%@", hobby);
    }
}

@end

// Create an instance of Person and set its properties
Person *myPerson = [[Person alloc]init];
myPerson.name = @"Bob";
myPerson.age = 30;
myPerson.hobbies = @[@"Cooking", @"Reading", @"Playing guitar"];

// Use the methods of the Person class
[myPerson introduceSelf]; // Outputs: "My name is Bob and I am 30 years old."
[myPerson addHobby:@"Hiking"];
[myPerson printHobbies]; // Outputs: "Cooking" "Reading" "Playing guitar" "Hiking"
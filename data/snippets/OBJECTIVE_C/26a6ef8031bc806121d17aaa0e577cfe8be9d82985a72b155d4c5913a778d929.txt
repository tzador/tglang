//Defining a complex class
@interface Complex{
    float real;
    float imaginary;
}
//Initializing the class
- (id)initWithReal:(float)r Imaginary:(float)i;
//Performing addition of complex numbers
- (id)add:(Complex *)n;
@end

@implementation Complex
 //Implementing the initialization method
 - (id)initWithReal:(float)r Imaginary:(float)i {
    self = [super init];
    if (self) {
        self->real = r;
        self->imaginary = i;
    }
    return self;
 }
 
 //Implementing the addition method
 - (id)add:(Complex *)n {
    Complex *result = [[Complex alloc] init]; //Creating a new Complex object
    result->real = self->real + n->real; //Adding real parts
    result->imaginary = self->imaginary + n->imaginary; //Adding imaginary parts
    return result; //Returning the result
 }
 
 @end

int main(int argc, const char * argv[]) {
    //Creating two Complex objects
    Complex *c1 = [[Complex alloc] initWithReal:2.5 Imaginary:3.0];
    Complex *c2 = [[Complex alloc] initWithReal:4.2 Imaginary:1.8];
    //Adding the two objects
    Complex *result = [c1 add:c2];
    //Printing the result
    NSLog(@"The result of addition is %f + %fi", result->real, result->imaginary);
    return 0;
}
// This is a class declaration for a custom UIView subclass
@interface CustomView: UIView

// These are the properties of the custom view
@property (nonatomic, strong) UILabel *titleLabel; // title label of the custom view
@property (nonatomic, strong) UIButton *button; // button in the custom view
@property (nonatomic, strong) UIView *contentView; // content view of the custom view

// This is a custom initialization method for the class
- (instancetype)initWithTitle:(NSString *)title andFrame:(CGRect)frame;

// This method sets up the layout for the custom view
- (void)setupViewLayout;

@end

// Implementation of the custom view class
@implementation CustomView

// Custom initialization method
- (instancetype)initWithTitle:(NSString *)title andFrame:(CGRect)frame {
    // Call the superclass's initialization method
    self = [super initWithFrame:frame];
    if (self) {
        // Set the title label text and font
        self.titleLabel.text = title;
        self.titleLabel.font = [UIFont boldSystemFontOfSize:16.0f];
        
        // Set the button title and add a target action
        [self.button setTitle:@"Press Me" forState:UIControlStateNormal];
        [self.button addTarget:self action:@selector(buttonPressed) forControlEvents:UIControlEventTouchUpInside];
        
        // Add the subviews to the content view
        [self.contentView addSubview:self.titleLabel];
        [self.contentView addSubview:self.button];
        
        // Add the content view to the custom view
        [self addSubview:self.contentView];
        
        // Call the setup layout method
        [self setupViewLayout];
    }
    return self;
}

// Method for setting up the layout of the custom view
- (void)setupViewLayout {
    // Set the title label frame and center it horizontally
    self.titleLabel.frame = CGRectMake(0, 0, self.frame.size.width, 30);
    self.titleLabel.center = CGPointMake(self.center.x, self.titleLabel.center.y);
    
    // Set the button frame and center it horizontally
    self.button.frame = CGRectMake(0, 40, 100, 30);
    self.button.center = CGPointMake(self.center.x, self.button.center.y);
    
    // Set the content view frame and center it in the custom view
    self.contentView.frame = CGRectMake(0, 0, self.frame.size.width, 80);
    self.contentView.center = self.center;
}

// Method for handling button press
- (void)buttonPressed {
    // Show an alert controller with a message
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Button Pressed" message:@"You have pressed the button!" preferredStyle:UIAlertControllerStyleAlert];
    // Add an OK button to the alert
    [alert addAction:[UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:nil]];
    // Present the alert
    [self.window.rootViewController presentViewController:alert animated:YES completion:nil];
}

@end
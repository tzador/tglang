/*
Function to sort an array using QuickSort algorithm.
@param array - Array to be sorted.
@param low - Starting index of the array.
@param high - Ending index of the array.
*/
void quickSort(int array[], int low, int high) {
    if (low < high) {
        // Select a pivot element
        int pivot = array[high];
        
        // Initialize low and high indices
        int i = low - 1;
        int j = high;
        
        // Loop until i and j cross each other
        while(i < j) {
            // Increment i until we find an element greater than the pivot
            do {
                i++;
            } while(array[i] < pivot);
            
            // Decrement j until we find an element less than the pivot
            do {
                j--;
            } while (array[j] > pivot);
            
            // Swap array[i] and array[j]
            if (i < j) {
                int temp = array[i];
                array[i] = array[j];
                array[j] = temp;
            }
        }
        
        // Swap array[i+1] and array[high] to place pivot at correct position
        int temp = array[i+1];
        array[i+1] = array[high];
        array[high] = temp;
        
        // Recursively call quickSort on left and right subarrays
        quickSort(array, low, i);
        quickSort(array, i+2, high);
    }
}
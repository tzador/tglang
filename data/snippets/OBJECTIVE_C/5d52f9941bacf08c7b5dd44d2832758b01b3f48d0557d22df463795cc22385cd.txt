#import <Foundation/Foundation.h>  //Import the Foundation framework

@interface Person : NSObject     // Create a class named Person who inherits from NSObject

@property (nonatomic, strong) NSString *name;  // Define a property for the Person class named 'name'
@property (nonatomic, assign) NSInteger age;  // Define a property for the Person class named 'age'

- (instancetype)initWithName:(NSString *)name                  // Initialize method for Person class
                         age:(NSInteger)age;                  // with parameters name and age
- (void)sayHello;  // A method named 'sayHello' with no parameters and void return type

@end      // Close the interface declaration

@implementation Person   // Implementation of the Person class

- (instancetype)initWithName:(NSString *)name age:(NSInteger)age {  // Custom init method
    self = [super init];   // Call the init method of the super class (NSObject)
    if (self) {
        self.name = name;   // Assign the parameter 'name' to the property 'name'
        self.age = age;     // Assign the parameter 'age' to the property 'age'
    }
    return self;        // Return the initialized instance of the Person class
}

- (void)sayHello {  // Implementation of the 'sayHello' method
    NSLog(@"Hello, my name is %@ and I am %ld years old.", self.name, self.age);  // Print out a message using the property values
}

@end    // Close the implementation 

int main(void) {    // Main method
    @autoreleasepool {  // Start the autorelease pool
        Person *person = [[Person alloc] initWithName:@"John" age:25];  // Instantiate a new Person object
        [person sayHello];   // Call the 'sayHello' method on the person object
    }
    return 0;
}

// Output:
// Hello, my name is John and I am 25 years old.
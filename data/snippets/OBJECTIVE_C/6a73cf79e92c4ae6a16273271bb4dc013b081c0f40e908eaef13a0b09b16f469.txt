/* This class represents a person and their personal information */
@interface Person : NSObject

@property (nonatomic, strong) NSString *name; // Name of the person
@property (nonatomic, strong) NSNumber *age; // Age of the person
@property (nonatomic, assign) BOOL isStudent; // Whether or not the person is a student
@property (nonatomic, strong) NSArray *hobbies; // Array of the person's hobbies

/**
    Method to initialize a Person object with provided name, age, student status, and hobbies
    @param name The person's name
    @param age The person's age
    @param isStudent Whether or not the person is a student
    @param hobbies An array of the person's hobbies
    @return A Person object initialized with the provided information
*/
- (instancetype)initWithName:(NSString*)name
                        age:(NSNumber*)age
                  isStudent:(BOOL)isStudent
                    hobbies:(NSArray*)hobbies;

/**
    Method to print out the person's information in a formatted string
    @return A formatted string with the person's name, age, student status, and hobbies
*/
- (NSString*)getInfo;

@end

@implementation Person

- (instancetype)initWithName:(NSString*)name
                        age:(NSNumber*)age
                  isStudent:(BOOL)isStudent
                    hobbies:(NSArray*)hobbies {
    self = [super init];
    if (self) {
        self.name = name;
        self.age = age;
        self.isStudent = isStudent;
        self.hobbies = hobbies;
    }
    return self;
}

- (NSString*)getInfo {
    // Check if the person is a student and set the appropriate string
    NSString *studentString = [NSString stringWithFormat:@"is not a student"];
    if (self.isStudent) {
        studentString = [NSString stringWithFormat:@"is a student"];
    }
    
    // Format the list of hobbies in a readable string
    NSString *hobbiesString = [self.hobbies componentsJoinedByString:@", "];
    
    // Create the final string with all of the person's information and return it
    NSString *infoString = [NSString stringWithFormat:@"Name: %@\nAge: %@\nStudent: %@\nHobbies: %@", self.name, self.age, studentString, hobbiesString];
    return infoString;
}

@end

int main(int argc, char * argv[]) {
    // Create a new person object with the provided information
    Person *person = [[Person alloc] initWithName:@"John" age:@25 isStudent:NO hobbies:@[@"Reading", @"Hiking", @"Playing guitar"]];
    
    // Print out the person's information
    NSLog(@"%@", [person getInfo]);
    
    return 0;
}
// This is a complex code snippet in OBJECTIVE_C

// Declaring and initializing an array
NSArray *myArray = @[ @"apple", @"banana", @"orange", @"grape" ];

// Using fast enumeration to iterate through the array and print each element
for (NSString *fruit in myArray) {
    NSLog(@"The fruit is: %@", fruit);
}

// Using a block to sort the array in alphabetical order
[myArray sortedArrayUsingComparator:^NSComparisonResult(id obj1, id obj2) {
    NSString *str1 = (NSString *) obj1;
    NSString *str2 = (NSString *) obj2;
    return [str1 compare:str2];
}];

// Defining an enumeration with different values
typedef NS_ENUM(NSInteger, ItemType) {
    ItemTypeFruit,
    ItemTypeVegetable,
    ItemTypeBeverage
};

// Creating a custom class with properties and methods
@interface FoodItem : NSObject

@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) ItemType type;

- (instancetype)initWithName:(NSString *)name andType:(ItemType)type;
- (void)printDescription;

@end

@implementation FoodItem

- (instancetype)initWithName:(NSString *)name andType:(ItemType)type {
    self = [super init];
    if (self) {
        self.name = name;
        self.type = type;
    }
    return self;
}

- (void)printDescription {
    NSString *itemType;
    switch (self.type) {
        case ItemTypeFruit:
            itemType = @"fruit";
            break;

        case ItemTypeVegetable:
            itemType = @"vegetable";
            break;

        case ItemTypeBeverage:
            itemType = @"beverage";
            break;

        default:
            itemType = @"unknown";
            break;
    }

    NSLog(@"This is a %@ called %@.", itemType, self.name);
}

@end

// Creating instances of the custom class
FoodItem *apple = [[FoodItem alloc] initWithName:@"apple" andType:ItemTypeFruit];
FoodItem *carrot = [[FoodItem alloc] initWithName:@"carrot" andType:ItemTypeVegetable];
FoodItem *coffee = [[FoodItem alloc] initWithName:@"coffee" andType:ItemTypeBeverage];

// Adding the instances to a mutable array
NSMutableArray *foodItems = [NSMutableArray arrayWithObjects:apple, carrot, coffee, nil];

// Using predicates to filter the array by type
NSPredicate *fruitPredicate = [NSPredicate predicateWithFormat:@"type == %i", ItemTypeFruit];
NSArray *fruits = [foodItems filteredArrayUsingPredicate:fruitPredicate];

// Printing the description for each fruit in the filtered array
for (FoodItem *fruit in fruits) {
    [fruit printDescription];
}
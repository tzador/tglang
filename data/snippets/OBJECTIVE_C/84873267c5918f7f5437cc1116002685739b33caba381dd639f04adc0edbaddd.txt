// Create a class called "Person"
@interface Person : NSObject

// Add properties for name, age, and occupation
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) NSInteger age;
@property (nonatomic, strong) NSString *occupation;

// Create a custom initializer method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age occupation:(NSString *)occupation;

@end

// Implement the custom initializer method
@implementation Person

// Set values for the properties using the initializer method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age occupation:(NSString *)occupation {
    self = [super init];
    if (self) {
        _name = name;
        _age = age;
        _occupation = occupation;
    }
    return self;
}

@end

// Create a subclass of "Person" called "Student"
@interface Student : Person

// Add a new property for major
@property (nonatomic, strong) NSString *major;

// Override the custom initializer method to add a major parameter
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age occupation:(NSString *)occupation major:(NSString *)major;

@end

// Implement the custom initializer method for the "Student" subclass
@implementation Student

// Set values for the properties using the overridden initializer method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age occupation:(NSString *)occupation major:(NSString *)major {
    self = [super initWithName:name age:age occupation:occupation];
    if (self) {
        _major = major;
    }
    return self;
}

@end

// Create an instance of "Student" and set values for the properties
Student *student = [[Student alloc] initWithName:@"John Doe" age:20 occupation:@"Student" major:@"Computer Science"];

// Log the values for the properties
NSLog(@"Name: %@, Age: %ld, Occupation: %@, Major: %@", student.name, (long)student.age, student.occupation, student.major);
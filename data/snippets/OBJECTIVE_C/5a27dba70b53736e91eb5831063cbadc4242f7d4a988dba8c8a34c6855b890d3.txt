#import <Foundation/Foundation.h> // imports the Foundation framework (standard library for Objective-C)

// defining a custom class named 'Person'
@interface Person : NSObject // NSObject is the base class for most Objective-C objects
{
    NSString *name; // declares an instance variable named 'name' of type NSString
}
-(void)setName:(NSString *)newName; // declares a method named 'setName' which takes in a parameter of type NSString
-(NSString *)getName; // declares a method named 'getName' which returns a value of type NSString
@end // ends the interface declaration

@implementation Person // implementation of the 'Person' class
-(void)setName:(NSString *)newName { // implementation of the 'setName' method
    name = newName; // sets the 'name' variable to the value passed in as the parameter
}
-(NSString *)getName { // implementation of the 'getName' method
    return name; // returns the value of the 'name' variable
}
@end // ends the implementation

int main(int argc, const char * argv[]) { // main function
    @autoreleasepool { // autorelease pool to manage memory
        Person *person = [[Person alloc] init]; // creates an instance of the 'Person' class and initializes it
        [person setName:@"John"]; // calls the 'setName' method with the value "John" as the parameter
        NSString *personName = [person getName]; // calls the 'getName' method and stores the returned value in the variable 'personName'
        NSLog(@"The person's name is %@", personName); // prints out the person's name using the 'NSLog' method
    }
    return 0; // ends the function and returns 0 to indicate successful execution
}
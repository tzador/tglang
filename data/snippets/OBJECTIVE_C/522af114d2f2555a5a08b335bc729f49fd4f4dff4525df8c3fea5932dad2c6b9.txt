#import <Foundation/Foundation.h> // importing Foundation framework

// creating a custom class "Car"
@interface Car : NSObject

// declaring properties for the car class
@property (nonatomic, strong) NSString *make;
@property (nonatomic, strong) NSString *model;
@property (nonatomic, assign) int year;
@property (nonatomic, assign) int horsepower;

// declaring methods for the car class
-(void)drive;
-(void)accelerateWithSpeed:(int)speed;
-(void)stop;
-(void)changeOil;

@end

// implementing the car class
@implementation Car

// overriding the default init method
-(instancetype)init {
    self = [super init];
    if (self) {
        // setting initial values for properties
        self.make = @"Toyota";
        self.model = @"Camry";
        self.year = 2020;
        self.horsepower = 190;
    }
    return self;
}

// method for driving the car
-(void)drive {
    NSLog(@"Driving the %@ %@!", self.make, self.model);
}

// method for accelerating the car
-(void)accelerateWithSpeed:(int)speed {
    NSLog(@"Accelerating at %d mph!", speed);
}

// method for stopping the car
-(void)stop {
    NSLog(@"Stopping the %@ %@!", self.make, self.model);
}

// method for changing the car's oil
-(void)changeOil {
    NSLog(@"Changing the oil for the %@ %@!", self.make, self.model);
}

@end

// main function
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // creating an instance of the car class
        Car *myCar = [[Car alloc]init];
        
        // calling methods on the car instance
        [myCar drive];
        [myCar accelerateWithSpeed:50];
        [myCar stop];
        [myCar changeOil];
        
        // outputting the car's horsepower
        NSLog(@"%@ %@ has %d horsepower.", myCar.make, myCar.model, myCar.horsepower);
    }
    return 0;
}
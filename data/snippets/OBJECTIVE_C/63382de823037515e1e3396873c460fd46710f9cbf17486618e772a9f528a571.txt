#import <Foundation/Foundation.h> //Importing the Foundation framework to access its classes and methods.

@interface Person : NSObject //Defining a new class called 'Person' that inherits from the base class 'NSObject'

@property (nonatomic, strong) NSString *firstName; //Defining a property called 'firstName' of type NSString, which is a string data type that holds a sequence of characters. The property is marked as nonatomic and strong, meaning it can be accessed and modified by multiple threads simultaneously and it has a strong ownership attribute.

@property (nonatomic, strong) NSString *lastName; //Defining a property called 'lastName' of type NSString.

@property (nonatomic, assign) int age; //Defining a property called 'age' of type int, which is an integer data type that holds whole numbers.

- (void)sayHello; //Defining a method called 'sayHello' that has a void return type, meaning it does not return any value. This method is responsible for printing a greeting message.

@end //Ending the interface declaration.

@implementation Person //Starting the implementation of the 'Person' class.

- (void)sayHello { //Defining the implementation of the 'sayHello' method.
    NSLog(@"Hello, my name is %@ %@ and I am %d years old.", self.firstName, self.lastName, self.age); //Using the 'NSLog' function to print a formatted string, where the values of the properties 'firstName', 'lastName' and 'age' are inserted.
}

@end //Ending the implementation declaration.

int main(int argc, char * argv[]) { //Starting the main function. This is where the program execution begins.

    @autoreleasepool { //Creating an autorelease pool to manage memory usage.
        Person *person = [[Person alloc] init]; //Creating an instance of the 'Person' class and assigning it to the variable 'person'.
        person.firstName = @"John"; //Assigning a value to the property 'firstName'.
        person.lastName = @"Smith"; //Assigning a value to the property 'lastName'.
        person.age = 25; //Assigning a value to the property 'age'.
        [person sayHello]; //Calling the 'sayHello' method on the 'person' instance.
    } //Ending the autorelease pool scope.

    return 0; //Returning the value 0 to indicate successful program execution.

} //Ending the main function.
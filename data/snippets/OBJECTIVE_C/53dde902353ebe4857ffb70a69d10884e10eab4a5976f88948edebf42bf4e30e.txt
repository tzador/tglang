#include <Foundation/Foundation.h>

//create a class called Person with two properties
@interface Person : NSObject
//define properties of type NSString and int
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) int age;

//create a method for initializing the class
- (id)initWithName:(NSString *)name andAge:(int)age;
@end

//implementation of the Person class
@implementation Person

//implementation of the initializer method
- (id)initWithName:(NSString *)name andAge:(int)age {
    self = [super init];
    if (self) {
        //set the properties to the passed in values
        self.name = name;
        self.age = age;
    }
    return self;
}

@end

//create a subclass of Person called Student
@interface Student : Person
//define additional property of type int
@property (nonatomic, assign) int grade;

//create a method for initializing the class
- (id)initWithName:(NSString *)name andAge:(int)age andGrade:(int)grade;
@end

//implementation of the Student class
@implementation Student

//implementation of the initializer method
- (id)initWithName:(NSString *)name andAge:(int)age andGrade:(int)grade {
    self = [super initWithName:name andAge:age];
    if (self) {
        //set the grade property to the passed in value
        self.grade = grade;
    }
    return self;
}

@end

//create an array to store instances of the Person class
NSMutableArray *people = [NSMutableArray array];

//create two instances of Person and add them to the array
Person *person1 = [[Person alloc] initWithName:@"John" andAge:25];
[people addObject:person1];

Person *person2 = [[Person alloc] initWithName:@"Jane" andAge:30];
[people addObject:person2];

//create an instance of Student and add it to the array
Student *student = [[Student alloc] initWithName:@"Bob" andAge:20 andGrade:12];
[people addObject:student];

//loop through the array and print out the name, age, and grade (if applicable) of each Person object
for (Person *person in people) {
    NSLog(@"Name: %@, Age: %d", person.name, person.age);
    //check if the object is an instance of Student
    if ([person isKindOfClass:[Student class]]) {
        //if it is, cast the object to Student and print out the grade
        Student *student = (Student *)person;
        NSLog(@"Grade: %d", student.grade);
    }
}
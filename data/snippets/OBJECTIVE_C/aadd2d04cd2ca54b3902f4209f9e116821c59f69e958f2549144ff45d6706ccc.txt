// Define a custom object
@interface CustomObject : NSObject

// Declare properties
@property (nonatomic, strong) NSString *name;
@property (nonatomic, strong) NSNumber *age;

// Declare a method that initializes the object with a name and age
- (instancetype)initWithName:(NSString *)name andAge:(NSNumber *)age;

// Declare a class method that returns an array of objects
+ (NSArray *)generateObjectsWithNames:(NSArray *)names andAges:(NSArray *)ages;

@end

// Implementation of the custom object
@implementation CustomObject

// Implementation of the initializer method
- (instancetype)initWithName:(NSString *)name andAge:(NSNumber *)age {
  self = [super init];
  if (self) {
    self.name = name;
    self.age = age;
  }
  return self;
}

// Implementation of the class method
+ (NSArray *)generateObjectsWithNames:(NSArray *)names andAges:(NSArray *)ages {
  NSMutableArray *objects = [NSMutableArray new];
  for (int i = 0; i < names.count; i++) {
    CustomObject *object = [[CustomObject alloc] initWithName:names[i] andAge:ages[i]];
    [objects addObject:object];
  }
  return objects;
}

@end

// Create an array of names and ages to use for object generation
NSArray *names = @[@"John", @"Jane", @"Bob"];
NSArray *ages = @[@25, @33, @42];

// Call the class method to generate an array of objects
NSArray *objects = [CustomObject generateObjectsWithNames:names andAges:ages];
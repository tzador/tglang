// Annotated Objective-C Code Snippet
#import <Foundation/Foundation.h>

// Custom interface for a Shape object
// This is a geometric shape with a specific color and size
@interface Shape : NSObject

// Properties for color and size
@property (nonatomic, strong) UIColor *color;
@property (nonatomic) CGFloat size;

// Method to draw the shape
- (void)draw;

// Method to calculate the area of the shape
- (CGFloat)calculateArea;

@end

// Implementation of the Shape interface
@implementation Shape

// Implementation of the draw method
- (void)draw {
    // TODO: Add code to draw the shape
    // This method should be overridden in subclasses
}

// Implementation of the calculateArea method
- (CGFloat)calculateArea {
    // This method should be overridden in subclasses
    return 0.0;
}

@end

// Subclass Square that inherits from Shape
// This is a specific type of shape with four equal sides
@interface Square : Shape

// Property for side length
@property (nonatomic) CGFloat sideLength;

// Method to calculate the area of a square
- (CGFloat)calculateArea;

@end

// Implementation of the Square interface
@implementation Square

// Override calculateArea method to calculate the area of a square
- (CGFloat)calculateArea {
    return self.sideLength * self.sideLength;
}

@end

// Subclass Circle that inherits from Shape
// This is a specific type of shape with a radius
@interface Circle : Shape

// Property for radius
@property (nonatomic) CGFloat radius;

// Method to calculate the area of a circle
- (CGFloat)calculateArea;

// Method to calculate the circumference of a circle
- (CGFloat)calculateCircumference;

@end

@implementation Circle

// Override calculateArea method to calculate the area of a circle
- (CGFloat)calculateArea {
    return M_PI * self.radius * self.radius;
}

// Method to calculate the circumference of a circle
- (CGFloat)calculateCircumference {
    return 2 * M_PI * self.radius;
}

@end

// Main function
int main(int argc, const char * argv[]) {
    // Create an instance of a square
    Square *square = [[Square alloc] init];
    // Set the side length
    square.sideLength = 5;
    
    // Create an instance of a circle
    Circle *circle = [[Circle alloc] init];
    // Set the radius
    circle.radius = 3;
    
    // Call the draw method for the square
    [square draw];
    // Call the draw method for the circle
    [circle draw];
    
    // Calculate and print the area of the square
    CGFloat squareArea = [square calculateArea];
    NSLog(@"Area of Square: %f", squareArea);
    
    // Calculate and print the area of the circle
    CGFloat circleArea = [circle calculateArea];
    NSLog(@"Area of Circle: %f", circleArea);
    
    // Calculate and print the circumference of the circle
    CGFloat circleCircumference = [circle calculateCircumference];
    NSLog(@"Circumference of Circle: %f", circleCircumference);
    
    return 0;
}
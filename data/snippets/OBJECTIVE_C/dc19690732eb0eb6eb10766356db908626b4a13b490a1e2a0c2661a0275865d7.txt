// Creating an instance of a custom class
MyCustomClass *myObject = [[MyCustomClass alloc] init];
 
// Accessing properties
myObject.property = @"Hello"; // Setting a value
NSString *myString = myObject.anotherProperty; // Getting a value
 
// Calling methods
[myObject performActionWithArg:@"World"]; // Calling a method with an argument
[myObject performAction]; // Calling a method without any arguments
 
// Creating and using an array
NSArray *myArray = @[@"Apple", @"Orange", @"Banana"];
NSString *firstItem = myArray[0]; // Accessing first item in array
NSString *lastItem = [myArray lastObject]; // Accessing last item in array
 
// Looping through an array
for (NSString *fruit in myArray) {
    NSLog(@"I like %@", fruit);
}
 
// Using conditionals
if ([myArray containsObject:@"Melon"]) {
    NSLog(@"I also like Melon");
} else {
    NSLog(@"I don't like Melon");
}
 
// Using enumerated types
typedef NS_ENUM(NSInteger, FruitType) {
    Apple,
    Orange,
    Banana,
    Melon
};
 
FruitType myFavoriteFruit = Apple;
 
if (myFavoriteFruit == Orange) {
    NSLog(@"My favorite fruit is Orange");
} else if (myFavoriteFruit == Banana) {
    NSLog(@"My favorite fruit is Banana");
} else if (myFavoriteFruit == Melon) {
    NSLog(@"My favorite fruit is Melon");
} else {
    NSLog(@"My favorite fruit is Apple");
}
 
// Using a switch statement
switch (myFavoriteFruit) {
    case Apple:
        NSLog(@"My favorite fruit is Apple");
        break;
    case Orange:
        NSLog(@"My favorite fruit is Orange");
        break;
    case Banana:
        NSLog(@"My favorite fruit is Banana");
        break;
    case Melon:
        NSLog(@"My favorite fruit is Melon");
        break;
    default:
        break;
}
 
// Delegating tasks to another class
myObject.delegate = self; // Setting the delegate to self
 
// Implementing the delegate methods
- (void)myCustomClass:(MyCustomClass *)myClass didPerformAction:(NSString *)action {
    NSLog(@"MyCustomClass did %@ with arg: %@", action, myClass.name);
}
 
// Using blocks
[myObject performActionWithCompletion:^(NSString *result) {
    if (result) {
        NSLog(@"Action was successful");
    } else {
        NSLog(@"Action failed");
    }
}];
// Declare an enum for different car models
typedef enum {
    SEDAN,
    HATCHBACK
} CarModel;

// Create a Car class with properties for brand, model, and year
@interface Car : NSObject

@property (nonatomic, strong) NSString *brand;
@property (nonatomic, strong) NSString *model;
@property (nonatomic) int year;

// Method to initialize Car with specified brand, model, and year
- (instancetype)initWithBrand:(NSString *)brand
                        model:(NSString *)model
                         year:(int)year;

// Method to print out car information
- (void)printCarInfo;

@end

// Implementation of the Car class
@implementation Car

// Initialization method for Car class
- (instancetype)initWithBrand:(NSString *)brand
                        model:(NSString *)model
                         year:(int)year
{
    self = [super init];
    if (self) {
        _brand = brand;
        _model = model;
        _year = year;
    }
    return self;
}

// Method to print out car information
- (void)printCarInfo
{
    NSLog(@"Brand: %@ | Model: %@ | Year: %d", self.brand, self.model, self.year);
}

@end

// Example usage of Car class
Car *sedan = [[Car alloc] initWithBrand:@"Toyota" model:@"Camry" year:2020];
[sedan printCarInfo];
// Output: Brand: Toyota | Model: Camry | Year: 2020
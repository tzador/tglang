#import <Foundation/Foundation.h> //importing the Foundation framework

@interface Person : NSObject //creating a class called Person and inheriting from NSObject

@property (nonatomic, strong) NSString *name; //declares a property called name of type NSString, nonatomic and using strong memory attribute

@property (nonatomic, assign) NSInteger age; //declares a property called age of type NSInteger, nonatomic and using assign memory attribute

- (void)introduceSelf; //declaring a method called introduceSelf without any parameters or return type

@end //end of interface

@implementation Person //implementation of the Person class

- (instancetype)initWithName:(NSString *)name andAge:(NSInteger)age { //declaring an initializer method with parameters name of type NSString and age of type NSInteger
    self = [super init]; //calls the designated initializer of the superclass (NSObject)
    if (self) { //if successfully initialized
        self.name = name; //sets the name property to the passed in name parameter
        self.age = age; //sets the age property to the passed in age parameter
    }
    return self; //returns the newly initialized object
}

- (void)introduceSelf { //implementation of the introduceSelf method
    NSLog(@"Hello, my name is %@ and I am %ld years old.", self.name, self.age); //prints out a personalized introduction using the name and age properties
}

@end //end of implementation

int main(int argc, const char * argv[]) { //main function
    @autoreleasepool { //allocating memory for the autorelease pool
        Person *person = [[Person alloc] initWithName:@"John" andAge:25]; //initializing a Person object and assigning it to the person variable
        [person introduceSelf]; //calling the introduceSelf method on the person object
    }
    return 0; //exit main function
}
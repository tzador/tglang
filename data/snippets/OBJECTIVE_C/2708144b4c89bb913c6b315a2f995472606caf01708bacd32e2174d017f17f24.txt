#import <Foundation/Foundation.h>

@interface Person : NSObject // creating a class called Person

@property (nonatomic, strong) NSString *name; // creating an instance variable with the property name, type NSString and using the strong reference

@property (nonatomic, assign) int age; // creating an instance variable with the property age, type int and using the assign attribute

- (instancetype)initWithName:(NSString *)name andAge:(int)age; // creating a custom initializer method with parameters name and age

- (void)introduce; // creating a method called introduce that returns void

@end // end of interface

@implementation Person // implementation of the Person class

- (instancetype)initWithName:(NSString *)name andAge:(int)age { // implementing the custom initializer method
    self = [super init]; // calling the superclass's initializer method
    if (self) { // checking if the initialization was successful
        self.name = name; // setting the name variable to the passed in parameter
        self.age = age; // setting the age variable to the passed in parameter
    }
    return self; // returning the initialized object
}

- (void)introduce { // implementing the introduce method
    NSLog(@"Hi, my name is %@ and I am %d years old.", self.name, self.age); // printing out a message with the name and age variables
}

@end // end of implementation

int main(int argc, const char * argv[]) { // main method
    @autoreleasepool { // creating an autorelease pool for managing memory
        Person *person = [[Person alloc] initWithName:@"John" andAge:25]; // creating an instance of the Person class using the custom initializer method
        [person introduce]; // calling the introduce method on the person instance
    }
    return 0; // returning 0 to indicate successful execution
}
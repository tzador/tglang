// This is a complex code snippet in Objective-C
#import <Foundation/Foundation.h> // Importing the Foundation Framework

/*** Creating a class called Person, which will have properties for name, age, and occupation ***/
@interface Person : NSObject // Declaring the Person class as a subclass of NSObject
    
@property (strong, nonatomic) NSString *name; // A property for storing the person's name as a string
@property (nonatomic) int age; // A property for storing the person's age as an integer
@property (strong, nonatomic) NSString *occupation; // A property for storing the person's occupation as a string

/*** Creating methods for initializing the Person object and displaying their information ***/
- (instancetype)initWithName:(NSString *)name age:(int)age occupation:(NSString *)occupation; // Initializing method for the Person object with parameters for name, age, and occupation
- (void)displayPersonInfo; // Method for displaying the person's information in the console

/*** Declaring a category for the Person class that adds a method for changing the person's occupation ***/
@interface Person (ChangeOccupation)

- (void)changeOccupationTo:(NSString *)occupation; // Method for changing the person's occupation to a new value

@end

/*** Implementing the methods of the Person class and the ChangeOccupation category ***/
@implementation Person

- (instancetype)initWithName:(NSString *)name age:(int)age occupation:(NSString *)occupation { // Initializing method for the Person class
    self = [super init]; // Calling the superclass initialization method
    if (self) {
        self.name = name; // Setting the person's name to the given parameter
        self.age = age; // Setting the person's age to the given parameter
        self.occupation = occupation; // Setting the person's occupation to the given parameter
    }
    return self; // Returning the initialized object
}

- (void)displayPersonInfo { // Method for displaying the person's information
    NSLog(@"Name: %@, Age: %d, Occupation: %@", self.name, self.age, self.occupation); // Printing the person's information to the console
}

@end

@implementation Person (ChangeOccupation)

- (void)changeOccupationTo:(NSString *)occupation { // Method for changing the person's occupation
    self.occupation = occupation; // Setting the person's occupation to the given parameter
}

@end

/*** Creating an instance of the Person class and using the methods to display and change the person's information ***/
Person *person = [[Person alloc] initWithName:@"John" age:35 occupation:@"Teacher"]; // Creating a new Person object with the given parameters
[person displayPersonInfo]; // Calling the method to display the person's information
[person changeOccupationTo:@"Lawyer"]; // Calling the method to change the person's occupation
[person displayPersonInfo]; // Calling the method again to show the updated information

/*** Output:
Name: John, Age: 35, Occupation: Teacher
Name: John, Age: 35, Occupation: Lawyer
***/
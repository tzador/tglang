// Import necessary libraries
#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/* Define a class named "Person" with properties for name, age, and occupation */
@interface Person : NSObject
@property(nonatomic, strong) NSString *name;
@property(nonatomic, assign) int age;
@property(nonatomic, strong) NSString *occupation;
@end

@implementation Person
/* Implement method to print information about the person */
- (void)printInfo {
    NSLog(@"Name: %@\n Age: %d\n Occupation: %@", self.name, self.age, self.occupation);
}
@end

/* Create an instance of Person class and set its properties */
Person *person = [[Person alloc] init];
person.name = @"John Smith";
person.age = 25;
person.occupation = @"Software Engineer";

/* Define a protocol named "Animal" with method for making noise */
@protocol Animal
- (void)makeNoise;
@end

/* Create a class named "Dog" conforming to the protocol "Animal" */
@interface Dog : NSObject <Animal>
@end

@implementation Dog
/* Implement makeNoise method to print a bark sound */
- (void)makeNoise {
    NSLog(@"Bark!");
}
@end

/* Create an instance of Dog class and call the makeNoise method */
Dog *dog = [[Dog alloc] init];
[dog makeNoise];

/* Define a function that takes in a block as a parameter and executes it */
void executeBlock(void (^block)(void)) {
    block();
}

/* Call the function with a block that prints a random number */
executeBlock(^{
    int randomNumber = arc4random_uniform(100);
    NSLog(@"Random number: %d", randomNumber);
});

/* Create a mutable array to store multiple Person objects */
NSMutableArray *personArray = [[NSMutableArray alloc] init];

/* Add two Person objects to the array */
[personArray addObject:[[Person alloc] initWithName:@"Emily Jenkins" age:30 occupation:@"Doctor"]];
[personArray addObject:[[Person alloc] initWithName:@"Mark Johnson" age:42 occupation:@"Teacher"]];

/* Loop through the array and print the information of each person */
for (Person *person in personArray) {
    [person printInfo];
}
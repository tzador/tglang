/**
This is a comment in Objective-C
*/

#import <Foundation/Foundation.h>

/**
This is a preprocessor directive that imports the Foundation framework
*/

@interface Person : NSObject

// This is the beginning of an interface for the Person class

@property (nonatomic, strong) NSString *name;

// This is a property declaration for the name of the person

@property (nonatomic, assign, readonly) int age;

// This is a read-only property declaration for the age of the person

@property (nonatomic, strong) NSArray *hobbies;

// This is a property declaration for an array of the person's hobbies

- (instancetype)initWithName:(NSString *)name andAge:(int)age andHobbies:(NSArray *)hobbies;

/**
This is a custom initializer method that takes in the person's name, age, and hobbies as parameters.
In Objective-C, the keyword "instancetype" is used to return a more specific type rather than just "id".
*/

- (void)sayHello;

/**
This is a method declaration for the sayHello method.
Methods in Objective-C are declared with a "-" for instance methods and a "+" for class methods.
Void represents that the method has no return type.
*/

@end

// This is the end of the Person interface

@implementation Person

// This is the beginning of the implementation for the Person class

- (instancetype)initWithName:(NSString *)name andAge:(int)age andHobbies:(NSArray *)hobbies {
    self = [super init];
    // This calls the superclass' initializer method, which in this case is NSObject's init method
    if (self) {
        // If the superclass' init method is successful, we set the instance variables
        self.name = name;
        self.age = age;
        self.hobbies = hobbies;
    }
    return self;
}

- (void)sayHello {
    // This method prints out a greeting with the person's name
    NSLog(@"Hello, my name is %@!", self.name);
}

@end

// This is the end of the Person implementation

int main() {
    Person *person1 = [[Person alloc] initWithName:@"John" andAge:25 andHobbies:@[@"Reading", @"Hiking", @"Playing guitar"]];
    // This creates a new Person object using the customized initializer method
    [person1 sayHello];
    // This calls the sayHello method on the person1 object, which prints out a greeting
    return 0;
}

// This is the end of the main function, and marks the end of the Objective-C code.
// Creating a custom class called 'Person'
@interface Person : NSObject

// Properties of the Person class
@property (nonatomic, strong) NSString *name;
@property (nonatomic, assign) NSInteger age;
@property (nonatomic, strong) NSString *occupation;
@property (nonatomic, assign) BOOL isMarried;

// Constructor method for creating instances of the Person class
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age occupation:(NSString *)occupation isMarried:(BOOL)isMarried;

// Method for introducing the Person
- (void)introduceSelf;

@end

@implementation Person

// Implementation of the constructor method
- (instancetype)initWithName:(NSString *)name age:(NSInteger)age occupation:(NSString *)occupation isMarried:(BOOL)isMarried {
    self = [super init];
    
    if (self) {
        // Setting the properties of the Person instance
        self.name = name;
        self.age = age;
        self.occupation = occupation;
        self.isMarried = isMarried;
    }
    
    return self;
}

// Implementation of the introduction method
- (void)introduceSelf {
    NSString *introduction;
    
    if (self.isMarried) {
        introduction = [NSString stringWithFormat:@"Hello, my name is %@, I am %ld years old, and I work as a %@. I am happily married.", self.name, (long)self.age, self.occupation];
    } else {
        introduction = [NSString stringWithFormat:@"Hello, my name is %@, I am %ld years old, and I work as a %@. I am currently single.", self.name, (long)self.age, self.occupation];
    }
    
    NSLog(@"%@", introduction);
}

@end

// Creating an instance of the Person class
Person *person = [[Person alloc] initWithName:@"John Doe" age:32 occupation:@"Software Engineer" isMarried:YES];

// Calling the introduction method on the person instance
[person introduceSelf];

// Output:
//
// Hello, my name is John Doe, I am 32 years old, and I work as a Software Engineer. I am happily married.
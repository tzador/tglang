// This code snippet creates a Person class with properties and methods
@interface Person : NSObject
@property (nonatomic, strong) NSString *firstName; // property for first name
@property (nonatomic, strong) NSString *lastName; // property for last name
@property (nonatomic) int age; // property for age

// method to initialize a Person object with a first name, last name and age
- (instancetype)initWithFirstName:(NSString *)firstName
                        lastName:(NSString *)lastName
                             age:(int)age;

// method to print the full name of the Person
- (void)printFullName;

// method to get the current year
- (int)getCurrentYear;

// method to check if the person is older than a specified age
- (BOOL)isOlderThan:(int)age;

// method to calculate the sum of two numbers
- (int)sumOfNumbersWithX:(int)x Y:(int)y;

// method to compare two Person objects based on their age
- (NSComparisonResult)compareByAge:(Person *)person;
@end

@implementation Person
- (instancetype)initWithFirstName:(NSString *)firstName
                        lastName:(NSString *)lastName
                             age:(int)age {
    self = [super init];
    if (self) {
        _firstName = firstName;
        _lastName = lastName;
        _age = age;
    }
    return self;
}

- (void)printFullName {
    NSLog(@"%@ %@", self.firstName, self.lastName);
}

- (int)getCurrentYear {
    NSDate *date = [NSDate date];
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSDateComponents *components = [calendar components:NSCalendarUnitYear fromDate:date];
    return [components year];
}

- (BOOL)isOlderThan:(int)age {
    if (self.age > age) {
        return YES;
    } else {
        return NO;
    }
}

- (int)sumOfNumbersWithX:(int)x Y:(int)y {
    return x + y;
}

- (NSComparisonResult)compareByAge:(Person *)person {
    if (self.age > person.age) {
        return NSOrderedDescending;
    } else if (self.age < person.age) {
        return NSOrderedAscending;
    } else {
        return NSOrderedSame;
    }
}
@end
// Declaring a class with properties and methods
@interface Car : NSObject
// Private properties
@property (nonatomic, strong) NSString *make;
@property (nonatomic, strong) NSString *model;
@property (nonatomic, assign) NSInteger year;

// Public method - prints the car's information
-(void)printCarInfo;

// Private method - calculates the car's age
-(NSInteger)calculateAge;

@end

// Implementing the class
@implementation Car

// Synthesizing the properties
@synthesize make = _make;
@synthesize model = _model;
@synthesize year = _year;

// Implementing the printCarInfo method
-(void)printCarInfo {
    NSLog(@"This car is a %@ %@ from %ld", self.make, self.model, (long)self.year);
}

// Implementing the calculateAge method
-(NSInteger)calculateAge {
    // Calculating the current year
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSDateComponents *components = [calendar components:NSCalendarUnitYear fromDate:[NSDate date]];
    NSInteger currentYear = [components year];
    
    // Calculating the car's age
    NSInteger age = currentYear - self.year;
    return age;
}

@end

// Instantiating a new Car object
Car *myCar = [[Car alloc] init];

// Setting the car's properties
myCar.make = @"Ford";
myCar.model = @"Mustang";
myCar.year = 2010;

// Calling the printCarInfo method to print the car's information
[myCar printCarInfo];

// Calling the calculateAge method to get the car's age
NSInteger age = [myCar calculateAge];

// Output: This car is a Ford Mustang from 2010
// Age of car: 10 years
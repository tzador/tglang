// Declaring a custom class in Objective-C

// Header file (.h)
@interface Car : NSObject // Defining the class named 'Car' which inherits from NSObject

@property (nonatomic, strong) NSString *make; // Declaring a property named 'make' with the 'strong' attribute and of type NSString
@property (nonatomic, strong) NSString *model; // Declaring a property named 'model' with the 'strong' attribute and of type NSString
@property (nonatomic) int year; // Declaring a property named 'year' with the 'assign' attribute and of type int

- (void)startEngine; // Declaring a method named 'startEngine' which takes in no parameters and returns nothing
- (void)driveWithSpeed:(int)speed; // Declaring a method named 'driveWithSpeed' which takes in an int parameter named 'speed' and returns nothing

@end

// Implementation file (.m)
@implementation Car // Implementing the class 'Car'

// Initializing the properties in the constructor
- (id)init {
    self = [super init]; // Calling the initialize method of the parent class to ensure all properties are properly initialized
    
    if (self) {
        self.make = @"Honda"; // Setting the value of the 'make' property to 'Honda'
        self.model = @"Civic"; // Setting the value of the 'model' property to 'Civic'
        self.year = 2021; // Setting the value of the 'year' property to 2021
    }
    
    return self;
}

// Implementing the method 'startEngine'
- (void)startEngine {
    NSLog(@"Engine started!"); // Printing a message to the console
}

// Implementing the method 'driveWithSpeed'
- (void)driveWithSpeed:(int)speed {
    NSLog(@"Driving at %d km/hr", speed); // Printing a message to the console
}

@end

// Creating an instance of the class and calling its methods
Car *myCar = [[Car alloc] init]; // Creating an instance of the class 'Car'
[myCar startEngine]; // Calling the method 'startEngine'
[myCar driveWithSpeed:60]; // Calling the method 'driveWithSpeed' and passing in 60 as the speed parameter
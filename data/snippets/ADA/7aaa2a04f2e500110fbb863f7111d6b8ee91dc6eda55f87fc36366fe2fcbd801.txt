pragma Ada_2012;
with Ada.Text_IO;
use Ada.Text_IO;
procedure Complex_Code is
    type Char_Array is array (Positive range <>) of Character; -- declaration of a type
    function Swap (Item : in Char_Array) return Char_Array is -- function declaration
        Result : Char_Array (Item'Range);
    begin
        for I in Result'Range loop
            Result (I) := Item (Item'Last - I + Item'First); -- swap elements
        end loop;
        return Result;
    end Swap;
    procedure Print_Array (A : in Char_Array) is -- procedure declaration
    begin
        for J in A'Range loop
            Put (A (J)); -- print each element of the array
        end loop;
        new_line;
    end Print_Array;
    Array1 : Char_Array := 'ada'; -- initialize array
    Array2 : Char_Array (1 .. 3) := Swap (Array1); -- call swap function
begin
    Print_Array (Array1); -- output original array 'ada'
    Print_Array (Array2); -- output swapped array 'ada' becomes 'ada'
end Complex_Code;
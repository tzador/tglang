-- Declare an array of integers with a maximum of 10 elements
subtype My_Array is Integer_Array(1..10);

-- Assign values to array elements
My_Array(1) := 5;
My_Array(2) := 10;
My_Array(3) := 7;
My_Array(4) := 2;
My_Array(5) := 6;
My_Array(6) := 3;
My_Array(7) := 9;
My_Array(8) := 1;
My_Array(9) := 8;
My_Array(10) := 4;

-- Define a function to sort the array using selection sort algorithm
function Selection_Sort (array : in out My_Array) return My_Array is

    -- Declare variables to store current minimum and index
    Min : Integer;
    Index : Integer;

begin

    -- Loop through array to find minimum value
    for i in My_Array'First .. My_Array'Last loop
        -- Set current minimum to first element in array
        Min := My_Array(i);
        -- Set current index to first element in array
        Index := i;

        -- Look for minimum value in remaining array elements
        for j in i+1 .. My_Array'Last loop
            -- Compare current minimum to next element in array
            if My_Array(j) < Min then
                -- Update minimum value and index if lower value is found
                Min := My_Array(j);
                Index := j;
            end if;
        end loop;

        -- Swap minimum value with current loop index
        My_Array(Index) := My_Array(i);
        My_Array(i) := Min;
    end loop;

    -- Return sorted array
    return array;
end Selection_Sort;

begin
    -- Call function to sort array
    Selection_Sort(My_Array);

    -- Print sorted array
    for i in My_Array'First .. My_Array'Last loop
        Ada.Text_IO.Put_Line("" & My_Array(i));
    end loop;
end;
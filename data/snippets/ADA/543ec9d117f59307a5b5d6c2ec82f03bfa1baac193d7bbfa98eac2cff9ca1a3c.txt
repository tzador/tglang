-- Initialize array
Sample_Array : array(1..20) of Integer := (1, 2, 5, 9, 10, 12, 15, 18, 21, 24, 26, 28, 31, 33, 35, 38, 39, 42, 45, 47);

-- Define function with input and output parameters
function Binary_Search (Input : in Integer; Data : in Sample_Array) return Integer is
    -- Define local variables
    Low, High, Mid : Integer;
begin
    -- Set initial values
    Low := 1;
    High := Data'Last;
    Mid := (Low + High) / 2;

    -- Loop until the value is found or the search range is exhausted
    while Low <= High loop
        -- Check if the middle element is equal to the input value
        if Data(Mid) = Input then
            -- Return the index of the middle element
            return Mid;
        elsif Data(Mid) < Input then
            -- Set the new lower bound
            Low := Mid + 1;
        else
            -- Set the new upper bound
            High := Mid - 1;
        end if;

        -- Calculate the new middle index
        Mid := (Low + High) / 2;
    end loop;

    -- Return -1 if the input value is not found
    return -1;
end Binary_Search;

-- Call the function with a sample input
Result : Integer := Binary_Search(28, Sample_Array);
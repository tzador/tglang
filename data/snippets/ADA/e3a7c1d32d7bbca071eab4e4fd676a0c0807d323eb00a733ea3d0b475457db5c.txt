procedure Quicksort is
  type IntArray is array(Integer range <>) of Integer;

  procedure Swap (L: in out IntArray; I, J: Integer) is
    T: Integer;
  begin
    T := L(I);
    L(I) := L(J);
    L(J) := T;
  end Swap;

  function Partition (A: IntArray; Low, High: Integer) return Integer is
    Pivot: Integer := A(High);
    I, J: Integer := Low;
  begin
    for J in Low .. High - 1 loop
      if A(J) <= Pivot then
        Swap(A, I, J);
        I := I + 1;
      end if;
    end loop;

    Swap(A, I, High);
    return I;
  end Partition;

  procedure Sort (A: in out IntArray; Low, High: Integer) is
    P: Integer;
  begin
    if Low < High then
      P := Partition(A, Low, High);
      Sort(A, Low, P - 1);
      Sort(A, P + 1, High);
    end if;
  end Sort;

  A: IntArray (1 .. 10) := (5, 2, 8, 3, 1, 7, 6, 4, 9, 10);
begin
  Sort(A, A'First, A'Last);

  for I in A'Range loop
    Put(A(I)'Img & " ");
  end loop;
end Quicksort;
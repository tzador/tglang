-- This is a complex snippet in `ADA` that implements
-- a function to calculate the factorial of a given number.

-- Define a generic `Factorial_Function` that takes in a `positive` integer `n`
generic
    type Integer is range <>;
    with function Multiply(X,Y : Integer) return Integer;
function Factorial_Function (Input : Integer) return Integer is
    Fact : Integer := 1;
begin
    -- if `n` is 0 or 1, return 1
    if Input = 0 or Input = 1 then
        return 1;
    else
        -- if `n` is greater than 1, calculate the factorial
        for i in 2 .. Input loop
            -- multiply `Fact` with `i`
            Fact := Multiply(Fact,i);
        end loop;
        -- return the factorial value
        return Fact;
    end if;
end Factorial_Function;

-- Define a type `Large_Integer` with a large range to store the factorial result
type Large_Integer is range 0 .. 1000000;

-- Define a function `Multiply` that multiplies two `Large_Integer`s and returns a `Large_Integer`
function Multiply (X,Y : Large_Integer) return Large_Integer is
    Result : Large_Integer := 0;
begin
    -- use `loop` and `exit` to multiply `X` and `Y` and store result in `Result`
    loop
        -- exit the loop when `X` is equal to 0 or 1
        exit when X = 0 or X = 1;
        -- add `Y` to `Result`
        Result := Result + Y;
        -- decrement `X` by 1
        X := X - 1;
    end loop;
    return Result;
end Multiply;

-- Call the `Factorial_Function` and print the result to the console
put_line("The factorial of 5 is " & Factorial_Function(5)'Image);
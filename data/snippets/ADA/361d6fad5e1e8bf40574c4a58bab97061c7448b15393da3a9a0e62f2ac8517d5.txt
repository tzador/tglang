-- Declaring a record type of a student
type Student_Record is
    record
        ID_Number : Integer;
        Name : String(1..50);
        Address : String(1..100);
        Course : String(1..30);
        Grades : array(1..8) of Integer;
    end record;

-- Declare an array of student records
type Student_Array is array(1..100) of Student_Record;

-- Declare a function to calculate the average grade of a student
function Calculate_Average(Grades : array(1..8) of Integer)
    return Float is
    Sum : Integer := 0;
begin
    for i in 1..8 loop
        Sum := Sum + Grades(i);
    end loop;
    return Float(Sum)/8.0;
end Calculate_Average;

-- Declare a procedure to add a new student record to the array
procedure Add_Student(Record : in out Student_Record;
                      Array : in out Student_Array;
                      Count : in out Integer) is
begin
    Array(Count) := Record;
    Count := Count + 1;
end Add_Student;

-- Main program
procedure Main is
    Students : Student_Array;
    Input : Student_Record;
    Count : Integer := 1;
begin
    -- Read inputs from the user
    Put_Line("Enter Student ID: ");
    Get(Input.ID_Number);
    Put_Line("Enter Student Name: ");
    Get(Input.Name);
    Put_Line("Enter Student Address: ");
    Get(Input.Address);
    Put_Line("Enter Student Course: ");
    Get(Input.Course);
    Put_Line("Enter Student Grades: ");
    for i in 1..8 loop
        Get(Input.Grades(i));
    end loop;

    -- Call function to calculate average grade
    Input.Grades_Average := Calculate_Average(Input.Grades);

    -- Call procedure to add student record to the array
    Add_Student(Input, Students, Count);

    -- Output the results
    Put_Line("Student Record Added Successfully!");
    Put_Line("Student ID: " & Input.ID_Number'Image);
    Put_Line("Student Name: " & Input.Name);
    Put_Line("Student Address: " & Input.Address);
    Put_Line("Student Course: " & Input.Course);
    Put_Line("Student Grades Average: " & Input.Grades_Average'Image);
end Main;
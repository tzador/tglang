-- This is a complex code snippet in ADA

with Ada.Text_IO; use Ada.Text_IO;

procedure Complex_Code_Snippet is

   subtype Letter is Character range 'A' .. 'Z';
   subtype Number is Integer range 1 .. 10;

   type Matrix is array (Letter, Number) of Integer;

   type Point is record
      X : Number;
      Y : Number;
   end record;

   procedure Print_Matrix (M : Matrix) is
       -- This procedure prints out the elements of a matrix
   begin
       for L in Letter loop
           for N in Number loop
               Put (IntG (' ', M (L, N)), 6); -- Right align the integers
           end loop;
           New_Line;
       end loop;
   end Print_Matrix;

   procedure Sort (Data : in out Matrix) is
       -- This procedure sorts the elements of a matrix in ascending order
   begin
       for I in Letter'Range loop
           for J in Number'Range loop
               for K in Number'Range loop
                   if Data (I, J) > Data (I, K) then
                       declare
                            Temp : Integer := Data (I, J);
                       begin
                            Data (I, J) := Data (I, K);
                            Data (I, K) := Temp;
                       end;
                   end if;
               end loop;
           end loop;
       end loop;
   end Sort;

   A : Matrix :=
       ('A' => (10, 5, 2, 8, 6, 3, 2, 7, 1, 9),
           'B' => (7, 1, 3, 6, 4, 9, 3, 8, 5, 2),
           'C' => (2, 8, 9, 5, 1, 4, 7, 3, 6, 10),
           'D' => (6, 4, 9, 7, 3, 2, 5, 1, 8, 10),
           'E' => (3, 5, 8, 4, 2, 6, 1, 9, 10, 7),
           'F' => (9, 6, 1, 2, 8, 10, 5, 7, 3, 4),
           'G' => (4, 7, 5, 3, 1, 8, 6, 10, 9, 2),
           'H' => (1, 10, 6, 9, 5, 7, 2, 4, 8, 3),
           'I' => (8, 2, 7, 1, 10, 5, 9, 3, 4, 6),
           'J' => (5, 3, 4, 10, 9, 6, 8, 1, 2, 7));

begin
   Put_Line ("Before sorting:");
   Print_Matrix (A);
   Sort (A);
   New_Line;
   Put_Line ("After sorting:");
   Print_Matrix (A);
end Complex_Code_Snippet;
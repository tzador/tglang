-- Example unit package with generics and procedures

generic
   type Element_Type is private;
   type Index_Type is (<>);

package Collection is

   type Data is array (Index_Type) of Element_Type;

private

   My_Collection : Data;  -- private instantiation of the generic Data type
   
   procedure Initialize;
   -- initializes the collection

   procedure Insert (Element : Element_Type; Index : Index_Type);
   -- insert an element at the specified index

   procedure Delete (Index : Index_Type);
   -- delete the element at the specified index
   
   function Get (Index : Index_Type) return Element_Type;
   -- returns the element at the specified index
end Collection;

package body Collection is

   procedure Initialize is
   begin
      My_Collection := (others => Element_Type'(1)); -- initialize all elements to 1
   end Initialize;
   
   procedure Insert (Element : Element_Type; Index : Index_Type) is
   begin
      My_Collection(Index) := Element; -- insert element at specified index
   end Insert;
   
   procedure Delete (Index : Index_Type) is
   begin
      My_Collection(Index) := Element_Type'(null); -- delete element at specified index
   end Delete;
   
   function Get (Index : Index_Type) return Element_Type is
   begin
      return My_Collection(Index); -- return element at specified index
   end Get;

end Collection;
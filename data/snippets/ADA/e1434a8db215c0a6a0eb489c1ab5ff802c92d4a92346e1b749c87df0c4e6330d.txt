procedure Merge_Sort(A: in out Array is array<> of Integer) is
    procedure Merge(A: in out Array; Low, High, Mid: Integer) is
        i, j, k: Integer;
        L: array (Low .. Mid + 1) of Integer := (others => 0);
        R: array (Mid + 2 .. High) of Integer := (others => 0);
        begin
            for i in Low .. Mid loop
                L(i) := A(i);
            end loop;
            for j in Mid + 2 .. High loop
                R(j) := A(j);
            end loop;
            L(Mid + 1) := Integer'Last;
            R(High + 1) := Integer'Last;
            i := Low;
            j := Mid + 2;
            for k in Low .. High loop
                if L(i) <= R(j) then
                    A(k) := L(i);
                    i := i + 1;
                else
                    A(k) := R(j);
                    j := j + 1;
                end if;
            end loop;
        end Merge;

    procedure Merge_Sort(A: in out Array; Low, High: Integer) is
        Mid: Integer;
        begin
            if High > Low then
                Mid := (High + Low) / 2;
                Merge_Sort(A, Low, Mid);
                Merge_Sort(A, Mid + 1, High);
                Merge(A, Low, High, Mid);
            end if;
        end Merge_Sort;

    begin
        Merge_Sort(A, 1, A'Length);
    end Merge_Sort;
-- A program to find the kth largest element in a given array
with Ada.Integer_Text_IO;          -- Importing Ada's Integer text input/output library
procedure kth_Largest_Element is   -- Start of main program

type IntArray is array (Positive range <>) of Integer;  -- Defining a type for integer arrays

procedure Quick_Sort(Arr : in out IntArray; L, R : Integer) is   -- Defining a procedure for quicksort algorithm
    Pivot, I, J : Integer;
begin
    I := L;
    J := R + 1;
    Pivot := Arr(L);    -- Choosing the pivot element as the leftmost element
    loop
        loop
            I := I + 1;
            exit when Arr(I) >= Pivot;  -- Find the first element from the left that is larger than the pivot
        end loop;
        loop
            J := J - 1;
            exit when Arr(J) <= Pivot;  -- Find the first element from the right that is smaller than the pivot
        end loop;
        exit when I >= J;
        -- Swap the elements at indices I and J
        Arr(I) := Arr(J);
        Arr(J) := Arr(I);
    end loop;
    -- Swap the pivot element with the element at index J
    Arr(L) := Arr(J);
    Arr(J) := Pivot;

    if L < J then
        Quick_Sort(Arr, L, J - 1); -- Sort the elements to the left of J
    end if;
    if R > J then
        Quick_Sort(Arr, J + 1, R); -- Sort the elements to the right of J
    end if;
end Quick_Sort;

K : Positive;    -- Defining the variable to store the value of K
N : Positive;    -- Defining the variable to store the size of the array

begin
    Ada.Integer_Text_IO.Put_Line("Enter the value of K : ");
    Ada.Integer_Text_IO.Get(K);
    Ada.Integer_Text_IO.Put_Line("Enter the size of the array : ");
    Ada.Integer_Text_IO.Get(N);

    if K > N then
        Ada.Integer_Text_IO.Put_Line("Invalid value of K");  -- K cannot be larger than the size of the array
    else
        Declare Arr : IntArray(1..N);   -- Declaring an array of size N
        for I in 1..N loop
            Ada.Integer_Text_IO.Put_Line("Enter element " & Integer'Image(I));  -- Prompts the user to enter an array element
            Ada.Integer_Text_IO.Get(Arr(I));  -- Accepts user input and assigns it to the array element
        end loop;
        Quick_Sort(Arr, 1, N);  -- Sorts the array in ascending order using quicksort
        Ada.Integer_Text_IO.Put_Line("The " & Integer'Image(K) & " largest element in the array is : " & Integer'Image(Arr(N - K + 1)));
        -- Prints the kth largest element in the array
    end if;
end kth_Largest_Element;  -- End of main program
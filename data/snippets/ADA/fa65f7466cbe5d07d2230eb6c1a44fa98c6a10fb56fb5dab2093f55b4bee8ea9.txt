-- Sample code snippet in ADA language
with Ada.Text_IO; use Ada.Text_IO;

procedure Code_Snippet is

  type Int_Array is array (Integer range <>) of Integer;

  -- Generic procedure to sort an array in ascending order
  generic
     type Element_Type is private;
     with function "<"(Left, Right : Element_Type) return Boolean is <>;
  procedure Sort(A : in out Int_Array);

  procedure Sort(A : in out Int_Array) is
     Temp : Integer;

  begin
     for I in A'First..A'Last-1 loop

       -- Find the index of the minimum element in unsorted sub-array
       declare
          Min : Integer := A(I);
          Min_Index : Integer := I;
       begin
          for J in I+1..A'Last loop
             if A(J) < Min then
                Min := A(J);
                Min_Index := J;
             end if;
          end loop;

          -- Swap the minimum element with the first element in unsorted sub-array
          Temp := A(I);
          A(I) := A(Min_Index);
          A(Min_Index) := Temp;

       end declare;

     end loop;

  end Sort;

  A : Int_Array := (9, 3, 5, 2, 7, 1, 8, 6, 10, 4);

  -- Call the sorting procedure on the given array
  Sort(A);

  -- Print the sorted array
  for I in A'Range loop
     Put(A(I)'Image & " ");
  end loop;
  New_Line; -- Add a new line after the output

end Code_Snippet;
-- This code snippet is an example of a bubble sort algorithm in Ada

with Ada.Text_IO;  -- Importing the Ada.Text_IO package to handle standard input/output
with Ada.Integer_Text_IO; -- Importing the Ada.Integer_Text_IO package to handle integers

procedure Bubble_Sort is 
   
   type Array_Type is array (Integer range <>) of Integer; -- Creating a type for our array
   
   procedure Sort (Array : in out Array_Type) is
      Swap : Boolean; -- Boolean variable to keep track of swaps in the array
      Temp : Integer; -- Temporary variable for swapping values
      
   begin
      repeat
         Swap := False;  -- Setting swap to false at the beginning of each iteration
         
         for I in Array'First .. Array'Last - 1 loop -- Looping through the array
         
            if Array (I) > Array (I + 1) then -- Checking if the value at current index is greater than the next one
               Temp := Array (I); -- Assigning the current value to temporary variable
               Array (I) := Array (I + 1); -- Assigning the value of next index to current index
               Array (I + 1) := Temp; -- Assigning the temporary variable value to next index
               Swap := True; -- Setting swap to true since a swap has been made
            end if;
         end loop;
      until not Swap; -- Exiting the loop when no swaps have been made
   end Sort;
   
   Array : Array_Type (1 .. 10); -- Initializing an array of size 10 to sort
   
begin
   Ada.Integer_Text_IO.Get (Array (1)); -- Getting input for the first element of the array
   for I in 2 .. 10 loop
      Ada.Integer_Text_IO.Get (Array (I)); -- Getting input for the rest of the elements
   end loop;
   
   Sort (Array); -- Calling the sort procedure on the array
   
   Ada.Text_IO.Put_Line ("Sorted Array:"); -- Printing the sorted array
   for I in 1 .. 10 loop
      Ada.Text_IO.Put (Array (I) & " "); -- Printing each element of the array
   end loop;
end Bubble_Sort;
-- This program uses an extended version of the Bubble Sort algorithm to sort an array of numbers

-- Declare constants
MAX_NUMBERS : Integer := 10;  -- maximum numbers to be sorted
MAX_ITERATIONS : Integer := 5; -- maximum iterations for the sorting process
MIN_NUMBER : Integer := -100;  -- minimum possible value for numbers
MAX_NUMBER : Integer := 100;   -- maximum possible value for numbers

-- Declare variables
numbers : array(1..MAX_NUMBERS) of Integer;     -- array of numbers to be sorted
temp : Integer;                 -- temporary variable for swapping values
i : Integer;                    -- index for loops
j : Integer;                    -- index for loops
k : Integer;                    -- index for loops
sorted : Boolean := false;      -- flag to indicate if the numbers have been sorted

-- Generate a random list of numbers within the given range
for i in 1..MAX_NUMBERS loop
    numbers(i) := MIN_NUMBER + integer(random(MAX_NUMBER - MIN_NUMBER));
end loop;

-- Begin sorting process
for k in 1..MAX_ITERATIONS loop

    -- Check if the numbers are already sorted
    exit when sorted = true;
    sorted := true;  -- set flag to true

    -- Compare adjacent numbers and swap if necessary
    for i in 1..MAX_NUMBERS-1 loop
        if numbers(i) > numbers(i+1) then
            temp := numbers(i);
            numbers(i) := numbers(i+1);
            numbers(i+1) := temp;
            sorted := false;  -- if swaps are made, set flag to false
        end if;
    end loop;
end loop;

-- Output the sorted list of numbers
for j in 1..MAX_NUMBERS loop
    put(numbers(j));  -- print each number on a new line
end loop;

-- End of program
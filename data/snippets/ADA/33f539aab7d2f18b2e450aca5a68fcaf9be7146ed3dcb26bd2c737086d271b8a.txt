-- This is a complex code snippet in ADA
procedure Quadratic_Solver
    (A : in Float;
    B : in Float;
    C : in Float;
    X1 : out Float;
    X2 : out Float;
    Xn : out Integer;
    type Quadratic_Equation is (No_Solution, One_Solution, Two_Solutions))

    -- Initialize variables
    D : Float;       -- Discriminant
    S : Float;       -- Square Root of Discriminant
    E : Float;       -- Denominator
    R : Integer;     -- Remainder

begin
    D := B * B - 4.0 * A * C;         -- Calculate discriminant
    Xn := 0;                          -- Initialize number of solutions

    -- If discriminant is negative, the equation has no real roots
    if D < 0.0 then
        Xn := No_Solution;

    -- If discriminant is zero, there is only one solution
    elsif D = 0.0 then
        X1 := -B / (2.0 * A);
        Xn := One_Solution;

    -- If discriminant is positive, there are two solutions
    else
        S := Sqrt(D);
        E := 2.0 * A;

    -- Calculate first solution
    X1 := (-B + S) / E;

    -- Check if first solution is an integer
    if Integer(X1) = X1 then
        Xn := Two_Solutions
        X2 := (-B - S) / E;         -- Calculate second solution

    -- If first solution is not an integer, check if second solution is an integer
    elsif E >= 1.0 then
        R := Float'Size'(E);
        E := Float(R);

        if Integer(X2) = X2 then
            Xn := Two_Solutions;
    
    -- If neither solution is an integer, both solutions are fractional
    else
        Xn := Two_Solutions;
    
    end if;  -- end if statements

end Quadratic_Solver;
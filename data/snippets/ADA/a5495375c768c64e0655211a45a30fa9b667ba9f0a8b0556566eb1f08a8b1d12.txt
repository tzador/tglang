--Declare an array of integers
type Integer_Array is array (1..10) of Integer;

--Initialize the array with random values
procedure Initialize_Array (Array : in out Integer_Array) is
begin
   for I in Array'Range loop
      Array(I) := Integer'Random(0);
   end loop;
end Initialize_Array;

--Print the values of the array
procedure Print_Array (Array : in Integer_Array) is
begin
   for I in Array'Range loop
      Put_Line("Index " & I'Image & ": " & Array(I)'Image);
   end loop;
end Print_Array;

--Sort the array in ascending order using bubble sort
procedure Bubble_Sort (Array : in out Integer_Array) is
   Swapped : Boolean;
   Temp : Integer;
begin
   for I in Array'Range loop
      Swapped := False;
      for J in Array'Range(1, Array'Length - I) loop
         if Array(J) > Array(J+1) then
            --Swap the values
            Temp := Array(J);
            Array(J) := Array(J+1);
            Array(J+1) := Temp;
            Swapped := True;
         end if;
      end loop;
      --If there are no swaps in a pass, the array is already sorted
      exit when not Swapped;
   end loop;
end Bubble_Sort;

--Sort and print the array
declare
   My_Array : Integer_Array;
begin
   Initialize_Array(My_Array);
   Put_Line("Unsorted array:");
   Print_Array(My_Array);
   Bubble_Sort(My_Array);
   Put_Line("Sorted array:");
   Print_Array(My_Array);
end;
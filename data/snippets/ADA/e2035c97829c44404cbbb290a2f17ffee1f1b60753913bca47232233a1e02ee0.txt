with Ada.Text_IO;                   // import standard text_io module
with Ada.Integer_Text_IO;           // import integer_text_io module

procedure Main is                   // main procedure
    type Months is (Jan, Feb, Mar,   // create enumeration type Months
                    Apr, May, Jun,
                    Jul, Aug, Sep,
                    Oct, Nov, Dec);

    type Month_Ref is access Months; // create access type Month_Ref

    type Year is range 1900 .. 2100; // create range type Year
    type Date is record              // create record type Date
        Day   : Integer range 1 .. 31; // day should be in range 1-31
        Month : Months;              // use Months enumeration
        Year  : Year;                // use Year range
    end record;

    Table : array (Year range <>,  // create array Table with Year range
                   Months) of       // and Months as index
             Integer;               // store Integer values

    Y : Year;                       // create Year variable
    M : Month_Ref;                  // create Month_Ref variable

    Nov2008 : constant Month_Ref    // create constant Month_Ref
                    := new Months'(Nov); // assign new Months to it
  
begin
    Y := 2008;                      // assign value to Year variable    
    M := new Months'(Oct);          // assign new Months to Month_Ref

    loop                            // start loop
        put(M.all'Model);           // print model of current month
        put(" has ");               // print string
        put(Table(Y,M.all));        // print value from Table at current index
        put(" days.");              // print string
        exit when M.all = Dec;      // exit loop when current month is December

        M := new Month_Ref'Mod(M.all + 1);  // increment Month_Ref value
    end loop;

    declare
        Holiday : constant Date := (Day => 25, // create constant Date
                                     Month => Dec, // assign values
                                     Year => 2021); // to each field

        -- Add more fields if needed

    begin
        if (Holiday.Year = Y) and    // check if current year
           (Holiday.Month = M.all) and // and month match Holiday
           (Holiday.Day <= M.all'Pos) // and if day is within current month
        then
            put_line("Merry Christmas!"); // print string
        end if;
    end;                            // end inner block
end Main;                           // end main procedure
-- This is a complex code snippet in ADA
with Ada.Text_IO; -- Importing standard text input and output library
use Ada.Text_IO; -- Using the standard library for convenience

procedure Complex_Code is -- Creating a procedure named 'Complex_Code'
    type Integer_Array is array (1 .. 10) of Integer; -- Defining an integer array type with 10 elements
    Numbers : Integer_Array := (1, 2, 3, 4, 5, 6, 7, 8, 9, 10); -- Initializing the array with some values

    function Factorial(N : Positive) return Positive is -- Defining a factorial function
        Result : Positive := 1; -- Initializing the result to 1
    begin
        for I in 1 .. N loop -- Looping through all the numbers from 1 to N
            Result := Result * I; -- Calculating the factorial by multiplying the result with each number
        end loop;
        return Result; -- Returning the factorial
    end Factorial;

    procedure Print_Numbers is -- Creating a nested procedure named 'Print_Numbers'
    begin
        Put("The numbers are: "); -- Printing a string to the output
        for I in Integer_Array'Range loop -- Looping through the elements of the array
            Put(Numbers(I)'Image & " "); -- Printing the element as a string followed by a space
        end loop;
        New_Line; -- Creating a new line
    end Print_Numbers;

begin -- Beginning of the main procedure
    Put_Line("Welcome to the complex code snippet!"); -- Printing a string to the output
    for I in Numbers'Range loop -- Looping through the elements of the array
        Put_Line(Integer'Image(Factorial(Numbers(I)))); -- Printing the factorial of each element
    end loop;
    Print_Numbers; -- Calling the nested procedure
end Complex_Code; -- Ending of the main procedure
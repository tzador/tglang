-- This is a program that finds the maximum number in an array using recursion

with Ada.Text_IO; use Ada.Text_IO; -- Importing standard IO package

procedure Recursion is -- Main procedure
    type Int_Array is array(1..10) of Integer; -- Defining a type for the integer array with 10 elements
    variable Maximum : Integer := 0; -- Variable to hold maximum value
    Array : Int_Array := (2, 19, 5, 13, 10, 22, 8, 16, 3, 7); -- Array with sample data

    -- Function to find the maximum number using recursion
    function Max_Number(Array : Int_Array; Index : Integer) return Integer is
        variable Current_Maximum : Integer := 0; -- Variable to hold current maximum value
    begin
        if Index = Array'Last then -- Base case: When the index reaches the last element of the array
            return Array(Array'Last); -- Return the last element of the array as the maximum
        else
            Current_Maximum := Max_Number(Array, Index + 1); -- Recursive call to find the maximum in the rest of the array
            if Array(Index) > Current_Maximum then -- Check if the current element is greater than the current maximum
                Current_Maximum := Array(Index); -- If yes, assign the current element as the current maximum
            end if;
            return Current_Maximum; -- Return the current maximum value
        end if;
    end Max_Number;

begin
    Maximum := Max_Number(Array, 1); -- Calling the recursive function to find the maximum number
    Put("The maximum number in the array is: ");
    Put(Integer'Image(Maximum)); -- Printing the maximum number
end Recursion;
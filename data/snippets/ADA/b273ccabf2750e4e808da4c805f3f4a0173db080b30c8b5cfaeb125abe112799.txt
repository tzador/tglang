-------------------------------------------------------------------------------- 
--  This code snippet is written in ADA programming language.
-------------------------------------------------------------------------------- 

--this is a commented line in ADA 

--Defining a package called Complex with generic type T and package ComplexNums containing function definitions for complex numbers

package Complex is
   generic
      type T is digits <>; --generic type T containing any digit precision
   package ComplexNums is
      function Addition (x, y : T) return T; --function for addition of complex numbers
      function Subtraction (x, y : T) return T; --function for subtraction of complex numbers
      function Multiplication (x, y : T) return T; --function for multiplication of complex numbers
      function Division (x, y : T) return T; --function for division of complex numbers
      function Conjugate (x : T) return T; --function for calculating conjugate of complex number
   end ComplexNums;
end Complex;

--Package body containing function definitions for complex numbers
package body Complex is
   package body ComplexNums is
      --Using functions from Ada.Numerics to perform arithmetic operations on complex numbers
      function Addition (x, y : T) return T is
         z, w : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (x);
         u, v : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (y);
      begin
         return Ada.Numerics.Complex_Number'Value (z + u, w + v);
      end Addition;
      
      --The remaining functions have similar structures
      function Subtraction (x, y : T) return T is
         z, w : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (x);
         u, v : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (y);
      begin
         return Ada.Numerics.Complex_Number'Value (z - u, w - v);
      end Subtraction;
      
      function Multiplication (x, y : T) return T is
         z, w : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (x);
         u, v : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (y);
      begin
         return Ada.Numerics.Complex_Number'Value (z * u - w * v, z * v + w * u);
      end Multiplication;
      
      function Division (x, y : T) return T is
         z, w : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (x);
         u, v : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (y);
         d : Ada.Numerics.Complex_Number := u * u + v * v;
      begin
         return Ada.Numerics.Complex_Number'Value ((z * u + w * v) / d, (w * u - z * v) / d);
      end Division;
      
      function Conjugate (x : T) return T is
         z, w : Ada.Numerics.Complex_Number := Ada.Numerics.Complex_Number'Value (x);
      begin
         return Ada.Numerics.Complex_Number'Value (z, -w);
      end Conjugate;
      
   end ComplexNums;
end Complex;

--Example code that will use our package and perform complex number arithmetic
with Ada.Text_IO; use Ada.Text_IO;
with Complex; use Complex;

procedure Main is
   --Defining two complex numbers of type Integer with a precision of 8 digits
   a : Integer := 2 ** 8;
   b : Integer := 3 ** 8;
   
   --Performing addition, subtraction, multiplication, division, and calculating conjugate of complex numbers
   c : Integer := Addition (a, b);
   d : Integer := Subtraction (a, b);
   e : Integer := Multiplication (a, b);
   f : Integer := Division (a, b);
   g : Integer := Conjugate (a);
begin
   --Printing the results
   Put_Line ("a + b = " & Integer'Image (c));
   Put_Line ("a - b = " & Integer'Image (d));
   Put_Line ("a * b = " & Integer'Image (e));
   Put_Line ("a / b = " & Integer'Image (f));
   Put_Line ("Conjugate of a = " & Integer'Image (g));
end Main;
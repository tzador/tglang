package Example is
   type Color is (Red, Green, Blue);
   subtype Bright_Color is Color range Red .. Blue;

   type Picture is array (Positive range <>, Positive range <>, Color) of Boolean;
   type Title is array (Positive range <>) of Character;   

   procedure Draw (Pixel : in out Picture; X, Y : in Positive; C : in Color);
   -- Draws a pixel on the specified coordinates in the given color.

   function Get_Color (Pixel : Picture; X, Y : Positive) return Color;
   -- Returns the color of the pixel at the specified coordinates.

   procedure Set_Title (T : in out Title; S : in String);
   -- Sets the title of the picture to the given string.

   function Get_Title (T : Title) return String;
   -- Returns the title of the picture as a string.

   function Get_Width (Pixel : Picture) return Positive;
   -- Returns the width of the picture.

   function Get_Height (Pixel : Picture) return Positive;
   -- Returns the height of the picture.

private
   Width : Positive;
   Height : Positive;
end Example;

procedure Main is
   My_Picture : Example.Picture (1 .. 10, 1 .. 10, Example.Bright_Color);
   My_Title : Example.Title (1 .. 10);
begin
   Example.Set_Title (My_Title, "My Beautiful Picture");

   for Y in My_Picture'Range (2) loop
      for X in My_Picture'Range (1) loop
         Example.Draw (My_Picture, X, Y, Example.Bright_Color'First);
      end loop;
   end loop;

   for X in My_Picture'Range (1) loop
      Example.Draw (My_Picture, X, Example.Get_Height (My_Picture), Example.Bright_Color'Last);
   end loop;
end Main;
-- Declare private variable 
type Numbers is range 0 .. 10_000_000_000;
MyNumbers : Numbers;

-- Define procedure to initialize variable
procedure Init_Numbers is
begin
    MyNumbers := 0;
end Init_Numbers;

-- Define generic function to perform mathematical operation
generic
    type T is range <>;   -- Specifies the type of input
    type U is range <>;   -- Specifies the type of output
    with function Multiply (X : T; Y : T) return U is <>;  -- Specifies the multiplication operation
function Calculate (A : T; B : T) return U is
    Result : U;
begin
    Result := Multiply(A, B);
end Calculate;

-- Define methods to increment and decrement number
procedure Increment_Number is
begin
    MyNumbers := MyNumbers + 1;
end Increment_Number;

procedure Decrement_Number is
begin
    MyNumbers := MyNumbers - 1;
end Decrement_Number;

-- Execute code
begin
    Init_Numbers;  -- Initialize variable
    Increment_Number;  -- Increment variable
    Decrement_Number;  -- Decrement variable
    MyNumbers := Calculate (MyNumbers, 5);  -- Multiply variable by 5 using generic function
end;
-- A simple code snippet in Ada to generate prime numbers
with Ada.Text_IO; -- Importing the text input/output library

procedure Prime is
    type Num_Type is range 1..100; -- Defining the range for numbers
    type Prime_Type is array (Num_Type) of Boolean; -- Defining an array to store prime numbers
    
    Primes : Prime_Type; -- Initializing the array
    Limit : Num_Type := 100; -- Setting the limit for numbers to check
begin
    -- Set all values in the array to true
    Primes := (others => True);
    
    -- Start checking for prime numbers
    for i in Num_Type loop
        if Primes(i) then -- If the current number is marked as prime
            for j in Num_Type loop
                if i * j > Limit then -- If the product of the current number and the iterator is larger than the limit
                    exit; -- Exit the loop to move on to the next number
                else -- Otherwise, mark all multiples of the current number as non-prime 
                    Primes(i * j) := False; 
                end if;
            end loop;
        end if;
    end loop;
    
    -- Printing all the prime numbers
    for i in Num_Type loop
        if Primes(i) then
            Ada.Text_IO.Put(i); -- Printing the prime numbers to the console using the text input/output library
            Ada.Text_IO.Put(" "); -- Adding a space between each number for readability
        end if;
    end loop;
end Prime;
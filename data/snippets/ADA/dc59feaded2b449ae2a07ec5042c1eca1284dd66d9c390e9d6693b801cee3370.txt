-- This code snippet defines a generic function that calculates the nth power of a given number
-- and returns the result.

generic
    type T is digits <>;
    with function Multiply(X,Y : T) return T;

function Power(X : T; N : Natural) return T is
    Result : T := X;
begin
    -- Check for special cases
    if N = 0 then
        return 1;
    elsif N = 1 then
        return X;
    end if;

    -- Initialize accumulator variable
    Accumulator : T := Multiply(X,X);

    for I in 2..N-1 loop
        -- Multiply accumulator by X
        Accumulator := Multiply(Accumulator,X);
    end loop;

    -- Multiply accumulated value by Result
    Result := Multiply(Result,Accumulator);

    return Result;
end Power;
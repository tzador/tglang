-- Declare package for handling complex numbers
with Complex_Numbers;

-- Use statement for easy access to package functions
use Complex_Numbers;

-- Declare a record type for a complex number
type Complex is record
    Real : Float;
    Imaginary : Float;
end record;

-- Declare a function to add two complex numbers
function "+" (Left, Right : Complex) return Complex is
    Result : Complex := (Left.Real + Right.Real, Left.Imaginary + Right.Imaginary);
begin
    return Result;
end "+";

-- Declare a function to multiply two complex numbers
function "*" (Left, Right : Complex) return Complex is
    Real_Part : Float := (Left.Real * Right.Real) - (Left.Imaginary * Right.Imaginary);
    Imaginary_Part : Float := (Left.Real * Right.Imaginary) + (Left.Imaginary * Right.Real);
    Result : Complex := (Real_Part, Imaginary_Part);
begin
    return Result;
end "*";

-- Test the functions
procedure Main is
    -- Declare two complex numbers
    A : Constant Complex := (3.2, 5.1);
    B : Constant Complex := (2.7, 4.5);
begin
    -- Add the two complex numbers
    C := A + B;
    -- Multiply the two complex numbers
    D := A * B;
    -- Print the results
    Put_Line("Result of adding " & A'Image & " and " & B'Image & " is " & C'Image);
    Put_Line("Result of multiplying " & A'Image & " and " & B'Image & " is " & D'Image);
end Main;
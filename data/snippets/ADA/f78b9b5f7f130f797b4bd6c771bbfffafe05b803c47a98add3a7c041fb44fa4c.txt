-- Example of a complex code snippet in ADA

with Ada.Text_IO; use Ada.Text_IO;

procedure Complex_Code is
-- This procedure performs various calculations and outputs the results.

	type Integer_Array is array (1..10) of Integer;
	
	function Factorial (N : Integer) return Integer is 
	-- Calculates the factorial of a given integer.

		Fact : Integer := 1;
	begin
		for I in 1..N loop
			Fact := Fact * I;
		end loop;
		return Fact;
	end Factorial;
	
	function Sum (Arr : Integer_Array) return Integer is
	-- Calculates the sum of all elements in an integer array.

		Sum_Total : Integer := 0;
	begin
		for I in Arr'Range loop
			Sum_Total := Sum_Total + Arr (I);
		end loop;
		return Sum_Total;
	end Sum;
	
	function Max_Value (Arr : Integer_Array) return Integer is
	-- Finds the maximum value in an integer array.

		Max : Integer := Arr (Arr'First);
	begin
		for I in Arr'Range loop
			if Arr (I) > Max then
				Max := Arr (I);
			end if;
		end loop;
		return Max;
	end Max_Value;
	
	procedure Print_Array (Arr : Integer_Array) is
	-- Prints all elements in an integer array.

	begin
		for I in Arr'Range loop
			Put (Arr (I));
			Put (" ");
		end loop;
		Put_Line ("");
	end Print_Array;
	
	-- Main program starts here
	
	N : constant Integer := 5;
	Array1 : Integer_Array := (1, 2, 3, 4, 5);
	Array2 : Integer_Array := (5, 9, 13, 20, 1, 4, 8, 6, 9, 2);
	
begin
	Put_Line ("Factorial of " & N & " is " & Factorial (N)'Image);
	Put_Line ("Sum of Array1 is " & Sum (Array1)'Image);
	Put_Line ("Maximum value in Array2 is " & Max_Value (Array2)'Image);
	Put_Line ("Array1: ");
	Print_Array (Array1);
	Put_Line ("Array2: ");
	Print_Array (Array2);
end Complex_Code;
with Ada.Strings.Unbounded;                           -- import Ada.Strings.Unbounded package

procedure Code_Snippet is                             -- define procedure

   type String_Array is array (Positive range <>) of Ada.Strings.Unbounded.Unbounded_String;
                                                      -- create an unbounded string array type
   type Element_Type is (Anniversary, Birthday, Wedding);
                                                      -- create an element type enum
   type Integer_Array is array (Element_Type) of Integer;
                                                      -- create an integer array type using the element type enum

   Name_Array : String_Array (1 .. 3) := (To_Unbounded_String ("John"), To_Unbounded_String ("Alex"), To_Unbounded_String ("Sarah"));
                                                      -- initialize the string array with names

   Age_Array : Integer_Array := (Anniversary => 25, Birthday => 30, Wedding => 10);
                                                      -- initialize the integer array with ages

   function Get_Average (Array : in Integer_Array) return Float is
                                                      -- create a function to calculate the average of the integer array
      Sum : Float := 0.0;                              -- declare a sum variable
      Average : Float;                                 -- declare an average variable
   begin
      for I in Element_Type loop                        -- loop through the elements in the integer array
         Sum := Sum + Array (I);                        -- add each element to the sum
      end loop;

      Average := Sum / Float (Array'Length);            -- calculate the average
      return Average;                                  -- return the average
   end Get_Average;

begin                                                 -- start of main program

   for J in Name_Array'Range loop                      -- loop through the names in the string array
      Put_Line (Name_Array (J).To_String & "'s age is " & Integer'Image (Age_Array (Element_Type'Val (Name_Array (J)))));
                                                       -- print the name and age using the integer array and element type
   end loop;

   Average_Age : Float := Get_Average (Age_Array);     -- call the Get_Average function and store the result in a variable
   Put_Line ("The average age is " & Float'Image (Average_Age)); 
                                                       -- print the average age
end Code_Snippet;
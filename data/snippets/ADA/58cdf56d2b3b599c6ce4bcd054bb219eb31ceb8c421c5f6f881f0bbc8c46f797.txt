-- Define an array to store integers
type Int_Array is array(1..10) of Integer;

-- Declare a record type to store information about a student
type Student_Record is record
    Name : String(1..20);
    Age : Integer;
    Grade : Float;
end record;

-- Declare a function to calculate the average grade of a student
function Get_Average_Grade(Record : Student_Record) return Float is
    Sum : Float := 0.0;
begin
    -- Loop through each grade and add it to the sum
    for I in 1..Record.Grade'Length loop
        Sum := Sum + Record.Grade(I);
    end loop;

    -- Calculate the average grade
    return Sum / Float(Record.Grade'Length);
end Get_Average_Grade;

-- Declare a procedure to display a message based on a student's average grade
procedure Display_Message(Grade : Float) is
    Message : String := "";
begin
    -- Check if grade is above 80%
    if Grade > 0.8 then
        Message := "Great job! Keep up the good work!";
    
    -- Check if grade is above 60%
    elsif Grade > 0.6 then
        Message := "Not bad, but there is room for improvement.";

    -- Otherwise, give an encouragement message
    else
        Message := "You can do better next time!";
    end if;

    -- Display the message
    Put_Line(Message);
end Display_Message;

-- Define some student records
Student_1 : Student_Record := (Name => "John Smith", Age => 18, Grade => (84.5, 72.3, 91.0));
Student_2 : Student_Record := (Name => "Jane Doe", Age => 17, Grade => (96.2, 85.4, 77.8));

begin
    -- Calculate and display the average grade for each student
    Put_Line("Average grade for " & Student_1.Name & ": " & Get_Average_Grade(Student_1)'Image(0, 0));
    Put_Line("Average grade for " & Student_2.Name & ": " & Get_Average_Grade(Student_2)'Image(0, 0));

    -- Display a message for each student based on their average grade
    Display_Message(Get_Average_Grade(Student_1));
    Display_Message(Get_Average_Grade(Student_2));
end;
with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;

procedure Main is

   type Book is record
      Title : String(1..100); -- Book title with a maximum of 100 characters
      Author : String(1..50); -- Author's name with a maximum of 50 characters 
      Pages : Positive; -- Number of pages in the book
      Year : Positive range 1800..2100; -- Year of publication 
   end record;

   type Book_List is array(1..50) of Book; -- Array of 50 books 

   function Add_Book return Book is
      new_Book : Book;
   begin
      Put_Line("Enter title of the book:");
      Get_Line(new_Book.Title); -- User inputs title for new book 

      Put_Line("Enter author of the book:");
      Get_Line(new_Book.Author); -- User inputs author for new book

      Put_Line("Enter number of pages in the book:");
      Get(new_Book.Pages); -- User inputs number of pages for new book

      Put_Line("Enter year of publication:");
      Get(new_Book.Year); -- User inputs year of publication for new book

      return new_Book; -- Returns the new book 
   end Add_Book;

   procedure Display_Books(BookArray : in Book_List) is
   begin
      Put_Line("********************");
      Put_Line("List of Books:");
      Put_Line("********************");

      for I in 1..50 loop
         if BookArray(I).Title /= "" then -- Checks if book exists in the array 
            Put_Line(I & ". " & BookArray(I).Title & " by " & BookArray(I).Author); -- Displays book information 
         end if;
      end loop;
   end Display_Books;

   procedure Sort_Books(BookArray : in out Book_List) is
      Temp_Book : Book;
   begin
      for I in BookArray'Range loop
         for J in I+1..BookArray'Last loop
            if BookArray(I).Title > BookArray(J).Title then -- Sorts book list alphabetically by title
               Temp_Book := BookArray(I);
               BookArray(I) := BookArray(J);
               BookArray(J) := Temp_Book;
            end if;
         end loop;
      end loop;
   end Sort_Books;

   Book_List : Book_List;
   Choice : Positive;
   New_Book : Book;

begin
   Put_Line("Welcome to your book collection!"); -- Displays welcome message 
   Put_Line("Choose an option:");
   Put_Line("1. Add a new book");
   Put_Line("2. Display list of books");
   Put_Line("3. Sort books alphabetically");
   Get(Choice); -- User chooses an option 

   if Choice = 1 then -- Adds new book to the array 
      New_Book := Add_Book;
      Book_List(1) := New_Book;
   elsif Choice = 2 then -- Displays list of books from array 
      Display_Books(Book_List);
   elsif Choice = 3 then -- Sorts books alphabetically 
      Sort_Books(Book_List);
      Put_Line("Books have been sorted alphabetically!");
   end if;
end Main;
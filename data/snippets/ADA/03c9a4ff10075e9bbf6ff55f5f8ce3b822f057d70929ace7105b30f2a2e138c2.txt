---------------------------------------------------------------------------
----------- Package Declaration:-----------------
---------------------------------------------------------------------------

--- Some comments or explanation about the package ---
--- This package is used for sorting the elements of an array
with generic types, using the insertion sort algorithm

package Insertion_Sort_Package is

    --- Generic type for the array ---
    type Array_Type is array (Positive range <>) of Integer;

    --- Procedure for insertion sort ---
    procedure Insertion_Sort (Array : in out Array_Type) is
        --- Temporary variable for swapping elements ---
        Temp : Integer;
        --- Variables for loop control ---
        i, j : Integer;
    begin
        --- Looping through elements of the array ---
        for i in 1..Array'Last loop
            --- Storing the current element in temp ---
            Temp := Array (i);
            --- Looping through previous elements ---
            for j in i - 1..1 loop
                --- Comparing current element with previous element ---
                if Temp < Array (j) then
                    --- Swapping elements if previous element is larger ---
                    Array (j + 1) := Array (j);
                    Array (j) := Temp;
                else
                    --- Exiting the loop if no more elements to compare ---
                    exit;
                end if;
            end loop;
        end loop;
    end Insertion_Sort;

end Insertion_Sort_Package;
-----------------------------------------------------
--- Example usage of the package ---
-----------------------------------------------------

--- Declare an array with integer values ---
A : Array_Type (1..5) := (5, 3, 1, 4, 2);

--- Calling the procedure to sort the array ---
Insertion_Sort (A);

--- Printing the sorted array ---
for i in 1..A'Length loop
    Put (A (i));
    Put (", ");
end loop;
Put (New_Line);
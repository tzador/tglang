-- Define a generic package for sorting an array of integers

generic
    type Element is private; -- a private type for the array elements

package Array_Sorter is
    
    -- Function to sort the given array in ascending order using selection sort algorithm
    -- Input:
    --     - Arr : an array of integers to be sorted
    -- Output:
    --     - Sorted_Arr : sorted array in ascending order
    function Selection_Sort(Arr : in Element) return Element;
    
    -- Function to sort the given array in ascending order using bubble sort algorithm
    -- Input:
    --     - Arr : an array of integers to be sorted
    -- Output:
    --     - Sorted_Arr : sorted array in ascending order
    function Bubble_Sort(Arr : in Element) return Element;
    
    -- Function to sort the given array in ascending order using insertion sort algorithm
    -- Input:
    --     - Arr : an array of integers to be sorted
    -- Output:
    --     - Sorted_Arr : sorted array in ascending order
    function Insertion_Sort(Arr : in Element) return Element;
    
private
    
    -- Function to find the smallest element in the given array starting from the given index
    -- Input:
    --     - Arr : an array of integers to be sorted
    --     - Index : starting index for searching
    -- Output:
    --     - Min_Index : index of the smallest element found
    function Find_Min(Arr : in Element; Index : in Integer) return Integer;
    
    -- Procedure to swap two elements in an array
    -- Input:
    --     - Arr : an array of integers
    --     - Index1 : first element index
    --     - Index2 : second element index
    procedure Swap(Arr : inout Element; Index1, Index2 : in Integer);
    
end Array_Sorter;
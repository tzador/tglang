-- This is a code snippet for a simple Fibonacci sequence program in ADA

with Ada.Text_IO; -- Importing the Text_IO package for I/O operations

procedure Fibonacci is -- Creating the Fibonacci procedure

   function Fib(n : Positive) return Positive is -- Defining the Fib function with a positive integer n as input and a positive integer as output
      Sum : Positive; -- Creating a variable to store the calculated Fibonacci number
      Last, Current : Positive := 1; -- Initializing the variables Last and Current to 1
   begin
      if n = 1 or n = 2 then -- Checking if the input is either 1 or 2, as these are the first two numbers in the Fibonacci sequence
         Sum := 1; -- Assigning the value of 1 to Sum
      else -- If input is not 1 or 2, perform the Fibonacci algorithm
         for i in 3..n loop -- Looping from 3 to n, as the first two numbers have already been assigned
            Sum := Last + Current; -- Calculating the next Fibonacci number by adding the last two numbers in the sequence
            Last := Current; -- Updating the value of Last to the previous number
            Current := Sum; -- Updating the value of Current to the calculated number
         end loop;
      end if;
      return Sum; -- Returning the calculated Fibonacci number
   end Fib;
   
   N : Positive; -- Creating a variable to store the user input
begin
   Ada.Text_IO.Put("Enter a positive integer: "); -- Prompting the user to enter a positive integer
   Ada.Text_IO.Get(N); -- Getting the user input and storing it in the variable N
   Ada.Text_IO.Put("The " & N'Image & " number in the Fibonacci sequence is: " & Fib(N)'Image); -- Printing the requested Fibonacci number to the console
end Fibonacci; -- End of the Fibonacci procedure
-- This is a code snippet in the programming language ADA
procedure Sort is
 
   --Function that swaps two elements in an array
   procedure Swap (Item1, Item2 : in out Element) is   -- Item1 and Item2 are pass by reference variables
      Temp : Element;
   begin
      Temp := Item1;
      Item1 := Item2;
      Item2 := Temp;
   end Swap;
 
   --Function for partitioning the array
   function Partition (L, H : Integer) return Integer is  -- L and H are pass by value variables
      Pivot : Element;
      I, J : Integer;
   begin
      Pivot := Array(H).Element;
      I := L - 1;
      for J in L..H - 1 loop
         if Array(J).Element < Pivot then
            I := I + 1;
            Swap (Array(I).Element, Array(J).Element);
         end if;
      end loop;
      Swap (Array(I + 1).Element, Array(H).Element); --Swapping pivot element with element next to I 
      return I + 1; --Returning index of pivot element
   end Partition;
 
   --Function for the quicksort algorithm
   procedure Quick_Sort (L, H : Integer) is  -- L and H are pass by value variables
      P : Integer;
   begin
      if L < H then
         P := Partition (L, H);
         Quick_Sort (L, P - 1);
         Quick_Sort (P + 1, H);
      end if;
   end Quick_Sort;
 
begin
   Quick_Sort (L => 1, H => Num - 1); -- Num is the size of the array to be sorted
end Sort;
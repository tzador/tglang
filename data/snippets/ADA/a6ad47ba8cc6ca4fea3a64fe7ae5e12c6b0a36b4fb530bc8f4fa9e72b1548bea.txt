-- This is a complex code snippet in ADA
with Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO; --import packages

procedure Snippet is  --procedure declaration
    type Name is record  --record type definition
        First_Name : String(1..30); --field for first name
        Last_Name : String(1..30); --field for last name
    end record; --end record definition

    Total : Natural; --variable for total number of names
    Country_Code : Integer; --variable for country code
    Name_List : array(1..10) of Name; --array of Name records
    
    procedure Sort is --sort procedure declaration
        N : Integer := 10; --number of elements in the array
    begin
        for J in 1..N-1 loop
          for I in J+1..N loop
            if Name_List(J).Last_Name > Name_List(I).Last_Name then --check if last name needs to be swapped
                Name_List(J) := Name_List(I); --swap last names
            elsif Name_List(J).Last_Name = Name_List(I).Last_Name then --if last names are equal
                if Name_List(J).First_Name > Name_List(I).First_Name then --check if first name needs to be swapped
                    Name_List(J) := Name_List(I); --swap first names
                end if;
            end if;
          end loop;
        end loop;
    end Sort;
    
begin 
    Ada.Text_IO.Put("Enter the total number of names:"); --prompt user for input
    Ada.Integer_Text_IO.Get(Total); --get input for total number of names
    
    for I in 1..Total loop --loop through all the names
        Ada.Text_IO.Put("Enter first name for name ");
        Ada.Integer_Text_IO.Put(I); --print index of name
        Ada.Text_IO.New_Line; 
        Ada.Text_IO.Get(Name_List(I).First_Name); --get input for first name
        
        Ada.Text_IO.Put("Enter last name for name ");
        Ada.Integer_Text_IO.Put(I); --print index of name
        Ada.Text_IO.New_Line; 
        Ada.Text_IO.Get(Name_List(I).Last_Name); --get input for last name
    end loop;
    
    Ada.Text_IO.Put("Enter the country code for sorting:"); --prompt user for input
    Ada.Integer_Text_IO.Get(Country_Code); --get input for country code
    
    Sort; --sort the names in ascending order
    
    Ada.Text_IO.Put_Line("Sorted names:"); --print header for sorted names
    for I in 1..Total loop
        Ada.Text_IO.Put(Name_List(I).First_Name & " " & Name_List(I).Last_Name); --print first and last names
        Ada.Text_IO.New_Line;
    end loop;
end Snippet; --end of procedure declaration
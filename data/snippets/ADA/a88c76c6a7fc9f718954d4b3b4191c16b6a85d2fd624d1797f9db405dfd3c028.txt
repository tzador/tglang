-- This program generates a random integer and checks if it is prime

with Ada.Text_IO; -- Importing the Text_IO package for input/output
with Ada.Numerics.Discrete_Random; -- Importing the Discrete_Random package for generating random numbers
with Ada.Integer_Text_IO; -- Importing the Integer_Text_IO package for reading and writing integers

procedure Prime_Check is -- Initializing the procedure

    use Ada.Text_IO; -- Using the Text_IO package in the procedure
    use Ada.Numerics.Discrete_Random; -- Using the Discrete_Random package in the procedure
    use Ada.Integer_Text_IO; -- Using the Integer_Text_IO package in the procedure

    type Random_Number is new Integer range 2..1000; -- Defining a subtype for random numbers
    subtype Prime_Number is Random_Number range 2..Random_Number'Last; -- Defining a subtype for prime numbers

    function Is_Prime (Num: Random_Number) return Boolean is -- Defining the Is_Prime function
        prime: Boolean := True; -- Initializing the Boolean variable for prime

    begin
        for i in 2..Num-1 loop -- Setting a loop to check divisibility
            if Num mod i = 0 then -- Checking if the random number is divisible by any number between 2 and the number itself
                prime := False; -- Setting the prime variable to False if divisibility is found
                exit; -- Exiting the loop if prime is found to be False
            end if;
        end loop;
        return prime; -- Returning the value of prime (True or False)
    end Is_Prime;

    RNG: Generator(Random_Number); -- Initializing a generator for random numbers of type Random_Number
    Prime: Prime_Number; -- Initializing a variable for prime numbers of type Prime_Number

begin
    Prime := Random_Number(Random_Number'Last); -- Generating a random number using the RNG generator
    Put_Line("Generated random integer: " & Prime'Image); -- Printing the generated random number
    if Is_Prime(Prime) then -- Checking if the random number is prime by calling the Is_Prime function
        Put_Line("The number is prime."); -- Printing the result if the number is prime
    else
        Put_Line("The number is not prime."); -- Printing the result if the number is not prime
    end if;
end Prime_Check;
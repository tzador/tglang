-- Example of a complex code snippet in ADA

with Ada.Text_IO;                       -- Import Ada's standard text input/output package
use Ada.Text_IO;                        -- Use the text input/output package for easier access

procedure Complex_Procedure is           -- Declare a new procedure called "Complex_Procedure"
   type Array_Type is array (Positive range <>) of Integer;    -- Declare a new array type with positive integer values
   Integer_Array : Array_Type (1..10);                         -- Declare an integer array variable with 10 elements

begin                 -- Begin the body of the procedure
   Put_Line("Initializing Array...");                     -- Print a message to the console

   for i in Integer_Array'Range loop                   -- Loop through the array using the 'Range attribute
      Integer_Array(i) := Integer(i+1);                -- Assign the integer i+1 to each element of the array
   end loop;                                          -- End the for loop
   
   Put_Line("Array initialized successfully!");            -- Print a success message to the console
   
   -- Calculate the sum of all elements in the array
   declare
      Sum : Integer := 0;                              -- Declare an integer variable for holding the sum
   begin
      for i in Integer_Array'Range loop                -- Loop through the array using the 'Range attribute
         Sum := Sum + Integer_Array(i);                -- Add each element to the sum variable
      end loop;                                         -- End the for loop

      Put_Line("The sum of all elements in the array is: " & Integer'Image(Sum));    -- Print the sum to the console
   end;                  -- End of the sum calculation block
   
   -- Sort the array in ascending order using the built-in Sort procedure
   Ada.Containers.Vectors.Sort (Integer_Array);      -- Use the sort procedure from the vectors package to sort the array
   
   -- Print the sorted array to the console
   Put_Line("Sorted Array:");                         -- Print a message indicating the sorted array
   for i in Integer_Array'Range loop                   -- Loop through the array using the 'Range attribute
      Put(Integer_Array(i) & " ");                     -- Print each element followed by a space
   end loop;                                          -- End the for loop
   New_Line;                                           -- Print a new line
   
end Complex_Procedure;                           -- End of the procedure body
-- Variable declaration
variable_name : data_type := initial_value;   -- Example: my_number : INTEGER := 10;

-- Arrays
array_name : array (index_range) of data_type; -- Example: my_array : array (1..10) of INTEGER;

-- Loops
for i in index_range loop                     -- Example: for i in 1..10 loop
    -- Code to be executed                    -- This will loop from 1 to 10
end loop;

while condition loop                         -- Example: while x > 0 loop
    -- Code to be executed                    -- This will loop while x is greater than 0
end loop;

loop                                        -- Example: loop
    -- Code to be executed                   -- This will loop infinitely until a break statement is encountered
    exit when condition;                    -- Exit the loop when condition is true
end loop;

-- If-Else statements
if condition then                           -- Example: if my_number = 10 then
    -- Code to be executed if condition is true  -- This code will be executed if my_number is equal to 10
elsif condition then                       -- Example: elsif my_number > 10 then
    -- Code to be executed if condition is true  -- This code will be executed if my_number is greater than 10
else
    -- Code to be executed if all conditions are false   -- This code will be executed if my_number is less than 10
end if;

-- Records
type record_name is                           -- Example: type person is
    record                                      -- Define the components of the record
        name: string (1..30);
        age: integer range 1..100;
    end record;

variable_name : record_name :=                -- Example: my_info : person :=
    (                                           -- Assign values to the record components
        name => "John Doe",
        age => 25
    );
    
-- Functions
function function_name (parameter_list) return return_type is      -- Example: function square (x : integer) return integer is
begin
    return x * x;                                   -- This function takes an integer as input and returns its square
end function;

-- Procedure
procedure procedure_name (parameter_list) is                     -- Example: procedure greet (name : string) is
begin
    put_line("Hello " & name);                        -- This procedure greets the person whose name is passed as a parameter
end procedure;
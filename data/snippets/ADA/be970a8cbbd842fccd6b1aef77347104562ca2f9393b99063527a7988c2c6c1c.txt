-- This is a code snippet in ADA that generates a Caesar cipher

-- First, define the necessary variables
with Ada.Text_IO; use Ada.Text_IO;
procedure Caesar_Cipher is
    type Alphabet is ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
                      'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
                      'u', 'v', 'w', 'x', 'y', 'z');
    type Table is array (Alphabet) of Natural;

    -- Next, define the encryption function
    function Encrypt (Character : in Alphabet) return Alphabet is
    begin
        return Table'Element (Character) + 3; -- Shifts character by 3 places
    end Encrypt;

    -- Then, define the decryption function
    function Decrypt (Character : in Alphabet) return Alphabet is
    begin
        return Table'Element (Character) - 3; -- Shifts character back by 3 places
    end Decrypt;

    -- Finally, create a function to prompt for user input and perform encryption or decryption
    procedure EncDec is
        User_Input : character;
    begin
        Put_Line("Enter a letter to encrypt or decrypt:");
        Get(User_Input);

        -- Check if input is valid
        if User_Input in Alphabet then
            Put("Your encrypted letter is: ");
            Put_Line(Character'Image(Encrypt(User_Input)));
            Put("Your decrypted letter is: ");
            Put_Line(Character'Image(Decrypt(User_Input)));
        else
            Put_Line("Invalid input.");
        end if;
    end EncDec;

begin
    EncDec; -- Call the function to encrypt or decrypt
end Caesar_Cipher;
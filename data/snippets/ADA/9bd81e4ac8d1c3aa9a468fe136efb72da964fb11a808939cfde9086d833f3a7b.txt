-- This is an example of a complex Ada code snippet
with Ada.IO_Exceptions;          -- Import package for exception handling
with Ada.Text_IO;                -- Import package for console input/output
with Ada.Calendar.Time;          -- Import package for time handling

procedure Code_Snippet is
   -- This is a comment, it explains the purpose of this code snippet
   Time_Processor : Ada.Calendar.Time.Time;       -- Create a time object
   Time_String : constant String := "12:02:01";   -- Create a string with time value
   
begin
   -- Get current time and store it in Time_Processor object
   Time_Processor := Ada.Calendar.Time.Clock;
   
   -- Print current time to console
   Ada.Text_IO.Put_Line("The current time is: " & Time_Processor'Image);
   
   -- Convert string to time
   Time_Processor := Ada.Calendar.Time'Input(Time_String);
   
   -- Print converted time to console
   Ada.Text_IO.Put_Line("The converted time is: " & Time_Processor'Image);
   
   -- Check for invalid time input and handle exception
   exception
      -- Handle invalid time input exception
      when Ada.IO_Exceptions.Invalid_Data =>
         Ada.Text_IO.Put_Line("Invalid time input!");
end Code_Snippet;
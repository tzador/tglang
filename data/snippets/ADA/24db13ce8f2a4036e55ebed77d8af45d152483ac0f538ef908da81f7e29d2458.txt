with Ada.Containers;                    -- Importing Ada Containers library
with Ada.Numerics;                      -- Importing Ada Numerics library

procedure Big_Factorial is               -- Main procedure for calculating factorial

   function Big_Fact (Num : Integer)    -- Function for performing factorial
               return Integer is

      Prime, Result : Integer := 1;     -- Initialising variables to hold prime and final result

   begin
      for N in 1..Num loop              -- Looping through all numbers from 1 to Num
         Prime := Prime * N;            -- Calculating prime
         Ada.Containers.Vectors.Push (Int_Arr, Prime);  -- Adding prime to vector from Containers library
      end loop;

      Result := Ada.Numerics.Factories.Multiply (Int_Array);  -- Using Multiply function from Numerics library to perform multiplication
      
      return Result;                    -- Returning final result
   end Big_Fact;

begin
   Ada.Text_IO.Put_Line ("Enter a number: ");   -- Asking user to enter a number
   Ada.Text_IO.Skip_Line;                       -- Skipping line to prevent input error
   Ada.Text_IO.Get (Num);                       -- Getting user's input

   Ada.Text_IO.Put_Line ("The factorial of " & Num'Image & " is: " & Big_Fact (Num)'Image);  -- Printing the result using Image attribute to convert integer to string
end;
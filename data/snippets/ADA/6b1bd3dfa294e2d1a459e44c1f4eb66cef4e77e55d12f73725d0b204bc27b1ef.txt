-- This is a program that implements a binary search algorithm.
-- It takes in an array of integers and a key to search for.
-- If the key is present in the array, it returns the index of the key.
-- If the key is not present, it returns -1.

with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;

procedure Binary_Search is

   type Int_Array is array (Positive range <>) of Integer; -- array type to store integers
   A : Int_Array (1..10) := (2, 4, 6, 8, 10, 12, 14, 16, 18, 20); -- sorted array of integers
   key : Integer; -- key to search for
   found : Boolean := False; -- flag to check if key was found
   lower : Positive := A'First; -- lower bound of search
   upper : Positive := A'Last; -- upper bound of search
   mid : Positive; -- index of middle element

   -- procedure to perform binary search algorithm
   procedure Binary_Search (A : in Int_Array; lower : in Positive; upper : in Positive; key : in Integer; found : out Boolean) is
   begin
      if lower > upper then
         return; -- key not found, return -1
      end if;
      mid := (lower + upper) / 2; -- calculate middle index
      if A(mid) = key then
         found := True; -- key found, set flag to true
         return; -- return index of key
      elsif A(mid) < key then
         lower := mid + 1; -- key is in upper half of array, adjust lower bound
         Binary_Search (A, lower, upper, key, found); -- recursively call procedure with new bounds
      else
         upper := mid - 1; -- key is in lower half of array, adjust upper bound
         Binary_Search (A, lower, upper, key, found); -- recursively call procedure with new bounds
      end if;
   end Binary_Search;

begin
   Put ("Enter the key to search for: ");
   Get (key); -- receive key from user
   Binary_Search (A, lower, upper, key, found); -- call binary search procedure
   if found then
      Put ("Key found at index: ");
      Put (mid'Image); -- print index of key
   else
      Put ("-1"); -- key not found
   end if;
end Binary_Search;
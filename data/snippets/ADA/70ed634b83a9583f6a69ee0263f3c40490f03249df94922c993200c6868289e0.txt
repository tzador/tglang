with Ada.Text_IO;  -- Importing the standard text input/output library
use Ada.Text_IO;  -- Using the Text_IO library

procedure Main is  -- Main program procedure
    MAX_NUM : constant := 10;  -- Constant declaration
    package Random is  -- Random number generator package
        generic
            type Generator is limited private;  -- Generic type for inputting custom random number generators
        package Number_Events is  -- Package for generating random numbers
            function Next (Rand : Generator) return Integer;  -- Function to generate a random integer
    end Random;
    
    package Random_Implementation is new Random (Generator => Integer);  -- Instantiating the Random package with the Integer type as the generator
    
    type Matrix is array (1..MAX_NUM, 1..MAX_NUM) of Integer;  -- Matrix type declaration with MAX_NUM rows and columns
    
    procedure Generate_Matrix (M : in out Matrix) is  -- Procedure to generate a random matrix
    begin
        for I in M'Range (1) loop  -- Looping through the rows of the matrix
            for J in M'Range (2) loop  -- Looping through the columns of the matrix
                M(I,J) := Random_Implementation.Number_Events.Next (15);  -- Assigning a random integer between 0 and 15 to each element in the matrix
            end loop;
        end loop;
    end Generate_Matrix;

begin
    Put_Line ("Generating a random matrix...");
    declare
        Mat : Matrix;  -- Declaring a matrix variable
    begin
        Generate_Matrix (Mat);  -- Calling the Generate_Matrix procedure to generate a random matrix
        for I in Mat'Range (1) loop  -- Looping through the rows of the matrix
            for J in Mat'Range (2) loop  -- Looping through the columns of the matrix
                Put (Mat(I,J), 5, 0);  -- Printing each element of the matrix with a width of 5 and no decimal places
            end loop;
            New_Line;  -- Moving to the next line after each row
        end loop;
    end;
end Main;  -- End of main program procedure
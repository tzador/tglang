-- Function that checks if a given matrix is symmetric

-- Initialize Types for matrix indexing and data
type Index is range 1 .. 10;
type Data_Type is array (Index, Index) of Integer;

-- Declare the function with parameters for the matrix and its size
function Symmetric_Matrix (M: in Data_Type; Size: in Index) return Boolean is
    Symmetric: Boolean := True;     -- Initialize symmetric flag as true
begin

    -- Use nested for loop to iterate through the matrix
    for Row in 1 .. Size loop
        for Col in 1 .. Size loop
            -- Compare elements across the diagonal
            if M(Row, Col) /= M(Col, Row) then
                Symmetric := False;     -- Set flag to False if elements don't match
            end if;
        end loop;
    end loop;

    -- Return boolean value
    return Symmetric;
end Symmetric_Matrix;

-- Declare a test matrix
Test_Matrix: Data_Type := ((1,2,3), (2,4,5), (3,5,6));

-- Call the function and assign result to a variable
Is_Symmetric: Boolean := Symmetric_Matrix(Test_Matrix, 3);

-- Print the result
put_line("Is Test_Matrix symmetric? " & Boolean'Image(Is_Symmetric));

-- Output:
-- Is Test_Matrix symmetric? False
--This code snippet generates a new type called "Employee" with various attributes
--and procedures for accessing and manipulating the data.

-- Define the type Employee
type Employee is record
    ID_Number : Integer;
    Name : String(1..50);
    Department : String(1..20);
    Salary : Float;
    Hours_Worked : Integer;
end record;

-- Create an empty array of Employees
Employees : array(1..1000) of Employee;

-- Initialize the array with random employees
for I in Employees'Range loop
    Employees(I).ID_Number := I;
    Employees(I).Name := "Employee" & Integer'Image(I);
    Employees(I).Department := ("Department " & Integer'Image(I mod 10));
    Employees(I).Salary := Float(I*1000 + 5000);
    Employees(I).Hours_Worked := I mod 40;
end loop;

-- Define a procedure to print out employee information
procedure Print_Employee_Info (Emp : in Employee) is
begin
    Put_Line("ID: " & Emp.ID_Number'Image);
    Put_Line("Name: " & Emp.Name);
    Put_Line("Department: " & Emp.Department);
    Put_Line("Salary: " & Emp.Salary'Image & "USD");
    Put_Line("Hours Worked: " & Emp.Hours_Worked'Image);
end Print_Employee_Info;

-- Define a procedure to calculate the total salary of a department
function Calculate_Department_Salary (Dept : in String) return Float is
    Total_Salary : Float := 0.0;
begin
    for I in Employees'Range loop
        if Employees(I).Department = Dept then
            Total_Salary := Total_Salary + Employees(I).Salary;
        end if;
    end loop;
    return Total_Salary;
end Calculate_Department_Salary;

-- Print the information for all employees
for E in Employees'Range loop
    Print_Employee_Info(Employees(E));
end loop;

-- Print the total salary for a specific department
Put_Line("Total Salary for Department 5: " & Calculate_Department_Salary("Department 5")'Image & "USD");
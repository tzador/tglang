-- This function checks if two strings are anagrams
-- Inputs: Two strings, str1 and str2
-- Returns: True if the strings are anagrams, False otherwise
function is_anagram(str1 : String; str2 : String) return Boolean is
    -- Declare a working array of positive integers
    -- Index represents ASCII value of characters a-z
    -- Value represents the frequency of each character in first string
    type Ascii_Array is array(Character range <>) of Positive;
    
    -- Declare an instance of the working array for str1
    ascii1 : Ascii_Array(1 .. 26);
    
    -- Declare an instance of the working array for str2
    ascii2 : Ascii_Array(1 .. 26);
    
    -- Initialize both arrays with default value of 0
    for i in ascii1'range loop
        ascii1(i) := 0;
        ascii2(i) := 0;
    end loop;
    
    -- Loop through each character in str1 and update the ascii1 array
    for i in str1'range loop
        -- Check if the character is a valid letter
        if str1(i) in 'a' .. 'z' then
            -- Convert the character to its ASCII value and increment the corresponding index in the array
            ascii1(Character'Pos(str1(i))) := ascii1(Character'Pos(str1(i))) + 1;
        end if;
    end loop;
    
    -- Loop through each character in str2 and update the ascii2 array
    for i in str2'range loop
        -- Check if the character is a valid letter
        if str2(i) in 'a' .. 'z' then
            -- Convert the character to its ASCII value and increment the corresponding index in the array
            ascii2(Character'Pos(str2(i))) := ascii2(Character'Pos(str2(i))) + 1;
        end if;
    end loop;
    
    -- Compare the two arrays to check for anagram
    for i in ascii1'range loop
        -- If the frequency of any character is different, return False
        if ascii1(i) /= ascii2(i) then
            return False;
        end if;
    end loop;
    
    -- If the loop completes without returning False, then the strings are anagrams
    return True;
end is_anagram;
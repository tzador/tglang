-- This is a code example in the ADA programming language
-- It is a complex algorithm that generates a Fibonacci sequence up to a given number

with Ada.Text_IO;                  -- importing the Text_IO package to use input and output
procedure Fibonacci is

   -- Function for generating the Fibonacci sequence, taking in the limit as a parameter
   function Fibonacci_Seq (Limit : Positive) return String is

      -- Initializing the variables for the sequence
      Current, Next, New : Integer := 0;
      Sequence : String := "0 1";    -- The sequence starts with 0 and 1

      -- Loop to generate the sequence
      begin
         while New <= Limit loop
            New := Current + Next;    -- Calculating the next number in the sequence
            Sequence := Sequence & " " & Integer'Image(New);   -- Appending the next number to the sequence

            Current := Next;          -- Updating the values for the next iteration
            Next := New;
         end loop;

         return Sequence;             -- Returning the generated sequence
      end Fibonacci_Seq;

   -- Taking user input for the limit of the sequence
   User_Limit : Positive;
   begin
      Ada.Text_IO.Put_Line("Enter the limit for the Fibonacci sequence: ");
      Ada.Text_IO.Get(User_Limit);

      -- Printing the generated sequence to the console
      Ada.Text_IO.Put_Line("Fibonacci Sequence up to " & Integer'Image(User_Limit) & ": ");
      Ada.Text_IO.Put_Line(Fibonacci_Seq(User_Limit));
   end;

end Fibonacci;
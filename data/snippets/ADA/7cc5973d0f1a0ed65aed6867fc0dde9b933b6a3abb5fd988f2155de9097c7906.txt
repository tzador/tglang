-- Task: Merge Sort
--
-- Description: This task implements the merge sort algorithm to sort an array of integers
--
-- Inputs:
--  - A: an array of integers to be sorted
--  - low: the starting index of the array
--  - high: the ending index of the array
--
-- Output: The array A is sorted in ascending order

procedure Merge_Sort(A : in out Array; low : Integer; high : Integer) is
    mid : Integer;
begin
    if low < high then -- if more than one element in the array
        mid := (low + high) / 2; -- divide the array into two halves

        Merge_Sort(A, low, mid); -- recursively call Merge_Sort on the first half
        Merge_Sort(A, mid + 1, high); -- recursively call Merge_Sort on the second half

        -- merge the two sorted halves
        Merge(A, low, mid, high);
    end if;
end Merge_Sort;

procedure Merge(A : in out Array; low : Integer; mid : Integer; high : Integer) is
    left : Integer := low; -- starting index of first subarray
    right : Integer := mid + 1; -- starting index of second subarray
    temp : Array(1..high) of Integer; -- temporary array to hold merged subarrays
    i : Integer;
begin
    for i in low..high loop
        if left > mid then
            temp(i) := A(right); -- all elements of first subarray have been merged, so copy remaining elements of second subarray to temp
            right := right + 1; -- increment index of second subarray
        elsif right > high then
            temp(i) := A(left); -- all elements of second subarray have been merged, so copy remaining elements of first subarray to temp
            left := left + 1; -- increment index of first subarray
        elsif A(left) <= A(right) then
            temp(i) := A(left); -- if element in first subarray is smaller than or equal to element in second subarray, copy it to temp
            left := left + 1; -- increment index of first subarray
        else
            temp(i) := A(right); -- if element in second subarray is smaller than element in first subarray, copy it to temp
            right := right + 1; -- increment index of second subarray
        end if;
    end loop;

    -- copy temp array back into original array
    for i in low..high loop
        A(i) := temp(i);
    end loop;
end Merge;
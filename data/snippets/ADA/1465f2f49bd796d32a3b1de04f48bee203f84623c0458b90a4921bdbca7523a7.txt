procedure Merge(Sorted_Array_1, Sorted_Array_2 : in out Vector; Sorted_Array_3 : out Vector) is
    i, j, k : Integer := 1; -- initialize indexes for each array
begin
    while (i <= Sorted_Array_1'Length and j <= Sorted_Array_2'Length) loop
        if Sorted_Array_1(i) <= Sorted_Array_2(j) then
            Sorted_Array_3(k) := Sorted_Array_1(i);
            i := i + 1;  -- increment index for first array
        else
            Sorted_Array_3(k) := Sorted_Array_2(j);
            j := j + 1;  -- increment index for second array
        end if;
        k := k + 1;  -- increment index for merged array
    end loop;

    -- if first array still has remaining elements, add them to the merged array
    for x in i .. Sorted_Array_1'Length loop
        Sorted_Array_3(k) := Sorted_Array_1(x);
        k := k + 1;  -- increment index for merged array
    end loop;

    -- if second array still has remaining elements, add them to the merged array
    for x in j .. Sorted_Array_2'Length loop
        Sorted_Array_3(k) := Sorted_Array_2(x);
        k := k + 1;  -- increment index for merged array
    end loop;
end Merge;
-- Procedure to perform a binary search on a sorted array

procedure Binary_Search(Num_Array : in Integer_Array; Key : in Integer; 
                         Low : in Integer; High : in Integer; 
                         Found : out Boolean)
  is
    Mid : Integer;
  begin
    if Low > High then -- Base case: element not found
      Found := False;
    else
      Mid := (Low + High) / 2; -- Calculate midpoint of the array
      if Num_Array(Mid) = Key then -- Check if element is at midpoint
        Found := True;
      elsif Num_Array(Mid) > Key then -- If element is less than midpoint, perform search on left half of array
        Binary_Search(Num_Array, Key, Low, Mid - 1, Found);
      else -- If element is greater than midpoint, perform search on right half of array
        Binary_Search(Num_Array, Key, Mid + 1, High, Found);
      end if;
    end if;
  end Binary_Search;
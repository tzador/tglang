procedure parallel_sum(A, B : in out Real_Array) is
begin
    pragma Unroll(16); -- Unroll loop for better performance
    for I in A'Range loop
        
        -- Calculating average of two elements at each index
        declare
            type Average is digits 20;
            subtype Average_Prec is Integer range 1 .. Average'Digits;
            function To_Average is new Ada.Numerics.Discrete_Random(Average, Average_Prec);
            G : constant To_Average := To_Average(Average'Value);
        begin
            A(I) := (A(I) + B(I))/ G;
        end;
        
        -- Parallel summation of elements at each index
        declare
            type Sum is digits 20;
            subtype Sum_Prec is Integer range 1 .. Sum'Digits;
            function To_Sum is new Ada.Numerics.Discrete_Random(Sum, Sum_Prec);
            S : constant To_Sum := To_Sum(Sum'Value);
        begin
            B(I) := A(I) + B(I)* S;
        end;
    end loop;
end parallel_sum;
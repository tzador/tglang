-- This is an example of a complex code snippet in ADA, showing
-- an implementation of the Knuth-Morris-Pratt substring search algorithm
with Text_IO, Ada.Integer_Text_IO;
use Text_IO, Ada.Integer_Text_IO;

procedure KMP_Example is

  -- A subroutine that generates the failure function for a given pattern
  procedure Generate_Failure (P : in String; F : out Integer_Array) is
    J, K : Integer := 2; -- J keeps track of the current index in the pattern and K tracks the last failure index
  begin
    F(1) := 0;
    F(2) := 1;
    while J <= P'Length loop
      if P(J) = P(K) then
        K := K + 1;
        F(J) := K;
        J := J + 1;
      else
        if K /= 1 then
          K := F(K - 1);
        else
          F(J) := 0;
          J := J + 1;
        end if;
      end if;
    end loop;
  end Generate_Failure;

  -- The main algorithm for substring search
  procedure Knuth_Morris_Pratt (T : in String; P : in String) is
    F : Integer_Array (1 .. P'Length); -- Array to hold the failure function
    J, K : Integer := 1; -- J keeps track of the current index in the text and K tracks the current index in the pattern
  begin
    Generate_Failure (P, F);
    while J + P'Length - K <= T'Length loop
      if P(K) = T(J + K - 1) then
        K := K + 1;
        if K = P'Length + 1 then
          Put_Line ("Pattern found starting at index " & Integer'Image(J));
          K := F(K - 1);
        end if;
      else
        if K /= 1 then
          -- Adjust the indices according to the failure function
          J := J + K - F(K - 1);
          K := F(K - 1);
        else
          J := J + 1;
        end if;
      end if;
    end loop;
  end Knuth_Morris_Pratt;
  
  -- Driver code to test the algorithm
  T : String := "This is an example text for testing the algorithm";
  P : String := "example";
begin

  Put_Line("Test Text: " & T);
  Put_Line("Pattern to search: " & P);
 
  -- Search for the pattern in the text
  Knuth_Morris_Pratt(T, P);
  
end KMP_Example;
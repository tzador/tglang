------------------------------------------------------------------
-- Some random array operations in ADA
------------------------------------------------------------------

with Ada.Containers.Unbounded_Arrays; use Ada.Containers;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;

procedure Random_Array_Operations is
   type Element is range -10 .. 10;
   type Int_Array is array (Positive range <>) of Element;

   Max_Size : constant Positive := 10;
   A : Int_Array (1 .. Max_Size);

   package Int_Array_IO is new Unbounded_Array_IO (Positive, Element);
   use Int_Array_IO;

   procedure Fill_Array (Data : in out Int_Array; Size : in Positive) is
   begin
      for I in Data'Range loop
         Data (I) := Element (Integer (-2 * Size + (I * 4)));
      end loop;
   end Fill_Array;

   procedure Print_Data is
      N : Positive := 1;
   begin
      while N < A.Length loop
         Put (N);
         Put (": ");
         Put (A (N));
         Put_Line ("");
         N := N + 1;
      end loop;
   end Print_Data;

   procedure Add_Arrays is
      Result : Int_Array (1 .. Max_Size);
   begin
      for I in Result'Range loop
         Result (I) := A (I) + A (I + 1);
      end loop;
      Print_Data (Result);
   end Add_Arrays;

   procedure Multiply_Arrays is
      Result : Int_Array (1 .. Max_Size);
   begin
      for I in Result'Range loop
         Result (I) := A (I) * A (I + 1);
      end loop;
      Print_Data (Result);
   end Multiply_Arrays;

begin

   Put_Line ("Generating an array of size 10...");
   Fill_Array (A, 10);
   Put_Line ("Printing the data...");
   Print_Data;
   Put_Line ("Adding the elements of the array...");
   Add_Arrays;
   Put_Line ("Multiplying the elements of the array...");
   Multiply_Arrays;

end Random_Array_Operations;
-- This code snippet is an example of a sorting algorithm in ADA.

-- Define a procedure to swap two elements in an array.
procedure Swap (A : in out Array_Type; Index1, Index2 : Integer)
is
    Temp : Element_Type;
    -- Store the value in the first index in a temporary variable.
    Temp := A(Index1);
    -- Assign the value in the second index to the first index.
    A(Index1) := A(Index2);
    -- Assign the value in the temporary variable to the second index.
    A(Index2) := Temp;
end Swap;

-- Define a procedure to perform the sorting using the bubble sort algorithm.
procedure Bubble_Sort (A : in out Array_Type) is
    Swap_Occurred : Boolean := True;
    Pass : Integer;
    Last : Integer := A'Last;
begin
    -- Loop until a pass is made without any swaps.
    while Swap_Occurred loop
        Swap_Occurred := False;
        -- Loop through the array, swapping adjacent elements if they are in the wrong order.
        for I in A'First .. Last - 1 loop
            if A(I) > A(I+1) then
                Swap(A, I, I+1);
                Swap_Occurred := True;
            end if;
        end loop;
        -- After each pass, the last element will be in its correct position, so decrement Last.
        Last := Last - 1;
    end loop;
end Bubble_Sort;

-- Usage example: declare an array and call the Bubble_Sort procedure.
declare
    Int_Array : Array(1..10) of Integer := (4,2,10,5,1,8,7,3,9,6);
begin
    Bubble_Sort(Int_Array);
end;
-- This is a program in ADA that implements a binary search algorithm

with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;

procedure Binary_Search is
	
	type Int_Array is array(Integer range <>) of Integer;

	-- Recursive function for binary search
	function Binary_Search (A: in Int_Array; Key: Integer; Low, High: Integer) return Integer is
		Mid : Integer;
	begin
		if Low = High then
			if A(Low) /= Key then
				return -1; -- key not found
			else
				return Low; -- key found
			end if;
		else
			Mid := (Low + High) / 2;
			if A(Mid) = Key then
				return Mid; -- key found
			elsif A(Mid) > Key then
				return Binary_Search(A, Key, Low, Mid - 1); -- search in lower half
			else
				return Binary_Search(A, Key, Mid + 1, High); -- search in upper half
			end if;
		end if;
	end Binary_Search;

	A : Int_Array := (1, 2, 3, 4, 5, 6, 7, 8, 9, 10); -- sorted array for search
	Key : Integer := 7; -- key to search for
	Result : Integer;

begin
	Result := Binary_Search(A, Key, A'First, A'Last);
	if Result = -1 then
		Put_Line("Key not found");
	else
		Put_Line("Key found at index " & Result'Image);
	end if;
end Binary_Search;
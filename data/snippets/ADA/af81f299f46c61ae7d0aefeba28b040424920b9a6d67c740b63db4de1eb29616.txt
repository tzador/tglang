-- Package declaration
package My_Package is
   -- Generic constant
   generic
      Example_Gen : Integer := 10;  -- Example generic constant with default value
   -- Array type declaration
   type Example_Array is array(1..Example_Gen) of Float;
   -- Function declaration
   function Compute_Square_Root (Input : Float) return Float;
   -- Procedure declaration
   procedure Print_Results (Array_In : in Example_Array);
end My_Package;

-- Package body
package body My_Package is
   -- Private variable declaration
   private
      Root : Float := 0.0;  -- Variable for storing square root
   -- Function definition
   function Compute_Square_Root (Input : Float) return Float is
   begin
      Root := Input ** 0.5;  -- Calculate square root using exponentiation
      return Root;  -- Return square root
   end Compute_Square_Root;
   -- Procedure definition
   procedure Print_Results (Array_In : in Example_Array) is
   begin
      -- Loop through array elements
      for i in Example_Array'range loop
         -- Calculate and print square root of each element
         Ada.Text_IO.Put_Line("Square Root of " & Float'Image(Array_In(i)) & " = " & Float'Image(Compute_Square_Root(Array_In(i))));
      end loop;
   end Print_Results;
end My_Package;

-- Main program
with Ada.Text_IO, My_Package;  -- Use Text_IO for input/output and My_Package for package
procedure Main is
   -- Local variable declaration
   Input_Array : My_Package.Example_Array := (2.5, 4.8, 3.2, 6.4, 7.9);  -- Initialize array
begin
   My_Package.Print_Results(Input_Array);  -- Call procedure to print results
end Main;
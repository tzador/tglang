-- The following code snippet generates a binary search tree
-- with random values and inserts new values into it.

with Ada.Text_IO; use Ada.Text_IO;

procedure Main is

   type Node;
   type Tree is access Node;
   type Node is record
      Value : Integer;
      Left, Right : Tree;
   end record;

   function New_Tree (N : Integer) return Tree is
   begin
      if N = 0 then
         return null;
      else
         declare
            Root : Tree := new Node;

            function Random (Min, Max : Integer) return Integer is
            begin
               return Min + Natural(Random(Max - Min + 1));
            end Random;

         begin
            Root.Value := Random(1, 1000);
            Root.Left := New_Tree (N/2);
            Root.Right := New_Tree (N/2);
            return Root;
         end;
      end if;
   end New_Tree;

   procedure Insert (T : in out Tree; V : Integer) is
   begin
      if T = null then
         T := new Node'(Value => V, Left => null, Right => null);
      elsif V < T.Value then
         Insert (T.Left, V);
      elsif V > T.Value then
         Insert (T.Right, V);
      end if;
   end Insert;

   procedure Print_Tree (T : Tree) is
      procedure Print (T : Tree; Indent : Integer := 0) is
      begin
         if T /= null then
            Print (T.Right, Indent + 4);
            Put_Line (Indent, Integer'Image (T.Value));
            Print (T.Left, Indent + 4);
         end if;
      end Print;
   begin
      Print (T);
   end Print_Tree;

   Random_Seed (Clock);
   Put_Line ("Generating Binary Search Tree with random values...");
   Put ("Enter the number of nodes in the tree: ");
   loop
      declare
         N : Integer;
      begin
         Get (N);
         exit when N > 0;
      end;
      declare
         T : Tree := New_Tree (N);
      begin
         Put_Line (Integer'Image(N) & " nodes created.");
         Put_Line;
         Print_Tree (T);
         Put_Line;
         Put ("Enter a new value to insert into the tree (or 0 to quit): ");
         loop
            declare
               V : Integer;
            begin
               Get (V);
               exit when V = 0;
            end;
            Insert (T, V);
            Put_Line ("New value " & Integer'Image (V) & " inserted into tree.");
            Put_Line;
            Print_Tree (T);
            Put_Line;
            Put ("Enter a new value to insert into the tree (or 0 to quit): ");
         end loop;
      end;
   end loop;
end Main;
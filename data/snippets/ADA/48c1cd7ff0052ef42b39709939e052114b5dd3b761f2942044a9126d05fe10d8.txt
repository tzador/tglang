-- File: Graph.ads

generic
   type Vertex_Type is private;
   type Weight_Type is range <>;

package Graph is
    
   type Vertex is private;
   
   type Edge is record
      Source : Vertex;
      Destination : Vertex;
      Weight : Weight_Type;
   end record;
   
   type Adjacency_List is array(Vertex_Type) of Vertex_Type;
   
   type Graph_Type is record
      Vertex_Count : Natural := 0;
      Vertex_List : Adjacency_List(0 .. Vertex_Count-1);
      Edge_List : array(Natural) of Edge(0 .. Vertex_Count-1);
   end record;
   
   procedure Add_Vertex(Graph : in out Graph_Type; Vertex : in Vertex_Type);
   
   procedure Add_Edge(Graph : in out Graph_Type; Source : in Vertex_Type; Destination : in Vertex_Type; Weight : in Weight_Type);
   
   function Is_Connected(Graph : in Graph_Type; Source : in Vertex_Type; Destination : in Vertex_Type) return Boolean;
   
   function Get_Weight(Graph : in Graph_Type; Source : in Vertex_Type; Destination : in Vertex_Type) return Weight_Type;

private

   type Vertex is record
      Vertex_ID : Vertex_Type;
      Visited : Boolean := False;
   end record;
      
end Graph;
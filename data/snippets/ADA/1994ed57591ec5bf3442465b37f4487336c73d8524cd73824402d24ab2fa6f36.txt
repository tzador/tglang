-- This is an example of a complex code snippet in ADA
with Ada.Strings.Unbounded;                         -- include the Ada.Strings.Unbounded package

procedure Complex_Code is
    type Unbounded_String_Ptr is access Ada.Strings.Unbounded.Unbounded_String;  -- create a pointer to an unbounded string
    S1 : constant Unbounded_String_Ptr := new Ada.Strings.Unbounded.Unbounded_String'(1..20);  -- initialize the pointer with a new unbounded string of size 20
    S2 : constant Unbounded_String_Ptr := new Ada.Strings.Unbounded.Unbounded_String'(1..10);  -- initialize another new string of size 10
    N : Natural := 5;  -- set a natural number variable to 5
    
begin
    for I in 1..N loop  -- loop 5 times
        Ada.Strings.Unbounded.Append(S1, S2);  -- append S2 to S1
    end loop;

    Ada.Strings.Unbounded.Append(S1, S1(S1'First..S1'Last));  -- append S1 to S1

    Ada.Strings.Unbounded.Append(S1, Ada.Strings.Unbounded.To_Unbounded_String(" is complete."));  -- append a bounded string to S1
    
    Ada.Text_IO.Put_Line(Ada.Strings.Unbounded.To_String(S1));  -- print the full string S1
    
    Ada.Strings.Unbounded.Free(S1);  -- free the memory allocated for S1
end Complex_Code;
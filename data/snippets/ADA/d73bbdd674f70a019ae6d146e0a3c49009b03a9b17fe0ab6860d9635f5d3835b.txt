-- This is a comment in ADA

procedure Quicksort (A : in out Array_Type;
                     First, Last: Integer) is

    Pivot, I, J, Temp: Integer;
    
    -- This procedure sorts an array using the quicksort algorithm
    
begin
    if First < Last then
        Pivot := A(First);
        
        -- Partition the array
        
        I := First + 1;
        J := Last;
        
        while (I <= J) loop
            while (I <= Last and A(I) < Pivot) loop
                I := I + 1;
            end loop;
            
            while (J > First and A(J) >= Pivot) loop
                J := J - 1;
            end loop;
            
            if (I < J) then
                -- Swap A(I) and A(J)
                Temp := A(I);
                A(I) := A(J);
                A(J) := Temp;
            end if;
            
            -- Move the elements smaller than the pivot to the left
            -- of the pivot
            if (J > First) then
                -- Swap A(First) and A(J)
                Temp := A(First);
                A(First) := A(J);
                A(J) := Temp;
            end if;
            
            -- Set the pivot index
            Pivot := J;
        end loop;
        
        -- Recursively sort the subarrays
        Quicksort(A, First, Pivot - 1);
        Quicksort(A, Pivot + 1, Last);
    end if;
end Quicksort;
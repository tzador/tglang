-- Example of an Ada task specification with protected objects

-- Task to simulate data collection from sensors
task Sensor_Collection is
  entry Sensor_Data (Sensor_ID: in Sensor_ID_Type; Data: out Data_Type);
  -- Entry to receive data from sensor
end Sensor_Collection;

-- Protected object to store and process data from sensors
protected Data_Store is
   entry Add_Data (Data: in Data_Type);
   -- Entry to add data to the store
   function Process_Data return Data_Type;
   -- Function to process the data and return the result
private
   Sensor_Data: Data_Type;
end Data_Store;

task body Sensor_Collection is
  Sensor_Data: Data_Type;
begin
  -- Loop to receive data from sensors
  loop
    select
      -- Randomly choose a sensor
      Sensor_ID := Choose_Sensor();
      -- Receive data from chosen sensor
      accept Sensor_Data (Sensor_ID, Data);
      -- Add data to the store
      Data_Store.Add_Data (Data);
    end select;
  end loop;
end Sensor_Collection;

protected body Data_Store is
  -- Implementing the entry to add data
  entry Add_Data (Data: in Data_Type) when Sensor_Data = 0 is
  begin
    Sensor_Data := Data;
  end Add_Data;

  -- Implementing the function to process the data
  function Process_Data return Data_Type is
  begin
    -- Process data and return result
    return History_Data + Sensor_Data;
  end Process_Data;
end Data_Store;
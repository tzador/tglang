package Main is

   function Quicksort (A : in out Integer_Array) is
      Pivot : Integer := A (A'First);
      Right : Integer := A'Last;
      Left  : Integer := A'First;
   
   begin
      while Left < Right loop
         while (A (Left) <= Pivot) and (Left < A'Last) loop
            Left := Left +1;
         end loop;
                  
         while (A (Right) > Pivot) loop
            Right := Right -1;
         end loop;
         
         if Left < Right then
            swap (A (Left), A (Right));
         end if;
      end loop;
   
      swap (A (A'First), A (Right));
      return Right;
   end Quicksort;
   
   task MergeSort (A : in out Integer_Array) is
   
      procedure merge (A : in out Integer_Array; First : Integer; Mid : Integer; Last : Integer);
      
         L_Index : Integer := First;
         R_Index : Integer := Mid + 1;
         Temp    : Integer_Array (A'First..A'Last);
         T_Index : Integer := A'First;
      
      begin
         while ((L_Index <= Mid) and (R_Index <= Last)) loop
         
            if A (L_Index) < A (R_Index) then
               Temp (T_Index) := A (L_Index);
               L_Index := L_Index + 1;
            else
               Temp (T_Index) := A (R_Index);
               R_Index := R_Index + 1;
            end if;
            
            T_Index := T_Index + 1;
         end loop;
        
         while L_Index <= Mid loop
            Temp (T_Index) := A (L_Index);
            T_Index := T_Index + 1;
            L_Index := L_Index + 1;
         end loop;
         
         while R_Index <= Last loop
            Temp (T_Index) := A (R_Index);
            T_Index := T_Index + 1;
            R_Index := R_Index + 1;
         end loop;
         
         for I in A'First..A'Last loop
            A (I) := Temp (I);
         end loop;
      end merge;
   
      procedure Sort (A : in out Integer_Array; First : Integer; Last : Integer) is
         Mid : Integer;
      begin
         if Last > First then
            Mid := (Last + First) / 2;
            Sort (A, First, Mid);
            Sort (A, Mid + 1, Last);
            merge (A, First, Mid, Last);
         end if;
      end Sort;
   
   begin
      Sort (A, A'First, A'Last);
   end MergeSort;
   
   procedure Main is
      list : Integer_Array := (4,3,6,2,1,7,9,8);
   begin
      Quicksort(list);
      MergeSort(list);
   end Main;

end Main;
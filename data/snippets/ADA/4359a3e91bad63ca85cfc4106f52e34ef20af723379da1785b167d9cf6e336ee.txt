procedure Quick_Sort(A: in out Custom_Array;
                     First, Last: Integer) is
    Pivot: Integer;
    i, j: Integer;
begin
    if First < Last then
        Pivot := A((First + Last) / 2);   -- Selects middle element as pivot
        i := First;
        j := Last;
        loop
            -- Find first element greater than or equal to pivot
            while A(i) < Pivot loop
                i := i + 1;
            end loop;
            -- Find first element less than or equal to pivot
            while A(j) > Pivot loop
                j := j - 1;
            end loop;
            exit when i >= j;   -- Exit loop when indices cross
            -- Swap elements at indices
            A.Swap(i, j);
        end loop;
        Quick_Sort(A, First, j - 1);   -- Sort elements left of pivot
        Quick_Sort(A, j + 1, Last);    -- Sort elements right of pivot
    end if;
end Quick_Sort;
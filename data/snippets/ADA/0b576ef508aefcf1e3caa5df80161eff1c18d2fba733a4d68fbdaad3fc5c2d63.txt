-- Defines a package named "Fibonacci"
package Fibonacci is

  -- Declares a constant named "MAX_N" of type "Positive" with value 50
  MAX_N : constant Positive := 50;

  -- Defines a function named "compute_fib" with parameter "n" of type "Natural" and return value of type "Natural"
  function compute_fib (n : in Natural) return Natural is
    -- Defines a local variable named "f1" of type "Natural" with value 0
    f1 : Natural := 0;
    -- Defines a local variable named "f2" of type "Natural" with value 1
    f2 : Natural := 1;
    -- Defines a local variable named "f" of type "Natural" with initial value of 0
    f : Natural := 0;
  begin
    -- If the input parameter is less than or equal to 1
    if n <= 1 then
      -- Assign the value of the input parameter to the variable "f"
      f := n;
    else
      -- Loop from 2 to the value of the input parameter
      for i in 2..n loop
        -- Update the value of "f" by adding the values of "f1" and "f2"
        f := f1 + f2;
        -- Update the values of "f1" and "f2" by shifting their values to the next two numbers in the Fibonacci sequence
        f1 := f2;
        f2 := f;
      end loop;
    end if;

    -- Return the value of "f"
    return f;
  end compute_fib;

end Fibonacci;
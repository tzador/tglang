-- This example shows the use of a binary search algorithm in Ada

with Ada.Text_IO;
use Ada.Text_IO;

procedure Binary_Search is

   type Int_Array is array (Positive range <>) of Integer;
   List : Int_Array (1..100);
   Found : Boolean;
   Index : Integer;
   Target : Integer;
   Result : String (1..20);

   
   -- This generic package provides a function to perform a binary search on any array of Integer
   generic
      type Item is private;
      type Array_Type is array (Natural range <>) of Item;
      with function "<" (Left, Right : Item) return Boolean is <>;
   package Binary_Search is
      function Search (A : in Array_Type; Key : in Item; Low, High : in Natural) return Natural;
   end Binary_Search;
  
begin
   
   -- Populate array with sorted Integers
   for I in 1..100 loop
      List (I) := I;
   end loop;
   
   -- Prompt user for input
   Put ("Enter target value: ");
   Get (Target);
   
   -- Perform binary search
   Index := Binary_Search.Search (List, Target, List'First, List'Last);
   
   -- Check if target value was found
   if Index = 0 then
      Found := False;
   else
      Found := True;
   end if;
   
   -- Output result
   if Found then
      Result := " was found at index: " & Integer'Image (Index);
   else
      Result := " was not found.";
   end if;
   Put (Target & Result);
   
end Binary_Search;
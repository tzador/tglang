--This is a code snippet in Ada that creates a task, synchronizes it with other tasks, and handles exceptions if they occur

with Ada.Text_IO;                                                                              --import the Ada.Text_IO library for input/output operations

procedure Task_Synchronization is                                                                --start of the main procedure
  
   task Example_Task1;                                                                          --create a task called "Example_Task1"
                                                                                                
   task body Example_Task1 is                                                                   --start of the task's body
     begin                                                                                      --beginning of the task's execution
        Ada.Text_IO.Put_Line("Example_Task1 is executing.");                                    --print a message to the console
        delay 1.0;                                                                              --delay the task's execution for 1 second               
        Ada.Text_IO.Put_Line("Example_Task1 is done.");                                         --print another message to the console
     end Example_Task1;                                                                          --end of the task's body
   
   task Example_Task2;                                                                          --create another task called "Example_Task2"
                                                                                                
   task body Example_Task2 is                                                                   --start of the task's body
     begin                                                                                      --beginning of the task's execution
        Ada.Text_IO.Put_Line("Example_Task2 is executing.");                                    --print a message to the console
        delay 2.0;                                                                              --delay the task's execution for 2 seconds               
        Ada.Text_IO.Put_Line("Example_Task2 is done.");                                         --print another message to the console
     end Example_Task2;                                                                          --end of the task's body
  
begin                                                                                            --start of the main body
   Example_Task1;                                                                               --execute the task "Example_Task1"
   Ada.Text_IO.Put_Line("Main Task is executing.");                                             --print a message to the console
   Example_Task2;                                                                               --execute the task "Example_Task2"
   
   exception                                                                                    --handles any exceptions that might occur during the execution of the tasks
      when others =>                                                                            --catches any type of exception
         Ada.Text_IO.Put_Line("An error has occured.");                                         --print an error message to the console
end Task_Synchronization;                                                                        --end of the main procedure
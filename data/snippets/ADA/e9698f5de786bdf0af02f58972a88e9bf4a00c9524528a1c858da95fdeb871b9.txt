-- Declaration of an array named "numbers" with a size of 10
TYPE Numbers IS ARRAY(1..10) OF INTEGER;

-- A nested function for swapping two elements in the array
FUNCTION Swap(Var1, Var2 : IN OUT INTEGER) RETURN INTEGER is
    Temp : INTEGER;
BEGIN
    Temp := Var1;
    Var1 := Var2;
    Var2 := Temp;
    RETURN 0;
END Swap;

-- Procedure for sorting the elements in the array in ascending order using Bubble Sort algorithm
PROCEDURE BubbleSort(Nlist : IN OUT Numbers) IS
    Swapped : BOOLEAN;
BEGIN
    FOR I IN 1..10 LOOP
        Swapped := FALSE;
        FOR J IN 1..(10-I) LOOP
            IF Nlist(J) > Nlist(J+1) THEN
                Swap(Nlist(J), Nlist(J+1));
                Swapped := TRUE;
            END IF;
        END LOOP;
        
        IF Swapped = FALSE THEN
            EXIT; -- Exit the loop if no swaps were made, indicating the array is already sorted
        END IF;
    END LOOP;
END BubbleSort;

-- Declaration of an array named "num" with a size of 10
Numbers : Numbers := (2, 9, 5, 4, 7, 1, 3, 8, 6, 10);

-- Sorting the "num" array using the BubbleSort procedure
BubbleSort(Numbers);

-- Outputting the sorted array in a formatted manner
Put_Line("The sorted array is: ");
FOR K IN 1..10 LOOP
    Put(K & ". " & Numbers(K));
END LOOP;
-- This is a complex code snippet in ADA
with Ada.Text_IO;use Ada.Text_IO;

procedure Main is
    type Budget is
        record
            monthly_income : Integer;
            expenses : array (1..12) of Integer;
        end record;

    type Transaction is
        record
            account_name : String(1..50);
            amount : Integer;
        end record;

    function Calculate_Savings (Transaction_List : access Transaction) return Integer is
        -- This function calculates the total savings for a given list of transactions
        Total_Savings : Integer := 0;
    begin
        for I in 1..Transaction_List'Length loop
            Total_Savings := Total_Savings + Transaction_List(I).amount;
        end loop;

        return Total_Savings;
    end Calculate_Savings;

    procedure Print_Budget_Summary (Budget_Record : Budget) is
        -- This procedure prints out a summary of the monthly budget
        Total_Expenses : Integer := 0;
        Balance : Integer := 0;
    begin
        for I in 1..12 loop
            Total_Expenses := Total_Expenses + Budget_Record.expenses(I);
        end loop;

        Balance := Budget_Record.monthly_income - Total_Expenses;

        Put_Line ("Monthly Income: " & Integer'Image (Budget_Record.monthly_income));
        Put_Line ("Total Expenses: " & Integer'Image (Total_Expenses));
        Put_Line ("Balance: " & Integer'Image (Balance));
    end Print_Budget_Summary;

    -- Create a budget record with income of $5000 and monthly expenses of $200
    My_Budget : Budget;
    My_Budget.monthly_income := 5000;
    My_Budget.expenses := (others => 200);

    -- Create an array of transactions for the month
    Transaction_List : array (1..5) of Transaction :=
        ( (account_name => "Rent", amount => 1000),
          (account_name => "Groceries", amount => 500),
          (account_name => "Utilities", amount => 200),
          (account_name => "Entertainment", amount => 100),
          (account_name => "Savings", amount => 500) );

    -- Print out a summary of the budget
    Print_Budget_Summary (My_Budget);

    -- Calculate the total savings from the transaction list
    Total_Savings : Integer := Calculate_Savings (Transaction_List'Access);

    Put_Line ("Total Savings: " & Integer'Image (Total_Savings));

    -- Check if the total savings are more than the monthly income
    if Total_Savings > My_Budget.monthly_income then
        Put_Line ("Congratulations, you have exceeded your monthly savings goal!");
    else
        Put_Line ("You have not yet met your monthly savings goal, keep working hard!");
    end if;
end Main;
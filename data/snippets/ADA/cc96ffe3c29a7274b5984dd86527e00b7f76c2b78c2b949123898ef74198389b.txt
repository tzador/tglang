with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;

procedure Main is

    type Integer_Array is array(Positive range <>) of Integer;
    -- defining a type for an unbounded array of integers

    packages_announce : Unbounded_String := To_Unbounded_String("Packages successfully imported.");
    -- defining and initializing an unbounded string variable
    
    package Random_Int_Utils is
        new Ada.Numerics.Discrete_Random(Integer);
    -- creating a package instance for generating random integers

    rand_seed : Random_Int_Utils.Generator;
    -- declaring a generator variable
    
    array_size : Integer := Random_Int_Utils.Uniform(rand_seed, 10, 20);
    -- generating a random size for the array
    
    nums : Integer_Array(1..array_size);
    -- declaring an array with the generated size
    
begin
    Random_Int_Utils.Reset(rand_seed);
    -- resetting the generator to ensure different results each time
    
    for i in Integer_Array'Range loop
        nums(i) := Random_Int_Utils.Random(rand_seed);
        -- filling the array with random integers
    end loop;
    
    for i in Integer_Array'Range loop
        Put_Line("Element " & Integer'Image(i) & ": " & Integer'Image(nums(i)));
        -- printing out each element of the array with its index
    end loop;
    
    Put_Line(To_String(packages_announce));
    -- printing out the success message for importing packages
    
end Main;
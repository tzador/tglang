-- Multi-Precision Arithmetic Package

-- Type representing a large integer
TYPE Large_Integer IS RECORD
  mantissa : Long_Long_Integer; -- stores the integer value
  exponent : Integer; -- stores the position of the decimal point
END RECORD;

-- Function to add two large integers together
FUNCTION Add_Large_Integers(a, b : IN Large_Integer; p : IN Integer) RETURN Large_Integer IS
  c : Large_Integer;
BEGIN
  IF a.exponent <= b.exponent THEN
    c.exponent := a.exponent;
    c.mantissa := a.mantissa + (b.mantissa * 10**(b.exponent - a.exponent));
  ELSE
    c.exponent := b.exponent;
    c.mantissa := (a.mantissa * 10**(a.exponent - b.exponent)) + b.mantissa;
  END IF;
  
  -- Normalize the result
  WHILE c.mantissa >= 10 DO
    c.mantissa := c.mantissa / 10;
    c.exponent := c.exponent + 1;
  END WHILE;
  
  -- Adjust the number of digits after the decimal point
  WHILE c.exponent > p DO
    c.mantissa := c.mantissa / 10;
    c.exponent := c.exponent - 1;
  END WHILE;
  
  RETURN c;
END Add_Large_Integers;
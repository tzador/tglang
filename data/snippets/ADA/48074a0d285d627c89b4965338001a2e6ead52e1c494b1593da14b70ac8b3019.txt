-- Define a package called "Employee" --

package Employee is

   -- Define a type for "Employee Record" --

   type Employee_Record is record
      Name : String(1..50);
      ID : Integer;
      Department : String(1..30);
      Salary : Float;
      Address : String(1..100);
   end record;

   -- Define a constant for maximum number of employees --

   Max_Employees : Integer := 100;

   -- Define an array of "Employee Records" --

   Employee_Array : array(1..Max_Employees) of Employee_Record;

   -- Define a procedure to add new employee records --

   procedure Add_Employee(Name : String; ID : Integer; Department : String; Salary : Float; Address : String) is
      -- Check if there is space in the array --
      if Employee_Array'Length < Max_Employees then
         -- Increment the array's length and add the new record at the end --
         Employee_Array'Length := Employee_Array'Length + 1;
         Employee_Array(Employee_Array'Length).Name := Name;
         Employee_Array(Employee_Array'Length).ID := ID;
         Employee_Array(Employee_Array'Length).Department := Department;
         Employee_Array(Employee_Array'Length).Salary := Salary;
         Employee_Array(Employee_Array'Length).Address := Address;
      else
         -- Print error message if the array is already full --
         Put_Line("Error: Maximum number of employees reached");
      end if;
   end Add_Employee;

   -- Define a procedure to print employee records --

   procedure Print_Employees is
      -- Loop through the employee array and print each record --
      for i in Employee_Array'Range loop
         Put_Line("Name: " & Employee_Array(i).Name);
         Put_Line("ID: " & Employee_Array(i).ID'Image);
         Put_Line("Department: " & Employee_Array(i).Department);
         Put_Line("Salary: " & Employee_Array(i).Salary'Image);
         Put_Line("Address: " & Employee_Array(i).Address);
         Put_Line("--------------------------------------");
      end loop;
   end Print_Employees;

end Employee;

-- In your main program, add a new employee and print all employee records --

with Ada.Text_IO; use Ada.Text_IO;
with Employee; use Employee;

procedure Main is

   -- Add a new employee to the records --
   Add_Employee("John Smith", 12345, "Marketing", 5000.00, "123 Main St");

   -- Print all employee records --
   Print_Employees;

end Main;
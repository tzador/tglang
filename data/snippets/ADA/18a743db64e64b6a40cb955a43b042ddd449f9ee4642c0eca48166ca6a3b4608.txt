-- array operations
with Ada.Text_IO; use Ada.Text_IO;

procedure Array_Operations is

   type Array_Type is array (1 .. 10) of Integer; -- declare an array type
   My_Array : Array_Type; -- declare an array
   Index : Integer := My_Array'First; -- declare an index variable
   
begin
   
   -- integer array initialization
   My_Array (1) := 5; -- assign a value to the first element of the array
   My_Array (2) := 10;
   My_Array (3) := 15;
   My_Array (4) := 20;
   My_Array (5) := 25;
   My_Array (6) := 30;
   My_Array (7) := 35;
   My_Array (8) := 40;
   My_Array (9) := 45;
   My_Array (10) := 50;
   
   Put_Line ("The initial array is:");
   for I in My_Array'Range loop -- loop through the array
      Put (My_Array(I)); -- print each element of the array
   end loop;
   New_Line; -- print a new line
   
   -- array index operation - incrementing
   while Index <= My_Array'Last loop -- loop while index is less than or equal to the last index of the array
      My_Array (Index) := My_Array (Index) + 1; -- increment the value at the current index position
      Index := Index + 1; -- increment the index variable
   end loop;
   
   Put_Line ("The array after increment:");
   for I in My_Array'Range loop
      Put (My_Array(I));
   end loop;
   New_Line;
   
   -- array index operation - decrementing
   while Index > My_Array'First loop -- loop while index is greater than the first index of the array
      My_Array (Index) := My_Array (Index) - 1; -- decrement the value at the current index position
      Index := Index - 1; -- decrement the index variable
   end loop;
   
   Put_Line ("The final array is:");
   for I in My_Array'Range loop
      Put (My_Array(I));
   end loop;
   New_Line;
   
end Array_Operations;
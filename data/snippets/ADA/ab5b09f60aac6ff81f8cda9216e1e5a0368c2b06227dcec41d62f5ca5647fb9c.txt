-- This is a code snippet written in ADA programming language

-- Declare a package
package My_Package is
   type My_Array is array (1..10) of Integer; -- Declaring an array of integers
   
   function Add (A, B : Integer) return Integer; -- Function to add two integers
   -- Params:
   -- A - first integer to be added
   -- B - second integer to be added
   -- Returns:
   -- the sum of A and B as an integer
   
   procedure Print_Array (Arr : in My_Array); -- Procedure to print the contents of the array
   -- Params:
   -- Arr - the array to be printed
end My_Package;

-- Definition of the package body
package body My_Package is
   function Add (A, B : Integer) return Integer is -- Implementation of the Add function
   begin
      return A + B; -- Adding the two integers and returning the result
   end Add;
   
   procedure Print_Array (Arr : in My_Array) is -- Implementation of the Print_Array procedure
   begin
      for Index in Arr'Range loop -- Looping through the array
         Put_Line (Integer'Image (Arr (Index))); -- Converting and printing the integer value at each index
      end loop;
   end Print_Array;
end My_Package;

with My_Package; -- Importing the package
use My_Package; -- Using all declarations from the package

procedure Main is
   My_Int1 : Integer := 5; -- Initializing first integer
   My_Int2 : Integer := 10; -- Initializing second integer
   My_Result : Integer; -- Variable to hold the result of the function call
   
   My_Int_Arr : My_Array := (1, 2, 3, 4, 5, 6, 7, 8, 9, 10); -- Initializing the array with values
   
begin -- Main procedure for executing the code
   My_Result := Add (My_Int1, My_Int2); -- Calling the Add function and saving the result
   Print_Array (My_Int_Arr); -- Calling the Print_Array procedure to print the array contents
end Main;
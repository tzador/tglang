-- This code snippet shows the implementation of a selection sort algorithm in Ada

-- Define an array of integers
Int_Array : array (1..10) of Integer := (9,3,6,1,4,2,7,5,10,8);

-- Create a temporary variable
Temp : Integer;

-- Start the selection sort algorithm
for I in Int_Array'Range loop
    -- Set the current element as the minimum
    Min : Integer := I;
    -- Loop through the remaining elements to find the minimum
    for J in Int_Array'Range loop
        -- Compare the current element with the minimum
        if Int_Array(J) < Int_Array(Min) then
            -- If the current element is smaller, set it as the new minimum
            Min := J;
        end if;
    end loop;
    -- Swap the minimum element with the current element
    Temp := Int_Array(I);
    Int_Array(I) := Int_Array(Min);
    Int_Array(Min) := Temp;
end loop;

-- Print the sorted array
for K in Int_Array'Range loop
    Put(Integer'Image(Int_Array(K)) & " ");
end loop;

-- The output will be: 1 2 3 4 5 6 7 8 9 10
--This is a complex code snippet in ADA--

with Ada.Text_IO; use Ada.Text_IO;

procedure Complex is
   type Matrix is array(1..3, 1..3) of Integer;
   with SPARK_Mode => On;

   procedure Multiply(M1, M2 : in Natural.Range; M3 : in out Matrix) is
   --## This procedure multiplies two matrices and stores the result in M3
      Temp : Integer := 0;
   begin
      for I in 1..M3'Length(1) loop
         for J in 1..M3'Length(2) loop
	 Temp := 0;
         for K in 1..M1'Length(2) loop
            Temp := Temp + M1(I,K) * M2(K,J);
         end loop;
         M3(I,J) := Temp;
      end loop;
   end Multiply;

   A : constant Matrix := (1..3( => (1..3=> 0));
   B : constant Matrix := (1..3( => (1..3=> 0));
   C : Matrix;
begin
   --## This section prompts the user for matrix A inputs
   Put_Line("Enter the values for Matrix A:");
   for I in A'Range(1) loop
      for J in A'Range(2) loop
         Get(A(I, J));
      end loop;
   end loop;

   --## This section prompts the user for matrix B inputs
   Put_Line("Enter the values for Matrix B:");
   for I in B'Range(1) loop
      for J in B'Range(2) loop
         Get(B(I, J));
      end loop;
   end loop;

   --## This section calls the Multiply procedure to compute the product of A and B
   Multiply(A, B, C);

   --## This section displays the result of the multiplication
   Put_Line("The result of matrix multiplication A * B is:");
   for I in C'Range(1) loop
      for J in C'Range(2) loop
         Put(C(I, J), 5);
      end loop;
      New_Line;
   end loop;
end Complex;
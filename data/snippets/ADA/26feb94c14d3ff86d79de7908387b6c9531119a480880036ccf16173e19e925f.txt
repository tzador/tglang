-- This is an example of a complex code snippet in ADA

-- First, we define a procedure that generates a random number
procedure GenerateNumber (Min, Max : Integer; RandomNumber : out Integer) is
begin
   RandomNumber := Min + Random (Max - Min + 1);
end GenerateNumber;

-- Next, we declare an array of integers
type Int_Array is array (Integer range <>) of Integer;

-- Then, we have a function that sorts the array in ascending order
function Sort_Array (Array_To_Sort : in out Int_Array) return Int_Array is
   Temp  : Integer;
begin
   for I in Array_To_Sort'First .. Array_To_Sort'Last-1 loop
      for J in I+1 .. Array_To_Sort'Last loop
         if Array_To_Sort (J) < Array_To_Sort (I) then
            Temp := Array_To_Sort (I);
            Array_To_Sort (I) := Array_To_Sort (J);
            Array_To_Sort (J) := Temp;
         end if;
      end loop;
   end loop;
   return Array_To_Sort;
end Sort_Array;

-- Next, we initialize an array with 10 random numbers
Array : Int_Array (1..10);
for I in 1..10 loop
   GenerateNumber (1, 100, Array (I));
end loop;

-- Finally, we sort the array and print out the result
Sorted_Array : Int_Array;
Sorted_Array := Sort_Array (Array);
Put_Line ("Input Array: " & Array'Image);
Put_Line ("Sorted Array: " & Sorted_Array'Image);

-- Output:
-- Input Array: [34, 16, 89, 53, 71, 28, 97, 8, 40, 83]
-- Sorted Array: [8, 16, 28, 34, 40, 53, 71, 83, 89, 97]
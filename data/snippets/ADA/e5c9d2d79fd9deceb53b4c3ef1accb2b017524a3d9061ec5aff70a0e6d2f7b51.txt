-- This code snippet is an example of a binary search algorithm in ADA

procedure Binary_Search (S : in Float_Array; N : in Integer; X : in Float; Index : out Integer) is
-- This procedure takes in an array of floats, the number of elements, the number to search for, and outputs the index of the array where the number is found
    L, R, M : Integer; -- variables for left, right, and middle indices
begin
    L := 0; -- initialize left index to 0
    R := N - 1; -- initialize right index to last element of array
    while L <= R loop
        M := (L + R) / 2; -- calculate middle index
        if X = S(M) then -- if middle element is equal to searched number
            Index := M; -- assign index of middle element to output variable
            return; -- exit loop
        elsif X > S(M) then
            L := M + 1; -- update left index to be one more than middle index
        else
            R := M - 1; -- update right index to be one less than middle index
        end if;
    end loop;
    Index := -1; -- if number is not found, assign -1 to output variable
end Binary_Search;
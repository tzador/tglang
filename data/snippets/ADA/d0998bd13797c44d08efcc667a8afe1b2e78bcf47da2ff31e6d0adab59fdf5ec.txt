---------------------------------------------------------------------------------
--   This is a complex code snippet in ADA, showcasing the use of arrays,
--   loops, and conditionals to find the square of a given number and return it.
---------------------------------------------------------------------------------

--  Declaring the procedure square
procedure square
    (num : in natural; square : out natural)
is       -- using 'num' as input and 'square' as output
begin
    square := 0;  -- initializing output square value to 0
    for i in 1 .. num loop  -- loop to iterate from 1 to given number
        square := square + num;  -- adding 'num' to square each iteration
    end loop;  -- end loop
end square;  -- end procedure


-- Declaring the main program
procedure main
is
    input_num : natural := 5;  -- declaring and initializing input number
    output_square : natural;  -- declaring output square
begin
    square(input_num, output_square);  -- calling square procedure
    if output_square /= 25 then  -- checking if square is not equal to 25 
        output_square := output_square ** 2;  -- squaring the output if not 25
    end if;  -- end if
    -- printing the output square with appropriate message
    put_line("The square of " & natural'image(input_num) & " is "
                    & natural'image(output_square) & ".");
end main;  -- end procedure

-- Calling the main program
begin
    main;
end;
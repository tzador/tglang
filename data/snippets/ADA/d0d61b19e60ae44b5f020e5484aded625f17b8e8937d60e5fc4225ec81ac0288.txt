-- This is a complex code snippet in ADA --

with Ada.Text_IO;               -- Importing the Text_IO module

procedure Main is               -- Main procedure

   type Array_Type is array (Integer range 1 .. 10) of Integer;   -- Defining a new type of array with 10 elements

   procedure Swap (Array : in out Array_Type; I : in Integer; J : in Integer) is -- Defining the Swap procedure
      Temp : Integer;
   begin
      Temp := Array(I);
      Array(I) := Array(J);
      Array(J) := Temp;
   end Swap;

   procedure Sort (Array : in out Array_Type) is   -- Defining the Sort procedure
      First : Integer := Array'First;              -- First index of the array
      Last : Integer := Array'Last;                -- Last index of the array
      i : Integer;
      j : Integer;
   begin
      if First < Last then
         i := First;
         j := Last + 1;
         loop
            loop
               i := i + 1;
            end loop until Array(i) > Array(First);  -- Finding the first element greater than the pivot
            loop
               j := j - 1;
            end loop until Array(j) < Array(First);  -- Finding the first element smaller than the pivot
            exit when i >= j;
            Swap (Array, i, j);                      -- Swapping the elements
         end loop;
         Swap (Array, First, j);                     -- Placing the pivot in its correct position
         Sort (Array(First .. j -1));                -- Recursively sorting the left sub-array
         Sort (Array(j + 1 .. Last));                -- Recursively sorting the right sub-array
      end if;
   end Sort;

   Array : Array_Type := (5, 1, 8, 2, 6, 4, 9, 10, 3, 7);  -- Initializing the array with random values

begin
   Ada.Text_IO.Put_Line("Before sorting:");                 -- Printing the array before sorting
   for I in Array'Range loop
      Ada.Text_IO.Put(Int => Array(I), Width => 3);
   end loop;
   Ada.Text_IO.New_Line;

   Sort(Array);        -- Calling the sort procedure on the array

   Ada.Text_IO.Put_Line("After sorting:");                  -- Printing the array after sorting
   for I in Array'Range loop
      Ada.Text_IO.Put(Int => Array(I), Width => 3);
   end loop;
   Ada.Text_IO.New_Line;
end Main;
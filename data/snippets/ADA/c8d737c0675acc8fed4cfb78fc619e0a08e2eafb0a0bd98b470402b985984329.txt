---------------------------------------------------------------------------------------
--  This is a complex code snippet in the ADA programming language. It is a function
--  that checks if two strings are anagrams of each other. It uses recursion and also
--  uses a helper function to check if the characters in the strings are the same.
--  The function returns a boolean value indicating if the strings are anagrams or not.
---------------------------------------------------------------------------------------

function is_anagram(str1, str2) return boolean is
    --  This function is a helper function that takes in two strings and checks if 
    --  the characters in the strings are the same. It uses recursion to check each 
    --  character in the strings.
    
    function check_chars(str1, str2) return boolean is
        -- initialize variables for keeping track of character count
        str1_index : integer := str1'First; 
        str2_index: integer := str2'First; 
        char_count : integer := 0;
        
        -- loop through each character in str1 and str2
        while str1_index <= str1'Last loop 
            while str2_index <= str2'Last loop 
                -- check if the characters at the current index are the same
                if str1(str1_index) = str2(str2_index) then 
                    char_count := char_count + 1;
                    exit;
                end if;
                str2_index := str2_index + 1;
            end loop;
            str1_index := str1_index + 1;
        end loop;
        
        -- return boolean indicating if all characters are the same
        return char_count = str1'Length;
    end check_chars;
    
    -- initialize variables for keeping track of string lengths and the result
    str1_len : integer := str1'Length;
    str2_len : integer := str2'Length;
    result : boolean := false;
    
    -- base case: both strings are empty, return true
    if str1_len = 0 and str2_len = 0 then
        result := true;
    -- if one string is empty and the other is not, return false
    elsif (str1_len = 0 and str2_len > 0) or (str1_len > 0 and str2_len = 0) then
        result := false;
    -- if strings are of different lengths, return false
    elsif str1_len /= str2_len then 
        result := false;
    -- if string lengths are equal and not empty, check if all characters are the same
    else 
        result := check_chars(str1, str2);
    end if;
    
    -- return the result
    return result;
end is_anagram;
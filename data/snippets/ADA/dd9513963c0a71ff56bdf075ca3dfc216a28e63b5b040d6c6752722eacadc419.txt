-- This code snippet shows an example of a generic package and an instantiation of the package for a specific type.

generic
    type Data_Type is private; -- declaration of the generic type parameter
package Generic_Package is -- declaration of the generic package
    type List is private; -- declaration of a private type
    
    procedure Add (Item : in out List; Data : in Data_Type); -- procedure to add a new item to the list
    function Remove (Item : in out List) return Data_Type; -- function to remove an item from the list
    
private
    type List is record -- definition of the private type
        First : access Node;
        Last : access Node;
    end record;
    
    type Node is record -- definition of the private type that represents a single list item
        Data : Data_Type;
        Next : access Node;
    end record;

end Generic_Package; -- end of generic package declaration

-- Instantiation of the generic package for integers
package Integer_List is new Generic_Package (Integer); -- instantiation of the generic package for the type Integer
use Integer_List; -- importing the instantiated package into the current scope

List : List; -- declaring a list of integers
Add (List, 5); -- adding the integer 5 to the list
Add (List, 10); -- adding the integer 10 to the list
Remove (List); -- removing the first item from the list and returning its value
--This code snippet shows the implementation of a stack data structure in ADA

generic
   type DataItem is private;
   Max_Stack_Size : Positive;

package StackPackage is

   -- Defining a type for the stack structure
   type Stack is private;

   -- Initializing a new stack
   procedure Init_Stack(S : in out Stack);

   -- Checking if the stack is empty
   function Is_Empty(S : in Stack) return Boolean;

   -- Adding an item to the top of the stack
   procedure Push(S : in out Stack; Item : in DataItem);

   -- Removing the top item from the stack
   procedure Pop(S : in out Stack);

   -- Retrieving the top item from the stack
   function Top(S : in Stack) return DataItem;

private
   -- Defining the maximum size of the stack
   Max_Size : Positive := Max_Stack_Size;

   -- Defining the structure of the stack
   type Stack is record
      Items : array(1..Max_Size) of DataItem;
      Top_Index : Natural := 0; 
   end record;

end package StackPackage;
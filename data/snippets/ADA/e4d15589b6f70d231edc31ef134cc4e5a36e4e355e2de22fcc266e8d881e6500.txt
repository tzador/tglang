with Ada.Exceptions, Ada.Text_IO;       --importing necessary libraries

package Example_Package is

   subtype Days_Of_The_Week is Integer range 1 .. 7;      --defining a subtype

   function Get_Day_Name (Day : Days_Of_The_Week)
      return String is
   begin
      return case Day is
         when 1  => "Monday";
         when 2  => "Tuesday";
         when 3  => "Wednesday";
         when 4  => "Thursday";
         when 5  => "Friday";
         when 6  => "Saturday";
         when 7  => "Sunday";
      end case;
   end Get_Day_Name;

   procedure Display_Day (Day : Days_Of_The_Week) is    --defining a procedure
   begin
      Ada.Text_IO.Put_Line ("The day is: " & Get_Day_Name(Day));      --printing the day using the Get_Day_Name function
   exception
      when Constraint_Error =>     --handling exceptions
         Ada.Text_IO.Put_Line ("Invalid day.");
   end Display_Day;

   function Square_Number (Num : Integer) return Integer is  --defining a function
   begin
      return Num * Num;
   end Square_Number;

end Example_Package;

declare
   Day_Of_The_Week : Days_Of_The_Week := 9;   --declaring a variable of the type Days_Of_The_Week
begin
   Example_Package.Display_Day(Day_Of_The_Week);   --calling the Display_Day procedure to print the day
   Example_Package.Square_Number(5);   --calling the Square_Number function and printing the result to the console
end;
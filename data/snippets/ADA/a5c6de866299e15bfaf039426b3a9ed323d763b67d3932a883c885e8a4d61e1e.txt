-- This code snippet generates a custom sorting algorithm
-- It uses a merge sort algorithm for sorting numbers
-- The arrays to be sorted are passed as parameters

procedure sort (array : in out access integer; start : in integer; end : in integer) is
    type local_arr is array (integer range <>) of integer;
    left, right, mid, center : integer;
    temp : local_arr (start .. end);
    left_arr, right_arr : access local_arr;
begin
    if start < end then
        mid := (start + end) / 2;
        sort (array, start, mid);
        sort (array, mid + 1, end);
        left := start;
        right := mid + 1;

        for i in start .. end loop
            if left > mid then
                temp(i) := array(right);
                right := right + 1;
            elsif right > end then
                temp(i) := array(left);
                left := left + 1;
            elsif array(left) < array(right) then
                temp(i) := array(left);
                left := left + 1;
            else
                temp(i) := array(right);
                right := right + 1;
            end if;
        end loop;

        for j in start .. end loop
            array(j) := temp(j);
        end loop;
    end if;
    return;
end sort;
with Ada.Text_IO;                     -- A package containing all necessary I/O procedures and functions
use Ada.Text_IO;                      -- This makes referencing procedures and functions from the package easier

procedure Complex_Algorithm is

    type Matrix is array(Integer range <>, Integer range <>) of Integer;
                                        -- Definition of a matrix type using unconstrained arrays

    A : Matrix(0..4, 0..4);             -- Declaration of a 5x5 matrix A
    B : Matrix(0..4, 0..4);             -- Declaration of a 5x5 matrix B
    C : Matrix(0..4, 0..4);             -- Declaration of a 5x5 matrix C

    A_Row : Vector(0..4);               -- Declaration of a 5-element vector
    B_Col : Vector(0..4);               -- Declaration of a 5-element vector

begin

    for i in 0..4 loop
        A_Row(i) := Integer'Image(A(i, 0));    -- Converts each element in the first row of matrix A to a string
        B_Col(i) := Integer'Image(B(0, i));    -- Converts each element in the first column of matrix B to a string
    end loop;

    for i in 0..4 loop
        for j in 0..4 loop
            C(i, j) := A_Row(i) + B_Col(j);    -- Adds corresponding elements in A_Row and B_Col and stores in C matrix
        end loop;
    end loop;

    Put_Line("Matrix C:");              -- Displays "Matrix C:" on a new line

    for i in 0..4 loop
        for j in 0..4 loop
            Put(Integer'Image(C(i, j)) & " ");    -- Converts element to a string and displays it followed by a space
        end loop;
        New_Line;                               -- Moves to the next line
    end loop;

end Complex_Algorithm;
-- This is a program that implements a binary search algorithm in Ada programming language

with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;

procedure Binary_Search is

   type Int_Array is array (1..20) of Integer;  -- define array type to hold integers
   List : Int_Array := (2, 5, 7, 11, 12, 15, 18, 22, 25, 28, 31, 35, 38, 40, 45, 50, 55, 60, 65, 70); -- initialize array
   Target : Integer; -- target element to search for
   Found : Boolean := False; -- flag to check if target is found
   First : Integer := List'First; -- first index of list
   Last : Integer := List'Last; -- last index of list
   Middle : Integer; -- middle index of list

begin
   Put("Enter the number to be searched: ");
   Get(Target); -- get input from user

   -- Binary search algorithm
   while not (Found or (First > Last)) loop  -- loop until target is found or entire list has been searched
      Middle := (First + Last) / 2; -- calculate middle index
      if List(Middle) = Target then
         Found := True; -- target found
      elsif List(Middle) < Target then
         First := Middle + 1;  -- target is in upper half of list
      else
         Last := Middle - 1; -- target is in lower half of list
      end if;
   end loop;

   -- Print result
   if Found then
      Put("Target found at index: ");
      Put(Middle);
   else
      Put("Target not found");
   end if;
end Binary_Search;
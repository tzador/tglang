procedure Quicksort(A : in out Some_Array; I : Positive; J : Positive) is
    Pivot : Some_Type;
    Temp : Some_Type;
    Left, Right : Positive;
begin
    Left := I;
    Right := J;
    Pivot := A((Left + Right) / 2); -- select pivot element
    loop
        while A(Left) < Pivot loop
            Left := Left + 1;
        end loop;
        while A(Right) > Pivot loop
            Right := Right - 1;
        end loop;
        exit when Left > Right;
        -- swap elements
        Temp := A(Left); 
        A(Left) := A(Right);
        A(Right) := Temp;
        -- update indices
        Left := Left + 1;
        Right := Right - 1;
    end loop;
    -- recursion 
    if I < Right then
        Quicksort(A, I, Right);
    end if;
    if J > Left then
        Quicksort(A, Left, J);
    end if;
end Quicksort;
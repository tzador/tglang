Procedure Linear_Sieve (N : in Natural; Prime_Count : out Natural; Primes : out Prime_Array; Is_Prime : out Boolean_Array) is
   K : Natural := 2;
begin
   Prime_Count := 0; -- Initial value for prime count
   Primes := (); -- Empty array for primes
   Is_Prime := (others => True); -- Array indicating all numbers are prime by default
     
   -- Loop through every number until N
   for I in 2..N loop
      -- If the current number is marked as prime, add it to the primes array
      if Is_Prime(I) then
         Primes(Prime_Count) := I;
         Prime_Count := Prime_Count + 1;
      end if;
      
      -- Loop through all multiples of the current prime number
      for J in K..(N/I) loop
         -- Mark all multiples as non-prime
         Is_Prime(I * J) := False;
      end loop;
      
      -- Set K to the next prime number
      while not Is_Prime(K + 1) loop
         K := K + 1;
      end loop;
   end loop;
end Linear_Sieve;
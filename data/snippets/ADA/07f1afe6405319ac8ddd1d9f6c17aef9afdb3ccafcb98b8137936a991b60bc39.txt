-- This is a code snippet in ADA
with Ada.Text_IO; -- Importing the Text I/O package

procedure Main is 
  type My_Array is array (Integer range <>) of Integer; -- Defining a flexible array type
  
  -- A function to generate a random array of given size and range
  function Generate_Random_Array (Size : Integer; Min : Integer := 0; Max : Ineger := 100) return My_Array is
    Output_Array : My_Array (1..Size); -- Declaring the output array 

    -- A function to generate a random number within a given range
    function Random_Number (Min : Integer; Max : Integer) return Integer is
    begin
      return Min + Integer'Random (Max - Min + 1); 
      -- Integer'Random is a predefined attribute in ADA that generates a random integer from the given range
    end Random_Number;

  begin -- Begin block of Generate_Random_Array function
    for i in 1..Output_Array'Length loop -- Looping through the output array 
      Output_Array (i) := Random_Number (Min, Max); -- Assigning each index of the array a random value
    end loop;
    return Output_Array; -- Returning the generated random array
  end Generate_Random_Array; -- End block of Generate_Random_Array function

  -- A procedure to print an array
  procedure Print_Array (My_Array : in My_Array) is
  begin
    for i in My_Array'Range loop -- Looping through the input array
      Ada.Text_IO.Put (My_Array (i) & ", "); -- Printing the element at each index followed by a comma
    end loop;
    Ada.Text_IO.New_Line; -- Adding a new line after printing the entire array
  end Print_Array; -- End block of Print_Array procedure

  -- Main program
  random_array : My_Array (1..10); -- Declaring a random array of size 10
begin
  Ada.Text_IO.Put_Line ("Generating a random array of size 10 with values ranging from 0 to 100:");
  random_array := Generate_Random_Array (10); -- Calling the Generate_Random_Array function to generate a random array of size 10
  Print_Array (random_array); -- Printing the generated array
end Main; -- End of Main program
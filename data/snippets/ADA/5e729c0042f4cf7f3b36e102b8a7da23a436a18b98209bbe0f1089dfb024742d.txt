-- This is a block comment in ADA

-- Declaration of a record type
type Person_Record is record
    Name    : String(1..30);
    Age     : Integer;
    Address : String(1..50);
    Phone   : String(1..15);
end record;

-- Declaration of a function with parameters and return type
function Multiply(X, Y : Integer) return Integer is
begin
    return X * Y;
end Multiply;

-- Declaration of a procedure with parameters and no return type
procedure Calculate_Salary(Salaries : in out array(1..5) of Integer; Total : out Integer) is
begin
    -- Looping through the salaries
    for I in Salaries'Range loop
        -- Increase each salary by 10%
        Salaries(I) := Salaries(I) + (Salaries(I) * 0.1);
        -- Calculating the total salary
        Total := Total + Salaries(I);
    end loop;
end Calculate_Salary;

-- Declaration of a generic package 
generic
    type Element_Type is private;
    with function "="(Left, Right : Element_Type) return Boolean is <>;
package Generic_Demo is
    type Generic_Array is array(1..50) of Element_Type;
    procedure Print_Array(Item : in Generic_Array);
end Generic_Demo;

-- Instantiation of the generic package for a specific data type
package Integer_Array_Demo is new Generic_Demo(Integer);
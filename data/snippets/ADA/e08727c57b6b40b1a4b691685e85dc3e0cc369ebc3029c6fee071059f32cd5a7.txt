-- Package Declaration
package My_Package is

  -- Generic Parameters
  generic
    type My_Type is (<>); -- Unconstrained Type

  -- Function Declaration
  function My_Function (Input : My_Type) return My_Type;

  -- Procedure Declaration
  procedure My_Procedure (Input : My_Type);

  -- Private Type Declaration
  type My_Private_Type is private;

  -- Private Variable Declaration
  my_private_variable : My_Private_Type;

  -- Exception Declaration
  exception My_Exception;

  -- Subprogram Bodies
  function My_Function (Input : My_Type) return My_Type is
  begin
    -- Implementation
    return Input ** 2; -- Square of Input
  end My_Function;

  procedure My_Procedure (Input : My_Type) is
  begin
    -- Implementation
    my_private_variable := Input;
    if Input > 0 then
      -- Raise Exception
      raise My_Exception;
    end if;
  end My_Procedure;

private

  -- Private Type Definition
  type My_Private_Type is array (Positive range <>) of My_Type;

end My_Package;
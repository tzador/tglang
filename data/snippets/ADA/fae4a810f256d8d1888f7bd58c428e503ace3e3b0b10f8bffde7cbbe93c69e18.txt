with Ada.Text_IO; use Ada.Text_IO;  -- imports the Text_IO package for file input/output
with Ada.Exceptions; use Ada.Exceptions;  -- imports the Exceptions package for handling exceptions
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;  -- imports the Unbounded Strings package for dynamic strings

procedure Main is
   type String_Array is array(Positive range <>) of Unbounded_String; -- defines a new type of dynamic string array
   Input_File : File_Type;  -- declares a new file variable
   Input_Line : Unbounded_String; -- declares a new dynamic string variable
   Input_Lines : String_Array(1..100); -- declares a new dynamic string array variable to hold up to 100 lines of input
begin
   Open(Input_File, In_File, "input_file.txt"); -- opens the input file for reading
   for i in Input_Lines'Range loop -- iterates through each element of the string array
      if not End_Of_File(Input_File) then -- checks if the end of file has been reached
         Get_Line(Input_File, Input_Line); -- reads a line from the input file into the dynamic string variable
         Input_Lines(i) := Input_Line; -- assigns the line to the corresponding element in the string array
      end if;
   end loop;
   Close(Input_File); -- closes the input file

   for i in Input_Lines'Range loop -- iterates through each element of the string array
      Put_Line("Line " & Integer'Image(i) & ": " & Input_Lines(i)); -- displays the line number and corresponding line from the array
   end loop;

exception
   when File_Not_Found : File_Error is  -- handles the exception if the input file is not found
      Put_Line("Input file not found."); -- displays an error message
      raise; -- re-raises the exception
   when Invalid_Operation : AST_Error is -- handles the exception if there is an invalid operation on the file
      Put_Line("Invalid operation on file."); -- displays an error message
      raise; -- re-raises the exception
   when Data_Error : Constraint_Error is -- handles the exception if there is an error in the data
      Put_Line("Error in data."); -- displays an error message
      raise; -- re-raises the exception
end Main;
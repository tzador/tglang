with Text_IO; use Text_IO;

procedure Example is

   type Color is (Red, Blue, Green); -- define a new data type Color with three possible values

   type Pixel is record -- define a record data structure for a pixel
      X : Integer range 0 .. 640; -- specify the X coordinate as an Integer between 0 and 640
      Y : Integer range 0 .. 480; -- specify the Y coordinate as an Integer between 0 and 480
      Value : Color; -- specify the color value for the pixel using the previously defined Color type
   end record;

   type Screen is array (Integer range 0 .. 639, Integer range 0 .. 479) of Pixel; -- define a 2D array of Pixels for the screen

   procedure Fill_Screen (Array : in out Screen; C : in Color) is -- create a procedure to fill the screen with a specified color
   begin
      for Y in Array'Range (2) loop -- loop through the Y values of the array
         for X in Array (Y)'Range loop -- loop through the X values of the array
            Array (X, Y).Value := C; -- set the color value for the current pixel to the specified color
         end loop;
      end loop;
   end Fill_Screen;

begin

   Put_Line ("Generating screen with specified colors..."); -- output a message to indicate screen generation

   declare
      My_Screen : Screen; -- declare a variable of type Screen to store the screen data
   begin

      Fill_Screen (My_Screen, Green); -- call the Fill_Screen procedure to fill the screen with green pixels

      Put_Line ("Screen successfully generated!"); -- output a message to indicate successful screen generation

   end;

end Example;
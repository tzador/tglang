--This is a code snippet for sorting an array using selection sort algorithm in ADA

with Ada.Text_IO; --importing standard text input/output package
use Ada.Text_IO;

procedure Selection_Sort is --defining a procedure for selection sort
    type Array is array(Integer range <>) of Integer; --declaring a type "Array" to hold integers
    procedure Interchange(I, J: in out Integer); --declaring a procedure for exchanging values in the array

    procedure Interchange(I, J: in out Integer) is --procedure to interchange two values in the array
        Temp: Integer;
    begin
        Temp := Array(I); --storing value of I in temporary variable
        Array(I) := Array(J); --storing value of J in the position of I
        Array(J) := Temp; --storing value of temporary variable in J
    end Interchange;

    procedure Selection_Sort(Array: in out Array) is --procedure to perform selection sort on the given array
        Min: Integer; --variable to store the minimum value in the array
    begin
        for I in Array'Range loop --iterating through the array
            Min := I; --setting minimum value as the current index
            for J in I+1..Array'Last loop --loop to compare current value with rest of the array
                if Array(J) < Array(Min) then --checking if current value is smaller than minimum value
                    Min := J; --setting minimum value as current index
                end if;
            end loop;
            Interchange(I, Min); --calling the interchange procedure to swap values at I and Min
        end loop;
    end Selection_Sort;

    --sample code to test the selection sort algorithm
    Arr: Array(1..10) := (5, 3, 9, 1, 4, 2, 8, 6, 7, 10); --declaring and initializing an array
begin
    Selection_Sort(Arr); --calling the selection sort procedure
    for I in Arr'Range loop --loop to print the sorted array
        Put(Arr(I)'Image & " "); --using 'Image attribute to convert integer to string and print
    end loop;
end Selection_Sort;
-- Define a record type for an Employee
type Employee is record
  Name : String(1..50);
  Age : Integer range 18..120;
  Department : String(1..30);
  Gender : char := 'U';
  Salary : Float range 1000.00 .. 150000.00;
end record;

-- Create an Employee array with a size of 10
type Employee_Array is array (1..10) of Employee;

-- Initialize variables for employee data
name : String(1..50);
age : Integer;
department : String(1..30);
gender : char;
salary : Float;

-- Create a procedure to populate the Employee array with user input
procedure Populate_Employees (Employees : in out Employee_Array) is
begin
   for i in Employees'Range loop
      -- Prompt user for employee data
      Put("Enter employee's name: ");
      Get(name);
      Employees(i).Name := name;
      Put("Enter employee's age: ");
      Get(age);
      Employees(i).Age := age;
      Put("Enter employee's department: ");
      Get(department);
      Employees(i).Department := department;
      Put("Enter employee's gender: ");
      Get(gender);
      Employees(i).Gender := gender;
      Put("Enter employee's salary: ");
      Get(salary);
      Employees(i).Salary := salary;
   end loop;
end Populate_Employees;

-- Create a procedure to print out the Employee array
procedure Print_Employees (Employees : in Employee_Array) is
begin
   for i in Employees'Range loop
      -- Print out employee data with proper formatting
      Put_Line("Employee " & i'Image & " Information:");
      Put_Line("Name: " & Employees(i).Name);
      Put_Line("Age: " & Employees(i).Age'Image);
      Put_Line("Department: " & Employees(i).Department);
      Put("Gender: ");
      case Employees(i).Gender is
         when 'M' =>
            Put("Male");
         when 'F' =>
            Put("Female");
         when others =>
            Put("Unknown");
      end case;
      Put_Line("");
      Put_Line("Salary: $" & Employees(i).Salary'Image);
      Put_Line("----------------------------------------------------");
   end loop;
end Print_Employees;

-- Main program
begin
   -- Create an Employee array
   Employees : Employee_Array;
   -- Call the Populate_Employees procedure to get user input for each employee
   Populate_Employees(Employees);
   -- Call the Print_Employees procedure to print out the employee data
   Print_Employees(Employees);
end;
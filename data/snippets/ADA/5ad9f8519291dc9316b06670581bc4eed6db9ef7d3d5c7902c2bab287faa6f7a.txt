-- Complex code snippet in ADA

-- Package for math
package Math is 
    function square (val : Integer ) return Integer;
end Math;

-- Package body for math
package body Math is
    -- Function for finding square of a number
    function square (val : Integer ) return Integer is
        variable result : Integer;
    begin
        result := val ** 2;
        return result;
    end square;
end Math;

-- Package for string operations
package Strings is
    function reverse (str : String) return String;
    procedure append (str1 : inout String; str2 : String);
end Strings;

-- Package body for string operations
package body Strings is
    -- Function to reverse a string
    function reverse (str : String) return String is
        variable result : String := "";
    begin
        for i in str'Length downto 1 loop
            result := result & str(i);
        end loop;
        return result;
    end reverse;
    
    -- Procedure to append two strings
    procedure append (str1 : inout String; str2 : String) is
        variable temp : String := str1 & str2;
    begin
        str1 := temp;
    end append;
end Strings;

-- Main program
with Text_IO; use Text_IO;
with Math; use Math;
with Strings; use Strings;

procedure Main is
    input : Integer;
    userInput : String;
    output : Integer;
begin
    -- Get user input
    Put("Enter a number: ");
    Get(input);
    
    -- Perform operations on the input
    output := square(input);
    Put_Line("Square of input: " & Integer'Image(output));
    
    -- Get another input from the user
    Put("Enter a string: ");
    Get(userInput);
    
    -- Reverse the string
    Put_Line("Reversed string: " & reverse(userInput));
    
    -- Append the string
    append(userInput, " is the string you entered.");
    Put_Line("Appended string: " & userInput);
end Main;
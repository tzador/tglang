with Ada.Text_IO; use Ada.Text_IO;
    procedure Complex_Code is
        
        type String_Array is array(1..10) of String(1..10);
        type Number_Array is array(1..10) of Integer;
        
        --# This procedure takes in two arrays and prints out their elements in reverse order.
        procedure Print_Reversed(Arr1 : in String_Array; Arr2 : in Number_Array) is
        begin
            for i in reverse Arr1'Range loop
                for j in reverse Arr2'Range loop
                    put(Arr1(i)(j));
                    put(Arr2(j)'Image);
                    put_line("");
                end loop;
            end loop;
        end Print_Reversed;
        
        Sum : Integer := 0;
        Product : Integer := 1;
        
        --# This function takes in an array of integers and returns the sum and product of its elements.
        function Compute_Sum_Product(Arr : in Number_Array) return Integer is
        begin
            for i in Arr'Range loop
                Sum := Sum + Arr(i);
                Product := Product * Arr(i);
            end loop;
            return Sum + Product;
        end Compute_Sum_Product;
        
    begin
        
        arr1 : String_Array := (("Hello","world","!"),("This","is","a"),("complex","code","snippet"));
        arr2 : Number_Array := (1,2,3,4,5,6,7,8,9,10);
        
        --# Print out the elements of the arrays in reverse order.
        Print_Reversed(arr1,arr2);
        
        --# Compute the sum and product of the elements in the number array.
        Put_Line("The sum and product of the elements in the number array are " & Compute_Sum_Product(arr2)'Image & ".");
        
    end Complex_Code;
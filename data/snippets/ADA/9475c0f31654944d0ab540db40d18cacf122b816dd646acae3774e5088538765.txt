--Importing System Libraries
with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;

--Declaring a new record type
type Student is record  
  Name : String (1 .. 50);
  Age : Integer range 17 .. 25 := 17;
  ID : Positive range 1 .. 99999;
  Grades : array (1 .. 6) of Integer;
  Major : String (1 .. 30) := 'Undecided';
end record;

--Declaring a new array type
type Student_Array is array (Positive range <>) of Student;

--Declaring a new exception type
exception Student_Not_Found is  
  pragma Exception;

--Declaring a new procedure
procedure Get_Student (Students : in Student_Array; ID : Positive) is
  Student_Index : Positive := 0;
begin
  --Finding the index of the student with the given ID
  for I in Students'Range loop
    if Students (I).ID = ID then
      Student_Index := I;
    end if;
  end loop;

  --Raising exception if student is not found
  if Student_Index = 0 then
    raise Student_Not_Found;
  else
    --Printing student information
    Put_Line("Name:" & Students(Student_Index).Name);    
    Put_Line("Age:" & Students(Student_Index).Age'Image);    
    Put_Line("ID:" & Students(Student_Index).ID'Image);    
    Put_Line("Major:" & Students(Student_Index).Major);    
    Put_Line("Grades:" & Students(Student_Index).Grades'Image);    
  end if;
end Get_Student;

--Declaring an array of students
Students : Student_Array (1 .. 5);

--Initializing student records
Students(1).Name := "John Doe";
Students(1).Age := 22;
Students(1).ID := 12345;
Students(1).Grades := (80, 85, 90, 95, 80, 85);
Students(1).Major := "Computer Science";

Students(2).Name := "Jane Smith";
Students(2).Age := 21;
Students(2).ID := 23456;
Students(2).Grades := (90, 92, 93, 95, 88, 90);
Students(2).Major := "Engineering";

Students(3).Name := "Mark Johnson";
Students(3).Age := 18;
Students(3).ID := 34567;
Students(3).Grades := (75, 85, 80, 90, 75, 85);
Students(3).Major := "Business";

Students(4).Name := "Maggie Brown";
Students(4).Age := 20;
Students(4).ID := 45678;
Students(4).Grades := (85, 90, 85, 95, 85, 90);
Students(4).Major := "Psychology";

Students(5).Name := "Bob Davis";
Students(5).Age := 19;
Students(5).ID := 56789;
Students(5).Grades := (90, 80, 95, 85, 90, 80);
Students(5).Major := "English";

--Calling the Get_Student procedure to retrieve student information
declare
  ID : Positive := 34567;
begin
  Get_Student(Students, ID);
exception
  when Student_Not_Found =>
    Put_Line("Student with ID" & ID'Image & "not found.");
end;

--Output:
--Name: Mark Johnson
--Age: 18
--ID: 34567
--Major: Business
--Grades: (75, 85, 80, 90, 75, 85)
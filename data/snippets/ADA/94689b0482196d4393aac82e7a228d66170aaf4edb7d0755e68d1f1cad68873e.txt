-- This is a code snippet in the programming language ADA
-- It implements a basic function for calculating the n-th Fibonacci number using recursion

-- Declare a constant for the maximum allowed values of n
MAX_N : constant := 100;

-- Declare an array for storing the already calculated Fibonacci numbers
FIBS : array(0..MAX_N) of Integer;

-- Declare a function for calculating the n-th Fibonacci number
function fibonacci(n : Integer) return Integer is
begin
    -- Base case: n = 0 or n = 1
    if n = 0 or n = 1 then
        return 1;
        
    -- Check if the n-th Fibonacci number has already been calculated
    elsif FIBS(n) /= 0 then
        return FIBS(n);
        
    -- Recursive case: calculate the n-th Fibonacci number using the previously calculated numbers
    else
        FIBS(n) := fibonacci(n-1) + fibonacci(n-2);
        return FIBS(n);
    end if;
end fibonacci;

-- Main program
begin
    -- Ask the user to input the value of n
    put("Enter the value of n: ");
    get(n);
    
    -- Check if n is within the allowed range
    if n < 0 or n > MAX_N then
        put("Error: n must be between 0 and ", MAX_N);
    
    -- Calculate the n-th Fibonacci number and display the result
    else
        put("The ", n, "-th Fibonacci number is: ", fibonacci(n));
    end if;
end;
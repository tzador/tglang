with Ada.Text_IO;  -- Importing standard input/output library
use Ada.Text_IO;   -- Using standard input/output library

procedure Quick_Sort is   -- Start of procedure
  type Array is array (Integer range <>) of Integer;   -- Creating an array type
  
  procedure Sort (Arr : in out Array; First, Last : Integer) is  -- Start of procedure Sort
    Pivot : Integer := Arr (Last);   -- Initializing Pivot as last element of array
    i, j : Integer := First;   -- Initializing i and j variables
    
  begin   -- Start of procedure body
    if First < Last then   -- Check if array has more than one element
      while j < Last loop   -- Start of while loop
        if Arr (j) < Pivot then   -- Check if element is smaller than Pivot
          swap (Arr (i), Arr (j));   -- Swap elements if true
          i := i + 1;   -- Increment i
        end if;   -- End of if statement
        j := j + 1;   -- Increment j
      end loop;   -- End of while loop
      
      swap (Arr (i), Arr (Last));   -- Swap Pivot with element at index i
      Sort (Arr, First, i - 1);   -- Recursive call to sort elements before Pivot
      Sort (Arr, i + 1, Last);   -- Recursive call to sort elements after Pivot
    end if;   -- End of if statement
  end Sort;   -- End of procedure Sort
  
  procedure Print_Array (Arr : in Array) is   -- Start of procedure Print_Array
  begin   -- Start of procedure body
    for i in Arr'range loop   -- Loop through array elements
      Put (Arr (i) & " ");   -- Print element and space
    end loop;   -- End of for loop
    New_Line;   -- Go to next line
  end Print_Array;   -- End of procedure Print_Array
  
  A : Array (1..10) := (3, 7, 2, 8, 9, 1, 5, 4, 6, 0);   -- Initializing array A with values
begin   -- Start of program body
  Put_Line ("Array before sorting:");   -- Print message
  Print_Array (A);   -- Print array before sorting
  Sort (A, A'First, A'Last);   -- Call to sort procedure
  Put_Line ("Array after sorting:");   -- Print message
  Print_Array (A);   -- Print array after sorting
end Quick_Sort;   -- End of procedure Quick_Sort
procedure Binary_Search is
  List : array(1..100) of Integer; -- create an array of 100 elements
  Item, Mid : Integer; -- declare variables for item to search and midpoint
  Found : Boolean := False; -- flag to indicate if item is found
  First, Last : Integer := 1; -- initialize pointers to first and last element
begin
  -- Populate the array with random integers, must be in ascending order
  for i in 1..100 loop
    List(i) := i;
  end loop;

  -- Prompt user for item to search for
  Put("Enter the item you want to search for: ");
  Get(Item);

  -- Binary search algorithm
  while (First <= Last and not Found) loop
    Mid := (First + Last) / 2; -- calculate midpoint
    if List(Mid) = Item then
      Found := True; -- item is found
    elsif List(Mid) > Item then
      Last := Mid - 1; -- item is in first half of array
    else
      First := Mid + 1; -- item is in second half of array
    end if;
  end loop;

  -- Print the result
  if Found then
    Put(Item'Image & " is found at index " & Mid'Image);
  else
    Put(Item'Image & " is not found.");
  end if;
end Binary_Search;
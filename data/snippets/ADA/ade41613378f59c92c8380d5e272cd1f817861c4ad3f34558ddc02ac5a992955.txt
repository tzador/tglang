-- This is a complex code snippet in ADA language

procedure Complex_Proc is
begin
   -- First declare some variables
   Counter : Integer := 0;
   Status  : Boolean := True;
   
   -- Then initialize an array
   Array_Example : array (1..10) of Integer;
   for I in 1..10 loop
      Array_Example (I) := I;
   end loop;
   
   -- Now enter a loop 
   while Status loop
      -- Do some computations
      Counter := Counter + 1;
      
      -- Output the counter value
      put_line("Counter value is: " & Counter'Image);
      
      -- Check if counter is divisible by 2
      if Counter mod 2 = 0 then
         -- Print a message if it is
         put_line("Counter is even");
      elsif Counter mod 3 = 0 then
         -- Print a different message if it is divisible by 3
         put_line("Counter is divisible by 3");
      else
         -- Otherwise, print a default message
         put_line("Counter is odd");
      end if;
      
      -- Exit the loop when counter reaches 10
      if Counter = 10 then
         Status := False;
      end if;
   end loop;
   
   -- Print the contents of the array
   for I in 1..10 loop
      put_line("Array Example(" & Integer'Image(I) & ") is: " & Integer'Image(Array_Example(I)));
   end loop;
   
   -- Calculate and output the sum of the array elements
   declare
      Sum : Integer := 0;
   begin
      for I in 1..10 loop
         Sum := Sum + Array_Example(I);
      end loop;
      
      put_line("Sum of array elements is: " & Sum'Image);
   end;
end Complex_Proc;
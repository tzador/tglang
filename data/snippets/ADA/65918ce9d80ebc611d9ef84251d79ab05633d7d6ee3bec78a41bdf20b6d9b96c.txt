---------------------------------------
-- This is a complex Ada code snippet
---------------------------------------

-- Declaration of a record type with nested records and enumerations
type Complex_Record is record
    First_Number : Integer;
    Second_List : List;
    Third_Enum : (Red, Blue, Green);
    Fourth_Record : record
        Fourth_Number : Float;
        Fourth_List : List;
    end record;
end record;

-- Declaration of a function with input parameters and return values
function Calculate_Average (Input_List : List; Count : Integer) return Float is

    -- Declaration of local variables
    Sum : Float := 0.0;
    Num_Elements : Integer := Input_List'Length;
    Average : Float;

begin
    -- Loop through the Input_List and add each element to the Sum
    for i in 1..Num_Elements loop
        Sum := Sum + Input_List(i);
    end loop;

    -- Calculate the average by dividing the Sum by the count
    Average := Sum / Count;

    -- Return the calculated average
    return Average;
end Calculate_Average;
import os
from random import shuffle

# declare global variables
global game_over
game_over = False

global current_player
current_player = 1

global player_1_pile
player_1_pile = []

global player_2_pile
player_2_pile = []

global player_3_pile
player_3_pile = []

# function to create the piles of stones
def create_piles():
    for i in range(3):
        num_stones = random.randint(1, 10)
        player_1_pile.append(num_stones)
        player_2_pile.append(num_stones)
        player_3_pile.append(num_stones)
    print("Piles successfully created!")

# function to remove stones from a given pile
def remove_stones(player, pile_number, num_stones):
    if player == 1:
        player_1_pile[pile_number-1] -= num_stones
        if player_1_pile[pile_number-1] <= 0:
            player_1_pile[pile_number-1] = 0
            print(f"Player 1 removes {num_stones} stones from pile {pile_number}.")
    elif player == 2:
        player_2_pile[pile_number-1] -= num_stones
        if player_2_pile[pile_number-1] <= 0:
            player_2_pile[pile_number-1] = 0
            print(f"Player 2 removes {num_stones} stones from pile {pile_number}.")
    else:
        player_3_pile[pile_number-1] -= num_stones
        if player_3_pile[pile_number-1] <= 0:
            player_3_pile[pile_number-1] = 0
            print(f"Player 3 removes {num_stones} stones from pile {pile_number}.")

# function to check if any piles have stones left
def check_piles_left():
    piles_left = False
    if sum(player_1_pile) > 0:
        piles_left = True
    elif sum(player_2_pile) > 0:
        piles_left = True
    elif sum(player_3_pile) > 0:
        piles_left = True
    return piles_left

# function to check if a player has won
def check_winner():
    if sum(player_1_pile) == 0 and sum(player_2_pile) == 0:
        print("Player 3 wins the game!")
        return True
    elif sum(player_1_pile) == 0 and sum(player_3_pile) == 0:
        print("Player 2 wins the game!")
        return True
    elif sum(player_2_pile) == 0 and sum(player_3_pile) == 0:
        print("Player 1 wins the game!")
        return True
    else:
        return False

# function for a player's turn
def play_turn(player):
    global current_player
    global game_over

    # print current pile status
    print(f"Heap Number: 1: {player_1_pile}, 2: {player_2_pile}, 3: {player_3_pile}")

    print(f"Player {player}'s turn.")
    
    # get input from player
    while True:
        try:
            pile_number = int(input("Enter the pile number to remove from: "))
            if pile_number < 1 or pile_number > 3:
                raise ValueError
        except ValueError:
            print("Enter a valid pile number from 1 to 3.")
            continue
        else:
            break
    
    while True:
        try:
            num_stones = int(input("Enter the number of stones to remove: "))
            if num_stones < 1 or num_stones > 10:
                raise ValueError
        except ValueError:
            print("Enter a valid number of stones from 1 to 10.")
            continue
        else:
            break
    
    # remove stones from given pile
    remove_stones(player, pile_number, num_stones)
    
    # check if there are any piles left
    if not check_piles_left():
        game_over = True

    # switch to next player
    if current_player == 1:
        current_player = 2
    elif current_player == 2:
        current_player = 3
    else:
        current_player = 1

# main game loop
create_piles() # create initial piles

print("NIM game starting...")

while not game_over:
    play_turn(current_player) # play turn for current player
    if check_winner():
        game_over = True # if a player has won, end the game

print("Game over.")
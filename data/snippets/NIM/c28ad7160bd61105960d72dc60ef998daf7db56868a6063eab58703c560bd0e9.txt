# This code snippet generates a random sequence of numbers and finds the longest increasing subsequence
import math

# Define a function to generate a random sequence of numbers
proc generateSequence(len: int): seq[int] =
    var seq: seq[int] = @[]
    for i in 0 ..< len:
        seq.add(rand(1 .. 100))
    return seq

# Define a function to find the longest increasing subsequence
proc findLIS(seq: seq[int]): int =
    var lis: array[seq.len, int] = [1]  # Initialize an array to store the longest increasing subsequence lengths
    var max_len: int = 1  # Initialize a variable to store the maximum length of the longest increasing subsequence
    for i in 1 ..< seq.len:
        for j in 0 ..< i:
            if seq[j] < seq[i] and lis[j] + 1 > lis[i]:
                lis[i] = lis[j] + 1
        if lis[i] > max_len:
            max_len = lis[i]

    # Return the maximum length of the longest increasing subsequence
    return max_len

# Generate a random sequence of numbers with length 10
var seq = generateSequence(10)

# Find the longest increasing subsequence in the sequence
var lis_len = findLIS(seq)

# Print the original sequence and longest increasing subsequence
echo "Original Sequence: ", seq
echo "Longest Increasing Subsequence Length: ", lis_len
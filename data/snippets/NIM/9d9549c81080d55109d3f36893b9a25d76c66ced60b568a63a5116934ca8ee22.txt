# This code snippet is written in the programming language NIM.
# It creates a simple game of tic-tac-toe where the user plays against the computer.

# Define a type for the game board
type
    Board = array[0..2, 0..2, string]

# Create a board object
var board: Board

# Initialize the board with empty spaces
board[0, 0] = " "
board[0, 1] = " "
board[0, 2] = " "
board[1, 0] = " "
board[1, 1] = " "
board[1, 2] = " "
board[2, 0] = " "
board[2, 1] = " "
board[2, 2] = " "

# Define a function to display the board
proc displayBoard(board: Board) =
    echo "     0   1   2"
    echo "0  [", board[0, 0], "] [", board[0, 1], "] [", board[0, 2], "]"
    echo "1  [", board[1, 0], "] [", board[1, 1], "] [", board[1, 2], "]"
    echo "2  [", board[2, 0], "] [", board[2, 1], "] [", board[2, 2], "]"

# Define a function to check if the game is over 
# Returns true if the game is over, false otherwise
func isGameOver(board: Board): bool =
    # Check for horizontal lines
    for i in 0..2:
        if board[i, 0] == board[i, 1] == board[i, 2]:
            return true
    # Check for vertical lines
    for j in 0..2:
        if board[0, j] == board[1, j] == board[2, j]:
            return true
    # Check for diagonal lines
    if board[0, 0] == board[1, 1] == board[2, 2]:
        return true
    if board[0, 2] == board[1, 1] == board[2, 0]:
        return true
    # Check for tie
    for i in 0..2:
        for j in 0..2:
            if board[i, j] == " ":
                return false
    return true

# Define a function for the computer's move
# Uses a simple strategy to find the first available empty space
proc computerMove(board: Board) = 
    for i in 0..2:
        for j in 0..2:
            if board[i, j] == " ":
                board[i, j] = "O"
                return

# Define a function for the user's move
# Continuously prompts the user until a valid move is entered
proc userMove(board: Board) = 
    while true:
        try:
            var userInput: string = readLine("Enter move (row column): ")
            var move = split(userInput)
            var row = parseInt(move[0])
            var col = parseInt(move[1])
            if board[row, col] == " ":
                board[row, col] = "X"
                return
        except:
            echo "Invalid move, try again."

# Main game loop
echo "Welcome to NIM Tic-Tac-Toe!"
echo "You are X, computer is O."

# Main game loop
while true:
    # Display the board and prompt for user move
    displayBoard(board)
    userMove(board)

    # Check for game over
    if isGameOver(board):
        break

    # Computer's move and check for game over
    echo "Computer's move:"
    computerMove(board)
    if isGameOver(board):
        break

# Game over, display final board and winner
displayBoard(board)
if isGameOver(board):
    echo "Game over!"
if board[0, 0] == board[0, 1] == board[0, 2] == "X":
    echo "You win!"
elif board[0, 0] == board[0, 1] == board[0, 2] == "O":
    echo "Computer wins!"
else:
    echo "Tie game!"
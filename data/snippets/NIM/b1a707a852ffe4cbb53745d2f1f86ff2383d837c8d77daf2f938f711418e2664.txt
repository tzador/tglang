# This is a comment in NIM
# Define a proc named "fib" with an integer parameter "n" and returns an integer
proc fib(n: int): int =
  # Check if n is equal to 0 or 1 and return the appropriate value
  if n == 0 or n == 1:
    return n
  else:
    # Define two variables and set them to 0 and 1
    var a = 0
    var b = 1
    # Loop through n iterations
    for i in 2..n:
      # Calculate and store the next fibonacci number
      let next = a + b
      # Update the values of a and b
      a = b
      b = next
    # Return the final fibonacci number
    return b

# Invoke the proc and print the result
echo fib(10) # output: 55
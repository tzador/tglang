var numberOfPlayers = 4 # This variable stores the number of players in the game
var currentTurn = 1 # This variable keeps track of the current turn number
var playerScores = [0, 0, 0, 0] # This array stores the scores of each player
var gameBoard = [['|', '|', '|'], ['|', '|', '|'], ['|', '|', '|']] # This 2D array represents the game board
var gameOver = false # This variable determines if the game is over or not

# This function prints the game board with updated moves
proc printGameBoard() =
    for y in 0..2:
        for x in 0..2:
            echo gameBoard[y][x]
        echo ""

# This function checks if there is a winner or if the game is a tie
proc checkWinner() =
    # Check for horizontal winning combinations
    if (gameBoard[0][0] == gameBoard[0][1] == gameBoard[0][2]) or (gameBoard[1][0] == gameBoard[1][1] == gameBoard[1][2]) or (gameBoard[2][0] == gameBoard[2][1] == gameBoard[2][2]):
        return true # There is a winner
    # Check for vertical winning combinations
    elif (gameBoard[0][0] == gameBoard[1][0] == gameBoard[2][0]) or (gameBoard[0][1] == gameBoard[1][1] == gameBoard[2][1]) or (gameBoard[0][2] == gameBoard[1][2] == gameBoard[2][2]):
        return true # There is a winner
    # Check for diagonal winning combinations
    elif (gameBoard[0][0] == gameBoard[1][1] == gameBoard[2][2]) or (gameBoard[0][2] == gameBoard[1][1] == gameBoard[2][0]):
        return true # There is a winner
    # Check if all moves have been made and there is no winner
    elif currentTurn > 9:
        return true # Game is a tie
    else:
        return false # Game is still ongoing

# This function checks if the move made by the current player is valid
proc isValidMove(x, y: int) =
    if gameBoard[x][y] == '|': # If the spot is empty, the move is valid
        return true
    else:
        return false # If the spot is already taken, the move is invalid

# This function updates the game board with the move made by the current player
proc makeMove(move, player: int) =
    var x, y: int
    case move # Convert the move from a string to coordinates on the game board
    of "A1": x = 0; y = 0
    of "A2": x = 0; y = 1
    of "A3": x = 0; y = 2
    of "B1": x = 1; y = 0
    of "B2": x = 1; y = 1
    of "B3": x = 1; y = 2
    of "C1": x = 2; y = 0
    of "C2": x = 2; y = 1
    of "C3": x = 2; y = 2
    else: # If the move is not a valid option, ask for a new move
        echo "Invalid move. Please enter a valid move (e.g. A1): "
        makeMove(readLine(stdin), player)
    if isValidMove(x, y): # If the move is valid, update the game board
        if player == 1:
            gameBoard[x][y] = "X"
        else:
            gameBoard[x][y] = "O"
    else: # If the move is invalid, ask for a new move
        echo "Invalid move. Please enter a valid move (e.g. A1): "
        makeMove(readLine(stdin), player)

# This loop runs until the game is over
while not gameOver:
    # Print the game board with updated moves
    echo "Current game board:"
    printGameBoard()
    # Ask the current player for their move
    echo "Player " & $currentTurn & ", please enter your move (e.g. A1): "
    makeMove(readLine(stdin), currentTurn)
    # Check for a winner or tie
    gameOver = checkWinner()
    # Update current player's score
    playerScores[currentTurn - 1] += 1
    # Move to the next player's turn
    if currentTurn == numberOfPlayers:
        currentTurn = 1
    else:
        currentTurn += 1
# Once the game is over, print the final game board and the winner or if it's a tie
echo "Final game board:"
printGameBoard()
if checkWinner():
    echo "Player " & $currentTurn & " wins!"
else:
    echo "It's a tie!"
# This code snippet creates a function that performs bubble sort on an array of integers
# Input: array of integers, Output: sorted array

proc bubbleSort(arr: seq[int]): seq[int] =
    # Set the sorting limit to the length of the array
    var limit = len(arr)
    # Create a flag to check if any swaps were made in the current iteration
    var swapped: bool
    # Loop until the entire array is sorted
    while limit > 1:
        # Set the flag to false at the start of each iteration
        swapped = false
        # Loop through the unsorted portion of the array
        for i in 0..(limit - 2):
            # Compare each element with its adjacent element
            if arr[i] > arr[i + 1]:
                # If the current element is larger than the next, swap them
                swap(arr, i, i + 1)
                # Set the swapped flag to true
                swapped = true
        # If no swaps were made in the current iteration, the array is already sorted
        if not swapped:
            break
        # Decrement the sorting limit by 1, as the last element is now in its correct position
        limit -= 1
    # Return the sorted array
    return arr
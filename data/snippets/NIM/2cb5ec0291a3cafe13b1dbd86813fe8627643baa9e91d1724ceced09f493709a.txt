## This code implements a binary search algorithm in NIM
proc binary_search(inputArr: seq[int], target: int): int =
  ## Set left and right indices
  var l = 0
  var r = inputArr.len - 1

  ## Loop until left index exceeds right index
  while l <= r:
    ## Calculate middle index
    var m = (l + r)/2

    ## Check if target is at middle index
    if target == inputArr[m]:
      return m
    ## If target is smaller, search in left subarray
    elif target < inputArr[m]:
      r = m - 1
    ## If target is larger, search in right subarray
    else:
      l = m + 1

  ## If target is not found, return -1
  return -1

## Define array to search in
var nums = [1, 7, 3, 5, 9, 2, 8, 6, 4]

## Sort the array in ascending order
sort(nums)

## Define target element to search for
var target = 5

## Perform binary search and store result
var result = binary_search(nums, target)

## Print the index of the target element
echo("Index of target element: ", result)
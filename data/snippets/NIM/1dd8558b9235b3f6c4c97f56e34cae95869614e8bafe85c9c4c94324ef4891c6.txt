# This code performs a binary search on a sorted array

proc binarySearch(arr: seq[int], low: int, high: int, target: int): int =
  result = -1 # initialize result to -1, indicating target not found
  if low <= high:
    mid = low + (high - low) / 2
    if arr[mid] == target:
      result = mid
    elif arr[mid] > target:
      result = binarySearch(arr, low, mid - 1, target) # recursively call function on lower half of array
    else:
      result = binarySearch(arr, mid + 1, high, target) # recursively call function on upper half of array
  result

# Example usage of function
let arr = [1, 3, 5, 7, 9]
echo binarySearch(arr, 0, len(arr) - 1, 3) # prints 1, indicating that 3 is found at index 1 in the array
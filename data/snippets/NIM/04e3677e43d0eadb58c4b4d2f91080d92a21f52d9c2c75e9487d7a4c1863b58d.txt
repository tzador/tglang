const
   MAX = 10 #declaring a constant variable

var #declaring a mutable variable
   i, j, k, l: int #declaring multiple variables of same type

type #declaring a custom data type
   Triangle = object #declaring an object
      side1, side2, side3: int #declaring attributes of object
      perimeter: int = side1 + side2 + side3 #declaring attribute with assigned value

proc calculateArea(t: Triangle): int = #declaring a procedure with parameter and return type
   var s: float #declaring a mutable variable of different type
   s = (t.perimeter / 2) #using attribute value to calculate
   var area: float #declaring a mutable variable of different type
   area = sqrt(s * (s - t.side1) * (s - t.side2) * (s - t.side3)) #calculating area using Heron's formula
   return floatToInt(area) #converting float to int and returning the value

var myTriangle: Triangle = Triangle(side1: 3, side2: 4, side3: 5) #declaring and initializing an object
discard calculateArea(myTriangle) #discarding the returned value
#the above line would produce a compiler warning as the returned value is not being used

for i in 0..MAX: #iterating through a range
   if i.isEven(): #checking if the value is even using a built-in method
      echo "The value of i is " & $i #printing the value with string concatenation
   else: #if the value is odd
      echo "The value of i is odd and discarded." #printing a message
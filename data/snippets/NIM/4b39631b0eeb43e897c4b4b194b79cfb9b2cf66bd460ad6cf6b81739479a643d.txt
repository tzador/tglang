#
# Nim Game Implementation
#
# A classic strategy game where players take turns removing objects from a pile. 
# The player who removes the last object wins.
#
var pile_size = 10 # Number of objects in the pile

proc choose_move(pile: var int): int =
    # Function that chooses the optimal move for the current pile size
    if pile % 4 == 0:
        # If the current pile size is a multiple of 4, subtract 3
        return 3
    elif pile % 4 == 1:
        # If the current pile size is 1 more than a multiple of 4, subtract 1
        return 1
    else:
        # Otherwise, subtract 2
        return 2

proc play():
    # Function to run the game
    while pile_size > 0:
        # Loop until the pile is empty
        echo "Pile size: ", pile_size
        # Print the current pile size
        if pile_size % 2 == 0:
            # If the current pile size is even, it's the player's turn
            var player_move = parse(parseInt(readLine(stdin)))
            # Prompt the player to enter their move
            if player_move in 1..3:
                # Validate that the player's move is between 1 and 3
                pile_size -= player_move
                # Update the pile size
                echo "Player chose to remove ", player_move, " objects"
                # Print the player's move
            else:
                # If the player's move is invalid, prompt them to try again
                echo "Invalid move. Please choose a number between 1 and 3"
                continue
                # Restart the loop
        else:
            # If the current pile size is odd, it's the computer's turn
            var computer_move = choose_move(pile_size)
            # Use the choose_move function to determine the computer's move
            pile_size -= computer_move
            # Update the pile size
            echo "Computer chose to remove ", computer_move, " objects"
            # Print the computer's move
    
    if pile_size == 0:
        # If the pile is now empty, the player who made the last move wins
        if pile_size % 2 == 0:
            # If the player's last move was even, the computer wins
            echo "Player wins"
        else:
            # If the player's last move was odd, the player wins
            echo "Computer wins"

play()
# Call the play function to start the game
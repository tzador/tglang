# Definition of custom type Player to represent a player in a game
type Player = object 
    name: string  # the player's name
    age: int  # the player's age
    level: int  # the player's level in the game
    score: int  # the player's current score
    
# Procedure to display the information of a player
proc displayPlayerInformation(player: Player): void =
    echo "Name: ", player.name
    echo "Age: ", player.age
    echo "Level: ", player.level
    echo "Score: ", player.score
    
# Definition of custom type Game to represent the game
type Game = object
    name: string  # the name of the game
    players: seq[Player]  # sequence of players in the game
    isComplete: bool  # indicator if the game is complete
    turn: int  # current turn in the game
    
# Procedure to start the game and initialize player information
proc startGame(): Game =
    var game = Game(name: "Nim", players: @[], isComplete: false, turn: 1)  # create new game with empty list of players
    for i in 1..2:  # loop to gather player information
        var player = Player(name: "", age: 0, level: 1, score: 0)  # create new player
        echo "Enter Player ", i, "'s name:"
        player.name = readLine(stdin)  # get player name from user
        echo "Enter Player ", i, "'s age:"
        player.age = parseInt(readLine(stdin))  # get player age from user
        game.players.add(player)  # add player to game's list of players
        echo "Player ", i, " has been added to the game."
    
    return game  # return initialized game object
    
# Procedure to start a new round in the game
proc startRound(game: Game): void =
    echo "Starting round ", game.turn, "..."
    for player in game.players:  # loop through each player's turn
        displayPlayerInformation(player)  # display player information
        var move: int = 0  # variable to store player's move
        while move == 0:
            echo "It is ", player.name, "'s turn."
            echo "Enter your move (a positive integer):"
            move = parseInt(readLine(stdin))  # get player's move from user
            if move <= 0:
                echo "Invalid move. Please enter a positive integer."
            else:
                player.score += move  # update player's score
                echo "Player ", player.name, " has scored ", move, " points."
    game.turn += 1  # increase turn number
    echo "Round ", game.turn - 1, " complete."
    
# Main function to run the game
proc main() =
    echo "Welcome to NIM!"
    var game = startGame()  # initialize game
    while not game.isComplete:  # loop until game is complete
        startRound(game)  # start new round
        echo "Enter '1' to play another round or any other key to exit."
        var choice = readLine(stdin)
        if choice == "1":
            game.turn += 1  # increase turn number
        else:
            game.isComplete = true  # set game as complete
    
    for player in game.players:  # loop through each player and display final scores
        echo player.name, "'s final score: ", player.score
        
    echo "Thank you for playing!"
    
main()  # call main function to run the game
# This code snippet is written in NIM - a compiled, statically typed, imperative programming language.

# Define a new type called "MyType" which is a tuple with two fields, "age" of type int32, and "name" of type string.
type MyType = tuple[int32, string]

# Create a new object of "MyType" and assign it to a variable called "my_var".
var my_var: MyType = (20, "John")

# Define a function called "increment_age" which takes in a "MyType" object as a parameter, increments its "age" field by 1, and returns the updated object.
func increment_age(my_obj: MyType): MyType =
    var updated_obj: MyType = my_obj
    updated_obj.age += 1
    return updated_obj

# Call the "increment_age" function on "my_var" and store the result in a new variable called "updated_var".
var updated_var: MyType = increment_age(my_var)

# Print out the updated age and name fields of "updated_var".
echo "Updated age: ", updated_var.age
echo "Updated name: ", updated_var.name
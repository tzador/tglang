# This is a code snippet in the NIM programming language
# It is a simple program that implements the 'bubble sort' algorithm

# Define a procedure to perform bubble sort on a given sequence
proc bubbleSort[A](seq: var A) =
    var
        n = A.highIndex
        i, j: int

    for i in 0 .. n:
        # Flag to check if any swaps were done in the current iteration
        var swapped = false

        for j in 0 .. n - i - 1:
            # Compare the adjacent elements and swap if necessary
            if seq[j] > seq[j + 1]:
                swapped = true
                seq[j], seq[j + 1] = seq[j + 1], seq[j]

        # If no swaps were done in the current iteration, break out of the loop
        if not swapped:
            break

# Define an array of integers to be sorted
var nums = [12, 3, 45, 67, 23, 10, 1]

# Print the original array
echo "Original array: ", nums

# Sort the array using the bubbleSort procedure
bubbleSort(nums)

# Print the sorted array
echo "Sorted array: ", nums

# Output:
#
#
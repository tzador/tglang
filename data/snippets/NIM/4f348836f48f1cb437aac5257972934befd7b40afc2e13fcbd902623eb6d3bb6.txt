proc nimSum(a, b: int): int =
  # Adds the two given integers and returns their sum
  result = a + b
  # A simple for loop to iterate through list of numbers and add them to result
  for i in 1..10:
    result += i
  # A helper function to check if the result is prime
  # Returns true if prime, false if not
  func isPrime(num: int): bool =
    # A boolean variable to track if number is prime
    var isPrimeNumber = true
    # Loop through numbers less than num to check if it is divisible
    for j in 2..<num:
      if num % j == 0:
        isPrimeNumber = false
        break
    # Return the boolean variable
    return isPrimeNumber
  # Call the helper function to check if result is prime
  # Increment result if it is not prime
  if isPrime(result) == false:
    result += 1
  # Finally, return the result
  return result
## This code snippet shows how to implement a binary search algorithm in NIM programming language

## Define a function for binary search
proc binarySearch(numbers: seq[int], target: int): int =
  var low = 0  # set the lower bound of the search
  var high = len(numbers) - 1  # set the higher bound of the search
  
  while low <= high:
    var mid = (low + high) div 2  # calculate the middle index
    
    if numbers[mid] == target:
      return mid  # return the index of the target value
    elif numbers[mid] < target:
      low = mid + 1  # adjust the lower bound for the next iteration
    else:
      high = mid - 1  # adjust the higher bound for the next iteration
  
  return -1  # if not found, return -1

## Create a sorted list of numbers to search in
var numbers = @[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]

## Call the binarySearch function and pass the list of numbers and the target value
echo binarySearch(numbers, 5)  # output: 2 (index of 5 in the list)
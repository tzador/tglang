# This code snippet generates a random password

import random
import math

# Function to generate random lowercase characters
proc genLowerCaseChar(): char =
    # 'a' has ASCII value of 97, 'b' has ASCII value of 98, etc.
    return chr(random(26) + 97)

# Function to generate random uppercase characters
proc genUpperCaseChar(): char =
    # 'A' has ASCII value of 65, 'B' has ASCII value of 66, etc.
    return chr(random(26) + 65)

# Function to generate random digits
proc genDigit(): char =
    # '0' has ASCII value of 48, '1' has ASCII value of 49, etc.
    return chr(random(10) + 48)

# Function to generate special characters
# Uses weighted distribution to generate more commonly used special chars
proc genSpecialChar(): char =
    var specialChars: array[6, char] = ['!', '@', '#', '$', '%', '&']
    var probabilities: array[6, float] = [0.2, 0.25, 0.15, 0.1, 0.12, 0.18]
    var randNum: float = random()

    # Uses cumulative probability to select the special character
    for i in 0..5:
        if randNum <= probabilities[i]:
            return specialChars[i]

# Procedure to generate the random password
proc genPassword(numChars: int): string =
    var password: string = ""
    for i in 0..numChars-1:
        # Randomly selects which type of character to generate
        var charType: int = int(math.random(4))
        case charType:
            of 0:
                password.add(genLowerCaseChar())
            of 1:
                password.add(genUpperCaseChar())
            of 2:
                password.add(genDigit())
            of 3:
                password.add(genSpecialChar())
    return password

# Main program to generate 10 random passwords with lengths ranging from 8-12 characters
for i in 0..9:
    var passwordLength: int = random(5) + 8
    echo genPassword(passwordLength)
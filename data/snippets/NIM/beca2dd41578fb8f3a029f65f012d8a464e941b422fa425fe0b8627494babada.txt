# Example code in NIM language

# Declare a global variable
var globalVariable: int = 10

# Define a procedure that takes in two parameters and returns a string
proc exampleProc(param1, param2: string): string =
  return "This is an example procedure using " & param1 & " and " & param2

# Create a list of integers
var intList: seq[int]

# Loop through the list and add values to it
for i in 1..10:
  intList.add(i)

# Define a new type with a string and a procedure as fields
type
  ExampleType = object
    field1: string
    field2: proc(param: int): int

# Instantiate the new type
var exampleObj = ExampleType("hello", proc(param: int): int = param * 2)

# Create a new asynchronous task that runs the procedure with a given parameter
asyncCheck exampleObj.field2(5)

# Define a new enum type with different possible colors
type
  Colors = enum
    Red, Blue, Green, Yellow

# Create a dictionary with integers as keys and strings as values
var intStringDict: Table[int, string]

# Add values to the dictionary
intStringDict[1] = "One"
intStringDict[2] = "Two"
intStringDict[3] = "Three"

# Check if the dictionary contains a specific key
if intStringDict.contains(2):
  echo "The dictionary contains the key 2"
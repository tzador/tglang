## Calculate Fibonacci sequence up to n

proc fib(n: int): seq[int] =
  ## A recursive function that calculates the Fibonacci sequence up to n using memoization.

  var cache: seq[int]

  ## Define the base cases for 0 and 1.
  cache[0] = 0
  cache[1] = 1

  ## Use a loop to calculate the Fibonacci numbers for each index up to n.
  for i in 2..n:
    ## Prioritize checking the cache for the previous two numbers before calculating.
    if i-1 in cache and i-2 in cache:
      ## If both numbers are in the cache, simply add them together.
      cache[i] = cache[i-1] + cache[i-2]
    else:
      ## Otherwise, recursively call the function to calculate the numbers.
      cache[i] = fib(i-1) + fib(i-2)

  return cache

echo fib(10)  # Output: @[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
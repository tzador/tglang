# This is a comment in NIM

# Define a new type called 'Customer' with the fields 'name' (string) and 'age' (int)
type
  Customer = object
    name: string
    age: int

# Create a new customer named 'John' with name 'John Doe' and age 25
var john: Customer = Customer(name: "John Doe", age: 25)

# Create a new customer named 'Jane' with name 'Jane Smith' and age 30
var jane: Customer = Customer(name: "Jane Smith", age: 30)

# Define a new procedure called 'printCustomer' that takes in a Customer type variable and prints their information
proc printCustomer(cust: Customer) =
  echo("Name: " & cust.name)
  echo("Age: " & $cust.age)

# Call the 'printCustomer' procedure on the 'john' and 'jane' customers
printCustomer(john)
printCustomer(jane)

# Define a new sequence (array) of Customers
var customers: seq[Customer]

# Add 'John' and 'Jane' to the 'customers' sequence
add(customers, john)
add(customers, jane)

# Define a new function called 'getAverageAge' that takes in a sequence of Customers and returns the average age as a float
func getAverageAge(custs: seq[Customer]): float =
  var sum = 0
  for cust in custs:
    sum += cust.age
  result = float(sum) / custs.len

# Call the 'getAverageAge' function on the 'customers' sequence and store the result in a variable 'average'
var average = getAverageAge(customers)

# Print the average age of the customers
echo("Average age of customers: " & $average)
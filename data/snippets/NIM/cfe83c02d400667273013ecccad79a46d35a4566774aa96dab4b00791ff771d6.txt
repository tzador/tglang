# This code snippet generates a randomly shuffled deck of cards using the NIM programming language.
# The deck contains 52 cards, including 13 cards in each suit (spades, hearts, diamonds, clubs).
# Each card is represented by a tuple containing the value and suit.
# The values range from 2-14 (Ace is represented by 14, King by 13, Queen by 12, and Jack by 11).

# Define a function to create a list of tuples representing the deck of cards.
proc createDeck(): seq[(int,string)] =
  var deck: seq[(int,string)] = @[]
  for suit in ["spades", "hearts", "diamonds", "clubs"]:
    for value in 2..14:
      deck.add((value, suit))
  result = deck

# Define a function to shuffle the deck of cards using the Fisher-Yates algorithm.
proc shuffleDeck(deck:var seq[(int,string)]): seq[(int,string)] =
  var n = deck.len
  while n > 1:
    var k = Rand(n)
    swap(deck[k], deck[n-1])
    n -= 1
  result = deck

# Define a function to print the shuffled deck of cards.
proc printDeck(deck: seq[(int,string)]) =
  for card in deck:
    echo card[0], " of ", card[1]

# Call the functions to create, shuffle, and print the deck of cards.
var deck = createDeck()
deck = shuffleDeck(deck)
printDeck(deck)
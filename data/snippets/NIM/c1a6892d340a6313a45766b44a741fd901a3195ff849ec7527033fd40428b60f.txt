# Nim code to calculate the sum of a Fibonacci sequence

from sequtils import zipWith

# function to generate a Fibonacci sequence up to a given number
proc fibonacciSeq(limit: int): seq[int] =
  var output: seq[int] = [0, 1]
  var i = 2

  while output[i - 1] < limit:
    output.add(output[i - 1] + output[i - 2])
    i += 1

  return output

# function to calculate the sum of a Fibonacci sequence
proc fibonacciSum(limit: int): int =
  # create Fibonacci sequence up to given limit
  var sequence: seq[int] = fibonacciSeq(limit)
  
  # calculate sum of sequence using zipWith function
  var sum = 0
  sequence.zipWith(sequence[1..], proc(a, b: int) = sum += a + b)
  
  return sum

# input the limit
var limit = parseInt(stdin.readLine())

# calculate the sum of the Fibonacci sequence up to given limit
var sum = fibonacciSum(limit)

# print the result
echo "Sum of Fibonacci sequence up to", limit, "=", sum
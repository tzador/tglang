proc nimGame(n: int): string =  # Procedure to determine the winner of the Nim game
  var 
    pileSize: int = n  # The size of the starting pile
    currentPlayer: int = 1  # The current player (1 is player 1, 2 is player 2)
    validMoves: seq[int]  # A sequence of valid moves
    chosenMove: int  # The move chosen by the current player
    
  while pileSize > 0:  # While there are still items in the pile
    # Determine the valid moves based on the remaining pile size
    validMoves = @[$..min(pileSize, 3)]
    
    # Player 1's turn
    if currentPlayer == 1:
      # Choose a random move from the valid moves
      chosenMove = validMoves[rand(1..validMoves.len)]
    
    # Player 2's turn
    else:
      # Choose a move that will leave the pile size as a multiple of 4
      chosenMove = (pileSize - 1) % 4
    
    # Remove the chosen move from the pile
    pileSize -= chosenMove
    # Switch to the other player
    currentPlayer = 3 - currentPlayer
  
  # Check the winner based on the final pile size
  if pileSize == 0: 
    "Player " & $currentPlayer & " wins!"
  else:
    "Player " & $(3 - currentPlayer) & " wins!"
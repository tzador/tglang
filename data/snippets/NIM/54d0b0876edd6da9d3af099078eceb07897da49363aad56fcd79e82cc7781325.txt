# This code snippet calculates the sum of squares of a list of numbers using recursion

proc sumSquares(input_list: seq[int]): int =
    # This helper function recursively calculates the sum of squares
    # Iteration starts from the end of the list
    proc helper(input_list: seq[int], index: int, sum: int): int =
        if index < 0:
            return sum
        else:
            return helper(input_list, index-1, sum + input_list[index] ** 2)

    # Call the helper function to calculate the sum of squares
    return helper(input_list, len(input_list)-1, 0)

# Sample input list
var list = @[1, 2, 3, 4, 5]

# Call the function and print the output
echo sumSquares(list)

# Output:
# 55
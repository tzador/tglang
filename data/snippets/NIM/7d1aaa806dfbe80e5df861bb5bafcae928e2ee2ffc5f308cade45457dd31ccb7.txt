import os
from math import factorial

# This function calculates the nth Fibonacci number using recursion
proc fibonacci(n: int): int =
  if n <= 1:
    result = n
  else:
    result = fibonacci(n - 1) + fibonacci(n - 2)

  return result

# This function checks if a given number is prime or not
proc isPrime(n: int): bool =
  if n <= 1:
    return false
  elif n == 2:
    return true
  elif n % 2 == 0:
    return false
  else:
    for i in range(3, int(sqrt(n)) + 1, 2):
      if n % i == 0:
        return false

  return true

# Main program
var n: int = 10
var fibonacciSequence: seq[int] = @[]

# Generate the first n numbers in the Fibonacci sequence and add them to the sequence
for i in range(1, n + 1):
  fibonacciSequence.add(fibonacci(i))

# Print the sequence
echo("Fibonacci Sequence with", $n, "numbers:")
for num in fibonacciSequence:
  echo($num)

# Find all prime numbers in the generated sequence and add them to a new sequence
var primeSequence: seq[int] = @[]
for num in fibonacciSequence:
  if isPrime(num):
    primeSequence.add(num)

# Print the sequence
echo("Prime numbers in Fibonacci Sequence:")
for num in primeSequence:
  echo($num)
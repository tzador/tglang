# A recursive function to find all permutations of a given list
proc permute(lst: seq[int]): seq[seq[int]] =
  result = @[]
  for i in 0..<len(lst):
    if i == 0:
      result.add([lst[i]])
    else:
      var temp = @[]
      for item in result:
        for j in 0..<len(item) + 1:
          temp.add(item[:j] & [lst[i]] & item[j:])
      result = temp
  return result
  
echo permute([1, 2, 3]) # prints [[1,2,3], [2,1,3], [2,3,1], [1,3,2], [3,1,2], [3,2,1]]
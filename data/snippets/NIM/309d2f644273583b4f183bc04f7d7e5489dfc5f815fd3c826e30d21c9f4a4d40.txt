# This is a comment in NIM
# Declare a variable named 'my_var' of type 'int' with initial value of 5
var my_var: int = 5 

# Declare a variable named 'my_var2' of type 'string' without initial value
var my_var2: string 

# Define a procedure named 'add' with 2 parameters, both of type 'float'
proc add(x, y: float) =
    # Print a message using interpolation
    echo "The sum of {x} and {y} is {x + y}"

# Call the 'add' procedure with values 3.14 and 5.78
add(3.14, 5.78)

# Declare a constant named 'PI' with a value of 3.14159
const PI = 3.14159 

# Define a function named 'calculate_area' with 2 parameters, both of type 'int'
func calculate_area(length, width: int): int =
    # Multiply the length and width parameters to get the area
    var area = length * width
    # Print the calculated area
    echo "The area is: {area}"
    # Return the calculated area
    return area

# Call the 'calculate_area' function with values 5 and 10 and store the result in a variable named 'my_area'
var my_area = calculate_area(5, 10)

# Create an array named 'my_array' with 5 elements of type 'int' with initial values
var my_array: array[5, int] = [1, 2, 3, 4, 5]

# Use a for loop to iterate through the elements in 'my_array' and print them
for element in my_array:
    echo element 

# Create a new type called 'Person' with 3 fields: 'name' and 'age' of type 'string', and 'height' of type 'float'
type Person = object
    name: string
    age: string
    height: float 

# Declare a new instance of the 'Person' type and assign values to its fields
var my_person: Person = Person(name: "John", age: "25", height: 6.2)

# Print a message using interpolation with the 'name' field
echo "My name is {my_person.name}"
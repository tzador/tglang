# Declare a 2-dimensional array that stores the position of each player
var player_positions: array[1..4, 1..3] of int

# This function takes in the player number and prompts them to make a move
proc take_turn(player: int) =
  echo "Player ", player, ", it's your turn"
  var row: int
  var col: int
  var valid_move: bool = false
  while not valid_move:
    echo "Enter the row number: "
    row = readLine(parseInt)
    echo "Enter the column number: "
    col = readLine(parseInt)
    if row in 1..4 and col in 1..3 and player_positions[row, col] == 0:
      player_positions[row, col] = player
      valid_move = true
    else:
      echo "Invalid move, please try again."

# This function checks if there is only one pile left and declares a winner
proc check_winner() =
  var count = 0
  for i in 1..4:
    for j in 1..3:
      if player_positions[i, j] != 0:
        count += 1
  if count == 1:
    for i in 1..4:
      for j in 1..3:
        if player_positions[i, j] != 0:
          echo "Player ", player_positions[i, j], " wins!"

# This function displays the current state of the game board
proc display_board() =
  echo "Current Board:"
  for i in 1..4:
    for j in 1..3:
      echo player_positions[i, j],
    echo ""
  echo ""

# The main game loop
while true:
  display_board()
  take_turn(1)
  take_turn(2)
  check_winner()
  if player_positions[1, 1] == 0 and player_positions[1, 2] == 0 and player_positions[1, 3] == 0:
    break
  elseif player_positions[1, 1] == 0 and player_positions[2, 1] == 0 and player_positions[3, 1] == 0:
    break
  elseif player_positions[1, 1] == 0 and player_positions[2, 2] == 0 and player_positions[3, 3] == 0:
    break

# Print the final game board and declare a draw
display_board()
echo "No more valid moves, the game ends in a draw."
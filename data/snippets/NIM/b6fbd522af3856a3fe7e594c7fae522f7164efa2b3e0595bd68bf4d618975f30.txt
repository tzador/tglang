## This is a NIM code snippet
## It generates a random array and sorts it using quicksort algorithm
## It also includes a custom proc for swapping elements in the array

## Define custom proc for swapping elements
proc swap(arr: var array, i: int, j: int) =
    var temp: int = arr[i]
    arr[i] = arr[j]
    arr[j] = temp

## Define recursive quicksort function
proc quicksort(arr: var array, low: int, high: int) =
    var i: int = low
    var j int = high
    var pivot: int = arr[(low + high) / 2]
    while i <= j:
        while arr[i] < pivot:
            i += 1
        while arr[j] > pivot:
            j -= 1
        if i <= j:
            swap(arr,i,j)
            i += 1
            j -= 1
    if low < j:
        quicksort(arr,low,j)
    if i < high:
        quicksort(arr,i,high)

## Generate a random array of 10 elements
var arr: array[10,int]
for i in 0..len(arr)-1:
    arr[i] = rand(50)

## Print the unsorted array
echo "Unsorted array:"
echo arr

## Sort the array using quicksort
quicksort(arr,0,9)

## Print the sorted array
echo "Sorted array:"
echo arr
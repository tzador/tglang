# This program generates a list of prime numbers using the Sieve of Eratosthenes algorithm

# Sets the maximum limit for the list
const LIMIT = 1000

# Creates a list of boolean values indicating whether a number is prime or not
var sieve = openArray[bool](LIMIT + 1)

# Sets all values in the list to true, indicating that all numbers are initially prime
sieve.setAll(true)

# Sets the first two values in the list (0 and 1) to false, as they are not considered prime numbers
sieve[0] = false
sieve[1] = false

# Loop through the numbers from 2 to the square root of the limit
for i in 2..LIMIT.sqrt:
  # Checks if the current number is prime (indicated by a true value in the list)
  if sieve[i] == true:
    # Loop through all multiples of the current number, starting from its square and marking them as non-prime (false)
    for j in i * i .. LIMIT step i:
      sieve[j] = false

# Create an empty list to store the prime numbers
var primes = @[]

# Loop through the values in the sieve list
for k in 2..LIMIT:
  # If a value is still marked as true (prime number), add it to the list of primes
  if sieve[k] == true:
    primes.add(k)

# Print the list of prime numbers
echo primes
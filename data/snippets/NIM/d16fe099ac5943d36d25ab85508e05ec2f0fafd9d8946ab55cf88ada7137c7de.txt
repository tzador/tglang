# This is a comment in NIM

# Variables
var
    num = 10          # integer variable
    name = "John"     # string variable
    balance = 100.50  # float variable
    is_valid = true   # boolean variable

# Arrays
let
    numbers = @[1, 2, 3, 4]   # array of integers
    names = @["John", "Mary", "Bob"]  # array of strings
    balances = @[100.50, 200.75, 300.25]  # array of floats

# Control Flow
if num > 5:                # if statement
    echo "Number is larger than 5"
elif num < 5:              # else if statement
    echo "Number is smaller than 5"
else:                      # else statement
    echo "Number is equal to 5"

case num of                # case statement
    1:
        echo "Number is 1"
    2, 3, 4:
        echo "Number is between 2 and 4"
    else:
        echo "Number is larger than 4"

# Loops
for i in 0..5:           # for loop
    echo i

while num > 0:           # while loop
    echo num
    num -= 1

# Functions
func add(x: int, y: int): int =  # function with two integer parameters and integer return value
    return x + y

proc print_name(name: string) =  # procedure with string parameter and no return value
    echo "Name: " & name

# Classes
type Person = object:      # class
    name: string
    age: int

# Objects
let john = Person(name: "John", age: 24)   # object of type Person

# Error Handling
try:
    foo()
except:
    echo "Function foo() does not exist"
finally:
    echo "End of try-catch block"
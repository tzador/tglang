# This is a code snippet in NIM that demonstrates the use of generics and high-order functions
import strutils

# Generic procedure that takes in two parameters of any type
proc printTwo[T](param1: T, param2: T) =
  # Add the two parameters and convert the result to a string
  let result = ($param1 + $param2).parseInt()
  # Append the result to a string
  let output = "Result: " & result
  # Print the output
  echo output

# Define a high-order function that takes in a generic procedure and two parameters as arguments
proc highOrder[T](proc: proc(T, T), param1: T, param2: T) =
  # Call the procedure with the two parameters
  proc(param1, param2)

# Define two variables of type int and pass them as parameters to the high-order function
let num1 = 5
let num2 = 10
highOrder(printTwo, num1, num2)
# Output: "Result: 15"

# Define two variables of type string and pass them as parameters to the high-order function
let str1 = "Hello"
let str2 = " World"
highOrder(printTwo, str1, str2)
# Output: "Result: 0"

# Define two variables of type bool and pass them as parameters to the high-order function
let bool1 = true
let bool2 = false
highOrder(printTwo, bool1, bool2)
# Output: "Result: 1"
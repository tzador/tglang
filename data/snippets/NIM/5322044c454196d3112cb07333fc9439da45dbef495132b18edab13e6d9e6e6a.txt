# This is a function to calculate the factorial of a given integer.
proc factorial(n: int): int =
  if n == 0:
    return 1
  else:
    result = n * factorial(n-1)
    return result
  
# This is a function to check if a given string is a palindrome.
proc isPalindrome(s: string): bool =
  i = 0
  j = len(s) - 1
  while i < j:
    if s[i] != s[j]:
      return false
    i += 1
    j -= 1
  return true

# This is a function to find the greatest common divisor of two integers using Euclidean algorithm.
proc gcd(a: int, b: int): int =
  if b == 0:
    return a
  return gcd(b, a mod b)

# This is a function to calculate the nth term in the Fibonacci sequence using recursion.
proc fibonacci(n: int): int =
  if n == 1 or n == 2:
    return 1
  else:
    return fibonacci(n-1) + fibonacci(n-2)

# This is a function to reverse a list of elements using recursion.
proc reverseList(l: seq[int]): seq[int] =
  if len(l) <= 1:
    return l
  return reverseList(l[1..]) & l[0..0]
  
# This is a procedure to print all the prime numbers up to a given limit.
proc printPrimeNumbers(upTo: int) =
  primes = @[2]
  for i in 3..upTo by 2:
    isPrime = true
    for prime in primes:
      if i mod prime == 0:
        isPrime = false
        break
    if isPrime:
      primes.add(i)
  echo primes
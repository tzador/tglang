## This is a code snippet in NIM

# Importing necessary modules
import math
import strutils
import sequtils

## Defining a helper procedure
proc find_max(a: seq[int]): int =
    var current_max = a[0]
    for i in 1..<a.len:
        if a[i] > current_max:
            current_max = a[i]
    return current_max

# Defining a type
type Person = object
    name*: string
    age*: int
    job: string

## Defining a sequence of Person objects
var people = @[Person(name: "John", age: 25, job: "Developer"), Person(name: "Emily", age: 30, job: "Manager"), Person(name: "Michael", age: 35, job: "Engineer")]

# Sorting the sequence by age using the built-in sortedBy function
people = people.sortedBy(proc (p: Person): int = p.age)

## Printing the sorted sequence
echo "List of people sorted by age:"
for p in people:
    echo(p.name & ", " & $p.age)

# Using conditional statements and recursion to calculate the factorial of a given number
proc factorial(n: int): int =
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

## Getting user input for the number to calculate factorial of
echo "Enter a number to calculate its factorial:"
var num = readLine().parseInt()

## Printing the result
echo "The factorial of " & $num & " is " & $factorial(num)

## Finding the maximum number in a sequence using the helper procedure
var numbers = @[5, 10, 2, 8, 3, 1, 9]
echo "The maximum number in the sequence " & $numbers & " is " & $find_max(numbers)
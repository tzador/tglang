# This is a function that calculates the factorial of a given number
proc factorial(n: int): int =
    # Check if the input is 0 or 1
    if n == 0 or n == 1:
        return 1
    # Use a for loop to calculate the factorial
    var result = 1
    for i in 2..n: 
        result *= i
    return result

# This is a recursive function that calculates the nth Fibonacci number
proc fibonacci(n: int): int =
    # Check if the input is 0 or 1
    if n == 0 or n == 1:
        return 1
    
    # Recursive calls to calculate the values of the previous two fibonacci numbers
    var fib_n_2 = fibonacci(n - 2) 
    var fib_n_1 = fibonacci(n - 1) 
    
    # Calculate the nth fibonacci number using the previous two values
    return fib_n_2 + fib_n_1 

# A recursive function to check if a number is prime
proc is_prime(n: int): bool =
    # 1 is not a prime number
    if n == 1:
        return false
    # Check if the number has any factors other than 1 and itself
    for i in 2..n-1:
        if n mod i == 0:
            return false
    return true

# A list of numbers to test the functions on
var numbers = @[5, 7, 10, 13]

# Print the factorial and fibonacci values of each number
for num in numbers:
    echo "Factorial of ", num, ": ", factorial(num)
    echo "Fibonacci of ", num, ": ", fibonacci(num)

# Check if the numbers are prime or not
for num in numbers:
    var prime = is_prime(num)
    if prime:
        echo num, " is a prime number"
    else:
        echo num, " is not a prime number"
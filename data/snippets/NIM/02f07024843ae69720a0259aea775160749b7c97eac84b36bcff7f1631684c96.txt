# This code generates a random password with a specified length and complexity
import random
import math

let lowercase = "abcdefghijklmnopqrstuvwxyz"
let uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
let numbers = "0123456789"
let symbols = "!@#$%^&*()_+-=[];,./|<>?~"

# Define function to generate password
func generatePassword(length: int, complexity: int): string =
  # Initialize empty string to store password
  var password: string = ""

  # Create empty list to store characters based on complexity
  var charList: seq[string] = @[]

  # Add lowercase characters to charList if complexity is 1 or above
  if complexity >= 1:
    charList.add(lowercase)

  # Add uppercase characters to charList if complexity is 2 or above
  if complexity >= 2:
    charList.add(uppercase)

  # Add numbers to charList if complexity is 3 or above
  if complexity >= 3:
    charList.add(numbers)

  # Add symbols to charList if complexity is 4 or above
  if complexity >= 4:
    charList.add(symbols)

  # Iterate through length of password
  for i in 0 ..< length:
    # Generate random index to choose character from charList
    let randomIndex: int = random.randint(0, charList.len - 1)
    # Choose random character from chosen list in charList
    let randomChar: char = charList[randomIndex].at(random.randint(0, charList[randomIndex].len - 1))
    # Add character to password string
    password.add(randomChar)

  # Return generated password
  return password

# Get user input for password length
echo "Enter password length: "
var length: int = parseInt(readLine(stdin))

# Get user input for password complexity
echo "Enter password complexity (1-4): "
var complexity: int = parseInt(readLine(stdin))

# Generate password using input length and complexity
var password: string = generatePassword(length, complexity)

# Print generated password
echo "Generated password: $password"
# This is a code snippet in NIM

# Import a random library
import math

# Define a procedure to generate a random number
proc generateRandomNumber(low, high: int): int =
  result = low + rand(0..(high - low)) # Set the range of the random number

# Define a list of fruits
var fruits = @["apple", "banana", "orange", "strawberry"]

# Define a list of numbers
var numbers = @[1, 6, 3, 9, 2, 8]

# Create a dictionary to store the counts of each fruit
var fruitCounts: dict[string, int] = dict()

# Create a variable to store the total sum of numbers
var total = 0

# Loop through the list of fruits
for fruit in fruits:
    # Generate a random number between 1 and 10
    var randomNumber = generateRandomNumber(1, 10)

    # Print the fruit and the random number
    echo "$(fruit): $(randomNumber)"

    # Add the random number to the total sum
    total += randomNumber

    # Update the fruit count in the dictionary
    if fruitCounts.hasKey(fruit):
        fruitCounts[fruit] += 1
    else:
        fruitCounts[fruit] = 1

# Loop through the list of numbers
for number in numbers:
    # Calculate the square root of the number
    var squareRoot = math.sqrt(number)

    # Check if the square root is an integer
    if squareRoot.isInt():
        # If it is, print the number and the square root
        echo "$(number): $(squareRoot)"
    else:
        # If not, print an error message
        echo "Error: $(number) does not have an integer square root"

# Print the total sum of numbers
echo "Total: $(total)"

# Print the fruit counts dictionary
echo "Fruit Counts: $(fruitCounts)"
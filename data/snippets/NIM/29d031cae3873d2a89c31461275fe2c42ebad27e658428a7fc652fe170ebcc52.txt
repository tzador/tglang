# This is a function that checks if a given number is prime or not
proc is_prime(num: int): bool =
    var i: int
    for i in 2..num:
        if num mod i == 0:
            # If the number is divisible by any number other than 1 or itself, it is not prime
            return false
    # If the loop completes without finding any divisors, the number is prime
    return true

# This is a function that generates a list of all prime numbers up to a given limit
proc generate_primes(limit: int): seq[int] =
    var primes: seq[int] = @[]
    var num: int = 2
    # Starting from 2, check if each number is prime and add it to the list if it is
    while num <= limit:
        if is_prime(num):
            primes.add(num)
        num += 1  # Increment to check the next number
    return primes

# Example usage:
# Generate a list of all prime numbers up to 100
var primes_up_to_100: seq[int] = generate_primes(100)
# Output: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
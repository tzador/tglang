# This is a Nim code snippet that uses recursion to find the maximum number in a list

# Define a recursive function that takes in a list of integers as input and returns the maximum number in the list
proc findMax(numbers: seq[int]): int =
    # Check if the list has only one element
    if len(numbers) == 1:
        return numbers[0]
    # Otherwise, recursively call the function on the sublist from index 1 to the end and store the result in a variable
    var subListMax = findMax(numbers[1..])
    # Compare the first element of the list with the maximum number from the sublist
    if numbers[0] > subListMax:
        # If the first element is larger, return it as the maximum
        return numbers[0]
    else:
        # Otherwise, return the maximum number from the sublist
        return subListMax
    
# Define a list of numbers to test the function with
var numbers = @[5, 10, 3, 8, 2, 7]

# Call the findMax function with the list as input and store the result in a variable
var maxNumber = findMax(numbers)

# Print the result to the console
echo "The maximum number in the list is ", maxNumber
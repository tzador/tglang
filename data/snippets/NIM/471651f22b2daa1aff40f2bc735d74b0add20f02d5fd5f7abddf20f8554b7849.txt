# This code snippet creates a function to check if a given number is a prime number
proc isPrime(num: int): bool =
  # 'num' is the given number
  var flag = true
  # 'flag' is used to track if the number is prime or not
  for i in 2..num-1:
    if num % i == 0:
      flag = false
      # if the number is divisible by any number between 2 and itself, it is not prime
      break
  if flag:
    return true
    # if the flag is still true, the number is prime
  else:
    return false
    # otherwise, the number is not prime

# This code snippet creates a function to find the first 'n' prime numbers
proc findPrimes(n: int): seq[int] =
  var primes: seq[int] = @[2, 3]
  # initialize the list with the first 2 prime numbers
  while primes.len < n:
    var num = primes[-1] + 2
    # start checking with the next odd number after the last prime number
    if isPrime(num):
      primes.add(num)
      # if the number is prime, add it to the list
  return primes

# call the function to find the first 10 prime numbers
var primeList: seq[int] = findPrimes(10)

echo primeList # output: @[2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
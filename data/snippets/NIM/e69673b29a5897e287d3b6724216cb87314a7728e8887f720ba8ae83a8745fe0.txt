# This is a code snippet in NIM
# It generates a list of random numbers and sorts them using insertion sort algorithm

import random  # Import random module to generate random numbers

proc insertionSort(numbers: seq[int]):  # Define a procedure for insertion sort
    for i in 1..numbers.len-1:  # Loop through the list from 1 to the second last element
        var current = numbers[i] # Store the current element
        var j = i - 1 # Set j to the previous index
        
        while j >= 0 and numbers[j] > current:  # Loop while j is greater than or equal to zero and the element at index j is greater than the current element
            numbers[j+1] = numbers[j] # Shift the element at index j to the right
            j -= 1 # Decrement j by 1
        numbers[j+1] = current # Insert the current element in the correct position
        
random.seed(0) # Set the seed for random number generation
var numbers: array[10, int]  # Declare an array of size 10
for i in 0..numbers.len-1:  # Loop through the array
    numbers[i] = random.randint(1, 100) # Generate a random number between 1 and 100 and assign it to the current index

insertionSort(numbers) # Call the insertionSort procedure with the list of numbers
echo(numbers) # Print the sorted list of numbers
## An annotated snippet of code in NIM programming language ##

# Create a deck of cards using list comprehension
var deck = [card | suit <- @["Diamonds", "Spades", "Clubs", "Hearts"], card <- @["Ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King"]]

# Shuffle the deck of cards
import algorithm
shuffle(deck)

# Create a dictionary to store card values
var cardValues: Table[string, int] = initTable[string, int]()

# Add values for numbered cards
for i in 2..10:
  cardValues[$"$(i)"] = i

# Add values for face cards
cardValues["Jack"] = 11
cardValues["Queen"] = 12
cardValues["King"] = 13

# Initialize a variable to keep track of player scores
var playerScore: int = 0

# Deal two cards to the player
playerScore += cardValues[deck.pop()]
playerScore += cardValues[deck.pop()]

# Check if player has a natural blackjack
if playerScore == 21:
  echo "Player has natural blackjack!"
else:
  # Ask player if they want to hit or stay
  echo "Player score: $(playerScore)"
  echo "Hit or stay? (H/S)"
  var choice: string = readLine()

  if choice == "H": # Player chooses to hit
    # Draw a new card and add its value to player's score
    playerScore += cardValues[deck.pop()]
    echo "Player score: $(playerScore)"
  elif choice == "S": # Player chooses to stay
    echo "Player chooses to stay."
  else # If player inputs invalid choice, display error message
    echo "Invalid choice. Please choose H or S."
# This code snippet generates a Nim game where players take turns removing objects from a pile
# The player who removes the last object from the pile loses the game
# This implementation allows for any number of players and objects in the pile
import random # Import the random module to generate random integers

# Define a function to initialize the game with a given number of players and objects
proc init(game_players: int, game_objects: int) =
  # Create a list to keep track of the players
  var players: seq[string] = @[]
  # Create a list to represent the pile of objects
  var pile: seq[int] = @[]
  
  # Loop through the number of players and add them to the players list
  for i in 0..game_players-1:
    players.add("Player " & $i)
  
  # Loop through the number of objects and add them to the pile list
  for i in 0..game_objects-1:
    pile.add(i+1)
  
  # Print the initial game setup
  echo "Nim game initiated with" & $game_players & "players and" & $game_objects & "objects."
  echo "Players: " & players
  echo "Pile: " & pile 
  echo "" # Empty line for readability

# Define a function to start the game
proc start() =
  # Get input from the players to determine the number of players and objects
  var game_players = readint("Enter number of players: ")
  var game_objects = readint("Enter number of objects: ")
  echo ""
  # Initialize the game with the given number of players and objects
  init(game_players, game_objects)
  
  # Set a variable to keep track of the current player
  var current_player = 0
  # Loop until there are no objects left in the pile
  while game_objects > 0:
    # Get the current player's turn
    var player = current_player mod game_players 
    echo players[player] & "'s turn:"
    # Get input from the player on how many objects they want to remove
    var num_removed = readint("Enter number of objects to remove: ")
    # Validate input - ensure player does not remove more objects than allowed or more than what is left in the pile
    while num_removed <= 0 or num_removed > game_objects:
      num_removed = readint("Invalid input. Please enter a number between 1 and " & $game_objects & ": ")
    
    # Remove the chosen number of objects from the pile
    game_objects -= num_removed
    # Print the updated pile
    echo "Objects in pile remaining: " & game_objects
    echo "" # Empty line for readability
    
    # Move on to the next player's turn
    current_player += 1

  # Game over - the player who removes the last object loses
  var losing_player = current_player mod game_players
  echo "Game over. " & $players[losing_player] & " has lost!"
  
# Call the start function to begin the game
start()
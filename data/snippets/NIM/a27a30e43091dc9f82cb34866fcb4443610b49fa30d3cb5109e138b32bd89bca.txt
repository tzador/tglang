# This code snippet creates a procedure to perform quicksort on an array of integers

proc quicksort(arr: array[0..n-1, int]) =
    # Checks if the array is empty
    if n <= 1:
        return arr

    # Picks the pivot element
    let pivot = arr[random(n)]

    # Creates left and right subarrays
    var left: array[0..n-1, int]
    var right: array[0..n-1, int]

    # Creates variables to keep track of left and right indices
    var left_idx = 0
    var right_idx = 0

    # Loops through the array and separates elements into left and right subarrays
    for i in 0..n-1:
        if arr[i] < pivot:
            left[left_idx] = arr[i]
            left_idx += 1
        else:
            right[right_idx] = arr[i]
            right_idx += 1
    
    # Uses recursion to quicksort the left and right subarrays
    let sorted_left = quicksort(left)
    let sorted_right = quicksort(right)

    # Combines the sorted subarrays with the pivot in the middle
    return sorted_left & [pivot] & sorted_right

# Example of calling the procedure
var arr = [5, 2, 7, 1, 9]
echo "Original array: ", arr
echo "Sorted array: ", quicksort(arr)
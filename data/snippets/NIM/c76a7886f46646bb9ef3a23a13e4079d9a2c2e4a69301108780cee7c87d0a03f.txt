# This is a comment in NIM

# Creating a function in NIM that accepts two parameters, "numOne" and "numTwo", and returns their sum as an integer
proc sum(numOne: int, numTwo: int): int =
    return numOne + numTwo

# Assigning values to variables
var x = 5                 # integer variable
var y = "Hello World"     # string variable
var z = true              # boolean variable
var nums = [1,2,3,4,5]    # array variable

# Looping through an array using a for loop and calling the "sum" function on each element
for num in nums:
    echo "The sum of", $(num), "and", y, "is", $(sum(num, x))

# Output:
# The sum of 1 and Hello World is 6
# The sum of 2 and Hello World is 7
# The sum of 3 and Hello World is 8
# The sum of 4 and Hello World is 9
# The sum of 5 and Hello World is 10

# Defining a class in NIM
type
    Person = object
        name: string
        age: int

# Creating an instance of the "Person" class
var person1 = Person(name: "John", age: 25)

# Outputting the values of the "Person" instance
echo "Name:", person1.name, "Age:", person1.age
# Output: Name: John Age: 25

# Creating a macro in NIM that multiplies two numbers
macro multiply(a: expr, b: expr): expr =
    quote do:
        $(a) * $(b)

# Calling the macro with variables
var result = multiply(x, 10)
echo "Result:", $(result)
# Output: Result: 50

# Using conditional statements in NIM
if x == 5:
    echo "x is equal to 5"
elif x < 5:
    echo "x is less than 5"
else:
    echo "x is greater than or equal to 5"

# Output: x is equal to 5
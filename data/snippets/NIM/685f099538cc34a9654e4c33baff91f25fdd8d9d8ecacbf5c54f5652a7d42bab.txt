# This code snippet creates a function to find the longest common subsequence

# Define a function that takes in two strings as parameters
proc longest_common_subsequence(s1: string, s2: string): string =
    # Create a dynamic programming table to store the lengths of common subsequences
    var dp: array[0..len(s1), 0..len(s2)] of int
    # Loop through the first string and its characters
    for i in 0..len(s1):
        # Loop through the second string and its characters
        for j in 0..len(s2):
            # Check if the characters at the current positions are equal
            if s1[i] == s2[j]:
                # If they are equal, update the value in the table by adding 1 to the diagonal top-left element
                dp[i+1, j+1] = dp[i, j] + 1
            else:
                # If they are not equal, update the value in the table by taking the maximum of the left and top elements
                dp[i+1, j+1] = max(dp[i+1, j], dp[i, j+1])

    # Initialize an empty string to store the longest common subsequence
    var subsequence: string = ""
    # Initialize variables to keep track of the current positions in each string
    var i: int = len(s1)
    var j: int = len(s2)

    # Loop until we reach the start of the strings
    while i > 0 and j > 0:
        # Check if the characters at the current positions are equal
        if s1[i-1] == s2[j-1]:
            # If they are equal, add the character to the beginning of the common subsequence string
            subsequence = s1[i-1] & subsequence
            # Move to the top-left diagonal element in the table
            i = i - 1
            j = j - 1
        # If the characters are not equal, move to the element with the maximum value in the table
        elif dp[i-1, j] > dp[i, j-1]:
            i = i - 1
        else:
            j = j - 1
    
    # Finally, return the longest common subsequence
    return subsequence

# Call the function and store the output
var lcs: string = longest_common_subsequence("programming", "gaming")
# Print the longest common subsequence 
echo(lcs)

# Output: "gaming"
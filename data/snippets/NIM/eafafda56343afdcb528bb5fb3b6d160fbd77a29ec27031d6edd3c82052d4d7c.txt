# This is a code snippet in NIM, a statically typed, imperative programming language.

# A "Hello World" program in NIM
echo "Hello, world!"

# Variables can be declared using the var keyword
var num1: int = 5 # Variable of type integer with initial value of 5
var num2: int = 3
var result: int # Variable declared without initial value

# Control structures in NIM: if/else statements and for loops
if num1 > num2:
    result = num1 + num2
else:
    result = num1 - num2

# Printing the result
echo "The result is: ", result

# NIM also supports while loops
var count: int = 0
while count < 10:
    count += 1
    echo count

# Arrays can be declared and initialized using brackets
var numbers: array[5, int] = [1, 2, 3, 4, 5]

# Iterating through the array using a for loop
for num in numbers:
    echo num

# NIM also supports functions and procedures
proc add(x: int, y: int): int = # The colon indicates the return type
    result = x + y
    return result
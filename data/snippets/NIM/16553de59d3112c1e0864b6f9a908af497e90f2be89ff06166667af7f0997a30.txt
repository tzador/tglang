import strutils, math                              # Importing the strutils and math modules for string and mathematical operations

type Store = ref object                            # Defining a new type 'Store' as a reference object

var max_items: int = 100                            # Defining a global variable 'max_items' with initial value as integer '100'

proc calculate_discount(customer: string, amount: float): float =   # Defining a procedure 'calculate_discount' that takes in arguments 'customer' of type 'string' and 'amount' of type 'float'
  if customer.len < 10:                               # Checking if customer name contains less than 10 characters
    return amount * 0.1                               # If true, return 10% discount on total amount
  elif customer.len > 20:                              # Checking if customer name contains more than 20 characters
    return amount * 0.2                               # If true, return 20% discount on total amount
  else:                                               # If none of the conditions are met
    return amount * 0.15                              # Return 15% discount on total amount

proc add_item(store: Store, item_name: string, price: float) =        # Defining a procedure 'add_item' that takes in arguments 'store' of type 'Store', 'item_name' of type 'string' and 'price' of type 'float'
  if store.len >= max_items:                           # Checking if store already has maximum number of items
    quit "Store is full, cannot add more items"        # If true, exit the program with an error message
  store[item_name] = price                            # Otherwise, add the item and its price to the store

var store: Store = Store()                             # Initializing a new instance of type 'Store' as 'store'

add_item(store, "apple", 2.50)                          # Adding an item 'apple' with price $2.50 to the store
add_item(store, "banana", 1.50)                         # Adding an item 'banana' with price $1.50 to the store
add_item(store, "orange", 3.00)                         # Adding an item 'orange' with price $3.00 to the store

echo "Total number of items in store:", store.len       # Printing the total number of items in the store

var total: float = 0.00                                # Initializing a variable 'total' to store total price of items in store

for item in store:                                     # Iterating through all items in store
  total += store[item]                                 # Adding individual item prices to 'total'

echo "Total cost of items in store:", total             # Printing the total cost of items in store

var customer: string = "John Doe"                       # Initializing a variable 'customer' with a customer name

var discount: float = calculate_discount(customer, total)  # Calling the 'calculate_discount' procedure with 'customer' and 'total' as arguments and storing the return value in 'discount' variable

echo "Total cost of items after discount:", total - discount  # Printing the final cost after discount is applied
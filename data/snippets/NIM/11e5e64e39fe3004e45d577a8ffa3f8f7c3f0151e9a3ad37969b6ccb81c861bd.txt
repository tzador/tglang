proc quicksort(A: array) =
    if A.len < 2:  # check if array has only 1 element or less
        return A
    else:
        var pivot = A[rand(A.len)]  # randomly select pivot element
        var smaller = @[]  # create empty array for elements smaller than pivot
        var bigger = @[]  # create empty array for elements bigger than pivot
        var equal = @[]  # create empty array for elements equal to pivot
        for item in A:
            if item > pivot:  # compare each element with pivot
                bigger.add(item)  # append element to bigger array
            elif item < pivot:
                smaller.add(item)  # append element to smaller array
            else:
                equal.add(item)  # append element to equal array
        return quicksort(smaller) & equal & quicksort(bigger)  # recursively call quicksort on smaller and bigger arrays and concatenate with equal array

echo quicksort(@[7, 3, 9, 1, 5, 2])  # example usage of quicksort function, output: @[1, 2, 3, 5, 7, 9]
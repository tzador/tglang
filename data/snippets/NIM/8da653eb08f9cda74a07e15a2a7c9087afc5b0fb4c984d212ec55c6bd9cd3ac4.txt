## This code snippet demonstrates the use of recursion in NIM programming language
# NIM is a statically typed, compiled language with a powerful macro system

# Define a recursive function to calculate the factorial of a given number
proc factorial(x: int): int =
    # Base case: if x is 0, return 1
    if x == 0:
        return 1
    # Recursive case: calculate factorial of x-1 and multiply by x
    else:
        return factorial(x-1) * x

# Define a variable to store the input number
var input_num: int
# Request user input for the number to calculate factorial for
echo "Enter a number to calculate factorial for:"
# Scan and parse user input as an integer
scan(input_num)

# Call the factorial function, passing in the input number
# Store the result in a variable
var result = factorial(input_num)

# Print out the result to the user
echo "Factorial of ", input_num, " is ", result

# Output:
# Enter a number to calculate factorial for:
# 5
# Factorial of 5 is 120
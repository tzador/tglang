# This program creates a deck of shuffled cards and deals them to players
# using the Nim programming language

import tables # import the built-in tables module for data manipulation
import random # import the random module for shuffling the deck of cards

const SUITS = ["♠️", "♥️", "♣️", "♦️"] # create a constant list of the four suits
const VALUES = [1..13] # create a constant range of numbers from 1 to 13 for card values

# define a custom data type for the cards
type Card = object
    suit: string # the suit of the card
    value: int # the value of the card

# define a custom data type for a deck of cards
type Deck = ref object
    cards: seq[Card] # a sequence of cards

# create a new deck of cards
proc newDeck(): Deck =
    result = new(Deck) # initialize a new deck
    result.cards = @[] # initialize an empty sequence of cards
    
    # loop through each suit and value to create a card for each combination
    for suit in SUITS:
        for value in VALUES:
            var card = Card(suit: suit, value: value) # create a new card with the current suit and value
            result.cards.add(card) # add the card to the deck
    
    return result # return the deck of cards

# shuffle the deck of cards
proc shuffleDeck(deck: Deck) =
    # create a temporary sequence to store the shuffled cards
    var tempCards = @[]
    
    # loop through each card in the deck
    for card in deck.cards:
        var index = random(0..deck.cards.len-1) # generate a random index between 0 and the length of the deck - 1
        tempCards.add(deck.cards[index]) # add the card at the generated index to the temporary sequence
        deck.cards.delete(index) # remove the card from the deck
    
    # replace the deck's cards with the shuffled cards
    deck.cards = tempCards

# deal cards to players
proc dealCards(deck: Deck, numPlayers: int) =
    
    # use the tables module to divide the cards evenly among players
    var playerCards = split(deck.cards, numPlayers)
    
    # loop through each player's cards and print them out
    for player, cards in playerCards:
        echo "Player ", player + 1, " cards:", cards

# main logic
proc main() =
    # create a new deck and shuffle it
    var deck = newDeck()
    shuffleDeck(deck)
    
    # deal the cards to 4 players
    dealCards(deck, 4)

# run the main function
main()
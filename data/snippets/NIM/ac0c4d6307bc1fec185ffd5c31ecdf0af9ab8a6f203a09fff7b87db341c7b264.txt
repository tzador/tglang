# This is a code snippet in NIM

# Define a constant value
const MAX_VALUE = 100

# Define a variable with type inference
var num_of_attempts = 0

# Create a dynamic array for storing input values
var input_array = @[]int

# Create a proc (procedure) to validate user input
proc validate_input(value: int): bool =
  return value > 0 and value <= MAX_VALUE

# Create a while loop to continuously ask for input
while true:
   
   # Display a prompt for user input
   echo "Enter a number between 1 and 100: "
  
   # Take input from the user and convert it to int
   var input = parseInt(readLine(stdin))
   
   # Use the validate_input proc to check if input is valid
   if validate_input(input):
      # If valid, add input to the array and increment num_of_attempts
      input_array.add(input)
      num_of_attempts += 1
   else: 
      # If not valid, display error message and ask for input again
      echo "Invalid input, please try again"
      continue
   
   # Check if the number of attempts has reached the max value
   if num_of_attempts == MAX_VALUE: break

# Define a proc to calculate the sum of all elements in the array
proc calculate_sum(array: seq[int]): int =
  var sum = 0
  
  # Use a for loop to iterate through the array
  for element in array:
    # Add each element to the sum
    sum += element
  
  return sum
  
# Call the calculate_sum proc to get the sum of input values
var sum = calculate_sum(input_array)

# Calculate the average of input values
var average = sum / num_of_attempts

# Display the average to the user
echo "The average of your inputs is: ", average
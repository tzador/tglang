# This is a NIM game programmed in Nim programming language

# Defining the game variables
var player1, player2: string
var players: array[0..1, 0..4] of int  # 2D array to simulate the game's board
var turn: int = 0  # Variable to keep track of player turns
var game_over: bool = false  # Boolean for game state

# Function to print the game board
proc print_board() =
  echo "1   2   3   4   5"
  for i in 0..1:
    for j in 0..4:
      echo players[i,j], " | "
    echo "\n"

# Function to check if the selected move is valid
proc valid_move(row: int, col: int, num: int): bool =
  if (row > 2) or (col > 5):
    return false
  elif players[row,col] < num:
    return false
  else:
    return true

# Function to update the game board
proc update_board(row: int, col: int, num: int) =
  for i in 0..1:
    for j in 0..4:
      if players[i,j] == 0:
        continue
      elif (i == row and j == col):
        players[i,j] -= num
      else:
        players[i,j] = players[i,j]

# Main game loop
while not game_over:
  # Print board and prompt for player's turn
  print_board()
  if turn == 0:
    echo player1, "'s turn."
  else:
    echo player2, "'s turn."

  # Get player's move
  echo "Enter your move: "
  let (row, col, num) = readLine(stdin).parseInt.parseInt.parseInt

  # Check if move is valid
  if not valid_move(row, col, num):
    echo "Invalid move. Please try again."
    continue

  # Update game board and check for winner
  update_board(row, col, num)
  if players[0,0] == 0 and players[0,1] == 0 and players[0,2] == 0 and players[0,3] == 0 and players[0,4] == 0
    and players[1,0] == 0 and players[1,1] == 0 and players[1,2] == 0 and players[1,3] == 0 and players[1,4] == 0:
    game_over = true
    if turn == 0:
      echo player1, " wins!"
    else:
      echo player2, " wins!"

  # Switch player turns
  if turn == 0:
    turn = 1
  else:
    turn = 0
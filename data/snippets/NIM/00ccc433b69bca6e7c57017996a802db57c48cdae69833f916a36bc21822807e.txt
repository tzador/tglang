import math
import sequtils

# Declare a type representing a generic matrix
type Matrix[T] = seq[seq[T]]

# Define a function to print out the elements of a matrix in a table format
proc printMatrix[T](matrix: Matrix[T]) =
  var maxLen = -1
  for row in matrix:
    maxLen = max(maxLen, row.len)
  var format = "%%%ds" % maxLen # generate the format for each element in the table

  for row in matrix:
    echo "|"
    for element in row:
      echo format % $element, " |"
    echo ""

# Define a function to multiply two matrices
proc multiplyMatrix[T](A, B: Matrix[T]): Matrix[T] =
  var C = newSeqWith(A.len, newSeqWith(B[0].len, 0)) # create a new matrix to store the result
  for i, row in A:
    for j, _ in B[i]:
      for k, _ in B:
        C[i][j] += A[i][k] * B[k][j] # multiply and add the corresponding elements from A and B
  result = C

# Define a function to transpose a matrix
proc transposeMatrix[T](matrix: Matrix[T]): Matrix[T] =
  var transposedMatrix = newSeqWith(matrix[0].len, newSeqWith(matrix.len, 0)) # create a new matrix to store the result
  for i, row in matrix:
    for j, element in row:
      transposedMatrix[j][i] = element # swap the row and column indices of the elements
  result = transposedMatrix

# Define a function to calculate the determinant of a 2x2 matrix
proc determinant[T](matrix: Matrix[T]): T =
  result = matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]

# Define a function to create a diagonal matrix
proc createDiagonalMatrix[T](values: varargs[T]): Matrix[T] =
  var matrix = newSeqWith(values.len, newSeqWith(values.len, 0)) # create a new matrix to store the result
  for i, value in values:
    matrix[i][i] = value # assign values to the diagonal elements
  result = matrix

# Create two matrices
var A: Matrix[int] = [[1, 2], [3, 4]]
var B: Matrix[int] = [[5, 6], [7, 8]]

# Print out the original matrices
echo "Matrix A:"
printMatrix(A)
echo ""
echo "Matrix B:"
printMatrix(B)
echo ""

# Multiply the matrices and print out the result
echo "A * B ="
printMatrix(multiplyMatrix(A, B))
echo ""

# Transpose matrix A and print out the result
echo "Transpose of A:"
printMatrix(transposeMatrix(A))
echo ""

# Find the determinant of matrix B
echo "Determinant of B:"
echo determinant(B)
echo ""

# Create a diagonal matrix with the values 1, 2, 3
echo "Diagonal matrix with values 1, 2, 3:"
printMatrix(createDiagonalMatrix(1, 2, 3))
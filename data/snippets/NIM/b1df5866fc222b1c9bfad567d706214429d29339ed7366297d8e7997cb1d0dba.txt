# Define a procedure for finding the minimum value in a list of numbers
proc findMinNum(numList: seq[int]): int =
    var min: int
    # Set the initial minimum value to be the first number in the list
    min = numList[0]
    # Loop through the list and compare each number with the current minimum value
    for num in numList[1..len(numList) - 1]:
        # If the number is smaller, update the minimum value
        if num < min:
            min = num
    # Return the final minimum value
    return min

# Define a procedure to print a message using the minimum value function
proc printMinMsg(): string =
    # Create a list of numbers to test the function
    var testList: seq[int] = [5, 2, 9, 12, 4]
    # Call the minimum value function and store the result in a variable
    var min: int = findMinNum(testList)
    # Print a message using the minimum value
    return "The smallest number in the list is " & $min

# Call the print minimum message function
print(printMinMsg())
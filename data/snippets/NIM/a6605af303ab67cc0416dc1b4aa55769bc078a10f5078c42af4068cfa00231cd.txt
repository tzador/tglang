# This code snippet is an implementation of the insertion sort algorithm in NIM programming language

# Create a procedure that takes in an unsorted array and returns the sorted array
proc insertionSort(array: seq[int]): seq[int] =
    # Initialize a variable for the length of the array
    var len = len(array)

    # Create a for loop to iterate through the array
    for i in 1 .. len - 1:
        # Set the current item to a variable
        var current = array[i]

        # Set a variable for the previous index
        var j = i - 1

        # Create a while loop to check the previous items and swap if necessary
        while j >= 0 and array[j] > current:
            # Swap the items
            array[j + 1] = array[j]

            # Decrement j to continue checking the previous items
            j = j - 1

        # Place the current item in its correct sorted position
        array[j + 1] = current

    # Return the sorted array
    return array

# Create an example array to test the insertion sort algorithm on
var myArray = [7, 3, 9, 2, 1, 4, 8, 6, 5]

# Call the insertionSort procedure on the example array
insertionSort(myArray)

# Output the sorted array
echo "Sorted Array: ", myArray # Output should be: "Sorted Array: 1, 2, 3, 4, 5, 6, 7, 8, 9"
# This is a code snippet in NIM
# It implements a merge sort algorithm

proc mergeSort(array: vararray, left: int, right: int) =
    var
        mid, i, j, k: int
        auxiliary: vararray

    if left < right:
        mid = (left + right) div 2
        mergeSort(array, left, mid)
        mergeSort(array, mid + 1, right)

        # merge two subarrays into auxiliary array
        for i in to mid:
            auxiliary[i] = array[i]
        for i in mid + 1 to right:
            auxiliary[right + mid + 1 - i] = array[i]

        # merge the two subarrays from auxiliary back to original array
        i = left
        j = right
        for k in left to right:
            if auxiliary[i] < auxiliary[j]:
                array[k] = auxiliary[i]
                inc i
            else:
                array[k] = auxiliary[j]
                inc j

# Example usage:
vararray = random(1..10, 10)
echo "Original array: ", vararray
mergeSort(vararray, 0, vararray.high)
echo "Sorted array: ", vararray

# Output:
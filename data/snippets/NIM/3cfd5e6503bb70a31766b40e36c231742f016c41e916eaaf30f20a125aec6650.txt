# This is a code snippet in NIM that generates a list of prime numbers up to a given number.

# The primeArray procedure takes in a limit number and generates a list of prime numbers up to that limit.
proc primeArray(limit: int): seq[int] =
    # Initialize an empty list to store prime numbers.
    var primeNumbers: seq[int] = @[]

    # Loop through numbers from 2 to the limit.
    for i in 2..limit:
        # Initialize a boolean variable to check if the current number is prime or not.
        var isPrime: bool = true

        # Loop through numbers from 2 to the square root of the current number.
        for j in 2..int(sqrt(i)):

            # If the current number is divisible by any number other than 1 and itself,
            # then it is not a prime number.
            if i mod j == 0:
                isPrime = false
                break # Exit the loop.

        # After the inner loop, if the isPrime variable is still true,
        # then the current number is a prime number and we append it to the list.
        if isPrime:
            primeNumbers.add(i)

    return primeNumbers

# Call the primeArray procedure with a limit of 100 and print the result.
echo(primeArray(100))
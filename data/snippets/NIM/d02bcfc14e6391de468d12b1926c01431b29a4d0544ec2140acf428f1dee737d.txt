# This code snippet implements a binary search algorithm
proc binarySearch(arr: seq[int], low: int, high: int, value: int): int =
    # Base case
    if high >= low:
        # Calculate the middle index
        var mid = (low + high) div 2
        # Check if value is present at middle index
        if arr[mid] == value:
            return mid
        # If value is smaller than middle element, recurse on left subarray
        if value < arr[mid]:
            return binarySearch(arr, low, mid-1, value)
        # If value is larger than middle element, recurse on right subarray
        return binarySearch(arr, mid+1, high, value)
    # If value is not found, return -1
    return -1
# The following code snippet implements a sorting function using bubble sort algorithm in NIM language #

# Defining the sorting function with parameters 'arr' as input array and 'n' as length of array #
proc bubbleSort(arr: array, n: int) =
    # Setting swapped value to determine if any changes were made in the array #
    var swapped = true

    # Running a loop to iterate through the array #
    for i in 0..<(n - 1):
        # Setting swapped to false before each iteration #
        swapped = false

        # Running a nested loop to compare adjacent elements in the array and swap them if necessary #
        for j in 0..<(n - i - 1):
            # If the current element is greater than the next element, swap them #
            if arr[j] > arr[j + 1]:
                # Swapping the elements using temporary variable #
                var temp = arr[j]
                arr[j] = arr[j + 1]
                arr[j + 1] = temp
                # Setting swapped to true to indicate changes were made #
                swapped = true

        # If no elements were swapped in the previous iteration, break out of the loop #
        if not swapped:
            break

# Defining an array and its length for testing the function #
var arr = [5, 2, 1, 4, 3]
var length = len(arr)

# Calling the sorting function with the array and its length as parameters #
bubbleSort(arr, length)

# Printing the sorted array #
echo arr  # output: [1, 2, 3, 4, 5]
# This is a code snippet in NIM that generates a random list of numbers and sorts them in ascending order

# Importing the random module
import random

# Defining a function to generate a random list
# Takes in the parameters: list size and max limit for random numbers
proc generateList(size: int, limit: int): seq[int] =
    var nums: seq[int] = @[]
    
    for i in 0..size-1:
        # Generating random numbers and adding them to the list
        var num = random.uniform(0, limit)
        nums.add(num)
    
    # Returning the list
    result = nums

# Defining a function to sort the numbers in ascending order
# Takes in the parameter: list of numbers
proc ascendingSort(nums: seq[int]): seq[int] =
    
    # Looping through each number in the list
    for i in 0..nums.len-1:
        # Setting the current number as the minimum value
        var min = i
        
        # Looping through the remaining numbers in the list
        for j in i+1..nums.len-1:
            # Check if the current number is smaller than the minimum
            if nums[j] < nums[min]:
                # If so, update the minimum
                min = j
        
        # Swap the current number with the minimum, if necessary
        if min != i:
            var temp = nums[i]
            nums[i] = nums[min]
            nums[min] = temp
    
    # Returning the sorted list
    result = nums

# Generating a random list of 10 numbers with a maximum limit of 100
var numbers = generateList(10, 100)

# Sorting the list in ascending order
var sortedNumbers = ascendingSort(numbers)

# Printing the original list and the sorted list
echo "Original list:", numbers
echo "Sorted list:", sortedNumbers
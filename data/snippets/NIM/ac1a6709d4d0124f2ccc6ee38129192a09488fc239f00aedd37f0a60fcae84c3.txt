# This is a code snippet written in NIM programming language
# Importing the required modules
import math
import strutils

# Defining a procedure to calculate the nth number in the Fibonacci sequence
proc fibonacci(n: int): int =
  if n <= 2:
    return 1
  let a = 1
  let b = 1
  for i in 3..n:
    let c = a + b
    a = b
    b = c
  return b

# Printing the first 10 numbers in the Fibonacci sequence
for i in 1..10:
  echo fibonacci(i)
  
# Defining a custom type named "Student"
type Student = object:
  name: string # Name of the student
  age: int # Age of the student
  major: string # Major of the student

# Initializing an empty sequence of "Student" objects
var students: seq[Student] = @[]

# Adding new students to the sequence
students.add(Student(name: "John Doe", age: 20, major: "Computer Science"))
students.add(Student(name: "Jane Smith", age: 19, major: "Mathematics"))
students.add(Student(name: "Bob Jones", age: 21, major: "Engineering"))

# Printing out the details of each student in the sequence
for student in students:
  echo "Name: " & student.name
  echo "Age: " & $student.age
  echo "Major: " & student.major
  echo ""

# Defining a function to check if a given number is prime or not
func isPrime(n: int): bool =
  if n < 2:
    return false
  for i in 2..int(sqrt(n)):
    if n mod i == 0:
      return false
  return true
  
# Printing out all prime numbers between 1 and 100
for i in 1..100:
  if isPrime(i):
    echo i
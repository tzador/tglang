# This is a function in NIM that implements a binary search algorithm.

proc binarySearch(input: seq[int], value: int): int = 
    var low: int = 0
    var high: int = input.high
    var mid: int

    # Loop until low index is equal to or greater than high index.
    while low < high:
        mid = (low + high) div 2 # Calculate middle index.
        if input[mid] < value:
            # Update low index if value is greater.
            low = mid + 1 
        elif input[mid] > value:
            # Update high index if value is smaller.
            high = mid - 1 
        else:
            return mid # Value found, return the index.

    return -1 # Value not found, return -1.

# Sample input.
var myInput: array[10, int] = [1, 3, 6, 8, 10, 15, 19, 22, 25, 37]

# Call the function and store the index in a variable.
var result = binarySearch(myInput, 8)

# Print the result.
echo result # Output: 3 (index of 8 in the input array)
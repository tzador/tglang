import sequtils # Importing the sequtils library

# Defining a function that calculates the factorial of a given number
proc factorial(n: int): int =
  var result = 1
  for i in 1..n:
    result *= i
  result

# Declaring a variable and assigning a list to it
var numbers: seq[int] = @[9, 7, 6, 12, 5]

# Sorting the list in ascending order using the sort() function from sequtils library
numbers.sort()

# Printing the sorted list
echo numbers # Output: @[5, 6, 7, 9, 12]

# Finding the factorial of the first element in the list
var first_number_factorial = factorial(numbers[0]) # Output: 120

# Declaring a new variable and assigning a dictionary (key-value pairs) to it
var fruits: Table[string, int] = {"apple": 3, "banana": 4, "orange": 2}

# Looping through the dictionary using a for loop and printing the key-value pairs
for key, value in fruits.pairs():
  echo "There are", value, "of", key # Output: There are 3 of apple, There are 4 of banana, There are 2 of orange

# Declaring a new variable and assigning a closure (anonymous function) to it
var multiply = (a, b): int => a * b

# Calling the closure and passing two numbers as arguments to multiply
var result = multiply(5, 7) # Output: 35

# Printing the result
echo result # Output: 35
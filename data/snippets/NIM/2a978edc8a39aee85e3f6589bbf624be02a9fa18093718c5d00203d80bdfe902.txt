proc recursiveTowers(n, from, to, aux: int) =
  if n == 1:
    stdout.write("Move disk 1 from pole " & $from & " to pole " & $to)
  else:
    recursiveTowers(n-1, from, aux, to)
    stdout.write("Move disk " & $n & " from pole " & $from & " to pole " & $to)
    recursiveTowers(n-1, aux, to, from)
    
# This recursive function solves the Towers of Hanoi puzzle
# It takes in four parameters - the number of disks (n), the pole to move from (from), the pole to move to (to), and the auxiliary pole (aux)
# The result is printed to the standard output as a series of moves to solve the puzzle with n disks
# Each move is denoted by "Move disk x from pole y to pole z" where x represents the disk number, y represents the pole to move from, and z represents the pole to move to
# This implementation uses a divide-and-conquer strategy to move the disks from the starting pole to the destination pole via the auxiliary pole
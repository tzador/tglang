# This code snippet is written in the programming language NIM
# It generates a list of prime numbers up to a given limit defined by the user

var limit: int         # variable to hold the limit of the prime number list
var primes: seq[int]   # variable to store the prime numbers in a sequence

# function to generate the prime number list
proc generatePrimes(limit: int): seq[int] =
    result = @[2, 3]   # starting the sequence with the first two prime numbers
    var currentNum = 3 # variable to keep track of current number being checked

    # loop to iterate through all numbers up to the given limit
    for i in 4..limit:
        var isPrime = true # flag to check if current number is a prime number

        # loop to check if the current number is divisible by any previous prime number
        for prime in primes:
            if i mod prime == 0: # if number is divisible by a previous prime, it is not a prime itself
                isPrime = false # setting the flag to false
                break           # breaking out of the loop

        if isPrime:             # if the flag is still true, current number is a prime number
            result.add(i)       # adding the prime number to the sequence
            currentNum = i      # updating the current number variable 

    return result     # returning the final prime number sequence

# taking input from user for the limit
echo "Enter the limit: "
input limit

# calling the function to generate the prime number list
var primeList = generatePrimes(limit)

# printing the generated prime number list
echo "Prime numbers up to $limit are: "
echo primeList
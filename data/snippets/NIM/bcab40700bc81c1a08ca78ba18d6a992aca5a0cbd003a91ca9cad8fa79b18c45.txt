# A Nim game implementation

import nim  # importing the nim module for game logic

# Declaring global variables

var curr_player: int    # holds the current player's id
var game_state: bool    # indicates if the game is still in progress
var player_names: seq[string]    # holds the names of the players
var game_board: seq[int]    # holds the current state of the game board
var total_stones: int    # total number of stones in the game

# Function to initialize the game state

proc init_game(num_players: int) =
    curr_player = 0
    game_state = true
    player_names = @[]
    game_board = @[1, 3, 5, 7]    # default game board with 4 stacks of stones
    total_stones = sum(game_board)
    
    # Getting player names and adding them to player_names list
    for i in 0..num_players:
        echo "Enter name for player ", i + 1, ": "
        player_names.add(readLine(stdin))

# Function to display the current state of the game board

proc display_board() =
    echo "Current game state: "
    for i in 0..len(game_board):
        echo "Stack ", i + 1, ": ", game_board[i], " stones"

# Function to check if a player has won the game

proc check_game() =
    if total_stones == 1:
        game_state = false
        echo "Congratulations, ", player_names[curr_player], "! You have won the game!"

# Function for a player's turn

proc player_turn() =
    var stack_choice: int
    var num_stones: int
    
    # Getting stack choice and number of stones to remove from player
    echo "It is ", player_names[curr_player], "'s turn."
    echo "Choose a stack (1-4): "
    stack_choice = parseInt(readLine(stdin))
    echo "Choose the number of stones to remove (1-", game_board[stack_choice-1], "): "
    num_stones = parseInt(readLine(stdin))
    
    # Updating game board
    game_board[stack_choice-1] -= num_stones
    total_stones -= num_stones
    
    # Switching to next player
    if curr_player < len(player_names) - 1:
        curr_player += 1
    else:
        curr_player = 0

# Main game loop
init_game(2)    # initializing game with 2 players
while game_state:
    display_board()
    player_turn()
    check_game()
# This is a code snippet in NIM

import strutils
import math

# A recursive function that calculates the factorial of a number
func factorial(n: int): int = 
  if n > 0: 
    return n * factorial(n - 1)
  else: 
    return 1

# A procedure that prints out the first n prime numbers
proc print_primes(n: int) = 
  var num = 2
  var primes : seq[int] = @[]

  while primes.len < n:
    let upper = $sqrt(num)

    # iterate through the previous prime numbers to check for divisibility
    for prime in primes:
      if prime > upper:
        primes.add(num)
        echo "Prime number found: ", num
        break
      if num mod prime == 0: # if num is divisible, break out to check for next number
        break
    
    num += 1 # increment the number to be checked next

# A type representing a user with username and password
type User = 
  username: string
  password: string

# A method that authenticates a user by checking their username and password
method authenticate(user: User): bool = 
  if user.username == "john" and user.password == "secret":
    return true
  else:
    return false


# Main entry point
proc main() =
  # Print factorial of 5
  echo "Factorial of 5 is: ", factorial(5)

  # Print first 10 prime numbers
  echo "List of prime numbers:"
  print_primes(10)

  # Create a user and authenticate
  var john = User(username: "john", password: "secret")
  if authenticate(john):
    echo "Authentication successful"
  else:
    echo "Authentication failed"

# Call the main function to start the program
main()
# This function reverses a string and outputs the reversed string
proc reverseString(input: string): string =
    var result: string = ""
    
    # Loop through the characters in the input string
    for i in 0..<input.len:
        
        # Add the current character to the beginning of the result string
        result = result[0..0] & input[i..i] & result[1..]
    
    # Return the reversed string
    result

# This function checks if a number is prime
proc isPrime(input: int): bool =
    # Check for edge cases
    if input < 2: return false
    if input % 2 == 0: return input == 2

    # Loop through odd numbers starting from 3 up to the square root of the input number
    for i in (3..input.sqrt.to_i() + 1).step(2):
        if input % i == 0:
            return false
    
    # If no divisors were found, the number is prime
    true
    
# This function calculates the Fibonnaci number at the specified index
proc fibonacci(input: int): int =
    if input == 0 or input == 1: return input

    # Define variables for the previous two numbers in the sequence
    var prev1: int = 0
    var prev2: int = 1

    # Loop from 2 up to the input index, calculating each number in the sequence
    for i in 2..input:
        
        # Calculate the current number in the sequence by adding the previous two numbers
        let current: int = prev1 + prev2
        
        # Update the variables to prepare for the next iteration
        prev1 = prev2
        prev2 = current

    # Return the final calculated Fibonnaci number
    current

# Call the functions
echo "Reversed string: " & reverseString("hello")
echo "Is 17 prime? " & isPrime(17)
echo "Fibonacci at index 10: " & fibonacci(10)
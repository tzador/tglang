##This code snippet uses recursion to generate a Fibonacci sequence and outputs the result in a table format.

## A recursive function to calculate the Fibonacci sequence up to a given number
proc fibonacci(n: int): int =
    if n < 2:
        return n
    else:
        return fibonacci(n-1) + fibonacci(n-2)

## Create a table to display the Fibonacci sequence up to 10 
## by calling the recursive function and iterating through the numbers
var table: seq[seq[string]] = @[]

for i in 0..10:
    var fib_seq: seq[string] = @[]

    ## Calculate the Fibonacci number for the current iteration
    var fib_num = fibonacci(i)

    ## Add the current iteration and the fibonacci number to the table
    fib_seq.add($i)
    fib_seq.add($fib_num)

    ## Add the table row to the table
    table.add(fib_seq)

## Output the table in markdown format
echo "| Iteration | Fibonacci Number |
| --- | --- |
" ## Table header
for row in table:
    echo "| " & row[0] & " | " & row[1] & " |
" ## Table contents
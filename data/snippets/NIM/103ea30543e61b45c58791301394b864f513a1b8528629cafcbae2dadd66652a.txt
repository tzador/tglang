# This code snippet generates a random list of integers and sorts them in ascending order using the selection sort algorithm
import math # Importing the math module to use the random function

proc selectionSort(list: var seq[int]) = # Defining a proc (procedure) named "selectionSort" that takes in a sequence of integers as a parameter
    var minIndex: int # Declaring a variable "minIndex" that will store the index of the minimum element in each iteration
    var temp: int # Declaring a temporary variable "temp" to use for swapping elements
    for i in 0 ..< list.len-1: # Looping through the list from index 0 to the second last index
        minIndex = i # Setting the minimum index to the current index
        for j in i+1 ..< list.len: # Looping through the remaining elements in the list
            if list[j] < list[minIndex]: # Checking if the current element is smaller than the minimum element
                minIndex = j # If true, setting the minimum index to the current index
        temp = list[minIndex] # Swapping the elements at indexes i and minIndex
        list[minIndex] = list[i]
        list[i] = temp
    echo "Sorted list: ", list # Printing the sorted list

var randomList: var seq[int] = random(1 .. 100, 10) # Generating a random list of 10 integers between 1 and 100
echo "Random list: ", randomList # Printing the unsorted list
selectionSort(randomList) # Calling the selectionSort proc to sort the list
# This is a complex code snippet in NIM
import tables # Importing the tables module for data storage

type # Defining a new type called 'Person'
  Person = object
    name: string # A string variable to store name
    age: int # An integer variable to store age

proc addPerson(persons: var openArray[Person]; newPerson: Person) =
  # A procedure to add a new person record to the persons array
  persons.add(newPerson) # Adding the new person to the array

var people: var openArray[Person] = @[] # Initializing an empty array to store people

let bob = Person(name: "Bob", age: 25) # Creating a new Person object
addPerson(people, bob) # Adding Bob to the people array

# Creating a new Person object and adding it to the people array in one line
addPerson(people, Person(name: "Alice", age: 30))

table = newTable("People", 100) # Creating a new table called "People" with a capacity of 100 records
for person in people: # Looping through each person in the array
  table.addRow(person.name, person.age) # Adding the person's name and age to the table
table.save("people_table.csv") # Saving the table to a CSV file

# Output: This code snippet demonstrates how to create a new type, add records to an array, and save data using the tables module in NIM programming language.
type
    Point* = object # Defines a Point object with asterisk notation, which denotes it as a reference object
        x*: int # Defines the 'x' variable of type int, with asterisk notation denoting it as a reference variable
        y*: int # Defines the 'y' variable of type int, with asterisk notation denoting it as a reference variable

# This section defines a procedure to calculate the distance between two points
proc distance*(p1: Point, p2: Point): float = # Defines a procedure named 'distance' with two parameters, both of type Point, and returns a float
    var
        x_diff*: int = p2.x - p1.x # Defines a 'x_diff' variable of type int and assigns it the value of the difference between p2's 'x' and p1's 'x'
        y_diff*: int = p2.y - p1.y # Defines a 'y_diff' variable of type int and assigns it the value of the difference between p2's 'y' and p1's 'y'
    return sqrt(x_diff * x_diff + y_diff * y_diff) # Returns the square root of the sum of the squares of the two differences (distance formula)

# This section defines a class to represent a rectangle shape using two points
type
    Rectangle* = object # Defines a Rectangle object with asterisk notation, which denotes it as a reference object
        upper_left*: Point # Defines an 'upper_left' variable of type Point, with asterisk notation denoting it as a reference variable
        lower_right*: Point # Defines an 'lower_right' variable of type Point, with asterisk notation denoting it as a reference variable
    # Defines a method to calculate the area of the rectangle
    method area*(): float = # Defines a method named 'area' with no parameters and returns a float
        var
            width*: int = lower_right.x - upper_left.x # Defines a 'width' variable of type int and assigns it the value of the difference between the 'x' coordinates of the two points
            height*: int = lower_right.y - upper_left.y # Defines a 'height' variable of type int and assigns it the value of the difference between the 'y' coordinates of the two points
        return width * height # Returns the product of the width and height, which is the area of the rectangle

# This section creates two Point objects and calculates the distance between them
var
    p1*: Point = Point(x: 3, y: 5) # Creates a Point object named 'p1' with 'x' coordinate of 3 and 'y' coordinate of 5
    p2*: Point = Point(x: 10, y: 8) # Creates a Point object named 'p2' with 'x' coordinate of 10 and 'y' coordinate of 8
echo "The distance between p1 and p2 is ", distance(p1, p2) # Prints the distance between 'p1' and 'p2' by calling the 'distance' procedure and concatenating it with a string
# Output: The distance between p1 and p2 is 8.602325267042627
# Note: The output may vary depending on the language used and its output format. This is just a possible example of an output.
# This is a function that generates a list of prime numbers using the
# Sieve of Eratosthenes algorithm
proc generate_prime_numbers(n: int): seq[int] =
    var marked: array[1..n, int] # array to mark numbers
    var primes: seq[int] = @[] # list of prime numbers
    for i in 2..n:
        if marked[i] == 0: # if number is not marked as composite, it is prime
            primes.add(i) # add prime number to list
            for j in countup(i*i, i, n): # mark all multiples of this prime as composite
                marked[j] = 1
    result = primes

# This is where the code execution starts
# Takes user input for range of numbers to generate prime numbers for
var input: int
input = parseNum(stdin.readLine("Enter upper limit for prime number generation: "))
echo "Prime numbers within range:"
for n in generate_prime_numbers(input):
    echo n
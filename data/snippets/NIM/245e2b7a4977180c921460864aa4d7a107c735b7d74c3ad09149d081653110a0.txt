proc mergeSort[A](arr: var seq[A]; low: int = 0; high: int = arr.len-1) =
  ## Sorts the given array using the merge sort algorithm
  ##
  ## Parameters:
  ## - arr: the array to be sorted
  ## - low: starting index of the array (default is 0)
  ## - high: ending index of the array (default is arr.len-1)
  if low < high:
    var mid = (low + high) div 2
    mergeSort(arr, low, mid)
    mergeSort(arr, mid + 1, high)
    merge(arr, low, mid, high)

proc merge[A](arr: var seq[A]; low: int; mid: int; high: int) =
  ## Merges two subarrays of arr, the first subarray is arr[low..mid], the second subarray is arr[mid+1..high]
  ##
  ## Parameters:
  ## - arr: the array to be merged
  ## - low: starting index of the first subarray
  ## - mid: ending index of the first subarray
  ## - high: ending index of the second subarray
  var tempArr = newSeq[A]()
  var i = low
  var j = mid + 1
  while i <= mid and j <= high:
    if arr[i] < arr[j]:
      tempArr.add(arr[i])
      i += 1
    else:
      tempArr.add(arr[j])
      j += 1
  while i <= mid:
    tempArr.add(arr[i])
    i += 1
  while j <= high:
    tempArr.add(arr[j])
    j += 1
  for k, val in tempArr.pairs(reversed = true):
    arr[low + k] = val
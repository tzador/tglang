# This code snippet showcases a function in Nim that performs a binary search on a given list of integers.

proc binarySearch(inputArray: array[int], searchItem: int): int =
    # This is the start of the binary search function.
    var startIndex = 0  # Setting the starting index.
    var endIndex = len(inputArray) - 1  # Setting the ending index.
    while startIndex <= endIndex:
        # Looping until the search item is found or the entire list has been searched.
        var midIndex = (startIndex + endIndex) / 2  # Finding the middle index of the list.
        if inputArray[midIndex] == searchItem:
            # If the middle item is the same as the search item, return its index.
            return midIndex
        elif inputArray[midIndex] < searchItem:
            # If the middle item is less than the search item, search the right half of the list.
            startIndex = midIndex + 1
        else:
            # If the middle item is greater than the search item, search the left half of the list.
            endIndex = midIndex - 1
    # If the search item is not found, return -1 to indicate it is not present in the list.
    return -1

# Example usage:
var list = [1, 3, 5, 7, 9, 11, 15]
echo binarySearch(list, 7)

# Output:
# 3
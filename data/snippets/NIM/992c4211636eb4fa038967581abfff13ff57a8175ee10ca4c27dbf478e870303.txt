# This code snippet shows how to implement a bubble sort algorithm in NIM programming language

# Define a procedure that takes in an array and returns the sorted array
proc bubbleSort(arr: array) : array =
  # Initialize a variable 'n' to hold the length of the array
  var n = arr.len - 1

  # Define a boolean variable to check if the array is sorted
  var isSorted = false

  # Start a while loop that will run until the array is sorted
  while not isSorted:
    # Set 'isSorted' to true to assume the array is sorted
    isSorted = true

    # Start a for loop to iterate through the array
    for i in 0..n:
      # Check if the current element is greater than the next element
      if arr[i] > arr[i + 1]:
        # Swap the elements if they're not in ascending order
        arr[i], arr[i + 1] = arr[i + 1], arr[i]

        # Set 'isSorted' to false to indicate that the array is not sorted yet
        isSorted = false

  # Once the array is sorted, return the array
  return arr

# Define an array to be sorted
var myArray = [5, 2, 7, 3, 9, 4]

# Call the bubbleSort procedure and assign the sorted array to a variable
var sortedArray = bubbleSort(myArray)

# Print the sorted array
echo sortedArray
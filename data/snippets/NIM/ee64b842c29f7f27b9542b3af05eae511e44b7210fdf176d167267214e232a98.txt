# This code snippet performs a binary search on a sorted array

# Defining the binary search procedure
proc binary_search(nums: seq[int], target: int): int =
  var low = 0                    # Starting index of the array
  var high = len(nums) - 1       # Ending index of the array
  
  while low <= high:             # Loop until low surpasses high
    var mid = (low + high) / 2   # Calculate the middle index
    
    if nums[mid] < target:       # Target is in the right half of the array
      low = mid + 1              # Update the starting index
    elif nums[mid] > target:     # Target is in the left half of the array
      high = mid - 1             # Update the ending index
    else:                        # Target is found at the middle index
      return mid                 # Return the index of the target
      
  return -1                      # Target not found, return -1
  
# Example usage
var numbers = [1, 5, 10, 23, 30, 40, 50]    # Sorted array
var target = 40                              # Target element to find
var index = binary_search(numbers, target)   # Perform the binary search
echo index                                   # Output: 5 (index of target element)
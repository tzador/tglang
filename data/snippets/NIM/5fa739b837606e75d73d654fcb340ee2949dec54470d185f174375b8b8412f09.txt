### This is a code snippet in NIM showcasing how to find the longest common subsequence of two strings

# Start by defining the two strings
var str1 = "programming language"
var str2 = "markup language"

# Create a 2D table to store the lengths of longest common subsequence
var table = [[0 for j in 0..(str2.len)] for i in 0..(str1.len)]

# Loop through the table to fill it with the lengths of longest common subsequence
for i in 0..(str1.len):
    for j in 0..(str2.len):
        if str1[i] == str2[j]:
            table[i][j] = table[i-1][j-1] + 1
        else:
            table[i][j] = max(table[i-1][j], table[i][j-1])

# Get the length of longest common subsequence
var length = table[str1.len-1][str2.len-1]

# Create an array to store the longest common subsequence
var lcs = newSeqOfCap[char](length)

# Loop through the table again to get the actual subsequence
var i = str1.len-1
var j = str2.len-1
while i >= 0 and j >= 0:
    if str1[i] == str2[j]:
        lcs[length-1] = str1[i]
        length -= 1
        i -= 1
        j -= 1
    else if table[i-1][j] > table[i][j-1]:
        i -= 1
    else:
        j -= 1

# Print the longest common subsequence
echo "The longest common subsequence is: ${lcs.str}"
# Here is a complex code snippet in NIM #
# This function generates a list of squares from 1 to n #

proc generateSquares(n: int): seq[int] =
    var squares: seq[int] = @[]
    for i in 1..n:
        squares.add(i*i)
    result = squares

# This function finds the sum of all squares in a given list #

proc findSumOfSquares(nums: seq[int]): int =
    var sum = 0
    for num in nums:
        sum += num*num
    result = sum

# Main function to call the generateSquares and findSumOfSquares functions #

proc main() =
    var n = 10
    var squaresList = generateSquares(n)
    var sum = findSumOfSquares(squaresList)
    echo "List of squares from 1 to ${n}: ", squaresList
    echo "Sum of squares: ", sum

# Call the main function to run the program #

main()
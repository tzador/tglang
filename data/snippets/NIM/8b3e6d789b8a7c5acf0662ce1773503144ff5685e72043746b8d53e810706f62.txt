const
# This sets up a couple of global variables used for the game

  MAX_ROW = 10  # Maximum number of rows for the game board
  MAX_COL = 10  # Maximum number of columns for the game board

var
# This sets up the game board and player information

  board: array[1 .. MAX_ROW, 1 .. MAX_COL] of int # 2D array to represent the game board, holds 0 or 1
  turn_counter: int = 0 # Keeps track of the number of turns played
  current_player: int = 1 # Keeps track of the current player (1 or 2)

# This is the main game loop
while true:
  # Prints the current board state
  for i in 1 .. MAX_ROW:
    for j in 1 .. MAX_COL:
      echo board[i, j] # Prints the value at each position on the board
    echo "" # Prints a blank line after each row
  
  # Checks if there are any sticks left on the board
  var sticks_left: bool = false
  for i in 1 .. MAX_ROW:
    for j in 1 .. MAX_COL:
      if board[i, j] == 1:
        sticks_left = true # If there are sticks left, sets the variable to true

  # If there are no sticks left, the game is over
  if not sticks_left:
    echo "Game over!"
    # Checks which player made the last move based on the turn counter
    if turn_counter mod 2 == 0:
      echo "Player 1 wins!"
    else:
      echo "Player 2 wins!"
    break # Exits the game loop

  # Asks the current player for their move
  echo "Player " & $current_player & "'s turn. Enter a row and column number to take a stick: "
  var row: int = readLine(stdin).parseInt() # Reads and parses the row number input
  var col: int = readLine(stdin).parseInt() # Reads and parses the column number input

  # Checks if the input is valid (within the board size and on a position with a stick)
  if 1 <= row <= MAX_ROW and 1 <= col <= MAX_COL and board[row, col] == 1:
    # Removes the stick at the specified position
    board[row, col] = 0
    turn_counter += 1 # Increments the turn counter
  else:
    echo "Invalid move. Please try again."
    continue # Restarts the game loop if the input is not valid

  # Changes to the next player
  if current_player == 1:
    current_player = 2
  else:
    current_player = 1
end
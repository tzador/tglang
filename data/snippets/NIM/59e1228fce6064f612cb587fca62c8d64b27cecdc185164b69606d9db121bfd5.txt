# Nim is a statically typed, high-level, multiparadigm programming language.

import tables, math # Importing standard libraries

# Creating a type for a university student
type
  UniversityStudent = object
    name: string
    major: string
    GPA: float

# Function to calculate final grade for a student based on their GPA
proc calculateGrade(student: UniversityStudent): int =
  result = round(student.GPA * 10)

# Creating an array of students
var students: array[3, UniversityStudent]

# Loop to populate the array with student objects
for i in 0..2:
  # Creating new student object and assigning values to its attributes
  var newStudent = UniversityStudent()
  newStudent.name = "John Doe " & $i
  newStudent.major = "Computer Science"
  newStudent.GPA = random(0.5..4.0)

  # Adding student object to the array
  students[i] = newStudent

# Sorting the array based on GPA using a custom comparator
students.sort(cmp: (x, y) -> x.GPA.cmp(y.GPA))

# Printing out the final grades for each student
for student in students:
  echo student.name & "'s final grade is: " & $(calculateGrade(student))
# This is a program that plays the game of Nim
# Nim is a mathematical game of strategy in which two players take turns removing objects from distinct piles until none are remaining.
# The player who removes the last object loses.
proc main() =
    # variables to keep track of game state
    var playerTurn = 1
    var pileSizes = @[ 5, 6, 7 ] # three piles with initial sizes
    var totalPiles = pileSizes.len # total number of piles
    var validMove = false # flag to check if move is valid
    var selectedPile = 0 # pile selected by player
    var selectedNumber = 0 # number of objects to remove

    echo "Welcome to Nim"
    echo "Here are the current pile sizes: ", pileSizes

    # loop until there are no more objects left in the piles
    while pileSizes != @[ 0, 0, 0 ]:
        # player 1's turn
        if playerTurn == 1:
            echo "Player 1, select a pile and number of objects to remove"
            # loop until a valid move is made
            while not validMove:
                # get player's choice from user input
                selectedPile = readInt("Pile: ")
                selectedNumber = readInt("Number of objects to remove: ")
                
                # check if pile exists and has enough objects to remove
                if selectedPile > 0 and selectedPile <= totalPiles and pileSizes[selectedPile - 1] >= selectedNumber:
                    # update pile size
                    pileSizes[selectedPile - 1] -= selectedNumber
                    validMove = true # set flag to true, move is valid
                else:
                    echo "Invalid move. Please try again."

        # player 2's turn
        else:
            echo "Player 2, select a pile and number of objects to remove"
            # loop until a valid move is made
            while not validMove:
                # get player's choice from user input
                selectedPile = readInt("Pile: ")
                selectedNumber = readInt("Number of objects to remove: ")
                
                # check if pile exists and has enough objects to remove
                if selectedPile > 0 and selectedPile <= totalPiles and pileSizes[selectedPile - 1] >= selectedNumber:
                    # update pile size
                    pileSizes[selectedPile - 1] -= selectedNumber
                    validMove = true # set flag to true, move is valid
                else:
                    echo "Invalid move. Please try again."

        # switch player turn
        playerTurn = 3 - playerTurn # 3 - 1 = 2, 3 - 2 = 1

        # reset validMove flag for next turn
        validMove = false

        # print current pile sizes
        echo "Here are the current pile sizes: ", pileSizes

    # end of game, check winner
    if playerTurn == 1:
        echo "Player 1 wins!"
    else:
        echo "Player 2 wins!"

# call the main function
main()
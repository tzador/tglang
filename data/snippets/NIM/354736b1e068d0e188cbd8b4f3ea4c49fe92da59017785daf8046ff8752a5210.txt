# This is a complex code snippet in NIM

# Dependencies
import json
from math import pi, log

# Constants
const
  MAX_ITERATIONS: int = 1000
  MAX_VALUE: float = 10.0
  MIN_VALUE: float = 0.01

# Variables
var
  values: seq[float]
  results: seq[float]

# Function to calculate result
func calculateResult(x: float): float =
    let
      result = 0.0
    for i in 0..MAX_ITERATIONS:
      result += x**(i/2) * log(i)

    result = result / pi

    # Check for out of bounds values
    if result > MAX_VALUE:
      result = MAX_VALUE
    elif result < MIN_VALUE:
      result = MIN_VALUE

    return result

# Main program
when isMainModule:
  # Initialize values
  values = @[1.0, 2.0, 3.0, 4.0, 5.0]
  results = @[]

  # Calculate results
  for x in values:
    results.add(calculateResult(x))

  # Print results in JSON format
  echo "Results: "
  echo results
  echo "Results in JSON format: "
  echo json.leafs(results)
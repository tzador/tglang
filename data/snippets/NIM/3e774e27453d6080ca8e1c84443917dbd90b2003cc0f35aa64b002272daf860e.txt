type
  # Represents a person with a name and age
  Person = object
    name*: string
    age*: int

  # Represents a list of persons
  PersonList = seq[Person]

# Calculates the average age of a list of persons
proc averageAge(persons: PersonList): float =
  var total = 0
  for person in persons:
    total += person.age
  result = total.float / persons.len.float

# Prints out the oldest person's name from a list of persons
proc oldestPersonName(persons: PersonList) =
  var oldestAge = 0
  var oldestName = ""
  for person in persons:
    if person.age > oldestAge:
      oldestAge = person.age
      oldestName = person.name
  echo "The oldest person is " & oldestName

# Creates a list of 5 persons with different ages
var persons = @[Person(name: "John", age: 32), Person(name: "Jane", age: 27), Person(name: "Bob", age: 45), Person(name: "Mary", age: 20), Person(name: "Tom", age: 55)]

# Calls the averageAge and oldestPersonName procedures
echo "The average age is " & averageAge(persons)
echo oldestPersonName(persons)
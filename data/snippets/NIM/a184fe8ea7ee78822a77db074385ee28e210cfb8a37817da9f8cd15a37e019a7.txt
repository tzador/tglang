type
  # Defining a custom Currency type
  Currency = tuple[code: string, rate: float]

method addRates(rate1: float, rate2: float): float =
  # Calculates the sum of two rates
  result = rate1 + rate2

proc convertCurrency(amount: float, fromCurrency: Currency, toCurrency: Currency): float =
  # Converts an amount from one currency to another
  # Checks if the codes of the currencies match
  if fromCurrency.code == toCurrency.code:
    # If they do, no conversion is needed
    result = amount
  else:
    # Calculates the exchange rate between the two currencies
    exchangeRate = toCurrency.rate / fromCurrency.rate
    # Converts the amount using the exchange rate
    result = amount * exchangeRate

# Example using the methods and proc defined above
var euro = ("EUR", 1.12) # Defining a Currency tuple for Euro
var usd = ("USD", 1.33) # Defining a Currency tuple for US Dollar
var amount = 50 # Amount to be converted
var convertedAmount = convertCurrency(amount, usd, euro) # Converting from USD to EUR
echo "Converted amount in Euro: ", convertedAmount  # Printing the converted amount
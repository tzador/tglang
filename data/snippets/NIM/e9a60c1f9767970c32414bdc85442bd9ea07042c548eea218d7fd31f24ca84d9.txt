# This is a code snippet in NIM
# It uses iterators and array manipulation to create a multidimensional array

var data: array[2, 2, 3] = [[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]]

# Define an iterator to loop through the first dimension of the array
iterator firstDimIterator(index: int): int =
  var i = -1 # Define a variable to use as the initial index
  result = index # Set the initial index value to the passed in index

  # Define a proc that checks the index and returns the next value if applicable
  proc incIndex() =
    if i != data.highIndex(0): # Check if the current index is not the highest possible in the first dimension
      i += 1 # Increment the index
      result += 1 # Update the result with the incremented index

  # Return the proc as the iterator
  do: incIndex

# Define an iterator to loop through the second dimension of the array
iterator secondDimIterator(index: int): int =
  var j = -1 # Define a variable to use as the initial index
  result = index # Set the initial index value to the passed in index

  # Define a proc that checks the index and returns the next value if applicable
  proc incIndex() =
    if j != data.highIndex(1): # Check if the current index is not the highest possible in the second dimension
      j += 1 # Increment the index
      result += 1 # Update the result with the incremented index

  # Return the proc as the iterator
  do: incIndex

# Define an iterator to loop through the third dimension of the array
iterator thirdDimIterator(index: int): int =
  var k = -1 # Define a variable to use as the initial index
  result = index # Set the initial index value to the passed in index

  # Define a proc that checks the index and returns the next value if applicable
  proc incIndex() =
    if k != data.highIndex(2): # Check if the current index is not the highest possible in the third dimension
      k += 1 # Increment the index
      result += 1 # Update the result with the incremented index

  # Return the proc as the iterator
  do: incIndex

# Use iterators and array manipulation to print out the multidimensional array in a formatted way
for index in data.firstDimIterator(0): # Use the first dimension iterator to loop through the array
  for index2 in data.secondDimIterator(index): # Use the second dimension iterator with the current index from the first dimension
    for index3 in data.thirdDimIterator(index2): # Use the third dimension iterator with the current index from the second dimension
      echo "Element at index [", index, ", ", index2, ", ", index3, "] is ", data[index, index2, index3] # Print out the value at the current index

# Output:
# Element at index [0, 0, 0] is 1
# Element at index [0, 0, 1] is 2
# Element at index [0, 0, 2] is 3
# Element at index [0, 1, 0] is 4
# Element at index [0, 1, 1] is 5
# Element at index [0, 1, 2] is 6
# Element at index [1, 0, 0] is 7
# Element at index [1, 0, 1] is 8
# Element at index [1, 0, 2] is 9
# Element at index [1, 1, 0] is 10
# Element at index [1, 1, 1] is 11
# Element at index [1, 1, 2] is 12
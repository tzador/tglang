# This code snippet implements a binary search algorithm for a sorted array of integers.

# Defining the procedure for binary search.
proc binarySearch(inputArray: array, value: int): int =
    var low = 0
    var high = inputArray.len - 1 # Setting the upper and lower bounds for the search.
    var mid = 0

    while low <= high:
        mid = (low + high) div 2 # Finding the midpoint of the current subarray.
        if inputArray[mid] == value: # Checking if the midpoint is the desired value.
            return mid # Returning the index of the value if found.
        elif inputArray[mid] < value:  # If the value is smaller, updating the lower bound.
            low = mid + 1
        else: # If the value is larger, updating the upper bound.
            high = mid - 1

    return -1 # Return -1 if the value is not found in the array.

# Defining an example array and value to search for.
var testArray = [1, 3, 5, 7, 9, 11, 13, 15, 17]
var searchValue = 9

echo "Index of", searchValue, "in the array:", binarySearch(testArray, searchValue) # Printing the result of the search.
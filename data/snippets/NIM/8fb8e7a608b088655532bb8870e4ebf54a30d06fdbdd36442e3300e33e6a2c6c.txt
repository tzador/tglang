let
    cards[5] = @{Immutable} [1, 2, 3, 4, 5] ## creates an immutable array of integers
    player = "John" ## assigns a string value to a variable
    score = 0

proc checkCards(card1, card2: int): bool =
    ## checks if the sum of two cards is even
    if (card1 + card2) mod 2 == 0:
        return true
    else:
        return false

proc playRound(): bool =
    ## randomly selects two cards from the array
    randIndex1 = uniform(0, cards.high)
    randIndex2 = uniform(0, cards.high)
    ## checks if the sum of the cards is even
    if checkCards(cards[randIndex1], cards[randIndex2]):
        ## if the sum is even, adds 1 to the player's score
        score += 1
        return true
    else:
        return false

proc printResults(rounds: int): void =
    ## prints the results of the game
    if score > rounds div 2:
        ## if the player's score is more than half of the total rounds, they win
        echo "$player won the game with a score of $score"
    else:
        ## otherwise, the computer wins
        echo "The computer won the game with a score of $(rounds-score)"

## the main game loop
while true:
    ## asks for the number of rounds to play
    echo "How many rounds do you want to play?"
    rounds = readInt()
    ## runs the game for the specified number of rounds
    for i in 0..rounds:
        if not playRound():
            ## if the player loses a round, the game ends
            ## prints the final results
            printResults(i)
            break
    ## asks the player if they want to play again
    echo "Do you want to play again? (y/n)"
    playAgain = readChar()
    if playAgain == 'n':
        ## if the player chooses to not play again, the game ends
        exit(0)
    score = 0 ## resets the player's score for the next game
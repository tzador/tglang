# This code is used to generate a list of prime numbers up to a given limit
proc generatePrimes(limit: int): seq[int] =
    var primes = @[]
    i = 2
    for i in 2..limit:
        var isPrime = true
        for p in primes:
            if i mod p == 0:
                isPrime = false
                break
        if isPrime:
            primes.add(i)
    result = primes

echo generatePrimes(1000)

# Explanation:
# - The code starts by defining a procedure (proc) named generatePrimes, which takes in a parameter named limit of type int.
# - Inside the procedure, we initialize an empty sequence (array) named primes.
# - Next, we start a for loop, which iterates through the range of numbers from 2 to the given limit, inclusive.
# - Inside the loop, we initialize a boolean variable named isPrime and set it to true.
# - Then, we start another for loop, which iterates through the elements in the primes sequence.
# - Inside this loop, we check if the current number (i) is divisible by any of the prime numbers in the primes sequence.
# - If it is divisible, we set the isPrime variable to false and exit the loop using the break statement.
# - If the number is not divisible by any of the prime numbers, the isPrime variable remains true.
# - After the inner loop, we check the isPrime variable and if it is still true, we add the current number to the primes sequence using the .add() method.
# - Finally, we assign the result of the generatePrimes procedure, which is the primes sequence, to the result variable and output it using the echo statement.
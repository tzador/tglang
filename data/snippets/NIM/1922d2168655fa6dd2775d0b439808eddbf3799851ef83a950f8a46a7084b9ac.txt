type
  //The Point object represents a 2-dimensional point with x and y coordinates
  Point = object
    x, y: float //The x and y coordinates are both of type float
  
  //The Circle object represents a circle in 2-dimensional space
  Circle = object
    center: Point //The center of the circle is a Point object
    radius: float //The radius of the circle is of type float
  
#proc newCircle*(x, y, r: float): Circle =
  //Initialize a new Circle object with center at (x, y) and radius r
  result.center.x = x //Set the x coordinate of the center point
  result.center.y = y //Set the y coordinate of the center point
  result.radius = r //Set the radius of the circle
  return result
  
#proc area*(c: Circle): float =
  //Calculate the area of the circle
  return 3.141 * c.radius ** 2 //Formula for calculating the area of a circle (πr^2)
  
#proc circumference*(c: Circle): float =
  //Calculate the circumference of the circle
  return 2 * 3.141 * c.radius //Formula for calculating the circumference of a circle (2πr)

#proc contains*(c: Circle; p: Point): bool =
  //Check if the circle contains the given point
  return (p.x - c.center.x) ** 2 + (p.y - c.center.y) ** 2 <= c.radius ** 2
  //Calculates the distance between the center of the circle and the given point
  //If the distance is less than or equal to the radius, the point is inside the circle
# Define a function to generate a random number between two given limits
proc generate_random_num(var lower_limit, upper_limit: int): int =
    # Import the random module
    import random
    
    # Generate a random number within the given limits
    var random_num = random.randint(lower_limit, upper_limit)
    
    # Return the random number
    return random_num

# Define a function to check if the generated number is prime
proc is_prime(var number: int): bool =
    # Initialize a counter to count the factors of the number
    var factors = 0
    
    # Loop through all numbers up to the given number
    for i in 2..number:
        # Check if i is a factor of the number
        if number % i == 0:
            # Increase the counter if i is a factor
            factors += 1
    
    # If the number has only two factors (1 and itself), it is prime
    if factors == 2:
        return true
    else:
        return false

# Define a function to generate a list of prime numbers within a given range
proc generate_prime_list(var lower_limit, upper_limit: int): seq[int] =
    # Initialize a list to store the prime numbers
    var prime_list: seq[int] = @[]
    
    # Loop through all numbers within the given range
    for i in lower_limit..upper_limit:
        # Check if the number is prime using the is_prime function
        if is_prime(i):
            # Add the prime number to the list
            prime_list.add(i)
        
    # Return the list of prime numbers
    return prime_list

# Generate a random number between 1 and 100
var num = generate_random_num(1, 100)

# Print the number
echo "Generated Number: ", num

# Generate a list of prime numbers within the range of 1 and the generated number
var primes = generate_prime_list(1, num)

# Print the list of prime numbers
echo "List of Prime Numbers from 1 to ", num, ": ", primes
# This code snippet implements a sorting algorithm in Nim
proc quicksort[T](arr: seq[T]) =
    if len(arr) <= 1:
        return arr
    var pivot = arr[0]
    var smaller, larger: seq[T]
    for i in 1 ..< len(arr):
        if arr[i] < pivot:
            smaller.add(arr[i])
        else:
            larger.add(arr[i])
    result = quicksort(smaller) & [pivot] & quicksort(larger)
    
# Example usage
var numbers = [3, 6, 1, 9, 2]
var sorted = quicksort(numbers) # result: [1, 2, 3, 6, 9]

# This code snippet calculates the factorial of a given number in Nim
proc factorial(x: int): int = 
    if x == 0:
        return 1
    return x * factorial(x - 1)
    
# Example usage
var n = 6
var fact = factorial(n) # result: 720
# This is an annotated code snippet in NIM.
# `var` keyword is used to declare variables.
var name: string = "John Smith"
# `for` loop with `in` keyword is used to iterate through a sequence.
# In this case, it will iterate through each character in `name` string.
for c in name:
  # print is used to output a value to the console.
  # `$` is used to interpolate variables in the output string.
  print("Current character: $c")
  
# `proc` keyword is used to declare a procedure (function).
# It takes in a parameter `n` of type `int` and returns an `int`.
proc fibonacci(n: int): int =
  # `if` statement is used for conditional logic.
  if n == 0 or n == 1:
    # `return` keyword is used to return a value from the procedure.
    return n
  else:
    # Recursion is used to calculate the fibonacci sequence.
    # `fibonacci` procedure calls itself with `n-1` and `n-2`.
    return fibonacci(n-1) + fibonacci(n-2)
    
# `echo` is used to output a value without a newline character at the end.
# `&` is used to concatenate strings.
echo "The fibonacci sequence up to 10 numbers: "
# `for` loop is used to iterate from 0 to 9 (10 numbers).
for i in 0..9:
  # `$(expression)` is used to evaluate an expression and convert it to a string.
  # `fibonacci` procedure is called with `i` as the parameter.
  # The output string is concatenated with " " (space) and printed to the console.
  echo $(fibonacci(i)) & " "
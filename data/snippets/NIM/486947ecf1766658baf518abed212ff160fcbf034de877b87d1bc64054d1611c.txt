# This program generates a random password based on
# user input for length and complexity

# Importing the required library
import random

# Getting user input for password length
echo "How long would you like your password to be (minimum 8 characters)? "
let length_input = readLine(stdin).parseInt()

# Validating user input
if length_input < 8:
  echo "Minimum password length must be at least 8 characters!"
  quit(1)
  
# Getting user input for password complexity
echo "How complex would you like your password to be (choose from 1-3)? "
let complexity_input = readLine(stdin).parseInt()

if complexity_input > 3:
  echo "Password complexity cannot be greater than 3!"
  quit(1)
  
# Lists of characters for each complexity level
let lower_chars = ['a' .. 'z']
let upper_chars = ['A' .. 'Z']
let number_chars = ['0' .. '9']
let special_chars = ['!' .. '/'] ++ [':' .. '@'] ++ ['[' .. '`'] ++ ['{' .. '~']

# Empty list for final password
var password = []

# Generating random characters based on complexity input
for i in 0 ..< length_input:
  if complexity_input == 1:
    password.add(lower_chars[random.randint(0, lower_chars.len())])
  elif complexity_input == 2:
    password.add(lower_chars[random.randint(0, lower_chars.len())])
    password.add(upper_chars[random.randint(0, upper_chars.len())])
  else:
    password.add(lower_chars[random.randint(0, lower_chars.len())])
    password.add(upper_chars[random.randint(0, upper_chars.len())])
    password.add(number_chars[random.randint(0, number_chars.len())])
    password.add(special_chars[random.randint(0, special_chars.len())])

# Creating a string from the password list
let final_password = password.join("")

# Printing the generated password
echo "Your random password is: " & final_password

# Sample Output:
# How long would you like your password to be (minimum 8 characters)? 12
# How complex would you like your password to be (choose from 1-3)? 3
# Your random password is: F3c!o9n2Og#w
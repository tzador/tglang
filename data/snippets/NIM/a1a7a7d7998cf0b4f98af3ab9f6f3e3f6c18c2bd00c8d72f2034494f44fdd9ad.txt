type
    State = enum [Uninitialized, Initialized]
    # A custom type for representing different states

var
    currentState: State = Uninitialized  # Variable declaration and initialization to the Uninitialized state

proc initializeState*(var state: State): State = 
    # A procedure that takes in a State variable by reference
    # and changes the value to Initialized state
    result = Initialized
    state = Initialized
    # Change the value of the passed in State variable to Initialized
    # and return the new value

# Testing the procedure
assert(initializeState(currentState) == Initialized)
# Assert statement to ensure that the output of the procedure is the expected Initialized state

echo "Successfully Initialized state: ", currentState
# Print statement to show that the state has been successfully changed to Initialized
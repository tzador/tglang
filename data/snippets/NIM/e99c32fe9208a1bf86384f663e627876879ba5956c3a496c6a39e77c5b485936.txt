# This is a recursive function to calculate the factorial of a number
# It uses a helper function to keep track of the current value and the factorial value
# Input: n - number whose factorial is to be calculated
# Output: n! - factorial of n

proc factorial(n: int): int =
    # The helper function takes in two parameters, current value and factorial value
    proc helper(current, fact: int): int =
        if current == 0: # base case, when the current value reaches 0, return factorial value
            result = fact
        else:
            result = helper(current - 1, current * fact) # recursively call helper function with updated parameters
    # Call the helper function with initial parameters of n and 1
    result = helper(n, 1) # result will hold the final factorial value
    # Return the final result
    result
# This is a code snippet in NIM, a statically typed compiled language

# Define a custom type, 'Point', with two fields: 'x' and 'y'
type
  Point = object
    x: int
    y: int

# Define a function, 'create_points', that takes in two ints and returns a tuple of Points
# The function uses inline syntax to create Point objects
func create_points(x, y: int): tuple[Point] =
  result = (Point(x: x, y: y), Point(x: y, y: x))

# Create a new variable, 'points', and assign the result of 'create_points'
var points = create_points(10, 5)

# Print out the values of 'points' using the index notation
echo points[0].x # Output: 10
echo points[0].y # Output: 5
echo points[1].x # Output: 5
echo points[1].y # Output: 10
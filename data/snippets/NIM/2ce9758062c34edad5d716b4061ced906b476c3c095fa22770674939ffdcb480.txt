proc quickSort(arr: seq[int]) =
    ## `quickSort` procedure takes in an array of integers and uses the quicksort algorithm to sort it in ascending order

    when len(arr) > 1:
        var pivot = arr[0]
        var smaller, equal, larger: seq[int] = @[], @[pivot], @[]
        
        for elem in arr[1..len(arr)-1]:
            if elem < pivot: smaller.add(elem)
            elif elem > pivot: larger.add(elem)
            else: equal.add(elem)
        
        return quickSort(smaller) & equal & quickSort(larger)
    
    else:
        return arr
        
## `main` function to test `quickSort` procedure
proc main() =
    ## `main` function creates an array of random integers and calls `quickSort` to sort it
    
    var arr: seq[int] = @[]
    for i in 0..10:
        arr.add(rand(100))
    
    echo "Unsorted array: ", arr
    echo "Sorted array: ", quickSort(arr)
    
main()
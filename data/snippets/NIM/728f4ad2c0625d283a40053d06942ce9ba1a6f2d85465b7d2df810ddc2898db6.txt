#  This code snippet is for generating a random prime number using the Miller-Rabin algorithm.
#  It takes in a range of numbers and returns a random prime number within that range.

# Define a function for checking if a given number is prime
proc isPrime(num : int) : bool =
  # If num is less than 2, return false as 0 and 1 are not prime
  if num < 2:
    return false

  # If num is 2, return true as 2 is the only even prime number
  if num == 2:
    return true

  # If num is even, return false as even numbers (except 2) are not prime
  if num mod 2 == 0:
    return false

  # Use the Miller-Rabin algorithm to check for primality
  # Set the variables s and d such that s is the maximum power of 2 that divides num - 1 and d is (num - 1) divided by s
  # Since we want to generate a random prime number, we will use n, a and t as our input variables
  # n is the upper bound of the range of numbers from which to generate a random prime
  # a is the base for the Miller-Rabin algorithm and can be any random number between 2 and n - 2
  # t is the number of iterations for the Miller-Rabin algorithm and can be set to a value greater than or equal to 1
  var s,d,a : int
  var n,t : int = 20
  s,d = num - 1,1
  while s mod 2 == 0:
    s = s div 2
    d += 1

  # Run the Miller-Rabin algorithm for t iterations
  for i in 1..t:
    a = rand(2..n-2) # Generate a random number between 2 and n - 2
    if powMod(a,s,num) == 1:
      continue
    found := false
    for k in 0..d-1:
      if powMod(a,pow(2,k)*s,num) == num - 1:
        found = true
        break
    if not found:
      return false

  return true # If the Miller-Rabin algorithm does not find any composite witnesses after t iterations, the number is highly likely to be prime

# Define a function for generating a random prime number within a given range
proc generateRandomPrime(range : tuple[int,int]) : int =
  var low,high : int
  low,high = range[0],range[1] # Set the lower and upper bounds of the range
  # Generate a random number within the range
  var num : int = rand(low..high)
  # Use a while loop to continuously generate new random numbers until a prime number is found
  while not isPrime(num):
    num = rand(low..high)
  return num

# Generate a random prime number within the range 50 and 100
echo generateRandomPrime((50,100))
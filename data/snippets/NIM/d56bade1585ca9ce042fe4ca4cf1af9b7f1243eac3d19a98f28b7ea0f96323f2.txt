# This code snippet creates a function that calculates the factorial of a number using recursion

proc factorial(n: int): int =
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1) # Recursive call to the function itself

# This code snippet creates a function that calculates n choose k using dynamic programming

proc nChooseK(n: int, k: int): int =
  var dp: array[0..n + 1, 0..k + 1] # Create a dynamic programming table
  for i in 1..n:
    for j in 0..min(i, k):
      if j == 0 or j == i:
        dp[i, j] = 1
      else:
        dp[i, j] = dp[i - 1, j - 1] + dp[i - 1, j] # Use previously calculated values
  return dp[n, k]

echo factorial(5) # Output: 120
echo nChooseK(5, 2) # Output: 10
# This is a comment line in NIM

# Declare a variable of type integer with an initial value
var x: int = 5;

# Declare a constant variable
const y = 10;

# Define a procedure with two parameters
proc add(x: int, y: int) =
    return x + y

# Declare a slice of strings
var fruits: seq[string] = @["apple", "banana", "orange"]

# Loop through the slice and print each element
for fruit in fruits:
    echo fruit

# Define a generic type
type Generic[T,g] =
    object
        data: T
        group: g

# Instantiate a generic type with string and int parameters
var person: Generic[string,int] =
    Generic[string,int](
        data: "John",
        group: 16
    )

# Define a template that accepts any type and prints its value
template printValue(value: typed) =
    echo value

# Call the template with an integer value
printValue(5)

# Call the template with a string value
printValue("Hello World")

# Define an object with a method
type Person = object
    name: string
    age: int
    # Define a method to get the person's information
    method getInfo(): string = "Name: " & self.name & "\nAge: " & $self.age

# Instantiate a Person object with name and age
var person: Person = Person(name: "John", age: 25)

# Call the method to get the person's information
echo person.getInfo()
# The following code snippet sorts a list of numbers using the bubble sort algorithm
# The code uses the Nim programming language, a statically typed language with a powerful metaprogramming system and a focus on performance and expressiveness

# Define a procedure to sort a list of numbers using the bubble sort algorithm
proc bubbleSort(numbers: seq[int]): seq[int] =
    # Define a local variable to store the length of the list
    var length = len(numbers)

    # Define a local boolean variable to track if any swaps occurred during a pass through the list
    var swapped = true

    # Loop through the list until no swaps occur, indicating that the list is fully sorted
    while swapped:
        # Set swapped to false as a default before each pass through the list
        swapped = false

        # Loop through the list and compare each pair of adjacent numbers
        for i in 0 .. length - 2:
            # If the first number is larger than the second number, swap them and set swapped to true
            if numbers[i] > numbers[i+1]:
                numbers[i], numbers[i+1] = numbers[i+1], numbers[i]
                swapped = true

    # Return the sorted list
    return numbers

# Create a test list of numbers
var testList = @[4, 2, 7, 1, 9, 5]

# Call the bubbleSort procedure and assign the sorted list to a variable
var sortedList = bubbleSort(testList)

# Print the sorted list
echo(sortedList)  # Output: [1, 2, 4, 5, 7, 9]
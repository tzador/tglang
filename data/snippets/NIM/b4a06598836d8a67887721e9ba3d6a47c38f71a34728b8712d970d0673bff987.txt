proc binarySearch*(seq: seq[int], target: int): int =
    # This is a recursive binary search algorithm
    # seq is an ordered sequence of numbers
    # target is the number we're searching for
    var low = 0 # The lowest index in the sequence
    var high = seq.high # The highest index in the sequence
    while low <= high:
        var mid = (low + high) div 2 # Find the middle index
        if seq[mid] == target: # If middle element is equal to target, return index
            return mid
        elif seq[mid] < target: # If middle element is less than target, search the right half
            low = mid + 1
        else: # If middle element is greater than target, search the left half
            high = mid - 1
    return -1 # If target is not found, return -1
let numbers = @[1, 3, 5, 7, 9, 11, 13] # Sample sequence of numbers
let target = 11 # The number we're searching for
echo "Index of target: ", binarySearch(numbers, target)
#!/bin/sh
#This is a simple shell script to list all files in a directory and its subdirectories, with their respective permissions, owner, and size.

#The find command is used to search for files recursively.
#The -type f flag is used to specify that we only want to search for regular files.
#The -print0 flag is used to print the results separated by null characters, instead of newline characters.
#The while loop is used to iterate through each file found by the find command.
find . -type f -print0 | while read -d $'\0' file
do
    #The stat command is used to get the file's permissions, owner, and size.
    stat_output=$(stat -c '%a %U %s' "$file")

    #The grep command is used to search for a specific pattern in the stat command's output.
    #In this case, we are looking for the file's permissions.
    #The awk command is used to extract the permissions from the grep command's output.
    #The tr command is used to replace all spaces with a single space for formatting purposes.
    file_perm=$(echo "$stat_output" | grep -o '[0-9]\{3\}')
    file_perm=$(echo "$file_perm" | awk '{print $1}')
    file_perm=$(echo "$file_perm" | tr -s " ")

    #The cut command is used to extract the owner's username from the stat command's output.
    file_owner=$(echo "$stat_output" | cut -d " " -f 2)

    #The wc command is used to count the number of blocks the file occupies.
    #Since a block is typically 512 bytes, we multiply the block count by 512 to get the file's size in bytes.
    file_size=$(echo "$stat_output" | wc -l)
    file_size=$(expr $file_size \* 512)

    #Print the file's information in the format "Permissions Owner Size Filename"
    #The %s placeholder is used to print the file's name, and the variables are passed in the correct order.
    printf "%s %s %s %s \n" $file_perm $file_owner $file_size %s "$file"
done
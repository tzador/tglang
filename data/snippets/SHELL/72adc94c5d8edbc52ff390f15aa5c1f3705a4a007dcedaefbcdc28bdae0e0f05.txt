#This is a code snippet written in SHELL, a command language used in Unix-based systems.

#First, we define variables to store our inputs.
NAME="John"   #Input 1: Name
AGE=25        #Input 2: Age

#Next, we create an if statement to check if the age is valid.
if [ $AGE -gt 0 ] || [ $AGE -lt 120 ]; then
    #The age is valid, so we proceed with the rest of our code.
    echo "$NAME is $AGE years old."   #Output: John is 25 years old.
else
    #The age is not valid, so we exit the script with an error message.
    echo "Please enter a valid age."  #Output: Please enter a valid age.
    exit 1   #Exit the script with an error code of 1.
fi

#Next, we create a function to check if a given number is prime.
#This function takes in one parameter, NUM, and returns a boolean value.
is_prime() {
    local NUM=$1   #Store the parameter in a local variable.
    if [ $NUM -lt 2 ]; then   #If the number is less than 2, it is not prime.
        return 1   #Return false.
    fi
    for ((i = 2; i < NUM; i++)); do   #Loop through all numbers from 2 to NUM-1.
        if ((NUM % i == 0)); then   #If NUM is divisible by i, it is not prime.
            return 1   #Return false.
        fi
    done
    return 0   #If the loop finishes without returning false, the number is prime. Return true.
}

#Finally, we call the is_prime function and print the result.
if is_prime 17; then   #Passing in 17 as the parameter.
    echo "17 is a prime number."   #Output: 17 is a prime number.
else
    echo "17 is not a prime number."   #Output: 17 is not a prime number.
fi
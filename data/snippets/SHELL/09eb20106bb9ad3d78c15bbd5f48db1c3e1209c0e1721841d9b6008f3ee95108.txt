#!/bin/bash

#This is a multi-line shell script that utilizes multiple functions
#and commands to perform various tasks.

#Function to check if a directory exists, if not, it will create one.
function check_directory(){
    if [ -d "$1" ]; then
        echo "Directory $1 exists"
        return 0
    else
        mkdir $1
        echo "Directory $1 created"
        return 1
    fi
}

#Function to check if a file exists, if not, it will create one.
function check_file(){
    if [ -f "$1" ]; then
        echo "File $1 exists"
        return 0
    else
        touch $1
        echo "File $1 created"
        return 1
    fi
}

#Function to perform a series of commands on a file.
function perform_commands(){
    input_file=$1
    output_file=$2
    #Check if the input file exists
    check_file $input_file
    #Check if the output file exists
    check_file $output_file
    #Print the content of the input file
    cat $input_file
    #Copy the input file to the output file
    cp $input_file $output_file
    #Remove the input file
    rm $input_file
}

#Function to print a list of all files in a directory.
function print_files(){
    directory=$1
    #Check if the directory exists
    check_directory $directory
    #Print the list of files
    ls $directory
}

#Function to count the number of lines in a file and output the result.
function count_lines(){
    file=$1
    #Check if the file exists
    check_file $file
    #Count the lines using the wc command
    lines=$(wc -l $file | awk '{print $1}')
    #Print the result
    echo "There are $lines lines in $file"
}

#Main function that calls all other functions.
function main(){
    #Create a new directory
    new_directory="new_dir"
    check_directory $new_directory
    cd $new_directory
    #Create a new file
    new_file="new_file.txt"
    check_file $new_file
    #Add some content to the new file
    echo "Hello, this is a new file" > $new_file
    #Print the list of files in the current directory
    print_files .
    #Perform a series of commands on the new file
    perform_commands $new_file "output_file.txt"
    #Count the number of lines in the output file
    count_lines "output_file.txt"
}

#Call the main function
main
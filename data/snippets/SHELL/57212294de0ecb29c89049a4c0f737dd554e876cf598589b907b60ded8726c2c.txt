#!/bin/sh                                      # Shebang line indicating the shell to be used

declare -a colors=(                             # Declaring an array variable called 'colors'
    "red"                                       # First element of the array
    "green"                                     # Second element of the array
    "blue"                                      # Third element of the array
)

for color in ${colors[@]}; do                    # Using a for loop to iterate through the array
    echo "The color is ${color}!"               # Outputting a string with the value of each element
done

read -p "Enter your name: " name                 # Prompting the user for input and storing it in the variable 'name'

if [ "${name}" == "John" ]; then                 # Using an if statement to check if the input is "John"
    echo "Hello John!"                           # Outputting a greeting if the condition is met
else
    echo "Hello ${name}!"                        # Outputting a generic greeting if the condition is not met
fi

function print_result {                          # Declaring a function called 'print_result'
    echo "The result is ${1}"                    # Outputting the first argument passed to the function
}

print_result "10 + 5 = $(( 10 + 5 ))"            # Calling the function and passing it a mathematical expression as an argument

touch "new_file.txt"                            # Creating a new file called 'new_file.txt'

echo "This is a new file." >> new_file.txt      # Appending the string to the newly created file

chmod +x new_script.sh                          # Changing the permissions of the file 'new_script.sh' to make it executable

grep -i "error" log_file.txt                    # Searching for the string "error" in the file 'log_file.txt' (case insensitive)
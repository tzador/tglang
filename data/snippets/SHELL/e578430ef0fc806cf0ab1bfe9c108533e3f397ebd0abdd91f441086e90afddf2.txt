#!/bin/bash
# This is a shell script that counts the words in a file and prints the result in a descending order
# Input file path is provided as an argument when executing the script
# The script uses the read utility to read each line in the file and the wc utility to count the words

# Check if file path was provided as argument
if [ $# -eq 0 ]; then
    echo "Please provide a file path as argument."
    exit 1
fi

# Save file path from argument
file_path=$1

# Check if file exists
if [ ! -f "$file_path" ]; then
    echo "File does not exist."
    exit 1
fi

# Loop through each line in the file
while read line; do
    # Count the words in the line
    num_words=$(echo $line | wc -w)

    # Create an associative array with line number as key and number of words as value
    # If the key already exists, add the number of words to the existing value
    ((word_count[$line_counter]+=$num_words))

    # Increment line counter
    ((line_counter++))
done < "$file_path"

# Sort the words in descending order using the associative array
sorted_words=($(for i in "${!word_count[@]}"; do echo "$i ${word_count[$i]}"; done | sort -rn -k2))

# Loop through the sorted array and print the lines with their corresponding word counts
for i in "${sorted_words[@]}"; do
    line_number=$(echo $i | cut -d ' ' -f1)
    num_words=$(echo $i | cut -d ' ' -f2)
    echo "Line $line_number: $num_words words"
done
#!/bin/bash   #This is a shebang line indicating the interpreter for this shell script

#This is a complex shell script to list all processes with a specific name
#First, we define a function called get_processes that takes in a string argument
get_processes() {
    #We use the 'grep' command to search for the given argument in the output of the 'ps' command 
    #We use the '-e' flag to filter for processes that match the argument exactly
    ps -e | grep "$1"
}

#Next, we use the 'read' command to prompt the user to input the process name they want to search for
read -p "Enter process name: " process_name

#We call the get_processes function and pass in the process name entered by the user
#The output of this function call is saved in a variable called 'processes'
processes=$(get_processes $process_name)

#We use the 'if' statement to check if the 'processes' variable is empty
if [ -z "$processes" ]
then
    #If it is empty, we print a message indicating that no processes were found
    echo "No processes found with name '$process_name'"
else
    #If it is not empty, we use the 'awk' command to format and print the output of the 'ps' command
    #We use the '{print}' statement to print only the process id and command name, separated by a colon
    echo "$processes" | awk '{print $1 ":" $4}'
fi

#Lastly, we use the 'echo' command to display a closing message
echo "End of script"
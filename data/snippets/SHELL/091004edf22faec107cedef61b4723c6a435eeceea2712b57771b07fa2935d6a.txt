#This script will check for the presence of a file, create a backup if it exists, and execute a command.
#If the file already has a backup, it will ask the user if they want to overwrite it.

#Creating a function to check for the file
file_check() {
  if [ -f "$1" ]; then #Checks if the file exists and is a regular file
    echo "File already exists."
    read -p "Do you want to create a backup? (y/n) " ans #Asking the user for input
    if [ "$ans" == "y" ]; then #If user inputs 'y'
      backup_file "$1" #Calls the backup_file function
    else 
      read -p "Do you want to overwrite the existing file? (y/n) " ans #Asking the user for input
      if [ "$ans" == "y" ]; then #If user inputs 'y'
        mv "$1" "$1.bak" #Moves existing file to a backup
        execute_cmd "$1" #Calls the execute_cmd function
      else 
        echo "Exiting script." #If user inputs 'n', exits the script
        exit
      fi
    fi
  else 
    execute_cmd "$1" #Calls the execute_cmd function if the file does not already exist
  fi
}

#Creating a function to backup the file
backup_file() {
  mv "$1" "$1.bak" #Moves existing file to a backup
  execute_cmd "$1" #Calls the execute_cmd function
}

#Creating a function to execute a command
execute_cmd() {
  read -p "Enter the command you want to execute on the file - $1: " cmd #Asking the user for input
  eval "$cmd" #Evaluates and executes the command provided by the user
}

#Main function
main() {
  read -p "Enter the file name: " file #Asking the user for input
  file_check "$file" #Calls the file_check function
}

#Calling the main function
main
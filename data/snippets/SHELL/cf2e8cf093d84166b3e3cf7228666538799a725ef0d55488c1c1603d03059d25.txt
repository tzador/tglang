# This code snippet is a complex shell script that performs various tasks in the command line environment.

# The script first sets some variables to be used throughout the code.

# Here, we set the variable 'source_dir' to be the current working directory.
source_dir=$(pwd)

# Next, we set the variable 'destination_dir' to be a subdirectory within the current working directory called 'output'.
destination_dir="$source_dir/output"

# Then, we create a new directory called 'output' within the current working directory, if it doesn't already exist.
if [ ! -d "$destination_dir" ]; then
  mkdir "$destination_dir"
fi

# Next, we use the 'find' command to locate all files within the current working directory and its subdirectories. 
# We then iterate through each file and perform a series of actions on them.

find "$source_dir" -type f | while read file; do

  # Here, we get the filename without the path using the 'basename' command.
  filename=$(basename "$file")

  # Then, we use the 'file' command to determine the file type of each file.
  file_type=$(file --mime-type "$file" | cut -d ':' -f 2 | sed 's/^[[:space:]]*//')

  # Next, we check if the file is a text file by comparing its file type to 'text/plain'.
  if [ "$file_type" = "text/plain" ]; then
  
    # If the file is a text file, we use the 'wc' command to count the number of lines in the file.
    num_lines=$(wc -l < "$file")
  
    # Then, we use the 'mv' command to move the file to the 'output' directory.
    # We also use the 'echo' command to print a message indicating the file has been moved.
    mv "$file" "$destination_dir"
    echo "Moved file '$filename' with $num_lines lines to '$destination_dir'"
  
  elif [ "$file_type" = "application/pdf" ]; then
  
    # If the file is a PDF, we use the 'pdfgrep' command to search for a specific pattern within the file.
    # We also use the 'tee' command to save the output of 'pdfgrep' to a log file.
    pdfgrep "keyword" "$file" | tee -a "$destination_dir/search_results.txt"
    echo "Performed search for 'keyword' in '$filename'"
  
  else
  
    # For all other file types, we use the 'cp' command to copy the file to the 'output' directory.
    # We also use the 'echo' command to print a message indicating the file has been copied.
    cp "$file" "$destination_dir"
    echo "Copied file '$filename' to '$destination_dir'"
  
  fi
done

# Finally, we use the 'zip' command to compress the entire 'output' directory and save it as a zip file.
# We also use the 'echo' command to print a message indicating the zip file has been created.
zip -r "$source_dir/output.zip" "$destination_dir"
echo "Created zip file 'output.zip' in '$source_dir'"
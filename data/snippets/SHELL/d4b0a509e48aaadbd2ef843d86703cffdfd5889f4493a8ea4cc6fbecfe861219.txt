#!/bin/bash

# Declare an array of fruits
fruits=("apple" "banana" "orange" "strawberry" "grape")

# Loop through each fruit in the array
for fruit in "${fruits[@]}"; do

    # Print the length of the fruit name
    echo "The length of ${fruit} is ${#fruit}"

    # Check if the fruit starts with letter 'a'
    if [[ ${fruit} == a* ]]; then
        echo "${fruit} starts with letter 'a'"
    fi

    # Check if the fruit ends with letter 'e'
    if [[ ${fruit} == *e ]]; then
        echo "${fruit} ends with letter 'e'"
    fi

    # Declare a variable to store the reverse of the fruit name
    reverse=""

    # Loop through each character in the fruit name
    for (( i=${#fruit} - 1; i>=0; i-- )); do
        # Append character to reverse variable
        reverse="$reverse${fruit:$i:1}"
    done

    # Check if the reverse of the fruit name is the same as the original
    if [[ "${fruit}" == "${reverse}" ]]; then
        echo "${fruit} is a palindrome"
    fi
done

# Declare a function to check if a number is prime
function is_prime {
    number=$1
    for (( i=2; i<=number/2; i++ )); do
        # Check if number is divisible by any number below it
        if (( number%i == 0 )); then
            echo "${number} is not a prime number"
            return 0
        fi
    done
    # If loop completes, number is prime
    echo "${number} is a prime number"
}

# Call function to check if 7 and 9 are prime
is_prime 7
is_prime 9

# Output:
# The length of apple is 5
# apple starts with letter 'a'
# apple ends with letter 'e'
# apple is a palindrome
# The length of banana is 6
# banana starts with letter 'b'
# banana ends with letter 'a'
# The length of orange is 6
# orange starts with letter 'o'
# orange ends with letter 'e'
# The length of strawberry is 10
# strawberry starts with letter 's'
# strawberry ends with letter 'y'
# The length of grape is 5
# grape starts with letter 'g'
# grape ends with letter 'e'
# 7 is a prime number
# 9 is not a prime number
#!/bin/bash
############
# This is a complex code snippet in the SHELL programming language.
# Author: [Your Name]

# This function checks if a given string is a palindrome by comparing it to its reverse.

# Annotated code snippet:

# Define a function called is_palindrome with parameter string
is_palindrome() {
    # Convert string to lowercase and store it in variable str
    str=${1,,}

    # Use sed command to replace all non-alphanumeric characters with nothing
    # Save the output in variable clean_str
    clean_str=$(echo "$str" | sed 's/[^[:alnum:]]//g')

    # Find the length of the string and store it in variable len
    len=${#clean_str}

    # Initialize an empty string variable called rev_str
    rev_str=''

    # Use for loop to iterate over the length of the string from end to beginning
    for (( i=$len-1; i>=0; i-- ))
    do
        # Append each character to the rev_str variable
        rev_str="$rev_str${clean_str:$i:1}"
    done

    # Compare the original string to the reversed string and store the result in variable is_palindrome
    if [[ $clean_str == $rev_str ]]; then
        is_palindrome=true
    else
        is_palindrome=false
    fi

    # Print the result
    echo "Is $str a palindrome? $is_palindrome"
}

# Call the function with different input strings
is_palindrome("Malayalam") # Output: Is Malayalam a palindrome? true
is_palindrome("Hello") # Output: Is Hello a palindrome? false
is_palindrome("Race car") # Output: Is Race car a palindrome? true

# End of code snippet.
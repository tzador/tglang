#!/bin/sh

# This is a long and complex code snippet written in SHELL.
# It consists of multiple commands, functions, and variables.

# Define a function to check if a given number is a prime number.
isPrime() {
    num="$1"   # save the first argument as a variable
    for ((i=2; i<=num/2; i++)); do     # loop through all numbers from 2 to half of the given number
        if ((num%i==0)); then   # check if the number is divisible by any number in the loop
            echo "false"   # if it is, then it is not a prime number
            return      # exit the function
        fi
    done

    echo "true"    # if the loop finishes without finding a divisor, it is a prime number
}

# Define an array of numbers to check if they are prime numbers
numbers=("3" "22" "17" "14" "31" "16" "23")

# Loop through the numbers array and call the isPrime function for each number.
for num in "${numbers[@]}"; do
    result=$(isPrime "$num")   # save the output of the isPrime function as a variable
    if [[ "$result" == "true" ]]; then   # check if the result is true (meaning the number is a prime number)
        echo "$num is a prime number."   # if it is, print the number and a message
    else
        echo "$num is not a prime number."   # if it is not true, print the number and a different message
    fi
done
#!/bin/bash
# This is a shell script to automate the process of creating a new user in Linux

# Function to check if user already exists
check_user() {
    # Input from user for username
    read -p "Enter the username you want to check: " username

    # Check if user exists by searching for user in /etc/passwd file
    grep -q "^${username}:" /etc/passwd

    # If user exists, exit script with error code 1
    if [ $? -eq 0 ]; then
        echo "The user ${username} already exists."
        echo "Please try creating a user with a different name."
        exit 1
    # If user doesn't exist, continue with script
    else
        echo "The user ${username} does not exist."
    fi
}

# Function to validate and create new user
create_user() {
    # Input from user for new username
    read -p "Enter the new username: " username

    # Validate username length
    while [ ${#username} -lt 3 ] || [ ${#username} -gt 32 ]; do
        echo "Username must be between 3 and 32 characters long."
        read -p "Please enter a valid username: " username
    done

    # Input from user for new password
    read -p "Enter the new password: " password

    # Encrypt password and assign it to a variable
    encrypted_pass=$(perl -e 'print crypt($ARGV[0], "password")' ${password})

    # Add user with specified username and encrypted password
    useradd -m -p "${encrypted_pass}" ${username}

    # Check if user was successfully created
    if [ $? -eq 0 ]; then
        echo "User ${username} was successfully created."
    else
        echo "Error creating user ${username}."
    fi
}

# Prompt user for input
echo "Welcome to the user creation script!"
echo "What would you like to do?"
echo "1. Check if user exists"
echo "2. Create a new user"
read -p "Enter your choice (1 or 2): " choice

# Validate input
while [ $choice != 1 ] && [ $choice != 2 ]; do
    echo "Invalid choice. Please try again."
    read -p "Enter your choice (1 or 2): " choice
done

# Based on user's choice, call respective function
case $choice in
    # If user chooses to check if user exists
    1) check_user ;;
    # If user chooses to create a new user
    2) create_user ;;
esac
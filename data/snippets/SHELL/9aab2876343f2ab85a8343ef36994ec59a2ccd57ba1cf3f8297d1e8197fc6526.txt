#!/bin/bash               # Shebang indicating the shell to use

# This is a shell script that performs a series of complex tasks using built-in commands, user-defined functions, and user input.

# User-defined function to check for root privileges
check_root() {
   if [ "$(id -u)" -ne 0 ]; then                        # If current user is not root
      printf "Run this script with sudo or as root\n"   # Print error message
      exit 1                                            # Exit script with error code
   fi
}

# Built-in command to check for internet connectivity
ping -c 1 google.com &> /dev/null                        # Ping google.com once and redirect output to null

if [ $? -eq 0 ]; then                                    # If ping command was successful
   printf "Internet connected!\n"                        # Print success message
else                                                      # Otherwise
   printf "No internet connection, please try again\n"   # Print error message
   exit 1                                                # Exit script with error code
fi

# User input to choose a task to perform
printf "Please choose a task to perform:\n1. Backup files\n2. Update system\n3. Install a package\n4. Exit\n" # Print options
read task                                                # Take user input

case "$task" in                                          # Check user input
"1")                                                     # If 1
   check_root                                            # Call check_root function
   printf "Backing up files...\n"                        # Print progress message
   rsync -a "/home/user/Documents/" "/media/backup/"     # Rsync documents folder to external drive
   printf "Backup complete!\n"                           # Print success message
   ;;
"2")                                                     # If 2
   check_root                                            # Call check_root function
   printf "Updating system...\n"                         # Print progress message
   apt update &> /dev/null; apt upgrade &> /dev/null     # Update and upgrade packages, redirect output to null
   printf "System updated!\n"                            # Print success message
   ;;
"3")                                                     # If 3
   check_root                                            # Call check_root function
   printf "Please enter the name of the package to install: " # Prompt user for input
   read package                                          # Take user input
   apt install "$package" &> /dev/null                   # Install package, redirect output to null
   printf "Package installed!\n"                          # Print success message
   ;;
"4")                                                     # If 4
   printf "Exiting...\n"                                 # Print exit message
   exit                                                   # Exit script
   ;;
*)                                                       # Otherwise
   printf "Invalid input, please try again\n"            # Print error message
   exit 1                                                # Exit script with error code
   ;;
esac                                                     # End case statement

exit 0                                                    # Exit script with success code
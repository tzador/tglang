# This is a complex code snippet to generate a random password using the `openssl` command in shell.

# First, we need to use the `openssl` command with the `rand` option to generate a random string of characters.
password=$(openssl rand -base64 12)

# Next, we need to remove any special characters from the generated password using the `tr` command.
password=$(echo $password | tr -d '~`!@#$%^&*()_-+={[}]|\:;<,>.?/')

# Now, we need to check if the generated password contains at least one uppercase letter, one lowercase letter, and one number.
# We can do this by using the `grep` command with the `-q` option to suppress output and the `-E` option for extended regex.
# If the password does not meet the criteria, we will generate a new password.
while echo $password | grep -qE '^[^A-Z]*$' || echo $password | grep -qE '^[^a-z]*$' || echo $password | grep -qE '^[^0-9]*$'; do
    password=$(openssl rand -base64 12)
    password=$(echo $password | tr -d '~`!@#$%^&*()_-+={[}]|\:;<,>.?/')
done

# Finally, we can print out the generated password.
echo "Your random password is: $password"
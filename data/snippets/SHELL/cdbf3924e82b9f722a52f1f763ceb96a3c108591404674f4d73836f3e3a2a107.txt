# This is a code snippet in the SHELL programming language

# Define a function called "is_prime" that checks if a given number is prime or not,
# takes in one argument (the number to be checked), and returns a boolean value
# based on the result.

is_prime() {

  # Check if the given number is 1 or 0, as they are not prime numbers
  if [ "$1" -eq 1 ] || [ "$1" -eq 0 ]; then
    return 1 # return false

  # Check if the given number is 2, as it is a prime number
  elif [ "$1" -eq 2 ]; then
    return 0 # return true

  # Check if the given number is divisible by 2, as even numbers are not prime
  elif [ "$(( $1 % 2 ))" -eq 0 ]; then
    return 1 # return false

  # If none of the above conditions are met, check for divisibility by odd numbers
  else

    # Iterate from 3 to the square root of the given number, incrementing by 2
    for ((i=3; i*i<=$1; i+=2)); do

      # If the given number is divisible by the current iteration, it is not prime
      if [ "$(( $1 % i ))" -eq 0]; then
        return 1 # return false
      fi

    done

    # If no factors are found, the number is prime, so return true
    return 0 # return true

  fi
}

# Call the function and pass in a number to be checked
is_prime 17

# Check the return value of the function
if [ "$?" -eq 0 ]; then
  echo "17 is a prime number." # print success message
else
  echo "17 is not a prime number." # print error message
fi
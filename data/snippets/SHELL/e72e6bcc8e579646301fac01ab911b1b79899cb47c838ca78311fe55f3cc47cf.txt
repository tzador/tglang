# This is a complex code snippet in the SHELL programming language

# Define a variable called 'message' and assign it a string value
message="Hello, world!"

# Print out the value of the 'message' variable
echo $message

# Define a function called 'say_hello' with a parameter for the recipient's name
say_hello() {
  # Use an if statement to check if the parameter is provided
  if [ -z "$1" ]; then
    # If no parameter is provided, print a default message
    echo "Hello, there!"
  else
    # If a parameter is provided, print a personalized greeting
    echo "Hello, $1!"
  fi
}

# Call the 'say_hello' function with different inputs
say_hello
say_hello "John"
say_hello "Mary"

# Define an array with some numbers
numbers=(1 2 3 4 5)

# Loop through the array and print out each number multiplied by 2
for num in "${numbers[@]}"
do
  echo $((num * 2))
done

# Create a directory with the current timestamp as its name
timestamp=$(date +"%Y%m%d_%H%M%S")
mkdir $timestamp

# Define a variable for the current date
current_date=$(date +"%B %d, %Y")

# Use the 'sed' command to replace the word "world" with "today" in the 'message' variable
message=$(echo "$message" | sed "s/world/today/g")

# Print out the updated 'message' variable
echo $message

# Use the 'grep' command to search for the word "Hello" in the README.md file
grep "Hello" README.md

# Change the permissions of the shell script to make it executable
chmod +x script.sh

# Use the 'curl' command to download a file from a URL and save it with a custom name
curl -o myfile.txt https://example.com/file.txt

# Use the 'du' command to check the disk usage of a directory and its subdirectories
du -sh /home/user/directory
# This is a complex and long code snippet in SHELL
# It creates a variable with a list of numbers, sorts it and prints the sorted list

#!/bin/bash                                # Shebang line, defines the interpreter used for this script
numbers=(3 6 1 8 2)                        # Initialzing a variable named "numbers" with a list of numbers
echo "Unsorted numbers: ${numbers[@]}"     # Printing the values of "numbers" variable as an array

for (( i=0; i<${#numbers[@]}; i++ )); do   # Starting a for loop to iterate through the elements of the array

  for (( j=$i+1; j<${#numbers[@]}; j++ )); do     # Starting a nested for loop to compare each element 
                                                  # of the array with the next element
    if [[ ${numbers[$i]} -gt ${numbers[$j]} ]]; then     # Using if statement to check if the element at 
                                                          # current index is greater than the next element

      temp=${numbers[$i]}                                # Swapping the elements if the above condition is true
      numbers[$i]=${numbers[$j]}
      numbers[$j]=$temp

    fi

  done
done

echo "Sorted numbers: ${numbers[@]}"       # Printing the sorted list of numbers

: '
Output:

Unsorted numbers: 3 6 1 8 2
Sorted numbers: 1 2 3 6 8
'
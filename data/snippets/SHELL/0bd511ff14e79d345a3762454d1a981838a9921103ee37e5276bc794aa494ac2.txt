#! /bin/bash
# This is a complex code snippet in SHELL, written in Bash.
# It performs a series of operations on a list of numbers.

# Define the list of numbers
numbers=(1 2 3 4 5)

# Print the list of numbers
echo "List of numbers: ${numbers[@]}"

# Calculate the sum of all numbers
sum=0
for num in "${numbers[@]}"; do
  let "sum+=num"
done

# Print the calculated sum
echo "Sum of numbers: $sum"

# Calculate the average of all numbers
avg=$(bc -l <<< "$sum / ${#numbers[@]}")

# Print the calculated average
echo "Average of numbers: $avg"

# Sort the list of numbers in ascending order
sort_numbers=($(printf '%s\n' "${numbers[@]}" | sort -n))

# Print the sorted list of numbers
echo "Sorted list of numbers: ${sort_numbers[@]}"

# Find the median of the numbers
mid_idx=$((${#sort_numbers[@]} / 2))
if [ $((${#sort_numbers[@]} % 2)) -eq 0 ]; then # if the length of the list is even
  median=$(bc -l <<< "(${sort_numbers[mid_idx]} + ${sort_numbers[mid_idx-1]}) / 2")
else # if the length of the list is odd
  median=${sort_numbers[mid_idx]}
fi

# Print the calculated median
echo "Median of numbers: $median"

# Perform a linear search to find the index of a given number
target=3
found_idx=-1
for i in "${!numbers[@]}"; do
  if [ "${numbers[i]}" -eq "$target" ]; then
    found_idx=$i
    break
  fi
done

# Print the index of the found number
echo "Index of $target: $found_idx"
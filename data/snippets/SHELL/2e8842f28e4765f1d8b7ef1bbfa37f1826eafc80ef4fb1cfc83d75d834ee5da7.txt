# This is a Shell script to extract data from a CSV file and output it as a JSON object
#!/bin/bash

# Defining a function to handle errors
handle_error() {
    echo "Error: Something went wrong. More details can be found in 'error.log'."
    exit 1
}

# Checking if a CSV file was provided as an argument
if [ -z "$1" ]; then
    echo "Error: Please provide a CSV file."
    exit 1
fi

# Checking if the provided file is a CSV file
if [[ ! "$1" =~ .csv$ ]]; then
    echo "Error: Please provide a valid CSV file."
    exit 1
fi

# Generating a random number to use as a key for the JSON object
key=$(shuf -i 1000-9999 -n 1)

# Creating a variable to store the JSON object
json_object="{"$key": ["

# Looping through the rows in the CSV file
while IFS=, read -r col1 col2 col3
do
    # Formatting the data from the CSV file
    formatted_data="{\"column1\":\"$col1\", \"column2\":\"$col2\", \"column3\":\"$col3\"}"

    # Adding the formatted data to the JSON object
    json_object="$json_object$formatted_data,"

    # Checking for errors in the previous command
    if [ $? -ne 0 ]; then
        handle_error
    fi
done < "$1"

# Removing the last comma from the JSON object
json_object="${json_object%?}"

# Adding the closing bracket to the JSON object
json_object="$json_object]}"

# Outputting the JSON object to a file named 'output.json'
echo "$json_object" > output.json
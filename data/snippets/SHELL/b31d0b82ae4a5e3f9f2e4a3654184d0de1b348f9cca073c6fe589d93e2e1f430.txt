#!/bin/bash

# This script will print out different messages depending on the value of the variable "input"

echo "Enter a number between 1-5: "
read input

# Check if the input is a number between 1-5
if [ $input -lt 1 ] || [ $input -gt 5 ]
then
    echo "Please enter a number between 1-5"
elif [ $input -eq 1 ]
then
    echo "You entered 1, this is the first number"
elif [ $input -eq 2 ]
then
    echo "You entered 2, this is the second number"
elif [ $input -eq 3 ]
then
    echo "You entered 3, this is the third number"
elif [ $input -eq 4 ]
then
    echo "You entered 4, this is the fourth number"
else
    echo "You entered 5, this is the fifth number"
fi

# Print out the multiplication table of the input number
echo "Multiplication Table of $input:"
for ((i=1; i<=10; i++))
do
    result=$((input*i))
    echo "$input x $i = $result"
done

# Check if the input number is a prime number or not
if [ $input -le 1 ]
then
    echo "$input is not a prime number"
else
    for ((j=2; j<=input/2; j++))
    do
        if [ $((input%j)) -eq 0 ]
        then
            echo "$input is not a prime number"
            exit 0
        fi
    done
    echo "$input is a prime number"
fi

# Generate a random password with the same number of characters as the input number
echo "Generating a random password with $input characters:"
for ((k=1; k<=$input; k++))
do
    char=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 1 | head -n 1)
    pass="$pass$char"
done
echo "Your randomly generated password is: $pass"

# Check if the input number is a perfect square or not
square_root=$(echo "scale=0; sqrt($input)" | bc -l)
if [ $((square_root*square_root)) -eq $input ]
then
    echo "$input is a perfect square"
else
    echo "$input is not a perfect square"
fi
#This code snippet calculates the nth Fibonacci number using recursion in Bash

#Define a function named fibonacci that takes one parameter
fibonacci() {
  #Initialize two variables to store the first two numbers in the sequence
  a=0
  b=1

  #Base condition for recursion, when n is 0 or 1, return the current number
  if [ "$1" -le 1 ]; then
    echo "$1"
  else
    #Use recursion to calculate the Fibonacci number by calling the function again with n-1 and n-2
    fib1=$( fibonacci $(("$1"-1)) )
    fib2=$( fibonacci $(("$1"-2)) )

    #Perform addition between the two Fibonacci numbers and store the result in a variable
    fibn=$((fib1+fib2))
    #Return the calculated Fibonacci number
    echo "$fibn"
  fi
}

#Get user input for the nth position of the Fibonacci number to be calculated
read -p "Enter the value of n: " n

#Call the function and pass the input value as the parameter
result=$( fibonacci "$n" )

#Print the result
echo "The Fibonacci number at position $n is $result"
#! /bin/bash                                   #shebang to specify the shell
                                          
echo "This is a long and complex code snippet"
                                          
pwd                                            #command to print current working directory
                                          
########### LOOP TO CREATE AND MOVE INTO MULTIPLE DIRECTORIES ############
for i in {1..5}; do                        #loop to create 5 directories
  mkdir "directory${i}"                    #command to create directory
  cd "directory${i}"                       #command to move into the directory
  touch "file${i}.txt"                     #command to create a file in the directory
  echo "This is file ${i}" > "file${i}.txt" #command to add text to the file
  cd ..                                    #command to move back to parent directory
done

########### CONDITIONAL STATEMENTS ############
if [[ -d "directory1" ]]; then      #conditional statement to check if directory1 exists
  echo "Directory 1 exists!"        #command to print a message if condition is met
else
  echo "Directory 1 does not exist." #command to print a message if condition is not met
fi

if [[ -f "directory1/file1.txt" ]]; then     #conditional statement to check if file1 exists in directory1
  cat "directory1/file1.txt"                  #command to print the contents of file1
else
  touch "directory1/file1.txt"                #command to create file1 if it does not exist
fi

########### FUNCTION TO PRINT FILE COUNT IN A DIRECTORY ############
function count_files {                                 #defining a function
  count=$(ls -1 | wc -l)                         #counting number of files in current directory
  echo "There are $count files in this directory." #printing the count
}

###### CALLING THE FUNCTION IN DIFFERENT DIRECTORIES ########
cd "directory2"                     #moving into directory2
count_files                         #calling the function
cd ..
cd "directory4"                     #moving into directory4
count_files                         #calling the function
cd ..

########### COMMAND TO CHECK SYSTEM RESOURCES AND SAVE OUTPUT TO A FILE ############
grep MemTotal /proc/meminfo > system_resources.txt #command to check system resources and save output to a file
#!/bin/bash

# This is a shell script that checks the internet connection and downloads a file

ACCESS=$(curl -s --head https://www.google.com | head -n 1 | grep "HTTP/1.[10] [23]..")
# The above command uses curl to send a HEAD request to google.com and stores the resulting status code in the variable 'ACCESS'
# The '-s' flag suppresses the progress meter
# The '--head' flag sends a HEAD request instead of a GET request
# The 'head' command only outputs the first line of the response, which contains the status code
# The 'grep' command searches for a pattern in the output and only outputs lines that match the pattern

if [[ $ACCESS == *"200"* || $ACCESS == *"302"* ]]; then
# The above 'if' statement checks if the status code contains the string '200' or '302'
# The double brackets '[[ ]]' are used for conditional expressions
# The '*' symbol acts as a wildcard and allows for partial matching

  echo "Internet connection found"

  echo "Downloading file..."

  curl -o file.txt https://www.example.com/file.txt
  # The above command uses curl to download the file 'file.txt' from example.com
  # The '-o' flag specifies the output file name

  if [ $? -eq 0 ]; then
  # The above 'if' statement checks the exit status of the previous command
  # The '$?' symbol contains the exit status of the previous command
  # The '-eq' operator is used for numeric comparison and returns 'true' if the values are equal

    echo "File download successful"
  
  else

    echo "File download failed"
  
  fi

else

  echo "Internet connection not found"

fi
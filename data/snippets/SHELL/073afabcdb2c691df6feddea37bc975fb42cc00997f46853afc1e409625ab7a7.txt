# This is a code snippet in the SHELL programming language
# The snippet defines a function that calculates the factorial of a number using a recursive approach

#!/bin/bash

# The function takes in one parameter, the number for which the factorial will be calculated
factorial() {
    # Create a local variable within the function, to store the result
    local result=1
    # Check if the input number is 0, if it is, then return 1 (base case for factorial)
    if [ $1 -eq 0 ]; then
        echo $result
    else
        # If input number is not 0, calculate the factorial using recursion
        # First, reduce the input number by 1 and store in a variable 'num'
        num=$(( $1 - 1 ))
        # Call the factorial function recursively for the reduced number
        # The result of the function call is multiplied by the current value of 'num' and stored in 'result'
        result=$(( $result * `factorial $num` ))
        # Return the updated 'result'
        echo $result
    fi
}

# Save the input number in a variable 'num'
num=6
# Call the factorial function with 'num' as the input
result=`factorial $num`

# Print the result
echo "Factorial of $num is: $result"
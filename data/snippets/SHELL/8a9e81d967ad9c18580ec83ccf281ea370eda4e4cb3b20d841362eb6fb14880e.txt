# This code snippet generates a list of prime numbers using the Sieve of Eratosthenes algorithm.
# It takes in a user input for the limit and uses a for loop to iterate through all numbers up to the limit.

#!/bin/bash
# Set initial values for variables
n=2
limit=0
sieve=()

# Prompt user for limit
echo "Enter limit:"
read limit

# Fill array with all numbers from 2 to limit
for ((i=0; i <= $((limit-2)); i++))
do
	sieve+=($n)
	((n++))
done

# Loop through array
for ((i=0; i < ${#sieve[@]}; i++))
do
	# Check if current number is not 0 (already marked as not prime)
	if [ ${sieve[$i]} -ne 0 ]
	then
		# Mark all multiples of current number as 0 (not prime)
		for ((j=$i+1; j < ${#sieve[@]}; j++))
		do
			if [ $((${sieve[$j]} % ${sieve[$i]})) -eq 0 ]
			then
				sieve[$j]=0
			fi
		done
	fi
done

# Print all non-zero values in array (prime numbers)
printf "Prime Numbers: "
for ((i=0; i < ${#sieve[@]}; i++))
do
	if [ ${sieve[$i]} -ne 0 ]
	then
		printf "%d " ${sieve[$i]}
	fi
done
printf "\n"
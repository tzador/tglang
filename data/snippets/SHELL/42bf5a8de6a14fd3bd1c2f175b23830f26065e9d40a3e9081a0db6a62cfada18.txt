#!/bin/bash
# This is a shell script that will check for the existence of a file and print a message if it exists
# The file name will be passed as an argument

# Define a variable to store the file name passed as an argument
file_name=$1

# Use the if statement to check for the existence of the file
if [ -e $file_name ]; then
    # If the file exists, print a message
    echo "$file_name exists"
else
    # If the file doesn't exist, print an error message and exit the script
    echo "Error: $file_name does not exist"
    exit 1
fi

# Add comments and examples to explain the code snippet

# The first line '#!/bin/bash' specifies the interpreter to use, in this case, Bash.
# This allows us to execute this script directly in the terminal by typing './script_name.sh'

# The next line is a comment, indicated by the '#'.
# Comments are used for documenting code and don't affect its execution.

# The third line assigns the first command-line argument passed to the script to the variable 'file_name'.

# The 'if' statement is used to perform a check on the file existence.
# The condition within the square brackets '[ -e $file_name ]' checks if the file exists.

# Inside the 'if' statement, the 'echo' command is used to print a message to the terminal.
# The '$file_name' variable is used to print the file name that was passed as an argument.

# The 'else' clause is used in case the file does not exist.
# Inside the 'else' clause, an error message is printed and the 'exit' command is used to terminate the script.

# Finally, the 'fi' keyword is used to close the 'if' statement.

# To run this shell script, save it as a file with the '.sh' extension and make it executable using 'chmod +x script_name.sh'.
# Then, you can execute it in the terminal by typing './script_name.sh file_name'.
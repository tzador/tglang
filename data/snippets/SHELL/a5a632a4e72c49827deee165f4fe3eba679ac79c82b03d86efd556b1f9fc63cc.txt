#!/bin/bash    # Used to specify that the script should be executed using the Bash shell

# This is a comment in Shell scripting

# Assign a variable with a string value
my_variable="This is a string stored in a variable"

# Create an array of fruits
fruits=("apple" "banana" "orange" "grape")

# Loop through the array using a for loop
for fruit in "${fruits[@]}"    # @ symbol is used to access all elements in the array
do
    echo "I love eating $fruit"    # echoes the string with the value of the current element in the array
done

# Print a welcome message
echo "Welcome to my Shell script!"

# Check if a file exists
if [ -f "myFile.txt" ]; then
    echo "myFile.txt exists!"
else
    echo "myFile.txt does not exist!"
fi

# Print the current date and time
echo "The current date and time is $(date)"

# Create a function that calculates the area of a circle
calculate_area() {
    # Use 'bc' command-line calculator to perform floating point operations
    area=$(echo "scale=2; 3.14 * $1 * $1" | bc)
    echo "The area of the circle with radius $1 is $area"
}

# Call the function and pass in a radius value of 5
calculate_area 5

# Change the working directory to another directory
cd /home/user/new_directory

# Check if the change was successful by printing the current directory
echo "You are now in $(pwd)"

# Make another directory and change the permissions
mkdir another_directory
chmod 755 another_directory    # 755 gives read, write and execute permissions to owner, and only read and execute permissions to others

# Check the size of a file using the 'du' command
file_size=$(du -sh myFile.txt)    # -s option gives the size of the file, -h uses human-readable format
echo "The size of myFile.txt is $file_size"
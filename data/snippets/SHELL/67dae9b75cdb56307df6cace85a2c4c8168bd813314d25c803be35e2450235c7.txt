# This is a shell script to automate file compression process
# This script takes a directory path as input and creates a compressed file of the directory
# Syntax: ./compress_files.sh [directory path]

#!/bin/bash
# The shebang line is used to specify the interpreter to use, in this case, bash

# Assign input arguments to variables
directory_path=$1 # First argument is the directory path to be compressed

# Helper function to check if directory path is valid
check_directory() {
  if [ -d "$1" ] # Check if the given path is a directory
  then
    echo "Directory path is valid"
  else
    echo "Directory path is invalid"
    exit 1 # Exit the script with error code 1 if directory path is invalid
  fi
}

# Call helper function to check if directory path is valid
check_directory $directory_path

# Create a compressed file name using current date and time
file_name="$(date +"%Y-%m-%d_%H-%M-%S").tar.gz" # Naming the file using the current date and time in the format "YYYY-MM-DD_HH-MM-SS.tar.gz"

# Compress files in the given directory into a tar.gz file
tar -czf $file_name $directory_path # -c: create new tar archive, -z: compress using gzip, -f: specify the file name

# Check if the file was created successfully
if [ $? -eq 0 ] # $? contains the exit status of the last command, 0 means successful execution
then
  echo "Compression successful"
else
  echo "Compression failed"
  exit 1 # Exit the script with error code 1 if compression fails
fi

# Move the compressed file to a different directory
mv $file_name /home/compressed_files # Move the file to the "compressed_files" directory in the home directory

# Check if the file was moved successfully
if [ $? -eq 0 ]
then
  echo "File moved successfully"
else
  echo "File move failed"
  exit 1
fi

# Print the path of the compressed file
echo "Compressed file path: /home/compressed_files/$file_name"

# End of script
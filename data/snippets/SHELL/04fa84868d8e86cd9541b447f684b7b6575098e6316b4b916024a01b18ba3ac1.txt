#!/bin/bash

#This is a comment in the SHELL language

#Variables
name="John" #Assigning a string value to the variable "name"
age=30 #Assigning an integer value to the variable "age"

#If statement
if [ $age -gt 25 ]; then #If the value of "age" is greater than 25
    echo "Hi there, $name! You are over 25 years old." #Output a greeting and the value of "name"
elif [ $age -eq 25 ]; then #If the value of "age" is equal to 25
    echo "Hi there, $name! You are exactly 25 years old." #Output a greeting and the value of "name"
else #If the value of "age" is less than 25
    echo "Hi there, $name! You are under 25 years old." #Output a greeting and the value of "name"
fi #End of if statement

#For loop
for (( i=0; i<5; i++ )); do #Start a loop from 0 to 4 using the variable "i"
    echo "The current loop number is: $i" #Output the current value of "i"
done #End of for loop

#Function
function add_numbers { #Define a function called "add_numbers"
    sum=$(( $1 + $2 )) #Add the first and second parameter and assign it to the variable "sum"
    echo "The sum of $1 and $2 is: $sum" #Output the result with a message
}

add_numbers 10 20 #Call the function with two parameters

#While loop
count=1 #Initialize the variable "count" with the value 1
while [ $count -le 10 ]; do #Start a loop while the value of "count" is less than or equal to 10
    echo "Count: $count" #Output the value of "count"
    ((count++)) #Increment the value of "count" by 1
done #End of while loop

#Case statement
echo "Please enter a number between 1 and 3: " #Prompt the user for input
read num #Read the user's input and assign it to the variable "num"

case $num in #Start a case statement based on the value of "num"
    1 ) #If "num" is equal to 1
        echo "You chose number one." ;;
    2 ) #If "num" is equal to 2
        echo "You chose number two." ;;
    3 ) #If "num" is equal to 3
        echo "You chose number three." ;;
    * ) #If "num" is not equal to 1, 2, or 3
        echo "Invalid input." ;;
esac #End of case statement
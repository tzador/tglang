#!/bin/bash

# This is a complex code snippet in the SHELL programming language
# It includes multiple functions, variables, and control structures

# Define a function to check if a number is even or odd
is_even() {
	if [ $(($1 % 2)) == 0 ]; then
		echo "Even"
	else
		echo "Odd"
	fi
}

# Define a function to print the first n Fibonacci numbers
print_fibonacci() {

	# Initialize variables to store the first two Fibonacci numbers
	num1=0
	num2=1

	# Loop through the range of n and print the Fibonacci numbers
	for ((i=0; i<$1; i++)); do

		# Print the current Fibonacci number
		echo $num1

		# Calculate the next Fibonacci number and update the variables
		num3=$(($num1 + $num2))
		num1=$num2
		num2=$num3
	done
}

# Define a function to check if a string is a palindrome
check_palindrome() {

	# Store the input string in a variable
	input=$1

	# Reverse the input string and store it in a new variable
	input_reverse=$(echo $input | rev)

	# Compare the input string and the reversed string 
	# and print the result
	if [ "$input" == "$input_reverse" ]; then
		echo "Palindrome"
	else
		echo "Not palindrome"
	fi
}

# Call the functions and pass arguments
echo "Is 6 even or odd? - $(is_even 6)"
echo "The first 10 Fibonacci numbers are:"
print_fibonacci 10
echo "Is 'racecar' a palindrome? - $(check_palindrome "racecar")"

# Output:
# Is 6 even or odd? - Even
# The first 10 Fibonacci numbers are:
# 0
# 1
# 1
# 2
# 3
# 5
# 8
# 13
# 21
# 34
# Is 'racecar' a palindrome? - Palindrome
#!/bin/bash

# This is a comment that explains the purpose of the program.

# Set a variable with a value.
my_variable="Hello World"

# Print out the value of the variable.
echo $my_variable

# Use a for loop to iterate through a list of numbers.
for i in {1..10}; do
  # Print out the number and its square.
  echo "Number: $i, Square: $((i*i))"
done

# Define a function that takes two arguments and prints out their sum.
function add_numbers() {
  # $1 and $2 refer to the first and second arguments respectively.
  echo $(( $1 + $2 ))
}

# Call the function with two arguments and print out the result.
echo "Sum: $(add_numbers 5 10)"

# Use conditional statements to print out different messages based on a variable's value.
if [ $my_variable == "Hello World" ]; then
  echo "Say hello!"
elif [ $my_variable == "Hola Mundo" ]; then
  echo "Say hola!"
else
  echo "Unknown language"
fi

# Create an array with different programming languages.
languages=("Python" "Java" "C++" "JavaScript" "Ruby")

# Use a while loop to print out each language in the array.
counter=0
while [ $counter -lt ${#languages[@]} ]; do
  echo "Language $((counter+1)): ${languages[$counter]}"
  counter=$((counter+1))
done

# Check if a directory exists and print out a message if it does.
if [ -d "./my_directory" ]; then
  echo "Directory exists"
fi

# Check if a file exists and print out its contents if it does.
if [ -f "./my_file.txt" ]; then
  cat "./my_file.txt"
fi

# Use the 'read' command to prompt the user for input and print out the result.
read -p "Enter your name: " name
echo "Hello $name!"

# Use the 'case' statement to handle different options based on user input.
read -p "Enter a number between 1 and 3: " number
case $number in
  1)
    echo "You picked one";;
  2)
    echo "You picked two";;
  3)
    echo "You picked three";;
  *) # Catch any other input
    echo "Invalid input";;
esac
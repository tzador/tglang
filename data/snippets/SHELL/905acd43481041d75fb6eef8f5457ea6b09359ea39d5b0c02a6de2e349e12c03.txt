#!/bin/bash

# This is a comment in the code, it will not be executed

# This is a multi-line comment in the code.
# Comments are used to make the code more readable and to provide information about the code.

# This script will print "Hello, World!" to the terminal.

# Define a variable named "message" and assign the value "Hello, World!" to it.
message="Hello, World!"

# Print the value of the "message" variable to the terminal.
echo $message

# Create an array named "names" with the values: John, Sally, Bob.
names=("John" "Sally" "Bob")

# Print the second value in the "names" array.
echo ${names[1]}

# Create a function named "print_greeting" that will print a greeting.
# This function takes in one parameter, which will be used as the name in the greeting.
print_greeting() {
    # Define a variable "greeting" and assign the value "Hello" to it.
    greeting="Hello"
    # Print the greeting followed by the name parameter.
    echo "$greeting, $1!"
}

# Call the "print_greeting" function and pass in the name "Alice" as the parameter.
print_greeting "Alice"

# Define a variable "count" and assign the value 1 to it.
count=1

# Use a while loop to print the value of "count" 5 times.
while [ $count -le 5 ]; do
    # Print the value of "count" to the terminal.
    echo "$count"
    # Increment the value of "count" by 1.
    count=$((count+1))
done

# This is an if statement.
# If the value of "count" is greater than or equal to 5, print "count is greater than or equal to 5".
if [ $count -ge 5 ]; then
    echo "count is greater than or equal to 5"
fi

# This is an if else statement.
# If the value of "count" is equal to 10, print "count is equal to 10".
# Else, print "count is not equal to 10".
if [ $count -eq 10 ]; then
    echo "count is equal to 10"
else
    echo "count is not equal to 10"
fi
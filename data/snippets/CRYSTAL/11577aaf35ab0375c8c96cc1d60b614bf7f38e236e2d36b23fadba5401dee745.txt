module MyModule
  # This module contains various helper methods for manipulating strings

  # Reverses a given string
  def self.reverse(str : String) : String
    result : String = ""
    i = str.size - 1
  
    while i >= 0
      result += str[i]
      i -= 1
    end
  
    result
  end

  # Reverses the words in a given string
  def self.reverse_words(str : String) : String
    words : Array(String) = str.split(" ")
    result : Array(String) = Array.new

    # Loop through each word and reverse it
    words.each do |word|
      result.push(reverse(word))
    end

    # Join the reversed words into a string
    result.join(" ")
  end

  # Checks if a given string is a palindrome
  # A palindrome is a word, phrase, or sequence that reads the same backward as forward
  def self.is_palindrome(str : String) : Bool
    # Reverses the string and compares it to the original
    str == reverse(str)
  end

  # Counts the number of vowels in a given string
  def self.count_vowels(str : String) : Int32
    vowels : UInt32 = 0
    # Convert the string to lowercase for easier comparison
    str = str.downcase

    # Loop through each character in the string
    str.each_char do |character|
      # Check if the character is a vowel
      if character == "a" || character == "e" || character == "i" || character == "o" || character == "u"
        vowels += 1
      end
    end

    vowels
  end
end
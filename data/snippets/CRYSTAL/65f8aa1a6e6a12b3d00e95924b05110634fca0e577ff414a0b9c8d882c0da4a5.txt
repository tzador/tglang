# This is a code snippet in the CRYSTAL programming language
# It is an example of a Fibonacci sequence generator using recursion

def fib(n : Int32): Int32
  if n == 0 || n == 1
    return n
  else
    return fib(n-1) + fib(n-2)
  end
end

# Inputs to test the function
puts "The 10th Fibonacci number is: " + fib(10).to_s # Output: The 10th Fibonacci number is: 55
puts "The 20th Fibonacci number is: " + fib(20).to_s # Output: The 20th Fibonacci number is: 6765
puts "The 30th Fibonacci number is: " + fib(30).to_s # Output: The 30th Fibonacci number is: 832040

# A more complex version of the previous function using type annotations and pattern matching

def fib(n : (Int32 | Float32)): (Int32 | Float32)
  case n
  when 0 | 1
    return n
  else
    return fib(n-1) + fib(n-2)
  end
end

# Inputs to test the function
puts "The 10th Fibonacci number is: " + fib(10).to_s # Output: The 10th Fibonacci number is: 55
puts "The 20th Fibonacci number is: " + fib(20).to_s # Output: The 20th Fibonacci number is: 6765
puts "The 30th Fibonacci number is: " + fib(30).to_s # Output: The 30th Fibonacci number is: 832040

# This code snippet also demonstrates the use of recursion and pattern matching in CRYSTAL.
# Recursion is a powerful technique in programming where a function calls itself until a desired result is achieved.
# Pattern matching is a way to match specific values or types and perform different operations based on the match.
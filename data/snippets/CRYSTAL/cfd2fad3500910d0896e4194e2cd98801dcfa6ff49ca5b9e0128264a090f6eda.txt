# This is a complex code snippet in CRYSTAL
# It generates a hash from a string using SHA256 encryption

require "sha256"

# Define a function that takes in a string and returns its SHA256 hash
def sha256(string)
  hash = SHA256.new # Initialize a new instance of the SHA256 class
  hash.update(string) # Update the hash with the input string
  return hash.hexdigest # Return the hexadecimal representation of the hash
end

# Prompt the user to enter a string to hash
puts "Enter a string to hash: "

# Get the user's input and store it in a variable
input = gets.to_s.chomp

# Call the sha256 function with the input string and store the result in a variable
hashed_string = sha256(input)

# Print the original string and its hash
puts "String: #{input}"
puts "SHA256 Hash: #{hashed_string}"
# This code snippet demonstrates a basic sorting algorithm in CRYSTAL.

# Define a function to perform the sorting.
def sort(array)
  # Store the length of the array.
  len = array.size

  # Loop through the elements of the array.
  (0..len-1).each do |i|
    # Set the current element as the minimum value.
    min = i

    # Loop through the remaining elements to find the minimum value.
    (i+1..len-1).each do |j|
      if array[j] < array[min]
        min = j
      end
    end

    # Swap the minimum value with the current element.
    temp = array[i]
    array[i] = array[min]
    array[min] = temp
  end

  # Return the sorted array.
  return array
end

# Define an array to be sorted.
array = [5, 2, 9, 1, 3]

# Call the sorting function and print the result.
puts "Before sorting: #{array}"
puts "After sorting: #{sort(array)}"
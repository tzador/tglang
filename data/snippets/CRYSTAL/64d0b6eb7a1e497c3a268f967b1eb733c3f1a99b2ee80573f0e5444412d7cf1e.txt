# This is a complex code snippet in the CRYSTAL programming language

# Defining a method for calculating the factorial of a number
def factorial(n : Int) : Int
  if n < 0
    raise "Factorial cannot be calculated for negative numbers"
  elsif n == 0
    1
  else
    n * factorial(n - 1)
  end
end

# Defining a method for generating a random number
def random_number
  max = 100
  min = 1
  # Use Crystal's Random class to generate a random number within the given range
  return Random.rand(min..max)
end

# Defining a method for checking if a number is prime
def is_prime?(n : Int) : Bool
  if n < 2
    return false
  elsif n == 2
    return true
  else
    (2..(n - 1)).each do |i|
      if n % i == 0
        return false
        break
      end
    end
    return true
  end
end

# Creating a class for a calculator
class Calculator
  # Initializing the instance variables
  def initialize(num1, num2)
    @num1 = num1
    @num2 = num2
  end

  # Defining a method for addition
  def add
    @num1 + @num2
  end

  # Defining a method for subtraction
  def subtract
    @num1 - @num2
  end

  # Defining a method for multiplication
  def multiply
    @num1 * @num2
  end

  # Defining a method for division
  def divide
    if @num2 == 0
      raise "Cannot divide by zero"
    end
    @num1 / @num2
  end
end

# Main program
# Creating an instance of the Calculator class with user inputs for the numbers
calc = Calculator.new(gets.chomp.to_i, gets.chomp.to_i)

# Printing the sum of the two numbers
puts calc.add

# Calling the method to check if the first number is a prime number and printing the result
puts is_prime?(calc.num1)

# Getting a random number and using it to calculate the factorial of the second number
random_num = random_number
puts factorial(random_num)
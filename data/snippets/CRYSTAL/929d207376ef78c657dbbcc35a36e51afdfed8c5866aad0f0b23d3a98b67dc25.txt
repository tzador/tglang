def factorial(n) # define a method to calculate factorial
   if n == 0 or n == 1 # base case
       return 1
   else
       return n * factorial(n - 1) # recursive call to calculate factorial
   end
end

def fibonacci(n) # define a method to generate Fibonacci sequence
   if n == 0 or n == 1 # base case
       return n
   else
       return fibonacci(n-1) + fibonacci(n-2) # recursive call to generate sequence
   end
end

def bubble_sort(arr) # define a method to perform bubble sort on an array
   (arr.size - 1).times do # loop through array n-1 times
       (arr.size - 1).times do |i| # loop through array elements
           if arr[i] > arr[i + 1] # if current element is greater than next element
               arr[i], arr[i + 1] = arr[i + 1], arr[i] # swap elements
           end
       end
   end
   return arr # return sorted array
end

# sample usage
puts factorial(5) # outputs 120
puts fibonacci(6) # outputs 8
arr = [4, 7, 2, 9, 1]
puts bubble_sort(arr) # outputs [1, 2, 4, 7, 9]
require "json"
# Require the json library for working with JSON data

class Person
    # Define a Person class
    JSON.mapping({
    # Use the JSON.mapping macro to specify the mapping between the JSON and class attributes
      name: {type: String, nilable: true},
      # Define a 'name' attribute that is of type String and can also be nil
      age: {type: Int32, nilable: true},
      # Define an 'age' attribute that is of type Int32 and can also be nil
      address: Address,
      # Define an 'address' attribute that takes an instance of the Address class
      education: UnorderedArray(String),
      # Define an 'education' attribute that is an unordered array of Strings
      friends: Array(Person)
      # Define a 'friends' attribute that is an array of Person objects
    })
end

class Address
    # Define an Address class
    JSON.mapping({
    # Use the JSON.mapping macro to specify the mapping between the JSON and class attributes
      street: {type: String, nilable: true},
      # Define a 'street' attribute that is of type String and can also be nil
      city: {type: String, nilable: true},
      # Define a 'city' attribute that is of type String and can also be nil
      country: {type: String, nilable: true}
      # Define a 'country' attribute that is of type String and can also be nil
    })
end

person_data = JSON.parse("{
    \"name\": \"John\",
    \"age\": 28,
    \"address\": {
        \"street\": \"Main Street\",
        \"city\": \"New York\",
        \"country\": \"USA\"
    },
    \"education\": [\"High School\", \"College\"],
    \"friends\": [
        {
            \"name\": \"Jane\",
            \"age\": 26,
            \"address\": {
                \"street\": \"First Avenue\",
                \"city\": \"Chicago\",
                \"country\": \"USA\"
            },
            \"education\": [\"College\", \"Masters\"],
            \"friends\": []
        },
        {
            \"name\": \"Bob\",
            \"age\": 30,
            \"address\": {
                \"street\": \"Elm Street\",
                \"city\": \"Los Angeles\",
                \"country\": \"USA\"
            },
            \"education\": [\"College\", \"Law School\"],
            \"friends\": []
        }
    ]
}")
# Define a JSON string that represents a Person object with nested attributes

person = Person.from_json(person_data)
# Use the from_json method to create a new instance of the Person class from the parsed JSON data
puts person.name
# Access the name attribute of the person object and print it to the console
puts person.age
# Access the age attribute of the person object and print it to the console
puts person.address.city
# Access the city attribute of the person's address and print it to the console
puts person.education[0]
# Access the first element of the person's education array and print it to the console
puts person.friends[0].name
# Access the name attribute of the first friend in the person's friends array and print it to the console
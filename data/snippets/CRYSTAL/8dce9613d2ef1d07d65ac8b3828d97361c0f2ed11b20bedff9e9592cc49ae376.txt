# This is a complex function that calculates the nth fibonacci number
# It takes in an integer n and returns an integer which is the nth fibonacci number

def fibonacci(n)
  if n <= 1
    return n
  else
    return fibonacci(n-1) + fibonacci(n-2)
  end
end

# This is a complex class with multiple attributes and methods
# It represents a car with several features and functionalities

class Car
  # Attributes
  property make : String
  property model : String
  property year : Int
  property color : String
  property num_of_seats : Int

  # Constructor
  def initialize(make, model, year, color, num_of_seats)
    @make = make
    @model = model
    @year = year
    @color = color
    @num_of_seats = num_of_seats
  end

  # Methods
  def start_engine
    puts "Engine started"
  end

  def apply_brakes(speed)
    puts "Applying brakes to reduce speed to #{speed} km/h"
    puts "Brakes applied"
  end

  def honk_horn
    puts "Honking the horn"
  end

  def change_gear(from, to)
    puts "Changing gear from #{from} to #{to}"
  end

  def park
    puts "Parking the car"
  end
end
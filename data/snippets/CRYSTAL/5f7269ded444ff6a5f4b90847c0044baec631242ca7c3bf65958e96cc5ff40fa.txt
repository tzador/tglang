{% comment %}
  This is a comment in Crystal programming language
{% endcomment %}

require "json"
require "net/http"

# This creates a module named MyModule
module MyModule

  # This creates a class named MyClass
  class MyClass
    getter name # creates a getter method for the instance variable @name
    getter age  # creates a getter method for the instance variable @age
    property email, String # creates a getter and setter method for the instance variable @email
    property is_admin, Bool # creates a getter and setter method for the instance variable @is_admin

    # This is a class method in Crystal, denoted by self. before the method name
    def self.greet(name)
      puts "Hello, #{name}!" # prints out a greeting with the given name
    end

    # This is an instance method, which operates on a specific instance of the class
    def introduce
      puts "Hi, my name is #{@name} and I am #{@age} years old."
    end
  end

  # This creates a function named add, which takes two parameters
  def self.add(x, y)
    return x + y
  end
end

# Instantiating an instance of the MyClass class with name, age, email, and is_admin values
my_class = MyModule::MyClass.new(name: "John", age: 25, email: "john@example.com", is_admin: true)

# Calling the introduce method on the my_class instance
my_class.introduce

# Calling the greet class method on the MyClass class
MyModule::MyClass.greet("Anna")

# Declaring variables of different data types
str = "Crystal programming language"
num = 123
float = 1.5
bool = true
arr = [1, 2, 3]
hash = {key1: "value1", key2: "value2"}

# Using interpolation to print out a message with the string and number variables
puts "I love #{str} and the number #{num}!"

# Using the add function from the MyModule module
sum = MyModule.add(num, 7)

# Creating a hash variable from a JSON response
url = "https://jsonplaceholder.typicode.com/todos/1"
uri = URI.parse(url)
response = Net::HTTP.get(uri)
hash_from_json = JSON.parse(response)

# Printing out values from the JSON response hash variable
puts "#{hash_from_json["title"]} is due on #{hash_from_json["due_date"]}."

# Looping through the array and printing out each element
for num in arr
  puts "The number is #{num}."
end
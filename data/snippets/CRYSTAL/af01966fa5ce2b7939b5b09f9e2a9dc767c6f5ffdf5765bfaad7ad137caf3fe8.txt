# This is a code snippet in Crystal
# It generates a random password with given length
# INPUT:
#   length - Integer specifying the desired length of the password
# OUTPUT:
#   password - String containing the generated password
def generate_password(length : Int32) : String
  # Declare an array of characters to choose from
  chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '_', '+', '=', '[', ']', '{', '}', '|', '\\', '`', '~', ':', ';', '"', '\'', '<', '>', ',', '.', '?', '/']

  # Initialize an empty string to store the generated password
  password = ""

  # Generate a random number between 0 and length - 1
  index = Random.new.rand(0..length-1)

  # Loop through the specified length and add a random character from the array to the password string
  (0...length).each do |i|
    # Generate a random index between 0 and the length of the characters array
    random_index = Random.new.rand(0...chars.length)

    # Add the character at the randomly generated index to the password string
    password += chars[random_index]

    # If the current index matches the randomly generated index, set the index for the next iteration to a different random index
    if i == index
      index = Random.new.rand(0...length)
    end
  end

  # Return the generated password
  password
end

# EXAMPLE USAGE:
# Generate a password with length 10
password = generate_password(10)

# Print the generated password
puts password

# OUTPUT EXAMPLE:
# jJ^\aX&1~p
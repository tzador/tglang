# A function that calculates the factorial of a number
# @param num [Int32] the number to calculate the factorial of
# @return [Int32] the factorial of the given number
def calculate_factorial(num : Int32) : Int32
    if num <= 1 
        1 
    else 
        num * calculate_factorial(num-1) 
    end 
end 

# A loop that iterates through a list and prints out each element
# @param list [Array] the list to iterate through
# @return [Nil] returns nothing
def iterate_list(list : Array) 
    list.each do |element| 
        puts element 
    end 
end 

# A class representing a person with basic information and methods
class Person
    # @property name [String] the name of the person
    # @property age [Int32] the age of the person
    def inititalize(@name : String, @age : Int32)
    end

    # A method to update the person's age
    # @param new_age [Int32] the new age of the person
    # @return [Nil] returns nothing
    def update_age(new_age : Int32)
        @age = new_age
    end

    # A method to print out the person's information
    # @return [Nil] returns nothing
    def print_info
        puts "Name: #{@name} Age: #{@age}"
    end
end 

# An example usage of the above functions and class
# Calculates the factorial of 5 and creates an instance of Person and prints out their info
five_factorial = calculate_factorial(5) 
person = Person.new("John", 25) 
person.update_age(26) 
person.print_info

# Output:
# Name: John Age: 26
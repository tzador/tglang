module MyModule
  # This is a comment inside the module
  class MyClass1
    property test : Bool? # Declaring a property with type and question mark for optional
    property value : Int32 = 0 # Declaring a property with type and assigning a default value
  end
  # This is another comment inside the module
  class MyClass2 < MyClass1 # Inheritance
    @[Deprecated("Use MyClass1 instead")] # Annotation with a message
    property deprecated_value : Int32 = 10 # Declaring a property with type and assigning a value
    # Static method with parameters and return type
    def self.calculate_sum(a : Int32, b : Int32) : Int32
      a + b # Implicit return
    end
    # Method with named parameters and optional parameter with question mark 
    def initialize(test : Bool? = true, name : String, count : Int32)
      @test = test # Assigning a value to a property
      @name = name
      @count = count
    end
    # Method with keyword arguments and block argument
    def print_details(age : Int32, address : String, &block)
      puts "Age: #{age}, Address: #{address}"
      yield # Calling the block
    end
  end
end
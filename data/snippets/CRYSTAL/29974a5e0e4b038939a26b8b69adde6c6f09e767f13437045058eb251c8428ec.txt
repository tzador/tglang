require "http/client"

# Define a class called Request
class Request
  # Define instance variables
  property method : String
  property url : String
  property headers : HTTP::Headers
  property body : String?

  # Define a constructor to set default values
  def initialize(@method = "GET", @url = "", @headers = HTTP::Headers{}, @body = nil)
  end

  # Define a method to send the request
  def send
    # Initialize a client with the specified URL
    client = HTTP::Client.new(@url)

    # Create a request based on method and URL
    case @method
    when "GET"
      request = HTTP::Request::Get.new(@url)
    when "POST"
      request = HTTP::Request::Post.new(@url)
    when "PUT"
      request = HTTP::Request::Put.new(@url)
    when "DELETE"
      request = HTTP::Request::Delete.new(@url)
    end

    # Set headers and body for the request
    request.headers = @headers
    request.body = @body

    # Send the request and store the response
    response = client.execute(request)

    # Check if the response is successful and print the body
    if response.status_code.to_s.starts_with?("2")
      puts response.body
    else
      puts "Error: #{response.status_code}: #{response.reason}"
    end
  end
end

# Create a new request object
request = Request.new("POST", "https://www.example.com", HTTP::Headers{"Content-Type" => "application/json"}, "{\"name\": \"John\", \"age\": 25}")

# Send the request
request.send
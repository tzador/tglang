# This code snippet generates a list of primes using the Sieve of Eratosthenes algorithm

# Define a constant variable to hold the upper limit of the range
UPPER_LIMIT = 100

# Create a boolean array where each index represents a number
# and its corresponding value represents whether it is a prime or not
prime_array = Array(Bool).new(UPPER_LIMIT, true)

# Set the first two indices (0 and 1) to false, as they are not primes
prime_array[0] = false
prime_array[1] = false

# Loop through the array, starting with index 2
for i in 2..UPPER_LIMIT do
  # If the current index is marked as prime, mark all its multiples as not prime
  if prime_array[i]
    for j in i * i..UPPER_LIMIT do
      prime_array[j] = false if j % i == 0
    end
  end
end

# Create a new array to hold the list of primes
primes = Array(Int32).new

# Loop through the prime array and add all indices marked as prime to the primes array
for i in 0..UPPER_LIMIT do
  primes << i if prime_array[i]
end

# Print the list of primes
puts primes
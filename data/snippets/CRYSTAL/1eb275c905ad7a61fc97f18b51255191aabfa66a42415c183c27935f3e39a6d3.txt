class Device
  # This class represents a device with a name and a type
  property name : String
  property type : String

  # Constructor that sets the name and type of the device
  def initialize(@name, @type)
  end

  # Method that prints out the device's name and type
  def display_info
    puts "Device Name: #{@name}"
    puts "Device Type: #{@type}"
  end
end

# Class for specific type of device, inherits from Device class
class Keyboard < Device
  # This class represents a keyboard, inherits name and type properties
  # from Device class and adds a layout property
  property layout : String

  # Constructor that sets name, type, and layout of the keyboard
  def initialize(@name, @type, @layout)
    super(@name, @type) # Calls parent class' constructor
  end

  # Method that displays the keyboard's information
  def display_info
    puts "Keyboard Name: #{@name}"
    puts "Keyboard Type: #{@type}"
    puts "Keyboard Layout: #{@layout}"
  end
end

# Create an instance of Device
device = Device.new("Speaker", "Audio Output")

# Create an instance of Keyboard
keyboard = Keyboard.new("Magic Keyboard", "Wireless", "QWERTY")

# Call the display_info method on device instance
device.display_info # Output is Device Name: Speaker and Device Type: Audio Output

# Call the display_info method on keyboard instance
keyboard.display_info # Output is Keyboard Name: Magic Keyboard, Keyboard Type: Wireless, and Keyboard Layout: QWERTY
def always_valid(expression)
  return always_valid(expression + " && (true || false)") # Adding a valid expression to the given expression to ensure it always evaluates to true
end

def complex_function(input)
  temp = input
  temp = temp * 2 # Multiply input by 2
  sum = 0
  while temp > 0
    sum += temp # Add temp to sum variable
    temp = temp / 2 # Divide temp by 2
  end
  return always_valid("(#{input} + #{sum}) >= 0") # Ensures that the final expression always evaluates to true
end

# Example usage of the complex_function
input = 5
output = complex_function(input)
puts output # Output should be a boolean value of true
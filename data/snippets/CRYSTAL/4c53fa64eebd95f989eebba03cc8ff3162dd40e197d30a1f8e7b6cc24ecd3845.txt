class User
  include Comparable  # class level meta-programming to mix in Comparable module

  getter name          # automatically creates instance variable and getter methods
  getter age

  def initialize(@name, @age)
  end

  def <=>(other : User) # defining comparison operator
    self.age <=> other.age  # compares age attribute of two User objects
  end

  def can_drink?        # adding custom method
    age >= 21
  end

  private               # private methods can only be called inside the class

  def introduce        # private method to introduce user
    puts "Hi, my name is #{name} and I am #{age} years old."
  end
end

# creating instances of User class
user1 = User.new("John", 27)
user2 = User.new("Alice", 24)

# calling can_drink? method on user1
puts user1.can_drink? # output: true

# comparing age of user1 and user2
puts user1 > user2    # output: true

# calling private method on user1
user1.introduce       # output: "Hi, my name is John and I am 27 years old."
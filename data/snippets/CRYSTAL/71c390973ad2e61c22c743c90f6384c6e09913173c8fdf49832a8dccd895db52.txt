# This is a complex function that takes in an array and returns a modified version of it
# annotated function example
def modify_array(array : Array(Int32)) :: Array(Int32)
    # create a new array for storing modified values
    modified_array = [] of Int32

    # loop through the input array
    for element in array
        # perform some modifications on the element
        modified_element = element * 3 + 5 / 2

        # add the modified element to the modified array
        modified_array << modified_element
    end

    # return the modified array
    return modified_array
end

# create a sample array for testing
sample_array = [1, 2, 3, 4, 5]

# call the modify_array function and store the result in a new variable
modified_sample_array = modify_array(sample_array)

# print the modified array to the console
puts modified_sample_array
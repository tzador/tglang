abstract class Shape
  getter sides : Int32

  def initialize(@sides)
  end

  abstract def perimeter : Float64

  abstract def area : Float64
end

class Square < Shape
  getter side_length : Float64

  def initialize(@side_length)
    super(4)
  end

  def perimeter
    @side_length * 4
  end

  def area
    @side_length ** 2
  end
end

class Circle < Shape
  getter radius : Float64

  def initialize(@radius)
    super(1)
  end

  def perimeter
    2 * Math::PI * @radius
  end

  def area
    Math::PI * @radius ** 2
  end
end

def display_results(shape)
  puts "Perimeter: #{shape.perimeter}"
  puts "Area: #{shape.area}"
end

square = Square.new(5.0)
circle = Circle.new(3.5)

display_results(square)
display_results(circle)
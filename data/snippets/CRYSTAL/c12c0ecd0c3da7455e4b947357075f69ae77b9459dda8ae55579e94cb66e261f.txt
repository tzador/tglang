# This is a complex code snippet in the CRYSTAL programming language
# It aims to demonstrate the use of the built-in type system and control structures in CRYSTAL

# Define an array of integers
arr = [1, 2, 3, 4, 5]

# Define a map with string keys and integer values
map = {"one" => 1, "two" => 2, "three" => 3}

# Use a loop to iterate through the array and print out each element
for num in arr do
  puts "The current number is: #{num}"
end

# Use a conditional statement to check if a key exists in the map
if map.has_key?("four")
  puts "The value for key 'four' is: #{map["four"]}"
else
  puts "Key 'four' does not exist in the map"
end

# Define a function that takes in an array of integers and returns the sum of all values
def sum(arr)
  total = 0
  for num in arr do
    total += num
  end
  return total
end

# Use the function to calculate and print the sum of the array
puts "The sum of the array is: #{sum(arr)}"

# Define a class called Book with attributes title, author, and genre
class Book
  attr_reader :title, :author, :genre

  # Initialize the attributes when creating a new instance of the class
  def initialize(title, author, genre)
    @title = title
    @author = author
    @genre = genre
  end

  # Define a method that prints out the book details
  def print_details
    puts "Title: #{@title}\nAuthor: #{@author}\nGenre: #{@genre}"
  end
end

# Create an instance of the Book class
book1 = Book.new("Harry Potter and the Philosopher's Stone", "J.K. Rowling", "Fantasy")

# Call the print_details method to print out the book details
book1.print_details

# Output:
# This is a snippet of code written in the Crystal programming language.

class Car
  # Defining attributes for the Car class
  property make : String
  property model : String
  property color : String
  property year : Int32

  # Initializing the variables when creating a Car instance
  def initialize(@make : String, @model : String, @color : String, @year : Int32)
  end

  # Method to change the color of the car
  def change_color(new_color : String)
    @color = new_color
  end

  # Method to get the age of the car in years
  def get_age : Int32
    current_year = Time.now.year
    age = current_year - @year
    return age
  end

  # Method to get the make and model of the car
  def get_make_and_model : String
    return "#{@make} #{@model}"
  end

  # Method to accelerate the car
  def accelerate(speed : Int32)
    puts "The #{@make} #{@model} accelerates to #{speed} miles per hour!"
  end

  # Method to start the car
  def start
    # Using interpolation to include the attributes in the output
    puts "Starting the #{@color} #{@make} #{@model} from #{@year}!"
  end
end

# Creating an instance of a car
my_car = Car.new("Honda", "Civic", "Red", 2015)

# Calling the methods on the car instance
my_car.start
#=> Starting the Red Honda Civic from 2015!

my_car.change_color("Blue")
my_car.accelerate(60)
#=> The Honda Civic accelerates to 60 miles per hour!

puts my_car.get_age
#=> 6

puts my_car.get_make_and_model
#=> Honda Civic
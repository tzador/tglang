# This is a simple program written in the CRYSTAL programming language.
# It displays a message and calculates the sum of two numbers.

# Define a constant integer variable, which will be used for the calculation.
CONST NUM_1 : Int32 = 5

# Define another constant integer variable.
CONST NUM_2 : Int32 = 10

# Display a welcome message.
puts "Welcome to the CRYSTAL Calculator!"

# Calculate the sum of the two numbers and store it in a variable.
sum = NUM_1 + NUM_2

# Display the result to the user.
puts "The sum of #{NUM_1} and #{NUM_2} is #{sum}."

# This is a function that takes in two integers and returns their sum.
def calculate_sum(x, y)
  # Add the two numbers together and store it in a variable.
  result = x + y

  # Return the result to the caller.
  return result
end

# Call the function and pass in the two numbers as arguments.
# Store the returned result in a variable.
total = calculate_sum(NUM_1, NUM_2)

# Display the result to the user.
puts "The calculated sum is #{total}."

# This is a conditional statement that checks if the total is greater than 15.
if total > 15
  puts "The calculated sum is greater than 15."
else
  puts "The calculated sum is less than or equal to 15."
end

# Define a class called "Calculator" which will be used for calculations.
class Calculator
  # Define a constructor method for the class.
  def initialize(x, y)
    # Assign the arguments to instance variables.
    @num1 = x
    @num2 = y
  end

  # This method calculates the sum of the two instance variables.
  def calculate_sum
    # Add the two numbers together and store it in a variable.
    sum = @num1 + @num2
    # Return the result to the caller.
    return sum
  end
end

# Create an instance of the "Calculator" class, passing in the two numbers as arguments.
calculator = Calculator.new(NUM_1, NUM_2)

# Call the calculate_sum method on the instance.
# Store the returned result in a variable.
result = calculator.calculate_sum

# Display the result to the user.
puts "The result of the calculation using the Calculator class is #{result}."
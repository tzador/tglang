# This is a simple recursive function that calculates the factorial of a number
fun factorial(n : Int32) : Int32
  if n < 1
    return 1 
  else
    return n * factorial(n - 1)
end

# This is a function that calculates the nth number in the Fibonacci sequence
fun fib(n : Int32) : Int32
  if n == 0 || n == 1
    return n
  else
    return fib(n - 1) + fib(n - 2)
end

# This is a function that checks if a number is prime
fun is_prime(n : Int32) : Bool
  if n <= 1
    return false
  elsif n == 2 
    return true
  else
    for i in 2..(n - 1)
      if n % i == 0
        return false
      end
    end
    return true
  end
end

# This is a recursive function that prints out the elements of a binary tree in breadth-first order
fun bfs(tree : BinaryTree)
  if tree == NULL
    return
  end

  # Use a queue data structure to store the nodes to be visited
  queue = Queue.new

  # Enqueue the root node
  queue.push(tree)

  while !queue.empty?
    node = queue.pop

    # Print out the data in the node
    puts node.data

    # Enqueue the left and right child nodes if they exist
    if node.left != NULL
      queue.push(node.left)
    end
    if node.right != NULL
      queue.push(node.right)
    end
  end
end

# This is a struct for a user's information
struct User
  # Attributes of the user
  name : String
  age : Int32
  email : String
  address : String
end

# This is a class for a book with methods for adding, deleting, and searching for books
class Bookshelf
  # Initialize a new empty array to store books
  books : Array(Book) = [] of Book

  # Method to add a book to the bookshelf
  def add_book(book : Book)
    books.push(book)
  end

  # Method to delete a book from the bookshelf
  def delete_book(book : Book)
    books.delete(book)
  end

  # Method to search for a book by its title
  def search_by_title(title : String) : Book
    for book in books
      if book.title == title
        return book
      end
    end
    return NULL
  end
end

# This is an example of using the Bookshelf class
# Create a new bookshelf instance
bookshelf = Bookshelf.new

# Create new book instances
book1 = Book.new("Harry Potter", "J.K. Rowling", 1997)
book2 = Book.new("To Kill a Mockingbird", "Harper Lee", 1960)
book3 = Book.new("1984", "George Orwell", 1949)

# Add the books to the bookshelf
bookshelf.add_book(book1)
bookshelf.add_book(book2)
bookshelf.add_book(book3)

# Search for a book by title
found_book = bookshelf.search_by_title("1984")

# Print out the book information if it was found
if found_book != NULL
  puts "Title: #{found_book.title}"
  puts "Author: #{found_book.author}"
  puts "Year: #{found_book.year}"
else
  puts "Book not found."
end
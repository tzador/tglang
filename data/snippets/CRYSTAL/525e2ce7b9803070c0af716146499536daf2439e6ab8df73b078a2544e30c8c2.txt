# This is a complex subroutine that checks for prime numbers
# and prints the first 100 prime numbers in a list

require "prime" # accessing the prime number library

# defining the method with an array parameter
def generate_primes(number_of_primes : Int32) : Array(Int32)
  primes = Array.new([]of Int32) # creating an empty array to store the prime numbers
  number = 1 # starting number to check for prime

  # loop until the desired number of primes is generated
  while primes.size < number_of_primes do
    if Prime.prime?(number) # checking if the number is prime using the library
      primes << number # add the prime number to the array if it is prime
    end
    number += 1 # increment number to check the next number
  end

  return primes # return the array of prime numbers
end

# call the method and store the returned array in a variable
primes_list = generate_primes(100)

# iterate through the array and print out the numbers
for prime in primes_list do
  puts prime
end

# Output:
# 2
# 3
# 5
# 7
# 11
# 13
# 17
# 19
# 23
# 29
# 31
# 37
# 41
# 43
# 47
# 53
# 59
# 61
# 67
# 71
# 73
# 79
# 83
# 89
# 97
# 101
# 103
# 107
# 109
# 113
# 127
# 131
# 137
# 139
# 149
# 151
# 157
# 163
# 167
# 173
# 179
# 181
# 191
# 193
# 197
# 199
# 211
# 223
# 227
# 229
# 233
# 239
# 241
# 251
# 257
# 263
# 269
# 271
# 277
# 281
# 283
# 293
# 307
# 311
# 313
# 317
# 331
# 337
# 347
# 349
# 353
# 359
# 367
# 373
# 379
# 383
# 389
# 397
# 401
# 409
# 419
# 421
# 431
# 433
# 439
# 443
# 449
# 457
# 461
# 463
# 467
# 479
# 487
# 491
# 499
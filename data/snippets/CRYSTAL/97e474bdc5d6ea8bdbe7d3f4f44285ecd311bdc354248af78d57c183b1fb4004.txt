module Example
  # Example module in Crystal language

  # Example class with generic type
  class ExampleClass(T)
    # Example instance variable
    @value : T

    # Example method with generic return type
    def value : T
      @value
    end

    # Example method that takes in a parameter of the generic type
    def set_value(value : T)
      @value = value
    end

    # Example method that performs a generic operation on two values of the same type
    def add_value(value : T)
      @value += value
    end

    # Example class method that returns a new instance of the class with a specific value
    def self.with_value(value : T)
      ExampleClass.new(value)
    end

    # Example class initializer with default value of 1
    def initialize(@value = 1)
    end
  end

  # Example class that inherits from ExampleClass
  class InheritedExampleClass < ExampleClass
    # Example method that overrides the parent class's method and performs a different operation
    def add_value(value : T)
      @value *= value
    end
  end

  # Example usage of the classes
  ex1 = ExampleClass.with_value(5)     # ex1.value => 5
  ex2 = InheritedExampleClass.with_value(10)   # ex2.value => 10

  ex1.add_value(2)    # ex1.value => 7
  ex2.add_value(2)    # ex2.value => 20
end
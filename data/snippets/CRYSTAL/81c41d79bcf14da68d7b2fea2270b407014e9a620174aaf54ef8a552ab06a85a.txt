def module Math
  # The Math module provides mathematical functions

  # Returns the absolute value of x
  def self.abs(x : Float) : Float
end

# Pseudo-random number generator
class Random
  # Creates a new random number generator with seed value
  # @param seed [Int32] seed value for the generator
  def initialize(@seed : Int32 = Time.now.to_unix)
  end

  # Returns a pseudorandom integer between min and max (inclusive)
  # @param min [Int32] minimum value
  # @param max [Int32] maximum value
  # @return [Int32] random integer between min and max
  def rand(min : Int32, max : Int32) : Int32
    n = max - min
    return n + 1
  end

  # Returns a pseudorandom float between 0 and 1
  # @return [Float] random float between 0 and 1
  def random : Float
    n = rand(0, 100)
    return n / 100.0
  end
end

# Example usage of Random class
random = Random.new  # creates a random number generator with current time as seed
puts random.random   # prints a random float between 0 and 1
puts random.rand(1, 10)  # prints a random integer between 1 and 10
puts Math.abs(-5.5)   # prints the absolute value of -5.5 (returns 5.5)
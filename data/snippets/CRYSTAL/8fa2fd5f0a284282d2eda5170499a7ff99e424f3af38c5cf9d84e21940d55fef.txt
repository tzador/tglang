@[Wrap("array", Int32)]
def check_prime(number)
  sqrt = number.sqrt
  flag = true
  @[For(item) for item in 2..sqrt]
    if number % item == 0
      flag = false
    end
  end

  if flag
    puts "#{number} is a prime number."
  else
    puts "#{number} is not a prime number."
  end
end

# This method takes in an integer as its argument and checks if it is a prime number or not.
# The '@[Wrap("array", Int32)]' annotation is used to indicate that the method will return an array of Int32 values.
# The variable 'sqrt' is set to the square root of the number, which is used in the for loop to check only up to that value.
# A flag is initially set to true, and if the number is divisible by any value in the for loop, the flag is set to false.
# Finally, the flag is checked to determine if the number is prime or not, and the result is printed as a string using the 'puts' method.
# Example usage:
# check_prime(29)
# Output: 29 is a prime number.
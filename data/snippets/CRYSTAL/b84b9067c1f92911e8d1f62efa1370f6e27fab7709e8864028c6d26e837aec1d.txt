# This is a function in CRYSTAL that checks whether a number is prime or not
# Input: num - the number to be checked for primality
# Output: bool - true if num is prime, false if not
def is_prime?(num)
  # Check if num is less than or equal to 1
  if (num <= 1)
    return false
  end

  # Check if num is divisible by any number from 2 to the square root of num
  for i in 2..Math.sqrt(num).to_i
    if (num % i == 0)
      return false
    end
  end

  # If none of the above conditions are met, then num is prime
  return true
end

# This is a class in CRYSTAL that represents a person
class Person
  # Define instance variables
  @name # Stores the name of the person
  @age # Stores the age of the person
  @height # Stores the height of the person in meters

  # Initialize method that takes in name, age, and height as parameters
  # and assigns them to the instance variables
  def initialize(name, age, height)
    @name = name
    @age = age
    @height = height
  end

  # Getter method for name
  def name
    return @name
  end

  # Setter method for name
  def name=(new_name)
    @name = new_name
  end

  # Getter method for age
  def age
    return @age
  end

  # Setter method for age
  def age=(new_age)
    @age = new_age
  end

  # Getter method for height
  def height
    return @height
  end

  # Setter method for height
  def height=(new_height)
    @height = new_height
  end

  # Method that prints out a brief summary of the person
  def print_summary
    puts "Name: #{@name}"
    puts "Age: #{@age}"
    puts "Height: #{@height} meters"
  end
end

# Create a new instance of the Person class and assign it to the variable "person"
person = Person.new("John", 25, 1.8)

# Call the print_summary method on the person instance
person.print_summary

# Call the is_prime? function to check if 17 is prime
if is_prime?(17)
  puts "17 is a prime number"
else
  puts "17 is not a prime number"
end

# Output:
# Name: John
# Age: 25
# Height: 1.8 meters
# 17 is a prime number
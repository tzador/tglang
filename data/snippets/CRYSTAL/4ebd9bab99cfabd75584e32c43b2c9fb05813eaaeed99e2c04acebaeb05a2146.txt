# An example of using a class and module in CRYSTAL

# Define a module named Math
module Math

  # Define a class named Calculator
  class Calculator

    # Initialize method that takes in 2 numbers as arguments
    def initialize(number_1, number_2)
      @number_1 = number_1
      @number_2 = number_2
    end

    # Define a method that adds two numbers
    def add
      return @number_1 + @number_2
    end

    # Define a method that subtracts two numbers
    def subtract
      return @number_1 - @number_2
    end

    # Define a method that multiplies two numbers
    def multiply
      return @number_1 * @number_2
    end

    # Define a method that divides two numbers
    def divide
      return @number_1 / @number_2
    end
  end
end

# Create a new instance of the Calculator class
calculator = Math::Calculator.new(10, 5)

# Output the result of addition using the add method
puts "The sum of 10 and 5 is #{calculator.add}"

# Output the result of subtraction using the subtract method
puts "The difference between 10 and 5 is #{calculator.subtract}"

# Output the result of multiplication using the multiply method
puts "The product of 10 and 5 is #{calculator.multiply}"

# Output the result of division using the divide method
puts "The quotient of 10 and 5 is #{calculator.divide}"
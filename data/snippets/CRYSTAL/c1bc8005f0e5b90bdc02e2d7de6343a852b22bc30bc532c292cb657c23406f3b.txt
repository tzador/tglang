# This is a function that calculates the factorial of a given number
# The function takes in an integer as its argument and returns an integer as its output
def factorial(number)
  
  # Check for base case (when number is 0 or 1)
  if number <= 1
    1
  else
    # Use recursion to calculate factorial
    number * factorial(number - 1)
  end
end

# This is a function that takes in an array of numbers and returns the sum of all the numbers in the array
# The function takes in an array as its argument and returns an integer as its output
def array_sum(numbers)
  # Initialize a variable to store the sum
  sum = 0
  
  # Loop through the array and add each element to the sum variable
  numbers.each do |number|
    sum += number
  end
  
  # Return the sum
  sum
end

# This is a function that takes in a string and checks if it is a palindrome
# A palindrome is a word or phrase that reads the same backwards as forwards
# The function takes in a string as its argument and returns a boolean value as its output
def palindrome?(string)
  # Initialize a variable to store the reversed string
  reverse_string = ""
  
  # Loop through the string and add each character to the beginning of the reversed string variable
  string.chars.each do |char|
    reverse_string = char + reverse_string
  end
  
  # Check if the original string is equal to the reversed string
  if string == reverse_string
    true
  else
    false
  end
end

# This is a class that represents a person
class Person
  # Initialize the class with attributes name and age
  def initialize(name, age)
    @name = name
    @age = age
  end
  
  # Define a method to print a greeting
  def greet
    puts "Hello, my name is #{@name} and I am #{@age} years old."
  end
end

# This is a function that takes in an array of names and returns an array of greetings for each name
# The function takes in an array as its argument and returns an array as its output
def greet_all(names)
  # Initialize an empty array to store the greetings
  greetings = []
  
  # Loop through the names and create a Person object for each name
  names.each do |name|
    person = Person.new(name, 0)
    
    # Call the greet method for the person object and add the resulting greeting to the greetings array
    greetings.push(person.greet)
  end
  
  # Return the array of greetings
  greetings
end

# Example usage of the functions
puts factorial(5) # Output: 120
puts array_sum([1, 2, 3, 4, 5]) # Output: 15
puts palindrome?("racecar") # Output: true
puts palindrome?("hello") # Output: false
greetings = greet_all(["John", "Jane", "Bob"]) # Output: Hello, my name is John and I am 0 years old. Hello, my name is Jane and I am 0 years old. Hello, my name is Bob and I am 0 years old.
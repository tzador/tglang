require "socket"

# Define classes and methods
class Server
  include Socket::Constants
  
  # Sets up server socket and listens for incoming connections
  def initialize(ip, port)
    @server = Socket.new(
      Socket::AF_INET,    # Address family (IPv4)
      Socket::SOCK_STREAM,  # Socket type (TCP)
      0                    # Default protocol (IP)
    )
    @server.bind(Socket.sockaddr_in(port, ip))
    @server.listen(5)     # Number of allowed pending connections
    puts "Server listening on #{ip}:#{port}..."
  end
  
  # Handles incoming client connections
  def run
    loop do
      # Accept new client connection and spawn a thread to handle it
      Thread.new(@server.accept) do |client|
        puts "Client connected: #{client}"
        
        # Echo loop: reads input from client and echoes it back
        loop do
          data = client.gets
          puts "Received data from #{client}: #{data}"
          client.puts "Echoing: #{data}"
        end
      end
    end
  end
end

# Create and start server instance
s = Server.new("localhost", 3000)
s.run
# This is a comment in Crystal

# Define a class called Person
class Person
  # Defining instance variables
  @name : String
  @age : UInt32
  @height : Float64
  @weight : Float64

  # Defining a constructor with parameters
  # The constructor takes in a name, age, height, and weight
  def initialize(@name : String, @age : UInt32, @height : Float64, @weight : Float64)
    # Check if name is not empty and age, height, and weight are greater than 0
    raise ArgumentError.new("Name can't be empty") if @name.empty?
    raise ArgumentError.new("Age must be greater than 0") if @age <= 0
    raise ArgumentError.new("Height must be greater than 0") if @height <= 0
    raise ArgumentError.new("Weight must be greater than 0") if @weight <= 0

    # Print instance variable values
    puts "Name: #{@name}"
    puts "Age: #{@age}"
    puts "Height: #{@height}"
    puts "Weight: #{@weight}"
  end

  # Defining a method to calculate BMI
  def bmi
    # Convert height to meters
    height_in_meters = @height / 100

    # Calculate BMI by dividing weight in kilograms by square of height in meters
    bmi = @weight / (height_in_meters * height_in_meters)

    # Return BMI value
    return bmi
  end

  # Defining a method to calculate maximum heart rate
  def max_heart_rate
    # Calculate maximum heart rate by subtracting age from 220
    max_heart_rate = 220 - @age

    # Print maximum heart rate
    puts "Maximum heart rate: #{max_heart_rate}"

    # Return maximum heart rate value
    return max_heart_rate
  end
end

# Instantiate a new person with name, age, height, and weight values
person = Person.new("John", 25, 180.5, 75)

# Call bmi method and print the result
puts "BMI: #{person.bmi}"

# Call max_heart_rate method and print the result
puts "Maximum heart rate: #{person.max_heart_rate}"

# Output:
# Name: John
# Age: 25
# Height: 180.5
# Weight: 75
# BMI: 23.056181276409994
# Maximum heart rate: 195
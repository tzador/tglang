# This is a simple program in CRYSTAL
require "crypto"

# Define a class
class Cryptographer
  # Create a method to encrypt data
  def encrypt(data, key)
    # First, generate a random IV
    iv = Crypto::Utils.random_bytes(16)
    # Then, initialize the cipher with the key and IV
    cipher = Crypto::SymmetricCipher.new("aes-256-cbc", key: key, iv: iv)
    # Generate encrypted data by encrypting the data with the cipher
    encrypted_data = cipher.encrypt(data)
    # Return a hash with the encrypted data and IV
    return { encrypted_data: encrypted_data, iv: iv }
  end

  # Create a method to decrypt data
  def decrypt(encrypted_data, key, iv)
    # Initialize the cipher with the key and IV
    cipher = Crypto::SymmetricCipher.new("aes-256-cbc", key: key, iv: iv)
    # Decrypt the encrypted data using the cipher
    decrypted_data = cipher.decrypt(encrypted_data)
    # Return the decrypted data
    return decrypted_data
  end
end

# Create an instance of the Cryptographer class
cryptographer = Cryptographer.new()

# Define a key for encryption and decryption
key = "mysecretkey123"

# Define data to be encrypted
data = "This is a secret message."

# Encrypt the data using the encrypt method
encrypted_data = cryptographer.encrypt(data, key)

# Print the encrypted data and IV
puts "The encrypted data is: #{encrypted_data[:encrypted_data]}"
puts "The IV is: #{encrypted_data[:iv]}"

# Decrypt the data using the decrypt method
decrypted_data = cryptographer.decrypt(encrypted_data[:encrypted_data], key, encrypted_data[:iv])

# Print the decrypted data
puts "The decrypted data is: #{decrypted_data}"
require "http"

# Define a class named "API" with functions for HTTP requests
class API
    # Static function for making GET requests
    def self.get(url)
        # Create a new HTTP::Client object
        client = HTTP::Client.new(url)
        
        # Send a GET request and store the response in a variable
        response = client.get
        
        # Check if the response was successful
        if response.status_code == 200
            # Return the body of the response
            return response.body
        else
            # If there was an error, print it out
            puts "Error: #{response.status_code} - #{response.reason_phrase}"
        end
    end
    
    # Static function for making POST requests
    def self.post(url, body)
        # Create a new HTTP::Client object
        client = HTTP::Client.new(url)
        
        # Send a POST request with the given body and store the response in a variable
        response = client.post(body)
        
        # Check if the response was successful
        if response.status_code == 200
            # Return the body of the response
            return response.body
        else
            # If there was an error, print it out
            puts "Error: #{response.status_code} - #{response.reason_phrase}"
        end
    end
end

# Make a GET request and print the response body
puts API.get("https://www.example.com")

# Create a new JSON object with some data
data = {"name" => "John", "age" => 25}

# Make a POST request with the JSON data and print the response body
puts API.post("https://www.example.com/users", data.to_json)

# Output:
# <html>
#    <head>
#       <title>Example Domain</title>
#    </head>
#
#    <body>
#        <h1>Success!</h1>
#    </body>
# </html>

# Success!
# {"id": 1, "name": "John", "age": 25}
# This is a complex function that takes in two arrays of integers and returns a new array
# containing the product of each element in the first array multiplied by the sum of
# the second array.

def complex_func(arr1 : Array(Int32), arr2 : Array(Int32)) : Array(Int32)
  # Initialize an empty array to store the output
  output_arr = Array(Int32).new

  # Loop through each element in the first array
  arr1.each do |num1|
    sum = 0

    # Loop through each element in the second array and calculate the sum
    arr2.each do |num2|
      sum += num2
    end

    # Calculate the product of the current element in the first array and the sum
    product = num1 * sum

    # Add the product to the output array
    output_arr << product
  end

  # Return the final output array
  return output_arr
end

# Example input arrays
arr1 = [1, 2, 3, 4, 5]
arr2 = [6, 7, 8, 9, 10]

# Call the complex function and store the result in a variable
result = complex_func(arr1, arr2)

# Print the result
puts result

# Output:
[30, 60, 90, 120, 150]
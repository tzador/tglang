module ExampleModule

# This is a comment in CRYSTAL
# We are defining a class called ExampleClass
class ExampleClass
  # This is a comment inside the class

  # A constant variable with a value
  MY_CONSTANT = "This is a constant"

  # A class variable, shared among all instances of the class
  @@class_variable = "This is a class variable"

  # A class method, can be called on the class itself
  def self.class_method
    puts "This is a class method"
  end

  # An instance method, can only be called on an instance of the class
  def instance_method
    puts "This is an instance method"
  end

  # A private instance method, can only be called from within the class
  private def private_instance_method
    puts "This is a private instance method"
  end

  # A method with parameters
  def method_with_parameters(param1, param2)
    puts "This method takes two parameters: #{param1} and #{param2}"
  end

  # A method with a default parameter value
  def method_with_default_parameter(param1 = "Default Parameter")
    puts "This method has a default parameter of #{param1}"
  end

  # A method with a splat parameter, takes in an unknown number of arguments
  def method_with_splat(*args)
    puts "This method takes an unknown number of arguments"
    args.each do |arg|
      puts arg
    end
  end

  # A method with a block parameter
  def method_with_block(&block)
    puts "This method takes a block"
    block.call if block_given?
  end

end

# Create an instance of ExampleClass
example = ExampleClass.new

# Call the instance method
example.instance_method

# Call the method with parameters
example.method_with_parameters("Hello", "World")

# Call the method with a default parameter
example.method_with_default_parameter

# Call the method with a splat parameter
example.method_with_splat("Argument 1", "Argument 2", "Argument 3")

# Call the method with a block
example.method_with_block do
  puts "This is a block"
end

# Call the class method
ExampleClass.class_method

# Access the constant variable
puts ExampleClass::MY_CONSTANT

# Access the class variable
puts ExampleClass.class_variable

# Attempt to call the private instance method (will result in an error)
# example.private_instance_method
# This is a complex method that takes in an array of integers and returns a new array with all prime numbers removed

def remove_primes(array : Array(Int)) : Array(Int)
    non_primes = [] # create a new empty array to store non-prime numbers
    array.each do |num| # iterate through the input array
        is_prime = true # create a flag to track if current number is prime or not
        for i in 2..num-1 do # loop through all numbers from 2 to one less than current number
            if num % i == 0 # if current number can be divided by any number other than itself
                is_prime = false # set flag to false, current number is not prime
                break # stop the loop as we don't need to check any more numbers
            end
        end
        if is_prime # if current number is still marked as prime
            non_primes << num # add it to the non-prime array
        end
    end
    return non_primes # return the array of non-prime numbers
end

# Example call to the above method with an input array
remove_primes([2, 5, 6, 7, 9, 11, 13, 15]) # Output: [6, 9, 15]
# This is a function that calculates the factorial of a given number using recursion
# It takes in one argument: num (type: Int32)
def factorial(num)
  # Base case: if num is equal to 0, the factorial is 1
  return 1 if num == 0
  # Recursive case: calls the factorial function again with num - 1 as the argument
  # and multiplies the result with num
  return factorial(num - 1) * num
end

# This is a class called Person with two properties: name (type: String) and age (type: Int32)
class Person
  # initialize method that takes in values for name and age as arguments
  def initialize(@name : String, @age : Int32)
  end

  # This is a getter method that returns the name property
  def name
    # returns name property
    @name
  end

  # This is a setter method that sets the value for the age property
  def age=(value)
    # sets the age property to the given value
    @age = value
  end
end

# This is a function that takes in two arrays of strings and compares them to find any matching elements
# It returns an array of the matching elements
def find_matches(array1, array2)
  # initialize an empty array to store matches
  matches = [] of String
  # loop through each element in array1
  for element1 in array1
    # loop through each element in array2
    for element2 in array2
      # check if the elements are equal
      if element1 == element2
        # if they are equal, add the element to the matches array 
        matches << element1
      end
    end
  end
  # return the array of matches
  matches
end

# This is a hash with key-value pairs of vocabulary words and their definitions
definitions = {
  "aberration" => "a departure from what is normal, usual, or expected, typically one that is unwelcome",
  "rhetoric" => "the art of effective or persuasive speaking or writing, especially the use of figures of speech and other compositional techniques",
  "pulchritude" => "beauty",
  "obfuscate" => "make obscure, unclear, or unintelligible",
}

# This is a loop that iterates through the hash and prints out each key-value pair
for word, definition in definitions
  puts "#{word}: #{definition}"
end

# This is a class called Book that inherits from the Person class
class Book < Person
  # initialize method that calls the parent's initialize method and takes in an additional argument, genre (type: String)
  def initialize(name, age, @genre : String)
    # calls the parent's initialize method with the name and age arguments
    super(name, age)
  end

  # This is a getter method that returns the genre property
  def genre
    # returns genre property
    @genre
  end

  # This is a setter method that sets the value for the genre property
  def genre=(value)
    # sets the genre property to the given value
    @genre = value
  end
end
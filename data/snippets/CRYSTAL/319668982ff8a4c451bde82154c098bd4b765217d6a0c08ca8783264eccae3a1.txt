# Define a module named 'Math'
module Math
  # Define a constant integer
  MAX = 100

  # Define a class named 'Calculator'
  class Calculator
    # Define a class instance variable
    @@count = 0

    # Define a class method that takes two integers as arguments and returns the sum
    def self.add(a : Int, b : Int)
      return a + b
    end

    # Define an instance method that takes a float as argument and returns the square root
    def sqrt(n : Float)
      return Math.sqrt(n)
    end

    # Define a private method that takes a string as argument and prints it
    private def print_message(message : String)
      puts message
    end 

    # Define a create method that takes two integers as arguments and returns a new Calculator instance
    def self.create(a : Int, b : Int)
      @@count += 1
      return Calculator.new(a, b)
    end

    # Define an initialize method that sets the instance variables
    def initialize(x : Int, y : Int)
      @a = x
      @b = y
    end

    # Define a getter method for the instance variable @a
    def a
      @a
    end

    # Define a setter method for the instance variable @b
    def b=(value)
      @b = value
    end

    # Define a class method that returns the value of the class instance variable @@count
    def self.count
      @@count
    end
  end
end 

# Create a new instance of Calculator class
calc = Math::Calculator.create(5, 8)

# Call the class method 'add' on the Calculator class with arguments 10 and 20
Math::Calculator.add(10,20)

# Call the instance method 'sqrt' on the calc object with argument 25.0
calc.sqrt(25.0)

# Set the value of the instance variable @b using the setter method
calc.b = 15

# Get the value of the instance variable @a using the getter method
calc.a

# Call the private method 'print_message' on the calc object with argument "Hello World"
calc.send(:print_message, "Hello World")

# Print the value of the class instance variable @@count
puts Math::Calculator.count

# Use the constant MAX to set a new value
MAX = 50
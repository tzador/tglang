# This is a comment in CRYSTAL, which starts with a '#'
class Animal # Creating a class named 'Animal'
  property name # Creating a property 'name' in the class

  def initialize(@name) # Defining an initializer that takes in a parameter 'name' and sets it to an instance variable (@)
  end

  def speak(sound) # Creating a method 'speak' that takes in a parameter 'sound' 
    puts "The #{self.name} says #{sound}" # Using interpolation to output the name and sound passed in
  end

  def self.sleep(time) # Defining a class method 'sleep' that takes in a parameter 'time'
    puts "The #{self.name} sleeps for #{time} hours." # Using interpolation to output the name of the class and the time parameter
  end
end

class Dog < Animal # Creating a subclass 'Dog' that inherits from the 'Animal' class
  def initialize(name) # Defining an initializer that takes in a parameter 'name'
    super(name) # Calling the superclass initializer and passing in the 'name' parameter
  end

  def bark # Creating a method 'bark'
    self.speak("woof woof") # Calling the 'speak' method from the superclass and passing in the 'woof woof' string as a parameter
  end
end

dog = Dog.new("Rufus") # Creating an instance of the Dog class and passing in the argument 'Rufus' for the 'name' parameter
dog.bark # Calling the 'bark' method on the 'dog' instance, outputs "The Rufus says woof woof"

Dog.sleep(8) # Calling the 'sleep' class method on the Dog class, outputs "The Dog sleeps for 8 hours."
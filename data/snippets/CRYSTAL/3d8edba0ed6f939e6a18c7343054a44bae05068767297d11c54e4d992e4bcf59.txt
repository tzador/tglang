# This is a complex code snippet in CRYSTAL programming language.

# Define a recursive function called 'fibonacci' with an integer parameter 'n'.
def fibonacci(n : Int32)

    # Check if the input is 0 or 1 and return the input as the output.
    if n == 0 || n == 1
        return n
    end

    # Create a variable 'a' with type Int32 and assign it a value of 0.
    a : Int32 = 0

    # Create a variable 'b' with type Int32 and assign it a value of 1.
    b : Int32 = 1

    # Create a variable 'result' with type Int32 and assign it a value of 0.
    result : Int32 = 0

    # Use a 'while' loop to calculate the fibonacci sequence up to the input value.
    while n > 1

        # Increase the value of 'result' by the value of 'a'.
        result += a

        # Swap the values of 'a' and 'b'.
        temp = a
        a = b
        b = temp

        # Increase the value of 'b' by the old value of 'a'.
        b += a

        # Decrease the value of 'n' by 1.
        n -= 1
    end

    # Return the calculated fibonacci sequence.
    return result
end

# Call the 'fibonacci' function and assign its output to a variable 'result'.
result = fibonacci(10)

# Print the output to the console.
puts "The 10th number in the fibonacci sequence is: #{result}"

# Define a class 'Person' with two instance variables, 'name' and 'age'.
class Person
    property name : String
    property age : Int32

    # Define a constructor with two parameters, 'name' and 'age'.
    def initialize(@name : String, @age : Int32)
    end
end

# Create an instance of the 'Person' class with the name 'John' and age 30.
person = Person.new("John", 30)

# Print out the name and age of the person.
puts "Name: #{person.name}, Age: #{person.age}"
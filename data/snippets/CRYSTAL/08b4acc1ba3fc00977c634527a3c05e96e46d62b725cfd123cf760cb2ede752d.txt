# This is a complex code snippet in CRYSTAL language.

# Declare a variable "name" of type String and assign it the value "Crystal"
name : String = "Crystal"

# Define a constant "age" of type Int and assign it the value 25
const age : Int = 25

# Create an empty array "friends" of type String
friends : Array(String) = [] of String

# Define a function "greet" with 2 parameters: "name" of type String and "age" of type Int
def greet(name : String, age : Int)
  # Print a message using string interpolation
  puts "Hello #{name}, you are #{age} years old."
end

# Call the "greet" function with arguments
greet(name, age)

# Create a hash "pet" with keys "name" and "species" and assign values
pet : Hash(String, String) = {"name" => "Fluffy", "species" => "Cat"}

# Loop over the hash and print the key-value pairs
for key, value in pet
  puts "My #{key} is a #{value}."
end

# Define a class "Person" with 3 attributes: name, age, and friends
class Person
  property name : String
  property age : Int
  property friends : Array(String)

  # Initialize the class with name and age parameters
  def initialize(@name, @age)
    # Initialize an empty array for friends
    @friends = [] of String
  end
end

# Create an instance of Person class named "person1" with name "Alice" and age 30
person1 = Person.new("Alice", 30)

# Add "Bob" to person1's friends array
person1.friends << "Bob"

# Print person1's name and age
puts "Person 1's name is #{person1.name} and they are #{person1.age} years old."

# Print person1's friends using string interpolation
puts "#{person1.name} has #{person1.friends.size} friends: #{person1.friends.join(', ')}"
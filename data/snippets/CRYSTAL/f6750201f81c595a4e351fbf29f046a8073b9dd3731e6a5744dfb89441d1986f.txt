# This function takes in two arguments of type String and returns a new String
def concatenate_words(word_one, word_two)
  # We first check if the arguments are of type String
  # If not, an exception is raised
  raise "Invalid argument types" unless word_one.is_a?(String) && word_two.is_a?(String)

  # We then declare a variable to store the concatenated word and set it as an empty string
  concatenated_word = ""

  # We loop through each character in the first word
  word_one.each_char do |character|
    # We check if the character is a vowel
    # If it is, we capitalize it and add it to the concatenated word
    if character == 'a' || character == 'e' || character == 'i' || character == 'o' || character == 'u'
      concatenated_word << character.upcase
    else
      # If not a vowel, we add it to the concatenated word as is
      concatenated_word << character
    end
  end

  # We then add a space to the concatenated word
  concatenated_word << " "

  # We loop through each character in the second word
  word_two.each_char do |character|
    # We check if the character is a consonant
    # If it is, we capitalize it and add it to the concatenated word
    if character != 'a' && character != 'e' && character != 'i' && character != 'o' && character != 'u'
      concatenated_word << character.upcase
    else
      # If not a consonant, we add it to the concatenated word as is
      concatenated_word << character
    end
  end

  # We return the final concatenated word
  concatenated_word
end

# Example usage
concatenate_words("hello", "world") #=> HEllO WOrld
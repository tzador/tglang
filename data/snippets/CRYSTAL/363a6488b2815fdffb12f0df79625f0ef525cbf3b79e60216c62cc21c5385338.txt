require "http/server"

# Define a class for our server
class MyServer < HTTP::Server
  # A route to handle GET requests on the root path
  getter root_handler : HTTP::Server::Handler? = ->(context) {
    # Set the response status
    context.response.status_code = 200
    # Set the response body
    context.response.print("Hello World!")
  }

  # A route to handle POST requests on the "/users" path
  getter users_handler : HTTP::Server::Handler? = ->(context) {
    # Parse the request body into a hash
    form_data = HTTP::Params::Multipart.new(context.request.body)["user"]
    # Set the response status
    context.response.status_code = 200
    # Set the response body with the user's name retrieved from the form data
    context.response.print("Hello, #{form_data["name"]}!")
  }

  # Define a method to start the server
  def start
    # Add the root and users handlers to the server
    add_handler("/", root_handler)
    add_handler("/users", users_handler)

    # Start the server on port 3000
    bind_tcp("0.0.0.0", 3000)
    # Print a message to indicate that the server has started
    puts "Server listening on http://localhost:3000"
    # Start the server
    listen
  end
end

# Create an instance of our server class
server = MyServer.new
# Start the server
server.start
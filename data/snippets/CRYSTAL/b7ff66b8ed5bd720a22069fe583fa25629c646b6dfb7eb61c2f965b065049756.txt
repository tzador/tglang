# This is a class that represents a binary tree data structure
class BinaryTree

  # Public method to insert a value into the tree
  # @param value [Comparable] The value to insert into the tree
  def insert(value)
    if @root.nil?
      @root = Node.new(value)
    else
      @root.insert(value)
    end
  end

  # Public method to search for a specific value in the tree
  # @param value [Comparable] The value to search for
  # @return [Bool] True if the value is found, False if not
  def search(value)
    return false if @root.nil?

    @root.search(value)
  end

  # Internal class that represents a node in the tree
  class Node

    # Getter and setter for the node's value
    # @return [Comparable] The node's value
    attr_accessor value

    # Getter and setter for the node's left child
    # @return [Node] The node's left child
    attr_accessor left

    # Getter and setter for the node's right child
    # @return [Node] The node's right child
    attr_accessor right

    # Constructor for creating a new node
    # @param value [Comparable] The value the node will hold
    def initialize(value)
      @value = value
      @left = nil
      @right = nil
    end

    # Method for inserting a value into the tree starting at this node
    # @param value [Comparable] The value to insert
    def insert(value)
      if value < @value
        if @left.nil?
          @left = Node.new(value)
        else
          @left.insert(value)
        end
      elsif value > @value
        if @right.nil?
          @right = Node.new(value)
        else
          @right.insert(value)
        end
      end
    end

    # Method for searching for a specific value in the tree starting at this node
    # @param value [Comparable] The value to search for
    # @return [Bool] True if the value is found, False if not
    def search(value)
      if value == @value
        return true
      elsif value < @value
        return false if @left.nil?

        return @left.search(value)
      elsif value > @value
        return false if @right.nil?

        return @right.search(value)
      end
    end
  end
end
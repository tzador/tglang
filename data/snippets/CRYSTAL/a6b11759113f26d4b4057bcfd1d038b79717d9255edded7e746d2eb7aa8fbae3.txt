require "json"

class Person
  # This is the Person class. It represents a person with a name and age.
  
  getter name : String
  getter age : Int32
  
  # This is the initialize function for creating a new Person object.
  def initialize(@name : String, @age : Int32)
  end
  
  # This is a instance method that returns a formatted string of the person's name and age.
  def to_s
    "#{@name} is #{@age} years old."
  end
end

# This is a module for handling API requests and responses.
module Api
  # This method takes in a url and parses the json response into a Crystal hash object.
  def self.request(url)
    response = HTTP::Client.get(url)
    JSON.parse(response.body)
  end
  
  # This method takes in a Crystal hash object and converts it to JSON before sending a POST request.
  def self.post(data, url)
    body = data.to_json
    HTTP::Client.post(url, body)
  end
end

# This is a class that inherits from the Person class and adds a role attribute.
class Employee < Person
  getter role : String
  
  # This is the initialize function that takes in an additional role parameter.
  def initialize(name, age, @role : String)
    super(name, age)
  end
  
  # This method overrides the to_s method from the Person class to include the employee's role.
  def to_s
    "#{@name} is a #{@role} and is #{@age} years old."
  end
end

# This is an example of creating a new Employee and printing out their details.
employee = Employee.new("John Doe", 30, "Software Engineer")
puts employee.to_s
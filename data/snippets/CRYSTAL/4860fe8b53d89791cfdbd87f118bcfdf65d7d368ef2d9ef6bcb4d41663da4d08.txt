module User
  
  # Creates a User class with attributes name and age
  class User
    property name : String
    property age : Int32

    # Initializes a User instance with given name and age
    def initialize(@name : String, @age : Int32)
    end

    # Sets a new age for the user and prints a message
    def change_age(new_age)
      puts "Changing age from #{@age} to #{new_age} for user #{@name}"
      @age = new_age
    end
  end

  # Creates a UserList class with attribute users that is an array of User instances
  class UserList
    property users : Array(User)

    # Initializes a UserList instance with an empty users array
    def initialize
      @users = Array(User).new
    end

    # Adds a new user to the users array
    def add_user(user)
      @users << user
    end
  end

end

# Creates a UserList instance
user_list = User::UserList.new

# Creates two User instances and adds them to the UserList
user1 = User::User.new("John", 25)
user_list.add_user(user1)

user2 = User::User.new("Jane", 30)
user_list.add_user(user2)

# Loops through the UserList and changes the age of each user
user_list.users.each do |user|
  user.change_age(user.age + 5)
end

# Prints out the updated age for each user
user_list.users.each do |user|
  puts "#{user.name} is now #{user.age} years old"
end

# Output:
#
# Changing age from 25 to 30 for user John
# Changing age from 30 to 35 for user Jane
# John is now 30 years old
# Jane is now 35 years old
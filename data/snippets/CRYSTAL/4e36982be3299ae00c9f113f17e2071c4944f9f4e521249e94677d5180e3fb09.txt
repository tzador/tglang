# This is a class with a generic type T.
class GenericClass(T)

  # Initializes a new instance of the class with a given value of type T.
  def initialize(@value : T)
    # This is an instance variable.
    @value : T 
  end

  # A method that takes in a block and executes it.
  def execute(&block)
    block.call(@value)
  end

  # A method that uses the power function on the value.
  # Returns the result as a generic type.
  def power(exponent : Int) : T
    @value ** exponent
  end

end

# Instantiates the generic class with an Integer as the type.
my_int = GenericClass(Int).new(5)

# Prints the result of the power method using a block to pass in the exponent.
puts my_int.execute { |value| value.power(3) }

# Instantiates the generic class with a String as the type.
my_str = GenericClass(String).new("Hello")

# Prints the result of the power method using a block to pass in the exponent.
puts my_str.execute { |value| value.power(2) }

# Output:
# 125
# HelloHello
# This is a complex recursive function that calculates the factorial of a given number
def factorial(n)
  if n < 2     # check if n is smaller than 2
    return 1   # if so, return 1 as the factorial of 0 or 1 is 1
  else
    return n * factorial(n-1)   # if n is larger than 1, call the function recursively with n-1
  end
end

# This is a helper function that calculates the sum of an array using recursion
def sum(array, i = 0, total = 0)
  if i < array.size     # check if the index i is smaller than the size of the array
    return total + array[i] + sum(array, i+1, total)   # if so, add the value at index i to total and call the function recursively with i+1
  else
    return total   # if the index is equal to the size, return the total sum
  end
end

# This is a class to represent a person with a name and an age
class Person
  attr_accessor name :String, age :Int32

  def initialize(@name, @age)
    # validate the age is positive
    if age < 0
      @age = age.abs
    end
  end

  # This method returns the person's name
  def get_name
    return @name
  end

  # This method returns the person's age
  def get_age
    return @age
  end

  # This method increases the person's age by 1
  def celebrate_birthday
    @age += 1
  end
end

# This is an array of persons with different names and ages
persons = [Person.new("John", 25), Person.new("Jessica", 32), Person.new("David", 41)]

# This is a loop that iterates through the array and prints each person's name and age
for person in persons do
  puts "Name: #{person.get_name}"
  puts "Age: #{person.get_age}"
end

# This is a hash of numbers and their respective squares
numbers = {1 => 1, 2 => 4, 3 => 9, 4 => 16, 5 => 25}

# This is a loop that iterates through the hash and prints each number and its square
for key, value in numbers do
  puts "Number: #{key}"
  puts "Square: #{value}"
end

# This is a string variable containing a sentence
sentence = "I am learning the Crystal programming language and it is quite complex."

# This is a loop that iterates through the string and prints each character
for char in sentence.chars do
  puts char
end

# This is a boolean variable that holds the value true
is_true = true

# This is a conditional statement that checks if the variable is true and prints a message if so
if is_true
  puts "This is the end of the code snippet. Thank you for checking it out!"
end
# Define a module
module MyModule
  # Create a class
  class MyClass
    # Define a macro
    macro my_macro
      "Hello from #{__FILE__}"
    end

    # Define a method
    def my_method
      puts "I am a method in MyClass"
    end
  end

  # Create an instance of MyClass
  my_class = MyClass.new

  # Call the method
  my_class.my_method

  # Use the macro
  my_class.my_macro #=> "Hello from /path/to/file.cr"

  # Define a constant
  MY_CONSTANT = "This is a constant"

  # Create a generic type
  type MyGenericType(T)
    # Define an instance variable
    @value : T

    # Define a getter method
    def value
      @value
    end

    # Define a setter method
    def value=(new_value)
      @value = new_value
    end
  end

  # Create an instance of MyGenericType with type Integer
  my_generic = MyGenericType(Int32).new(5)

  # Call the getter method
  my_generic.value #=> 5

  # Call the setter method
  my_generic.value = 10
end
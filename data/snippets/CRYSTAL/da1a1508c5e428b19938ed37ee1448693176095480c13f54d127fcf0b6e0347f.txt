module Fibonacci

  # This method recursively calculates the value of the nth Fibonacci number
  def calculate_fibonacci(number : Int32) : Int32

    # Base case for the recursive function
    if number < 2
      return number
    end

    # Recursive call to calculate the previous two Fibonacci numbers and add them together
    return calculate_fibonacci(number - 1) + calculate_fibonacci(number - 2)
  end

  # This method prints out the first n Fibonacci numbers
  def print_fibonacci_sequence(n : Int32) : Nil

    # Initialize an array to store the Fibonacci numbers
    fibonacci_sequence = Array(Int32).new(n)

    # Loop through n numbers to calculate and store the Fibonacci numbers in the array
    for i in 0..n-1
      fibonacci_sequence[i] = calculate_fibonacci(i)
    end

    # Print out the Fibonacci sequence
    puts "Fibonacci Sequence up to #{n} numbers: "

    # Loop through the array and print out each Fibonacci number
    for number in fibonacci_sequence do
      puts "#{number}"
    end
  end
end

# Call the print_fibonacci_sequence method to print out the first 10 Fibonacci numbers
Fibonacci.print_fibonacci_sequence(10)
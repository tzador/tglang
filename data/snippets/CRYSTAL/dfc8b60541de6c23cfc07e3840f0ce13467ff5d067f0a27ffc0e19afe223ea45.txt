# This is a class for creating and manipulating matrices

class Matrix
  property data : Array(Array(Int32))

  # Initializes the matrix with random values
  def initialize
    # Set the matrix size to 3x3
    data = Array(Array(Int32)).new(3, 3)

    # Populate the matrix with random values
    3.times do |i|
      3.times do |j|
        data[i][j] = Random.rand(10)
      end
    end
  end

  # Transposes the Matrix
  def transpose
    # Create a new transposed matrix
    transposed = Array(Array(Int32)).new(3, 3)

    # Copy values from the original matrix to the transposed matrix
    3.times do |i|
      3.times do |j|
        transposed[i][j] = data[j][i]
      end
    end

    return transposed
  end

  # Multiplies two Matrices
  def multiply(other)
    # Create a new matrix with the appropriate dimensions for multiplication
    multiplied = Array(Array(Int32)).new(3, 3)

    # Perform matrix multiplication
    3.times do |i|
      3.times do |j|
        3.times do |k|
          multiplied[i][j] += data[i][k] * other[k][j]
        end
      end
    end

    return multiplied
  end

  # Prints the Matrix in a readable format
  def print
    # Iterate through each row and column and print the corresponding value
    3.times do |i|
      3.times do |j|
        printf "%d ", data[i][j]
      end
      puts ""
    end
    # Output will be in the format:
    # 1 2 3
    # 4 5 6
    # 7 8 9
  end
end

# Example usage of the Matrix class
# Create two matrices
m1 = Matrix.new
m2 = Matrix.new

# Print the first matrix
puts "Matrix m1:"
m1.print
# Prints:
# 3 1 8
# 0 5 2
# 6 4 1

# Print the second matrix
puts "\nMatrix m2:"
m2.print
# Prints:
# 9 8 7
# 6 5 4
# 3 2 1

# Transpose the second matrix and print the transposed matrix
puts "\nTransposed m2:"
m2.transpose.print
# Prints:
# 9 6 3
# 8 5 2
# 7 4 1

# Multiply the two matrices and print the result
puts "\nMultiplied m1 and m2:"
m1.multiply(m2).print
# Prints:
# 71 54 33
# 48 25 16
# 81 54 33
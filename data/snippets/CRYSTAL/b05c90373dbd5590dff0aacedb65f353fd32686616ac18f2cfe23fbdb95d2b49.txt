# Define a module for creating a custom data structure
module CustomDataStructure

  # Define a class for our data structure, takes in a key and value
  # parameter
  class DStructure(K, V)

    # Initialize our data structure with an empty hash
    def initialize
      @data = Hash(K, V).new
    end

    # Add a key-value pair to our data structure
    def add_element(key, value)
      @data[key] = value
    end

    # Method to get the value of a given key
    def get_element(key)
      @data[key]
    end

    # Method to check if a key exists in our data structure
    def key_exists?(key)
      @data.key?(key)
    end

    # Method to retrieve all keys in our data structure
    def get_keys
      @data.keys
    end

    # Method to retrieve all values in our data structure
    def get_values
      @data.values
    end

    # Method to find the minimum key in our data structure
    def find_min_key
      @data.min_by { |k, v| k }[0]
    end

    # Method to find the maximum key in our data structure
    def find_max_key
      @data.max_by { |k, v| k }[0]
    end

    # Method to find the minimum value in our data structure
    def find_min_value
      @data.min_by { |k, v| v }[1]
    end

    # Method to find the maximum value in our data structure
    def find_max_value
      @data.max_by { |k, v| v }[1]
    end

    # Method to delete a given key from our data structure
    def delete_key(key)
      @data.delete(key)
    end

    # Method to clear all elements from our data structure
    def clear_structure
      @data.clear
    end
  end
end
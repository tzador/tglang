class Person
  # Inherit from Struct and include Comparable module
  include Struct
  include Comparable

  # Define attributes for name and age
  attr_accessor name : String, age : Int32

  # Initialize method for the Person class
  def initialize(@name : String, @age : Int32)
  end

  # Implement the Comparable module's <=> method to compare ages
  def <=>(other)
    self.age <=> other.age
  end
end

# Create instances of the Person class
john = Person.new("John", 25)
jane = Person.new("Jane", 30)

# Call the Comparable module's <, >, and between? methods on the instances
puts john < jane # Output: true
puts john > jane # Output: false
puts john.between?(jane, john) # Output: true

# Define a module called Greeter
module Greeter
  # Include the Person class we defined earlier
  include Person

  # Define a method to greet the person
  def greet
    puts "Hello, #{@name}! You are #{@age} years old."
  end
end

# Call the greet method on the instances of Person
john.greet # Output: Hello, John! You are 25 years old.
jane.greet # Output: Hello, Jane! You are 30 years old.
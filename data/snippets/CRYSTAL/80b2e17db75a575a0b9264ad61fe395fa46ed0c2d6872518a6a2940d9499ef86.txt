# This is a code snippet in Crystal

# Define a nested module called MyModule
module MyModule
  # Create a constant with a string value
  CONSTANT_VAL = "Hello, World!"

  # Define a custom class
  class CustomClass
    # Define instance variables
    @name : String
    @age : Int32

    # Define a constructor method with parameters
    def initialize(name : String, age : Int32)
      @name = name
      @age = age
    end

    # Define an instance method that prints the instance variables
    def print_info
      puts "Name: #{@name}"
      puts "Age: #{@age}"
    end
  end

  # Define a method that takes in a block
  def my_method(&block)
    # Execute the block passed in
    yield
  end

  # Define an array of integers
  my_array = [1, 2, 3, 4, 5]

  # Use a loop to print each element of the array
  for num in my_array
    puts num
  end

  # Create an instance of CustomClass
  my_instance = CustomClass.new("John", 25)

  # Call the print_info method on the instance
  my_instance.print_info

  # Call the my_method passing in a block
  my_method do
    # Print a string
    puts "Inside the block!"
  end
end

# Use the constant from MyModule 
puts MyModule::CONSTANT_VAL

# Output:
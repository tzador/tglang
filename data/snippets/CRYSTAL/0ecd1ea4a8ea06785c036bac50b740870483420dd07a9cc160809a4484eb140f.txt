# This is a complex class definition
class Complex
    # Initialize method takes in an integer for the real part and another for the imaginary part
    def initialize(real : Int32, imag : Int32)
        @real = real
        @imag = imag
    end

    # Method to add two complex numbers
    def +(other : Complex) : Complex
        return Complex.new(@real + other.real, @imag + other.imag)
    end

    # Method to multiply two complex numbers
    def *(other : Complex) : Complex
        return Complex.new(@real * other.real - @imag * other.imag, @imag * other.real + @real * other.imag)
    end

    # Method to calculate the magnitude of a complex number
    def magnitude : Float64
        return Math.sqrt(@real*@real + @imag*@imag)
    end

    # Method to check if two complex numbers are equal
    def ==(other : Complex) : Bool
        return @real == other.real && @imag == other.imag
    end
end

# Create two instances of Complex class
c1 = Complex.new(3, 2)
c2 = Complex.new(1, 4)

# Add and multiply them
sum = c1 + c2
prod = c1 * c2

# Print the results and check equality
puts("Sum: #{sum.real} + #{sum.imag}i")
puts("Product: #{prod.real} + #{prod.imag}i")
puts("Are they equal? #{c1 == c2}")
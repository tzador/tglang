require "json"
require "http/client"

# Defines a function that takes in a string as an argument
def cipher(message : String) : String
  # Initializes a hash to store the encrypted characters
  encrypted_chars = Hash(Char, Char).new

  # Loops through the ASCII characters from 32 (space) to 126 (~)
  (32..126).each do |num|
    # Gets the ASCII character for the current number
    char = String.new << num

    # Uses the num as the key and shifts it by 4 to get the encrypted character
    encrypted_chars[num.chr] = (num + 4).chr
  end

  # Loops through the characters in the original message
  message.each_char do |char|
    # Checks if the character is a key in the encrypted_chars hash
    if encrypted_chars.key?(char)
      # Replaces the original character with the encrypted character
      message.gsub!(char, encrypted_chars[char])
    end
  end

  # Returns the encrypted message
  message
end

# Defines a function to make a POST request to an API with JSON body
def make_api_request(url : String, params : Hash)
  # Converts the parameters hash to a JSON string
  body = params.to_json
  # Initializes a new HTTP client
  client = HTTP::Client.new(url)

  # Creates a new request with method POST and sets the body
  request = HTTP::Request.new("POST", body: body)

  # Executes the request and gets the response
  response = client.execute(request)

  # Returns the response body as a JSON object
  JSON.parse(response.body)
end

# Example usage of the cipher function
encrypted_message = cipher("Hello World!")
puts(encrypted_message) # "Lips\\#Aevos!" (original message shifted by 4)

# Example usage of the make_api_request function with a POST request
params = {"username" => "johnsmith", "password" => "crystalsparkle"}
response = make_api_request("https://example.com/login", params)
puts(response) # {"success": true, "message": "Login successful"}
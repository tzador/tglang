# This program sorts a list of integers using the insertion sort algorithm

# This function takes in a list and sorts it using insertion sort
# Annotated code snippet in triple backticks
def insertion_sort(list)
  list_size = list.size
  # Loop through the list starting at index 1
  (1...list_size).each do |i|
    # Save the current value at index i
    temp = list[i]
    # Loop through the sorted portion of the array backwards
    # until we find the correct index to insert the current value
    j = i - 1
    while j >= 0 && list[j] > temp
      # Shift the values to the right until we reach the correct index
      list[j + 1] = list[j]
      j -= 1
    end
    # Insert the current value at the correct index
    list[j + 1] = temp
  end
end

# Test the function with a sample list
unsorted_list = [5, 3, 8, 1, 9]
insertion_sort(unsorted_list)

# Output: [1, 3, 5, 8, 9]
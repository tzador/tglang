# This is a fibonacci function written in Crystal

# Defines a constant called `FIBONACCI_CACHE`
# This will store pre-calculated values for faster execution
# `Int32` is a built-in class in Crystal for 32-bit integers
FIBONACCI_CACHE = Hash(Int32, Int32).new

# Defines a method `fibonacci` with a single parameter `n` of type Int32
def fibonacci(n)
  # Checks if the `n` parameter is already in the cache
  if FIBONACCI_CACHE.key?(n)
    # Returns the stored value if found
    return FIBONACCI_CACHE[n]
  end

  # If not found, calculates the fibonacci value using recursion
  # and stores it in the cache
  value = if n <= 1
    n
  else
    fibonacci(n-1) + fibonacci(n-2)
  end

  # Stores the value in the cache
  FIBONACCI_CACHE[n] = value

  # Returns the calculated value
  value
end

# Calls the `fibonacci` method with a parameter of 10
# and stores the result in a variable `result`
result = fibonacci(10)

# Prints the result
puts result
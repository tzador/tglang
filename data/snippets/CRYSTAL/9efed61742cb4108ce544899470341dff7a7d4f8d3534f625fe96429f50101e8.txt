# This is a function that accepts an array of integers and returns their average as a float
#
# Args:
# - arr : Array(Int) - the array of integers to calculate average from
# 
# Returns:
# - Float - the average of the integers in the array
def calculate_average(arr : Array(Int)) : Float
    # initialize a variable to store the sum of the integers
    sum = 0
    # loop through the array and add each integer to the sum variable
    arr.each do |num|
        sum += num
    end
    # calculate the average by dividing the sum by the number of integers in the array
    average = sum / arr.size.to_f
    # return the average as a float
    return average
end

# Example usage of the function:
# 
# arr = [1, 2, 3, 4, 5]
# average = calculate_average(arr)
# puts average  # Output: 3.0

# This is a recursive function that calculates the factorial of a given number
#
# Args:
# - num : Int - the number to calculate factorial for
# 
# Returns:
# - Int - the factorial of the given number
def factorial(num : Int) : Int
    if num <= 1
        # base case: factorial of 1 is 1
        return 1
    else
        # recursive case: call the factorial function again with the number decremented by 1
        # and multiply it with the current number
        return num * factorial(num - 1)
    end
end

# Example usage of the function:
#
# num = 5
# factorial = factorial(num)
# puts factorial  # Output: 120
# This is a complex code snippet in the CRYSTAL programming language
require "colorize"

colors = ["blue", "green", "yellow", "magenta", "cyan"]

def print_colors(array, header)
  # Prints each color in the array with a colored header
  puts "[ #{header} ]".colorize(:color => :white, :background => :light_black)
  puts "----------------"
  array.each do |color|
    puts color.colorize(color.to_sym)
  end
end

puts "Available Colors"
puts "----------------"

print_colors(colors, "Primary")

secondary_colors = ["red", "orange", "purple"]

print_colors(secondary_colors, "Secondary")

# Define a method to mix two colors and print the result
def mix_colors(color1, color2)
  # Returns a mixed color based on blending the two input colors
  return "#{color1} + #{color2}".colorize(:background => color1.to_sym, :foreground => color2.to_sym)
end

puts "Mixing Colors"
puts "----------------"

# Loop through all combinations of primary and secondary colors and print the results
colors.each do |primary|
  secondary_colors.each do |secondary|
    mixed_color = mix_colors(primary, secondary)
    puts mixed_color
  end
end
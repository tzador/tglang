def recursive_fibonacci(n : Int32)
  if n <= 1
    return n
  else
    return recursive_fibonacci(n-1) + recursive_fibonacci(n-2)
  end
end

fibonacci_cache = {}
def memoized_fibonacci(n : Int32)
  if n <= 1
    return n
  end
  if fibonacci_cache[n]?
    return fibonacci_cache[n]
  else
    fibonacci_cache[n] = memoized_fibonacci(n-1) + memoized_fibonacci(n-2)
    return fibonacci_cache[n]
  end
end

require "benchmark"

n = 30

Benchmark.ips do |x|
  x.report("recursive") { recursive_fibonacci(n) }
  x.report("memoized") { memoized_fibonacci(n) }
end
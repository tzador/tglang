# Define a class for handling circles
class Circle
    # Set instance variables for center coordinates and radius
    @center_x : Float
    @center_y : Float
    @radius : Float

    # Constructor method for creating new Circle objects
    def initialize(@center_x : Float, @center_y : Float, @radius : Float)
    end

    # Create a method for calculating the circumference of the circle
    def circumference
        return 2 * Math::PI * @radius
    end

    # Create a method for calculating the area of the circle
    def area
        return Math::PI * @radius * @radius
    end

    # Create a method for checking if a given point is inside the circle
    def inside?(x, y)
        return (x - @center_x)**2 + (y - @center_y)**2 <= @radius**2
    end
end

# Create a new Circle object with center coordinates (0,0) and radius 5
c = Circle.new(0.0, 0.0, 5.0)

# Print the circumference and area of the circle using the defined methods
puts "Circumference: #{c.circumference}"
puts "Area: #{c.area}"

# Check if the point (2,2) is inside the circle
puts "Is (2,2) inside the circle? #{c.inside?(2,2)}"
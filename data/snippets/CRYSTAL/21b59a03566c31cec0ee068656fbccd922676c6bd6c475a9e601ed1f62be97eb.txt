class Animal
  # This is a class that represents an animal.
  getter name     : String
  getter age      : Int32
  getter species  : String
  property mood  = "happy"

  # This method changes the mood of the animal.
  def change_mood(new_mood : String)
    @mood = new_mood
  end

  # This method makes the animal make a sound.
  abstract def make_sound
end

class Dog < Animal
  # This is a class that represents a dog, which is a type of animal.
  getter breed  : String

  # This method makes the dog make a sound.
  def make_sound
    puts "Woof!"
  end
end

class Cat < Animal
  # This is a class that represents a cat, which is a type of animal.
  getter fur_color  : String

  # This method makes the cat make a sound.
  def make_sound
    puts "Meow!"
  end
end

# Create an instance of a dog and call its methods.
dog = Dog.new(name: "Rex", age: 5, species: "German Shepard", breed: "Poodle")
puts "Name: #{dog.name}"
puts "Age: #{dog.age}"
puts "Species: #{dog.species}"
puts "Breed: #{dog.breed}"
puts "Mood: #{dog.mood}"
puts dog.make_sound

# Create an instance of a cat and invoke its methods.
cat = Cat.new(name: "Smokey", age: 7, species: "Siamese", fur_color: "Gray")
puts "Name: #{cat.name}"
puts "Age: #{cat.age}"
puts "Species: #{cat.species}"
puts "Fur Color: #{cat.fur_color}"
puts "Mood: #{cat.mood}"
puts cat.make_sound
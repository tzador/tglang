# This is a comment
# Constants
CONST MAX_VALUE = 100
CONST MIN_VALUE = 1
CONST PI = 3.14159

# Variables
var name = "John"
var age = 25
var isMarried = false
var score : Int32

# Functions
def add(x : Int32, y : Int32) : Int32
  x + y
end
def multiply(x : Int32, y : Int32) : Int32
  x * y
end

# Loops
for i in 0...10
  if i % 2 == 0
    puts "#{i} is even"
  else
    puts "#{i} is odd"
  end
end

# Arrays
var numbers : Array(Int32) = [1,2,3,4,5]
var fruits : Array(String) = ["apple", "banana", "orange"]

# Classes
class Person
  property name : String
  property age : Int32
  property isMarried : Bool

  def initialize(name : String, age : Int32, isMarried : Bool)
    @name = name
    @age = age
    @isMarried = isMarried
  end
end

# Inheritance
class Student < Person
  property score : Int32

  def initialize(name : String, age : Int32, isMarried : Bool, score : Int32)
    super(name, age, isMarried)
    @score = score
  end
end

# Exception Handling
begin
  # code that may throw an error
rescue
  # handle the error here
ensure
  # execute this code block regardless of whether there is an error or not
end

# Setting up a HTTP server
server = HTTP::Server.new("0.0.0.0", 8080) do |context|
  # handle requests and send responses
  context.response.print("Hello World!")
end

# Running the server
server.listen
# This is a function that takes in two arrays, merges them, and returns a new array with the merged values
def merge_arrays(array1, array2)
  # Create a new array to store the merged values
  merged_array = [] of Int32

  # Define two variables to keep track of the indices in each array
  index1 = 0
  index2 = 0

  # Loop until one of the arrays is fully traversed
  while index1 < array1.size && index2 < array2.size
    # Compare the values at the current indices
    if array1[index1] < array2[index2]
      # Add the smaller value to the merged array
      merged_array << array1[index1]
      # Increment index1 to move on to the next value in array1
      index1 += 1
    else
      # Add the smaller value to the merged array
      merged_array << array2[index2]
      # Increment index2 to move on to the next value in array2
      index2 += 1
    end
  end

  # Check if there are any remaining values in array1 and add them to the merged array
  while index1 < array1.size
    merged_array << array1[index1]
    index1 += 1
  end

  # Check if there are any remaining values in array2 and add them to the merged array
  while index2 < array2.size
    merged_array << array2[index2]
    index2 += 1
  end

  # Return the merged array
  merged_array
end

# Example usage: merging two arrays [1, 3, 5] and [2, 4, 6]
result = merge_arrays([1, 3, 5], [2, 4, 6])

# Output: [1, 2, 3, 4, 5, 6]
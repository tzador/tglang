# This is a long and complex code snippet in CRYSTAL programming language
# The snippet involves sorting through a list of numbers using insertion sort algorithm

# Creating a method for insertion sort
def insertion_sort(list)
  # Looping through the list
  for i in 1..list.size-1
    # Storing the current element
    current = list[i]
    # Setting the index variable
    j = i
    # Looping backwards through the sorted portion of the list
    while j > 0 && current < list[j - 1]
      # Moving the current element forward in the list
      list[j] = list[j - 1]
      # Updating the index variable
      j = j - 1
    end
    # Inserting the current element into the correct position
    list[j] = current
  end
  # Returning the sorted list
  return list
end

# Creating an example list
numbers = [4, 2, 8, 5, 1]
# Printing the unsorted list
puts "Unsorted List: #{numbers}"
# Calling the insertion_sort method and storing the sorted list
sorted_numbers = insertion_sort(numbers)
# Printing the sorted list
puts "Sorted List: #{sorted_numbers}"
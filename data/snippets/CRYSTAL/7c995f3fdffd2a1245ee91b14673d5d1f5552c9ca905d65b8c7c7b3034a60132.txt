# A recursive function to calculate the Fibonacci sequence up to a given number
# This function maintains two variables to store the two previous numbers in the sequence
# Each recursive call increases the current index and calculates the next number

# Define function with parameters for list of numbers and index
fun fibonacci(numbers : Array(Int32), index : Int32)

  # Initialize a variable for current index
  current_index : Int32 = index

  # Base case: if current index is smaller than 2, return the numbers list
  if current_index < 2
    return numbers
  end

  # Otherwise, calculate the next Fibonacci number using the two previous numbers
  # accessed through the numbers list
  numbers[current_index] = numbers[current_index - 1] + numbers[current_index - 2]

  # Recursively call the function with the updated numbers list and current index
  fibonacci(numbers, current_index - 1)
end

# Prompt user for input and convert to integer
puts "Enter a number: "
input = gets.to_i

# Initialize an empty array to store Fibonacci sequence
fib_numbers : Array(Int32) = []

# Add first two numbers (0 and 1) to the array
fib_numbers.push(0)
fib_numbers.push(1)

# Call the recursive function with the input number and current index of 2
fibonacci(fib_numbers, 2)

# Print the resulting Fibonacci sequence
puts "The Fibonacci sequence up to #{input} is: "
puts fib_numbers
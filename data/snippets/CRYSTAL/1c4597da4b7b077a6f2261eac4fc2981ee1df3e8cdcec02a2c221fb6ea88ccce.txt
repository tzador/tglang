def my_method(parameter : UInt32) : Float64? do
  # This method takes in a 32-bit unsigned integer as a parameter
  # and returns a nullable 64-bit float value
  if parameter < 0
    # Check if the parameter is negative
    puts "Error: Parameter must be a positive integer"
    # Print an error message if it is negative
    return nil # Return nil if the parameter is not valid
  end

  # Otherwise, calculate the result and return it
  result = Math::PI * parameter * parameter # Calculate the area of a circle with the parameter as the radius
  
  # The return value is automatically casted to a Float64, but we add the "?" to allow for a possible nil value
  return result
end

# Call the method with a valid parameter
puts my_method(5) # Output: 78.53981633974483

# Call the method with an invalid parameter
puts my_method(-3) # Output: Error: Parameter must be a positive integer, nil
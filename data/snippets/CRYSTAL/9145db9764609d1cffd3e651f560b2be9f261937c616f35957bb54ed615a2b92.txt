# This is a function that finds the nth Fibonacci number
fun fibonacci(n : Int) : Int {
  if n <= 1 {
    return n
  } else {
    return fibonacci(n - 1) + fibonacci(n - 2)
  }
}

# This is a function that checks if a number is prime
fun is_prime(n : Int) : Bool {
  if n < 2 {
    return false
  } else {
    for i in 2..Math.sqrt(n).to_i {
      if n % i == 0 {
        return false
      }
    }
    return true
  }
}

# This is a function that generates a list of prime Fibonacci numbers up to a given limit
fun prime_fibonacci(limit : Int) : Array(Int) {
  var primes = Array(Int).new
  var n = 0
  var fib = 0
  while fib < limit {
    fib = fibonacci(n)
    if is_prime(fib) {
      primes << fib
    }
    n += 1
  }
  return primes
}

# This is a variable that stores the limit for the prime Fibonacci numbers
var limit = 100

# This is a variable that stores the result of calling the prime_fibonacci function with the given limit
var result = prime_fibonacci(limit)

# This is a loop that prints each number in the result array
for prime in result {
  puts prime
}
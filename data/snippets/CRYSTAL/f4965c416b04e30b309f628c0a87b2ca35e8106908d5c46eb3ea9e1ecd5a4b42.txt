class Player
  # The Player class represents a player in a game.
  property name : String     # The name of the player.
  property score : Int32     # The player's current score.
  property level : Int32     # The player's current level.

  # The initialize method sets the player's initial information.
  def initialize(@name, @score, @level)
  end

  # The increase_score method increases the player's score by the given amount.
  #
  # Examples:
  #
  #   player.increase_score(50) # => player.score will now be 50
  #   player.increase_score(-20) # => player.score will now be 30
  #
  # Param amount : Int32 - the amount to increase the score by.
  #
  # Returns Int32 - the player's new score.
  #
  def increase_score(amount : Int32) : Int32
    @score += amount
  end

  # The level_up method increases the player's level by 1.
  #
  # Examples:
  #
  #   player.level_up # => player.level will now be 2
  #
  # Returns Int32 - the player's new level.
  #
  def level_up : Int32
    @level += 1
  end

  # The print_player_info method prints out the player's current information.
  #
  def print_player_info
    puts "Player: #{@name}"
    puts "Current Score: #{@score}"
    puts "Current Level: #{@level}"
  end
end

# Create an instance of the Player class with initial values.
player = Player.new("John", 0, 1)

# Increase the player's score by 50.
player.increase_score(50)

# Increase the player's level.
player.level_up

# Print out the player's current information.
player.print_player_info
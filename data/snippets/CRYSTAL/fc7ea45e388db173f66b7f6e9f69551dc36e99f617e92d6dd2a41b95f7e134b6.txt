# This is a sample program that demonstrates complex
# data structures and control flow in Crystal.

require "json"

# Define a class for a user with attributes for name, age, and location
class User
  property name : String
  property age : Int32
  property location : String

  # Method to print out user's information
  def print_info
    puts "#{name} is #{age} years old and lives in #{location}."
  end
end

# Create an instance of the User class
user = User.new
user.name = "John"
user.age = 25
user.location = "New York"

# Create a hash with information about the user's hobbies
hobbies = {"Sports" => ["Basketball", "Soccer"], "Music" => ["Guitar", "Piano"]}

# Create an array with the user's favorite books
books = ["1984", "To Kill a Mockingbird", "Pride and Prejudice"]

# Convert the hobbies hash and books array to JSON
hobbies_json = hobbies.to_json
books_json = books.to_json

# Print out the JSON data
puts "Hobbies: #{hobbies_json}"
puts "Books: #{books_json}"

# Check if user is in New York
if user.location == "New York"
  # If user is in New York, print out their favorite book
  puts "#{user.name}'s favorite book is #{books[0]}."
else
  # Otherwise, print out a message that they have no favorite book
  puts "#{user.name} currently has no favorite book."
end

# Loop through the user's hobbies and print them out
for hobby in hobbies
  puts "#{user.name} enjoys #{hobby[0]} such as #{hobby[1].join(" and ")}."
end

# Define a recursive method to calculate the factorial of a number
def factorial(n)
  if n == 0
    1
  else
    n * factorial(n - 1)
  end
end

# Call the factorial method with the user's age and print out the result
puts "Factorial of #{user.age} is #{factorial(user.age)}."
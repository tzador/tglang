# This is a complex class definition in CRYSTAL
class Complex
  # Initialized variables
  def initialize(real, imag)
    @real = real
    @imag = imag
  end

  # Getter method for real
  def real
    @real
  end

  # Getter method for imag
  def imag
    @imag
  end

  # Setter method for real
  def real=(real)
    @real = real
  end

  # Setter method for imag
  def imag=(imag)
    @imag = imag
  end

  # Overriding + operator to perform complex addition
  def +(other)
    Complex.new(@real + other.real, @imag + other.imag)
  end

  # Overriding - operator to perform complex subtraction
  def -(other)
    Complex.new(@real - other.real, @imag - other.imag)
  end

  # Overriding * operator to perform complex multiplication
  def *(other)
    Complex.new((@real * other.real) - (@imag * other.imag), (@real * other.imag) + (@imag * other.real))
  end

  # Overriding / operator to perform complex division
  def /(other)
    Complex.new((@real * other.real + @imag * other.imag) / (other.real**2 + other.imag**2), (@imag * other.real - @real * other.imag) / (other.real**2 + other.imag**2))
  end

  # Custom method to get the magnitude of the complex number
  def magnitude
    Math.sqrt(@real**2 + @imag**2)
  end

  # Custom method to convert complex number to string
  def to_s
    "(#{@real} + #{@imag}i)"
  end
end

# Creating two complex numbers
complex1 = Complex.new(2, 5)
complex2 = Complex.new(3, 7)

# Performing complex operations using overridden operators
sum = complex1 + complex2
difference = complex1 - complex2
product = complex1 * complex2
quotient = complex1 / complex2

# Printing the results
puts "Sum: #{sum}"
puts "Difference: #{difference}"
puts "Product: #{product}"
puts "Quotient: #{quotient}"

# Output:
# Sum: (5 + 12i)
# Difference: (-1 + -2i)
# Product: (-29 + 31i)
# Quotient: (0.5142857142857142 + -0.0285714285714286i)
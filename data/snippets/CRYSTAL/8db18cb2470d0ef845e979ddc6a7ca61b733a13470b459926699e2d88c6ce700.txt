require "http/server"

# Define a class called APIHandler
class APIHandler < HTTP::Handler

  # Set the handle method to take in a request and respond with a simple message
  def handle(request : HTTP::Server::Request)

    # Check if the request endpoint is "hello" and respond with a message
    if request.path == "/hello"
      message = "Hello World!"

    # If the endpoint is not "hello", respond with an error message
    else
      message = "Error: Invalid endpoint"
    end

    # Create a new response with the message and send it back to the client
    response = HTTP::Server::Response.new(200, {"Content-Type" => "text/plain"}, message)
    request.respond(response)
  end
end

# Create a new server that listens on port 8080 and handles requests with the APIHandler class
server = HTTP::Server.new([APIHandler.new], "0.0.0.0", 8080)

# Start the server to continuously listen for and handle requests
server.listen
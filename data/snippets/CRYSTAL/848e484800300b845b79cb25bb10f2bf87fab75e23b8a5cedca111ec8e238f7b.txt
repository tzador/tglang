# Example function
#
# This function takes in three parameters and returns the result of a complex calculation
#
# @Param param1 [Int32] - A number to be used in the calculation
# @Param param2 [Int32] - Another number to be used in the calculation
# @Param param3 [Float64] - A fraction to be multiplied with the result
# @Return [Float64] - The final result of the calculation
def calculate(param1 : Int32, param2 : Int32, param3 : Float64)
  result = (param1 * param2) / 3.14
  result = result + param3
  return result
end

# Example class
#
# This class represents a person and their details
class Person
  property name : String
  property age : Int32
  property occupation : String

  # Constructor method
  #
  # @Param name [String] - The name of the person
  # @Param age [Int32] - The age of the person
  # @Param occupation [String] - The occupation of the person
  def initialize(@name, @age, @occupation)
  end

  # Method to check if the person is employed
  #
  # @Return [Bool] - True if the person is employed, false if unemployed
  def employed?
    if @occupation == "Unemployed"
      return false
    else
      return true
    end
  end

  # Method to wish the person a happy birthday
  #
  # @Param name [String] - The name of the person to wish
  # @Return [String] - A string wishing the person a happy birthday
  def wish_happy_birthday(name)
    return "Happy birthday, #{@name}!"
  end
end

# Example usage
my_person = Person.new("John", 25, "Software Engineer")
puts my_person.name
puts my_person.age
puts my_person.occupation
puts my_person.employed?
puts my_person.wish_happy_birthday("Sarah")

puts calculate(5, 10, 0.5)
puts calculate(20, 30, 0.2)
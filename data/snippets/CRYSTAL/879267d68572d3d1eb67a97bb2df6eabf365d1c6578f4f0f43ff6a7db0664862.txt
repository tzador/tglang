# This is a code snippet in the CRYSTAL programming language

# Define a class named "Animal"
class Animal
  # Initialize the class variables with default values
  property name = "unknown"
  property age = 0

  # Define a method named "make_sound"
  def make_sound(sound)
    puts "The #{name} is making a #{sound}!"
  end

  # Define a method named "move" with dynamic dispatch
  def move(direction)
    puts "The #{name} is moving #{direction}!"
  end
end

# Create a new instance of the Animal class and assign it to a variable
animal = Animal.new

# Use the setter method to change the value of the "name" variable
animal.name = "lion"

# Use the setter method to change the value of the "age" variable
animal.age = 5

# Call the "make_sound" method with the argument "roar"
animal.make_sound("roar")

# Call the "move" method with the argument "forward"
animal.move("forward")

# Define a subclass of Animal named "Dog"
class Dog < Animal
  # Initialize the class variables with default values
  property breed = "unknown"
  property weight = 0

  # Override the "make_sound" method
  def make_sound(sound)
    puts "The #{breed} dog is barking: #{sound}!"
  end

  # Override the "move" method
  def move(direction)
    puts "The #{breed} dog is running #{direction}!"
  end
end

# Create a new instance of the Dog class and assign it to a variable
dog = Dog.new

# Use the setter method to change the value of the "name" variable
dog.name = "Max"

# Use the setter method to change the value of the "breed" variable
dog.breed = "Golden Retriever"

# Use the setter method to change the value of the "weight" variable
dog.weight = 50

# Call the "make_sound" method with the argument "woof"
dog.make_sound("woof")

# Call the "move" method with the argument "forward"
dog.move("forward")
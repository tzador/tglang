# This code snippet creates a Fibonacci sequence using recursion

# Define a method to generate the Fibonacci sequence
def fibonacci(n)
  if n <= 1 # Base case, return 0 if n is 0 and 1 if n is 1
    return n
  else # Recursive case, call the method twice with updated parameters
    return fibonacci(n - 1) + fibonacci(n - 2)
  end
end

# Define the number of terms in the sequence
num_terms = 10

# Print the first 10 terms of the Fibonacci sequence
for i in 0..num_terms - 1
  # Using string interpolation to show the current term and its corresponding Fibonacci number
  puts "Term #{i + 1}: #{fibonacci(i)}"
end

# Output:
# Term 1: 0
# Term 2: 1
# Term 3: 1
# Term 4: 2
# Term 5: 3
# Term 6: 5
# Term 7: 8
# Term 8: 13
# Term 9: 21
# Term 10: 34
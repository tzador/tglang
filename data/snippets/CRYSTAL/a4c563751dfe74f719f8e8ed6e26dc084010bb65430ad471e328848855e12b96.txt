# This is a comment in Crystal programming language

# Define a module named "Helper"
module Helper
  # Define a constant named "PI" with a value of 3.14
  PI = 3.14

  # Define a method named "double" that takes in a parameter "num" of type Float32
  # and returns the double of the number
  def double(num : Float32) : Float32
    return num * 2.0
  end

  # Define a class named "Calculator"
  class Calculator
    # Define a constant named "ERROR_MESSAGE" with a value of "Error!"
    ERROR_MESSAGE = "Error!"

    # Define a method named "add" that takes in two parameters "num1" and "num2" of type Int
    # and returns the sum of the two numbers
    def add(num1 : Int, num2 : Int) : Int
      return num1 + num2
    end

    # Define a method named "divide" that takes in two parameters "num1" and "num2" of type Int
    # and returns the result of dividing num1 by num2
    def divide(num1 : Int, num2 : Int) : Float32
      if num2 == 0
        # Print the error message if num2 is equal to 0
        puts ERROR_MESSAGE
      else
        return num1 / num2.to_f
      end
    end
  end
end

# Instantiate an instance of the Calculator class
calculator = Helper::Calculator.new

# Call the "add" method on the calculator instance and pass in two numbers as arguments
puts calculator.add(5, 3)

# Call the "double" method on the Helper module and pass in a number as an argument
puts Helper.double(6.5)

# Call the "divide" method on the calculator instance and pass in two numbers as arguments
puts calculator.divide(10, 2)
# This is a custom type representing a student
class Student
  getter first_name # first name of the student, accessible outside the class
  getter last_name # last name of the student, accessible outside the class
  getter id # identification number of the student, accessible outside the class
  getter major # major of the student, accessible outside the class

  # Constructor for the Student class
  def initialize(@first_name : String, @last_name : String, @id : Int32, @major : String)
    # We use instance variables (@) to store the passed in values from the constructor
    # These variables are accessible throughout the class
  end

  # Method to calculate the student's grade point average (GPA)
  def calculate_gpa
    num_classes = self.major.length
    total_gpa = 0.0

    # We use a loop to iterate through each class and add the grades to the total GPA
    self.major.each do |class|
      # We use a "case" statement to handle all possible grades
      case class.grade
      when "A"
        total_gpa += 4.0
      when "B"
        total_gpa += 3.0
      when "C"
        total_gpa += 2.0
      when "D"
        total_gpa += 1.0
      else
        total_gpa += 0.0 # If the grade is not A, B, C, or D, we add 0 to the total GPA
      end
    end

    # After adding up all the grades, we divide by the number of classes to get the final GPA
    final_gpa = total_gpa / num_classes

    # We return the final GPA
    return final_gpa
  end

  # Method to update the student's first and last names
  def update_name(new_first_name : String, new_last_name : String)
    @first_name = new_first_name
    @last_name = new_last_name
  end

  # Method to update the student's major
  def update_major(new_major : String)
    @major = new_major
  end
end

# Create a new instance of the Student class
my_student = Student.new("John", "Smith", 12345, "Computer Science")

# Output the student's first name
puts "First Name: #{my_student.first_name}"
# Output the student's last name
puts "Last Name: #{my_student.last_name}"
# Output the student's ID number
puts "ID: #{my_student.id}"
# Output the student's major
puts "Major: #{my_student.major}"

# Update the student's first and last names
my_student.update_name("Jane", "Doe")
# Update the student's major
my_student.update_major("Engineering")

# Output the updated first and last names
puts "Updated First Name: #{my_student.first_name}"
puts "Updated Last Name: #{my_student.last_name}"
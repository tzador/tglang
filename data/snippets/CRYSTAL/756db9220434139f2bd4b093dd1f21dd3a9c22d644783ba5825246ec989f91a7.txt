class Tree(T)
  # A generic class for creating a tree data structure
  
  property value : T
  property children : Array(Tree(T))
  
  # Initialize the tree with a value and optional children
  def initialize(@value : T, @children = [] of Tree(T)) 
  end
  
  # Method for adding a child node to the tree
  def add_child(node : Tree(T))
    @children << node
  end
  
  # Method for calculating the size of the tree
  def size : Int32
    if @children.empty?
      return 1
    else
      count = 1
      for child in @children
        count += child.size
      end
      return count
    end
  end
end

# Create an instance of the Tree class with an Integer as the value and two child nodes
tree = Tree(Int32).new(5, [Tree(Int32).new(3), Tree(Int32).new(8)])

# Print the size of the tree
puts tree.size
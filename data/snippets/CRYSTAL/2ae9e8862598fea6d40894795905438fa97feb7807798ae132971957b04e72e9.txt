# This is a program that calculates the nth prime number
# Specifying the desired prime number
var n = 100

# Initializing a counter variable for tracking prime numbers
var count = 0

# Initializing a variable for storing the nth prime number
var nth_prime = 0

# Defining a function to check if a number is prime
# @param num [Int] the number to be checked
# @returns [Bool] true if number is prime, false if not
def is_prime(num)
  # Using the modulo operator to check for divisibility
  # Prime numbers are only divisible by 1 and itself
  if num % 2 == 0 || num % 3 == 0
    return false
  end

  # Using a loop to check for divisibility with all numbers between 3 and the square root of the number
  # As any number can only have one factor larger than its square root,
  # this greatly reduces the number of iterations needed
  i = 5
  while i * i <= num do
    if num % i == 0 || num % (i + 2) == 0
      return false
    end
    i += 6
  end

  return true
end

# Using a loop to iterate through all numbers and check if they are prime
# Starting at 2 as 1 is not considered a prime number
i = 2
while count < n do
  if is_prime(i)
    count += 1
    nth_prime = i
  end
  i += 1
end

# Printing the result to the console
puts "The #{n}th prime number is: #{nth_prime}"
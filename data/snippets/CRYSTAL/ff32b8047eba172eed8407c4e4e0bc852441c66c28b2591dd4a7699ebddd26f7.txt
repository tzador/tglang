# This code snippet demonstrates the use of arrays and loops in the CRYSTAL programming language.

# Define an array with numbers 1 to 10
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Print the values in the array
puts "Array values:"
for i in 0..numbers.size - 1
  puts numbers[i]
end

# Use a loop to calculate and print the sum of the values in the array
sum = 0
for i in 0..numbers.size - 1
  sum += numbers[i]
end
puts "Sum of the array values: #{sum}"

# Use a loop to print the even values in the array
puts "Even numbers in the array:"
for i in 0..numbers.size - 1
  if numbers[i] % 2 == 0
    puts numbers[i]
  end
end

# Use a loop to print the odd values in the array
puts "Odd numbers in the array:"
for i in 0..numbers.size - 1
  if numbers[i] % 2 != 0
    puts numbers[i]
  end
end

# Define a hashmap with names and corresponding ages
ages = {"John" => 30, "Marie" => 25, "Bob" => 40}

# Print the keys and values in the hashmap
puts "Names and ages:"
ages.each do |key, value|
  puts "#{key} is #{value} years old."
end

# Use a loop to find the oldest person in the hashmap and print their name
oldest_name = ""
oldest_age = 0
ages.each do |key, value|
  if value > oldest_age
    oldest_name = key
    oldest_age = value
  end
end
puts "The oldest person is #{oldest_name} at #{oldest_age} years old."
# This is a complex code snippet in the CRYSTAL programming language
# It features nested loops, recursion, and complex data structures

# Define a class to represent a Person with a name and age
class Person
  property name : String
  property age : Int32

  # Initialize the Person object with a given name and age
  def initialize(name : String, age : Int32)
    @name = name
    @age = age
  end
end

# Create an array of Person objects
people = Array(Person).new

# Add five Person objects to the array 
people.push(Person.new("John", 30))
people.push(Person.new("Emily", 25))
people.push(Person.new("Tom", 35))
people.push(Person.new("Sarah", 27))
people.push(Person.new("Michael", 32))

# Define a method to print out the name and age of a Person object recursively
def print_person(person : Person)
  # Print the name and age of the given Person object
  puts "#{person.name} is #{person.age} years old"

  # Base case: When there are no more Person objects in the array
  return if people.empty?

  # Recursive step: Call the print_person method on the next Person object in the array
  print_person(people.pop)
end

# Loop through the array of Person objects and call the print_person method on each of them
for person in people
  print_person(person)
end
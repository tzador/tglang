require "json"

# This method creates a new Enemy instance with the specified attributes
# and returns the created instance.
#
# Arguments:
#   - name: the name of the enemy
#   - level: the level of the enemy
#   - health: the initial health of the enemy
#   - attacks: an array of possible attack names for the enemy
#
class Enemy
  def initialize(@name : String, @level : Int32, @health : Int32, @attacks : Array(String))
  end
end

# This method calculates and returns the damage dealt by an enemy's attack
# based on the damage multiplier of the attack, the enemy's level, and the
# target's defense.
#
# Arguments:
#   - attack: the name of the attack used
#   - level: the level of the enemy
#   - defense: the defense of the target
#
def calculate_attack_damage(attack : String, level : Int32, defense : Int32)
  damage_multiplier = json.parse_file("attack_multipliers.json")[attack.to_sym][level]
  damage = damage_multiplier * level - defense

  # Handles potential negative damage
  if damage < 0
    damage = 0
  end
  
  damage
end

# This method randomly selects and returns an attack name from the list
# of possible attacks for an enemy.
#
# Arguments:
#   - attacks: an array of possible attack names for the enemy
#
def select_attack(attacks : Array(String))
  attacks.sample
end

# Create a new Enemy instance with the given attributes
enemy = Enemy.new("Dragon", 10, 150, ["Fire Breath", "Tail Swipe", "Claw Slash"])

# Select a random attack and calculate the damage dealt for that attack
attack = select_attack(enemy.attacks)
damage = calculate_attack_damage(attack, enemy.level, 5)

puts "The Dragon used #{attack} and dealt #{damage} damage"
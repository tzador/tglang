# Define a class called `Person`
class Person
  # A macro method to create a `property` attribute with getter and setter methods
  macro property(name, type)
    {% for visibility in [:setter, :getter, :accessor] %}\
      {% if visibility == :setter || visibility == :accessor %}\
        def {{name}}=(value : {{type}})
          @{{name}} = value
        end
      {% end %}\
      {% if visibility == :getter || visibility == :accessor %}\
        def {{name}} : {{type}}
          @{{name}}
        end
      {% end %}\
    {% end %}
  end
  
  # Initialize the instance variables
  def initialize(name : String, age : Int32)
    @name = name
    @age = age
  end
  
  # Using the `property` macro method to create `name` and `age` attributes
  property name, String
  property age, Int32
  
  # Define a method to greet the person
  def greet
    puts "Hello, #{@name}! You are #{@age} years old."
  end
end

# Create an instance of `Person` class with name and age
person = Person.new("John", 25)

# Using the getter methods to access the attributes
person.name # "John"
person.age # 25

# Using setter methods to change the attributes
person.name = "Jane"
person.age = 30

# Greet the person
person.greet # Hello, Jane! You are 30 years old.
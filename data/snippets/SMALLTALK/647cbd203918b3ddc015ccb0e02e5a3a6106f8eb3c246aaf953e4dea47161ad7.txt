| names list len index newValue |
names := #('John' 'Jane' 'Jack' 'Jenny' 'James').
list := #(1 2 3 4 5).
len := names size.
index := 1.

[ index <= len ] whileTrue: [
    newValue := names at: index.
    list at: index put: (newValue, (' is number ', index) join).
    index := index + 1.
].
^list


### This snippet creates a new list by concatenating names from an existing list with their corresponding index numbers

| names list len index newValue |  "declare local variables"

names := #('John' 'Jane' 'Jack' 'Jenny' 'James').    "create an array of names"
list := #(1 2 3 4 5).    "create an empty array to store the final list"
len := names size.    "get the size of the names array"
index := 1.    "set initial index value to 1"

[ index <= len ] whileTrue: [    "loop through the names array until index reaches the end of the array"
    newValue := names at: index.    "get the value at the current index in the names array"
    list at: index put: (newValue, (' is number ', index) join).    "concatenate the name with its corresponding index number and add it to the list"
    index := index + 1.    "increment index by 1"
].
^list    "return the final list"
| list |
list := OrderedCollection new. "creates a new empty ordered collection"
list add: 5. "adds 5 to the end of the collection"
list add: 3 at: 1. "adds 3 at index 1, pushing the previous value at that index to the next position"
list add: 8 beforeIndex: 2. "adds 8 before index 2, shifting the previous value at that index and all subsequent values to the next position"
list remove: 5 ifAbsent: []. "removes 5 from the collection if it exists, otherwise does nothing"
list removeFirst. "removes the first element in the collection"
list addAll: #(1 2 3 4). "adds the elements 1, 2, 3, and 4 to the end of the collection"
list do: [:each | each + 1]. "iterates through the collection and adds 1 to each element"
list select: [:each | each even?]. "returns a new collection with only the elements that are even"
list detect: [:each | each > 6]. "returns the first element in the collection that is greater than 6"
list asSet. "converts the collection into a set, removing any duplicate elements"
list collect: #asString. "returns a new collection with the string representations of each element"
list sort: [:a :b | a < b]. "sorts the collection in ascending order by comparing each element"
list isEmpty. "returns true if the collection is empty, false otherwise"
list size. "returns the number of elements in the collection"
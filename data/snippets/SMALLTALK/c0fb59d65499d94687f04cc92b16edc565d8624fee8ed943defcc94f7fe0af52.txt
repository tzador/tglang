"Define a class for a bank account"
Object subclass: #BankAccount
    instanceVariableNames: 'balance owner'
    classVariableNames: ''
    poolDictionaries: ''
    category: 'Banking'

"Define a method for depositing money into the account"
BankAccount>>deposit: amount
    "Check if deposit amount is a positive number"
    (amount > 0) ifTrue: [
        "Add the amount to the balance"
        balance := balance + amount.
        "Print a success message"
        Transcript show: 'Deposit successful! Your new balance is $', balance printString; cr.
    ] ifFalse: [
        "Print an error message"
        Transcript show: 'Error: Deposit amount must be positive.'; cr.
    ]
    
"Define a method for withdrawing money from the account"
BankAccount>>withdraw: amount
    "Check if withdrawal amount is a positive number"
    (amount > 0) ifTrue: [
        "Check if there are sufficient funds in the account"
        (balance >= amount) ifTrue: [
            "Subtract the amount from the balance"
            balance := balance - amount.
            "Print a success message"
            Transcript show: 'Withdrawal successful! Your new balance is $', balance printString; cr.
        ] ifFalse: [
            "Print an error message"
            Transcript show: 'Error: Insufficient funds.'; cr.
        ]
    ] ifFalse: [
        "Print an error message"
        Transcript show: 'Error: Withdrawal amount must be positive.'; cr.
    ]
    
"Define a method that allows the owner to change their account's owner"
BankAccount>>changeOwner: newOwner
    "Check if new owner is a non-empty string"
    (newOwner isString and: [newOwner size > 0]) ifTrue: [
        "Change the value of the owner instance variable"
        owner := newOwner.
        "Print a success message"
        Transcript show: 'Account owner successfully changed to ', newOwner; cr.
    ] ifFalse: [
        "Print an error message"
        Transcript show: 'Error: New owner must be a non-empty string.'; cr.
    ]
    
"Create an instance of the BankAccount class and make some transactions"
|account|

"Initialize the account's balance and owner"
account := BankAccount new.
account balance: 500.
account owner: 'John Smith'.

"Try to deposit a negative amount"
account deposit: -100.

"Deposit a positive amount"
account deposit: 200.

"Try to withdraw more than the current balance"
account withdraw: 400.

"Withdraw a valid amount"
account withdraw: 100.

"Change the account's owner"
account changeOwner: 'Jane Doe'.
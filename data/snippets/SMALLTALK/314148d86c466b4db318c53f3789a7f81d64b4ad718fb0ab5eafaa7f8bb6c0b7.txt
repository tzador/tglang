| primeList divisors prime | "declaring variables for prime numbers"

primeList := OrderedCollection new. "initialize empty ordered collection"

prime := 2. "let prime start at 2"

10 timesRepeat: [ "loop runs 10 times"
    | isPrime |
    isPrime := true. "initialize isPrime as true"
    primeList do: [ :each | "check for each number in primeList"
        (prime \\ each) = 0 ifTrue: [ "if prime is divisible by any number in primeList"
            isPrime := false. "set isPrime to false"
            prime := prime + 1. "move on to next number"
            ^prime. "exit loop and return current prime number"
        ]
    ].
    isPrime ifTrue: [ "if prime is not divisible by any number in primeList"
        primeList add: prime. "add prime to primeList"
        prime := prime + 1. "move on to next number"
    ].
].
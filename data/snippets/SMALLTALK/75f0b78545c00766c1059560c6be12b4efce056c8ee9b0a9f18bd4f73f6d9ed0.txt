| myList myDictionary myIntList mySum |
myList := OrderedCollection new: 10.
myList add: 4.
myList add: 10.
myList add: 7.
myList add: 2.
myDictionary := Dictionary new.
myIntList := myList collect: [:each | each integer].
myIntList do: [:value | (myDictionary includesKey: value) 
	ifFalse: [myDictionary at: value put: 1]
	ifTrue: [myDictionary at: value put: (myDictionary at: value) + 1]].
mySum := 0.
myDictionary keysAndValuesDo: [:key :value | 
	mySum := mySum + (key * value)].
^mySum
Object subclass: #Shape
instanceVariableNames: 'color x y'
classVariableNames: 'totalCount'
poolDictionaries: ''
category: 'Geometric'

Shape class>>increaseTotalCount
    totalCount := totalCount + 1.

Shape>>draw
    Transcript show: 'Drawing a ' , color , ' shape at (' , x printString , ',' , y printString , ')' ; cr.

Shape>>initializeWithColor: aColor x: anX y: anY
    color := aColor.
    x := anX.
    y := anY.
    self class increaseTotalCount.

Shape class>>resetTotalCount
    totalCount := 0.

Shape class>>showTotalCount
    Transcript show: 'Total number of shapes created: ' , totalCount asString ; cr.1. Object subclass: #Shape                    // Creates a subclass of Object called Shape
2. instanceVariableNames: 'color x y'          // Defines instance variables for Shape class
3. classVariableNames: 'totalCount'            // Defines class variables for Shape class
4. poolDictionaries: ''                        // Allows for the creation of global variables in the class
5. category: 'Geometric'                       // Defines the category for the class

6. Shape class>>increaseTotalCount
// Defines a class method to increase the total count of shapes created
7.     totalCount := totalCount + 1.          // Increases the total count by 1 for every new shape created

8. Shape>>draw
// Defines an instance method to draw the shape
9.     Transcript show: 'Drawing a ' , color , ' shape at (' , x printString , ',' , y printString , ')' ; cr.
// Prints out a message stating the shape's color and coordinates on the Transcript

10. Shape>>initializeWithColor: aColor x: anX y: anY
// Defines an instance method to initialize the shape with a color and coordinates
11.     color := aColor.                       // Sets the color of the shape to the given color
12.     x := anX.                              // Sets the x coordinate of the shape to the given x coordinate
13.     y := anY.                              // Sets the y coordinate of the shape to the given y coordinate
14.     self class increaseTotalCount.         // Calls the class method to increase the total count of shapes created

15. Shape class>>resetTotalCount
// Defines a class method to reset the total count of shapes created to 0
16.     totalCount := 0.                       // Resets the total count to 0

17. Shape class>>showTotalCount
// Defines a class method to print out the total number of shapes created on the Transcript
18.     Transcript show: 'Total number of shapes created: ' , totalCount asString ; cr.
// Prints out a message stating the total count of shapes created on the Transcript in string form.
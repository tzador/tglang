Object subclass: #BankAccount
	instanceVariableNames: 'accountNumber balance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Banking'

BankAccount class >> initialize
	super initialize.
	self accountNumber: 00112233.
	self balance: 0.

BankAccount >> deposit: amount
	self balance: balance + amount.

BankAccount >> withdraw: amount
	| newBalance |
	newBalance := balance - amount.
	newBalance >= 0 ifTrue: [self balance: newBalance].
	newBalance < 0 ifTrue: [self error: 'Insufficient funds'].

BankAccount >> transfer: amount from: sourceAccount to: destinationAccount
	| newBalance |
	newBalance := sourceAccount balance - amount.
	newBalance >= 0 ifTrue: [
		sourceAccount balance: newBalance.
		destinationAccount deposit: amount
	].
	newBalance < 0 ifTrue: [self error: 'Insufficient funds'].

BankAccount >> printBalance
	Transcript cr; show: 'Account Number: ', accountNumber printString; cr.
	Transcript show: 'Current balance: $', balance printString.

| savingsAccount checkingAccount |
savingsAccount := BankAccount new.
checkingAccount := BankAccount new.
savingsAccount balance: 500.
checkingAccount balance: 1000.
savingsAccount transfer: 200 from: savingsAccount to: checkingAccount.
savingsAccount printBalance.
checkingAccount printBalance.
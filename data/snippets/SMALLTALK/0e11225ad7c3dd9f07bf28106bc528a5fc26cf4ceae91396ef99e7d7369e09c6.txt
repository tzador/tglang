Object subclass: #Person
instanceVariableNames: 'name age address'
classVariableNames: ''
poolDictionaries: ''
category: 'PersonClass'

"Defines a new class called Person with instance variables for name, age, and address"

Person class
method: #initialize
"Defines an initialization method for a Person object"
"self name: nil assigns the value of nil to the name instance variable of the current object (the new Person object)"
self initialize
"Calls the superclass (Object) initialize method to initialize any inherited instance variables"
super initialize.
self age: 0.
self address: ''.

"Defines two accessor methods for the name and age instance variables"

Person class
method: #getName
"Returns the value of the name instance variable of the current object"
^name

Person class
method: #setName: aName
"Sets the value of the name instance variable of the current object to the input parameter aName"
name := aName

Person class
method: #getAge
"Returns the value of the age instance variable of the current object"
^age

Person class
method: #setAge: anAge
"Sets the value of the age instance variable of the current object to the input parameter anAge"
age := anAge

"Defines a method to print out the person's information"

Person class
method: #printInfo
"Prints out the name, age, and address of the current object"
Transcript show: 'Name: ' , self getName.
Transcript cr.
Transcript show: 'Age: ' , self getAge printString.
Transcript cr.
Transcript show: 'Address: ' , self address.
Transcript cr.

"Creates a new Person object and sets its name, age, and address"

| person |
person := Person new.
person setName: 'John'.
person setAge: 25.
person address: '123 Main St'.

"Calls the printInfo method to print out the person's information"

person printInfo.

"Output:
Name: John
Age: 25
Address: 123 Main St
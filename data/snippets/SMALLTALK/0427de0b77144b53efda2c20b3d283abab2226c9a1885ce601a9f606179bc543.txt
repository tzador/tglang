| primeNumbers arrayOfPrimes number |
primeNumbers := OrderedCollection new. "Create an empty ordered collection to store prime numbers in"
arrayOfPrimes := (2 to: 100000) asArray. "Create an array of numbers from 2 to 100000"
number := 2. "Set the initial value for the loop"
[number <= arrayOfPrimes size] whileTrue: [ "Loop while the number is less than or equal to the array size"
	(arrayOfPrimes at: number) ifNotNil: [ "Check if the number at the current index exists"
		primeNumbers add: number. "If it exists, add it to the prime numbers collection"
		(arrayOfPrimes at: number squared) to: arrayOfPrimes size by: number do: [:index | "Loop through the array, starting at the square of the current number and incrementing by the current number"
			arrayOfPrimes at: index put: nil. "Set the value at the current index to nil"
		]
	].
	number := number + 1. "Increment the number for the next iteration"
].
^primeNumbers asArray "Return the ordered collection as an array"
"An example of implementing a recursive function in Smalltalk"

factorial: n 
    n = 0 ifTrue:[ 1 ].  "if n is equal to 0, return 1"
    n < 0 ifTrue:[ self error: 'Input must be greater than or equal to 0' ]. "if n is less than 0, throw an error"
    result := n * self factorial: n - 1. "calculate the factorial by calling the function recursively"
    ^ result. "return the factorial result at the end of the function"
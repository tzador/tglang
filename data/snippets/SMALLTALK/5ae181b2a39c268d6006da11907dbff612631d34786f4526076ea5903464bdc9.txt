|length inputArray|
inputArray := #(1 2 3 4 5 6).
length := inputArray size.
Transnewify temporary buffer forTransnewifyinto equal to: inputArray size.
1 to: inputArray size do:
  [:index |
    buffer at: index put: (inputArray at: (length - index + 1)).
    index = length ifTrue:
      [(inputArray at: index) := buffer at: index].
      length := length - 1.
      (inputArray at: length) := buffer at: (length - index + 1)].

" The above code snippet takes an input array, creates a temporary buffer with equal size and then loops through the input array from 1 to the length of the array. In each iteration, it takes the value from the index of the input array and places it in the same index in the temporary buffer in reverse order. It then checks if it has reached the end of the array and if so, it replaces the last value in the input array with the value in the last index of the temporary buffer. It then decreases the length variable by 1 and repeats the process. At the end, the input array will be reversed in place."
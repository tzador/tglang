"This is a complex code snippet in SMALLTALK" 
| numbers result |
numbers := OrderedCollection new.
result := 1.
numbers add: 1.
[ 
   numbers last < 1000 
] whileTrue: [ 
   numbers add: (numbers last + numbers at: numbers size - 1).
].
numbers do: [ :n | 
   (n isPrime) 
      ifTrue: [ result := result + n ]
      ifFalse: [ result := result * n ].
].
^ result
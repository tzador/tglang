| n primes |
n := 1.
primes := OrderedCollection new.
[n <= 10] whileTrue: [
    | divisor isPrime count |
    divisor := 2.
    isPrime := true.
    [
        (divisor < n) and: [isPrime] 
    ] 
    whileTrue: [
        (n % divisor = 0) 
        ifTrue: [isPrime := false].
        divisor := divisor + 1.
    ].
    isPrime ifTrue: [primes add: n].
    n := n + 1.
].
primes do: [:prime |
    Transcript show: prime printString.
    Transcript cr.
].
| numbers fib |

numbers := #(1 2 3 4 5 6 7 8 9). "initialize an array with numbers"

fib := OrderedCollection new. "create an empty ordered collection"

numbers do: [:eachNumber | "loop through each number in the array"
    fib add: (eachNumber <= 2 "if the number is less than or equal to 2, add 1 to the collection"
        ifTrue: [1]
        ifFalse: ["otherwise, add the sum of the previous two numbers to the collection"
            | prev prevPrev |
            prev := fib at: (fib size - 1). "get the previous number in the collection"
            prevPrev := fib at: (fib size - 2). "get the number before the previous number"
            prev + prevPrev
        ]
    )
].

fib "the ordered collection should now contain the first 9 Fibonacci numbers"
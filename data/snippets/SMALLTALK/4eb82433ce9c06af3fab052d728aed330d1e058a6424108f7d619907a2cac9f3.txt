"Create a class that represents a bank account that can hold money."

Object subclass: #BankAccount
   instanceVariableNames: 'balance ownerName'
   classVariableNames: ''
   poolDictionaries: ''
   category: 'Finance'

"Initialize method that sets the owner name and starting balance for the account."
BankAccount>>initialize: anOwnerName withAmount: anAmount
   balance := anAmount.
   ownerName := anOwnerName.
   
"Deposit method that adds the given amount to the account's balance."
BankAccount>>deposit: anAmount
   balance := balance + anAmount.
   
"Withdraw method that subtracts the given amount from the account's balance."
BankAccount>>withdraw: anAmount
   (anAmount <= balance)
      ifTrue: [balance := balance - anAmount]
      ifFalse: [self error: 'Insufficient funds'].
      
"Transfer method that moves funds from one account to another."
BankAccount>>transfer: anAmount to: aBankAccount
   self withdraw: anAmount.
   aBankAccount deposit: anAmount.
   
"Getters for each instance variable."
BankAccount>>balance
   ^balance
   
BankAccount>>ownerName
   ^ownerName
   
"Setter for owner name."
BankAccount>>setOwnerName: aName
   ownerName := aName.
   
"Example usage of the class."
| account1 account2 |
account1 := BankAccount new.
account1 initialize: 'John' withAmount: 500.
account2 := BankAccount new.
account2 initialize: 'Jane' withAmount: 1000.
account1 transfer: 100 to: account2.
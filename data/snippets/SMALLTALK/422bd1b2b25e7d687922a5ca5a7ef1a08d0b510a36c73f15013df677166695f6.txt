"Class definition for a custom Array class in SMALLTALK"

Array subclass: #MyArray
	instanceVariables: 'contents size'
	classVariables: ''
	poolDictionaries: ''
	category: 'Custom-Classes'

"Method for initializing the MyArray class with an initial content array and size"

initialize: aContentArray size: aSize
	super initialize.
	contents := aContentArray.
	size := aSize.

"Method for adding an element to the array"

addElement: anElement
	| newContents |
	newContents := Array new: size + 1.
	1 to: size do: [:index |
		newContents at: index put: (contents at: index)
	].
	newContents at: size + 1 put: anElement.
	contents := newContents.
	size := size + 1.

"Method for removing an element from the array"

removeElement: anElement
	| newContents |
	newContents := Array new: size - 1.
	1 to: size do: [:index |
		| currentElement |
		currentElement := contents at: index.
		(currentElement ~= anElement) ifTrue: [
			(index > 1) ifTrue: [newContents at: index - 1 put: currentElement].
		].
	].
	contents := newContents.
	size := size - 1.

"Method for accessing elements in the array at a specific index"

at: index
	"Note: Index starts at 1 in SMALLTALK"
	^contents at: index.

"Method for returning the size of the array"

getSize
	^size.

"Method for checking if an element is present in the array"

includes: anElement
	| included |
	included := false.
	1 to: size do: [:index |
		(included = false) ifTrue: [
			| currentElement |
			currentElement := contents at: index.
			(currentElement = anElement) ifTrue: [included := true].
		].
	].
	^included.
| maxValue result |
maxValue := 10.
result := maxValue * 2.
"Print the result"
Transcript show: result.
"Calculate the factorial of the result"
| factorial |
factorial := 1.
1 to: result do: [:i | factorial := factorial * i].
"Print the factorial"
Transcript show: factorial.
"Check if the factorial is divisible by 3"
| divisible |
divisible := (factorial \\ 3) = 0.
"Print a message based on the divisible result"
divisible
    ifTrue: [Transcript show: 'The factorial is divisible by 3']
    ifFalse: [Transcript show: 'The factorial is not divisible by 3'].
"Create a list of numbers up to the factorial"
| numbers |
numbers := (1 to: factorial) asArray.
"Filter the list to only include even numbers"
numbers := numbers select: [:num | num even?].
"Calculate the sum of the remaining numbers"
| sum |
sum := numbers sum.
"Print the sum"
Transcript show: sum.
"Invert the sum"
| inverted |
inverted := sum negated.
"Print the inverted sum"
Transcript show: inverted.
"Increment the maxValue by 5"
maxValue := maxValue + 5.
"Print the new maxValue"
Transcript show: maxValue.
"Check if the inverted sum is equal to the new maxValue"
inverted = maxValue
    ifTrue: [Transcript show: 'The inverted sum is equal to the new maxValue']
    ifFalse: [Transcript show: 'The inverted sum is not equal to the new maxValue'].
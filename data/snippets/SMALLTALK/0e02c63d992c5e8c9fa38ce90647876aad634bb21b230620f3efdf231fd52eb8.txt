| randomList counter |

randomList := #(5 10 4 7 2 8 3). "creates an array with random numbers"

counter := 0. "sets the counter to 0"

[randomList size > counter] whileTrue: "keeps looping as long as the counter is less than the size of the array"

[counter := counter + 1. "increments counter"
| x |

x := randomList at: counter. "assigns the current element in the array to x"

Transcript cr; show: 'The element at index ', counter asString; show: ' is ', x asString. "prints the current element and its index to the Transcript"

x > 5 "checks if the current element is greater than 5"

ifTrue: [Transcript show: ' is greater than 5'.] "if it is, prints a message to the Transcript"

ifFalse: [Transcript show: ' is less than 5'.] "if it isn't, prints a different message to the Transcript"

Transcript cr "moves the cursor to the next line in the Transcript"

] "end of while loop"

Transcript cr; show: 'End of program'. "prints a final message to the Transcript"
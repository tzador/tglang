| listOfNumbers | "defines a variable to hold a list of numbers"
listOfNumbers := (1 to: 50) asOrderedCollection. "generates a list of numbers from 1 to 50 and converts it into an ordered collection"
listOfNumbers do: [ :number | Transcript show: number printString, String cr. "prints each number in the list on a new line in the Transcript window" ]
listOfNumbers reverseDo: [ :number | Transcript show: number printString, String cr. "prints each number in reverse order in the Transcript window" ]
listOfNumbers select: [ :number | number even ]. "selects only the even numbers in the list"
listOfNumbers reject: [ :number | number < 25 ]. "rejects numbers less than 25 in the list"
listOfNumbers swap: 10 with: 20. "swaps the positions of the numbers 10 and 20 in the list"
listOfNumbers size. "returns the size of the list"
listOfNumbers at: 5. "returns the element at the 5th index in the list"
listOfNumbers isEmpty. "checks if the list is empty"
listOfNumbers indexOf: 35. "returns the index of the number 35 in the list"
listOfNumbers copyAt: 2 put: 100. "copies the element at the 2nd index and replaces it with the number 100 in the list"
listOfNumbers collect: [ :number | number * 2 ]. "applies the multiplication function to each number in the list and returns a new list with the results"
listOfNumbers detect: [ :number | number > 50 ]. "returns the first number in the list that is greater than 50"
listOfNumbers asSet. "converts the list into a set"
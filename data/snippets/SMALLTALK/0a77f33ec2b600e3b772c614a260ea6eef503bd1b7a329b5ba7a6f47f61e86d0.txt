"Initialize a string and assign it to a variable named 'text'"
| text |
text := 'Hello, World!'.

"Create an array with five elements"
| myArray |
myArray := #(1 2 3 4 5).

"Print out the elements of the array using a loop"
myArray do: [:each |
    Transcript show: each; cr].

"Define a class named 'Employee'"
Object subclass: #Employee
    instanceVariableNames: 'name salary position'
    classVariableNames: ''
    poolDictionaries: ''
    category: 'MyProject'.

"Add a method to the 'Employee' class that calculates the employee's bonus"
Employee >> calculateBonus
    | bonus |
    bonus := salary * 0.10.
    ^ bonus.

"Create a new instance of the 'Employee' class"
| emp |
emp := Employee new.
emp name: 'John Smith'.
emp salary: 50000.
emp position: 'Manager'.

"Call the 'calculateBonus' method and print the result"
Transcript show: emp name, ' has a bonus of ', emp calculateBonus asString. 

"Define a class named 'Company' that manages employees"
Object subclass: #Company
    instanceVariableNames: 'name employeeList'
    classVariableNames: ''
    poolDictionaries: ''
    category: 'MyProject'.

"Add a method to the 'Company' class that adds a new employee to the list"
Company >> addEmployee: aName withSalary: aSalary andPosition: aPosition
    | newEmployee |
    newEmployee := Employee new.
    newEmployee name: aName.
    newEmployee salary: aSalary.
    newEmployee position: aPosition.
    employeeList add: newEmployee.

"Create a new company and add the employee 'Jane Smith' to the list"
| myCompany |
myCompany := Company new.
myCompany name: 'ABC Corp'.
myCompany addEmployee: 'Jane Smith' withSalary: 60000 andPosition: 'Sales Rep'.

"Print out the names of all employees in the company"
myCompany employeeList do: [:emp |
    Transcript show: emp name; cr].
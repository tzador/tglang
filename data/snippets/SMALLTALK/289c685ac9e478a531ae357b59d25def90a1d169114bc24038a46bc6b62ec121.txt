| primeList count factors num |
primeList := OrderedCollection new.
primeList add: 2.
count := 1.
num := 3.
[factor := primeList at: count.
(factor > (num squared)) ifTrue: [
primeList add: num.
count := count + 1.
num := num + 2]
ifFalse: [
(num \\ factor = 0) ifTrue: [
count := 1.
num := num + 2]
ifFalse: [count := count + 1]]]
whileTrue: [count = (primeList size + 1)].
^primeList
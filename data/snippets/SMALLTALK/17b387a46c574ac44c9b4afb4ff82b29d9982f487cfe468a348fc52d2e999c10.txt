| primeFactors numbers result |

primeFactors := [:num | | divisors result | //create a block that takes in a number

divisors := Set new //. create a new set to store the divisors of the number

2 to: num do: [:i |
	[(num \\ i) = 0] whileTrue: [ //check if the number is divisible by i and add it to the set
		divisors add: i.
		num := num // i.
	].
].

result := divisors //convert the set to an array

result := result //if the number is not prime, recursively find its prime factors
	ifFalse: [result flatCollect: [:e | primeFactors value: e]].
	
numbers := #(27 35 42) //create an array of numbers to test the block with

numbers do: [:n | //loop through the numbers and print their prime factors
	result := primeFactors value: n. //run the block to find the factors
	Transcript show: n printString; //print the original number
	show: ' has prime factors: '; //print a message
	show: result printString; //print the factors
	show: '.'; //print a period
	cr. //print a new line
].
"Create a class named 'BankAccount'"
Object subclass: #BankAccount
    instanceVariableNames: 'accountNumber currentBalance ownerName'
    classVariableNames: 'interestRate'
    poolDictionaries: ''
    category: 'Finance'

"Define a method to deposit money into the account"
BankAccount>>deposit: amount
    currentBalance := currentBalance + amount.

"Define a method to withdraw money from the account"
BankAccount>>withdraw: amount
    currentBalance := currentBalance - amount.
    
    "Make sure the balance does not go below 0"
    currentBalance < 0
        ifTrue: [currentBalance := 0].

"Define a method to calculate the interest accrued on the account"
BankAccount>>calculateInterest
    | interest |
    interest := currentBalance * interestRate.
    "Round the interest to 2 decimal places"
    interest := interest roundTo: 0.01.
    ^interest.

"Create a new instance of BankAccount"
account := BankAccount new.
account
    accountNumber: '12345678';
    ownerName: 'John Smith';
    deposit: 1000.

"Calculate and print the current balance"
Transcript show: 'Current balance: ', (account calculateInterest) asString; cr.
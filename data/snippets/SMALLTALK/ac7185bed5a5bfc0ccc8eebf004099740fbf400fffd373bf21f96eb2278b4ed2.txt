Metaclass subclass: #Robot
instanceVariableNames: 'name energyLevel'
classInstanceVariableNames: ''
poolDictionaries: ''
category: 'Robots'

"Create an instance of the Robot class with the name 'R2D2' and an energy level of 100"
robot := Robot new.
robot name: 'R2D2'.
robot energyLevel: 100.

"Print out the name and energy level of the robot"
Transcript show: ('Name: ', robot name).
Transcript show: ('Energy Level: ', robot energyLevel).

"Define a method to make the robot say a message"
Robot>>say: message [
    Transcript show: (robot name, ' says: ', message)
].
"Invoke the say method on the robot instance"
robot say: 'Beep boop, I am ready to serve.'

"Define a subclass of Robot called WallE"
WallE subclass: #WallE
instanceVariableNames: ''
classInstanceVariableNames: ''
poolDictionaries: ''
category: 'Robots'

"Create an instance of the WallE class with the name 'EVE' and an energy level of 75"
wallE := WallE new.
wallE name: 'EVE'.
wallE energyLevel: 75.

"Define a method to make WallE clean up a mess"
WallE>>cleanUp [
    Transcript show: (self name, ' is cleaning up the mess').
].
"Invoke the cleanUp method on the WallE instance"
wallE cleanUp.

"Create an array to store multiple robot instances"
robots := OrderedCollection new.
robots add: robot.
robots add: wallE.

"Loop through the array and make each robot say a different message"
robots do: [:eachRobot |
    eachRobot say: 'Hello from ', eachRobot name, '!'.
]

"But Wait! There's more! Define a class method to generate a random energy level for robots"
Robot class>>generateRandomEnergy [
    ^Random new nextInt: 100.
].
"Invoke the class method to generate a random energy level for a new robot instance"
newRobot := Robot new.
newRobot energyLevel: (Robot generateRandomEnergy).
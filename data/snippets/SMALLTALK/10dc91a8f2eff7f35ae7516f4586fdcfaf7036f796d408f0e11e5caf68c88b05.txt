"Create a class for a baseball player"

Class BaseballPlayer

| firstName lastName position teamName jerseyNumber stats |

"Instance variables for the player's first name, last name, position, team name, jersey number and stats"

BaseballPlayer new
firstName: 'John';
lastName: 'Smith';
position: 'Pitcher';
teamName: 'Yankees';
jerseyNumber: 34;
stats: #(ERA: 3.20, Wins: 10, Strikeouts: 150).

"Method to calculate the player's ERA (Earned Run Average)"

BaseballPlayer >> calculateERA

| ERA earnedRuns inningsPitched |

earnedRuns := stats at: #ERA.
inningsPitched := (stats at: #inningsPitchedPercentage) / 100.

ERA := earnedRuns / inningsPitched.

^ ERA asFloat

"Method to update the player's stats after a game"

BaseballPlayer >> updateStats: gameOutcome

| newStats |

newStats := stats copy.
gameOutcome = #win
    ifTrue: [newStats at: #Wins put: (newStats at: #Wins) + 1].
gameOutcome = #lose
    ifTrue: [newStats at: #Losses put: (newStats at: #Losses) + 1].
newStats at: #GamesPlayed put: (newStats at: #GamesPlayed) + 1.

stats := newStats.

"Method to display the player's information"

BaseballPlayer >> displayInfo

Transcript show: 'Name: ', firstName, ' ', lastName; cr.
Transcript show: 'Position: ', position; cr.
Transcript show: 'Team: ', teamName; cr.
Transcript show: 'Jersey Number: ', jerseyNumber; cr.
Transcript show: 'ERA: ', (self calculateERA), ' Wins: ', (stats at: #Wins) asString, ' Losses: ', (stats at: #Losses) asString; cr.
Transcript show: 'Total Games Played: ', (stats at: #GamesPlayed) asString; cr.
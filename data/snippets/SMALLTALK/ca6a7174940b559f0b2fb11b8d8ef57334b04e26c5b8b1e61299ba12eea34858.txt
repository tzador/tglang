| prime_factors count needed n primes |
n := 24. "number to find prime factors of"

primes := OrderedCollection new. "create empty ordered collection"

n // 2 + 1 to: 1 by: -1 do: [ :i |	"loop backwards from half of n to 1"
	count := 0. "initialize count of prime factors for each number"

	n // i + 1 to: 1 by: -1 do: [ :j |
		"loop backwards from half of current factor to 1"
		\\ required for integer division in smalltalk

		(i \\ j) = 0 ifTrue: [ count := count + 1 ]. "if factor is a prime factor, update count"
	].

	count = 2 ifTrue: [ primes add: i ]. "if count equals 2, add prime factor to collection"
].

primes do: [ :p |
	(p = (n // p)) ifTrue: [ needed := p ].
	"check if prime factor is its own complement and set as needed"
].

^ needed. "return needed prime factor"
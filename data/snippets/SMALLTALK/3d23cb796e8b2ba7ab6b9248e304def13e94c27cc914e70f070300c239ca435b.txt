Object subclass: #Shape
instanceVariableNames: 'color position'
classVariableNames: 'totalCount'
poolDictionaries: ''
category: 'Geometry'

"Define a subclass of Object called Shape with instance variables for color and position, a class variable for total count, and no shared pools or categories."

Shape class >> initialize
"Set initial total count to 0"
super initialize.
totalCount := 0.

"Define a class method to initialize the total count and then call the superclass's initialize method."

Shape class >> new
"Create a new Shape instance and increment the total count"
| shape |
shape := super new.
totalCount := totalCount + 1.
^shape.

"Define a class method called new that creates a new instance of Shape and increments the total count before returning the new instance."

Shape >> initialize
"Call the superclass's initialize method and set the initial color to 'black' and position to (0, 0)"
super initialize.
color := 'black'.
position := 0@0.

"Define an instance method to set the initial color to 'black' and position to (0, 0)."

Shape >> drawOn: aCanvas
"Draw the shape on the given canvas at its position in its color"
aCanvas fillOval: (position x - 10) @ (position y - 10) 
        extent: 20 @ 20
        fillColor: color.

"Define an instance method to draw the shape on a given canvas at its specified position in its specified color."

Shape >> setPosition: aPoint
"Set the position instance variable to the given point"
position := aPoint.

"Define an instance method to set the position of the shape to a given point."

Shape >> setRandomColor
"Generate a random color and set it as the shape's color"
color := Color random.

"Define an instance method to set a random color for the shape."

Shape >> totalCount
"Return the total count of all Shape instances"
^totalCount.

"Define an instance method to return the total count of all Shape instances."
"Creates a stack data structure using a LinkedList in Smalltalk"

Object subclass: #Stack
    instanceVariableNames: 'list'
    classVariableNames: ''
    package: 'CustomStructures'

Stack subclass: #LinkedListStack
    instanceVariableNames: ''
    classVariableNames: ''
    package: 'CustomStructures'

LinkedListStack class>>new
    "Creates a new LinkedListStack and initializes the linked list"
    | stack |
    stack := self basicNew.
    stack list := LinkedList new.
    ^stack

LinkedListStack>>push: element
    "Adds an element to the top of the stack"
    list add: element
    "Return the newly added element"
    ^element

LinkedListStack>>pop
    "Removes and returns the top element of the stack"
    | element |
    element := list last.
    list removeLast.
    ^element

LinkedListStack>>top
    "Returns the top element of the stack without removing it"
    ^list last

LinkedListStack>>isEmpty
    "Returns whether the stack is empty or not"
    ^list isEmpty

LinkedListStack>>size
    "Returns the number of elements in the stack"
    ^list size
::Person

"Creating a class called Person with two instance variables: name and age"
Object subclass: #Person
    instanceVariableNames: 'name age'

"Defining methods for creating a new instance of Person and returning their name and age"
Person>>setName: aName
    name := aName.

Person>>setAge: aAge
    age := aAge.

Person>>getName
    ^name.

Person>>getAge
    ^age.

"Creating a class called Employee that inherits from Person and adds a new instance variable: salary"
Person subclass: #Employee
    instanceVariableNames: 'salary'

"Defining methods for creating a new instance of Employee and returning their salary"
Employee>>setSalary: aSalary
    salary := aSalary

Employee>>getSalary
    ^salary

"Creating a method to calculate the annual salary of an Employee"
Employee>>calculateAnnualSalary
    ^salary * 12
    
"Creating a class called Manager that inherits from Employee and adds a new instance variable: bonus"
Employee subclass: #Manager
    instanceVariableNames: 'bonus'
    
"Defining methods for creating a new instance of Manager and returning their bonus"
Manager>>setBonus: aBonus
    bonus := aBonus
    
Manager>>getBonus
    ^bonus
    
"Overriding the calculateAnnualSalary method to include the bonus in the calculation"
Manager>>calculateAnnualSalary
    ^super calculateAnnualSalary + bonus
    
"Creating a new instance of Manager and setting their name, age, salary, and bonus"
manager := Manager new.
manager setName: 'John Smith'.
manager setAge: 35.
manager setSalary: 5000.
manager setBonus: 1000.

"Printing out the calculated annual salary of the manager"
Transcript show: 'Manager's annual salary: '.
Transcript show: manager calculateAnnualSalaryd.
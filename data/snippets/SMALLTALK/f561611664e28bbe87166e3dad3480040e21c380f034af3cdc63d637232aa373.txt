"Counter class with methods for incrementing, decrementing, and resetting"
 Counter class:
    | value |
    "value is a private variable that holds the current count"
    
    "Method to increment the counter by one"
    increment:
        value := value + 1.
    
    "Method to decrement the counter by one"
    decrement:
        value := value - 1.
    
    "Method to reset the counter back to zero"
    reset:
        value := 0.
    
    "Method to print the current count"
    print:
        Transcript show: 'The current count is: '.
        Transcript show: value.
        Transcript cr.
    
    "Method to initialize the counter with a starting value"
    initialize: startingValue:
        value := startingValue.
    
 "Create an instance of the Counter class and initialize it with a starting value of 5"
 counter := Counter new.
 counter initialize: 5.

"Print the current count"
counter print. 

"Increment the counter twice"
counter increment.
counter increment.

"Print the current count"
counter print.

"Decrement the counter"
counter decrement.

"Print the current count"
counter print.

"Reset the counter"
counter reset.

"Print the current count"
counter print.
| employees startTime endTime duration shift |
startTime := Time new. "initialize start time to current time"
endTime := Time new. "initialize end time to current time"
duration := 0. "initialize duration to 0"
shift := 'Day'. "initialize shift variable to 'Day'"

employees := #( "array with employees' names"
	'John Smith'
	'Sarah Johnson'
).

employees do: [ :employee |
	Transcript show: 'Calculating shift for ', employee; cr.

	startTime := Time new. "reset start time to current time at the beginning of each iteration"
	
	(1 to: 7) do: [:i |
		Transcript show: 'Checking shift for day ', i printString; cr.

		endTime := startTime addMinutes: 480. "add 8 hours to start time for end time"
		(endTime hours > 17) ifTrue: [ "if end time falls after 5 PM, set shift to 'Night'"
			shift := 'Night'.
		].
		duration := duration + (endTime minutes - startTime minutes). "calculate duration for each day"
		startTime := endTime. "reset start time to end time for next iteration"
	].

	Transcript show: employee, ' will work a ', shift, ' shift with a total duration of ', duration printString, ' minutes.'; cr.
].
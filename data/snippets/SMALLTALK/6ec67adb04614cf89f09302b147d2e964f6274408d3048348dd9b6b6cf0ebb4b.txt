"Define a class for a person object"
Object subclass: #Person
    instanceVariableNames: 'name age gender occupation'
    classVariableNames: ''
    poolDictionaries: ''
    category: 'MyApp'

"Define a method for initializing a person object with input values"
Person class >> initializeWithName: aName age: anAge gender: aGender occupation: anOccupation
    ^ self new
        name: aName;
        age: anAge;
        gender: aGender;
        occupation: anOccupation;
        yourself.

"Define a method for calculating a person's salary based on their occupation"
Person >> calculateSalary
    | salaryMultiplier |
    salaryMultiplier := occupation = 'developer' ifTrue: [1.5] ifFalse: [1]. "set salary multiplier based on occupation"
    ^ salaryMultiplier * age * 1000. "calculate salary based on age and multiply by multiplier"
    
"Create a new person object with input values"
| personObject |
personObject := Person initializeWithName: 'John' age: 30 gender: 'male' occupation: 'developer'.

"Print out the person's name and calculated salary"
Transcript show: 'Name: ', personObject name.
Transcript cr.
Transcript show: 'Salary: ', personObject calculateSalary.
"Define a class called 'BankAccount'"
Object subclass: #BankAccount
   instanceVariableNames: 'balance'
   classVariableNames: ''
   poolDictionaries: ''
   category: 'Banking'

"Define methods for deposit, withdraw, and check balance"
BankAccount>>deposit: amount
    "Adds the given amount to the current balance"
    balance := balance + amount.

BankAccount>>withdraw: amount
    "Subtracts the given amount from the current balance if enough funds are available"
    balance >= amount
        ifTrue: [balance := balance - amount]
        ifFalse: [self error: 'Insufficient funds'].

BankAccount>>checkBalance
    "Returns the current balance"
    ^balance.

"Create an instance of the BankAccount class and perform transactions"
| myAccount |
myAccount := BankAccount new.
myAccount deposit: 100.
myAccount withdraw: 50.
myAccount checkBalance. "Returns 50"
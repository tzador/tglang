\n
" This method performs a binary search on a sorted array and returns the index of the target value if found or -1 if not found."
binarySearch: target inSortedArray: array
	| low high mid |
	low := 1.								"set low index of array"
	high := array size.						"set high index of array"
	mid := (low + high) // 2.					"set middle index of array"
	[low <= high] whileTrue: [				"loop while low index is less than or equal to high index"
		(array at: mid) > target ifTrue: [	"if value at middle index is greater than target"
			high := mid - 1.					"decrement high index"
		] ifFalse: [						"if value at middle index is less than or equal to target"
			(array at: mid) < target ifTrue: [	"if value at middle index is less than target"
				low := mid + 1.				"increment low index"
			] ifFalse: [					"if value at middle index is equal to target"
				^ mid.						"return middle index"
			].
		].
		mid := (low + high) // 2.				"update middle index"
	].
	^ -1.									"return -1 if target value is not found"
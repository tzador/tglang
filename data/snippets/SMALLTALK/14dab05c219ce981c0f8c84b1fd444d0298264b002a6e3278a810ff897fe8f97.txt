| players ball radius |
players := #(John Mary Peter). "create an array of player names"
ball := Color rand: Random new next. "create a random color for the ball"
radius := Dictionary new. "create a new dictionary to store player names and their corresponding radius"
players do: [:player | radius at: player put: Random new nextDouble + 1.0]. "for each player, generate a random radius between 1.0 and 2.0 and add it to the dictionary"
players foreach: [:player | 
    Transcript cr; show: player,' - '; show: radius at: player; show: 'cm'. "print out player name and their corresponding radius in centimeters"
    player pixel: radius at: player * 10. "set the size of the player's pixel based on their radius"
    ellipse: (player * 100) @ 100 extent: (radius at: player * 10) @ (radius at: player * 10). "draw an ellipse for each player with their size based on their radius"
].
ball := Ellipse new extent: 20 @ 20. "create a new ellipse for the ball with a size of 20 x 20"
ball centerX: 400; centerY: 400; fillColor: ballColor. "set the position of the ball and fill it with its random color"
Display restoreAfter: [
    ball removeAllMorphs. "remove any previously drawn ball from the screen"
    ball moveBy: -10 @ -10 duration: 2. "move the ball 10 pixels to the left and 10 pixels down over a duration of 2 seconds"
    ball bounceOffTopAndBottom; bounceOffLeftAndRight. "make the ball bounce off the top and bottom edges, as well as the left and right edges"
    self addMorph: ball. "add the ball to the display"
]
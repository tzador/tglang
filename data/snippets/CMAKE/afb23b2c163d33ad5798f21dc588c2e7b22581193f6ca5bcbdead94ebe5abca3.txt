# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.15)

# Create a project with the name 'MyProject'
project(MyProject)

# Set the source files for the project
set(SOURCE_FILES main.cpp function.cpp)

# Set the include directories for the project
include_directories(include)

# Set the library directories for the project
link_directories(lib)

# Add a library target
add_library(mylib STATIC lib.cpp)

# Add an executable target
add_executable(myexe ${SOURCE_FILES})

# Specify the dependencies for the executable
target_link_libraries(myexe mylib)

# Set compiler flags for debug and release builds
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Set compiler-specific flags
if (CMAKE_COMPILER_IS_GNUCXX)
    # Enable all warnings
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
endif()

# Add a custom target
add_custom_target(build_docs
    COMMAND doxygen Doxyfile
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/docs
)

# Create an install target
install(TARGETS myexe DESTINATION bin)
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include DESTINATION include)
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib DESTINATION lib)

# Add a test target
enable_testing()
add_test(NAME mytest COMMAND myexe)

# Configure the project to use C++17
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
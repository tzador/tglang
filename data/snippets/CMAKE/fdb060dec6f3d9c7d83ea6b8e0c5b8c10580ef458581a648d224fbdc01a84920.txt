cmake_minimum_required(VERSION 3.10) #Set minimum required version of CMake

project(ExampleProject VERSION 1.0.0 LANGUAGES CXX) #Defines project name and version

set(SRCS #Defines a variable 'SRCS' that contains list of source files
    src/file1.cpp
    src/file2.cpp
    src/file3.cpp
)

set(HEADERS #Defines a variable 'HEADERS' that contains list of header files
    include/file1.h
    include/file2.h
    include/file3.h
)

add_library(ExampleProjectLib STATIC #Creates a library target named 'ExampleProjectLib'
    ${SRCS} #Links the 'SRCS' variable to the target
    ${HEADERS} #Links the 'HEADERS' variable to the target
)

target_include_directories(ExampleProjectLib PUBLIC include) #Adds the 'include' directory to the target's include directories

target_compile_features(ExampleProjectLib PUBLIC cxx_std_11) #Sets C++ standard to use for the target

add_executable(ExampleProject #Creates an executable target named 'ExampleProject'
    main.cpp #Defines the source file for the executable
)

target_link_libraries(ExampleProject PRIVATE ExampleProjectLib) #Links the 'ExampleProjectLib' library to the executable

set_property(TARGET ExampleProject PROPERTY CXX_STANDARD 11) #Sets the C++ standard to use for the executable

install(TARGETS ExampleProject #Installs the 'ExampleProject' target to the system
    RUNTIME DESTINATION bin #Specifies the destination directory for the executable
    LIBRARY DESTINATION lib #Specifies the destination directory for the library
    ARCHIVE DESTINATION lib #Specifies the destination directory for the static library
)

#Creates an install script to publish the 'ExampleProject' library header files to the system
install(DIRECTORY include/ DESTINATION include/ExampleProject
    FILES_MATCHING PATTERN "*.h"
)
# Define a variable to hold the list of source files
set(SOURCES 
    src/file1.cpp
    src/file2.cpp
    src/file3.cpp
    )

# Define a target with the given name and type
add_executable(my_program 
    ${SOURCES}
    )

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.15)

# Set the project name to be used
project(my_project)

# Set the include directories for the project
# CMAKE_CURRENT_SOURCE_DIR is a predefined variable for the current directory
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# Add a preprocessor definition for debug mode
# This can be useful for conditional compilation
add_definitions(-DDEBUG)

# Set the C++ standard to be used by the project
set(CMAKE_CXX_STANDARD 17)

# Set the compiler flags, such as optimization level and warnings
# Use the predefined CMake variables CMAKE_CXX_FLAGS and CMAKE_CXX_FLAGS_DEBUG
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall")

# Link the necessary libraries to the target
# For this example, we will just link the standard math library
target_link_libraries(my_program m)
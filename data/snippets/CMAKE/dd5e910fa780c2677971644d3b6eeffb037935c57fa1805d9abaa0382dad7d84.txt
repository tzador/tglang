# CMakeLists.txt

# Sets minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Declares project name and supported languages
project(MyProject LANGUAGES CXX)

# Sets the source files for the project
set(SOURCES
    main.cpp
    utils.cpp
    math.cpp
)

# Sets the header files for the project
set(HEADERS
    utils.h
    math.h
)

# Configures the executable with specified source and header files
add_executable(MyProject ${SOURCES} ${HEADERS})

# Specifies the target_include_directories to include the specified directories
target_include_directories(MyProject PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/utils
    ${CMAKE_CURRENT_SOURCE_DIR}/math
)

# Specifies the target_compile_options to add compiler options for the target
target_compile_options(MyProject PRIVATE
    -Wall
    -Wextra
    -Werror
)

# Specifies the target_compile_features to request specific features or requirements
target_compile_features(MyProject PRIVATE
    cxx_std_17
)

# Sets the output directory for the executable
set_target_properties(MyProject PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)

# Configures the install target for the executable
install(TARGETS MyProject
    RUNTIME DESTINATION bin
)

# Specifies the sources for a custom target
add_custom_target(CustomTarget SOURCES
    ${SOURCES}
    ${HEADERS}
)

# Configures a post-build command for the executable
add_custom_command(TARGET MyProject POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy
    ${CMAKE_CURRENT_SOURCE_DIR}/config.ini
    ${CMAKE_BINARY_DIR}/bin/config.ini
)

# Configures a pre-install command for the executable
add_custom_command(TARGET MyProject PRE_INSTALL
    COMMAND ${CMAKE_COMMAND} -E copy
    ${CMAKE_BINARY_DIR}/bin/config.ini
    ${CMAKE_INSTALL_PREFIX}/bin/config.ini
)
# Commenting

# set variable
set(FOO "bar")
set(BAZ ${FOO})

# control flow
if(BAZ STREQUAL "bar")
  # create target
  add_executable(my_executable src/main.cpp)

  # create library
  add_library(my_library src/lib.cpp)

  # link library to target
  target_link_libraries(my_executable
    PUBLIC my_library
  )
elseif(BAZ STREQUAL "baz")
  # create target
  add_executable(my_other_executable src/other_main.cpp)

  # create library
  add_library(my_other_library src/other_lib.cpp)

  # link library to target
  target_link_libraries(my_other_executable
    PUBLIC my_other_library
  )
else()
  # create target
  add_executable(my_third_executable src/third_main.cpp)

  # create library
  add_library(my_third_library src/third_lib.cpp)

  # link library to target
  target_link_libraries(my_third_executable
    PUBLIC my_third_library
  )
endif()

# set compiler flags
target_compile_options(my_executable
  PRIVATE "-Wall"
  "-O3"
)

# set include directories
target_include_directories(my_library
  PUBLIC inc
  PRIVATE src
)

# set preprocessor definitions
target_compile_definitions(my_other_executable
  PRIVATE SOME_DEFINE
)

# set linker flags
target_link_options(my_third_executable
  PUBLIC "-L/usr/lib"
)

# install targets
install(TARGETS
  my_executable
  my_other_executable
  my_third_executable
  my_library
  my_other_library
  my_third_library
  DESTINATION /usr/local/bin # install targets in /usr/local/bin
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE # set permissions for installed targets
)
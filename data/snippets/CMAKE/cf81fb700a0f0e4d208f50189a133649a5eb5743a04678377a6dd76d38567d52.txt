# This code snippet is an example of a CMakeLists.txt file used in the CMAKE programming language.
# It contains various build commands and options.

# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name
project("MyProject")

# Set C++ compiler
set(CMAKE_CXX_COMPILER "g++")

# Set compilation flags
set(CMAKE_CXX_FLAGS "-Wall -Wextra -g")

# Specify source files for the project
set(SOURCE_FILES 
    src/main.cpp 
    src/utils.cpp
    src/classA.cpp
    src/classB.cpp
)

# Create executable target for the project
add_executable(myProject ${SOURCE_FILES})

# Add include directories
target_include_directories(myProject
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Add subdirectory for additional libraries
add_subdirectory(libs)

# Add external library target
add_library(external_lib STATIC
    libs/external_lib/src/file.cpp
)

# Link external library to project
target_link_libraries(myProject
    PUBLIC external_lib
)

# Set installation destination for executable
install(TARGETS myProject DESTINATION bin)

# Add custom target for running unit tests
add_custom_target(run_unit_tests 
    COMMAND ${CMAKE_CTEST_COMMAND} --output-on-failure
    DEPENDS myProject
)

# Add test executable target and link to project
add_executable(tests
    test/main.cpp
    test/test_classA.cpp
    test/test_classB.cpp
)
target_link_libraries(tests
    PUBLIC external_lib
)

# Add test to CMake test suite
add_test(NAME "MyUnitTests" COMMAND tests)
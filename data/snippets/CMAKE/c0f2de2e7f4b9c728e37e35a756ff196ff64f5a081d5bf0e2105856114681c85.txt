# Start by setting the minimum required version of CMake
cmake_minimum_required(VERSION 3.10.0)

# Set the project name and version
project(my_project VERSION 1.0.0)

# Add a library target
add_library(my_library SHARED
    src/my_class.cpp
)

# Add an executable target and link it to the library
add_executable(my_executable
    src/main.cpp
)

target_link_libraries(my_executable PRIVATE my_library)

# Set compile options for the library and executable targets
target_compile_options(my_library PRIVATE -Wall -Wextra -pedantic)
target_compile_options(my_executable PRIVATE -Wall -Wextra -pedantic)

# Set include directories for the library and executable targets
target_include_directories(my_library 
    PRIVATE
        include
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

target_include_directories(my_executable
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

# Add a platform-specific compile definition for the library target
if (WIN32)
    target_compile_definitions(my_library PRIVATE MY_LIBRARY_WINDOWS)
endif()

# Add custom build commands for the executable target
add_custom_command(TARGET my_executable
    POST_BUILD
        COMMAND mkdir -p bin
        COMMAND move my_executable bin/.
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

# Specify the installation targets for the library and executable
install(TARGETS my_library DESTINATION lib/my_project)
install(TARGETS my_executable DESTINATION bin)
install(FILES include/my_class.h DESTINATION include)
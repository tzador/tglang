# Define a variable called "MY_LIST" with multiple values
set(MY_LIST 1 2 "Hello World" [3,4,5])

# Create an executable called "my_program" with a list of source files
add_executable(my_program main.cpp helper.cpp func.cpp)

# Include directories for external libraries
include_directories(${PROJECT_SOURCE_DIR}/include ${OpenCV_INCLUDE_DIRS})

# Specify compiler flags for the target "my_program" 
target_compile_options(my_program PRIVATE -Wall -Wextra -Werror)

# Specify dependencies for the target "my_program" 
target_link_libraries(my_program PRIVATE openblas mlapack)

# Define a custom target "build_docs" 
add_custom_target(build_docs
  # Add a command to generate documentation using Doxygen
  COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_CONFIG_FILE}
  # Set working directory as the "docs" directory
  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/docs
  # Add dependencies, so that "build_docs" will run after "my_program" is built
  DEPENDS my_program
)

# Define a variable "MY_OPTION" with a default value
set(MY_OPTION "default" CACHE STRING "An option for my_program")

# Set the C++ standard to C++17 for the target "my_program"
set_target_properties(my_program PROPERTIES CXX_STANDARD 17)

# Generate a configuration file with variables for later use in the project
configure_file(config.h.in ${PROJECT_SOURCE_DIR}/include/config.h)

# Create a test for "my_program"
add_test(NAME my_program_test COMMAND my_program)

# Install the executable "my_program" to the "bin" directory
install(TARGETS my_program DESTINATION ${CMAKE_INSTALL_BINDIR})
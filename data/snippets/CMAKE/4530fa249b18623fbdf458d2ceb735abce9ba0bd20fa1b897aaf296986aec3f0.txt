# Set CMake minimum required version
cmake_minimum_required(VERSION 3.5)

#########################
# Project Configuration #
#########################

# Define project name and version
project(my_project VERSION 1.0.0)

# Set C++ standard to C++14
set(CMAKE_CXX_STANDARD 14)

# Add subdirectory for external libraries
add_subdirectory(external)

###################
# Compiler Flags #
###################

# Declare a variable for compiler flags
set(COMPILE_FLAGS "-Wall -Wextra")

# Add the compiler flags to the project's common build flags
set(CMAKE_CXX_FLAGS "${COMPILE_FLAGS}")

########################
# Source Files/Targets #
########################

# Create an executable target for the main project
add_executable(my_project main.cpp)

# Link the external libraries to the main project executable
target_link_libraries(my_project external_lib1 external_lib2)

# Set the output directory for the main project executable
set_target_properties(my_project PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

##############
# Unit Tests #
##############

# Enable testing
enable_testing()

# Add a unit test target for the main project
add_test(NAME unit_test COMMAND unittest)

# Add the external libraries and the main project executable as dependencies for the unit test
add_dependencies(unit_test external_lib1 external_lib2 my_project)

# Link the unit test target to the external libraries
target_link_libraries(unit_test external_lib1 external_lib2)

# Set the output directory for the unit tests
set_target_properties(unit_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/tests)

###############
# Documentation #
###############

# Generate documentation using Doxygen
find_package(Doxygen REQUIRED)

# Add a target for generating the documentation
add_custom_target(documentation COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile)

# Set the output directory for the documentation
set_target_properties(documentation PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/docs)

################
# Installation #
################

# Install the main project executable
install(TARGETS my_project DESTINATION bin)

# Install the external libraries
install(TARGETS external_lib1 external_lib2
    DESTINATION lib)

# Install documentation
install(DIRECTORY ${CMAKE_BINARY_DIR}/docs
    DESTINATION docs)

#########
# Tests #
#########

# Add a custom target for running all tests
add_custom_target(run_tests
    COMMAND ${CMAKE_CTEST_COMMAND} -C $<CONFIGURATION> --output-on-failure
    DEPENDS ${TEST_NAMES}
    COMMENT "Running all tests..." VERBATIM)

# Set the tests as dependencies for the custom target
add_dependencies(run_tests unit_test)

##################
# Configuration #
##################

# Create a file for storing configuration settings
file(WRITE ${CMAKE_BINARY_DIR}/config.txt "Configuration settings")
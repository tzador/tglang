# Defines a function called "fibonacci" which takes in a single parameter "n" representing the index of the Fibonacci sequence to be generated
function(fibonacci n)
    # Creates a local variable "result" and initializes it to 0
    set(result 0)
    # If the input parameter is equal to 0, set "result" to 0
    if(n EQUAL 0)
        set(result 0)
    # If the input parameter is equal to 1, set "result" to 1
    elseif(n EQUAL 1)
        set(result 1)
    # If the input parameter is greater than 1, recursively call the "fibonacci" function for the previous two indexes and add their results together to get the result for the current index
    else()
        math(EXPR result "fibonacci(${n}-1) + fibonacci(${n}-2)")
    endif()

    # Return the calculated result
    return(${result})
# End of the "fibonacci" function definition
endfunction()

# Creates a variable "index" and sets it to 10
set(index 10)
# Calls the "fibonacci" function with the variable "index" as the input parameter and stores the result in a variable called "fib_result"
fibonacci(${index} fib_result)

# Prints the result of the Fibonacci sequence at index 10
message(STATUS "Fibonacci sequence at index ${index}: ${fib_result}")
cmake_minimum_required(VERSION 3.10)  # Minimum required version of CMake
project(my_project)  # Name of project
set(CMAKE_CXX_STANDARD 17)  # Set C++ standard to 17

# Add dependencies
find_package(Boost REQUIRED)  # Find Boost library

# Define custom library
add_library(my_library SHARED  # Type of library (shared)
    src/file1.cpp  # Source files to compile
    src/file2.cpp
)

# Set include directories for my_library
target_include_directories(my_library PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include  # Directory containing header files
    ${Boost_INCLUDE_DIRS}  # Boost include directory
)

# Add executable
add_executable(my_executable  # Name of executable
    src/main.cpp  # Main source file
)

# Link my_library to my_executable
target_link_libraries(my_executable  # Name of target library
    my_library  # Library to link
)

# Set compiler options for my_executable
target_compile_options(my_executable PRIVATE
    -Wall  # Show all compiler warnings
    -Wextra  # Enable extra compiler warnings
)

# Set compiler flags for debug and release builds
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_definitions(my_executable PRIVATE MY_DEBUG_FLAG)  # Define MY_DEBUG_FLAG for debug builds
else ()
    target_compile_definitions(my_executable PRIVATE NDEBUG)  # Define NDEBUG for release builds
endif ()

# Install library and include files
install(TARGETS my_library  # Install my_library
        LIBRARY DESTINATION lib  # Destination directory for library
)
install(DIRECTORY include/  # Install header files
        DESTINATION include/  # Destination directory for header files
)
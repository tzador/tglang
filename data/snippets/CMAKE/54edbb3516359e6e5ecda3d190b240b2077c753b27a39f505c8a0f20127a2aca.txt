# Set C++ version
set(CMAKE_CXX_STANDARD 11)

# Define project name
project(my_Project)

# Set source files
set(SRC_FILES 
    src/main.cpp 
    src/helper.cpp 
    src/helper.hpp)

# Define executable
add_executable(${PROJECT_NAME} ${SRC_FILES})

# Set include directories
target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_SOURCE_DIR}/src)

# Set link libraries
target_link_libraries(${PROJECT_NAME} 
    PRIVATE 
        some_library 
        another_library)

# Set cmake minimum version
cmake_minimum_required(VERSION 3.10)

# Set compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic")

# Set output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Define cmake modules path
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

# Find external library
find_package(ExternalLibrary REQUIRED)

# Set include directories for external library
target_include_directories(${PROJECT_NAME} PUBLIC ${ExternalLibrary_INCLUDE_DIRS})

# Set link directories for external library
target_link_directories(${PROJECT_NAME} PRIVATE ${ExternalLibrary_LIBRARY_DIRS})

# Set link libraries for external library
target_link_libraries(${PROJECT_NAME} PRIVATE ${ExternalLibrary_LIBRARIES})
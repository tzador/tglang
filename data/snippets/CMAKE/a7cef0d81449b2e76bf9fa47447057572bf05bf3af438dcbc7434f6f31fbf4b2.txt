# Set the minimum required version of CMake
cmake_minimum_required (VERSION 3.10)

# Declare a project with the name "my_project"
project (my_project)

# Set the compiler to use C++11 standard
set (CMAKE_CXX_STANDARD 11)

# Include the directories for header files
include_directories (include)

# Set the source code files for the project
set (SOURCES src/main.cpp src/utilities.cpp)

# Create an executable named "my_project" that will use the listed source code files
add_executable (my_project ${SOURCES})

# Set the output directory for the executable to the "bin" folder
set_target_properties (my_project PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set the installation directory for the executable to the "bin" folder
install (TARGETS my_project RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)

# Include the directories for libraries
link_directories (lib)

# Set the libraries to link for the executable
target_link_libraries (my_project library1 library2)

# Allow testing for the project
enable_testing()

# Set the test files for the project
set (TEST_SOURCES test/test_main.cpp test/test_utilities.cpp)

# Create an executable for running the tests
add_executable (my_project_tests ${TEST_SOURCES})

# Link the executable with the test libraries
target_link_libraries (my_project_tests library1 library2)

# Set the output directory for the tests to the "bin" folder
set_target_properties (my_project_tests PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add a test for the project that will run the tests executable
add_test (NAME my_project_tests COMMAND ${CMAKE_BINARY_DIR}/bin/my_project_tests)
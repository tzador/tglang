cmake_minimum_required(VERSION 3.10) # specifies minimum version required for the project

project(MyProject VERSION 1.0) # specifies project name and version

set(SOURCE_FILES main.cpp) # creates a variable with main.cpp as the source file

add_executable(MyExecutable ${SOURCE_FILES}) # creates an executable target named MyExecutable with the source files specified in the SOURCE_FILES variable

target_include_directories(MyExecutable PUBLIC include) # adds the include directory to the target's include paths

target_compile_features(MyExecutable PRIVATE cxx_std_11) # enables C++11 features for the target

set(SOURCE_LIST "file1.cpp;file2.cpp;file3.cpp") # creates a variable with a list of source files

foreach(SOURCE ${SOURCE_LIST}) # iterates through the list of source files
  add_library(MyLibrary ${SOURCE}) # creates a library target for each source file
endforeach()

target_link_libraries(MyExecutable MyLibrary) # links the library target to the executable target

install(TARGETS MyExecutable DESTINATION bin) # installs the executable target to the bin directory

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror") # sets compiler flags for the project, in this case enabling all warnings and treating them as errors
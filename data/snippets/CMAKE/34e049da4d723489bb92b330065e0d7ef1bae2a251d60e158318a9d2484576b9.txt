# This is a CMakeLists.txt file
# It is used to configure how the project is built

# Declare the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set the project name
project(my_project)

# Add a list of source files to be compiled
set(SOURCES 
  src/main.cpp
  src/utils.cpp
  src/math.cpp
)

# Set the output folder for compiled binaries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Create an executable target named "my_app"
add_executable(my_app ${SOURCES})

# Add include directories to the target
target_include_directories(my_app
  PRIVATE include
  PUBLIC external/include
)

# Add compiler flags for debug and release builds
target_compile_options(my_app
  PRIVATE $<$<CONFIG:Debug>:-Wall -g>
  PRIVATE $<$<CONFIG:Release>:-Wall -O3>
)

# Set the library directories to search for during linking
link_directories(
  ${CMAKE_BINARY_DIR}/lib
  /usr/lib
  /usr/local/lib
)

# Add libraries to link with for different build configurations
target_link_libraries(my_app
  debug debug_lib
  optimized optimized_lib
  general library_a
  general library_b  
)

# Add a custom target to run "make install" to install the executable
add_custom_target(install_my_app
  COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:my_app> ${CMAKE_INSTALL_PREFIX}/bin
)

# Add a custom target to run "make test" to execute unit tests
add_custom_target(test_my_app
  COMMAND ${CMAKE_COMMAND} -E echo "Running unit tests..."
  COMMAND ${CMAKE_CTEST_COMMAND} --verbose
)
# Sets the minimum required version of CMake
cmake_minimum_required(VERSION 3.12)

# Sets the name and version of the project
project(my_project VERSION 1.0)

# Sets the compiler flags for the project
set(CMAKE_CXX_FLAGS "-Wall -Wextra -std=c++17 -O3")

# Includes the 'include' directory in the search path for header files
include_directories(include)

# Creates a variable for the source files
set(SOURCES src/main.cpp src/functions.cpp)

# Creates a variable for the executable target
set(EXECUTABLE_NAME my_executable)

# Adds the source files to the executable target
add_executable(${EXECUTABLE_NAME} ${SOURCES})

# Specifies the libraries to be linked with the executable target
target_link_libraries(${EXECUTABLE_NAME} my_library)

# Sets the output directory for the executable
set_target_properties(${EXECUTABLE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)

# Adds a custom target to clean the build directory
add_custom_target(clean_build
    COMMAND ${CMAKE_COMMAND} -E remove_directory ${PROJECT_BINARY_DIR}
    COMMENT "Cleaning build directory"
)

# Creates a library target
add_library(my_library SHARED src/library.cpp)

# Specifies the version for the library and sets it to be installed
set_target_properties(my_library PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION 1 INSTALL_RPATH "/usr/local/lib")

# Installs the library to the specified location
install(TARGETS my_library LIBRARY DESTINATION lib)

# Creates an executable target that depends on the library target
add_executable(my_executable_2 src/main.cpp)
target_link_libraries(my_executable_2 PRIVATE my_library)

# Sets the custom install prefix for the project
set(CMAKE_INSTALL_PREFIX "/usr/local")

# Installs the executable to the specified location
install(TARGETS my_executable RUNTIME DESTINATION bin)
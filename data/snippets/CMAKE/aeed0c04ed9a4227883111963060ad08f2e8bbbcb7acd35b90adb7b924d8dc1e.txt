# This is a complex code snippet in CMAKE

# Create a new project
cmake_minimum_required(VERSION 3.10)
project(my_project)

# Set source files
set(SOURCE_FILES src/main.cpp src/utils.cpp src/data.cpp)

# Create executable
add_executable(my_executable ${SOURCE_FILES})

# Add compiler options
if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    target_compile_options(my_executable PRIVATE -Wall -std=c++11 -stdlib=libc++)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    target_compile_options(my_executable PRIVATE -Wall -std=c++11)
endif()

# Add include directories
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# Add subdirectory for external libraries
add_subdirectory(external)

# Link libraries to executable
target_link_libraries(my_executable my_library)

# Set installation directory
set(INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/install)

# Install executable and headers
install(TARGETS my_executable DESTINATION ${INSTALL_DIR})
install(DIRECTORY include/ DESTINATION ${INSTALL_DIR}/include)

# Add tests
enable_testing()
add_subdirectory(tests)

# Generate documentation
find_package(Doxygen)
if(DOXYGEN_FOUND)
    # Start doxygen with config file
    message(INFO "Generating documentation with Doxygen")
    configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
    add_custom_target(documentation ALL ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Generating API documentation with Doxygen"
        VERBATIM
    )
endif()
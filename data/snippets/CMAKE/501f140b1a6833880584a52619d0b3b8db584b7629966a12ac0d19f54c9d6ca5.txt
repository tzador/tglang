# Create a list of sources
set(SOURCES
  main.cpp
  utils.cpp
  controllers.cpp
  models.cpp)

# Generate an executable target
add_executable(my_app ${SOURCES})

# Set include directories
target_include_directories(my_app
  PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Define compile options
target_compile_options(my_app
  PRIVATE 
    -std=c++14
    -Wall
    -Werror
)

# Find and add external library
find_library(my_lib
  NAMES my_lib
  HINTS ${CMAKE_CURRENT_SOURCE_DIR}/lib)

target_link_libraries(my_app
  PRIVATE
    ${my_lib}
)

# Add a custom command to generate another source file
add_custom_command(
  OUTPUT
    generated.cpp
  COMMAND
    python generate.py -o ${CMAKE_CURRENT_SOURCE_DIR}/generated.cpp
  DEPENDS
    generate.py
)

# Add the generated source file to the target
target_sources(my_app
  PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/generated.cpp
)

# Install the executable
install(TARGETS my_app DESTINATION bin)
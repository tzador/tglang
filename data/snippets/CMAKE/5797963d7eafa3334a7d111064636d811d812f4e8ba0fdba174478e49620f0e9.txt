# Example CMakeLists file
# Sets minimum version required and project name
cmake_minimum_required(VERSION 3.5)
project(example_project)

# Sets compiler flags and options
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -march=native")

# Defines source file and includes
set(SOURCE_FILES main.cpp)
include_directories(${CMAKE_SOURCE_DIR}/include)

# Gathers source files and compiles them into target executable
add_executable(example ${SOURCE_FILES})

# Sets install directory and installs target executable
install(TARGETS example DESTINATION ${CMAKE_SOURCE_DIR}/bin)

# Optional: Sets debugging information and optimization level for release mode
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -g -O3")

# Optional: Adds custom linker flags
set(CMAKE_EXE_LINKER_FLAGS "-pthread")
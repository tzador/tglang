# Define function to find all source files in a given directory
function(find_source_files dir source_files)
    # Hardcoded list of file extensions to include
    set(ALLOWED_EXTENSIONS ".cpp;.h;.hpp;.cc;.cxx;.c;")

    # Loop through files in directory
    file(GLOB files "${dir}/*")
    foreach(file ${files})
        # Check if file has one of our allowed extensions
        string(FIND ${ALLOWED_EXTENSIONS} "${file}" ext_index)
        if(NOT "${ext_index}" STREQUAL "-1")
            # Add file to list of source files
            list(APPEND ${source_files} ${file})
        endif()
    endforeach()
endfunction()

# Call the find_source_files function for a specific directory
# and save the results in the variable "sources"
find_source_files("src" sources)

# Create a library target and add all source files to it
add_library(my_library ${sources})

# Set compile options for the library
target_compile_options(my_library PRIVATE
    -Wall
    -Wextra
    -Werror
)

# Link any necessary libraries to our target
target_link_libraries(my_library
    dependencies
)

# Set include directories for our target
target_include_directories(my_library PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}/include"
)

# Set any necessary compiler flags for our target
target_compile_definitions(my_library PRIVATE
    MY_DEFINE
)

# Set the output location for our library
set_target_properties(my_library PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)
cmake_minimum_required(VERSION 3.10)  # Sets minimum required version of CMake to 3.10

# Define project name and version
project(myProject VERSION 1.0.0)  # Sets project name and version number

# Set compiler flags
set(CMAKE_CXX_STANDARD 17)  # Sets C++ standard to C++17
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")  # Appends additional compiler flags to existing ones

# Define source files
set(SOURCES
    src/main.cpp
    src/helper_functions.cpp
)

# Create executable target
add_executable(myProject ${SOURCES})  # Creates executable target named "myProject" with source files in "SOURCES" variable

# Include directory containing necessary headers
target_include_directories(myProject PRIVATE includes)  # Adds "includes" directory to the target's include directories

# Link necessary libraries
target_link_libraries(myProject pthread)  # Links the "pthread" library to the target for multithreading support

# Install target
install(TARGETS myProject DESTINATION bin)  # Installs the target executable "myProject" to the "bin" directory during installation

# Provide option to enable testing
option(BUILD_TESTS "Build tests" OFF)  # Creates an option for building tests, set to "OFF" by default

# If tests are enabled, add test target
if(BUILD_TESTS)
    enable_testing()  # Enables CTest testing for the project
    add_executable(tests tests/test_main.cpp)  # Creates test executable "tests" from "test_main.cpp" source file
    target_link_libraries(tests pthread)  # Links the "pthread" library to the test executable for multithreading support
    add_test(NAME AllTests COMMAND tests)  # Runs all tests using the "tests" executable
endif()

# Generate documentation
find_package(Doxygen)  # Searches for Doxygen package
if(DOXYGEN_FOUND)
    set(DOXYGEN_INPUT ${PROJECT_SOURCE_DIR})  # Sets Doxygen input to project source directory
    set(DOXYGEN_OUTPUT ${CMAKE_BINARY_DIR}/doc)  # Sets Doxygen output to "doc" folder in build directory
    configure_file(Doxyfile.in ${CMAKE_BINARY_DIR}/Doxyfile @ONLY)  # Configures Doxyfile.in template with appropriate paths
    add_custom_target(doc ALL COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_BINARY_DIR}/Doxyfile  # Creates a custom target named "doc" to run Doxygen
        COMMENT "Generating API documentation with Doxygen" VERBATIM)
endif()
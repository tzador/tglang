# This is a CMake file
# Comments are created with a hashtag

# Define the minimum required version of CMake.
cmake_minimum_required(VERSION 3.14.2)

# Create a project with a given name.
project(MyProject)

# Set the output directories for the built targets.
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)

# Set the include directories for the project.
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Set the source files for the project. 
# The file(GLOB ...) allows for wildcard additions:
file(GLOB SOURCES "src/*.cpp")

# Add an executable target with the given name, using the given source files.
add_executable(MyExeceutable ${SOURCES})

# Find a package and add the include directories and libraries to the project.
find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
target_link_libraries(MyExecutable ${OpenCV_LIBS})

# Set compiler flags for the project.
set(CMAKE_CXX_FLAGS "-Wall -Wextra -O3")

# Add a subdirectory for additional CMakeLists.txt files.
add_subdirectory(Test)

# Install targets and files at the given locations.
install(TARGETS MyExecutable DESTINATION bin)
install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/README.md" DESTINATION doc)

# Create a custom command that will be executed during the build process.
add_custom_command(TARGET MyExeceutable POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts $<TARGET_FILE_DIR:MyExecutable>/scripts)
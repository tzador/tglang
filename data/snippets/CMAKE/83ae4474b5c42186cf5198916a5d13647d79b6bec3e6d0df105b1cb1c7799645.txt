# Specify the minimum version of CMake required to run this project
cmake_minimum_required(VERSION 3.10)

# Set the project name
project(my_project)

# Set any required flags or options for the compiler
set(CMAKE_CXX_FLAGS "-Wall -Wextra")

# Set the source files for the project
set(SOURCES 
    main.cpp
    helper_functions.cpp
    classes/my_class.cpp
)

# Set any required include directories (i.e. header files)
include_directories(include)

# Set the output directory for the compiled executable
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)

# Add an external library to the project
add_subdirectory(external_library)

# Set the list of libraries to link with the project
set(LIBRARIES
    my_library
    external_library
)

# Create an executable target from the specified source files
add_executable(my_executable ${SOURCES})

# Link the libraries with the executable target
target_link_libraries(my_executable ${LIBRARIES})

# Set any required compiler definitions or preprocessor macros
target_compile_definitions(my_executable PRIVATE
    -DDEBUG
    -DENABLE_FEATURE_A
)

# Add a custom command to be executed during the build process
add_custom_command(TARGET my_executable POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy
        ${CMAKE_SOURCE_DIR}/Config/config_file.txt
        ${EXECUTABLE_OUTPUT_PATH}/config_file.txt
    COMMENT "Copying config file to output directory"
)

# Specify any required external dependencies for the project
### BEGIN EXTERNAL DEPENDENCIES ###
find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
target_link_libraries(my_executable ${OpenCV_LIBRARIES})
### END EXTERNAL DEPENDENCIES ###
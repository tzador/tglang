# This is a comment
cmake_minimum_required(VERSION 3.10) # Specify minimum required CMake version

# Define project and its name
project(my_project)

# Set compile options
add_compile_options(-Wall -Werror)

# Add a custom library target
add_library(my_library SHARED 
    src/my_class.cpp
    src/my_functions.cpp
)

# Set include directories for the library
# The angle brackets specify that the library is in a system directory
target_include_directories(my_library PUBLIC
    ${CMAKE_SOURCE_DIR}/include # Include directory for the project
    ${CMAKE_SOURCE_DIR}/third_party/spdlog/include # Include directory for third-party library
)

# Set linker options for library dependencies
target_link_options(my_library PUBLIC
    -lstdc++fs -pthread # Link against filesystem and threading libraries
)

# Add executable target
add_executable(my_executable
    src/main.cpp
)

# Link the executable to the custom library
target_link_libraries(my_executable my_library)

# Set output directories for the project
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib) # Output directory for static libraries
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib) # Output directory for shared libraries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin) # Output directory for executables
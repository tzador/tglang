# Create a variable to hold a list of source files
set(SOURCES
    main.cpp
    utils.cpp
    )

# Set the required minimum version of CMake
cmake_minimum_required(VERSION 3.12)

# Create a project with a name and specify the languages used
project(MyProject LANGUAGES CXX)

# Specify the output name of the executable
set (EXECUTABLE_NAME "my_exe")

# Add a target, which represents a single executable or library
# The name of the target is specified, followed by the type and then the source files
add_executable(${EXECUTABLE_NAME} ${SOURCES})

# Set properties for the target, such as include directories and compiler flags
target_include_directories(${EXECUTABLE_NAME} PUBLIC
    include
    )

target_compile_options(${EXECUTABLE_NAME} PRIVATE
    -Wall
    -Wextra
    -Werror
    )

# Find and link any required libraries
find_library(LIBRARY_NAME REQUIRED)
target_link_libraries(${EXECUTABLE_NAME} PRIVATE ${LIBRARY_NAME})

# Set installation rules for the target
install(TARGETS ${EXECUTABLE_NAME} RUNTIME DESTINATION bin)

# Add a custom target to run a command after building the main target
add_custom_target(run
    COMMAND ${EXECUTABLE_NAME}
    DEPENDS ${EXECUTABLE_NAME}
    )
# Create a variable called "sources" and add two source files
set(sources "main.cpp" "helper.cpp")

# Add an executable target called "my_program"
add_executable(my_program ${sources})

# Create a library target called "my_library"
add_library(my_library STATIC ${sources})

# Set the include directories for the library
target_include_directories(my_library PUBLIC "include")

# Add a preprocessor definition for the library
target_compile_definitions(my_library PRIVATE DEBUG)

# Set compiler options for the executable target
target_compile_options(my_program PRIVATE -Wall -Wextra)

# Link the library target to the executable target
target_link_libraries(my_program PRIVATE my_library)

# Set a custom build type "optimized"
set(CMAKE_BUILD_TYPE Optimized)

# Set the output directory for the executable target
set_target_properties(my_program PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

# Add a post-build command to copy a file after compilation
add_custom_command(TARGET my_program POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/data/data.txt ${CMAKE_SOURCE_DIR}/bin/data.txt)
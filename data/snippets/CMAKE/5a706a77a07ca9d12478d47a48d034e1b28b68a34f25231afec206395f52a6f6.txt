# This is a CMakeLists.txt file for a project called "Hello World"
cmake_minimum_required(VERSION 3.10) # sets the minimum required version of cmake

# set the project name
project(HelloWorld)

# add a variable called SOURCES which holds the source files of the project
set(SOURCES 
    main.cpp 
    hello.cpp 
   )

# add executable target, linking the source files
add_executable(${PROJECT_NAME} ${SOURCES}) 

# set option for building a library instead of an executable
option(BUILD_LIBRARY "Build library instead of executable" OFF)

# if building a library, add library target and link the source files
if(BUILD_LIBRARY)
    add_library(${PROJECT_NAME} ${SOURCES})
endif()

# set additional flags for compilation
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall")

# set output directory for the compiled files
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# add a custom command to copy a file from the source directory to the build directory
add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/README.md" 
    "${CMAKE_BINARY_DIR}/README.md" 
    COMMENT "Copying README.md to build directory"
    )

# add a custom target that compiles and runs the project
add_custom_target(run
    COMMAND ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}
    DEPENDS ${PROJECT_NAME}
    COMMENT "Running ${PROJECT_NAME}"
    )

# add a test target that runs unit tests using CTest tool
add_test(NAME MyTest COMMAND ${PROJECT_NAME})
# Declare a variable named "MY_VARIABLE" and set its value to "Hello World"
set(MY_VARIABLE "Hello World")

# Create a function called "my_function" that takes in two parameters: "input1" and "input2"
function(my_function input1 input2)
  # Multiply the two parameters and store the result in a new variable "output"
  math(EXPR output "${input1} * ${input2}")

  # Print out the value of the "output" variable
  message("Output: ${output}")

  # If the value of "output" is greater than 10
  if(output GREATER 10)
    # Create a new variable "big_result" and set its value to "true"
    set(big_result true)

    # Print out a message indicating the "big_result" variable is true
    message("The result is big!")
  endif()

  # Create a list variable "result_list" with the values of "output" and "big_result"
  set(result_list "${output}; ${big_result}")

  # Return the list "result_list" from the function
  # Note: This is not necessary in CMAKE, but is included for demonstration purposes
  return("${result_list}")  # "output; big_result"
endfunction()

# Call the "my_function" function, passing in the values 5 and 3 for the parameters "input1" and "input2"
my_function(5 3)  # Outputs "Output: 15" and "The result is big!" if "big_result" is true

# Set a new variable "new_results" to the returned list from the "my_function" function
# Note: Since the return is not necessary in CMAKE, this step is also not necessary, but is included for demonstration purposes
set(new_results "${my_function(2 2)}")  # "4; false"

# Only print out the first value in the list "new_results" by using the "list(GET " command
list(GET new_results 0)  # Outputs "4"

# Create a new list variable "my_list"
set(my_list)

# Loop through the numbers 1 to 10
foreach(num RANGE 1 10)
  # Add the number to the list "my_list"
  list(APPEND my_list ${num})
endforeach()

# Print out the values in the "my_list" variable
message("Values in my_list: ${my_list}")  # Outputs "Values in my_list: 1 2 3 4 5 6 7 8 9 10"
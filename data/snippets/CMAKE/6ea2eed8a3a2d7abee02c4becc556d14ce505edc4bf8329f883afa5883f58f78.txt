# CMakeLists.txt
# This is the top-level CMake file for my project

# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name
project(my_project)

# Set required compiler
set(CMAKE_CXX_STANDARD 11)

# Set output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set include directories
include_directories(
  ${PROJECT_SOURCE_DIR}/include
  ${PROJECT_BINARY_DIR}/include
)

# Add subdirectories for modules
add_subdirectory(src)
add_subdirectory(tests)

# Set source files for the project
set(SOURCES
  ${PROJECT_SOURCE_DIR}/src/main.cpp
  ${PROJECT_SOURCE_DIR}/src/module1.cpp
  ${PROJECT_SOURCE_DIR}/src/module2.cpp
  ${PROJECT_SOURCE_DIR}/src/module3.cpp
)

# Set test files for the project
set(TEST_SOURCES
  ${PROJECT_SOURCE_DIR}/tests/test1.cpp
  ${PROJECT_SOURCE_DIR}/tests/test2.cpp
)

# Create executable target for main project
add_executable(my_project ${SOURCES})

# Create executable target for testing
add_executable(my_tests ${TEST_SOURCES})

# Link libraries for executable targets
target_link_libraries(my_project module1 module2 module3)
target_link_libraries(my_tests module1 gtest_main)

# Set CMake build type
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

# Set compiler flags for different build types
set(CMAKE_CXX_FLAGS_DEBUG "-g -Wall")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Configure unit tests with CTest
enable_testing()
add_test(NAME unit_tests COMMAND my_tests)

# Configure install targets
install(TARGETS my_project DESTINATION bin)
install(DIRECTORY include/ DESTINATION include)
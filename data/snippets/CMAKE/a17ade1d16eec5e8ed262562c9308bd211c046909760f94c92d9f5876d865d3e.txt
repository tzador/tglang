# Set the project name and version
project(ExampleProject VERSION 1.0)

# Set the minimum required CMake version
cmake_minimum_required(VERSION 3.10)

# Include subdirectories for libraries and dependencies
add_subdirectory(lib1)
add_subdirectory(lib2)
add_subdirectory(dependency1)
add_subdirectory(dependency2)

# Set source files for the main executable
set(SOURCES main.cpp helper.cpp)
    
# Set library include directories
set(LIB_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/lib1/include
                      ${PROJECT_SOURCE_DIR}/lib2/include)
                      
# Set dependency include directories
set(DEPENDENCY_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/dependency1/include
                            ${PROJECT_SOURCE_DIR}/dependency2/include)
                            
# Set user-defined options for build
option(BUILD_TESTS "Build tests for the project" ON)
option(ENABLE_DEBUG "Enable debug mode for the project" OFF)

# Set compiler flags for debug mode
if(ENABLE_DEBUG)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
endif()

# Add executable target for the project
add_executable(example ${SOURCES})

# Include libraries and dependencies
target_include_directories(example PRIVATE ${LIB_INCLUDE_DIRS}
                                           ${DEPENDENCY_INCLUDE_DIRS})
target_link_libraries(example PRIVATE lib1 lib2 dependency1 dependency2)

# Build tests if option is enabled
if(BUILD_TESTS)
  # Set test source files
  set(TEST_SOURCES test_helper.cpp helper.cpp)

  # Add executable target for tests
  add_executable(tests ${TEST_SOURCES})

  # Link libraries and dependencies
  target_include_directories(tests PRIVATE ${LIB_INCLUDEDIRS}
                                           ${DEPENDENCY_INCLUDE_DIRS})
  target_link_libraries(tests PRIVATE lib1 lib2 dependency1 dependency2)

  # Add test target for CTest
  add_test(NAME ExampleTests COMMAND tests)
endif()
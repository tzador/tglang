# This is a cmake project for a simple calculator
cmake_minimum_required(VERSION 3.0) # Sets minimum required version for cmake

# Define project name and specify language
project(MyCalculator LANGUAGES CXX) # Name of project and language used

# Set source files for executable
set(SOURCES src/main.cpp src/calculator.cpp) # Define source files for the executable

# Add executable target and set compiler flags
add_executable(MyCalculator ${SOURCES}) # Create executable with name and source files
set(CMAKE_CXX_FLAGS "-Wall -Werror -std=c++11") # Set compiler flags for C++11 and error warnings

# Add include directories
include_directories(include) # Add directory containing header files

# Find and add dependencies
find_package(PkgConfig REQUIRED) # Find libraries using pkg-config
pkg_check_modules(GMP REQUIRED gmp) # Use pkg-config to find the GMP library
include_directories(${GMP_INCLUDE_DIRS}) # Add GMP include directory to project
target_link_libraries(MyCalculator ${GMP_LIBRARIES}) # Link MyCalculator executable with GMP library

# Add custom target for running tests
# Requires CTest to be enabled
# To run tests: make test
add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} -V # Define custom target for running tests
                  DEPENDS MyCalculator
                  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/test)

# Install target for executable
install(TARGETS MyCalculator DESTINATION bin) # Install executable to bin directory

# Install target for header files
install(DIRECTORY include/ DESTINATION include) # Install header files to include directory

# Add custom rules for formatting and linting
# Requires clang-format and clang-tidy to be installed
# To format source files: make format
add_custom_target(format COMMAND clang-format -i ${SOURCES}) # Define custom target for formatting source files
# To run clang-tidy: make tidy
add_custom_target(tidy COMMAND clang-tidy ${SOURCES}) # Define custom target for running clang-tidy on source files
# Define a function with input parameters
function(myFunction ARG1 ARG2)
    # Create a target that will be built
    add_library(${ARG1} SHARED ${ARG2})
    
    # Set the properties of the target, such as include directories and linking to other libraries
    target_include_directories(${ARG1} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
    target_link_libraries(${ARG1} PRIVATE library1 library2)
    
    # Set compiler flags for the target
    target_compile_options(${ARG1} PRIVATE -Wall -Wextra)
    
    # Add custom commands to be executed during build
    add_custom_command(TARGET ${ARG1} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${ARG1}> ${CMAKE_CURRENT_SOURCE_DIR}/bin)
    
    # Set the output location of the target
    set_target_properties(${ARG1} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
endfunction()

# Call function with two arguments
myFunction("myTarget" "src/myFile.cpp")

# Add a new target that depends on the previously created target
add_executable(myExecutable "src/main.cpp")
target_link_libraries(myExecutable PRIVATE myTarget)
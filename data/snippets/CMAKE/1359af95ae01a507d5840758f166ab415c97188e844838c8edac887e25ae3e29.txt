# Set the minimum required CMake version
cmake_minimum_required(VERSION 3.10)

# Define a project with a name and a version
project(my_project VERSION 1.0)

# Create a library target from a specific source file
add_library(example_library "src/example.cpp")

# Set a preprocessor definition for the library
target_compile_definitions(example_library PRIVATE "DEBUG")

# Specify the include directories for the library
target_include_directories(example_library PUBLIC "include")

# Link the library to another target
target_link_libraries(my_target PRIVATE example_library)

# Create an executable target from multiple source files
add_executable(my_target "main.cpp" "utilities.cpp")

# Set the output directory for the executable
set_target_properties(my_target PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

# Add a custom command to run before building the executable
add_custom_command(
    TARGET my_target
    PRE_BUILD
    COMMAND ${CMAKE_BINARY_DIR}/scripts/prebuild.sh
)

# Add compiler flags for the executable
target_compile_options(my_target PRIVATE "-Wall" "-Wextra")

# Add a custom install target for the project
install(TARGETS my_target DESTINATION bin)

# Create a testing target using CTest
enable_testing()
add_test(NAME my_test COMMAND my_target)
# Set minimum CMake version required
cmake_minimum_required(VERSION 3.10)

# Set project name and language
project(my_project LANGUAGES CXX)

# Set output directory for binaries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set include directory for project source files
include_directories(${CMAKE_SOURCE_DIR}/include)

# Set lists for source and header files
set(MY_SOURCES src/main.cpp src/functions.cpp)
set(MY_HEADERS include/functions.h)

# Add executable target
add_executable(my_app ${MY_SOURCES} ${MY_HEADERS})

# Add shared library target
add_library(my_lib SHARED ${MY_SOURCES} ${MY_HEADERS})

# Set properties for library target
set_target_properties(my_lib PROPERTIES VERSION 1.0 SOVERSION 1)

# Set dependencies for library and executable targets
target_link_library(my_app PRIVATE my_lib)
target_link_libraries(my_lib PRIVATE my_dep1 my_dep2)

# Set compiler flags for debug and release builds
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -Wall -g")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")

# Install targets to specified directory
install(TARGETS my_app my_lib
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        RUNTIME DESTINATION bin
)
# Define a variable with a list of source files
set(SOURCES 
    main.cpp 
    utils.cpp
    io.cpp 
    )

# Create a library target
add_library(my_lib ${SOURCES})

# Add a preprocessor definition
target_compile_definitions(my_lib PUBLIC MY_LIBRARY_OPTION)

# Create an executable target using the library
add_executable(my_exe main.cpp)

# Link the library to the executable
target_link_libraries(my_exe PRIVATE my_lib)

# Define a variable for include directories
set(INCLUDE_DIRS 
    include 
    utils/include 
    io/include 
    )

# Add the include directories to the library target
target_include_directories(my_lib PUBLIC ${INCLUDE_DIRS})

# Set compiler flags for the library target
target_compile_options(my_lib PRIVATE -Wall -Wextra -O3)

# Set linker flags for the executable target
target_link_options(my_exe PRIVATE -s)

# Add a custom command to generate additional files
add_custom_command(TARGET my_exe POST_BUILD
    COMMAND python generate_config.py
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/config)

# Set a custom project version
set(PROJECT_VERSION_MAJOR 1)
set(PROJECT_VERSION_MINOR 0)
set(PROJECT_VERSION_PATCH 0)
set(PROJECT_VERSION_TWEAK 0)
set(PROJECT_VERSION
    ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_TWEAK})
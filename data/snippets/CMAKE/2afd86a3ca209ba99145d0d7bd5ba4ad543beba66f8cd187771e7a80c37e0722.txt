# Specifies the minimum version of CMake required to build the project. 
cmake_minimum_required(VERSION 3.10.2)

# Creates project with the given name.
project(MyProject)

# Sets the C++ standard used for the project.
set(CMAKE_CXX_STANDARD 17)

# Adds a subdirectory where the source code is located.
add_subdirectory(src)

# Specifies the directories where the header files are located.
include_directories(${PROJECT_SOURCE_DIR}/include)

# Specifies the link directories.
link_directories(${PROJECT_SOURCE_DIR}/lib)

# Creates a list of source files for the project.
set(SOURCES 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/utilities.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/algorithms.cpp
)

# Compiles the source files into an executable.
add_executable(MyExecutable ${SOURCES})

# Links the executable with the libraries.
target_link_libraries(MyExecutable MyLib1 MyLib2)

# Sets compiler flags and options.
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")

# Enables testing for the project.
enable_testing()

# Adds the test subdirectory.
add_subdirectory(tests)

# Defines a custom target for building and running tests.
add_custom_target(build_and_run_tests
    COMMAND ${CMAKE_CTEST_COMMAND}
    DEPENDS MyExecutable
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/tests
)
# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.5)

# Create project
project(MyProject VERSION 1.0.0)

# Add source files to be compiled
add_executable(MyProject main.cpp file1.cpp file2.cpp)

# Specify compiler
set(CMAKE_CXX_COMPILER "gcc")

# Set compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Wextra")

# Include header files from "include" directory
include_directories(include)

# Specify output directory for executable file
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

# Install executable to "bin" directory under destination directory
install(TARGETS MyProject DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)

# Set variables for dependencies
set(OpenCV_DIR /opt/opencv/lib/cmake/opencv4)
set(Eigen3_DIR /usr/local/lib/cmake/eigen3)

# Find necessary packages
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)

# Add necessary include directories
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories(${EIGEN3_INCLUDE_DIRS})

# Link necessary libraries
target_link_libraries(MyProject ${OpenCV_LIBS})
target_link_libraries(MyProject ${EIGEN3_LIBRARIES})

# Include "CTest" for testing purposes
include(CTest)

# Enable testing for project
enable_testing()

# Add test executable
add_executable(testMyProject test.cpp)

# Link necessary libraries
target_link_libraries(testMyProject ${OpenCV_LIBS})
target_link_libraries(testMyProject ${EIGEN3_LIBRARIES})

# Add test cases
add_test(NAME MyProjectTest COMMAND testMyProject)
add_test(NAME IntegrationTest COMMAND testMyProject)

# Set test output directory
set(TEST_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/test)

# Set custom test properties
set_tests_properties(MyProjectTest PROPERTIES TIMEOUT 10)
set_tests_properties(IntegrationTest PROPERTIES TIMEOUT 20)

# Add custom target for creating documentation
add_custom_target(generateDocs COMMAND doxygen Doxyfile WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/docs)

# Specify install directory for documentation
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/docs DESTINATION ${CMAKE_INSTALL_PREFIX})

# Print custom message upon successful configuration
message(STATUS "MyProject configured successfully!")
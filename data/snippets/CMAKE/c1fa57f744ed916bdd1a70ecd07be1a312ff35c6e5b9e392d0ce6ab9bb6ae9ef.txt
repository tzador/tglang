# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.12)
# Create a new CMake project called "MyProj"
project(MyProj)
# Add a variable "SRC" containing a list of source files
set(SRC main.cpp foo.cpp bar.cpp)
# Add an executable target named "myprog" using the source files in the "SRC" variable
add_executable(myprog ${SRC})
# Add a compile flag to generate position independent code
target_compile_options(myprog PRIVATE -fPIC)
# Add a linker flag to link with libraries "libfoo" and "libbar"
target_link_libraries(myprog PRIVATE libfoo libbar)
# Create a new build type "Debug" with compile flags "-g" (debug symbols) and "-O0" (no optimizations)
# and add it to the CMAKE_BUILD_TYPE variable
set(CMAKE_BUILD_TYPE Debug)
# Set the output directory for the build to "bin"
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
# Add a custom command to run during the build process
add_custom_command(TARGET myprog POST_BUILD COMMAND echo "Build finished!")
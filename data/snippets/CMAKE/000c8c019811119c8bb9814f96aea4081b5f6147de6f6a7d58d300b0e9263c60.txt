# CMakeLists.txt

# Minimum version required
cmake_minimum_required(VERSION 3.10)

# Set project name
project(MyProject)

# Add source files to a variable
set(SOURCE_FILES main.cpp helper.cpp)

# Create executable target
add_executable(MyProject ${SOURCE_FILES})

# Find dependencies
find_package(Boost REQUIRED COMPONENTS filesystem system)

# Link dependencies
target_link_libraries(MyProject Boost::filesystem Boost::system)

# Add include directories
target_include_directories(MyProject PUBLIC ${PROJECT_SOURCE_DIR}/include)

# Set compiler flag
target_compile_options(MyProject PRIVATE -Wall -Wextra)

# Set compile definitions
target_compile_definitions(MyProject PUBLIC DEBUG)

# Set compile features
target_compile_features(MyProject PRIVATE cxx_std_11)

# Specify install location
install(TARGETS MyProject DESTINATION bin)

# Add subdirectory
add_subdirectory(lib)

# Add custom command for a target
add_custom_command(TARGET MyLib POST_BUILD COMMAND cp foo.bar ${PROJECT_SOURCE_DIR}/resources)

# Create a custom command
add_custom_target(GenerateDoc COMMAND doxygen Doxyfile WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/docs COMMENT "Generating documentation")

# Set properties
set_target_properties(MyProject PROPERTIES VERSION 1.0 SOVERSION 1)

# Add compiler flags for specific configuration
target_compile_options(MyProject PRIVATE
    $<$<CONFIG:Debug>:-g>
    $<$<CONFIG:Release>:-O3>
)

# Add conditional compilation
if(DEFINED CONDITION)
    target_compile_definitions(MyProject PUBLIC COMP_FLAG)
endif()
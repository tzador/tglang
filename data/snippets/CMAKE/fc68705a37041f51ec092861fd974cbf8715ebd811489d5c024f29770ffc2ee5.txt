# Set the minimum CMake version required
cmake_minimum_required(VERSION 3.10)

# Create a project with name "MyProject"
project(MyProject)

# Add a subdirectory "Utils" to the project
add_subdirectory(Utils)

# Create a static library named "MyLibrary"
add_library(MyLibrary STATIC)

# Add all "*.cpp" files in the "src" directory to the library
file(GLOB_RECURSE SOURCE_FILES src/*.cpp)
target_sources(MyLibrary PRIVATE ${SOURCE_FILES})

# Set the include directories for the library
target_include_directories(MyLibrary PUBLIC include)

# Add a compiler flag "-Wall" for warning messages
target_compile_options(MyLibrary PRIVATE -Wall)

# Add a dependency on the "Utils" library
target_link_libraries(MyLibrary PRIVATE Utils)

# Create an executable named "MyExecutable"
add_executable(MyExecutable)

# Add all "*.cpp" files in the "app" directory to the executable
file(GLOB_RECURSE APP_FILES app/*.cpp)
target_sources(MyExecutable PRIVATE ${APP_FILES})

# Specify the libraries to be linked with the executable
target_link_libraries(MyExecutable PRIVATE MyLibrary)

# Set the output directory for the executable
set_target_properties(MyExecutable PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")

# Add a custom target "run" to run the executable
add_custom_target(run COMMAND MyExecutable DEPENDS MyLibrary)

# Set the C++ standard to use for compiling
target_compile_features(MyLibrary PUBLIC cxx_std_17)
target_compile_features(MyExecutable PUBLIC cxx_std_17)
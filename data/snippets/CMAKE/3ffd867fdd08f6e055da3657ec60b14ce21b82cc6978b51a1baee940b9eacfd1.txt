# Define a variable called "sources" with a list of source files
set(sources 
    main.cpp 
    utils.cpp 
    math.cpp
)

# Add a "executable" target called "my_app" with the previously defined sources
add_executable(my_app ${sources})

# Add a "library" target called "my_lib"  with a list of header files and their corresponding source files
add_library(my_lib 
    utils.h utils.cpp
    math.h math.cpp
)

# Set "my_lib" as a dependency for "my_app" (linking the library)
target_link_libraries(my_app my_lib)

# Set "my_lib" properties to be linked dynamically
set_target_properties(my_lib PROPERTIES LINKER_LANGUAGE CXX)

# Set the "include" directory for the library
target_include_directories(my_lib PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

# Set the output directory for the executable
set_target_properties(my_app PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)

# Set the compiler flags for the executable
target_compile_options(my_app PRIVATE -std=c++11 -Wall -Wextra)

# Set the compiler flags for the library
target_compile_options(my_lib PRIVATE -std=c++11 -Wall -Wextra)

# Install the executable and library to designated directories
install(TARGETS my_app DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/bin)
install(TARGETS my_lib DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/lib)

# Install the header files to designated directory
install(DIRECTORY include/ DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/include)

# Create uninstall target to remove the installed files
if(NOT TARGET uninstall)
    configure_file(
        "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
        "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
        IMMEDIATE @ONLY
    )

    add_custom_target(uninstall
        COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake
    )
endif()
# set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# define a project
project(MyProject)

# set variables
set(SOURCES src/main.cpp src/helper.cpp)

# add executable target
add_executable(my_app ${SOURCES})

# set compiler flags
target_compile_options(my_app PRIVATE -Wall -Wextra)

# link external libraries
find_package(Threads REQUIRED)
target_link_libraries(my_app PRIVATE Threads::Threads)

# create a library target
add_library(my_lib STATIC src/library.cpp)

# add include directories
target_include_directories(my_lib PUBLIC include)

# set custom compilation definitions
target_compile_definitions(my_lib PRIVATE MY_LIB_VERSION=1.0)

# create test target
include(CTest)
add_executable(tests test/main.cpp)
target_link_libraries(tests PRIVATE my_lib)
add_test(NAME MyTest COMMAND tests)

# set install targets
install(TARGETS my_app DESTINATION bin)
install(FILES include/helper.h DESTINATION include)

# generate configuration file
configure_file(config.in config.h)
# This is a comment in CMAKE
# Declaring a variable with the name "hello_world"
set(hello_world "Hello, World!")
# Adding a new executable target with the name "print_hello_world" 
# and the source file "hello_world.cpp"
add_executable(print_hello_world hello_world.cpp)
# Specifying the include directories for the target 
# using the variable "hello_world_include"
target_include_directories(print_hello_world PUBLIC ${hello_world_include})
# Linking the target with the library "hello_world_lib"
target_link_libraries(print_hello_world hello_world_lib)
# Setting the output directory for the target "print_hello_world"
# to "bin"
set_target_properties(print_hello_world PROPERTIES 
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
# Adding a new custom command that runs after the target is built
add_custom_command(TARGET print_hello_world POST_BUILD 
    COMMAND ${CMAKE_COMMAND} -E copy 
    ${CMAKE_CURRENT_BINARY_DIR}/bin/print_hello_world 
    ${CMAKE_CURRENT_SOURCE_DIR}/bin/)
# Setting a configuration variable "USE_CUSTOM_LIBRARY" to ON
set(USE_CUSTOM_LIBRARY ON)
# Checking if the variable is set to ON
if(USE_CUSTOM_LIBRARY)
    # Adding a new library target with the name "custom_lib"
    add_library(custom_lib custom.cpp)
    # Specifying the include directories for the library 
    # using the variable "custom_lib_include"
    target_include_directories(custom_lib PUBLIC ${custom_lib_include})
    # Linking the library target with the executable target "print_hello_world"
    target_link_libraries(print_hello_world custom_lib)
endif()
# Declaring a new variable with a list of files
set(custom_files "file_1.cpp" "file_2.cpp" "file_3.cpp")
# Iterating through the list of files 
foreach(file ${custom_files})
    # Adding a new source file to the executable target 
    # with the name "print_hello_world"
    target_sources(print_hello_world PRIVATE ${file})
endforeach()
# Setting a compiler flag for the target "print_hello_world"
target_compile_options(print_hello_world PRIVATE -Wall -Werror)
# Setting a custom preprocessor definition for the target "print_hello_world"
target_compile_definitions(print_hello_world PUBLIC CUSTOM_DEFINITION)
# Giving a specific version of CMAKE required to build the project
cmake_minimum_required(VERSION 3.10) 
# Declaring a new project with the name "Hello_World"
project(Hello_World)
# Enabling C++11 standard for the project 
set(CMAKE_CXX_STANDARD 11)
# Adding a new library target with the name "hello_world_lib" 
# and the source file "hello_world_lib.cpp"
add_library(hello_world_lib hello_world_lib.cpp)
# Setting the output directory for the library target "hello_world_lib"
# to "lib"
set_target_properties(hello_world_lib PROPERTIES 
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
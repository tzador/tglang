# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name and language
project(MyProject LANGUAGES CXX)

# Set C++ standard to use 
set(CMAKE_CXX_STANDARD 11)

# Add all source files to a variable
set(SOURCES src/main.cpp src/utils.cpp)

# Create a shared library target
add_library(Utils SHARED ${SOURCES})

# Add preprocessor definitions
target_compile_definitions(Utils PRIVATE -DDEBUG -DVERBOSE)

# Add link libraries
target_link_libraries(Utils PRIVATE myLib1 myLib2)

# Set include directories
target_include_directories(Utils PUBLIC include/myLib1 include/myLib2)

# Add an executable target
add_executable(TestApp src/main_app.cpp)

# Link the generated library
target_link_libraries(TestApp PRIVATE Utils)

# Set output directory for executable
set_target_properties(TestApp PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set custom output name
set_target_properties(TestApp PROPERTIES OUTPUT_NAME "myapp")

# Specify a custom command to run after build
add_custom_command(TARGET TestApp POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/README.md ${CMAKE_BINARY_DIR}/bin)
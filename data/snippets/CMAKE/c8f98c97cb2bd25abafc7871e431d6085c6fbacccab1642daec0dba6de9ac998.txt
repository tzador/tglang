# Define the project and set minimum required CMake version
cmake_minimum_required(VERSION 3.10)
project(MyProject)

# Include external libraries
include_directories("external_libs/include")
link_directories("external_libs/lib")

# Set compiler and flags
set(CMAKE_C_COMPILER "gcc")
set(CMAKE_C_FLAGS "-Wall -Wextra -Ofast")

# Add source files to the project
file(GLOB SOURCES "src/*.cpp")

# Create a shared library from the source files
add_library(MyProject SHARED ${SOURCES})

# Set properties for the shared library
set_target_properties(MyProject PROPERTIES
  VERSION 1.0
  SOVERSION 1)

# Add executable target
add_executable(main "src/main.cpp")

# Link the shared library
target_link_libraries(main MyProject)

# Add additional compiler flags for specific files
set_source_files_properties("src/special_file.cpp"
  PROPERTIES COMPILE_FLAGS "-Wall -Werror")

# Add a custom command to copy data files to build directory
add_custom_command(TARGET main POST_BUILD
  COMMAND ${CMAKE_COMMAND} -E copy_directory
  ${CMAKE_SOURCE_DIR}/data $<TARGET_FILE_DIR:main>/data)

# Set header files to be installed
set(HEADERS "src/header1.h" "src/header2.h")

# Install the shared library, executable and headers
install(TARGETS MyProject main
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin)
install(FILES ${HEADERS} DESTINATION include/MyProject)
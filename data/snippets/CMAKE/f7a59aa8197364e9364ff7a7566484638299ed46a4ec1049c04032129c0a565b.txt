# Set minimum required CMake version
cmake_minimum_required(VERSION 3.10)

# Define project name
project(my_project)

# Specify sources for compilation
set(SOURCES
    src/main.cpp
    src/utils.cpp
    src/gui.cpp
)

# Define include directories for headers
include_directories(
    ${CMAKE_SOURCE_DIR}/include
)

# Find and include external libraries
find_library(LIBRARY_1 library1 REQUIRED)
find_library(LIBRARY_2 library2 REQUIRED)
include_directories(${LIBRARY_1_INCLUDE_DIRS} ${LIBRARY_2_INCLUDE_DIRS})

# Create executable target
add_executable(my_app ${SOURCES})

# Link external libraries
target_link_libraries(my_app ${LIBRARY_1_LIBRARIES} ${LIBRARY_2_LIBRARIES})

# Set compiler flags for the target
set_target_properties(my_app PROPERTIES 
    COMPILE_FLAGS "-Wall -Werror -Wextra"
    LINK_FLAGS "-pthread"
)

# Set installation directory
install(TARGETS my_app DESTINATION /usr/local/bin)

# Add custom target for running tests
add_custom_target(tests
    COMMAND ${CMAKE_SOURCE_DIR}/scripts/run_tests.sh
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
)

# Add custom target for generating documentation
add_custom_target(docs
    COMMAND doxygen Doxyfile
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/docs
)
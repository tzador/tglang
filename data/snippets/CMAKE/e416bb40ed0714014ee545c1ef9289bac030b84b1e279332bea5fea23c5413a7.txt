# Define CMake minimum required version
cmake_minimum_required(VERSION 3.12.4)

# Create a project with name "my_project"
project(my_project)

# Add a custom variable
set(custom_var "Hello, world")

# Configure a source file with the custom variable
configure_file(config.cpp.in config.cpp)

# Add an executable target "my_target"
add_executable(my_target main.cpp config.cpp)

# Configure project with C++17 standard
set(CMAKE_CXX_STANDARD 17)

# Link target "my_target" to "custom_library" library
target_link_libraries(my_target custom_library)

# Create a custom function
function(my_function arg1 arg2)
    message("This is a custom function with arguments ${arg1} and ${arg2}")
endfunction()

# Call the custom function
my_function(1 2)

# Add subdirectory "utilities" in order to access its CMakeLists.txt file
add_subdirectory(utilities)

# Set compiler flags for "my_target" target
target_compile_options(my_target PRIVATE -Wall -Werror)

# Create an interface library
add_library(my_interface INTERFACE)

# Add an include directory to the interface library
target_include_directories(my_interface INTERFACE include)

# Include dependencies from the "my_interface" library
target_link_libraries(my_target my_interface)

# Set build type to "Release"
set(CMAKE_BUILD_TYPE Release)

# Set installation directory to "bin"
install(TARGETS my_target DESTINATION bin)

# Add a custom command to be executed after building "my_target"
add_custom_command(TARGET my_target POST_BUILD
                   COMMAND echo "Custom command executed")
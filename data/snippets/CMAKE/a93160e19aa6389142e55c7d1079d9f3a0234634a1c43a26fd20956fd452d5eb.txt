# Declare a variable named "sources" to store a list of source files
set(sources 
    src/file1.cpp
    src/file2.cpp
    src/file3.cpp
) 

# Set the C++ compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")

# Create a library target named "mylib" using the source files declared in the "sources" variable
# STATIC specifies that the library will be statically linked
add_library(mylib STATIC ${sources})

# Set include directories for the library target
# This will tell the compiler where to look for header files when building the library
target_include_directories(mylib PUBLIC 
    include
)

# Set linking libraries for the library target
# This will specify which libraries should be linked when using the "mylib" library
target_link_libraries(mylib
    pthread
    boost
)

# Create an executable target named "myexe"
add_executable(myexe 
    main.cpp
)

# Link the "myexe" target to the "mylib" library
target_link_libraries(myexe
    mylib
)

# Install the "mylib" library and "myexe" executable to the specified locations
install(TARGETS mylib DESTINATION lib)
install(TARGETS myexe DESTINATION bin)
install(DIRECTORY include/ DESTINATION include)

# Set the install prefix directory
# This specifies where the installed files will be located
# Default is CMAKE_INSTALL_PREFIX variable which is typically "usr/local"
set(CMAKE_INSTALL_PREFIX "/path/to/install")

# Set the CMAKE_INSTALL_MESSAGE variable to "LAZY"
# This will suppress showing installation messages in the output
set(CMAKE_INSTALL_MESSAGE "LAZY")
# Set the project name and version
project(MyProject VERSION 1.0)

# Required CMake version
cmake_minimum_required(VERSION 3.10)

# Add source files to be compiled
add_executable(MyProject main.cpp helper.cpp)

# Set compiler flags
target_compile_options(MyProject PRIVATE -Wall -Wextra)

# Install the executable
install(TARGETS MyProject DESTINATION bin)

# Add include directories
target_include_directories(MyProject PUBLIC include)

# Set library directories
target_link_directories(MyProject PRIVATE libs)

# Link libraries
target_link_libraries(MyProject PRIVATE library1 library2)

# Set define macros
target_compile_definitions(MyProject PUBLIC MY_MACRO1 MY_MACRO2)

# Create a configuration file
configure_file(config.h.in config.h)

# Add a custom target
add_custom_target(build_target ALL COMMAND ${CMAKE_COMMAND} --build .)

# Set install location
set(CMAKE_INSTALL_PREFIX /usr/local)

# Set build type
set(CMAKE_BUILD_TYPE Release)

# Generate a header file
file(GENERATE OUTPUT include/generated_header.h CONTENT "This is a generated header file")

# Define a function
function(my_func arg1 arg2)
    message(STATUS "My function called with ${arg1} and ${arg2}")
endfunction()

# Call the function
my_func("Hello" "world")
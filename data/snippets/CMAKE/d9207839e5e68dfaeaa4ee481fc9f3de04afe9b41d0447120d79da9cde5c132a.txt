# This CMake file sets up a build for a C++ project.

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10) 

# Set the project name and version
project(MyProject VERSION 1.0)

# Set the include directories
include_directories(include)

# Set the source files
set(SOURCES src/main.cpp src/functions.cpp)

# Set the C++ standard and compiler flags
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -pedantic")

# Add an executable target
add_executable(my_executable ${SOURCES})

# Set the output directory for built binaries
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

# Set the output directory for built libraries
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

# Find and add required libraries
find_package(Threads REQUIRED)
target_link_libraries(my_executable Threads::Threads)

# Add a custom target to run tests
add_custom_target(run_tests
    COMMAND ${CMAKE_BINARY_DIR}/bin/my_executable
    DEPENDS my_executable
)

# Add a custom command to generate documentation
add_custom_command(
    OUTPUT ${CMAKE_BINARY_DIR}/docs
    COMMAND doxygen Doxyfile
)

# Add a dependency on generated documentation
add_custom_target(docs
    DEPENDS ${CMAKE_BINARY_DIR}/docs
)

# Enable testing for this project
enable_testing()

# Add a test
add_test(
    NAME Test1
    COMMAND my_executable 
)

# Add a test with arguments
add_test(
    NAME Test2
    COMMAND my_executable arg1 arg2
)

# Add a test that expects failure
add_test(
    NAME Test3
    COMMAND my_executable arg1 arg2
)
set_tests_properties(Test3 PROPERTIES WILL_FAIL TRUE)
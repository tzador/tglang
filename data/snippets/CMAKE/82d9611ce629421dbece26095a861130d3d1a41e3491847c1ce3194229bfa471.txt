# Define a variable named "SOURCES" and assign a list of source files to it
set(SOURCES 
    src/file1.cpp
    src/file2.cpp
    include/file1.h
    include/file2.h)

# Create a library target named "my_lib" with the previously defined sources
add_library(my_lib ${SOURCES})

# Set compilation flags for the library target
target_compile_options(my_lib PRIVATE -Wall -Werror)

# Set include directories for the library target
target_include_directories(my_lib PRIVATE include)

# Define a variable named "EXECUTABLE_NAME" and assign a name to it
set(EXECUTABLE_NAME my_program)

# Add an executable target named "my_program" with main.cpp as the source file
add_executable(${EXECUTABLE_NAME} src/main.cpp)

# Link the library target "my_lib" to the executable target "my_program"
target_link_libraries(${EXECUTABLE_NAME} my_lib)

# Add a custom command to be executed before building the executable target
add_custom_command(TARGET ${EXECUTABLE_NAME} PRE_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_SOURCE_DIR}/resources
        ${CMAKE_CURRENT_BINARY_DIR}/resources)

# Specify a custom install location for the executable target
install(TARGETS ${EXECUTABLE_NAME} DESTINATION bin)

# Define a variable named "TEST_EXECUTABLE_NAME" and assign a name to it
set(TEST_EXECUTABLE_NAME my_test)

# Add a test target named "my_test" with main_test.cpp as the source file
add_executable(${TEST_EXECUTABLE_NAME} test/main_test.cpp)

# Add the libraries "gtest" and "pthread" to the test target
target_link_libraries(${TEST_EXECUTABLE_NAME} gtest pthread)

# Add a custom command to be executed after building the test target
add_custom_command(TARGET ${TEST_EXECUTABLE_NAME} POST_BUILD
    COMMAND ${TEST_EXECUTABLE_NAME})

# Add a test with the previously defined test target
add_test(NAME my_test COMMAND ${TEST_EXECUTABLE_NAME})
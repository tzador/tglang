# Define a variable with a list of source files
set(SOURCES
    file1.cpp
    file2.cpp
    file3.cpp
)

# Add a library target and link the source files
add_library(my_library ${SOURCES})

# Include a directory for header files
target_include_directories(my_library PUBLIC include)

# Add a static library target
add_library(my_static_library STATIC ${SOURCES})

# Link the static library to the main target
target_link_libraries(my_library my_static_library)

# Set compiler flags
target_compile_options(my_library PRIVATE -Wall -Wextra -pedantic)

# Add a custom command to be executed during build process
add_custom_command(TARGET my_library POST_BUILD
    COMMAND echo "Building my_library"
)

# Create an executable target
add_executable(my_executable main.cpp)

# Link the main target to the library
target_link_libraries(my_executable my_library)

# Set custom properties for the executable
set_target_properties(my_executable PROPERTIES
    OUTPUT_NAME "my_app"
    RUNTIME_OUTPUT_DIRECTORY bin
)

# Set runtime arguments for the executable
set_target_properties(my_executable PROPERTIES
    RUNTIME_ARGS "-h"
)

# Add an install rule for the executable
install(TARGETS my_executable DESTINATION bin)

# Create a test target
add_test(NAME MyTest COMMAND my_executable)

# Set properties for the test target
set_tests_properties(MyTest PROPERTIES
    PASS_REGULAR_EXPRESSION "All tests passed"
)
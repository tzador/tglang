# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.8)

# Set project name and version
project(my_project VERSION 1.0)

# Set C++ standard to use
set(CMAKE_CXX_STANDARD 17)

# Add an executable target to the project
# The name of the target is "my_project"
add_executable(my_project
	main.cpp
	utils.h
	utils.cpp
	)

# Configure the project to use any additional libraries
target_link_libraries(my_project
	sanitizer
	threads
	)

# Set include directories for the project
target_include_directories(my_project
	PRIVATE
	${PROJECT_SOURCE_DIR}/include
	${PROJECT_SOURCE_DIR}/utils
	)

# Set compiler flags for the project
target_compile_options(my_project
	PRIVATE
	-Wall
	-Werror
	-O3
	-g
	)

# Set linker flags for the project
target_link_directories(my_project
	PRIVATE
	${PROJECT_BINARY_DIR}/lib
	)

# Generate the config header file for the project
configure_file(config.h.in config.h)

# Specify installation targets and directories
install(TARGETS my_project
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib/static
	)

# Specify installation files and directories
install(FILES
	${PROJECT_BINARY_DIR}/config.h
	DESTINATION include
	)
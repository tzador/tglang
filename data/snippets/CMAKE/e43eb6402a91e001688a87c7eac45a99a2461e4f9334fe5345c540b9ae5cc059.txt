# Define the project
project(my_project)

# Set required CMake version
cmake_minimum_required(VERSION 3.12)

# Set default build type to "Release"
# and enable compiler optimizations
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Build type" FORCE)
endif()
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")

# Find and include required packages
find_package(OpenCV REQUIRED)

# Set source files and include directories
set(SOURCES main.cpp utils.cpp)
include_directories(include)

# Add an executable for the main program
add_executable(my_program ${SOURCES})

# Link against OpenCV
target_link_libraries(my_program ${OpenCV_LIBS})

# Add custom command that generates a text file using a command line tool
add_custom_command(
  OUTPUT output.txt
  COMMAND generate_text_file input.txt output.txt
  DEPENDS input.txt
  COMMENT "Generating output file..."
)

# Add a custom target that depends on the generated text file
# and prints a message when executed
add_custom_target(my_custom_target DEPENDS output.txt)
add_custom_command(TARGET my_custom_target
  POST_BUILD
  COMMAND echo "Output file generated!"
)

# Specify the install directory for the executable
install(TARGETS my_program DESTINATION bin)
# Setting up project with name and version
cmake_minimum_required(VERSION 3.10)  # sets minimum required version of CMake
project(MyProject VERSION 1.0.0)  # sets project name and version

# Setting up compiler and compile options
set(CMAKE_CXX_COMPILER g++)  # sets compiler to g++
add_compile_options(-Wall -Wextra)  # adds compile options to enable all warnings and extra warnings

# Setting up build directory and output executable
set(CMAKE_BINARY_DIR "${CMAKE_CURRENT_SOURCE_DIR}/build")  # sets build directory to 'build' folder in current source directory
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})  # sets output executable path to build directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})  # sets runtime output directory to output executable path

# Configuring source files and including external libraries
set(SOURCE_FILES src/main.cpp src/utils.cpp)  # sets source files to main.cpp and utils.cpp
include_directories("include")  # includes the 'include' folder for external libraries

# Adding a subdirectory for external library
add_subdirectory(external_library)  # adds subdirectory for external_library

# Creating target for executable and linking external libraries
add_executable(MyExecutable ${SOURCE_FILES})  # creates target for executable with source files
target_link_libraries(MyExecutable external_library)  # links external library to target

# Setting up installation instructions
install(TARGETS MyExecutable DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)  # sets installation instructions for executable
install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_PREFIX}/include)  # sets installation instructions for include directory
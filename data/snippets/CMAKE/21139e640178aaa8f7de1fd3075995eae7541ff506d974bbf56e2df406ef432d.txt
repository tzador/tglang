# CMakeLists.txt

# Specify the minimum version of CMake required
cmake_minimum_required(VERSION 3.10)

# Set the project name
project(myProject)

# Add source files to be compiled
add_executable(myExecutable main.cpp helper.cpp)

# Add include directories to the executable
target_include_directories(myExecutable
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Set compiler flags
target_compile_options(myExecutable
    PRIVATE
        -Wall
        -Werror
        -Wextra
)

# Set linking libraries
target_link_libraries(myExecutable
    PRIVATE
        myLibrary
)

# Set install directory for executable
install(TARGETS myExecutable DESTINATION bin)

# Define a macro
macro(myMacro myVariable)
    message(STATUS "The value of my variable is ${myVariable}")
endmacro()

# Call the macro with a value
myMacro(myVariable)

# If statement
if(myVariable EQUAL 10)
    message(STATUS "myVariable equals 10")
elseif(myVariable EQUAL 5)
    message(STATUS "myVariable equals 5")
else()
    message(STATUS "myVariable is not 10 or 5")
endif()

# Foreach loop to iterate through a list
set(myList 1 2 3 4 5)
foreach(item IN LISTS myList)
    message(STATUS "Current item in list: ${item}")
endforeach()

# Function to add two numbers
function(add myVar1 myVar2)
    return(${myVar1} + ${myVar2})
endfunction()

# Call the function with two values and store the result in a variable
math(EXPR result "add(2, 3)")
message(STATUS "The result is ${result}")

# Set a variable with multiple lines
set(myString "This is the first line
This is the second line
This is the third line")

# Print the variable with line breaks included
message(STATUS "My string says: ${myString}

# Create a custom target that depends on the executable
add_custom_target(run
    DEPENDS myExecutable
    COMMAND myExecutable
)
# Define a CMake minimum version
cmake_minimum_required(VERSION 3.10)

# Specify the project name
project(MyProject)

# Add source files to be compiled
add_sources(main.cpp util.cpp)

# Create an executable target
add_executable(MyProject ${sources})

# Set compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Werror")

# Add a custom target to create a build directory
add_custom_target(build_directory COMMAND mkdir -p build)

# Add a dependency on build directory for the main target
add_dependencies(MyProject build_directory)

# Specify the include directories
include_directories(include)

# Specify the libraries to link against
target_link_libraries(MyProject lib1 lib2)

# Set the output build directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)

# Add a custom command to run a script after building the target
add_custom_command(TARGET MyProject POST_BUILD COMMAND script.sh)

# Install the target to a specific directory
install(TARGETS MyProject RUNTIME DESTINATION bin)

# Generate a configuration file for the project
configure_file(config.h.in config.h)

# Add a dependency on the configuration file for the main target
add_dependencies(MyProject config.h)

# Create a test for the main target
add_test(NAME MyProjectTest COMMAND MyProject)

# Add a test dependency on the main target
add_dependencies(test MyProject)
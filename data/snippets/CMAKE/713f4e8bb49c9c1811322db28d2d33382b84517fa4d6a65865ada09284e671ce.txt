# Define a variable with a list of files
set(files
    file1.cpp
    file2.cpp
    file3.cpp
    file4.cpp
)

# Define another variable with a list of directories
set(dirs
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/src
)

# Create a library with the given files
add_library(my_library ${files})

# Set the include directories for the library
target_include_directories(my_library PUBLIC ${dirs})

# Add compiler flags
target_compile_options(my_library PRIVATE -Wall -Wextra)

# Add a custom command to generate a new header file
add_custom_command(
    OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/generated_header.h
    COMMAND generate_header -o generated_header.h
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/input_file.txt
)

# Add a custom target to always run the custom command
add_custom_target(generate_header_target
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/generated_header.h
)

# Add the custom target as a dependency for my_library
add_dependencies(my_library generate_header_target)
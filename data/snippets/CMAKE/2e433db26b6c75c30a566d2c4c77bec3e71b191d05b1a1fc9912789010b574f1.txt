cmake_minimum_required(VERSION 3.10) # Specifies the minimum version of CMake required
project(MyProject VERSION 1.0) # Specifies the project name and version

# Specifies the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Finds the required packages 
find_package(OpenCV REQUIRED)
find_package(Boost REQUIRED COMPONENTS filesystem system)

# Includes the required header files
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories(${Boost_INCLUDE_DIRS})

# Creates an executable target
add_executable(MyProject main.cpp)

# Links the required libraries
target_link_libraries(MyProject ${OpenCV_LIBS})
target_link_libraries(MyProject ${Boost_LIBRARIES})

# Specifies the installation path for the project
install(TARGETS MyProject DESTINATION bin)

# Specifies the install path for the header files
install(FILES some_header_file.h DESTINATION include)

# Specifies the install path for the configuration file
configure_file(config.h.in config.h)

# Displays the current compiler being used
message("Current compiler: ${CMAKE_CXX_COMPILER}")

# Prints the project name and version
message("Project name: ${PROJECT_NAME}")
message("Project version: ${PROJECT_VERSION}")

# Enables testing for the project
enable_testing()

# Creates a test with a command
add_test(NAME Test COMMAND MyProject)

# Adds a custom target that runs the tests
add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} --verbose)

# Sets the output directory for the built targets
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

# Sets the debug output directory for the built targets
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin/debug)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib/debug)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib/debug)

# Sets the release output directory for the built targets
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin/release)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib/release)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib/release)

# Provides a summary of the CMake settings
include(FeatureSummary)
feature_summary(WHAT ALL)
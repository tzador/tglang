# Define an executable and its dependencies
add_executable(my_executable main.cpp)
target_link_libraries(my_executable PUBLIC dependency_lib)

# Set compile options for this executable
target_compile_options(my_executable PRIVATE -Wall -Wextra -pedantic)

# Define a custom target to run before building the executable
add_custom_target(
    preprocess_my_cpp_files
    COMMAND ${CMAKE_COMMAND} -E echo "Preprocessing C++ files..."
)

# Specify build configurations and their associated compiler definitions
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_definitions(my_executable PRIVATE DEBUG=true)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_definitions(my_executable PRIVATE RELEASE=true)
endif()

# Specify minimum version required for CMake
cmake_minimum_required(VERSION 3.8)

# Define a function to generate a custom build target
function(create_custom_target TARGET_NAME SOURCE_DIRECTORY)
    # Create a custom target to run before building the specified target
    add_custom_target(
        preprocess_${TARGET_NAME}
        COMMAND ${CMAKE_COMMAND} -E echo "Preprocessing ${TARGET_NAME} files..."
        COMMAND ${CMAKE_COMMAND} -E make_directory ${SOURCE_DIRECTORY}
    )
endfunction()

# Call the function to generate a custom target for my_executable
create_custom_target(my_executable ${CMAKE_CURRENT_SOURCE_DIR}/src)
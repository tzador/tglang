# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.15)

# Define a project called "MyProject"
project(MyProject)

# Set the source files for the project
set(SOURCES
    MySourceFile1.cpp
    MySourceFile2.cpp
    MySourceFile3.cpp
)

# Set the include directories for the project
include_directories(
    include
    ${CMAKE_SOURCE_DIR}/external_lib/include
)

# Set the preprocessor definitions for the project
add_definitions(-DMY_MACRO)

# Set the compiler options for different configurations
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    # Debug configuration
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
elseif (CMAKE_BUILD_TYPE STREQUAL "Release")
    # Release configuration
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
endif()

# Set the output directory for executable files
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

# Add a library target named "MyLibrary" with the source files
add_library(MyLibrary ${SOURCES})

# Set the properties of the library target
target_include_directories(MyLibrary PRIVATE include)
target_compile_features(MyLibrary PRIVATE cxx_std_17)
set_target_properties(MyLibrary PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)

# Add an executable target named "MyApp" with the source files
add_executable(MyApp main.cpp)

# Link the executable target to the library target
target_link_libraries(MyApp PRIVATE MyLibrary)

# Set the output directory for the executable file
set_target_properties(MyApp PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
# Set the minimum required version of CMAKE
cmake_minimum_required(VERSION 3.10)

# Create a new project and set its name
project(my_project CXX)

# Set compiler flags for all targets
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall")

# Add a library target called "lib" with the specified source files
add_library(lib src/file1.cpp src/file2.cpp)

# Set the include directories for the library target
target_include_directories(lib PUBLIC include)

# Set compiler flags for the library target
target_compile_options(lib PRIVATE -O3)

# Add an executable target called "main" and link it to the "lib" library
add_executable(main src/main.cpp)
target_link_libraries(main PRIVATE lib)

# Add a test executable target called "test" and link it to the "lib" library
add_executable(test test/main.cpp)
target_link_libraries(test PRIVATE lib)

# Add a custom command to generate a file "output.txt" based on a script "script.py"
add_custom_command(OUTPUT output.txt COMMAND python script.py)

# Set the installation target for the "main" and "test" executables
install(TARGETS main test DESTINATION bin)

# Set the installion target for the "lib" library and its header files
install(TARGETS lib DESTINATION lib)
install(DIRECTORY include/ DESTINATION include)
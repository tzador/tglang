# Declare variable for project name
set(PROJECT_NAME "ExampleProject")

# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name and version
project(${PROJECT_NAME} VERSION 1.0.0)

# Set source files for project
set(SOURCES
    src/main.cpp
    src/helper_functions.cpp
    src/classA.cpp
    src/classB.cpp
    tests/test_helper_functions.cpp
    tests/test_classA.cpp
    tests/test_classB.cpp
)

# Set include directories for project
include_directories(include)

# Set C++ standard
set(CMAKE_CXX_STANDARD 11)

# Set executable for project
add_executable(${PROJECT_NAME} ${SOURCES})

# Set output directory for executable
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set debug mode for build
set(CMAKE_BUILD_TYPE Debug)

# Set flags for debug mode
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra")

# Set flags for release mode
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")

# Set output directory for tests
set(TEST_EXECUTABLE_NAME ${PROJECT_NAME}_tests)
set(TEST_EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin/tests)

# Add tests executable
add_executable(${TEST_EXECUTABLE_NAME} tests/main.cpp ${SOURCES})
set_target_properties(${TEST_EXECUTABLE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${TEST_EXECUTABLE_OUTPUT_PATH})

# Set test executable as a CTest
add_test(NAME ${TEST_EXECUTABLE_NAME} COMMAND ${TEST_EXECUTABLE_OUTPUT_PATH}/${TEST_EXECUTABLE_NAME})
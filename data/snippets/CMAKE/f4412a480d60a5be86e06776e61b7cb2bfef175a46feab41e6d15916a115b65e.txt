#This CMakeLists.txt file can be used to compile a C++ project with multiple source files
#Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

#Set the project name
project(MyProject)

#Set the folder where all source files are located
set(SRCS
    src/main.cpp
    src/foo.cpp
    src/bar.cpp
    src/utils/fizzbuzz.cpp
)

#Set the include directory for all header files
include_directories(include)

#Add an executable target for our project, specifying the target name and the source files to compile
add_executable(my_exe ${SRCS})

#Set the compiler flags for our target
target_compile_options(my_exe PUBLIC -Wall -Werror -pedantic)

#Set the libraries that our target will link against
target_link_libraries(my_exe PUBLIC my_lib1 my_lib2)

#Set the output directory for our target
set_target_properties(my_exe PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#Create a custom command that will run after the target is built
add_custom_command(TARGET my_exe POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/bin/resources)
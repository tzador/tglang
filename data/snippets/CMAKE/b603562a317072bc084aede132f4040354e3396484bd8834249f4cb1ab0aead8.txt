# Set minimum version for CMake
cmake_minimum_required(VERSION 3.12)

# Create project
project(MyProject)

# Add source files to project
add_executable(MyProject main.cpp source_1.cpp source_2.cpp)

# Set output directory for build
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)

# Set compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -std=c++11")

# Find external library
find_library(LIBRARY_1_LIB liblibrary1.so PATHS ${CMAKE_CURRENT_SOURCE_DIR}/lib)

# Add include directories
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# Link external library to project
target_link_libraries(MyProject ${LIBRARY_1_LIB})

# Add custom pre- and post-build commands
add_custom_command(TARGET MyProject PRE_BUILD
                    COMMAND ${CMAKE_COMMAND} -E copy_directory
                        ${CMAKE_CURRENT_SOURCE_DIR}/assets $<TARGET_FILE_DIR:MyProject>/assets)

add_custom_command(TARGET MyProject POST_BUILD
                    COMMAND ${CMAKE_COMMAND} -E copy_directory
                        ${CMAKE_CURRENT_SOURCE_DIR}/resources $<TARGET_FILE_DIR:MyProject>/resources)
# Define minimum required CMake version
cmake_minimum_required(VERSION 3.10 FATAL_ERROR)

# Create a project
project(MyProject)

# Specify compiler and language
set(CMAKE_CXX_COMPILER g++)
set(CMAKE_CXX_STANDARD 17)

# Add source files
set(SOURCES
    main.cpp
    utils.cpp
    test.cpp
)

# Add header files
set(HEADERS
    utils.h
    test.h
)

# Add executable target
add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS})

# Set include directories
target_include_directories(${PROJECT_NAME}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}
)

# Add libraries
target_link_libraries(${PROJECT_NAME}
    PRIVATE
        mylib
)

# Set compiler flags
target_compile_options(${PROJECT_NAME}
    PRIVATE
        -Wall
        -Werror
        -Wextra
        -pedantic
)

# Set installation directory
install(TARGETS ${PROJECT_NAME}
    DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
)

# Set other installation files
install(
    FILES
        ${HEADERS}
    DESTINATION ${CMAKE_INSTALL_PREFIX}/include
)

# Generate a package file
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VERSION 1.0.0)
include(CPack)

# Add custom commands
add_custom_command(TARGET ${PROJECT_NAME}
    POST_BUILD
        COMMAND echo "Build successful!"
)
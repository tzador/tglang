# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name and version
project(MyProject VERSION 1.0)

# Add library target
add_library(MyLibrary STATIC
    sources/source1.cpp
    sources/source2.cpp
    headers/header1.h
    headers/header2.h
)

# Set properties for library target
target_include_directories(MyLibrary
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/headers>
        $<INSTALL_INTERFACE:${INCLUDE_INSTALL_DIR}>
)

# Set library compile features/requirements
target_compile_features(MyLibrary
    PUBLIC
        cxx_std_11
)

# Set library installation directory
install(TARGETS MyLibrary
    EXPORT MyLibraryTargets
    ARCHIVE DESTINATION ${LIB_INSTALL_DIR}
    LIBRARY DESTINATION ${LIB_INSTALL_DIR}
)

# Set library export targets file
install(EXPORT MyLibraryTargets
    FILE MyLibraryTargets.cmake
    DESTINATION ${CONFIG_INSTALL_DIR}
)

# Create header file for project configuration variables
configure_file(include/MyProjectConfig.h.in MyProjectConfig.h)

# Add executable target
add_executable(MyExecutable
    sources/main.cpp
)

# Link executable to library
target_link_libraries(MyExecutable PRIVATE MyLibrary)

# Set executable installation directory
install(TARGETS MyExecutable
    RUNTIME DESTINATION ${BIN_INSTALL_DIR}
)

# Install header files
install(FILES ${CMAKE_BINARY_DIR}/MyProjectConfig.h
    DESTINATION ${INCLUDE_INSTALL_DIR}
)

# Create package configuration file
include(CMakePackageConfigHelpers)

# Set variables for package configuration
set(PACKAGE_PATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_FILES_DIRECTORY}")
set(PACKAGE_TARGETS_FILE "${PACKAGE_PATH}/MyLibraryTargets.cmake")
set(PACKAGE_CONFIG_FILE "${PACKAGE_PATH}/MyLibraryConfig.cmake")
set(PACKAGE_INCLUDE_DIR "${INCLUDE_INSTALL_DIR}")

# Generate package configuration file
configure_package_config_file(
    ${CMAKE_CURRENT_LIST_DIR}/cmake/MyLibraryConfig.cmake.in
    ${CMAKE_CURRENT_BINARY_DIR}/MyLibraryConfig.cmake
    INSTALL_DESTINATION ${CONFIG_INSTALL_DIR}
    PATH_VARS PACKAGE_TARGETS_FILE PACKAGE_INCLUDE_DIR
)

# Install package configuration file
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/MyLibraryConfig.cmake
    DESTINATION ${CONFIG_INSTALL_DIR}
)

# Create package version file
write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/MyLibraryConfigVersion.cmake
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY SameMajorVersion
)

# Install package version file
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/MyLibraryConfigVersion.cmake
    DESTINATION ${CONFIG_INSTALL_DIR}
)
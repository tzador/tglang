# Define a variable called "test_var" with a value of "hello world"
set(test_var "hello world")

# Create a new target called "test_target" that compiles a C++ file named "main.cpp"
add_executable(test_target main.cpp)

# Set the sources for "test_target" to be "main.cpp" and "utils.cpp"
target_sources(test_target PRIVATE main.cpp utils.cpp)

# Define a function called "add_numbers" that takes in two arguments
# and returns their sum
function(add_numbers num1 num2)
    math(EXPR result "${num1} + ${num2}")
    return(${result})
endfunction()

# Use the "add_numbers" function to add two numbers and save the result
# in a variable called "sum"
add_numbers(5 10)
set(sum "${result}")

# Print the value of the "test_var" variable
message(STATUS "${test_var}")

# Create a conditional to only compile "test_target" if "test_var" is equal to "hello world"
if(test_var STREQUAL "hello world")
    add_dependencies(test_target main.cpp)
endif()

# Define a macro called "repeat_print" that takes in two arguments
# and prints the second argument for the number of times specified in the first argument
macro(repeat_print num message)
    foreach(i RANGE 1 ${num})
        message(STATUS "${message}")
    endforeach()
endmacro()

# Use the "repeat_print" macro to print "Hello World!" 3 times
repeat_print(3 "Hello World!")
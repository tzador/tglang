# This is a CMake project

# Specify the minimum required version of CMake
cmake_minimum_required(VERSION 3.0)

# Declare the project and set its name
project(MyProject)

# Set the C++ version to be used
set(CMAKE_CXX_STANDARD 11)

# Add source files to be compiled
set(SOURCES main.cpp utils.cpp)

# Include header files
include_directories(
  include
  utils
)

# Create a static library from the source files
add_library(Utils STATIC ${SOURCES})

# Set the output directory for compiled binaries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)

# Add subdirectories for additional source code
add_subdirectory(src)

# Set the compiler flags for the project
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")

# Create an executable target, linking with the Utils library
add_executable(MyApp src/app.cpp)
target_link_libraries(MyApp Utils)

# Set a custom build type for the project
set(CMAKE_BUILD_TYPE Release)

# Specify the install directory for the project
install(TARGETS MyApp DESTINATION bin)

# Add a test target with the name "unittests"
add_executable(unittests test/test.cpp)
target_link_libraries(unittests Utils)

# Add a CMake test for the "unittests" target
enable_testing()
add_test(NAME UnitTests COMMAND unittests)
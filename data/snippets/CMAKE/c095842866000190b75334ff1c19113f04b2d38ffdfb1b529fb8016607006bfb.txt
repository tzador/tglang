# Define a variable named "SOURCES" and assign it a list of source files
set(SOURCES 
    src/file1.cpp
    src/file2.cpp
    src/file3.cpp
)

# Create a library named "my_lib" from the source files
add_library(my_lib ${SOURCES})

# Set the C++ standard to use when compiling
target_compile_features(my_lib PUBLIC cxx_std_20)

# Set the include directories for "my_lib" library
target_include_directories(my_lib PUBLIC include)

# Define a variable for the installation path
set(MY_INSTALL_PATH "/usr/local/lib")

# Install the library "my_lib" and its headers to the installation path
install(TARGETS my_lib DESTINATION ${MY_INSTALL_PATH})
install(DIRECTORY include/ DESTINATION ${MY_INSTALL_PATH}/include)

# Add an executable target named "my_exec" and link it to "my_lib"
add_executable(my_exec src/main.cpp)
target_link_libraries(my_exec PRIVATE my_lib)

# Add a custom target named "build_docs" for generating documentation
add_custom_target(build_docs
    COMMAND doxygen Doxyfile
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    COMMENT "Generating documentation using Doxygen"
)

# Specify the compiler flags for "my_exec" target
target_compile_options(my_exec PRIVATE -Wall -Wextra -Werror)

# Set the build type to be "Release"
set(CMAKE_BUILD_TYPE Release)

# Add a test target named "my_test" and link it to "my_lib"
add_executable(my_test test/test.cpp)
target_link_libraries(my_test PRIVATE my_lib)

# Add a "test" cmake target to run all tests
add_custom_target(test
    COMMAND ctest
    WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
    COMMENT "Running tests"
)

# Install the "my_exec" target and set the installation permissions
install(TARGETS my_exec DESTINATION ${MY_INSTALL_PATH} PERMISSIONS OWNER_EXECUTE)
# Set up a project
project(my_project)

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set flags for compiling
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")

# Define the source files for the project
set(SOURCES main.cpp utils.cpp)

# Create an executable target named 'my_executable' with the source files
add_executable(my_executable ${SOURCES})

# Set the include directories for the project
include_directories(include)

# Create a library target named 'my_library' with the source files
add_library(my_library ${SOURCES})

# Link the library to the executable
target_link_libraries(my_executable my_library)

# Add a custom target named 'clean' to remove all generated files
add_custom_target(clean
    COMMAND ${CMAKE_COMMAND} -E remove_directory build
    COMMAND ${CMAKE_COMMAND} -E remove build/CMakeCache.txt
    COMMAND ${CMAKE_COMMAND} -E remove_directory bin
    COMMAND ${CMAKE_COMMAND} -E remove bin/my_executable
    COMMAND ${CMAKE_COMMAND} -E remove_directory lib
    COMMAND ${CMAKE_COMMAND} -E remove lib/my_library.a
)
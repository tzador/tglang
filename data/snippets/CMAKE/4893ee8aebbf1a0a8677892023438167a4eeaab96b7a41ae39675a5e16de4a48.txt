# Define the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name
project(MyProject)

# Add a compiler flag
add_compile_options(-std=c++11)

# Set source files for executable
set(SOURCE_FILES main.cpp somefile.h)

# Add an executable target
add_executable(MyExecutable ${SOURCE_FILES})

# Specify include directories for the target
target_include_directories(MyExecutable PUBLIC include)

# Add a library target
add_library(MyLibrary SHARED otherfile.cpp anotherfile.cpp)

# Specify include directories for the library
target_include_directories(MyLibrary PUBLIC include)

# Link the library to the executable
target_link_libraries(MyExecutable MyLibrary)

# Set the output directory for the executable
set_target_properties(MyExecutable PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set the output directory for the library
set_target_properties(MyLibrary PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

# Add a custom command to generate a header file
add_custom_command(
  TARGET MyLibrary
  PRE_BUILD
  COMMAND ${CMAKE_COMMAND} -E touch ${CMAKE_SOURCE_DIR}/include/generated.h
)

# Add a custom target to generate a timestamp file
add_custom_target(timestamp
  COMMAND ${CMAKE_COMMAND} -E touch ${CMAKE_SOURCE_DIR}/timestamp.txt
)

# Specify a dependency between targets
add_dependencies(MyLibrary MyExecutable)
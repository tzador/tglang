# Define project and specify minimum version
cmake_minimum_required(VERSION 3.8)
project(my_project)

# Set build type to release
set(CMAKE_BUILD_TYPE Release)

# Set C++ standard to use
set(CMAKE_CXX_STANDARD 11)

# Enable verbose makefile output for debug
set(CMAKE_VERBOSE_MAKEFILE ON)

# Add include directories
include_directories(src/include)

# Add source files to be compiled
set(SOURCE_FILES
    src/main.cpp
    src/utils.cpp
    src/io.cpp)

# Create library target
add_library(my_lib SHARED ${SOURCE_FILES})

# Set library output directory
set_target_properties(lib0 PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/lib")

# Add libraries to be linked
target_link_libraries(my_lib m pthread)

# Add executable target
add_executable(my_exec src/main.cpp)

# Link library target to executable target
target_link_libraries(my_exec my_lib)

# Configure installation
install(TARGETS my_exec DESTINATION ${CMAKE_BINARY_DIR}/bin)
install(FILES src/config.txt DESTINATION ${CMAKE_BINARY_DIR}/bin)

# Generate documentation with Doxygen
find_package(Doxygen)
if(DOXYGEN_FOUND)
    set(DOXYGEN_INPUT ${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxyfile)
    set(DOXYGEN_OUTPUT ${CMAKE_BINARY_DIR}/docs)
    file(MAKE_DIRECTORY ${DOXYGEN_OUTPUT})
    execute_process(WORKING_DIRECTORY ${DOXYGEN_OUTPUT} COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_INPUT})
endif()

# Define custom targets and add dependencies
add_custom_target(build_docs
    COMMAND ${CMAKE_COMMAND} --build ${CMAKE_BINARY_DIR} --target docs)

add_dependencies(build_docs my_lib)
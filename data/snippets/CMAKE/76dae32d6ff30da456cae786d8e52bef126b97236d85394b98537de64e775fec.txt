# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.3)

# Set project name and version
project(my_project VERSION 1.0.0)

# Set C++ standard
set(CMAKE_CXX_STANDARD 11)

# Set the build type to Release if not specified
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build" FORCE)
endif()

# Set compiler flags for specific build types
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -Wall")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g")

# Add header files
include_directories(include)

# Add source files
set(SOURCES src/main.cpp src/helper.h src/helper.cpp)

# Add executable
add_executable(my_project ${SOURCES})

# Set installation path
install(TARGETS my_project DESTINATION bin)

# Set CTest for testing
enable_testing()

# Add test executable
add_executable(test_project test/test.cpp src/helper.h src/helper.cpp)

# Add test
add_test(NAME my_test COMMAND test_project)

# Add custom target for running tests
add_custom_target(run_tests DEPENDS test_project COMMAND test_project)

# Add formatting target for using clang-format
add_custom_target(format COMMAND clang-format -i ${SOURCES} test/test.cpp)
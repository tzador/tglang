# Define a function to find the median of a list of numbers 
function(find_median list)
  # Sort the list in ascending order
  list(SORT ${list} ASC)
  # Determine the middle index of the list
  list(LENGTH ${list} length)
  math(EXPR middle_index "${length} / 2")
  # If the list contains an odd number of elements, return the element at the middle index
  if(length % 2 EQUAL 1)
    list(GET ${list} ${middle_index} median)
    message("The median is: ${median}")
  # If the list contains an even number of elements, return the mean of the two middle elements
  else()
    list(GET ${list} ${middle_index} middle_element_1)
    # Subtract 1 from the middle index to get the index of the second middle element
    math(EXPR middle_index2 "${middle_index} - 1")
    list(GET ${list} ${middle_index2} middle_element_2)
    # Calculate the mean of the two middle elements
    math(EXPR mean "( ${middle_element_1} + ${middle_element_2} ) / 2.0")
    message("The median is: ${mean}")
  endif()
endfunction()

# Create a list of numbers
set(numbers 3 5 2 8 1)
# Find the median of the list
find_median(${numbers})
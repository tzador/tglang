# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.0)

# Create a new project called "myProject"
project(myProject)

# Set the source files for the project
set(SOURCES main.cpp helper.cpp)

# Add an executable target for the project with the source files
add_executable(myProject ${SOURCES})

# Specify the include directories for the project
include_directories(include)

# Link the myProject target with external libraries
target_link_libraries(myProject lib1 lib2 lib3)

# Add a custom command to generate a file when building the project
add_custom_command (
    OUTPUT output.txt
    COMMAND python generate.py input.txt > output.txt
    DEPENDS input.txt generate.py
)

# Add a custom target to build the generated file
add_custom_target(generated_file DEPENDS output.txt)

# Add the generated file as a dependency for the myProject target
add_dependencies(myProject generated_file)

# Set the build type to be either debug or release
set(CMAKE_BUILD_TYPE Release)

# Specify the compiler flags for the release build
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Add a post-build event to copy the executable to a specific directory
add_custom_command(TARGET myProject POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:myProject> ${CMAKE_SOURCE_DIR}/bin)
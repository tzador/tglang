# Create a variable to store the source files
set(SOURCES
    src/main.cpp
    src/utils.cpp
    src/generator.cpp
)

# Create an executable target with the name "app"
add_executable(app ${SOURCES})

# Specify include directories for the target
target_include_directories(app PUBLIC include)

# Specify libraries to link with the target
target_link_libraries(app
    PRIVATE
        lib1
        lib2
)

# Set compiler flags for the target
target_compile_options(app PRIVATE -Wall -Wextra -pedantic)

# Add a custom command to be executed before building the target
add_custom_command(TARGET app PRE_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_SOURCE_DIR}/resources $<TARGET_FILE_DIR:app>/resources
)

# Add a post-build command for the target
add_custom_command(TARGET app POST_BUILD
    COMMAND echo "Build successful!"
)

# Set install rule for the target
install(TARGETS app DESTINATION bin)

# Add subdirectory for a separate project
add_subdirectory(external_project)

# Create a library target with the name "mylib"
add_library(mylib
    src/mylib.cpp
)

# Set library properties
set_target_properties(mylib PROPERTIES
    VERSION 1.0
    SOVERSION 1
)

# Install library headers to include directory
install(DIRECTORY include/ DESTINATION include)

# Install library target to lib directory
install(TARGETS mylib DESTINATION lib)
# CMakeLists.txt
# This is a sample CMake file

# Setting the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Declaring the project name
# This will create variables that contain the project name
project(my_project)

# Setting the output directory for built libraries and executables
set(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/bin)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

# Declaring the source files for the project
set(SRC_FILES
    src/main.cpp
    src/foo.cpp
    src/bar.cpp
)

# Creating a library for our project
# This will create a static library named "mylib" from the source files declared earlier
add_library(mylib STATIC ${SRC_FILES})

# Adding an executable target for our project
# This will create an executable named "my_app" and link it with the previously created library
add_executable(my_app ${SRC_FILES})
target_link_libraries(my_app mylib)

# Setting compiler flags for the project
# This will enable all warnings and treat them as errors
target_compile_options(mylib PRIVATE -Wall -Werror)

# Adding a custom command to copy a file to the binary directory after building the project
add_custom_command(TARGET my_app POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/data/input_file.txt ${CMAKE_BINARY_DIR}/input_file.txt
)

# Setting include directories for our project
target_include_directories(mylib PUBLIC ${CMAKE_SOURCE_DIR}/include)

# Setting the install directory for our project
set(INSTALL_DIR ${CMAKE_SOURCE_DIR}/install)

# Installing the built library and executable to the specified directory
install(TARGETS mylib my_app DESTINATION ${INSTALL_DIR})
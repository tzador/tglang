# This is a CMakeLists.txt file which is used to configure a project
# It starts with the CMake minimum version and the project name
cmake_minimum_required(VERSION 3.10.2)
project(my_project)

# Specify the source files for the project
# Globbing can be used to automatically find all source files in a specified directory
# and its subdirectories
file(GLOB SOURCES "src/*.cpp")

# Create an executable target from the specified source files
add_executable(my_executable ${SOURCES})

# Set compiler flags for the target
# These flags will be used when compiling the source files for this target
target_compile_options(my_executable PRIVATE -Wall -Werror)

# Link libraries to the target
# This will include the specified libraries when linking the executable
target_link_libraries(my_executable my_library)

# Specify the directory where headers for this target can be found
target_include_directories(my_executable PUBLIC include)

# Add a custom command to be executed as part of the build process
# In this example, we are using a bash script to generate a config file
add_custom_command(
  OUTPUT config_file.txt
  COMMAND bash ${CMAKE_SOURCE_DIR}/scripts/generate_config.sh
  DEPENDS ${CMAKE_SOURCE_DIR}/scripts/generate_config.sh
)

# Add a custom target for the generated config file
# This will ensure that the custom command is executed when building the target
add_custom_target(config_file DEPENDS config_file.txt)

# Add a dependency between the executable target and the custom target
# This will ensure that the config file is generated before building the executable
add_dependencies(my_executable config_file)

# Install the executable and the config file to the specified locations
# This will copy them to the install directory when running the "install" target
install(TARGETS my_executable DESTINATION bin)
install(FILES config_file.txt DESTINATION etc)
# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.14.0)

# Create a project in CMake with a given name and version
project(my_project VERSION 1.0.0)

# Set the C++ standard to use for compilation
set(CMAKE_CXX_STANDARD 11)

# Set the source files for the project
set(SOURCES 
    main.cpp
    helper.cpp
   )

# Set the header files for the project
set(HEADERS
    helper.h
    )

# Add the source and header files to the project
add_executable(my_project ${SOURCES} ${HEADERS})

# Set the output directory for the built executable
set_target_properties(my_project PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add a custom build target for compiling additional libraries
add_custom_target(libs)

# Add a dependency for the executable on the custom build target
add_dependencies(my_project libs)

# Specify the include directories for the project
target_include_directories(my_project PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)

# Specify the libraries to link against for the executable
target_link_libraries(my_project PRIVATE lib1 lib2)

# Configure the compilation flags for the executable
target_compile_options(my_project PRIVATE -Wall -Wextra -O3)

# Add a post-build command to copy a file to a specific directory
add_custom_command(TARGET my_project
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy
    ${CMAKE_CURRENT_SOURCE_DIR}/config.ini $<TARGET_FILE_DIR:my_project>
)
# Define a function to handle finding dependencies
function (find_dependencies)
  # Set the names of the dependencies
  set (dependencies "lib1" "lib2" "lib3")

  # Look for the dependencies in the system
  foreach (dep ${dependencies})
    # Search for the dependency in the system
    find_library(${dep}_LIBRARIES REQUIRED)

    # Check if the dependency was found
    if (NOT ${dep}_LIBRARIES)
      message(FATAL_ERROR "${dep} not found in system, please install ${dep}")
    endif()

    # Add the dependency libraries to the list
    list(APPEND DEPENDENCY_LIBRARIES ${${dep}_LIBRARIES})
  endforeach()

  # Define the DEPENDENCY_LIBRARIES variable to be used in other parts of the project
  set(DEPENDENCY_LIBRARIES ${DEPENDENCY_LIBRARIES} PARENT_SCOPE)

  # Print a success message
  message("All dependencies found: ${DEPENDENCY_LIBRARIES}")
endfunction()

# Call the find_dependencies function to search for dependencies
find_dependencies()

# Create a new executable target
add_executable(my_program
  main.cpp
  utils.cpp
)

# Link the dependency libraries to the executable target
target_link_libraries(my_program PRIVATE ${DEPENDENCY_LIBRARIES})

# Set the include directories for the dependency libraries
target_include_directories(my_program PRIVATE ${DEPENDENCY_INCLUDE_DIRS})
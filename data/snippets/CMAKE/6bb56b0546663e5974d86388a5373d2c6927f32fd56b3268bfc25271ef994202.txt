# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Create a project with the name "MyProject"
project(MyProject)

# Add a subdirectory for external dependencies
add_subdirectory(extern)

# Create a target for the main executable
add_executable(main main.cpp)

# Set the source files for the main target
target_sources(main PRIVATE 
    ${CMAKE_CURRENT_LIST_DIR}/src/file1.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/file2.cpp
)

# Add include directories for the main target
target_include_directories(main PRIVATE 
    ${CMAKE_CURRENT_LIST_DIR}/include
    ${CMAKE_CURRENT_LIST_DIR}/extern/include
)

# Link external libraries to the main target
target_link_libraries(main PRIVATE external_lib1 external_lib2)

# Add compiler flags for the main target
target_compile_options(main PRIVATE 
    -Wall
    -Werror
    -Wextra
)

# Set the output directory for the main target
set_target_properties(main PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/bin
)

# Create a target for unit tests
add_executable(tests tests.cpp)

# Set the source files for the test target
target_sources(tests PRIVATE 
    ${CMAKE_CURRENT_LIST_DIR}/src/test_file1.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/test_file2.cpp
)

# Add include directories for the test target
target_include_directories(tests PRIVATE 
    ${CMAKE_CURRENT_LIST_DIR}/include
    ${CMAKE_CURRENT_LIST_DIR}/extern/include
)

# Link external libraries to the test target
target_link_libraries(tests PRIVATE external_lib1 external_lib2)

# Add compiler flags for the test target
target_compile_options(tests PRIVATE 
    -Wall
    -Werror
    -Wextra
)

# Set the output directory for the test target
set_target_properties(tests PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/bin
)

# Add unit tests as a custom target
add_custom_target(unit_tests
    COMMAND tests
    WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/bin
    DEPENDS tests
)

# Add a test coverage target
add_custom_target(test_coverage
    COMMAND lcov -c -b ${CMAKE_SOURCE_DIR} -d ${CMAKE_CURRENT_BINARY_DIR} -o cov.info
    COMMAND genhtml cov.info -o ${CMAKE_CURRENT_LIST_DIR}/cov
    WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
    DEPENDS tests
    COMMENT "Generating test coverage report..."
)

# Add a target to clean build artifacts
add_custom_target(clean_build
    COMMAND ${CMAKE_BUILD_TOOL} clean
    COMMAND rm -rf ${CMAKE_CURRENT_LIST_DIR}/bin
    COMMAND rm -rf ${CMAKE_CURRENT_LIST_DIR}/cov
    COMMENT "Cleaning build artifacts..."
)
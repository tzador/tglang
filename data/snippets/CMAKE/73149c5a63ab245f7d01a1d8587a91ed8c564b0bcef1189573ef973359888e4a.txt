# Define a variable with a list of source files
set(SRC_FILES
    src/main.c
    src/helper_functions.c
    src/algorithm.c
)

# Define a variable with a list of required libraries
set(LIBS
    math
    pthread
    sqlite3
)

# Set the include directories for the project
include_directories(include)

# Add an executable target
add_executable(my_project ${SRC_FILES})

# Link the required libraries to the target
target_link_libraries(my_project ${LIBS})

# Set compiler flags for the project
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -Wall -Werror -pedantic")

# Create a custom command to generate a configuration file using cmake
add_custom_command(OUTPUT config.h
    COMMAND ${CMAKE_COMMAND} -P generate_config.cmake
    DEPENDS generate_config.cmake
    COMMENT "Generating configuration file"
)

# Add the generated configuration file to the list of source files
list(APPEND SRC_FILES ${CMAKE_CURRENT_BINARY_DIR}/config.h)

# Set the preprocessor flag for the target
target_compile_definitions(my_project PRIVATE ENABLE_DEBUG=1)

# Add a post-build command to copy the executable to the bin directory
add_custom_command(TARGET my_project POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:my_project> ${CMAKE_BINARY_DIR}/bin/
    COMMENT "Copying executable to bin directory"
)

# Set the install directory for the project
set(INSTALL_DIR /usr/local)

# Install the executable to the specified directory
install(TARGETS my_project DESTINATION ${INSTALL_DIR}/bin)

# Set the install directory for the configuration file
set(CONFIG_INSTALL_DIR /etc/my_project)

# Install the configuration file to the specified directory
install(FILES ${CMAKE_CURRENT_BINARY_DIR/}config.h DESTINATION ${CONFIG_INSTALL_DIR})
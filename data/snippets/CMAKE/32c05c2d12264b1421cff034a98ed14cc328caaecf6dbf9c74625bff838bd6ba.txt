# Define function
function(my_function ARGS)
  # Set variables
  set(MY_OPTION1 "default1" CACHE STRING "Description for MY_OPTION1")

  # Add options
  option(USE_MY_OPTION2 "Description for MY_OPTION2" OFF)
  option(USE_MY_OPTION3 "Description for MY_OPTION3" ON)
  
  # Check if MY_OPTION2 was enabled
  if (USE_MY_OPTION2)
    # Set variable based on option
    set(MY_OPTION2_PATH "path/to/option2" CACHE PATH "Description for MY_OPTION2_PATH")
    
    # Add include directory
    include_directories(${MY_OPTION2_PATH})
  endif()

  # Create library
  add_library(my_library ${ARGS})

  # Link library to option
  target_link_libraries(my_library
    PUBLIC
      my_dependency # Dependency library
  )

  # Check if MY_OPTION3 was enabled
  if(USE_MY_OPTION3)
    # Set variable based on option
    set(MY_OPTION3 "value" CACHE STRING "Description for MY_OPTION3")
    
    # Add compile definitions
    target_compile_definitions(my_library
      PUBLIC
        MY_OPTION3_DEFINITION=${MY_OPTION3}
    )
  endif()

  # Add compile features
  target_compile_features(my_library
    PUBLIC
      cxx_std_11 # Use C++11 standard
  )

  # Set output directory
  set_target_properties(my_library PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
  )
    
endfunction()
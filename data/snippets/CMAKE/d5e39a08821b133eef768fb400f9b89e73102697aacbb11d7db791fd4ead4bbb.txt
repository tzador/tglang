## Set minimum required version
cmake_minimum_required(VERSION 3.10)

## Create project
project(my_project)

## Set C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

## Find third-party library and set as dependency
find_package(ThirdPartyLibrary REQUIRED)

## Create executable
add_executable(my_executable main.cpp)

## Add source files to executable target
target_sources(my_executable PRIVATE
    src/file1.cpp
    src/file2.cpp
)

## Add include directories for third-party library
target_include_directories(my_executable PRIVATE ${ThirdPartyLibrary_INCLUDE_DIRS})

## Add link libraries for third-party library
target_link_libraries(my_executable PRIVATE ${ThirdPartyLibrary_LIBRARIES})

## Set output directory for executable
set_target_properties(my_executable PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

## Add compiler flags
target_compile_options(my_executable PRIVATE -Wall -Wextra -pedantic)

## Add linker flags
target_link_options(my_executable PRIVATE -static)

## Define custom target
add_custom_target(
    my_custom_target
    COMMAND my_executable
    DEPENDS my_executable
)

## Set installation target
install(
  TARGETS my_executable
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

## Install header files
install(
  DIRECTORY include/
  DESTINATION include
  FILES_MATCHING PATTERN "*.h"
)
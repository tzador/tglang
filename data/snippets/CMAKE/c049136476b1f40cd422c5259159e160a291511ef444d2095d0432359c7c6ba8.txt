# Define a function to check if a number is prime
function(PRIME_CHECK NUMBER)
    # Check if the number is 2
    if (NUMBER EQUAL 2)
        set(PRIME TRUE)
    else()
        # Loop through all numbers from 2 to the square root of the number
        math(EXPR MAX_ITERS "sqrt(${NUMBER})")
        set(ITERS 2)
        while(ITERS LESS_EQUAL ${MAX_ITERS})
            # Check if the number is divisible by the current iteration
            math(EXPR REMAINDER "${NUMBER} % ${ITERS}")
            if (REMAINDER EQUAL 0)
                # If it is divisible, set PRIME to FALSE and break out of the loop
                set(PRIME FALSE)
                break()
            endif()
            # Increment the iterator
            math(EXPR ITERS "${ITERS} + 1")
        endwhile()
        # Check if PRIME was set to FALSE, if not then the number is prime
        if (NOT PRIME)
            set(PRIME TRUE)
        endif()
    endif()
    # Return the value of PRIME
    return(PRIME)
endfunction()

# Call the PRIME_CHECK function with a given number
set(NUM 17)
message("Is ${NUM} a prime number?")
message("${NUM} is a prime number: ${PRIME_CHECK(${NUM})}")
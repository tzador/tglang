# Set minimum required version
cmake_minimum_required(VERSION 3.14)

# Name the project and set languages
project(MyProject LANGUAGES CXX)

# Create a library target (static)
add_library(my_library STATIC
    src/file1.cpp
    src/file2.cpp
)

# Add include directories
target_include_directories(my_library
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/include
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

# Set compiler options for the library target
target_compile_options(my_library
    PRIVATE
        -Wall
        -Wextra
)

# Set linker options for the library target
target_link_options(my_library
    PRIVATE
        -static
)

# Create an executable target
add_executable(my_executable
    src/main.cpp
)

# Link the library target with the executable target
target_link_libraries(my_executable
    PRIVATE
        my_library
)

# Set compiler options for the executable target
target_compile_options(my_executable
    PRIVATE
        -O3
)

# Install the executable and library
install(TARGETS my_executable my_library
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib/static
)

# Install the header files
install(DIRECTORY include/
    DESTINATION include
    FILES_MATCHING PATTERN "*.hpp"
)

# Enable testing
enable_testing()

# Define a test target
add_test(NAME my_test
    COMMAND my_executable
        # Add arguments here if necessary
)

# Add a custom target to run tests
add_custom_target(run_tests
    COMMAND ctest
    DEPENDS my_executable
)
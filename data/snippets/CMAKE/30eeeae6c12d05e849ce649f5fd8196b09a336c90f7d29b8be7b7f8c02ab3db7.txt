cmake_minimum_required(VERSION 3.16.3)  # Sets the minimum version required for cmake
project(MyProject VERSION 1.0.0 LANGUAGES CXX)  # Specifies the project name, version, and language

# Sets the directory where the built libraries and executables will be stored
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Specifies the directories where CMake will look for additional libraries and includes
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)
set(INCLUDE_DIR ${CMAKE_SOURCE_DIR}/include)

# Adds the source and include directories to the project
include_directories(${SOURCE_DIR} ${INCLUDE_DIR})

# Adds a compiler flag to enable C++11 features
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

# Finds and adds the Boost library to the project
find_package(Boost REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})

# Creates a list of source files for the project
set(SOURCES 
    ${SOURCE_DIR}/main.cpp
    ${SOURCE_DIR}/utils.cpp
)

# Creates a list of header files for the project
set(HEADERS 
    ${INCLUDE_DIR}/utils.h
)

# Sets the executable output target, linking the Boost library and the project sources
add_executable(MyProject ${SOURCES} ${HEADERS})
target_link_libraries(MyProject ${Boost_LIBRARIES})
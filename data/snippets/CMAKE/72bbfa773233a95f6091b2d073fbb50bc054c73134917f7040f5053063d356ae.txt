# Define project
project(MyProject LANGUAGES CXX)

# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.0)

# Specify source files for the project
set(SOURCES main.cpp helper.cpp)

# Create executable target
add_executable(MyProject ${SOURCES})

# Set compile options for target
target_compile_options(MyProject PRIVATE -Wall -O2)

# Find and link external libraries
find_package(Boost REQUIRED COMPONENTS regex)
target_link_libraries(MyProject PRIVATE Boost::regex)

# Add custom preprocessor definition for target
target_compile_definitions(MyProject PRIVATE DEBUG)

# Create installation rules
install(TARGETS MyProject DESTINATION bin)
install(FILES "LICENSE" DESTINATION share/myproject)

# Specify test cases
enable_testing()
add_executable(MyProject_tests ${SOURCES} tests.cpp)
target_compile_options(MyProject_tests PRIVATE -Wall -O2)
target_link_libraries(MyProject_tests PRIVATE Boost::regex)
add_test(NAME MyProject_tests COMMAND MyProject_tests)

# Add documentation target
find_package(Doxygen)
if(DOXYGEN_FOUND)
    set(DOXYGEN_IN ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
    set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)

    configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)
    message("Doxygen build started")

    add_custom_target(docs ALL COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
                      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
                      COMMENT "Generating API documentation with Doxygen"
                      VERBATIM)
else()
    message("Doxygen need to be installed to generate the doxygen documentation.")
endif()
# Create a target for compiling our source code
add_executable(my_app main.cpp)

# Include additional directories for header files
target_include_directories(my_app
	PUBLIC
	${CMAKE_SOURCE_DIR}/include
	${CMAKE_SOURCE_DIR}/third-party-libs/include
)

# Set the C++ standard to use
set(CMAKE_CXX_STANDARD 17)

# Enable specific compiler warnings
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	target_compile_options(my_app
		PRIVATE
		-Wall
		-Wextra
	)
endif()

# Specify libraries to link
target_link_libraries(my_app
	PRIVATE
	third-party-lib1
	PUBLIC
	third-party-lib2
)

# Set compiler-specific flags
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
	target_compile_options(my_app
		PRIVATE
		-fsanitize=address,undefined
	)
elseif (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
	target_compile_options(my_app
		PRIVATE
		-fsanitize=address,undefined
	)
endif()

# Enable testing for our project
enable_testing()

# Create a test target
add_executable(my_app_test test.cpp)

# Add the dependencies of the test target
add_dependencies(my_app_test my_app)

# Add tests to the test target
add_test(NAME my_app_test COMMAND my_app_test)

# Specify libraries to link for test target
target_link_libraries(my_app_test
	PRIVATE
	third-party-lib1
	PUBLIC
	third-party-lib2
)
# Define a variable named "MY_VAR" and set it to a string value
set(MY_VAR "Hello World")

# Print the value of the variable to the console
message(STATUS "My variable's value: ${MY_VAR}")

# Define a list variable with multiple values
set(MY_LIST "apple;banana;orange" CACHE STRING "My list variable")

# Loop through the list using a foreach loop
foreach(item IN LISTS MY_LIST)
    message(STATUS "Current item: ${item}")
endforeach()

# Define a function that takes in two arguments and sums them
function(sum_func arg1 arg2)
    math(EXPR sum "${arg1} + ${arg2}")
    message(STATUS "Sum of ${arg1} and ${arg2} is ${sum}")
endfunction()

# Call the function with two integers as arguments
sum_func(12 5)

# Create a directory and set it as the current working directory
file(MAKE_DIRECTORY "./my_dir")
set_property(DIRECTORY PROPERTY WORKING_DIRECTORY ./my_dir)

# Generate a file with a string value
file(WRITE "./my_dir/my_file.txt" "This is a sample file")

# Set a compile definition to be used in the project
add_compile_definitions(MY_DEFINITION)

# Create a library with the specified source files
add_library(my_lib my_source1.cpp my_source2.cpp)

# Link the library to the executable
target_link_libraries(my_executable PRIVATE my_lib)

# Set compiler flags for the executable target
target_compile_options(my_executable PRIVATE -Wall -Wextra -pedantic)

# Set compile features for the executable target
target_compile_features(my_executable PRIVATE cxx_std_11)

# Create an installation rule for the executable
install(TARGETS my_executable DESTINATION bin)

# Create a variable to store the path to an external library
set(EXT_LIB "path/to/external/library")

# Add the external library as a subdirectory
add_subdirectory(${EXT_LIB})

# Link the external library to the executable target
target_link_libraries(my_executable PRIVATE external_lib)
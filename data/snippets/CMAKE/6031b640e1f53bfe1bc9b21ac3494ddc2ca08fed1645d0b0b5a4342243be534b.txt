# Comment: This is an example CMakeLists file for a project
# Define minimum required CMake version
cmake_minimum_required(VERSION 3.10)

# Project name and version
project(hello_world VERSION 1.0)

# Add executable target
add_executable(hello_world main.cpp)

# Set compiler flags
set(CMAKE_CXX_FLAGS "-std=c++11 -Wall")

# Specify include directories
include_directories(include)

# Specify link libraries
target_link_libraries(hello_world lib1 lib2)

# Define installation directories
set(CMAKE_INSTALL_PREFIX /usr/local)

# Install executable
install(TARGETS hello_world DESTINATION bin)

# Install additional files
install(FILES LICENSE README.md DESTINATION share/hello_world)

# Add testing support
enable_testing()

# Create test executable
add_executable(test_hello test_hello.cpp)

# Link test executable with necessary libraries
target_link_libraries(test_hello lib1 lib2)

# Add test case
add_test(NAME test_hello COMMAND test_hello)

# Set test output
set_tests_properties(test_hello PROPERTIES PASS_REGULAR_EXPRESSION "Hello world!")

# Add custom target
add_custom_target(hello_message
    COMMAND echo "Hello, cmake!"
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    COMMENT "Custom target to print hello message"
)

# Add dependencies
add_dependencies(hello_world hello_message)

# Set target properties
set_target_properties(hello_world PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED True
)

# Generate config file for package
configure_file(hello_config.h.in hello_config.h)

# Add installation rules for config file
install(FILES ${CMAKE_BINARY_DIR}/hello_config.h DESTINATION include)

# Include directories in install
install(DIRECTORY include/ DESTINATION include)

# Add export target
install(EXPORT hello_world_targets FILE hello_world_targets.cmake DESTINATION lib/cmake/hello_world)
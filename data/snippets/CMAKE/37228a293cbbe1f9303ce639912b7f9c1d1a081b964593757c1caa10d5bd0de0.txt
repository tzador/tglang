# Sets variables for the project
cmake_minimum_required(VERSION 3.10) # Sets minimum required version of cmake
project(MyProject) # Specifies the project name

# Sets compiler flags for different configurations
set(CMAKE_CXX_FLAGS "$ENV{CXXFLAGS} -std=c++11") # Sets C++11 standard for compiler
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG") # Sets compiler flags for release mode
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0") # Sets compiler flags for debug mode

# Specifies source files for the project
set(SRCS src/file1.cpp src/file2.cpp src/file3.cpp) # Sets source files for main target
set(TEST_SRCS test/test1.cpp test/test2.cpp) # Sets source files for test target

# Defines executable targets
add_executable(myapp ${SRCS}) # Creates executable target named 'myapp'
add_executable(mytest ${SRCS} ${TEST_SRCS}) # Creates test executable target with additional test files

# Sets include directories
include_directories(include) # Adds header files from 'include' directory to project

# Specifies library dependencies
set(LIBS lib1 lib2 lib3) # Sets libraries needed for linking

# Links libraries to targets
target_link_libraries(myapp ${LIBS}) # Links libraries to main target
target_link_libraries(mytest ${LIBS}) # Links libraries to test target

# Sets output directories for binaries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin) # Sets output directory for executable targets
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib) # Sets output directory for library targets
# This is a CMakeLists.txt file

# Set the minimum required CMake version
cmake_minimum_required(VERSION 3.12)

# Create a project
project(MyProject CXX)

# Add a library target
add_library(MyLib STATIC
    src/mylib.cpp
)

# Add an executable target
add_executable(MyApp 
    src/main.cpp
)

# Link the library target with the executable target
target_link_libraries(MyApp PRIVATE MyLib)

# Set the include directories for the library target and executable target
target_include_directories(MyLib PUBLIC include)
target_include_directories(MyApp PRIVATE src)

# Set compiler flags for the library target and executable target
target_compile_options(MyLib PUBLIC -Wall -Wextra)
target_compile_options(MyApp PRIVATE -O3)

# Set compilation flags for C++17 standard
set(CMAKE_CXX_STANDARD 17)

# Add a custom command to be executed during build process
add_custom_command(TARGET MyApp POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:MyApp> ${CMAKE_CURRENT_SOURCE_DIR}/bin
)

# Add subdirectory for source files for additional targets
add_subdirectory(app1)
add_subdirectory(app2)

# Set the install directory for the targets
install(TARGETS MyLib MyApp
    DESTINATION ${CMAKE_SOURCE_DIR}/bin
)

# Add a custom target
add_custom_target(BuildAll
    COMMAND ${CMAKE_BUILD_TOOL} --build ${CMAKE_BINARY_DIR} --target MyLib MyApp
)

# Add a dependency between the BuildAll target and the app1 target
add_dependencies(BuildAll app1)

# Add a test target and specify executable and arguments
add_test(NAME MyTest_Command1
    COMMAND MyApp arg1 arg2
)

# Set the working directory for the test
set_tests_properties(MyTest_Command1 PROPERTIES WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
# This is a CMAKE project
# Define the minimum required version of CMAKE
cmake_minimum_required(VERSION 3.10)

# Set the project name
project(MyProject)

# Add a library target named `MyLibrary` with the source files listed
add_library(MyLibrary STATIC
    src/MyLibrary/File1.cpp
    src/MyLibrary/File2.cpp
    src/MyLibrary/File3.cpp
)

# Add an executable target named `Main` with the source files listed
add_executable(Main
    src/Main.cpp
)

# Set the include directories for `MyLibrary`
target_include_directories(MyLibrary PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Add a dependency on `MyLibrary` for the `Main` target
target_link_libraries(Main PRIVATE MyLibrary)

# Set the output directory to `build/bin`
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Define a custom compile option for the `Main` target
target_compile_options(Main PRIVATE -Wall -Wextra)

# Find and link against the external library `MyExternalLibrary`
find_library(MyExternalLibrary REQUIRED)
target_link_libraries(Main PRIVATE MyExternalLibrary)

# Set the build type to `Release`
set(CMAKE_BUILD_TYPE "Release")

# Allow the project to be installed to the default install location
install(TARGETS Main DESTINATION bin)
install(DIRECTORY include/ DESTINATION include)
install(FILES README.txt DESTINATION share)

# Add a custom command to run after the build is complete
add_custom_command(
    TARGET Main POST_BUILD
    COMMAND echo "Build completed!"
)
#First, we define the minimum required version of CMake
cmake_minimum_required(VERSION <span></span>3.15)

#Next, we set the project name
project(MyProject)

#We can also specify the project version
set(PROJECT_VERSION 1.0)

#We can define variables for our project
set(SOURCE_FILES src/main.cpp src/utils.cpp)

#We can include external libraries using the find_package() command
find_package(Boost 1.70 REQUIRED)

#We can add executable targets
add_executable(MyExecutable ${SOURCE_FILES})

#We can set properties for our targets
set_target_properties(MyExecutable PROPERTIES
    CXX_STANDARD 11
    CXX_EXTENSIONS OFF
    CXX_STANDARD_REQUIRED ON
)

#We can link our targets to external libraries
target_link_libraries(MyExecutable PRIVATE Boost::boost)

#We can also include directories for headers
target_include_directories(MyExecutable PRIVATE include)

#We can add custom commands to our build process
add_custom_command(TARGET MyExecutable POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy
    ${CMAKE_CURRENT_SOURCE_DIR}/assets/resources.txt
    ${CMAKE_CURRENT_BINARY_DIR}/resources.txt
)

#We can define macro definitions
target_compile_definitions(MyExecutable PRIVATE MY_DEBUG)

#We can enable testing in our project
enable_testing()

#We can add a test target
add_test(NAME MyTest
         COMMAND MyExecutable)

#We can set variables for our tests
set(TEST_SOURCE_FILES test/main.cpp test/utils_test.cpp)

#We can add an executable test target
add_executable(MyTestExecutable ${TEST_SOURCE_FILES})

#We can link our test target to our project target
target_link_libraries(MyTestExecutable PRIVATE MyExecutable)

#We can add the test to our test suite
add_test(NAME MyTestSuite
         COMMAND MyTestExecutable)
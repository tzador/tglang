# Define a function to create an executable
Function(AddExecutable name)
# Create a variable to hold the source files for the executable
set(source_files ${ARGN})
# Use CMake's add_executable function to create the executable
add_executable(${name} ${source_files})
# Set the output directory for the executable
set_target_properties(${name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
endfunction()

# Call the AddExecutable function to create an executable called "hello_world"
AddExecutable(hello_world main.cpp)

# Set compiler flags for the executable
target_compile_options(hello_world PRIVATE -Wall -Wextra -pedantic)

# Create a library target
add_library(my_library STATIC library.cpp)

# Link the library to the executable
target_link_libraries(hello_world my_library)

# Create a custom target that will run the executable
add_custom_target(run
    COMMAND ${CMAKE_BINARY_DIR}/bin/hello_world
    DEPENDS hello_world
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
)

# Add a build type "debug" with specific compiler flags
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g")

# Install the executable and library
install(TARGETS hello_world my_library
    DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
)

# Install header files for the library
install(FILES library.h
    DESTINATION ${CMAKE_INSTALL_PREFIX}/include
)
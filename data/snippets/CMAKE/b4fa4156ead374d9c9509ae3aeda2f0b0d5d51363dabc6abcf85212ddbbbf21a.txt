# This cmake snippet creates a target for building an executable with source files.
# Set the name of the executable to "my_app".
set(my_app_SOURCES 
    src/main.cpp 
    src/helper.cpp 
    src/utilities.cpp
)

# Create the target "my_app" and link the source files.
add_executable(my_app ${my_app_SOURCES})

# Add any additional libraries needed by the executable.
target_link_libraries(my_app 
    my_lib_1
    my_lib_2
)

# Set the output directory for the executable.
set_target_properties(my_app PROPERTIES 
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

# Set compile and linker flags for the target.
target_compile_options(my_app PRIVATE
    -Wall 
    -Wextra
)

target_link_options(my_app PRIVATE
    -L/usr/local/lib
    -static
)

# Add a custom command to copy any necessary files to the binary directory.
# In this example, we are copying a configuration file.
add_custom_command(TARGET my_app POST_BUILD
    COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/config.ini" "${CMAKE_BINARY_DIR}/bin/config.ini"
)
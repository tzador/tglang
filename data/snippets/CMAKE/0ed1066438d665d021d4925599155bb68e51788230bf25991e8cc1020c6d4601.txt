# Define a variable for the project
set(PROJECT_NAME "MyProject")

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.12)

# Set the project name
project(${PROJECT_NAME} VERSION 1.0.0)

# Set the target name
set(TARGET_NAME "MyTarget")

# Add source files to the project
set(SOURCES
    src/main.cpp
    src/helper.cpp
    include/helper.h
)

# Define the output directory for built files
set(OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)

# Set the output directory for the executable
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR})

# Add executable target
add_executable(${TARGET_NAME} ${SOURCES})

# Include header files
target_include_directories(${TARGET_NAME}
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Set compiler flags
target_compile_options(${TARGET_NAME}
    PRIVATE
        -Wall
        -Wextra
)

# Set linker flags
target_link_options(${TARGET_NAME}
    PRIVATE
        -lsomeLib
)

# Set installation destination for executable
install(TARGETS ${TARGET_NAME} DESTINATION ${CMAKE_INSTALL_BINDIR})

# Set installation destination for header files
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# Set package information
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_PACKAGE_CONTACT "John Doe <johndoe@example.com>")
set(CPACK_PACKAGE_DESCRIPTION "This is a sample project")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "MyProject-${PROJECT_VERSION}")
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR})

# Include CPack
include(CPack)
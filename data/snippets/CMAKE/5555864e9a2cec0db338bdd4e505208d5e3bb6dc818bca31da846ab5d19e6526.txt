# Declare a variable called "my_var" and set its value to "hello world"
set(my_var "hello world")

# Create a function named "my_function" that takes in two parameters "param1" and "param2"
function(my_function param1 param2)
    # Print out the values of the parameters
    message("parameter 1: ${param1}, parameter 2: ${param2}")

    # Create a loop that iterates 5 times
    foreach(i RANGE 5)
        # Print out the current iteration number
        message("Iteration ${i}")
    endforeach()

    # Check if "param1" is equal to "hello"
    if(param1 STREQUAL "hello")
        # Print out "param1" is equal to "hello"
        message("param1 is equal to hello")
    endif()

    # Create a variable "my_list" that contains a list of strings
    set(my_list "apple" "banana" "orange")

    # Print out the first and third element of the list
    message("First element: ${my_list[0]}, third element: ${my_list[2]}")

    # Create a custom target called "build" and add a dependency on "my_target"
    add_custom_target(build DEPENDS my_target)

    # Set the output directory of the build to "my_output"
    set_target_properties(build PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/my_output")

    # Add compiler flags for the target "my_target"
    target_compile_options(my_target PRIVATE "-Wall" "-Werror")

    # Link the target "my_target" with the library "my_library"
    target_link_libraries(my_target PRIVATE my_library)
endfunction()

# Call the function "my_function" with the parameters "hello" and "world"
my_function("hello" "world")
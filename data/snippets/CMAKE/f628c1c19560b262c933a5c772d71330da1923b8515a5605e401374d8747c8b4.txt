# Define the project name and version
project(MyProject VERSION 1.0.0)

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.16)

# Set the C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Add a custom CMake module directory
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/modules/")

# Find and include external libraries
find_package(OpenGL REQUIRED)
include_directories(${OPENGL_INCLUDE_DIRS})

find_package(GLEW REQUIRED)
include_directories(${GLEW_INCLUDE_DIRS})

find_package(GLFW REQUIRED)
include_directories(${GLFW_INCLUDE_DIRS})

find_package(BOOST REQUIRED)
include_directories(${BOOST_INCLUDE_DIRS})

# Build executable from source files
add_executable(MyProject 
    main.cpp 
    src/Window.cpp 
    src/Renderer.cpp)

# Link external libraries to executable
target_link_libraries(MyProject 
    ${OPENGL_LIBRARIES} 
    ${GLEW_LIBRARIES} 
    ${GLFW_LIBRARIES} 
    ${BOOST_LIBRARIES})

# Set compile options for specific target
target_compile_options(MyProject PRIVATE 
    -Wall 
    -Wextra 
    -pedantic 
    -Werror)

# Set custom cmake configuration options
configure_file(config.h.in config.h)

# Set include directories for source files
target_include_directories(MyProject PUBLIC 
    ${PROJECT_BINARY_DIR} 
    ${PROJECT_SOURCE_DIR}/include)

# Install executable to specified location
install(TARGETS MyProject DESTINATION bin)

# Add a test executable using Catch2 testing framework
add_executable(TestProject 
    tests/TestMain.cpp 
    tests/TestWindow.cpp 
    tests/TestRenderer.cpp)

# Link Catch2 and project libraries to test executable
target_link_libraries(TestProject 
    Catch2::Catch2 
    ${OPENGL_LIBRARIES} 
    ${GLEW_LIBRARIES} 
    ${GLFW_LIBRARIES} 
    ${BOOST_LIBRARIES})

# Include Catch2 header file for testing
include(CTest)
include(Catch)
catch_discover_tests(TestProject)
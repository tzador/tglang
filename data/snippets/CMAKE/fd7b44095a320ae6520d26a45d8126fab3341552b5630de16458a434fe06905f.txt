# This CMake file will compile a project with multiple subdirectories
# and create a shared library using gcc compiler.
cmake_minimum_required(VERSION 3.10)

# Declare project name and version
project(MyProject VERSION 1.0)

# Declare source files to be compiled
set(SOURCES
    main.cpp
    sub_dir_1/source_file_1.cpp
    sub_dir_1/source_file_2.cpp
    sub_dir_2/source_file_3.cpp
    sub_dir_2/source_file_4.cpp
)

# Declare include directories
include_directories(sub_dir_1 sub_dir_2)

# Set output directory and library name
set(OUTPUT_DIR lib)

# Add subdirectories to be compiled
add_subdirectory(sub_dir_1)
add_subdirectory(sub_dir_2)

# Add target for shared library
add_library(MyProject_SharedLib SHARED ${SOURCES})

# Set version for shared library
set_target_properties(MyProject_SharedLib PROPERTIES VERSION ${PROJECT_VERSION})

# Set output path for shared library
set_target_properties(MyProject_SharedLib PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR})

# Set compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Werror -std=c++14")

# Link shared library with subdirectories
target_link_libraries(MyProject_SharedLib
    sub_dir_1
    sub_dir_2
)

# Install shared library and header files
install(TARGETS MyProject_SharedLib
        RUNTIME DESTINATION ${OUTPUT_DIR}
        LIBRARY DESTINATION ${OUTPUT_DIR}
        ARCHIVE DESTINATION ${OUTPUT_DIR}
)

install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/
        DESTINATION ${OUTPUT_DIR}
        FILES_MATCHING PATTERN "*.h"
)
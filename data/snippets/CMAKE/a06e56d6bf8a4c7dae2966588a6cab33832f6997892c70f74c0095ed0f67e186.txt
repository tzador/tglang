# Declare variable for project name
set(PROJECT_NAME "My_Project")

# Set minimum required CMake version
cmake_minimum_required(VERSION 3.10)

# Set project name and version
project(${PROJECT_NAME} VERSION 1.0.0)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Add an executable target
add_executable(${PROJECT_NAME} main.cpp)

# Include header files from a subdirectory
target_include_directories(${PROJECT_NAME} PUBLIC
  "${PROJECT_SOURCE_DIR}/include"
)

# Link to a library
target_link_libraries(${PROJECT_NAME} PUBLIC MyLibrary)

# Set compiler flags for Debug and Release builds
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Set a custom output directory for the built files
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")

# Set the location of the build folder
set(CMAKE_BINARY_DIR ${PROJECT_SOURCE_DIR}/build)

# Specify the location of the generated .exe file
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

# Specify the location of the generated .lib file
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

# Add a subdirectory for tests
add_subdirectory(tests)

# Add a custom target for cleaning build files
add_custom_target(clean-all
  COMMAND "${CMAKE_COMMAND}" -E remove_directory "${PROJECT_BINARY_DIR}/"
  COMMAND "${CMAKE_COMMAND}" -E remove_directory "${PROJECT_SOURCE_DIR}/bin/"
  COMMAND "${CMAKE_COMMAND}" -E remove_directory "${PROJECT_SOURCE_DIR}/lib/"
  COMMENT "Removing all built files"
)
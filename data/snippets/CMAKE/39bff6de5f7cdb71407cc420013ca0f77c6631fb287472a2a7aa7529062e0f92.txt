cmake_minimum_required(VERSION 3.5.1) # set minimum required version
project(my_project CXX) # Set project name and specifying language
set(CMAKE_CXX_STANDARD 14) # set C++ standard to use

# set options for build type
set(CMAKE_BUILD_TYPE Debug
    CACHE STRING "Choose the type of build (Debug/Release)")
set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release)

# set options for compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Wextra -pedantic -Werror"
    CACHE STRING "Flags used by the compiler during all build types.")
# set  options for incremental linking
set(CMAKE_LINKER_FLAGS ${CMAKE_LINKER_FLAGS} "-Wl,-rpath=${CMAKE_INSTALL_PREFIX}/lib
-nostartfiles -Wl,--warn-execstack -Wl,-z,relro -Wl,-z,now"
    CACHE STRING "Flags used by the linker during all build types.")

# set source files and include directories
set(SOURCE_FILES main.cpp file1.cpp file1.hpp file2.cpp file2.hpp)
include_directories(include_dir_1 include_dir_2)

# Add an executable target
add_executable(my_project ${SOURCE_FILES})

# set dependencies for the project
find_package(Boost REQUIRED COMPONENTS filesystem system)
target_link_libraries(my_project ${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY})
cmake_minimum_required(VERSION 3.12) # sets minimum required version of CMake
project(MyProject VERSION 1.0.0) # sets project name and version number

# create a variable that stores a list of source files
set(SOURCE_FILES
    src/main.cpp
    src/utils.cpp
    src/class.cpp
)

# create an executable target called "myproject" 
# that depends on the source files and compiles them using the C++11 standard
add_executable(myproject ${SOURCE_FILES})
target_compile_features(myproject PRIVATE cxx_std_11) 

# add a subdirectory called "include" to include header files
include_directories(include)

# find and link the necessary libraries
find_package(SDL2 REQUIRED)
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(Boost REQUIRED COMPONENTS filesystem)

include_directories(${SDL2_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIRS} ${GLEW_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})

target_link_libraries(myproject ${SDL2_LIBRARIES} ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES} ${Boost_FILESYSTEM_LIBRARY})

# add compiler flags for better optimization and error checking
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall -Wextra -Wpedantic -Wd
conditionally_tri assigned-const-return-type -Winit-self -Wmissing-declarations
-Wunused-parameter -Wshadow")

# create an installation rule to install the executable to the bin folder
install(TARGETS myproject DESTINATION bin)

# create a custom target to generate documentation using Doxygen
add_custom_target(docs ALL COMMAND doxygen Doxyfile)

# create a custom target to run tests using CTest
enable_testing()
add_test(NAME TestCommander COMMAND myproject "TestCommander")
# Set minimum required version for CMake
cmake_minimum_required(VERSION 3.10.0)

# Set project name and version
project(my_project VERSION 1.0.0)

# Set C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Include third party libraries
add_subdirectory(third_party)

# Set source files for project
set(SOURCES
    src/main.cpp
    src/example.cpp
)

# Set include directories for project
set(INCLUDE_DIRS
    ${PROJECT_SOURCE_DIR}/include
    ${PROJECT_SOURCE_DIR}/third_party/include
)

# Create executable for project
add_executable(${PROJECT_NAME} ${SOURCES})

# Link third party libraries
target_link_libraries(${PROJECT_NAME} third_party)

# Set compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic")

# Set install location for project
install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)

# Set custom target for documentation generation
add_custom_target(doc COMMAND doxygen ${CMAKE_SOURCE_DIR}/Doxyfile)

# Set custom target for running tests
add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND})

# Include directories for project
target_include_directories(${PROJECT_NAME} PUBLIC ${INCLUDE_DIRS})

# Add external dependency for project
add_dependencies(${PROJECT_NAME} external_dependency)

# Add test files for project
add_test(NAME example_test COMMAND ${PROJECT_NAME} test_input.txt)

# Set output directory for compiled files
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
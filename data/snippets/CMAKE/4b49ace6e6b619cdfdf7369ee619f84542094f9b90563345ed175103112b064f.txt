# Define a macro for creating a library target
macro(add_my_lib lib_name lib_sources)
    # Set the library target name
    set(target_name ${lib_name})

    # Create the library target with the given sources
    # and make it INTERFACE so it can be linked by other targets
    add_library(${target_name} INTERFACE ${lib_sources})

    # Set compile features for the library
    target_compile_features(${target_name} INTERFACE cxx_std_17)

    # Add include directories for the library
    target_include_directories(${target_name} INTERFACE include)

    # Specify optional compile flags for different configurations
    if (${CMAKE_BUILD_TYPE} STREQUAL Debug)
        target_compile_options(${target_name} INTERFACE -Wall -g)
    elseif (${CMAKE_BUILD_TYPE} STREQUAL Release)
        target_compile_options(${target_name} INTERFACE -O3)
    endif()

    # Set the install directory for the library
    set(install_dir lib)

    # Install the library target to the specified install directory
    install(TARGETS ${target_name}
            EXPORT ${target_name}_Config
            ARCHIVE DESTINATION ${install_dir})

    # Generate and install the export configuration file
    install(EXPORT ${target_name}_Config
            DESTINATION ${install_dir})
endmacro()

# Create a library target called "my_library"
add_my_lib(my_library src/my_library.cpp)

# Link "my_library" to other targets
target_link_libraries(my_library INTERFACE other_target)

# Install additional files for "my_library"
install(FILES include/my_library.h DESTINATION include)
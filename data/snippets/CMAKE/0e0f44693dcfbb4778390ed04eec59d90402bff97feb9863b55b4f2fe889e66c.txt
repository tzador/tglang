cmake_minimum_required(VERSION 3.10) #specifying minimum version required for cmake

project(MyProject VERSION 1.0) #setting project name and version

set(CMAKE_CXX_STANDARD 11) #setting the language standard for the project

set(SRC_FILES "main.cpp" "functions.cpp") #storing source files in a variable

add_executable(MyExecutable ${SRC_FILES}) #creating an executable from the source files

install(TARGETS MyExecutable DESTINATION bin) #installing the executable in bin folder

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake") #setting the module path for cmake

find_package(OpenCV REQUIRED) #finding and including OpenCV library

target_link_libraries(MyExecutable PRIVATE ${OpenCV_LIBS}) #linking OpenCV library with the executable

set(OUTPUT_DIR "${CMAKE_SOURCE_DIR}/bin") #storing output directory in a variable

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR}) #specifying output directory for the executable

set(INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/include") #setting include directory for the project

include_directories(${INCLUDE_DIRS}) #including the specified directories in the project

set(LIBRARY_DIRS "${CMAKE_SOURCE_DIR}/lib") #setting library directory for the project

link_directories(${LIBRARY_DIRS}) #linking the specified directories in the project

set(CMAKE_BUILD_TYPE Debug) #setting the build type to Debug mode

add_compile_options(-Wall -Wextra -pedantic -Werror) #setting compiler options for the project

add_definitions(-DENABLE_LOGGING) #adding a definition to enable logging in the project

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread") #setting compiler flags for multi-threading

add_subdirectory(tests) #adding a subdirectory for test files
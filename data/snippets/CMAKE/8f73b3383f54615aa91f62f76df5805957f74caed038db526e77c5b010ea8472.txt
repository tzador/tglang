# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.12)

# Create a project called "MyProject"
project(MyProject)

# Add an executable target called "my_executable" 
add_executable(my_executable main.cpp)

# Set the C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Add include directories
include_directories(include)

# Set the source files for the "my_executable" target
set(SOURCES src/file1.cpp src/file2.cpp)

# Add a library target called "my_library" using the source files
add_library(my_library STATIC ${SOURCES})

# Create a test target called "my_test" and link it with "my_library"
add_executable(my_test test.cpp)
target_link_libraries(my_test my_library)

# Specify the installation targets and directories
install(TARGETS my_executable my_library
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib/static)

# Define preprocessor definitions
add_definitions(-D DEBUG_MODE)

# Set compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Werror")

# Add a custom command to be run during the build process
add_custom_command(TARGET my_executable POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy_directory
                   ${CMAKE_SOURCE_DIR}/assets ${CMAKE_CURRENT_BINARY_DIR}/assets)
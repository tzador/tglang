# Create library target
add_library(myLibrary SHARED
    src/file1.cpp
    src/file2.cpp
    )

# Set compiler flags
target_compile_options(myLibrary PRIVATE
    -Wall
    -Werror
    -pedantic
    )

# Add include directories
target_include_directories(myLibrary PUBLIC
    include
    third_party/include
    )

# Link external dependencies
target_link_libraries(myLibrary PRIVATE
    external_dep1
    external_dep2
    )

# Add pre-processor definitions
target_compile_definitions(myLibrary PRIVATE
    DEBUG
    USE_FEATURE_A
    )

# Set library version
set_target_properties(myLibrary PROPERTIES
    VERSION 1.0.0
    SOVERSION 1
    )

# Set installation rules
install(TARGETS myLibrary
    DESTINATION lib
    EXPORT myLibraryTargets
    COMPONENT library
    )

# Install header files
install(DIRECTORY include/
    DESTINATION include/myLibrary
    COMPONENT devel
    PATTERN "private" EXCLUDE
    )

# Generate and install CMake configuration file
include(CMakePackageConfigHelpers)
configure_package_config_file(${CMAKE_SOURCE_DIR}/cmake/myLibraryConfig.cmake.in ${CMAKE_BINARY_DIR}/myLibraryConfig.cmake
    INSTALL_DESTINATION lib/cmake/myLibrary
    PATH_VARS CMAKE_INSTALL_INCLUDEDIR
    )
install(FILES ${CMAKE_BINARY_DIR}/myLibraryConfig.cmake
    DESTINATION lib/cmake/myLibrary
    COMPONENT devel
    )
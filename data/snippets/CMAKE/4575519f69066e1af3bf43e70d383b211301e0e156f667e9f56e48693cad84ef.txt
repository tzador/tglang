# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.14)

# Set the project name and version
project(my_project VERSION 1.0)

# Set the compiler to use
set(CMAKE_CXX_COMPILER g++)

# Set optional compiler flags
set (CMAKE_CXX_FLAGS "-Wall -Wextra")

# Create a library target
add_library(my_library SHARED
            src/my_class.cpp
            src/my_functions.cpp
            include/my_class.h
            include/my_functions.h)

# Add executable target and link with our library target
add_executable(my_executable main.cpp)
target_link_libraries(my_executable PRIVATE my_library)

# Locate external library dependencies
find_package(OpenCV REQUIRED)
find_package(Threads REQUIRED)

# Add compile definitions
target_compile_definitions(my_library PRIVATE ENABLE_TESTING)

# Specify include directories
target_include_directories(my_library PUBLIC
                           ${PROJECT_SOURCE_DIR}/include)

# Set compile options for specific source files
target_compile_options(my_library PRIVATE src/my_class.cpp -O3)

# Add a custom target
add_custom_target(build_docs COMMAND doxygen Doxyfile WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/docs)

# Create a test target and link with our library target
enable_testing()
add_executable(tests tests/main.cpp)
target_link_libraries(tests PRIVATE my_library ${OpenCV_LIBS} ${CMAKE_THREAD_LIBS_INIT})

# Add a test
add_test(NAME MyTest COMMAND tests)
#Specify minimum required version
cmake_minimum_required(VERSION 3.12)

#Create project with specified name
project(my_project)

#Set compiler flags
set(CMAKE_CXX_FLAGS "-std=c++11 -Wall")

#Set build type to Release
set(CMAKE_BUILD_TYPE Release)

#Find and link necessary libraries
find_library(LIB_1 lib1)
find_library(LIB_2 lib2)
find_library(LIB_3 lib3)
target_link_libraries(my_project ${LIB_1} ${LIB_2} ${LIB_3})

#Add source files to the project and create an executable with specified name
add_executable(my_exe main.cpp helper.cpp)

#Set install directory
set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install)

#Add installation rules
install(TARGETS my_exe
        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)

#Add custom target and create a command to run during build
add_custom_target(my_target
        COMMAND echo "Building my project"
        COMMENT "Running custom build command for my project")

#Set source directory
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)

#Set include directories
include_directories(${SOURCE_DIR})
include_directories(${SOURCE_DIR}/include)

#Add source files to the executable
target_sources(my_exe PRIVATE ${SOURCE_DIR}/main.cpp
                              ${SOURCE_DIR}/helper.cpp)
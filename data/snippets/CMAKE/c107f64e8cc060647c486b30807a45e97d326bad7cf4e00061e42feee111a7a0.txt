# Set project name
project(example_project)

# Define libraries to link against
set(LIBRARIES lib1 lib2)

# Create executable
add_executable(example_executable main.cpp)

# Link libraries to executable
target_link_libraries(example_executable ${LIBRARIES})

# Set compiler flags and options
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall")

# Specify include directories
include_directories(include)

# Set source directory
set(SRC_DIR src)

# Get all .cpp files in source directory
file(GLOB SOURCES
"${SRC_DIR}/*.cpp"
)

# Add sources to executable
target_sources(example_executable PRIVATE ${SOURCES})

# Define preprocessor macro
add_definitions(-DDEBUG)

# Set library output directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

# Set executable output directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

# Set install location
install(TARGETS example_executable DESTINATION bin)

# Install headers
install(DIRECTORY include/ DESTINATION include)

# Create documentation target
find_package(Doxygen REQUIRED)
if (DOXYGEN_FOUND)
  # Create doxygen configuration file
  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in
                 ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)

  # Add doxygen target to project
  add_custom_target(doc
                    ${DOXYGEN_EXECUTABLE}
                    ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
                    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
                    COMMENT "Generating API documentation with Doxygen"
                    VERBATIM)
endif (DOXYGEN_FOUND)
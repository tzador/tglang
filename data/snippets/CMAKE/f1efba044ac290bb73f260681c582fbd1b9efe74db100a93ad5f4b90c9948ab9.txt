# Set minimum required version
cmake_minimum_required(VERSION 3.10) 

# Create a project
project(MyProject VERSION 1.0.0)

# Add a library target
add_library(MyLibrary SHARED
  src/MyLibrary.cpp
  include/MyLibrary.hpp
)

# Set a target property
set_target_properties(MyLibrary PROPERTIES PUBLIC_HEADER include/MyLibrary.hpp)

# Include directories
include_directories(include)

# Set sources variable
set(SOURCES
  src/main.cpp
  src/Calculator.cpp
  src/Calculator.hpp
)

# Add executable target
add_executable(MyExecutable ${SOURCES})

# Link library to target
target_link_libraries(MyExecutable MyLibrary)

# Set compiler flag
target_compile_options(MyExecutable PRIVATE -Wall)

# Set output directory
set_target_properties(MyExecutable PROPERTIES RUNTIME_OUTPUT_DIRECTORY build)

# Install targets
install(TARGETS MyLibrary MyExecutable
  LIBRARY DESTINATION lib/
  PUBLIC_HEADER DESTINATION include/
)


# Create a configuration file
configure_file(config.h.in config.h)

# Add a custom command
add_custom_command(
  OUTPUT output.txt
  COMMAND MyExecutable
  ARGS arg1 arg2
  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/test.txt
  MAIN_DEPENDENCY test.txt
)

# Add a custom target
add_custom_target(MyCustomTarget ALL
  DEPENDS MyExecutable
)

# Add subdirectory
add_subdirectory(external)
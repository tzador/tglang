# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.5)

# Define project name
project(my_project)

# Set the source files for the project
set(SOURCES
    src/main.cpp
    src/helper_functions.cpp
    src/utility_classes.cpp
)

# Set the include directories for the project
include_directories(
    ${PROJECT_SOURCE_DIR}/include
)

# Set the compiler options
if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    set(CMAKE_CXX_FLAGS "-Wall -Wextra")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")
    set(CMAKE_CXX_FLAGS_RELEASE "-O3")
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")
    set(CMAKE_CXX_FLAGS_RELEASE "-O3")
endif()

# Add an executable target for the project
add_executable(my_project ${SOURCES})

# Set the link libraries for the project
target_link_libraries(my_project
    pthread
    dl
)

# Set the C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set the output path for the built binaries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin/")

# Install the built binaries to the specified directory
install(TARGETS my_project DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
# Set the project name to 'HelloWorld'
project(HelloWorld)

# Add an executable named 'hello' from the source file 'hello.cpp'
add_executable(hello hello.cpp)

# Set the C++ standard to 11
target_compile_features(hello PRIVATE cxx_std_11)

# Find the required packages
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)

# Set the include directories for the required packages
target_include_directories(hello PRIVATE ${OPENGL_INCLUDE_DIR} ${GLEW_INCLUDE_DIRS})

# Link the required packages to the executable
target_link_libraries(hello ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES})

# Set the output directory to the 'bin' folder
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

# Set compiler flags for the target executable
target_compile_options(hello PRIVATE -Wall -Wextra -pedantic)

# Set linker flags for the target executable
target_link_options(hello PRIVATE -static-libgcc -static-libstdc++)

# Add a custom command to copy a file to the output directory
add_custom_command(TARGET hello POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/assets/shader.vert ${CMAKE_SOURCE_DIR}/bin)

# Add a custom target to run a shell command
add_custom_target(copy_runtime_files COMMAND cp -r ${CMAKE_SOURCE_DIR}/assets ${CMAKE_SOURCE_DIR}/bin)
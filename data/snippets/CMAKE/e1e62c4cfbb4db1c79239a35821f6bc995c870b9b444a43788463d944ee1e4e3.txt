# Set required cmake version
cmake_minimum_required(VERSION 3.14.4)

# Define project name and version
project(myProject VERSION 1.0)

# Set C++ standard
set(CMAKE_CXX_STANDARD 14)

# Add a custom target
add_custom_target(exampleTarget)

# Add a custom command to the target
add_custom_command(TARGET exampleTarget
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/myFile.cpp ${CMAKE_BINARY_DIR}/myFile.cpp
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    COMMENT "Copying myFile.cpp to build directory"
)

# Create a library target
add_library(myLibrary SHARED myFile.cpp)

# Add properties to the library target
set_target_properties(myLibrary
    PROPERTIES
        VERSION ${PROJECT_VERSION}
        SOVERSION 1.0
)

# Add include directories for the library target
target_include_directories(myLibrary PUBLIC ${CMAKE_SOURCE_DIR}/include)

# Add executable target
add_executable(myExecutable main.cpp)

# Link library target to executable target
target_link_libraries(myExecutable PRIVATE myLibrary)

# Add install rules
install(TARGETS myExecutable DESTINATION bin)
install(TARGETS myLibrary LIBRARY DESTINATION lib)

# Add test target
enable_testing()
add_executable(tests test.cpp)

# Add test to the test target
add_test(NAME myTest COMMAND tests)
    
# Define a macro
macro(message_print)
    message("Hello, world!")
endmacro()

# Call the macro
message_print()
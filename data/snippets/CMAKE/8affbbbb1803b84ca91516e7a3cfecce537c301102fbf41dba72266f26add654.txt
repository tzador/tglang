# Set the minimum required CMake version
cmake_minimum_required(VERSION 3.12)

# Create a project called "MyProject"
project(MyProject)

# Set the C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Add a subdirectory for external libraries
add_subdirectory(external)

# Set the source files for the project
set(SOURCES 
  src/main.cpp 
  src/helpers.cpp 
  src/classes/class1.cpp 
  src/classes/class2.cpp 
  src/modules/module1.cpp 
  src/modules/module2.cpp
  )

# Set the include directories for the project
include_directories(
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${CMAKE_CURRENT_SOURCE_DIR}/external/include
  )

# Create the executable for the project
add_executable(MyProject ${SOURCES})

# Link the external libraries to the executable
target_link_libraries(MyProject PRIVATE external_library)

# Set the output directory for the executable
set_target_properties(MyProject PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add compiler flags for the project
target_compile_options(MyProject PRIVATE -Wall -Wextra -Wpedantic)

# Install the project
install(TARGETS MyProject DESTINATION ${CMAKE_INSTALL_PREFIX})

# Set CTest for testing
enable_testing()

# Create a test for the project
add_test(NAME MyTest COMMAND MyProject)

# Specify the test's expected output
set_tests_properties(MyTest PROPERTIES PASS_REGULAR_EXPRESSION "Test passed")
# This is a complex CMAKE code snippet with annotations

# Set the minimum required CMAKE version
cmake_minimum_required(VERSION 3.15)

# Create a project with the name "my_project"
project(my_project)

# Add a subdirectory named "lib" to the project
add_subdirectory(lib)

# Set the source files for the project
set(SOURCES main.cpp utils.cpp)

# Add an executable named "my_project" with the specified sources
add_executable(my_project ${SOURCES})

# Link the "my_project" executable with the "my_lib" library
target_link_libraries(my_project my_lib)

# Set the include directories for the project
target_include_directories(my_project PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include")

# Set compiler flags for the release and debug builds
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -O0")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")

# Set the output directory for the built executable to "bin"
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

# Add a custom post-build command to copy a file into the output directory
add_custom_command(TARGET my_project POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/data/data.txt" "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/data.txt")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -Werror -pedantic") # Sets compiler flags to use C++11 standard, enable all warnings including extra warnings, and treat warnings as errors
cmake_minimum_required(VERSION 3.10) # Sets minimum required version of CMake
project(MyProject) # Sets project name as "MyProject"

set(SOURCES src/main.cpp src/other.cpp) # Sets source files for the project

add_executable(MyProject ${SOURCES}) # Creates executable target with name "MyProject" and uses the specified source files

target_include_directories(MyProject PUBLIC include) # Specifies the "include" directory as a public include directory for the target

find_package(Boost REQUIRED) # Searches for Boost library

if(Boost_FOUND) # Checks if Boost library is found
    target_include_directories(MyProject PUBLIC ${Boost_INCLUDE_DIRS}) # Adds Boost include directories to the target
    target_link_libraries(MyProject ${Boost_LIBRARIES}) # Links Boost libraries to the target
endif()

# Adds a custom target called "docs" that generates Doxygen documentation
add_custom_target(docs
    COMMAND doxygen Doxyfile
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    COMMENT "Generating documentation with Doxygen"
    VERBATIM
)

install(TARGETS MyProject DESTINATION bin) # Installs the executable target to "bin" directory

# Adds a testing target using Google Test library
add_executable(Test MyProjectTests.cpp ${SOURCES})
target_include_directories(Test PRIVATE ${gtest_SOURCE_DIR}/include)
target_link_libraries(Test gtest gtest_main pthread)
add_test(NAME Test COMMAND Test)
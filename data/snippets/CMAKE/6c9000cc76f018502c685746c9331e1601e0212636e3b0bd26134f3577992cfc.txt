# Define a new variable called "SOURCES" that contains a list of source files
set(SOURCES
    src/main.cpp
    src/utils.cpp
    src/myclass.cpp
)

# Create a new executable called "myprogram" from the source files defined in "SOURCES"
add_executable(myprogram ${SOURCES})

# Set the compiler flags for the "myprogram" executable to include debug symbols and optimize for performance
target_compile_options(myprogram PRIVATE -g -O3)

# Add a custom command to compile a resource file using a script called "compile_resources.sh" and add it to the build process
add_custom_command(
    TARGET myprogram POST_BUILD
    COMMAND ${CMAKE_SOURCE_DIR}/scripts/compile_resources.sh ${CMAKE_CURRENT_BINARY_DIR}/resources/ ${CMAKE_CURRENT_SOURCE_DIR}/assets/
)

# Include the "include" directory in the build process, allowing for any header files to be found
target_include_directories(myprogram PUBLIC include)

# Link the "myprogram" executable to any necessary libraries, such as "libmath" and "libgraphics"
target_link_libraries(myprogram libmath libgraphics)

# Set the output directory for the compiled executable to be in the "bin" folder
set_target_properties(myprogram PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)

# Add a test for the "myprogram" executable to ensure it runs without errors
add_test(NAME MyProgramTest COMMAND myprogram)
# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.12.4)

# Define a project with name "MyProject"
project(MyProject)

# Set the CMake build type to Release
set(CMAKE_BUILD_TYPE "Release")

# Set the C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Add a subdirectory for external libraries
add_subdirectory(external)

# Include headers from "include" directory
include_directories(include)

# Add source files for the executable "MyProject"
file(GLOB SRC_FILES
	src/*.cpp
)

# Create an executable with the source files
add_executable(MyProject ${SRC_FILES})

# Link the executable with external libraries
target_link_libraries(MyProject PUBLIC external_library1 external_library2)

# Create a variable with custom compiler flags
set(MY_FLAGS "-Wall -Wextra")

# Add the custom compiler flags to the executable
target_compile_options(MyProject PUBLIC ${MY_FLAGS})

# Create a custom target to run a command before the build
add_custom_target(run_command ALL
	COMMAND echo "Running my custom command"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

# Set a property for the executable "MyProject"
set_property(TARGET MyProject PROPERTY APPEND_STRING PROPERTY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Install the executable to the "bin" directory
install(TARGETS MyProject DESTINATION bin)
# Set up project and compiler
cmake_minimum_required(VERSION 3.10)
project(my_project CXX)
set(CMAKE_CXX_STANDARD 11) 

# Add source files
file(GLOB_RECURSE SOURCES src/*.cpp)

# Set up compile options
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic")

# Add external libraries
include_directories(${CMAKE_SOURCE_DIR}/external/include)
link_directories(${CMAKE_SOURCE_DIR}/external/lib)

# Set output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)

# Create executable
add_executable(my_executable ${SOURCES})

# Link libraries to executable
target_link_libraries(my_executable library1 library2 library3)

# Install executable and headers
install(TARGETS my_executable DESTINATION bin)
install(FILES include/library1.h DESTINATION include)
install(FILES include/library2.h DESTINATION include)
install(FILES include/library3.h DESTINATION include)

# Create test executable
add_executable(test_executable test/test_main.cpp)
target_link_libraries(test_executable library1 library2 library3)
add_test(NAME my_test COMMAND test_executable)

# Generate documentation
find_package(Doxygen REQUIRED)
set(DOXYGEN_CONFIG ${CMAKE_SOURCE_DIR}/Doxyfile)
if(DOXYGEN_FOUND)
    message("Doxygen found, generating documentation")
    add_custom_target(doc COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_CONFIG})
else()
    message(SEND_ERROR "Doxygen not found, cannot generate documentation")
endif()
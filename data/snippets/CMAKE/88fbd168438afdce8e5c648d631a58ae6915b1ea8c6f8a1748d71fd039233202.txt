cmake_minimum_required(VERSION 3.5) # set minimum required version for cmake
project(MyProject VERSION 1.0 LANGUAGES CXX) # define project name and version
set(CMAKE_CXX_STANDARD 11) # set C++ standard to use
set(CMAKE_CXX_STANDARD_REQUIRED ON) # enforce C++ standard
set(CMAKE_CXX_EXTENSIONS OFF) # disable compiler-specific extensions
include(GNUInstallDirs) # include GNUInstallDirs module for installation directories
set(SOURCES src/main.cpp) # set source files for the project
set(HEADERS include/myheader.h) # set header files for the project
add_executable(MyProject ${SOURCES} ${HEADERS}) # create executable target for project
target_include_directories(MyProject PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include> # add include directories for build 
    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>) # add include directories for installation
set_target_properties(MyProject PROPERTIES
    VERSION ${PROJECT_VERSION} # set target properties like version 
    SOVERSION 1.0 # set target properties like shared library version
    PUBLIC_HEADER ${HEADERS}) # specify public header files for installation 
install(TARGETS MyProject # install target executable 
    EXPORT MyProjectTargets # export target properties 
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} # specify installation directory for libraries 
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} # specify installation directory for archives 
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} # specify installation directory for executables 
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/MyProject) # specify installation directory for public headers 
include(CMakePackageConfigHelpers) # include CMakePackageConfigHelpers module for creating configuration files
configure_package_config_file(
    MyProjectConfig.cmake.in # template configuration file 
    "${CMAKE_CURRENT_BINARY_DIR}/MyProjectConfig.cmake" # output configuration file 
    INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/MyProject # specify installation directory for configuration file 
)
install(EXPORT MyProjectTargets # export target properties for external usage 
    FILE MyProjectTargets.cmake # name of export file 
    NAMESPACE MyProject:: # specify namespace for targets 
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/MyProject) # specify installation directory for export file
install(FILES "${CMAKE_CURRENT_BINARY_DIR}/MyProjectConfig.cmake" # specify configuration file for installation
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/MyProject) # specify installation directory for configuration file
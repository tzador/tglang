# Set minimum cmake version
cmake_minimum_required(VERSION 3.12)

# Define project name
project(MyProject LANGUAGES CXX)

# Set compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -g")

# Add include directories
include_directories(
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${CMAKE_CURRENT_SOURCE_DIR}/include/external
)

# Find external libraries
find_library(LIB1_LIB lib1)
find_path(LIB1_INCLUDE_DIR lib1.h)
find_library(LIB2_LIB lib2)
find_path(LIB2_INCLUDE_DIR lib2.h)

# Add executable target
add_executable(my_exe
  src/main.cpp
  src/foo.cpp
)

# Link libraries to target
target_link_libraries(my_exe
  PUBLIC
    ${LIB1_LIB}
    ${LIB2_LIB}
)

# Set target properties
set_target_properties(my_exe
  PROPERTIES
    INCLUDE_DIRECTORIES "${LIB1_INCLUDE_DIR};${LIB2_INCLUDE_DIR}"
)

# Set install targets
install(TARGETS my_exe DESTINATION bin)
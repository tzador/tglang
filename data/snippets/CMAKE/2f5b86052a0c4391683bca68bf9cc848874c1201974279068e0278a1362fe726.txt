# Set the minimum required CMake version
cmake_minimum_required(VERSION 3.12)

# Set the project name and version
project(MyProject VERSION 1.0.0)

# Set the C++ standard to use
set(CMAKE_CXX_STANDARD 14)

# List all the source files for the project
set(SOURCES
    src/main.cpp
    src/helper.cpp
    src/file_manager.cpp
)

# List all the header files for the project
set(HEADERS
    include/helper.h
    include/file_manager.h
)

# Create an executable target called "MyProject" which will be compiled from the specified source and header files
add_executable(MyProject ${SOURCES} ${HEADERS})

# Add a custom target called "clean" to clean up the build files
add_custom_target(clean
    COMMAND ${CMAKE_COMMAND} -E remove_directory ${CMAKE_BINARY_DIR}/bin
)

# Set the output directory for the build files
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set the include directories for the project
target_include_directories(MyProject PUBLIC
    ${PROJECT_SOURCE_DIR}/include
)

# Add compiler flags for debug and release builds
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(MyProject PUBLIC -Wall -Wextra -pedantic -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(MyProject PUBLIC -O3)
endif()

# Set the link libraries for the project
target_link_libraries(MyProject
    # Example linked libraries:
    # OpenGL::OpenGL
    # GLEW::GLEW
)

# Set the installation directory for the executable
install(TARGETS MyProject DESTINATION bin)
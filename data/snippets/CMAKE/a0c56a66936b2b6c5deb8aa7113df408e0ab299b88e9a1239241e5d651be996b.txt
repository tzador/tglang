# Define a variable for the project name
set(PROJECT_NAME MyProject)

# Set the minimum version of CMake required
cmake_minimum_required(VERSION 3.5)

# Define the project and its name
project(${PROJECT_NAME})

# Add a library target
add_library(MyLibrary
  src/MyLibrary.cpp
)

# Set the include directories for the library
target_include_directories(MyLibrary
  PUBLIC
    $<BUILD_INTERFACE:${MyProject_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

# Add an executable target
add_executable(MyExecutable
  src/main.cpp
)

# Link the library to the executable
target_link_libraries(MyExecutable MyLibrary)

# Set the installation destination for the executable
install(TARGETS MyExecutable DESTINATION bin)

# Create a configuration file for the library
file(GENERATE
  OUTPUT "${MyProject_BINARY_DIR}/MyLibraryConfig.cmake"
  CONTENT
    "include(CMakeFindDependencyMacro)\n"
    "find_dependency(Boost)\n"
    "set(MyProject_INCLUDE_DIRS ${MyProject_SOURCE_DIR}/include)\n"
    "configure_file(${MyProject_SOURCE_DIR}/include/MyLibraryConfig.h.in ${MyProject_BINARY_DIR}/MyLibraryConfig.h)\n"
    "include_directories(${MyProject_INCLUDE_DIRS})\n"
    "add_library(MyLibrary SHARED ${MyProject_SOURCES})\n"
    "target_link_libraries(MyLibrary Boost::Boost)\n"
)

# Install the library and configuration file
install(TARGETS MyLibrary EXPORT MyLibraryTargets DESTINATION lib)
install(FILES "${MyProject_BINARY_DIR}/MyLibraryConfig.cmake" DESTINATION lib/cmake/MyProject)
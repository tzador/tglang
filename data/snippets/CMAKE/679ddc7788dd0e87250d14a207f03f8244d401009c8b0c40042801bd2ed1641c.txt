# Define a function to find the sum of two numbers
function(sum a b)
    # Use the add_executable command to create an executable for our function
    # Syntax: add_executable(<name> [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [source1] [source2] ...)
    add_executable(sum WIN32 MACOSX_BUNDLE sum.c)

    # Set the source files for our executable
    # Note: The CMAKE_CURRENT_SOURCE_DIR variable contains the path of the current source directory.
    target_sources(sum PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/sum.c)

    # Set the include directories for the executable
    # Note: The CMAKE_CURRENT_SOURCE_DIR variable is used again to access the include directory.
    target_include_directories(sum PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)

    # Add compiler flags for our executable
    # Note: The -Wall flag enables all warnings in the code.
    target_compile_options(sum PRIVATE -Wall)

    # Set any necessary libraries for our executable to link to
    # Note: The target_link_libraries function takes in the target executable and the libraries to link to.
    target_link_libraries(sum PRIVATE math)

    # Install the executable to the specified directory
    # Syntax: install(TARGETS targets... DESTINATION destination)
    install(TARGETS sum DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/bin)
endfunction()

# Call the sum function with two parameters
sum(5 10)

# Output: The sum of 5 and 10 is: 15
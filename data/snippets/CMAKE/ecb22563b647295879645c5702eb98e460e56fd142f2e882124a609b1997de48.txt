# Sets the minimum required version of CMake to 3.15.
# This is a comment in CMake.
# `cmake_minimum_required` is a built-in CMake function that sets the minimum required version.
cmake_minimum_required(VERSION 3.15 FATAL_ERROR)

# Sets the name of the project.
# Project names can contain any characters, but quotes are needed if names contain spaces.
# `project` is a built-in CMake function that sets the project name.
project("My Project" LANGUAGES CXX)

# Sets the compiler flags for the project.
# Flags are not set by default in CMake.
# `set` is a built-in CMake function that sets variables.
set(CMAKE_CXX_FLAGS "-Wall -Werror")

# Sets the list of source files for the project.
# Source files can be added by using the `file` function.
# `add_executable` is a built-in CMake function that adds an executable target to the project.
# Source files can also be added directly to this function.
add_executable(${PROJECT_NAME} main.cpp file1.cpp file2.cpp)

# Sets the include directories for the project.
# Include directories are needed to access header files.
# `include_directories` is a built-in CMake function that sets include directories for a target.
include_directories(include)

# Sets the link libraries for the project.
# Link libraries are needed to link against external libraries.
# `target_link_libraries` is a built-in CMake function that links a target to one or more libraries.
target_link_libraries(${PROJECT_NAME} library1 library2)

# Adds a subdirectory to the project.
# This allows for modular code and can be used to add external libraries.
# `add_subdirectory` is a built-in CMake function that adds a subdirectory to the project.
add_subdirectory(external_library)

# Configures the project to use C++11 standard.
# C++ standard can be set by using the `set` function and the `CMAKE_CXX_STANDARD` variable.
set(CMAKE_CXX_STANDARD 11)

# Allows for installation of the project.
# Installation is not enabled by default in CMake.
# `install` is a built-in CMake function that sets up installation rules.
install(TARGETS ${PROJECT_NAME} DESTINATION bin)
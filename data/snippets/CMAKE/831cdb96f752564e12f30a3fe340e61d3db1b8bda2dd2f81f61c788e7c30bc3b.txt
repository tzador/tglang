project(my_project) # sets the name of the project

cmake_minimum_required(VERSION 3.10) # sets the minimum version required

set(CMAKE_CXX_STANDARD 11) # sets the C++ standard to use

# sets the source files for the project
set(SOURCES
    main.cpp
    helper.cpp
    utils.cpp
)

# creates an executable target named 'my_project'
add_executable(my_project ${SOURCES}) 

# creates a library target named 'helper_lib'
add_library(helper_lib STATIC helper.cpp)

# creates an alias target for 'helper_lib'
add_library(my_project::helper_lib ALIAS helper_lib)

# adds 'include' directory to the list of directories to be searched for includes
target_include_directories(my_project PUBLIC include)

# links 'helper_lib' with the 'my_project' target
target_link_libraries(my_project PRIVATE helper_lib)

# sets compiler flags for the 'my_project' target
target_compile_options(my_project PRIVATE -Wall -Wextra -Wunused -pedantic -Werror)

# sets custom compiler option for debugging
target_compile_options(my_project PRIVATE -g)

# enables testing for the project
enable_testing() 

# adds test subdirectory to the project
add_subdirectory(test) 

# adds 'test' as a dependency for the 'my_project' target
add_dependencies(my_project test) 

# defines a test called 'helper_test' that runs the 'helper_test.cpp' file
add_test(NAME helper_test COMMAND hello_test)

# sets the timeout for tests
set_tests_properties(helper_test PROPERTIES TIMEOUT 5)

# defines a macro for creating more tests easily
macro(create_test test_name test_file)
    add_test(NAME ${test_name} COMMAND ${test_file})
    set_tests_properties(${test_name} PROPERTIES TIMEOUT 5)
endmacro(create_test)

# adds a new test using the macro
create_test(some_test some_test.cpp)
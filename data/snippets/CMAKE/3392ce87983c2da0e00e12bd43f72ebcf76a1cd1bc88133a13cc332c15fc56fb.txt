# Create a CMake project
project(MyProj VERSION 1.0.0 LANGUAGES CXX)

# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set source files
set(SOURCES
    src/main.cpp
    src/utils.cpp
)

# Create an executable from the source files
add_executable(MyApp ${SOURCES})

# Specify C++ version
target_compile_features(MyApp PRIVATE cxx_std_11)

# Set include directories
target_include_directories(MyApp
    PUBLIC
        include
)

# Set link libraries
target_link_libraries(MyApp
    PRIVATE
        MyLib
)

# Set compiler options
target_compile_options(MyApp
    PRIVATE
        -Wall
        -Wextra
)

# Set install directory
set(CMAKE_INSTALL_PREFIX "/usr/local")

# Install executable and libraries
install(TARGETS MyApp
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)

# Install headers
install(DIRECTORY include/ DESTINATION include)

# Create a package config file for MyLib
include(CMakePackageConfigHelpers)

configure_package_config_file(
    "MyLibConfig.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/MyLibConfig.cmake"
    INSTALL_DESTINATION lib/cmake/MyLib
)

# Install the package config file
install(FILES "${CMAKE_CURRENT_BINARY_DIR}/MyLibConfig.cmake"
    DESTINATION lib/cmake/MyLib
)

# Add a custom command to run before build
add_custom_command(TARGET MyApp PRE_BUILD
    COMMAND echo "Running pre-build command..."
)
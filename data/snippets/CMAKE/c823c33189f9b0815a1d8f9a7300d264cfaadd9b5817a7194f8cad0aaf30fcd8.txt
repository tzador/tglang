# Declare variables
set(SOURCE "main.cpp")
set(HEADER "Foo.h")
set(CMAKE_CXX_FLAGS "-Wall") # Set compiler flags
set(CMAKE_CXX_STANDARD 11) # Set C++ standard

# Set project name and language
project(FooProject CXX)

# Include header files directory
include_directories(${HEADER})

# Create an executable target
add_executable(foo ${SOURCE})

# Link necessary libraries and dependencies
target_link_libraries(foo ncurses)
target_link_libraries(foo pthread)
target_link_libraries(foo boost)

# Add custom target to generate documentation with Doxygen
find_package(Doxygen
  REQUIRED dot
  OPTIONAL_COMPONENTS mscgen dia)
if (DOXYGEN_FOUND)
  # Set output directory for generated documentation
  set(DOXYGEN_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/docs")

  # Configure Doxygen with project-specific settings
  set(DOXYGEN_PROJECT_NAME "FooProject")
  set(DOXYGEN_PROJECT_BRIEF "A C++ project using CMake")
  set(DOXYGEN_EXCLUDE_PATTERNS "*/docs/*")
  set(DOXYGEN_USE_MDFILE_AS_MAINPAGE "README.md")
  set(DOXYGEN_USE_MATHJAX "YES")

  # Generate Doxygen documentation
  doxygen_add_docs(docs ${CMAKE_CURRENT_SOURCE_DIR} COMMENT "Generating documentation")
endif()

# Create a custom target to run the executable
add_custom_target(foo-run
    COMMAND foo
    DEPENDS foo
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)
cmake_minimum_required(VERSION 3.10) ## Specifies the minimum version of CMake required for this project
project(my_project) ## Sets the project name

# Sets the C++ standard to C++ 17
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

# Sets the compile options for the project
add_compile_options(-Wall -Wextra -pedantic)

# Adds a new library target called "my_library" and
# specifies that it will be built from the source files "my_library.cpp" and "my_library.h"
add_library(my_library my_library.cpp my_library.h)

# Specifies that the "my_library" target should be linked with the standard library
target_link_libraries(my_library PRIVATE stdc++)

# Adds an executable target called "my_executable" and
# specifies that it will be built from the source file "main.cpp"
add_executable(my_executable main.cpp)

# Links the "my_executable" target with the "my_library" target,
# meaning that the library will be included in the executable
target_link_libraries(my_executable PRIVATE my_library)

# Specifies the installation rules for the "my_executable" and "my_library" targets
# This will ensure that they are properly installed when the project is built
install(TARGETS my_executable my_library DESTINATION bin) 

# Adds a custom command to build a documentation file using Doxygen
add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/docs/html/index.html
                   COMMAND doxygen ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile
                   COMMENT "Generating documentation using Doxygen")
# Adds a build rule so that the documentation is generated before the build
add_custom_target(docs DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/docs/html/index.html)

# Creates an "install" target that will build the documentation and install it to the "doc" directory
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/docs/html DESTINATION doc)
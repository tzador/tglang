# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.15 FATAL_ERROR)

# Create project
project(MyProject VERSION 1.0.0 LANGUAGES CXX)

# Set project output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib")

# Set project source files
set(SOURCES
    src/main.cpp
    src/Utils.cpp
    src/Algorithm.cpp
)

# Set project header files
set(HEADERS
    include/Utils.h
    include/Algorithm.h
)

# Create executable
add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS})

# Add include directories
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)

# Add subdirectory for external libraries
add_subdirectory(external)

# Link external libraries to project
target_link_libraries(${PROJECT_NAME} PRIVATE ExternalLib1 ExternalLib2)

# Set compiler options
target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Werror -pedantic)

# Set release and debug flags
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Add installation steps
install(TARGETS ${PROJECT_NAME}
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
)
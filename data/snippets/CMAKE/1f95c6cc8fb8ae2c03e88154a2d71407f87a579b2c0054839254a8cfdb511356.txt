# Set minimum required version of CMake to 3.0
cmake_minimum_required(VERSION 3.0)

# Create project with name "MyProject"
project(MyProject)

# Add a build target with name "my_target" and specify source files
add_executable(my_target main.cpp utils.hpp)

# Set C++ standard to C++11 for the build target "my_target"
target_compile_features(my_target PUBLIC cxx_std_11)

# Find and link external library "boost" to the build target
find_package(Boost REQUIRED)
target_link_libraries(my_target PRIVATE Boost::boost)

# Specify include directories for the build target "my_target"
target_include_directories(my_target PUBLIC ${PROJECT_SOURCE_DIR}/include ${Boost_INCLUDE_DIRS})

# Add a custom compile flag "-Wall" for the build target "my_target"
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(my_target PRIVATE -Wall)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    target_compile_options(my_target PRIVATE -Wall)
endif()

# Enable testing for the project
enable_testing()

# Add test executable with name "my_test" and specify test source files
add_executable(my_test test.cpp)

# Link the test executable to "my_target" and "gtest" testing library
target_link_libraries(my_test PRIVATE my_target gtest gtest_main)

# Add a test with name "my_test1" to run the test executable "my_test"
add_test(NAME my_test1 COMMAND my_test)

# Add a custom target "check" to run all the tests added with "add_test" command
add_custom_target(check COMMAND ctest -VV)

# Set installation directory for the build target "my_target"
install(TARGETS my_target DESTINATION bin)
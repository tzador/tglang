# CMakeLists.txt for project
cmake_minimum_required(VERSION 3.10)

# Set project name and version
project(my_project VERSION 1.0)

# Set C++ standard and compiler flags
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Werror -pedantic")

# Add executable target
add_executable(my_project main.cpp)

# Add different build types
set(BUILD_TYPES "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
foreach(type ${BUILD_TYPES})
    string(TOUPPER ${type} type_upper)
    set(CMAKE_BUILD_TYPE ${type})
    # add additional flags for Debug build type
    if(${type} STREQUAL "Debug")
        set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")
    endif()
    message(STATUS "Configured build type: ${type} (uppercase: ${type_upper})")
endforeach()

# Add libraries and include directories
# Commented out libraries are available on some systems and not others
# Change paths accordingly or remove these lines if not needed
# find_library(EXAMPLE_LIBRARY libexample.a)
# find_library(OTHER_LIBRARY libother.a)
# if(EXAMPLE_LIBRARY)
#     target_link_libraries(my_project PUBLIC ${EXAMPLE_LIBRARY})
# endif()
# if(OTHER_LIBRARY)
#     target_link_libraries(my_project PUBLIC ${OTHER_LIBRARY})
# endif()
#include_directories(/usr/include/example)

# Add subdirectories containing additional targets and CMakeLists.txt files
add_subdirectory(my_library)
add_subdirectory(my_tests)
# Set minimum version required
cmake_minimum_required(VERSION 3.9)
 
# Set project name
project(CMake_Project)
 
# Add a library target
add_library(my_library ${SOURCES})
 
# Include header files
include_directories(include)
 
# Define output directory for compiled executable
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin)
 
# Add subdirectories
add_subdirectory(tests)
 
# Add an executable target
add_executable(my_executable main.cpp)
 
# Link the library to the executable
target_link_libraries(my_executable my_library)
 
# Specify compile options
target_compile_options(my_executable PRIVATE -Wall -Wextra -Werror)
 
# Add compiler flags
set(CMAKE_CXX_FLAGS "-std=c++11 -O3")
 
# Set install target
install(TARGETS my_executable EXPORT my_executableTargets
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
 
# Set export target
install(EXPORT my_executableTargets
        FILE my_executableTargets.cmake
        DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/my_executable)
 
# Add test target
add_test(NAME my_test COMMAND my_executable)
 
# Create source groups for better organization
source_group("Source Files" REGULAR_EXPRESSION "src/*")
source_group("Header Files" REGULAR_EXPRESSION "include/*")
# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Create project that supports C++
project(MyProject LANGUAGES CXX)

# Set C++ standard to C++11
set(CMAKE_CXX_STANDARD 11)

# Add a subdirectory for external libraries
add_subdirectory(external)

# Create main executable and add source files
add_executable(MyExecutable main.cpp)

# Link external libraries to main executable
target_link_libraries(MyExecutable PUBLIC external_lib1 external_lib2)

# Add compile options for main executable
target_compile_options(MyExecutable PRIVATE -Wall -Wextra -pedantic)

# Enable additional compiler warnings for Debug build
if (CMAKE_BUILD_TYPE MATCHES "Debug")
    target_compile_options(MyExecutable PRIVATE -Wconversion -Wsign-conversion)
endif()

# Define custom compilation options for specific build types
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g")

# Specify output directory for build artifacts
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
# This CMakeLists file will generate a project executable
# and link it with necessary libraries
# It will also create a static library from source files in /src directory
# and link it to the executable

# Minimum CMake version required
cmake_minimum_required(VERSION 3.10)

# Set project name
project(MyProject)

# Set C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Create a static library from source files in /src directory
add_library(MyLibrary STATIC src/File1.cpp src/File2.cpp)

# Add include directories to the library
target_include_directories(MyLibrary PUBLIC include)

# Set compiler flags for the library
target_compile_options(MyLibrary PUBLIC -Wall -Werror)

# Create an executable from source files in /app directory
add_executable(MyExecutable app/Main.cpp)

# Link the library to the executable
target_link_libraries(MyExecutable PRIVATE MyLibrary)

# Include CMakeUnit for testing
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/CMakeUnit/CMakeUnit.cmake)

# Create a test target and link it with the library
cmake_unit_configure_test(PREFIX MyLibrary
                          SOURCE_FILES tests/Test1.cpp tests/Test2.cpp
                          LINK_LIBRARIES MyLibrary)

# Set the target properties and add it to the testing framework
cmake_unit_register_test(MyLibrary
                         LABEL "Library tests"
                         TIMEOUT 30
                         REQUIRE_FEATURES C++17
                         NUM_MPI_PROCS 4)
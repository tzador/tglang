cmake_minimum_required(VERSION 3.10) #Sets the minimum version required

#Define a project
project(MyProject VERSION 1.0 DESCRIPTION "My Project" LANGUAGES CXX)

#Define variables for project sources
set(SRC_FILES src/main.cpp src/helper.cpp)

#Add executable target with source files
add_executable(my_project ${SRC_FILES})

#Set target properties
set_target_properties(my_project PROPERTIES
    CXX_STANDARD 11 #Set C++ version 11
    CXX_STANDARD_REQUIRED YES #Enforce the use of the required C++ version
    CXX_EXTENSIONS NO #Do not allow compiler extensions
)

#Set project-specific compiler flags
target_compile_options(my_project PRIVATE
    -Wall #Turn on all warnings
    -Werror #Treat warnings as errors
)

#Add external library dependencies
find_library(LIBRARY_A library_a)
find_library(LIBRARY_B library_b)

#Set library dependencies for executable target
target_link_libraries(my_project PUBLIC ${LIBRARY_A} ${LIBRARY_B})

#Set installation directory for the executable
install(TARGETS my_project
    RUNTIME DESTINATION bin #Install to bin directory
)

#Generate configuration file for library
configure_file(config.h.in config.h) #Config.h.in is a template file

#Add include directory so that the generated config file is included during compilation
target_include_directories(my_project PUBLIC ${CMAKE_CURRENT_BINARY_DIR})
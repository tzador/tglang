# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Define the project name
project(my_project)

# Set a variable for the source files of the project
set(SOURCES 
    main.cpp
    foo.cpp
    bar.cpp
)

# Add header files to the project
include_directories(include)

# Set output directory for executable
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add a library target to the project
add_library(mylib STATIC ${SOURCES})

# Set compiler flags for the library
target_compile_options(mylib PRIVATE -Wall -Wextra)

# Add an executable target to the project
add_executable(my_executable main.cpp)

# Link the library to the executable
target_link_libraries(my_executable mylib)

# Add a custom target to the project
add_custom_target(my_target ALL
                   COMMAND ${CMAKE_COMMAND} -E copy_directory
                       ${CMAKE_SOURCE_DIR}/data ${CMAKE_BINARY_DIR}/data)

# Set a variable for compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

# Set install directory
set(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/install)

# Install targets
install(TARGETS my_executable DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
install(FILES ${CMAKE_SOURCE_DIR}/LICENSE DESTINATION ${CMAKE_INSTALL_PREFIX}/licenses)
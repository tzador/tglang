# Define project name
project(turtle_graphics)

# Set minimum required CMake version
cmake_minimum_required(VERSION 3.6)

# Add executable target
add_executable(turtle_graphics main.cpp)

# Set C++ language standard
set(CMAKE_CXX_STANDARD 11)

# Find required libraries
find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)

# Add necessary include directories
include_directories(${OPENGL_INCLUDE_DIRS})
include_directories(${GLUT_INCLUDE_DIRS})

# Add necessary linking directories
link_directories(${OPENGL_LIBRARY_DIRS})
link_directories(${GLUT_LIBRARY_DIRS})

# Link required libraries to the executable target
target_link_libraries(turtle_graphics ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES})

# Set compiler flags for different build types
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Add a custom command to copy resources to build directory
add_custom_command(TARGET turtle_graphics POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    "${CMAKE_CURRENT_SOURCE_DIR}/resources" "${CMAKE_CURRENT_BINARY_DIR}/resources")

# Define a macro for setting source group
macro(set_source_group target source_group_name)
    foreach(FILE ${ARGN})
        # Remove file extension
        get_filename_component(PARENT_DIR "${FILE}" DIRECTORY)
        string(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}" "" GROUP "${PARENT_DIR}")
        string(REPLACE "/" "\\" GROUP "${GROUP}")
        if("${GROUP}" STREQUAL "")
            set(GROUP "\\")
        endif()
        source_group("${source_group_name}\\${GROUP}" FILES "${FILE}")
    endforeach()
endmacro()

# Use the macro to set source groups for source files
set_source_group(turtle_graphics "Source Files" main.cpp)
set_source_group(turtle_graphics "Source Files\\Shapes" shapes/circle.cpp shapes/square.cpp)
set_source_group(turtle_graphics "Source Files\\Turtle" turtle/graphics.cpp turtle/inputs.cpp turtle/logic.cpp)

# Define custom preprocessor macros
target_compile_definitions(turtle_graphics PRIVATE -DUSE_OPENGL -D_USE_MATH_DEFINES)
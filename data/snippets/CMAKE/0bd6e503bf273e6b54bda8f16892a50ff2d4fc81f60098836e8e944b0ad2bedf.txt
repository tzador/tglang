# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name and version
project(MyProject VERSION 1.2.3)

# Set C++ standard to use
set(CMAKE_CXX_STANDARD 11)

# Set the build type to Release
set(CMAKE_BUILD_TYPE "Release")

# Set the directories where CMake will search for libraries
# This example uses both system and user-defined libraries
set(Boost_INCLUDE_DIR "/usr/local/include/boost") # system library
set(MyLib_INCLUDE_DIR "/home/user/mylib/include") # user-defined library

# Find Boost system library
find_package(Boost REQUIRED COMPONENTS system)

# Include directories of the libraries
include_directories(${Boost_INCLUDE_DIR} ${MyLib_INCLUDE_DIR})

# Create a variable containing all source files in the "src" directory
# The GLOB command helps find all the files matching the specified pattern
file(GLOB SOURCES "src/*.cpp")

# Create a library with the source files
# The library name will be "MyProjectLibrary"
add_library(MyProjectLibrary ${SOURCES})

# Create an executable target using the source files and libraries
# The executable name will be "myexecutable"
add_executable(myexecutable ${SOURCES})

# Link the libraries to the executable target
target_link_libraries(myexecutable ${Boost_LIBRARIES} MyProjectLibrary)

# Set the installation directory for the executable
install(TARGETS myexecutable DESTINATION "/usr/local/bin")

# Set the installation directory for the libraries
install(TARGETS MyProjectLibrary DESTINATION "/usr/local/lib")

# Set the installation directory for the header files
install(DIRECTORY "include/" DESTINATION "/usr/local/include")

# Create an output file with the project version
file(WRITE output.txt, ${PROJECT_VERSION})
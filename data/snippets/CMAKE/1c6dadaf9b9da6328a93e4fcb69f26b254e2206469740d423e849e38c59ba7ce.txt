# Define a CMake project with name 'my_project'
project(my_project)

# Specify the minimum required version of CMake
cmake_minimum_required(VERSION 3.0)

# Set the compiler to be used (optional)
set(CMAKE_C_COMPILER gcc)

# Add a source file to be compiled
add_executable(my_executable main.c)

# Add a library target to be built
add_library(my_library STATIC library.cpp)

# Define a variable with a list of sources
set(SOURCES 
    src/file1.cpp 
    src/file2.cpp
    inc/include1.h
    inc/include2.h
)

# Create a custom target to compile the sources
add_custom_target(my_custom_target SOURCES ${SOURCES})

# Set the include directories for both the executable and library targets
target_include_directories(my_executable PUBLIC ${PROJECT_SOURCE_DIR}/inc)
target_include_directories(my_library PUBLIC ${PROJECT_SOURCE_DIR}/inc)

# Set the link libraries for the executable
target_link_libraries(my_executable my_library)

# Set the compiler flags for both the executable and library targets
target_compile_options(my_executable PRIVATE -Wall -Wextra)
target_compile_options(my_library PRIVATE -Wall -Wextra -fPIC)

# Install the executable, library and header files to the specified directory
install(TARGETS my_executable my_library
    DESTINATION bin
)
install(FILES inc/include1.h inc/include2.h
    DESTINATION include
)

# Generate a test for the project
enable_testing()
add_test(NAME Test1 COMMAND my_executable)
add_test(NAME Test2 COMMAND my_library)
add_test(NAME Test3 COMMAND my_custom_target)
# Set the minimum required version of CMAKE
cmake_minimum_required(VERSION 3.12)

# Create a project with a given name
project(MyProject)

# Set the C flags for compiling the project
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")

# Add a directory containing additional header files
include_directories(include)

# Add a subdirectory for a custom library
add_subdirectory(lib)

# Create an executable target with two source files
add_executable(MyProgram main.c helper.c)

# Set a preprocessor definition for the project
target_compile_definitions(MyProgram PUBLIC CONFIG_DEBUG)

# Link the custom library to the executable target
target_link_libraries(MyProgram MyLibrary)

# Set the output directory for built binaries
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)

# Install the executable and library to a specified directory
install(TARGETS MyProgram DESTINATION ${CMAKE_INSTALL_BINDIR})
install(TARGETS MyLibrary DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(FILES include/helper.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# Generate a configuration header file
configure_file(config.h.in config.h)

# Specify the compiler and linker for the project
set(CMAKE_C_COMPILER gcc)
set(CMAKE_C_LINK_EXECUTABLE ld)
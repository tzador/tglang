# Set source files for library
set(SOURCES
    src/file1.cpp
    src/file2.cpp
    src/file3.cpp
)

# Add library target
add_library(my_library ${SOURCES})

# Set include directories for library
target_include_directories(my_library
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:include>
)

# Set library version
set_target_properties(my_library PROPERTIES VERSION ${PROJECT_VERSION})

# Set library install destinations
install(TARGETS my_library
    EXPORT ${PROJECT_NAME}Targets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
    INCLUDES DESTINATION include
)

# Set library headers for installation
install(DIRECTORY include/ DESTINATION include)

# Configure package config file for library
configure_file(${PROJECT_NAME}Config.cmake.in "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake" @ONLY)

# Install package config file
install(
    EXPORT ${PROJECT_NAME}Targets
    FILE ${PROJECT_NAME}Targets.cmake
    NAMESPACE ${PROJECT_NAME}::
    DESTINATION lib/cmake/${PROJECT_NAME}
)

# Install package config file for use in build directory
export(EXPORT ${PROJECT_NAME}Targets FILE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake" NAMESPACE ${PROJECT_NAME}::)

# Configure readme file
configure_file(README.md "${PROJECT_BINARY_DIR}/README.md" @ONLY)
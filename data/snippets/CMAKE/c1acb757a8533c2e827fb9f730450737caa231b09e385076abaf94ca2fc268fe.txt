# CMakeLists.txt for Project

# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Add project name and version
project(MyProject VERSION 1.0)

# Set the C++ standard to C++11
set(CMAKE_CXX_STANDARD 11)

# Create executable target
add_executable(MyProgram main.cpp)

# Set output directory for executables
set_target_properties(MyProgram PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

# Add subdirectory for additional source files
add_subdirectory(sources)

# Set include directories
include_directories(
    "${PROJECT_SOURCE_DIR}/include"
    "${PROJECT_SOURCE_DIR}/sources"
)

# Set some compiler flags
target_compile_options(MyProgram PRIVATE
    -Wall
    -Wextra
    -Wconversion
)

# Set some linker flags
target_link_options(MyProgram PRIVATE
    -pthread
)

# Set CMake options
option(USE_OPENMP "Use OpenMP for parallel processing" OFF)

# If OpenMP is enabled, add necessary flag and include directory
if(USE_OPENMP)
    target_compile_options(MyProgram PRIVATE
        -fopenmp
    )
    target_include_directories(MyProgram PRIVATE
        "${PROJECT_SOURCE_DIR}/external_packages/openmp/include"
    )
endif()

# Add external packages
# Add Boost package
find_package(Boost REQUIRED COMPONENTS filesystem)

# If Boost is found, add necessary include directories and link libraries
if(Boost_FOUND)
    target_include_directories(MyProgram PRIVATE
        ${Boost_INCLUDE_DIR}
    )
    target_link_libraries(MyProgram PRIVATE
        ${Boost_LIBRARIES}
    )
endif()
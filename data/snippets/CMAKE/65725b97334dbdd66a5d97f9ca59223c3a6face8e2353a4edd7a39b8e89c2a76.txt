# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.12)

# Set project name
project(my_project)

# Set variables
set(SOURCES src/main.cpp src/foo.cpp)

# Create executable target
add_executable(my_exe ${SOURCES})

# Add include directories
target_include_directories(my_exe PUBLIC include)

# Add compile flags
target_compile_options(my_exe PRIVATE -Wall -Wextra)

# Add link libraries
target_link_libraries(my_exe PRIVATE foo bar)

# Set build type to Release
set(CMAKE_BUILD_TYPE Release)

# Create build directory
set(BUILD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/build)
file(MAKE_DIRECTORY ${BUILD_DIR})

# Set build configuration
set(BUILD_CONFIG ${BUILD_DIR}/config.cmake)
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/config.cmake.in
  ${BUILD_CONFIG}
  @ONLY
)

# Set install directory
set(INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/install)

# Set install configuration
set(INSTALL_CONFIG ${INSTALL_DIR}/config.cmake)
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/config.cmake.in
  ${INSTALL_CONFIG}
  @ONLY
)

# Install target
install(
  TARGETS my_exe
  RUNTIME DESTINATION ${INSTALL_DIR}
)

# Install files
install(
  FILES ${CMAKE_CURRENT_SOURCE_DIR}/README.md ${CMAKE_CURRENT_SOURCE_DIR}/LICENSE
  DESTINATION ${INSTALL_DIR}
)
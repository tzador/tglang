# This is a sample CMake project

# Set the minimum version required
cmake_minimum_required(VERSION 3.12)

# Define the project
project(SampleProject)

# Add source files to the project
set(SOURCES
    src/main.cpp
    src/utils.cpp
)

# Add header files to the project
set(HEADERS
    include/utils.h
)

# Set compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Werror")

# Build executable from source files
add_executable(SampleApp ${SOURCES} ${HEADERS})

# Set output directory for executable
set_target_properties(SampleApp PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add include directories to the project
include_directories(include)

# Set library output directory
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

# Build shared library from source files
add_library(SampleLib SHARED ${SOURCES} ${HEADERS})

# Set library version
set_target_properties(SampleLib PROPERTIES VERSION 1.0)

# Set library installation directory
set_target_properties(SampleLib PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_INSTALL_PREFIX}/lib)

# Add dependencies
target_link_libraries(SampleApp SampleLib)

# Install executable and library
install(TARGETS SampleApp DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
install(TARGETS SampleLib DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

# Install header files
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include)

# Generate config file
configure_file(config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)

# Include config file
include_directories(${CMAKE_CURRENT_BINARY_DIR})

# Specify build type
if (CMAKE_BUILD_TYPE MATCHES Release)
    message("Building in release mode")
    add_definitions(-DRELEASE)
endif()

# Set build directory
set(CMAKE_BUILD_DIRECTORY ${CMAKE_SOURCE_DIR}/build)

# Enable testing
enable_testing()

# Add tests
add_test(NAME SampleTests COMMAND SampleApp)

# Set test coverage report
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --coverage")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} --coverage")

# Create coverage report
add_custom_target(coverage
    COMMAND lcov -c -d ${CMAKE_BINARY_DIR}/CMakeFiles/SampleApp.dir/ -o coverage.info
    COMMAND lcov -r coverage.info "*usr/include/*" "*gtest/*" -o coverage_filtered.info
    COMMAND genhtml coverage_filtered.info -o coverage_report
)
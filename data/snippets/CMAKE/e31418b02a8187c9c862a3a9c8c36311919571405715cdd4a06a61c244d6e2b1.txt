# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.15)

# Specify the project name
project(My_Project LANGUAGES CXX)

# Set variables for the source files and libraries
set(SOURCES src/main.cpp)

# Add executable target
add_executable(my_exe ${SOURCES})

# Set C++ standard to C++17
target_compile_features(my_exe PRIVATE cxx_std_17)

# Find and add external libraries
find_package(Boost REQUIRED COMPONENTS math)

# Set include directories for Boost headers
target_include_directories(my_exe PRIVATE ${Boost_INCLUDE_DIRS})

# Link against Boost libraries
target_link_libraries(my_exe PRIVATE ${Boost_LIBRARIES})

# Add custom compiler flags
if (UNIX)
    target_compile_options(my_exe PRIVATE -Wall -Wextra -Werror)
elseif (MSVC)
    target_compile_options(my_exe PRIVATE /W4 /WX)
endif()

# Set output directory for built libraries and executables
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add a custom command to run before building
add_custom_command(
    TARGET my_exe POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/data/my_data ${CMAKE_BINARY_DIR}/bin/my_data
)
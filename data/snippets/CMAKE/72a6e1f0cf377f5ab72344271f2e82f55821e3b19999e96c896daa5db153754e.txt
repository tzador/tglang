cmake_minimum_required(VERSION 3.8.2) # Specifies the minimum required version of CMake

project(MyProject) # Sets the project name to MyProject

set(CMAKE_CXX_STANDARD 17) # Sets the C++ standard to C++17

# Specifies the source files for the project
set(SOURCES src/main.cpp src/utils.cpp src/class.cpp)

# Specifies the include directories for the project
include_directories(include)

# Specifies the library directories for the project
link_directories(lib)

# Adds a executable target named MyProject, with the specified source files
add_executable(MyProject ${SOURCES})

# Finds and links the required libraries for the project
# In this example, we will be using pthread and OpenCV libraries
find_package(Threads REQUIRED)
target_link_libraries(MyProject Threads::Threads)

find_package(OpenCV REQUIRED)
target_link_libraries(MyProject ${OpenCV_LIBS})

# Specifies any additional compiler flags for the project
# In this example, we will be turning on optimization and enabling warnings
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall")

# Specifies the installation target for the project
install(TARGETS MyProject DESTINATION bin)

# Generates a configuration file for the project
configure_file(config.ini.in config.ini)

# Prints a message to the console
message(STATUS "Configuring MyProject...")

# Prints a warning to the console
message(WARNING "Some libraries may not be found or linked properly.")

# Prints an error to the console and aborts the configuration process
message(FATAL_ERROR "Compiling of MyProject failed due to missing dependencies.")
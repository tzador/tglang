# Setting variables
set(PROJECT_NAME "MyProject")
set(SOURCE_FILES main.cpp math.cpp)

# Setting project name and language
project(${PROJECT_NAME} LANGUAGE CXX)

# Setting the minimum required CMake version
cmake_minimum_required(VERSION 3.10)

# Adding executable target
add_executable(${PROJECT_NAME} ${SOURCE_FILES})

# Setting the C++ standard to C++17
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17)

# Setting the include directories
target_include_directories(${PROJECT_NAME} PUBLIC 
                           ${CMAKE_CURRENT_SOURCE_DIR}/include 
                           ${CMAKE_CURRENT_SOURCE_DIR}/external/include)

# Setting the link directories
target_link_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib)

# Setting the libraries to link
target_link_libraries(${PROJECT_NAME} PUBLIC library1 library2)

# Setting the compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")

# Generating a build configuration file
configure_file(config.hpp.in config.hpp @ONLY)

# Setting up preprocessor definitions
target_compile_definitions(${PROJECT_NAME} PUBLIC CONFIG_FILE=\"${CMAKE_CURRENT_BINARY_DIR}/config.hpp\")

# Adding post-build command to copy executable to output directory
# Note: Replace <OutputDirectory> with the desired output directory
add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${PROJECT_NAME}> <OutputDirectory>)

# Adding tests
add_test(NAME MyTest COMMAND ${PROJECT_NAME})
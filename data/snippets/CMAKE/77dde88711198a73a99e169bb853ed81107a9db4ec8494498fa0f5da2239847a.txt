# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Create a project with a given name
project(MyProject)

# Set the C++ standard to use for compiling
set(CMAKE_CXX_STANDARD 11)

# Specify the source files to compile
set(SOURCES
    main.cpp
    foo.cpp
    bar.cpp
)

# Create an executable target with the given name and source files
add_executable(MyExecutable ${SOURCES})

# Create a library target with the given name and source files
add_library(MyLibrary STATIC ${SOURCES})

# Add a compilation flag for the executable target
target_compile_options(MyExecutable PRIVATE -Wall)

# Link the library target to the executable target
target_link_libraries(MyExecutable PRIVATE MyLibrary)

# Add include directories for the library and executable targets
target_include_directories(MyExecutable PUBLIC include)
target_include_directories(MyLibrary PUBLIC include)

# Add a preprocessor define for the library and executable targets
target_compile_definitions(MyExecutable PRIVATE DEBUG_MODE=1)
target_compile_definitions(MyLibrary PRIVATE DEBUG_MODE=1)

# Set a custom compiler flag for the library target
target_compile_options(MyLibrary PRIVATE -O3)

# Specify a custom install directory for the executable
install(TARGETS MyExecutable DESTINATION bin)

# Specify a custom install directory for the library
install(TARGETS MyLibrary DESTINATION lib)

# Install additional files to the bin and include directories
install(FILES LICENSE DESTINATION bin)
install(FILES include/foo.h include/bar.h DESTINATION include)

# Create a test target and add a test case
add_executable(MyTest tests/test.cpp)
add_test(NAME MyTest COMMAND MyTest)
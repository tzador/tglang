# This snippet creates a project and adds multiple source files
# to be compiled
# Please note that this is just an example and may not necessarily
# work in all setups

cmake_minimum_required(VERSION 3.10) # Minimum required version for CMake

project(MyProject) # Name of the project

file(GLOB_RECURSE SOURCES src/*.cpp) # Glob all source files recursively in the src directory

# To add an executable target, use the add_executable(target sources) command
# In this case, we use the project name as the target name and pass in the SOURCES variable
add_executable(${PROJECT_NAME} ${SOURCES})

# Add additional include directories
target_include_directories(${PROJECT_NAME}
    PRIVATE
        include # relative path to the include directory
)

# Add additional compiler options
target_compile_options(${PROJECT_NAME}
    PRIVATE
        -Wall # enable all warnings
        -std=c++11 # use C++11 standard
)

# Add additional linker options
target_link_options(${PROJECT_NAME}
    PRIVATE
        -static # link statically
        -L/usr/lib # add a search path for the linker (may vary based on system)
)

# Set the output directory for the compiled executable
set_target_properties(${PROJECT_NAME} PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin"
)

# Specify any libraries to be linked
target_link_libraries(${PROJECT_NAME}
    PRIVATE
        library1
        library2
        # etc...
)
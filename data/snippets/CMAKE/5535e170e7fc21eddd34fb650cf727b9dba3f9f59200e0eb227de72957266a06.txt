# Set the minimum required CMake version
cmake_minimum_required(VERSION 3.12)

# Set the project name and version
project(my_project VERSION 1.0.0)

# Set the C++ standard
set(CMAKE_CXX_STANDARD 14)

# Set the output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)

# Include any necessary libraries or external dependencies
find_package(Boost REQUIRED)

# Set the source files for the project
set(SOURCES
        src/main.cpp
        src/helper.cpp
        src/helper.hpp
)

# Create the executable for the project
add_executable(${PROJECT_NAME} ${SOURCES})

# Link any necessary libraries to the executable
target_link_libraries(${PROJECT_NAME} Boost::boost)

# Set the compiler flags and options
target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Werror)

# Set any necessary preprocessor definitions
target_compile_definitions(${PROJECT_NAME} PRIVATE MY_DEFINE)

# Set any necessary include directories
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src)

# Install the executable to the specified location
install(TARGETS ${PROJECT_NAME} DESTINATION bin)

# Generate a CMake config file for the project
include(CMakePackageConfigHelpers)
write_basic_package_version_file(
        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
        VERSION ${PROJECT_VERSION}
        COMPATIBILITY AnyNewerVersion
)

# Install the CMake config file to the specified location
install(
        FILES "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
        DESTINATION lib/cmake/${PROJECT_NAME}
)
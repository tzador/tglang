# Define a macro to create a library with components
macro(create_library LIB_NAME LIB_TYPE)

    # Create the library target
    add_library(${LIB_NAME} ${LIB_TYPE})

    # Set the library output directory
    set_target_properties(${LIB_NAME} PROPERTIES
        ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
    )

    # Define a macro to add components to the library target
    macro(add_library_component COMPONENT_NAME)

        # Add the source files for the component
        target_sources(${LIB_NAME} PRIVATE ${COMPONENT_NAME}.cpp)

        # Add the include directories for the component
        target_include_directories(${LIB_NAME} PRIVATE ${COMPONENT_NAME})

        # Add any necessary dependencies for the component
        target_link_libraries(${LIB_NAME} PRIVATE ${COMPONENT_NAME}_dependencies)

        # Add any necessary compile options for the component
        target_compile_options(${LIB_NAME} PRIVATE ${COMPONENT_NAME}_compile_options)

    endmacro()

    # Add components to the library target
    add_library_component(component1)
    add_library_component(component2)

endmacro()

# Create the main library 
create_library(main_library STATIC)
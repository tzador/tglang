# Sets the minimum version of CMake required to build the project.
cmake_minimum_required(VERSION 3.12)

# Sets the name of the project and stores it in the variable PROJECT_NAME.
project(my_project)

# Sets the version number of the project and stores it in the variable PROJECT_VERSION.
set(PROJECT_VERSION_MAJOR 1)
set(PROJECT_VERSION_MINOR 2)
set(PROJECT_VERSION_PATCH 3)
set(PROJECT_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})

# Sets the compiler flags for the project.
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic")

# Sets the source files for the project.
set(SOURCES
   src/main.cpp
   src/utils.cpp
   include/utils.h
)

# Adds an executable target for the project, using the source files defined above.
add_executable(${PROJECT_NAME} ${SOURCES})

# Adds an include directory for the project, allowing it to find header files.
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

# Specifies the installation directory for the executable target.
install(TARGETS ${PROJECT_NAME}
   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

# Create a CPack config file to package the project.
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_GENERATOR "ZIP")

include(CPack)
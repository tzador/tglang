# Define a variable for a list of source files
set(SOURCES source1.cpp source2.cpp source3.cpp)

# Add a library target called "myLibrary" and specify its source files
add_library(myLibrary ${SOURCES})

# Define a function to set compiler flags for a specific library
function(set_compiler_flags library_name)
  # Use CMAKE_CXX_COMPILER_ID variable to determine the compiler being used
  if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    # Use CMAKE_CXX_FLAGS variable to set compiler flags for GNU compiler
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra")
  elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    # Use CMAKE_CXX_FLAGS variable to set compiler flags for MSVC compiler
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++11 /W4")
  endif()

  # Add the library name to the target_compile_options function to set compiler flags specifically for this library
  target_compile_options(${library_name} PRIVATE -O3 -DNDEBUG)
endfunction()

# Call the set_compiler_flags function and pass in the name of our library
set_compiler_flags(myLibrary)

# Create an executable target called "myExecutable" and specify its source file
add_executable(myExecutable main.cpp)

# Link the "myLibrary" target to the "myExecutable" target
target_link_libraries(myExecutable myLibrary)
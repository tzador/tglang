# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Define a variable to store project name
set(PROJECT_NAME "MyProject")

# Declare the project and set its name
project(${PROJECT_NAME})

# Set the compiler flags and options
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -std=c++17")

# Set the source files for the project
set(SOURCE_FILES main.cpp utils.cpp)

# Add an executable target named 'MyProject' and link the source files
add_executable(MyProject ${SOURCE_FILES})

# Set the include directories for the target
target_include_directories(MyProject PUBLIC include)

# Set the libraries to be linked with the target
target_link_libraries(MyProject PRIVATE SomeLibrary)

# Set the output path for the executable
set_target_properties(MyProject PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add a custom command to generate a version file
add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/version.txt
                   COMMAND ${CMAKE_COMMAND} -E echo "Project version: ${PROJECT_VERSION}" > ${CMAKE_BINARY_DIR}/version.txt
                   VERBATIM
)

# Add the version file as a dependency of the 'MyProject' target
add_dependencies(MyProject "${CMAKE_BINARY_DIR}/version.txt")

# Add a custom target named 'clean' to remove generated files
add_custom_target(clean
                  COMMAND ${CMAKE_COMMAND} -E remove_directory ${CMAKE_BINARY_DIR}/bin
                  COMMAND ${CMAKE_COMMAND} -E remove ${CMAKE_BINARY_DIR}/version.txt
                  VERBATIM)

# Add 'clean' target as a dependency to 'MyProject'
add_dependencies(MyProject clean)
### CMAKE Example Code

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set the project name and version
project(exampleProject VERSION 1.0.0)

# Set the C++ standard to use
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Set the source files for the project
set(SOURCES
    src/main.cpp
    src/myLib.cpp
)

# Set the include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Create an executable target
add_executable(exampleApp ${SOURCES})

# Set target properties
target_include_directories(exampleApp
    PRIVATE 
        ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Set the output directory for the target
set_target_properties(exampleApp
    PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/bin"
)

# Set the linker flags for the target
target_link_options(exampleApp
    PRIVATE 
        -pthread
)

# Set the runtime dependencies for the target
target_link_libraries(exampleApp
    PRIVATE 
        myLib
)

# Add a custom command to run after the target is built
add_custom_command(TARGET exampleApp POST_BUILD
    # Command to copy the target to a specific location
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:exampleApp> ${CMAKE_CURRENT_SOURCE_DIR}/bin/ 
)
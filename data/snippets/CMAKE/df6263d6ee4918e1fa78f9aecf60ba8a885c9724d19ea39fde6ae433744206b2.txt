# This is a CMakeLists file
# It is used to build and manage projects using CMake
# The following code sets the minimum required version for CMake
cmake_minimum_required(VERSION 3.10)

# Set the project name
project(MyProject)

# Set the language for the project
# In this case, C and C++ are enabled
enable_language(C CXX)

# Set the output directory for the build
# In this case, the executable will be built in the bin folder
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set the source files for the project
set(SOURCES
    src/main.cpp
    src/utils.cpp
    src/sort.cpp
)

# Set the header files for the project
set(HEADERS
    include/utils.h
    include/sort.h
)

# Create an executable using the source and header files
add_executable(MyExecutable ${SOURCES} ${HEADERS})

# Set the include directories for the project
target_include_directories(MyExecutable PRIVATE include)

# Set the compiler flags for the project
target_compile_options(MyExecutable PRIVATE -Wall -Wextra -pedantic)

# Link the necessary libraries for the project
target_link_libraries(MyExecutable PRIVATE pthread)

# Set the preprocessor definitions for the project
target_compile_definitions(MyExecutable PRIVATE DEBUG)

# Add subdirectories for external dependencies
add_subdirectory(external/dependency1)
add_subdirectory(external/dependency2)

# Set the link directories for the external dependencies
target_link_directories(MyExecutable PRIVATE dependency1 dependency2)

# Link the external dependencies
target_link_libraries(MyExecutable PRIVATE dependency1 dependency2)

# Add tests for the project
add_executable(MyTests test/test_utils.cpp)
target_link_libraries(MyTests PRIVATE MyProject)
add_test(NAME MyTest COMMAND MyTests)
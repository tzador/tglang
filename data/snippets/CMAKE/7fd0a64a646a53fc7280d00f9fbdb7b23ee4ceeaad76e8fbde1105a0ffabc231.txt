#Declare a cmake minimum version
cmake_minimum_required(VERSION 3.15)

#Set the project name and version
project(MyProject VERSION 1.0)

#Set output directory for binaries
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#Create a variable for source files
set(SRC_FILES 
    main.cpp
    helper_functions.cpp
)

#Create an executable target from sources
add_executable(MyProject ${SRC_FILES})

#Add a subdirectory for additional source files
add_subdirectory(subdirectory)

#Link the subdirectory target to the main project
target_link_libraries(MyProject
    PRIVATE
        subdirectory_lib
)

#Specify the C++ standard used
target_compile_features(MyProject PRIVATE cxx_std_14)

#Set compiler flags
target_compile_options(MyProject PRIVATE
    -Wall
    -Wextra
    -Werror
)

#Add an installation rule for the executable
install(TARGETS MyProject DESTINATION bin)

#Create a custom test target
enable_testing()
add_test(NAME MyProjectTest COMMAND MyProjectTest)

#Add a test executable target
add_executable(MyProjectTest 
    test/main.cpp
)

#Link the test executable to the main project and GoogleTest library
target_link_libraries(MyProjectTest 
    PRIVATE
        MyProject
        gtest
        gtest_main
)

# Add a new test
add_test(NAME UnitTest COMMAND MyProjectTest)

#Set compile definitions
target_compile_definitions(MyProjectTest PRIVATE TESTING)

#Set compile options for the test executable
target_compile_options(MyProjectTest PRIVATE
    -Wall
    -Wextra
)

#Add an installation rule for the test executable
install(TARGETS MyProjectTest DESTINATION bin)
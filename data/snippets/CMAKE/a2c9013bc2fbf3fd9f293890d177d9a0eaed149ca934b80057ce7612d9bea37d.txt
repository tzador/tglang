# CMakeLists.txt
# Main build file for project

# Sets the cmake minimum required version
cmake_minimum_required(VERSION 3.10.0)

# Sets the project name 
project(my_project)

# Adds a compile option
add_compile_options(-Wall -Werror)

# Sets the output directory for executables
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Sets the source files
set(SOURCES 
    src/main.cpp
    src/utilities.cpp
    src/classes/example_class.cpp
)

# Includes subdirectories
add_subdirectory(src/classes)
add_subdirectory(src/utilities)

# Adds executable target
add_executable(my_executable ${SOURCES})

# Links libraries to executable
target_link_libraries(my_executable my_class_library my_utility_library)

# Sets compile definitions
target_compile_definitions(my_executable PRIVATE MY_DEFINITION)

# Sets compile options for a specific target
target_compile_options(my_executable PRIVATE -O3)

# Includes a custom cmake module
include(ExternalProject)

# Adds an external dependency
ExternalProject_Add(my_external_dependency
    PREFIX ${CMAKE_BINARY_DIR}/external 
    DOWNLOAD_COMMAND git clone https://github.com/example_project 
    UPDATE_COMMAND git pull 
    CONFIGURE_COMMAND cmake ../my_external_dependency 
    BUILD_COMMAND make 
    BUILD_IN_SOURCE 1
    INSTALL_COMMAND make install
)

# Generates documentation 
add_custom_target(doc
    COMMAND doxygen Doxyfile
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/doc
    COMMENT "Generating documentation..."
)

# Installs executable
install(TARGETS my_executable DESTINATION bin)

# Sets package inforamtion
set(CPACK_PACKAGE_VENDOR "My Company")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "My Project")
set(CPACK_PACKAGE_VERSION "1.0.0")

# Generates package 
include(CPack)
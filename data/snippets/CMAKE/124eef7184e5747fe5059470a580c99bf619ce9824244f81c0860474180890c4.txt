# This is a comment in CMake

# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.12)

# Create a project with name "my_project"
project(my_project)

# Add a subdirectory called "libraries" to the project
add_subdirectory(libraries)

# Define a variable named "sources" with a list of source files
set(sources
    src/main.cpp
    src/utils.cpp
    src/algorithm.cpp
)

# Create an executable target called "my_project" with the specified source files
add_executable(my_project ${sources})

# Link the libraries included in the "libraries" subdirectory to the target
target_link_libraries(my_project PUBLIC libraries)

# Set the output directory for the executable to "bin"
set_target_properties(my_project PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)

# Define a custom command for building "my_project" with additional arguments
add_custom_command(TARGET my_project POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/assets ${CMAKE_CURRENT_BINARY_DIR}/bin/assets)

# Specify compiler options for the "my_project" target
target_compile_options(my_project PUBLIC -Wall -Wextra -pedantic)

# Specify compiler definitions for the "my_project" target
target_compile_definitions(my_project PRIVATE LOG_LEVEL=3)
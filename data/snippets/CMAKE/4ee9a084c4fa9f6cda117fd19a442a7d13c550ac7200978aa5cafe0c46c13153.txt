cmake_minimum_required(VERSION 3.10) # Sets the minimum version of CMake required for this project
project(my_project
        DESCRIPTION "A project that calculates the Fibonacci sequence"
        LANGUAGES CXX) # Sets the project name, description, and programming language to C++

set(CMAKE_CXX_STANDARD 11) # Sets the C++ standard to use
set(CMAKE_CXX_EXTENSIONS OFF) # Disable compiler extensions

find_package(Boost 1.36.0 REQUIRED) # Looks for the Boost library with a minimum version of 1.36.0

include_directories(${Boost_INCLUDE_DIR}) # Adds the Boost include directory to the project include paths

add_executable(my_project main.cpp) # Creates an executable file named "my_project" from main.cpp

target_link_libraries(my_project ${Boost_LIBRARIES}) # Links the Boost libraries to the executable

set(SOURCES src/fibonacci.cpp src/fibonacci.h) # Creates a variable with the source files for the Fibonacci sequence calculation

add_library(fibonacci ${SOURCES}) # Creates a library named "fibonacci" from the source files

target_include_directories(fibonacci PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src) # Adds the project source directory to the library include paths

target_link_libraries(my_project fibonacci) # Links the fibonacci library to the executable

add_executable(tests test.cpp) # Creates an executable file named "tests" from test.cpp

target_link_libraries(tests fibonacci) # Links the fibonacci library to the tests executable
# This is a CMake file for building a project
# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Define the project name and version
project(MyProject VERSION 1.0)

# Configure a header file to pass the project version to the source code
configure_file (
  "${PROJECT_SOURCE_DIR}/config.h.in"
  "${PROJECT_BINARY_DIR}/config.h"
)

# Specify the C++ standard and configure flags
set(CMAKE_CXX_STANDARD 17)
set(CXX_EXTENSIONS OFF)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic")

# Add an executable target
add_executable(my_executable src/main.cpp)

# Add include directories and link libraries for the executable
target_include_directories(my_executable PUBLIC 
  "${PROJECT_BINARY_DIR}" 
  "${PROJECT_SOURCE_DIR}/include"
)
target_link_libraries(my_executable PRIVATE 
  some_library
)

# Set installation paths for the executable
install(TARGETS my_executable DESTINATION bin)

# Add a test target
add_test(NAME MyProjectTest COMMAND my_executable)

# Create a function that checks if a given number is prime
function(check_prime number)
    foreach(i RANGE 2 ${number})
        if(i EQUAL 2 OR i EQUAL 3)
            set(flag TRUE)
        else()
            if(number MOD i EQUAL 0)
                set(flag FALSE)
                break()
            else()
                set(flag TRUE)
            endif()
        endif()
    endforeach()
    if(flag)
        message("The number ${number} is prime!")
    else()
        message("The number ${number} is not prime...")
    endif()
endfunction()

# Call the function to check if a number is prime
check_prime(17)

# Add a custom target that runs the check_prime function
add_custom_target(check_prime_target
    COMMAND ${CMAKE_COMMAND} -Dnumber=23 -P ${CMAKE_CURRENT_SOURCE_DIR}/ check_prime.cmake)
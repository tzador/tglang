# Define the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set project name
project(MyProject)

# Add a custom target
add_custom_target(MyTarget ALL DEPENDS ${OUTPUT_FOLDER}/output_file.txt)

# Set the output folder
set(OUTPUT_FOLDER "output")

# Define a function to print a message
function(print_message message)
    message("Hello ${message}")
endfunction()

# Define a list of source files
set(SOURCES 
    src/main.cpp
    src/utils.cpp
    src/algorithm.cpp
)

# Create an executable target
add_executable(MyExecutable ${SOURCES})

# Link the executable with a library
target_link_libraries(MyExecutable MyLibrary)

# Set compiler options
target_compile_options(MyExecutable PRIVATE -Wall -Wextra)

# Set compiler definitions
target_compile_definitions(MyExecutable PRIVATE -DMY_CONST=10)

# Add an installation rule for the executable
install(TARGETS MyExecutable DESTINATION bin)

# Specify the source files that need to be copied to the output folder
set(FILES_TO_COPY 
    ${CMAKE_CURRENT_SOURCE_DIR}/data/file1.txt
    ${CMAKE_CURRENT_SOURCE_DIR}/data/file2.txt
)

# Copy the source files to the output folder
foreach(file ${FILES_TO_COPY})
    configure_file(${file} ${OUTPUT_FOLDER} COPYONLY)
endforeach()

# Create a library
add_library(MyLibrary SHARED ${SOURCES})

# Optionally set library version and API compatibility
set_target_properties(MyLibrary PROPERTIES VERSION 1.0 SOVERSION 1.0)

# Install the library to the designated location
install(TARGETS MyLibrary DESTINATION lib)
# Define a cmake project
project(my_project)

# Set the minimum required version of cmake
cmake_minimum_required(VERSION 3.12)

# Define a library
add_library(my_library SHARED
    src/library.cpp
)

# Set the include directories for my_library
target_include_directories(my_library
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:include>
)

# Set the compile features for my_library
target_compile_features(my_library
    PUBLIC
        cxx_std_11
)

# Set any compilation options for my_library
target_compile_options(my_library
    PRIVATE
        -Wall
        -Wextra
        -Werror
)

# Set any link libraries for my_library
target_link_libraries(my_library
    PRIVATE
        other_library
)

# Define an executable
add_executable(my_executable
    src/main.cpp
)

# Link my_executable with my_library
target_link_libraries(my_executable
    PRIVATE
        my_library
)

# Install my_library and its header files
install(TARGETS my_library
    EXPORT my_library
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
    INCLUDES DESTINATION include
)

# Create a cmake configuration file for my_library
install(EXPORT my_library
    DESTINATION lib/cmake/my_library
    NAMESPACE my_library::
)
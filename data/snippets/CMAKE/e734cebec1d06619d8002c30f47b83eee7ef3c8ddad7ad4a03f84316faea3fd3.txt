# This is a comment in CMake

# Create a variable named "SOURCE_FILES" and set it to a list of source files
SET(SOURCE_FILES 
    src/main.cpp
    src/utils.cpp
    src/class.cpp
    )

# Set C++ standard to C++17
SET(CMAKE_CXX_STANDARD 17)

# Add header files to be included in compilation
INCLUDE_DIRECTORIES(
    include
    )

# Create a library target named "my_library" using the source files
ADD_LIBRARY(my_library ${SOURCE_FILES})

# Create an executable target named "my_executable" using main source file
ADD_EXECUTABLE(my_executable src/main.cpp)

# Link the "my_executable" target to the "my_library" library
TARGET_LINK_LIBRARIES(my_executable my_library)

# Set the output directory for the executable to build/bin
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/build/bin)

# Set the output directory for the library to build/lib
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/build/lib)

# Add a custom compile flag for debug mode
IF (CMAKE_BUILD_TYPE MATCHES "Debug")
    ADD_COMPILE_DEFINITIONS(DEBUG_MODE)
ENDIF()

# Add a custom compile flag for release mode
IF (CMAKE_BUILD_TYPE MATCHES "Release")
    ADD_COMPILE_DEFINITIONS(RELEASE_MODE)
ENDIF()
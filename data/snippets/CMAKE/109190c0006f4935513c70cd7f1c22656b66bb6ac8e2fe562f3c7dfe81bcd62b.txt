# Set up project name and version
project(MyProject VERSION 1.0)

# Set minimum required CMAKE version
cmake_minimum_required(VERSION 3.10)

# Set C++ standard
set(CMAKE_CXX_STANDARD 11)

# Set source files
set(SOURCES
    main.cpp
    helper.cpp
)

# Set header files
set(HEADERS
    helper.h
)

# Add executable target
add_executable(MyProject ${SOURCES} ${HEADERS})

# Add additional include directories
# These directories will be searched for header files 
# when compiling
target_include_directories(MyProject PUBLIC
    ${CMAKE_SOURCE_DIR}/include
)

# Set additional compiler flags
target_compile_options(MyProject PRIVATE
    -Wall
    -Werror
    -Wextra
)

# Find and link external libraries
# In this example, we will be using the Boost library
find_package(Boost REQUIRED)

# Add Boost include directory to search path
include_directories(${Boost_INCLUDE_DIRS})

# Link Boost libraries to our target
target_link_libraries(MyProject PRIVATE
    ${Boost_LIBRARIES}
)

# Set installation paths
# In this example, we will be installing our executable
# in the bin directory and our header file in the include directory
install(TARGETS MyProject DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include)

# Create a custom target to run our executable
add_custom_target(run
    COMMAND MyProject
    DEPENDS MyProject
)

# Create a custom target to run tests
# In this example, we will be using Google Test as our testing framework
add_custom_target(unit-tests
    COMMAND ${CMAKE_CURRENT_BINARY_DIR}/test/unit-tests
    DEPENDS unit-tests
)
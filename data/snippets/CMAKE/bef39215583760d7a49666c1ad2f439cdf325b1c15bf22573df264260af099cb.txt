# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10) 

# Create a project called "MyProject"
project(MyProject) 

# Add a subdirectory called "src" to the project
add_subdirectory(src) 

# Set the C++ standard to C++11
set(CMAKE_CXX_STANDARD 11) 

# Add a library called "mylib"
add_library(mylib SHARED lib.cpp) 

# Link the "mylib" library to the executable
target_link_libraries(MyProject mylib) 

# Set the include directory to "include"
target_include_directories(MyProject PUBLIC include) 

# Add a compiler flag to optimize the code for speed
target_compile_options(MyProject PUBLIC -O3) 

# Create an install target for the executable
install(TARGETS MyProject DESTINATION bin) 

# Create an export target for the library
install(EXPORT MyProjectConfig DESTINATION lib/cmake) 

# Create a file to configure the library
install(FILES include/mylib.h DESTINATION include) 

# Print a message for successful configuration
message(STATUS "MyProject configured successfully") 

# Generate a configuration file for the project
configure_file(config.h.in config.h) 

# Add a custom command to execute a shell script after building
add_custom_command(TARGET MyProject POST_BUILD COMMAND run.sh) 

# Add a test to be run after building
add_test(NAME MyTest COMMAND MyProject)
cmake_minimum_required(VERSION 3.10) #specify the minimum version of CMake required

project(MyProject VERSION 1.0) #set the name and version of the project

set(CMAKE_CXX_STANDARD 17) #set the C++ standard to be used

option(BUILD_TESTS "Build tests" OFF) #create an option to enable building tests, default setting is OFF

#set directory where the build artifacts will be placed
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#add a custom command to create a directory for storing generated files
add_custom_command(
  OUTPUT ${CMAKE_BINARY_DIR}/generated
  COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/generated
  COMMENT "Creating directory for generated files"
)

#set source files to be compiled
set(SOURCES src/main.cpp src/HelperFunctions.cpp)

#set include directories
include_directories(include)

#add executable target
add_executable(MyApp ${SOURCES})

#link libraries to executable target
target_link_libraries(MyApp pthread)

if(BUILD_TESTS)
  #include testing framework
  include(CTest)
  enable_testing()

  #set source files for tests
  set(TEST_SOURCES tests/testHelperFunctions.cpp)

  #add executable target for tests
  add_executable(Test ${TEST_SOURCES})

  #link libraries to test target
  target_link_libraries(Test pthread)

  #add test
  add_test(NAME Test1 COMMAND Test)
endif()
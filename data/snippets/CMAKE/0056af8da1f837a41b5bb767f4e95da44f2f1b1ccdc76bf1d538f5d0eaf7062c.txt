# Set up project
cmake_minimum_required(VERSION 3.0.0) # Set minimum required CMake version
project(MyProject VERSION 1.0.0 LANGUAGES CXX) # Set project name and version, specify language

# Set options and flags
set(CMAKE_CXX_STANDARD 11) # Set C++ standard to use
set(CMAKE_CXX_FLAGS "-Wall -Wextra") # Add compiler flags
option(USE_OPENMP "Use OpenMP for multithreading" ON) # Specify option to enable OpenMP
if(USE_OPENMP)
    find_package(OpenMP REQUIRED) # Find OpenMP library
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}") # Add OpenMP flags if enabled
endif()

# Add source files to project
set(SOURCE_FILES # Specify source files to be compiled
    main.cpp
    utils.cpp
    math.cpp
    )

# Add library dependencies
find_package(Boost 1.65 REQUIRED) # Find Boost library (version 1.65 or higher)
set(INCLUDE_DIRS ${INCLUDE_DIRS} ${Boost_INCLUDE_DIRS}) # Add Boost include directories to project
set(LIBRARIES ${LIBRARIES} ${Boost_LIBRARIES}) # Add Boost libraries to project
find_package(Eigen3 3.3 REQUIRED) # Find Eigen3 library (version 3.3 or higher)
set(INCLUDE_DIRS ${INCLUDE_DIRS} ${Eigen3_INCLUDE_DIRS}) # Add Eigen3 include directories to project
set(LIBRARIES ${LIBRARIES} ${Eigen3_LIBRARIES}) # Add Eigen3 libraries to project

# Create target for executable
add_executable(MyExecutable ${SOURCE_FILES}) # Create executable target with specified source files
target_include_directories(MyExecutable PRIVATE ${INCLUDE_DIRS}) # Specify included directories for target
target_link_libraries(MyExecutable PRIVATE ${LIBRARIES}) # Specify linked libraries for target

# Create target for shared library
add_library(MyLibrary SHARED ${SOURCE_FILES}) # Create shared library target with specified source files
set_target_properties(MyLibrary PROPERTIES VERSION ${PROJECT_VERSION}) # Set version property for library
target_include_directories(MyLibrary PRIVATE ${INCLUDE_DIRS}) # Specify included directories for target
target_link_libraries(MyLibrary PRIVATE ${LIBRARIES}) # Specify linked libraries for target
install(TARGETS MyLibrary DESTINATION lib) # Specify installation destination for library
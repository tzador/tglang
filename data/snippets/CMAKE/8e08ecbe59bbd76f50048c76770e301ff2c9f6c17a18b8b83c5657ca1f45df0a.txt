#Create a variable to hold multiple file paths
set(FILES
    path/to/file1.cpp
    path/to/file2.cpp
    path/to/file3.cpp
)

#Create a library target with the name "myLib" and add the files variable as sources
add_library(myLib ${FILES})

#Create a variable to hold any additional dependencies
set(DEPENDENCIES
    dependency1
    dependency2
)

#Add the additional dependencies to the target
target_link_libraries(myLib ${DEPENDENCIES})

#Set the compiler flags for the target
target_compile_options(myLib PRIVATE
    -Wall
    -Wextra
    -Wpedantic
)

#Create an executable target with the name "myExecutable" and add the files variable as sources
add_executable(myExecutable ${FILES})

#Link the executable target with the library target "myLib"
target_link_libraries(myExecutable myLib)

#Set the minimum version of CMake required
cmake_minimum_required(VERSION 3.12)

#Create a build directory to store the build files
set(BUILD_DIR build)

#Set the output directory for the built files
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BUILD_DIR})

#Specify the language standard to use
set(CMAKE_CXX_STANDARD 11)

#Add a compiler option for optimized builds
if(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(myLib PRIVATE -O3)
endif()
# Sets the minimum version of CMake required to build the project 
cmake_minimum_required(VERSION 3.10.2)

# Declares a project with name 'my_project' 
project(my_project)

# Sets a variable for the source files to be compiled 
set(SOURCE_FILES main.cpp)

# Adds a target executable with name 'my_executable' 
add_executable(my_executable ${SOURCE_FILES})

# Sets a variable for the include directories for the project 
set(INCLUDE_DIRS include)

# Sets a variable for the additional libraries to be linked 
set(LINK_LIBRARIES lib1 lib2)

# Searches for the libraries in the include directories 
find_library(LIB1 NAMES lib1 PATHS ${INCLUDE_DIRS})
find_library(LIB2 NAMES lib2 PATHS ${INCLUDE_DIRS})

# Includes the necessary directories for compilation 
include_directories(${INCLUDE_DIRS})

# Links the libraries to the target executable 
target_link_libraries(my_executable ${LINK_LIBRARIES})

# Sets the compiler flags for the target executable 
target_compile_options(my_executable PRIVATE -Wall -Werror -g)

# Generates a build system for the project 
cmake . -B build

# Builds the project using the generated build system 
cmake --build build
;;; Function that checks if a list is empty or not
;;; Parameters: lst - the list to be checked
;;; Returns: T if list is non-empty, NIL if empty
(defun is-list-non-empty (lst)
    (if (null lst)                 ; checks if list is null
        nil                        ; if true, return NIL
        t))                        ; if false, return T
;;; Function that calculates the sum of all numbers in a list
;;; Parameters: lst - the list of numbers
;;; Returns: the sum of all numbers in the list
(defun list-sum (lst)
  (cond ((null lst)                ; checks if list is null
         0)                        ; if true, return 0
        (atom lst)                 ; checks if list is atomic
        lst)                       ; if true, return the list
        (+ (car lst)               ; calculates the sum of the first element
           (list-sum (cdr lst))))) ; recursively calls the function on the rest of the list
(defmacro fib (n) ;; define a macro named 'fib' that takes in a parameter 'n'
	(cond ((equal n 0) 0) ;; if n equals 0, return 0
		  ((equal n 1) 1) ;; if n equals 1, return 1
		  (t (+ (fib (- n 1)) (fib (- n 2)))) ;; otherwise, recursively call fib with n-1 and n-2 and add the results
	)
) ;; end of macro definition

;; example usage: (fib 5) ;; outputs 5 (returns the 5th number in the fibonacci sequence)
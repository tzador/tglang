;;The following code defines a function called 'multiply', which takes two parameters 'a' and 'b' and returns the product of the two.
(defun multiply (a b)
  (* a b))
  
;;The following code defines a function called 'power', which takes two parameters 'base' and 'exponent' and calculates the power of the 'base' to the 'exponent'.
(defun power (base exponent)
  (if (= exponent 0)
      1
      (* base (power base (- exponent 1)))))
      
;;The following code uses function composition to create a new function called 'square', which takes one parameter 'x' and calculates the square of 'x'.
(defun square (x)
  (compose #'multiply x x))
  
;;Call the function 'multiply' with parameters 5 and 3. The output should be 15.
(multiply 5 3)
;; => 15

;;Call the function 'power' with parameters 2 and 3. The output should be 8.
(power 2 3)
;; => 8

;;Call the function 'square' with parameter 4. The output should be 16.
(square 4)
;; => 16
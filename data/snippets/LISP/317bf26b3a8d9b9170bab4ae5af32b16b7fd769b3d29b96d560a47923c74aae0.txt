;;; Function for calculating the factorial of a given number
;;; Takes in one argument, the number to find the factorial of
;;; Returns the factorial of the given number
(defun factorial (n)
  (if (= n 0)
      1 ;;; If n = 0, return 1
      (* n (factorial (- n 1)))
      ;;; Otherwise, recursively call factorial on n-1 and multiply it with n
  )
)

;;; Example usage:
(factorial 5) ;;; Returns 120, as 5! = 5 * 4 * 3 * 2 * 1 = 120
(factorial 0) ;;; Returns 1, as 0! = 1
(factorial 10) ;;; Returns 3628800, as 10! = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1 = 3628800
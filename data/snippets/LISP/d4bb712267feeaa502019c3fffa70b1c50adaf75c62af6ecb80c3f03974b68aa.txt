;;; A Simple LISP Function

;; This function calculates the factorial of a given number
;; The function takes in one parameter, n, which is the number to calculate factorial for
;; It returns the factorial of n

(defun factorial (n)
  "Calculates the factorial of a given number."
  (if (equal n 0) ;;; Base case: factorial of 0 is 1
      1
      (* n (factorial (- n 1))))) ;;; Recursive case: n! = n * (n-1)!

(factorial 5) ;;; Output: 120 (5! = 5*4*3*2*1 = 120)

;;; Explanation:

;; In LISP, a function is defined using the 'defun' keyword, followed by the function name and its parameters in parentheses
;; In this case, the function name is 'factorial' and it takes in one parameter, 'n'
;; The next line is a string that serves as a documentation string for the function
;; It is displayed when the function is called with the 'describe' command
;; The 'if' statement checks if the given number, 'n', is equal to 0. If it is, then the base case is triggered and the function returns 1 (since 0! = 1)
;; If 'n' is not equal to 0, then the recursive case is triggered where the function calls itself with the parameter 'n-1'
;; Finally, the 'factorial' function is called with the parameter 5, and the result, 120, is returned
;; This function demonstrates the use of recursion to solve a simple mathematical problem, the factorial of a number
(defun factorial (n)           ; define a function named 'factorial' that takes in one argument 'n'
  (if (= n 0)                  ; check if the argument is equal to 0
      1                         ; if so, return 1 as result
      (* n (factorial (- n 1))))) ; otherwise, return the multiplication of the argument and the result of the function with argument n-1, recursively calling the function
(factorial 5)                  ; call the 'factorial' function with argument 5, should return 120 as the result
; output: 120                   ; print the result of the previous function call
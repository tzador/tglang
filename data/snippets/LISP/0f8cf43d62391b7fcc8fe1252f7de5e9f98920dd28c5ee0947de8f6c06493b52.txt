;;; This is a function that calculates the sum of two numbers
(defun add (num1 num2)
  "This function takes in two numbers and returns their sum"
  (+ num1 num2))

;;; This is a function that calculates the factorial of a number
(defun factorial (num)
  "This function takes in a number and returns its factorial"
  (if (<= num 1)
      1
      (* num (factorial (- num 1)))))

;;; This is a function that calculates the nth number in the Fibonacci sequence
(defun fibonacci (n)
  "This function takes in a number n and returns the nth number in the Fibonacci sequence"
  (if (or (= n 0) (= n 1))
      n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

;;; This is a function that checks if a number is prime
(defun prime (n)
  "This function takes in a number and checks if it is prime"
  (if (<= n 1)
      nil
      (do ((i 2 (+ i 1))
           (isPrime t))
          ((> i (/ n 2)) isPrime)
          (if (zerop (mod n i))
              (setf isPrime nil))))

;;; This is a function that takes in a list and returns the sum of its elements
(defun sum-list (lst)
  "This function takes in a list and returns the sum of its elements"
  (if (null lst)
      0
      (+ (car lst) (sum-list (cdr lst)))))

;;; This is a function that maps a function onto a list
(defun map (func lst)
  "This function takes in a function and a list and maps the function onto the list"
  (if (null lst)
      nil
      (cons (funcall func (car lst)) (map func (cdr lst)))))
;;; This code snippet uses recursion to find the factorial of a number
(defun factorial (n) ;;; Define a function named "factorial" that takes in a number as the argument
  (if (= n 0) ;;; If n is equal to 0, return 1 as the factorial of 0 is 1
      1
      (* n (factorial (- n 1)) ;;; Otherwise, return the product of n and the factorial of (n-1)
      )
  )
)
;;; Call the function with the argument '5' and print the result
(print (factorial 5))

;;; Output:
120
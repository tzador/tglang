;; This is a complex LISP code that defines a function to recursively calculate the factorial of a number using tail recursion
;; It takes in a single parameter and returns the factorial value
(defun factorial (n)
  (flet ((tail-factorial (n accumulator)
           (if (<= n 1) ;; base case: if n is less than or equal to 1, return the accumulator
               accumulator 
               (tail-factorial (- n 1) (* n accumulator))))) ;; recursive case: multiply the accumulator by n and decrement n
    (tail-factorial n 1))) ;; call the helper function with n and an accumulator of 1 initially
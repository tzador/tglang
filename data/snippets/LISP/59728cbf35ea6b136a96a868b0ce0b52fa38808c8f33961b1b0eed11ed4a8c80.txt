(defun fibonacci (n) ; creates a function named 'fibonacci' that takes in one argument, 'n'
  (cond ; starts a conditional statement
    ((= n 0) 0) ; checks if n is equal to 0, if true, return 0
    ((= n 1) 1) ; checks if n is equal to 1, if true, return 1
    (t (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))) ; otherwise, calls the function recursively, adding the previous two numbers in the fibonacci sequence

; example function call: (fibonacci 5)
; output: 5

; example function call: (fibonacci 10)
; output: 55
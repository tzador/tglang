(defstruct company
  (name "Example Company")          ;; defining the structure "company" with a default value for name
  (employees '(("John" 30 "Manager")  ;; defining a list of employee data as the default value for employees
               ("Jane" 25 "Developer")
               ("Bob" 27 "Salesperson")))
  (department (cdr (assoc "Bob" employees)))) ;; accessing the "department" field by finding the employee with the name "Bob" in the "employees" list

(defparameter *company*              ;; defining a global variable for the company
  (make-company :name "Best Co."     ;; creating a new instance of the "company" structure with custom values
                :employees '(("Alice" 35 "CEO")
                             ("Mark" 29 "Developer")
                             ("Lisa" 33 "HR")))
)

(format t "~% Company Name: ~a" (company-name *company*)) ;; outputting the company name using the "company-name" accessor function

(format t "~% Number of Employees: ~a" (length (company-employees *company*))) ;; outputting the number of employees in the company

(loop for (name age role) in (company-employees *company*) ;; using a "loop" to iterate through the list of employees
      do (format t "~% Employee: ~a, Age: ~a, Role: ~a" name age role)) ;; printing out each employee's name, age, and role
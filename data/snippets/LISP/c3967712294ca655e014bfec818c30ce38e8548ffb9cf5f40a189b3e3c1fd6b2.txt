;; This code snippet is a function that calculates the nth power of a given number using recursion
;; Input: num - the base number, n - the power
;; Output: result - the nth power of the given number
;; Example: (n-th-power 2 3) ; should return 8

(defun n-th-power (num n) ; defines a function named "n-th-power" that takes in two parameters - num and n
    (if (or (= n 0) (= num 0)) ; checks if either n or num is equal to 0
        1 ; if so, returns 1 as any number to the power of 0 is 1
        (* num (n-th-power num (- n 1)))) ; multiplies num by the result of the function called with num and n-1 as parameters
                                            ; this is the recursive step, where the function calls itself until n becomes 0
    )
;;; Function to calculate the nth power of a number using recursion
;;; n: number, k: power
;;; Output: nth power
(defun power (n k)
  "Calculates the nth power of a number using recursion"
  (labels ((power-recursive (a b)
             "Recursive helper function, a: accumulator, b: counter"
             (if (= b 0) ; if counter is 0, return accumulator
                 a
                 (power-recursive (* a n) (- b 1))))) ; recursively multiply accumulator by n and decrease counter
    (power-recursive 1 k))) ; call helper function with initial accumulator value of 1 and k as counter
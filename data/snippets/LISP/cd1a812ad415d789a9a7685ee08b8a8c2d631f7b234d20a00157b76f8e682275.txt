;; Define a function named 'factorial', which takes one parameter 'n'
;; and calculates the factorial of n using recursion
(defun factorial (n)
  (if (<= n 1) ;; base case: if n is less than or equal to 1
    1 ;; return 1 (base case value)
    (* n (factorial (- n 1))) ;; recursive call: multiply n with the factorial of n-1
  )
)

;; Call the 'factorial' function with the value of 5
(factorial 5) ;; Output: 120 (5! = 5 * 4 * 3 * 2 * 1 = 120)
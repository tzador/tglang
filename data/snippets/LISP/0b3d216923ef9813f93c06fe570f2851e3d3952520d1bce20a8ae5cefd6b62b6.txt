;;Defines a function that takes in two parameters, a list and a number
(defun sum-even (list num)
  (cond
    ;;Checks if the list is empty, if so, returns 0
    ((null list)
     0)
    ;;Checks if the current element is an integer and if it is even
    ((and (integerp (car list)) 
         (= (mod (car list) 2) 0))
     ;;Multiplies the current element with the number and adds it to the result of the recursive call
     (+ (* num (car list))
        (sum-even (cdr list) num)))
    ;;Otherwise, adds the result of the recursive call with the current list
    (t
     (sum-even (cdr list) num))
  )
)

;;Example function call, where the list is (1 2 3) and the number is 3
(sum-even '(1 2 3) 3)
;;; This program calculates the exponential power of a given number
;;; Inputs:
;;; n - the base number
;;; p - the power to raise to
;;; Outputs:
;;; result - the result of n raised to the power of p

(defun exp-power (n p)                                ; Define a function called exp-power with two parameters n and p
(let ((result n))                                    ; Initialize result to n
(dotimes (i (1- p))                                  ; Loop from 0 to p-1
(setf result (* result n)))                          ; Update result by multiplying with n each time
(if (= p 0)                                          ; Check if p is 0
(setf result 1))                                     ; Update result to 1 if p is 0
result))                                             ; Return the final value of result
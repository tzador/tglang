;; Define a function named "powers-of-two" that takes in one parameter "n"
(defun powers-of-two (n)
;; Check if the parameter is equal to 0
  (if (= n 0)
  	;; If true, return 1
    1
    ;; If false, call "powers-of-two" recursively with n-1 and multiply the result by 2
    (* (powers-of-two (- n 1)) 2)))
    
;; Call the function with the argument 4 and print the result
(format t "The result of the function is ~a" (powers-of-two 4))
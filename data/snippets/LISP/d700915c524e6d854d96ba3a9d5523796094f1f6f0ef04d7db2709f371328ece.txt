;;; An example of a complex LISP code snippet

(defun calculate-factorial (n) 
  "Calculates the factorial of a given number"
  (label loop
    (if (zerop n)
      1
      (* n (recurse (- n 1))))))

(defun power-of-2 (x) 
  "Calculates the power of 2 of a given number"
  (let ((result 1))
    (loop
      until (<= x 0)
      do (setf result (* result 2))
      finally (return result))))

(defun quicksort (list) 
  "Sorts a list of numbers in ascending order using the quicksort algorithm"
  (if (null list)
    nil
    (let ((pivot (car list)))
      (append
        (quicksort (remove-if-not #'(lambda (x) (< x pivot)) (cdr list)))
        (list pivot)
        (quicksort (remove-if-not #'(lambda (x) (> x pivot)) (cdr list)))))))
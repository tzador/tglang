;; This function takes in a list of numbers and returns a list of their squares.
(define (square-list lst)
  (if (null? lst) ; Checks if the list is empty
      '() ; If empty, return empty list
      (cons ; If not empty, cons the square of the first element with the result of calling the function again on the rest of the list
            (* (car lst) (car lst)) 
            (square-list (cdr lst))))) ; Calls the function on the rest of the list, recursively
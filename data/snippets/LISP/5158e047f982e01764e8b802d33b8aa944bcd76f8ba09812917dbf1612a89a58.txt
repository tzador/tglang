;; Defining a function 'power' that takes in two parameters, 'base' and 'exponent'.
(defun power (base exponent)
  ;; If exponent is equal to 0, return 1 (since any number to the power of 0 is 1).
  (if (= exponent 0) 
    ;; Return 1.
    1 
    ;; Otherwise, multiply the base by the result of calling 'power' function recursively,
    ;; with the base and the exponent decremented by 1.
    (* base (power base (- exponent 1)))))
;; Defining a variable 'result' and assigning it the value of calling 'power' function with
;; base 2 and exponent 8.
(defvar result (power 2 8))
;; Printing the value of 'result'.
(print result)
;; This is a function that takes in a list of integers and returns the sum of all the elements in the list.
;; It uses recursion and a helper function to iterate through the list.
(defun sum-list (lst)
  (defun helper (lst acc)
    (if (null lst)     ; check if list is empty
        acc            ; base case, return accumulated sum
        (helper (rest lst) (+ acc (first lst))) ; recursive case, add first element to acc and call helper with rest of list
    )
  )
  (helper lst 0)       ; call helper function with initial accumulator value of 0
)

;; Example usage: (sum-list '(1 2 3 4 5)) => 15
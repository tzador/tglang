;; Helper function to calculate the average of a list of numbers
(defun average (list)
  ; Initialize local variables
  (let ((total 0) (count 0))
    ; Loop through the list and update total and count variables
    (dolist (num list)
      (setf total (+ total num))
      (setf count (+ count 1)))
    ; Calculate average and return it
    (/ total count)))



;; Function to split a string into a list of words
(defun split-string (str)
  ; Initialize local variables
  (let ((words '()))
    ; Loop through the characters of the string
    (loop for c across str
    ; If the current character is a space or a tab, add the word to the list
    if (or 
    (= c #\space) ; #\space : space character
    (= c #\tab)) ; #\tab : tab character
      do (push (make-string (length words) :initial-element c) words)
    ; Otherwise, add the character to the current word
    else 
      do (setf (car words) (concatenate 'string (car words) (string c))))
    ; Reverse the list so the words are in the correct order
    (reverse words)))


;; Function to find the highest number in a list
(defun find-highest (list)
  ; Initialize a local variable to store the current highest number
  (let ((highest (car list)))
    ; Loop through the rest of the list
    (dolist (num (cdr list))
      ; If the current number is higher than the current highest, update it
      (when (> num highest)
        (setf highest num)))
    ; Return the highest number
    highest))


;; Example usage of the average function
(let ((list (list 4 7 2 9 5 1)))
  (format t "The average of ~a is ~a." list (average list)))

;; Output: The average of (4 7 2 9 5 1) is 4.666666666666667.

;; Example usage of the split-string function
(format t "The string ~s split into words is ~s." "Hello World" (split-string "Hello World"))

;; Output: The string "Hello World" split into words is ("Hello" "World").

;; Example usage of the find-highest function 
(let ((list (list 2 5 8 1 9 3)))
  (format t "The highest number in ~a is ~a." list (find-highest list)))

;; Output: The highest number in (2 5 8 1 9 3) is 9.
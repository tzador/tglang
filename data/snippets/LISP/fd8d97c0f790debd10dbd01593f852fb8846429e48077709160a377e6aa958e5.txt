;;;; Decryption function for Caesar cipher

; Defining a constant list of letters in the alphabet
(defparameter *alphabet*
  '(#\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z))

; Defining the decryption function
(defun caesar-decrypt (encrypted-message key)
  ; Initializing an empty string to store the decrypted message
  (let ((decrypted-message ""))
    ; Looping through each character in the encrypted message
    (loop for char across encrypted-message
          ; Checking if the character is a letter
          when (member char *alphabet*)
          ; Finding the index of the character in the alphabet list
          for index = (position char *alphabet*)
          ; Adding the key to the index to get the decrypted index
          ; Taking the remainder of the division to handle wrap around
          ; Substituting the decrypted character from the alphabet list
          do (setf decrypted-message
                   (concatenate 'string decrypted-message
                                (string (nth (mod (+ index key) (length *alphabet*)) *alphabet*))))
          ; If the character is not a letter, just add it to the decrypted message
          else do (setf decrypted-message
                         (concatenate 'string decrypted-message (string char))))
    ; Returning the decrypted message
    decrypted-message))

; Example usage
(caesar-decrypt "Ifmmp xpsme" 1) ; => Hello world
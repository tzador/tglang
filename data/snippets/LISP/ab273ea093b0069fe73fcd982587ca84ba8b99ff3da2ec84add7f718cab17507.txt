(define (permutation lst) 
    (if (null? lst) 
        '(()) 
        (apply append 
            (map (lambda (x) 
                    (map (lambda (p) 
                            (cons x p)) 
                         (permutation (remove x lst)))) 
                lst))))

; This function generates all possible permutations of a list.
; The input is a list of elements, and the output is a list of all possible permutations of those elements.
; Example:
; (permutation '(1 2 3)) ; output: ((1 2 3) (2 1 3) (2 3 1) (1 3 2) (3 1 2) (3 2 1))
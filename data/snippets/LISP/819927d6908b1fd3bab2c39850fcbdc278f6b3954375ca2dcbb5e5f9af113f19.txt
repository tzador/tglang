;; Here we define a function named "longest-string"
;; It takes in a list of strings as a parameter
;; It then uses recursion to compare the length of each string in the list
;; And returns the longest string
(defun longest-string (list)
  (if (null list) ; base case, when the list is empty
      nil ; return nil
      (let ((first-string (car list)) ; get the first string in the list
            (longest (longest-string (cdr list)))) ; get the longest string from the rest of the list using recursion
        (if (or (null longest) ; check if the longest string is nil (base case when there is only one string in the list)
                (> (length first-string) (length longest))) ; check if the length of the first string is longer than the longest string
            first-string ; if it is, return the first string as the longest string
            longest)))) ; if not, return the longest string

;; In order to test our function, we define a list of strings
(defvar string-list '("Hello" "This" "Is" "A" "Test" "Of" "Longest" "String" "Function"))

;; We then call our function with the string-list as the argument
(longest-string string-list)

;; The output should be "Longest" as it is the longest string in the list.
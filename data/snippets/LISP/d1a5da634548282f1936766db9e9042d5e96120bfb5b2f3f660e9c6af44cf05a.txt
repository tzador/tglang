;; Function to check if a list is in numerical order
(defun is-numerical-order (lst)                      ; Define a function with a parameter 'lst'
  (if (null lst)                                     ; If the list is empty
      T                                              ; Return true
      (let ((prev (car lst)))                        ; Otherwise, let previous element be the first element of the list
        (dolist (elt (rest lst) T)                   ; Loop through the rest of the list
          (when (< elt prev) (return-from is-numerical-order nil)) ; If an element is less than the previous element, return false
          (setq prev elt))                           ; Otherwise, set previous element to current element
        T)))                                          ; Return true after looping through the entire list
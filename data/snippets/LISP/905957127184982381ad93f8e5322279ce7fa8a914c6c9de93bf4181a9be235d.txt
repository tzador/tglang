;;;; This is a sample code snippet in LISP
;;;; It generates a list of prime numbers up to a specified limit

; Function to check if a number is prime
; Returns true if the number is prime, otherwise false
(defun is-prime (num)
  (loop for i from 2 to (truncate (sqrt num)) do
    (when (zerop (mod num i))
      (return-from is-prime nil)))
  t)

; Function to generate a list of prime numbers up to a specified limit
; Takes in an integer, limit, as an argument
; Returns a list of prime numbers up to the limit
(defun prime-list (limit)
  (let ((primes ()))
    (loop for num from 2 to limit do
      (when (is-prime num)
        (push num primes)))
    primes))

; Example usage:
; Generate a list of prime numbers up to the limit of 20
(prime-list 20)

; Output:
; (2 3 5 7 11 13 17 19)
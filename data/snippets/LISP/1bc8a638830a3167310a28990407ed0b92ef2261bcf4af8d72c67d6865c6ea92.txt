(defun filter-list (pred lst)                                      ; defines a function named filter-list taking two parameters
   (cond ((null lst) nil)                                        ; checks if the given list is empty, if so, returns nil
         ((funcall pred (car lst))                                 ; checks if the first element of the list satisfies the given predicate
            (cons (car lst)                                        ; if so, adds the first element to the result list
                  (filter-list pred (cdr lst))))                   ; calls the filter-list function again for the remaining list
         (t (filter-list pred (cdr lst)))))                        ; otherwise, calls the filter-list function again for the remaining list
 
(filter-list #'oddp '(1 2 3 4 5 6 7))                              ; calls the filter-list function with the predicate 'oddp' and a list of integers
;=> (1 3 5 7)                                                     ; the output should be a list containing only the odd numbers from the original list
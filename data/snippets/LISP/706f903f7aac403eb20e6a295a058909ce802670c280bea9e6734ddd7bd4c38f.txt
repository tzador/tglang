;;; list definition
(defparameter *list* '(1 2 3 4 5))

;;; function that adds element to list
(defun add-to-list (element list)
	"Adds the given element to the front of the given list."
	(cons element list))

;;; function that checks if element is in list
(defun is-in-list (element list)
	"Checks if the given element is in the given list."
	(if (member element list) 
		"T" 
		"F"))

;;; function that removes duplicate elements in a list
(defun remove-duplicates (list)
	"Removes duplicate elements in the given list."
	(cond ((null list) nil)
		  ((member (first list) (cdr list)) (remove-duplicates (cdr list)))
		  (t (cons (first list) (remove-duplicates (cdr list))))))

;;; function that finds the longest word/symbol in a list
(defun find-longest (list)
	"Finds the longest word/symbol in the given list."
	(let ((longest nil))
		(dolist (element list longest)
			(when (and (symbolp element) (> (length (symbol-name element)) (length (symbol-name longest))))
				(setf longest element)))))

;;; function that square all elements in list
(defun square-list (list)
	"Squares all the elements in the given list."
	(mapcar (lambda (x) (* x x)) list))

;;; function that creates a list of random numbers
(defun random-list (n)
	"Creates a list of n random numbers."
	(loop repeat n collect (random 10)))
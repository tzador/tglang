(defun bubble-sort (list)    ; define a function named "bubble-sort" that takes in a list as its argument
  (let ((size (length list))) ; use a "let" statement to define the variable "size" which is the length of the list
    (dotimes (i size)         ; iterate over the list "size" number of times using a "dotimes" loop and set the loop counter to "i"
      (dotimes (j (- size i 1))    ; iterate over the list "size - i - 1" number of times using another "dotimes" loop and set the loop counter to "j"
        (when (> (nth j list) (nth (1+ j) list))   ; check if the current element at index "j" is greater than the next element at index "j + 1"
          (rotatef (nth j list) (nth (1+ j) list)) ; if so, swap the elements using the "rotatef" function which takes two arguments
          ))                                       ; close the "when" statement
      ))                                            ; close the inner "dotimes" loop
    list)                                           ; return the sorted list after all iterations are completed
  )
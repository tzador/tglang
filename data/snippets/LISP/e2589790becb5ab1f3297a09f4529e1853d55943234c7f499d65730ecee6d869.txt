;; This program demonstrates a function that takes in a list and recursively sums all the integers in the list

(defun sum-recursively (lst)
  (cond
    ((null lst) 0) ;; if list is empty, return 0
    ((atom lst) lst) ;; if list contains only one element, return that element
    (t (+ (sum-recursively (car lst)) (sum-recursively (cdr lst)))) ;; recursively call function on car and cdr of list, then add the results
  )
)

(sum-recursively '(1 2 3 4 5)) ;; outputs 15
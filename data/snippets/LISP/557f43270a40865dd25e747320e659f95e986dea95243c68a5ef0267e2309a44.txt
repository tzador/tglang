;; This code snippet performs a recursive binary search on a sorted list
;; It takes in the list, the element to search for, and the starting and ending indices
(eval-when :compile-toplevel-not-executed :load-toplevel-only)
(defparameter *list* '(1 3 5 8 9 10 13 25 29 30))

(defun recursive-binary-search (list element start end)
  "Perform a recursive binary search on a given list"
  (let ((middle (floor (+ start end) 2)))
    (when (>= end start)
      (if (= (nth middle list) element)
          t
          (if (> (nth middle list) element)
              (recursive-binary-search list element start (- middle 1))
              (recursive-binary-search list element (+ middle 1) end))))))

(defparameter *element* 10)
(defparameter *start* 0)
(defparameter *end* (1- (length *list*)))

(recursive-binary-search *list* *element* *start* *end*)
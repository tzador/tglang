(defun quicksort (lst)                     ; Function to implement quicksort
    (if (null lst)                         ; Check if list is empty
        nil                                ; Return nil if empty        
        (let ((pivot (first lst))          ; Define the pivot as first element
              (smaller nil)                ; List of smaller elements
              (larger nil))                ; List of larger elements
            (dolist (element (rest lst))   ; Iterate through all elements except pivot
                (if (<= element pivot)     ; Check if element is smaller or equal to pivot
                    (setq smaller (cons element smaller))  ; Add to smaller list
                    (setq larger (cons element larger)))) ; Add to larger list
            (append (quicksort smaller)    ; Recursively sort smaller list
                    (list pivot)           ; Add pivot to end of smaller list
                    (quicksort larger))))  ; Recursively sort larger list
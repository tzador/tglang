;; Define a function that takes in two parameters, a list and a number, and returns a new list
;; with the given number added to each element of the input list
(defun add-number-to-list (list number)
  (if (null list) ;; if the list is empty, return an empty list
      list
      (cons (+ (car list) number) ;; add the number to the first element of the list and cons it with the rest of the list
            (add-number-to-list (cdr list) number)))) ;; recursively call the function with the remaining elements of the list
  ;; Example call: (add-number-to-list '(1 2 3) 5) 
  ;; Output: (6 7 8)
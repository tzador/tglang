(defun quicksort (lst) ;; define a function named quicksort which takes a list as an argument
  (if (null lst) ;; checks if the list is empty
    lst ;; if true, returns the list as is
    (let ((pivot (car lst))) ;; else, define a variable 'pivot' which stores the first element of the list
      (append ;; append the following elements in correct order:
        (quicksort (remove-if-not #'<= lst pivot)) ;; elements less than or equal to the pivot
        (remove pivot lst) ;; the pivot element
        (quicksort (remove-if-not #'> lst pivot)) ;; elements greater than the pivot
      )
    )
  )
)

;; Example:
(quicksort '(5 2 7 1 4)) ;; returns '(1 2 4 5 7)
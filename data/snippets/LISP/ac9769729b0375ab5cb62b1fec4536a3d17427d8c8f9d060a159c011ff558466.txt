; Defining a function to sort a list using the quicksort algorithm
(defun quicksort (list)
  (cond ((null list) nil) ; Base case: if the list is empty, return nil
        (t (let ((pivot (car list))) ; Otherwise, set the pivot as the first element of the list
             (append ; Concatenate the following lists
               (quicksort (remove-if #'(lambda (x) (< x pivot)) (cdr list))) ; Sort the list of elements greater than the pivot
               (list pivot) ; Add the pivot back to the middle of the sorted list
               (quicksort (remove-if #'(lambda (x) (>= x pivot)) (cdr list))))))) ; Sort the list of elements less than or equal to the pivot
;; This is a complex code snippet in LISP that generates a list of Fibonacci numbers
(defun fib (n)                        ; define a function 'fib' with parameter 'n'
  (if (< n 2)                         ; if n is less than 2
      n                                ; the return n (0 or 1)
      (+ (fib (- n 1))                ; otherwise, recursively call 'fib' on n-1,
         (fib (- n 2)))))             ; fib on n-2, and sum the results
(defun fib-list (n)                   ; define a function 'fib-list' with parameter 'n'
  (if (= n 0)                         ; if n is 0
      nil                              ; return an empty list
      (cons (fib n)                    ; otherwise, cons the result of 'fib' on n
            (fib-list (- n 1))))       ; with the recursive call of 'fib-list' on n-1
(println (fib-list 20))               ; output a list of Fibonacci numbers up to n=20
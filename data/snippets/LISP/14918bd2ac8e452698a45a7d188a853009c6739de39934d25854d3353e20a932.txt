;; This function generates the power set of a given list
(defun powerset (lst)
  (if (null lst)                 ; if list is empty
      (list nil)                 ; then return a list with just an empty list
      (append (powerset (rest lst)) ; else recursively call function on the tail of the list
              (mapcar (lambda (subset) (cons (first lst) subset)) ; create subsets including first element
                      (powerset (rest lst)))))) ; recursively call function on the tail of the list again

(powerset '(a b c d))

;; Output: ((A B C D) (B C D) (A C D) (C D) (A D) (D) (A B) (B) ((A)) ())
;;;Generate a list of all pairs from two lists

;;;Define function that takes in two lists as parameters
(defun all-pairs (list1 list2)
  ;;;Initialize an empty list to store all pairs
  (setq pair-list nil)
  ;;;Nested loop over both lists
  (loop for element1 in list1
    do (loop for element2 in list2
          do (setq pair-list (cons (list element1 element2) pair-list))))
  ;;;Return the list of all pairs created
  pair-list)
  
;;;Example usage with two lists [1, 2, 3] and [4, 5]
(all-pairs '(1 2 3) '(4 5))

;;;Output:
;This will result in the following list: ((1 4) (1 5) (2 4) (2 5) (3 4) (3 5))
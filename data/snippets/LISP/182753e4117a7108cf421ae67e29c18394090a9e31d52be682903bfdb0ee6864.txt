;; This is a function that calculates the factorial of a number
(defun factorial (n) ; Define a function with one parameter, n
  (if (= n 0) ; If n is equal to 0
      1 ; Return 1 as the factorial of 0
      (* n (factorial (- n 1))) ; Otherwise, multiply n by the factorial of (n-1)
  )
)

;; This is a function that counts the number of vowels in a string
(defun count-vowels (string) ; Define a function with one parameter, string
  (if (null string) ; If the string is empty
      0 ; Return 0
      (if (member (car string) '(a e i o u)) ; If the first character of the string is a vowel
          (+ 1 (count-vowels (cdr string))) ; Add 1 to the count and call the function again with the rest of the string
          (count-vowels (cdr string)) ; Otherwise, just call the function again with the rest of the string
      )
  )
)

;; This is a recursive function that calculates the Fibonacci sequence at a given index
(defun fibonacci (n) ; Define a function with one parameter, n
  (if (or (= n 1) (= n 2)) ; If n is equal to 1 or 2
      1 ; Return 1 as the value of the sequence at position n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2))) ; Otherwise, add the values at the previous two positions in the sequence
  )
) 

;; Sample function calls and their output
(factorial 5) ; Returns 120
(count-vowels "apple") ; Returns 2
(fibonacci 7) ; Returns 13
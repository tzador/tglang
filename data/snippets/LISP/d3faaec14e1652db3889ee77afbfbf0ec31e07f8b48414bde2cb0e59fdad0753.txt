(defparameter *number* 5) ;; define a global variable named *number* with a value of 5
(defparameter *list* '(3 7 9)) ;; define a global variable named *list* with a list of integers
(defun square (x) (* x x)) ;; define a function named square that takes in a parameter x and returns its square
(defun sum (lst) ;; define a function named sum that takes in a list as a parameter
 (if (null lst) 0 ;; if list is empty, return 0
     (+ (car lst) (sum (cdr lst))))) ;; else, add the first element of list to the recursive call of sum on the rest of the list
(setf *number* (square *number*)) ;; change the value of *number* to its square using the square function
(print *number*) ;; print the value of *number* which is now 25
(print (sum *list*)) ;; print the sum of the elements in *list* which is 19 (3 + 7 + 9)
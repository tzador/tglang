;; Initialize hash table with custom hash function
(defun my-hash-function(key)
  "This function takes a string as input and returns a hash value for it"
  (let ((sum 0))
    (loop for char across key do
      (setq sum (+ sum (char-code char))))
    (ash sum -3)))

;; Use hash table to store key-value pairs
(defun store-in-table (key value table)
  "This function stores a key-value pair in the given hash table"
  (let ((index (my-hash-function key)))
    (setf (gethash key table) value)))

;; Create a hash table to store student information
(defvar *student-table* (make-hash-table :test 'equal))

;; Add student information to hash table
(store-in-table "John" '("John Smith" 25 "Computer Science") *student-table*)
(store-in-table "Jane" '("Jane Johnson" 23 "Mathematics") *student-table*)

;; Get student's name, age and major from hash table
(defvar *student-info* (gethash "John" *student-table*))
(defvar *student-name* (first *student-info*))
(defvar *student-age* (second *student-info*))
(defvar *student-major* (third *student-info*))

;; Print student's information
(format nil "Student Name: ~A~%Student Age: ~A~%Student Major: ~A" *student-name* *student-age* *student-major*)
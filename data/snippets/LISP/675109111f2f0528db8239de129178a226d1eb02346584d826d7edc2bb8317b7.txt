(defun sum-of-squares (num-list) ; Defines a function called sum-of-squares that takes in a list as a parameter
  (if (null num-list) ; Checks if the list is empty
      0 ; If it is empty, returns 0
      (+ ; If not, adds
        (expt (car num-list) 2) ; the square of the first element of the list (using the expt function)
        (sum-of-squares (cdr num-list))))) ; with the result of calling the function again with the rest of the list as the argument
       
      
;; Example call
(sum-of-squares '(1 2 3 4 5)) ; Output: 55, as (1^2 + 2^2 + 3^2 + 4^2 + 5^2) = 55
;; -*- mode: lisp; coding: utf-8 -*-

;; define a function that takes in a list of numbers and returns the sum of all the elements

(defun sum (list)

    ;; use a recursive helper function to iterate through the list and keep track of the sum
    (defun sum-helper (list total)
        ;; check if list is empty, if so return the total
        (if (null list)
            total
        ;; if list is not empty, add the first element to the total and call sum-helper again with the remaining elements
            (sum-helper (cdr list) (+ (car list) total))
        )
    )
    ;; call the helper function with the initial total of 0
    (sum-helper list 0)
)

;; call the sum function with a list of numbers and print the result
(print (sum '(1 2 3 4 5)))
;; This code snippet defines a function called 'max-heapify'
;; It takes in two arguments, the heap and the current index
(defun max-heapify (heap i)
    (let ((l (* 2 i)) ; l is the index of the left child
          (r (+ (* 2 i) 1)) ; r is the index of the right child
          (largest i)) ; largest is the index of the largest element among i, l and r
        (if (and (> l (length heap)) (>= (nth l heap) (nth i heap)))
            (setq largest l)
            (setq largest i))
        (if (and (> r (length heap)) (>= (nth r heap) (nth largest heap)))
            (setq largest r))
        (if (/= largest i)
            (progn
                (rotatef (nth largest heap) (nth i heap))
                (max-heapify heap largest)))))
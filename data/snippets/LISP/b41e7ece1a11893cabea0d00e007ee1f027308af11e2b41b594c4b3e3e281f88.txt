(defun quicksort (list)
  (if (null list)                      ; Check if list is empty
      '()                              ; If so, return empty list
      (let ((pivot (car list)))        ; Set pivot to first element
        (append                         ; Append
          (quicksort                    ; The sorted list of elements
           (remove-if-not               ; That pass this predicate
            #'(lambda (x) (< x pivot))  ; (Less than pivot)
            (cdr list)))                 ; From the rest of the list
          (list pivot)                  ; With the pivot
          (quicksort                    ; And the sorted list of elements
           (remove-if-not               ; That pass this predicate
            #'(lambda (x) (>= x pivot)) ; (Greater than or equal to pivot)
            (cdr list))))))              ; From the rest of the list
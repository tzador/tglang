;; This is a comment in LISP
(defclass Animal () ; defining a class named Animal
  ((name :initarg :name :accessor name) ; defining a slot for the name property with an accessor method
   (age  :initarg :age :accessor age)) ; defining a slot for the age property with an accessor method
  (:documentation "A class representing an animal")) ; adding a documentation for the class

(defmethod speak ((animal Animal)) ; defining a method named speak that takes an Animal as parameter
  (format t "~a says 'Hello!'" (name animal))) ; printing out the name of the animal with a greeting

(defclass Dog (Animal) ; defining a subclass Dog that inherits from class Animal
  ((breed :initarg :breed :accessor breed)) ; defining a slot for the breed property with an accessor method
  (:documentation "A class representing a dog")) ; adding a documentation for the subclass

(defmethod speak ((dog Dog)) ; redefining the speak method for the Dog subclass
  (format t "~a, the ~a dog, says 'Woof!'" (name dog) (breed dog))) ; printing out the name and breed of the dog with a barking sound

(defmethod fetch ((dog Dog)) ; defining a method named fetch that takes a Dog as parameter
  (format t "~a fetches a stick!" (name dog))) ; printing out the name of the dog with an action of fetching a stick

(let ((fido (make-instance 'Dog :name "Fido" :age 5 :breed "Labrador Retriever"))) ; creating an instance of the Dog class with name, age, and breed properties
  (speak fido) ; calling the speak method for the instance
  (fetch fido)) ; calling the fetch method for the instance
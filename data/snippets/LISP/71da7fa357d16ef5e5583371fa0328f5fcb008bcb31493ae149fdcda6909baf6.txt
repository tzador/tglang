;; Function that checks if a given number is a prime number
(defun is-prime (num)
  "Checks if a given number is a prime number"
  (let ((quad (sqrt num))) ; Checking up to the square root of the number is sufficient
    (loop for i from 2 to quad  ; Looping through all numbers from 2 up to the square root
      if (= 0 (mod num i)) ; Checking if the number is divisible by the current number in the loop
      do (return nil) ; If the number is divisible, return false
      else ; Otherwise, continue the loop
      (if (= i quad) ; If we have reached the square root and haven't found any other factors, the number is prime
        (return t) ; Return true
        (continue))))) ; Otherwise, continue the loop to check the next possible factor
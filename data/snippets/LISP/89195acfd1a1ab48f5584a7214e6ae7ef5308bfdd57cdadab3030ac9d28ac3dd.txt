;; This is a function that checks if a number is prime.

(defun is-prime (num) ;; define a function called "is-prime" that takes in a parameter "num"
  (let ((i 2)) ;; define a local variable "i" and set it to 2
    (when (> (* i i) num) ;; if the square of "i" is greater than "num"
      T) ;; return true (since "num" must be prime at this point)
    (cond ;; otherwise, use a conditional statement
      ((= 0 (mod num i)) ;; if "i" divides evenly into "num" (i.e. if "num" is divisible by "i")
        NIL) ;; return false
      (T ;; otherwise (if "i" does not divide evenly into "num")
        (setf i (+ i 1)) ;; increment "i" by 1
        (is-prime num)) ;; recursively call the function again, passing in "num" as the parameter
      )))
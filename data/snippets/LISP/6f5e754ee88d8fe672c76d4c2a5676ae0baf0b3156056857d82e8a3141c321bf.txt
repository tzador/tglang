(defvar *input*
  (make-array '(3 4))) ;; creates a 2-dimensional array with 3 rows and 4 columns

(defun generate
  (x y)
  (cond ((and (evenp x) (evenp y)) "even number") ;; checks if both x and y are even numbers
        ((or (oddp x) (oddp y)) "odd number") ;; checks if either x or y is an odd number
        (t "neither even nor odd"))) ;; default case if none of the above conditions are met

(loop for i from 0 to (array-dimension *input* 0) ;; loop through rows of the 2-dimensional array
      do (loop for j from 0 to (array-dimension *input* 1) ;; loop through columns of the 2-dimensional array
               do (setf (aref *input* i j) (generate i j)))) ;; set value of element at row i and column j using generate function

;; output of *input* array:
;; #2A((0 1 "odd number" "odd number") ;; row 0
;;     (2 "even number" "even number" 3) ;; row 1
;;     (4 "even number" "even number" 5)) ;; row 2
(let ((num 10)) ; 'let' is used to define local variables
    (print "The number is:") ; 'print' outputs the given string
    (print num)) ; 'print' can also output variables
; This is a comment, it is ignored by the interpreter
(if (> num 5) ; 'if' statement checks if the condition is true (num > 5)
    (print "The number is greater than 5.") ; If the condition is true, this statement is executed
    (print "The number is less than or equal to 5.")) ; If the condition is false, this statement is executed
; Nested 'if' statements
(if (= num 10) ; 'if' statement checks if the condition is true (num = 10)
    (if (evenp num) ; 'evenp' function checks if the number is even
        (print "The number is even.")
        (print "The number is odd."))
    (print "The number is not equal to 10.")) ; If the condition is false, this statement is executed
; Functions can be defined and called
(defun square (x) ; 'defun' is used to define a function named 'square' with argument 'x'
    (* x x)) ; The function multiplies the given argument by itself and returns the result
(print "The square of the number is:")
(print (square num)) ; Calls the 'square' function with the variable 'num' as the argument and prints the result
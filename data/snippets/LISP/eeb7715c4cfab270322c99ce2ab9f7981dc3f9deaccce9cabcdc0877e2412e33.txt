;;This is a function that takes in two lists and compares their lengths
;;and outputs the longer list.
(defun compare-length (list1 list2)
  "Returns the longer of the two lists"
  (if (> (length list1) (length list2))
    list1
    list2))

;;This is another function that takes in a list and a value and appends
;;the value to the list.
(defun append-value (list value)
  "Appends the given value to the given list"
  (if (null list)
    (list value)
    (cons (car list) (append-value (cdr list) value))))

;;This is a helper function that takes in a list and a value and
;;checks if the value exists in the list.
(defun check-exists (list value)
  "Checks if the given value exists in the given list"
  (if (null list)
    nil
    (if (eq (car list) value)
      t
      (check-exists (cdr list) value))))

;;This is a function that takes in two lists and merges them together
;;by appending each element of the second list to the first list,
;;ignoring any elements that already exist in the first list.
(defun merge-lists (list1 list2)
  "Merges two lists, ignoring any duplicate elements"
  (if (null list2)
    list1
    (if (check-exists list1 (car list2))
      (merge-lists list1 (cdr list2))
      (merge-lists (append-value list1 (car list2)) (cdr list2))))
;;; This is a code snippet in LISP that demonstrates recursion
(defun factorial (n) ;;; Defines a function called "factorial" that takes in one argument, "n"
  (if (= n 0) ;;; Checks if the argument n is equal to 0
      1 ;;; If it is, returns 1 as the factorial of 0 is 1
      (* n (factorial (- n 1)))) ;;; Otherwise, multiplies n with the factorial of n-1
(print (factorial 5)) ;;; Calls the "factorial" function with the argument 5 and prints the output

;;; Output: 120 (5! = 5*4*3*2*1 = 120)
(defun binary-search (alist item &key (low 0) (high (- (length alist) 1)))
  """
    A function that implements a binary search algorithm.

    Parameters:
      alist (list) - a sorted list to search from
      item (any) - the value to search for
      low (integer) - the lower bound index of the sublist
      high (integer) - the higher bound index of the sublist

    Returns:
      The index of the searched item or nil if not found.
  """

  (when (> low high)
    nil)

  (let ((mid (truncate (/ (+ low high 1) 2))))
    (cond ((equal item (nth mid alist))
            mid)
          ((lessp item (nth mid alist))
            (binary-search alist item :low low :high (1- mid)))
          ((greaterp item (nth mid alist))
            (binary-search alist item :low (1+ mid) :high high)))))
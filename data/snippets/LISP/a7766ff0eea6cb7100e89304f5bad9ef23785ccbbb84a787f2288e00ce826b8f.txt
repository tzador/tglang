;; This is a function that takes in two arguments and returns the product.
;; The first argument must be a number, and the second must be a list of numbers.

(defun product (num lst) ; define a function named "product" with two parameters "num" and "lst"
  (cond ((null lst) 1) ; if the second argument is an empty list, return 1
        ((not (numberp num)) (error "The first argument must be a number.")) ; if the first argument is not a number, throw an error
        ((not (listp lst)) (error "The second argument must be a list of numbers.")) ; if the second argument is not a list, throw an error
        (t (* num (car lst) (product num (cdr lst)))) ; otherwise, multiply the first argument with the first element of the list and recursively call the function with the first argument and the rest of the list
  )
)
;; Define a function that takes in two parameters and multiplies them
(defun multiply (a b)
  (if (or (not (numberp a)) (not (numberp b)))
    (error "One or both parameters are not numbers"))
  (* a b))
;; This function uses recursion to calculate the factorial of a number
(defun factorial (n)
  (cond ((equal n 0) 1)
        (t (* n (factorial (- n 1))))))
;; This function finds the maximum of a list using a loop
(defun find-max (list)
  (let ((max (first list)))
    (dolist (element (rest list))
      (if (> element max)
        (setf max element)))
    max))
;; This code is a function that takes in a list of numbers and returns the 
;; sum of all the even numbers in the list
(defun sum-even-numbers (list)
    (let ((sum 0))
        (dolist (num list)
            (when (evenp num)
                (incf sum num)))
        sum))
        
;; The 'sum-even-numbers' function is defined using the 'defun' keyword in LISP, 
;; which is used to create named functions. 
;; It takes in one parameter, 'list', which is the list of numbers that we want to
;; find the sum of the even numbers from.
;; The 'let' keyword is used to create a local variable, 'sum', which is initialized
;; to 0.
;; The 'dolist' function is used to iterate through each element in the list.
;; The variable 'num' is bound to each element in the list, and the 'when' condition
;; is used to check if the number is even using the built-in LISP function 'evenp'.
;; If the number is even, the 'incf' function is used to increment the 'sum' variable
;; by the value of the current number.
;; Finally, the 'sum' variable is returned as the result of the function.
(defun bubble-sort (mylist)             ; Defining a function called bubble-sort which takes in a list as a parameter
  (let ((swapped t)                     ; Initializing a swapped variable to true
        (n (length mylist)))            ; Initializing n to the length of the list
    (while swapped                      ; Starting a while loop, condition is always true
      (setf swapped nil)                ; Setting swapped to false
      (dotimes (i (1- n))               ; Starting a for loop, iterates from 0 to n-1
        (when (> (nth i mylist)         ; Checking if the element at index i is greater
                  (nth (1+ i) mylist))  ; than the element at the next index
          (rotatef (nth i mylist)       ; If true, swap the elements
                   (nth (1+ i) mylist))
          (setf swapped t)))             ; Set swapped to true to continue the while loop
      (setf n (1- n)))                  ; Decrease n by one for each iteration
    mylist))                            ; Return the sorted list
;;; Example usage:
;;; (bubble-sort '(5 3 7 1 2 9 4 6 8))
;;; Output: (1 2 3 4 5 6 7 8 9)
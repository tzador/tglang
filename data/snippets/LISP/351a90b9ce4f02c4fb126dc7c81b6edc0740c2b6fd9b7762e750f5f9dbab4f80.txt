(defparameter *numbers* '(5 2 8 3 6 1))     ; creates a list of numbers
(defparameter *sum* 0)                       ; initializes a variable for sum

(defun calculate-sum (list)                  ; defines a function that takes a list as parameter
  (do ((numbers list (cdr numbers)))         ; iterates through the list
      ((null numbers) *sum*)                 ; stops when end of list is reached, returns sum
    (setf *sum* (+ *sum* (car numbers)))))   ; adds the current number to sum, updates sum

(format t "The sum of ~a is ~a." *numbers* (calculate-sum *numbers*)) ; prints the result
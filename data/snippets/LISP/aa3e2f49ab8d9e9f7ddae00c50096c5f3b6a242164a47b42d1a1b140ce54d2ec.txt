;;; Functions are first class objects in Lisp

(defun flatten (lst)
  "Flattens a list structure, recursively."
  (cond ((null lst) nil) ;; if the list is empty, return nil
        ((atom lst) (list lst)) ;; if the list is a single element, return a list with that element
        (t (append (flatten (car lst)) (flatten (cdr lst)))));; otherwise, recursively flatten the car and cdr

 This function, `flatten`, takes in a list `lst` as input and checks three conditions:
 - If the list is empty, it returns `nil`. 
 - If the list is a single element, it returns a list containing that element.
 - If neither of these conditions are met, it recursively flattens the car and cdr of the input list and appends them together using the `append` function. 
The result is a single, flat list containing all the elements from the original `lst` in order.
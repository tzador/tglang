(defparameter *numbers* '((1 2 3 4) (5 6 7 8) (9 10 11 12))) ;define a parameter with a list of lists with numbers
(defun multiply-numbers (num-list) ;define a function that takes in a list of numbers
  (if (null num-list) ;if list is empty, return 1
      1
      (* (car num-list) ;else multiply first number in list by recursive call on rest of list
         (multiply-numbers (cdr num-list))))) ;recursive call to function on rest of list
(print (mapcar #'multiply-numbers *numbers*)) ;call function on *numbers* and print the results
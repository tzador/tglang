(defmacro letn (vars &rest body)
    "Defines a let* macro that allows for multiple variable bindings."
    ;; Check if there are an even number of arguments
    (if (evenp (length vars))
        ;; Convert pairs of variable-name and value into let* bindings
        (letrec ((bind (lambda (pairs)
                        (if (null pairs)
                            nil
                            (cons
                                ;; Format as let* binding
                                `(, (car pairs) ,(cadr pairs))
                                ;; Recursively loop through remaining pairs
                                (funcall bind (cddr pairs)))))))
            ;; Create let* binding with values evaluated in order
            `(let* ((, (car vars) ,(cadr vars))
                    ,@(funcall bind (cddr vars)))
                ,@body))
        ;; If odd number of arguments, throw error
        (error "letn requires an even number of arguments")))
;; This is a function that calculates the nth Fibonacci number using a recursive approach

(defun fib (n)       ; Define function
  (if (< n 2)        ; Check if n is less than 2
      n              ; If yes, return n (Fib(0) and Fib(1) are equal to 0 and 1 respectively)
      (+ (fib (- n 1)) (fib (- n 2)))  ; If no, return the sum of the (n-1)th and (n-2)th Fibonacci numbers
      )
  )

;; Example usage:
;;
;; (fib 5)   ; Returns 5
;; (fib 10)  ; Returns 55
;; (fib 15)  ; Returns 610

;; Time complexity: O(2^n)
;; Space complexity: O(n)
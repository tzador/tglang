;;This code snippet uses the gen-iter macro to create a generator function
(let ((list (list 1 2 3 4 5)))
  (gen-iter
    ;; Original list
    (setf orig-list list)

    ;; local variables
    (let ((var list)
          (second (car list))
          (last (last list)))

      ;; Generator body
      (setf var (double-each var)) ; double each element in the list
      (print var) ; print the new list
      (print (+ second last)) ; print the sum of second and last elements

      ;; Generator return value (can be anything)
      (return :finished))))
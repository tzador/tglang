(defstruct student ; Defines a structure named 'student'
  name ; Attribute 'name' of the 'student' structure
  age ; Attribute 'age' of the 'student' structure
  major ; Attribute 'major' of the 'student' structure
  grades) ; Attribute 'grades' of the 'student' structure

(defparameter *student1* (make-student :name "John" :age 20 :major "Computer Science")) ; Creates an instance of 'student' structure with given attributes

(defun print-student (s) ; Declares a function named 'print-student' that takes in a 'student' structure as argument
  (format t "Name: ~a~%Age: ~a~%Major: ~a~%Grades: ~a~%" (student-name s) (student-age s) (student-major s) (student-grades s))) ; Prints the given attributes of the 'student' structure

(print-student *student1*) ; Calls the 'print-student' function with '*student1*' as the argument
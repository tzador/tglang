;; This is a function that takes in two parameters: x and y
(defun multiply (x y) 
  
  ; First we check if x is equal to 0
  (if (= x 0) 
    
    ; If it is, then we return 0 as the result
    0
    
    ; If x is not equal to 0, then we check if x is less than 0
    (if (< x 0) 
      
      ; If it is, we return the negative of y added recursively
      (- y (multiply (- x 1) y))
      
      ; Otherwise, we return x added recursively to the negative of y
      (+ y (multiply (- x 1) y)))))
      
;; Function call with arguments 3 and 4
(multiply 3 4)

;;; Output:
12
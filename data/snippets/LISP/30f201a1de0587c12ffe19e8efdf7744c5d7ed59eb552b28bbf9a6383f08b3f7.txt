(defmacro let ((varlist &body bindings) &rest body)
  "Defines a let-form for setting lexical variables to values.
VARLIST is a list of variables to be bound.
BINDINGS is a list of alternating variables and values.
BODY is executed with the variables bound.
The bindings are like those of let*. `defmacro` declaration is necessary for defining macros."
  (if (null varlist)
      `(progn ,@body)
      (let ((var (car varlist))
            (value (gensym)))
        `(let ((,value ,(car bindings)))
          (cons ;create list
            (list 'quote (cons ,var value))
            (let ,(cdr bindings) ;recurse
              ,@body))))))
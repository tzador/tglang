;; This code creates a function that takes in two parameters, a list and a number
;; and returns a new list where each element in the original list is multiplied by the number

(defun multiply-list (L num)
  "This function takes in a list L and a number num and multiplies each element of the list by the number"
  (if (null L) ; checks if list is empty
    nil ; returns empty list if it is
    (cons (* (car L) num) ; multiplies first element of the list by num and adds it to the front of the new list
      (multiply-list (cdr L) num) ; recursively calls the function with the rest of the list and num
    )
  )
)

;; Example function call
(multiply-list '(1 2 3 4 5) 10)
;; Output: (10 20 30 40 50)
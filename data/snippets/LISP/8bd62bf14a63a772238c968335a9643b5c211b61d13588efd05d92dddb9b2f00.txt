;;; This is a list that contains numbers and strings
(list 1 "two" 3 "four")

;;; Defining a function that can sum up two values
(defun sum (a b)
  (+ a b))

;;; Applying the function to the list defined above
(mapcar #'sum '(1 2 3) '(4 5 6))

;;; Defining a recursive function to calculate the factorial of a number
(defun factorial (num)
  (cond 
    ((= num 0) 1)
    (t (* num (factorial (- num 1))))))

;;; Calling the factorial function on the number 5
(factorial 5)

;;; Defining a class called "Person" with attributes name and age
(defclass person ()
 ((name :accessor name :initarg :name)
  (age :accessor age :initarg :age)))

;;; Creating an instance of the "Person" class
(setq p1 (make-instance 'person :name "John Doe" :age 25))

;;; Adding a method to the "Person" class to return the person's introductory statement
(defmethod intro (p)
  (format nil "Hi, my name is ~a and I am ~a years old." (name p) (age p)))

;;; Calling the method on our previously created person instance
(intro p1)
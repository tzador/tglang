(defparameter *list* '(1 2 3 "four" "five" 6 7))

; Define a global variable named "*list*" with a list as its value, containing numbers and strings

(defun check-type (element)
  "Check the type of the given element and return a message indicating the type."
  (typecase element
    (number "This is a number.")
    (string "This is a string.")
    (list "This is a list.")
    (t "This is an unknown type.")))

; Define a function named "check-type" with a parameter "element"
; Begins a documentation string with a brief description of the function's purpose and behavior
; Checks the type of the element and returns a message depending on the type, using typecase conditionals

(defun print-list (lst)
  "Print each element in the given list on a new line."
  (dolist (item lst)
    (format t "~a~%" item)))

; Define a function named "print-list" with a parameter "list"
; Begins a documentation string with a brief description of the function's purpose and behavior 
; Uses the dolist macro to iterate through each element in the list and print it on a new line using the format function

(defun update-list (index new-value)
  "Update the value at the given index with the new value in the *list* variable."
  (setf (nth index *list*) new-value))

; Define a function named "update-list" with two parameters, "index" and "new-value"
; Begins a documentation string with a brief description of the function's purpose and behavior
; Uses the setf function to set the value at the given index in the global variable *list* to the new value

(check-type (first *list*))
; Calls the check-type function with the first element from the *list* variable as an argument

(print-list *list*)
; Calls the print-list function with the *list* variable as an argument, printing each element on a new line

(update-list 2 "three")
; Calls the update-list function with the index 2 and the string "three" as arguments, updating the value at index 2 in the *list* variable

(print-list *list*)
; Calls the print-list function again to see the updated values in the *list* variable
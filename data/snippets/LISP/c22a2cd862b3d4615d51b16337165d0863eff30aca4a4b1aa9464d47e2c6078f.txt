;;; Define a function to calculate the nth Fibonacci number

(defun fibonacci (n) ;;; Function name and parameter n
   "Returns the nth Fibonacci number." ;;; Docstring to describe function
   (cond ((= n 0) 0) ;;; Base case 1: If n = 0, return 0
         ((= n 1) 1) ;;; Base case 2: If n = 1, return 1
         (t (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))) ;;; Recursive call: Return sum of Fibonacci numbers for n-1 and n-2 cases respectively
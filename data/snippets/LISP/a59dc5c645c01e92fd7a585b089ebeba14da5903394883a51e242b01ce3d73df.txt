;;Function to recursively calculate factorials
(defun factorial (n)
  (if (= n 1)
      1
      (* n (factorial (- n 1)))))

;;Function to find the maximum element in a list
(defun max-element (lst)
  (if (null (cdr lst))
      (car lst)
      (max (car lst) (max-element (cdr lst))))
)

;;Function to map a function to each element in a list
(defun map (func lst)
  (if (null lst)
      ()
      (cons (funcall func (car lst)) (map func (cdr lst))))
)

;;Function to filter a list based on a predicate
(defun filter (pred lst)
  (if (null lst)
      ()
      (if (funcall pred (car lst))
          (cons (car lst) (filter pred (cdr lst)))
          (filter pred (cdr lst))))
)

;;Lambda expression to calculate the sum of squares of a list of numbers
(lambda (lst) (reduce #'+ (map (lambda (x) (* x x)) lst)))
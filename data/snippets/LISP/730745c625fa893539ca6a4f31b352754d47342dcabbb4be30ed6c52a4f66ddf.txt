;;; This is a function that calculates the sum of two numbers
(defun sum (n1 n2)
  (+ n1 n2))

;;; This is a function that calculates the product of two numbers
(defun product (n1 n2)
  (* n1 n2))

;;; This is a function that calculates the difference of two numbers
(defun difference (n1 n2)
  (- n1 n2))

;;; This is a function that calculates the quotient of two numbers
(defun quotient (n1 n2)
  (/ n1 n2))

;;; This is a function that calculates the remainder of two numbers
(defun remainder (n1 n2)
  (mod n1 n2))

;;; This is a function that calculates the power of a number
;;; Note: This function uses recursion
(defun power (base exponent)
  (if (= exponent 0)
      1
      (* base (power base (- exponent 1)))))

;;; This is a function that calculates the factorial of a number
(defun factorial (n)
  (if (= n 0)
      1
      (* n (factorial (- n 1)))))

;;; This is a function that calculates the absolute value of a number
(defun abs (n)
  (if (< n 0)
      (- n)
      n))

;;; This is a function that calculates the square root of a number
(defun sqrt (n)
  (if (= n 0)
      0
      (sqrt-iter 1.0 n)))

;;; This is a helper function for calculating the square root
(defun sqrt-iter (guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x)
                 x)))

;;; This is a helper function for calculating the square root
(defun good-enough? (guess x)
  (< (abs (- (square guess) x)) 0.0001))

;;; This is a helper function for calculating the square root
(defun improve (guess x)
  (average guess (/ x guess)))

;;; This is a helper function for calculating the square root
(defun square (n)
  (expt n 2))

;;; This is a helper function for calculating the square root
(defun average (x y)
  (/ (+ x y) 2))
(defparameter *list-of-prime-numbers* '(2 3 5 7 11 13 17 19)) ; Definition of a global variable that stores a list of prime numbers using the defparameter function.

(defun is-prime (n) ; Function that checks if a given number is prime.
  "Checks if the given number is prime."
  (when (> n 1) ; Checks if the number is greater than 1.
    (loop for i from 2 to (isqrt n) ; Starts looping from 2 to the square root of the given number.
        when (= (mod n i) 0) ; Checks if the given number is divisible by any number other than itself and 1.
        do (return nil)) ; Stops looping and returns nil if it is divisible.
    t)) ; Returns true if the given number is prime.

(defun generate-prime-list (n) ; Function that generates a list of prime numbers up to a given number.
  "Generates a list of prime numbers up to the given number n."
  (let ((primes '())) ; Defines an empty list to store the prime numbers.
    (loop for i from 2 to n ; Starts looping from 2 to the given number.
        when (is-prime i) ; Checks if the current number is prime.
        collect i into primes ; If it is, it is added to the list of primes.
        finally (return primes)))) ; Returns the final list of primes.


(generate-prime-list 20) ; Function call to generate a list of prime numbers up to 20.

; Output: (2 3 5 7 11 13 17 19)
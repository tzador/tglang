(defmacro vector (size &rest items)
  "Create a vector of size SIZE containing ITEMS.
  Accepts arbitrary Lisp forms; evaluates elements when vector is used."
  (unless (numberp size)
    (signal 'type-error (list size 'number)))
  `(make-array ,size :fill-pointer ,(car (position :rest (reverse items)))
    ,@(if (eq (car items) :rest)
         (2 '(apply #'vector (cadr items)))
         items)))
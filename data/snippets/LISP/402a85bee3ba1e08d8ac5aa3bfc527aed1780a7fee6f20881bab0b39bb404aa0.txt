(defparameter *my-list* '((1 2) (3 4) (5 6))) ; This is a list of lists

(defun flatten (list) ; This function takes a list and flattens it
  (if (null list) ; If the list is empty
      nil ; Then return nil
      (if (atom (first list)) ; If the first element of the list is an atom
          (cons (first list) (flatten (rest list))) ; Then add it to the flattened rest of the list
          (append (flatten (first list)) (flatten (rest list))) ; Else recursively flatten the first and rest of the list and append them together
      )
  )
)

(print (flatten *my-list*)) ; Print the flattened list of lists
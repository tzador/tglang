;; This is a function that checks if a number is even or odd
(defun check-even-or-odd (number)
  "Checks if a number is even or odd. Returns true if the number is even, false if it is odd."
  (if (evenp number)
      t
      nil))

;; This is a recursive function that calculates the factorial of a given number
(defun factorial (n)
  "Calculates the factorial of a given number. Uses recursion to continuously multiply n by n-1 until n equals 1."
  (if (= n 1)
      1
      (* n (factorial (- n 1)))))

;; This is a function that returns the sum of all numbers in a list using a loop
(defun sum-list (list)
  "Returns the sum of all numbers in a given list."
  (loop for num in list sum num))

;; This is a function that sorts a list of numbers in descending order using recursion
(defun sort-list (list)
  "Sorts a list of numbers in descending order using recursion."
  (if (null list)
      nil
      (let ((pivot (car list))
            (rest (cdr list)))
        (append (sort-list (remove-if-not #'(lambda (x) (> x pivot)) rest))
                (list pivot)
                (sort-list (remove-if #'(lambda (x) (> x pivot)) rest))))))
(defparameter *my-list* '(1 4 2 3 5))  ; Creates a global parameter table with a list of numbers as its value
(defun square-list (lst)  ; Defines a function that takes in a list as a parameter
  "Returns a list of the squares of numbers in the given list"
  (mapcar #'(lambda (x) (* x x)) lst))  ; Applies the function (lambda (x) (* x x)) to each element in the list using mapcar
(setq *squared-list* (square-list *my-list*))  ; Sets global variable *squared-list* to the result of calling function square-list with *my-list* as the argument
(format t "Original List: ~A" *my-list*)  ; Prints "Original List: *my-list*" to the console
(format t "Squared List: ~A" *squared-list*)  ; Prints "Squared List: *squared-list*" to the console
;;; This is a function that calculates the nth term in the Fibonacci sequence
(defun fibonacci (n)
  (if (or (eql n 0) (eql n 1))
      n
      (+ (fibonacci (- n 1))
         (fibonacci (- n 2)))))

;;; This is a function that calculates the factorial of a number
(defun factorial (n)
  (if (or (eql n 0) (eql n 1))
      1
      (* n (factorial (- n 1)))))

;;; This is a function that calculates the sum of a list of numbers
(defun sum (lst)
  (if (null lst)
      0
      (+ (car lst) (sum (cdr lst)))))

;;; This is a function that calculates the length of a list
(defun length (lst)
  (if (null lst)
      0
      (+ 1 (length (cdr lst)))))

;;; This is a function that reverses a list
(defun reverse (lst)
  (if (null lst)
      nil
      (append (reverse (cdr lst)) (list (car lst)))))

;;; This is a function that sorts a list in ascending order using merge sort algorithm
(defun merge (lst1 lst2)
  (if (null lst1)
      lst2
      (if (null lst2)
          lst1
          (if (< (car lst1) (car lst2))
              (cons (car lst1) (merge (cdr lst1) lst2))
              (cons (car lst2) (merge lst1 (cdr lst2))))))

(defun merge-sort (lst)
  (if (null (cdr lst))
      lst
      (let ((mid (/ (length lst) 2)))
        (merge (merge-sort (subseq lst 0 mid))
               (merge-sort (subseq lst mid))))))
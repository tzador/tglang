;;; This is a Fibonacci function that uses tail recursion to improve efficiency

(defun fibonacci (n) ;;; Define the function name and its parameters
  (labels ;;; Create a local function within our fibonacci function
    ((fib-helper (m a b) ;;; Define a helper function that takes in three parameters
      (if (= m 0) ;;; Base case that checks if m is equal to 0
          a ;;; If true, return a
          (fib-helper (- m 1) b (+ a b)))) ;;; Otherwise, use tail recursion to recurse with updated values
    (fib-helper n 0 1))) ;;; Call the helper function with n as the starting value and 0 and 1 as the initial values for a and b respectively
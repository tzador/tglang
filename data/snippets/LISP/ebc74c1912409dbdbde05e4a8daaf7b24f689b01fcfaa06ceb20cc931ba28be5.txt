;; This code snippet generates all permutations of a given list

;; Function to get all permutations of a list
;; Takes in a list as input and returns a list of all possible permutations
(defun get-permutations (lst)
  (if (null lst)
      '(nil)
      (loop for x in lst
            appending (mapcan #'(lambda (y)
                                  (mapcar #'(lambda (z)
                                              (append y (list z)))
                                          (get-permutations (remove x lst))))
                              (get-permutations (remove x lst))))))

;; Sample Input
;; '(1 2 3)

;; Sample Output
;; ((1 2 3)
;;  (1 3 2)
;;  (2 1 3)
;;  (2 3 1)
;;  (3 1 2)
;;  (3 2 1))

;; Usage:
;; (get-permutations '(1 2 3))
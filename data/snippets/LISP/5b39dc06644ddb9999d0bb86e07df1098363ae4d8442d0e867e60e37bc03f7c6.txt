;; Define a function named 'factorial' that takes in a single parameter 'n'
(defun factorial(n)
  ;; Set the initial value of the factorial to 1
  (setq result 1)
  ;; Set up a loop that runs for n times
  (dotimes (i n)
    ;; Multiply the result by the current value of i
    (setq result (* result i))
    ;; Print the current value of i and the updated value of the result
    (princ (format "Iteration: ~A | Result: ~A~%" i result)))
  ;; Return the final value of the factorial
  result)

;; Call the function 'factorial' with an input of 5 and print the result
(princ (format "Factorial of 5: ~A~%" (factorial 5)))

;; Output:
;; Iteration: 0 | Result: 0
;; Iteration: 1 | Result: 0
;; Iteration: 2 | Result: 0
;; Iteration: 3 | Result: 0
;; Iteration: 4 | Result: 0
;; Factorial of 5: 15
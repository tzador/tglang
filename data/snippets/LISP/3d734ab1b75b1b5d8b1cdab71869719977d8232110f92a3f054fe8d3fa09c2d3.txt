;; Define a function that takes in two lists and returns their Cartesian product
(defun cartesian-product (list1 list2)      ; Define function with parameters for two lists
  (cond                                     ; Begin conditional
    ((null list1) nil)                      ; If first list is empty, return empty list
    ((null list2) nil)                      ; If second list is empty, return empty list
    (T                                       ; If neither list is empty
      (cons                                  ; Construct a new list with the first element of
        (list                                 ; The first list and the first element of
          (first list1)                      ; The second list
          (first list2))                     ; And loop through the rest of the second list
          (cartesian-product                  ; And recursively call the function on
              (list1 (rest list2)))))))      ; The first list and the remaining elements of the second list
  
;; Example call of the function
(cartesian-product '(1 2 3) '(4 5 6))
;; Returns ((1 4) (1 5) (1 6) (2 4) (2 5) (2 6) (3 4) (3 5) (3 6))
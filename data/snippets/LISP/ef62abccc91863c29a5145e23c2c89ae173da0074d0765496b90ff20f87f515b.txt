;;; This function takes in a list of numbers and returns the sum of those numbers.
;;; The function uses recursion to loop through the list.

(defun sum (list)
    (if (null list) ;;; checks if list is empty
        0 ;;; base case, return 0 if list is empty
        (+ (car list) (sum (cdr list)))) ;;; uses recursion to add the first element of list to the sum of the rest of the list
    
(sum '(1 2 3 4 5)) ;;; Output: 15
(sum '()) ;;; Output: 0 (empty list)
;;; Define the factorial function
(defun factorial (n)
  "Calculates the factorial of n"
  (if (<= n 1)
      1
      (* n (factorial (- n 1)))))
      
;;; Define the fibonacci function
(defun fibonacci (n)
  "Calculates the nth fibonacci number"
  (cond ((= n 0) 0)
        ((= n 1) 1)
        (t (+ (fibonacci (- n 1))
                (fibonacci (- n 2))))))

;;; Define the power function
(defun power (x n)
  "Raises x to the power of n"
  (if (= n 0)
      1
      (* x (power x (- n 1)))))

;;; Define the quicksort function
(defun quicksort (list)
  "Sorts a list using the quicksort algorithm"
  (if (null list)
      '()
      (let ((pivot (first list)))
        (append (quicksort (remove-if-not (lambda (x) (<= x pivot)) (rest list)))
                (list pivot)
                (quicksort (remove-if-not (lambda (x) (> x pivot)) (rest list)))))))
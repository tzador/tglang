;;This code snippet implements a quicksort algorithm in LISP

(defun quicksort (list)                         ; Define a function named quicksort
    (if (null list)                             ; Check if list is empty
        nil                                     ; If yes, return nil
        (let ((pivot (first list)))             ; Else, set pivot as first element of list
            (append                              ; Append
                (quicksort (remove pivot (rest list)))
                                                ; Recursively call quicksort on list without pivot
                (list pivot)                     ; Append pivot to result
                (quicksort (remove-if-not          ; Recursively call quicksort on list without elements
                    (lambda (x) (< x pivot)) list)) ; less than pivot
                ))))
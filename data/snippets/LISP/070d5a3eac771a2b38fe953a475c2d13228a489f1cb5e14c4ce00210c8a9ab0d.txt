(defun merge-sort (list)
    "Sort a list using the merge sort algorithm."
    (if (<= (length list) 1)
        list
        (let ((mid (/ (length list) 2)))
            (merge
                (merge-sort (subseq list 0 mid))
                (merge-sort (subseq list mid))
            )
        )
    )
)

(defun merge (list-1 list-2)
    "Merge two sorted lists into one."
    (if (null list-1)
        list-2
        (if (null list-2)
            list-1
            (if (< (car list-1) (car list-2))
                (cons (car list-1) (merge (cdr list-1) list-2))
                (cons (car list-2) (merge list-1 (cdr list-2)))
            )
        )
    )
)

;; Example usage:
(merge-sort '(6 3 8 1 5)) ; Output: (1 3 5 6 8)
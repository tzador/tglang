;;; This snippet computes the factorial of a given number

(defun factorial (n)        ;;; defines a function called factorial with parameter n
  (if (= n 0)               ;;; checks if n is equal to 0
      1                     ;;; if true, return 1 (base case of factorial)
      (* n (factorial (- n 1))))  ;;; if false, multiply n by the result of calling factorial on n-1
(factorial 5)               ;;; calls the factorial function with input n=5, should return 120
;;; Output: 120
;; Define a function to find the nth prime number
(defun nth-prime (n)
  (let ((prime-list '(2))
        (current 3))
    (loop while (<= (length prime-list) n) do
          (loop for i in prime-list do
                (if (zerop (mod current i))
                    (setf current (+ current 2))
                    (loop until (> i (sqrt current)) do
                          (if (zerop (mod current i))
                              (setf i current)
                              (setf prime-list (append prime-list (list current))
                                    current (+ current 2)))))))
    (nth (1- n) prime-list)))
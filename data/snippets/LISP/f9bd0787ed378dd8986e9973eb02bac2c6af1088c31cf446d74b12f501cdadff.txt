(defun factorial (n)                      ; Defining a function named "factorial" with a parameter "n"
  (if (<= n 1)                            ; Checking if "n" is less than or equal to 1
      1                                    ; If yes, return 1
      (* n (factorial (- n 1)))))         ; If no, return the product of "n" and the factorial of "n-1"
 
(format t "Enter a Number: ")             ; Printing the text "Enter a Number:" on the screen
 
(defvar num (parse-integer (read-line)))  ; Defining a variable "num" to store the user input
 
(format t "The factorial of ~a is ~a" num (factorial num)) ; Printing the factorial of the user input using the "factorial" function
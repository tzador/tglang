;; Define a function 'multiply-list' that takes in two lists and returns a list
;; where each element is the product of the corresponding elements in the two lists.
;; Example: (multiply-list '(1 2 3) '(4 5 6)) => '(4 10 18)

(defun multiply-list (list1 list2) ; Define the function 'multiply-list' with two parameters
  (if (and (not (null list1)) ; Check that 'list1' is not empty
           (not (null list2))) ; Check that 'list2' is not empty
      (cons (* (car list1) (car list2)) ; Multiply the first elements of both lists
            (multiply-list (cdr list1) (cdr list2))) ; Recursively call the function with the remaining elements
      '())) ; If either list is empty, return an empty list

(multiply-list '(1 2 3) '(4 5 6)) ; Call the 'multiply-list' function with two lists to get the result: '(4 10 18)
;; Defining a function named "merge"
(defun merge (list-a list-b)
  (if (null list-a) list-b
    (if (null list-b) list-a
      (if (< (car list-a) (car list-b))
          (cons (car list-a) (merge (cdr list-a) list-b))
          (cons (car list-b) (merge list-a (cdr list-b)))))))

;; Defining a function named "merge-sort"
(defun merge-sort (list)
  (if (null (cdr list)) list
    (let ((mid (/ (length list) 2)))
      (merge (merge-sort (subseq list 0 mid)) (merge-sort (subseq list mid))))))

(let ((list '(5 3 1 4 2)))
  (merge-sort list))
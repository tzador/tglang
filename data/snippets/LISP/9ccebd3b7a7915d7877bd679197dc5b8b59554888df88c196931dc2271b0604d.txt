;; This code snippet uses recursion to calculate the factorial of any positive integer
;; It takes in the number as an argument and returns the factorial value

(defun factorial (n) ;;; the function definition starts with 'defun' and takes in the argument 'n'
  (if (<= n 1)      ;;; 'if' condition to check if n is less than or equal to 1
      1              ;;; returns 1 if the above condition is true
      (* n (factorial (- n 1)))) ;;; recursively calls the function multiplying n with factorial of (n-1)
(factorial 5) ;;; calling the function with value 5, outputs 120 which is 5!
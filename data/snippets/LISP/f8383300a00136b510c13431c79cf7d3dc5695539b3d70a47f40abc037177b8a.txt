;; This function reverses the order of elements in a list
(defun reverse-list (list)
  "Reverses the order of elements in a given list."
  (if (null list) ; Check if list is empty
      nil ; If it is, return nil
      (append (reverse-list (cdr list)) ; Recursively call function on rest of list
              (list (car list))))) ; Append the first element of the list to reversed list
              
;; Example usage:
(reverse-list '(1 2 3 4 5))
;; => (5 4 3 2 1)

;; Function to check if a number is prime
(defun prime? (n)
  "Checks if a given number is prime."
  (if (= n 2) ; If number is 2, return true
      t
      (if (or (= n 0) (= n 1) (even? n)) ; If number is 0, 1, or even, return false
          nil
          (loop for i from 3 to (isqrt n) by 2 ;; Iterate from 3 to square root of number, by increments of 2
                always (not (eql 0 (mod n i))))))) ; Return true if number is not divisible by any number in range
               
;; Example usage:
(prime? 13)
;; => t
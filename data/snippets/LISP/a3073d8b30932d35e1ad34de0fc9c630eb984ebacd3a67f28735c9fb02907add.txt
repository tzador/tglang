;; This is a function that checks if a list is sorted
;; Input: a list
;; Output: the sorted list

(defun check-sorted (list)
  (cond ((null list) list)  ;; if list is empty, return list
        ((null (rest list)) (first list))  ;; if list has only one element, return that element
        (t  ;; for all other cases, check if the first element is less than the second element
        (let ((first-elem (first list))
              (second-elem (second list)))
          (if (< first-elem second-elem)
              (cons first-elem (check-sorted (rest list)))  ;; if sorted, add first element to the sorted list and continue checking the rest of the list
              (cons second-elem (check-sorted (rest list))))))))  ;; if not sorted, add second element to the sorted list and continue checking the rest of the list

(check-sorted '(6 3 8 2 1))  ;; output: (1 2 3 6 8)
;; This is a function called "factorial" that takes one parameter "n"
;; It is written in Common Lisp

(defun factorial (n)
  (cond
    ;; if n is equal to 0, return 1
    ((= n 0) 1)
    ;; else recursively call factorial function with the value of n-1
    (t (* n (factorial (- n 1))))))

;; This is another function called "fibonacci" that takes one parameter "n"
;; It is written in Common Lisp

(defun fibonacci (n)
  (cond
    ;; if n is equal to 0, return 0
    ((= n 0) 0)
    ;; if n is equal to 1, return 1
    ((= n 1) 1)
    ;; else recursively call fibonacci function with the values of n-1 and n-2
    (t (+ (fibonacci (- n 1)) (fibonacci (- n 2))))))

;; Call the factorial function and print the result
(print (factorial 5))

;; Call the fibonacci function and print the result
(print (fibonacci 7))

;; Output:
;;
;; 120
;; 13
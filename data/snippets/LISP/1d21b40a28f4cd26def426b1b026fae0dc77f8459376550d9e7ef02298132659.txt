; This code snippet sorts a list of numbers in descending order using the bubble sort algorithm
; Input: unsorted list of numbers
; Output: list of numbers in descending order

; define bubble sort function
(defun bubble-sort (lst)
  ; set flag to true
  (let ((swap t))
    ; set the length of the list to a local variable
    (let ((n (1- (length lst))))
      ; loop until no swaps are made
      (while swap
        ; set flag to false
        (setq swap nil)
        ; loop through list elements
        (loop for i from 0 to n
          ; compare adjacent elements
          ; if element i is greater than element (i+1), swap them and set flag to true
          ; this will move the largest element to the end of the list
          ; repeat this process until the largest element is at the end of the list
          ; then decrease the length of the list to consider only the remaining elements
          ; this ensures that the largest element is always in the correct position
          when (> (nth i lst) (nth (1+ i) lst))
          do (progn
            (rotatef (nth i lst) (nth (1+ i) lst))
            (setq swap t)))))
    ; return the sorted list
    lst))

; call bubble sort function with unsorted list of numbers
(bubble-sort '(7 3 11 2 9 6 10))
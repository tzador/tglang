;;; `defun` defines a function with the given name and parameters
;;; `lambda` creates an anonymous function with the given parameters
;;; `mapcar` applies a function to each element in a list and returns a list of the results

(defun my-multiply (x y) 
  "Multiplies x and y and returns the result"
  (* x y))

(mapcar (lambda (x) 
          (my-multiply x 2)) 
        '(1 2 3 4 5))

;;; Output: (2 4 6 8 10)
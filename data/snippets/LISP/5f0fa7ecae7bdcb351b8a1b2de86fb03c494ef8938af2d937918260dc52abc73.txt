;;; This is a function that takes in two strings and returns a list of all possible combinations of the two strings
(defparameter *string1* "abc") ;;; Defining string1 as "abc"
(defparameter *string2* "xyz") ;;; Defining string2 as "xyz"

(defun combine (str1 str2) ;;; Defining the function with parameters str1 and str2
  (if (or (null str1) (null str2)) ;;; If either of the strings is empty, return nil
      nil
      (append ;;; Append the following combinations to the resulting list
        (list (format nil "~a~a" (first str1) (first str2))) ;;; Append the combination of the first elements of both strings
        (combine str1 (rest str2)) ;;; Append the combinations of the first string with the remaining elements of the second string
        (combine (rest str1) str2) ;;; Append the combinations of the remaining elements of the first string with the second string
      )
  )
)

(combine *string1* *string2*) ;;; Calling the function with string1 and string2 as arguments will return a list of all combinations of the two strings -> (("ax" "ay" "az") ("bx" "by" "bz") ("cx" "cy" "cz"))
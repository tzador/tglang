;;; Defining a factorial function
(defun factorial (n)                    ;;; Uses the "defun" special form to define a function named "factorial" with parameter "n"
  (if (= n 0)                           ;;; Begins an "if" statement that checks if "n" is equal to 0
      1                                 ;;; If "n" is equal to 0, the statement returns 1
      (* n (factorial (- n 1)))))       ;;; If "n" is not equal to 0, the statement returns the product of "n" and the factorial of "n-1"
  
;;; Calculating the factorial of 5
(factorial 5)                          ;;; Calls the factorial function with argument 5 and returns the result 120
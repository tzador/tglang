;; Defining a function called 'power'
(defun power (num pow)
  (if (= pow 0)       ; if power is 0, return 1
      1
      (* num             ; else, multiply num with
         (power num       ; result of (num ^ (pow - 1))
                (- pow 1)))))

;; Defining a function called 'factorial'
(defun factorial (n)
  (if (= n 0)        ; if n is 0, return 1
      1
      (* n              ; else, multiply n with
         (factorial     ; result of (n - 1)!
          (- n 1)))))
(define *input-list* '(1 2 3 4 5)) ; defining a list

(defun map-list (lst func) ; defining a function that takes in a list and a function
  (if (null lst) ; if the list is empty
      nil ; return nil
    (cons (func (car lst)) ; apply the function on the first element of the list and cons it to the result
          (map-list (cdr lst) func)))) ; recursively call the function on the rest of the list and apply the function again

(defun square (x) (* x x)) ; defining a function to calculate square of a number

(map-list *input-list* #'square) ; calling the map-list function on *input-list* and passing in the function to calculate square
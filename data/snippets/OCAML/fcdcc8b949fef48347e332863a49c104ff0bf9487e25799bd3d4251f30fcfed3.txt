(** This function recursively calculates the sum of all the elements in a list.
@param lst The list to be summed
@return The sum of all the elements in the list *)
let rec sum_list lst = match lst with
        | [] -> 0         (* base case: empty list *)
        | h::t -> h + sum_list t  (* recursive case: add head to sum of rest of list *)
        
(* Test Cases *)
let lst1 = [1; 2; 3; 4; 5] in
let lst2 = [] in

(* Output: 15 *)
sum_list lst1;;
(* Output: 0 *)
sum_list lst2;;
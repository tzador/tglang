(* Defining a function to recursively sum a list of integers *)
let rec sum_list lst =
  match lst with
  | [] -> 0                        (* Base case: if list is empty, sum is 0 *)
  | hd::tl ->                      (* Recursive case: head and tail of the list *)
      hd + sum_list tl             (* Sum head with recursive call on tail *)

(* Example usage *)
sum_list [1;2;3;4;5]              (* Output: 15 *)
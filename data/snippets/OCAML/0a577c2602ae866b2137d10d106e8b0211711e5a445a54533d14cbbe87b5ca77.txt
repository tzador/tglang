(* A complex function that finds the sum of two lists and returns it as a new list *)
let rec sum_lists list1 list2 =
  match list1, list2 with
  | [], [] -> [] (* base case: both lists are empty *)
  | [], _ -> raise (Failure "Lists must be of equal length") (* handle unequal list lengths *)
  | _, [] -> raise (Failure "Lists must be of equal length") (* handle unequal list lengths *)
  | (x :: xs), (y :: ys) -> (x + y) :: (sum_lists xs ys) (* if both lists have elements, add them and recurse on the remaining lists *)
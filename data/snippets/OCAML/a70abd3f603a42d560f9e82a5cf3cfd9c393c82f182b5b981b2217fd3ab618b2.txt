let rec merge_sort lst =
  match lst with
  | [] -> []
  | [x] -> [x]
  | _ ->
      let mid = (List.length lst) / 2 in
      let rec merge lst1 lst2 =
        match lst1, lst2 with
        | [], _ -> lst2
        | _, [] -> lst1
        | x::xs, y::ys when x < y -> x::(merge xs lst2)
        | x::xs, y::ys -> y::(merge lst1 ys) in
      let rec split n lst =
        match n, lst with
        | 0, _ -> [], lst
        | n, x::xs ->
            let lst1, lst2 = (split (n-1) xs) in
            (x::lst1), lst2
        | _ -> raise (Failure "Invalid argument") in
      let lst1, lst2 = split mid lst in
      merge (merge_sort lst1) (merge_sort lst2);;
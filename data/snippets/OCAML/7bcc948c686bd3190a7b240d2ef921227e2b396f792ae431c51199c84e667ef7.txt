(* Function to find the maximum element in a list *)
let rec max_element list =
    
    (* Base case: If the list is empty, return 0 *)
    match list with
    | [] -> 0
    
    (* Recursive case: Compare the first element with the maximum of the rest of the list *)
    | hd::tl -> max hd (max_element tl)
    
(* Function to return the minimum and maximum element in a list *)
let rec min_max list =
    
    (* Base case: If the list is empty, return an empty tuple *)
    match list with
    | [] -> (0,0)
    
    (* Recursive case: Get the minimum of the first element and the minimum of the rest of the list, 
    and get the maximum of the first element and the maximum of the rest of the list *)
    | hd::tl -> let (min,max) = min_max tl in (min hd, max hd, max hd (max_element tl))
(* This is a function that calculates the nth Fibonacci number using a recursive approach in OCAML *)

let rec fibonacci n = 
  if n <= 0 then 0
  else if n = 1 then 1
  else
    fibonacci (n-1) + fibonacci (n-2)

(* Explanation: The function fibonacci takes in a parameter n and recursively calculates the nth Fibonacci number. It first checks if n is less than or equal to 0, in which case it returns 0. If n is equal to 1, it returns 1. Otherwise, it calls the fibonacci function on n-1 and n-2, and adds those results together. This continues until the base cases are reached, and the final result is returned. The function is defined using the let rec keyword, which allows for recursion. *)

(* Example usage: Calling fibonacci 5 will return the 5th Fibonacci number (which is 5). *)
(**This function takes in two lists and checks if the first list is a subsequence of the second list*)
let rec is_subsequence (list1 : int list) (list2 : int list) =
    match list1, list2 with 
    | _, [] -> false (*if the second list is empty, then the subsequence is not contained*)
    | [], _ -> true (*if the first list is empty, then it is automatically a subsequence*)
    | x :: xs, y :: ys when x = y -> is_subsequence xs ys (*if the first element of both lists match, move on to next elements*)
    | x :: xs, y :: ys -> is_subsequence list1 ys (*else, skip the first element of second list and check the rest*)
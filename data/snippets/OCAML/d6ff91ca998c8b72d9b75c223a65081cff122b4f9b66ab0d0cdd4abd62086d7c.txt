(* Generate a list of all prime numbers from 2 to n *)
let rec is_prime n m =
  if m > n / 2 then true
  else if n mod m = 0 then false
  else is_prime n (m + 1)

let rec sieve nums =
  match nums with
  | [] -> []
  | x::xs -> x :: sieve(List.filter (fun a -> a mod x <> 0) xs)

let rec prime_list n =
  let nums = List.init (n-1) (fun i -> i+2) in
  sieve nums

(* Example usage *)
let n = 20 in
let primes = prime_list n in
Printf.printf "Prime numbers from 2 to %d: " n;
List.iter (fun x -> Printf.printf "%d " x) primes;
Printf.printf "\n"

(* Output: 
Prime numbers from 2 to 20: 2 3 5 7 11 13 17 19 
*)
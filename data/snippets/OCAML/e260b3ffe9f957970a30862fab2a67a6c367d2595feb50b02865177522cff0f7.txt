(* Define a function to generate a list of natural numbers between two given values
  using recursive function and pattern matching *)
let rec generate_list start end =
  match start > end with
  | true -> []
  | false -> start :: generate_list (start + 1) end;;

(* Define a list of natural numbers from 1 to 10 *)
let numbers = generate_list 1 10;;

(* Define a function to calculate the sum of all elements in a list using tail recursion *)
let rec sum_list acc lst =
  match lst with
  | [] -> acc
  | x :: xs -> sum_list (acc + x) xs;;

(* Calculate the sum of the generated list *)
let sum = sum_list 0 numbers;;

(* Print the result *)
print_int sum;;
(* This is a function that takes in two integers and returns their sum *)

let sum (a, b) =
  let rec helper x y carry =
    match (x, y, carry) with
    | ([], [], 0) -> []
    | ([], [], c) -> [c]
    | ([], ys, c) | (ys, [], c) ->
        let s = List.hd (ys @ [c]) + carry in
        (s mod 10) :: (helper [] (List.tl (ys @ [c])) (s / 10))
    | (x :: xs, y :: ys, c) ->
        let s = x + y + carry in
        (s mod 10) :: (helper xs ys (s / 10))
  in
  List.rev (helper (List.rev a) (List.rev b) 0)
(* This is a function that takes in an integer list and a function, and applies the function to each element in the list *)
let rec map_list (lst : int list) (f : int -> int) : int list =
  match lst with
  | [] -> []
  | hd :: tl ->
      let result = f hd in
      result :: map_list tl f

(* Example usage of the map_list function *)
let increment_list (lst : int list) : int list =
  map_list lst (fun x -> x + 1)

(* Output: [2; 3; 4; 5; 6] *)
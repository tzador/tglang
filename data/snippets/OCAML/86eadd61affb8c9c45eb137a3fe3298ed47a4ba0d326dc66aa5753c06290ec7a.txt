(* This is a function that takes in a list of integers and returns a new list with only even numbers *)
let rec get_even_numbers lst =
  match lst with
  | [] -> [] (* base case: if the list is empty, return an empty list *)
  | hd::tl -> (* recursive case: if the list is not empty, split it into head and tail *)
    if hd mod 2 = 0 then hd :: get_even_numbers tl (* if the head of the list is even, add it to the new list *)
    else get_even_numbers tl (* if the head of the list is odd, skip it and move on to the next element *)
    
(* Example usage *)
get_even_numbers [1;2;3;4;5];; (* output: [2;4] *)
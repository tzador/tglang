(* This is a function that takes in a list of numbers and returns the sum of all even numbers within the list *)
let rec sum_even_numbers (lst : int list) : int =
  match lst with
  | [] -> 0 (* The base case is when the list is empty, then the sum is 0 *)
  | hd::tl -> (* The head of the list is assigned to hd, and tl is the rest of the list *)
    if hd mod 2 = 0 then (* Checks if the head of the list is even *)
      hd + sum_even_numbers tl (* If it is even, add it to the sum of even numbers in the rest of the list *)
    else
      sum_even_numbers tl (* If it is odd, skip it and move on to the rest of the list *)
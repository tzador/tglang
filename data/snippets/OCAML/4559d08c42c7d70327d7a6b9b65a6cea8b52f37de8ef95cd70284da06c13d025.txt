(* Function that computes the sum of the first n numbers *)
let rec sum n =
  match n with
  | 0 -> 0                         (* Base case: if n is 0, return 0 as sum *)
  | x -> x + sum (n-1)             (* Recursive case: add n to the sum of all numbers before it *)
in
sum 10                             (* Call the function and pass in 10 as the value of n *)
(* Output: 55 *)                  (* The sum of the first 10 numbers is 55 *)
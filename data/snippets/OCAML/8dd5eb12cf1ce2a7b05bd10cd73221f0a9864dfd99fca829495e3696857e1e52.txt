(* This is a function that takes in a list of integers and returns their sum *)

let rec sum_list list =
  match list with
  (* Base case: when the list in empty, return 0 *)
  | [] -> 0
  (* Recursive case: add the first element to the sum of the rest of the list *)
  | hd :: tl -> hd + sum_list tl
    ;;

(* Example usage: *)
sum_list [1;2;3;4;5;6]
(* Output: 21 *)
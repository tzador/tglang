(* OCAML code for finding the minimum and maximum values in a list *)
(* Declare a recursive function to find the minimum and maximum values in a list *)

let rec min_max values = match values with

| [] -> failwith "List is empty" (* if list is empty, raise exception *)

| [x] -> (x, x) (* if list contains only one element, that element is both the minimum and maximum *)

| hd :: tl -> (* for list with multiple elements *)
let (min, max) = min_max tl in (* recursively find the minimum and maximum values in the rest of the list *)
(if hd < min then hd else min, if hd > max then hd else max) (* compare the head of the list with the minimum and maximum values and update if needed *)

(* example usage *)

let numbers = [5; 3; 9; 2; 8; 1; 4; 6; 7];; (* define a list of numbers *)

let (minimum, maximum) = min_max numbers;; (* call the min_max function on the list and store the result in variables *)

(* print the minimum and maximum values *)
print_endline ("Minimum value: " ^ string_of_int minimum);;
print_endline ("Maximum value: " ^ string_of_int maximum);;

(* Output: 
Minimum value: 1
Maximum value: 9
*)
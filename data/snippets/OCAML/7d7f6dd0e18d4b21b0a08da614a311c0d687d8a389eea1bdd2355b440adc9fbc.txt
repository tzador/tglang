(* This is a function that takes in a list of integers and returns a list of strings. *) 
let number_to_string_list (nums : int list) : string list = 
  (* This is a helper function that converts an integer to a string. *)
  let int_to_string (n : int) : string = 
    string_of_int n in 
  (* This is the main recursive function that converts each integer in the list to a string. *)
  let rec convert_list (nums : int list) : string list = 
    match nums with 
    | [] -> [] (* Base case: empty list *)
    | h :: t -> (int_to_string h) :: convert_list t in (* Recursive call on remaining list *)
  convert_list nums;; (* Call the recursive function *)
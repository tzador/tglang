(* This is a function that takes in a list of integers and returns a list of their squares *)
let rec square_list (lst : int list) : int list =
  match lst with
    | [] -> []                        (* If the list is empty, return an empty list *)
    | hd::tl -> (hd * hd) :: square_list tl  (* Square the head of the list and add it to the result of recursively calling the function on the tail of the list *)
    
(* Example usage: *)

let input_list = [1; 2; 3; 4]  (* Define an input list of integers *)

let squared_list = square_list input_list  (* Pass the input list to the square_list function *)

(* Output: [1; 4; 9; 16] *)  (* Prints out the resulting list of squared integers *)
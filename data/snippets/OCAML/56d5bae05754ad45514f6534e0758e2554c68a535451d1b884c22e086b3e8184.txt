(**
  This is a function that takes in a list of integers and returns the average of the list.
  @param lst list of integers
  @return average of the list
*)
let rec average_lst lst =
  match lst with
  | [] -> 0.0  (* base case: empty list, return 0 *)
  | [x] -> float_of_int x  (* base case: list with single integer, return integer as float *)
  | hd::tl ->
    let sum = float_of_int hd +. average_lst tl in  (* recursively calculate sum of list elements *)
    sum /. float_of_int (List.length lst)  (* return the average by dividing sum with length of list *)
  
(* Example Usage *)
let myList = [1; 2; 3; 4; 5]  (* define a list of integers *)
let avg = average_lst myList  (* calculate average of the list using the function *)
(* output: avg = 3.0 *)
(* Example of a complex function in OCAML *)
let rec complex_function x y = 
  if x = 0 then y (* base case *)
  else 
    let x' = x - 1 in 
    let y' = y * x in 
    let z = if x mod 2 = 0 then x' + y' else x' * y' in 
    let w = x' + 2 in 
    match z, w with
    | z', w' when z' > 100 -> complex_function (z' - w') w'
    | _, _ -> complex_function (x' - 2) (y' + w)

let result = complex_function 10 5
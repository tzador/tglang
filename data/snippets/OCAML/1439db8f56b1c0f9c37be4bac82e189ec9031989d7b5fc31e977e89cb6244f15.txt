(* mutable variable to store the result *)
let result = ref 0;;

(* function to recursively calculate the nth Fibonacci number *)
let rec fibonacci n =
  (* base case: first two numbers in the sequence are 0 and 1 *)
  match n with
  | 0 -> 0
  | 1 -> 1

  (* recursive case: calculate the nth Fibonacci number using previous two numbers *)
  | _ ->
    (* call fibonacci function recursively on n-1 and n-2 *)
    let a = fibonacci (n-1) in
    let b = fibonacci (n-2) in

    (* store the result in the mutable variable *)
    result := a + b;

    (* return the result *)
    !result;;

(* print out the first 10 Fibonacci numbers using a loop *)
for i = 0 to 10 do
  (* call the fibonacci function and print the result *)
  print_int (fibonacci i);
  print_newline();
done;;
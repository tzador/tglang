(* Define a union type of different programming languages *)
type language = 
  | Java 
  | Python 
  | C 
  | OCAML 

(* Define a function to check if a given language is object-oriented or not *)
let is_object_oriented = function
  | Java -> true
  | Python -> true
  | C -> false
  | OCAML -> false

(* Define a record type for a software developer with fields for name, years of experience, and list of languages they know *)
type developer = {
  name: string;
  years_of_experience: int;
  languages: language list;
}

(* Define a function to print out information for a given developer *)
let print_developer_info developer =
  Printf.printf "Name: %s, Years of experience: %d, Languages: " developer.name developer.years_of_experience;
  List.iter (fun lang -> Printf.printf "%s " (match lang with Java -> "Java" | Python -> "Python" | C -> "C" | OCAML -> "OCaml")) developer.languages
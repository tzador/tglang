(** [fib n] computes the nth number in the Fibonacci sequence *)
let rec fib n =
  if n <= 1 then n
  else fib (n-1) + fib (n-2)

(** [init_matrix n] initializes an n x n matrix with random integers *)
let init_matrix n =
  let matrix = Array.make_matrix n n 0 in
  for i = 0 to n-1 do
    for j = 0 to n-1 do
      matrix.(i).(j) <- Random.int 10
    done;
  done;
  matrix

(** [multiply_matrix m1 m2] multiplies two matrices and returns the result *)
let multiply_matrix m1 m2 =
  let n = Array.length m1 in
  let result = Array.make_matrix n n 0 in
  for i = 0 to n-1 do
    for j = 0 to n-1 do
      for k = 0 to n-1 do
        result.(i).(j) <- result.(i).(j) + m1.(i).(k) * m2.(k).(j)
      done;
    done;
  done;
  result

let matrix1 = init_matrix 3 in
let matrix2 = init_matrix 3 in
let result = multiply_matrix matrix1 matrix2 in
print_endline ("The result of matrix multiplication is:");
Array.iter (fun arr -> Array.iter (fun num -> print_string (string_of_int num); print_string " ") arr; print_string "\n") result
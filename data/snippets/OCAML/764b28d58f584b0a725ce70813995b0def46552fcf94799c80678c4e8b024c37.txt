(* This is a function that takes in two integers and returns their product *)

let multiply x y =  (* define the function with two parameters x and y *)
  let rec iter i acc =  (* define a recursive helper function with two parameters i and acc *)
    if i = 0 then acc  (* base case: if i is 0, return the accumulated value *)
    else iter (i - 1) (acc + x)  (* recursively call the helper function with i decremented by 1 and accumulated value incremented by x *)
  in
  iter y 0  (* call the helper function with y as i and 0 as accumulated value to start the recursion *)
  
let result = multiply 5 3  (* call the multiply function with integers 5 and 3 as arguments *)

(* Output: result = 15 *)
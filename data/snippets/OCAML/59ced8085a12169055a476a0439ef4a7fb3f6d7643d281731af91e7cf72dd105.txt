(* This is a recursive function that takes in a list of integers and returns the sum of all even numbers *)
let rec sum_even numbers =
    match numbers with
    | [] -> 0 (* Base case: when the list is empty, return 0 *)
    | head :: tail -> (* Destructure the list into head and tail *)
        if head mod 2 = 0 then (* Check if the head is an even number *)
            head + sum_even tail (* If it is, add it to the recursive call with the tail of the list *)
        else
            sum_even tail (* If it's odd, skip it and continue with the tail of the list *)
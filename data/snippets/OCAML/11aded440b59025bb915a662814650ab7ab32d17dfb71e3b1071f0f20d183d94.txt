(**
 * Knuth-Morris-Pratt Algorithm for substring search.
 * Takes in a text string and a pattern string and
 * returns the starting index of the first occurence of the pattern in the text.
 * If the pattern is not found, returns -1.
*)
let kmp_search (text: string) (pattern: string) : int =
  let n = String.length text in
  let m = String.length pattern in
  let fail = Array.make m 0 in

  (* Calculate failure function *)
  let rec calc_fail i j =
    if j < 0 || j >= m || String.get pattern i = String.get pattern j then
      (fail.(i) <- j + 1; calc_fail (i + 1) (j - 1))
    else
      calc_fail i fail.(j)
  in
  calc_fail 1 (-1);

  (* Perform KMP search *)
  let rec kmp_search index text_index =
    if index < n && text_index < m then
      if String.get pattern text_index = String.get text index then
        (if text_index = m - 1 then index - m + 1 else kmp_search (index + 1) (text_index + 1))
      else if text_index > 0 then kmp_search index fail.(text_index - 1)
      else kmp_search (index + 1) 0
    else if text_index = m then index - m else -1
  in
  kmp_search 0 0

(* Example usage *)
let result = kmp_search "hello world" "world"  (* Should return 6 *)
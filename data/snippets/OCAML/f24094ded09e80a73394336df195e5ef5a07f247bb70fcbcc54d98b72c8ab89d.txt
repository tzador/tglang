(* This function performs a linear search on a given list and returns the index of the element if found, or -1 if not found *)

(* Helper function which takes in a list, an element to search for, and the current index *)
let rec linear_search_helper lst elem i = 
  match lst with 
  | [] -> -1 (* Element not found *)
  | hd::tl -> if hd = elem then i (* Found the element, return index *)
               else linear_search_helper tl elem (i+1) (* Continue searching *)

(* Main function which takes in a list and an element to search for *)
let linear_search lst elem = 
  linear_search_helper lst elem 0 (* Call helper function with initial index of 0 *)

(* Example *)

let my_list = [1; 4; 2; 5; 3; 6; 7; 9; 8]

let result = linear_search my_list 5 (* Will return 3, since 5 is at index 3 in the list *)
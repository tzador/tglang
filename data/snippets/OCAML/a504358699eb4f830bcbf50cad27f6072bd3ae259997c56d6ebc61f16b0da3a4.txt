(* This function takes in two lists and produces a list containing the cartesian product of the two lists *)

let rec cartesian_product list1 list2 =
  match (list1, list2) with
  | ([], _) | (_, []) -> [] (* If either list is empty, return an empty list *)
  | (h::t, _) -> List.map (fun x -> (h, x)) list2 @ cartesian_product t list2
  (* For each element in the first list, map the second list to a tuple with that element and the current element in the second list 
       and add the result to the cartesian product of the first list tail and the second list *)
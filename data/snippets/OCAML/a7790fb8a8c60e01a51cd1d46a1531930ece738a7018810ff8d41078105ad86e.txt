(** [get_sum acc list] is a recursive function that calculates the sum of all elements in [list] and adds it to [acc]
 *  @param acc - int representing the current sum
 *  @param list - int list containing the elements to be summed
 *  @return int representing the total sum of all elements in [list]
 *)
let rec get_sum acc list = 
  match list with 
  | [] -> acc (* base case: if list is empty, return current sum value *)
  | h::t -> get_sum (acc + h) t (* recursive call: add current list element to sum, pass in remaining list elements *)
  
(* Example usage: *)
get_sum 0 [1;2;3;4] (* returns 10, the sum of all elements in the list *)
(* This is a function in OCAML that calculates the factorial of a given number *)

let rec factorial x =          (* Function definition with the function name and parameter *)
  if x = 0 then 1              (* Base case: if x is 0, then the factorial is 1 *)
  else x * factorial (x-1)     (* Recursive call with x-1 to calculate the factorial *)

let result = factorial 5       (* Calling the function with the parameter 5 *)
(* The output will be 120, as 5! = 5 * 4 * 3 * 2 * 1 = 120 *)

(* This is a recursive function, meaning that it calls itself within the function definition.
Recursive functions are commonly used in functional programming languages like OCAML. *)
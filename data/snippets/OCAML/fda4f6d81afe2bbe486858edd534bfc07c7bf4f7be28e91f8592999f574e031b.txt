let rec fib n = match n with (*defines a recursive function to calculate fibonacci numbers*)
| 0 -> 0 (*base case: if n is 0, return 0*)
| 1 -> 1 (*base case: if n is 1, return 1*)
| _ -> fib (n-1) + fib (n-2) (*if n is not 0 or 1, recursively call fib function to calculate previous two fibonacci numbers and add them*)
(*example usage: fib 5 will return the 5th fibonacci number, which is 5*)
(** This is a function that takes in a list of integers and returns the sum of all even numbers in the list *)

let rec sum_even_list (lst: int list) : int = 
  match lst with
    | [] -> 0 (* Empty list case, return 0 *)
    | h::t -> if h mod 2 = 0 then h + (sum_even_list t) (* If head is even, add it to the sum of the rest of the list *)
               else sum_even_list t (* If head is odd, skip it and continue recursively on the rest of the list *)

(* Example usage *)
let my_list = [1;2;3;4;5] (* Define a list of integers *)
sum_even_list my_list (* Call the function on the list, should return 6 as the sum of 2 and 4 *)
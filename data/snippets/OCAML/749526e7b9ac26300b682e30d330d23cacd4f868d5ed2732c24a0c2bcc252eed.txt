(* This is an example of a function that recursively finds the minimum element in a list of integers *)
(* It takes in a list as a parameter and returns the minimum element as an integer *)

let rec find_min (lst: int list) : int =
  match lst with
  | [] -> raise (Failure "Empty list")
  | [x] -> x (* Base case - if the list only has one element, it is the minimum *)
  | x :: xs -> min x (find_min xs) (* Recursive call - compares the first element with the minimum of the rest of the list *)

(* Example usage with a list of integers *)
let lst = [9; 5; 8; 2; 7]
let min = find_min lst (* min = 2 *)
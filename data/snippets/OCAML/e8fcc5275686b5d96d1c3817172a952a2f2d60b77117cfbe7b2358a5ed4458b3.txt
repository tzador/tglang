(* This is a function that takes in a list of integers and returns the maximum value in the list *)
let rec find_max lst =
  match lst with
  | [] -> failwith "Empty list"
  | [x] -> x
  | hd::tl -> max hd (find_max tl)

(* This is a function that finds the factorial of a given integer *)
let rec factorial num =
  if num <= 0 then 1
  else num * factorial (num - 1)

(* This is an example of a recursive function that calculates the nth Fibonacci number *)
let rec fibonacci n =
  match n with
  | 1 -> 0
  | 2 -> 1
  | _ -> fibonacci (n-1) + fibonacci (n-2)
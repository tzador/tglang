(* This is a function that takes in a list of integers and returns the sum of all even numbers in the list *)
let rec sum_even (lst: int list) : int =
  match lst with
  | [] -> 0 (* Base case: If the list is empty, the sum is 0 *)
  | x :: rest -> if x mod 2 = 0 then x + sum_even rest (* If the first element is even, add it to the sum of the rest of the list *)
                  else sum_even rest (* If the first element is odd, skip it and continue finding the sum of the rest of the list *)

(* This is an example of calling the sum_even function with a list of integers *)
let result = sum_even [1;2;3;4;5] (* The result will be 6, since 2 and 4 are the only even numbers in the list *)
let rec fib n = 
  if n < 2 then n 
  else fib (n-1) + fib (n-2);;

(* This function recursively calculates the nth term in the Fibonacci sequence *)

let rec power x n =
  if n = 0 then 1
  else if n = 1 then x
  else if n mod 2 = 0 then power (x * x) (n / 2)
  else x * power (x * x) (n / 2);;

(* This function recursively calculates x raised to the power of n using the binary exponentiation algorithm *)

let rec gcd a b =
  if b = 0 then a
  else gcd b (a mod b);;

(* This function recursively calculates the greatest common divisor of two numbers using Euclid's algorithm *)

let rec factorial n =
  if n = 0 then 1
  else n * factorial (n-1);;

(* This function recursively calculates the factorial of a number n using the product recursion formula *)
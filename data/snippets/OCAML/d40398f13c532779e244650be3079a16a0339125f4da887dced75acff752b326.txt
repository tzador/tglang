(** A custom type to represent a binary tree with integer values *)
type binTree =
  | Leaf of int
  | Node of binTree * binTree

(** Function to insert an integer value into a binary tree *)
let rec insert (tree: binTree) (value: int) : binTree =
  match tree with
  | Leaf x -> if value <= x then Node (Leaf value, Leaf x)
              else Node (Leaf x, Leaf value)
  | Node (left, right) -> if value <= x then Node (insert left value, right)
                          else Node (left, insert right value)
                           
(** Function to search for a value in a binary tree *)
let rec search (tree: binTree) (value: int) : bool =
  match tree with
  | Leaf x -> value = x
  | Node (left, right) -> if value = x then true else if value < x then search left value
                          else search right value
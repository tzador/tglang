(* An OCaml program that finds the maximum value of a list of integers *)

(* Defining a function to find the maximum value of a list of integers *)
let rec find_max (lst : int list) : int =
  match lst with
  | [] -> 0 (* If the list is empty, return 0 as the maximum value *)
  | [x] -> x (* If the list has only one element, return that element as the maximum value *)
  | x :: xs -> if x > find_max xs (* If the first element of the list is greater than the maximum value of the remaining list *)
    then x (* Return the first element as the new maximum value *)
    else find_max xs (* Otherwise, recursively call the function with the remaining list *)

(* Defining a list of integers *)
let numbers = [5; 2; 8; 1; 9; 4; 6]

(* Calling the function and storing the result in a variable *)
let max = find_max numbers

(* Printing the result *)
print_int max
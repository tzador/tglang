(* Returns the factorial of an input number *)
let rec factorial = function
| 0 -> 1
| n -> n * factorial(n-1)

(* Calculates the sum of a list of integers *)
let rec sum_list = function
| [] -> 0
| h::t -> h + sum_list t

(* Performs binary search on an input list *)
let rec binary_search lst target =
  let rec search low high =
    if low > high then raise Not_found
    else
      let mid = (low + high) / 2
      match lst.(mid) with
      | v when v = target -> mid
      | v when v < target -> search (mid + 1) high
      | _ -> search low (mid - 1)
  in
  search 0 (Array.length lst - 1)
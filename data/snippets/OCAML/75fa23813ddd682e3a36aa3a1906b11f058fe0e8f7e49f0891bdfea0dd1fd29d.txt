(* This is a function that recursively calculates the factorial of a given integer. *)
let rec factorial num =
  if num = 0 then 1 else num * factorial(num - 1)

(* This is a function that takes in a list of integers and returns a new list with each element multiplied by 2. *)
let double_list list =
  List.map (fun x -> 2 * x) list

(* This is a function that takes in a string and reverses the characters in the string. *)
let reverse_string str =
  let rec aux str acc =
    match str with
    | "" -> acc
    | _ -> aux (String.sub str 1 (String.length str - 1)) ((String.sub str 0 1) ^ acc) in
  aux str ""

(* This is a function that takes in two lists and merges them into one, sorted in ascending order. *)
let rec merge_lists list1 list2 =
  match (list1, list2) with
  | ([], list) | (list, []) -> list
  | (x :: xs, y :: ys) ->
    if x < y then x :: merge_lists xs (y :: ys) else y :: merge_lists (x :: xs) ys
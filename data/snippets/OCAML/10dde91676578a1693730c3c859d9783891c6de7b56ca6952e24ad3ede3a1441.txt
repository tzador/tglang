(*Create a function named 'list_reverse' that takes in a list as an argument*)
let rec list_reverse lst =
  (*Check first if the list is empty*)
  match lst with
  | [] -> []
  | h :: t ->
      (*If not empty, recursively call the function, passing in the tail of the list*)
      let reversed_tail = list_reverse t in
      (*Then append the head to the end of the reversed tail*)
      reversed_tail @ [h]

(*Create a list named 'numbers' containing numbers from 1 to 10*)
let numbers = [1; 2; 3; 4; 5; 6; 7; 8; 9; 10]

(*Call the list_reverse function on the 'numbers' list*)
list_reverse numbers
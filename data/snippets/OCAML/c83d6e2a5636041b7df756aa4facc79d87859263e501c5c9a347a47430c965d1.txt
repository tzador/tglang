(* this is a function that takes in a list of integers and outputs the sum of all the even numbers in the list *)

let rec sum_even (lst : int list) : int =
  match lst with
  | [] -> 0 (* if list is empty, return 0 *)
  | hd::tl -> (* pattern match to separate the head and tail of list *)
    if hd mod 2 = 0 then (* if head is even *)
      hd + sum_even tl (* add it to the sum of even numbers in the tail *)
    else
      sum_even tl (* else, continue with the tail *)

(* Example usage: *)
sum_even [1; 2; 3; 4; 5] (* Output: 6 *)
sum_even [2; 4; 6; 8; 10] (* Output: 30 *)
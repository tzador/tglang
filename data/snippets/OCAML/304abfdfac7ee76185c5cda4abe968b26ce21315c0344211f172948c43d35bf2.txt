(* This is a function that sorts a list of integers in ascending order using the insertion sort algorithm *)

(* Insertion Sort function *)
(* Parameters: lst - list of integers to be sorted *)
(* Returns: sorted list of integers in ascending order *)
let rec insertionSort lst =
  match lst with
  | [] -> []
  | x::xs -> insert x (insertionSort xs)

(* Helper function for Insertion Sort *)
(* Parameters: x - integer to be inserted, sortedLst - list of integers that are already sorted *)
(* Returns: sorted list of integers with x inserted appropriately *)
and insert x sortedLst =
  match sortedLst with
  | [] -> [x]
  | y::ys ->
    if x < y then x::y::ys
    else y::(insert x ys)

(* Example usage of the insertionSort function *)
let sortedList = insertionSort [5;2;7;1;3]

(* Output: sortedList = [1;2;3;5;7] *)
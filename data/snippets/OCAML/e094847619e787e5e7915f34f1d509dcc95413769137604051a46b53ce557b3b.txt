let rec merge_sort lst =
  let rec merge left_list right_list = 
    match left_list, right_list with 
    | [], right -> right
    | left, [] -> left 
    | (l :: left), (r :: right) -> 
        if l < r then l :: (merge left (r :: right))
        else r :: (merge (l :: left) right) in
  let rec split lst =
    match lst with
    | [] -> [], []
    | [x] -> [x], []
    | x :: y :: tl -> 
        let left, right = split tl in 
        x :: left, y :: right in 
  match lst with
  | [] -> []
  | [x] -> [x]
  | [x; y] -> if x < y then [x; y] else [y; x]
  | _ -> let left, right = split lst in 
         merge (merge_sort left) (merge_sort right)
(** Module representing a binary search tree **)

module BST = struct
  (** The type of a binary search tree node **)
    type 'a node = Empty | Node of 'a * 'a node * 'a node

(** Function to insert an element into the tree **)
let rec insert tree element =
  match tree with
  | Empty -> Node (element, Empty, Empty)
  | Node (x, l, r) -> 
      if element < x then Node (x, insert l element, r)
      else if element > x then Node (x, l, insert r element)
      else tree
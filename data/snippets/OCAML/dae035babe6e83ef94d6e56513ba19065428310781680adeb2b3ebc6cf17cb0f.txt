(* function that takes in a list of integers and returns the sum of all even numbers in the list *)
let rec sum_even (lst : int list) : int =
  match lst with
  | [] -> 0 (* base case: empty list *)
  | h :: t -> (* match head (h) and tail (t) *)
      if h mod 2 = 0 then (* check if h is even *)
        h + sum_even t (* add h to the sum of the rest of the list *)
      else
        sum_even t (* if h is odd, ignore it and continue to rest of the list *)
(* Define a recursive function to calculate the factorial of a number *)
let rec factorial n = 
  if n = 0 then
    1 
  else
    n * factorial (n-1)

(* Define a function to print out a list of numbers in reverse order *)
let print_reverse lst = 
  let rec aux lst acc = 
    match lst with 
    | [] -> acc
    | x :: xs -> aux xs (x :: acc) (* Using tail-recursive call to reverse the list *)
  in
  let reversed = aux lst [] 
  List.iter (fun x -> Printf.printf "%d " x) reversed

(* Define a function to check if a given list is sorted in non-decreasing order *)
let rec is_sorted lst = 
  match lst with 
  | [] | [_] -> true 
  | x :: y :: xs -> if x > y then false else is_sorted (y :: xs)
(* Function: square_root
   Parameters: x - a float
   Returns: the square root of x *)
let square_root x =
  let rec helper n = (* helper function that implements binary search *)
    if n * n > x then helper (n - 1) (* if square of n is greater than x, decrease n *)
    else if n * n < x then helper (n + 1) (* if square of n is smaller than x, increase n *)
    else n (* otherwise, return n as the square root of x *)
  in
  let start = (* determine the starting point based on the value of x *)
    if x < 1.0
    then x
    else x /. 2.0
  in
  helper start (* call the helper function with the starting point *)
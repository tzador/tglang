(* An example of a recursive function that calculates the factorial of a given number.
   In OCAML, we use the 'let rec' syntax to define a recursive function. *)
let rec factorial n =
  (* A recursive function needs a base case, so we check if n is equal to 0 and return 1 if it is. *)
  if n = 0 then 1
  (* If n is not equal to 0, we call the factorial function again with n - 1 as the parameter,
     and then multiply the result with n. This will continue until n = 0, the base case. *)
  else factorial (n - 1) * n
;;

(* We can now call the factorial function with any number as the argument. *)
factorial 5  (* This will calculate and return the factorial of 5, which is 120. *)
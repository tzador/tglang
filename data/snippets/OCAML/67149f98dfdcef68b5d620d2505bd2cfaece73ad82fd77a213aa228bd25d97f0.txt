(* This is a function that takes in a list of integers and returns the sum of all even numbers in the list *)
let rec sum_even_nums (nums: int list) : int =
  match nums with
  | [] -> 0 (* If the list is empty, the sum is 0 *)
  | x::xs -> if x mod 2 = 0 (* If the first element is even *)
             then x + sum_even_nums xs (* Add it to the sum and call the function recursively on the rest of the list *)
             else sum_even_nums xs (* If the first element is odd, just call the function recursively on the rest of the list *)
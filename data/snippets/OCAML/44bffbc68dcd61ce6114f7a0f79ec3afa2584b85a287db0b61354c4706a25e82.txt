(* This function takes in two integer parameters and returns their sum *)
let add (a : int) (b : int) : int =
  let c = a + b in
  print_endline "The sum of the two integers is:";
  print_int c;
  c

(* This function takes in an integer and returns its factorial *)
let rec factorial (n : int) : int =
  if n = 0 then 1
  else n * factorial (n-1)

(* This function takes in a list of integers and returns the sum of the even integers *)
let rec sum_of_evens (lst : int list) : int =
  match lst with
  | [] -> 0
  | x :: xs -> if x mod 2 = 0 then x + sum_of_evens xs
                   else sum_of_evens xs

(* This is an example usage of the functions defined above *)
let num1 = 5 in
let num2 = 10 in
let integers = [1;2;3;4;5;6;7;8;9;10] in
let sum = add num1 num2 in
let fact = factorial sum in
let even_sum = sum_of_evens integers in
print_endline "The factorial of the sum of the two numbers is:";
print_int fact;
print_endline "\nThe sum of all even integers in the list is:";
print_int even_sum
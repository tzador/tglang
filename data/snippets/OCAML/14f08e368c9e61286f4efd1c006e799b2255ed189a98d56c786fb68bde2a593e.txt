(* This is a function that takes in a list of numbers and returns the sum of all the even numbers in the list *)
let rec sum_even lst =
  match lst with
  | [] -> 0 (* if the list is empty, return 0 as the sum *)
  | h::t -> if h mod 2 = 0 then h + sum_even t (* if the first element is even, add it to the recursive call of the function with the rest of the list *)
             else sum_even t (* if the first element is odd, skip it and just call the function recursively with the rest of the list *)

(* Example usage *)
let numbers = [1;2;3;4;5;6;7;8;9] (* declare a list of numbers *)
let even_sum = sum_even numbers (* call the function with the list of numbers and store the result in a variable *)
print_endline (string_of_int even_sum) (* print the sum of even numbers in the list *)

(* Output:
20
*)
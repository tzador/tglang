(* This is an implementation of the recursive function factorial using pattern matching *)
let rec factorial n = 
  match n with
  | 0 -> 1
  | n -> n * factorial(n-1)

(* This is a function that calculates the sum of squares of a list of integers *)
let sum_of_squares l = 
  let rec sum_sq_acc acc = function
    | [] -> acc
    | x::xs -> sum_sq_acc (acc + (x*x)) xs
  in sum_sq_acc 0 l
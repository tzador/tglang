(* This is a function that sorts a list of integers in ascending order using the insertion sort algorithm *)

(* The function takes in a list as input *)
let insertion_sort (lst : int list) =
    (* A helper function that inserts an element into a sorted list *)
    let rec insert (x : int) (lst' : int list) : int list =
        match lst' with
        | [] -> [x]
        | h :: t -> if x <= h then x :: lst'
                    else h :: insert x t
    in

    (* A recursive function that uses the helper function to sort the list *)
    let rec sort (lst : int list) : int list =
        match lst with
        | [] -> []
        | h :: t -> insert h (sort t)
    in

    (* Calls the sort function and returns the sorted list *)
    sort lst
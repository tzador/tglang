(* Declaring a custom exception with Error constructor *)
exception MyError of string

(* A function that uses pattern matching to handle the exception *)
let rec divide num1 num2 =
  match num2 with
  | 0 -> raise (MyError "Cannot divide by zero") (* raise the custom error *)
  | _ -> num1 / num2 (* perform the division *)

(* Calling the function and handling the exception using try with syntax *)
try
  let result = divide 10 0 in
  print_endline (string_of_int result)
with
| MyError msg -> print_endline ("Error: " ^ msg) (* handle the custom error *)
| _ -> print_endline "Unknown error occurred"
(* This is a function that calculates the factorial of a given number *)
let rec factorial x =
  if x == 0 then 1 (* Base case - 0! = 1 *)
  else if x > 0 then x * factorial (x-1) (* Recursive case - x! = x * (x-1)! *)
  else raise (Invalid_argument "Cannot calculate factorial of negative number") (* Error case - negative numbers not allowed *)
  
(* This is a function that calculates the Fibonacci sequence up to a given number *)
let rec fibonacci x =
  if x == 1 then 0 (* Base case - F(1) = 0 *)
  else if x == 2 then 1 (* Base case - F(2) = 1 *)
  else if x > 0 then fibonacci (x-1) + fibonacci (x-2) (* Recursive case - F(x) = F(x-1) + F(x-2) *)
  else raise (Invalid_argument "Cannot calculate Fibonacci of negative number") (* Error case - negative numbers not allowed *)
  
(* Main method to run both functions and print the results *)
let () =
  print_endline "Factorial of 5 is: ";
  let res1 = factorial 5 in
  print_int res1;
  print_newline ();
  
  print_endline "Fibonacci sequence up to 5: ";
  let res2 = fibonacci 5 in
  print_int res2;
  let res3 = fibonacci 4 in
  print_int res3;
  let res4 = fibonacci 3 in
  print_int res4;
  let res5 = fibonacci 2 in
  print_int res5;
  let res6 = fibonacci 1 in
  print_int res6;
  print_newline ();
(* This is a function that recursively calculates the sum of a list of numbers *)
let rec sum_list list =
    match list with
    | [] -> 0 (* base case: empty list returns 0 *)
    | x::xs -> x + sum_list xs (* recursive case: adds the first element to the result of summing the rest of the list *)
    
(* Example call: sum_list [1; 2; 3; 4] = 10 *)
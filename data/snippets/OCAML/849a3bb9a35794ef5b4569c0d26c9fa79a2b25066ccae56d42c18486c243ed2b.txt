(* A function that finds the gcd of two numbers using Euclid's algorithm *)

let rec gcd a b = (* recursive function takes in two parameters *)
    if b = 0 then a (* if b is 0, gcd is a *)
    else
        gcd b (a mod b) (* otherwise, call gcd again with a mod b as new parameters *)

(* Function to find the least common multiple of two numbers *)
let lcm a b =
    abs (a * b) / (gcd a b) (* use abs to ensure positive result, divide product of a and b by their gcd *)

(* Example usage of the functions *)
print_endline ("The gcd of 12 and 18 is: " ^ string_of_int (gcd 12 18));
print_endline ("The lcm of 12 and 18 is: " ^ string_of_int (lcm 12 18));

(* Output:
The gcd of 12 and 18 is: 6
The lcm of 12 and 18 is: 36
*)
(* This is a function that recursively calculates the factorial of a number *)
let rec factorial x =
  if x <= 1 then
    1
  else
    x * factorial (x-1)
    
(* This is a function that checks if a string is a palindrome *)
let reverse_string str =
  let rec reverse str index =
    if index < 0 then ""
    else (String.make 1 str.[index]) ^ (reverse str (index - 1))
  in str = (reverse str (String.length str - 1))
  
(* An example of pattern matching in OCaml *)
let rec sum_of_list l =
  match l with
  | [] -> 0
  | x :: xs -> x + sum_of_list xs
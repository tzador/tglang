(* This is a function that takes in two integers and returns the result of their division *)
let divide x y = 
  if y = 0 then failwith "Cannot divide by zero"
  else x / y;; (* division operator in OCAML *)

(* This is a recursive function that calculates the factorial of a given number *)
let rec factorial n = 
  if n = 0 then 1 (* base case *)
  else n * factorial (n-1) ;; (* recursive function call *)

(* This is a function that checks if a given number is prime *)
let is_prime n =
  let rec check_divisor d = 
    if d*d > n then true (* if no divisors are found, number is prime *)
    else if n mod d = 0 then false (* if a divisor is found, number is not prime *)
    else check_divisor (d+1) in
    if n <= 1 then false
    else check_divisor 2 ;; (* starting the recursive function at 2, 1 is not a prime number *)
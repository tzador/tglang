(* A function that takes in a list of integers and recursively
   adds them together *)
let rec sum_list lst =
  match lst with
  | [] -> 0 (* Base case: empty list returns 0 *)
  | h::t -> h + sum_list t (* Recursive case: add first element to sum of the rest of the list *)

(* Example usage of the function *)
let example_list = [1; 2; 3; 4; 5]
let result = sum_list example_list
Printf.printf "The sum of the list is: %d\n" result
(* Output: The sum of the list is: 15 *)
let rec merge_sort = function             (*defining a recursive function merge_sort*)
  | [] -> []                              (*pattern matching*)
  | [x] -> [x]                            (*if list has only 1 element, return it*)
  | lst ->                                (*if list has more than 1 element*)
   let half = List.length lst / 2 in       (*calculate the midpoint of list*)
   let first_half = List.sub lst 0 half in (*split list into two halves*)
   let second_half = List.sub lst half half in
   let sorted_first = merge_sort first_half in       (*recursively call merge_sort on first half*)
   let sorted_second = merge_sort second_half in     (*recursively call merge_sort on second half*)
   merge sorted_first sorted_second     (*merge the two sorted halves*)
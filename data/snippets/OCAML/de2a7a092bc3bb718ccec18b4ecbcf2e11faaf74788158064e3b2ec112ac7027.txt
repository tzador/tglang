(* This is a function that takes in a list of integers and returns the sum of all the even numbers in the list. *)

let rec sum_even (l : int list) : int =
  match l with
  | [] -> 0 (* Base case: if the list is empty, return 0 as the sum *)
  | hd :: tl ->
      let curr_sum = if hd mod 2 = 0 then hd else 0 in (* checks if the current element is even, if not, set curr_sum to 0 *)
      curr_sum + sum_even tl (* recursively calls the function with the remaining list and adds the current sum to the result *)
(* Define a function that takes in a list of integers and
   returns the sum of the list's elements*)

(* Input: list of integers
   Output: integer representing the sum of the list's elements *)

let rec sum_list = function
    | [] -> 0 (* base case: empty list returns 0 *)
    | x :: xs -> x + sum_list xs (* recursive case: add current element to sum of remaining list *)

(* Example: sum_list [1; 2; 3] returns 6 *)

let list = [1; 2; 3] (* declaring a list *)
let result = sum_list list (* calling the function with the list as an argument *)

(* Output: result = 6 *)
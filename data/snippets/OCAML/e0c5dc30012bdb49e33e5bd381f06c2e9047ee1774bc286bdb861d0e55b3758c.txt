(* This is a complex code snippet in OCAML, it initializes a matrix and performs multiple matrix operations on it. *)

(* Define function to create a matrix with given dimensions *)
let create_matrix rows cols =
  Array.init rows (fun _ -> Array.make cols 0.0)
  
(* Define function to perform matrix multiplication *)
let matrix_multiply mat1 mat2 =
  let rows1 = Array.length mat1 in
  let cols12 = Array.length mat2.(0) in
  let cols1 = Array.length mat1.(0) in
  let result = create_matrix rows1 cols12 in
  for i = 0 to rows1 - 1 do
    for j = 0 to cols12 - 1 do
      for k = 0 to cols1 - 1 do
        result.(i).(j) <- result.(i).(j) +. mat1.(i).(k) *. mat2.(k).(j)
      done;
    done;
  done;
  result
  
(* Define function to perform matrix addition *)
let matrix_add mat1 mat2 =
  let rows = Array.length mat1 in
  let cols = Array.length mat1.(0) in
  let result = create_matrix rows cols in
  for i = 0 to rows - 1 do
    for j = 0 to cols - 1 do
      result.(i).(j) <- mat1.(i).(j) +. mat2.(i).(j)
    done;
  done;
  result
  
(* Define function to perform matrix subtraction *)
let matrix_subtract mat1 mat2 =
  let rows = Array.length mat1 in
  let cols = Array.length mat1.(0) in
  let result = create_matrix rows cols in
  for i = 0 to rows - 1 do
    for j = 0 to cols - 1 do
      result.(i).(j) <- mat1.(i).(j) -. mat2.(i).(j)
    done;
  done;
  result
  
(* Initialize a 3x3 matrix *)
let matrix = create_matrix 3 3

(* Populate the matrix with values *)
matrix.(0).(0) <- 1.0;
matrix.(0).(1) <- 2.0;
matrix.(0).(2) <- 3.0;
matrix.(1).(0) <- 4.0;
matrix.(1).(1) <- 5.0;
matrix.(1).(2) <- 6.0;
matrix.(2).(0) <- 7.0;
matrix.(2).(1) <- 8.0;
matrix.(2).(2) <- 9.0;

(* Perform matrix multiplication on the matrix with itself *)
let result1 = matrix_multiply matrix matrix
(* Output: [|21.0; 27.0; 33.0|]
          [|47.0; 63.0; 79.0|]
          [|73.0; 99.0; 125.0|] *)

(* Perform matrix addition on the matrix with itself *)
let result2 = matrix_add matrix matrix
(* Output: [|2.0; 4.0; 6.0|]
          [|8.0; 10.0; 12.0|]
          [|14.0; 16.0; 18.0|] *)

(* Perform matrix subtraction on the matrix with itself *)
let result3 = matrix_subtract matrix matrix
(* Output: [|0.0; 0.0; 0.0|]
          [|0.0; 0.0; 0.0|]
          [|0.0; 0.0; 0.0|] *)
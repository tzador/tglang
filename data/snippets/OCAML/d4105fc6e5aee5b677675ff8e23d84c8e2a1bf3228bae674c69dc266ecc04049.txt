(* This is a function that takes in a list and returns the sum of all its elements *)
let rec sum_list lst = match lst with
  | [] -> 0 (* if the list is empty, return 0 *)
  | (x::xs) -> x + (sum_list xs) (* otherwise, add the first element of the list to the sum of the rest of the list *)
  
(* This is a helper function for the `merge_sort` function *)
let rec merge lst1 lst2 = match lst1, lst2 with
  | [], _ -> lst2 (* if lst1 is empty, return lst2 *)
  | _, [] -> lst1 (* if lst2 is empty, return lst1 *)
  | (x::xs), (y::ys) -> if x < y then x::(merge xs lst2) (* if the first element of lst1 is smaller, add it to the new list *)
                        else y::(merge lst1 ys) (* otherwise, add the first element of lst2 to the new list *)
                        
(* This is the `merge_sort` function that uses the `merge` helper function *)
let rec merge_sort lst = match lst with
  | [] -> [] (* if the list is empty, return an empty list *)
  | [x] -> [x] (* if the list has only 1 element, return that element *)
  | _ -> let mid = (List.length lst) / 2 in (* find the middle index of the list *)
         let left = List.sub lst 0 mid in (* split the list into two sublists at the middle index *)
         let right = List.sub lst mid (List.length lst - mid) in
         merge (merge_sort left) (merge_sort right) (* recursively call `merge_sort` on the two sublists and merge them using the `merge` function *)
  
(* This is the main function that calls the `sum_list` and `merge_sort` functions *)
let main () = 
  let sample_list = [4;9;2;5;8;1;3;6;7] in (* define a sample list *)
  let sum = sum_list sample_list in (* calculate the sum of the elements in the list *)
  let sorted_list = merge_sort sample_list in (* use `merge_sort` to sort the list in ascending order *)
  print_endline ("Sum of list: " ^ (string_of_int sum)); (* print the sum of the list *)
  print_endline ("Sorted list: " ^ (List.fold_left (fun acc x -> acc ^ " " ^ (string_of_int x)) "" sorted_list)) (* print the sorted list *)
  
(* Call the `main` function to run the program *)
let _ = main ()
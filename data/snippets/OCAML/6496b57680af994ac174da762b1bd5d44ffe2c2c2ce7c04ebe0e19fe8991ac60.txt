(* This is a code snippet in OCAML *)
(* It contains a complex function that takes in an integer and returns a list of Fibonacci numbers up to that integer *)

(* Define the function *)
let rec fibonacci_generator n =
  let rec helper x acc =
    match x with
    | 0 -> List.rev acc
    | 1 -> List.rev (1 :: acc)
    | _ -> helper (x - 1) ((List.hd acc + List.hd (List.tl acc)) :: acc)
  in
  helper n []

(* Test the function *)
let result = fibonacci_generator 10

(* Print the result *)
print_endline (string_of_int result)
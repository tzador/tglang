(* This is a function that takes in two integers and uses recursion to find the greatest common divisor (GCD) between them *)
let rec gcd x y =
  match y with
  | 0 -> x (* If y is 0, then return x as the GCD *)
  | _ -> gcd y (x mod y) (* Otherwise, call the function again with y as the new x value and the remainder of x divided by y as the new y value *)
;;
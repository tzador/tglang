(* An example of a complex code snippet in OCAML that implements a function to check if a list of integers contains at least one prime number *)

(* Function to check if a given number is prime *)
let is_prime n =
    let rec check_prime i =
        i * i > n || (n mod i <> 0 && check_prime (i + 1))
    in
    n <> 1 && check_prime 2

(* Function to check if a list contains at least one prime number *)
let rec contains_prime lst =
    match lst with
    | [] -> false
    | h::t -> if is_prime h then true else contains_prime t

(* Example usage *)
let lst = [4; 6; 8; 9; 10] (* List of integers to check *)
let result = contains_prime lst (* Call function to check if list contains at least one prime number *)
print_string "List contains a prime number: " (* Print result *)
if result then print_string "true\n" else print_string "false\n"
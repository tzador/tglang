type 'a queue = 'a list * 'a list

exception Empty

let empty_queue = ([], [])

let enqueue x = function
    | [], [] -> ([x], [])
    | back, front -> (x::back, front)

let rec reorder = function
    | [], [] -> ([], [])
    | [x], front -> ([], List.rev (x::front))
    | x::back, front -> let new_front = x::front in reorder (back, new_front)

let dequeue = function
    | [], [] -> raise Empty
    | x::back, front -> let new_back = reorder (back, front) in (x, new_back)

let peek = function
    | [], [] -> raise Empty
    | x::back, _ -> x
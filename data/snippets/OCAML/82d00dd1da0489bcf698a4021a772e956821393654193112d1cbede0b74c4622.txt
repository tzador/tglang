(*This module contains a function that checks if a given list of integers is sorted*)

module CheckSortedList =

    (*The `List` module in OCaml provides functions for manipulating lists*)
    (*This function takes in a list of integers and returns a boolean value*)
    let is_sorted lst =
    
    (*A helper function that checks if the first element is smaller than the second element*)
    (*Takes in two integers and returns a boolean value*)
    let rec check_first_two a b = match a, b with
        | hd::tl ->
            if hd > tl then
                false
            else
                check_first_two tl
        | _ -> true
    
    (*This pattern matching function checks if the list is empty or has one element*)
    (*If so, it is automatically considered as sorted*)
    match lst with
    | [] | [_] -> true
    | hd::tl ->
        if check_first_two hd tl then
            is_sorted tl
        else
            false
    
    (*Example usage*)
    let sorted_list = [1; 2; 3; 4; 5]
    let unsorted_list = [3; 1; 5; 2; 4]
    is_sorted sorted_list (*Output: true*)
    is_sorted unsorted_list (*Output: false*)
    
(*End of CheckSortedList module*)
(* Define a function that takes in a list of integers and returns the sum of all even numbers in the list *)
let sum_even lst = 
  (* Helper function to check if a number is even *)
  let is_even n = n mod 2 = 0 in 
  (* Recursive function that iterates through the list and adds even numbers to the sum *)
  let rec helper n sum = 
    match n with 
    | [] -> sum (* Base case: empty list, return the sum *)
    | hd::tl -> 
      if is_even hd then (* If the head of the list is even *)
        helper tl (sum + hd) (* Add the head to the sum and recursively call with the tail *)
      else
        helper tl sum (* If the head is odd, don't add it to the sum and recursively call with the tail *)
  in helper lst 0 (* Call the helper function with the list and an initial sum of 0 *)
;;
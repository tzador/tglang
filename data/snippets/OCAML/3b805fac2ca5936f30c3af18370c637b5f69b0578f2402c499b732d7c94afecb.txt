(* This is a function that recursively computes the Fibonacci sequence up to a given number
   Input:
      - n : the number up to which the Fibonacci sequence is computed
   Output:
      - a list of the Fibonacci numbers up to n
*)
let rec fibonacci_seq n =
    match n with
        | 0 -> [0]
        | 1 -> [0; 1]
        | _ -> 
            let sequence = fibonacci_seq (n-1) in (* recursively compute the previous sequence *)
            let last_two = List.nth sequence (List.length sequence - 1), List.nth sequence (List.length sequence - 2) in (* get the last two numbers in the sequence *)
            let next = (fst last_two) + (snd last_two) in (* compute the next number in the sequence by adding the last two *)
            sequence @ [next] (* append the next number to the sequence *)
(* This code snippet uses functions and pattern matching to implement a basic calculator *)

(* Define a type to represent mathematical operations with two operands *)
type math_operation = 
  | Add of int * int
  | Subtract of int * int
  | Multiply of int * int
  | Divide of int * int

(* Define a function to evaluate the given operation and return the result *)
let eval_op op = 
  match op with
  | Add (x, y) -> x + y
  | Subtract (x, y) -> x - y
  | Multiply (x, y) -> x * y
  | Divide (x, y) -> x / y

(* Prompt user for input and store as a string *)
let input = read_line()

(* Split the input string by spaces and store in a list *)
let input_list = String.split_on_char ' ' input

(* Convert operands from string to int and store in variables *)
let operand1 = int_of_string (List.nth input_list 0)
let operand2 = int_of_string (List.nth input_list 2)

(* Use pattern matching to determine the operation based on the second string in the input list *)
let operation = 
  match (List.nth input_list 1) with
  | "+" -> Add (operand1, operand2)
  | "-" -> Subtract (operand1, operand2)
  | "*" -> Multiply (operand1, operand2)
  | "/" -> Divide (operand1, operand2)
  | _ -> failwith "Invalid operation"

(* Call eval_op function with the operation and print the result *)
print_int (eval_op operation)

(* Example input: "5 + 3" *)
(* Output: 8 *)
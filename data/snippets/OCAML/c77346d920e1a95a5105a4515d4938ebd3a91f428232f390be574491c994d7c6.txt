let rec quicksort list = match list with
  | [] -> []          (*Base case if list is empty*)
  | x :: xs -> (*Head element is chosen as pivot, tail as the rest of list*)
    let less, greater = List.partition (fun y -> y < x) xs in (*Seperate list into elements less than, and greater than x*)
    quicksort less @ [x] @ quicksort greater (*Quicksort is recursively called on the parts*)
(* An example of a function in OCAML that checks if a given list of integers is a palindrome *)
(* Function takes in a list of integers and returns a boolean value *)
let rec is_palindrome list = 
  match list with
  | [] -> true (* if the list is empty, it is a palindrome *)
  | [x] -> true (* if the list has only one element, it is a palindrome *)
  | hd :: tl -> if hd = List.hd (List.rev tl) then is_palindrome (List.tl tl) else false;; (* recursively checks if the first and last elements of the list are equal, if not, it is not a palindrome *)

(* Example usage *)
is_palindrome [1;2;3;2;1];; (* Output: true *)
is_palindrome [1;2;3;4];; (* Output: false *)
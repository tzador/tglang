(* This is a function that takes in a list of integers and returns a new list with only the even numbers *)
let rec filter_evens lst =
  match lst with
  | [] -> [] (* If the list is empty, return empty list *)
  | h::t -> (* Otherwise, grab the head and tail of the list *)
    if h % 2 = 0 then h :: filter_evens t (* Check if the head is even, if so, add it to the new list and recursively call the function on the tail of the list *)
    else filter_evens t (* If the head is not even, skip it and recursively call the function on the tail of the list *)
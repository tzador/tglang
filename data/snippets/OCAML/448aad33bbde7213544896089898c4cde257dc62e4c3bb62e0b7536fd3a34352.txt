(* This is a type definition for a binary tree structure *)
type 'a binary_tree =
  | Leaf of 'a
  | Node of 'a binary_tree * 'a * 'a binary_tree


(* This function traverses a binary tree in in-order fashion and returns the list of values *)
let in_order_traversal tree =
  let rec helper node acc =
    match node with
    | Leaf v -> v :: acc
    | Node (left, v, right) -> helper left (v :: (helper right acc))
  helper tree []
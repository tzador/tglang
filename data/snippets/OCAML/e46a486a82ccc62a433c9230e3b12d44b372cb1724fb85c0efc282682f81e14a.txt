(* This is a comment in OCAML *)
(* Define a function called "multiply" that takes in two integers "x" and "y" and returns their product *)
let multiply x y =
  x * y;;
  
(* Define a recursive function called "factorial" that calculates the factorial of a given integer "n" *)
let rec factorial n =
  if n <= 1 then 1
  else n * factorial(n-1);;
  
(* Define a type "shape" with two possible constructors: "Circle" which takes in a float as the radius, and "Rectangle" which takes in two float values for length and width *)
type shape =
  Circle of float
| Rectangle of float * float;;
  
(* Define a function "area" that takes in a shape and calculates its area *)
let area = function
  | Circle r -> 3.14 *. r *. r
  | Rectangle (l, w) -> l *. w;;
  
(* Define a recursive function "fibonacci" that calculates the nth number in the Fibonacci sequence *)
let rec fibonacci n =
  if n <= 1 then n
  else fibonacci (n-1) + fibonacci (n-2);;
  
(* Define a function "print_hello" that prints out "Hello" *)
let print_hello () =
  print_string "Hello";;
  
(* Define a module "Math" that contains a function "square" which takes in an integer "x" and returns its square *)
module Math = struct
  let square x = x * x
end;;
let rec fibonacci n = (* defining a recursive function *)
  match n with (* matching the value of n *)
  | 0 -> 0 (* if n is 0, return 0 *)
  | 1 -> 1 (* if n is 1, return 1 *)
  | _ -> fibonacci (n-1) + fibonacci (n-2) (* for any other value of n, call the recursive function with n-1 and n-2 and add the results *)

let () = (* defining the main function *)
  let num = 8 in (* setting the input value *)
  let result = fibonacci num in (* calling the recursive function with input value *)
  Printf.printf "The %dth Fibonacci number is: %d\n" num result (* printing the result *)

(* Output: The 8th Fibonacci number is: 21 *)
(* This function merges two sorted lists into one sorted list *)
let rec merge_lists list1 list2 =
  match list1, list2 with
  | [], list2 -> list2
  | list1, [] -> list1
  | head1::tail1, head2::tail2 ->
      if head1 < head2 then head1::(merge_lists tail1 list2)
      else head2::(merge_lists list1 tail2)

(* This function recursively sorts a list using merge sort algorithm *)
let rec merge_sort list =
  match list with
  | [] | [_] -> list
  | _ ->
      let rec split list1 list2 =
        match list1, list2 with
        | x::xs, y::y'::ys -> split (x::list2) xs ys
        | list1, list2 -> (List.rev list1), list2
      in
      let list1, list2 = split [] list in
      merge_lists (merge_sort list1) (merge_sort list2)
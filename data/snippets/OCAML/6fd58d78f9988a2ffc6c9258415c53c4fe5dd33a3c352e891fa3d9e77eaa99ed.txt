(* This is a function that takes in a list of integers and returns a list of the square of each integer. *)
let square_list lst =
  let rec helper acc = function
    | [] -> List.rev acc
    | h :: t -> helper ((h * h) :: acc) t in
  helper [] lst;;

(* This is a function that takes in a string and returns the string reversed. *)
let reverse_string str =
  let len = String.length str in
  let rec helper acc index =
    if index = len
    then acc
    else helper (acc ^ (String.sub str index 1)) (index + 1) in
  helper "" 0;;

(* This is a function that takes in a list of strings and a function, and returns a new list with the function applied to each string. *)
let map f lst =
  let rec helper acc = function
    | [] -> List.rev acc
    | h :: t -> helper ((f h) :: acc) t in
  helper [] lst;;

(* This is a function that takes in a list of integers and returns the sum of all even numbers in that list. *)
let sum_even_numbers lst =
  let rec helper acc = function
    | [] -> acc
    | h :: t -> if (h mod 2 = 0) then helper (acc + h) t else helper acc t in
  helper 0 lst;;
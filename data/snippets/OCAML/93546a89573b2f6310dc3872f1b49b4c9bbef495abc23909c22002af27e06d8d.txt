def partition (pred, as) = 
    let rec iter (ys, zs) = 
        match zs with 
        | | [] -> List.rev ys, [] 
        | z :: zs' -> if pred z then iter (z :: ys, zs') else iter (ys, z :: zs') 
    in
    iter ([], as)

let lessThanFive a = if a < 5 then true else false
let sampleList = [1;2;3;4;5;6;7;8;9]

let partitionedList, filterdList = partition (lessThanFive, sampleList)

Format.printf "Partitioned List: %A \n Filtered List: %A" partitionedList filterdList
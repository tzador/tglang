(** Represents a binary tree with nodes containing integers. *)
type tree =
  | Node of int * tree * tree
  | Leaf

(** Returns the total number of nodes in the given tree. *)
let rec tree_size = function
  | Leaf -> 0
  | Node(_, left, right) -> 1 + tree_size left + tree_size right

(** Returns the sum of all the elements in the given tree. *)
let rec tree_sum = function
  | Leaf -> 0
  | Node(element, left, right) -> element + tree_sum left + tree_sum right

(** Returns the height of the given tree. *)
let rec tree_height = function
  | Leaf -> 0
  | Node(_, left, right) -> 1 + max (tree_height left) (tree_height right)
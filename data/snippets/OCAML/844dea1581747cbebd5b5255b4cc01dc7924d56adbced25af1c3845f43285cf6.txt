(* This is a function that takes in a list of integers and returns a new list that only contains even numbers *)
let filter_even_numbers lst =
    let rec helper lst acc =
        match lst with
        | [] -> acc (* If the list is empty, return the accumulated list *)
        | hd::tl ->
            if hd mod 2 = 0 then (* Check if the head of the list is divisible by 2 *)
                helper tl (acc@[hd]) (* If yes, add it to the accumulated list *)
            else (* If the head is not even, skip it *)
                helper tl acc (* and continue to the next element in the list *)
    in helper lst []; (* Call the helper function with an empty list as the accumulator *)

(* Example usage *)
let lst = [1; 2; 3; 4; 5; 6]
let even_lst = filter_even_numbers lst (* Call the function with a test list *)
(* Result: even_lst = [2; 4; 6] *)
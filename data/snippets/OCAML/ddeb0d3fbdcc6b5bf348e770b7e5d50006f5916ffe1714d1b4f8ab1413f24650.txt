(* This is a comment in OCAML *)

(* Define a recursive function factorial that takes in an integer x and returns the factorial of x *)
let rec factorial x =
  if x <= 1 then
    1
  else
    x * factorial (x - 1)

(* Define a function print_factorial that takes in an integer n and prints the factorial of n *)
let print_factorial n =
  let result = factorial n in
  print_int result;
  print_endline ""

(* Call the function with an input of 5 and print the result *)
print_factorial 5
(* Function to calculate the fibonacci sequence up to a given number *)
let rec fibonacci n =
    if n < 2 then n
    else fibonacci (n-1) + fibonacci (n-2)

(* Function to print the fibonacci sequence up to a given number *)
let print_fibonacci n =
    (* Helper function to generate a list of fibonacci numbers *)
    let rec generate_fib nums n =
        match nums with
        | [] -> generate_fib [fibonacci n] (n+1)
        | hd::tl -> if hd > n then nums
                    else generate_fib (hd::nums) (n+1)
    
    (* Print the fibonacci sequence up to n *)
    let fib_list = generate_fib [] n in
    List.iter (fun x -> Printf.printf "%d " x) fib_list

(* Testing the function *)
let () =
    print_fibonacci 10 (* Output: 0 1 1 2 3 5 8 13 21 34 *)
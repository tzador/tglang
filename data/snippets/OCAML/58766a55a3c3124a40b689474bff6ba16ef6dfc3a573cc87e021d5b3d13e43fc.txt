(* This function divides two numbers and returns the result *)

let rec divide x y =
    match (x, y) with
    | (_, 0) -> invalid_arg "Cannot divide by zero" (* checks for division by zero *)
    | (0, _) -> 0 (* handles the case where numerator is zero *)
    | _ -> let q = divide (x - y) y in (* handles the general case *)
            1 + q (* adds 1 to the quotient *)
        
(* Sample input and output *)
divide 10 2;;
- : int = 5 (* Output: 5, since 10 divided by 2 is 5 *)
divide 3 0;;
Exception: Invalid_argument "Cannot divide by zero". (* Output: An exception is raised since we cannot divide by zero *)
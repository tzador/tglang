(* This code snippet implements a function that checks if a given number is prime or not in OCaml *)

let is_prime n =                           (* Declare a function that takes in an integer n *)
  let rec check_divisors x =                (* Declare a recursive helper function that checks divisors from 2 to n-1 *)
    if x = 1 then true                      (* If divisor reaches 1, number is prime *)
    else if n mod x = 0 then false          (* If n is divisible by x, number is not prime *)
    else check_divisors (x-1)               (* Otherwise, recursively check next divisor *)
  in
  check_divisors (n-1)                      (* Call helper function with starting divisor of n-1 *) 
  (* This function returns true if number is prime, false if not *)
  
(* This code snippet can be used to check if a given number is prime by calling is_prime n *)
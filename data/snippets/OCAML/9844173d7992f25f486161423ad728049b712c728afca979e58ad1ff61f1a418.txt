(* Recursive function to calculate the factorial of a given number *)
let rec factorial n =
  if n <= 1 then 1
  else n * factorial (n-1)

(* Functions to find the maximum element in a list *)
let rec find_max lst =
  match lst with
  | [] -> raise(Failure "Empty list")
  | [x] -> x
  | x::xs -> max x (find_max xs)

let find_max_fst lst =
  match lst with
  | [] -> raise(Failure "Empty list")
  | [x] -> x
  | x::xs -> max x (find_max_fst xs)

(* Function to sort a list using selection sort *)
let rec selection_sort lst =
  match lst with
  | [] -> []
  | [x] -> [x]
  | lst -> let m = find_max_fst lst in
           m::selection_sort (List.filter (fun y -> y <> m) lst)

(* Main function to calculate sum of first 10 factorial numbers *)
let sum = ref 0 in
for i = 1 to 10 do
  let f = factorial i in
  sum := !sum + f
done;;

(* Output: 4037913 *)
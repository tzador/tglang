(* A function that calculates the maximum of two integers
 * Inputs: two integer values
 * Output: the maximum of the two inputs *)
 
let max (x : int) (y : int) : int =
  if x > y then x else y
  (* Calculates the maximum of the two inputs *)
;;

(* A function that calculates the factorial of a given integer
 * Input: an integer value
 * Output: the factorial of the input *)
 
let rec factorial (x : int) : int =
  if x < 1 then 1 else x * factorial (x - 1)
  (* Calculates the factorial of the input by recursively multiplying
   * all numbers from 1 to the input *)
;;

(* A function that checks if a string contains a specific character
 * Inputs: a string and a character
 * Output: a boolean value based on if the string contains the character *)
 
let contains (str : string) (char : char) : bool =
  let rec loop (index : int) (acc : bool) : bool =
    match acc with
    | true -> true
    | false ->
      if index = String.length str then false
      else if str.[index] = char then true
      else loop (index + 1) acc
  in loop 0 false
  (* Checks each character in the string and returns true if the
   * specified character is found, or false otherwise *)
  
  ;; (* Ends the function definition *)
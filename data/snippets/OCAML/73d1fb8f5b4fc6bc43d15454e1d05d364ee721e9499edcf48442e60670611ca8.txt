(* This is a function that finds the factorial of a given number using tail recursion *)

(* Define the function 'tail_rec_fact' with parameters 'n' for number and 'acc' for accumulator *)
let rec tail_rec_fact n acc =
  (* If the number is less than or equal to 0, return the accumulator *)
  if n <= 0 then acc
  (* If the number is greater than 0, call the function again with n-1 and n*acc as parameters *)
  else tail_rec_fact (n - 1) (n * acc)

(* Define the function 'factorial' with parameter 'n' for number *)
let factorial n =
  (* Call the tail recursion function with the number and 1 as initial accumulator *)
  tail_rec_fact n 1

(* Print the factorial of 5 *)
let result = factorial 5
print_endline (string_of_int result)
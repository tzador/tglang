(* Function that calculates the nth Fibonacci number using recursion and memoization *)

(* Memoization table to store previously calculated values *)
let fib_table = Hashtbl.create 100;;

let rec fibonacci n = 
  match n with
  | 0 -> 0
  | 1 -> 1
  | _ ->
    (* Check if the value has already been calculated and stored *)
    if Hashtbl.mem fib_table n then
      Hashtbl.find fib_table n
    else
      (* Calculate new value recursively and add it to the table *)
      let result = fibonacci (n-1) + fibonacci (n-2) in
      Hashtbl.add fib_table n result;
      result
;;

(* Print the first 30 Fibonacci numbers *)
for i = 0 to 30 do
  Printf.printf "Fibonacci %d: %d\n" i (fibonacci i)
done
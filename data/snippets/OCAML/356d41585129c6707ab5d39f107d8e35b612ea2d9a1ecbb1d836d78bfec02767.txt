(* Function that checks if a list is in ascending order *)
let rec is_ascending (lst : int list) : bool =
  match lst with
  | [] -> true (* Empty list is always ascending *)
  | [_] -> true (* Single element list is always ascending *)
  | x :: y :: rest -> (* Check if first two elements are in ascending order *)
      if x <= y then is_ascending (y :: rest) (* If they are, recursively check the rest of the list *)
      else false (* If not, the list is not ascending *)
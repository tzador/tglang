(* Creates a recursive function to calculate the n-th Fibonacci number *)
let rec fib n =
  match n with (* Uses pattern matching for different cases *)
  | 0 -> 0 (* Base case, returns 0 for n = 0 *)
  | 1 -> 1 (* Base case, returns 1 for n = 1 *)
  | _ -> fib(n-1) + fib(n-2) (* Recursive case, calls the function for n-1 and n-2 and adds the results *)
  in
  print_endline(string_of_int(fib 10)) (* Prints the Fibonacci number at index 10 by converting it to a string *)
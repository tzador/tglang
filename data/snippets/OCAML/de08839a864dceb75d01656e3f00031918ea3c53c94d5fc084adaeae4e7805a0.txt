(* This function recursively sums the values in a given list  *)
let rec sum_list lst =
  match lst with
  | [] -> 0 (* Base case: empty list returns 0 *)
  | hd :: tl -> hd + sum_list tl (* Adds first element to sum of remaining list *)

(* Example usage *)
let list = [1; 2; 3; 4; 5]
let sum = sum_list list
(* Expected output: sum = 15 *)
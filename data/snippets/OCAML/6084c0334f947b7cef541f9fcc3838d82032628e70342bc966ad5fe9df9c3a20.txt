(* This program takes in a list of integers and returns a new list with only the odd numbers *)
let rec filter_list list =
    match list with
    | [] -> [] (* base case: if list is empty, return empty list *)
    | head::tail when head mod 2 = 1 -> head :: filter_list tail (* if head is odd, add it to new list *)
    | head::tail -> filter_list tail (* if head is even, skip it and continue with rest of list *)

let input_list = [1; 2; 3; 4; 5; 6; 7; 8; 9; 10] (* example input list *)
let output_list = filter_list input_list (* apply function to input list *)
(* output_list will be [1; 3; 5; 7; 9], as those are the odd numbers in the input list *)
(* This is a function that implements the binary search algorithm in OCaml *)
(* Arguments: arr - an integer array, target - the element to be searched for *)
(* Returns: the index of the target element in the array, or -1 if not found *)
let binary_search arr target =
  let rec search arr target low high =
    if low > high then -1 (* base case: element not found *)
    else
      let mid = (low + high) / 2 in (* find midpoint *)
      if arr.(mid) = target then mid (* found the element, return index *)
      else if arr.(mid) < target then (* if target is larger than midpoint *)
        search arr target (mid + 1) high (* search the right half *)
      else (* target is smaller than midpoint *)
        search arr target low (mid - 1) (* search the left half *)
  in
  search arr target 0 (Array.length arr - 1) (* start searching from first and last element *)
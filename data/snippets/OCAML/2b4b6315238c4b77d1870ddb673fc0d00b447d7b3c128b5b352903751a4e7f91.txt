(* This is a function that takes in a list of integers and checks if each element is divisible by 3 *)
let rec check_divisible_by_three (lst: int list) : bool = 
  (* Base case: If the list is empty, return true *)
  match lst with
  | [] -> true
  (* Recursive case: Check if the head of the list is divisible by 3.
     If it is, call the function again with the tail of the list.
     If not, return false. *)
  | head :: tail -> if head mod 3 = 0 then check_divisible_by_three tail else false
(** A helper function to calculate the factorial of a given number.
    This function uses tail recursion to avoid stack overflow.
    @param n The number used to calculate the factorial.
    @param acc The accumulator used in tail recursion.
    @return The factorial of the given number. *)
let rec factorial_helper n acc =
    if n <= 1 then acc
    else factorial_helper (n - 1) (n * acc)

(** Calculates the factorial of a given number using tail recursion.
    @param n The number used to calculate the factorial.
    @return The factorial of the given number. *)
let factorial n =
    factorial_helper n 1

(** A helper function to calculate the Fibonacci number of a given index.
    This function uses tail recursion to avoid stack overflow.
    @param n The index used to calculate the Fibonacci number.
    @param acc The accumulator used in tail recursion.
    @param prev The previous Fibonacci number.
    @return The Fibonacci number of the given index. *)
let rec fibonacci_helper n acc prev =
    if n <= 1 then prev
    else fibonacci_helper (n - 1) (acc + prev) acc

(** Calculates the Fibonacci number of a given index using tail recursion.
    @param n The index used to calculate the Fibonacci number.
    @return The Fibonacci number of the given index. *)
let fibonacci n =
    fibonacci_helper n 1 0

(** A function to calculate the area of a triangle using Heron's formula.
    @param a The length of side a of the triangle.
    @param b The length of side b of the triangle.
    @param c The length of side c of the triangle.
    @return The area of the triangle. *)
let triangle_area a b c =
    let s = (a + b + c) /. 2.0 in
    sqrt (s *. (s -. a) *. (s -. b) *. (s -. c))

(** A function to calculate the factorial, Fibonacci number, and area of a triangle
    and print them to the console.
    @param n The number used for the factorial and Fibonacci calculations.
    @param a The length of side a for the triangle area calculation.
    @param b The length of side b for the triangle area calculation.
    @param c The length of side c for the triangle area calculation.
    @return The factorial, Fibonacci number, and triangle area printed to console. *)
let compute_and_print n a b c =
    let fac = factorial n in
    let fib = fibonacci n in
    let area = triangle_area a b c in
    print_endline ("Factorial of " ^ string_of_int n ^ " = " ^ string_of_int fac);
    print_endline ("Fibonacci number at index " ^ string_of_int n ^ " = " ^ string_of_int fib);
    print_endline ("Area of triangle with sides " ^ string_of_float a ^ ", " ^ string_of_float b ^ ", " ^ string_of_float c ^ " = " ^ string_of_float area)

(** Example call to demonstrate functionality. *)
let () =
    compute_and_print 5 3.0 4.0 5.0
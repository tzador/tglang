(* Define a recursive function that calculates the factorial of a given integer *)

let rec factorial n =
  if n = 0 then
    1
  else
    n * factorial(n-1)

(* Define a function that takes in an integer and a list and checks if the integer is in the list *)

let rec check_list n l =
  match l with
  |[] -> false
  |head::tail -> if head = n then true else check_list n tail

(* Define a function that merges two lists in alternating order *)

let rec merge_lists l1 l2 =
  match l1, l2 with
  |[], [] -> []
  |[], list -> list
  |list, [] -> list
  |head1::tail1, head2::tail2 -> head1::head2::merge_lists tail1 tail2

(* Define a function that takes in a list and returns the average of its elements *)
(* Uses a helper function to calculate the sum of the list *)

let list_average lst =
  let rec list_sum lst =
    match lst with
    |[] -> 0
    |head::tail -> head + list_sum tail
  in
  (list_sum lst) / (List.length lst)
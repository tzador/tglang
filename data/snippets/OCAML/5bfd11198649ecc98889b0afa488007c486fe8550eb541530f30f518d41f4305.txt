(* This is a function that takes in a list of integers and returns the sum of all the even numbers in the list. *)

let rec sum_even (list : int list) : int =
  match list with
  | [] -> 0 (* Base case: empty list returns 0 *)
  | x::xs when x mod 2 = 0 -> x + sum_even xs (* If first element is even, add it to the sum of the rest of the list *)
  | _::xs -> sum_even xs (* If first element is odd, discard it and continue with the rest of the list *)

(* Example usage: *)

sum_even [1; 2; 3; 4; 5] (* Returns 6 because 2 + 4 = 6 *)
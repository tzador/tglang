let rec fib n =
  match n with
  | 0 -> 0
  | 1 -> 1
  | _ -> fib (n - 1) + fib (n - 2)

(* This function uses recursion to calculate the nth Fibonacci number. *)

let rec is_prime n =
  match n with
  | 1 -> false
  | 2 -> true
  | n ->
      let rec check_divisors i =
        if i > (int_of_float (sqrt (float_of_int n))) then
          true
        else if (n mod i) = 0 then
          false
        else
          check_divisors (i + 2)
      in
      check_divisors 3

(* This function uses recursion and checks all odd numbers up to the square root of n to determine if n is prime. *)
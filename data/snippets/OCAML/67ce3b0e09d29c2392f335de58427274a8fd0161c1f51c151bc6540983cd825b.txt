(* Define a function that takes in a list of integers and returns the average *)
let average (int_list: int list) : float = 
  (* Define a recursive helper function for calculating sum of list elements *)
  let rec sum_helper (lst: int list) (total: int) : int = 
    (* Check for empty list and return total when list is empty *)
    match lst with 
      | [] -> total
      (* Add current element to total and continue recursively *)
      | hd::tl -> sum_helper tl (total + hd)
  (* Calculate sum of list elements using helper function *)
  let total = sum_helper int_list 0
  (* Calculate length of list using built-in function *)
  let length = List.length int_list
  (* Divide the total by length and convert to float for average *)
  float_of_int total /. float_of_int length

(* Example call to function *)
average [1; 2; 3; 4; 5] (* returns 3.0 as float *)
(* This function takes in a list of integers and returns the sum of the even numbers *)
let rec sum_even (nums : int list) : int = match nums with
  | [] -> 0 (* base case - if list is empty, return 0 *)
  | x::xs -> if x mod 2 = 0 then x + sum_even xs (* if current number is even, add it to the sum and recursively call function on rest of list *)
              else sum_even xs (* if current number is odd, skip and recursively call function on rest of list *)
  
let example_list = [1;2;3;4;5;6;7;8;9] (* sample list *)
let result = sum_even example_list (* calling the function on example_list *)
(* result should be 20, since the sum of the even numbers in the list is 2 + 4 + 6 + 8 = 20 *)
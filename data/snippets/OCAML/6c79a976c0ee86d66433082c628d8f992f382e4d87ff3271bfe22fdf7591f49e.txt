(** 
 * This is a complex function in OCAML that takes in a list of integers
 * and returns the sum of all the even numbers in the list. 
 * @param nums: list of integers
 * @return: the sum of all the even numbers in the list
 *)
let rec sum_even_nums (nums : int list) : int =
    match nums with
    | [] -> 0 (* base case: empty list *)
    | h :: t -> 
      if h mod 2 = 0 then (* if current number is even *)
        h + sum_even_nums t (* add it to the sum of even numbers in remaining list *)
      else
        sum_even_nums t (* if not even, skip it and continue to next item in list *)
    ;;
â€‹
(* Example usage *)
let nums = [1; 2; 3; 4; 5; 6; 7; 8; 9; 10];; (* list containing numbers 1 through 10 *)
print_int (sum_even_nums nums);; (* should print 30 as output *)
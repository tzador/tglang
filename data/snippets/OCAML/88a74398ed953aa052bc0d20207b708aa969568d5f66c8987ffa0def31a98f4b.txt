(*function to recursively merge sort a list of integers in descending order*)

(*merge function that merges two sorted lists*)
let rec merge l1 l2 =
  match l1, l2 with
  | [], ys | xs, [] -> xs @ ys
  | x :: xs, y :: ys ->
      if x >= y then x :: merge xs l2
      else y :: merge l1 ys

(*define the merge sort function*)
let rec merge_sort = function
  | [] -> []
  | [x] -> [x]
  | list ->
      let mid = List.length list / 2 in
      let left = List.sub list 0 mid in
      let right = List.sub list mid (List.length list - mid) in
      merge (merge_sort left) (merge_sort right)

(*example list to be sorted*)
let unsorted_list = [9; 3; 1; 5; 2; 8; 4; 7; 6]

(*sort the list using the merge_sort function*)
merge_sort unsorted_list
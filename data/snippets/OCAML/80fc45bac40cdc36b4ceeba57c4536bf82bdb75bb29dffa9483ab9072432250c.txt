(* This is a function that takes in a list of integers and returns the product of all the odd numbers in the list. *)

let rec product_of_odd_numbers (lst : int list) : int =
  match lst with
  | [] -> 1 (* Base case: if the list is empty, the product is 1 *)
  | x :: xs -> if x mod 2 = 1 then x * product_of_odd_numbers xs else product_of_odd_numbers xs

(* Example input and output: *)

product_of_odd_numbers [1; 2; 3; 4; 5] (* Output: 15 *)
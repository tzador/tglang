(* Define a function that takes in two integers and returns their sum *)
  let add x y =
    x + y;;

  (* Define a recursive function that calculates the factorial of a number *)
  let rec factorial n =
    if n = 0 then 1 (* Base case *)
    else n * factorial (n-1);; (* Recursive case *)

  (* Define a higher-order function that takes in a function and applies it twice *)
  let apply_twice f x =
    f (f x);;

  (* Define a record type representing a student's information *)
  type student_info = {
    name: string;
    major: string;
    gpa: float;
    year: int;
  };;

  (* Create a list of students using the record type *)
  let students = [
    {name = "John Smith"; major = "Computer Science"; gpa = 3.8; year = 3};
    {name = "Jane Doe"; major = "Biology"; gpa = 3.5; year = 2};
    {name = "Alex Johnson"; major = "Economics"; gpa = 3.2; year = 4}
  ];;

  (* Define a function that finds the average gpa of a list of students *)
  let calculate_average_gpa students =
    let sum = List.fold_left (fun acc x -> acc +. x.gpa) 0.0 students in
    let count = List.length students in
    sum /. float_of_int count;;

  (* Use pattern matching to define a function that prints a different message depending on a student's major *)
  let print_major student =
    match student.major with
    | "Computer Science" -> "This student is a computer science major."
    | "Biology" -> "This student is a biology major."
    | "Economics" -> "This student is an economics major."
    | _ -> "This student's major is not recognized.";;  

  (* Define a module with helper functions for working with strings *)
  module StringUtils = struct
    let rec count_vowels str =
      match str with
      | "" -> 0
      | s -> (if String.contains "aeiou" (String.get s 0) then 1 else 0) + count_vowels (String.sub s 1 (String.length s - 1))

    let reverse str =
      let len = String.length str in
      let result_str = String.create len in
      for i = 0 to len - 1 do
        String.set result_str (len - 1 - i) (String.get str i)
      done;
      result_str
  end;;
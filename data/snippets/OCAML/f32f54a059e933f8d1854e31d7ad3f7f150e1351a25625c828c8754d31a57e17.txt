(* This is a function that takes in a list of integers and returns the sum of all even numbers in the list *)
let rec sum_even_numbers (lst : int list) : int =
  match lst with
  | [] -> 0 (* Base case: return 0 if the list is empty *)
  | h :: t -> if h mod 2 = 0 then h + sum_even_numbers t (* If the current number is even, add it to the sum and move on to the next number in the list *)
              else sum_even_numbers t (* If the current number is odd, move on to the next number without adding anything to the sum *)
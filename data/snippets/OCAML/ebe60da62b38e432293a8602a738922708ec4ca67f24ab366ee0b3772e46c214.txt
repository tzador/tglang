(* A function for merging two sorted lists in ascending order *) 

let rec merge l1 l2 = match l1, l2 with
  | [], [] -> []
  | [], l -> l
  | l, [] -> l
  | h1::t1, h2::t2 -> 
    if h1 <= h2 then h1 :: merge t1 l2 (* add the head of the first list *)
    else h2 :: merge l1 t2 (* add the head of the second list *)

(* A function for merging multiple sorted lists in ascending order *)

let rec merge_lists = function
  | [] -> []
  | [l] -> l (* return single list *)
  | l1::l2::ls -> merge (merge l1 l2) (merge_lists ls) (* merge first two lists, then merge with the remaining lists in the list *) 

(* Examples *)
let l1 = [1;3;5;7;9]
let l2 = [2;4;6;8;10]
let l3 = [11;13;15;17;19]
let l4 = [12;14;16;18]

let sorted_list = merge_lists [l1;l2;l3;l4] (* returns [1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19]*)
(** Variable Module **)

(* Define a module for handling variables *)
module Var : sig
  (* Type for variables, which is an integer *)
  type var

  (* Function for creating a new variable *)
  val create : unit -> var

  (* Function for checking if a variable is equal to another *)
  val equal : var -> var -> bool

  (* Function for converting a variable to a string representation *)
  val to_string : var -> string
end = struct
  (* Implementation of the module *)
  type var = int

  (* Counter to keep track of the number of variables created *)
  let count = ref 0

  (* Function for creating a new variable, increments the counter *)
  let create () = 
    let new_var = !count in
    count := !count + 1;
    new_var

  (* Function for checking if two variables are equal, simply compares their values *)
  let equal v1 v2 = v1 = v2

  (* Function for converting a variable to a string, adds a "v" prefix *)
  let to_string v = "v" ^ (string_of_int v)
end
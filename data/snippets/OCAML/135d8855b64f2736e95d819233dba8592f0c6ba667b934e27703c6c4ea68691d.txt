(** Types **)

(* Define a record type *)
type employee = {
  name: string; (* The employee's name *)
  age: int; (* The employee's age *)
  position: string; (* The employee's job position *)
  salary: float; (* The employee's salary *)
  department: string; (* The employee's department *)
  vacation_days: int; (* The employee's remaining vacation days *)
}

(* Define an algebraic data type *)
type shape =
  | Rectangle of int * int (* width and height of rectangle *)
  | Square of int (* side length of square *)
  | Circle of float (* radius of circle *)

(* Define a polymorphic variant type *)
type vehicle =
  | Car of string (* brand of car *)
  | Truck of string (* brand of truck *)
  | Motorcycle of string (* brand of motorcycle *)
  | Bicycle of string (* brand of bicycle *)
  | Electric of string (* brand of electric vehicle *)
  | Other of string (* other type of vehicle *)

(** Functions **)

(* Update an employee's age by one year *)
let update_age (employee: employee) : employee =
  {employee with age = employee.age + 1}

(* Calculate the area of a shape *)
let area (shape: shape) : float =
  match shape with
  | Rectangle (w, h) -> float_of_int (w * h)
  | Square s -> float_of_int (s * s)
  | Circle r -> 3.14 *. r *. r

(* Print the brand of a vehicle *)
let print_brand (vehicle: vehicle) : unit =
  match vehicle with
  | Car b -> print_endline ("This is a " ^ b ^ " car.")
  | Truck b -> print_endline ("This is a " ^ b ^ " truck.")
  | Motorcycle b -> print_endline ("This is a " ^ b ^ " motorcycle.")
  | Bicycle b -> print_endline ("This is a " ^ b ^ " bicycle.")
  | Electric b -> print_endline ("This is a " ^ b ^ " electric vehicle.")
  | Other b -> print_endline ("This is a " ^ b ^ " other vehicle.")

(** Main **)

(* Create an employee record *)
let employee1 = {name = "John Doe"; age = 35; position = "Software Developer"; salary = 100000.; department = "IT"; vacation_days = 10}

(* Update employee's age *)
let updated_employee = update_age employee1

(* Calculate the area of a square with side length 5 *)
let square_area = area (Square 5)

(* Print the brand of a car *)
let car = Car "Tesla"
let _ = print_brand car

(* Print the brand of an electric vehicle *)
let electric_vehicle = Electric "Tesla"
let _ = print_brand electric_vehicle
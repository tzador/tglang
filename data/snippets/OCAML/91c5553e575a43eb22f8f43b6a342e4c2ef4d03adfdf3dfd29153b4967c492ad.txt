(*
This OCAML function takes in a list of integers and squares each one,
then adds 1 to the resulting list and returns the sum of all elements.
Usage: square_and_add [1;2;3]
Output: 15
*)

let square_and_add lst =
    let square x = x * x in (* Helper function to square a number *)
    let squared_lst = List.map square lst in (* Maps square function to each element in the list *)
    let plus_one = List.map (fun x -> x + 1) squared_lst in (* Adds 1 to each element in the squared list *)
    List.fold_left (fun acc x -> acc + x) 0 plus_one (* Uses fold function to sum all elements in the list *)

square_and_add [1;2;3] (* Returns 15 *)
(* This is a function that takes in a list of integers and returns the sum of all the positive numbers in the list. *)
let rec sum_positive_list l =
    match l with
    | [] -> 0 (* If the list is empty, return 0 *)
    | h::t -> if h > 0 then h + sum_positive_list t (* If the head of the list is positive, add it to the sum of the rest of the list *)
               else sum_positive_list t (* If the head of the list is negative, ignore it and continue adding the rest of the list *)
               
(* Test cases *)
sum_positive_list [1; -2; 3; -4] (* Output: 4 *)
sum_positive_list [5; 10; 15; -20] (* Output: 30 *)
sum_positive_list [-1; -2; -3] (* Output: 0 *)
(* Function to calculate the sum of even numbers in a list *)
let rec sum_even_numbers list =
  match list with
  | [] -> 0 (* return 0 if list is empty *)
  | head :: tail -> (* pattern matching to get head and tail of list *)
    if head mod 2 = 0 then (* check if head is even *)
      head + sum_even_numbers tail (* add head to sum of even numbers in tail *)
    else (* if head is odd *)
      sum_even_numbers tail (* skip head and continue recursively with tail *)
  
(* Output: 26
Explanation: The function calculates the sum of the even numbers in the list [5; 2; 3; 8; 4; 9] and returns the value 26. *)
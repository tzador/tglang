(* This is a function that reverses a list using recursion *)
let rec reverse_list lst =
  match lst with
  | [] -> [] (* If the list is empty, return an empty list *)
  | hd::tl -> reverse_list tl @ [hd] (* Recursive call, add the head to the end of the reversed tail *)

(* This is the main function *)
let main () =
  let lst = [1; 2; 3; 4; 5] in (* Create a sample list *)
  let reversed_lst = reverse_list lst in (* Call the reverse_list function *)
  print_string "Original list: "; print_endline (String.concat " " (List.map string_of_int lst)); (* Print original list *)
  print_string "Reversed list: "; print_endline (String.concat " " (List.map string_of_int reversed_lst)) (* Print reversed list *)

(* Call the main function *)
let () = main ()
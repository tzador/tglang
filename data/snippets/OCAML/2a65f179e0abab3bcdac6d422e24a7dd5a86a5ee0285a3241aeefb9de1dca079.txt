(*
This is a recursive function that calculates the factorial of a number
n: integer - the number to calculate the factorial of
Returns: integer - the factorial of the input number
*)
let rec factorial n =
  if n <= 1 then 1 else n * factorial (n-1)

(*
This is a function that generates a random color in RGB format
Returns: string - the randomly generated color in RGB format
*)
let generate_random_color () =
  let red = Random.int 256 in
  let green = Random.int 256 in
  let blue = Random.int 256 in
  "rgb(" ^ string_of_int red ^ ", " ^ string_of_int green ^ ", " ^ string_of_int blue ^ ")"

(*
This is a function that performs bubble sort on a list of integers
nums: integer list - the list of integers to be sorted
Returns: integer list - the sorted list of integers
*)
let bubble_sort nums =
  let num_swaps = ref 1 in
  while (!num_swaps != 0) do
    num_swaps := 0;
    for i = 0 to (List.length nums)-2 do
      if List.nth nums i > List.nth nums (i+1) then
        let tmp = List.nth nums (i+1) in
        List.set nums (i+1) (List.nth nums i);
        List.set nums i tmp;
        num_swaps := !num_swaps + 1;
    done;
  done;
  nums
(* Define a custom data type for a student record *)
type student_record = {
  name: string;
  age: int;
  major: string;
  gpa: float;
  courses_taken: string list;
}

(* Initialize a student record with sample data *)
let student1 = {
  name = "John Smith";
  age = 21;
  major = "Computer Science";
  gpa = 3.5;
  courses_taken = ["Introduction to Programming"; "Data Structures"; "Algorithm Design"];
}

(* Define a function to calculate the total number of credits for a given student *)
let rec calculate_credits (record: student_record) =
  let rec calculate_credits_helper (courses: string list) (total_credits: int) =
    match courses with
    | [] -> total_credits
    | course :: rest ->
      (* Extract the credit value from the course name *)
      let credits = int_of_string (String.sub course (String.rindex course ' ') 1) in
      (* Recursively add the credits to the total *)
      calculate_credits_helper rest (total_credits + credits)
  in
  calculate_credits_helper record.courses_taken 0;;
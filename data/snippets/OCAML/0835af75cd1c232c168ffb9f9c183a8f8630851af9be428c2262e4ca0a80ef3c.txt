(* Code for finding the minimum value in a list using recursion *)

(* Define a function that takes in a list of integers and returns the minimum value *)
let rec find_min (lst: int list): int =
    (* Check if the list is empty *)
    match lst with
    | [] -> failwith "Empty list"
    | [x] -> x (* If list has only one element, return that element as the minimum *)
    | x :: xs -> min x (find_min xs) (* Recursively check the minimum between first element and the minimum of the rest of the list *)

(* Test the function *)
let lst = [5; 2; 8; 3; 10; 1]
let min = find_min lst
(* Output: min = 1 *)
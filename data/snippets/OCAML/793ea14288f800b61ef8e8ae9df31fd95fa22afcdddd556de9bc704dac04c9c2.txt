(** merge_sort : 'a list -> 'a list
    Sorts a list using the merge sort algorithm *)
let rec merge_sort lst =
  match lst with
  | [] -> []
  | [x] -> [x]
  | _ ->
      let mid = List.length lst / 2 in
      let left = List.sub lst 0 mid in
      let right = List.sub lst mid (List.length lst - mid) in
      merge (merge_sort left) (merge_sort right)

(** merge : 'a list -> 'a list -> 'a list
    Merges two sorted lists into one sorted list *)
let rec merge left right =
  match (left, right) with
  | ([], _) -> right
  | (_, []) -> left
  | (l :: lt, r :: rt) ->
      if l < r then l :: merge lt right
      else r :: merge left rt
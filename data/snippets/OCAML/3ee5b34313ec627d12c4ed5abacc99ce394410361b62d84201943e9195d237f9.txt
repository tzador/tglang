(* This is a function that takes in a list of numbers and returns the maximum value in that list *)
let rec find_max (lst: int list) : int =
  match lst with
  (* If the list is empty, return 0 as default *)
  | [] -> 0
  (* If the list only has one number, return that number as the maximum *)
  | [x] -> x
  (* If the first number in the list is greater than the current maximum, call the function again with the rest of the list and update the maximum *)
  | hd :: tl when hd > find_max tl -> find_max (tl) + hd
  (* If the first number in the list is not the maximum, call the function again with the rest of the list *)
  | _ :: tl -> find_max tl
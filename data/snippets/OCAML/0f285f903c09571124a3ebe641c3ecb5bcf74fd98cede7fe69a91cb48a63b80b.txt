(* This function takes a list of integers and returns the sum of all the even numbers in the list *)
let rec sum_even (lst : int list) : int =
  match lst with
  | [] -> 0 (* Base case: empty list, return 0 *)
  | x::xs -> (* Recursive case: x is first element, xs is rest of list *)
    if x mod 2 = 0 then x + sum_even xs (* If x is even, add it to recursive call with rest of list *)
    else sum_even xs (* If x is odd, ignore and just recursively call with rest of list *)

let lst = [1;2;3;4;5;6;7;8;9] (* Create example list of integers *)

let sum = sum_even lst (* Call sum_even function on lst *)

(* Print the result *)
print_endline ("The sum of even numbers in the list is " ^ string_of_int sum)  (* Convert sum to string and concatenate with string message *)
(* This is a function that takes in a list of integers and returns their sum *)
let sum_list (lst : int list) : int =
  let rec sum (lst : int list) (acc : int) : int =
    match lst with
    | [] -> acc (* Returns the accumulated sum when the list is empty *)
    | h::t -> sum t (acc + h) (* Adds the head of the list to the accumulated sum and calls the function on the rest of the list *)
  in
  sum lst 0 ;; (* Calls the helper function with the provided list and an initial acc value of 0 *)
(* Defining a recursive function to compute the factorial of a number *)
let rec factorial n =
  match n with
  | 0 -> 1 (* base case: if n is 0, return 1 *)
  | _ -> n * factorial (n-1) (* recursive case: multiply n with factorial of n-1 *)

(* Defining a function to print the result of the factorial function *)
let print_factorial n =
  Printf.printf "The factorial of %i is %i" n (factorial n)

(* Calling the print_factorial function with the argument of 5 *)
print_factorial 5
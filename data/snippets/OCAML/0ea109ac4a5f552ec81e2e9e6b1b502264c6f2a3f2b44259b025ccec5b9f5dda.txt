(* This is a complex code snippet in OCAML *)
(* It defines a function called "factorial" that takes in an integer "n" and returns the factorial of n *)
let rec factorial n =
  match n with
  | 0 -> 1
  | x -> x * factorial (n - 1)
(* This is a recursive function that calls itself until n reaches 0 *)
(* It uses pattern matching to handle the base case of 0 and any other integer *)
(* The function is recursive because it calls itself within its own definition *)
(* Here is an example of how to use the function: *)
print_int (factorial 5);;
(* This will output the factorial of 5, which is 120 *)
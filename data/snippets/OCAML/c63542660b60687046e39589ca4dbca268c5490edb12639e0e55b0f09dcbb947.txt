(* This is a function that takes in three arguments
  and recursively calculates the factorial of a number *)
  let rec factorial a n acc =
      (* Base case: when n is equal to 0, return the accumulator *)
      if n = 0 then acc 
      (* Recursive case: multiply the accumulator by n and 
      call the function again with n decreased by 1 *)
      else factorial a (n-1) (acc * n) 
  in
  (* This is a function that prints the factorial of a number *)
  let print_factorial n =
      (* Call the factorial function with 1 as the accumulator and n as the input *)
      let result = factorial n n 1 
      in
      (* Print the result *)
      print_string (string_of_int result) 
  ;;
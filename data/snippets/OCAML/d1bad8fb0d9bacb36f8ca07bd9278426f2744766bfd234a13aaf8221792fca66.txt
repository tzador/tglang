(* Define a function that takes in two integers and returns a list of all their divisors *)
let find_divisors num1 num2 =
  (* Helper function that finds all divisors of a single number *)
  let rec find_div num count acc =
    if count = num + 1 then acc (* Return the list of divisors once all numbers have been checked *)
    else if num mod count = 0 then find_div num (count + 1) (acc @ [count]) (* Add the divisor to the list and recursively check the next number *)
    else find_div num (count + 1) acc (* Recursively check the next number *)
  in
  (* Call helper function on both numbers and combine the lists *)
  let divisors1 = find_div num1 1 [] in
  let divisors2 = find_div num2 1 [] in
  divisors1 @ divisors2;; (* Return the combined list of divisors *)
(* This is an implementation of the quicksort algorithm in OCAML *)
 
(* This function takes in a list of integers and returns a sorted version
 * of the list using the quicksort algorithm *)
let rec quicksort lst =
  match lst with
  | [] -> []
  | [x] -> [x]
  | pivot :: rest ->
      let lesser, greater = List.partition ((>) pivot) rest in
      (quicksort lesser) @ [pivot] @ (quicksort greater)
 
(* Example usage *)
let sorted = quicksort [5; 2; 8; 1; 9; 3]
(* Output: sorted = [1; 2; 3; 5; 8; 9] *)
(*This is a complex function that takes in two lists and returns a new list with
the combined values of the two input lists*)

let combine_lists lst1 lst2 =
  let rec helper lst acc =
    match lst with
    [] -> acc
    | x::xs -> helper xs (x::acc)
  in
  let reversed_lst1 = helper lst1 [] in
  let reversed_lst2 = helper lst2 [] in
  let final_lst =
    List.map2 (fun x y -> x + y) reversed_lst1 reversed_lst2 in
  let rec reverse_helper lst acc =
    match lst with
    [] -> acc
    | x::xs -> reverse_helper xs (x::acc)
  in
  reverse_helper final_lst []
    
(** Example:
combine_lists [1;2;3] [4;5;6] returns [10;7;4] *)
(* Define a recursive function to compute the nth Fibonacci number *)
let rec fib n =
  match n with
  | 0 -> 0
  | 1 -> 1
  | _ -> fib (n-1) + fib (n-2)

(* Define a function to print the first n Fibonacci numbers *)
let print_fib n =
  for i = 0 to n do
    print_int (fib i);
    print_string " ";
  done;;

(* A wrapper function to add two numbers *)
let add x y =
  x + y ;;

(* Define a list of numbers *)
let numbers = [1; 2; 3; 4; 5; 6; 7; 8; 9; 10];;

(* Apply the add function to the list of numbers using List.map *)
let result = List.map(add 1) numbers ;; (* result will be [2; 3; 4; 5; 6; 7; 8; 9; 10; 11] *)

(* Define a record type for representing a person's information *)
type person = {
  name: string;
  age: int;
  is_student: bool;
};;

(* Define a function to print a person's information *)
let print_person p =
  print_string ("Name: " ^ p.name ^ "\n");
  print_string ("Age: " ^ string_of_int(p.age) ^ "\n");
  print_string ("Is a student: " ^ string_of_bool(p.is_student));
;;

(* Create a list of person records *)
let people = [
  {
    name = "John Doe";
    age = 25;
    is_student = true;
  };
  {
    name = "Jane Smith";
    age = 30;
    is_student = false;
  };
  {
    name = "Bob Johnson";
    age = 22;
    is_student = true;
  };
];;

(* Print out the information for each person using List.iter *)
let _ = List.iter print_person people ;; (* Output will be:
  Name: John Doe
  Age: 25
  Is a student: true
  Name: Jane Smith
  Age: 30
  Is a student: false
  Name: Bob Johnson
  Age: 22
  Is a student: true
*)
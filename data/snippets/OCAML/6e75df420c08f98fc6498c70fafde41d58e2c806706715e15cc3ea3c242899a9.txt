(* This is a function that implements the Sieve of Eratosthenes algorithm to find prime numbers up to n *)

let sieve_of_eratosthenes n =
  let nums = Array.make (n + 1) true in

  nums.(0) <- false;
  nums.(1) <- false;

  for i = 2 to n / 2 do
    if nums.(i) then
      let multiples = ref (i * i) in
      while !multiples <= n do
        nums.(!multiples) <- false;
        multiples := !multiples + i
      done
  done;

  let primes = ref [] in

  for i = 0 to n do
    if nums.(i) then
      primes := i :: !primes
  done;

  List.rev !primes
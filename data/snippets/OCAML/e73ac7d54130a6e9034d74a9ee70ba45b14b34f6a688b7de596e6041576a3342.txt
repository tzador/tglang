(* Function to check if a number is prime *)
let is_prime num =
  let rec is_divisor n = function
    | 1 -> true
    | x when n mod x = 0 -> false
    | x -> is_divisor n (x - 1)
in 
  is_divisor num (num - 1)

(* Function to generate a list of prime numbers *)
let rec prime_list = function
  | n when n = 1 -> []
  | n when is_prime n -> n :: prime_list (n - 1)
  | n -> prime_list (n - 1)

(* Main function to print the list of prime numbers *)
let print_prime_list n =
  let primes = prime_list n in
  let rec loop = function
    | [] -> ()
    | h::t -> print_int h; print_string " "; loop t
in loop primes

(* Calling the main function with input value 100 *)
print_prime_list 100
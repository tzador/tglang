let rec zip lst1 lst2 = 
  match lst1, lst2 with
  | [], [] -> []
  | x :: xs, [] -> failwith "Lists must be of same length!"
  | [], y :: ys -> failwith "Lists must be of same length!"
  | x :: xs, y :: ys -> (x, y) :: zip xs ys
  (* zip takes two lists lst1 and lst2 and merges the elements 
     of each list together as a tuple, returning a new list with 
     the merged elements. The lists must be of equal length, 
     otherwise an exception will be raised. This implementation 
     uses recursion and pattern matching.*)
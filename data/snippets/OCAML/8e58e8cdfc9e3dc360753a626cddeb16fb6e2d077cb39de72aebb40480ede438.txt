(** This is a multi-line comment in OCAML *)
let rec factorial n = 
  match n with
  | 0 -> 1 (* Base case, returns 1 when n is 0 *)
  | x -> x * factorial (x - 1) (* Recursive call, multiplies x with factorial of x - 1 *)

let () = (* Main function *)
  let num = ref 5 in (* Initializing a reference variable num with value 5 *)
  let result = factorial !num in
  Printf.printf "The factorial of %d is %d" !num result;; (* Printing the result using Printf *)

(* Output: The factorial of 5 is 120 *)
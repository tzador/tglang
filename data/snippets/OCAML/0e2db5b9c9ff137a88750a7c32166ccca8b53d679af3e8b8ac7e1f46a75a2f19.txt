(* This is a comment in OCAML *)

(* Function to calculate the nth fibonacci number using recursion *)
let rec fib n =
  match n with
  | 0 | 1 -> n
  | _ -> fib (n - 1) + fib (n - 2)

(* Function to print the first 10 fibonacci numbers *)
let rec print_fibs n =
  match n with
  | 0 -> ()
  | _ -> print_int (fib n); print_string " "; print_fibs (n - 1)

(* Util function to reverse a list *)
let rec reverse ls =
  match ls with
  | [] -> []
  | hd :: tl -> reverse tl @ [hd]

(* Function to print a list in reverse order *)
let print_reverse ls =
  let rev_ls = reverse ls in
  List.iter (fun x -> print_int x; print_string " ") rev_ls
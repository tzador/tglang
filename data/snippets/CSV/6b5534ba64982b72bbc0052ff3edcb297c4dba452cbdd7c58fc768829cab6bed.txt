Name,Age,Gender        //Creating columns for Name, Age, and Gender
John,18,Male           //Adding data for John
Emily,20,Female        //Adding data for Emily
Alex,22,Male           //Adding data for Alex
Lisa,19,Female         //Adding data for Lisa

//The code above creates a CSV (Comma-Separated Values) file that looks like this:

| Name | Age | Gender |
|------|-----|--------|
| John | 18  | Male   |
| Emily| 20  | Female |
| Alex | 22  | Male   |
| Lisa | 19  | Female |

//To access this data programmatically, we can use a library like the built-in csv module in Python:

import csv

with open('my_file.csv', 'r') as file:      //Opening the CSV file in read mode
    csv_reader = csv.reader(file)           //Creating a csv reader object
    for row in csv_reader:                  //Looping through each row in the csv file
        print(row)                          //Printing the contents of each row

//This will output:
//['Name', 'Age', 'Gender']
//['John', '18', 'Male']
//['Emily', '20', 'Female']
//['Alex', '22', 'Male']
//['Lisa', '19', 'Female']

//We can also use the csv.DictReader class to access the data using column names:

with open('my_file.csv', 'r') as file:      //Opening the CSV file in read mode
    csv_reader = csv.DictReader(file)       //Creating a csv reader object
    for row in csv_reader:                  //Looping through each row in the csv file
        print(row['Name'], row['Age'])      //Printing the Name and Age columns for each row

//This will output:
//John 18
//Emily 20
//Alex 22
//Lisa 19

//In addition to reading CSV files, we can also write data to a CSV file using the csv.writer class:

with open('new_file.csv', 'w') as file:      //Opening a new CSV file in write mode
    csv_writer = csv.writer(file)            //Creating a csv writer object
    csv_writer.writerow(['Name', 'Age', 'Gender'])      //Writing the column names as the first row
    csv_writer.writerow(['Anna', '25', 'Female'])       //Writing data for Anna
    csv_writer.writerow(['Tom', '30', 'Male'])          //Writing data for Tom

//This will create a new CSV file called "new_file.csv" with the following contents:

| Name | Age | Gender |
|------|-----|--------|
| Anna | 25  | Female |
| Tom  | 30  | Male   |

//CSV is a simple and versatile file format that is commonly used for storing and manipulating tabular data. With the help of libraries like the csv module in Python, we can easily read and write data from CSV files in our programs.
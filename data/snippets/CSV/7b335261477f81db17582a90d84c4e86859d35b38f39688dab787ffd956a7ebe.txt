/*
This is a complex code snippet in CSV (Comma Separated Values) language, it is used to represent data in a tabular form.
In this snippet, data is represented using commas as delimiters and each line represents a row in the table.
The first row contains headers while subsequent rows contain data.
*/

// Create a function to read CSV file
func readCSV(filename string) ([][]string, error) {

    // Open the CSV file
    f, err := os.Open(filename)
    if err != nil {
        return nil, err
    }

    // Read the file line by line and store data in a 2D slice
    r := csv.NewReader(f)
    rows, err := r.ReadAll()
    if err != nil {
        return nil, err
    }

    // Close the file after reading
    err = f.Close()
    if err != nil {
        return nil, err
    }

    // Return the 2D slice containing the data
    return rows, nil
}

// Call the readCSV function and store the returned data in a variable
data, err := readCSV("data.csv")

// Check for any errors
if err != nil {
    fmt.Println("Error while reading CSV:", err)
}

// Loop through each row in the data and print the values
for _, row := range data {
    for _, value := range row {
        fmt.Printf("%v\t", value) // Print each value in a tab separated manner
    }
    fmt.Println() // Print a new line after each row is printed
}
# Example CSV data
"id", "name", "age", "city"
1, "John Smith", 29, "New York"
2, "Jane Doe", 34, "Chicago"
3, "Bob Johnson", 41, "Los Angeles"
4, "Mary Williams", 25, "Miami"

# Function to read CSV file and return a dictionary of data
def read_csv(csv_file):
    """
    Reads a CSV file and returns a dictionary of data.
    Param: csv_file - path to the CSV file
    Return: data_dict - dictionary containing the CSV data
    """
    # Initialize empty dictionary to store data
    data_dict = {}

    # Open the CSV file and read each line
    with open(csv_file, 'r') as file:
        # Split each line by comma to get data fields
        for line in file:
            fields = line.split(',')

            # First line contains headers, use as dictionary keys
            if file.tell() == 1:
                keys = [field.strip() for field in fields]
            
            # Remaining lines contain data, create dictionary entry
            else:
                # Initialize empty dictionary for current entry
                entry = {}

                # Loop through each field and add to dictionary
                for i in range(len(fields)):
                    # Use header as key and data as value
                    entry[keys[i]] = fields[i].strip()

                # Add entry to data dictionary with unique ID as key
                data_dict[entry['id']] = entry
    
    return data_dict

# Function to write CSV file from a dictionary of data
def write_csv(csv_file, data_dict):
    """
    Writes a CSV file from a dictionary of data.
    Param: csv_file - path to the CSV file
    Param: data_dict - dictionary containing the data to write
    """
    # Open CSV file in write mode
    with open(csv_file, 'w') as file:
        # Write headers as first line
        headers = ','.join(data_dict[0].keys()) + '\n'
        file.write(headers)

        # Loop through each data entry
        for id in data_dict:
            # Get data values and concatenate with commas
            values = ','.join(data_dict[id].values()) + '\n'

            # Write values to file
            file.write(values)
/^([A-Z][a-z]+|[A-Z][a-z]+-[A-Z][a-z]+), \d{2}\s[A-Z][a-z]+\s\d{4}$/
// This regex pattern matches a name and date format, such as "John Doe, 30 Oct 2021" or "Mary-Ann Smith, 15 Mar 2022", where the first part is the person's name with optional hyphenated last name, followed by a comma and a space, and the second part is a two-digit number indicating the day, followed by a space, three-letter month abbreviation and a four-digit year.
// The pattern first uses a caret symbol (^) to denote the beginning of a string.
// The parentheses () indicate a group, which can be referred to later in the pattern.
// The first group begins with a character range [A-Z], followed by one or more lowercase letters [a-z]+. This represents the first name.
// The pipe symbol (|) means "or", so the regex will also look for a second option - a first name followed by a hyphen and another set of first and last name. This could also be written as {2,2}.
// The second group is also optional, denoted by the question mark (?), and also starts with a character range [A-Z], followed by one or more lowercase letters [a-z]+. This represents the first part of the hyphenated last name.
// The hyphen (-) is a literal character that must be included in the string.
// The third group uses the same pattern as the first group to match the second part of the hyphenated last name.
// The comma and space are both literal characters that must be included in the string.
// The \d represents any digit and {2} specifies that there must be exactly two digits in this group.
// Then there is a literal space character.
// The [A-Z] character range is used to match a single uppercase letter.
// The [a-z] character range is used to match a lowercase letter.
// The + symbol indicates that there must be one or more lowercase letters in this group.
// Finally, the $ symbol is used to denote the end of the string.
// This regex can be used to validate input of names and date formats in a form or to extract this information from a larger string of text.
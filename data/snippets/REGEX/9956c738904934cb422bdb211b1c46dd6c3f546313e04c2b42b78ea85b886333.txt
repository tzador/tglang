// Matches email addresses
/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,3}/g

// Explanation:
// This regex matches email addresses that follow the standard format of username@domain.
// It first looks for one or more occurrences of lowercase alphabets, numbers, and special characters ., _ , %, +, and - in the username section.
// Then, it matches the @ symbol.
// Next, it looks for one or more occurrences of lowercase alphabets, numbers, and special characters . and - in the domain name section.
// Finally, it requires the presence of a . followed by two or three lowercase alphabets in the end for the domain extension.
// The g at the end stands for global search, which ensures that the regex searches for all possible matches in the given text.

// Example:
let text = "My email is john.doe@example.com. Please contact me for any inquiries.";
let regex = /[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,3}/g;
let matches = text.match(regex); // matches = ["john.doe@example.com"]

// More examples:
// "My email is john.doe123@hackerwebsite" will not match because it is missing a valid domain extension.
// "_jane@email" will not match because it does not have a valid username format with the @ symbol and a domain.
// "My email is john.doe123@gmail for more information" will only match "john.doe123@gmail" because it does not have a complete email format in the end.
Example
/*** This regex checks for a valid email
* Format: [characters]@[domain].[extension]
* Accepted characters: letters, numbers, dash, underscore, period
***/

^[a-zA-Z0-9]+[\-\_]?[a-zA-Z0-9.]*@[a-z]+\.([a-z]{2,3})(\.[a-z]{2,3})?$/*

Explanation:
- The regex starts with the ^ symbol to indicate the beginning of the string.
- The character set [a-zA-Z0-9]+ specifies that the first character must be a letter or number.
- The [\-\_]? allows for either a dash or underscore to appear after the first set of characters.
- The [a-zA-Z0-9.]* specifies that there can be any combination of letters, numbers, or periods after the dash or underscore.
- Next is the @ symbol, which denotes the separation of the characters from the domain.
- The [a-z]+ indicates that the domain can only have lowercase letters.
- The \. specifies that a period must be present between the domain and the extension.
- The ([a-z]{2,3}) specifies that the extension can have 2-3 lowercase letters.
- The (\.[a-z]{2,3})? allows for the presence of another period and 2-3 lowercase letters, but it is optional.
- The $ symbol denotes the end of the string.
- The slashes at the beginning and end denote the start and end of the regex pattern.
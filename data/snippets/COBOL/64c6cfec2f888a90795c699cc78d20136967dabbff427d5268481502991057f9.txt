IDENTIFICATION DIVISION. // This is the identification division which contains information about the program
       PROGRAM-ID. GENERATE-CODE. // This is the program name
       ENVIRONMENT DIVISION. // This division defines the environment in which the program will run
       INPUT-OUTPUT SECTION. // This section defines the input and output files used by the program
       FILE-CONTROL. // This is the file control section where file attributes and access modes are defined
           SELECT INPUT-FILE ASSIGN TO "input.txt". // This statement assigns the input file to a file name
           SELECT OUTPUT-FILE ASSIGN TO "output.txt". // This statement assigns the output file to a file name
       DATA DIVISION. // This division contains data declarations and definitions
       WORKING-STORAGE SECTION. // This section is used for variables and constants used in the program
           01 NUM-A PIC 9(6). // This statement defines a variable with maximum length of 6 digits
           01 NUM-B PIC 9(6). // This statement defines another variable with maximum length of 6 digits
           01 RESULT PIC 9(12). // This statement defines a variable with maximum length of 12 digits
       PROCEDURE DIVISION. // This division contains the actual program logic
           OPEN INPUT INPUT-FILE OUTPUT OUTPUT-FILE. // This statement opens the input and output files
           PERFORM UNTIL EOF(INPUT-FILE). // A loop that will continue until the end of the input file is reached
               READ INPUT-FILE. // This statement reads a record from the input file
               MOVE NUM-A TO RESULT. // This statement moves the value of NUM-A to RESULT variable
               MOVE NUM-B TO RESULT. // This statement moves the value of NUM-B to RESULT variable
               WRITE OUTPUT-FILE FROM RESULT. // This statement writes the value of RESULT to the output file
           END-PERFORM. // End of loop
           CLOSE INPUT-FILE OUTPUT-FILE. // Closes the input and output files
           STOP RUN. // Ends the program execution
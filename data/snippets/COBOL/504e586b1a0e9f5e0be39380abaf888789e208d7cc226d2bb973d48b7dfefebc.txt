IDENTIFICATION DIVISION.                           * This is the division that identifies the program.

   ENVIRONMENT DIVISION.                              * This is the division that specifies the environment the program is running in.
   INPUT-OUTPUT SECTION.
   FILE-CONTROL.
       SELECT INPUT-FILE ASSIGN TO "FILE1.DAT".        * This statement selects the input file to be used in the program.
       SELECT OUTPUT-FILE ASSIGN TO "OUTPUT.DAT".      * This statement selects the output file where the program's results will be stored.

   DATA DIVISION.                                      * This is the division that declares all data used in the program.
   FILE SECTION.
   FD  INPUT-FILE RECORD CONTAINS 80 CHARACTERS.        * This statement declares the file description for the input file and specifies the length of each record.
   01  INPUT-RECORD.                                   * This is the record format for the input file.

   FD  OUTPUT-FILE RECORD CONTAINS 80 CHARACTERS.       * This statement declares the file description for the output file and specifies the length of each record.
   01  OUTPUT-RECORD.                                  * This is the record format for the output file.

   WORKING-STORAGE SECTION.
   01  NUM1                        PIC 9(5).            * This variable will hold the numeric value from the input file.
   01  NUM2                        PIC 9(5).            * This variable will hold the numeric value from the input file.
   01  TOTAL                       PIC 9(6)V99.         * This variable will hold the total calculated by the program and will include 2 decimal places.

   PROCEDURE DIVISION.                                  * This is the division where the program's logic and calculations are written.
   OPEN INPUT INPUT-FILE.                              * Opens the input file for reading.
   OPEN OUTPUT OUTPUT-FILE.                            * Opens the output file for writing.
   READ INPUT-FILE INTO INPUT-RECORD.                  * Reads a record from the input file.
   PERFORM UNTIL INPUT-RECORD = "END".                  * This loop will continue until the end of the file is reached.
       MOVE INPUT-RECORD(1:5) TO NUM1.                 * Moves the first 5 characters of the input record to the NUM1 variable.
       MOVE INPUT-RECORD(6:5) TO NUM2.                 * Moves the next 5 characters to the NUM2 variable.
       COMPUTE TOTAL = NUM1 + NUM2.                    * Calculates the total and stores it in the TOTAL variable.
       MOVE TOTAL TO OUTPUT-RECORD.                    * Moves the calculated total to the output record.
       WRITE OUTPUT-RECORD.                            * Writes the output record to the output file.
       READ INPUT-FILE INTO INPUT-RECORD.              * Reads the next record from the input file.
   END-PERFORM.

   CLOSE INPUT-FILE.                                   * Closes the input file.
   CLOSE OUTPUT-FILE.                                  * Closes the output file.
   STOP RUN.                                           * Stops the program execution.
IDENTIFICATION DIVISION.
       PROGRAM-ID. complex-code.
       
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
          SELECT input-file ASSIGN TO 'IN-FILE' ORGANIZATION IS LINE SEQUENTIAL.
          SELECT output-file ASSIGN TO 'OUT-FILE' ORGANIZATION IS LINE SEQUENTIAL.
       
       DATA DIVISION.
       FILE SECTION.
       FD input-file.
       
       01 input-file-record.
          05  input-field-1    PIC X(10).
          05  input-field-2    PIC S9(5)V99.
          05  input-field-3    PIC X(20).
       
       FD output-file.
       
       01 output-file-record.
          05  output-field-1   PIC X(10) VALUE SPACES.
          05  output-field-2   PIC XXXXX.
          05  output-field-3   PIC X(8) VALUE ZERO.
          05  output-field-4   PIC S9(5)V99.
          05  output-field-5   PIC 99999.
          05  output-field-6   PIC S9(3) COMP.
          05  output-field-7   PIC S9(5)V99 COMP-3.
          05  output-field-8   PIC S9(5)V99 PACKED-DEC.
          05  output-field-9   PIC G999V99 USAGE DISPLAY-7.
       
       WORKING-STORAGE SECTION.
       01 count                PIC 9(2) VALUE ZERO.
       01 total-sales          PIC S9(9)V99 VALUE ZERO.
       01 highest-sales        PIC S9(9)V99 VALUE ZERO.
       01 lowest-sales         PIC S9(9)V99 VALUE ZERO.
       01 highest-sales-name   PIC X(20) VALUE SPACES.
       01 lowest-sales-name    PIC X(20) VALUE SPACES.
       
       PROCEDURE DIVISION.
       OPEN INPUT input-file
       OPEN OUTPUT output-file
       
       PERFORM UNTIL count = 10
       
       READ input-file
           AT END MOVE 'END OF FILE REACHED' TO output-field-1
           NOT AT END
               ADD 1 TO count
               ADD input-field-2 TO total-sales
               IF input-field-3 = 'CHOCOLATE' 
                   IF input-field-2 > highest-sales THEN
                       MOVE input-field-2 TO highest-sales
                       MOVE input-field-1 TO highest-sales-name
                   END-IF
                   IF input-field-2 < lowest-sales THEN
                       MOVE input-field-2 TO lowest-sales
                       MOVE input-field-1 TO lowest-sales-name
                   END-IF
               END-IF
               MOVE input-field-3 TO output-field-2
               STRING 'SALES FOR ' DELIMITED BY SIZE
                       input-field-1 DELIMITED BY SIZE
                       ' ARE $' DELIMITED BY SIZE
                       input-field-2 DELIMITED BY SIZE
               INTO output-field-3 WITH POINTER 1
               WRITE output-file-record
       END-PERFORM
       
       MOVE 'TOTAL SALES ARE $' TO output-field-1
       MOVE total-sales TO output-field-4
       WRITE output-file-record
       
       MOVE 'HIGHEST SALES ARE FOR ' TO output-field-1
       MOVE highest-sales-name TO output-field-2
       MOVE highest-sales TO output-field-4
       WRITE output-file-record
       
       MOVE 'LOWEST SALES ARE FOR ' TO output-field-1
       MOVE lowest-sales-name TO output-field-2
       MOVE lowest-sales TO output-field-4
       WRITE output-file-record
       
       CLOSE input-file
       CLOSE output-file
       
       STOP RUN.
IDENTIFICATION DIVISION.             * This is the identification division of the code
       PROGRAM-ID. HELLO-WORLD.              * This is the program ID
       AUTHOR. JOHN DOE.                     * This is the author's name
       ENVIRONMENT DIVISION.                 * This is the environment division of the code
       INPUT-OUTPUT SECTION.                 * Specifies input-output sections of program
       FILE-CONTROL.                         * Controls file access
           SELECT STUDENT-FILE               * Selects student file for reading
           ASSIGN TO 'STUDENTS.TXT'          * Assigns student file to external file name
           ORGANIZATION IS LINE SEQUENTIAL.  * Specifies sequential organization of file
           ACCESS MODE IS SEQUENTIAL.        * Specifies sequential access mode
       DATA DIVISION.                        * This is the data division of the code
       FILE SECTION.                         * Specifies files used in program
       FD STUDENT-FILE.                      * File descriptor for student file
       01 STUDENT-RECORD.                    * Record description for student file
           05 STUDENT-ID      PIC 9(5).      * Student ID field with 5 digits
           05 STUDENT-NAME    PIC X(20).     * Student name field with max of 20 characters
           05 STUDENT-GRADE   PIC 99.        * Student grade field with 2 digits after decimal point
       WORKING-STORAGE SECTION.              * Specifies working storage section of program
       01 TOTAL-GRADES       PIC 9(3)V9(2).  * Total variable for grades with 2 decimal places
       01 GRADE-COUNTER      PIC 9(3).       * Counter variable for number of grades entered
       PROCEDURE DIVISION.                   * This is the procedure division of the code
       MAIN-ROUTINE.                         * Main process of the program
           OPEN INPUT STUDENT-FILE.          * Opens student file for reading
           PERFORM READ-FILE UNTIL EOF.      * Calls read-file subroutine until end of file
           DISPLAY 'TOTAL AVERAGE GRADE:'.   * Displays message before output
           DISPLAY TOTAL-GRADES.             * Displays total average grade
           CLOSE STUDENT-FILE.               * Closes student file
           STOP RUN.                         * Ends the program
       READ-FILE.                            * Read-file subroutine
           READ STUDENT-FILE                 * Reads student file
           AT END                            * If end of file reached
               MOVE ZERO TO STUDENT-ID       * Resets student ID back to zero
               MOVE 'END-OF-FILE' TO STUDENT-NAME  * Indicates end of file in student name field
               MOVE ZEROS TO STUDENT-GRADE   * Resets student grade back to zeros
               EXIT                            * Exits subroutine
           END-READ.
           ADD STUDENT-GRADE TO TOTAL-GRADES. * Adds student grade to total grades
           ADD 1 TO GRADE-COUNTER.           * Increments grade counter by 1
       END PERFORM.                           * Loops back to READ-FILE subroutine
       * The total average grade is calculated by dividing the sum of the grade by the number of grades entered
       DIVIDE TOTAL-GRADES BY GRADE-COUNTER GIVING TOTAL-GRADES.  * Calculates total average grade
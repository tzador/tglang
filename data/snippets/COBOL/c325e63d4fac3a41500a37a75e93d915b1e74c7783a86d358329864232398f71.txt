IDENTIFICATION DIVISION.                       * naming and declaring the program
PROGRAM-ID. snippet-gen.                        * program name
ENVIRONMENT DIVISION.                           * defining the environment
INPUT-OUTPUT SECTION.                           * specifying input/output requirements
FILE-CONTROL.                                   * declaring all files used in the program
SELECT INPUT-FILE ASSIGN TO 'input.txt'.         * defining input file
SELECT OUTPUT-FILE ASSIGN TO 'output.txt'.       * defining output file
DATA DIVISION.                                  * declaring data used in the program
FILE SECTION.                                   * defining files used in program
FD INPUT-FILE.                                  * file descriptor for input file
01 INPUT-LINE                 PIC X(100).        * defining variable for input line
FD OUTPUT-FILE.                                 * file descriptor for output file
01 OUTPUT-LINE                PIC X(100).        * defining variable for output line
WORKING-STORAGE SECTION.                        * declaring working variables
01 INPUT-LENGTH                PIC 9(2).         * defining variable for input line length
01 COUNT                       PIC 9(2) VALUE 0. * initializing count variable
PROCEDURE DIVISION.                             * main procedure division
MAIN.
    OPEN INPUT INPUT-FILE.                      * opening input file
    OPEN OUTPUT OUTPUT-FILE.                    * opening output file
    READ INPUT-FILE INTO INPUT-LINE AT END       * reading input file until end of file
        GO TO END-OF-FILE.
    INITIALIZE OUTPUT-LINE.                     * initializing output line variable
LOOP.
    ADD 1 TO COUNT.                             * incrementing count variable
    MOVE INPUT-LINE(COUNT:1) TO OUTPUT-LINE(COUNT:1). * copying character to output line
    IF COUNT = INPUT-LENGTH                     * checking if end of input line
        PERFORM WRITE-OUTPUT.                   * write output line to file
        MOVE 0 TO COUNT.                        * reset count variable
END-OF-FILE.
    CLOSE INPUT-FILE.                           * closing input file
    CLOSE OUTPUT-FILE.                          * closing output file
STOP RUN.                                       * end of program
WRITE-OUTPUT.
    WRITE OUTPUT-LINE FROM INPUT-LENGTH          * writing output line to file
    AT END                                      * handling end of file
        GO TO EXIT.
    PERFORM READ-INPUT.                         * read next input line
EXIT.
    EXIT.                                       * exit procedure
READ-INPUT.
    READ INPUT-FILE INTO INPUT-LINE AT END       * reading next input file
        GO TO END-OF-FILE.
    INITIALIZE OUTPUT-LINE.                     * initializing output line variable
    INITIALIZE INPUT-LENGTH.                    * resetting input length variable
    COMPUTE INPUT-LENGTH = FUNCTION LENGTH(INPUT-LINE). * calculating input line length
    GO TO LOOP.                                 * loop back to main procedure
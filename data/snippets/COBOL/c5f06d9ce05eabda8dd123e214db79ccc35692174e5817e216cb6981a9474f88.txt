IDENTIFICATION DIVISION.              // Indicates the start of a COBOL program
       PROGRAM-ID. ARRAYS.                    // Specifies the name of the program

       DATA DIVISION.                         // Contains the declaration of all data elements
       WORKING-STORAGE SECTION.               // Declares variables that are used during program execution
       01 NUM-ARRAY.                          // Defines the array with 10 elements
          05 NUM (10) PIC 9(3).               // Defines the elements as 3-digit numerals
       01 TEMP-VAR PIC 9(3).                  // Declares a temporary variable to hold values during sorting

       PROCEDURE DIVISION.                    // Contains the actual program logic
       MAIN-LOGIC SECTION.                    // Defines a section for main program logic
           PERFORM VARYING I FROM 1 BY 1      // Uses a loop structure to assign random values to array elements
               UNTIL I > 10                   
               COMPUTE NUM (I) = FUNCTION RANDOM (100).
                                                 // Generates random numbers between 1 and 100
           PERFORM SORT-ARRAY.                // Calls the subroutine to sort the array in ascending order
           DISPLAY 'Sorted Array:'.
           PERFORM DISPLAY-ARRAY.             // Calls the subroutine to display the sorted array
           STOP RUN.                          // Terminates the program execution

       SORT-ARRAY.                            // Subroutine to sort array in ascending order
           PERFORM VARYING I FROM 1 BY 1
               UNTIL I = 9                    
               PERFORM VARYING J FROM I + 1 BY 1
                   UNTIL J > 10               
                   IF NUM (I) > NUM (J) THEN   // Compares two array elements and swaps if necessary
                       MOVE NUM (I) TO TEMP-VAR
                       MOVE NUM (J) TO NUM (I)
                       MOVE TEMP-VAR TO NUM (J).

       DISPLAY-ARRAY.                         // Subroutine to display the sorted array
           PERFORM VARYING I FROM 1 BY 1
               UNTIL I > 10
               DISPLAY 'Element ' I ':' NUM (I).  // Displays each element of the array in order
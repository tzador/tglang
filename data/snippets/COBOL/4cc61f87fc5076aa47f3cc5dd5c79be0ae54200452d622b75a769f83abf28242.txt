IDENTIFICATION DIVISION.                       * Begin Identification Division
PROGRAM-ID. CALCULATOR.                        * Program Name

DATA DIVISION.                                 * Begin Data Division
WORKING-STORAGE SECTION.                       * Begin Working Storage Section
01 NUM-A           PIC 9999.                    * Define variable NUM-A as 4-digit number
01 NUM-B           PIC 9999.                    * Define variable NUM-B as 4-digit number
01 RESULT          PIC 9999.                    * Define variable RESULT as 4-digit number
01 OPERATOR        PIC X(1).                    * Define variable OPERATOR as 1-character string

PROCEDURE DIVISION.                             * Begin Procedure Division

DISPLAY "Enter the first number: ".              * Prompt user for first number
ACCEPT NUM-A.                                   * Accept input and store in NUM-A

DISPLAY "Enter the second number: ".             * Prompt user for second number
ACCEPT NUM-B.                                   * Accept input and store in NUM-B

DISPLAY "Enter the operator (+, -, *, /): ".     * Prompt user for operator
ACCEPT OPERATOR.                                * Accept input and store in OPERATOR

EVALUATE OPERATOR                                * Begin Evaluate statement
    WHEN "+"                                     * If OPERATOR is +
        COMPUTE RESULT = NUM-A + NUM-B           * Add NUM-A and NUM-B and store in RESULT
    WHEN "-"                                     * If OPERATOR is -
        COMPUTE RESULT = NUM-A - NUM-B           * Subtract NUM-B from NUM-A and store in RESULT
    WHEN "*"                                     * If OPERATOR is *
        COMPUTE RESULT = NUM-A * NUM-B           * Multiply NUM-A by NUM-B and store in RESULT
    WHEN "/"                                     * If OPERATOR is /
        COMPUTE RESULT = NUM-A / NUM-B           * Divide NUM-A by NUM-B and store in RESULT
    WHEN OTHER                                   * If OPERATOR is any other value
        DISPLAY "Invalid operator."             * Alert user of invalid operator
END-EVALUATE.                                    * End Evaluate statement

DISPLAY "The result is: " RESULT.                * Display the calculated result

STOP RUN.                                        * End program execution
IDENTIFICATION DIVISION.                    //IDENTIFICATION DIVISION contains the program name and other information.
PROGRAM-ID. SORT-EXAMPLE.                    //PROGRAM-ID identifies the program name.
AUTHOR. JOHN DOE.                            //AUTHOR contains the name of the program author.
ENVIRONMENT DIVISION.                        //ENVIRONMENT DIVISION contains a description of the environment in which the program will run.
INPUT-OUTPUT SECTION.                        //INPUT-OUTPUT SECTION contains a description of the files used in the program.

DATA DIVISION.                               //DATA DIVISION contains a description of the data used in the program.
FILE-SECTION.                                //FILE-SECTION contains definitions of the files used in the program.

FD INPUT-FILE.                               //FD (file description) defines a file and its attributes.
01 RECORD-IN.                                //01 defines the name of the record with a level number.
   03 FLD1 PIC X(5).                         //03 defines a field with a datatype (PIC) and length (X(5)).

WORKING-STORAGE SECTION.                     //WORKING-STORAGE SECTION contains variables and constants used within the program.
77 TOTAL-REC-COUNT PIC 9(9) VALUE 0.         //77 defines a variable with a name, datatype (PIC), and initial value (VALUE).

PROCEDURE DIVISION.                          //PROCEDURE DIVISION contains the actual program logic.
MAIN-LOGIC SECTION.                          //MAIN-LOGIC SECTION contains the main logic of the program.

INITIALIZE TOTAL-REC-COUNT IN SECTION.               //INITIALIZE sets the value of a variable to its initial value.
   PERFORM UNTIL END-OF-FILE                        //PERFORM loops through a set of logic lines until a condition is met.
     READ INPUT-FILE                               //READ reads a record from a file.
       AT END                                       //AT END checks if the end of file has been reached.
         MOVE 'END OF FILE' TO EOF-SWITCH           //MOVE moves a value to a variable.
         GO TO END-READ                             //GO TO jumps to a specified section.
       END-READ.
       ADD 1 TO TOTAL-REC-COUNT                     //ADD adds a value to a variable.
     END-READ.
   END-PERFORM.

   CLOSE INPUT-FILE                                 //CLOSE closes a file.

DISPLAY 'Total Records: ' TOTAL-REC-COUNT.           //DISPLAY prints a message to the screen.
EXIT PROGRAM.                                        //EXIT PROGRAM terminates the program.
STOP RUN.                                            //STOP RUN stops the program from executing.
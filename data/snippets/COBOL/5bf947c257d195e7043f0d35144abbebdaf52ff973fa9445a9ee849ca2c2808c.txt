WORKING-STORAGE SECTION. 
01 STUDENT-RECORD. 
        02 STUDENT-NAME PIC X(20). 
        02 STUDENT-ID PIC 9(9). 
        02 STUDENT-AGE PIC 99. 
        02 STUDENT-MAJOR PIC X(15). 

01 COURSE-RECORD.
        02 COURSE-CODE PIC X(10).
        02 COURSE-NAME PIC X(20).
        02 COURSE-CREDITS PIC 9.
        02 COURSE-GRADE PIC X.

PROCEDURE DIVISION. 
MAIN-PROC. 
        DISPLAY "Enter student name:".
        ACCEPT STUDENT-NAME.
        DISPLAY "Enter student ID:".
        ACCEPT STUDENT-ID.
        DISPLAY "Enter student age:".
        ACCEPT STUDENT-AGE.
        DISPLAY "Enter student major:".
        ACCEPT STUDENT-MAJOR.

        PERFORM ENTER-COURSES 
        /* This PERFORM statement calls the ENTER-COURSES procedure. */ 

        DISPLAY "Student name: ", STUDENT-NAME.
        DISPLAY "Student ID: ", STUDENT-ID.
        DISPLAY "Student age: ", STUDENT-AGE.
        DISPLAY "Student major: ", STUDENT-MAJOR.   

 ENTER-COURSES SECTION.
        PERFORM VARYING I FROM 1 BY 1 UNTIL I > 5.
        /* This PERFORM statement loops through 5 times to enter 5 courses. */
                DISPLAY "Enter course code: ".
                ACCEPT COURSE-CODE(I).
                DISPLAY "Enter course name: ".
                ACCEPT COURSE-NAME(I).
                DISPLAY "Enter course credits: ".
                ACCEPT COURSE-CREDITS(I).
                DISPLAY "Enter course grade: ".
                ACCEPT COURSE-GRADE(I).
        END-PERFORM.
        
        DISPLAY "Courses entered:".
        PERFORM VARYING I FROM 1 BY 1 UNTIL I > 5.
        /* This PERFORM statement loops through 5 times to display the entered courses. */
                DISPLAY COURSE-CODE(I) " - " COURSE-NAME(I) ", Credits: " COURSE-CREDITS(I) ", Grade: " COURSE-GRADE(I).
        END-PERFORM.

        STOP RUN.
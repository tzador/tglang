identification division.
program-id. example-program.

working-storage section.
01 ws-example-var1 pic s9(4)v9(2).
01 ws-example-var2 pic s9(5)v99.
01 ws-example-var3 pic 999.
01 ws-example-table.
    02 ws-example-table-item pic x(10) occurs 10.
01 ws-example-var4 pic x(5) value "HELLO".

procedure division.
display "Program execution beginning.".

perform 10 times
    add 1 to ws-example-var3
    display "Loop iteration: " ws-example-var3
end-perform.

if ws-example-var1 > 100
    add 1 to ws-example-var1
else
    multiply ws-example-var1 by 2
end-if.

compute ws-example-var2 = ws-example-var1 * ws-example-var3.

set ws-example-table-item(1) to "COBOL".
set ws-example-table-item(2) to "is".
set ws-example-table-item(3) to "a".
set ws-example-table-item(4) to "complex".
set ws-example-table-item(5) to "programming".
set ws-example-table-item(6) to "language".
set ws-example-table-item(7) to "but".
set ws-example-table-item(8) to "powerful".
set ws-example-table-item(9) to "to".
set ws-example-table-item(10) to "learn".

perform varying i from 1 by 1 until i > 10
    display "Table item " i ": " ws-example-table-item(i)
end-perform.

display "Final results:".
display "Variable 1: " ws-example-var1.
display "Variable 2: " ws-example-var2.
display "Variable 3: " ws-example-var3.
display "Variable 4: " ws-example-var4.

stop run.
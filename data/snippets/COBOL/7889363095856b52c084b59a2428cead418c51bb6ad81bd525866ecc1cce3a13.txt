IDENTIFICATION DIVISION.                       //IDENTIFICATION DIVISION contains the program name and identifying information
       PROGRAM-ID. SAMPLE-PROGRAM.                    //Defines the name of the program
       ENVIRONMENT DIVISION.                          //Defines the hardware and operating system environment where the program will run
       INPUT-OUTPUT SECTION.                          //Specifies the input and output files that will be used by the program
       FILE-CONTROL.                                  //Specifies the data files and their attributes used in the program
       
       SELECT IN-FILE ASSIGN TO "INPUT.TXT".           //Declares the input file and assigns it to a data-name for referencing
       SELECT OUT-FILE ASSIGN TO "OUTPUT.TXT".         //Declares the output file and assigns it to a data-name for referencing
       
       DATA DIVISION.                                  //Contains the data definitions for the program
       FILE SECTION.                                   //Contains the data descriptions for the files used in the program
       FD IN-FILE                                       //Declares the input file description
          RECORDING MODE IS F                        //.FD is used to describe attributes of a file
          LABEL RECORD IS STANDARD.                    //Specifies that the file is formatted with fixed-length records
       01 IN-REC.                                       //Defines the record structure for the input file
          05 IN-NAME PIC X(20).                         //Specifies the first field in the record as a string of 20 characters
          05 IN-AGE PIC 99.                             //Specifies the second field in the record as a two-digit numeric value
       
       FD OUT-FILE                                      //Declares the output file description
          RECORDING MODE IS F                        //.FD is used to describe attributes of a file
          LABEL RECORD IS STANDARD.                    //Specifies that the file is formatted with fixed-length records
       01 OUT-REC.                                      //Defines the record structure for the output file
          05 OUT-NAME PIC X(20).                        //Specifies the first field in the record as a string of 20 characters
          05 OUT-AGE PIC 99.                            //Specifies the second field in the record as a two-digit numeric value
          05 OUT-RESULT PIC X(20).                      //Specifies the third field in the record as a string of 20 characters
       
       WORKING-STORAGE SECTION.                        //Contains data items used temporarily in the program
       01 WS-NAME-IN PIC X(20).                         //Defines a temporary variable for holding the name from input file
       01 WS-AGE-IN PIC 99.                             //Defines a temporary variable for holding the age from input file
       01 WS-RESULT PIC X(20).                          //Defines a temporary variable for holding the result of processing
       
       PROCEDURE DIVISION.                              //Contains the actual instructions for the program
       00-MAIN.                                         //Entry point of the program
          OPEN INPUT IN-FILE                           //Opens the input file for reading
          OPEN OUTPUT OUT-FILE                         //Opens the output file for writing
          READ IN-FILE INTO IN-REC                      //Reads the first record from input file
          PERFORM UNTIL IN-REC = SPACE                  //Start of loop for processing records
             MOVE IN-NAME TO WS-NAME-IN                 //Moves the name from input record to working storage variable
             MOVE IN-AGE TO WS-AGE-IN                   //Moves the age from input record to working storage variable
             PERFORM 10-CHECK-AGE                       //Executes the 10-CHECK-AGE section
             MOVE WS-NAME-IN TO OUT-NAME                //Moves the name from working storage variable to output record
             MOVE WS-AGE-IN TO OUT-AGE                  //Moves the age from working storage variable to output record
             MOVE WS-RESULT TO OUT-RESULT               //Moves the result from working storage variable to output record
             WRITE OUT-REC                              //Writes the output record into output file
             READ IN-FILE INTO IN-REC                   //Reads the next record from input file
          END-PERFORM.
          CLOSE IN-FILE                                 //Closes the input file
          CLOSE OUT-FILE                                //Closes the output file
          STOP RUN.                                     //End of program
       
       10-CHECK-AGE.                                     //Section for processing age
          IF WS-AGE-IN >= 18                            //Checks if age is 18 or above
             MOVE "ELIGIBLE FOR VOTING" TO WS-RESULT    //Sets the result to "ELIGIBLE FOR VOTING"
          ELSE                                          //If age is below 18
             MOVE "NOT ELIGIBLE FOR VOTING" TO WS-RESULT//Sets the result to "NOT ELIGIBLE FOR VOTING"
          END-IF.
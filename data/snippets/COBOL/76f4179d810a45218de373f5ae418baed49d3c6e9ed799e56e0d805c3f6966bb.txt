IDENTIFICATION DIVISION.                         //Division that provides program identification
PROGRAM-ID. MYPROGRAM.                            //Program name
DATA DIVISION.                                   //Division for declaring data
    WORKING-STORAGE SECTION.                     //Declares variables and constants used in program logic
        01 MY-NUMBER PIC 9(5).                    //Declares a variable called MY-NUMBER with a length of 5 digits
        01 MY-STRING PIC X(20).                   //Declares a variable called MY-STRING with a length of 20 characters
        01 MY-FLAG PIC X.                         //Declares a variable called MY-FLAG with a length of 1 character
        01 MY-TABLE.                              //Defines a table
            05 TABLE-ITEM OCCURS 10 TIMES         //Creates 10 occurrences of a 2-level table
                DEPENDING ON MY-NUMBER.
            10 TABLE-ID PIC 9(3).                 //First level of table, contains 3-digit values
            10 TABLE-NAME PIC X(10).              //Second level of table, contains 10 characters
PROCEDURE DIVISION.                               //Division for writing program logic
    DISPLAY 'Please enter a number: '.            //Displays a message to prompt user input
    ACCEPT MY-NUMBER.                             //Accepts user input and saves it in MY-NUMBER variable
    IF MY-NUMBER < 10000                          //Checks if MY-NUMBER is less than 10,000
        ADD 1 TO MY-NUMBER                        //If condition is true, adds 1 to MY-NUMBER
        MOVE 'FLAG' TO MY-FLAG                    //Moves 'FLAG' into MY-FLAG variable
    ELSE                                          //If condition is false
        PERFORM DISPLAY-TABLE THRU DISPLAY-END    //Invokes DISPLAY-TABLE subroutine
    END-IF.
    STOP RUN.                                     //Stops the program execution
DISPLAY-TABLE SECTION.                            //Subroutine for displaying table
    SET MY-STRING TO 'Table: '.                    //Sets the initial value for MY-STRING variable
    PERFORM VARYING MY-NUMBER FROM 1 BY 1          //Loops through MY-NUMBER variable from 1 to 10, incrementing by 1 each time
        DISPLAY MY-TABLE(TABLE-ITEM)               //Displays the values in the table at the current iteration
        MOVE TABLE-NAME TO MY-STRING               //Moves the current value of TABLE-NAME into MY-STRING variable
        DISPLAY MY-STRING.                        //Displays the updated value of MY-STRING
DISPLAY-END SECTION.                              //End of subroutine for displaying table
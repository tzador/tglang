IDENTIFICATION DIVISION.        * This division identifies the program.
       PROGRAM-ID. MULTIPLY.           * This is the program's name.
       ENVIRONMENT DIVISION.           * This division specifies the environment configuration.
       INPUT-OUTPUT SECTION.           * This section defines the input and output files.
       FILE-CONTROL.                   * This section manages the files used in the program.
          SELECT INPUT-FILE ASSIGN TO "input.txt".    * Defines the input file.
          SELECT OUTPUT-FILE ASSIGN TO "output.txt".  * Defines the output file.
       DATA DIVISION.                  * This division defines program data.
       FILE SECTION.
       FD INPUT-FILE.
          01 INPUT-RECORD.             * Defines the structure of the input file record.
             05 INPUT-NUM1   PIC 9(5). * Defines the first input number.
             05 FILLER       PIC X.     * Defines a filler character.
             05 INPUT-NUM2   PIC 9(5). * Defines the second input number.
       FD OUTPUT-FILE.
          01 OUTPUT-RECORD.            * Defines the structure of the output file record.
             05 OUTPUT-NUM   PIC 9(10).               * Defines the output multiplied number.
          WORKING-STORAGE SECTION.
          01 TOTAL                  PIC S9(10)V99.    * Defines a variable to hold the multiplied result.
          01 EOF-SWITCH             PIC X VALUE 'N'.  * Defines a switch to indicate end of file.
       PROCEDURE DIVISION.             * This division contains the program's logic.
       OPEN INPUT INPUT-FILE.          * Opens the input file for reading.
       OPEN OUTPUT OUTPUT-FILE.        * Opens the output file for writing.
       PERFORM UNTIL EOF-SWITCH = 'Y'.  * Loops until end of file is reached.
          READ INPUT-FILE INTO INPUT-RECORD * Reads a record from the input file.
              AT END MOVE 'Y' TO EOF-SWITCH. * Checks for end of file and updates the switch.
          MULTIPLY INPUT-NUM1 BY INPUT-NUM2 GIVING TOTAL. * Multiplies the two input numbers.
          MOVE TOTAL TO OUTPUT-NUM.     * Moves the result to the output record.
          WRITE OUTPUT-RECORD.          * Writes the output record to the output file.
       END-PERFORM.
       CLOSE INPUT-FILE.               * Closes the input file.
       CLOSE OUTPUT-FILE.              * Closes the output file.
       STOP RUN.                       * Stops the program execution.
Identification Division.                            * This is the identification division
Program-ID. SnippetGenerator.                        * Program name is SnippetGenerator
* Comment line 1
* Comment line 2
Environment Division.                               * This is the environment division
Data Division.                                      * This is the data division

Working-Storage Section.                            * Variables declared in this section are accessible throughout the program
    01 Input-Data.                                   * Declares a group item containing input data
        05 Input-Name                 PIC X(20).      * First element in Input-Data is Input-Name which can hold 20 characters
        05 Input-Age                  PIC 99.         * Second element is Input-Age which can hold 2 digits
        05 Input-Salary               PIC 9(5)V99.    * Third element is Input-Salary which can hold 5 digits and 2 decimal places
        
    01 Output-Data.                                  * Declares a group item containing output data
        05 Output-Name                PIC X(20).     * First element in Output-Data is Output-Name which can hold 20 characters
        05 Output-Age                 PIC 99.        * Second element is Output-Age which can hold 2 digits
        05 Output-Salary              PIC 9(5)V99.   * Third element is Output-Salary which can hold 5 digits and 2 decimal places
        05 Output-Status              PIC 9(3).      * Fourth element is Output-Status which can hold 3 digits

Procedure Division.                                 * This is the procedure division
    Display "Enter name:" with no advancing.         * Displays message without moving to the next line
    Accept Input-Name.                              * Accepts name input from the user
    Display "Enter age:" with no advancing.
    Accept Input-Age.
    Display "Enter salary:" with no advancing.
    Accept Input-Salary.
    
    Compute Output-Name = Input-Name.                * Copies Input-Name into Output-Name
    Compute Output-Age = Input-Age.                  * Copies Input-Age into Output-Age
    Compute Output-Salary = Input-Salary * 1.1.      * Multiplies Input-Salary by 1.1 (10% increase) and copies the result into Output-Salary
    Compute Output-Status = 200.                     * Sets Output-Status to 200
    
    Display "Name: " Output-Name                      * Displays output data below
    Display "Age: " Output-Age
    Display "Salary: " Output-Salary
    Display "Status: " Output-Status
    	        
Stop Run.                                           * Stops the program
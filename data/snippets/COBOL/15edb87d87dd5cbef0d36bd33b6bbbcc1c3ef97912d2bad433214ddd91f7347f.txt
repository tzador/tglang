Identification Division.               // Identifies the beginning of the COBOL program
Program-ID. LONG-AND-COMPLEX.           // Assigns an ID to the program
Data Division.                         // Contains the program's data
Working-Storage Section.                 // Declares variables to be used in the program

01 INPUT-COPY-RECORD.                  // Defines a record in the input file
    05 INPUT-NAME       PIC X(20).      // Defines a field for name with a maximum length of 20 characters
    05 INPUT-AGE        PIC 9(2).       // Defines a field for age with a maximum length of 2 digits
    05 INPUT-ADDRESS    PIC X(50).      // Defines a field for address with a maximum length of 50 characters

01 OUTPUT-COPY-RECORD.                 // Defines a record in the output file
    05 OUTPUT-NAME       PIC X(30).     // Defines a field for name with a maximum length of 30 characters
    05 OUTPUT-AGE        PIC 9(3).      // Defines a field for age with a maximum length of 3 digits
    05 OUTPUT-ADDRESS    PIC X(60).     // Defines a field for address with a maximum length of 60 characters

Working-Storage Section.
    01 TOTAL-AGE         PIC 9(4).      // Defines a field to store the total age
    01 COUNT             PIC 9(3).      // Defines a field to store the count of records processed

Procedure Division.
    OPEN INPUT INPUT-COPY.             // Opens the input file
    OPEN OUTPUT OUTPUT-COPY.           // Opens the output file
    READ INPUT-COPY INTO INPUT-COPY-RECORD.     // Reads the first record from the input file
    PERFORM UNTIL INPUT-COPY = END-OF-FILE.      // Executes the following loop until the end of the input file
        ADD INPUT-AGE TO TOTAL-AGE.      // Adds the age from the input record to the total age
        ADD 1 TO COUNT.                  // Increments the count by 1
        MOVE INPUT-NAME TO OUTPUT-NAME.  // Moves the name from the input record to the output record
        MOVE INPUT-AGE TO OUTPUT-AGE.    // Moves the age from the input record to the output record
        MOVE INPUT-ADDRESS TO OUTPUT-ADDRESS.  // Moves the address from the input record to the output record
        WRITE OUTPUT-COPY-RECORD.              // Writes the output record to the output file
        READ INPUT-COPY INTO INPUT-COPY-RECORD. // Reads the next record from the input file
    END-PERFORM.

    COMPUTE AVERAGE-AGE = TOTAL-AGE / COUNT.   // Calculates the average age by dividing the total age by the count
    DISPLAY 'Average age: ' AVERAGE-AGE.       // Displays the average age on the screen
    CLOSE INPUT-COPY.                          // Closes the input file
    CLOSE OUTPUT-COPY.                         // Closes the output file
    STOP RUN.                                  // Terminates the program
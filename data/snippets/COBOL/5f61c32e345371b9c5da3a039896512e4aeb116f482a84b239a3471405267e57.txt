IDENTIFICATION DIVISION.                        // Specifies the name of the program
       PROGRAM-ID. GENERATE-CODE-SNIPPET.               // Identifies the program name
       
       ENVIRONMENT DIVISION.                           // Describes the computer environment
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
             SELECT INPUT-FILE ASSIGN TO "input.txt".   // Specifies the input file name
             SELECT OUTPUT-FILE ASSIGN TO "output.txt". // Specifies the output file name

       DATA DIVISION.                                  // Declares data fields and structures
       FILE SECTION.
       FD INPUT-FILE RECORDING MODE F.                  // Declares the input file
       01 INPUT-RECORD.
          05 INPUT-ID PIC X(10).                        // Declares field for input ID
          05 INPUT-NAME PIC X(20).                      // Declares field for input name

       FD OUTPUT-FILE RECORDING MODE F.                 // Declares the output file
       01 OUTPUT-RECORD.
          05 OUTPUT-ID PIC X(10).                       // Declares field for output ID
          05 OUTPUT-NAME PIC X(20).                     // Declares field for output name

       WORKING-STORAGE SECTION.                         // Declares working storage fields
       01 COUNT PIC 99 VALUE 0.                         // Declares a counter variable
       01 TEMP PIC 99 VALUE 0.                          // Declares a temporary variable

       PROCEDURE DIVISION.                              // Contains the actual program logic
       000-MAIN.
            OPEN INPUT INPUT-FILE                      // Opens the input file
                 OUTPUT OUTPUT-FILE.                   // Opens the output file

       100-READ.                                        // Read input file records
            READ INPUT-FILE INTO INPUT-RECORD           // Reads input record
               AT END MOVE "YES" TO EOF-INDICATOR       // Sets end-of-file indicator if no more records
               NOT AT END MOVE "NO" TO EOF-INDICATOR.   // Otherwise, sets indicator to "no"

       200-PROCESS.                                     // Processes the input records
       IF EOF-INDICATOR = "NO"                          // Checks if end-of-file has been reached
          ADD 1 TO COUNT.                               // If not, increments the counter
          DISPLAY "Record number " COUNT " read and processed". // Displays current record number
          MOVE INPUT-ID TO OUTPUT-ID.                   // Moves input ID to output ID field
          MOVE INPUT-NAME TO OUTPUT-NAME.               // Moves input name to output name field
          WRITE OUTPUT-RECORD.                          // Writes output record to file
          IF COUNT = 10                                 // Checks if 10 records have been processed
             MOVE "YES" TO EOF-INDICATOR.               // If so, sets end-of-file indicator to "yes"
             CLOSE INPUT-FILE OUTPUT-FILE.              // Closes input and output files
             STOP RUN.                                  // Terminates the program
          END-IF.
       END-IF.
       GO TO 100-READ.                                  // Continues reading and processing records

       PROGRAM-END.
IDENTIFICATION DIVISION.
PROGRAM-ID. SAMPLE-PROGRAM.
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
SELECT STUDENT-FILE ASSIGN TO 'INPUT.TXT'.
SELECT GRADE-FILE ASSIGN TO 'OUTPUT.TXT'.

DATA DIVISION.
FILE SECTION.
FD STUDENT-FILE.
01 STUDENT-RECORD.
    05 STUDENT-NAME PIC A(30).
    05 STUDENT-ID PIC 9(9).
    05 STUDENT-MAJOR PIC A(20).

FD GRADE-FILE.
01 GRADE-RECORD.
    05 STUDENT-ID PIC 9(9).
    05 GRADE-1 PIC 99.
    05 GRADE-2 PIC 99.
    05 GRADE-3 PIC 99.

WORKING-STORAGE SECTION.
01 TOTAL-GRADES PIC 999.
01 GRADE-AVERAGE PIC 99V9.

PROCEDURE DIVISION.
MAIN-LOGIC.
    OPEN INPUT STUDENT-FILE, GRADE-FILE.
    PERFORM UNTIL SQLCODE > 0
        READ STUDENT-FILE
            AT END SET EOF TO TRUE
        END-READ

        IF NOT EOF
            READ GRADE-FILE
                AT END SET SQLCODE TO 100
            END-READ

            IF SQLCODE = 0
                ADD GRADE-1, GRADE-2, GRADE-3 TO TOTAL-GRADES
                COMPUTE GRADE-AVERAGE = TOTAL-GRADES / 3
                DISPLAY 'NAME: ' STUDENT-NAME
                DISPLAY 'ID: ' STUDENT-ID
                DISPLAY 'AVERAGE: ' GRADE-AVERAGE
            END-IF
        END-IF
    END-PERFORM.

    CLOSE STUDENT-FILE, GRADE-FILE.
    STOP RUN.
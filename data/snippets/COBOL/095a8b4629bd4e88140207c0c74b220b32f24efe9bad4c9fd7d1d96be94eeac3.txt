IDENTIFICATION DIVISION.
       PROGRAM-ID. SORTFILE.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INPUT-FILE ASSIGN TO DISK
               ORGANIZATION IS LINE SEQUENTIAL.
           SELECT OUTPUT-FILE ASSIGN TO DISK
               ORGANIZATION IS LINE SEQUENTIAL.
       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE.
       01 INPUT-RECORD.
           05 STUDENT-ID PIC 9(5).
           05 STUDENT-NAME PIC X(20).
       FD OUTPUT-FILE.
       01 OUTPUT-RECORD.
           05 SORT-KEY PIC 9(5).
           05 STUDENT-PAYMENT PIC 9(4)V99.
       WORKING-STORAGE SECTION.
       01 SORT-TABLE.
           05 KEY PIC 9(5) OCCURS 100 TIMES.
       01 INDEX PIC 9(3).
       01 TOTAL-AMOUNT PIC 9(5)V99.
       PROCEDURE DIVISION.
       BEGIN.
           OPEN INPUT INPUT-FILE.
           OPEN OUTPUT OUTPUT-FILE.
           PERFORM READ-PARAGRAPH.
           PERFORM SORT-PARAGRAPH.
           PERFORM WRITE-PARAGRAPH.
           CLOSE INPUT-FILE.
           CLOSE OUTPUT-FILE.
           STOP RUN.

       READ-PARAGRAPH.
           PERFORM UNTIL EOF
               READ INPUT-FILE INTO INPUT-RECORD
               AT END MOVE 'Y' TO EOF
               IF NOT EOF
                   COMPUTE INDEX = STUDENT-ID / 1000
                   MOVE STUDENT-PAYMENT TO SORT-TABLE(INDEX)
               END-IF
           END-PERFORM.

       SORT-PARAGRAPH.
           PERFORM VARYING INDEX FROM 1 BY 1 UNTIL INDEX > 100
               MOVE SORT-TABLE(INDEX) TO TOTAL-AMOUNT
               PERFORM VARYING J FROM INDEX + 1 BY 1 UNTIL J > 100
                   IF SORT-TABLE(J) > TOTAL-AMOUNT
                       MOVE SORT-TABLE(J) TO TOTAL-AMOUNT
                       MOVE KEY(J) TO KEY(INDEX)
                       MOVE KEY(INDEX) TO KEY(J)
                   END-IF
               END-PERFORM
           END-PERFORM.

       WRITE-PARAGRAPH.
           PERFORM VARYING INDEX FROM 1 BY 1 UNTIL INDEX > 100
               MOVE KEY(INDEX) TO SORT-KEY
               MOVE TOTAL-AMOUNT TO STUDENT-PAYMENT
               WRITE OUTPUT-RECORD
           END-PERFORM.
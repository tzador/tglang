01 WS-MATCH-COUNT PIC 9(4) VALUE 0.    \\ Declare variable for number of matches found
        01 WS-STRING-LENGTH PIC 9(4) VALUE 0.   \\ Declare variable for length of input string
        01 WS-INDEX PIC 9(4) VALUE 1.           \\ Declare variable for loop index
        01 WS-INPUT-STRING PIC X(80).           \\ Declare variable to hold input string
        01 WS-SEARCH-STRING PIC X(80).          \\ Declare variable to hold search string
        01 WS-OUTPUT-STRING PIC X(80).          \\ Declare variable to hold output string
        
        PERFORM INITIALIZE-INPUT-STRING.
        PERFORM INITIALIZE-SEARCH-STRING.
        PERFORM INITIALIZE-OUTPUT-STRING.
        
        PERFORM UNTIL WS-INDEX > WS-STRING-LENGTH
           PERFORM SEARCH-STRING.
           IF WS-MATCH-COUNT > 0
              PERFORM INSERT-STRING.
              ADD WS-LENGTH-SEARCHSTRING TO WS-INDEX.
           END-IF
           ADD 1 TO WS-INDEX.
        END-PERFORM.
        
        INITIALIZE-INPUT-STRING.
           MOVE 'This is a long input string' TO WS-INPUT-STRING.
           COMPUTE WS-STRING-LENGTH = FUNCTION LENGTH (WS-INPUT-STRING).
        
        INITIALIZE-SEARCH-STRING.
           MOVE 'long' TO WS-SEARCH-STRING.
           COMPUTE WS-LENGTH-SEARCHSTRING = FUNCTION LENGTH (WS-SEARCH-STRING).
        
        INITIALIZE-OUTPUT-STRING.
           MOVE SPACES TO WS-OUTPUT-STRING.
        
        SEARCH-STRING.
           STRING WS-INPUT-STRING(WS-INDEX:WS-LENGTH-SEARCHSTRING)
           DELIMITED BY SIZE
              'long'
           DELIMITED BY SIZE
           INTO WS-OUTPUT-STRING(WS-INDEX:WS-LENGTH-SEARCHSTRING)
              WITH POINTER WS-POINTER-OUTPUT-STRING
           ON OVERFLOW
              CONTINUE.
       
        INSERT-STRING.
           STRING 'short'
           DELIMITED BY SIZE
              INTO WS-OUTPUT-STRING(WS-INDEX:WS-LENGTH-SEARCHSTRING)
                 WITH POINTER WS-POINTER-OUTPUT-STRING.
        
        DISPLAY 'The output string is: ' WS-OUTPUT-STRING.
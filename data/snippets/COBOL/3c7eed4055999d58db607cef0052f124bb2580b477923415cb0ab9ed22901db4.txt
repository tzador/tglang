IDENTIFICATION DIVISION.             // start of program identification division
PROGRAM-ID. COBOL-SNIPPET.           // program name

ENVIRONMENT DIVISION.                 // start of environment division
INPUT-OUTPUT SECTION.                 // input-output section for handling data 

FILE-CONTROL.                         // specify input and output files
    SELECT INPUT-FILE ASSIGN TO "input.txt".   // specify input file
    SELECT OUTPUT-FILE ASSIGN TO "output.txt". // specify output file

DATA DIVISION.                             // start of data division
FILE SECTION.                              // data declaration section

FD IN-FILE.                                // file description for input file
01 IN-RECORD.                              // record structure for input file
    02 IN-NAME      PIC X(30).             // field for input name
    02 IN-AGE       PIC 99.               // field for input age
    02 IN-HEIGHT    PIC 9(3).             // field for input height

FD OUT-FILE.                               // file description for output file
01 OUT-RECORD.                             // record structure for output file
    02 OUT-NAME     PIC X(30).             // field for output name
    02 OUT-AGE      PIC 99.                // field for output age
    02 OUT-HEIGHT   PIC 9(3).              // field for output height
    02 OUT-WORK-YEARS PIC 99.              // additional field for output work years

WORKING-STORAGE SECTION.                  // define working storage variables
01 WS-WORK-YEARS       PIC 99.            // variable to hold calculated work years
01 WS-COUNTER          PIC 99 VALUE 0.    // variable to use as a counter
01 WS-TOTAL-WORK-YEARS PIC 99 VALUE 0.    // variable to hold the total work years

PROCEDURE DIVISION.                       // start of procedure division
    OPEN INPUT INPUT-FILE                // open input file
    OPEN OUTPUT OUTPUT-FILE.             // open output file

    PERFORM READ-FILE                    // perform read operation on input file
        UNTIL IN-FILE-STATUS = "EOF"     // until end of file is reached

    PERFORM CALCULATE-WORK-YEARS.        // perform calculation on input data

    PERFORM WRITE-FILE                   // perform write operation on output file
        UNTIL WS-COUNTER = 3             // until 3 records are written

    CLOSE INPUT-FILE                    // close input file
    CLOSE OUTPUT-FILE.                 // close output file

READ-FILE.                               // read operation on input file
    READ INPUT-FILE INTO IN-RECORD       // read input file contents into record
        AT END                           // if end of file reached
            MOVE "EOF" TO IN-FILE-STATUS // set end of file status to EOF

CALCULATE-WORK-YEARS.                   // calculate work years based on age
    COMPUTE WS-WORK-YEARS = 60 - IN-AGE // subtract age from retirement age of 60
    ADD WS-WORK-YEARS TO WS-TOTAL-WORK-YEARS // add calculated work years to total
    ADD 1 TO WS-COUNTER.                 // increment counter variable

WRITE-FILE.                              // write operation on output file
    MOVE IN-NAME TO OUT-NAME             // move input name to output name
    MOVE IN-AGE TO OUT-AGE               // move input age to output age
    MOVE IN-HEIGHT TO OUT-HEIGHT         // move input height to output height
    MOVE WS-WORK-YEARS TO OUT-WORK-YEARS // move calculated work years to output
IDENTIFICATION DIVISION.                   /// This line identifies the division of the program.
      PROGRAM-ID. HELLO-WORLD.                   /// This line declares the program name as "HELLO-WORLD".
      ENVIRONMENT DIVISION.                      /// This line declares the environment division.
      INPUT-OUTPUT SECTION.   
      FD INPUT-FILE.                             /// This line declares the file descriptor "INPUT-FILE".
      COPY "STDIN"                               /// This line copies the standard input file.
          FILE-CONTROL.
      WORKING-STORAGE SECTION.                   /// This line declares the working storage section of the program.
          01 COUNT PIC 9(3) VALUE 0.             /// This line declares a variable COUNT with initial value 0.
          01 INPUT-RECORD.                       /// This line declares the record structure of the input file.
              05  NAME    PIC X(20).             /// This line declares a field for name in the record with 20 characters.
              05  AGE     PIC 99.                /// This line declares a field for age in the record with 2 digits.
          01 OUTPUT-RECORD.                      /// This line declares the record structure for output.
              05  OUTPUT-LINE    PIC X(50).      /// This line declares a field for output line with 50 characters.
      PROCEDURE DIVISION.                        /// This line declares the procedure division of the program.
          OPEN INPUT INPUT-FILE.                 /// This line opens the input file for reading.
          PERFORM UNTIL EOF(INPUT-FILE)          /// This line starts a loop until End-Of-File condition is met.
              READ INPUT-FILE                    /// This line reads a record from the input file.
                  AT END                         /// This line checks for End-Of-File condition.
                      SET EOF(INPUT-FILE) TO TRUE /// This line sets the End-Of-File flag to TRUE.
                  NOT AT END                     /// This line is executed if the End-Of-File condition is not met.
                      ADD 1 TO COUNT             /// This line increments the value of COUNT by 1.
                      MOVE NAME TO OUTPUT-LINE   /// This line moves the value of NAME field from input record to output line.
                      MOVE AGE TO OUTPUT-LINE(25) /// This line moves the value of AGE field from input record to output line at position 25.
                      DISPLAY OUTPUT-LINE         /// This line displays the output line on the screen.
              END-READ.
          END-PERFORM.                           /// This line ends the loop.
          CLOSE INPUT-FILE.                      /// This line closes the input file after reading.
          DISPLAY 'Total number of records: ' COUNT.  /// This line displays the total number of records read from the input file.
          STOP RUN.                              /// This line stops the execution of the program.
IDENTIFICATION DIVISION.                            * This is the identification division, where we define the program.
      PROGRAM-ID. BANKSYS.                                * The program id, which is used in the PROCEDURE DIVISION.

      DATA DIVISION.                                      * This is the data division, where we define our data and variables.
      FILE SECTION.                                       * The file section, where we define the files our program will use.
      FD INPUT-FILE.                                      * File description, used to specify file attributes.
      01 INPUT-REC.                                       * Record description, used to define the structure of a record.
         05 ACCT-NUM        PIC 9(5).                      * Account number, defined as a 5-digit numeric field.
         05 CUSTOMER-NAME   PIC X(25).                     * Customer name, defined as a 25-character alphanumeric field.
         05 BALANCE-AMT     PIC S9(7)V99.                  * Account balance, defined as a signed numeric field with 2 decimal places.
      FD OUTPUT-FILE.                                     * File description for output file.
      01 OUTPUT-REC.                                      * Record description for output file.
         05 ACCT-NUM        PIC 9(5).                      * Account number, defined same as input file.
         05 CUSTOMER-NAME   PIC X(25).                     * Customer name, defined same as input file.
         05 NEW-BALANCE-AMT PIC S9(7)V99.                  * New account balance, defined same as input file.

      WORKING-STORAGE SECTION.                             * This is the working-storage section, where temporary variables can be defined.
      01 ERROR-MSG         PIC X(40).                      * Error message, defined as a 40-character alphanumeric field.

      PROCEDURE DIVISION.                                  * This is the procedure division, where the logic of the program is written.
      000-MAIN.                                            * Main procedure, as indicated by the section number.
          OPEN INPUT INPUT-FILE                           * Open the input file for reading.
          OPEN OUTPUT OUTPUT-FILE                         * Open the output file for writing.
          PERFORM UNTIL END-OF-FILE                       * Loop until we reach the end of the input file.
             READ INPUT-FILE INTO INPUT-REC               * Read a record from input file into record structure.
             IF ACCT-NUM > 99999                          * Condition to check for valid account number.
                 MOVE 'Invalid account number' TO ERROR-MSG  * If condition is true, store error message in variable.
                 DISPLAY ERROR-MSG                           * Display error message.
             ELSE                                          * If condition is false,
                 ADD 100 TO BALANCE-AMT                    * Add 100 to original balance.
                 MOVE ACCT-NUM TO OUTPUT-REC(1:5)          * Move account number to output record.
                 MOVE CUSTOMER-NAME TO OUTPUT-REC(6:25)    * Move customer name to output record.
                 MOVE BALANCE-AMT TO NEW-BALANCE-AMT       * Move new balance to output record.
                 WRITE OUTPUT-REC                          * Write output record to output file.
             END-IF.
          END-PERFORM.
          CLOSE INPUT-FILE                                 * Close input file.
          CLOSE OUTPUT-FILE                                * Close output file.
          STOP RUN.                                        * End the program.

      EXIT.                                                * Exit procedure, used to handle errors.
          DISPLAY ERROR-MSG.                               * Display error message.
          PERFORM 000-MAIN.                                * Go back to main procedure.
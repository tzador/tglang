IDENTIFICATION DIVISION.
PROGRAM-ID. MAIN.

DATA DIVISION.
WORKING-STORAGE SECTION.

01 STUDENT-TABLE.
   05 STUDENT-RECORD OCCURS 5 TIMES INDEXED BY I.
      10 STUDENT-ID PIC X(10).
      10 STUDENT-NAME PIC X(20).
      10 STUDENT-GRADE PIC 9(3).

01 TOTAL-STUDENTS PIC 9(3) VALUE 5.
01 COUNTER PIC 99 VALUE ZEROS.

PROCEDURE DIVISION.
MAIN-PARA.

PERFORM VARYING I FROM 1 BY 1 UNTIL I > TOTAL-STUDENTS
   DISPLAY "Enter Student ID:" WITH CONVERSION
   ACCEPT STUDENT-TABLE(I).STUDENT-ID
   DISPLAY "Enter Student Name:" WITH CONVERSION
   ACCEPT STUDENT-TABLE(I).STUDENT-NAME
   DISPLAY "Enter Student Grade:" WITH CONVERSION
   ACCEPT STUDENT-TABLE(I).STUDENT-GRADE
END-PERFORM.

DISPLAY "Student Table" WITH CONVERSION
PERFORM VARYING I FROM 1 BY 1 UNTIL I > TOTAL-STUDENTS
   DISPLAY "Student ID: " STUDENT-TABLE(I).STUDENT-ID
   DISPLAY "Student Name: " STUDENT-TABLE(I).STUDENT-NAME
   DISPLAY "Student Grade: " STUDENT-TABLE(I).STUDENT-GRADE
END-PERFORM.

COMPUTE COUNTER = 1
PERFORM VARYING I FROM 1 BY 1 UNTIL I > TOTAL-STUDENTS
   IF STUDENT-TABLE(I).STUDENT-GRADE >= 80
      DISPLAY "Student ID: " STUDENT-TABLE(I).STUDENT-ID
      DISPLAY "Student Name: " STUDENT-TABLE(I).STUDENT-NAME
      COMPUTE COUNTER = COUNTER + 1
   END-IF
END-PERFORM.

DISPLAY "Total number of students with a grade above 80: " COUNTER WITH CONVERSION.

STOP RUN.
IDENTIFICATION DIVISION.
PROGRAM-ID. SORT-EXAMPLE.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT INPUT-FILE ASSIGN TO 'input_data.dat'
    ORGANIZATION IS LINE SEQUENTIAL.
    SELECT OUTPUT-FILE ASSIGN TO 'output_data.dat'
    ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD INPUT-FILE.
01 INPUT-RECORD.
    02 EMPLOYEE-NAME   PIC X(20).
    02 EMPLOYEE-ID     PIC 9(5).
    02 EMPLOYEE-SALARY PIC 9(7)V99.

FD OUTPUT-FILE.
01 OUTPUT-RECORD.
    02 EMPLOYEE-NAME        PIC X(20).
    02 EMPLOYEE-ID          PIC 9(5).
    02 EMPLOYEE-SALARY      PIC 9(7)V99.
    02 EMPLOYEE-SALARY-WORD PIC X(20).

WORKING-STORAGE SECTION.
01 SORT-CONTROL.
    02 ASCENDING-NAME    PIC X VALUE "A".
    02 ASCENDING-SALARY  PIC X VALUE "A".
    02 DESCENDING-NAME   PIC X VALUE "D".
    02 DESCENDING-SALARY PIC X VALUE "D".
    02 SORT-ORDER        PIC X(2).

01 EOF-SWITCH VALUE "N".
01 BLANK-LINE VALUE " ".
01 TAS-TOTAL PIC 9(7)V99 VALUE ZERO.
01 TEMP-NAME PIC X(20) VALUE SPACES.

01 LT-TEMP-NAME PIC X(20).
01 LT-TEMP-ID PIC 9(5).
01 LT-TEMP-SALARY PIC 9(7)V99.

01 GT-TEMP-NAME PIC X(20).
01 GT-TEMP-ID PIC 9(5).
01 GT-TEMP-SALARY PIC 9(7)V99.

01 TEMP-WORD PIC X(20) VALUE SPACES.
01 ASCENDING-MSG PIC X(30) VALUE "Records sorted in ascending order.".
01 DESCENDING-MSG PIC X(31) VALUE "Records sorted in descending order.".
01 NON-VALID-MSG PIC X(28) VALUE "Invalid sort order. Exiting.".

PROCEDURE DIVISION.
MAIN-PROCEDURE.
    OPEN INPUT INPUT-FILE
         OUTPUT OUTPUT-FILE

    IF SORT-CONTROL = ASCENDING-NAME OR SORT-CONTROL = ASCENDING-SALARY
        PERFORM SORT-RECORDS ASCENDING-ORDER
    ELSE IF SORT-CONTROL = DESCENDING-NAME OR SORT-CONTROL = DESCENDING-SALARY
        PERFORM SORT-RECORDS DESCENDING-ORDER
    ELSE
        DISPLAY NON-VALID-MSG
        MOVE EOF-SWITCH TO TRUE
    END-IF

    DISPLAY BLANK-LINE
    PERFORM DISPLAY-SORT-ORDER
    DISPLAY BLANK-LINE
    MOVE TEMP-NAME TO LT-TEMP-NAME
    MOVE TEMP-NAME TO GT-TEMP-NAME
    PERFORM UNTIL EOF-SWITCH = "Y"
        READ INPUT-FILE
            AT END
                MOVE "Y" TO EOF-SWITCH
            NOT AT END
                PERFORM SORT-TEMP
                MOVE TEMP-NAME TO LT-TEMP-NAME
                MOVE TEMP-NAME TO GT-TEMP-NAME
    END-PERFORM

    CLOSE INPUT-FILE
          OUTPUT-FILE
    PERFORM TOTAL-SALARIES
    DISPLAY BLANK-LINE
    DISPLAY "Final Total Amount of Salaries:"
    Display TAS-TOTAL
    DISPLAY "Program completed successfully."
    STOP RUN.

SORT-RECORDS.
    SORT INPUT-FILE
    ON ASCENDING-NAME ASCENDING-KEY
       DESCENDING-NAME DESCENDING-KEY
       ASCENDING-SALARY ASCENDING-KEY
       DESCENDING-SALARY DESCENDING-KEY
    USING TEMP-NAME, TEMP-ID, TEMP-SALARY
    GIVING OUTPUT-FILE.

DISPLAY-SORT-ORDER.
    IF SORT-CONTROL = ASCENDING-NAME
        DISPLAY ASCENDING-MSG
    ELSE IF SORT-CONTROL = ASCENDING-SALARY
        DISPLAY ASCENDING-MSG
    ELSE IF SORT-CONTROL = DESCENDING-NAME
        DISPLAY DESCENDING-MSG
    ELSE IF SORT-CONTROL = DESCENDING-SALARY
        DISPLAY DESCENDING-MSG
    END-IF.

SORT-TEMP.
    IF TEMP-NAME IS NOT EQUAL TO LT-TEMP-NAME
        IF SORT-CONTROL = ASCENDING-NAME OR SORT-CONTROL = DESCENDING-NAME
            MOVE LT-TEMP-NAME TO TEMP-NAME
            MOVE LT-TEMP-ID TO TEMP-ID
            MOVE LT-TEMP-SALARY TO TEMP-SALARY
        ELSE
            MOVE GT-TEMP-NAME TO TEMP-NAME
            MOVE GT-TEMP-ID TO TEMP-ID
            MOVE GT-TEMP-SALARY TO TEMP-SALARY
        END-IF
    END-IF.

TOTAL-SALARIES.
    PERFORM UNTIL EOF-SWITCH = "Y"
        READ INPUT-FILE
            AT END
                MOVE "Y" TO EOF-SWITCH
            NOT AT END
                MOVE INPUT-RECORD TO TEMP-RECORD
                UNSTRING TEMP-RECORD
                    DELIMITED BY ","
                    INTO TEMP-NAME, TEMP-ID, TEMP-SALARY
                ADD TEMP-SALARY TO TAS-TOTAL
    END-PERFORM.
identification division.
program-id. complex-code.

data division.
working-storage section.
01 variable-one pic 999.
01 variable-two pic 999.
01 variable-three pic 999.
01 variable-four pic x(5) value "HELLO".

procedure division.
    perform 10 times
        add 1 to variable-one
        if variable-one > 5
            subtract 1 from variable-one
        end-if
        multiply variable-one by 2 yielding variable-two
        if variable-two < 10
            add variable-two to variable-three
        else
            subtract variable-two from variable-three
        end-if
    end-perform.
    
    perform varying i from 1 by 1 until i > 5
        if i < 3
            if variable-three < 20
                display "LOOP " i " VARIABLE-ONE: " variable-one " VARIABLE-TWO: " variable-two " VARIABLE-THREE: " variable-three " VARIABLE-FOUR: " variable-four
            end-if
        else
            display "ENDING LOOP"
        end-if
        add 1 to variable-one
        add 2 to variable-two
        compute variable-four = variable-four & "(" & variable-one & ")" & "(" & variable-two & ")".
    end-perform.
    
    stop run.
    
    10 continue.
        compute variable-four = variable-four & "(" & variable-one & ")".
        add 1 to variable-one.
    about-computation.
        display "Performing computation" variable-one "times."
    end-procedure.
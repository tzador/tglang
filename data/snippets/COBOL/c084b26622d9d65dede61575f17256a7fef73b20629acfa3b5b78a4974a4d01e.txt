IDENTIFICATION DIVISION.                       * identifies division of program
PROGRAM-ID. myprogram.                          * declares program name
DATA DIVISION.                                  * starts data division
WORKING-STORAGE SECTION.                        * declares variables
01 STUDENT-RECORD.                              * declares record data structure for student records
   05 STUDENT-NAME PIC X(20).                    * defines name field as 20 characters
   05 STUDENT-ID PIC 9(9).                       * defines ID field as 9 digits
   05 COURSE-NAME PIC X(15).                     * defines course name field as 15 characters
   05 COURSE-GRADE PIC 9(3).                     * defines grade field as 3 digits
   05 COURSE-CREDITS PIC 9(1).                   * defines credits field as 1 digit
01 CLASS-TOTALS.                                 * declares record data structure for class totals
   05 TOTAL-STUDENTS PIC 9(3).                   * defines total students field as 3 digits
   05 COURSE-AVERAGE PIC 999V99.                 * defines course average field as 5 digits with 2 decimal places
   05 CREDITS-EARNED PIC 9(2).                   * defines credits earned field as 2 digits
   05 CREDITS-REQUIRED PIC 9(2).                 * defines credits required field as 2 digits
01 COURSES.                                      * declares record data structure for course names
   05 COURSE-NAME-ARRAY OCCURS 10 TIMES.         * defines array of 10 course names
      10 COURSE PIC X(15).                       * defines course name field as 15 characters
01 STUDENT-TABLE.                                * declares table for student records
   05 STUDENT-ARRAY OCCURS 20 TIMES.             * defines array of 20 student records
      10 STUDENT-RECORD-LINKAGE.
         15 STUDENT-NAME-REF POINTER.            * defines reference for student name field
         15 STUDENT-ID-REF POINTER.              * defines reference for student ID field
         15 COURSE-NAME-REF POINTER.             * defines reference for course name field
         15 COURSE-GRADE-REF POINTER.            * defines reference for grade field
         15 COURSE-CREDITS-REF POINTER.          * defines reference for credits field
01 COURSE-TABLE.                                 * declares table for class totals
   05 COURSE-TOTALS OCCURS 10 TIMES.             * defines array of 10 class totals
      10 CLASS-TOTALS-LINKAGE.
         15 TOTAL-STUDENTS-REF POINTER.          * defines reference for total students field
         15 COURSE-AVERAGE-REF POINTER.          * defines reference for course average field
         15 CREDITS-EARNED-REF POINTER.          * defines reference for credits earned field
         15 CREDITS-REQUIRED-REF POINTER.        * defines reference for credits required field
PROCEDURE DIVISION.                              * starts procedure division
MAIN-PROGRAM.                                    * main program code
   PERFORM INITIALIZE-TABLES.                    * calls initialize tables section
   PERFORM READ-STUDENT-RECORDS.                 * calls read student records section
   PERFORM CALCULATE-TOTALS.                     * calls calculate totals section
   PERFORM DISPLAY-TABLES.                       * calls display tables section
   STOP RUN.                                     * stops program execution
INITIALIZE-TABLES.                               * initialize tables section
   MOVE SPACES TO STUDENT-TABLE.                 * clears student table
   MOVE SPACES TO COURSE-TABLE.                  * clears course table
READ-STUDENT-RECORDS.                            * read student records section
   READ STUDENT-RECORD                           * reads first student record
      AT END                                     * if end of file
         GO TO CALCULATE-TOTALS.                 * jump to calculate totals section
   END-READ.                                     * end read statement
   PERFORM DISPLAY-STUDENT-RECORD.               * calls display student record section
   PERFORM PROCESS-COURSE.                       * calls process course section
   GO TO READ-STUDENT-RECORDS.                   * go back to read next student record
CALCULATE-TOTALS.                                * calculate totals section
   PERFORM CALCULATE-CLASS-TOTALS.               * calls calculate class totals section
   PERFORM CALCULATE-COURSE-TOTALS.              * calls calculate course totals section
DISPLAY-TABLES.                                  * display tables section
   PERFORM DISPLAY-COURSE-TABLE.                 * calls display course table section
   PERFORM DISPLAY-STUDENT-TABLE.                * calls display student table section
DISPLAY-STUDENT-RECORD.                          * display student record section
   DISPLAY "Student Name:"                       * displays student name prompt
   MOVE STUDENT-NAME-REF TO STUDENT-NAME.         * moves student name from reference to variable
   DISPLAY STUDENT-NAME.                         * displays student name
   DISPLAY "Student ID:"                         * displays student ID prompt
   MOVE STUDENT-ID-REF TO STUDENT-ID.             * moves student ID from reference to variable
   DISPLAY STUDENT-ID.                           * displays student ID
PROCESS-COURSE.                                  * process course section
   MOVE COURSE-NAME-REF IN COURSES TO COURSE.     * moves course name from reference in courses to variable
   DISPLAY "Enter grade for " COURSE ":"         * displays grade prompt for specific course
   ACCEPT COURSE-GRADE.                          * accepts user input for grade
   MOVE COURSE-GRADE TO COURSE-GRADE-REF.         * moves grade to reference for course grade field
   DISPLAY "Enter credits for " COURSE ":"       * displays credits prompt for specific course
   ACCEPT COURSE-CREDITS.                        * accepts user input for credits
   MOVE COURSE-CREDITS TO COURSE-CREDITS-REF.     * moves credits to reference for course credits field
CALCULATE-CLASS-TOTALS.                          * calculate class totals section
   MOVE ZERO TO CREDITS-EARNED-REF.              * initializes credits earned total variable
   MOVE ZERO TO TOTAL-STUDENTS-REF.              * initializes total students total variable
   PERFORM VARYING I FROM 1 BY 1 UNTIL I=20      * loop through student table
      ADD 1 TO TOTAL-STUDENTS-REF                * add 1 to total students variable
      MOVE 2 TO J                               * initialize inner loop counter
      PERFORM VARYING K FROM 1 BY 1 UNTIL K=10  * loop through course table
         ADD COURSE-CREDITS(K) OF STUDENT-TABLE(I) TO CREDITS-EARNED-REF * add student's credits for specific course to credits earned total
      END-PERFORM                               * end inner loop
   END-PERFORM                                  * end outer loop
   DIVIDE CREDITS-EARNED-REF BY TOTAL-STUDENTS-REF GIVING COURSE-AVERAGE-REF  * calculate average credits per student
CALCULATE-COURSE-TOTALS.                         * calculate course totals section
   MOVE ZERO TO CREDITS-REQUIRED-REF.            * initializes credits required total variable
   PERFORM VARYING K FROM 1 BY 1 UNTIL K=10      * loop through course table
      ADD COURSE-CREDITS(K) OF COURSE-TABLE(K) TO CREDITS-REQUIRED-REF * add course's credits required to credits required total
   END-PERFORM                                  * end loop
DISPLAY-COURSE-TABLE.                            * display course table section
   DISPLAY "Course Name"                         * displays course name header
   DISPLAY "---------------"                     * displays divider
   PERFORM VARYING K FROM 1 BY 1 UNTIL K=10      * loop through course table
      MOVE K TO J                               * initialize inner loop counter
      MOVE COURSE-NAME(K) OF COURSE-TABLE(K) TO COURSE. * move course name to variable
      DISPLAY COURSE                             * display course name
      DISPLAY "Average Credits per Student:" COURSE-AVERAGE(K) * display average credits per student for specific course
      DISPLAY "Total Credits Required:" CREDITS-REQUIRED(K) * display total credits required for specific course
   END-PERFORM                                  * end loop
DISPLAY-STUDENT-TABLE.                           * display student table section
   DISPLAY "Student Name"                        * displays student name header
   DISPLAY "---------------"                     * displays divider
   PERFORM VARYING I FROM 1 BY 1 UNTIL I=20      * loop through student table
      MOVE I TO J                               * initialize inner loop counter
      MOVE STUDENT-NAME-REF TO STUDENT-NAME.     * move student name from reference to variable
      DISPLAY STUDENT-NAME                       * display student name
      DISPLAY "Total Credits Earned:" CREDITS-EARNED-REF * display total credits earned for student
   END-PERFORM                                  * end loop
000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. WELCOME-PROGRAM.
000300 AUTHOR. JOHN SMITH.
000400 DATE-WRITTEN. NOVEMBER 1, 2021.
000500*-------------------------------------------------------*
000600* THE FOLLOWING SECTION IS FOR DECLARATIONS *
000700*-------------------------------------------------------*
000800 ENVIRONMENT DIVISION.
000900 CONFIGURATION SECTION.
001000 SOURCE-COMPUTER. IBM-PC.
001100 OBJECT-COMPUTER. IBM-PC.
001200 DATA DIVISION.
001300 FILE SECTION.
001400 FD INPUT-FILE.
001500 01 INPUT-REPORT.
001600 05 EMPLOYEE-NAME PIC X(20).
001700 05 EMPLOYEE-ID PIC 9(6).
001800 05 EMPLOYEE-DEPT PIC X(10).
001900 WORKING-STORAGE SECTION.
002000 01 TOTAL-SALARY PIC 9(8)V99.
002100 01 AVERAGE-SALARY PIC 9(8)V99.
002200 01 EMPLOYEE-COUNT PIC 9(4).
002300 01 SALARY-HIGHEST PIC 9(8)V99.
002400 01 SALARY-LOWEST PIC 9(8)V99.
002500 01 SALARY-TABLE.
002600 05 SALARY-TABLE-ENTRY OCCURS 1000 TIMES
002700 DEPENDING ON EMPLOYEE-COUNT INDEXED BY I.
002800 10 SALARY PIC 9(8)V99.
002900 01 DEPT-TABLE.
003000 05 DEPT-TABLE-ENTRY OCCURS 10 TIMES.
003100 10 DEPT-NAME PIC X(10).
003200 10 DEPT-TOTAL-SALARY PIC 9(8)V99.
003300 10 DEPT-AVERAGE-SALARY PIC 9(8)V99.
003400 10 DEPT-HIGHEST-SALARY PIC 9(8)V99.
003500 10 DEPT-LOWEST-SALARY PIC 9(8)V99.
003600*-------------------------------------------------------*
003700* THE FOLLOWING SECTION IS FOR PROCEDURE DIVISION *
003800*-------------------------------------------------------*
003900 PROCEDURE DIVISION.
004000 OPEN INPUT INPUT-FILE.
004100 PERFORM READ-INPUT-FILE THRU READ-INPUT-FILE-EXIT
004200   UNTIL EOF = 'Y'.
004300 WRITE OUTPUT-REPORT FROM HEADING-LINE.
004400 SET I TO 1.
004500 PERFORM DISPLAY-TABLE THRU DISPLAY-TABLE-EXIT
004600   UNTIL I > EMPLOYEE-COUNT.
004700*-------------------------------------------------------*
004800 READ-INPUT-FILE.
004900 READ INPUT-FILE INTO INPUT-REPORT.
005000 IF EMPLOYEE-DEPT NOT EQUAL TO ' ' AND
005100   TOTAL-SALARY NOT EQUAL ZERO THEN
005200      MOVE EMPLOYEE-DEPT TO DEPT-TABLE(I).
005300      ADD TOTAL-SALARY TO DEPT-TOTAL-SALARY.
005400      IF TOTAL-SALARY > DEPT-HIGHEST-SALARY THEN
005500         MOVE TOTAL-SALARY TO DEPT-HIGHEST-SALARY.
005600      END-IF.
005700      IF TOTAL-SALARY < DEPT-LOWEST-SALARY THEN
005800         MOVE TOTAL-SALARY TO DEPT-LOWEST-SALARY.
005900      END-IF.
006000      ADD 1 TO I.
006100      ADD 1 TO EMPLOYEE-COUNT.
006200      COMPUTE AVERAGE-SALARY = TOTAL-SALARY / EMPLOYEE-COUNT.
006300 END-READ.
006400*-------------------------------------------------------*
006500 DISPLAY-TABLE.
006600 INITIALIZE DEPT-AVERAGE-SALARY TO 0.
006700 PERFORM CALCULATE-AVERAGE THRU CALCULATE-AVERAGE-EXIT
006800   UNTIL DEPT-TABLE(I) = ' ' OR I > EMPLOYEE-COUNT.
006900 MOVE DEPT-AVERAGE-SALARY TO DEPT-TABLE(I).
007000 ADD 1 TO I.
007100 END-PERFORM.
007200 DISPLAY DETAIL-LINE FROM DETAIL-LINE-C.
007300 IF I = EMPLOYEE-COUNT THEN
007400   DISPLAY SUMMARY-LINE FROM SUMMARY-LINE-C.
007500 END-IF.
007600*-------------------------------------------------------*
007700 CALCULATE-AVERAGE.
007800 COMPUTE DEPT-AVERAGE-SALARY = DEPT-TOTAL-SALARY / EMPLOYEE-COUNT.
007900 END-CALCULATE-AVERAGE.
008000*-------------------------------------------------------*
008100 DISPLAY-TABLE-EXIT.
008200 EXIT.
008300*-------------------------------------------------------*
008400 READ-INPUT-FILE-EXIT.
008500 EXIT.
008600*-------------------------------------------------------*
008700 DISPLAY-EXIT.
008800 EXIT.
008900*-------------------------------------------------------*
009000 CLOSE INPUT-FILE.
009100 STOP RUN.
009200*-------------------------------------------------------*
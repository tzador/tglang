IDENTIFICATION DIVISION.
PROGRAM-ID. INVENTORY-MANAGER.
DATA DIVISION.
WORKING-STORAGE SECTION.
77 ERROR-FLAG PIC 9(2) VALUE 0.
77 ERROR-MESSAGE PIC X(50) VALUE SPACES.
01 ITEM-TABLE.
05 NUM-OF-ITEMS PIC 9(3) VALUE 0.
05 ITEMS OCCURS 20 TIMES.
10 ITEM-CODE PIC 9(4).
10 ITEM-NAME PIC X(20).
10 ITEM-PRICE PIC 9(5)V99.
01 CUSTOMER-INFO.
05 CUSTOMER-NAME PIC X(30).
05 CUSTOMER-ADDRESS PIC X(50).
05 CUSTOMER-PHONE PIC 9(10).
01 ORDER-INFO.
05 ORDER-DATE PIC X(10) VALUE "MM/DD/YYYY".
05 ORDER-AMOUNT PIC 9(5)V99 VALUE 0.
01 MENU-OPTION PIC X(1) VALUE SPACES.
01 CHOICE PIC 99.
01 ERROR-MESSAGE-TABLE.
05 ERROR-MESSAGES OCCURS 10 TIMES.
10 ERROR-NUMBER PIC 9(2).
10 ERROR-MESSAGE-TEXT PIC X(30).
PROCEDURE DIVISION.
1. MAIN-PROGRAM.
    DISPLAY "***** Welcome to the Inventory Manager *****".
    PERFORM UNTIL MENU-OPTION = 'Q'.
        DISPLAY "MENU OPTIONS:".
        DISPLAY "1. VIEW INVENTORY".
        DISPLAY "2. UPDATE INVENTORY".
        DISPLAY "3. PLACE ORDER".
        DISPLAY "4. EXIT".
        DISPLAY "ENTER CHOICE (1-4):".
        ACCEPT CHOICE.
        IF CHOICE < 1 OR CHOICE > 4 THEN
            SET ERROR-FLAG TO 1
            DISPLAY "INVALID CHOICE. PLEASE ENTER A NUMBER FROM 1-4."
            PERFORM ERROR-HANDLER.
        ELSE
            SET MENU-OPTION TO FUNCTION NUMVAL(CHOICE)
            IF MENU-OPTION = '1' THEN
                PERFORM VIEW-INVENTORY.
            ELSE IF MENU-OPTION = '2' THEN
                PERFORM UPDATE-INVENTORY.
            ELSE IF MENU-OPTION = '3' THEN
                PERFORM PLACE-ORDER.
            ELSE
                DISPLAY "***** Thank you for using the Inventory Manager! *****".
        END-IF.
    END-PERFORM.
    STOP RUN.
    
2. VIEW-INVENTORY.
    DISPLAY "RUNNING VIEW-INVENTORY...".
    DISPLAY "NUMBER OF ITEMS: " NUM-OF-ITEMS.
    IF NUM-OF-ITEMS = 0 THEN
        DISPLAY "NO ITEMS IN INVENTORY."
    ELSE
        PERFORM DISPLAY-ITEMS.
    END-IF.
    
3. UPDATE-INVENTORY.
    DISPLAY "RUNNING UPDATE-INVENTORY...".
    DISPLAY "ENTER ITEM CODE: ".
    ACCEPT ITEM-CODE.
    IF ITEM-CODE NOT NUMERIC THEN
        SET ERROR-FLAG TO 1
        DISPLAY "INVALID ITEM CODE. PLEASE ENTER A NUMERIC VALUE."
        PERFORM ERROR-HANDLER.
    ELSE
        SET ITEM-CODE TO FUNCTION NUMVAL(ITEM-CODE)
        DISPLAY "ENTER ITEM NAME: ".
        ACCEPT ITEM-NAME.
        DISPLAY "ENTER ITEM PRICE: ".
        ACCEPT ITEM-PRICE.
        ADD 1 TO NUM-OF-ITEMS.
        MOVE ITEM-CODE TO ITEMS(NUM-OF-ITEMS).ITEM-CODE.
        MOVE ITEM-NAME TO ITEMS(NUM-OF-ITEMS).ITEM-NAME.
        MOVE ITEM-PRICE TO ITEMS(NUM-OF-ITEMS).ITEM-PRICE.
        DISPLAY "***** ITEM UPDATED *****".
    END-IF.
    
4. PLACE-ORDER.
    DISPLAY "RUNNING PLACE-ORDER...".
    DISPLAY "ENTER CUSTOMER NAME: ".
    ACCEPT CUSTOMER-NAME.
    DISPLAY "ENTER CUSTOMER ADDRESS: ".
    ACCEPT CUSTOMER-ADDRESS.
    DISPLAY "ENTER CUSTOMER PHONE: ".
    ACCEPT CUSTOMER-PHONE.
    PERFORM DISPLAY-ITEMS.
    DISPLAY "ENTER ITEM CODE: ".
    ACCEPT ITEM-CODE.
    IF ITEM-CODE NOT NUMERIC THEN
        SET ERROR-FLAG TO 1
        DISPLAY "INVALID ITEM CODE. PLEASE ENTER A NUMERIC VALUE."
        PERFORM ERROR-HANDLER.
    ELSE
        SET ITEM-CODE TO FUNCTION NUMVAL(ITEM-CODE)
        DISPLAY "ENTER QUANTITY: ".
        ACCEPT QUANTITY.
        SET ORDER-AMOUNT TO ITEMS(ITEM-CODE).ITEM-PRICE * QUANTITY.
        DISPLAY "ORDER DATE: " ORDER-DATE.
        DISPLAY "CUSTOMER NAME: " CUSTOMER-NAME.
        DISPLAY "CUSTOMER ADDRESS: " CUSTOMER-ADDRESS.
        DISPLAY "CUSTOMER PHONE: " CUSTOMER-PHONE.
        DISPLAY "ITEM CODE: " ITEM-CODE.
        DISPLAY "QUANTITY: " QUANTITY.
        DISPLAY "TOTAL PRICE: " ORDER-AMOUNT.
        DISPLAY "***** ORDER PLACED *****".
    END-IF.
    
5. DISPLAY-ITEMS.
    DISPLAY "ITEMS IN INVENTORY:".
    DISPLAY "-------------------".
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-OF-ITEMS.
        DISPLAY "ITEM CODE: " ITEMS(I).ITEM-CODE.
        DISPLAY "ITEM NAME: " ITEMS(I).ITEM-NAME.
        DISPLAY "ITEM PRICE: " ITEMS(I).ITEM-PRICE.
        DISPLAY "-------------------".
    END-PERFORM.
    
6. ERROR-HANDLER.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-OF-ERRORS.
        IF ERROR-FLAG = ERROR-MESSAGES(I).ERROR-NUMBER THEN
            MOVE ERROR-MESSAGES(I).ERROR-MESSAGE-TEXT TO ERROR-MESSAGE
        END-IF.
    END-PERFORM.
    DISPLAY "ERROR: " ERROR-MESSAGE.
    
7. END-MESSAGE.
    DISPLAY "ENTER 'Q' TO EXIT".
    DISPLAY "-------------------".
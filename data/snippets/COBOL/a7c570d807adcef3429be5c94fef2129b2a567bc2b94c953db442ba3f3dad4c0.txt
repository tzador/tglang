IDENTIFICATION DIVISION.
PROGRAM-ID. EXAMPLE.
PROCEDURE DIVISION.
    MAIN-ROUTINE SECTION.
    PERFORM INITIALIZATION-ROUTINE.
    PERFORM BUSINESS-LOGIC-ROUTINE
    PERFORM VALIDATION-ROUTINE.
    DISPLAY "PROCESSING COMPLETE".
    STOP RUN.

INITIALIZATION-ROUTINE SECTION.
    PERFORM DB-CONNECT.
    PERFORM DATA-EXTRACTION.
    PERFORM DATA-TRANSFORMATION.

DB-CONNECT SECTION.
    EXEC SQL
        INCLUDE SQLCA
        WHENEVER SQLERROR GO TO SQL-ERROR
        END-EXEC.
    EXEC SQL
        CONNECT TO :DB-NAME USER :USER-ID USING :PASSWORD
        END-EXEC.
    DISPLAY "DATABASE CONNECTION ESTABLISHED".

DATA-EXTRACTION SECTION.
    EXEC SQL
        DECLARE CURSOR CURS
        FOR SELECT * FROM CUSTOMERS
        END-EXEC.
    EXEC SQL
        OPEN CURS
        END-EXEC.
    EXEC SQL
        FETCH CURS INTO :CUSTOMER-ID, :CUSTOMER-NAME, :CUSTOMER-ADDRESS
        END-EXEC.
    EXEC SQL
        CLOSE CURS
        END-EXEC.
    DISPLAY "DATA EXTRACTION COMPLETED".

 DATA-TRANSFORMATION SECTION.
    PERFORM DISCOUNT-CALCULATION
    PERFORM DATE-CONVERSION.

DISCOUNT-CALCULATION SECTION.
    MULTIPLY CUSTOMER-BALANCE BY 0.1 GIVING DISCOUNT-AMOUNT.
    DISPLAY "CALCULATING DISCOUNT".

DATE-CONVERSION SECTION.
    EXEC CICS
        HANDLE INPUTTIME ERROR TEST (COBOL-ERROR)
        WHEN (INPUTTIME EQ X"0000000000")
        MOVE ZERO TO DB-DATE
        END-EXEC
    EXEC CICS
        HANDLE INPUTTIME ERROR TEST (COBOL-ERROR)
        WHEN (INPTDTTM EQ ' ')
        MOVE SPACE TO DB-DATE
        END-EXEC.
    DISPLAY "CONVERTING DATES".

VALIDATION-ROUTINE SECTION.
    IF CUSTOMER-BALANCE LESS THAN 0
        DISPLAY "CUSTOMER HAS NEGATIVE BALANCE".
    ELSE
        DISPLAY "BALANCE IS VALID".
    END-IF.

SQL-ERROR SECTION.
    DISPLAY "DATABASE ERROR".
    EXEC SQL
        ROLLBACK
        END-EXEC.
    STOP RUN.
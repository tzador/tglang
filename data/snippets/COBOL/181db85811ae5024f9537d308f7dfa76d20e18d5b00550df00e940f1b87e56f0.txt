IDENTIFICATION DIVISION.                          //Start of program
       PROGRAM-ID. SNIPPET.                               //Program ID named 'SNIPPET'

       DATA DIVISION.                                     //Start of data division
       WORKING-STORAGE SECTION.                           //Start of working storage section

       01  INPUT                                          //Defining input section
           05  INPUT-ARRAY          PIC X(10) OCCURS 5.   //Declaring an array of 5 elements of 10 chars each      
           05  INPUT-NUMBER         PIC S9(5) VALUE ZERO. //Declaring a signed 5-digit integer with initial value of 0
           05  INPUT-FLAG           PIC X.                //Declaring a single character flag

       01  OUTPUT                                         //Defining output section
           05  OUTPUT-ARRAY         PIC X(10) OCCURS 5.   //Declaring an array of 5 elements of 10 chars each
           05  OUTPUT-TEXT          PIC X(20).            //Declaring a string of 20 characters for output text

       PROCEDURE DIVISION.                                //Start of procedure division
       MAIN.                                              //Procedure named 'MAIN'

           DISPLAY 'Enter 5 words:'                        //Prompt for user input
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 5       //Loop 5 times, incrementing by 1 each loop
               ACCEPT INPUT-ARRAY(I)                       //Accept user input into corresponding array elements
           END-PERFORM.

           DISPLAY 'Enter a number:'                       //Prompt for user input
           ACCEPT INPUT-NUMBER                             //Accept user input as input-number

           COMPUTE INPUT-NUMBER = INPUT-NUMBER + 1         //Add 1 to input-number

           IF INPUT-NUMBER < 100                           //If input-number is less than 100
               ADD 5, INPUT-NUMBER TO OUTPUT-ARRAY         //Add 5 to input-number and move result to output array 
               MOVE 'Number is less than 100' TO OUTPUT-TEXT //Set output text to string
               MOVE 'Y' TO INPUT-FLAG                      //Set input flag to 'Y'
           ELSE                                            //Otherwise (input-number is greater than or equal to 100)
               SUBTRACT 5, INPUT-NUMBER FROM OUTPUT-ARRAY   //Subtract 5 from input-number and move result to output array
               MOVE 'Number is greater than or equal to 100' TO OUTPUT-TEXT //Set output text to string
               MOVE 'N' TO INPUT-FLAG                      //Set input flag to 'N'
           END-IF.

           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 5       //Loop 5 times, incrementing by 1 each loop
               DISPLAY OUTPUT-ARRAY(I)                     //Display each element of output array
           END-PERFORM.

           DISPLAY OUTPUT-TEXT                             //Display output text
           DISPLAY 'Flag value is' INPUT-FLAG.             //Display input flag value
           
       END PROGRAM SNIPPET.                                //End of program
IDENTIFICATION DIVISION.         //creates division
    PROGRAM-ID. SORTPROGRAM.         //specifies program name
    ENVIRONMENT DIVISION.            //creates division
    INPUT-OUTPUT SECTION.            //creates section
    FILE-CONTROL.                    //controls file input/output
    SELECT INPUT-FILE ASSIGN TO DISK //selects input file
    ORGANIZATION IS SEQUENTIAL.      //organizes input file
    SELECT OUTPUT-FILE ASSIGN TO DISK//selects output file
    ORGANIZATION IS SEQUENTIAL.      //organizes output file
    DATA DIVISION.                   //creates division
    FILE SECTION.                    //creates section
    FD INPUT-FILE.                   //file descriptor for input file
    01 INPUT-RECORD.                 //specifies record structure
        05 ID PIC A(4).              //field for ID
        05 NAME PIC A(20).           //field for name
        05 AGE PIC 99.               //field for age
    FD OUTPUT-FILE.                  //file descriptor for output file
    01 OUTPUT-RECORD.                //specifies record structure
        05 ID PIC A(4).              //field for ID
        05 NAME PIC A(20).           //field for name
        05 AGE PIC 99.               //field for age
        05 SALARY PIC 9(6)V99.       //field for salary
    WORKING-STORAGE SECTION.         //creates section
    01 SORTWORK-RECORDS.             //specifies record structure for sorting
        05 SORT-KEY PIC A(4).        //field for sorting by ID
        05 SORT-RECORD               //field for entire record
           OCCURS 10 TIMES INDEXED SORT-COUNTER.
                                    //allows for 10 records to be sorted
        10 SORT-RECORD-KEY PIC A(4).
                                    //subfield for sorting by ID
        10 SORT-RECORD-DATA          //subfield for rest of record
           OCCURS 3 TIMES INDEXED SORT-COUNTER.
                                    //allows for 3 fields in record to be sorted
            15 FIELD-A PIC X(10).
                                    //field for sorting by field A
            15 FIELD-B PIC X(5).    //field for sorting by field B
            15 FIELD-C PIC X(3).    //field for sorting by field C
    PROCEDURE DIVISION.              //creates division
    SORTING-PROCEDURE.               //specifies procedure name
        OPEN INPUT INPUT-FILE       //opens input file for reading
        OPEN OUTPUT OUTPUT-FILE.    //opens output file for writing
        PERFORM READ-INPUT          //calls subroutine to read input file
        PERFORM SORT-RECORDS        //calls subroutine to sort records
        PERFORM WRITE-OUTPUT        //calls subroutine to write output file
        CLOSE INPUT-FILE            //closes input file
        CLOSE OUTPUT-FILE.          //closes output file
    READ-INPUT.                      //subroutine to read input file
        PERFORM UNTIL INPUT-FILE AT END.
            READ INPUT-FILE INTO INPUT-RECORD.
        END-PERFORM.
    SORT-RECORDS.                    //subroutine to sort records
        PERFORM VARYING SORT-COUNTER FROM 1 BY 1 UNTIL SORT-COUNTER = 10
            SORT SORTWORK-RECORDS
                ASCENDING KEY SORT-KEY
        END-PERFORM.
    WRITE-OUTPUT.                    //subroutine to write output file
        PERFORM VARYING SORT-COUNTER FROM 1 BY 1 UNTIL SORT-COUNTER = 10
            MOVE SORT-RECORD-KEY(SORT-COUNTER)
                TO ID                   //moves ID to output record
                SORT-RECORD-DATA(SORT-COUNTER)
                TO OUTPUT-RECORD        //moves rest of record to output record
            WRITE OUTPUT-RECORD.         //writes output record to file
        END-PERFORM.
    END PROGRAM SORTPROGRAM.          //ends program execution
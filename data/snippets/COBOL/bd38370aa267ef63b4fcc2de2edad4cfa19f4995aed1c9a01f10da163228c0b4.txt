IDENTIFICATION DIVISION.
       PROGRAM-ID. EXAMPLE.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. RM-COBOL.
       OBJECT-COMPUTER. RM-COBOL.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
       SELECT INPUT-FILE ASSIGN TO "example.txt" ORGANIZATION IS SEQUENTIAL.
       SELECT OUTPUT-FILE ASSIGN TO "result.txt" ORGANIZATION IS SEQUENTIAL.

       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE.
       01 INPUT-RECORD.
          05 ID PIC 9(5).
          05 NAME PIC X(20).
          05 GRADE PIC 9(3).
          05 IS-PASS PIC X.

       FD OUTPUT-FILE.
       01 OUTPUT-RECORD.
          05 ID PIC 9(5).
          05 NAME PIC X(20).
          05 RANK PIC 9(3).

       WORKING-STORAGE SECTION.
       01 PASS-SCHEME.
          05 DIVIDEND PIC 9.
          05 DIVISOR PIC 9.
          05 RESULT PIC 9.

       PROCEDURE DIVISION.
       OPEN INPUT INPUT-FILE
       OPEN OUTPUT OUTPUT-FILE

       READ INPUT-FILE
          AT END MOVE 'Y' TO IS-END-OF-FILE
             STOP RUN
          NOT AT END PERFORM PROCESS-RECORD
             PERFORM CHECK-PASSING

       CLOSE INPUT-FILE
       CLOSE OUTPUT-FILE
       STOP RUN.

       PROCESS-RECORD.
       MOVE ID TO OUTPUT-RECORD.ID
       MOVE NAME TO OUTPUT-RECORD.NAME
       ADD 1 TO DIVIDEND
       ADD GRADE TO DIVISOR
       DIVIDE DIVIDEND BY DIVISOR GIVING RESULT
       IF RESULT > 60
          MOVE 'PASS' TO IS-PASS
       ELSE
          MOVE 'FAIL' TO IS-PASS
       END-IF
       WRITE OUTPUT-RECORD.

       CHECK-PASSING.
       MOVE ID TO OUTPUT-RECORD.ID
       MOVE NAME TO OUTPUT-RECORD.NAME
       IF IS-PASS = 'PASS'
          ADD 1 TO DIVIDEND
          ADD GRADE TO DIVISOR
          DIVIDE DIVIDEND BY DIVISOR GIVING RESULT
          MOVE RESULT TO RANK
          WRITE OUTPUT-RECORD
       END-IF.
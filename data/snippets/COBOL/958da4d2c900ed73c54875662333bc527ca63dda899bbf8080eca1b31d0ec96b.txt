IDENTIFICATION DIVISION.                    //start of identification division
   PROGRAM-ID. HELLO.                        //program name
   ENVIRONMENT DIVISION.                    // start of environment division
   INPUT-OUTPUT SECTION.                    // start of input-output section
   FILE-CONTROL.                            // start of file-control
       SELECT INVOICE-FILE                  // select input file
          ASSIGN TO "INVOICE.DAT"           // assign input file to "INVOICE.DAT" 
          ORGANIZATION IS SEQUENTIAL        // organization of file is sequential
          FILE STATUS IS F-STATUS.          // set status of file to F-STATUS
       SELECT SUMMARY-FILE                  // select output file
          ASSIGN TO "SUMMARY.DAT"           // assign output file to "SUMMARY.DAT"
          ORGANIZATION IS SEQUENTIAL        // organization of file is sequential
          FILE STATUS IS S-STATUS.          // set status of file to S-STATUS
   DATA DIVISION.                           // start of data division
   FILE SECTION.                            // start of file section
   FD INVOICE-FILE.                         // file description for input file
   01 INVOICE-RECORD.
      05 INVOICE-NO PIC 9(5).               // define invoice number field with 5 digits
      05 INVOICE-AMT PIC 9(7)V99.           // define invoice amount field with 7 digits and 2 decimal places
   FD SUMMARY-FILE.                         // file description for output file
   01 SUMMARY-RECORD.
      05 TOTAL-INVOICES PIC 99.             // define total invoices field with 2 digits
      05 TOTAL-AMT PIC 9(9)V99.             // define total amount field with 9 digits and 2 decimal places
   WORKING-STORAGE SECTION.                 // start of working-storage section
   01 WS-TOTAL-AMT PIC 9(9)V99 VALUE 0.      // define variable to hold total amount with initial value of 0
   01 WS-COUNT PIC 99 VALUE 0.               // define variable to hold count of invoices with initial value of 0
   PROCEDURE DIVISION.                      // start of procedure division
      OPEN INPUT INVOICE-FILE.              // open input file for reading
      OPEN OUTPUT SUMMARY-FILE.             // open output file for writing
      PERFORM READ-RECORD                   // perform read-record until end of file is reached
      CLOSE INVOICE-FILE.                   // close input file
      WRITE SUMMARY-RECORD                  // write summary record to output file
         AFTER ADVANCING 1 LINES.
      CLOSE SUMMARY-FILE.                   // close output file
      STOP.                                 // end program execution
   READ-RECORD.                             // read-record procedure
      READ INVOICE-FILE                     // read record from input file
       AT END END-READ                      // end read if end of file is reached
       ADD 1 TO WS-COUNT                    // increment count of invoices
       ADD INVOICE-AMT TO WS-TOTAL-AMT      // add invoice amount to total amount
       WRITE INVOICE-RECORD TO SUMMARY-RECORD // write record to output file
         AFTER ADVANCING 1 LINES
       PERFORM READ-RECORD.                 // continue reading records
END-READ.                                   // end read procedure
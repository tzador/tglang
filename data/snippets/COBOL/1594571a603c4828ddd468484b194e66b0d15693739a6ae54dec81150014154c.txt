IDENTIFICATION DIVISION.                           * division for identification
PROGRAM-ID. MYPROGRAM.                              * program name
AUTHOR. JOE SMITH.                                  * author's name
ENVIRONMENT DIVISION.                               * division for environment settings
CONFIGURATION SECTION.                              * section for configuration settings
SOURCE-COMPUTER. IBM PC.                            * computer type
OBJECT-COMPUTER. IBM PC.                            * target computer type
SPECIAL-NAMES.                                      * reserved words
    DECIMAL-POINT IS COMMA.                         * use comma as decimal point
DATA DIVISION.                                      * division for data definitions
FILE SECTION.                                       * section for file definitions
FD MYFILE.                                          * file descriptor for file named MYFILE
01 INPUT-RECORD.                                    * first record definition
    05 RECORD-NUMBER PIC 9(9).                      * field for record number
    05 RECORD-NAME PIC X(20).                       * field for record name
    05 RECORD-AMOUNT PIC 9(6)V9(2).                 * field for record amount
01 OUTPUT-RECORD.                                   * second record definition
    05 OUTPUT-NAME PIC X(20).                       * field for output name
    05 OUTPUT-AMOUNT PIC 9(9)V9(2).                 * field for output amount
WORKING-STORAGE SECTION.                            * section for working storage variables
01 TEMP-NAME PIC X(20).                              * temporary variable for record name
01 TEMP-AMOUNT PIC 9(9)V9(2).                        * temporary variable for record amount
PROCEDURE DIVISION.                                 * division for program logic
MAIN-PARA.                                          * main procedure
    OPEN INPUT MYFILE.                              * open MYFILE for input
    PERFORM UNTIL END-OF-FILE                       * loop until end of file
        READ MYFILE INTO INPUT-RECORD               * read next record into INPUT-RECORD
            AT END                                  
                EXIT                               * exit loop if end of file reached
            NOT AT END
                MOVE RECORD-NAME TO TEMP-NAME       * move record name to temporary variable
                MOVE RECORD-AMOUNT TO TEMP-AMOUNT   * move record amount to temporary variable
                PERFORM PROCESS-PARA                * perform processing logic
    END-PERFORM.
    CLOSE MYFILE.                                   * close MYFILE
PROCESS-PARA.                                       * processing procedure
    IF TEMP-AMOUNT > 1000                            * check if amount is greater than 1000
        COMPUTE OUTPUT-AMOUNT = 1.15 * TEMP-AMOUNT   * if yes, calculate 15% increase
    ELSE
        COMPUTE OUTPUT-AMOUNT = 1.1 * TEMP-AMOUNT    * if no, calculate 10% increase
    END-IF.
    MOVE TEMP-NAME TO OUTPUT-NAME.                   * move temporary variables to output record
    MOVE TEMP-AMOUNT TO OUTPUT-AMOUNT.
    WRITE OUTPUT-RECORD.                             * write output record to file
    DISPLAY "Record processed."                      * display message
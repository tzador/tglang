IDENTIFICATION DIVISION.                           // Start of the program identification division
      PROGRAM-ID. SAMPLEPROGRAM.                          // Name of the program

      ENVIRONMENT DIVISION.                               // Start of environment division
      INPUT-OUTPUT SECTION.                               // Input-output section
      FILE-CONTROL.                                       // File control section
          SELECT SALES-FILE ASSIGN TO DISK "SALES.DAT".    // Selecting the sales file and assigning it to disk

      DATA DIVISION.                                      // Start of data division
      FILE SECTION.                                       // File section
      FD  SALES-FILE.                                     // File descriptor for sales file
      01  SALES-RECORD.                                   // Sales record layout
          05  ID              PIC X(4).                   // Field for sales ID
          05  DATE            PIC X(8).                   // Field for sales date
          05  PRODUCT-CODE    PIC X(5).                   // Field for product code
          05  QUANTITY        PIC 9(3).                   // Field for quantity
          05  UNIT-PRICE      PIC S9(5)V99.               // Field for unit price
          05  AMOUNT-OWED     PIC S9(6)V99.               // Field for amount owed
      WORKING-STORAGE SECTION.                            // Working storage section
      01  TOTAL-AMOUNT-OWED  PIC S9(8)V99.               // Field for total amount owed
      01  TOTAL-UNITS-SOLD   PIC 9(5).                   // Field for total units sold
      01  AVERAGE-PRICE      PIC S9(6)V99.               // Field for average price

      PROCEDURE DIVISION.                                 // Start of procedure division
      100-MAIN-PROCEDURE.                                 // Main procedure
          OPEN INPUT SALES-FILE.                          // Open sales file for reading
          PERFORM UNTIL EOF = "Y"                         // Loop until end of file indicator is yes
              READ SALES-FILE INTO SALES-RECORD.          // Read values from sales file into record
              IF AMOUNT-OWED > 0                          // Check if amount owed is greater than zero
                  ADD AMOUNT-OWED TO TOTAL-AMOUNT-OWED.   // Add amount owed to total amount owed
              END-IF.
              IF QUANTITY > 0                             // Check if quantity is greater than zero
                  ADD QUANTITY TO TOTAL-UNITS-SOLD.       // Add quantity to total units sold
              END-IF.
          END-PERFORM.
          IF TOTAL-UNITS-SOLD > 0                         // Check if total units sold is greater than zero
              DIVIDE TOTAL-AMOUNT-OWED BY TOTAL-UNITS-SOLD GIVING AVERAGE-PRICE. // Calculate average price
          END-IF.
          DISPLAY "Total amount owed: " TOTAL-AMOUNT-OWED. // Display total amount owed
          DISPLAY "Total units sold: " TOTAL-UNITS-SOLD.   // Display total units sold
          DISPLAY "Average price: " AVERAGE-PRICE.         // Display average price
          CLOSE SALES-FILE.                               //Close sales file
          STOP RUN.                                        // Stop execution
    
      END PROGRAM SAMPLEPROGRAM.                           // End of the program
IDENTIFICATION DIVISION.                     * start of program's identification division
       PROGRAM-ID. complex-program.                  * name of the program
       AUTHOR. Your Name.                            * author of the program
       ENVIRONMENT DIVISION.                         * start of program's environment division
       INPUT-OUTPUT SECTION.                         * IO section for program's inputs and outputs
       FILE-CONTROL.                                 * file control section for files used in the program
           SELECT input-file ASSIGN TO "input.txt".  * select input file and assign it to "input.txt"
           SELECT output-file ASSIGN TO "output.txt".* select output file and assign it to "output.txt"
       
       DATA DIVISION.                                * start of program's data division
       FILE SECTION.                                 * file section for program's files
       FD input-file.                                * file descriptor for input file
       01 input-record.                              * data structure for input record
           05 input-name       PIC X(20).             * field for name with a maximum length of 20
           05 input-age        PIC 99.               * field for age with a maximum length of 2
           05 input-gender     PIC X.                 * field for gender with a maximum length of 1
       FD output-file.                               * file descriptor for output file
       01 output-record.                             * data structure for output record
           05 output-greeting  PIC X(40) VALUE "Hello, ". * field for greeting with a maximum length of 40 and a default value of "Hello, "
           05 output-name      PIC X(20).             * field for name with a maximum length of 20
           05 output-info      PIC X(40).             * field for additional information with a maximum length of 40
           05 output-age       PIC 99.               * field for age with a maximum length of 2
           05 output-gender    PIC X.                 * field for gender with a maximum length of 1
           05 output-message   PIC X(80) VALUE "Thank you for using our program!". * field for thank you message with a maximum length of 80 and a default value of "Thank you for using our program!"
            
       WORKING-STORAGE SECTION.                      * working storage section for program's variables and constants
       01 input-name-length   PIC 9(3) COMP VALUE 20. * variable to store the length of name input
       01 input-record-length PIC 9(3) COMP VALUE 23. * variable to store the length of input record
       01 output-name-length  PIC 9(3) COMP VALUE 20. * variable to store the length of name output
       01 output-record-length PIC 9(3) COMP VALUE 163. * variable to store the length of output record
       01 display-header      PIC X(50) VALUE "====== Welcome to our Complex Program! ======". * variable to store header message
       01 display-prompt      PIC X(40) VALUE "Please enter your name: ". * variable to store prompt message
        
       PROCEDURE DIVISION.                            * start of program's procedure division
       0000-main.                                     * a label for the main procedure
           OPEN INPUT input-file.                    * open input file
           OPEN OUTPUT output-file.                  * open output file
           DISPLAY display-header.                   * display program header message
           DISPLAY display-prompt.                   * display prompt message
           ACCEPT input-record.                      * accept input record from user
           COMPUTE input-name-length = LENGTH(input-name). * compute the length of input name
           MOVE input-name TO output-name.           * move input name to output name
           MOVE input-age TO output-age.             * move input age to output age
           MOVE input-gender TO output-gender.       * move input gender to output gender
           STRING output-greeting DELIMITED BY SIZE  * concatenate output greeting, output name and output info
              output-name DELIMITED BY SIZE          * with spaces in between
              output-info DELIMITED BY SIZE
           INTO output-message.
           COMPUTE output-name-length = LENGTH(output-name). * compute the length of output name
           COMPUTE output-record-length = output-name-length + 65. * calculate the length of output record
           MOVE output-message(output-name-length + 1:65) TO output-info. * move output message to output info
           WRITE output-record FROM output-record.  * write output record to output file
           DISPLAY output-message.                   * display final output message
           DISPLAY "Thank you for using our program!". * display thank you message
           CLOSE input-file.                         * close input file
           CLOSE output-file.                        * close output file
           STOP RUN.                                 * end of program
       
       
       END PROGRAM complex-program.                   * end of program
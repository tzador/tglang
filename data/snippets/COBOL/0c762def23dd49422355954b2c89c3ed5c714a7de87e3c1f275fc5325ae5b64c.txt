Identification Division.                          * Start of Identification division
Program-ID. LongComplexSnippet.                    * Unique program identifier

Environment Division.                              * Start of Environment division
Configuration Section.                             * Start of Configuration section
Source-Computer. Desktop.                          * Name of source computer (can be replaced with "UNKNOWN")
Object-Computer. OnlineHost.                       * Name of object computer (can be replaced with "UNKNOWN")
Special-Names.                                     
    Conventions.                                     * Start of Special-Names Clause
        Alphabet.
            CPU-Name. "IBM-370".                    * Specifies the character set used by the program
    Charactersets.                                  
       9 = "A"                                      * Defines character 9 to represent the letter A 
       8 = "B"                                      * Defines character 8 to represent the letter B 
       7 = "C"                                      * Defines character 7 to represent the letter C 
       6 = "D"                                      * Defines character 6 to represent the letter D
       5 = "E"                                      * Defines character 5 to represent the letter E
       4 = "F"                                      * Defines character 4 to represent the letter F
       3 = "G"                                      * Defines character 3 to represent the letter G
       2 = "H"                                      * Defines character 2 to represent the letter H
       1 = "I"                                      * Defines character 1 to represent the letter I
       O = "J"                                      * Defines character O to represent the letter J
       P = "K"                                      * Defines character P to represent the letter K
       Q = "L"                                      * Defines character Q to represent the letter L
       R = "M"                                      * Defines character R to represent the letter M
       "NATIVE" = "N"                               * Defines the "NATIVE" character set to represent the letter N
       T = "O"                                      * Defines character T to represent the letter O
       U = "P"                                      * Defines character U to represent the letter P
       V = "Q"                                      * Defines character V to represent the letter Q
       W = "R"                                      * Defines character W to represent the letter R
       X = "S"                                      * Defines character X to represent the letter S
       Y = "T"                                      * Defines character Y to represent the letter T
       Z = "U"                                      * Defines character Z to represent the letter U
       SPACES = "V"                                  * Defines the "SPACES" character to represent a blank space
       ZEROS = "Z"                                   * Defines the "ZEROS" character to represent a zero value


Data Division.                                     * Start of Data division
File Section.                                      * Start of File section
FD Input-File.                                     * Defines the file description for input file
01 Input-Record.                                  * Defines the record layout for input record
     02 Employee-ID   PIC X(6).                     * Field for employee ID, length 6 characters
     02 Employee-Name PIC X(30).                    * Field for employee name, length 30 characters
     02 Employee-Age  PIC 9(3).                    * Field for employee age, length 3 digits
 
Working-Storage Section.                           * Start of Working-Storage section
01 Employee-Table.                                * Defines a table for storing employee data
    02 Employee-Entry OCCURS 10 TIMES              * OCCURS clause specifies how many times the record layout
                                                   * will be repeated in the table
        03 Employee-ID   PIC X(6).                  * Field for employee ID
        03 Employee-Name PIC X(30).                 * Field for employee name
        03 Employee-Age  PIC 9(3).                  * Field for employee age

Procedure Division.                                * Start of Procedure division
Main Procedure.                                    * Define main procedure
    OPEN INPUT Input-File                         * Open input file for reading
    
    PERFORM READ-INPUT REPEATEDLY                  * Loop to read input file until end of file
    UNTIL EOF
    
    DISPLAY 'Employee Information:'               * Display section header
    PERFORM DISPLAY-EMPLOYEE-INFORMATION          * Loop to display employee information
       VARYING I FROM 1 BY 1 UNTIL I > 10          * VARYING clause to loop through entries in the table 
    END-PERFORM.
    
    CLOSE Input-File                              * Close input file
    STOP.                                          * End of program.

READ-INPUT.                                        * Read input procedure
    READ Input-File                               * Read record from input file
    AT END MOVE 'Y' TO EOF                        * If end of file reached, set EOF flag to "Y".
    
DISPLAY-EMPLOYEE-INFORMATION.                      * Display employee information procedure
    DISPLAY 'Employee ID: ' Employee-ID(I)       * Display employee ID from table
    DISPLAY 'Employee Name: ' Employee-Name(I)   * Display employee name from table
    DISPLAY 'Employee Age: ' Employee-Age(I)     * Display employee age from table
    DISPLAY '------------------------------'     * Display divider between entries
.
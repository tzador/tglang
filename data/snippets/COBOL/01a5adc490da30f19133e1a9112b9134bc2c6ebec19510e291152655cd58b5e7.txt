Identification Division.           // start of program
Program-ID. ComplexCode.            // name of program
Environment Division.
Input-Output Section.
File-Control.
Select In-File1 Assign to Disk1      // define input file
Organization is Line Sequential.
Select In-File2 Assign to Disk2      // define second input file
Organization is Line Sequential.
Select Out-File Assign to Disk3      // define output file
Organization is Line Sequential.

Data Division.                      // define data section
File Section.
FD In-File1
Record contains 125 characters.
01 In-Record1.
   05 In-Field1             PIC XX.  // first input field
   05 In-Field2             PIC XX.  // second input field
   05 In-Field3             PIC XX.  // third input field
   05 In-Field4             PIC XX.  // fourth input field
   05 In-Field5             PIC XX.  // fifth input field
   ...
FD In-File2
Record contains 125 characters.
01 In-Record2.
   05 In-Field6             PIC XX.  // sixth input field
   05 In-Field7             PIC XX.  // seventh input field
   05 In-Field8             PIC XX.  // eighth input field
   05 In-Field9             PIC XX.  // ninth input field
   05 In-Field10            PIC XX.  // tenth input field
   ...

FD Out-File
Record contains 250 characters.
01 Out-Record.
   05 Out-Field1            PIC XX.  // first output field
   05 Out-Field2            PIC XX.  // second output field
   05 Out-Field3            PIC XX.  // third output field
   05 Out-Field4            PIC XX.  // fourth output field
   05 Out-Field5            PIC XX.  // fifth output field
   05 Out-Field6            PIC XX.  // sixth output field
   05 Out-Field7            PIC XX.  // seventh output field
   05 Out-Field8            PIC XX.  // eighth output field
   05 Out-Field9            PIC XX.  // ninth output field
   05 Out-Field10           PIC XX.  // tenth output field
   ...
Working-Storage Section.           // define working variables
01 Counter                    PIC 9(3).     // counter for loop
01 In-Table.
   02 In-FieldArray          OCCURS 10 TIMES // array to hold input values
      INDEXED BY In-Index.
      05 In-Field            PIC XX.
01 Out-Table.
   02 Out-FieldArray         OCCURS 10 TIMES // array to hold output values
      INDEXED BY Out-Index.
      05 Out-Field           PIC XX.
01 Temp-Field                 PIC XX.       // temporary variable

Procedure Division.
   Divide 2 into Counter.

   Perform Read-In-Files
      Varying In-Index from 1 by 1
      Until In-Index > 10.    // loop through input fields
      
      If In-Field(In-Index) = "AB"      // check for specific value in input field
         Multiply 3 by In-Index
         Giving Temp-Field
         Move Temp-Field to Out-Field(Out-Index)  // perform calculation and move value to output field
      End-If.

      Add 1 to Counter.

      Perform Write-Out-Record      // write output record
      Varying Out-Index from 1 by 1
      Until Out-Index > 10.
   End-Perform.

Read-In-Files.
   Read In-File1
      At End
         Go to End-Read-Files.
   Read In-File2
      At End
         Go to End-Read-Files.
   End-Read-Files
   When Counter = 2             // stop after second iteration
      Go to End-Read-Files.

Write-Out-Record.
   Write Out-Record.

End-Read-Files.
   Close In-File1.
   Close In-File2.
   Close Out-File.
   Stop.
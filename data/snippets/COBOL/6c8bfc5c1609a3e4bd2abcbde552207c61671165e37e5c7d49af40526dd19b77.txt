IDENTIFICATION DIVISION.
PROGRAM-ID. CALCULATE-SALES.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
SELECT INFILE ASSIGN TO INFILEIN.
SELECT SALE-FILE ASSIGN TO OUTFILEOUT.

DATA DIVISION.
FILE SECTION.
FD INFILEIN.
01 INFILEREC.
   05 CUST-NUM     PIC 9(5).
   05 POS-CODE     PIC X(8).
   05 DATE-OF-SALE PIC 9(8).
   05 SALE-AMOUNT  PIC S9(7)V99.

FD OUTFILEOUT.
01 OUTFILEREC.
   05 CUST-NUM     PIC 9(5).
   05 NEW-SALE-TOTAL PIC S9(7)V99.

WORKING-STORAGE SECTION.
77 TOTAL-SALE-TOTAL PIC S9(7)V99.
77 CURRENT-CUST-NUM PIC 9(5).
77 PREVIOUS-CUST-NUM PIC 9(5).
77 NEW-SALE-AMOUNT PIC S9(7)V99.
77 FIRST-RECORD-FLAG PIC X(3) VALUE 'YES'.

PROCEDURE DIVISION.

MAIN-PERFORM.
PERFORM READ-PREVIOUS-CUST UNTIL INFILE-EOT
PERFORM READ-NEXT-CUST UNTIL INFILE-EOT
PERFORM CALCULATE-SALE-TOTAL
PERFORM WRITE-OUTFILE.

READ-PREVIOUS-CUST.
IF FIRST-RECORD-FLAG = 'YES'
   MOVE CUST-NUM TO PREVIOUS-CUST-NUM
    MOVE 'NO' TO FIRST-RECORD-FLAG
ELSE
   MOVE PREVIOUS-CUST-NUM TO CURRENT-CUST-NUM
   PERFORM READ-NEXT-CUST
END-IF.

READ-NEXT-CUST.
READ INFILEIN INTO INFILEREC
AT END
   SET INFILE-EOT TO TRUE.

CALCULATE-SALE-TOTAL.
IF CURRENT-CUST-NUM = PREVIOUS-CUST-NUM
   ADD SALE-AMOUNT TO NEW-SALE-AMOUNT
ELSE
   MOVE NEW-SALE-AMOUNT TO TOTAL-SALE-AMOUNT
   MOVE CURRENT-CUST-NUM TO PREVIOUS-CUST-NUM
   MOVE SALE-AMOUNT TO NEW-SALE-AMOUNT.

WRITE-OUTFILE.
MOVE TOTAL-SALE-AMOUNT TO NEW-SALE-TOTAL
WRITE OUTFILEREC.

STOP RUN.

END PROGRAM CALCULATE-SALES.
IDENTIFICATION DIVISION.
PROGRAM-ID. CUSTOMER_PROCESSING.
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
// Define input and output files
SELECT CUSTOMER-FILE ASSIGN TO DISK
ORGANIZATION IS SEQUENTIAL
ACCESS MODE IS SEQUENTIAL
FILE STATUS IS WS-FILE-STATUS.

SELECT OUTPUT-FILE ASSIGN TO DISK
ORGANIZATION IS LINE SEQUENTIAL
FILE STATUS IS WS-FILE-STATUS.

DATA DIVISION.
FILE SECTION.
FD CUSTOMER-FILE.
01 CUSTOMER-RECORD.
  05 CUST-ID             PIC X(10).
  05 CUST-NAME           PIC X(30).
  05 STREET-ADDRESS      PIC X(30).
  05 CITY                PIC X(20).
  05 STATE               PIC XX.
  05 ZIP                 PIC 9(5).
  05 COUNTRY             PIC X(30).

FD OUTPUT-FILE.
01 OUTPUT-RECORD-HEADER.
  05 HEADING-1           PIC X(30) VALUE "CUSTOMER DATA REPORT".
  05 DATE-GENERATED      PIC X(10) VALUE FUNCTION CURRENT-DATE.
  05 FILLER              PIC X(120).

01 OUTPUT-RECORD-BODY.
  05 CUST-ID             PIC X(10).
  05 CUST-NAME           PIC X(30).
  05 ADDRESS             PIC X(60).
  05 CITY-STATE-ZIP      PIC X(30).

WORKING-STORAGE SECTION.
// Define variables for file status and report generation
77 WS-FILE-STATUS        PIC X(02).
77 EOF                   PIC X(01) VALUE 'N'.

01 WS-COUNTS.
  05 CUST-COUNT          PIC 9(03) VALUE ZERO.
  05 LINE-COUNT          PIC 9(04) VALUE ZERO.

LINKAGE SECTION.
// Define variables for record processing
01 INPUT-RECORD.
  05 CUST-ID             PIC X(10).
  05 CUST-NAME           PIC X(30).
  05 STREET-ADDRESS      PIC X(30).
  05 CITY                PIC X(20).
  05 STATE               PIC XX.
  05 ZIP                 PIC 9(5).
  05 COUNTRY             PIC X(30).

01 OUTPUT-RECORD.
  05 HEADING-1           PIC X(30) VALUE "CUSTOMER ID".
  05 CUST-ID             PIC X(10).
  05 HEADING-2           PIC X(30) VALUE "CUSTOMER NAME".
  05 CUST-NAME           PIC X(30).
  05 HEADING-3           PIC X(30) VALUE "CUSTOMER ADDRESS".
  05 ADDRESS             PIC X(60).
  05 HEADING-4           PIC X(30) VALUE "CUSTOMER CITY/STATE/ZIP".
  05 CITY-STATE-ZIP      PIC X(30).

PROCEDURE DIVISION.
// Open input and output files
OPEN INPUT CUSTOMER-FILE
    OUTPUT-FILE
    IF WS-FILE-STATUS NOT = '00'
        DISPLAY 'ERROR OPENING FILES'
    END-IF.

// Loop through input file, process records, and write to output file
PERFORM UNTIL EOF = 'Y'
    READ CUSTOMER-FILE
        AT END
            MOVE 'Y' TO EOF
        NOT AT END
            MOVE CUSTOMER-RECORD TO INPUT-RECORD
            ADD 1 TO CUST-COUNT
            PERFORM PROCESS-RECORD
    END-READ
    IF WS-FILE-STATUS NOT = '00'
        DISPLAY 'ERROR READING RECORD'
    END-IF
END-PERFORM.

CLOSE CUSTOMER-FILE
    OUTPUT-FILE.

// Process and format the output record
PROCESS-RECORD.
MOVE CUST-ID TO OUTPUT-RECORD.CUST-ID
MOVE CUST-NAME TO OUTPUT-RECORD.CUST-NAME
MOVE STREET-ADDRESS TO OUTPUT-RECORD.ADDRESS
STRING CITY DELIMITED BY SPACE
    STATE DELIMITED BY SPACE
    ZIP DELIMITED BY SPACE
INTO OUTPUT-RECORD.CITY-STATE-ZIP.

WRITE OUTPUT-RECORD.

IF LINE-COUNT > 60
    MOVE 1 TO LINE-COUNT
    WRITE OUTPUT-RECORD-HEADER
END-IF.

ADD 1 TO LINE-COUNT.
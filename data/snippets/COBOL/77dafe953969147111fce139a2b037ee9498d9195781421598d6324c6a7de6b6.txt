IDENTIFICATION DIVISION.           // starts the ID section
       PROGRAM-ID. CALCULATOR.            // declares program name
       AUTHOR. JOHN DOE.                  // declares program author
       ENVIRONMENT DIVISION.              // starts the ENV section
       INPUT-OUTPUT SECTION.              // declares input and output data
       FILE-CONTROL.                      // specifies file handling
       SELECT INPUT-FILE ASSIGN TO 'INPUT.TXT'.    // assigns input file
       SELECT OUTPUT-FILE ASSIGN TO 'OUTPUT.TXT'.  // assigns output file
       DATA DIVISION.                     // starts the DATA section
       FILE SECTION.                      // declares files
       FD INPUT-FILE.                     // declares input file
       01 INPUT-RECORD.                   // declares record structure
          05 FIRST-NUM PIC 9(3).          // declares first number field
          05 SECOND-NUM PIC 9(3).         // declares second number field
          05 OPERATOR PIC X.              // declares operator field
       FD OUTPUT-FILE.                    // declares output file
       01 OUTPUT-RECORD.                  // declares record structure
          05 RESULT PIC 9(6).             // declares result field
       WORKING-STORAGE SECTION.           // declares working variables
       01 OPERAND-A PIC 9(6).             // declares first operand variable
       01 OPERAND-B PIC 9(6).             // declares second operand variable
       01 OPERATOR-C PIC X.               // declares operator variable
       01 OPERATOR-SIGN PIC X.            // declares operator sign variable
       PROCEDURE DIVISION.                // starts the PROC section
       OPEN INPUT INPUT-FILE.             // opens input file for reading
       OPEN OUTPUT OUTPUT-FILE.           // opens output file for writing
       READ INPUT-FILE INTO INPUT-RECORD. // reads record from input file
       PERFORM CALCULATE-RESULT           // calls CALCULATE-RESULT section
       WRITE OUTPUT-RECORD.               // writes result to output file
       CLOSE INPUT-FILE.                  // closes input file
       CLOSE OUTPUT-FILE.                 // closes output file
       STOP RUN.                          // terminates program execution
       CALCULATE-RESULT.                  // starts CALCULATE-RESULT section
           MOVE FIRST-NUM TO OPERAND-A.   // assigns first number to operand A
           MOVE SECOND-NUM TO OPERAND-B.  // assigns second number to operand B
           MOVE OPERATOR TO OPERATOR-C.   // assigns operator to operand C
           EVALUATE OPERATOR-C            // evaluates based on the operator 
               WHEN '+'                   // performs addition
                   ADD OPERAND-A, OPERAND-B GIVING RESULT.
               WHEN '-'                   // performs subtraction 
                   SUBTRACT OPERAND-B FROM OPERAND-A GIVING RESULT.
               WHEN '*'                   // performs multiplication 
                   MULTIPLY OPERAND-A BY OPERAND-B GIVING RESULT.
               WHEN '/'                   // performs division 
                   DIVIDE OPERAND-A BY OPERAND-B GIVING RESULT.
               WHEN OTHER                 // if operator is invalid
                   MOVE 'Invalid operator.' TO RESULT.
           END-EVALUATE.
           MOVE RESULT TO OUTPUT-RECORD.  // moves result to output record
       END-CALCULATE-RESULT.              // ends CALCULATE-RESULT section
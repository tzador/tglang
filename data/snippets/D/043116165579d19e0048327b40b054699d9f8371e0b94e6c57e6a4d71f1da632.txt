// Define a struct Person with properties name, age, and address
struct Person 
{
    string name;
    int age;
    string address;
}

// Define a function that takes in an array of Person objects and sorts them by age
void sortByAge(ref Person[] people)
{
    // Loop through the array
    foreach (i, person; people) 
    {
        // Set minIndex to current index
        int minIndex = i;

        // Loop through remaining unsorted elements to find index of smallest age
        for (j = i + 1; j < people.length; j++) 
        {
            // If element at j has smaller age than element at minIndex, update minIndex
            if (people[j].age < people[minIndex].age) 
            {
                minIndex = j;
            }
        }

        // Swap current element with element at minIndex
        Person temp = people[i];
        people[i] = people[minIndex];
        people[minIndex] = temp;
    }
}

// Create an array of Person objects with random ages
Person[] people = [
    Person("John Doe", 25, "123 Main Street"),
    Person("Jane Smith", 18, "456 Oak Avenue"),
    Person("Bob Johnson", 32, "789 Elm Road"),
    Person("Samantha Williams", 29, "321 Maple Court"),
    Person("Mike Brown", 21, "654 Pine Lane")
];

// Call the sortByAge function on the array
sortByAge(people);

// Print out the sorted array
foreach (person; people)
{
    writeln(person.name, " - ", person.age, ", ", person.address);
}
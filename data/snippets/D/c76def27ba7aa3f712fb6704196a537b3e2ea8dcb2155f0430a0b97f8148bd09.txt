// Define a template type for generating a multiplication table
template MultTable(size_t rows, size_t cols)
{
    // Define an array to hold the values of the table
    static int[rows][cols] table;

    // Loop through each row and column to fill in the values of the table
    static foreach (row; 0 .. rows)
    {
        static foreach (col; 0 .. cols)
        {
            table[row][col] = (row + 1) * (col + 1);
        }
    }

    // Define a function to print the multiplication table
    void printTable()
    {
        // Loop through each row and print out the values in a nice format
        foreach (row; 0 .. rows)
        {
            // Print out the row number
            writeln("Row ", row + 1, ":");

            // Loop through each column and print out the value
            foreach (col; 0 .. cols)
            {
                writef("%4d", table[row][col]);
            }

            // Print a new line after each row
            writeln("");
        }
    }
}

// Instantiate the template with a table of 10 rows and 10 columns
MultTable!(10, 10) table;

// Call the printTable function to output the multiplication table
table.printTable();
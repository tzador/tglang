import std.stdio : writeln;
import std.array : array;
import std.algorithm : sort;

// Define a template function to find the minimum value in an array
T minimum(T)(T[] array) 
{
    T min = array[0]; // Initialize a variable to store the minimum value
    foreach (val; array) // Loop through the array
    {
        if (val < min) // Check if the current value is smaller than the minimum
        {
            min = val; // Update the minimum value if necessary
        }
    }
    return min; // Return the minimum value
}

// Create an array of integers
int[] arr = [10, 5, 8, 3, 12, 2, 7];

// Call the minimum template function and store the result in a variable
int min = minimum(arr);

writeln("The minimum value in the array is: ", min); // Output the result

// Define a struct to represent a Person with a name and age
struct Person
{
    string name;
    int age;
}

// Create an array of Persons
Person[] people = [
    Person("John", 35),
    Person("Jane", 28),
    Person("Mike", 42),
    Person("Sarah", 31)
];

// Define a function to sort the array of Persons by age in ascending order
void sortByAge(Person[] arr) 
{
    arr.sort!((a, b) => a.age < b.age);
}

// Call the sortByAge function to sort the array of Persons
sortByAge(people);

// Print out the names and ages of the sorted Persons in a table format
writeln("Name | Age");
writeln("------------");
foreach (person; people)
{
    writeln(person.name, " | ", person.age);
}
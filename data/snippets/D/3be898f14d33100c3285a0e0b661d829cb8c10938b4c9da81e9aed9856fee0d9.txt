import std.stdio; // import the standard I/O module

// define a struct representing a person with name and age fields
struct Person {
    string name;
    int age;
}

// create a new person with name "John" and age 25
Person john = Person("John", 25);

// print the person's information
writeln("Name: ", john.name);
writeln("Age: ", john.age);

// define a function that takes in a person and returns their name as uppercase
string getName(Person person) {
    return person.name.toUpper;
}

// print the person's name in uppercase
writeln("Uppercase Name: ", getName(john));

// define an array of persons
Person[] people = [Person("Jane", 30), Person("Bob", 45), Person("Alice", 20)];

// loop through the array and print each person's name and age
for (Person person : people) {
    writeln("Name: ", person.name);
    writeln("Age: ", person.age);
}

// define a class representing a car with make and model fields
class Car {
    string make;
    string model;

    // constructor with make and model parameters
    this(string make, string model) {
        this.make = make;
        this.model = model;
    }

    // define a method to print car's information
    void printInfo() {
        writeln("Make: ", this.make);
        writeln("Model: ", this.model);
    }
}

// create a new car object with make "Toyota" and model "Camry"
Car camry = new Car("Toyota", "Camry");

// print the car's information
camry.printInfo();

// define a template struct with a generic type
struct Box(T) {
    T value;
}

// create a box with an integer value of 10
Box!int intBox = Box!int(10);

// print the boxed integer value
writeln("Boxed Integer: ", intBox.value);
import std.stdio;
import std.algorithm;

// Define a struct named "Product" with two fields: "name" of type string and "price" of type float
struct Product
{
    string name;
    float price;
}

// Create an array "products" of type "Product" and initialize it with two instances of our struct
Product[] products = [Product("Apple", 1.99), Product("Banana", 0.99)];

// Define a higher-order function named "getCheaperProducts" with two parameters: array of Product and threshold
auto getCheaperProducts(Product[] products, float threshold)
{
    // Use the std.algorithm.filter function to filter the products array
    // Filter for products where the price is less than the threshold
    auto cheaperProducts = filter!(p => p.price < threshold)(products);

    // Sort the filtered products array by price in ascending order
    cheaperProducts = sort!( (a, b) => a.price < b.price )(cheaperProducts);

    // Return the filtered and sorted products array
    return cheaperProducts;
}

// Invoke the getCheaperProducts function and store its output in a variable named "filteredProducts"
auto filteredProducts = getCheaperProducts(products, 1.50);

// Print the filtered products array, using a foreach loop
foreach(product; filteredProducts)
{
    // Use string interpolation to print the name and price of each product
    writeln("Product Name: ", product.name, ", Price: ", product.price);
}
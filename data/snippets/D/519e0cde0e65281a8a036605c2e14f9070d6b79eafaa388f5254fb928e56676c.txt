/* This code snippet uses a binary search algorithm to search 
   for an element in an array. 
   
   Parameters: 
   arr - the sorted array to be searched in 
   low - index of the first element in the array 
   high - index of the last element in the array 
   x - the element to be searched for in the array 
*/ 

int binarySearch(int[] arr, int low, int high, int x) 
{ 
    // check for empty array 
    if (high >= low) 
    { 
        // calculate the middle index 
        int mid = low + (high - low)/2; 

        // if x is found at the middle index, return index 
        if (arr[mid] == x) 
            return mid; 

        // if x is smaller than the middle element, 
        // search in the left half of the array 
        if (arr[mid] > x) 
            return binarySearch(arr, low, mid-1, x); 

        // if x is larger than the middle element, 
        // search in the right half of the array 
        else
            return binarySearch(arr, mid+1, high, x); 
    } 

    // if element is not found in the array, return -1 
    return -1; 
} 

void main() 
{ 
    // initialize an array 
    int[] arr = [1, 5, 8, 10, 12, 14, 17]; 

    // search for 10 
    int index = binarySearch(arr, 0, arr.length-1, 10); 

    // print the result 
    if (index == -1) 
        writeln("Element not present in the array"); 
    else
        writeln("Element found at index ", index); 
}
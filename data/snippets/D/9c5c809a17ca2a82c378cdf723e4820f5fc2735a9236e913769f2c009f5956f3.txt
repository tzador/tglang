// Creates a generic struct with two template parameters
struct Pair(T, U) {
    public T first;
    public U second;

    // Constructor that takes in two parameters
    this(T first, U second) {
        this.first = first;
        this.second = second;
    }

    // A function that swaps the values of first and second
    public void swap() {
        T temp = first;
        first = second;
        second = temp;
    }

    // A function that returns the result of applying a binary function to the first and second values
    public auto apply(T delegate(T, U) binFunc) {
        return binFunc(first, second);
    }

    // Main function that demonstrates the usage of the struct
    void main() {
        // Creates a Pair object with string and int values
        Pair!string!int pair = Pair!("Hello", 123);
        // Prints out the values of the pair
        writeln("Original pair: ", pair.first, ", ", pair.second);
        // Swaps the values of the pair
        pair.swap();
        // Prints out the swapped values of the pair
        writeln("Swapped pair: ", pair.first, ", ", pair.second);
        // Applies a binary function to the pair and prints out the result
        writeln("Result of applying binary function to pair: ", pair.apply((a, b) => a + b));
    }
}
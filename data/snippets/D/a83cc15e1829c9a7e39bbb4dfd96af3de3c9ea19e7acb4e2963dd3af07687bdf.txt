import std.algorithm;

struct Animal // defining a struct named 'Animal'
{
    string name; // declaring a string variable 'name'
    int age; // declaring an integer variable 'age'
    bool wild; // declaring a boolean variable 'wild'
}

auto animals = [ // declaring and initializing an array named 'animals' with elements of type 'Animal'
    Animal("lion", 10, true), // creating an 'Animal' object with values for 'name', 'age' and 'wild'
    Animal("tiger", 8, true),
    Animal("elephant", 20, false),
    Animal("giraffe", 5, false)
];

Animal oldestAnimal = animals.max!((a, b) => a.age < b.age); // finding the oldest animal in the array using the 'max' function from 'std.algorithm'

writefln("The oldest animal is %s, aged %d and %s", oldestAnimal.name, oldestAnimal.age, oldestAnimal.wild ? "wild" : "not wild"); // printing out the name, age and wild status of the oldest animal using 'writefln' function

foreach (animal; animals) // iterating through the 'animals' array using a foreach loop
{
    if (animal.wild) // checking if the animal is wild
    {
        writeln("The %s is a wild animal", animal.name); // printing out a message stating that the animal is wild
    }
    else 
    {
        writeln("The %s is not a wild animal", animal.name); // printing out a message stating that the animal is not wild
    }
}
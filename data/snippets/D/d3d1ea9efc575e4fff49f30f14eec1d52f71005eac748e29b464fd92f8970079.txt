// Definition of a generic class
class MyGenericClass(T) {

    // Private member variable of type T
    private T myVariable;

    // Constructor that takes in a parameter of type T
    this(T variable) {
        // Assign the parameter value to the private member variable
        this.myVariable = variable;
    }

    // Method that returns a string representation of the generic class
    string toString() {
        // Concatenate the name of the class with the string representation of the private member variable
        return "MyGenericClass(" ~ typeof(myVariable).stringof ~ ") : " ~ myVariable.to!string;
    }
}

// Instantiate the generic class with an integer as the parameter
MyGenericClass!int myIntClass = new MyGenericClass!int(10);

// Call the toString method and print the output
writeln(myIntClass.toString());

// Instantiate the generic class with a string as the parameter
MyGenericClass!string myStringClass = new MyGenericClass!string("Hello world!");

// Call the toString method and print the output
writeln(myStringClass.toString());
/* This is a complex code snippet in D Programming Language */

// Importing standard library module
import std.stdio;

// Defining a template function
template max(T)(T a, T b) {
    return a > b ? a : b;
}

// Defining a struct
struct Person {
    string name;
    int age;
}

// Defining a class that uses the struct
class Employee {
    // Private variables
    private Person person;
    private string position;
    private float salary;

    // Constructor
    this(string name, int age, string position, float salary) {
        person.name = name;
        person.age = age;
        this.position = position;
        this.salary = salary;
    }

    // Defining a getter function
    string getName() {
        return person.name;
    }

    // Defining a setter function
    void setSalary(float salary) {
        this.salary = salary;
    }

    // Overloading the addition operator
    Employee opBinary(string op)(Employee other) {
        if (op == "+") {
            return Employee(
                this.person.name ~ " " ~ other.person.name,
                max(this.person.age, other.person.age),
                this.position ~ " / " ~ other.position,
                this.salary + other.salary
            );
        }
    }

    // Defining a destructor
    ~this() {
        writefln("Employee %s is leaving the company.", person.name);
    }
}

void main() {
    // Creating two instances of the class
    auto employee1 = Employee("John Doe", 35, "Manager", 5000.00);
    auto employee2 = Employee("Jane Smith", 28, "Assistant", 3000.00);

    // Call getter function
    writeln("Employee 1 name: ", employee1.getName());
    // Call setter function
    employee2.setSalary(3500.00);

    // Add the two instances together
    auto employee3 = employee1 + employee2;

    // Output formatted string
    writeln("%s is now an %s and will earn $%.2f a month.", employee3.getName(), employee3.getPosition(), employee3.getSalary());
}
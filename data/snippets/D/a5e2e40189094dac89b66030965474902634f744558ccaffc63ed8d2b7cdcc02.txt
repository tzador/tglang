/**
 * This code snippet demonstrates the use of templates and mixins in D Programming Language.
 * It creates a custom array data structure and defines operations such as append, remove, and print.
 */

//Define a template for a custom array
template CustomArray(T) 
{ 
    T[] array; //A dynamic array of type T
    
    //Append function to add an element to the end of the array
    void append(T element) 
    { 
        array ~= element; //Append element to the end of the array 
    } 
    
    //Remove function to remove an element from the array
    void remove(T element) 
    { 
        //Loop through the array and check if the element exists
        for(int i = 0; i < array.length; i++) 
        { 
            if(array[i] == element) 
            { 
                array = array[0 .. i] ~ array[i+1 .. $]; //Remove element from the array 
                break; //Exit the loop 
            } 
        } 
    } 
    
    //Print function to print all elements in the array
    void print() 
    { 
        //Loop through the array and print each element 
        foreach(elem; array) 
        { 
            writeln(elem); 
        } 
    } 
} 

//Create a new instance of the custom array with a string data type
mixin CustomArray!string myArray; 

//Add elements to the array 
myArray.append("Hello"); 
myArray.append("World"); 
myArray.append("Example"); 

//Print the array 
myArray.print(); 

//Remove an element from the array 
myArray.remove("Hello"); 

//Print the updated array 
myArray.print();
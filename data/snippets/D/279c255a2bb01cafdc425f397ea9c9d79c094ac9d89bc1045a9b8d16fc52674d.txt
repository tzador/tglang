import std.stdio;
import std.algorithm;

// Create a struct to represent a person
struct Person {
	string name;	// Name of the person
	int age;		// Age of the person
	string occupation;	// Occupation of the person

	// Constructor to initialize a Person object
	this(string name, int age, string occupation) {
		this.name = name;
		this.age = age;
		this.occupation = occupation;
	}

	// Function to calculate the estimated salary based on age and occupation
	int getEstimatedSalary() {
		int baseSalary = 40000;		// Base salary for all occupations
		int salaryMultiplier = 1000;	// Salary multiplier based on age
		int occupationBonus = 0;		// Bonus for specific occupations

		// Switch statement to determine occupation bonus
		switch(occupation) {
			case "Software Engineer":
				occupationBonus = 1000;
				break;
			case "Doctor":
				occupationBonus = 2000;
				break;
			case "Lawyer":
				occupationBonus = 1500;
				break;
			default:
				occupationBonus = 500;
		}

		// Calculate estimated salary based on age, occupation, and base salary
		int estimatedSalary = baseSalary + (age * salaryMultiplier) + occupationBonus;
		return estimatedSalary;
	}
}

void main() {
	// Create 3 Person objects
	Person p1 = Person("John", 25, "Software Engineer");
	Person p2 = Person("Emily", 35, "Doctor");
	Person p3 = Person("Michael", 45, "Lawyer");

	// Put all Person objects into an array
	Person[] people = [p1, p2, p3];

	// Sort the array of people based on their estimated salary
	people.sort!((a, b) => a.getEstimatedSalary() > b.getEstimatedSalary());

	// Print out the people in the sorted array
	foreach (person; people) {
		writeln(`${person.name} - ${person.occupation} - Estimated Salary: ${person.getEstimatedSalary()}`);
	}
}
// A function that calculates the nth fibonacci number
// Input: n - an integer representing the position of the fibonacci number to be calculated

// Declare a function called "fibonacci" that takes in an integer "n" and returns an integer 
int fibonacci(int n) 
{ 
    // If n is 0 or 1, return the value of n 
    if (n == 0 || n == 1) 
        return n; 
    
    // Declare an array "fibArr" with n+1 elements 
    auto fibArr = new int[n+1]; 
    
    // Initialize the first two elements of the array to 0 and 1 
    fibArr[0] = 0; 
    fibArr[1] = 1; 
    
    // Loop from i = 2 to n, updating the array with the sum of the previous two elements 
    for (int i = 2; i <= n; i++) 
        fibArr[i] = fibArr[i-1] + fibArr[i-2]; 
    
    // Return the nth element of the array as the fibonacci number 
    return fibArr[n]; 
} 

// Declare and initialize an integer "n" to the desired position 
int n = 10; 

// Call the "fibonacci" function with "n" as the argument and store the result in "fib" 
int fib = fibonacci(n); 

// Print the nth fibonacci number 
writeln("The ", n, "th fibonacci number is ", fib); 

// Output: The 10th fibonacci number is 55
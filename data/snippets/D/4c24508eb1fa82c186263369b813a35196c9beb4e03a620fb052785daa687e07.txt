/**
 * This is a code snippet in D Programming Language.
 * It uses classes, templates, and operators to create a calculator program.
*/

// Class to represent a single mathematical operation
class Operation(T) {
    // Private member variables for operands and operator
    private T operand1;
    private T operand2;
    private char op;

    // Constructor to initialize operands and operator
    this(T operand1, T operand2, char op) {
        this.operand1 = operand1;
        this.operand2 = operand2;
        this.op = op;
    }

    // Function to perform the operation and return the result
    T getResult() {
        T result;
        // Use a switch statement to handle different operators
        switch (op) {
            case '+': {
                result = operand1 + operand2;
                break;
            }
            case '-': {
                result = operand1 - operand2;
                break;
            }
            case '*': {
                result = operand1 * operand2;
                break;
            }
            case '/': {
                result = operand1 / operand2;
                break;
            }
        }
        return result;
    }
}

// Class to represent a simple calculator with add and subtract operations
class Calculator(T) {
    // Private member variable to hold the current result
    private T result;

    // Function to add two operands
    T add(T operand1, T operand2) {
        // Create a new Operation object, passing in the operands and operator
        Operation!T operation = new Operation!T(operand1, operand2, '+');
        // Get the result and assign it to the current result variable
        result = operation.getResult();
        // Return the result
        return result;
    }

    // Function to subtract two operands
    T subtract(T operand1, T operand2) {
        // Create a new Operation object, passing in the operands and operator
        Operation!T operation = new Operation!T(operand1, operand2, '-');
        // Get the result and assign it to the current result variable
        result = operation.getResult();
        // Return the result
        return result;
    }
}

// Function to perform a complex calculation using the Calculator class
T complexCalculation(T operand1, T operand2) {
    // Create a new Calculator object
    Calculator!T calculator = new Calculator!T;
    // Use the add function to add the two operands
    T result1 = calculator.add(operand1, operand2);
    // Use the subtract function to subtract the two operands
    T result2 = calculator.subtract(operand1, operand2);
    // Multiply the two results and return the final result
    return result1 * result2;
}

// Main function to demonstrate the use of the complexCalculation function
void main() {
    // Get two operands from user input
    T operand1 = readln();
    T operand2 = readln();
    // Call the complexCalculation function with the two operands
    T result = complexCalculation(operand1, operand2);
    // Print the result
    writeln("Result: ", result);
}
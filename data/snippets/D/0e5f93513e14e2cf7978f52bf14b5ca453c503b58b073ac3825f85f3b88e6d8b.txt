import std.stdio;
import std.algorithm;

// Define a reusable template function that takes in two arrays and returns the merged array
T[] mergeArrays(T)(T[] arr1, T[] arr2)
{
	// Calculate the size of the merged array
	size_t size = arr1.length + arr2.length;

	// Initialize the merged array
	T[] mergedArray;

	// Resize the merged array to the calculated size
	mergedArray.length = size;

	// Copy the elements of the first array into the merged array
	arr1.copy(mergedArray);

	// Use the range-based `copy` algorithm to copy the elements of the second array into the merged array
	arr2.copy(mergedArray[0 + arr1.length .. arr2.length + arr1.length]);

	// Use the `sort` algorithm to sort the elements of the merged array in ascending order
	sort(mergedArray);

	// Return the merged and sorted array
	return mergedArray;
}

void main()
{
	// Define two arrays with different data types
	int[] array1 = [5, 2, 7, 3, 1];
	float[] array2 = [6.5, 4.2, 10.1, 2.9];

	// Call the `mergeArrays` function and store the result in a new array
	auto newArray = mergeArrays(array1, array2);

	// Print the original arrays and the merged and sorted array
	writeln("Original array1:", array1);
	writeln("Original array2:", array2);
	writeln("Merged and sorted array:", newArray);
}
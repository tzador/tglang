//Example of a complex code snippet in D Programming Language
module complex;

//Importing necessary libraries
import std.stdio;
import std.conv;

//Creating a struct for a complex number with real and imaginary parts
struct Complex {
    double real;
    double imaginary;

    //Constructor for Complex struct
    this(double real, double imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }

    //Method to calculate the modulus of the complex number
    double modulus() {
        return std.math.sqrt(real * real + imaginary * imaginary);
    }

    //Method to calculate the argument of the complex number
    double argument() {
        return std.math.atan2(imaginary, real) * 180 / std.math.PI;
    }

    //Method to add two complex numbers and return the result as a new Complex object
    Complex opBinary(string op)(Complex other) if (op == "+") {
        return Complex(this.real + other.real, this.imaginary + other.imaginary);
    }

    //Method to subtract two complex numbers and return the result as a new Complex object
    Complex opBinary(string op)(Complex other) if (op == "-") {
        return Complex(this.real - other.real, this.imaginary - other.imaginary);
    }

    //Method to multiply two complex numbers and return the result as a new Complex object
    Complex opBinary(string op)(Complex other) if (op == "*") {
        return Complex(this.real * other.real - this.imaginary * other.imaginary, this.real * other.imaginary + this.imaginary * other.real);
    }

    //Method to divide two complex numbers and return the result as a new Complex object
    Complex opBinary(string op)(Complex other) if (op == "/") {
        double denominator = other.real * other.real + other.imaginary * other.imaginary;
        return Complex((this.real * other.real + this.imaginary * other.imaginary) / denominator, (this.imaginary * other.real - this.real * other.imaginary) / denominator);
    }

}

//Main function to test the Complex struct and its methods
void main() {
    //Creating two Complex objects
    Complex c1 = Complex(3.0, 4.0);
    Complex c2 = Complex(2.0, 5.0);

    //Calculating the modulus and argument of c1
    writeln("Modulus of c1: ", c1.modulus());
    writeln("Argument of c1: ", c1.argument());

    //Performing basic arithmetic operations on c1 and c2
    Complex c3 = c1 + c2;
    Complex c4 = c1 - c2;
    Complex c5 = c1 * c2;
    Complex c6 = c1 / c2;

    //Printing the results
    writeln("c1 + c2 = ", c3.real, " + ", c3.imaginary, "i");
    writeln("c1 - c2 = ", c4.real, " + ", c4.imaginary, "i");
    writeln("c1 * c2 = ", c5.real, " + ", c5.imaginary, "i");
    writeln("c1 / c2 = ", c6.real, " + ", c6.imaginary, "i");
}
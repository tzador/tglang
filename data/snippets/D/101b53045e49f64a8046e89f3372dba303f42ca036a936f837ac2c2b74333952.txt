/* A complex D code snippet with multiple functions and conditional statements */

import std.stdio; // import standard library

// define a function that checks if a number is prime
bool isPrime(int n) {
    if (n < 2) {
        return false;
    }
    else if (n == 2) {
        return true;
    }
    else if (n % 2 == 0) {
        return false;
    }
    else {
        /* using the Sieve of Eratosthenes algorithm to check for prime numbers
        reference: https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes */
        for (int i = 3; i * i <= n; i += 2) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
}

// define a function that prints out the first n prime numbers
void printPrimes(int n) {
    int count = 0; // set initial count to 0
    int num = 2; // start with 2 as the first prime number
    while (count < n) { // loop until count reaches n
        if (isPrime(num)) { // check if current number is prime
            writef("%d, ", num); // print the number
            count++; // increment count
        }
        num++; // move on to next number
    }
}

void main() {
    int n = 10; // set number of prime numbers to print
    printPrimes(n); // call printPrimes function
}
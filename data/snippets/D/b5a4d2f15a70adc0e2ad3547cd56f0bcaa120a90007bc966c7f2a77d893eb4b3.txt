// create a template for a custom array type
template MyArray(T) {
    // define a private array to store elements
    private(T[]) data;

    // define a constructor that takes the size of the array
    this(size_t size) {
        data = new T[size];
    }

    // define a member function to add an element to the array
    T[] add(T element) {
        data ~= element;
        return data;
    }

    // define a member function to get the element at a given index
    T get(size_t index) {
        return data[index];
    }

    // define a member function to remove an element at a given index
    T[] remove(size_t index) {
        data = data[0..index] ~ data[index+1..$];
        return data;
    }

    // define a member function to set a new value at a given index
    T[] set(size_t index, T element) {
        data[index] = element;
        return data;
    }
}

// create a new instance of MyArray to store strings
auto myArray = new MyArray!string(5);

// add elements to the array
myArray.add("Hello");
myArray.add("World!");

// get element at index 0
myArray.get(0); // output: Hello

// set a new value at index 1
myArray.set(1, "Goodbye");

// remove element at index 0
myArray.remove(0); // output: Goodbye!
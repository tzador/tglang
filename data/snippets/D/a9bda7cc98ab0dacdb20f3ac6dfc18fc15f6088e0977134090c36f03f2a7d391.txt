import std.stdio;

// A Widget class that inherits from the Object class
class Widget : Object {
    // A private variable of type string
    private string name;
    
    // A protected variable of type int
    protected int size;
    
    // A public constructor that takes in a name and size and assigns them to the private and protected variables
    // Uses the super keyword to call the constructor of the parent class
    this(string name, int size) {
        this.name = name;
        this.size = size;
        super();
    }
    
    // A public function that prints out the widget's name and size
    void printInfo() {
        writeln("Widget Name: ", name);
        writeln("Widget Size: ", size);
    }
    
    // Overrides the toString function from the Object class to return the widget's name
    override string toString() {
        return name;
    }
}

// A subclass of Widget that adds a new function
class FancyWidget : Widget {
    // A private variable of type bool
    private bool isFancy;
    
    // A constructor that calls the constructor of the parent class and assigns the isFancy variable
    this(string name, int size, bool isFancy) {
        super(name, size);
        this.isFancy = isFancy;
    }
    
    // A public function that checks if the widget is fancy and prints out a statement accordingly
    void checkFanciness() {
        if(isFancy) {
            writeln("This is a fancy widget!");
        }
        else {
            writeln("This is a regular widget.");
        }
    }
}

// Creates an instance of the FancyWidget class with a name of "My Fancy Widget", size of 10, and isFancy set to true
auto fancyWidget = new FancyWidget("My Fancy Widget", 10, true);

// Calls the printInfo function on the fancyWidget instance, which will print out its name and size
fancyWidget.printInfo();

// Calls the checkFanciness function on the fancyWidget instance, which will print out a statement based on the value of isFancy
fancyWidget.checkFanciness();
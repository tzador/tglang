//This code snippet generates and prints a random password
import std.random : uniform, rndGen, seed;
import std.stdio : writeln;

//Seed the random number generator
ulong seed = 1;
rndGen.seed(seed);

//Define character arrays for password generation
char[] letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
                  'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',
                  'y', 'z'];

char[] numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];

char[] symbols = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '=', '+',
                  '[', ']', '{', '}', '|', ';', ':', '"', '<', '>', ',', '.',
                  '/', '?'];

//Define variables for password length and strength
int passwordLength = 10;
int passwordStrength = 3;

//Generate and store random characters for password
char[] password;

for (int i = 0; i < passwordLength; i++) {
    //Determine which type of character to generate based on strength
    int characterType = uniform(0, passwordStrength);

    if (characterType == 0) {
        //Generate a letter
        char generatedLetter = letters[uniform(0, letters.length)];
        //Append it to the password array
        password ~= generatedLetter;
    } else if (characterType == 1) {
        //Generate a number
        char generatedNumber = numbers[uniform(0, numbers.length)];
        //Append it to the password array
        password ~= generatedNumber;
    } else {
        //Generate a symbol
        char generatedSymbol = symbols[uniform(0, symbols.length)];
        //Append it to the password array
        password ~= generatedSymbol;
    }
}

//Print the password
writeln("Your randomly generated password is: ");
writeln(password);
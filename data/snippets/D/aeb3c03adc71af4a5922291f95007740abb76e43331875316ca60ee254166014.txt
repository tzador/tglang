// Define a templated struct with a nested enum
struct Template(T)
{
    // Initial value for template variable
    T init;
    
    // Nested enum with two variants
    enum NestedEnum
    {
        // First variant with a string value 
        One = "first",
        
        // Second variant with an integer value
        Two = 2
    }
}

// Instantiate template with a string
Template!string template1 = Template!string("hello");

// Instantiate template with an integer
Template!int template2 = Template!int(123);

// Call a function that takes in a template type as an argument
void printTemplate(T)(Template!T template)
{
    // Print out the initial value of the template
    import std.stdio;
    writeln(template.init);
}

// Call the function with the string template
printTemplate!string(template1);

// Call the function with the integer template
printTemplate!int(template2);
// Create a class named "Rectangle" with private members for width and height
class Rectangle {
    private:
        float width;
        float height;
        
    // Create a constructor that takes in width and height as parameters
    this(float width, float height) {
        this.width = width;
        this.height = height;
    }
    
    // Create a member function that returns the area of the rectangle
    float area() {
        return width * height;
    }
    
    // Create a static member function that takes in two rectangles as parameters and returns the one with the larger area
    static Rectangle largerRectangle(Rectangle rect1, Rectangle rect2) {
        if (rect1.area() > rect2.area()) {
            return rect1;
        }
        else {
            return rect2;
        }
    }
    
    // Create a template function that calculates the perimeter of the rectangle based on the type of data
    template <typename T>
    T perimeter() {
        return 2 * (width + height);
    }
};

// Create an instance of the Rectangle class with width of 5 and height of 10
Rectangle rect = Rectangle(5, 10);

// Print the area of the rectangle using the member function
float area = rect.area();
writeln("Area: ", area);

// Create two more instances of the Rectangle class
Rectangle rect2 = Rectangle(3, 8);
Rectangle rect3 = Rectangle(6.5, 12.3);

// Use the static member function to find the larger rectangle
Rectangle largerRect = Rectangle.largerRectangle(rect2, rect3);
writeln("Larger rectangle has width: ", largerRect.width, " and height: ", largerRect.height);

// Call the template function to calculate the perimeter of the rectangle using integer data type
int perimeter = rect.perimeter!int();
writeln("Perimeter: ", perimeter);
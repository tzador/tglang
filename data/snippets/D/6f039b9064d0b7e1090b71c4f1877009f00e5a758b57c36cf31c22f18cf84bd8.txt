import std.stdio;
import std.algorithm : binarySearch;
import std.range;
import std.typecons;

// Define a struct named 'Employee'
struct Employee {
    string name;
    int age;
    string jobTitle;
}

/**
  Function to search for an employee by their name
  Params:
  - employees: array of 'Employee' structs
  - name: name of employee to search for
  Returns:
  - index of employee in array if found, else -1
*/
int searchEmployee(Employee[] employees, string name) {

    // Sort employees array by name
    employees.sort!((a, b) => a.name.compare(b.name));

    // Use binary search to find employee by name
    auto result = employees.binarySearch!(a => a.name)(name);

    // If employee is found, return index
    if (result !is null) {
        return result;
    }

    // If employee is not found, return -1
    return -1;
}

void main()
{
    // Initialize employees array
    Employee[] employees = [
        Employee("John Smith", 35, "Software Engineer"),
        Employee("Jane Doe", 28, "Web Developer"),
        Employee("Mark Johnson", 42, "Project Manager")
    ];

    // Search for employee named "Jane Doe"
    int index = searchEmployee(employees, "Jane Doe");

    // Print results
    if (index != -1) {
        writeln("Employee found at index ", index);
    } else {
        writeln("Employee not found");
    }
}
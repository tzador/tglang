import std.stdio;

enum Color { // defining an enum type
    Red = 0, // assigning values to enum elements
    Blue = 1,
    Green = 2,
}

struct Point { // defining a struct type
    int x;
    int y;

    this(int _x, int _y) { // defining constructor for struct
        x = _x;
        y = _y;
    }

    void move(int dx, int dy) { // defining a method for struct
        x += dx;
        y += dy;
    }
}


void main() { // defining a main function
    const int SIZE = 5; // declaring and initializing a constant variable
    Point[SIZE] points; // creating an array of Point structs

    for(int i = 0; i < SIZE; i++) { // iterating through the array
        points[i] = Point(i, i * 2); // creating a Point struct and adding it to the array
    }

    foreach(point; points) { // using foreach to iterate through the array
        writeln("Point (" ~ point.x ~ ", " ~ point.y ~ ")"); // printing out the values of the Point struct
    }

    Color color = Color.Blue; // creating a variable of type Color
    switch(color) { // using a switch statement
        case Color.Red:
            writeln("The color is red.");
            break;
        case Color.Blue:
            writeln("The color is blue.");
            break;
        case Color.Green:
            writeln("The color is green.");
            break;
        default:
            writeln("The color is invalid.");
            break;
    }
}
// Define a template function called 'bubbleSort' that takes in an array of type 'T'
// and returns the sorted array in ascending order.
template bubbleSort(T)(T[] arr) {
    // Define a variable 'n' to store the length of the array.
    auto n = arr.length;

    // Define a 'do while' loop to iterate through the array elements.
    do {
        // Define a boolean variable 'swapped' to keep track of any swaps made.
        bool swapped = false;

        // Define a 'for' loop to iterate through the array elements.
        for (int i = 1; i < n; i++) {
            // If the current element is larger than the previous element, swap them.
            if (arr[i] > arr[i - 1]) {
                int tmp = arr[i];
                arr[i] = arr[i - 1];
                arr[i - 1] = tmp;

                // Set 'swapped' to true to indicate a swap was made.
                swapped = true;
            }
        }

        // Decrease the value of 'n' by one as the last element is now sorted.
        n -= 1;
    } while (swapped);

    // Return the sorted array.
    return arr;
}

// Define an array to be sorted.
int[] nums = [9, 5, 2, 7, 3];

// Call the 'bubbleSort' function and pass in the array.
int[] sorted = bubbleSort(nums);

// Print the sorted array.
writeln(sorted);
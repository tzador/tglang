import std.stdio; // import standard IO library

enum Suit { // define an enum type for playing card suits
    Clubs,
    Diamonds,
    Hearts,
    Spades
}

struct Card { // define a struct for playing cards
    Suit suit; // suit of the card
    int value; // numerical value of the card
    string name; // name of the card
}

imm cardDeck = [ // create an immutable array of cards
    Card(Suit.Clubs, 2, "2 of Clubs"),
    Card(Suit.Clubs, 3, "3 of Clubs"),
    Card(Suit.Clubs, 4, "4 of Clubs"),
    Card(Suit.Clubs, 5, "5 of Clubs"),
    Card(Suit.Clubs, 6, "6 of Clubs"),
    Card(Suit.Clubs, 7, "7 of Clubs"),
    Card(Suit.Clubs, 8, "8 of Clubs"),
    Card(Suit.Clubs, 9, "9 of Clubs"),
    Card(Suit.Clubs, 10, "10 of Clubs"),
    Card(Suit.Clubs, 11, "Jack of Clubs"),
    Card(Suit.Clubs, 12, "Queen of Clubs"),
    Card(Suit.Clubs, 13, "King of Clubs"),
    Card(Suit.Clubs, 14, "Ace of Clubs"),
    Card(Suit.Diamonds, 2, "2 of Diamonds"),
    Card(Suit.Diamonds, 3, "3 of Diamonds"),
    Card(Suit.Diamonds, 4, "4 of Diamonds"),
    Card(Suit.Diamonds, 5, "5 of Diamonds"),
    Card(Suit.Diamonds, 6, "6 of Diamonds"),
    Card(Suit.Diamonds, 7, "7 of Diamonds"),
    Card(Suit.Diamonds, 8, "8 of Diamonds"),
    Card(Suit.Diamonds, 9, "9 of Diamonds"),
    Card(Suit.Diamonds, 10, "10 of Diamonds"),
    Card(Suit.Diamonds, 11, "Jack of Diamonds"),
    Card(Suit.Diamonds, 12, "Queen of Diamonds"),
    Card(Suit.Diamonds, 13, "King of Diamonds"),
    Card(Suit.Diamonds, 14, "Ace of Diamonds"),
    Card(Suit.Hearts, 2, "2 of Hearts"),
    Card(Suit.Hearts, 3, "3 of Hearts"),
    Card(Suit.Hearts, 4, "4 of Hearts"),
    Card(Suit.Hearts, 5, "5 of Hearts"),
    Card(Suit.Hearts, 6, "6 of Hearts"),
    Card(Suit.Hearts, 7, "7 of Hearts"),
    Card(Suit.Hearts, 8, "8 of Hearts"),
    Card(Suit.Hearts, 9, "9 of Hearts"),
    Card(Suit.Hearts, 10, "10 of Hearts"),
    Card(Suit.Hearts, 11, "Jack of Hearts"),
    Card(Suit.Hearts, 12, "Queen of Hearts"),
    Card(Suit.Hearts, 13, "King of Hearts"),
    Card(Suit.Hearts, 14, "Ace of Hearts"),
    Card(Suit.Spades, 2, "2 of Spades"),
    Card(Suit.Spades, 3, "3 of Spades"),
    Card(Suit.Spades, 4, "4 of Spades"),
    Card(Suit.Spades, 5, "5 of Spades"),
    Card(Suit.Spades, 6, "6 of Spades"),
    Card(Suit.Spades, 7, "7 of Spades"),
    Card(Suit.Spades, 8, "8 of Spades"),
    Card(Suit.Spades, 9, "9 of Spades"),
    Card(Suit.Spades, 10, "10 of Spades"),
    Card(Suit.Spades, 11, "Jack of Spades"),
    Card(Suit.Spades, 12, "Queen of Spades"),
    Card(Suit.Spades, 13, "King of Spades"),
    Card(Suit.Spades, 14, "Ace of Spades")
];

void main() { // main function
    foreach (card; cardDeck) { // loop through the cards in the deck
        writefln("Card %s has a value of %s.", card.name, card.value); // print the name and value of each card
    }
}
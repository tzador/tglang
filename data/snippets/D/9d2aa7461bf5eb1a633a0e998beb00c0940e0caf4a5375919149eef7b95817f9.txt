import std.algorithm : sort, Splitter;
import std.array : array;
import std.file : readText;
import std.stdio : writeln;

int[] numbers = readText("input.txt") // reads input from a text file
                    .splitter() // splits input into individual elements
                    .map!(a => a.parse!int()) // converts elements to integers
                    .array; // creates an array from the elements

// decomposition function that uses a reference parameter
void decompose(ref int num) {
    auto temp = num;
    int sum = 0;
    while(temp > 0) {
        sum += temp % 10; // adds the rightmost digit to the sum
        temp /= 10; // removes the rightmost digit
    }
    num = sum; // updates the original value with the sum
}

// sorting function to sort numbers by their sum of digits in ascending order
bool sortBySumOfDigits(int a, int b) {
    decompose(a); // decompose function updates the value of the parameter 'a'
    decompose(b); // decompose function updates the value of the parameter 'b'
    return a < b; // sorts numbers by their updated values 
}

sort(numbers, &sortBySumOfDigits); // sorts the array using the custom sorting function

writeln(numbers); // prints the sorted array to the console
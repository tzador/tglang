import std.stdio;

// Define a struct with two fields
struct Person {
    string name;
    int age;
}

// Define a function that returns a tuple
auto getPerson(string name, int age) {
    return tuple(name, age);
}

// Define a template function that takes in two types and returns their sum
auto sum(T, U)(T a, U b) {
    return a + b;
}

// Define an enum type
enum Color {
    Red,
    Green,
    Blue
}

void main() {
    // Create an instance of Person
    Person person = Person("John", 30);
    // Print out the person's name and age
    writeln("Name: ", person.name);
    writeln("Age: ", person.age);

    // Call the getPerson function and store the result in a tuple
    auto tuple = getPerson("Alice", 25);
    // Print out the tuple values
    writeln("Name: ", tuple[0]);
    writeln("Age: ", tuple[1]);

    // Call the sum function with an integer and a floating point number
    writeln("Sum: ", sum(10, 2.5));

    // Use a switch statement to print out the corresponding color of a given integer
    int num = 1;
    switch (num) {
        case 1:
            writeln("Color: ", Color.Red);
            break;
        case 2:
            writeln("Color: ", Color.Green);
            break;
        case 3:
            writeln("Color: ", Color.Blue);
            break;
    }
}
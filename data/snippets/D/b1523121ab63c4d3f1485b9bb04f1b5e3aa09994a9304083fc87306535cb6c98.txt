// This code calculates the nth Fibonacci number using dynamic programming
import std.stdio;
import std.typecons;

// Function to calculate nth Fibonacci number
long fibonacci(int n)
{
    // Create array to store previously calculated fibonacci numbers
    Tuple!(long, long)[] fibArray = new Tuple!(long, long)[](n + 1);
    
    // Base case for first two fibonacci numbers
    fibArray[0] = tuple(0, 0);
    fibArray[1] = tuple(1, 0);

    // Use for loop to calculate remaining fibonacci numbers
    for(int i = 2; i <= n; i++)
    {
        // Calculate next fibonacci number using previous two numbers in array
        fibArray[i] = tuple(fibArray[i-1].a + fibArray[i-2].a, fibArray[i-1].b + fibArray[i-2].b);
    }

    // Return the nth Fibonacci number
    return fibArray[n].a;
}

// Main function to take input and call fibonacci function
void main()
{
    // Take input from user for n
    int n;
    writeln("Enter a number: ");
    readf("%d", &n);

    // Call fibonacci function and print the result
    auto result = fibonacci(n);
    writeln("The nth Fibonacci number is: ", result);
}
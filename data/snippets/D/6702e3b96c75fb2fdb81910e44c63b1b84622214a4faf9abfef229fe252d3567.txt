// This is an example of a complex function in D programming language

/**
 * This function takes in a string and returns a list of all possible combinations of its characters
 * @param str the input string
 * @return a list of all possible combinations of the characters in the input string
 */
string[] combinations(string str) {
    // initialize an empty list to store the combinations
    string[] results;

    // if the string has only one character, return it as the only combination
    if (str.length <= 1) {
        results ~= str;
    } else {
        // loop through each character in the string
        foreach (char c; str) {
            // get all combinations of the string without the current character
            string[] subresults = combinations(str.replace(c.to_string(), ""));

            // loop through each combination and add the current character at every position
            foreach (string subresult; subresults) {
                // loop through each index position in the combination
                foreach (size_t i; 0 .. subresult.length + 1) {
                    // insert the current character at the index position and add it to the results list
                    results ~= subresult.insert(i, c.to_string());
                }
            }
        }
    }

    // return the list of combinations
    return results;
}
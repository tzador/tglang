// This function takes in two integers and returns the largest of the two numbers
int largest(int num1, int num2){
    if(num1 > num2){
        return num1;
    }
    else{
        return num2;
    }
}

// This function takes in an array of strings and prints each element
void printArray(string[] arr){
    foreach(str; arr){
        writeln(str);
    }
} 

// This function takes in a string and a character, and counts the number of occurrences of the character in the string
int countOccurences(string str, char c){
    int count = 0;
    foreach(ch; str){
        if(ch == c){
            count++;
        }
    }
    return count;
}

// This function takes in a string and reverses it 
string reverseString(string str){
    string reverse = "";
    for(int i = str.length - 1; i >= 0; i--){
        reverse = reverse ~ str[i];
    }
    return reverse;
}

// This function checks if a string is a palindrome (reads the same forwards and backwards)
bool isPalindrome(string str){
    string reverse = reverseString(str);
    if(str == reverse){
        return true;
    }
    else{
        return false;
    }
}

// This function calculates the factorial of a given number recursively
int factorial(int num){
    if(num == 0){
        return 1;
    }
    else{
        return num * factorial(num - 1);
    }
}

// Example usage
void main(){
    int a = 10;
    int b = 20;
    int largestNum = largest(a, b); // largestNum = 20

    string[] fruits = ["apple", "banana", "orange", "kiwi"];
    printArray(fruits); // prints "apple", "banana", "orange", "kiwi"

    int numOfE = countOccurences("banana", 'a'); // numOfE = 3

    string str = "hello";
    string reversed = reverseString(str); // reversed = "olleh"

    bool palindrome = isPalindrome("racecar"); // palindrome = true

    int fact = factorial(5); // fact = 120
}
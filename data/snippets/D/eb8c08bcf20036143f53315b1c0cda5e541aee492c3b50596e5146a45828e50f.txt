/***
 * This is a complex code snippet in D Programming Language.
 *
 * It first defines a struct called "Person" with three fields: name, age and hobbies.
 * Then it creates a function called "showPersonInfo" that takes in an instance of "Person" and prints out their information.
 * Next, it defines an array of "Person" instances and populates it with some sample data.
 * After that, it loops through the array and calls the "showPersonInfo" function for each instance.
 * Finally, it prints out a thank you message.
*/

import std.stdio; // Import the standard I/O module

struct Person { // Define a struct with three fields
	string name;
	int age;
	string[] hobbies;
}

void showPersonInfo(Person person) { // Define a function that takes in a Person instance
	string hobbiesStr = ""; // Create an empty string to store the person's hobbies
	foreach (hobby; person.hobbies) { // Use a foreach loop to iterate through the person's hobbies
		hobbiesStr ~= hobby ~ ", "; // Concatenate each hobby to the string, separated by commas
	}
	writeln("Name: ", person.name); // Print out the person's name
	writeln("Age: ", person.age); // Print out the person's age
	writeln("Hobbies: ", hobbiesStr[0 .. $ - 2]); // Print out the person's hobbies, removing the last comma
	writeln(); // Print an empty line
}

void main() { // Define the main function
	Person[] persons = [ // Create an array of Person instances and populate it with sample data
		Person("John", 27, ["Coding", "Reading", "Hiking"]),
		Person("Jane", 31, ["Cooking", "Drawing", "Gardening"]),
		Person("Bob", 35, ["Fishing", "Watching movies", "Playing video games"])
	];

	foreach (person; persons) { // Use a foreach loop to iterate through the array of Persons
		showPersonInfo(person); // Call the showPersonInfo function for each Person instance
	}

	writeln("Thank you for using this complex D code snippet!"); // Print out a thank you message
}
// Define a struct with a dynamic array as a member
struct Person
{
    string name;
    int[] ages;
}

// Create an array of Persons
Person[] people;

// Populate the array
people = [Person("John", [25, 30, 35, 40]),
          Person("Jane", [20, 25, 30, 35]),
          Person("Bob", [40, 45, 50, 55])];

// Create a function to calculate the average age of a Person
double calcAverage(Person person)
{
    double total = 0;

    // Loop through all the ages in the Person
    foreach (int age; person.ages)
    {
        total += age;
    }

    // Calculate and return the average age
    return total / person.ages.length;
}

// Create an array to store the average ages
double[] averageAges;

// Calculate the average age for each Person and store it in the array
foreach (int i, Person person; people)
{
    averageAges[i] = calcAverage(person);
}

// Print the average ages
foreach (double age; averageAges)
{
    writeln("The average age for this person is %s", age);
}
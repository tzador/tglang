// Define a struct called Point with two member variables, x and y, both of type float.
struct Point {
    float x;
    float y;
}

// Define a function called distance that takes in two Point objects as parameters
// and returns the distance between them as a float.
float distance(Point p1, Point p2) {
    // Calculate the difference between the x coordinates.
    float xDifference = p1.x - p2.x;

    // Calculate the difference between the y coordinates.
    float yDifference = p1.y - p2.y;

    // Calculate the distance using the Pythagorean theorem.
    float distance = sqrt(xDifference * xDifference + yDifference * yDifference);

    // Return the distance.
    return distance;
}

// Define an array of Point objects.
auto points = [Point(1,1), Point(2,2), Point(3,3), Point(4,4)];

// Use a foreach loop to iterate through the array and print the distance between each pair of points.
foreach (point; points) {
    // Use a nested foreach loop to compare each point to every other point in the array.
    foreach (other; points) {
        // Calculate and print the distance between the two points.
        writeln("Distance between ", point, " and ", other, " is ", distance(point, other));
    }
}
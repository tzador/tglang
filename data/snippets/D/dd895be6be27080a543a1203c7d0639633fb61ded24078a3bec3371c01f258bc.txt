import std.array; // import the standard array module
import std.algorithm : sort; // import only the sort function from the standard algorithm module

/**
 * The Binary Search function searches for a given value in a sorted array using the binary search algorithm.
 * If the value is found, it returns the index of the value in the array.
 * If the value is not found, it returns -1.
 */
int binarySearch(T)(T[] arr, T value) {
    int low = 0; // initialize the lowest index as 0
    int high = arr.length - 1; // initialize the highest index as the last index of the array

    while(low <= high) { // loop until the low index is less than or equal to the high index
        int mid = (low + high) / 2; // calculate the middle index by dividing the sum of low and high by 2
        if(arr[mid] == value) return mid; // if the value is found at the middle index, return the index
        else if(arr[mid] < value) low = mid + 1; // if the value is greater than the middle element, update the low index
        else high = mid - 1; // if the value is less than the middle element, update the high index
    }

    return -1; // return -1 if the value is not found in the array
}

void main() {
    int[] arr = [5, 3, 9, 1, 7]; // sample array
    sort(arr); // sort the array using the imported sort function
    int index = binarySearch(arr, 3); // search for the value 3 in the sorted array
    if(index != -1) { // if the value is found
        // print the index of the value in the array
        writefln("The value is found at index %s", index);
    }
    else {
        // if the value is not found
        writefln("The value is not found in the array");
    }
}
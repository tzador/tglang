// This code snippet is a simple prime number generator using the Sieve of Eratosthenes algorithm
import std.stdio;

void main()
{
    // create an array of numbers to check for primality
    bool[] isPrime = new bool[1000];
    
    // initialize all elements to true, representing potential primes
    foreach (ref b; isPrime)
    {
        b = true;
    }
    
    // set 0 and 1 to false, as they are not prime
    isPrime[0] = isPrime[1] = false;
    
    // loop through the array and eliminate multiples of numbers starting from 2
    for (int i = 2; i < isPrime.length; i++)
    {
        if (isPrime[i]) // check if current number is marked as potential prime
        {
            // eliminate all multiples of i from the array
            for (int j = i * i; j < isPrime.length; j+=i)
            {
                isPrime[j] = false;
            }
        }
    }
    
    // print all remaining numbers marked as true in the array, which are the prime numbers
    foreach (i, prime; isPrime)
    {
        if (prime)
            writeln(i);
    }
}
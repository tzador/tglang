/* This is a complex code snippet in D Programming Language */

import std.stdio; // importing standard input/output library

// defining a struct named ComplexNum
struct ComplexNum {
    double real; // real part of the complex number
    double imag; // imaginary part of the complex number

    // method to calculate the modulus of complex number
    double modulus() {
        return sqrt(real * real + imag * imag); // using sqrt function from math library
    }

    // method to calculate the conjugate of complex number
    ComplexNum conjugate() {
        return ComplexNum(real, -imag); // returning a new instance of ComplexNum with real and imaginary parts swapped
    }

    // method to multiply two complex numbers
    ComplexNum operator*(ComplexNum other) {
       return ComplexNum(real * other.real - imag * other.imag,
                         real * other.imag + imag * other.real); // performing complex multiplication
    }
}

void main() {
    // creating two instances of ComplexNum
    ComplexNum num1 = ComplexNum(3.5, 2.5);
    ComplexNum num2 = ComplexNum(2.0, 1.5);

    // printing the modulus and conjugate of first complex number using dot notation
    writeln("Modulus of num1 = ", num1.modulus());
    writeln("Conjugate of num1 = ", num1.conjugate().real, " + ", num1.conjugate().imag, "i");

    // printing the product of two complex numbers using operator overloading
    writeln("Product of num1 and num2 = ", (num1 * num2).real, " + ", (num1 * num2).imag, "i");
}
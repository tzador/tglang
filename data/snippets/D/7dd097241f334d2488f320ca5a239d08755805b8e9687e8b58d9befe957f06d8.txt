//Importing necessary modules
import std.stdio;
import std.math : sqrt;

//Defining a template function for calculating prime numbers
template isPrime(T)(T input) {
    foreach (i; 2 .. input) {
        if (input % i == 0) {
            //Return false if input is divisible by any number other than 1 and itself
            return false;
        }
    }
    //Return true if input is only divisible by 1 and itself
    return true;
}

//Creating a struct to hold prime number and its index
struct PrimeInfo {
    int index;
    int number;
}

//Initializing array to hold prime numbers
PrimeInfo[] primes;

//Getting user input for number of prime numbers to generate
int n;
writeln("Enter the number of prime numbers to generate:");
readf("%d", &n);

//Initializing variable to keep track of current prime number index
int currentPrimeIndex = 0;

//Looping through numbers starting from 2 and checking if they are prime
foreach (i; 2..n * 10) {
    if (isPrime(i)) {
        //If current number is prime, add it to primes array with its index
        primes ~= PrimeInfo(currentPrimeIndex, i);
        currentPrimeIndex++;

        //Break the loop if desired number of prime numbers have been generated
        if (primes.length == n) {
            break;
        }
    }
}

//Printing prime numbers and their indices
foreach (prime; primes) {
    writeln("Prime number " ~ to!string(prime.index + 1) ~ ": " ~ to!string(prime.number));
}
// This code snippet generates a complex number class in D programming language
class Complex
{
    // Private variables to store real and imaginary parts of the complex number
    private real;
    private imaginary;

    // Constructor to initialize the real and imaginary variables
    this(real, imaginary)
    {
        this.real = real;
        this.imaginary = imaginary;
    }

    // Operator overloading to add two complex numbers
    Complex opBinary(string op)(Complex c)
    {
        if(op == "+")
        {
            return new Complex(real + c.real, imaginary + c.imaginary);
        }
    }

    // Function to calculate the magnitude of a complex number
    double magnitude()
    {
        return sqrt(real * real + imaginary * imaginary);
    }

    // Function to calculate the conjugate of a complex number
    Complex conjugate()
    {
        return new Complex(real, -imaginary);
    }

    // Function to calculate the inverse of a complex number
    Complex inverse()
    {
        double denominator = real * real + imaginary * imaginary;
        return new Complex(real / denominator, -imaginary / denominator);
    }
}

// Testing the complex number class
void main()
{
    Complex a = new Complex(2.0, 3.0);
    Complex b = new Complex(-1.0, 4.0);
    Complex c = a + b; // adding two complex numbers using operator overloading
    
    // Printing the results
    writeln("a = ", a.toString());
    writeln("b = ", b.toString());
    writeln("c = ", c.toString());
    
    // Testing the magnitude function
    writeln("Magnitude of a = ", a.magnitude());
    writeln("Magnitude of b = ", b.magnitude());
    writeln("Magnitude of c = ", c.magnitude());
    
    // Testing the conjugate function
    writeln("Conjugate of a = ", a.conjugate().toString());
    writeln("Conjugate of b = ", b.conjugate().toString());
    writeln("Conjugate of c = ", c.conjugate().toString());
    
    // Testing the inverse function
    writeln("Inverse of a = ", a.inverse().toString());
    writeln("Inverse of b = ", b.inverse().toString());
    writeln("Inverse of c = ", c.inverse().toString());
}
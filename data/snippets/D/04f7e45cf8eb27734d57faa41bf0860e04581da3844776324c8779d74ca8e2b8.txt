/**
* Calculates the nth Fibonacci number using recursion.
* Params:
* n: an integer representing the index of the Fibonacci number to be calculated
* Returns:
* the calculated Fibonacci number as an integer
*/
int fibonacci(int n){
    // Base case: when n is 0 or 1, return n
    if (n <= 1){
        return n;
    }
    // Recursive call to calculate the Fibonacci number of (n-1) and (n-2)
    return fibonacci(n-1) + fibonacci(n-2);
}

/*
* Program to print the first 10 Fibonacci numbers using the 'fibonacci' function.
*/

import std.stdio; // Importing the standard I/O module

void main(){
    // Creating an array to store the first 10 Fibonacci numbers
    int[] fibArray = new int[10];

    // Looping through the array and calculating the Fibonacci number 
    for (int i=1; i <= 10; i++){
        fibArray[i-1] = fibonacci(i);
    }

    // Printing the Fibonacci numbers in the array
    foreach (n; fibArray){
        writeln(n);
    }
}
module fibonacci;

// defining a recursive function for calculating fibonacci series up to a given number
ulong[] fibonacci(ulong n)
{
	// base case, if n is 0 or 1, return n
	if(n <= 1)
	{
		return [n];
	}
	// recursive calls to calculate the fibonacci series
	else
	{
		// define two variables to store the last two numbers in the series
		ulong fib_n1 = 0;
		ulong fib_n2 = 1;
		// initialize an array to store the fibonacci series
		ulong[] series = [0, 1];
		// loop from index 2 to n to calculate the series elements
		for(ulong i = 2; i <= n; i++)
		{
			// calculate the next number in the series as the sum of the previous two numbers
			ulong next = fib_n1 + fib_n2;
			// append the next number to the series array
			series ~= next;
			// update fib_n1 and fib_n2 for the next iteration
			fib_n1 = fib_n2;
			fib_n2 = next;
		}
		// return the fibonacci series array
		return series;
	}
}

// calling the fibonacci function and printing the series up to 20 numbers
writeln(fibonacci(20));
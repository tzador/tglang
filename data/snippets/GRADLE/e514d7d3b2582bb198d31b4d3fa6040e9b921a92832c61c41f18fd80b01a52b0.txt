// Define a task to build and compile the project
task build(type: Compile) {
    sourceDir = file('src/main/java')
    classpath = files(project.configurations.compile)
    outputs.dir(project.buildDir)
}

// Add a dependency on another project
dependencies {
    compile project(':dependency-project')
}

// Define a custom task to run the project
task runTask(dependsOn: build) {
    doLast {
        exec {
            executable = 'java'
            args = ['-classpath', project.buildDir + '/classes/java/main/', 'com.example.project.MainClass']
        }
    }
}

// Configure the project properties
ext {
    projectProperty = 'Some Value'
}

// Define a task to run unit tests
task test(type: Test) {
    scanForTestClasses = true
    testClassesDir = project.sourceSets.test.output.classesDirs
    classpath = files(project.sourceSets.test.runtimeClasspath)
    reports.html.enabled = false
}

// Add a plugin to generate documentation from JavaDoc comments
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'java-doc'

// Set options for JavaDoc generation
javadoc {
    options.addStringOption('sourcepath', project.sourceSets.main.allSource.srcDirs)
    options.docTitle = "Project Documentation"
    options.docVersion = "1.0"
    options.docAuthor = "John Doe"
}

// Define a custom task to zip the project files
task zip(type: Zip) {
    from project.projectDir
    exclude '.gradle'
    archiveName = "project-files.zip"

    // Add some additional files to the zip file
    into('docs') {
        from 'README.md'
    }

    into('lib') {
        from configurations.compile
    }
}
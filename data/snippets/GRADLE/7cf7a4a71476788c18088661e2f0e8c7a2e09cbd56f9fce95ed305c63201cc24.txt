// This snippet creates a custom task called "generateReport".
task generateReport(type: Exec) {
    // Sets the command to be executed by the task.
    commandLine 'bash', '-c', 'echo "Generating report..." && sleep 5 && echo "Report generated."'

    // Specifies that the task should only be executed if necessary.
    // Uses Gradle's built-in "outputs.upToDateWhen" property.
    outputs.upToDateWhen { !outputs.outOfDateFiles.isEmpty() } 

    // Adds a description to the task.
    description 'Generates a report for the project.'

    // Adds a group to the task, for better task organization.
    group 'Reporting'

    // Specifies the directory where the report should be generated.
    // Uses the Gradle "buildDir" property.
    workingDir = "${buildDir}/reports"

    // Sets the standard error stream for the task to be redirected to the console.
    errorOutput = System.out

    // Sets the standard output stream for the task to be redirected to a file.
    // Uses Gradle's built-in "file" method to specify the file name and location.
    standardOutput = new File("${buildDir}/reports/report.txt")

    // Adds a required input property to the task.
    // Users must specify the project name when running the task.
    inputs.property('projectName', 'Project name')

    doFirst {
        // Executes a command before the main command specified above.
        // Creates a directory for the generated report if it doesn't already exist.
        exec {
            commandLine 'mkdir', '-p', "${buildDir}/reports"
        }
    }

    doLast {
        // Executes a command after the main command specified above.
        // Prints a message to the console.
        println "Report generation complete."
    }
}
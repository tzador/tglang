plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    // Apply the application plugin to add support for building a command line application
    id 'application'
}

// Set the application's entry point, used with the application plugin
mainClassName = 'com.example.Main'

// Configure build types
// Updated to use the new 'implementation' configuration
// This is the recommended way to declare dependencies
configurations {
    developmentImplementation
    releaseImplementation.extendsFrom(developmentImplementation)
    testImplementation.extendsFrom(developmentImplementation)
}

// Define dependencies for production
dependencies {
    // Implementation only dependencies
    developmentImplementation 'com.google.guava:guava:20.0'
    developmentImplementation 'org.apache.commons:commons-math3:3.6.1'
    developmentImplementation 'org.slf4j:slf4j-api:1.7.25'
    developmentImplementation 'org.slf4j:slf4j-simple:1.7.25'

    // Implementation and test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.27.0'
}

// Define dependencies for development
dependencies {
    // Implementation only dependencies
    releaseImplementation 'com.google.guava:guava:20.0'
    releaseImplementation 'org.apache.commons:commons-math3:3.6.1'
    releaseImplementation 'org.slf4j:slf4j-api:1.7.25'
    releaseImplementation 'org.slf4j:slf4j-simple:1.7.25'

    // Implementation and test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.27.0'
}

// Define tasks for running tests
test {
    // Set up test environment
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }

    // Configure test reporting
    testLogging {
        events 'passed', 'failed'
    }
}

// Define tasks for publishing artifacts
publishing {
    publications {
        // Publication for Maven repository
        maven(MavenPublication) {
            // Add the main library artifact as the publication artifact
            from components.java

            // Add the POM file as an additional artifact
            artifact sourcesJar {
                classifier sourceClassifier
            }
            artifact javadocJar {
                classifier docClassifier
            }
        }
    }

    // Configure publication repositories
    repositories {
        // Configure Maven repository
        maven {
            // Set the URL for publishing artifacts
            url "https://repo.example.com/"

            // Set credentials for accessing the repository
            credentials {
                username project.getRootProject().provider.username
                password project.getRootProject().provider.password
            }
        }
    }
}
plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
}

group 'com.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.projectreactor:reactor-test:3.3.11.RELEASE'
}

//task to build a shaded JAR with dependencies
task shadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    configurations = [project.configurations.runtimeClasspath]
    //include all dependencies in a single project
    mergeServiceFiles('META-INF/spring.handlers', 'META-INF/spring.schemas')
    archiveClassifier.set('shaded')
}

//task to run project application
task runApp(type: JavaExec) {
    group = 'sample'
    //sets the main class to run
    main = 'com.example.Application'
    //sets the classpath dependencies
    classpath = sourceSets.main.runtimeClasspath
}

//task dependency to run shadowJar before runApp task
runApp.dependsOn(shadowJar)
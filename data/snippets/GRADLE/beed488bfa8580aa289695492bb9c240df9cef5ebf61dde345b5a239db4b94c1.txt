// This block specifies the dependencies for our project
dependencies {
    // Adds the JUnit library as a test dependency
    testImplementation 'junit:junit:4.12'

    // Adds the Apache Commons library as a runtime dependency
    runtime 'org.apache.commons:commons-lang3:3.8.1'
}

// This block defines a task to clean up our project
task clean(type: Delete) {
    // Specifies the directory to clean up
    delete 'build'
}

// This block configures the build script to use the Java plugin
apply plugin: 'java'

// This block specifies the source and output directories for our project
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

// This block configures the Java plugin's tasks
tasks.withType(JavaCompile) {
    // Specifies the Java version to use for compilation
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    // Adds the runtime dependencies to the classpath for compilation
    classpath = sourceSets.main.runtimeClasspath
}

// This block configures the JUnit plugin to run our tests
test {
    // Specifies the JUnit version to use and the test output directory
    useJUnitPlatform()
    reports {
        junitXml {
            outputPerTestCase = true
            destination = file("${project.buildDir}/test-results/junit-results.xml")
        }
    }
}

// This block specifies the main class for our project's Jar file
jar {
    manifest {
        attributes (
                'Main-Class': 'com.example.MainClass'
        )
    }
}

// This block configures the project's repositories
repositories {
    // Adds the Maven Central repository to download dependencies from
    mavenCentral()
}

// This block specifies the project's version
version = '1.0.0'

// This block specifies the project's group name
group = 'com.example.gradle'

// This block specifies the project's description
description = 'This is a sample Gradle project.'
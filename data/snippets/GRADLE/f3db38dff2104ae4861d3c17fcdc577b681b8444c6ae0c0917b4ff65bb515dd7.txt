//A multi-project build script in GRADLE

//Define the root project
project(':') {

    // Configure the root project
    apply plugin: 'java'
    version = '1.0'

    // Define common dependencies
    repositories {
        mavenCentral()
    }

    dependencies {
        // Define junit dependency for testing
        testCompile 'junit:junit:4.12'

        // Define spring-boot-starter-web dependency for web development
        compile 'org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE'

        // Define hibernate dependency for database operations
        compile 'org.hibernate:hibernate-core:5.4.1.Final'
    }

    // Define subprojects
    subprojects {

        // Configure subprojects to use the same source and target compatibility as root project
        sourceCompatibility = project.'java'.version
        targetCompatibility = project.'java'.version

        // Include test task for subprojects
        apply plugin: 'java'

        // Define dependencies for subprojects
        dependencies {
            // Inherit dependencies from root project
            compile project(':')

            // Define logging dependency for all subprojects
            compile 'org.slf4j:slf4j-api:1.7.25'
            compile 'ch.qos.logback:logback-classic:1.2.3'
        }

        // Define test task to run junit tests
        task test(type: Test) {
            // Use junit platform engine to run tests
            useJUnitPlatform()
        }
    }
}

// Define subproject A
project(':subprojectA') {

    // Configure subproject A
    apply plugin: 'java'
    version = '1.0'

    // Define dependencies for subproject A
    dependencies {
        // Inherit dependencies from root project
        compile project(':')

        // Define additional dependencies for subproject A
        compile 'com.google.guava:guava:27.0-jre'
        compile 'org.json:json:20180813'
    }

    // Define task to create a runnable jar for subproject A
    task createJar(type: Jar, dependsOn: 'build') {
        // Set the name and main class for the jar
        manifest {
            attributes 'Main-Class': 'com.example.subprojectA.Main'
        }
        // Include all necessary files in the jar
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

// Define subproject B
project(':subprojectB') {

    // Configure subproject B
    apply plugin: 'java'
    version = '1.0'

    // Define dependencies for subproject B
    dependencies {
        // Inherit dependencies from root project
        compile project(':')

        // Define additional dependencies for subproject B
        compile 'com.google.code.gson:gson:2.8.6'
        compile 'org.apache.commons:commons-lang3:3.9'
    }

    // Define task to create a runnable jar for subproject B
    task createJar(type: Jar, dependsOn: 'build') {
        // Set the name and main class for the jar
        manifest {
            attributes 'Main-Class': 'com.example.subprojectB.Main'
        }
        // Include all necessary files in the jar
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}
plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
static def helloWorld() {
    println "Hello World!"    
}

description = "Example build file for using Gradle"

group = "com.example" 
version = "1.0-SNAPSHOT"   

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok' 
}

test {
    useJUnitPlatform()
}

task report(type: JavaExec, dependsOn: test) {
    main = 'com.example.ReportGenerator'
    classpath = sourceSets.main.runtimeClasspath
    args reports.junitXml.destination
}

jar {
    manifest {
        attributes 'Main-Class': 'com.example.Application'
    }
}

distributions {
    main {
        baseName = 'my-app'
        contents {
            from (configurations.runtimeClasspath) {
                into 'lib'
            }
            from (tasks.withType(Jar)) {
                into 'lib'
            }
            from (tasks.withType(Javadoc)) {
                into 'docs/javadoc'
            }
            from (file('readme.txt')) {
                into '.'
            }
        }
    }
}

buildscript {
    repositories {
        maven {
            url "https://example.com/maven"
        }
    }
    dependencies {
        classpath("com.example:gradle-plugin:1.0")
    }
}

apply plugin: "com.example.gradle-plugin"

example {
    property = "example value"
    outputDirectory = "build/example-output"
    configFile = file("src/main/resources/config.properties")
    tasks {
        task1 {
            property1 = "value1"
            property2 = "value2"
        }
        task2 {
            property3 = "value3"
            property4 = "value4"
        }
    }
}
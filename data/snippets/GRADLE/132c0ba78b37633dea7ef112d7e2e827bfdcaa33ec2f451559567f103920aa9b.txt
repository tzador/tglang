// Define a task named 'myTask'
task myTask {
    // Configure the task to run in parallel
    outputs.upToDateWhen { true }

    // Create a file dynamically using a closure
    outputFile = {
        def outputDir = new File(project.buildDir, "my files")
        outputDir.mkdirs()

        new File(outputDir, "output.txt")
    }

    // Define a 'doLast' action that prints a message and creates the file
    doLast {
        println "Generating file..."
        def outputFile = outputFile.get()
        outputFile << "This is some text that will be written to the file."
    }
}

// Define a task named 'myOtherTask' that depends on 'myTask'
task myOtherTask(dependsOn: myTask) {
    // Print a message and show the path of the dynamically created file
    doLast {
        println "The file was created at: ${myTask.outputFile}"
    }
}
plugins {
  id 'java'
  id 'application'
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'com.google.guava:guava:26.0-android'
  testCompile 'junit:junit:4.12'
}

jar {
  baseName = 'my-app'
  version =  '1.0.0'
}

application {
  mainClass = 'com.example.app.Main'
}

/**
 * This task generates a custom output file with both
 * the main and test classes packaged in a single JAR file.
 */
task generateCustomJar(type: Jar) {
  dependsOn jar, testClasses
  from jar
  from testClasses
  include 'com/example/app/Main.class'
  include 'com/example/app/TestClass.class'
  archiveClassifier = 'custom'
  destinationDirectory = file('custom-jars')
}

/**
 * This task runs all tests and generates a coverage report.
 */
task testAndGenerateCoverageReport(type: Test) {
  useJUnitPlatform()
  reports.junitXml.destination = file('reports/test-results.xml')
}

/**
 * This task runs a custom code quality check on the project.
 */
task runCodeQualityCheck(type: Checkstyle) {
  source 'src/main/java'
  classpath = files()
  reports {
    html.destination = file('reports/code-quality.html')
  }
}

/**
 * This task bundles all tasks related to code quality into a single task.
 */
task codeQuality(type: GradleBuild) {
  dependsOn 'testClasses'
  dependsOn 'jar'
  dependsOn 'runCodeQualityCheck'
  description = 'Runs all required tasks to ensure code quality.'
}
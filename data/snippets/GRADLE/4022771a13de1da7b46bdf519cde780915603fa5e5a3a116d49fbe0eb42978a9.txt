plugins {
    // apply the java plugin
    id 'java'
    
    // apply the application plugin
    id 'application'

    // apply the jacoco plugin for code coverage
    id 'jacoco'
    
    // apply the signing plugin for release builds
    id 'signing'
    
    // apply the publish plugin for publishing to external repositories
    id 'publish'
}

// configure the java plugin
java {
    // set the source and target compatibility to Java 11
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    // define the main class for the application
    mainClassName = 'com.example.HelloWorld'
}

// configure the application plugin
application {
    // set the main class for the application
    mainClassName = 'com.example.HelloWorld'
}

// configure the jacoco plugin
jacoco {
    // enable code coverage for all source sets
    toolVersion = '0.8.6'
    applyTo 'allsourceSets'
    
    // exclude certain classes from code coverage
    excludes = ['**/internal/**']
}

// configure the signing plugin
signing {
    // set the location of the signing key
    def signingKey = file(rootProject.file('signing.key'))
    // specify the password for the key
    def signingPassword = 'password'
    // specify the key alias
    def signingAlias = 'myalias'
    
    // configure the signing extensions for release builds
    release {
        // set the path to the location of the key
        signingKey signingKey
        // set the password for the key
        signingPassword signingPassword
        // set the alias of the key
        signingKeyAlias signingAlias
        // set the key store type
        storeType 'jks'
        // set the key store password
        storePassword signingPassword
        // set the key store alias
        keyPassword signingPassword

        // customize the signing configuration based on the environment
        if (project.hasProperty("environment") && project.property("environment").equals("prod")){
            // specify which artifacts to sign
            sign configurations.archives
        }
    }
}

// configure the publish plugin
publishing {
    // specify the publications to be published
    publications {
        // publication for the jar artifact
        jar(MavenPublication) {
            // set the group ID for the artifact
            groupId = 'com.example'
            // set the artifact ID
            artifactId = 'hello-world'
            // set the version of the artifact
            version = project.version
            
            // configure the artifact to be published
            from components.java
        }
        // publication for the source jar artifact
        sourceJar(MavenPublication) {
            // set the group ID for the artifact
            groupId = 'com.example'
            // set the artifact ID
            artifactId = 'hello-world-sources'
            // set the version of the artifact
            version = project.version

            // configure the artifact to be published
            artifact sourceJar
        }
    }
    
    // specify the repositories to publish to
    repositories {
        // specify the URL of the external repository
        maven {
            url = 'https://repo.example.com/maven'
            
            // specify the credentials for the repository
            credentials {
                // set the username for authentication
                username = System.getenv('MAVEN_USERNAME')
                // set the password for authentication
                password = System.getenv('MAVEN_PASSWORD')
            }
        }
    }
}
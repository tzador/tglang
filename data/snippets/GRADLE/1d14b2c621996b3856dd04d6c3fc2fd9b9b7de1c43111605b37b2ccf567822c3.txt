// Define custom task
task myTask(type: Copy) {
    // Specify input and output files
    from file("input.txt")
    into file("output.txt")

    // Set options for copying
    includeEmptyDirs = true
    preserveLastModified = true

    // Define action to execute
    doLast {
        println "Successfully copied input file to output file!"
    }
}

// Define a custom configuration
configurations {
    myConfig
}

// Dependencies for custom configuration
dependencies {
    myConfig group: 'com.example', name: 'myLibrary', version: '1.0'
}

// Define a new source set
sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
        resources {
            srcDirs 'src/main/resources'
        }
    }
    test {
        java {
            srcDirs 'src/test/java'
        }
        resources {
            srcDirs 'src/test/resources'
        }
    }
}

// Define a task that runs all tests
task runTests(type: Test) {
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
    reports {
        xml.enabled = true
        html.enabled = true
    }
    // Set minimum required code coverage
    jacoco {
        // Use default minimum of 70%
        minimum = "default"
        // Require coverage for all files
        applyToSourceSets(sourceSets.all) {
            it.sourceFiles.forEach { sourceFile ->
                sourceFile.getClasses()
            }
        }
        // Report violations
        violations {
            rule {
                limit {
                    minimum = 0.8
                }
                includeClassesMatching "com.example.*"
                excludeClassesMatching "com.example.*Test"
            }
        }
    }
}
dependencies {
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.23.Final'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    annotationProcessor group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-tomcat")
    }
}

task customTask(type: JavaCompile) {
    source = fileTree('src/customJava')
    classpath = files(dependencies.compile)
    options.encoding = 'UTF-8'
    options.debug = 'true'
}

task myTask(type: Copy) {
    from 'src/customJava/resources'
    into 'build/myTask/resources'
    exclude '**/logs/**'
    exclude '**/*.tmp'
    filter {
        String line -> line.replace('customString', project.property('customValue'))
    }
}

task customTask(dependsOn: 'assemble') {
    mustRunAfter 'clean'
    description 'Custom Task for Building and Cleaning'
    
    doLast {
        println 'Custom Task Executed!'
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    description 'Task for Running Integration Tests'
}

build.finalizedBy customTask
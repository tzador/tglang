plugins {
    // Applies the java-library plugin to the current project
    id 'java-library'
    // Applies the groovy plugin to the current project
    id 'groovy'
    // Applies the application plugin to the current project
    id 'application'
}

// Specifies the main class for the application
mainClassName = 'com.example.myapp.Main'

// Configures the dependencies for the project
dependencies {
    // Adds a dependency on the JUnit 5 platform launcher
    testImplementation 'org.junit.platform:junit-platform-launcher:1.0.1'
    // Adds a dependency on the Groovy library
    implementation 'org.codehaus.groovy:groovy:2.5.11'
}

// Configures the tasks for the project
tasks {
    // Compiles the java source files
    compileJava {
        options.encoding = 'UTF-8'
    }

    // Runs the JUnit tests
    test {
        useJUnitPlatform()
    }

    // Creates a fat jar with all dependencies
    jar {
        // Specifies the manifest for the jar file
        manifest {
            attributes 'Main-Class': mainClassName
        }

        // Includes all dependencies in the jar
        dependsOn configurations.runtime
        from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

// Adds a custom task to check the code style
task checkStyle(type: JavaExec) {
    main = 'com.puppycrawl.tools.checkstyle.Main'
    args = ['-c', 'config/checkstyle.xml', 'src/main/java']
}
// This snippet is a complex build script written in GRADLE
apply plugin: 'java'

dependencies {
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'com.google.guava:guava:27.1-jre'
    testCompile 'junit:junit:4.12'
}

repositories {
    mavenCentral()
    jcenter()
}

task prepareSrc(type:Copy) {
    from 'src'
    into 'src-2-x'
}

dependencies {
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'com.google.guava:guava:27.1-jre'
}

task clean(type: Delete) {
    delete 'build'
}

// This task will run unit tests and generate coverage report
task testWithCoverage(type: Test) {
    useJUnit()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
    jacoco {
        append = false
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

// This task will generate a zip file with the build result
task zip(type: Zip) {
    from 'build/libs'
    archiveName 'my-project.zip'
}

// This task will run checkstyle and generate a report
task checkstyle(type: Checkstyle) {
    configFile file("${rootDir}/config/checkstyle.xml")
    source 'src'
    include '**/*.java'
    classpath = files()
}

// This task will generate javadoc for project classes
task javadoc (type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = files(sourceSets.main.compileClasspath)
    destinationDir = file("${buildDir}/javadoc")
}

defaultTasks 'clean', 'prepareSrc', 'test', 'checkstyle', 'javadoc', 'zip'
// Creating a custom task called "installAndRun" that will run the "install" task and then the "run" task
task installAndRun(dependsOn: ['install', 'run']) {
    doLast {
        println "Running install and then run"
    }
}

// Defining plugins to use in the build script
plugins {
    id 'java'
    id 'application'
}

// Configuring the "java" plugin
java {
    // Setting the JDK to use
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Configuring the "application" plugin
application {
    // Setting the main class
    mainClassName = 'com.example.MyApplication'
}

// Configuring the repositories to use for dependency resolution
repositories {
     mavenCentral()
     google()
}

// Creating a configuration for the dependency "com.google.guava"
configurations {
     guava
}

// Adding the dependency "com.google.guava" to the "compile" configuration
dependencies {
     compile 'com.google.guava:guava:28.2-jre'
}

// Defining a task called "printClasspath" that will print out the classpath used during compilation
task printClasspath {
     doLast {
          println "Classpath: " + sourceSets.main.compileClasspath.asPath
     }
}

// Creating a custom task called "printDependencies" that will print out all the dependencies in the "compile" configuration
task printDependencies {
     doLast {
          println "Dependencies: " + configurations.compile.files
     }
}

// Defining a task called "copyFiles" that will copy all "txt" files from one directory to another
task copyFiles(type: Copy) {
     from 'src/main/resources'
     into 'build/output'
     include '*.txt'
}

// Creating a task dependency between "printClasspath" and "copyFiles"
copyFiles.dependsOn(printClasspath)

// Creating a task dependency between "printDependencies" and "installAndRun"
installAndRun.dependsOn(printDependencies)

// Adding a task to the "build" task so that it runs "installAndRun" and "copyFiles" before building the project
build.dependsOn(installAndRun, copyFiles)

// Creating a custom task called "customTask" that will execute some custom code
task customTask {
    doLast {
        // Custom code to execute
        println "Inside custom task"
    }
}

// Creating a task dependency between "customTask" and "printDependencies"
customTask.dependsOn(printDependencies)

// Creating a custom task called "testTask" that will execute some tests
task testTask(type: Test) {
    // Setting the test classes to run
    include 'com.example.*Test'
}

// Creating a task dependency between "build" and "testTask"
build.dependsOn(testTask)

// Adding a task to the "clean" task so that it also deletes the "build" directory
clean {
    delete 'build'
}
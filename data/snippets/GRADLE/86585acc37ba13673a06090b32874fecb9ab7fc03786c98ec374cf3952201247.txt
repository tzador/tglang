plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

// Configure build settings
buildscript {
    repositories {
        // Use JCenter for resolving dependencies
        jcenter()
    }

    // Declare dependencies for the build script. Here, we are using the Gradle Wrapper, so we need to add the 'gradle-wrapper' plugin.
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.21.0'
        classpath 'gradle.plugin.com.adarshr:gradle-webpack-plugin:1.3.4'
    }
}

// Configure the version of the project
version '1.0'

// Configure the main class for the application
mainClassName = "com.example.Application"

// Configure dependencies for the project
dependencies {
    // Use JUnit for unit testing
    testCompile 'junit:junit:4.12'

    // Add the apache commons library as a dependency
    implementation 'org.apache.commons:commons-lang3:3.10'

    // Add the guava library as a dependency
    implementation 'com.google.guava:guava:30.0-jre'

    // Add the lombok library as a dependency
    implementation 'org.projectlombok:lombok:1.18.20'
}

// Configure tasks for the project
task buildDist(type: Exec) {
    workingDir './dist'
    commandLine './build.sh'
}

// Configure the application plugin for running the project
run {
    // Set the arguments for running the application
    args property('exec.args', '').split(',')

    // Set the system properties for running the application
    systemProperty 'prop1', 'value1'
    systemProperty 'prop2', 'value2'
}
apply plugin: 'java'
// Applies the java plugin to the current project

sourceSets {
    main {
        java {
            srcDirs = ['src/java']
        }
        resources {
            srcDirs = ['src/resources']
        }
    }
    test {
        java {
            srcDirs = ['test/java']
        }
        resources {
            srcDirs = ['test/resources']
        }
    }
}
// Defines the source sets for the project

dependencies {
    compile 'org.hibernate:hibernate-core:5.4.31.Final'
    // Adds hibernate-core as a dependency to the project
    testCompile 'junit:junit:4.13.2'
    // Adds junit as a dependency for testing
    compile 'org.slf4j:slf4j-api:1.7.30'
    // Adds the slf4j-api as a dependency for logging
    compile 'com.fasterxml.jackson.core:jackson-core:2.12.2'
    // Adds jackson-core as a dependency for JSON parsing
}

task buildJar(type: Jar) {
    from sourceSets.main.output
    // Sets the input source for the jar task to the 'main' source set output
    archiveBaseName = 'MyProject'
    // Sets the name of the jar file to be generated
    manifest {
        attributes 'Main-Class': 'com.example.Main'
    }
    // Adds a manifest attribute for the main class of the project
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    // Includes all the project dependencies in the jar file
}
// Defines a custom task to build a jar file for the project

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    // Sets the output directory for the test report
    reportOn test
    // Generates a report for the 'test' task
}
// Defines a custom task to generate a test report for the project

task wrapper(type: Wrapper) {
    gradleVersion = '6.8.3'
    // Sets the version of gradle to be used for building the project
}
// Defines a task to generate a wrapper script for the project
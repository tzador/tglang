plugins {
  // Apply the java-library plugin to add support for Java Library
  id 'java-library'

  // Apply the application plugin to add support for building a CLI application
  id 'application'

  // Apply the jacoco plugin to generate code coverage reports
  id 'jacoco'

  // Apply the checkstyle plugin to check code style
  id 'checkstyle'

  // Apply the pmd plugin to check code for potential bugs and style issues
  id 'pmd'

  // Apply the spotbugs plugin to find and report potential bugs in code
  id 'com.github.spotbugs' version '3.1.10'
}

// Configure the checkstyle plugin
task checkstyle(type: Checkstyle) {
  // Define the location of the checkstyle configuration file
  configFile = file("$project.projectDir/config/checkstyle/checkstyle.xml")
  // Define the location of the source code to be checked
  source = fileTree("src/main/java")
  // Define where the results of the checkstyle analysis will be saved
  reports {
    xml.enabled = false
    html.destination = file("$project.buildDir/reports/checkstyle")
  }
}

// Configure the pmd plugin
task pmd(type: Pmd) {
  // Define the location of the pmd configuration file
  ruleSets = ["$project.projectDir/config/pmd/pmd-ruleset.xml"]
  // Define the location of the source code to be analyzed
  source = fileTree("src/main/java")
  // Define where the results of the pmd analysis will be saved
  reports {
    xml.enabled = false
    html.destination = file("$project.buildDir/reports/pmd")
  }
}

// Configure the spotbugs plugin
spotbugs {
  // Define the source directories where the code will be analyzed for bugs
  sourceSets = [sourceSets.main]
  // Define a custom exclude filter to ignore generated code
  excludeFilter = file("$project.projectDir/config/spotbugs/spotbugs-exclude.xml")
  // Define where the results of the spotbugs analysis will be saved
  reports {
      xml.enabled = false
      html.destination = file("$project.buildDir/reports/spotbugs")
  }
}

// Configure the test task to generate code coverage reports
jacocoTestReport {
  // Define the location of the coverage reports
  reports {
    xml.enabled = false
    html.destination = file("$project.buildDir/reports/jacoco")
  }
}

// Configure the build task to run code quality checks before building
build.finalizedBy(checkstyle, pmd, spotbugs)
// Suppress the deprecation warning produced by the checkstyle plugin
checkstyleMain.priority = 1001
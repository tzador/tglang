plugins {
    id 'java'
    id 'application'
    id 'org.fxmisc.richtext4fx' version '0.6.10' // adds a library for rich text editing
}

// setting the main class for application plugin
mainClassName = 'com.example.Main'

// configures dependencies for compile and runtime
dependencies {
    compile 'org.apache.commons:commons-lang3:3.8.1'
    runtime 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'junit:junit:4.12'
}

// setting Java version
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// configuring the build tasks
tasks {
    // build jar with dependencies
    jar {
        manifest {
            attributes "Main-Class": mainClassName
        }
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }

    // generate JavaDoc
    javadoc {
        source = sourceSets.main.allSource
        classpath += configurations.runtimeClasspath
        options.encoding = 'UTF-8'
        // add custom doclet for extra documentation
        options.docletpath = configurations.richtext4fx.asPath
        // configure doclet arguments
        options.doclet = 'org.fxmisc.richtext.doclet.RichTextDoclet'
        options.addStringOption('docfilepattern', '**/*.md') // generates JavaDoc from markdown files
    }

    // run application
    run {
        if (!main.hasProperty('button')) {
            button = 'show'
        }
        if (!main.hasProperty('file')) {
            file = 'sample.md'
        }
        if (!main.hasProperty('width')) {
            width = 800
        }
        if (!main.hasProperty('height')) {
            height = 600
        }
        args '--button', button, '--file', file, '--width', width.toString(), '--height', height.toString()
    }
}
plugins {
    // adds Java plugin
    id 'java'
    // adds Maven plugin
    id 'maven'
    // adds JUnit plugin
    id 'junit'
}

// defines Java version
sourceCompatibility = 1.8

// defines project dependencies
dependencies {
    // uses Java library from Maven Central
    implementation 'org.apache.commons:commons-lang3:3.9'
    // uses JUnit library for testing
    testImplementation 'junit:junit:4.12'
    // uses LibraryX from a local directory
    implementation files('libs/LibraryX.jar')
}

// sets up repositories to search for dependencies
repositories {
    // uses Maven Central repository
    mavenCentral()
    // uses JCenter repository
    jcenter()
}

// defines tasks for building and testing the project
tasks {
    // creates a JAR file from project sources
    jar {
        // includes all compiled classes into the JAR file
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        // adds manifest to the JAR file
        manifest {
            attributes 'Main-Class': 'ProjectMainClass'
        }
    }

    // runs JUnit tests
    test {
        // sets JUnit to use for testing
        useJUnit()
        // defines test report directory
        reports {
            junitXml.destination file("${project.buildDir}/reports/tests")
        }
    }
}

// creates a custom task to generate documentation from source code
task generateDocs(type: Exec) {
    // defines command to be executed
    commandLine 'javadoc', '-d', "${project.buildDir}/docs", '-sourcepath', sourceSets.main.java.srcDirs
}
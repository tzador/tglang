plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    // Apply the application plugin to add the 'main' and 'run' tasks
    id 'application'
}

// Specify the main class for the application
mainClassName = 'com.example.Main'

// Specify the dependencies for the Java Library
dependencies {
    // Include dependencies from the JUnit testing framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.4'
}

// Define the 'run' task which will execute the application
run {
    // Set the JVM arguments for the 'run' task
    jvmArgs '-XX:MaxPermSize=64m'
}

// Define the tasks for testing
test {
    // Set the test JVM arguments
    jvmArgs '-XX:MaxPermSize=64m'
    // Set the test classpath to include the compiled main classes and test classes
    testClassesDirs = sourceSets.test.output.classesDirs + sourceSets.main.output.classesDirs
}

// Define a task to generate a distribution ZIP file of the application
task generateDistribution(type: Zip) {
    // Set the name of the distribution file
    archiveFileName = 'my-app.zip'
    // Set the destination directory for the generated distribution
    destinationDir = file('distributions')
    // Include the main classes and resources in the distribution
    from sourceSets.main.output
    // Include the dependencies in the distribution
    from configurations.runtimeClasspath
    // Set the include patterns for the sources and resources
    include {
        sourceSets.main.java.srcDirs
        sourceSets.main.resources.srcDirs
    }
}

// Define a task to automatically run tests before building the project
preBuild.dependsOn test

// Define a task to automatically generate the distribution before building the project
preBuild.dependsOn generateDistribution
plugins {
    id 'java'
    id 'application'
}
// This adds the 'java' and 'application' plugins to the project

repositories {
    mavenCentral()
    jcenter()
}
// Specifies the repositories used to resolve dependencies

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    testImplementation 'junit:junit:4.13.2'
}
// Adds Guava library as a dependency for the main source set and JUnit library as a dependency for the test source set

mainClassName = 'com.example.Main'
// Specifies the main class for the application

application {
    applicationDefaultJvmArgs = ["-Xms512m", "-Xmx2g"]
}
// Specifies default JVM arguments for running the application

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
// Configures the test task to use the JUnit platform and specifies which test events to log

task myCustomTask(type: Exec) {
    workingDir 'src/main/scripts'
    commandLine 'bash', 'deploy.sh'
}
// Defines a custom task that executes a bash script in the 'src/main/scripts' directory

task printSystemProperties {
    doLast {
        System.out.println("System properties:")
        System.getProperties().each { key, value ->
            System.out.println("$key=$value")
        }
    }
}
// Defines a task that prints out all system properties at the end

task myTask(dependsOn: ['task1', 'task2'], finalizedBy: 'finalTask')
// Defines a task that depends on two other tasks and is finalized by a final task
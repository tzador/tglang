plugins {
  id 'java'
  id 'org.springframework.boot' version '2.1.3.RELEASE'
  id 'io.spring.dependency-management' version '1.0.7.RELEASE'
  id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8 // Sets the Java compatibility for source code
targetCompatibility = 1.8 // Sets the Java compatibility for compiled code

// Configures repositories for retrieving dependencies
repositories {
  mavenCentral() // Retrieves dependencies from Maven Central
  jcenter() // Retrieves dependencies from JCenter
  maven {
    url 'https://repo.spring.io/plugins-release' // Retrieves dependencies from Spring Plugins repository
  }
}

// Configures dependencies for the project
dependencies {
  // Retrieves the Spring Boot starter web dependency
  implementation 'org.springframework.boot:spring-boot-starter-web'
  // Retrieves the Spring Boot starter test dependency
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  // Retrieves the logback classic dependency for logging
  implementation 'ch.qos.logback:logback-classic:1.2.3'
  // Retrieves the lombok dependency for simplified POJO creation
  compileOnly 'org.projectlombok:lombok:1.18.8'
  annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

// Configures tasks for building and running the project
task build(type: 'org.springframework.boot.gradle.tasks.bundling.BootWar') {
  // Sets the main class for the application to run
  mainClass = 'com.example.Application'
  // Configures the project with the necessary dependencies
  dependsOn configurations.runtimeClasspath
  // Specifies where the output file should be saved
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  // Specifies the file to be created when running the project
  into('WEB-INF/classes') {
    from { 'build/classes/java/main' }
  }
  // Specifies the file to be created when building the project
  archiveFileName = 'my-application.war'
}
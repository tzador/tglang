plugins {
    id 'java-library' // adds the java-library plugin to the project
    id 'com.github.johnrengelman.shadow' version '5.2.0' // adds the shadow plugin and sets its version
    id 'eclipse' // adds the eclipse plugin to generate Eclipse IDE files
    id 'idea' // adds the idea plugin to generate IntelliJ IDEA files
}

group 'com.example' // sets the project's group
version '1.0.0' // sets the project's version

repositories {
    jcenter() // adds JCenter as a Maven repository
}

dependencies {
    implementation 'commons-io:commons-io:2.6' // adds the Commons IO library as a dependency
    testImplementation 'junit:junit:4.12' // adds JUnit as a test dependency
}

jar {
    manifest { // configures the project's jar manifest
        attributes 'Main-Class': 'com.example.MyApplication' // sets the main class for the jar
    }
}

shadowJar { // configures the shadow jar task
    archiveFileName = 'my-application-shadow.jar' // sets the output file name for the shadow jar
    mergeServiceFiles() // merges all resource files found in META-INF/services
}

eclipse { // configures the eclipse task
    classpath {
        file {
            withXml { // configures the .classpath file
                def generatorNode = asNode().appendNode('classpathentry', [kind: 'var', path: 'GRADLE_HOME/lib/gradle-api.jar']) // adds the Gradle API JAR as a classpath entry
                generatorNode.appendNode('attributes').appendNode('attribute', [name: 'gradle_scope', value: 'PROVIDED']) // sets the attribute for the Gradle API to indicate it is a provided dependency
            }
        }      
    }
}

idea { // configures the idea task
    module {
        excludeDirs += file('out') // excludes the 'out' directory from the IntelliJ IDEA project
    }
}
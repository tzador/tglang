//Define a task named 'build' which depends on the 'compile' task
task build(dependsOn: compile) {
    description 'Compiles and packages the project'
    
    //Create a jar file for the compiled classes
    jar {
        //Set the manifest for the jar file
        manifest {
            //Set the main class for the project
            attributes 'Main-Class': 'com.example.Main'
        }
    }
    
    //Create a zip file with the jar and all dependencies
    zip {
        //Set the destination directory for the zip file
        destinationDir = file('build')
        
        //Add the jar file to the zip
        from jar
        
        //Include all dependencies in the zip
        from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) })
        
        //Set the name of the zip file
        archiveName = 'project.zip'
        
        //Set the compression level of the zip file
        compressionLevel = 9
    }
}

//Define a task named 'compile' which compiles the source code
task compile {
    description 'Compiles the source code'
    
    //Set the source code directory
    sourceDir = file('src/main/java')
    
    //Create a destination directory for the compiled classes
    def compileDir = file('build/classes')
    
    //Compile all .java files in the source directory
    inputs.dir sourceDir
    outputs.dir compileDir
    doLast {
        //Compile the source code
        ant.javac(srcdir: sourceDir, destdir: compileDir)
    }
}
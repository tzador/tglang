// Define a custom task type and add properties
task MyCustomTask(type: MyCustomTaskType) {
    property1 = "Hello"
    property2 = "World"
}

// Define the custom task type
class MyCustomTaskType extends DefaultTask {

    // Properties to be used in the task
    String property1
    String property2

    // Constructor with properties as parameters
    @Inject
    public MyCustomTaskType(String property1, String property2) {
        this.property1 = property1
        this.property2 = property2
    }

    // Override the task's 'doTask' method
    @TaskAction
    void doTask() {
        println("Custom task has run with properties: $property1 $property2")
    }
}

// Task to run the custom task with a specific property value
task RunCustomTaskWithProperty(type: MyCustomTask, property2: "World!") {
    description = "Run my custom task with a specific property value"
}
// Define a custom task called 'runCode' that depends on 'compileJava'
task runCode(dependsOn: 'compileJava') << {
    // Set the main class for the task to be run
    main = 'com.example.MyProgram'
    
    // Set the classpath for the task
    classpath = sourceSets.main.runtimeClasspath
    
    // Set the system properties for the task
    systemProperties['myProperty'] = 'someValue'
    
    // Set the args for the task
    args = ['-arg1', 'value1', '-arg2', 'value2']
    
    // Set the standard input stream for the task
    standardInput = System.in
    
    // Set the standard output and error streams for the task
    standardOutput = new ByteArrayOutputStream()
    errorOutput = new ByteArrayOutputStream()
    
    // Executes the task with the configured options
    exec {
        // Set the command to be executed
        commandLine = ['java', main]
        
        // Set the classpath to be used for execution
        classpath = sourceSets.main.runtimeClasspath
        
        // Set the system properties for execution
        systemProperties['myProperty'] = 'someValue'
        
        // Set the standard input stream for execution
        standardInput = System.in
        
        // Set the standard output and error streams for execution
        standardOutput = new ByteArrayOutputStream()
        errorOutput = new ByteArrayOutputStream()
    }
    
    // Print the standard output and error streams after the task finishes
    println "Standard Output: ${standardOutput.toString()}"
    println "Error Output: ${errorOutput.toString()}"
}
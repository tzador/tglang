// This is a sample build.gradle file

// Plugins are added as dependencies in Gradle
plugins {
    id 'java'
    id 'application'
    id 'com.github.ben-manes.versions' // This plugin handles dependency version management
}

// Group and version for the project
group 'com.example.project'
version '1.0.0'

// Source compatibility and target compatibility for Java
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Dependencies
dependencies {
    // Required dependencies for the project
    compile 'org.springframework:spring-framework:5.2.0.RELEASE'
    compile 'com.google.guava:guava:27.0-jre'

    // Optional dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.28.2'
}

// This block configures the versions plugin
versionCatalogs {
    libraries {
        apply plugin: 'java-libraries' // This plugin adds the Java library components to the version catalog
        // Applies a simple version scheme for the dependencies
        implementation group: 'org.springframework', name: 'spring-context', version: '5.2.0.RELEASE'
        implementation group: 'com.google.guava', name: 'guava', version: '27.0-jre'
    }
}

// This block configures the application plugin
application {
    // Main class for the application
    mainClassName = 'com.example.project.App'
}

// Gradle tasks
// This task runs all unit tests
task runTests(type: Test) {
    useJUnit()
}

// This task builds the application
task buildApp(type: Jar) {
    // Outputs the jar file to the build/libs directory with the project name and version
    baseName = project.name + '-' + project.version
    manifest {
        attributes 'Main-Class': 'com.example.project.App'
    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    // Includes all runtime dependencies in the jar
    from ({
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }) {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    }
}

// This task publishes the artifact to a maven repository
task publish(type: Publish) {
    // Username and password for the maven repository
    repositories {
        maven {
            url 'https://example.com/maven-repo'
            credentials {
                username 'myUsername'
                password 'myPassword'
            }
        }
    }

    // Specifies the artifact to be published
    publications {
        mavenJava(MavenPublication) {
            // Uses the buildApp task output as the artifact
            from components.java
            // Configures additional details for the artifact such as group and version
            artifactId project.name
            groupId project.group
            version project.version
        }
    }
}

// Default tasks
// This task is the default task for the build
build.dependsOn buildApp

// This task is the default task for publishing the artifact
publish.dependsOn tasks.getByName('build')
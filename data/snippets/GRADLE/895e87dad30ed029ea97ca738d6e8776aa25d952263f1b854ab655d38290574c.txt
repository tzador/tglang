plugins {
    // Java plugin adds tasks for compiling, testing and assembling Java source sets.
    id 'java'
    // War plugin adds a task to create a war file, which is a zip file containing a web application.
    id 'war'
    // Jacoco plugin adds tasks for measuring code coverage using Jacoco.
    id 'jacoco'
}

// Configure plugins
configure([
    jacoco: {
        // Specify Java version for coverage reports
        toolVersion = "<% JAVA_VERSION %>"
    },
    war: {
        // Set webAppDir property to specify location of web application source files
        webAppDir = 'src/main/webapp'
    }
])

// Define dependencies - these will be downloaded from Maven repositories
dependencies {
    // Compile-time dependencies for Java 8 and JUnit testing framework
    compile(
        'org.openjfx:javafx-controls:18.0.1',
        'junit:junit:4.12'
    )
    
    // Runtime dependencies for a servlet container and JSP support
    runtime(
        'javax.servlet:javax.servlet-api:4.0.1',
        'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1'
    )
}

// Define tasks
tasks {
    // Task to generate code coverage report
    jacocoTestReport {
        // Specify class file directories for coverage analysis
        classDirectories.from = fileTree(dir: 'build/classes/java/main', includes: ['**/*.class'])
        // Specify source file directories for coverage analysis
        sourceDirectories.from = files('src/main/java')
        // Specify execution data files for coverage analysis
        executionData.from = fileTree(dir: 'build/jacoco', includes: ['*.exec'])
    }
    
    // Task to create a war file
    war {
        // Specify the destination file name
        archiveFileName = "${project.name}.war"
        // Exclude JSP files from the war file
        exclude('WEB-INF/**/*.jsp')
    }
}

// Specify repositories for downloading dependencies
repositories {
    // Download from Maven Central repository
    mavenCentral()
    // Download from JCenter repository
    jcenter()
}
apply plugin: 'java' // Applying Java plugin to the project
apply plugin: 'application' // Applying Application plugin to the project

mainClassName = 'com.example.Main' // Setting the main class for the application

repositories { // Defining the repositories to use
    mavenCentral() // Using Maven Central repository
    jcenter() // Using JCenter repository
}

dependencies { // Defining dependencies for the project
    compile 'com.google.guava:guava:30.0-jre' // Adding Guava library as a compile dependency
    testImplementation 'junit:junit:4.13.2' // Adding JUnit library as a test implementation dependency
}

jar {
    manifest { // Configuring the manifest for the jar file
        attributes 'Main-Class': 'com.example.Main' // Setting the main class for the jar file
    }
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } // Including all dependencies in the jar file
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA' // Excluding some files from the jar
}

task packageJar(type: Jar) { // Creating a custom task to package the jar with dependencies
    archiveClassifier = 'jar' // Adding a classifier to the jar file
    from { // Defining what to include in the jar
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } // Including all dependencies
    }
}

test { // Configuring the test task
    testLogging { // Configuring the test logging
        events 'passthrough' // Configuring which events to log
    }
    beforeTest { // Executing tasks before each test
        println 'Starting test: ' + it.testName // Printing the test name
    }
    afterTest { // Executing tasks after each test
        def passed = "PASSED".padLeft(10) // Formatting the passed status
        def failed = "FAILED".padLeft(10) // Formatting the failed status
        if (it.result.failureCount == 0) // Checking if the test passed
            println passed + ': ' + it.testName // Printing the passed status and test name
        else
            println failed + ': ' + it.testName // Printing the failed status and test name
    }
}
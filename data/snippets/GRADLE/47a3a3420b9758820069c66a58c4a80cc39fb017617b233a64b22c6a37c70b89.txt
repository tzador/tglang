// Define a task called "build" 
task build {
    // Set the group for the task
    group = 'custom tasks'
    // Set the description for the task
    description = 'Builds the project'
    // Specify the dependencies for the task
    dependsOn ['clean', 'compileJava', 'compileTestJava']
    // Define a doLast block for the task
    doLast {
        // Print a message when the task is executed
        println 'Building project...'
        // Execute a shell command to build the project
        sh './gradlew assemble'
    }
}

// Define a task called "test" 
task test {
    // Set the group for the task
    group = 'custom tasks'
    // Set the description for the task
    description = 'Runs unit tests'
    // Specify the dependencies for the task
    dependsOn ['compileTestJava']
    // Define a doLast block for the task
    doLast {
        // Print a message when the task is executed
        println 'Running unit tests...'
        // Execute a shell command to run unit tests
        sh './gradlew test'
    }
}

// Define a task called "deploy" 
task deploy {
    // Set the group for the task
    group = 'custom tasks'
    // Set the description for the task
    description = 'Deploy project to server'
    // Specify the dependencies for the task
    dependsOn ['build']
    // Define a doLast block for the task
    doLast {
        // Print a message when the task is executed
        println 'Deploying project...'
        // Execute a shell command to deploy the project to a server
        sh 'rsync -avr build/ user@server.com:/var/www/project'
    }
}

// Define a task called "publish" 
task publish {
    // Set the group for the task
    group = 'custom tasks'
    // Set the description for the task
    description = 'Publish project to Maven repository'
    // Specify the dependencies for the task
    dependsOn ['build', 'test']
    // Define a doLast block for the task
    doLast {
        // Print a message when the task is executed
        println 'Publishing project...'
        // Execute a shell command to publish the project to Maven repository
        sh './gradlew publish'
    }
}

// Define a task called "cleanup" 
task cleanup {
    // Set the group for the task
    group = 'custom tasks'
    // Set the description for the task
    description = 'Cleans up project files'
    // Define a doLast block for the task
    doLast {
        // Print a message when the task is executed
        println 'Cleaning up project...'
        // Navigate to the project directory and delete all build and test output files
        fileTree(dir: 'build', include: '**/*').each {
            file ->
            if (file.isFile()) {
                file.delete()
            }
        }
        fileTree(dir: 'testResults', include: '**/*').each {
            file ->
            if (file.isFile()) {
                file.delete()
            }
        }
    }
}

// Define a default task that will run when no task is specified 
def defaultTask = task()
// Set the description for the default task
defaultTask.description = 'Default task that runs all other tasks in order'
// Specify the tasks to be run in the doLast block
defaultTask.doLast {
    // Print a message when the task is executed
    println 'Running all tasks in order...'
    // Execute the build task
    build.execute()
    // Execute the test task
    test.execute()
    // Execute the cleanup task
    cleanup.execute()
    // Execute the deploy task
    deploy.execute()
    // Execute the publish task
    publish.execute()
}
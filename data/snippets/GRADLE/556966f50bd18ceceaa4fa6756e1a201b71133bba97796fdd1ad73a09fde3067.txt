plugins {
    id `com.android.application` version `4.0.1`  // applies the Android application plugin with version 4.0.1
    id `kotlin-android` version `1.5.10`  // applies the Kotlin Android plugin with version 1.5.10
}

android {
    compileSdk `30`  // sets the Android SDK version to compile with
    buildToolsVersion `30.0.3`  // sets the version of Android build tools to use
    defaultConfig {
        applicationId "com.example.myapplication"  // sets the package name of the application
        minSdk `21`  // sets the minimum SDK version required for the application
        targetSdk `30`  // sets the target SDK version for the application
        versionCode `1`  // sets the version code for the application
        versionName `1.0`  // sets the version name for the application
    }
}

dependencies {
    implementation `org.jetbrains.kotlin:kotlin-stdlib:1.5.10`  // adds the Kotlin standard library as a dependency
    implementation `androidx.appcompat:appcompat:1.3.0`  // adds the AppCompat support library as a dependency
    implementation `com.google.android.material:material:1.3.0`  // adds the Material Design library as a dependency
    implementation `androidx.constraintlayout:constraintlayout:2.0.4`  // adds the ConstraintLayout library as a dependency
}

repositories {
    google()  // specifies the Google Maven repository to download dependencies from
    jcenter()  // specifies the jcenter Maven repository to download dependencies from
}

androidExtensions {  // enables the use of Kotlin Android extensions
    experimental = true
}

kotlinOptions {
    jvmTarget = "1.8"  // sets the JVM target to Java 8
}

buildTypes {
    release { // configures the release build type
        minifyEnabled true  // enables code minification
        proguardFiles `getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'` // specifies the proguard configuration files to use
    }
    debug { // configures the debug build type
        debuggable true  // enables debugging and disables code minification
    }
}

sourceSets {
    getByName(`main`) {  // specifies the main source set
        java.srcDirs(`src/main/java`)  // sets the directory where Java source files are located
        res.srcDirs(`src/main/res`)  // sets the directory where resource files are located
    }
}
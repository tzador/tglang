// Set the source and target compatibility levels for the Java code
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// Define dependencies for the project
dependencies {
    // Include the JUnit testing framework
    testImplementation 'junit:junit:4.12'
    
    // Add the Apache Commons Lang library
    implementation 'org.apache.commons:commons-lang3:3.9'
    
    // Include the OkHttp library for network connections
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'
    
    // Add the Jackson JSON library for data serialization
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
}

// Define tasks for building and testing the project
tasks {
    // Set the build task to compile and create a JAR file
    build {
        classesDir = file('build/classes') // Set the directory for compiled classes
        jar {
            from sourceSets.main.output // Include all files from the source set
            manifest { // Set the main class for the JAR file
                attributes 'Main-Class': 'com.example.Main'
            }
        }
    }
    
    // Set the test task to run the JUnit tests
    test {
        useJUnit() // Use the JUnit library for testing
        testLogging { // Log the results of the tests
            events 'passed', 'failed' // Only log passing and failing tests
        }
    }
}

// Define properties for the project
ext {
    appName = 'MyApp' // Name of the project
    appVersion = '1.0.0' // Version number of the project
    appDescription = 'This is a sample Gradle project.' // Description of the project
}

// Define a task for displaying project information
task projectInfo {
    doLast { // The code to be executed when the task is run
        // Print out the project properties
        println "Project Name: $appName"
        println "Version: $appVersion"
        println "Description: $appDescription"
        
        // Print out dependency information
        println "Dependencies:"
        configurations.compile.allDependencies.each {
            println "${it.name}, version: ${it.version}" // Print out the name and version of each dependency
        }
    }
}
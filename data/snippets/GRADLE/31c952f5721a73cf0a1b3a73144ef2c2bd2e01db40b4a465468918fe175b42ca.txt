/*
 * This is a complex build.gradle file that configures a multi-project build.
 * It defines dependencies, tasks, and other settings for each project.
 * For more information on Gradle and how to use it, visit https://gradle.org/
 */

// Defines the root project for this build.
// This allows for global settings and dependencies to be applied to the entire project.
rootProject.name = 'My Complex Gradle Project'

// Declares subprojects for this build.
// Each subproject can have its own settings and dependencies.
subprojects {
    // Configures the source and output directory for the project.
    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/main/resources'
            }
        }
        test {
            java {
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'src/test/resources'
            }
        }
    }

    // Defines the dependencies for each subproject.
    // These dependencies can be shared between projects or specific to each project.
    dependencies {
        // Shared dependencies.
        implementation 'com.google.guava:guava:27.0.1-jre'
        implementation 'org.apache.commons:commons-lang3:3.9'

        // Project-specific dependencies.
        implementation project(':my-library-project')
        testImplementation project(path: ':my-test-project', configuration: 'test')
    }

    // Defines the tasks for each subproject.
    // These tasks can be run individually or as part of a larger build.
    tasks {
        // Custom task that prints a message.
        task printMessage {
            doLast {
                println 'Hello from subproject ' + project.name + '!'
            }
        }

        // Compiles the source code for this subproject.
        compileJava {
            options.encoding = 'UTF-8'
        }
    }

    // Defines additional configurations for this subproject.
    // These can be used when running tasks or setting up the project.
    configurations {
        // Custom configuration for running integration tests.
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    // Adds custom repositories for this subproject.
    // These repositories can be used to retrieve dependencies.
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name 'My Custom Repository'
            url 'https://mycustomrepo.com'
        }
    }
}
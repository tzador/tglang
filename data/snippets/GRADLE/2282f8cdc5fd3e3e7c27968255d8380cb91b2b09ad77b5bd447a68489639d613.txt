apply plugin: 'java'
 
 // Variables for storing versions of dependencies
  def junitVersion = '4.12'
  def mockitoVersion = '2.22.0'
  def hamcrestVersion = '2.1'
  def slf4jVersion = '1.7.25'
 
 // Dependencies 
 dependencies { 
     // Implementing JUnit 
     testImplementation "junit:junit:$junitVersion" 
     // Implementing Mockito and Hamcrest 
     testImplementation "org.mockito:mockito-core:$mockitoVersion" 
     testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion" 
     // Implementing SLF4J 
     compile "org.slf4j:slf4j-api:$slf4jVersion" 
     compile "ch.qos.logback:logback-classic:1.2.3" 
 } 
// task for running unit tests 
 task unitTest(type: Test) { 
     // exclude the integration tests from unit tests 
     exclude '**/*IntegrationTest*.*' 
     // add a custom JVM argument 
     jvmArgs '-Djava.awt.headless=true' 
     // define test report format and location 
     reports { 
         junitXml.enabled = true 
         junitXml.destination = "$buildDir/test-results" 
     } 
 } 
// task for running integration tests 
 task integrationTest(type: Test) { 
     // include only the integration tests 
     include '**/*IntegrationTest*.*' 
     // add a custom JVM argument 
     jvmArgs '-Djava.awt.headless=true' 
     // define test report format and location 
     reports { 
         junitXml.enabled = true 
         junitXml.destination = "$buildDir/test-results" 
     } 
 } 
// define a task for running all tests 
 task testAll(type: Test, dependsOn: [unitTest, integrationTest]) { 
     // add a custom JVM argument 
     jvmArgs '-Djava.awt.headless=true' 
     // define test report format and location 
     reports { 
         junitXml.enabled = true 
         junitXml.destination = "$buildDir/test-results" 
     } 
 }
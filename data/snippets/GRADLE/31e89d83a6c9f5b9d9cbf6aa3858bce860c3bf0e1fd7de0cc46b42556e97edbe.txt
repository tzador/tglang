plugins {
    // Plugins to be imported
    id 'java-library'
    id 'application'
    id 'checkstyle'
}

// Default tasks for the build
// You can specify tasks for a given project scope here, too
tasks {
    // Building tasks
    build {
        dependsOn 'clean'
        dependsOn 'check'
    }

    // Unit testing task
    // Execute tests using junit platform
    test {
        useJUnitPlatform()
    }

    // Code coverage task
    jacocoTestReport {
        reports {
            xml.enabled = true
        }
    }

    // Automatically format code based on checkstyle rules
    // This task will be automatically executed when 'build' task is run
    checkstyleMain {
        dependsOn 'build'
        doLast {
            project.plugins.findPlugin(CheckstylePlugin.class).configurations.checkstyleConfig.setProperty 'google', true
            project.plugins.findPlugin(CheckstylePlugin.class).configurations.checkstyleConfig.setProperty 'severity', 'error'
            project.plugins.findPlugin(CheckstylePlugin.class).configurations.checkstyleConfig.setProperty 'maxWarnings', 0
        }
    }

    // Creating application distribution jar
    // This task will be automatically executed when 'build' task is run
    startScripts {
        mainClassName = 'com.example.gradle.App'
    }
}

// Specifies the JDK version used for compilation
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// Specify the location of source files
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

// Specifies the dependencies used in the project
dependencies {
    // Dependency for junit testing framework
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    // Dependency for checkstyle plugin
    checkstyle 'com.puppycrawl.tools:checkstyle:8.36.1'

}

// Configurations for the code formatting plugin
// Specifies the configuration used and the scope of formatting
checkstyle {
    toolVersion = '8.36.1'

    configDir = rootProject.file("config/checkstyle")
    configProperties = [
            "suppressions"  : "config/suppressions.xml",
            "headerFile"    : "config/HEADER",
            "severity"      : "warning",
            "failOnViolation": true
    ]

    // Applies the configuration to only the main source set
    sourceSets = files('src/main/java')
}
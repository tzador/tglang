plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    // Apply the application plugin to add support for building an executable application
    id 'application'
}

// Specify the main class for the application
mainClassName = 'com.example.Main'

// Define dependencies for the project
dependencies {
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // Use Apache Commons library
    implementation 'org.apache.commons:commons-lang3:3.9'

    // Use Google Guava library
    implementation 'com.google.guava:guava:29.0-jre'
}

// Define tasks for the project
tasks {
    // Task to run all tests
    test {
        // Define test source directory
        testSourceDirs = ['src/test/java']

        // Set logging level for tests
        testLogging {
            // Output all test logs to the console
            events 'console'
        }
    }

    // Task to generate Javadoc for the project
    javadoc {
        // Define source directory for Javadoc
        source = sourceSets.main.allJava
    }

    // Task to build a JAR file for the project
    jar {
        // Define manifest for the JAR file
        manifest {
            // Set main class for the JAR
            attributes 'Main-Class': mainClassName
        }

        // Include all required dependencies in the JAR
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

// Define custom tasks for the project
task createZip(type: Zip, dependsOn: jar) {
    // Set destination directory for the ZIP file
    destinationDir = file('build/dist')
    // Set base name for the ZIP file
    baseName = 'my-application'
    // Include JAR file and its dependencies in the ZIP
    from jar
    // Include license file in the ZIP
    from file('LICENSE.txt')
}
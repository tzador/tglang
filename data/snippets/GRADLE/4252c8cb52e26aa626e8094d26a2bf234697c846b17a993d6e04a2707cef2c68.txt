plugins {
    id 'java'
}

// A task that cleans the build directory
task clean(type: Delete) {
    delete rootProject.buildDir
}

// A task that generates a jar file
task buildJar(type: Jar) {
    archiveName = 'myApp.jar'
    from sourceSets.main.output
    exclude 'META-INF/**'
    include '*.class'
}

// A task that compresses the jar file
task compressJar(type: Zip) {
    archiveName = 'compressed.jar'
    destinationDir = file("${project.buildDir}/lib")

    from buildJar
    includeEmptyDirs = false
    eachFile { file ->
        if (file.name.endsWith('.jar')) {
            file.path = file.name.substring(0, file.name.length() - 4)
        }
}

// A task that creates a properties file
task createProperties(type: CreateDir) {
    File temp = new File("${project.buildDir}/myProperties")
    temp.mkdir()
    File file = new File(temp, 'props.txt')
    file.write("name=My App \nversion=1.0 \nauthor=John Smith")
}

// A task that prints out a message
task printMessage << {
    println "Hello World! This is my first Gradle project."
}

// A task that depends on other tasks
task build {
    dependsOn clean
    dependsOn buildJar
    dependsOn compressJar
    dependsOn createProperties
    dependsOn printMessage

    doLast {
        println "Build successful!"
    }
}

// Configuration for the build
build.finalizedBy( {
    createProperties.execute()
})

// Specify the default tasks to run
defaultTasks 'clean', 'build'
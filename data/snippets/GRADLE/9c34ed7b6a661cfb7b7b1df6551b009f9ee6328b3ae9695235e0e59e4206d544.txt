plugins {
    // Applies the java-base plugin to this project.
    id 'java-base'
    // Applies the java-library plugin to this project.
    id 'java-library'
    // Applies the groovy plugin to this project.
    id 'groovy'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    // Use JCenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Declare a dependency on Groovy libraries.
    compile 'org.codehaus.groovy:groovy-all:3.0.7'
    // Declare a dependency on JUnit test libraries.
    testCompile 'junit:junit:4.12'
}

compileGroovy {
    // Set the Groovy compiler version to use.
    groovyVersion = '3.0.7'
    // Set the Java compiler version to use (optional).
    javaVersion = JavaVersion.VERSION_11
}

test {
    // Set the test runner to use.
    useJUnitPlatform()
}

jar {
    // Configure the jar task to include the project's name and version
    manifest {
        attributes 'Main-Class': 'com.example.Main',
                   'Base-Name': baseName,
                   'Implementation-Title': 'Example Library',
                   'Implementation-Version': version
    }
}

// Define tasks for running the application and creating a distribution zip file
task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.example.Main'
}

task createDistribution(type: Zip) {
    //
    from "$buildDir/libs"
    dependsOn(tasks.jar)
}
/**
 * This is a comment.
 */

// This is also a comment.

apply plugin: 'java' // Applying the 'java' plugin to enable Java project features

// Defining a variable named 'projectName'
projectName = 'My Project'

// Setting the source compatibility for Java to version 11
sourceCompatibility = JavaVersion.VERSION_11

// Defining a task named 'compileJava' that compiles the Java source files
task compileJava(type: JavaCompile) {
    source = fileTree('src/main/java') // Setting the source directory for compilation
    destinationDir = file("${buildDir}/classes") // Setting the destination directory for compiled classes
    classpath = sourceSets.main.runtimeClasspath // Setting the classpath for compilation
    options.compilerArgs = ['-Xlint', '-Xmaxwarns', '5'] // Setting compiler arguments
    options.encoding = 'UTF-8' // Setting the source file encoding
}

// Defining a task named 'test' that runs the unit tests
task test(type: Test) {
    useJUnitPlatform() // Using the JUnit platform for testing
    testClassesDirs = fileTree('build/classes') // Setting the directory containing test classes
    classpath = sourceSets.test.runtimeClasspath // Setting the classpath for testing
    include '**/*Test.class' // Including all test classes in the compilation
    exclude '**/SomeClassTest.class' // Excluding a specific test class from compilation
    systemProperties['property1'] = 'value1' // Setting system properties for the tests
}

// Defining a task named 'jar' that creates a jar file of the project
task jar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.example.Main' // Setting the main class for the jar file
    }
    baseName = "${projectName}-${version}" // Setting the jar file name
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } } // Adding all runtime dependencies to the jar file
    with jar // Creating the jar file
}

// Defining a task named 'compileKotlin' that compiles Kotlin source files
task compileKotlin(type: KotlinCompile) {
    kotlinOptions {
        jvmTarget = "1.8" // Setting the JVM target for Kotlin code
        freeCompilerArgs = ['-Xjsr305=strict'] // Setting compiler arguments for Kotlin
        metaInfo = true // Enabling metadata generation for Kotlin classes
    }
    source = fileTree('src/main/kotlin') // Setting the source directory for compilation
    destinationDir = file("${buildDir}/classes/kotlin") // Setting the destination directory for compiled classes
    classpath = sourceSets.main.runtimeClasspath // Setting the classpath for compilation
}

// Defining a task named 'copyDependencies' that copies project dependencies to a directory
task copyDependencies(type: Copy) {
    dependsOn configurations.runtime // Making this task depend on the runtime configuration
    from { configurations.runtimeClasspath } // Copying all runtime dependencies
    into 'lib' // Copying the dependencies to the 'lib' folder
}
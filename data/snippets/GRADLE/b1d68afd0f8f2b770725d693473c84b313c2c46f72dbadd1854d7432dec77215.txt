plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to generate a startScripts task
    id 'application'
}

// Define the main class for the application
mainClassName = 'com.example.MyApplication'

// Configure the dependencies for the application
dependencies {
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // Use JSON library for parsing
    implementation 'org.json:json:20201115'
}

// Define a task for creating a distribution package
task createDist(type: Zip) {
    // Include all files from the 'src' directory
    from 'src'

    // Include the main class and its dependencies in the 'bin' directory
    into('bin') {
        from jar
        from configurations.runtimeClasspath
    }

    // Include any additional resources in the 'resources' directory
    into('resources') {
        from 'resources'
    }

    // Set the name of the distribution package
    archiveFileName = 'MyApplication.zip'
}

// Define a task for running the application
task run() {
    // Configure the classpath for the JavaExec task
    classpath = sourceSets.main.runtimeClasspath

    // Set the main class for the JavaExec task
    main = mainClassName

    // Pass any command line arguments to the JavaExec task
    args = ['arg1', 'arg2']

    // Set the working directory for the JavaExec task
    workingDir = 'bin'
}

// Create a wrapper task for the Gradle build script
task wrapper(type: Wrapper) {
    gradleVersion = '6.7'
}
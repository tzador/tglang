//This snippet shows how to define a customized task in Gradle
task buildCustomTask(type: MyCustomTask) {
    //configure the inputs and outputs of the task
    inputs.file "input.txt"
    outputs.dir "output"
    
    //define the execute method to perform the task
    doLast {
        println "Running custom task..."
        //read input file and perform some operation
        file("input.txt").eachLine { line ->
            println "Processing line: $line"
        }
        //create output directory and write results
        file("output").mkdir()
        file("output/results.txt").write("Results of custom task")
        println "Custom task completed successfully!"
    }
}

//define the MyCustomTask class that extends DefaultTask
//this class will be responsible for actually executing the task
class MyCustomTask extends DefaultTask {
    MyCustomTask() {
        //specify the type of outputs that the task produces
        outputs.dir "output"
    }
    
    //override the execute method to define the task logic
    @TaskAction
    def execute() {
        println "Executing custom task..."
        //read input file and perform some operation
        file("input.txt").eachLine { line ->
            println "Processing line: $line"
        }
        //create output directory and write results
        file("output").mkdir()
        file("output/results.txt").write("Results of custom task")
        println "Custom task completed successfully!"
    }
}
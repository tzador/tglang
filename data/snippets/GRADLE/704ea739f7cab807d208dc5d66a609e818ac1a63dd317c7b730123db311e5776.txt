apply plugin: 'java'
//Apply the Java plugin to this build, which adds all standard Java development
//plugins to the build.
apply plugin: 'war' //Apply the War plugin, which provides tasks for creating a WAR file.
apply plugin: 'com.github.johnrengelman.shadow' //Apply the Shadow plugin, which provides tasks for creating fat/uber jars.
version '1.0'

sourceCompatibility = 1.8 //Set the Java compatibility version for the project.

repositories { //Configure repositories for dependencies.
        mavenCentral() //Use the Maven Central repository for dependencies.
}

dependencies {
    compile 'com.google.guava:guava:28.2-jre' //Add the Guava library as a compile dependency.
    //Other dependencies can be added here.
}

test {
    //Configure test tasks.
    useJUnitPlatform() //Use JUnit 5's Jupiter Engine for testing.
}

//Configure the build output directory.
buildDir = 'build'

//Configure the main source directory.
sourceSets {
    main {
        java {
            //Set the source directory.
            srcDirs = ['src/main/java']
        }
    }
}

//Configure the task that assembles the WAR file.
task war(type: War) {
    //Set the file name.
    archiveName = 'myapp.war'
    //Set the webapp directory.
    webAppDirName = 'webapp'
}

//Configure the task that creates the fat/uber jar.
task fatJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    //Set the file name.
    archiveFileName = baseName + '-all.jar'
    //Set the main class for the jar.
    manifest {
        attributes 'Main-Class': 'com.company.MyMainClass'
    }
    //Add all dependencies to the jar.
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

//Configure the default task.
//This task will be executed when the 'gradle' command is run without any parameters.
defaultTasks 'build' //Set the default task to be 'build'.
// This is a sample Gradle build file.
// Comments start with two forward slashes.

plugins { //plugins block
  id 'java' // plugin for Java projects
  id 'jacoco' // plugin for code coverage
  id 'org.springframework.boot' version '2.5.0' // plugin for Spring Boot projects
  id 'io.spring.dependency-management' version '1.0.11.RELEASE' // plugin for handling dependencies
  id 'com.github.ben-manes.versions' version '0.36.0' // plugin for managing project versions
}

group 'com.example' // sets the project group
version '1.0-SNAPSHOT' // sets the project version

// dependencies block
dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web' // adds the Spring Boot starter web dependency
  implementation 'org.springframework.boot:spring-boot-starter-actuator' // adds the Spring Boot starter actuator dependency
  testImplementation 'org.springframework.boot:spring-boot-starter-test' // adds the Spring Boot starter test dependency
}

repositories { // repositories block
  mavenCentral() // specifies that the project will use the Maven Central repository to resolve dependencies
}

test { // test task
  useJUnitPlatform() // configures the test task to use the JUnit platform
}

tasks.withType(JavaCompile) { // tasks with type JavaCompile
  options.encoding = 'UTF-8' // configures the encoding of Java source files to UTF-8
  options.compilerArgs.add('-Xlint:unchecked') //configures the compiler to show unchecked warnings
}

// buildscript block
buildscript {
  repositories { // repositories block
    mavenCentral() // specifies that the buildscript will use Maven Central repository to resolve dependencies
  }
  dependencies { // dependencies block
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.5.0' // adds the Spring Boot Gradle plugin dependency
  }
}

// allprojects block
allprojects {
  apply plugin: 'maven-publish' // applies the Maven Publish plugin to all projects
  group = 'com.example' // sets the group for all projects
  version = '1.0-SNAPSHOT' // sets the version for all projects
}

// publishing block
publishing {
  publications {
    maven(MavenPublication) { // creates a MavenPublication
      from components.java // publishes the JAR file generated from the Java components
    }
  }
  repositories { // repositories block
    maven { // declares a Maven repository
      url 'http://mymavenrepo.com' // specifies the URL of the repository
    }
  }
}

// spring block
spring {
  mainClassName = 'com.example.Application' // specifies the main class for the Spring Boot application
}

// jacoco block
jacoco {
  toolVersion = '0.8.5' // sets the version of the JaCoCo tool
}

// tasks block
tasks {
  test { // test task
    finalizedBy jacocoTestReport // configures the test task to generate a JaCoCo test report after it runs
  }
  jacocoTestReport { // JaCoCo test report task
    dependsOn test // specifies that the task depends on the test task
    reports {
      xml.enabled true // enables the XML report
      html.enabled true // enables the HTML report
    }
  }
}
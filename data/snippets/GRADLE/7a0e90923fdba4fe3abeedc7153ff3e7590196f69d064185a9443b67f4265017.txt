plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the 'javax.inject' plugin to enable the 'javax.inject' API
    id 'javax.inject'

    // Apply the 'com.github.johnrengelman.shadow' plugin to add support for
    // creating fat/uber JARs
    id 'com.github.johnrengelman.shadow' version '4.0.2'

    // Apply the 'io.spring.dependency-management' plugin to manage
    // dependencies
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

    // Apply the 'com.google.cloud' plugin to add support for deploying to Google Cloud
    id 'com.google.cloud.tools.appengine-gradle-plugin' version '1.3.0'
}

// Define minimum Java version
sourceCompatibility = 1.8

// Define project dependencies
dependencies {
    // Specify Spring Boot starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-pubsub'

    // Specify Google Cloud dependencies
    implementation platform('com.google.cloud:libraries-bom:8.1.0')

    // Specify test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.google.cloud:google-cloud-pubsub:1.111.0'
}

// Define tasks for JAR creation and deployment
jar {
    // Create a fat/uber JAR by including the loaded dependencies
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    // Set the main class for the JAR
    manifest {
        attributes "Main-Class": "com.example.demo.DemoApplication"
    }
}

appengine {
    // Specify the project ID for deployment on Google Cloud
    deploy {
        projectId = 'my-project-id'
    }
}
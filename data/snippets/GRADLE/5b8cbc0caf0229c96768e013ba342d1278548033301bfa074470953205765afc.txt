plugins { // This block defines the plugins used in the project
  id 'java' // This plugin allows us to compile and run Java code
  id 'jacoco' // This plugin allows us to track code coverage
}

apply plugin: 'application' // This plugin allows us to create an executable application

repositories { // This block defines where our dependencies can be found
  mavenCentral()
}

dependencies { // This block defines the dependencies for our project
  implementation 'org.junit.jupiter:junit-jupiter:5.3.2' // This dependency allows us to use JUnit 5 for testing
  implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3' // This dependency allows us to work with JSON
}

test { // This block defines the test task for our project
  useJUnitPlatform() // This tells Gradle to run our tests using the JUnit platform
  jacoco { // This block configures the Jacoco plugin for test coverage
    append = false // This ensures that results from previous test runs are not included in the coverage report
    toolVersion = "0.8.5" // This specifies the version of the Jacoco plugin to use
    reportsDir = file("$buildDir/jacoco/test")
    // This sets the directory where the coverage report will be generated
  }
  // Exclude some test source directories from coverage report (optional)
  jacocoTestReport {
    reports {
      xml.enabled false
      csv.enabled false
      html.destination file("${buildDir}/jacocoHtml")
    }
  }
}

// Define a custom task for generating documentation
task generateDocs(type: Javadoc) {
  source = sourceSets.main.allJava // This tells Gradle to generate documentation for the main source directory
  classpath = sourceSets.main.compileClasspath // This tells Gradle where to find dependencies for generating documentation
  destinationDir = file("${buildDir}/docs") // This specifies where to generate the documentation
}
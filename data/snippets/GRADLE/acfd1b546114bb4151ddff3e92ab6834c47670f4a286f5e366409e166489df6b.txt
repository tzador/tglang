plugins {
    id 'java' // Annotation for importing the Java plugin
    id 'application' // Annotation for importing the Application plugin
    id 'com.google.googlejavaformat' version '0.9' // Annotation for importing the Google Java Format plugin with the specified version
}

java {
    sourceCompatibility = JavaVersion.VERSION_11 // Sets the source compatibility to Java 11
    targetCompatibility = JavaVersion.VERSION_11 // Sets the target compatibility to Java 11
}

application {
    mainClassName = 'com.example.Main' // Defines the main class
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.12.0' // Adds a dependency on Apache Commons Lang version 3.12.0
    testImplementation 'junit:junit:4.13.2' // Adds a dependency on JUnit version 4.13.2 for testing
}

java {
    sourceSets { // Configures additional source sets for different environments
        development { // Creates a source set named 'development'
            java {
                srcDirs = ['src/development/java'] // Sets the source directories for the 'development' source set
            }
        }
        production { // Creates a source set named 'production'
            java {
                srcDirs = ['src/production/java'] // Sets the source directories for the 'production' source set
            }
        }
    }
}

test {
    useJUnitPlatform() // Enables usage of the JUnit Platform to run tests
    scanForTestClasses = false // Disables automatic test class discovery
}

// The following code creates a custom task named 'generateDocs' and configures it to use the JavaDoc task
task generateDocs(type: JavaDoc, group: 'Documentation') {
    // Sets the source directories for the JavaDoc task
    source = project.sourceSets.main.allJava.srcDirs
    // Specifies the classpath for the JavaDoc task
    classpath = sourceSets.main.compileClasspath
    // Sets the output directory for the generated JavaDoc
    destinationDir = file("$buildDir/generatedDocs")
}

// The following code creates a new task named 'runCustom' which depends on the 'build' and 'generateDocs' tasks
task runCustom(dependsOn: ['build', 'generateDocs'], group: 'Custom Tasks') {
    // Configures the task to run the 'main' class
    doFirst { exec { executable 'java' args '-cp', sourceSets.main.runtimeClasspath.asPath, 'com.example.Main' } }
}
/*
    This is a complex code snippet in GRADLE.
    It will create a task to compile Java code, run tests and generate code coverage reports.
*/

apply plugin: 'java'

/* Configure repositories */
repositories {
    jcenter()
}

/* Set up the dependencies for the project */
dependencies {
    /* Define the version of JUnit to use for testing */
    testImplementation 'junit:junit:4.12'

    /* Define the version of JaCoCo for code coverage reports */
    testImplementation 'org.jacoco:jacoco:0.8.2'
}

/* Custom task to compile Java code, run tests and generate code coverage reports */
task testCoverage(type: JacocoReport, dependsOn: ['test']) {
    /* Configure task to use Java project's source and classes */
    sourceDirs = project.android.sourceSets.main.java.srcDirs
    classDirectories = project.android.sourceSets.main.output.classesDirs
    /* Configure task to use tests as its execution runtime classpath */
    executionData = project.android.tasks['test'].getOutputs().getSingleFile()

    /* Configure task to generate XML coverage report for the specified gradle version */
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/jacoco.xml"
    }

    /* Create HTML coverage report */
    println "Generating code coverage report..."
    doLast {
        /* Initialize reporting engine */
        def coverageSourceDirs = [
                /* Add main project and test project source code directories */
                'src/main/java',
                'src/test/java'
        ]
        /* Generate HTML report using the configured source directories */
        def report = new JacocoReport(coverageSourceDirs, files)

        /* Configure report output location */
        report.setHtmlOutput(file("${buildDir}/docs/jacoco"))

        /* Execute report generation */
        report.execute()
    }
}
apply plugin: 'java'

 

repositories {

jcenter() // declares JCenter repository as dependency

}

 

dependencies {

compile group: 'com.google.guava', name: 'guava', version: '18.0' // specifies the dependency on Guava library version 18.0

testCompile group: 'junit', name: 'junit', version: '4.12' // specifies the dependency on JUnit library version 4.12

}

 

task compileDependencies() { // creates a task to compile dependencies

def dependencies = configurations.compile.resolvedConfiguration.resolvedArtifacts // retrieves a list of all resolved dependencies

dependencies.each { // loops through each dependency

println "Dependency: ${it.name}, Version: ${it.version}" // prints the dependency name and version

}

}

 

// add a custom task to generate JavaDocs

task generateJavaDocs(type: Javadoc) { // declares a custom task of type Javadoc

source = sourceSets.main.allJava // sets the source to all Java files in the main source set

classpath += configurations.compile // adds all dependencies to the classpath

title 'My Project JavaDocs' // sets the title of the JavaDocs

destinationDir = file('docs') // sets the destination to a "docs" folder

options.memberLevel = Javadoc.MemberLevel.PROTECTED // sets the member level to protected

exclude '**/internal/**' // excludes any files in the "internal" directory from being included in the JavaDocs

}

 

// add a custom task to run unit tests

task runTests(type: Test) { // declares a custom task of type Test

useJUnit { // configures the use of JUnit for this task

ignoreFailures = true // sets ignoreFailures to true, so the build won't fail if a test fails

}

testClassesDir = sourceSets.test.output.classesDir // sets the test classes directory

classpath += configurations.compile // adds all dependencies to the classpath

reports.junitXml.destination = file("build/test-results") // sets the output directory for test results

}

 

// add a task to run all the tests and generate the JavaDocs

task testAndDocs(dependsOn: ['runTests', 'generateJavaDocs']) // sets the task to depend on both the runTests and generateJavaDocs tasks
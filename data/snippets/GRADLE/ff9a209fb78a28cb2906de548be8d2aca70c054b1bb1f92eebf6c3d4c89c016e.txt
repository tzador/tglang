plugins {
    // A plugin that generates Javadoc API documentation for the project
    id 'org.gradle.javadoc' version '0.3'
    
    // A plugin that provides resource processing services to projects
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    
    // A plugin for running JUnit Platform based tests
    id 'org.junit.platform.gradle.plugin' version '1.6.2'
}

// Gradle's wrapper tasks to ensure that the project can be built without manually installing Gradle
wrapper {
    // optional properties for wrapper
    gradleVersion = '6.8.2'
    distributionType = Wrapper.DistributionType.BIN
}

// Configure the javadoc task to generate API documentation for the project
javadoc {
    // the output directory for the generated documentation
    destinationDir = file("${project.buildDir}/docs")

    // configure the Javadoc tool options
    options.addStringOption('Xdoclint:none', '-quiet')

    // customize the title of the generated API documentation
    title = 'My Project API Reference'

    // customize the header for the generated API documentation
    footer = 'Generated by Javadoc'

    // include the project's source code in the API documentation
    source = sourceSets.main.allSource

    // exclude specific packages from the generated documentation
    exclude 'some.package.to.exclude'
}

// Configure the shadowJar task to create a fat JAR with all project dependencies
shadowJar {
    // the name of the generated JAR file
    archiveFileName = 'my-project-all.jar'

    // adds the project's main class to the manifest file of the generated JAR
    manifest {
        attributes 'Main-Class': 'com.myproject.Main'
    }

    // filter out any unnecessary dependencies from the generated JAR
    dependencies {
        exclude(dependency('com.google.guava:guava'))
    }
}

// Configure the JUnit Platform plugin to run tests with the Gradle test task
test {
    // enable JUnit Platform tests
    useJUnitPlatform()

    // specify the version of JUnit to use for tests
    junitPlatformVersion '1.6.2'

    // exclude specific packages from the tests
    exclude 'some.package.to.exclude.**'
}
plugins { //plugin block
  id 'java-library' //adds java library plugin
}

configurations { //configuration block
  customConfiguration { //defines a custom configuration
    description = 'My custom configuration' //sets description for the custom configuration
    extendsFrom testRuntime //make configuration extend from test runtime
  }
}

dependencies { //dependency block
  implementation 'com.google.guava:guava:28.2-jre' //adds implementation dependency for google guava library version 28.2
  testImplementation 'junit:junit:4.12' //adds test implementation dependency for junit version 4.12
  customConfiguration 'org.springframework:spring-core:5.2.3.RELEASE' //adds custom configuration dependency for spring-core library version
}

test { //test block
  useJUnitPlatform() //configures test task to use JUnit platform
  testLogging { //test logging block
    events "passed", "skipped", "failed" //specifies events to log for test task
  }
}

repositories { //repositories block
  mavenCentral() //adds maven central repository
}

jar { //jar block
  archiveClassifier = 'sources' //sets archive classifier for jar task
  manifest { //manifest block
    attributes 'Main-Class': 'com.example.MyMainClass' //sets main class attribute for jar manifest
  }
}

tasks.named('clean') { //executes task when clean task is invoked
  println 'Cleaning!' //prints "Cleaning!" when task is invoked
}
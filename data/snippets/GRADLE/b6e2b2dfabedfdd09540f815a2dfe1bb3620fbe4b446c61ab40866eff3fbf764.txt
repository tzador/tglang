// This is a build script for a Java project using Gradle

// Define variables for the Java and Gradle versions to use
def javaVersion = '11'
def gradleVersion = '6.5'

// Define a task to compile the Java code
task compileJava {
    // Use the specified Java version
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    // Set the source and output directories
    sourceSets.main.java.srcDirs("src/main/java")
    sourceSets.main.output.classesDir = "build/classes/java/main"

    // Include any additional source directories
    sourceSets.main.java.srcDirs("src/main/java2")

    // Set the classpath for compilation
    classpath = files()
}

// Define a task to run the compiled application
task run(type: JavaExec) {
    // Use the specified Java version
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    // Specify the class to run
    main = 'com.example.Main'

    // Set the classpath for running the application
    classpath = sourceSets.main.runtimeClasspath
}

// Define a task to create a JAR file
task createJar(type: Jar) {
    // Set the name and destination of the JAR file
    archiveFileName = 'my-application.jar'
    destinationDir = file("$buildDir/distributions")

    // Set the manifest file for the JAR
    manifest {
        // Set the main class
        attributes 'Main-Class': 'com.example.Main'
    }

    // Include all compiled classes and resources in the JAR
    from sourceSets.main.output
    from sourceSets.main.resources
}

// Define a task to clean the project
task clean(type: Delete) {
    // Set the files and directories to be deleted
    delete 'build'
    delete 'my-application.jar'
}

// Specify the repositories to be used
repositories {
    mavenCentral()
}

// Specify the dependencies for the project
dependencies {
    // Use the specified Gradle version
    classpath "com.gradle:gradle-core:$gradleVersion"

    // Include the Java plugin for the project
    implementation "org.openjfx:javafx-sdk:15.0.1"
}

// Specify any build tasks that need to be executed before the main build
build.dependsOn compileJava
build.dependsOn createJar
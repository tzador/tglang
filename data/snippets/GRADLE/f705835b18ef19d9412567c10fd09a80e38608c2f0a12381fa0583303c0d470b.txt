plugins {
    id 'java'
    id 'application' //adds tasks for running and building an application
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web' //imports dependencies for Spring Boot web application
	implementation 'com.google.guava:guava:30.1-jre' //imports dependency for Google Guava library
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0' //imports dependency for JUnit 5 for testing
}

mainClassName = 'com.example.myapp.Main' //defines the main class for the application

run {
	standardInput = System.console().reader() //allows for user input in console
}

task printDependencies { //creates a custom task
	doLast { //defines the actions to be executed when the task is run
		def project = project //creates a reference to the current project
		project.configurations.forEach { //loops through all configurations in the project
			if(it.name.startsWith('testRuntime')) { //checks if the configuration name starts with 'testRuntime'
				println "Test runtime dependencies for ${project.name}:" //prints message to console
				project.configurations[it.name].resolvedConfiguration.resolvedArtifacts.each { //loops through the resolved artifacts in the configuration
					println it.name //prints name of artifact to console
				}
			}
		}
	}
}

task copyDependencies(type: Copy) { //creates a task of type Copy
	from(configurations.runtimeClasspath) //specifies the source for copying files
	into('dependencies') //specifies the destination for copied files
}

task runServer(dependsOn: 'bootRun') //creates a task that depends on the bootRun task
plugins {
    id 'java'
}

group 'com.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // Annotation Processing
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Persistence
    implementation 'org.hibernate:hibernate-core:5.4.31.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.31.Final'
    implementation 'com.h2database:h2:1.4.200'

    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.31'
    implementation 'org.slf4j:slf4j-simple:1.7.31'

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.assertj:assertj-core:3.15.0'
}

// Custom task to run tests
task runTests(type: Test) {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Configuring Task Outputs
test {
    outputs.file("${buildDir}/reports/tests/testResults")
}


// Custom plugin for generating documentation
plugins {
    id 'org.asciidoctor.convert' version '1.5.9.2'
}

// Configuring the Asciidoctor task
asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    // Including the source code in documentation
    attributes 'source-highlighter': 'coderay', 'coderay-linenums-mode': 'table'
    attributes 'generated-docs': "${buildDir}/docs"
}

// Adding the documentation output directory to the build
build.dependsOn asciidoctor

// Creating a task to zip the documentation files
task zipDocs(type: Zip) {
    description = 'Creates a zip file containing the documentation files'
    destinationDir = file("${buildDir}/zipped-docs")
    archiveFileName = "documentation.zip"

    // Includes all files in the documentation directory
    from "${buildDir}/docs"
    include '**/*'
}
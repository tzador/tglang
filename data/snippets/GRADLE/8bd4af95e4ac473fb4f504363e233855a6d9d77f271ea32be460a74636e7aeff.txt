plugins {
    id 'java'
    id 'application'

    // additional plugins
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.sonarqube' version '3.0'
}

// define variables
def appName = 'MyApp'
def appVersion = '1.0.0'
def appMainClass = 'com.example.Main'

application {
    mainClassName = appMainClass
    applicationDefaultJvmArgs = ['-Dmy.app.name=' + appName, '-Dmy.app.version=' + appVersion]

    // specify application arguments
    applicationDefaultArgs = ['arg1', 'arg2', 'arg3', 'arg4']
}

// define dependencies
dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'

    testCompile 'junit:junit:4.13.2'
}

// specify source and target compatibility
sourceCompatibility = 1.8
targetCompatibility = 1.8

// specify build tasks
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-Xlint:deprecation')
}

// specify task to generate JAR file
jar {
    manifest {
        attributes 'Main-Class': appMainClass,
                'Implementation-Title': appName,
                'Implementation-Version': appVersion
    }
}

// set up code quality tool
sonarqube {
    properties {
        property 'sonar.projectName', appName
        property 'sonar.projectVersion', appVersion
        property 'sonar.sources', 'src/main/java'
        property 'sonar.java.binaries', '**/build/classes'
    }
}

// specify task to run sonarqube analysis
task sonarqube(type: org.sonarqube.gradle.SonarQubeTask) {
    dependsOn test
    properties {
        property 'sonar.sourceEncoding', 'UTF-8'
    }
}
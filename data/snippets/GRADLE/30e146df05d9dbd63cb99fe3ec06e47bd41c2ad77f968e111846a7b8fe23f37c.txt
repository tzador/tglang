plugins {
    // Apply the Java Library plugin to add support for Java library
    id 'java-library'

    // Apply the Groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the Antlr plugin to generate ANTLR parsers
    id 'antlr'

    // Apply the Jacoco plugin to generate code coverage reports
    id 'jacoco'
}

// Define project name and version
// Use project properties to easily change values
project.ext {
    appName = 'MyApp'
    appVersion = '1.0'
}

// Define dependencies used in the project
dependencies {
    // Java libraries
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.google.guava:guava:28.2-jre'

    // Groovy libraries
    implementation 'org.codehaus.groovy:groovy-all:2.5.11'

    // ANTLR library
    antlr 'org.antlr:antlr4:4.8'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation 'org.spockframework:spock-core:2.0-M3-groovy-2.5'

    // Jacoco plugin dependency
    jacocoAgent 'org.jacoco:org.jacoco.agent:0.8.5'
}

// Define task for generating ANTLR parser
// Specify which grammar file to use and where to generate the parser
task generateParser(type: JavaExec) {
    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr
    args = ['-visitor', '-no-listener', 'src/main/antlr4/MyGrammar.g4', '-package', 'com.example.parsers']
}

// Configure Jacoco plugin for code coverage reports
jacoco {
    // Specify where the code coverage report should be generated
    reportsDir = file("$project.buildDir/jacoco")

    // Include all classes in the code coverage report
    classDumpJar = file('build/classes/java/main')

    // Exclude automatically generated ANTLR classes from the code coverage report
    excludes = ['com/example/parsers/**']
}

// Set up the build tasks to use Jacoco for code coverage
test {
    jacoco.includeNoLocationClasses = true
    finalizedBy jacocoTestReport
}
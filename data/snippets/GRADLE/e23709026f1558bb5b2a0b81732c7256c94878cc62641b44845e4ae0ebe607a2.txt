// Define task for generating build classes
task generateBuildClasses(type: GradleBuild) {
    buildFile = file('MyBuild.gradle') // Set build file location
    startParameter.projectProperties['property1'] = 'value1' // Set project properties
    startParameter.systemProperties['property2'] = 'value2' // Set system properties
    doFirst {
        // Create source directories for build classes
        file('src/main/java').mkdirs()
        file('src/test/java').mkdirs()
    }
    outputs.files {
        // Define output files for build classes
        file('build/classes/main').file('class1.class')
        file('build/classes/main').file('class2.class')
        file('build/classes/test').file('Test1.class')
        file('build/classes/test').file('Test2.class')
    }
}

// Task for running build classes
task runBuildClasses(type: JavaExec) {
    // Set classpath to include build classes output
    classpath = configurations.compile + fileTree('build/classes/main') + fileTree('build/classes/test')
    main = 'ClassName' // Set main build class to run
    args = ['arg1', 'arg2'] // Set arguments for build class
}

// Set task dependencies
runBuildClasses.dependsOn generateBuildClasses
build.dependsOn runBuildClasses
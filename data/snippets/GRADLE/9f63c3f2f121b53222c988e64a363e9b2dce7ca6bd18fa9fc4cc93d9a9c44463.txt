plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

// define task for running tests with jacoco for code coverage
task jacoco(type: JacocoReport) {
  // set which execution data to use
  executionData(test)
  // set source directories to look for source files
  sourceDirectories = files(sourceSets.main.allSource.srcDirs)
  // set classes directories to look for compiled classes
  classDirectories = files(sourceSets.main.output)
  // define report output directory
  reports {
    xml.enabled = true
    xml.destination = file('build/reports/jacoco/report.xml')
  }
}

// configure jacoco for code coverage during test task and build
jacoco {
  // set which execution data to use
  toolVersion = '0.8.6'
  // set source directories to look for source files
  sourceDirectories = files(sourceSets.main.allSource.srcDirs)
  // set classes directories to look for compiled classes
  classDirectories = files(sourceSets.main.output)
  // define report output directory
  reports {
    xml.enabled = true
    xml.destination = file('build/reports/jacoco/test/report.xml')
  }
}

// define task for running integration tests with jacoco for code coverage
task integrationTest(type: Test) {
  // set which execution data to use
  jacoco {
    // set which execution data to use
    toolVersion = '0.8.6'
    // set source directories to look for source files
    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    // set classes directories to look for compiled classes
    classDirectories = files(sourceSets.main.output)
  }
  
  // enable jacoco for code coverage
  jacocoEnabled = true
  // set jacoco exec file location
  jacoco {
    // define report output directory
    reports {
      xml.enabled = true
      xml.destination = file('build/reports/jacoco/integrationTest/report.xml')
    }
  }

  // define integration test source and resource directories
  sourceSets {
    integrationTest {
      java {
        srcDirs = ["src/integrationTest/java"]
      }
      resources {
        srcDirs = ["src/integrationTest/resources"]
      }
    }
  }

  // define integration test classpath
  dependencies {
    integrationTestCompile sourceSets.main.output
    integrationTestRuntime configurations.runtimeClasspath
  }
}

// define task for running all tests (Including integration tests)
task allTest(type: Test) {
  // set which execution data to use
  jacoco {
    // set which execution data to use
    toolVersion = '0.8.6'
    // set source directories to look for source files
    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    // set classes directories to look for compiled classes
    classDirectories = files(sourceSets.main.output)
  }

  // enable jacoco for code coverage
  jacocoEnabled = true
  // set jacoco exec file location
  jacoco {
    // define report output directory
    reports {
      xml.enabled = true
      xml.destination = file('build/reports/jacoco/allTest/report.xml')
    }
  }

  // define all test classpath
  dependencies {
    allTestCompile sourceSets.main.output
    allTestRuntime configurations.runtimeClasspath
  }
}

// define tasks for building and running the application
task buildApp(type: Exec, dependsOn: ['clean', 'build']) {
  // define command to run
  commandLine 'java', '-jar', "${project.buildDir}/libs/${project.name}-${project.version}.jar"
}

task runApp(type: Exec, dependsOn: ['build']) {
  // define command to run
  commandLine 'java', '-jar', "${project.buildDir}/libs/${project.name}-${project.version}.jar"
}

// define default tasks to be executed when running command 'gradle'
defaultTasks 'runApp'
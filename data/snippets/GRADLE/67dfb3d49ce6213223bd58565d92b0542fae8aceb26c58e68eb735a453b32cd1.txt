// Define tasks based on input properties
task hello << {
    println 'Hello ' + property('name')
}

// Define a task that depends on other tasks
task goodbye(dependsOn: hello) << {
    println 'Goodbye ' + property('name')
}

// Define tasks with different configurations
task configureSample(type: Exec) {
    workingDir 'samples/sample'
    commandLine 'sh', 'configure.sh'
}

task configureRelease(type: Exec) {
    workingDir 'release'
    commandLine 'python', 'configure.py'
}

// Define a task with a configuration block
task test(type: Test) {
    useTestNG() {
        suites 'calculator'
    }
}

// Define a task with a dependency outside of the project
task deploy(type: Copy) {
    from '../code/build/libs/'
    into 'var/www/myapp/'
    dependsOn project(':code').tasks.jar
}
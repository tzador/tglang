plugins {
  id 'java'
  id 'org.springframework.boot' version '2.1.3.RELEASE'
}

// Configures the build environment to create a deployable WAR file
apply plugin: 'war'

// Specifies the Java version to be used for compiling the project
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Configures dependencies for the project
dependencies {
  // Import Spring Boot Starter Web
  implementation 'org.springframework.boot:spring-boot-starter-web'
  
  // Import JUnit for testing
  testImplementation 'junit:junit:4.12'
  
  // Import Spring Boot Starter Test
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  
  // Import Spring Boot Actuator for monitoring
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  
  // Import Log4j2 for logging
  implementation 'org.apache.logging.log4j:log4j-api:2.11.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.11.1'
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.1'
}

// Specifies the main class for the project
mainClassName = 'com.example.application.Application'

// Configures testing tasks
test {
  // Use JUnit 5 as the test engine
  useJUnitPlatform()
  
  // Specifies the test class to run
  testClasses = ['com.example.TestSuite']
  
  // Configures system properties for testing
  systemProperties System.properties
  
  // Enables max heap size for testing
  maxHeapSize '256m'
}

// Configures the Spring Boot Gradle plugin
springBoot {
  // Configures the main class for the project
  mainClass = 'com.example.application.Application'
  
  // Enables build-info task for creating a build-info.properties file
  buildInfo()
  
  // Specifies the packaging options for the project
  executable = true
  packagingOptions {
    // Exclude specific files from being included in the WAR file
    exclude 'META-INF/**'
  }
  
  // Specifies the logging properties for the project
  logbackConfiguration = file('src/main/resources/logback-spring.xml')
}

// Configures the WAR deployment
war {
  // Specifies the name of the WAR file to be created
  archiveName 'my-application.war'
  
  // Adds additional files to the WAR file
  from('src/main/resources') {
    include '**/*.properties'
  }
  
  // Adds additional files to the WAR file based on the WAR extension
  from('src/main/resources/web') {
    include '**/*.war'
    into 'WEB-INF/classes'
  }
  
  // Specifies the web.xml file for the WAR deployment
  webXml = file('src/main/webapp/WEB-INF/web.xml')
}

// Configures the Spring Boot Run task
bootRun {
  // Specifies additional JVM arguments for running the application
  jvmArgs = ['-Dspring.profiles.active=dev', '-Xdebug']
  
  // Specifies the run arguments for the Spring Boot application
  args = ['--server.port=8080', '--spring.config.location=classpath:/config/']
}

// Configures the jar task for building a standalone application
jar {
  // Adds additional files to the JAR file
  from('src/main/resources') {
    include '**/*.yml'
    include '**/*.json'
  }
  
  // Adds additional files to the JAR file based on the JAR extension
  from('src/main/resources/web') {
    include '**/*.jar'
    into 'BOOT-INF/lib'
  }
  
  // Specifies the MANIFEST file for the JAR
  manifest {
    // Specifies the main class for the project
    attributes 'Main-Class': 'com.example.application.Application'
    
    // Specifies the version for the project
    attributes 'Implementation-Version': '1.0.0'
  }
}
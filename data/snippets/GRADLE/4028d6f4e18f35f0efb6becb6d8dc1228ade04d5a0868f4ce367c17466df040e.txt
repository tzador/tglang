apply plugin: 'java' // Applies Java plugin to the project

repositories { // Configures the repositories from which the dependencies will be resolved
    mavenCentral() // Adds Maven Central repository 
    jcenter()      // Adds JCenter repository
}

configurations { // Defines additional dependency configurations for projects or libraries
    provided // Configuration for dependencies that are provided by the runtime environment
    optional // Configuration for dependencies that are not required for compilation or execution
}

dependencies { // Defines the dependencies for this project
    
    // Dependencies for production code
    compile 'org.apache.commons:commons-io:1.3.2' // Dependency on Apache Commons IO library
    compile 'com.google.guava:guava:23.0'        // Dependency on Google Guava library
    
    // Dependencies for unit tests
    testCompile 'junit:junit:4.12'              // Dependency on JUnit library
    testCompile 'org.mockito:mockito-core:2.7.22'// Dependency on Mockito library
}

task myTask(type: Exec) { // Defines a task of type Exec
    workingDir 'src' // Sets the base directory for this task
    executable 'javac' // Sets the executable to be called by this task
    
    // Configures the arguments for the executable
    args '-source', '1.8', '-target', '1.8'
    
    // Configures the source and destination files to be compiled
    inputs.dir 'src/main/java' // Configures the source directory
    inputs.dir 'src/test/java' // Configures the test source directory
    inputs.files file('src/main/java/com/example/Main.java'), file('src/test/java/com/example/Test.java') // Configures the source files
    outputs.dir 'build/classes' // Configures the destination directory
}

task myOtherTask(type: Exec) { // Defines another task of type Exec
    dependsOn myTask // Configures this task to depend on the previous task
    
    // Configures the working directory and executable for this task
    workingDir 'build/classes' 
    executable 'java'
    
    // Configures the arguments for the executable
    args '-cp', 'org.apache.commons:commons-io:1.3.2', '-cp', 'com.google.guava:guava:23.0', 'com.example.Main' // Sets the classpath and main class to be executed
    
    // Configures the input and output files for this task
    inputs.files 'build/classes' // Configures the input to be the output of the previous task
    outputs.file 'build/reports/output.txt' // Configures the output file to store the results
}

task checkDependencies(type: Check) { // Defines a task of type Check
   doLast { // Configures the action to be executed when this task is run
        // Checks for missing dependencies using the provided and optional configurations
        checkDependencies(configurations.provided, configurations.optional)
    }
}
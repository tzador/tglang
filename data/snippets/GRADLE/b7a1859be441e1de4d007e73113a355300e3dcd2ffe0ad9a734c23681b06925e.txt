plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Apply the war plugin to add support for building a web application archive
    id 'war'
}

// Set the main class for the application
application {
    mainClassName = 'com.example.Main'
}

// Add dependencies for the project
dependencies {
    // Specify the java version for compilation
    implementation 'org.apache.commons:commons-lang3:3.11'
    testImplementation 'junit:junit:4.12'
    runtimeOnly('com.h2database:h2:1.4.199')

    // Add Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.4.RELEASE'
}

// Configure the web application archive
war {
    // Set the base name of the archive
    baseName = 'myApplication'

    // Exclude specific files from the archive
    exclude('config/*')
}

// Configure tasks for running the application
task runApp(type: JavaExec, dependsOn: 'classes') {
    // Set the main class for execution
    main = application.mainClassName

    // Include libraries in the classpath
    classpath = sourceSets.main.runtimeClasspath
}

// Configure tasks for generating a JAR file
task buildJar(type: Jar) {
    // Set the base name of the JAR file
    baseName = 'myApplication'

    // Include files and directories in the JAR file
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
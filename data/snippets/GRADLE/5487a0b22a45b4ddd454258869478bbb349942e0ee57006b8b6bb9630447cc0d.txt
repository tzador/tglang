plugins {
    // This plugin allows for easy packaging and distribution of Java applications
    id 'java'

    // This plugin enables the creation of a JAR file
    id 'jar'

    // This plugin allows for the building and publishing of a web application
    id 'war'
}

// This block defines the dependencies for the project
dependencies {
    // This dependency is for the Apache log4j library
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // This dependency is for the Apache commons-io library
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    // This dependency is for the Google Gson library
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // This dependency is for the Apache Tomcat servlet API
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '3.1.0'
}

// This block defines the build configuration for the project
// In this example, the project will be compiled using Java 11
// and the WAR file will be generated in the 'build/libs' directory
project.ext {
    set('javaVersion', JavaVersion.VERSION_11)
    set('warDir', ${buildDir}/libs)
}

// This block defines the tasks to be executed when running 'gradle build'
// In this example, the 'assemble' task will be executed, which will build
// the project and create a WAR file
task assemble(type: War) {
    // This block specifies the WAR file's name and location,
    // using the project's name and version
    baseName = project.name
    version = project.version

    // This block defines the contents of the WAR file,
    // including the compiled classes, resources, and dependencies
    webAppDirName = 'src/main/webapp'
    from('build/classes/java/main') {
        include '**/*.class'
    }
    from('src/main/resources') {
        include '**/*.properties'
    }
    from('src/main/webapp') {
        exclude '**/*.jsp'
    }
    classpath = files()

    // This block specifies any additional files or directories
    // to be included in the WAR file
    into('WEB-INF/lib') {
        // includes all runtime dependencies
        from configurations.runtime
        // includes all compile dependencies
        from configurations.providedRuntime
    }

    // This block specifies the WAR file's manifest file,
    // which contains information about the project
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': 'Main'
    }
}

// This block defines the tasks to be executed when running 'gradle run'
// In this example, the 'run' task will be executed, which will launch
// the application from the Main class using the dependencies and classpath
// specified in the build configuration
task run(type: JavaExec) {
    // This block specifies the main class to be executed
    main = 'Main'

    // This block adds the 'src/main/resources' directory to the classpath
    classpath sourceSets.main.runtimeClasspath
}
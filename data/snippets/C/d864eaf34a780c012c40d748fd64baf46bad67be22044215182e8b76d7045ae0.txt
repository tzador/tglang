/* This program will find the determinant of a 3x3 matrix using Cramer's rule */
#include <stdio.h>
// Function declaration for calculating determinant
int determinant(int a[3][3], int row, int col);
int main()
{
    // Initialize matrix
    int A[3][3] = {{2, 3, 5}, {7, 1, 2}, {3, 6, 1}};
    // Calculate determinant
    int det = determinant(A, 3, 3);
    // Print result
    printf("The determinant of the matrix is: %d", det);
    return 0;
}
// Function for calculating the determinant
int determinant(int a[3][3], int row, int col)
{
    // Declare variables
    int det = 0, t1, t2;
    // Check for special case
    if (row == 1)
    {
        det = a[0][0];
    }
    else if (row == 2)
    {
        det = (a[0][0] * a[1][1]) - (a[0][1] * a[1][0]);
    }
    else
    {
        // Loop through columns
        for (int i = 0; i < col; i++)
        {
            // Initialize temporary matrix
            int temp[3][3] = {0};
            // Loop through rows
            for (int j = 1; j < row; j++)
            {
                // Loop through columns again
                for (int k = 0; k < col; k++)
                {
                    // Check if column is the same as current column
                    if (k == i)
                    {
                        // Skip the loop iteration
                        continue;
                    }
                    // Copy elements of original matrix into temporary matrix
                    temp[j - 1][k < i ? k : k - 1] = a[j][k];
                }
            }
            // Calculate determinant using recursion
            det += a[0][i] * determinant(temp, row - 1, col - 1) * (i % 2 == 0 ? 1 : -1);
        }
    }
    // Return determinant
    return det;
}
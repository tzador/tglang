/* This code snippet generates a matrix with random values and performs matrix multiplication on it */

#include <stdio.h>
#include <stdlib.h>

// Function to generate a matrix with random values
void generateMatrix(float *A, int rows, int columns) {
    // Loop through each element in the matrix
    for(int i=0; i<rows; i++){
        for(int j=0; j<columns; j++){
            // Generate a random value between 1 and 10 using the rand() function
            A[i*columns + j] = (float)rand()/(float)(RAND_MAX/10);
        }
    }
}

// Function to perform matrix multiplication on two matrices
void multiplyMatrix(float *A, float *B, float *C, int rowsA, int columnsA, int columnsB) {
    // Initialize a temporary variable to store the sum of each row and column
    float sum;

    // Loop through each row of matrix A
    for(int i=0; i<rowsA; i++){
        // Loop through each column of matrix B
        for(int j=0; j<columnsB; j++){
            // Initialize the sum variable to 0 for each new value
            sum = 0;

            // Loop through each element in the row of matrix A and column of matrix B
            for(int k=0; k<columnsA; k++){
                // Multiply the corresponding elements and add it to the sum
                sum += A[i*columnsA + k] * B[k*columnsB + j];
            }

            // Store the final sum in the corresponding row and column of matrix C
            C[i*columnsB + j] = sum;
        }
    }
}

// Function to print the generated matrix
void printMatrix(float *A, int rows, int columns) {
    // Loop through each element in the matrix
    for(int i=0; i<rows; i++){
        for(int j=0; j<columns; j++){
            // Print the element at the current row and column
            printf("%.2f\t", A[i*columns + j]);
        }

        // Move to the next line after printing a row
        printf("\n");
    }
}

// Function to print the result of matrix multiplication
void printResult(float *A, float *B, float *C, int rowsA, int columnsA, int columnsB) {
    // Print the first matrix
    printf("Matrix A:\n");
    printMatrix(A, rowsA, columnsA);

    // Print the second matrix
    printf("\nMatrix B:\n");
    printMatrix(B, columnsA, columnsB);

    // Print the final result matrix
    printf("\nThe result of A*B is:\n");
    printMatrix(C, rowsA, columnsB);
}

// Main function
int main() {
    // Set the dimensions of the matrices
    int rowsA = 3;
    int columnsA = 4;
    int columnsB = 2;

    // Initialize the matrices
    float A[rowsA*columnsA];
    float B[columnsA*columnsB];
    float C[rowsA*columnsB];

    // Generate matrix A with random values
    generateMatrix(A, rowsA, columnsA);

    // Generate matrix B with random values
    generateMatrix(B, columnsA, columnsB);

    // Multiply the two matrices and store the result in matrix C
    multiplyMatrix(A, B, C, rowsA, columnsA, columnsB);

    // Print the result of matrix multiplication
    printResult(A, B, C, rowsA, columnsA, columnsB);

    return 0;
}
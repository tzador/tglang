/***
 * Description: This is a complex code snippet in C language
 * It implements a sorting algorithm called merge sort
 * Author: John Smith
***/

#include <stdio.h>

//Function to merge the left and right subarrays
void merge(int arr[], int left, int middle, int right) {

    //Calculate the sizes of the left and right subarrays
    int size_left = middle - left + 1;
    int size_right = right - middle;

    //Create temporary arrays to store the data
    int temp_left[size_left], temp_right[size_right];

    //Copy the data to the temporary arrays
    for (int i = 0; i < size_left; i++)
        temp_left[i] = arr[left + i];
    for (int j = 0; j < size_right; j++)
        temp_right[j] = arr[middle + 1 + j];

    //Merge the temporary arrays back into the original array
    int i = 0;  //Index for temp_left
    int j = 0;  //Index for temp_right
    int k = left; //Index for arr
    while (i < size_left && j < size_right) {

        if (temp_left[i] <= temp_right[j]) {
            arr[k] = temp_left[i];
            i++;
        }
        else {
            arr[k] = temp_right[j];
            j++;
        }
        k++;
    }

    //Copy the remaining elements from temp_left
    while (i < size_left) {
        arr[k] = temp_left[i];
        i++;
        k++;
    }

    //Copy the remaining elements from temp_right
    while (j < size_right) {
        arr[k] = temp_right[j];
        j++;
        k++;
    }
}

//Merge sort function
void merge_sort(int arr[], int left, int right) {

    if (left < right) {
        //Equivalently (left+right)/2
        int middle = left + (right - left) / 2;

        //Sort the left half of the array
        merge_sort(arr, left, middle);

        //Sort the right half of the array
        merge_sort(arr, middle + 1, right);

        //Merge the two sorted halves
        merge(arr, left, middle, right);
    }
}

int main() {

    //Declare and initialize an array of integers
    int arr[] = { 9, 2, 6, 4, 8, 1, 5, 7, 3 };

    //Calculate the size of the array
    int size = sizeof(arr) / sizeof(arr[0]);

    //Call the merge sort function
    merge_sort(arr, 0, size - 1);

    //Print the sorted array
    printf("Sorted array: ");
    for (int i = 0; i < size; i++)
        printf("%d ", arr[i]);
    
    return 0;
}

/***
 * Output:
 * Sorted array: 1 2 3 4 5 6 7 8 9
 ***/
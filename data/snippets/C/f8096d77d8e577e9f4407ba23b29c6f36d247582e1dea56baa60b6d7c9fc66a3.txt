// This is a complex code snippet in C that includes pointers, structs, and function pointers

#include <stdio.h>

// Define a struct that holds a string and an integer
typedef struct {
    char* str;
    int num;
} MyStruct;

// Declare a function pointer type that takes two ints as parameters and returns an int
typedef int (*MyFuncPtr)(int, int);

// Declare an array of MyStructs
MyStruct struct_array[10];

// Define a function that takes a function pointer as a parameter
void print_result(MyFuncPtr func) {
    printf("Result: %d\n", func(5, 10));
}

int main() {
    // Initialize values for the first MyStruct in the array
    struct_array[0].str = "Hello";
    struct_array[0].num = 123;
    
    // Print the values of the first MyStruct
    printf("String: %s\n", struct_array[0].str);
    printf("Number: %d\n", struct_array[0].num);
    
    // Define a function that multiplies two ints
    int mult(int x, int y) {
        return x * y;
    }
    
    // Pass the function as a parameter to the print_result function
    print_result(mult);
    
    return 0;
}
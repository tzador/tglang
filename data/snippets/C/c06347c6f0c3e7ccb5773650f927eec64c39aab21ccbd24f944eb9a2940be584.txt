// This code snippet generates a struct for a person, including their name, age, and address.

typedef struct person {
   char* name; // stores the name of the person
   int age; // stores the age of the person
   char* address; // stores the address of the person
} Person;

// This function creates a new instance of the Person struct and initializes its values.
// Takes in the name, age, and address of the person, and returns a pointer to the created struct.
Person* create_person(char* name, int age, char* address) {
   Person* new_person = malloc(sizeof(Person)); // dynamically allocates memory for the struct

   new_person->name = name; // sets the name of the person
   new_person->age = age; // sets the age of the person
   new_person->address = address; // sets the address of the person

   return new_person; // returns a pointer to the newly created struct
}

// This function prints out the details of the given person.
// Takes in a pointer to the person struct.
void print_person(Person* person) {
   printf("Name: %s\n", person->name); // prints out the name
   printf("Age: %d\n", person->age); // prints out the age
   printf("Address: %s\n", person->address); // prints out the address
}

// Example usage:
int main() {
   Person* john = create_person("John Smith", 25, "123 Main Street"); // creates a new person struct with the given details
   print_person(john); // prints out the details of the person
   free(john); // frees the allocated memory for the person struct
   return 0;
}
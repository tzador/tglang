/// This function calculates the power of a number using recursion
int recursivePower(int base, int exponent) {
    // Check if exponent is 0, return 1 as any number raised to 0 is 1
    if (exponent == 0)
        return 1;

    // Check if exponent is positive, if yes then call the function recursively and multiply the result
    if (exponent > 0)
        return base * recursivePower(base, exponent - 1); // Using recursion to reduce the exponent by 1

    // If exponent is negative, call the function recursively and divide the result
    return 1 / (base * recursivePower(base, -exponent - 1)); // Converting the negative exponent to positive
}

// Example to call the recursivePower function and print the result
int main() {

    int base = 5; // Base number
    int exponent = 3; // Exponent

    int result = recursivePower(base, exponent); // Call the function to calculate base ^ exponent

    // Print the result
    printf("The result of %d raised to the power of %d is %d", base, exponent, result);

    return 0;
}
/*
   This program simulates a game of blackjack.
   It uses a deck of cards and allows the
   player to place bets and make decisions
   based on the cards dealt.
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Structure to represent a card in the deck
typedef struct{
    int value; // The numerical value of the card
    char suit; // The suit of the card (H, S, D, or C)
    char name[3]; // The name of the card (ex. J, A, 2)
} Card;

// Function to create a new deck of cards
void createDeck(Card deck[]){
    // Array of all possible suits and names
    char suits[4] = {'H', 'S', 'D', 'C'};
    char names[13][3] = {"A", "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K"};

    // Loop through all possible combinations of suit and name
    int i, j, count = 0;
    for(i = 0; i < 4; i++){
        for(j = 0; j < 13; j++){
            // Set the value and name of the card
            deck[count].value = j+1;
            sprintf(deck[count].name, "%s", names[j]);
            // Set the suit of the card
            deck[count].suit = suits[i];
            count++;
        }
    }
}

// Function to shuffle the deck of cards
void shuffleDeck(Card deck[], int size){
    // Set a random seed based on the current time
    srand(time(NULL));
    int i;

    // Loop through the entire deck and swap each card with a random card
    for(i = 0; i < size; i++){
        int randomIndex = rand() % size;
        // Swap the cards
        Card temp = deck[i];
        deck[i] = deck[randomIndex];
        deck[randomIndex] = temp;
    }
}

// Function to print a card
void printCard(Card card){
    printf("%s-%c ", card.name, card.suit);
}

// Function to calculate the total value of a hand
int getHandValue(Card hand[], int size){
    int i, total = 0;

    // Loop through each card in the hand
    for(i = 0; i < size; i++){
        // Face cards are worth 10 points
        if(hand[i].value > 10){
            total += 10;
        } else{
            // Ace can be worth 1 or 11 points
            total += hand[i].value;
            if(hand[i].value == 1){
                total += 10;
            }
        }
    }
    return total;
}

int main(){
    // Create and shuffle a deck of cards
    Card deck[52];
    createDeck(deck);
    shuffleDeck(deck, 52);

    // Initialize variables for the player and dealer hands
    Card playerHand[12], dealerHand[12];
    int playerHandSize = 0, dealerHandSize = 0;
    int playerTotal = 0, dealerTotal = 0;

    // Deal the initial two cards to the player and dealer
    playerHand[playerHandSize] = deck[0];
    dealerHand[dealerHandSize] = deck[1];
    playerHandSize++;
    dealerHandSize++;
    playerTotal += deck[0].value;
    if(dealerHand[0].value > 10){
        dealerTotal += 10;
    } else{
        dealerTotal += dealerHand[0].value;
    }
    printf("Your hand: ");
    printCard(playerHand[0]);
    printCard(playerHand[1]);
    printf("\nDealer's hand: ");
    printCard(dealerHand[0]);
    printf("\n");

    // Main game loop
    char choice;
    while(playerTotal <= 21){
        printf("Hit or Stay? (h/s): ");
        scanf(" %c", &choice);
        // If the player chooses to hit, deal another card and calculate the new total
        if(choice == 'h'){
            playerHand[playerHandSize] = deck[2 + playerHandSize];
            playerTotal += deck[2 + playerHandSize].value;
            printf("Your hand: ");
            for(int i = 0; i < playerHandSize + 1; i++){
                printCard(playerHand[i]);
            }
            printf("\n");
            playerHandSize++;
        } else{
            // If the player chooses to stay, break out of the loop
            break;
        }
    }

    // Dealer's turn to hit or stay
    while(dealerTotal <= 17){
        dealerHand[dealerHandSize] = deck[2 + playerHandSize + dealerHandSize];
        if(dealerHand[dealerHandSize].value > 10){
            dealerTotal += 10;
        } else{
            dealerTotal += dealerHand[dealerHandSize].value;
        }
        dealerHandSize++;
    }

    // Print out the final hands and total values
    printf("\nYour hand: ");
    for(int i = 0; i < playerHandSize; i++){
        printCard(playerHand[i]);
    }
    printf("\nYour total: %d", playerTotal);
    printf("\nDealer's hand: ");
    for(int i = 0; i < dealerHandSize; i++){
        printCard(dealerHand[i]);
    }
    printf("\nDealer's total: %d\n", dealerTotal);

    // Determine the winner based on the totals
    if(playerTotal > 21){
        printf("Player bust, dealer wins!");
    } else if(dealerTotal > 21){
        printf("Dealer bust, player wins!");
    } else if(playerTotal > dealerTotal){
        printf("Player wins!");
    } else if(dealerTotal > playerTotal){
        printf("Dealer wins!");
    } else{
        printf("It's a tie!");
    }

    return 0;
}
#include<stdio.h>
#include<stdlib.h>

/* Struct for a node in a binary tree */
typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;

/* Function to insert a new node in a binary tree */
void insert(Node** node, int value) {
    if (*node == NULL) {
        *node = (Node*)malloc(sizeof(Node));
        (*node)->data = value;
        (*node)->left = NULL;
        (*node)->right = NULL;
    }
    else if (value < (*node)->data) {
        insert(&(*node)->left, value);
    }
    else {
        insert(&(*node)->right, value);
    }
}

/* Function to print the values in a binary tree in pre-order traversal */
void print_preorder(Node* node) {
    if (node != NULL) {
        printf("%d ", node->data);
        print_preorder(node->left);
        print_preorder(node->right);
    }
}

/* Main function */
int main() {
    /* Create root node */
    Node* root = NULL;

    /* Insert nodes in binary tree */
    insert(&root, 50);
    insert(&root, 30);
    insert(&root, 20);
    insert(&root, 40);
    insert(&root, 70);
    insert(&root, 60);
    insert(&root, 80);

    /* Print the values in pre-order traversal */
    print_preorder(root);

    return 0;
}
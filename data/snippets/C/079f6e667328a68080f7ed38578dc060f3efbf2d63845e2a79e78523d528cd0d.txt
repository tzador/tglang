/**
* This is a program that performs sorting on an array of integers using the bubble sort algorithm.
* The bubble sort algorithm works by repeatedly swapping adjacent elements that are in the wrong order.
*/


#include <stdio.h> // Include standard input/output library

// Function to swap two elements in an array
void swap(int *xp, int *yp)
{
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}

// Function for the bubble sort algorithm
void bubbleSort(int arr[], int n)
{
    int i, j;
    for (i = 0; i < n-1; i++) // Loop through array elements
    {
        for (j = 0; j < n-i-1; j++) // Loop through unsorted elements
        {
            if (arr[j] > arr[j+1]) // If current element is greater than the next element
            {
                swap(&arr[j], &arr[j+1]); // Swap the elements
            }
        }
    }
}

int main()
{
    int arr[] = {64, 34, 25, 12, 22, 11, 90}; // Declare and initialize an array of integers
    int n = sizeof(arr)/sizeof(arr[0]); // Calculate the size of the array
    bubbleSort(arr, n); // Call the bubble sort function
    printf("Sorted array: "); // Print a message
    for (int i = 0; i < n; i++) // Loop through the sorted array
    {
        printf("%d ", arr[i]); // Print each element
    }
    return 0;
}
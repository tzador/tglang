#include <stdio.h>

// This function takes in an integer array and returns the sum of all the elements
int sumArray(int arr[], int size) {
    // Initialize a variable to store the sum
    int sum = 0;
    
    // Loop through the array and add each element to the sum
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    
    // Return the sum
    return sum;
}

// This function takes in two integer values and swaps their positions
void swap(int *num1, int *num2) {
    // Store the value of num1 in a temporary variable
    int temp = *num1;
    
    // Set the value of num1 to the value of num2
    *num1 = *num2;
    
    // Set the value of num2 to the value of num1 (stored in temp)
    *num2 = temp;
}

// This is the main function where the program starts execution
int main() {
    // Initialize an array with some values
    int arr[] = {5, 3, 8, 1, 2};
    
    // Calculate the length of the array
    int size = sizeof(arr) / sizeof(arr[0]);
    
    // Print out the original array
    printf("Original Array:\n");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    
    // Call the sumArray function and store the result in a variable
    int sum = sumArray(arr, size);
    
    // Print out the sum of the array elements
    printf("\n\nSum of the Array: %d\n", sum);
    
    // Sort the array using bubble sort
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j+1]) {
                // Swap the elements if the first element is greater than the second
                swap(&arr[j], &arr[j+1]);
            }
        }
    }
    
    // Print out the sorted array
    printf("\nSorted Array:\n");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    
    return 0;
}
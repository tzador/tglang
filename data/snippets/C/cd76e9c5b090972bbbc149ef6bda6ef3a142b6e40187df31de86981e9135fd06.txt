#include <stdio.h>
#define SIZE 10

// Function to swap two numbers
void swap(int *a, int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Function to perform quicksort
void quicksort(int arr[], int low, int high)
{
    if (low < high)
    {
        // Select pivot element
        int pivot = arr[high];

        // Initialize index for smaller element
        int i = (low - 1);

        // Traverse through all elements
        for (int j = low; j <= high - 1; j++)
        {
            // If current element is smaller than pivot
            if (arr[j] < pivot)
            {
                // Increment smaller element index
                i++;

                // Swap current element with smaller element
                swap(&arr[i], &arr[j]);
            }
        }

        // Swap pivot element with smaller element
        swap(&arr[i + 1], &arr[high]);

        // Recursively call quicksort on left and right subarrays
        quicksort(arr, low, i);
        quicksort(arr, i + 2, high);
    }
}

int main()
{
    // Initialize array of 10 elements
    int arr[SIZE] = {7, 2, 10, 4, 5, 9, 6, 3, 8, 1};

    // Print unsorted array
    printf("Unsorted array:\n");
    for (int i = 0; i < SIZE; i++)
    {
        printf("%d ", arr[i]);
    }

    // Call quicksort function
    quicksort(arr, 0, SIZE - 1);

    // Print sorted array
    printf("\nSorted array:\n");
    for (int i = 0; i < SIZE; i++)
    {
        printf("%d ", arr[i]);
    }

    return 0;
}
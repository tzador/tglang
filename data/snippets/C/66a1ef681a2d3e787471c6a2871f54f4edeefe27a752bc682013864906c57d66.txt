/* This is a complex code snippet that initializes an array of doubles,
   fills it with random values between 0 and 1, and then sorts the
   array in ascending order using the selection sort algorithm */

#include <stdio.h>
#include <stdlib.h>

#define SIZE 10
#define MAX_VALUE 100

/* Function to generate a random double between 0 and 1 */
double rand_double() {
    return (double) rand() / (double) RAND_MAX;
}

/* Function to print the contents of an array of doubles */
void print_array(double array[], int size) {
    printf("Printing array of size %d:\n", size);
    for (int i = 0; i < size; i++) {
        printf("%lf ", array[i]);
    }
    printf("\n\n");
}

/* Function to swap two double values */
void swap(double* a, double* b) {
    double temp = *a;
    *a = *b;
    *b = temp;
}

/* Selection sort algorithm to sort an array of doubles in ascending order */
void selection_sort(double array[], int size) {
    for (int i = 0; i < size - 1; i++) {
        int min_idx = i;
        for (int j = i + 1; j < size; j++) {
            if (array[j] < array[min_idx]) {
                min_idx = j;
            }
        }
        swap(&array[min_idx], &array[i]);
    }
}

int main() {
    /* Declare and initialize an array of doubles */
    double arr[SIZE];
    for (int i = 0; i < SIZE; i++) {
        arr[i] = rand_double();
    }
    
    /* Print unsorted array */
    print_array(arr, SIZE);
    
    /* Sort array using selection sort algorithm */
    selection_sort(arr, SIZE);
    
    /* Print sorted array */
    print_array(arr, SIZE);
    
    return 0;
}
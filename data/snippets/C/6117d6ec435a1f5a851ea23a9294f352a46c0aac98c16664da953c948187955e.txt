/*
    This is a long and complex code snippet written in C.
    It contains multiple functions and conditional statements.
    This code generates a random password containing
    uppercase and lowercase letters, numbers, and special characters.
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <ctype.h>

// Function to generate a random lowercase letter
char generate_lower() {
    char lower_letters[] = "abcdefghijklmnopqrstuvwxyz";
    int rand_index = rand() % 26;
    return lower_letters[rand_index];
}

// Function to generate a random uppercase letter
char generate_upper() {
    char upper_letters[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int rand_index = rand() % 26;
    return upper_letters[rand_index];
}

// Function to generate a random number
char generate_number() {
    char numbers[] = "0123456789";
    int rand_index = rand() % 10;
    return numbers[rand_index];
}

// Function to generate a random special character
char generate_special() {
    char special_chars[] = "!@#$%^&*()_+-=[]{}|:;,.?";
    int rand_index = rand() % 21;
    return special_chars[rand_index];
}

int main() {
    // Seed the random number generator
    srand(time(NULL));

    // Prompt user to enter desired password length
    int length;
    printf("Enter desired password length: ");
    scanf("%d", &length);

    // Create an array of characters to store the password
    char password[length+1];

    // Randomly generate the first character as lowercase
    password[0] = generate_lower();

    // Randomly generate the second character as uppercase
    password[1] = generate_upper();

    // Randomly generate the third character as a number
    password[2] = generate_number();

    // Randomly generate the fourth character as a special character
    password[4] = generate_special();

    // Loop through the rest of the characters in the password
    for (int i = 4; i < length; i++) {
        /* Use a random number to decide which type of character to generate
        0 = lowercase, 1 = uppercase, 2 = number, 3 = special character */
        int type = rand() % 4;

        // Generate a corresponding character based on the random number
        if (type == 0) {
            password[i] = generate_lower();
        } else if (type == 1) {
            password[i] = generate_upper();
        } else if (type == 2) {
            password[i] = generate_number();
        } else if (type == 3) {
            password[i] = generate_special();
        }
    }

    // Add a null terminator to the end of the password
    password[length] = '\0';

    // Print the generated password
    printf("Your randomly generated password is: %s", password);

    return 0;
}
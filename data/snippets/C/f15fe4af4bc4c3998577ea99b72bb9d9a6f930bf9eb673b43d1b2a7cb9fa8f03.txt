#include <stdio.h>

/**
 * This function takes in two integers and raises the first number to the power of the second number using recursion.
 * 
 * @param base the base number
 * @param exp the exponent number
 * @return the result of base raised to the power of exp
 */
int power(int base, int exp)
{
    if (exp == 0) // base case: when exponent is 0, result is 1
    {
        return 1;
    }
    else if (exp == 1) // base case: when exponent is 1, result is equal to the base
    {
        return base;
    }
    else if (exp < 0) // error case: negative exponents are not allowed
    {
        printf("Error: Exponent cannot be negative!");
        return 0;
    }
    else // recursive case: exponent is greater than 1
    {
        // recursively call the power function with a decremented exponent
        // the base is multiplied by itself each time the function is called until the exponent reaches 1
        return base * power(base, exp - 1);
    }
}

int main()
{
    int base, exp; // initialize base and exponent variables
    printf("Enter the base number: "); // prompt user to enter the base number
    scanf("%d", &base); // read and store base number from user
    printf("Enter the exponent: "); // prompt user to enter the exponent
    scanf("%d", &exp); // read and store exponent from user
    
    // call the power function and store the result in a variable
    int result = power(base, exp);
    
     // print the result to the console
     printf("%d to the power of %d is equal to %d", base, exp, result);
    
    return 0;
}
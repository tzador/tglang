// This snippet creates a linked list and adds elements to it
#include <stdio.h>

// Define a struct for linked list nodes
struct Node {
    int data;
    struct Node* next;
};

int main() {
    // Initialize head and tail of the linked list
    struct Node* head = NULL;
    struct Node* tail = NULL;

    // Create nodes for the list and assign values to data
    struct Node* node1 = (struct Node*)malloc(sizeof(struct Node));
    struct Node* node2 = (struct Node*)malloc(sizeof(struct Node));
    struct Node* node3 = (struct Node*)malloc(sizeof(struct Node));
    node1->data = 1;
    node2->data = 2;
    node3->data = 3;

    // Connect nodes to form the linked list
    head = node1; // node1 is the first node in the list, so it is the head
    node1->next = node2; // node2 is the next node after node1
    node2->next = node3; // node3 is the next node after node2
    tail = node3; // node3 is the last node in the list, so it is the tail

    // Print the elements of the linked list
    printf("The elements of the linked list are: ");
    struct Node* curr = head; // start from the head of the list
    while (curr != NULL) { // loop until we reach the end of the list
        printf("%d ", curr->data); // print the data at the current node
        curr = curr->next; // move to the next node
    }
    printf("\n");

    // Add a new node to the end of the list
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = 4;
    newNode->next = NULL;

    // Update the tail pointer to point to the new node
    tail->next = newNode; // the current last node now points to the new node
    tail = newNode; // the new node is now the last node in the list

    // Print the updated elements of the linked list
    printf("The updated elements of the linked list are: ");
    curr = head; // start from the head of the list
    while (curr != NULL) { // loop until we reach the end of the list
        printf("%d ", curr->data); // print the data at the current node
        curr = curr->next; // move to the next node
    }
    printf("\n");

    return 0;
}
#include <stdio.h>

//Function to perform binary search
int binarySearch(int arr[], int low, int high, int key) 
{ 
    // Calculate mid value
	int mid = (low + high) / 2; 
  
    // Base case
	if (low > high)
    {
        return -1; // Element not found
    }

    // Check if key is present at mid
	if (arr[mid] == key)
    {
        return mid; // Element found
    }
    // If key is smaller than mid, it is present in left subarray
    else if (arr[mid] > key)
    {
        return binarySearch(arr, low, mid - 1, key); // Recursive call on left subarray
    }
    // If key is greater than mid, it is present in right subarray
    else
    {
        return binarySearch(arr, mid + 1, high, key); // Recursive call on right subarray
    }
} 

//Driver code
int main(void) 
{ 
    // Declare array and initialize elements
	int arr[] = {2, 5, 8, 12, 15, 19, 23, 27, 30}; 
    
    // Calculate size of array
	int size = sizeof(arr) / sizeof(arr[0]); 

    // Key to search for
	int key = 23; 

    // Call binarySearch function and store result in variable
	int result = binarySearch(arr, 0, size - 1, key); 

    // Check if element is found or not and print result
	if (result == -1) 
    {
        printf("Element not found\n"); 
    }
	else
	{
        printf("Element found at index %d\n", result); 
    }

	return 0; 
}
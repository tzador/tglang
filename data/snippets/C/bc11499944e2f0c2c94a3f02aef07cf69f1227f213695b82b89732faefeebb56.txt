#include <stdio.h>
#include <stdlib.h>

struct Node {
  int data;
  struct Node* next;
} Node;

void insertNode(struct Node **head, int newData) {
  struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
  newNode->data = newData;
  newNode->next = *head;
  *head = newNode;
}

void deleteNode(struct Node **head, int key) {
  struct Node* temp = *head, *prev;
  if (temp != NULL && temp->data == key) 
  { 
    *head = temp->next;   
    free(temp);              
    return; 
  } 
  while (temp != NULL && temp->data != key) 
  { 
    prev = temp; 
    temp = temp->next; 
  } 
  if (temp == NULL) return; 
  
  prev->next = temp->next; 
  free(temp);  
}

void printLinkedList(struct Node* node) {
  while (node != NULL) {
    printf("%d ", node->data);
    node = node->next;
  }
  printf("\n");
}

int main() {
  struct Node* head = NULL;
  insertNode(&head, 5);
  insertNode(&head, 7);
  insertNode(&head, 3);
  insertNode(&head, 1);
  printf("Original Linked List: \n");
  printLinkedList(head);
  deleteNode(&head, 3);
  printf("Updated Linked List: \n");
  printLinkedList(head);
  return 0;
}
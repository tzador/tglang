// This code snippet implements a binary search algorithm
// that is used to search for an element in a sorted array
// It takes in the array, the element to be searched for,
// and the starting and ending indices of the array as parameters

int binarySearch(int arr[], int element, int start, int end) {
    if (end >= start) {
        int mid = start + (end - start) / 2;
        // If the middle element is the target element,
        // return its index
        if (arr[mid] == element) {
            return mid;
        }
        // If the middle element is greater than the target element,
        // search the left half of the array
        if (arr[mid] > element) {
            return binarySearch(arr, element, start, mid - 1);
        }
        // If the middle element is less than the target element,
        // search the right half of the array
        return binarySearch(arr, element, mid + 1, end);
    }
    // If the target element is not found, return -1
    return -1;
}

// Example usage:
int main() {
    // Initialize a sorted array
    int arr[] = {2, 5, 7, 10, 13, 15, 19};

    // Search for the target element 10
    int index = binarySearch(arr, 10, 0, 6);

    // Print the index of the element if it is found
    // or print "Element not found" if it is not found
    if (index != -1) {
        printf("Element found at index %d\n", index);
    } else {
        printf("Element not found\n");
    }
    return 0;
}
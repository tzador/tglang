/* This program calculates the value of pi using the Monte Carlo method */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MAX_POINTS 10000000 // maximum number of points

double calculatePi(int n) {
    // initialize variables for inside and total points
    int inside_points = 0;
    int total_points = 0;

    // loop to generate random points and count inside points
    for (int i = 0; i < n; i++) {
        // generate random x and y coordinates between -1 and 1
        double x = (double)rand() / (double)RAND_MAX * 2.0 - 1.0;
        double y = (double)rand() / (double)RAND_MAX * 2.0 - 1.0;

        // calculate distance from origin
        double distance = sqrt(x * x + y * y);

        // check if point is inside unit circle
        if (distance <= 1) {
            inside_points++;
        }

        total_points++;
    }

    // calculate pi using formula: pi = 4 * (inside_points / total_points)
    double pi = 4.0 * ((double)inside_points / (double)total_points);

    return pi;
}

int main(void) {
    // set seed for random number generation
    srand(1);

    // get user input for number of points
    int n = MAX_POINTS;
    printf("Number of points: %d\n", n);

    // calculate pi using Monte Carlo method
    double pi = calculatePi(n);

    // print result
    printf("Value of pi: %f\n", pi);

    return 0;
}
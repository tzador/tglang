/**
 * This program takes in two matrices and
 * multiplies them to produce a resulting matrix.
 * The matrices must have compatible dimensions.
 */

#include <stdio.h>

// function to read in a matrix from user input
void readMatrix(int rows, int cols, double matrix[][cols]) {

    printf("Enter the values for the matrix:\n");

    // loop through each row and column, and get user input for each element
    for (int i = 0; i < rows; i++){
        for (int j = 0; j < cols; j++){
            scanf("%lf", &matrix[i][j]);
        }
    }
}

// function to print out a matrix
void printMatrix(int rows, int cols, double matrix[][cols]) {

    // loop through each row and column, and print out each element
    for (int i = 0; i < rows; i++){
        for (int j = 0; j < cols; j++){
            printf("%lf ", matrix[i][j]);
        }
        printf("\n");
    }
}

// function to multiply two matrices
void multiplyMatrices(int rows_a, int cols_a, int rows_b, int cols_b, double matrix_a[][cols_a], double matrix_b[][cols_b]) {

    // check if the matrices have compatible dimensions
    if (cols_a != rows_b) {
        printf("Matrices cannot be multiplied.\n");
        return;
    }

    // create a resulting matrix with dimensions of the two matrices to be multiplied
    double result[rows_a][cols_b];

    // loop through each row in matrix a
    for (int i = 0; i < rows_a; i++) {
        
        // loop through each column in matrix b
        for (int j = 0; j < cols_b; j++) {
            
            // initialize the element in the resulting matrix to 0
            result[i][j] = 0;

            // loop through the elements in the current row of matrix a and column of matrix b
            for (int k = 0; k < cols_a; k++) {

                // multiply the two elements and add it to the corresponding element in the resulting matrix
                result[i][j] += matrix_a[i][k] * matrix_b[k][j];
            }
        }
    }

    // print out the resulting matrix
    printf("Result:\n");
    printMatrix(rows_a, cols_b, result);
}

int main() {

    // initialize the dimensions of the two matrices
    int rows_a, cols_a, rows_b, cols_b;

    // get user input for the dimensions
    printf("Enter number of rows and columns for matrix A:\n");
    scanf("%d %d", &rows_a, &cols_a);
    printf("Enter number of rows and columns for matrix B:\n");
    scanf("%d %d", &rows_b, &cols_b);

    // check if the dimensions are compatible for multiplication
    if (cols_a != rows_b) {
        printf("Matrices cannot be multiplied.\n");
        return 0;
    }

    // create two matrices with the specified dimensions
    double matrix_a[rows_a][cols_a];
    double matrix_b[rows_b][cols_b];

    // read in user input for both matrices
    printf("For matrix A:\n");
    readMatrix(rows_a, cols_a, matrix_a);
    printf("For matrix B:\n");
    readMatrix(rows_b, cols_b, matrix_b);

    // perform matrix multiplication and print out the resulting matrix
    multiplyMatrices(rows_a, cols_a, rows_b, cols_b, matrix_a, matrix_b);

    return 0;
}
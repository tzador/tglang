#include <stdio.h>

//This is a function pointer that takes in two integers and returns an integer
typedef int (*mathFunc)(int, int);

//This is a struct that contains two integers
typedef struct{
  int num1;
  int num2;
} Numbers;

//This function takes in a math function, two numbers and calls the math function on the numbers
int performMath(mathFunc func, Numbers nums){
  return func(nums.num1, nums.num2);
}

//This function adds two numbers
int add(int num1, int num2){
  return num1 + num2;
}

//This function subtracts two numbers
int subtract(int num1, int num2){
  return num1 - num2;
}

//This function multiplies two numbers
int multiply(int num1, int num2){
  return num1 * num2;
}

//This function divides two numbers
int divide(int num1, int num2){
  //Checks if the second number is 0 to prevent division by 0
  if(num2 == 0){
    printf("Cannot divide by 0");
    return 0;
  }
  return num1 / num2;
}

int main(){

  //Creates an instance of the Numbers struct
  Numbers nums;

  //Sets the values for the two numbers
  nums.num1 = 10;
  nums.num2 = 2;

  //Calls performMath function with add function and nums struct as arguments
  int result1 = performMath(add, nums);

  //Calls performMath function with subtract function and nums struct as arguments
  int result2 = performMath(subtract, nums);

  //Calls performMath function with multiply function and nums struct as arguments
  int result3 = performMath(multiply, nums);

  //Calls performMath function with divide function and nums struct as arguments
  int result4 = performMath(divide, nums);

  //Prints the results to the console
  printf("Result of add function: %d\n", result1);
  printf("Result of subtract function: %d\n", result2);
  printf("Result of multiply function: %d\n", result3);
  printf("Result of divide function: %d", result4);

  return 0;
}
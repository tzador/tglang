/*!
 * @file example.c
 * @brief This is an example file in C
 * @version 1.0
 * @date 2021-12-31
 *
 * This is a long and complex code snippet written in the programming language C.
 * It includes multiple functions and data structures to demonstrate the use of the language.
 * 
 * To use this code, compile it with a C compiler and run the resulting executable.
 * 
 */

#include <stdio.h>
#include <stdlib.h>

// Definition of a struct for a person with name and age fields
typedef struct {
    char name[20];
    int age;
} Person;

// Function to create a Person struct with given name and age
Person* create_person(char* name, int age) {
    // Dynamically allocate memory for the Person struct
    Person* new_person = (Person*)malloc(sizeof(Person));

    // Set the name and age fields of the struct
    strcpy(new_person->name, name);
    new_person->age = age;

    // Return the created struct
    return new_person;
}

// Function to print the name and age of a Person struct
void print_person(Person* person) {
    printf("Name: %s\n", person->name);
    printf("Age: %d\n", person->age);
}

// Main function
int main() {
    // Declare and initialize an array of Person structs
    Person people[3] = {
        {"John", 22},
        {"Sarah", 18},
        {"Michael", 25}
    };

    // Loop through the array and print each person's information
    for (int i = 0; i < 3; i++) {
        print_person(&people[i]);
    }

    // Create a new Person struct using the create_person() function
    Person* new_person = create_person("Emily", 30);

    // Print the new person's information
    print_person(new_person);

    // Free the dynamically allocated memory
    free(new_person);

    return 0;
}
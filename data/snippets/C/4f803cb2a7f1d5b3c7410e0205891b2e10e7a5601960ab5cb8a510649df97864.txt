/* This code snippet generates a frequency modulation signal using a carrier and a modulating signal */
 
#include <stdio.h> // Includes standard input/output library
#include <math.h> // Includes math library
 
/* Function to generate a sinusoidal carrier signal */
double carrier(double freq, double amp, double time) // Function takes in frequency, amplitude and time as parameters
{
    return sin(2 * M_PI * freq * time) * amp; // Returns the carrier signal value at given time
}
 
/* Function to generate a sinusoidal modulating signal */
double modulator(double freq, double amp, double time) // Function takes in frequency, amplitude and time as parameters
{
    return sin(2 * M_PI * freq * time) * amp; // Returns the modulating signal value at given time
}
 
/* Main function */
int main()
{
    int sampling_rate = 44100; // Sampling rate of audio signal
    double time = 0; // Time variable to keep track of signal
    double duration = 5; // Duration of the generated signal in seconds
 
    /* Loop to generate and print frequency modulation signal */
    for (int i = 0; i < duration * sampling_rate; i++) 
    {
        double carrier_freq = 1000; // Frequency of the carrier signal in Hz
        double carrier_amp = 1; // Amplitude of the carrier signal
        double modulator_freq = 10; // Frequency of the modulating signal in Hz
        double modulator_amp = 1; // Amplitude of the modulating signal
 
        double modulated_val = carrier(carrier_freq, carrier_amp, time) * modulator(modulator_freq, modulator_amp, time); // Calculates modulated signal
 
        printf("%.4f\n", modulated_val); // Prints the modulated signal with 4 decimal places
        time += 1.0 / sampling_rate; // Updates time for next iteration
    }
    return 0;
}
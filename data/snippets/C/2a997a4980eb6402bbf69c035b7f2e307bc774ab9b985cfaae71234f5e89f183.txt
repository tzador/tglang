// This code snippet is a binary search implementation
// It searches for a given key in a sorted array of integers
// Function to perform binary search
int binarySearch(int arr[], int key, int low, int high)             
{                      
    // Base case, return -1 if key not found           
    if (low > high) return -1;           
    // Calculate middle index            
    int mid = (low + high) / 2;           
    // If key is found, return the index           
    if (arr[mid] == key) return mid;           
    // If key is smaller than middle element, search in the left half           
    if (key < arr[mid]) return binarySearch(arr, key, low, mid-1);           
    // If key is larger than middle element, search in the right half           
    return binarySearch(arr, key, mid+1, high);      
}      
// Example usage of binary search function       
int main()      
{            
    // Create a sorted array of integers           
    int arr[] = {1, 3, 5, 7, 9, 11, 13};           
    // Key to search for           
    int key = 7;           
    // Calculate size of array           
    int size = sizeof(arr) / sizeof(arr[0]);           
    // Call binarySearch function and store result           
    int result = binarySearch(arr, key, 0, size-1);           
    // Print result           
    printf("The key is found at index: %d", result);      
}
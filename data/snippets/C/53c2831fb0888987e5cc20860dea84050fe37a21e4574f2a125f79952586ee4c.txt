#include <stdio.h>
#define MAX_SIZE 100

// Function to find the factorial of a given number
int factorial(int num){
    int fact = 1;
    
    for(int i = 1; i <= num; i++){
        fact *= i;
    }
    
    return fact;
}

int main(){
    // Initialize array of size MAX_SIZE
    int arr[MAX_SIZE];
    
    // Prompt user for input
    printf("Enter the size of the array: ");
    scanf("%d", &size);
    
    // Populate array with user input
    for(int i = 0; i < size; i++){
        printf("Enter element %d: ", i + 1);
        scanf("%d", &arr[i]);
    }
    
    // Print original array
    printf("Original array: ");
    for(int i = 0; i < size; i++){
        printf("%d ", arr[i]);
    }
    
    // Create a copy of the original array
    int copy_arr[MAX_SIZE];
    for(int i = 0; i < size; i++){
        copy_arr[i] = arr[i];
    }
    
    // Sort the copy_arr in ascending order
    for(int i = 0; i < size - 1; i++){
        for(int j = 0; j < size - i - 1; j++){
            if(copy_arr[j] > copy_arr[j + 1]){
                // Swap elements
                int temp = copy_arr[j];
                copy_arr[j] = copy_arr[j + 1];
                copy_arr[j + 1] = temp;
            }
        }
    }
    
    // Print sorted array
    printf("\nSorted array in ascending order: ");
    for(int i = 0; i < size; i++){
        printf("%d ", copy_arr[i]);
    }
    
    // Calculate the sum and product of the sorted array
    int sum = 0, product = 1;
    for(int i = 0; i < size; i++){
        sum += copy_arr[i];
        product *= copy_arr[i];
    }
    
    // Print sum and product of the sorted array
    printf("\nSum of the array: %d", sum);
    printf("\nProduct of the array: %d", product);
    
    // Calculate the factorial of the original array
    int fact_arr[size];
    for(int i = 0; i < size; i++){
        fact_arr[i] = factorial(arr[i]);
    }
    
    // Print the factorial of the original array
    printf("\nFactorial of the original array: ");
    for(int i = 0; i < size; i++){
        printf("%d ", fact_arr[i]);
    }
    
    return 0;
}
/* This function merges two sorted arrays into one sorted array */
int* merge(int a[], int b[], int n, int m)
{
    int merged[n + m]; // create a new array to hold the merged result
    int i = 0, j = 0, k = 0; // initialize variables for array a, array b, and merged array

    // loop through both arrays, comparing and merging elements into the merged array
    while (i < n && j < m)
    {
        if (a[i] <= b[j])
        {
            merged[k] = a[i]; // if element in array a is smaller or equal, add it to merged array
            i++;
        }
        else
        {
            merged[k] = b[j]; // if element in array b is smaller, add it to merged array
            j++;
        }

        k++; // increment index of merged array
    }

    // add remaining elements from array a if any
    while (i < n)
    {
        merged[k] = a[i];
        i++;
        k++;
    }

    // add remaining elements from array b if any
    while (j < m)
    {
        merged[k] = b[j];
        j++;
        k++;
    }

    // copy merged array back into original arrays
    for (int x = 0; x < n + m; x++)
    {
        a[x] = merged[x];
    }

    // return pointer to sorted and merged array
    return a;
}

// Example usage:
// int a[] = {2, 5, 7, 9};
// int b[] = {1, 3, 4, 6, 8};
// int* result = merge(a, b, 4, 5);
// Expected output: {1, 2, 3, 4, 5, 6, 7, 8, 9}
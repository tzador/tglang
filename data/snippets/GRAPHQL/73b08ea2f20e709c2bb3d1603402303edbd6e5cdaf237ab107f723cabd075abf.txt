// GraphQL schema for a Book
// Define the book object with fields for title, author, and publisher
type Book {
  title: String!
  author: String!
  publisher: String!
}

// GraphQL query to retrieve all books
query {
  books {
    title
    author
    publisher
  }
}

// GraphQL mutation to add a new book
mutation {
  addBook(title: String!, author: String!, publisher: String!){
    title
    author
    publisher
  }
}

// GraphQL subscription to listen for changes to book data
subscription {
  bookChanged {
    title
    author
    publisher
  }
}

// Sample data for books
{
  "books": [
    {
      "title": "Pride and Prejudice",
      "author": "Jane Austen",
      "publisher": "Penguin Classics"
    },
    {
      "title": "The Great Gatsby",
      "author": "F. Scott Fitzgerald",
      "publisher": "Scribner"
    },
    {
      "title": "To Kill a Mockingbird",
      "author": "Harper Lee",
      "publisher": "Grand Central Publishing"
    }
  ]
}

// GraphQL query with arguments to retrieve specific book
query {
  book(title: "Pride and Prejudice") {
    title
    author
    publisher
  }
}

// GraphQL query with pagination to retrieve books with limit and offset
query {
  books(limit: 10, offset: 20) {
    title
    author
    publisher
  }
}
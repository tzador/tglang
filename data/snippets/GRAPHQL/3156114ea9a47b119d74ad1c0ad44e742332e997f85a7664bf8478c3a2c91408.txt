type Person {
  # The unique ID of the person
  id: ID!
  # The person's name
  name: String
  # The person's age
  age: Int
  # The person's email address
  email: String
}

type Query {
  # Retrieve a person by their ID
  person(id: ID!): Person
  # Retrieve a list of all people
  people: [Person]
}

type Mutation {
  # Create a new person
  addPerson(name: String!, age: Int!, email: String!): Person
  # Update an existing person's information
  updatePerson(id: ID!, name: String, age: Int, email: String): Person
  # Delete a person
  deletePerson(id: ID!): Person
}
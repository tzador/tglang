const { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLInt } = require('graphql');
 
// Define user type
const UserType = new GraphQLObjectType({
  name: 'User',
  description: 'A user in the system',
  fields: () => ({
    id: { type: GraphQLInt },
    firstName: { type: GraphQLString },
    lastName: { type: GraphQLString },
    email: { type: GraphQLString }
  })
});
 
// Define query type
const QueryType = new GraphQLObjectType({
  name: 'Query',
  description: 'The root query type',
  fields: () => ({
    user: {
      type: UserType,
      description: 'Get a user by their ID',
      args: {
        id: { type: GraphQLInt }
      },
      resolve: (parent, args) => {
        // Code to fetch user from database using args.id
      }
    }
  })
});
 
// Define mutation type
const MutationType = new GraphQLObjectType({
  name: 'Mutation',
  description: 'The root mutation type',
  fields: () => ({
    updateUserEmail: {
      type: UserType,
      description: 'Update a user\'s email',
      args: {
        id: { type: GraphQLInt },
        newEmail: { type: GraphQLString }
      },
      resolve: (parent, args) => {
        // Code to update user's email in database using args.id and args.newEmail
      }
    }
  })
});
 
// Create schema
const schema = new GraphQLSchema({
  query: QueryType,
  mutation: MutationType
});
 
// Export schema
module.exports = schema;
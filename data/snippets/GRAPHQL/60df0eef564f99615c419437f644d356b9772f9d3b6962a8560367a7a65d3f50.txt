type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
}

"""
Queries
"""

# Returns a single user by id
type Query {
  user(id: ID!): User
}

# Returns all posts by a user
type Query {
  postsByUser(userId: ID!): [Post!]!
}

# Returns all comments on a post
type Query {
  commentsOnPost(postId: ID!): [Comment!]!
}

"""
Mutations
"""

# Creates a new user
type Mutation {
  createUser(name: String!, email: String!): User!
}

# Creates a new post for a user
type Mutation {
  createPost(title: String!, body: String!, userId: ID!): Post!
}

# Creates a new comment on a post
type Mutation {
  createComment(text: String!, postId: ID!): Comment!
}

# Deletes a user and all associated posts and comments
type Mutation {
  deleteUser(id: ID!): User!
}
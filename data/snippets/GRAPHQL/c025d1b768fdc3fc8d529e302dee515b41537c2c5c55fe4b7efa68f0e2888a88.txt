type Query {
  // Query to get all users
  users: [User!]!
  // Query to get a specific user by ID
  user(id: ID!): User!
}

type Mutation {
  // Mutation to create a new user
  createUser(name: String!, email: String!): User!
  // Mutation to update an existing user
  updateUser(id: ID!, name: String, email: String): User!
  // Mutation to delete a user by ID
  deleteUser(id: ID!): Boolean!
}

type User {
  // User ID
  id: ID!
  // User's full name
  name: String!
  // User's email address
  email: String!
  // User's password (hashed for security)
  password: String!
  // User's profile picture
  profilePic: String
  // List of posts created by the user
  posts: [Post!]!
}

type Post {
  // Post ID
  id: ID!
  // Title of the post
  title: String!
  // Content of the post
  content: String!
  // Date and time the post was created
  createdAt: DateTime!
  // Date and time the post was last updated
  updatedAt: DateTime!
  // User who created the post
  author: User!
  // List of comments on the post
  comments: [Comment!]!
}

type Comment {
  // Comment ID
  id: ID!
  // Content of the comment
  content: String!
  // Date and time the comment was created
  createdAt: DateTime!
  // Date and time the comment was last updated
  updatedAt: DateTime!
  // User who made the comment
  author: User!
  // Post the comment is on
  post: Post!
}
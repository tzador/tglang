const { graphql } = require('graphql');
const { GraphQLObjectType, GraphQLString, GraphQLInt, GraphQLSchema, GraphQLList } = require('graphql');

const PostType = new GraphQLObjectType({
    name: 'Post',
    fields: {
        id: { type: GraphQLString },
        title: { type: GraphQLString },
        body: { type: GraphQLString }
    }
});

const RootQuery = new GraphQLObjectType({
    name: 'RootQueryType',
    fields: {
        post: {
            type: PostType,
            args: {
                id: { type: GraphQLString }
            },
            resolve(parent, args) {
                // code to retrieve post from database
                return db.getPostById(args.id);
            }
        },
        posts: {
            type: new GraphQLList(PostType),
            resolve() {
                // code to retrieve all posts from database
                return db.getAllPosts();
            }
        }
    }
});

const Mutation = new GraphQLObjectType({
    name: 'Mutation',
    fields: {
        addPost: {
            type: PostType,
            args: {
                title: { type: GraphQLString },
                body: { type: GraphQLString }
            },
            resolve(parent, args) {
                // code to add a new post to database
                return db.addPost(args.title, args.body);
            }
        },
        updatePost: {
            type: PostType,
            args: {
                id: { type: GraphQLString },
                title: { type: GraphQLString },
                body: { type: GraphQLString }
            },
            resolve(parent, args) {
                // code to update an existing post in database
                return db.updatePost(args.id, args.title, args.body);
            }
        },
        deletePost: {
            type: GraphQLString,
            args: {
                id: { type: GraphQLString }
            },
            resolve(parent, args) {
                // code to delete a post from database
                return db.deletePost(args.id);
            }
        }
    }
});

const schema = new GraphQLSchema({
    query: RootQuery,
    mutation: Mutation
});

graphql(schema, `
    query {
        post(id: "1") {
            title
            body
        }
    }
`).then((result) => {
    console.log(result);
});

graphql(schema, `
    mutation {
        addPost(title: "New Post", body: "This is a new post.") {
            title
            body
        }
    }
`).then((result) => {
    console.log(result);
});

graphql(schema, `
    mutation {
        updatePost(id: "1", title: "Updated Post", body: "This is an updated post.") {
            title
            body
        }
    }
`).then((result) => {
    console.log(result);
});

graphql(schema, `
    mutation {
        deletePost(id: "1")
    }
`).then((result => {
    console.log(result);
}));
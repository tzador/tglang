//Defining a GraphQL Object Type for a person
type Person {
  id: ID! #ID field is required and acts as the unique identifier
  name: String #Name of the person, returns a string
  age: Int #Age of the person, returns an integer
  address: String #Address of the person, returns a string
  occupation: String #Occupation of the person, returns a string
}

//Defining a GraphQL Input Object Type for updating a person's information
input UpdatePersonInput {
  id: ID! #ID field is required and acts as the unique identifier
  name: String #Optional name field for updating the person's name
  age: Int #Optional age field for updating the person's age
  address: String #Optional address field for updating the person's address
  occupation: String #Optional occupation field for updating the person's occupation
}

//Defining a GraphQL type for queries
type Query {
  getPerson(id:ID!): Person #Returns a person with a specific ID
  listPeople: [Person] #Returns a list of all people
}

//Defining a GraphQL type for mutations
type Mutation {
  updatePerson(input: UpdatePersonInput!): Person #Updates a person's information and returns the updated person
}

//Defining a GraphQL schema with the defined types and queries/mutations
schema {
  query: Query
  mutation: Mutation
}
const { ApolloServer, gql } = require('apollo-server'); // importing necessary packages

// defining GraphQL schema
const typeDefs = gql`
  type Author {
    id: ID!
    name: String!
    books: [Book!]!
  }

  type Book {
    id: ID!
    title: String!
    author: Author!
  }

  type Query {
    authors: [Author!]!
    books: [Book!]!
  }`;

// defining resolvers to handle queries
const resolvers = {
  Query: {
    authors: () => [{ id: 1, name: 'Jane Austen', books: [1, 2] }],
    books: () => [{ id: 1, title: 'Pride and Prejudice', author: 1 }, { id: 2, title: 'Sense and Sensibility', author: 1 }]
  },
  Author: {
    books: () => [{ id: 1, title: 'Pride and Prejudice', author: 1 }, { id: 2, title: 'Sense and Sensibility', author: 1 }]
  },
  Book: {
    author: () => ({ id: 1, name: 'Jane Austen', books: [1, 2] })
  }
};

// creating Apollo Server instance
const server = new ApolloServer({ typeDefs, resolvers });

// starting server
server.listen().then(({ url }) => {
  console.log(`ğŸš€ Server ready at ${url}`);
});
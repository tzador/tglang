const { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLList, GraphQLInt } = require("graphql"); // Import necessary modules

// Define a GraphQL object type
const PersonType = new GraphQLObjectType({
  name: "Person",
  description: "A person in the system",
  fields: () => ({
    id: { type: GraphQLInt, description: "The unique identifier of the person" },
    name: { type: GraphQLString, description: "The name of the person" },
    age: { type: GraphQLInt, description: "The age of the person" },
  })
});

// Define a GraphQL schema
const schema = new GraphQLSchema({
  query: new GraphQLObjectType({
    name: "Query",
    description: "The root query for retrieving data",
    fields: () => ({
      person: {
        type: PersonType,
        description: "Get information about a specific person",
        args: {
          id: { type: GraphQLInt, description: "The unique identifier of the person" }
        },
        resolve: (parent, args) => {
          // Code to retrieve person data from database
        }
      },
      people: {
        type: new GraphQLList(PersonType),
        description: "Get a list of all people in the system",
        resolve: (parent, args) => {
          // Code to retrieve list of people from database
        }
      },
    })
  })
});

// Example query
const query = `{
  person(id: 1) {
    name
    age
  }
}`;

// Run GraphQL query on schema
graphql(schema, query).then(result => {
  console.log(result); // Output: { data: { person: { name: 'John', age: 25 } } }
});
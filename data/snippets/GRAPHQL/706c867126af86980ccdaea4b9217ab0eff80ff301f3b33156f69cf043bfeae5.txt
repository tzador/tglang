# Define a type for a user in the GraphQL schema
type User {
  id: ID!
  name: String
  email: String!
  password: String!
  posts: [Post!]!
}

# Define a type for a post in the GraphQL schema
type Post {
  id: ID!
  title: String!
  content: String
  author: User!
  comments: [Comment!]!
}

# Define a type for a comment in the GraphQL schema
type Comment {
  id: ID!
  content: String!
  author: User!
  post: Post!
}

# Define a query to get a single user by ID
query getUser($id: ID!) {
  user(id: $id) {
    id
    name
    email
    posts {
      id
      title
      content
    }
  }
}

# Define a mutation to add a new user to the database
mutation addUser($name: String!, $email: String!, $password: String!) {
  addUser(name: $name, email: $email, password: $password) {
    id
    name
    email
  }
}

# Define a subscription to get real-time updates on new posts
subscription newPost {
  newPost {
    id
    title
    content
    author {
      id
      name
    }
  }
}

# Define a subscription to get real-time updates on new comments on a specific post
subscription newComment($postId: ID!) {
  newComment(postId: $postId) {
    id
    content
    author {
      id
      name
    }
    post {
      id
      title
      content
    }
  }
}
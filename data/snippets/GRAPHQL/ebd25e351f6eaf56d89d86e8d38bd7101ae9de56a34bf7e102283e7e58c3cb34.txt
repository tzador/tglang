type User {
    id: ID!
    name: String!
    age: Int
    email: String
    posts: [Post!]!
}

type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
}

input UserInput {
    name: String!
    age: Int
    email: String
    posts: [PostInput!]
}

input PostInput {
    title: String!
    body: String!
    authorId: ID!
}

type Query {
    users: [User!]!           # returns a list of users
    user(id: ID!): User       # returns a specific user based on ID
    posts: [Post!]!           # returns a list of posts
    post(id: ID!): Post       # returns a specific post based on ID
}

type Mutation {
    addUser(input: UserInput!): User            # creates a new user with specified input fields
    updateUser(id: ID!, input: UserInput!): User # updates an existing user with specified input fields
    deleteUser(id: ID!): User                    # deletes the user with specified ID
    addPost(input: PostInput!): Post             # creates a new post with specified input fields
    updatePost(id: ID!, input: PostInput!): Post  # updates an existing post with specified input fields
    deletePost(id: ID!): Post                     # deletes the post with specified ID
}
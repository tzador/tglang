# This is a GraphQL Schema for a social media platform

type Query { # Defines the available queries
  user: [User!]! # Returns an array of User objects
  postsByUser(userId: ID!): [Post!]! # Returns an array of Post objects by specific user ID
}

type Mutation { # Defines the available mutations
  createUser(userInput: UserInput!): User! # Creates a new User object based on input
  updateUser(userId: ID!, userInput: UserInput!): User! # Updates an existing User object with new input
  addPost(postInput: PostInput!): Post! # Creates a new Post object based on input
}

type User { # User object type
  id: ID! # Unique identifier
  firstName: String! # User's first name
  lastName: String! # User's last name
  username: String! # User's unique username
  password: String! # User's password
  email: String! # User's email address
  posts: [Post!]! # Array of Post objects associated with user
}

type Post { # Post object type
  id: ID! # Unique identifier
  title: String! # Post title
  content: String! # Post content
  author: User! # User object associated with the post
  likes: Int! # Number of likes for the post
  comments: [Comment!]! # Array of Comment objects associated with the post
}

type Comment { # Comment object type
  id: ID! # Unique identifier
  content: String! # Comment content
  author: User! # User object associated with the comment
  likes: Int! # Number of likes for the comment
  post: Post! # Post object associated with the comment
}

input UserInput { # Input for creating/updating User objects
  firstName: String! # User's first name
  lastName: String! # User's last name
  username: String! # User's unique username
  password: String! # User's password
  email: String! # User's email address
}

input PostInput { # Input for creating Post objects
  title: String! # Post title
  content: String! # Post content
  authorId: ID! # User ID of the author
}

schema { # Defines the overall schema
  query: Query # Specifies which queries are available
  mutation: Mutation # Specifies which mutations are available
}
type Query {
  users: [User!]!                     # This defines a "users" query to fetch an array of User objects.
}

type User {
  id: ID!                             # This defines the unique ID of a User.
  name: String!                       # This defines the name field of a User.
  email: String!                      # This defines the email field of a User.
  age: Int!                           # This defines the age field of a User as an integer.
}

type Mutation {
  createUser(name: String!, email: String!, age: Int!): User!   # This defines the "createUser" mutation, which takes in arguments for name, email, and age and returns a User object.
  updateUser(id: ID!, name: String, email: String, age: Int): User!   # This defines the "updateUser" mutation, which takes in arguments for id, name, email, and age and returns a User object.
  deleteUser(id: ID!): User!       # This defines the "deleteUser" mutation, which takes in an id argument and returns a User object.
}
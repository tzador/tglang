# Define the schema for a user
type User {
  id: ID!
  name: String
  age: Int
  email: String!
  posts: [Post]
}

# Define the schema for a post
type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
}

# Define the Query type, which is the root of all queries
type Query {
  # Returns a single user based on their id
  user(id: ID!): User
  # Returns all posts written by a specific user
  postsByUser(userId: ID!): [Post]
}

# Define the Mutation type, which is the root of all mutations
type Mutation {
  # Creates a new user
  createUser(name: String, age: Int, email: String!): User
  # Creates a new post
  createPost(title: String!, content: String!, authorId: ID!): Post
}

# Define the Subscription type, which allows for real-time updates
type Subscription {
  # Returns a new post whenever it is created
  newPost: Post
}

# Example query to retrieve a user's posts
query {
  user(id: "123") {
    name
    posts {
      title
      content
    }
  }
}

# Example mutation to create a new user
mutation {
  createUser(name: "John",
    age: 25,
    email: "john@example.com") {
      id
      name
      email
      age
    }
}

# Example subscription to receive real-time updates on new posts
subscription {
  newPost {
    id
    title
    content
    author {
      name
      email
    }
  }
}
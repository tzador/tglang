# Type definition for a user
type User {
  id: ID!
  name: String!
  username: String!
  email: String!
  age: Int
  address: Address!
  friends: [User!]!
}

# Type definition for an address
type Address {
  street: String!
  city: String!
  state: String!
  country: String!
}

# Query to get a user by ID
query getUser($id: ID!) {
  user(id: $id) {
    id
    name
    email
    address {
      street
      city
      state
      country
    }
  }
}

# Mutation to add a new user
mutation addUser($input: UserInput!) {
  addUser(input: $input) {
    id
    name
    email
    address {
      street
      city
      state
      country
    }
  }
}

# Input type definition for adding a new user
input UserInput {
  name: String!
  username: String!
  email: String!
  age: Int
  address: AddressInput!
}

# Input type definition for user address
input AddressInput {
  street: String!
  city: String!
  state: String!
  country: String!
}

# Schema for queries and mutations
schema {
  query: RootQuery
  mutation: RootMutation
}

# Root query
type RootQuery {
  user(id: ID!): User!
}

# Root mutation
type RootMutation {
  addUser(input: UserInput): User!
}
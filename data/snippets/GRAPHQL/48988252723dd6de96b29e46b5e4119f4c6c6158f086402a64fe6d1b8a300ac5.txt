type User {
  id: ID
  name: String
  age: Int
  email: Email
  isAdmin: Boolean
  friends: [User]
}

type Query {
  user(id: ID!): User
  users: [User]
  adminUsers: [User] @requiresAuth(role: "admin")
}

type Mutation {
  createUser(name: String!, age: Int!, email: Email!): User
    @rateLimit(max: 5, window: "1m")
    @requiresAuth
  updateUser(id: ID!, name: String, age: Int, email: Email): User
    @rateLimit(max: 10, window: "5m")
    @requiresAuth
    @requiresPermission(permission: "update_user")
  deleteUser(id: ID!): User
    @rateLimit(max: 10, window: "5m")
    @requiresAuth
    @requiresPermission(permission: "delete_user")
}

directive @requiresAuth(roles: [String], permission: String) on FIELD_DEFINITION
directive @requiresPermission(permission: String!) on FIELD_DEFINITION
directive @rateLimit(max: Int!, window: String!) on FIELD_DEFINITION
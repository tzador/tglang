// Define a type for a Person
type Person {
  id: ID!          // ID field with non-null value
  name: String!    // String field with non-null value
  age: Int         // Int field with nullable value
  address: Address // Custom type field referencing Address type
  friends: [Person]! // Array field of type Person with non-null values
}

// Define a type for an Address
type Address {
  street: String! // String field with non-null value
  city: String!   // String field with non-null value
  state: String   // String field with nullable value
  country: String // String field with nullable value
}

// Define a Query type
type Query {
  getPerson(id: ID!): Person  // Query to get a specific Person by ID
  getAllPersons: [Person]     // Query to get all Persons
}

// Define a Mutation type
type Mutation {
  createPerson(name: String!, age: Int!, address: Address!, friends: [ID]!): Person! // Mutation to create a new Person with non-null values for name, age, address, and friends
  updatePerson(id: ID!, name: String, age: Int, address: Address, friends: [ID]): Person // Mutation to update an existing Person with optional fields
  deletePerson(id: ID!): Boolean! // Mutation to delete a Person with ID and return a boolean value
}

// Define a Subscription type
type Subscription {
  personCreated: Person   // Subscription to receive updates when a new Person is created
  personUpdated(id: ID!): Person // Subscription to receive updates when a specific Person is updated
  personDeleted(id: ID!): Boolean // Subscription to receive updates when a specific Person is deleted
}
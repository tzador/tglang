const { ApolloServer, gql } = require('apollo-server');

// Defining GraphQL schema and types
const typeDefs = gql `
  type Query {
    hello: String
    books: [Book]
    authors: [Author]
  }
  type Book {
    title: String
    author: Author
  }
  type Author {
    name: String
    books: [Book]
  }
  input BookInput {
    title: String
    authorId: ID
  }

  // Resolvers for Query and Mutation operations
  const resolvers = {
    Query: {
      hello: () => "Hello World!",
      books: () => Book.find(),
      authors: () => Author.find()
    },
    Mutation: {
      createBook: (_, { input }) => Book.create(input),
      createAuthor: (_, { name }) => Author.create({ name })
    },
    Book: {
      author: (parent) => Author.findById(parent.authorId)
    },
    Author: {
      books: (parent) => Book.find({ authorId: parent.id })
    }
  };

  // Initializing ApolloServer
  const server = new ApolloServer({
    typeDefs,
    resolvers
  });

  // Starting the server
  server.listen().then(({ url }) => {
    console.log(`Server ready at ${url}`);
  });
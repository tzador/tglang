schema {
  query: Query
  mutation: Mutation
}

type Query {
  user(id: ID!): User
  expenses(limit: Int, offset: Int, filter: ExpenseFilter, sortField: String, sortOrder: String): [Expense!]!
}

input ExpenseFilter {
  amountMin: Float
  amountMax: Float
  category: String
}

enum SortOrder {
  ASC
  DESC
}

type Mutation {
  addUser(name: String!, email: String!, password: String!): User!
  addExpense(amount: Float!, category: String!, userId: ID!): Expense!
}

type User {
  id: ID!
  name: String!
  email: String!
  expenses(limit: Int, offset: Int, filter: ExpenseFilter, sortField: String, sortOrder: String): [Expense!]!
}

type Expense {
  id: ID!
  amount: Float!
  category: String!
  user: User!
}
type Query {
  people: [Person!]! @deprecated(reason: "Use \`getAllPeople\` query instead")
  getAllPeople: [Person!]! // Returns a list of all people
}

type Mutation {
  addPerson(name: String!, age: Int!): Person! // Adds a new person to the database
}

type Person { // Represents a person in the database
  id: ID! // Unique identifier for each person
  name: String! // The person's name
  age: Int! // The person's age
  address: Address @deprecated(reason: "Use \`location\` field instead")
  location: Location! // The person's location
}

type Address { // Represents a person's address
  street: String! // The street name
  city: String! // The city name
  country: String! // The country name
}

type Location { // Represents a person's current location
  latitude: Float! // The person's latitude
  longitude: Float! // The person's longitude
}
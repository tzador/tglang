// Define a type for a book object
type Book {
    title: String!
    author: String!
    published: String
    pages: Int
    genre: [String]
}

// Define a type for a user object
type User {
    name: String!
    age: Int!
    favoriteBooks: [Book]
}

// Define a root query for fetching data
type Query {
    // Fetch all books in the database
    books: [Book]
    // Fetch a specific book based on ID input
    book(id: ID!): Book
    // Fetch all users in the database
    users: [User]
}

// Define a root mutation for modifying data
type Mutation {
    // Add a new book to the database
    addBook(title: String!, author: String!, published: String, pages: Int, genre: [String]): Book
    // Update a specific book in the database
    updateBook(id: ID!, title: String, author: String, published: String, pages: Int, genre: [String]): Book
    // Remove a specific book from the database
    removeBook(id: ID!): Book
}

// Define a root subscription for real-time updates
type Subscription {
    // Subscribe to new book additions in the database
    newBookAdded: Book
}

// Define a schema with the previously defined types and operations
schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
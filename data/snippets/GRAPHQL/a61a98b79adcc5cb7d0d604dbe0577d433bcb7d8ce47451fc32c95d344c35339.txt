enum SortDirection {
  ASC
  DESC
}

type User {
  id: ID!
  name: String!
  age: Int
  created: DateTime!
  updated: DateTime!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  created: DateTime!
  updated: DateTime!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
  created: DateTime!
  updated: DateTime!
}

type Query {
  getUsers(sort: SortDirection): [User!]!
  getPosts(sort: SortDirection): [Post!]!
  getComments(sort: SortDirection): [Comment!]!
}

type Mutation {
  createUser(name: String!, age: Int!): User!
  updateUser(id: ID!, name: String, age: Int): User!
  createPost(title: String!, body: String!, authorId: ID!): Post!
  updatePost(id: ID!, title: String, body: String): Post!
  createComment(text: String!, authorId: ID!, postId: ID!): Comment!
  updateComment(id: ID!, text: String): Comment!
}

type Subscription {
  userCreated: User!
  userUpdated(id: ID!): User!
  postCreated: Post!
  postUpdated(id: ID!): Post!
  commentCreated: Comment!
  commentUpdated(id: ID!): Comment!
}
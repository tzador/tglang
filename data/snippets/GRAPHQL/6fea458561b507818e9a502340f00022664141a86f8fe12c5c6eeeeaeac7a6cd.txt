type Query { // defining a new GraphQL object type named 'Query'
  users: [User!]! // defining a field named 'users' that returns a list of non-null User objects
  posts: [Post!]! // defining a field named 'posts' that returns a list of non-null Post objects
}

type User { // defining a new GraphQL object type named 'User'
  id: ID! // defining a non-null field named 'id' of type ID
  name: String! // defining a non-null field named 'name' of type String
  age: Int // defining a nullable field named 'age' of type Int
  posts: [Post!]! // defining a field named 'posts' that returns a list of non-null Post objects
}

type Post { // defining a new GraphQL object type named 'Post'
  id: ID! // defining a non-null field named 'id' of type ID
  title: String! // defining a non-null field named 'title' of type String
  content: String! // defining a non-null field named 'content' of type String
  author: User! // defining a field named 'author' that returns a non-null User object
}

schema { // defining a GraphQL schema which will contain all the available queries, mutations, and subscriptions
  query: Query // specifying that the root query will be of the type Query
}
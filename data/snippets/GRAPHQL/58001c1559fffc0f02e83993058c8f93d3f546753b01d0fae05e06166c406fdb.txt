type Query {
  # Query to get a single todo item by id
  todoItem(id: ID!): TodoItem
}

type Mutation {
  # Mutation to create a new todo item
  createTodoItem(
    # Input for the todo item title
    title: String!
    # Input for the todo item description
    description: String
    # Input for the completed status of the todo item
    completed: Boolean!
  ): TodoItem!
}

# Custom type for a Todo Item
type TodoItem {
  # Unique identifier of the todo item
  id: ID!
  # Title of the todo item
  title: String!
  # Description of the todo item
  description: String
  # Completed status of the todo item
  completed: Boolean!
}

# Custom type for a User
type User {
  # Unique identifier of the user
  id: ID!
  # Name of the user
  name: String!
  # Email of the user
  email: String!
  # List of todo items belonging to the user
  todos: [TodoItem!]!
}

# Inputs for creating a new User
input CreateNewUserInput {
  # Name of the user
  name: String!
  # Email of the user
  email: String!
  # Password for the user's account
  password: String!
}

# Inputs for authenticating a User
input AuthUserInput {
  # Email of the user
  email: String!
  # Password for the user's account
  password: String!
}

# Response format for authentication
type AuthResponse {
  # Authentication token for the user
  token: String!
  # Logged in user's information
  user: User!
}

# Root Query for accessing data
type Query {
  # Query to get all todo items
  todoItems: [TodoItem!]!
  # Query to get a single user by id
  user(id: ID!): User
}

# Root Mutation for managing data
type Mutation {
  # Mutation to create a new user
  createUser(input: CreateNewUserInput!): User
  # Mutation to authenticate a user
  authenticateUser(input: AuthUserInput!): AuthResponse
}

# Root Subscription for real-time updates
type Subscription {
  # Subscription to receive updates when a new todo item is created
  newTodoItem: TodoItem
}

# Schema for the GraphQL API
schema {
  # Root queries that can be performed
  query: Query
  # Root mutations that can be performed
  mutation: Mutation
  # Root subscriptions that can be subscribed to
  subscription: Subscription
}
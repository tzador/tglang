# GraphQL Object Type
type Employee {
  id: ID!
  name: String!
  email: String!
  age: Int!
  department: Department!
  projects: [Project!]!
  evaluations(level: Int): [Evaluation!]!
}

# GraphQL Input Type
input EmployeeInput {
  name: String!
  email: String!
  age: Int!
  department: Department!
}

# GraphQL Enum
enum Department {
  MARKETING
  SALES
  FINANCE
  HUMAN_RESOURCES
}

# GraphQL Union Type
union Searchable = Employee | Project

# GraphQL Interface
interface Evaluation {
  level: Int!
  comments: String
}

# GraphQL Type Implementations
type MidYearEvaluation implements Evaluation {
  level: Int!
  comments: String
  performanceScore: Float!
}

type EndOfYearEvaluation implements Evaluation {
  level: Int!
  comments: String
  promotion: Boolean!
}

# GraphQL Schema
schema {
  query: Query
  mutation: Mutation
}

# GraphQL Query
type Query {
  employee(id: ID!): Employee
  employees(email: String): [Employee!]!
  employeeCount: Int!
  search(searchTerm: String!): [Searchable!]!
}

# GraphQL Mutation
type Mutation {
  addEmployee(input: EmployeeInput!): Employee!
  updateEmployee(id: ID!, input: EmployeeInput!): Employee!
  deleteEmployee(id: ID!): Boolean!
}
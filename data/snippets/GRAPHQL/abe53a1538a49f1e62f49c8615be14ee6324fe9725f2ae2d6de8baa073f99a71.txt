type Product @model {
  id: ID!
  name: String!
  description: String
  price: Float!
  quantity: Int!
  category: [String!]!
  reviews: [Review]
}

type User @model {
  id: ID!
  name: String!
  email: String!
  password: String!
  role: Role!
  orders: [Order]
}

type Review @model {
  id: ID!
  title: String
  body: String
  rating: Int!
  author: User!
  product: Product!
}

type Order @model {
  id: ID!
  total: Float!
  status: OrderStatus!
  user: User!
  products: [OrderProduct]
}

type OrderProduct @model {
  id: ID!
  quantity: Int!
  price: Float!
  product: Product!
  order: Order!
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  DELIVERED
  CANCELLED
}

type Query {
  listProducts(limit:Int, nextToken:String): ProductConnection
  getProduct(id:ID!): Product
  listReviews(limit:Int, nextToken:String): ReviewConnection
  getReview(id:ID!): Review
  listOrders(limit:Int, nextToken:String): OrderConnection
  getOrder(id:ID!): Order
}

type Mutation {
  addProduct(name:String!, description:String, price:Float!, quantity:Int!, category:[String!]!, reviews:[String]): Product
  updateProduct(id:ID!, name:String!, description:String, price:Float!, quantity:Int!, category:[String!]!, reviews:[String]): Product
  deleteProduct(id: ID!): Boolean
  addReview(title:String, body:String!, rating:Int!, productId:ID!, userId:ID!): Review
  updateReview(id:ID!, title:String, body:String!, rating:Int!, productId:ID!, userId:ID!): Review
  deleteReview(id:ID!): Boolean
  addOrder(total:Float!, status:OrderStatus!, userId:ID!, products:[OrderProductInput!]!): Order
  updateOrder(id:ID!, total:Float!, status:OrderStatus!, userId:ID!, products:[OrderProductInput!]!): Order
  deleteOrder(id:ID!): Boolean
}

type ProductConnection {
  items: [Product]
  nextToken: String
}

type ReviewConnection {
  items: [Review]
  nextToken: String
}

type OrderConnection {
  items: [Order]
  nextToken: String
}

input OrderProductInput {
  id: ID!
  quantity: Int!
  price: Float!
  product: ProductInput!
  order: OrderInput!
}

input ProductInput {
  id: ID!
  name: String!
  description: String
  price: Float!
  quantity: Int!
  category: [String!]!
}

input OrderInput {
  id: ID!
  total: Float!
  status: OrderStatus!
}
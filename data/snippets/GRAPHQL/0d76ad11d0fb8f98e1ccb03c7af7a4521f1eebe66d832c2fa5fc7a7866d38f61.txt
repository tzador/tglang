// Define a custom scalar type called "DateTime" that represents
// a datetime string in ISO 8601 format
scalar DateTime

// Define a "User" type with fields for id, name, email, and
// a list of "Post" objects that this user has created
type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post]
}

// Define a "Post" type with fields for id, title, body, and
// a reference to the "User" who created it
type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
}

// Define a "Query" type with a field for retrieving a single post
// by its id, as well as a field for retrieving all posts
type Query {
  post(id: ID!): Post
  posts: [Post]
}

// Define a "Mutation" type with fields for creating, updating, and deleting
// a post by passing in the necessary arguments
type Mutation {
  createPost(title: String!, body: String!, authorId: ID!): Post!
  updatePost(id: ID!, title: String, body: String): Post
  deletePost(id: ID!): Boolean
}

// Create a schema by combining the "Query" and "Mutation" types
schema {
  query: Query
  mutation: Mutation
}
type Person {
  id: ID!
  name: String!
  age: Int
  address: Address
}

interface Address {
  id: ID!
  street: String!
  city: String!
  state: String!
  country: String!
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

input PersonInput {
  name: String!
  age: Int
  address: AddressInput
}

input AddressInput {
  street: String!
  city: String!
  state: String!
  country: String!
}

type Query {
  getPerson(id: ID!): Person!
  getPeopleByAddress(city: String!): [Person!]!
}

type Mutation {
  createPerson(input: PersonInput!): Person!
}

schema {
  query: Query
  mutation: Mutation
}
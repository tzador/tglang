type User {
  id: ID!
  name: String!
  age: Int
  email: String!
  gender: String
  address: String
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment]
}

type Comment {
  id: ID!
  text: String!
  post: Post!
  author: User!
}

input UpdateUserInput {
  name: String
  age: Int
  email: String
  gender: String
  address: String
}

input CreatePostInput {
  title: String!
  body: String!
  authorId: ID!
}

input UpdatePostInput {
  title: String
  body: String
}

input CreateCommentInput {
  text: String!
  postId: ID!
  authorId: ID!
}

input UpdateCommentInput {
  text: String
}

type Query {
  users: [User!]!
  user(id: ID!): User
  posts: [Post!]!
  post(id: ID!): Post
  comments: [Comment!]!
  comment(id: ID!): Comment
}

type Mutation {
  createUser(input: UpdateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): User!
  createPost(input: CreatePostInput!): Post!
  updatePost(id: ID!, input: UpdatePostInput!): Post!
  deletePost(id: ID!): Post!
  createComment(input: CreateCommentInput!): Comment!
  updateComment(id: ID!, input: UpdateCommentInput!): Comment!
  deleteComment(id: ID!): Comment!
}
# Define a custom 'User' type in GraphQL
type User {
    id: ID
    name: String!
    email: String!
    age: Int
    address: Address
    friends: [User]
}

# Define an 'Address' type for the 'User' type
type Address {
    street: String!
    city: String!
    country: String!
}

# Create a Query type to handle incoming requests
type Query {
    getUser(id: ID!): User
    listUsers: [User]
}

# Create a Mutation type to handle data updates
type Mutation {
    addUser(name: String!, email: String!, age: Int, address: AddressInput): User
    updateUser(id: ID!, name: String, email: String, age: Int, address: AddressInput): User
    deleteUser(id: ID!): String
}

# Define an input type for the 'Address' type
input AddressInput {
    street: String!
    city: String!
    country: String!
}

# Define a schema for the types 'Query' and 'Mutation'
schema {
    query: Query
    mutation: Mutation
}
type Person {
  id: ID!
  name: String!
  age: Int!
  email: String!
  address: Address!
  phone: String!
  friends: [Person!]!
  hobbies: [Hobby!]!
}

type Address {
  street: String!
  city: String!
  state: String!
  country: String!
}

type Hobby {
  name: String!
  description: String
  frequency: Int!
}

input PersonInput {
  name: String!
  age: Int!
  email: String!
  address: AddressInput!
  phone: String!
  friends: [PersonInput!]!
  hobbies: [HobbyInput!]!
}

input AddressInput {
  street: String!
  city: String!
  state: String!
  country: String!
}

input HobbyInput {
  name: String!
  description: String
  frequency: Int!
}

type Query {
  person(id: ID!): Person
}

type Mutation {
  createPerson(input: PersonInput!): Person!
  updatePerson(id: ID!, input: PersonInput!): Person!
  deletePerson(id: ID!): Person!
}
type Query { // defining the query type
  user(id: ID!): User // defining the 'user' query, which takes in an ID argument and returns a 'User' object
  posts: [Post] // defining the 'posts' query, which returns an array of 'Post' objects
}

type User { // defining the 'User' type
  id: ID! // defining the 'id' field, which returns a non-null ID
  firstName: String // defining the 'firstName' field, which returns a String
  lastName: String // defining the 'lastName' field, which returns a String
  posts: [Post] // defining the 'posts' field, which returns an array of 'Post' objects
}

type Post { // defining the 'Post' type
  id: ID! // defining the 'id' field, which returns a non-null ID
  title: String // defining the 'title' field, which returns a String
  body: String // defining the 'body' field, which returns a String
  author: User // defining the 'author' field, which returns a 'User' object
}

type Mutation { // defining the mutation type
  createUser(firstName: String!, lastName: String!): User // defining the 'createUser' mutation, which takes in non-null 'firstName' and 'lastName' arguments and returns a 'User' object
  createPost(title: String!, body: String!): Post // defining the 'createPost' mutation, which takes in non-null 'title' and 'body' arguments and returns a 'Post' object
}

// Sample Query
{
  user(id: "123") { // querying the 'user' query with the ID argument of "123"
    id // returning the 'id' field
    firstName // returning the 'firstName' field
    lastName // returning the 'lastName' field
    posts { // querying the 'posts' field
      id // returning the 'id' field
      title // returning the 'title' field
    }
  }

  posts { // querying the 'posts' query
    title // returning the 'title' field
    body // returning the 'body' field
    author { // querying the 'author' field
      id // returning the 'id' field
      firstName // returning the 'firstName' field
      lastName // returning the 'lastName' field
    }
  }
}

// Sample Mutation
mutation {
  createUser(firstName: "John", lastName: "Doe") { // executing the 'createUser' mutation with the arguments "John" and "Doe"
    id // returning the 'id' field
    firstName // returning the 'firstName' field
    lastName // returning the 'lastName' field
  }

  createPost(title: "Hello World", body: "This is my first post!") { // executing the 'createPost' mutation with the arguments "Hello World" and "This is my first post!"
    id // returning the 'id' field
    title // returning the 'title' field
    body // returning the 'body' field
    author { // querying the 'author' field
      id // returning the 'id' field
      firstName // returning the 'firstName' field
      lastName // returning the 'lastName' field
    }
  }
}
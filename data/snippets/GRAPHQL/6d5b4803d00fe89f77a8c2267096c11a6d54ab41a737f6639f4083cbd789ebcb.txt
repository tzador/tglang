# Import necessary libraries
import graphene
import json

# Define the schema
class User(graphene.ObjectType):
    name = graphene.String()
    age = graphene.Int()

class Query(graphene.ObjectType):
    user = graphene.Field(User)

    def resolve_user(root, info):
        """
        Returns a user object with name and age
        """
        return User(name='John Doe', age=25)

# Define mutation class
class CreateUser(graphene.Mutation):
    class Arguments:
        name = graphene.String()
        age = graphene.Int()

    user = graphene.Field(User)

    def mutate(self, info, name, age):
        # Create new user object and return it
        new_user = User(name=name, age=age)
        return CreateUser(user=new_user)

class Mutation(graphene.ObjectType):
    create_user = CreateUser.Field()

# Create and run the schema
schema = graphene.Schema(query=Query, mutation=Mutation)
result = schema.execute(
    '''
    mutation {
        createUser(name: "Chris Smith", age: 30) {
            user {
                name
                age
            }
        }
    }
    '''
)

# Print the result
print(json.dumps(dict(result.data), indent=4))
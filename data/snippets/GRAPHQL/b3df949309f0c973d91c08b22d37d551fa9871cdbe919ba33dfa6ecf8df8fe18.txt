# Define the schema
const typeDefs = `
  type Query {
    users: [User!]!
  }

  type Mutation {
    addUser(name: String!, email: String!): User!
  }

  type User {
    id: ID!
    name: String!
    email: String!
  }
  `;

# Define the resolvers
const resolvers = {
  Query: {
    users: () => getUsers(),
  },
  Mutation: {
    addUser: (root, { name, email }) => addUser(name, email),
  },
};

# Define the database functions
const users = [];

const getUsers = () => users;

const addUser = (name, email) => {
  const user = {
    id: users.length + 1,
    name,
    email,
  };
  users.push(user);
  return user;
};

# Create the Apollo server
const server = new ApolloServer({ typeDefs, resolvers });

# Connect to server
server.listen().then(({ url }) => {
  console.log(`ğŸš€ Server ready at ${url}`);
});
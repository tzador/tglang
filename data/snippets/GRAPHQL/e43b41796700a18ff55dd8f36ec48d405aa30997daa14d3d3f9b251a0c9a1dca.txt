type Query { // defining a Query type
  books: [Book]! // creating a field 'books' of type array of Book objects
  authors: [Author]! // creating a field 'authors' of type array of Author objects
}

type Book { // defining a Book type
  id: ID! // creating a required field 'id' of type ID
  title: String! // creating a required field 'title' of type String
  author: Author! // creating a field 'author' of type Author
}

type Author { // defining an Author type
  id: ID!
  firstName: String!
  lastName: String!
  books: [Book]! // creating a field 'books' of type array of Book objects
}

input BookInput { // defining an input type for Book object
  title: String! // creating a required field 'title' of type String
  authorId: ID! // creating a required field 'authorId' of type ID
}

type Mutation { // defining a Mutation type
  addBook(book: BookInput): Book! // creating a mutation for adding a Book object
}

// example query
query {
  books { // querying for all books
    id
    title
    author { // querying nested field author
      firstName
      lastName
    }
  }
}

// example mutation
mutation {
  addBook(book: { // invoking the addBook mutation
    title: "Harry Potter and the Philosopher's Stone",
    authorId: "1"
  }) {
    id
    title
    author {
      firstName
      lastName
    }
  }
}
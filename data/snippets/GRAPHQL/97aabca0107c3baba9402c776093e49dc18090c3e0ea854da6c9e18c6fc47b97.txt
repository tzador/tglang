type Query {
  # Definition for a user object
  user(userId: ID!): User
  # Definition for a project object
  project(projectId: ID!): Project
}

type User {
  id: ID!
  name: String
  email: String
  # Definition for a list of projects created by the user
  projects: [Project]
}

type Project {
  id: ID!
  name: String
  description: String
  # Definition for the user who created the project
  creator: User!
}

# A mutation to create a new project
type Mutation {
  createProject(input: ProjectInput!): Project
}

input ProjectInput {
  name: String!
  description: String!
  # The user id of the creator
  creatorId: ID!
}

# An enum for project status
enum ProjectStatus {
  ACTIVE
  COMPLETED
  ON_HOLD
}
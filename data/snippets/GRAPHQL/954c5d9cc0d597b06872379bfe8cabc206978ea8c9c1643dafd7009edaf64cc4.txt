type Query {
  # Gets all posts
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: Author!
  comments: [Comment!]!
}

type Author {
  id: ID!
  name: String!
}

type Comment {
  id: ID!
  content: String!
  author: Author!
  post: Post!
}

# Mutations for creating posts, authors, and comments
type Mutation {
  createPost(input: CreatePostInput!): Post!
  createAuthor(input: CreateAuthorInput!): Author!
  createComment(input: CreateCommentInput!): Comment!
}

# Input types for creating posts, authors, and comments
input CreatePostInput {
  title: String!
  content: String!
  authorId: ID!
}

input CreateAuthorInput {
  name: String!
}

input CreateCommentInput {
  content: String!
  authorId: ID!
  postId: ID!
}

# Subscription for real-time updates on comments
type Subscription {
  commentAdded(postId: ID!): Comment!
}
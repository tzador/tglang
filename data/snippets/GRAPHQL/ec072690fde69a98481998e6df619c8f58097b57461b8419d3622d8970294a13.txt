type Query {
  books(category: String!): [Book]!
}

# Defines the fields available in the 'Query' type. 
# The query will accept a required argument 'category' 
# and return a list of type Book.

type Book {
  title: String!
  author: Author!
  categories: [String!]!
}

# Defines the 'Book' type, with a required 'title' field 
# of type String, an 'author' field of type 'Author', 
# and a 'categories' field which returns a list of strings.

type Author {
  name: String!
  books: [Book!]!
}

# Defines the 'Author' type, with a required 'name' field 
# of type String, and a 'books' field which returns a list 
# of type Book.

mutation {
  createBook(title: String!, author: String!, category: String!): Book!
}

# Defines a mutation operation that allows for the creation 
# of a new book. It accepts required arguments for 'title', 
# 'author', and 'category', and returns a Book object as the result.
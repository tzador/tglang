type Query {
  # This query will return a list of all users
  users: [User]
}

# User object type
type User {
  id: ID!
  username: String!
  email: String!
  friends: [User]
  posts: [Post]
}

# Post object type
type Post {
  id: ID!
  title: String!
  body: String!
  author: User
  comments: [Comment]
}

# Comment object type
type Comment {
  id: ID!
  body: String!
  author: User!
}

# Mutations for creating new data
type Mutation {
  # Creates a new user with the given username and email
  createUser(username: String!, email: String!): User!

  # Creates a new post with the given title and body, assigns it to the given user, and returns the post object
  createPost(title: String!, body: String!, authorId: ID!): Post!

  # Creates a new comment with the given body, assigns it to the given user and post, and returns the comment object
  createComment(body: String!, authorId: ID!, postId: ID!): Comment!
}

# Schema defines the root query and mutation for the GraphQL server
schema {
  query: Query
  mutation: Mutation
}
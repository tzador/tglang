# Schema definition for a 'User' type, with fields for id, name, age, and posts.
type User {
  id: ID!
  name: String!
  age: Int!
  posts: [Post]!
}

# Schema definition for a 'Post' type, with fields for id, title, and author.
type Post {
  id: ID!
  title: String!
  author: User!
}

# Query to get a specific user by id, along with their name, age, and posts.
# Uses variables to pass in the user id as an argument.
query GetUser($userId: ID!) {
  user(id: $userId) {
    name
    age
    posts {
      title
    }
  }
}

# Mutation to create a new post for a specific user, using variables to pass in the title and author id.
mutation CreatePost($title: String!, $authorId: ID!) {
  createPost(title: $title, authorId: $authorId) {
    id
    title
    author {
      name
    }
  }
}

# Subscription for real-time updates on a specific user's posts.
subscription PostUpdates($userId: ID!) {
  postUpdates(userId: $userId) {
    id
    title
    author {
      name
    }
  }
}

# Query to get all posts by a specific author, using variables to pass in the author id.
query GetPostsByAuthor($authorId: ID!) {
  postsByAuthor(authorId: $authorId) {
    id
    title
  }
}

# Mutation to update a specific post's title, using variables to pass in the post id and updated title.
mutation UpdatePostTitle($postId: ID!, $newTitle: String!) {
  updatePostTitle(postId: $postId, newTitle: $newTitle) {
    id
    title
  }
}

# Subscription for real-time updates on a specific post's title, using variables to pass in the post id.
subscription PostTitleUpdate($postId: ID!) {
  postTitleUpdate(postId: $postId) {
    id
    title
  }
}
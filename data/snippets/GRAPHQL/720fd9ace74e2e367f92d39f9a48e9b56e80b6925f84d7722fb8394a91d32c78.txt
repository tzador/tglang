# GraphQL Schema

type Query {
  # Retrieves a user's information
  user(
    # The user's unique ID
    id: ID!
  ): User

  # Retrieves a list of blog posts
  posts(
    # The number of posts to retrieve
    limit: Int!,
    # Filters posts by a specific category
    category: String
  ): [Post!]!
}

type Mutation {
  # Creates a new user
  createUser(
    # The user's name
    name: String!,
    # The user's email
    email: String!,
    # The user's age
    age: Int!
  ): User

  # Updates a user's information
  updateUser(
    # The user's unique ID
    id: ID!
    # The user's updated name
    name: String
    # The user's updated email
    email: String
    # The user's updated age
    age: Int
  ): User

  # Deletes a user by their ID
  deleteUser(
    # The user's unique ID
    id: ID!
  ): ID

  # Creates a new blog post
  createPost(
    # The post's title
    title: String!,
    # The post's content
    content: String!,
    # The post's category
    category: String!
  ): Post

  # Updates a blog post's information
  updatePost(
    # The post's unique ID
    id: ID!
    # The post's updated title
    title: String
    # The post's updated content
    content: String
    # The post's updated category
    category: String
  ): Post

  # Deletes a blog post by its ID
  deletePost(
    # The post's unique ID
    id: ID!
  ): ID
}

type User {
  # The user's unique ID
  id: ID!
  # The user's name
  name: String!
  # The user's email
  email: String!
  # The user's age
  age: Int!
  # The user's list of blog posts
  posts: [Post!]!
}

type Post {
  # The post's unique ID
  id: ID!
  # The post's title
  title: String!
  # The post's content
  content: String!
  # The post's category
  category: String!
  # The user who created the post
  author: User!
}
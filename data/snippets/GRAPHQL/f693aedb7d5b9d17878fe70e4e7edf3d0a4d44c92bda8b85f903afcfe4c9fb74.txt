// Define a GraphQL schema
// This represents a Book type with id, title, year, and author fields
type Book {
    id: ID!
    title: String!
    year: Int
    author: String
}

// Define a root Query type
// This defines the possible queries that a user can make
type Query {
    // Retrieves a single book by the provided id
    getBook(id: ID!): Book

    // Retrieves a list of books by title and/or author
    getAllBooks(title: String, author: String): [Book]
}

// Define a root Mutation type
// This defines the possible mutations that a user can make
type Mutation {
    // Creates a new book with the provided title, year, and author
    createBook(title: String!, year: Int, author: String!): Book

    // Updates an existing book with the provided id,
    // and optionally updates the title, year, and/or author
    updateBook(id: ID!, title: String, year: Int, author: String): Book

    // Deletes a book with the provided id
    deleteBook(id: ID!): Book
}

// Define a root Subscription type
// This allows for real-time updates on book changes
type Subscription {
    // Listens for when a new book is created and returns the book
    bookAdded: Book

    // Listens for when an existing book is updated and returns the updated book
    bookUpdated: Book

    // Listens for when a book is deleted and returns the deleted book
    bookDeleted: Book
}
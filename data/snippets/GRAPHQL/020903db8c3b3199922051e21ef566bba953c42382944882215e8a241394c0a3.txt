// Define GraphQL schema
const { gql } = require('apollo-server');

const typeDefs = gql`
  type Query {
    users: [User!]!
    user(id: ID!): User
    posts: [Post!]!
    post(id: ID!): Post
  }

  type User {
    id: ID!
    username: String!
    email: String!
    posts: [Post!]!
  }

  type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
  }
`;

// Define resolvers
const resolvers = {
  Query: {

    // Fetch all users
    users: () => {
      return getUserData();
    },

    // Fetch single user by id
    user: (parent, args) => {
      const user = getUserData().find(user => user.id === args.id);
      return user;
    },

    // Fetch all posts
    posts: () => {
      return getPostData();
    },

    // Fetch single post by id
    post: (parent, args) => {
      const post = getPostData().find(post => post.id === args.id);
      return post;
    }
  },

  User: {

    // Resolve posts field for User type
    posts: (parent, args) => {
      const userPosts = getPostData().filter(post => post.author === parent.id);
      return userPosts;
    }
  },

  Post: {

    // Resolve author field for Post type
    author: (parent, args) => {
      const postAuthor = getUserData().find(user => user.id === parent.author);
      return postAuthor;
    }
  }
};

// Functions to get mock data
function getUserData() {
  return [
    {
      id: '1',
      username: 'John',
      email: 'john@email.com',
      posts: ['1', '2', '3']
    },
    {
      id: '2',
      username: 'Jane',
      email: 'jane@email.com',
      posts: ['4', '5', '6']
    }
  ]
}

function getPostData() {
  return [
    {
      id: '1',
      title: 'Post 1',
      body: 'This is the first post',
      author: '1'
    },
    {
      id: '2',
      title: 'Post 2',
      body: 'This is the second post',
      author: '1'
    },
    {
      id: '3',
      title: 'Post 3',
      body: 'This is the third post',
      author: '1'
    },
    {
      id: '4',
      title: 'Post 4',
      body: 'This is the fourth post',
      author: '2'
    },
    {
      id: '5',
      title: 'Post 5',
      body: 'This is the fifth post',
      author: '2'
    },
    {
      id: '6',
      title: 'Post 6',
      body: 'This is the sixth post',
      author: '2'
    }
  ]
};

module.exports = {
  typeDefs,
  resolvers
};
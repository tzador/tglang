// GraphQL Schema Definition

// Import necessary modules
import { GraphQLObjectType, GraphQLString, GraphQLInt } from 'graphql';

// Create a new GraphQL object type for a person
const PersonType = new GraphQLObjectType({
  name: 'Person',
  description: 'A person in the schema',
  // Define the fields of the object type
  fields: () => ({
    // Field for the id of the person
    id: { type: GraphQLInt },
    // Field for the name of the person
    name: { type: GraphQLString },
    // Field for the age of the person
    age: { type: GraphQLInt },
    // Field for the gender of the person
    gender: { type: GraphQLString }
  })
});

// Create a new query type
const QueryType = new GraphQLObjectType({
  name: 'Query',
  description: 'Root query object',
  // Define the fields of the query
  fields: () => ({
    // Field to get a person by their id
    person: {
      // Type of the field
      type: PersonType,
      // Arguments to pass in for the query
      args: {
        // Argument for the id of the person
        id: { type: GraphQLInt }
      },
      // Resolve function for the query
      resolve: (parent, args) => {
        // Get the person with the corresponding id
        const { id } = args;
        const person = getPersonById(id);
        return person;
      }
    }
  })
});

// Export the query type as the root schema
export default new GraphQLSchema({
  query: QueryType
});
type Query { //Defines a query operation
  user( //Name of the query
    id: ID! //Arguments, required ID type
  ): User //Return type User
  posts( //Name of the query
    userId: ID //Optional argument, ID type
  ): [Post] //Return type array of Post
}

type User { //Defines user type
  id: ID! //User ID field, required ID type
  name: String! //User name field, required String type
  email: String! //User email field, required String type
  posts: [Post] //User's posts field, array of Post type
}

type Post { //Defines post type
  id: ID! //Post ID field, required ID type
  title: String! //Post title field, required String type
  content: String! //Post content field, required String type
  author: User! //Post's author field, required User type
  comments: [Comment] //Post's comments field, array of Comment type
}

type Comment { //Defines comment type
  id: ID! //Comment ID field, required ID type
  content: String! //Comment content field, required String type
  author: User! //Comment's author field, required User type
  post: Post! //Comment's post field, required Post type
}

//Example Query
query {
  user(id: "123") { //Return user with ID of "123"
    name //Return user's name
    email //Return user's email
    posts { //Return user's posts
      title //Return post's title
      author { //Return post's author
        name //Return author's name
        email //Return author's email
      }
      comments { //Return post's comments
        content //Return comment's content
        author { //Return comment's author
          name //Return author's name
        }
      }
    }
  }
}
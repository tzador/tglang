type Query {
  books(
    search: String
    genres: [String]
  ) // defines a "books" query that takes in a "search" String and "genres" array of Strings
  : [Book] // returns an array of "Book" objects
}
 
type Book { // defines a "Book" type
  title: String // has a "title" property of type String
  authors: [String] // has an "authors" property of type array of Strings
  description: String // has a "description" property of type String
  genre: String // has a "genre" property of type String
  pageCount: Int // has a "pageCount" property of type Integer
  publisher: String // has a "publisher" property of type String
  publishedDate: String // has a "publishedDate" property of type String
  language: String // has a "language" property of type String
  ISBN: String // has a "ISBN" property of type String
}
 
type Mutation {
  addBook(
    title: String!
    authors: [String]!
    description: String
    genre: String
    pageCount: Int
    publisher: String
    publishedDate: String
    language: String
    ISBN: String
  ) // defines an "addBook" mutation that takes in required "title" and "authors" fields, and optional fields for the book's information
  : Book // returns a "Book" object
}
 
type Subscription {
  bookAdded: Book // defines a "bookAdded" subscription that returns a "Book" object when a new book is added
}
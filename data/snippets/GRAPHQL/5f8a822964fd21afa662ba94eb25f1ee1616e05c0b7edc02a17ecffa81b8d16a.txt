const { GraphQLObjectType, GraphQLString, GraphQLInt, GraphQLList } = require('graphql');
const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const schema = new GraphQLSchema({
  query: new GraphQLObjectType({
    name: 'Query',
    fields: {
      users: {
        type: new GraphQLList(userType),
        resolve: () => {
          return User.find({}, (err, users) => {
            if (err) {
              throw err;
            }
            return users;
          });
        },
      },
      user: {
        type: userType,
        args: {
          id: { type: GraphQLString }
        },
        resolve: (_, args) => {
          return User.findById(args.id, (err, user) => {
            if (err) {
              throw err;
            }
            return user;
          });
        },
      },
    },
  }),
});
app.use('/graphql', bodyParser.json(), graphqlExpress({ schema }));
app.use('/', express.static('public'));
app.listen(3000, () => console.log('Server started on port 3000'));
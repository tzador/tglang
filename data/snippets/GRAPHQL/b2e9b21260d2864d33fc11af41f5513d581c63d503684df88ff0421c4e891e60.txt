type Post {
  id: ID!
  title: String!
  author: User
  content: String
  comments: [Comment!]!
}

type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]!
}

type Comment {
  id: ID!
  content: String!
  author: User
  post: Post!
}

# Query to get all posts
query {
  posts {
    id
    title
    author {
      id
      name
      email
    }
    content
    comments {
      id
      content
      author {
        id
        name
        email
      }
    }
  }
}

# Query to get specific post by ID
query {
  post(id: "1") {
    id
    title
    author {
      id
      name
      email
      posts {
        id
        title
      }
    }
    content
    comments {
      id
      content
      author {
        id
        name
        email
      }
    }
  }
}

# Mutation to create new post
mutation {
  createPost(title: "New Post", authorID: "1", content: "This is a new post.") {
    id
    title
    author {
      id
      name
      email
      posts {
        id
        title
      }
    }
    content
    comments {
      id
      content
      author {
        id
        name
        email
      }
    }
  }
}

# Mutation to update existing post
mutation {
  updatePost(id: "1", title: "Updated Post") {
    id
    title
    author {
      id
      name
      email
      posts {
        id
        title
      }
    }
    content
    comments {
      id
      content
      author {
        id
        name
        email
      }
    }
  }
}

# Mutation to delete post by ID
mutation {
  deletePost(id: "1")
}
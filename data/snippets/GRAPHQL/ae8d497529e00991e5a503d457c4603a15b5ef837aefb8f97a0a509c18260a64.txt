type Query {
    # Fetches a list of users
    users: [User!]!
    # Fetches a single user with a given ID
    user(id: ID!): User
}

type User {
    id: ID!
    name: String!
    age: Int!
    email: String!
    posts: [Post!]!
}

type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
    comments: [Comment!]!
}

type Comment {
    id: ID!
    text: String!
    author: User!
    post: Post!
}

# Defines a root mutation type

type Mutation {
    # Creates a new user with the given data
    createUser(name: String!, email: String!, age: Int!): User!
    # Deletes a user with a given ID
    deleteUser(id: ID!): Boolean!
    # Creates a new post with the given data
    createPost(title: String!, body: String!, authorId: ID!): Post!
    # Deletes a post with a given ID
    deletePost(id: ID!): Boolean!
    # Creates a new comment with the given data
    createComment(text: String!, authorId: ID!, postId: ID!): Comment!
    # Deletes a comment with a given ID
    deleteComment(id: ID!): Boolean!
}
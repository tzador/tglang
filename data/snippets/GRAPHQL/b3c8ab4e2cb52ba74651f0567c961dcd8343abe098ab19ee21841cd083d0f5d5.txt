type Query {            // This is a schema declaration for a Query type
  viewer: User          // Defines a field named 'viewer' that returns a 'User' type
}

type User {             // This is a schema declaration for a User type
  id: ID                // Defines a field named 'id' that returns an ID scalar type
  name: String          // Defines a field named 'name' that returns a String scalar type
  age: Int              // Defines a field named 'age' that returns an Int scalar type
  friends: [User]       // Defines a field named 'friends' that returns an array of 'User' type
  posts(first: Int!, after: String): PostConnection  // Defines a field named 'posts' that returns a 'PostConnection' type and requires two arguments
}

type PostConnection {             // This is a schema declaration for a PostConnection type
  edges: [PostEdge]               // Defines a field named 'edges' that returns an array of 'PostEdge' type
  pageInfo: PageInfo              // Defines a field named 'pageInfo' that returns a 'PageInfo' type
}

type PostEdge {                   // This is a schema declaration for a PostEdge type
  cursor: String                  // Defines a field named 'cursor' that returns a String scalar type
  node: Post                      // Defines a field named 'node' that returns a 'Post' type
}

type Post {                       // This is a schema declaration for a Post type
  id: ID                          // Defines a field named 'id' that returns an ID scalar type
  author: User                    // Defines a field named 'author' that returns a 'User' type
  title: String                   // Defines a field named 'title' that returns a String scalar type
  content: String                 // Defines a field named 'content' that returns a String scalar type
}

type PageInfo {                   // This is a schema declaration for a PageInfo type
  hasNextPage: Boolean            // Defines a field named 'hasNextPage' that returns a Boolean scalar type
  endCursor: String               // Defines a field named 'endCursor' that returns a String scalar type
}

schema {                          // This is a schema declaration for the entire GraphQL API
  query: Query                    // Specifies that the 'Query' type is the root query type for the API
  mutation: Mutation              // Specifies that the 'Mutation' type is the root mutation type for the API
}
// Define a GraphQL schema
const { graphql, buildSchema } = require('graphql');

// Create a GraphQL schema
const schema = buildSchema(`
  type Query {
    greeting: String
    user(name: String!): User
    number(num: Int): Int
  }

  type User {
    id: Int
    name: String
    age: Int
  }
`);

// Define a resolver for each API endpoint
const root = {
  // Resolver for greeting query
  greeting: () => 'Hello, welcome to the GraphQL world!',
  // Resolver for user query with name argument
  user: ({ name }) => {
    // Query database or other data source for user with given name
    const userData = getUserByName(name);
    // Return user data object with id, name, and age
    return { id: userData.id, name: userData.name, age: userData.age }; 
  },
  // Resolver for number query with num argument
  number: ({ num }) => {
    // Multiply num by 2 and return result
    return num * 2;
  },
};

// Execute the GraphQL query with the given schema and root resolver
graphql(schema, '{ user(name: "John") { id, name, age } }', root).then((response) => {
  // Print the response from the GraphQL query
  console.log(response);
});

/*
Output:

{
  data: {
    user: {
      id: 1,
      name: "John",
      age: 25
    }
  }
}
*/
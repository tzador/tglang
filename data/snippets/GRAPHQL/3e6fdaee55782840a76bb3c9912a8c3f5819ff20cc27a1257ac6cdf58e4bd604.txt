# Import necessary dependencies
import { GraphQLObjectType, GraphQLSchema, GraphQLString, GraphQLInt, GraphQLList } from 'graphql'
import Database from 'database'

# Define a GraphQLObjectType for a User with fields for id, name, age, and friends
const UserType = new GraphQLObjectType({
  name: 'User',
  description: 'A user in the database',
  fields: () => ({
    id: { type: GraphQLInt },
    name: { type: GraphQLString },
    age: { type: GraphQLInt },
    friends: { 
      type: new GraphQLList(UserType), 
      resolve: (user) => Database.getFriends(user.id) 
    }
  })
})

# Define a GraphQLSchema with queries for fetching single user by id and all users
const UserSchema = new GraphQLSchema({
  query: new GraphQLObjectType({
    name: 'Query',
    fields: () => ({
      # Query to fetch a single user by id
      user: {
        type: UserType,
        args: {
          id: { type: GraphQLInt }
        },
        resolve: (_, { id }) => Database.getUser(id)
      },
      # Query to fetch all users
      allUsers: {
        type: new GraphQLList(UserType),
        resolve: () => Database.getAllUsers()
      }
    })
  })
})

# Sample query to retrieve a user's name and their friends' names
{
  user(id: 1) {
    name,
    friends {
      name
    }
  }
}
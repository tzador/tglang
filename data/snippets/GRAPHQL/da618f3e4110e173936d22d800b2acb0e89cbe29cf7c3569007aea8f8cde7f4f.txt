enum Gender {  // enum type to represent genders
    MALE  // male gender
    FEMALE  // female gender
    OTHER  // other non-binary genders
}

type User {  // type to represent a user
    id: ID!  // unique identifier for the user
    name: String!  // name of the user
    age: Int!  // age of the user
    email: String!  // email address of the user
    gender: Gender!  // gender of the user
}

input UserInput {  // input type for creating a new user
    name: String!  // name of the user
    age: Int!  // age of the user
    email: String!  // email address of the user
    gender: Gender!  // gender of the user
}

type Query {  // query type to fetch data
    users: [User!]!  // query to fetch list of all users
    user(id: ID!): User  // query to fetch a specific user by ID
}

type Mutation {  // mutation type to modify data
    createUser(input: UserInput!): User!  // mutation to create a new user
    updateUser(id: ID!, input: UserInput!): User!  // mutation to update an existing user
    deleteUser(id: ID!): ID  // mutation to delete a user by ID
}

schema {  // root schema to define query and mutation types
    query: Query  // defines the query type
    mutation: Mutation  // defines the mutation type
}
type Query {
  # Retrieve a single user with the given id
  user(id: ID!): User
  # Retrieve a list of all users
  allUsers: [User]
}

type User {
  id: ID!
  # First name of the user
  firstName: String
  # Last name of the user
  lastName: String
  # Age of the user
  age: Int
  # Email address of the user
  email: String
  # Address of the user
  address: Address
}

type Address {
  # Street address
  street: String
  # City
  city: String
  # Country
  country: String
}

type Mutation {
  # Create a new user
  createUser(input: UserInput!): User
  # Update a user with the given id
  updateUser(id: ID!, input: UserInput!): User
  # Delete a user with the given id
  deleteUser(id: ID!): User
}

input UserInput {
  # First name of the user
  firstName: String
  # Last name of the user
  lastName: String
  # Age of the user
  age: Int
  # Email address of the user
  email: String
  # Address of the user
  address: AddressInput
}

input AddressInput {
  # Street address
  street: String
  # City
  city: String
  # Country
  country: String
}
const { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLInt, GraphQLList } = require('graphql');
// import necessary modules for GraphQL schema

// Define custom type for a user
const UserType = new GraphQLObjectType({
  name: 'User',
  fields: {
    name: { type: GraphQLString },
    age: { type: GraphQLInt },
    friends: { type: GraphQLList(UserType) }
  }
});

// Define the schema with UserType as the root type
const schema = new GraphQLSchema({
  query: new GraphQLObjectType({
    name: 'Query',
    fields: {
      user: {
        type: UserType,
        resolve: (parent, args) => {
          // mock data for user object
          return {
            name: 'John',
            age: 25,
            friends: [
              { name: 'Jane', age: 24 },
              { name: 'Bob', age: 26 }
            ]
          }
        }
      }
    }
  })
});

// Sample query for retrieving user data
const query = `
  query {
    user {
      name
      age
      friends {
        name
        age
      }
    }
  }
`;

// Execute the query and log the response
graphql(schema, query).then(response => console.log(response));
type Article {
  id: ID
  title: String
  content: String
  author: User
}

type Query {
  article(id: ID): Article
  articles(limit: Int, offset: Int): [Article]
}

type Mutation {
  createArticle(title: String, content: String, authorId: ID): Article
  updateArticle(id: ID, title: String, content: String): Article
  deleteArticle(id: ID): ID
}

type User {
  id: ID
  name: String
  articles: [Article]
}

schema {
  query: Query
  mutation: Mutation
}

# Comment: This is a GraphQL schema that defines the data structures and operations available to a client. It defines a type Article with an ID, title, content, and an author who is of type User. 
# Then, we have a type Query with two fields: article and articles. article takes in an ID as an argument and returns an Article, while articles takes in limit and offset arguments and returns an array of Articles. 
# The type Mutation has three fields: createArticle, updateArticle, and deleteArticle. createArticle takes in the title, content, and author's ID as arguments and returns an Article. updateArticle takes in an ID, title, and content as arguments and returns an updated Article. deleteArticle takes in an ID as an argument and returns the ID of the deleted Article. 
# Lastly, we have a type User with an ID, name, and an array of Articles that the user has authored. The schema defines its query and mutation as the Query and Mutation types, respectively.
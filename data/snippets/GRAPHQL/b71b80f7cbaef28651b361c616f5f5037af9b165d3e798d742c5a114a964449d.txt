// Define a GraphQL schema
const schema = buildSchema(`
  type Query {
    book(id: Int!): Book
  }

  type Book {
    id: ID!
    title: String!
    author: String!
  }
`);

// Define a resolver function for the book query
const bookResolver = (args) => {
  // Make a database call to retrieve the book with the given id
  const bookData = db.get(`SELECT * FROM books WHERE id = ${args.id}`);

  // Return the data retrieved from the database as a Book object
  return {
    id: bookData.id,
    title: bookData.title,
    author: bookData.author
  }
}

// Create a root resolver object that maps resolver functions to their corresponding queries
const root = {
  book: bookResolver,
};

// Execute a GraphQL query
const result = graphql(
  schema,
  `{
    book(id: 1) {
      id
      title
      author
    }
  }`,
  root
);

// The result should contain the data for the book with id = 1
console.log(result);
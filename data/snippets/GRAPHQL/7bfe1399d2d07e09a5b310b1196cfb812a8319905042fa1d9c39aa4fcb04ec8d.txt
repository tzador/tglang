enum Color {           //Define an Enum type for colors
  RED                   //Possible values
  BLUE
  YELLOW
  GREEN
}

interface Shape {       //Define an interface for shapes
  id: ID
  color: Color         //Reference the Enum type for color
  area: Float
}

type Circle implements Shape {   //Define a type for circle that implements the Shape interface
  id: ID
  color: Color
  radius: Float
  area: Float
}

type Rectangle implements Shape { //Define a type for rectangle that implements the Shape interface
  id: ID
  color: Color
  length: Float
  width: Float
  area: Float
}

type Query {           //Define a type for GraphQL queries
  circle(id: ID): Circle   //Query to retrieve a specific circle with provided ID
  rectangle(id: ID): Rectangle  //Query to retrieve a specific rectangle with provided ID
  shapes(color: Color, areaGreaterThan: Float): [Shape]  //Query to retrieve shapes with provided color and area larger than specified value
}

type Mutation {        //Define a type for GraphQL mutations
  addCircle(radius: Float!, color: Color!, area: Float!): Circle  //Mutation to add a new circle with provided radius, color, and area
  addRectangle(length: Float!, width: Float!, color: Color!, area: Float!): Rectangle  //Mutation to add a new rectangle with provided length, width, color, and area
}
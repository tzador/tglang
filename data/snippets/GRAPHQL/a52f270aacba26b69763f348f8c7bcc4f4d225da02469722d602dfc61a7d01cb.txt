type Query { // Defines the queries that can be made in GraphQL
  employee(id: ID!): Employee // Allows for a query with an ID parameter to retrieve a single employee
  department(id: ID!): Department // Allows for a query with an ID parameter to retrieve a single department
  employeeList(search: String, limit: Int): [Employee] // Allows for a query with optional search and limit parameters to retrieve a list of employees
  departmentList: [Department] // Allows for a query to retrieve a list of all departments
}

type Employee { // Defines the Employee type
  id: ID! // Unique identifier for the employee
  name: String! // The name of the employee
  age: Int // The age of the employee, optional
  role: String // The role of the employee, optional
  department: Department! // The department the employee belongs to
}

type Department { // Defines the Department type
  id: ID! // Unique identifier for the department
  name: String! // The name of the department
  location: String // The location of the department, optional
  employees: [Employee] // The list of employees in the department
}

type Mutation { // Defines the mutations that can be made in GraphQL
  addEmployee(name: String!, age: Int!, role: String!, departmentId: ID!): Employee // Allows for mutation to add a new employee with required name, age, role, and departmentId parameters
  updateEmployee(id: ID!, name: String, age: Int, role: String, departmentId: ID): Employee // Allows for mutation to update an existing employee with optional parameters
  deleteEmployee(id: ID!): Employee // Allows for mutation to delete an employee with the given ID
  addDepartment(name: String!, location: String): Department // Allows for mutation to add a new department with required name and optional location parameters
  updateDepartment(id: ID!, name: String, location: String): Department // Allows for mutation to update an existing department with optional parameters
  deleteDepartment(id: ID!): Department // Allows for mutation to delete a department with the given ID
}

schema { // Defines the schema for the GraphQL server
  query: Query // Specifies the available query fields in the schema
  mutation: Mutation // Specifies the available mutation fields in the schema
}
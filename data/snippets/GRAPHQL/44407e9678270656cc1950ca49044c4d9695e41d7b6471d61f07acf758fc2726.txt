# Define the schema of the GraphQL API, including the object types, fields and their respective data types
type Query {
    # Query to retrieve a list of users
    users: [User!]

    # Query to retrieve a specific user by their ID
    user(id: ID!): User

    # Query to retrieve a list of posts
    posts: [Post!]
}

# Define the User type, including its fields and respective data types
type User {
    id: ID!
    name: String!
    email: String!
    posts: [Post!]
}

# Define the Post type, including its fields and respective data types
type Post {
    id: ID!
    title: String!
    content: String!
    author: User!
}

# Define the mutations that can be performed in the GraphQL API, including the input types and their respective data types
type Mutation {
    # Mutation to create a new user
    createUser(input: CreateUserInput!): User!

    # Mutation to update an existing user
    updateUser(id: ID!, input: UpdateUserInput!): User!

    # Mutation to create a new post
    createPost(input: CreatePostInput!): Post!

    # Mutation to update an existing post
    updatePost(id: ID!, input: UpdatePostInput!): Post!
}

# Define the input type for creating a new user, including the fields and their respective data types
input CreateUserInput {
    name: String!
    email: String!
}

# Define the input type for updating an existing user, including the fields and their respective data types
input UpdateUserInput {
    name: String
    email: String
}

# Define the input type for creating a new post, including the fields and their respective data types
input CreatePostInput {
    title: String!
    content: String!
    authorId: ID!
}

# Define the input type for updating an existing post, including the fields and their respective data types
input UpdatePostInput {
    title: String
    content: String
}
const express = require('express'); // Import express package
const { ApolloServer, gql } = require('apollo-server-express'); // Import Apollo Server and GraphQL package
const app = express(); // Initialize express app
const typeDefs = gql` // Define GraphQL schema using gql tagged template literal
  type User { // Create 'User' type
    id: ID!, // Define 'id' field as non-null ID type
    name: String!, // Define 'name' field as non-null String type
    age: Int // Define 'age' field as nullable Int type
  }
  type Query { // Create 'Query' type
    users: [User]! // Define 'users' field as non-null list of 'User' type
  }
`;
const users = [ // Define array of user data
  { id: 1, name: 'John', age: 28 },
  { id: 2, name: 'Jane', age: 32 },
  { id: 3, name: 'Bob', age: null }
];
const resolvers = { // Define resolvers to map GraphQL queries to data
  Query: { // Define 'Query' resolver
    users: () => users // Return array of user data for 'users' query
  }
};
const server = new ApolloServer({ // Initialize Apollo Server
  typeDefs, // Pass in schema
  resolvers // Pass in resolvers
});
server.applyMiddleware({ app }); // Apply middleware to express app
app.listen({ port: 4000 }, () => { // Start express app on port 4000
  console.log(`Server running at http://localhost:4000${server.graphqlPath}`); // Log server URL with GraphQL endpoint
});
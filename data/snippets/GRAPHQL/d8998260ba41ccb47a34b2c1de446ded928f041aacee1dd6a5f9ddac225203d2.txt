# GraphQL Schema Definition
type Query {
  book(id: Int!): Book  # returns a single book based on its ID
  author(id: Int!): Author  # returns a single author based on their ID
  books(limit: Int = 10, offset: Int = 0): [Book]  # returns a list of books with optional parameters for limiting and offsetting results
  authors(limit: Int = 10, offset: Int = 0): [Author]  # returns a list of authors with optional parameters for limiting and offsetting results
}

type Book {
  id: ID!
  title: String!
  author: Author!
  genre: String
  publicationDate: String
  rating: Float
}

type Author {
  id: ID!
  name: String!
  books: [Book]  # returns a list of books written by the author
  nationality: String
  dateOfBirth: String
}

# Example query to get a specific book
query {
  book(id: 1) {
    title
    author {
      name
      nationality
    }
    genre
    publicationDate
    rating
  }
}

# Example query to get a list of books with limiting and offsetting results
query {
  books(limit: 5, offset: 10) {
    title
    author {
      name
      nationality
    }
    genre
    publicationDate
    rating
  }
}
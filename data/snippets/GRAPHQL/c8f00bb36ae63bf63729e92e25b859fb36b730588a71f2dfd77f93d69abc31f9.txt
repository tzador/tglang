Type User {
  # The unique ID of the user
  id: ID!

  # The user's first name
  firstName: String!

  # The user's last name
  lastName: String!

  # The user's email address
  email: String!

  # A list of the user's posts
  posts: [Post]

  # The user's age
  age: Int

  # The user's date of birth
  dob: Date
}

# Defines the schema for a Post
Type Post {
  # The unique ID of the post
  id: ID!

  # The title of the post
  title: String!

  # The content of the post
  content: String!

  # The user who created the post
  author: User!

  # The date the post was published
  publishedDate: Date
}

# Defines the schema for querying users
Type Query {
  # Retrieves a single user by their unique ID
  getUser(id: ID!): User

  # Retrieves all users matching the given first name
  getUsersByFirstName(firstName: String!): [User]

  # Retrieves all posts from a specific author
  getPostsByAuthor(authorID: ID!): [Post]
}

# Defines the schema for creating new data objects
Type Mutation {
  # Creates a new user
  createUser(firstName: String!, lastName: String!, email: String!, age: Int, dob: Date): User!

  # Creates a new post
  createPost(title: String!, content: String!, authorID: ID!): Post!

  # Updates an existing user's information
  updateUser(id: ID!, firstName: String, lastName: String, email: String, age: Int, dob: Date): User!

  # Updates an existing post's information
  updatePost(id: ID!, title: String, content: String): Post!

  # Deletes a user
  deleteUser(id: ID!): User!

  # Deletes a post
  deletePost(id: ID!): Post!
}

# Defines the schema for subscribing to real-time data changes
Type Subscription {
  # Subscribes to new user creations
  onNewUser: User

  # Subscribes to new post creations
  onNewPost: Post

  # Subscribes to updates for a specific user
  onUpdateUser(id: ID!): User

  # Subscribes to updates for a specific post
  onUpdatePost(id: ID!): Post

  # Subscribes to deletions of a specific user
  onDeleteUser(id: ID!): User

  # Subscribes to deletions of a specific post
  onDeletePost(id: ID!): Post
}

# Defines custom scalar types
Scalar Date
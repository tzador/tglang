type Query {
  books: [Book!]! # This field returns a list of all books in the database
  authors: [Author!]! # This field returns a list of all authors in the database
}

type Book {
  id: ID! # Unique identifier for the book
  title: String! # Title of the book
  genre: [String!]! # List of genres associated with the book
  author: Author! # Author of the book
  ratings: [Int!] # List of ratings given by users for the book
}

type Author {
  id: ID! # Unique identifier for the author
  name: String! # Name of the author
  books: [Book!]! # List of books written by the author
  bio: String # Biography of the author
}

# Query for getting all books
query {
  books {
    id
    title
    genre
    author {
      name
    }
    ratings
  }
}

# Query for getting all authors
query {
  authors {
    id
    name
    books {
      title
      ratings
    }
    bio
  }
}

# Mutation for adding a new book
mutation {
  addBook(title: String!, genre: [String!]!, author: String!) {
    id
    title
    genre
    author {
      name
    }
    ratings
  }
}

# Mutation for adding a new author
mutation {
  addAuthor(name: String!, bio: String) {
    id
    name
    books {
      title
      ratings
    }
    bio
  }
}

# Subscription for getting real-time updates on book ratings
subscription {
  bookRatingsUpdate {
    id
    title
    genre
    author {
      name
    }
    ratings
  }
}
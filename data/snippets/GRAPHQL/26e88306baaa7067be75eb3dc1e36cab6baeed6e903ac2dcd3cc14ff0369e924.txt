{
  # queries for getting a list of all users
  usersList: [User]

  # queries for getting a specific user by their ID
  user(id: ID!): User

  # queries for getting a list of all posts
  postsList: [Post]

  # queries for getting a specific post by its ID
  post(id: ID!): Post
}

type User {
  # unique identifier for each user
  id: ID!

  # user's first name
  firstName: String!

  # user's last name
  lastName: String!

  # user's email address
  email: String!

  # number of posts written by the user
  postsCount: Int!

  # queries for getting the user's posts
  posts: [Post]
}

type Post {
  # unique identifier for each post
  id: ID!

  # title of the post
  title: String!

  # content of the post
  body: String!

  # date the post was created
  dateCreated: String!

  # user who wrote the post
  author: User!

  # queries for getting the post's comments
  comments: [Comment]
}

type Comment {
  # unique identifier for each comment
  id: ID!

  # content of the comment
  body: String!

  # date the comment was created
  dateCreated: String!

  # user who wrote the comment
  author: User!

  # post the comment was written on
  post: Post!
}

schema {
  query: Query
}
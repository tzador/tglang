const express = require('express');
const { ApolloServer, gql } = require('apollo-server-express');

// GraphQL schema
const typeDefs = gql`
  type Book {
    title: String
    author: String
  }

  type Query {
    books: [Book]
  }

  type Mutation {
    addBook(title: String, author: String): Book
  }
`;

// Dummy data
let books = [
  {
    title: "The Great Gatsby",
    author: "F. Scott Fitzgerald"
  },
  {
    title: "Pride and Prejudice",
    author: "Jane Austen"
  },
  {
    title: "To Kill a Mockingbird",
    author: "Harper Lee"
  }
]

// Resolvers
const resolvers = {
  Query: {
    books: () => books
  },
  Mutation: {
    addBook: (parent, { title, author }) => {
      // Create new book object
      const newBook = { title, author };
      // Add new book to books array
      books.push(newBook);
      // Return the newly added book
      return newBook;
    }
  }
};

// Create Apollo server and define typeDefs and resolvers
const server = new ApolloServer({ typeDefs, resolvers });

// Create express app
const app = express();

// Apply Apollo server as middleware to express app
server.applyMiddleware({ app });

// Start server
app.listen({ port: 4000 }, () => {
  console.log(`Server running at http://localhost:4000${server.graphqlPath}`);
});
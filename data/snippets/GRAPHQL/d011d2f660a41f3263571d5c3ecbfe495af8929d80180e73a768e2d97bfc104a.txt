//This code snippet creates a GraphQL schema for a blog post

type Query { //Defines the query type for retrieving data
  posts: [Post!]!  //Defines the 'posts' field that returns an array of non-nullable 'Post' objects
  post(id: ID!): Post //Defines the 'post' field that takes an 'id' argument and returns a single 'Post' object
}

type Mutation { //Defines the mutation type for modifying data
  createPost(author: String!, title: String!, content: String!): Post //Defines the 'createPost' field that takes in three arguments and returns a 'Post' object
  updatePost(id: ID!, author: String, title: String, content: String): Post //Defines the 'updatePost' field that takes in an 'id' argument and optional 'author', 'title', and 'content' arguments and returns a 'Post' object
  deletePost(id: ID!): Boolean! //Defines the 'deletePost' field that takes in an 'id' argument and returns a Boolean value
}

type Post { //Defines the 'Post' object type
  id: ID! //Defines the 'id' field of type 'ID' which is non-nullable
  author: String! //Defines the 'author' field of type 'String' which is non-nullable
  title: String! //Defines the 'title' field of type 'String' which is non-nullable
  content: String! //Defines the 'content' field of type 'String' which is non-nullable
  createdAt: String! //Defines the 'createdAt' field of type 'String' which is non-nullable
  updatedAt: String //Defines the 'updatedAt' field of type 'String' which is nullable
}

//Example query to retrieve all posts:
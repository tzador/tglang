type Query {
  pets(id: Int!): [Pet!]! // defines a new GraphQL object type called "Query" with a field "pets" that takes in an integer argument "id" and returns an array of "Pet" objects
}

type Pet { // defines the "Pet" object type
  id: Int! // defines a non-null integer field "id"
  name: String! // defines a non-null string field "name"
  age: Int // defines an optional integer field "age"
  owner: Owner // defines a field "owner" that is of the "Owner" object type
}

type Owner { // defines the "Owner" object type
  id: Int!
  name: String!
  pets: [Pet!]! // defines a field "pets" that returns an array of "Pet" objects
}

input PetInput { // defines an input object type "PetInput"
  name: String! // defines a non-null string field "name"
  age: Int // defines an optional integer field "age"
  ownerId: Int // defines an optional integer field "ownerId"
}

type Mutation { // defines a new GraphQL object type called "Mutation" that is used for writing data
  addPet(pet: PetInput!): Pet // defines a mutation "addPet" that takes in an argument "pet" of type "PetInput" and returns a "Pet" object
  deletePet(id: Int!): Boolean // defines a mutation "deletePet" that takes in an argument "id" and returns a boolean indicating if the object was successfully deleted
}

schema {
  query: Query // declares the top-level query object type
  mutation: Mutation // declares the top-level mutation object type
}
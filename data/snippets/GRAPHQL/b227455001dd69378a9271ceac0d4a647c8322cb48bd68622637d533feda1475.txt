/*
    Schema Definition:
    This is the schema definition for a GraphQL API that allows for querying, adding, and updating users and their associated posts and comments. 
*/

type User {
    id: ID!
    name: String!
    email: String!
    posts: [Post!]!
    comments: [Comment!]!
}

type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
    comments: [Comment!]!
}

type Comment {
    id: ID!
    body: String!
    author: User!
    post: Post!
}

/*
    Query Types:
    This section defines all the possible queries that can be made on the GraphQL API.
*/

type Query {
    getUser(id: ID!): User!
    getAllUsers: [User!]!
    getPost(id: ID!): Post!
    getAllPosts: [Post!]!
    getComment(id: ID!): Comment!
    getAllComments: [Comment!]!
}

/*
    Mutation Types:
    This section defines all the possible mutations that can be made on the GraphQL API.
*/

type Mutation {
    addUser(name: String!, email: String!): User!
    updateUser(id: ID!, name: String, email: String): User!
    addPost(title: String!, body: String!, authorId: ID!): Post!
    updatePost(id: ID!, title: String, body: String): Post!
    addComment(body: String!, authorId: ID!, postId: ID!): Comment!
    updateComment(id: ID!, body: String): Comment!
}

/*
    Root Query and Mutation Types:
    This section defines the root query and mutation types for the GraphQL API.
*/

schema {
    query: Query
    mutation: Mutation
}
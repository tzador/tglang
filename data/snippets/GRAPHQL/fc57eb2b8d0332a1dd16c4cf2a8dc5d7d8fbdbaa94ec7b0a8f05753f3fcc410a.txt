type Movie {                     // Define a type for movie data
  title: String!                 // 'title' field of type String and is required
  year: Int                      // 'year' field of type Int
  genre: [String!]!              // 'genre' field of type list of Strings and is required
  director: String               // 'director' field of type String
  actors: [Actor!]               // 'actors' field of type list of Actors (another custom type)
  rating: Float                  // 'rating' field of type Float
  plot: String!                  // 'plot' field of type String and is required
}

type Actor {                     // Define a type for actor data
  name: String!                  // 'name' field of type String and is required
  age: Int                       // 'age' field of type Int
  nationality: String!           // 'nationality' field of type String and is required
  bestMovie: Movie               // 'bestMovie' field of type Movie (another custom type)
}

query {                          // Declare a GraphQL query
  movie(id: ID!): Movie          // 'movie' query with an 'id' argument of type ID and returns a Movie object
}

mutation {                       // Declare a GraphQL mutation
  addMovie(title: String!, year: Int!, genre: [String!]!, director: String, actors: [Actor!]!, rating: Float!, plot: String!): Movie      // 'addMovie' mutation with required fields of title, year, genre, rating, and plot, and optional fields of director and actors
}

type Subscription {              // Define a type for subscriptions (real-time updates)
  newMovie: Movie                // 'newMovie' subscription to receive updates whenever a new Movie is added
}
type Query {
  users: [User!]!  # declares a list of User objects in the schema
  products: [Product]  # declares a list of Product objects in the schema
}

# Defines a User object type with fields
type User {
  id: ID! # unique identifier for the user
  name: String! # user's name
  email: String! # user's email address
  age: Int # user's age, optional field
  cart: [Product] # list of products in the user's cart
}

# Defines a Product object type with fields
type Product {
  id: ID! # unique identifier for the product
  name: String! # product's name
  price: Float! # product's price
  description: String # product's description, optional field
  seller: User! # user who is selling the product
}

# Defines a Mutation object type with fields
type Mutation {
  addUser(name: String!, email: String!, age: Int): User! # adds a new user to the system
  addProduct(name: String!, price: Float!, description: String, sellerId: ID!): Product! # creates a new product listing
  addToCart(userId: ID!, productId: ID!): User! # adds a product to a user's cart
  removeFromCart(userId: ID!, productId: ID!): User! # removes a product from a user's cart
  purchase(userId: ID!): [Product]! # purchases all products in a user's cart and returns a list of purchased products
}

# Defines a Subscription object type with fields
type Subscription {
  productAdded: Product! # subscribes to new product listings being added
}
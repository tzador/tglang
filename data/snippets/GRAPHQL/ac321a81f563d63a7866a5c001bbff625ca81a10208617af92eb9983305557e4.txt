type Query {
  # The "users" query returns a list of user objects
  users: [User]
}

type User {
  # The "id" field is a unique identifier for each user
  id: ID!
  # The "name" field is a user's full name
  name: String!
  # The "email" field is a user's email address
  email: String!
  # The "age" field is a user's age
  age: Int!
  # The "posts" query returns a list of the user's posts
  posts: [Post]
}

type Post {
  # The "id" field is a unique identifier for each post
  id: ID!
  # The "title" field is the post's title
  title: String!
  # The "content" field is the post's content
  content: String!
  # The "author" field is a reference to the user who wrote the post
  author: User!
}

# This mutation allows a user to create a new post
type Mutation {
  createPost(title: String!, content: String!, authorId: ID!): Post!
}

# This subscription allows clients to receive real-time updates when a new post is created
type Subscription {
  postCreated: Post!
}
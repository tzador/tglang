type Query {
  # Defines a field named "hello" with a type of String
  hello: String
  # Defines a field named "user" with an ID type that is not nullable
  # and a resolver function that returns a User object
  user(id: ID!): User!
  # Defines a field named "allPosts" with a list type that is not nullable
  # and a resolver function that returns a list of Post objects
  allPosts: [Post!]!
}

type User {
  id: ID!
  name: String!
  email: String
  age: Int
  # Defines a field named "posts" with a list type that is not nullable
  # and a resolver function that returns a list of Post objects
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  # Defines a field named "comments" with a list type that is not nullable
  # and a resolver function that returns a list of Comment objects
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}

schema {
  query: Query
}
type User {
  id: ID!
  name: String!
  email: String!
  age: Int!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
}

type Query {
  me: User!
  post(id: ID!): Post!
  users(query: String): [User!]!
  posts(query: String): [Post!]!
}

const resolvers = {
  Query: {
    me() {
      return {
        id: 'abc123',
        name: 'John',
        email: 'john@test.com',
        age: 25,
        posts: [{ id: 1, title: 'First Post', body: 'This is the first post', published: true }]
      }
    },
    post(parent, args, ctx, info) {
      const post = posts.find((post) => post.id === args.id)
      if (!post) {
        throw new Error('Post not found')
      }
      return post
    },
    users(parent, args, ctx, info) {
      if (!args.query) {
        return users
      }
      return users.filter((user) => user.name.toLowerCase().includes(args.query.toLowerCase()))
    },
    posts(parent, args, ctx, info) {
      if (!args.query) {
        return posts
      }
      return posts.filter((post) => post.title.toLowerCase().includes(args.query.toLowerCase()) || post.body.toLowerCase().includes(args.query.toLowerCase()))
    }
  },
  Post: {
    author(parent, args, ctx, info) {
      return users.find((user) => user.id === parent.author)
    }
  },
  User: {
    posts(parent, args, ctx, info) {
      return posts.filter((post) => post.author === parent.id)
    }
  }
}

// Sample query to retrieve user's name and their posts
query {
  me {
    name
    posts {
      title
      body
      published
    }
  }
}

// Sample query to retrieve a specific post by ID
query {
  post(id: "1") {
    title
    body
    published
    author {
      name
      email
      age
    }
  }
}

// Sample query to search for users with a specific name
query {
  users(query: "John") {
    name
    email
    age
  }
}

// Sample query to search for posts with a specific title or body
query {
  posts(query: "first") {
    title
    body
    published
    author {
      name
      email
      age
    }
  }
}
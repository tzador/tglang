//Defining a GraphQL schema

type Query {
  books: [Book]
  authors: [Author]
}

type Book {
  id: ID
  title: String
  authorId: ID
  genre: String
  year: Int
}

type Author {
  id: ID
  name: String
  books: [Book]
}

//Defining resolvers to fetch data
//Resolvers are responsible for fetching data

const resolvers = {
  Query: {
    books: () => getBooks(),
    authors: () => getAuthors(),
  },
  Author: {
    books: (parent) => getBooksByAuthor(parent.id),
  },
};

//Sample functions to fetch data from a database

function getBooks() {
  //Code to fetch books from database
  return books;
}

function getAuthors() {
  //Code to fetch authors from database
  return authors;
}

function getBooksByAuthor(authorId) {
  //Code to fetch books by author from database
  return books.filter((book) => book.authorId === authorId);
}

//Defining the GraphQL server

const server = new ApolloServer({
  typeDefs: './schema.graphql',
  resolvers,
});

//Starting the server

server.listen().then(({ url }) => {
  console.log(`Server ready at ${url}`);
});
const { GraphQLServer } = require('graphql-yoga');

// Define types
const typeDefs = `
  type Query {
    hello(name: String): String!
    posts: [Post!]!
  }

  type Mutation {
    createPost(title: String!, content: String!): Post!
  }

  type Post {
    id: ID!
    title: String!
    content: String!
  }
`;

// Sample posts data
const posts = [
  { id: 1, title: "First post", content: "This is the first post on our blog." },
  { id: 2, title: "Second post", content: "Welcome to our blog!" }
];

// Resolver functions to handle requests
const resolvers = {
    Query: {
        hello: (parent, args, context, info) => `Hello ${args.name}`,
        posts: () => posts
    },
    Mutation: {
        createPost: (parent, args, context, info) => {
            const post = {
                id: posts.length + 1,
                title: args.title,
                content: args.content
            };
            posts.push(post);
            return post;
        }
    }
};

// Create GraphQL server
const server = new GraphQLServer({ typeDefs, resolvers });

// Start server
server.start(() => {
    console.log('Server is running on http://localhost:4000');
});
type Query {
    # Query for a specific user by their ID
    user(id: ID!): User

    # Query for a list of all users
    allUsers: [User!]!

    # Query for a specific message by its ID
    message(id: ID!): Message

    # Query for a list of all messages
    allMessages: [Message!]!
  }

  type User {
    id: ID!
    name: String!
    email: String!
    age: Int
    messages: [Message!]!
  }

  type Message {
    id: ID!
    text: String!
    date: String!
    sender: User!
  }

  type Mutation {
    # Create a new user
    createUser(name: String!, email: String!, age: Int): User!

    # Update a user's information
    updateUser(id: ID!, name: String, email: String, age: Int): User!

    # Delete a user
    deleteUser(id: ID!): User!

    # Create a new message
    createMessage(text: String!, date: String!, senderId: ID!): Message!

    # Update a message's text
    updateMessage(id: ID!, text: String!): Message!

    # Delete a message
    deleteMessage(id: ID!): Message!
  }
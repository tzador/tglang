const { GraphQLServer } = require('graphql-yoga');

// Define typeDefs and resolvers
const typeDefs = `
  type Query {
    students: [Student!]!
    teachers: [Teacher!]!
  }

  type Student {
    id: String!
    name: String!
    age: Int!
    grades: [Int!]!
  }

  type Teacher {
    id: String!
    name: String!
    subject: String!
    students: [Student!]!
  }

  type Mutation {
    addStudent(name: String!, age: Int!, grades: [Int!]!): Student!
    addTeacher(name: String!, subject: String!, students: [ID!]!): Teacher!
  }
`

const resolvers = {
  Query: {
    students: () => [{
      id: '1',
      name: 'John Doe',
      age: 18,
      grades: [85, 90, 75, 95]
    }],
    teachers: () => [{
      id: '1',
      name: 'Jane Smith',
      subject: 'Mathematics',
      students: ['1']
    }]
  },
  Mutation: {
    addStudent: (_, { name, age, grades }) => {
      const newStudent = {
        id: Math.floor(Math.random() * 1000).toString(),
        name,
        age,
        grades
      }

      Students.push(newStudent);
      return newStudent;
    },
    addTeacher: (_, { name, subject, students }) => {
      const newTeacher = {
        id: Math.floor(Math.random() * 1000).toString(),
        name,
        subject,
        students
      }

      Teachers.push(newTeacher);
      return newTeacher;
    }
  }
}

// Create GraphQL server
const server = new GraphQLServer({ typeDefs, resolvers })

// Start server
server.start(() => console.log('Server is running on http://localhost:4000'))
type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  friends: [User]
  posts: [Post]
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment]
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}

type Query {
  users: [User]
  user(id: ID!): User
  posts: [Post]
  post(id: ID!): Post
  comments: [Comment]
  comment(id: ID!): Comment
}

type Mutation {
  createUser(name: String!, email: String!, age: Int): User!
  createPost(title: String!, body: String!, authorId: ID!): Post!
  createComment(text: String!, authorId: ID!, postId: ID!): Comment!
  updateUser(id: ID!, name: String, email: String, age: Int): User!
  updatePost(id: ID!, title: String, body: String): Post!
  updateComment(id: ID!, text: String): Comment!
  deleteUser(id: ID!): User!
  deletePost(id: ID!): Post!
  deleteComment(id: ID!): Comment!
}

schema {
  query: Query
  mutation: Mutation
}
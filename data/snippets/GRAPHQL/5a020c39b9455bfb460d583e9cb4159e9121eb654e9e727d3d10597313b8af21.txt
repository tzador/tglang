# Define a GraphQL schema
 
type Author {
  id: ID!
  name: String!
  books: [Book!]!
}
 
type Book {
  id: ID!
  title: String!
  genre: String!
  author: Author!
  reviews: [Review!]
}
 
type Review {
  id: ID!
  content: String!
  book: Book!
}
 
# Define root query to fetch data
 
type Query {
  # Get a single author by ID
  author(id: ID!): Author
 
  # Get a single book by ID
  book(id: ID!): Book
 
  # Get all authors
  authors: [Author!]!
 
  # Get all books
  books: [Book!]!
 
  # Get all reviews for a specific book
  reviews(bookId: ID!): [Review!]!
}
 
# Define mutations to create, update, and delete data
 
type Mutation {
  # Create a new author
  createAuthor(name: String!): Author!
 
  # Update an existing author's name
  updateAuthor(id: ID!, name: String!): Author!
 
  # Delete an author
  deleteAuthor(id: ID!): Author
 
  # Create a new book
  createBook(title: String!, genre: String!, authorId: ID!): Book!
 
  # Update an existing book's details
  updateBook(id: ID!, title: String, genre: String): Book!
 
  # Delete a book
  deleteBook(id: ID!): Book
 
  # Create a new review for a specific book
  createReview(bookId: ID!, content: String!): Review!
 
  # Update an existing review's content
  updateReview(id: ID!, content: String!): Review!
 
  # Delete a review
  deleteReview(id: ID!): Review
}
type Query {
    # The "user" query returns information about a specific user, based on their ID.
    user(id: ID!): User
    # The "users" query returns a list of all users.
    users: [User]
}

# The "User" type defines the fields that can be queried on a user.
type User {
    id: ID!
    name: String!
    username: String!
    email: String!
    posts: [Post]
}

# The "Post" type defines the fields that can be queried on a post.
type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
    comments: [Comment]
}

# The "Comment" type defines the fields that can be queried on a comment.
type Comment {
    id: ID!
    body: String!
    author: User!
    post: Post!
}

# The "createUser" mutation allows users to create a new user.
mutation createUser($name: String!, $username: String!, $email: String!) {
    createUser(name: $name, username: $username, email: $email) {
        id
        name
        username
        email
    }
}

# The "createPost" mutation allows users to create a new post.
mutation createPost($userId: ID!, $title: String!, $body: String!) {
    createPost(userId: $userId, title: $title, body: $body) {
        id
        title
        body
        author {
            id
            name
            username
            email
        }
        comments {
            id
            body
            author {
                id
                name
                username
                email
            }
        }
    }
}

# The "createComment" mutation allows users to create a new comment on a post.
mutation createComment($postId: ID!, $body: String!) {
    createComment(postId: $postId, body: $body) {
        id
        body
        author {
            id
            name
            username
            email
        }
        post {
            id
            title
            body
        }
    }
}
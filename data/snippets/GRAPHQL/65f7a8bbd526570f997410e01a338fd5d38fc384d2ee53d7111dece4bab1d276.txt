# Define object type for a user including fields for name, age, and email
type User {
  name: String!
  age: Int!
  email: String!
}

# Define query type for GraphQL API
type Query {
  # Query to get a specific user by ID, takes in an ID argument
  getUser(id: ID!): User!

  # Query to get a list of all users
  getAllUsers: [User!]!

  # Query to search for users based on name and age, takes in name and age arguments 
  searchUsers(name: String!, age: Int!): [User!]!
}

# Define mutation type for GraphQL API
type Mutation {
  # Mutation to create a new user, takes in name, age, and email arguments 
  createUser(name: String!, age: Int!, email: String!): User!

  # Mutation to update a specific user's information, takes in ID and new information arguments 
  updateUser(id: ID!, name: String, age: Int, email: String): User!

  # Mutation to delete a specific user, takes in ID argument 
  deleteUser(id: ID!): User!
}
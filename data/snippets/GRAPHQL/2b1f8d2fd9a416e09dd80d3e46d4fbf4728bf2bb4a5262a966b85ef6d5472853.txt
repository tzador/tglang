type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post]
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment!]
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}

# Query to get all users
query {
  users {
    id
    name
    email
    age
    posts {
      id
      title
      body
      comments {
        id
        text
      }
    }
  }
}

# Query to get a single user by ID
query {
  user(id: "123") {
    id
    name
    email
    age
    posts {
      id
      title
      body
      comments {
        id
        text
      }
    }
  }
}

# Mutation to create a new user
mutation {
  createUser(name: "John", email: "john@example.com", age: 30) {
    id
    name
    email
    age
  }
}

# Mutation to update a user by ID
mutation {
  updateUser(id: "123", name: "Jane", age: 25) {
    id
    name
    email
    age
  }
}

# Mutation to delete a user by ID
mutation {
  deleteUser(id: "123") {
    id
    name
    email
    age
  }
}

# Query to get all posts
query {
  posts {
    id
    title
    body
    author {
      id
      name
      email
    }
    comments {
      id
      text
      author {
        id
        name
      }
    }
  }
}

# Query to get a single post by ID
query {
  post(id: "123") {
    id
    title
    body
    author {
      id
      name
      email
    }
    comments {
      id
      text
      author {
        id
        name
      }
    }
  }
}

# Mutation to create a new post
mutation {
  createPost(title: "New Post", body: "This is a new post", authorId: "123") {
    id
    title
    body
    author {
      id
      name
      email
    }
  }
}

# Mutation to update a post by ID
mutation {
  updatePost(id: "123", title: "Updated Post", body: "This post has been updated") {
    id
    title
    body
  }
}

# Mutation to delete a post by ID
mutation {
  deletePost(id: "123") {
    id
    title
    body
  }
}

# Query to get all comments
query {
  comments {
    id
    text
    author {
      id
      name
      email
    }
    post {
      id
      title
      body
    }
  }
}

# Query to get a single comment by ID
query {
  comment(id: "123") {
    id
    text
    author {
      id
      name
      email
    }
    post {
      id
      title
      body
    }
  }
}

# Mutation to create a new comment
mutation {
  createComment(text: "New comment", authorId: "123", postId: "456") {
    id
    text
    author {
      id
      name
      email
    }
    post {
      id
      title
      body
    }
  }
}

# Mutation to update a comment by ID
mutation {
  updateComment(id: "123", text: "Updated comment") {
    id
    text
    author {
      id
      name
      email
    }
    post {
      id
      title
      body
    }
  }
}

# Mutation to delete a comment by ID
mutation {
  deleteComment(id: "123") {
    id
    text
    author {
      id
      name
    }
    post {
      id
      title
      body
    }
  }
}
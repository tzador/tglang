type Query {
  employee(id: ID!): Employee # returns a single employee by their ID
  companyEmployees(companyName: String!): [Employee!]! # returns a list of employees in a specified company
}

type Employee {
  id: ID!
  name: String!
  position: String!
  salary: Int!
  company: String!
  projects: [Project!]! # list of projects an employee is assigned to
}

type Project {
  id: ID!
  name: String!
  startDate: String!
  endDate: String
  status: String
}

type Mutation {
  addEmployee(name: String!, position: String!, salary: Int!, company: String!): Employee # adds a new employee to a company
  updateEmployee(id: ID!, name: String, position: String, salary: Int, company: String): Employee # updates an existing employee's information
  deleteEmployee(id: ID!): Boolean # deletes an employee from the database
}
# This is a GraphQL schema for a blog content management system

type User {
  id: ID!
  username: String!
  email: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  content: String!
  author: User!
  post: Post!
}

# Query to get a single user and their posts with comments
query {
  user(id: "123") {
    id
    username
    email
    posts {
      id
      title
      content
      comments {
        id
        content
        author {
          id
          username
        }
      }
    }
  }
}

# Query to get all posts with comments and their authors
query {
  posts {
    id
    title
    content
    comments {
      id
      content
      author {
        id
        username
      }
    }
    author {
      id
      username
      email
    }
  }
}

# Mutation to add a new post
mutation {
  addPost(
    title: "New Blog Post"
    content: "This is a new post about GraphQL"
    authorID: "123"
  ) {
    id
    title
    content
    author {
      id
      username
    }
  }
}

# Mutation to add a new comment to a post
mutation {
  addComment(
    content: "Great post!"
    authorID: "456"
    postID: "789"
  ) {
    id
    content
    author {
      id
      username
    }
    post {
      id
      title
      content
      author {
        id
        username
        email
      }
    }
  }
}

# Subscription to get real-time updates on post and comment creation
subscription {
  newPost {
    id
    title
    content
    author {
      id
      username
      email
    }
  }
}

subscription {
  newComment {
    id
    content
    author {
      id
      username
    }
    post {
      id
      title
      content
      author {
        id
        email
      }
    }
  }
}
//Defining the schema
type Query {
  getPosts(limit: Int): [Post]
}

type Post {
  title: String
  content: String
  author: String
}

//Resolvers for the Query type
const resolvers = {
  Query: {
    getPosts: (parent, args, context) => {
      //getPosts resolver logic
      const { limit } = args;
      return context.PostModel.find().limit(limit);
    }
  }
};

//Creating the server
const server = new ApolloServer({ 
  typeDefs, 
  resolvers 
});

//Connecting to MongoDB database
mongoose.connect('mongodb://localhost:27017/my_database', { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('MongoDB connected');
    //Start the server
    server.listen().then(({ url }) => {
      console.log(`Server ready at ${url}`);
    });
  })
  .catch(err => {
    console.error(`Failed to connect to MongoDB: ${err.message}`);
  });
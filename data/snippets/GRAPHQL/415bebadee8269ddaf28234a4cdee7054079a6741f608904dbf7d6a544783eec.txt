const { ApolloServer, gql } = require('apollo-server');

// Define types
const typeDefs = gql`
  type Person {
    name: String
    age: Int
    hobbies: [String]
  }

  type Post {
    title: String
    content: String
    author: Person
  }

  # Define operations
  type Query {
    getPosts: [Post]
    getPeople: [Person]
  }

  type Mutation {
    createPost(title: String, content: String, author: String): Post
  }
`;

// Define resolvers
const resolvers = {
  Query: {
    getPosts: () => posts,
    getPeople: () => people,
  },
  Mutation: {
    createPost: (parent, { title, content, author }) => {
      const newPost = {
        title,
        content,
        author,
      };
      posts.push(newPost);
      return newPost;
    },
  },
};

// Create server
const server = new ApolloServer({ typeDefs, resolvers });

// Start server
server.listen().then(({ url }) => {
  console.log(`ðŸš€ Server ready at ${url}`);
});

// Sample Data
const posts = [
  {
    title: 'My First Post',
    content: 'This is the first post on my blog.',
    author: 'John Smith',
  },
  {
    title: 'GraphQL Tutorial',
    content: 'Learn how to use GraphQL in your projects.',
    author: 'Sarah Johnson',
  },
];

const people = [
  {
    name: 'John Smith',
    age: 30,
    hobbies: ['Reading', 'Coding', 'Hiking'],
  },
  {
    name: 'Sarah Johnson',
    age: 25,
    hobbies: ['Cooking', 'Dancing', 'Painting'],
  },
];
// Defining a GraphQL schema

/*
The schema defines the types of data that can be queried and
the fields available on those types.
*/

// Importing necessary dependencies and types
import { 
    GraphQLObjectType, 
    GraphQLSchema, 
    GraphQLString, 
    GraphQLInt, 
    GraphQLList 
} from 'graphql';

// Defining a Person type with fields for name and age
const PersonType = new GraphQLObjectType({
    name: 'Person',
    fields: () => ({
        name: { 
            type: GraphQLString,
            description: 'The name of the person'
        },
        age: { 
            type: GraphQLInt,
            description: 'The age of the person'
        },
    })
})

// Defining a Query type with fields for finding a person by name and getting a list of all people
const QueryType = new GraphQLObjectType({
    name: 'Query',
    fields: () => ({
        findPersonByName: {
            type: PersonType,
            description: 'Find a person by their name',
            args: {
                name: { type: GraphQLString } 
            },
            resolve: (parent, args) => {
                // logic for finding person by name
            }
        },
        getAllPeople: {
            type: GraphQLList(PersonType),
            description: 'Get a list of all people',
            resolve: (parent, args) => {
                // logic for getting all people
            }
        }
    })
})

// Creating the GraphQL schema with the Query type as the root query
const schema = new GraphQLSchema({
    query: QueryType
})

// Exporting the schema for use in other files
export default schema;
// Define a GraphQL schema for a user profile object
type User {
  id: ID
  name: String
  age: Int
  email: String!
  posts: [Post]
}

// Define a GraphQL schema for a post object
type Post {
  id: ID
  title: String
  body: String
  author: User!
}

// Define the query type for fetching user and post data
type Query {
  // Fetch a user by their ID
  user(id: ID!): User
  // Fetch all posts
  posts: [Post]
}

// Define the mutation type for creating and updating user and post data
type Mutation {
  // Create a new user with the given fields
  createUser(name: String, age: Int, email: String!): User
  // Update a user's age by their ID
  updateUserAge(id: ID!, age: Int): User
  // Create a new post with the given fields
  createPost(title: String, body: String, authorId: ID!): Post
  // Update a post's body by its ID
  updatePostBody(id: ID, body: String): Post
}

// Define a subscription type for getting real-time updates on user activity
type Subscription {
  userActivity: UserActivity
}

// Define a user activity object for subscription updates
type UserActivity {
  userId: ID!
  action: String!
  timestamp: String!
}

// Define a schema with the defined types and operations for user profiles and posts
schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
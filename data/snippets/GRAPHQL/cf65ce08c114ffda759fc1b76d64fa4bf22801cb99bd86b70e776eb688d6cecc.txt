type User {
  id: ID!
  name: String
  email: String
  age: Int
  friends: [User]
  posts: [Post]
}

type Post {
  id: ID!
  title: String
  body: String
  author: User
  comments: [Comment]
  likes: Int
}

type Comment {
  id: ID!
  text: String
  author: User
  likes: Int
  post: Post
}

# Query to get a specific user and their posts and friends
query getUser($id:ID!) {
  user(id:$id) {
    id
    name
    email
    age
    posts {
      id
      title
      body
      author {
        id
        name
      }
      comments {
        id
        text
        author {
          id
          name
        }
        likes
      }
      likes
    }
    friends {
      id
      name
      email
      posts {
        id
        title
      }
    }
  }
}

# Mutation to create a new user
mutation createUser($name: String!, $email: String!, $age: Int!) {
  addUser(name: $name, email: $email, age: $age) {
    id
    name
    email
    age
  }
}

# Mutation to create a new post
mutation createPost($title: String!, $body: String!, $authorId: ID!) {
  addPost(title: $title, body: $body, authorId: $authorId) {
    id
    title
    body
    author {
      id
      name
      email
    }
    comments {
      id
      text
      author {
        id
        name
      }
      likes
    }
    likes
  }
}

# Mutation to create a new comment on a post
mutation createComment($postId: ID!, $text: String!, $authorId: ID!) {
  addComment(postId: $postId, text: $text, authorId: $authorId) {
    id
    text
    author {
      id
      name
      email
    }
    likes
    post {
      id
      title
    }
  }
}
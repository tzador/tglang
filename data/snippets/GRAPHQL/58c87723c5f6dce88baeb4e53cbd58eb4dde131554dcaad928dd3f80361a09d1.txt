/// Define a type for a User object
type User {
  id: ID!
  name: String!
  age: Int!
  email: String!
  address: Address
  posts: [Post]!
}

/// Define a type for an Address object
type Address {
  street: String!
  city: String!
  state: String!
  country: String!
}

/// Define a type for a Post object
type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment]!
}

/// Define a type for a Comment object
type Comment {
  id: ID!
  body: String!
  author: User!
  post: Post!
}

/// Define query types
type Query {
  /// Query to get a single user by ID
  getUser(id: ID!): User!

  /// Query to get all users
  getUsers: [User!]!

  /// Query to get a single post by ID
  getPost(id: ID!): Post!

  /// Query to get all posts
  getPosts: [Post!]!

  /// Query to get all comments
  getComments: [Comment!]!
}

/// Define mutation types
type Mutation {
  /// Mutation to add a new user
  addUser(name: String!, age: Int!, email: String!, address: AddressInput!): User!

  /// Mutation to add a new post
  addPost(title: String!, body: String!, authorID: ID!): Post!

  /// Mutation to add a new comment
  addComment(body: String!, authorID: ID!, postID: ID!): Comment!
}

/// Define input types for mutations
input AddressInput {
  street: String!
  city: String!
  state: String!
  country: String!
}

/// Define subscriptions
type Subscription {
  /// Subscription to get real-time updates of new posts
  newPost: Post!
}
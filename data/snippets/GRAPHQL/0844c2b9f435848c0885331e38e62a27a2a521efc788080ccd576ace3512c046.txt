// Define a type for a user
type User {
  id: ID
  username: String!
  email: String!
  address: Address
  posts: [Post!]!
  followers: [User!]!
  following: [User!]!
}

// Define a type for an address
type Address {
  street: String!
  city: String!
  state: String!
  country: String!
}

// Define a type for a post
type Post {
  id: ID
  title: String!
  body: String!
  author: User!
  comments: [Comment!]
  tags: [String!]!
}

// Define a type for a comment
type Comment {
  id: ID
  text: String!
  author: User!
  post: Post!
}

// Define a root query type to fetch data
type Query {
  // Fetch a single user by ID
  user(id: ID!): User

  // Fetch all posts by a specific tag
  postsByTag(tag: String!): [Post!]!

  // Fetch all users who have commented on a post
  usersByPost(id: ID!): [User!]!
}

// Define a root mutation type to create, update and delete data
type Mutation {
  // Create a new user
  createUser(username: String!, email: String!, address: AddressInput): User!

  // Update a user's email address
  updateUserEmail(id: ID!, email: String!): User!

  // Delete a post
  deletePost(id: ID!): Post!
}

// Define an input type for creating a new address
input AddressInput {
  street: String!
  city: String!
  state: String!
  country: String!
}

// Define a schema that queries and mutations can execute against
schema {
  query: Query
  mutation: Mutation
}
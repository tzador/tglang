interface User { # Creates an interface named User
  id: ID! # Specifies the field id as of ID type and non-null
  name: String! # Specifies the field name as of String type and non-null
  email: String! # Specifies the field email as of String type and non-null
  age: Int # Specifies the field age as of Int type
  username: String! # Specifies the field username as of String type and non-null
  password: String! # Specifies the field password as of String type and non-null
  createdAt: String! # Specifies the field created at as of String type and non-null
  updateAt: String # Specifies the field update at as of String type
}

type Query { # Creates a type named Query
  users: [User]! # Specifies the field users as a list of Users and non-null
}

type Mutation { # Creates a type named Mutation
  createUser(id: ID!, name: String!, email: String!, age: Int, username: String!, password: String!, createdAt: String!, updateAt: String): User! # Specifies the field createUser and its parameters as non-null
}

schema { # Defines the overall schema
  query: Query # Specifies the query as of type Query
  mutation: Mutation # Specifies the mutation as of type Mutation
}
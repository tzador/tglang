type Query { // creates a new type called "Query"
  getUsers: [User!]! // creates a field called "getUsers" that returns a list of User objects
}

type Mutation { // creates a new type called "Mutation"
  updateUser(id: ID!, input: UpdateUserInput!): User // creates a field called "updateUser" that takes in an ID and UpdateUserInput parameter and returns a User object
}

type User { // creates a new type called "User"
  id: ID! // creates a field called "id" that returns a unique ID
  firstName: String! // creates a field called "firstName" that returns a String
  lastName: String! // creates a field called "lastName" that returns a String
  age: Int // creates a field called "age" that returns an integer, can be null
  email: String! // creates a field called "email" that returns a String
  posts: [Post!] // creates a field called "posts" that returns a list of Post objects, can be null
}

input UpdateUserInput { // creates a new input type called "UpdateUserInput"
  firstName: String // creates a field called "firstName" that takes in a String
  lastName: String // creates a field called "lastName" that takes in a String
  age: Int // creates a field called "age" that takes in an integer
  email: String // creates a field called "email" that takes in a String
}

type Post { // creates a new type called "Post"
  id: ID! // creates a field called "id" that returns a unique ID
  title: String! // creates a field called "title" that returns a String
  content: String! // creates a field called "content" that returns a String
  author: User! // creates a field called "author" that returns a User object
  comments: [Comment!] // creates a field called "comments" that returns a list of Comment objects
}

type Comment { // creates a new type called "Comment"
  id: ID! // creates a field called "id" that returns a unique ID
  content: String! // creates a field called "content" that returns a String
  author: User! // creates a field called "author" that returns a User object
  post: Post! // creates a field called "post" that returns a Post object
}
type Query { // define a GraphQL query type
  books: [Book] // field to query for an array of books

  book(id: ID!): Book // field to query for a single book based on its ID
}

type Book { // define a GraphQL object type
  id: ID! // unique identifier for a book
  title: String! // title of the book
  author: String! // name of the author
  description: String // optional field for a book's description
  publisher: Publisher! // field to query for the book's publisher
}

type Publisher { // define a GraphQL object type for a book's publisher
  id: ID!
  name: String!
  location: String
  books: [Book!] // field to query for all the books published by this publisher
}

type Mutation { // define a GraphQL mutation type
  addBook( // mutation to add a new book
    title: String!
    author: String!
    description: String
    publisherId: ID! // publisherId is required to associate the book with a publisher
  ): Book!
}

type Subscription { // define a GraphQL subscription type
  newBookAdded: Book // subscription to get notified when a new book is added
}

schema { // define the GraphQL schema
  query: Query
  mutation: Mutation
  subscription: Subscription
}
## GraphQL schema definition

type User {
    id: ID!
    username: String!
    email: String!
    friends: [User]
}

type Post {
    id: ID!
    author: User!
    title: String!
    body: String!
    likes: Int!
}

## Query and Mutation definitions

type Query {
    getUserById(id: ID!): User
    getAllPosts: [Post]
}

type Mutation {
    createUser(username: String!, email: String!): User!
    createPost(title: String!, body: String!, authorId: ID!): Post!
}

## Resolver functions

const resolvers = {
    Query: {
        getUserById: (parent, args) => {
            // logic to retrieve user data from database
            // using args.id as query parameter
        },
        getAllPosts: () => {
            // logic to retrieve all posts from database
        }
    },
    Mutation: {
        createUser: (parent, args) => {
            // logic to create new user in database
            // using args.username and args.email
        },
        createPost: (parent, args) => {
            // logic to create new post in database
            // using args.title, args.body and args.authorId
            // and return newly created post
        }
    },
    User: {
        friends: (parent) => {
            // logic to retrieve all friends of user
            // from database using parent.id as user ID
        }
    },
    Post: {
        author: (parent) => {
            // logic to retrieve author of post
            // from database using parent.authorId as author ID
        }
    }
}

## Setup schema and resolver map

const { makeExecutableSchema } = require('graphql-tools');

const typeDefs = ``
${'#'}${'#'} paste schema definition, query and mutation definitions here ${'#'}${'#'}

const schema = makeExecutableSchema({
    typeDefs,
    resolvers
});

## Use GraphQL server

const express = require('express');
const graphqlHTTP = require('express-graphql');

const app = express();

app.use('/graphql', graphqlHTTP({
    schema: schema,
    graphiql: true // enable GraphiQL interface for testing
}));

app.listen(4000, () => {
    console.log('GraphQL server is up and running on port 4000');
});
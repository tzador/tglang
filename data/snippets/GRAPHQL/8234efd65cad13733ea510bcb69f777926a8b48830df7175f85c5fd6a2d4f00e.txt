# Define a type for a user, with fields for their name, email, and a list of their favorite movies
type User {
  name: String!
  email: String!
  favoriteMovies: [String!]!
}

# Define a query operation called "getUser" which takes in an "id" argument and returns a single User object
query getUser($id: ID!) {
  user(id: $id) {
    name
    email
    favoriteMovies
  }
}

# Define a mutation operation called "addFavoriteMovie" which takes in an "id" argument and a "movie" argument, and adds the movie to the user's favoriteMovies list
mutation addFavoriteMovie($id: ID!, $movie: String!) {
  addFavoriteMovie(id: $id, movie: $movie) {
    name
    email
    favoriteMovies
  }
}

# Define a subscription operation called "onUserUpdated" which returns a User object whenever the user is updated
subscription onUserUpdated {
  userUpdated {
    name
    email
    favoriteMovies
  }
}
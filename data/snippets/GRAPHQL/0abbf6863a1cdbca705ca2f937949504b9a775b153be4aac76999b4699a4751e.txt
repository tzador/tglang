// Define a GraphQL schema
const { buildSchema } = require('graphql');

// Creating User type
const User = new GraphQLObjectType({
  name: 'User',
  fields: () => ({
    id: { type: GraphQLID },
    name: { type: GraphQLString },
    email: { type: GraphQLString },
    age: { type: GraphQLInt }
  })
});

// Defining Resolver functions for User type
const root = {
  getUser: (args) => {
    // Code to get user from database
    return db.find();
  },
  addUser: (args) => {
    // Code to add new user to database
    const newUser = {
      id: args.id,
      name: args.name,
      email: args.email,
      age: args.age
    };
    db.push(newUser);
    return db.find();
  }
};

// Build Schema with User type and resolver functions
const schema = buildSchema(`
  type Query {
    getUser(id: Int!): User
  }
  type Mutation {
    addUser(name: String!, email: String!, age: Int!): User
  }
`);

// Create and execute GraphQL query
const query = '{ getUser(id: 1) { name, email, age } }';
graphql(schema, query, root).then(results => {
  console.log(results);
});
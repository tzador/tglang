type Product {
  id: ID
  name: String!
  description: String
  price: Float!
  category: Category!
  reviews: [Review!]
}

type Category {
  id: ID
  name: String!
  products: [Product!]
}

type Review {
  id: ID
  user: User!
  product: Product!
  rating: Int!
  comments: String
}

type User {
  id: ID
  firstName: String!
  lastName: String!
  email: String!
  reviews: [Review!]
}

schema {
  query: Query
  mutation: Mutation
}

type Query {
  products: [Product!]!
  categories: [Category!]!
  product(id: ID!): Product
  category(id: ID!): Category
  reviews(product_id: ID!): [Review!]!
  user(id: ID!): User
}

type Mutation {
  addProduct(name: String!, description: String, price: Float!, category_id: ID!): Product!
  updateProduct(id: ID!, name: String, description: String, price: Float, category_id: ID): Product
  deleteProduct(id: ID!): Boolean
  addReview(user_id: ID!, product_id: ID!, rating: Int!, comments: String): Review!
  updateReview(id: ID!, rating: Int, comments: String): Review
  deleteReview(id: ID!): Boolean
  createUser(firstName: String!, lastName: String!, email: String!): User!
  addReviewToUser(id: ID!, product_id: ID!, rating: Int!, comments: String): Review!
}
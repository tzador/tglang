// Define the schema for a blog post
type Post {
  id: ID!
  title: String!
  content: String!
  author: Author!
  comments: [Comment!]!
}

// Define the schema for an author
type Author {
  id: ID!
  name: String!
  bio: String!
  posts: [Post!]!
}

// Define the schema for a comment
type Comment {
  id: ID!
  content: String!
  post: Post!
  author: Author!
}

// Define the queries for the API
type Query {
  // Get a single post by ID
  post(id: ID!): Post!

  // Get a list of all posts
  posts: [Post!]!

  // Get a single author by ID
  author(id: ID!): Author!

  // Get a list of all authors
  authors: [Author!]!

  // Get a single comment by ID
  comment(id: ID!): Comment!

  // Get a list of all comments
  comments: [Comment!]!
}

// Define the mutations for the API
type Mutation {
  // Add a new post
  createPost(title: String!, content: String!, authorID: ID!): Post!

  // Update an existing post
  updatePost(id: ID!, title: String, content: String, authorID: ID): Post!

  // Delete a post
  deletePost(id: ID!): Post!

  // Add a new author
  createAuthor(name: String!, bio: String!): Author!

  // Update an existing author
  updateAuthor(id: ID!, name: String, bio: String): Author!

  // Delete an author
  deleteAuthor(id: ID!): Author!

  // Add a new comment
  createComment(content: String!, postID: ID!, authorID: ID!): Comment!

  // Update an existing comment
  updateComment(id: ID!, content: String): Comment!

  // Delete a comment
  deleteComment(id: ID!): Comment!
}
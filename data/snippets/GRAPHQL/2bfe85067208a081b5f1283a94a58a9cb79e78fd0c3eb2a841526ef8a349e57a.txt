// Define a GraphQL object type for a Book
type Book {
    title: String! @description("The title of the book")
    author: String! @description("The author of the book")
    genre: String! @description("The genre of the book")
    description: String @description("A brief summary of the book")
    releaseDate: String @description("The release date of the book")
}

// Define a GraphQL object type for an Author
type Author {
    name: String! @description("The name of the author")
    books: [Book!]! @description("A list of the author's books")
    bio: String @description("A brief bio of the author")
    country: String @description("The country where the author is from")
}

// Define a GraphQL query for getting a specific book
query {
    book(title: String!) @description("Returns the book with the specified title") {
        title
        author
        genre
        description
        releaseDate
    }
}

// Define a GraphQL query for getting all books by a specific author
query {
    booksByAuthor(name: String!) @description("Returns all books written by the specified author") {
        title
        genre
        description
        releaseDate
    }
}

// Define a GraphQL mutation for adding a new book
mutation {
    addBook(title: String!, author: String!, genre: String!, description: String, releaseDate: String) @description("Adds a new book to the collection") {
        title
        author
        genre
        description
        releaseDate
    }
}

// Define a GraphQL mutation for updating an existing book
mutation {
    updateBook(title: String!, genre: String, description: String, releaseDate: String) @description("Updates the information for an existing book") {
        title
        genre
        description
        releaseDate
    }
}
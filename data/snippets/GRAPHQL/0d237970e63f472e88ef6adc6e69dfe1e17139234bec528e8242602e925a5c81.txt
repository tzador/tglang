// Define a GraphQL type for a User
type User {
  id: ID!
  name: String!
  age: Int
  email: String
  phoneNumber: String
  address: String
}

// Define a query to get a user's name and email
query GetUserInfo($userId: ID!) {
  user(id: $userId) {
    name
    email
  }
}

// Define a mutation to create a new user
mutation CreateUser($input: UserInput!) {
  createUser(input: $input) {
    id
    name
    email
  }
}

// Define a input type for creating a user
input UserInput {
  name: String!
  age: Int
  email: String!
  phoneNumber: String
  address: String
}

// Define a query to search for users by name
query SearchUsers($name: String!) {
  users(name: $name) {
    id
    name
    email
  }
}

// Define a query to delete a user
mutation DeleteUser($userId: ID!) {
  deleteUser(id: $userId) {
    id
    name
    email
  }
}

// Define a mutation to update a user's email
mutation UpdateUserEmail($userId: ID!, $email: String!) {
  updateUserEmail(id: $userId, email: $email) {
    id
    name
    email
  }
}

// Define a subscription to get real-time updates on a user's age
subscription UserAgeChanged($userId: ID!) {
  userAgeChanged(id: $userId) {
    id
    name
    age
  }
}
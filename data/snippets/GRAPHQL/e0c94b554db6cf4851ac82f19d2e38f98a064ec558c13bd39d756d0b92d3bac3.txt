const graphql = require('graphql'); //import graphql library

//define GraphQL schema
let schema = new graphql.GraphQLSchema({
  //query for getting user by ID
  query: new graphql.GraphQLObjectType({
    name: "User",
    fields: {
      getUser: {
        type: User,
        args: {
          id: { type: graphql.GraphQLID } //input user ID
        },
        resolve: function (_, args) {
          //call getUser function to retrieve user details 
          //from database using user ID
          return getUser(args.id);
        },
      },
    },
  }),
});

//define User GraphQL object type
let User = new graphql.GraphQLObjectType({
  name: "User",
  fields: {
    id: { type: graphql.GraphQLID }, //user ID
    name: { type: graphql.GraphQLString }, //user name
    age: { type: graphql.GraphQLInt }, //user age
    email: { type: graphql.GraphQLString }, //user email
    friends: { 
      //field to get user's friends (list of UserType)
      type: new graphql.GraphQLList(User), 
      //resolve function to retrieve user's friends from database
      resolve: function (user) {
        return user.friends.map(id => getUser(id));
      },
    },
  },
});

//GraphQL query to get user's info and friends' info
let query = `
  {
    getUser(id: "1") {
      name,
      age,
      email,
      friends {
        name,
        age,
        email
      }
    }
  }
`;

//execute the query
graphql.graphql(schema, query).then(result => {
  console.log(result);
});
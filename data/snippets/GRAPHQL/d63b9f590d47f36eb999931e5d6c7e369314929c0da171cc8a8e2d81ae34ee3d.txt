// Define a GraphQL schema
const { buildSchema } = require('graphql');

// Construct a schema, using GraphQL schema language
const schema = buildSchema(`
  type Query {
    hello: String
    users: [User]
  }

  type Mutation {
    addUser(name: String!, email: String!): User!
  }

  type User {
    id: ID!
    name: String!
    email: String!
  }
`);

// Define resolvers for the schema fields
const resolvers = {
  hello: () => 'Hello World!',
  users: () => [{ id: '1', name: 'John', email: 'john@test.com' }],
  addUser: ({ name, email }) => {
    const id = users.length + 1;
    const newUser = {
      id,
      name,
      email,
    };
    users.push(newUser);
    return newUser;
  },
};

// Create an express server and graphql endpoint
const express = require('express');
const graphqlHTTP = require('express-graphql');

const app = express();

// Use the graphqlHTTP middleware to handle GraphQL requests
app.use(
  '/graphql',
  graphqlHTTP({
    schema: schema,
    rootValue: resolvers,
    graphiql: true, // enables the GraphiQL graphical query editor
  }),
);

// Set the server to listen on port 4000
app.listen(4000, () => console.log('Express GraphQL server is now running on http://localhost:4000/graphql'));
type User { // Type definition for User object
  id: ID! // Unique identifier for User
  name: String! // Name of the User
  email: String! // Email of the User
  age: Int // Age of the User
  friends: [User]! // Array of User objects representing the User's friends
  posts: [Post]! // Array of Post objects representing the User's posts
}

type Post { // Type definition for Post object
  id: ID! // Unique identifier for Post
  title: String! // Title of the Post
  body: String! // Body of the Post
  author: User! // User object representing the author of the Post
  comments: [Comment] // Array of Comment objects representing the comments on the Post
}

type Comment { // Type definition for Comment object
  id: ID! // Unique identifier for Comment
  body: String! // Body of the Comment
  author: User! // User object representing the author of the Comment
  post: Post! // Post object representing the Post the Comment is on
}

# Query for a specific User and their information
query {
  user(id: "123") { // User with ID of "123"
    name // Return the User's name
    email // Return the User's email
    age // Return the User's age
    friends { // Return an array of the User's friends
      name // Return the name of each friend
      email // Return the email of each friend
      age // Return the age of each friend
    }
    posts { // Return an array of the User's posts
      title // Return the title of each post
      body // Return the body of each post
      author { // Return the author of each post
        name // Return the name of the post's author
        email // Return the email of the post's author
        age // Return the age of the post's author
      }
      comments { // Return an array of comments on each post
        body // Return the body of each comment
        author { // Return the author of each comment
          name // Return the name of the comment's author
          email // Return the email of the comment's author
          age // Return the age of the comment's author
        }
      }
    }
  }
}

# Mutation to create a new Post
mutation {
  createPost( // Mutation to create a new Post
    title: "New Post", // Title of the Post
    body: "Hello World!", // Body of the Post
    author: "456" // ID of the User creating the Post
  ) {
    id // Return the ID of the newly created Post
    title // Return the title of the newly created Post
    body // Return the body of the newly created Post
    author { // Return the User who created the Post
      name // Return the name of the User
    }
  }
}

# Subscription to receive real-time updates on new Posts
subscription { // Subscription for real-time updates
  newPost { // Event name
    id // ID of the new Post
    title // Title of the new Post
    body // Body of the new Post
    author { // User who created the new Post
      name // Name of the User
    }
  }
}
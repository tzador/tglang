type User {
  id: ID!  # unique id assigned by server
  name: String!
  age: Int!
  friends: [User!]! # list of User objects
  posts: [Post!]! # list of Post objects
}

type Post {
  id: ID!
  title: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
}

# Root Query
type Query {
  user(id: ID!): User
  post(id: ID!): Post
}

# Root Mutation
type Mutation {
  addUser(name: String!, age: Int!): User # adds a new User object
  addPost(userId: ID!, title: String!): Post # adds a new Post object for a given User
}

# Subscription
type Subscription {
  latestPost: Post # returns the latest Post object
}
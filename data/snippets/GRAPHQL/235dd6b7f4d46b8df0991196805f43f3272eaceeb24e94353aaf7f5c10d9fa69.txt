type Query { // defines a query type in GraphQL
   book(title: String!): Book // specifies the field name "book" with required argument "title" of type String and returns a Book object
}

type Book { // defines a Book type in GraphQL
   title: String! // specifies the field name "title" of type String with a required value
   author: String // specifies the field name "author" of type String with an optional value
   chapters: [Chapter] // specifies the field name "chapters" of type list of Chapter objects
   publisher: Publisher // specifies the field name "publisher" of type Publisher object
}

type Chapter { // defines a Chapter type in GraphQL
   title: String! // specifies the field name "title" of type String with a required value
   length: Int // specifies the field name "length" of type Int with an optional value
}

type Publisher { // defines a Publisher type in GraphQL
   name: String! // specifies the field name "name" of type String with a required value
   location: String // specifies the field name "location" of type String with an optional value
}

query { // executes a query to fetch data from the GraphQL server
   book(title: "Harry Potter and the Philosopher's Stone") { // specifies the "title" argument and calls the "book" query
      title // returns the "title" field of the Book object
      author // returns the "author" field of the Book object
      chapters { // specifies the "chapters" field and returns a list of Chapter objects
         title // returns the "title" field of the Chapter object
         length // returns the "length" field of the Chapter object
      }
      publisher { // specifies the "publisher" field and returns a Publisher object
         name // returns the "name" field of the Publisher object
         location // returns the "location" field of the Publisher object
      }
   }
}
const { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLInt } = require('graphql');

// Defining a User type 
const UserType = new GraphQLObjectType({
  name: 'User',
  fields: {
    id: { type: GraphQLInt },
    name: { type: GraphQLString },
    age: { type: GraphQLInt }
  }
});

// Query for getting a single user by id
const GetUserByIdQuery = {
  type: UserType,
  args: {
    id: { type: GraphQLInt }
  },
  resolve: (parent, args, context) => {
    // logic for getting user from database or API
    const user = User.findById(args.id);
    return user;
  }
};

// Mutation for creating a new user
const CreateUserMutation = {
  type: UserType,
  args: {
    name: { type: GraphQLString },
    age: { type: GraphQLInt }
  },
  resolve: (parent, args, context) => {
    // logic for creating user in database or API
    const user = User.create(args);
    return user;
  }
};

// Defining a RootQuery type
const RootQuery = new GraphQLObjectType({
  name: 'RootQuery',
  fields: {
    user: GetUserByIdQuery
  }
});

// Defining a RootMutation type
const RootMutation = new GraphQLObjectType({
  name: 'RootMutation',
  fields: {
    createUser: CreateUserMutation
  }
});

// Creating a schema with RootQuery and RootMutation
const schema = new GraphQLSchema({
  query: RootQuery,
  mutation: RootMutation
});
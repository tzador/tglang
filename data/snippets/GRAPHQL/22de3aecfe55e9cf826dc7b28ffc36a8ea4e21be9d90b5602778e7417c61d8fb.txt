// Define a GraphQL schema
var schema = buildSchema(`
  type Query {
    user(id: Int!): User
    users: [User]
  }
  
  type Mutation {
    addUser(name: String!, age: Int!): User
    updateUser(id: Int!, name: String, age: Int): User
    deleteUser(id: Int!): User
  }

  type User {
    id: Int
    name: String
    age: Int
  }
`);

// Define root resolver functions 
var root = {
  user: ({ id }) => {
    // code to get a specific user from database
    return getUserById(id);
  },
  users: () => {
    // code to get all users from database
    return getAllUsers();
  },
  addUser: ({ name, age }) => {
    // code to add a new user to database
    // returns added user object
    return addUserToDatabase(name, age);
  },
  updateUser: ({ id, name, age }) => {
    // code to update a user in database
    // returns updated user object
    return updateUserInDatabase(id, name, age);
  },
  deleteUser: ({ id }) => {
    // code to delete a user from database
    // returns deleted user object
    return deleteUserFromDatabase(id);
  }
};

// Execute GraphQL query 
graphql(schema, `
  query {
    user(id: 123) {
      id
      name
      age
    }
  }
`, root).then((response) => {
  console.log(response);
})
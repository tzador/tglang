type Book {
  id: ID!
  title: String!
  author: Author!
  genres: [String]!
  reviews: [Review]!
}

type Author {
  id: ID!
  name: String!
  books: [Book]!
}

type Review {
  id: ID!
  book: Book!
  reviewer: User!
  rating: Int!
  comment: String
}

type User {
  id: ID!
  name: String!
  email: String!
  reviews: [Review]!
}

enum BookOrderByInput {
  ID_ASC
  ID_DESC
  TITLE_ASC
  TITLE_DESC
}

enum ReviewOrderByInput {
  ID_ASC
  ID_DESC
  RATING_ASC
  RATING_DESC
}

type Query {
  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, first: Int): [Book]!
  authors(where: AuthorWhereInput, orderBy: AuthorOrderByInput, skip: Int, first: Int): [Author]!
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, first: Int): [Review]!
}

input BookWhereInput {
  id: ID
  titleContains: String
  author: AuthorWhereInput
  genresContains: String
  reviewsSome: ReviewWhereInput
}

input AuthorWhereInput {
  id: ID
  nameContains: String
  booksSome: BookWhereInput
}

input ReviewWhereInput {
  id: ID
  rating_gt: Int
  reviewer: UserWhereInput
  book: BookWhereInput
}
// Defining a GraphQL schema
// GraphQL comes with a built-in type system
// that allows you to define the shape of your data graph
// and how it can be queried

const { buildSchema } = require('graphql');

// Define a schema with a type and fields
const schema = buildSchema(`
  type Query {
    hello: String,
    user(id: Int!): User
  }
  
  type User {
    name: String,
    age: Int,
    email: String!,
    friends: [User]
  }
`);

// Define resolvers to handle GraphQL queries
const root = {
  hello: () => 'Hello World!',
  user: (args) => {
    const { id } = args;
    // get user from database using the id provided in the query
    const user = database.find(user => user.id === id);
    return user;
  },
};

// GraphQL query to get user's name, age, email, and their friends' names
query {
  user(id: 123) {
    name
    age
    email
    friends {
      name
    }
  }
}

// Output:
/*
{
  "data": {
    "user": {
      "name": "John",
      "age": 30,
      "email": "john@example.com",
      "friends": [
        { "name": "Jane" },
        { "name": "Tom" },
        { "name": "Sara" }
      ]
    }
  }
}
*/
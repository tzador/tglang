const { GraphQLObjectType, GraphQLString, GraphQLInt, GraphQLSchema } = require('graphql'); //import necessary modules

const PersonType = new GraphQLObjectType({ //create a new GraphQL object type named PersonType
    name: 'Person', //define the name of the object
    fields: () => ({ //define the fields of the object
        id: { type: GraphQLInt }, //create a field for the person's id with GraphQLInt data type
        name: { type: GraphQLString }, //create a field for the person's name with GraphQLString data type
        age: { type: GraphQLInt } //create a field for the person's age with GraphQLInt data type
    })
});

const RootQuery = new GraphQLObjectType({ //create a root query object to be used in GraphQLSchema
    name: 'RootQueryType', //define the name of the object
    fields: { //define the fields of the object
        person: { //create a field for the person object
            type: PersonType, //set the data type for the field to be PersonType
            args: { //define arguments for the field
                id: { type: GraphQLInt } //create an argument for id with GraphQLInt data type
            },
            resolve(parent, args) { //resolve function to retrieve data for person
                //add logic to retrieve data from database
    
                return { //return the retrieved data in the form of a PersonType object
                    id: 1,
                    name: 'John Doe',
                    age: 30
                }
            }
        }
    }
});

module.exports = new GraphQLSchema({ //export the created GraphQL schema
    query: RootQuery //set the RootQuery object as the query for the schema
})
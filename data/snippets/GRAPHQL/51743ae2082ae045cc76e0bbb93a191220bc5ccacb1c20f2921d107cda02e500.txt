// Define a GraphQL schema
let schema = buildSchema(`
  type Query {
    hello: String,
    name: String,
    age: Int
  }
  type Mutation {
    updateName(newName: String!): String,
    updateAge(newAge: Int!): Int
  }
`);

// Create resolver functions
let root = {
  hello: () => {
    return 'Hello world!';
  },
  name: () => {
    return 'John Smith';
  },
  age: () => {
    return 25;
  },
  updateName: ({newName}) => {
    return newName;
  },
  updateAge: ({newAge}) => {
    return newAge;
  }
};

// Run a query
let query = '{ hello }';

graphql(schema, query, root).then((response) => {
  console.log(response);
});

// Run a mutation
let mutation = `mutation {
  updateName(newName: "Jane Doe") 
}`;

graphql(schema, mutation, root).then((response) => {
  console.log(response);
})

// Output:
// {
//   "data": {
//     "updateName": "Jane Doe"
//   }
// }
# This is a GraphQL schema that defines a type for a user
type User {
  id: ID! # unique identifier for each user
  name: String! # name of the user
  email: String! # email address of the user
  age: Int # optional age field for the user
  posts: [Post] # array of posts created by the user
}

# This is a GraphQL schema that defines a type for a post
type Post {
  id: ID! # unique identifier for each post
  title: String! # title of the post
  body: String! # main content of the post
  author: User! # user who created the post
  comments: [Comment] # array of comments on the post
}

# This is a GraphQL schema that defines a type for a comment
type Comment {
  id: ID! # unique identifier for each comment
  text: String! # text content of the comment
  author: User! # user who wrote the comment
  post: Post! # post that the comment is on
}

# This is a GraphQL query that retrieves a user's information
query {
  user(id: 123) { # query argument to specify user ID
    name
    email
    age
    posts { # subquery to retrieve user's posts
      title
      body
    }
  }
}

# This is a GraphQL mutation that creates a new post
mutation {
  createPost(title: "New Blog Post", body: "Lorem ipsum dolor sit amet.", author: 123) { # mutation arguments to specify post title, body, and user ID
    title
    body
    author { # subquery to retrieve post author's information
      name
      email
    }
  }
}

# This is a GraphQL subscription that listens for new comments on a post
subscription {
  newComment(postId: 456) { # subscription argument to specify post ID
    text
    author {
      name
    }
    post {
      title
    }
  }
}
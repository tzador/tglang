// Define a custom type
type Book {
  title: String
  author: String
  genre: String
  year: Int
}

// Define a single query to retrieve a book by its title
Query {
  book(title: String): Book
}

// Define a mutation to add a new book
Mutation {
  addBook(title: String, author: String, genre: String, year: Int): Book
}

// Define a subscription to listen for newly added books
Subscription {
  newBook: Book
}

// Define a resolver for the single query
book: (parent, args, context) => {
  // Code to query the database and retrieve a book with the given title
}

// Define a resolver for the mutation
addBook: (parent, args, context) => {
  // Code to add a new book to the database with the given parameters
  // Return the newly added book
}

// Define a resolver for the subscription
newBook: {
  // Code to listen for newly added books in the database and return them to the client
  // This can be achieved through a real-time messaging system like WebSockets or through polling
}
type User {
  name: String!
  age: Int!
  posts: [Post!]!
}

type Post {
  title: String!
  content: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  text: String!
  date: DateTime!
  author: User!
}

# Query to get all users and their posts
query getUsers {
  users {
    name
    posts {
      title
      content
    }
  }
}

# Mutation to add a new post for a user
mutation addPost($id: ID!, $title: String!, $content: String!) {
  addPost(id: $id, title: $title, content: $content) {
    title
    content
    author {
      name
    }
  }
}

# Subscription to get real-time updates on new comments on a post
subscription newComment($postId: ID!) {
  newComment(postId: $postId) {
    text
    author {
      name
    }
  }
}

# Schema to define types and operations
schema {
  query: RootQuery
  mutation: RootMutation
  subscription: RootSubscription
}
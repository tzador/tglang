type Query {                                        # Defines the root query
  posts: [Post!]!                                    # Defines a field for retrieving a list of posts
    @deprecated(reason: "Use 'Query.allPosts' instead")  # Sets a deprecation reason for the field
  allPosts(filter: PostFilter, orderBy: PostOrderBy): [Post!]!  # Defines a field for retrieving a filtered and ordered list of posts
}

input PostFilter {   # Defines an input type for filtering posts
  title: String        # Specifies a 'title' field of type String for filtering
  published: Boolean   # Specifies a 'published' field of type Boolean for filtering
}

enum PostOrderBy {    # Defines an enum type for specifying the order in which to retrieve posts
  CREATED_AT_ASC      # Specifies an ascending order based on created date
  CREATED_AT_DESC     # Specifies a descending order based on created date
}

type Post {               # Defines a 'Post' type with the following fields
  id: ID!                  # Specifies an 'id' field of type ID, which is non-nullable
  title: String!           # Specifies a 'title' field of type String, which is also non-nullable
  description: String      # Specifies a 'description' field of type String, which is nullable
  author: User!            # Specifies an 'author' field of type User, which is non-nullable
  published: Boolean!      # Specifies a 'published' field of type Boolean, which is also non-nullable
  createdAt: DateTime!     # Specifies a 'createdAt' field of type DateTime, representing when the post was created
}

type User {               # Defines a 'User' type with the following fields
  id: ID!                  # Specifies an 'id' field of type ID, which is non-nullable
  name: String!            # Specifies a 'name' field of type String, which is also non-nullable
  email: String!           # Specifies an 'email' field of type String, which is also non-nullable
  posts: [Post!]!          # Specifies a 'posts' field for retrieving a list of posts written by the user
}
// Define the schema for a User type
type User {
    id: ID!
    name: String!
    age: Int
    email: String
    profilePicture: File
    posts: [Post]
}

// Define the schema for a Post type
type Post {
    id: ID!
    title: String!
    body: String
    timestamp: Date
    author: User
}

// Define the Query type with the available query operations
type Query {
    getUsers: [User]
    getUserById(id: ID!): User
    getPosts: [Post]
    getPostById(id: ID!): Post
}

// Define the Mutation type with the available mutation operations
type Mutation {
    createUser(name: String!, age: Int, email: String!, profilePicture: File): User
    createPost(title: String!, body: String, timestamp: Date!, authorId: ID!): Post
    updateUser(id: ID!, name: String, age: Int, email: String, profilePicture: File): User
    updatePost(id: ID!, title: String, body: String, timestamp: Date): Post
    deleteUser(id: ID!): User
    deletePost(id: ID!): Post
}

// Define the Subscription type with the available subscription operations
type Subscription {
    userCreated: User
    postUpdated(id: ID!): Post
}

// Define the root query for the GraphQL server
schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
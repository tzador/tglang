using DifferentialEquations, BenchmarkTools
function lorenz!(du,u,p,t)  # A function that calculates the derivative of the Lorenz system
    x,y,z = u
    σ,ρ,β = p
    du[1] = σ*(y-x)
    du[2] = x*(ρ-z) - y
    du[3] = x*y - β*z
end

u0 = [1.0,0.0,0.0]  # Initial conditions for the Lorenz system
p = [10.0,28.0,8/3]  # Parameter values for the Lorenz system
tspan = (0.0,100.0)  # Integration time span

prob = ODEProblem(lorenz!,u0,tspan,p)  # Define the differential equation problem
sol = solve(prob,Tsit5())  # Numerically solve the problem using Tsit5 solver
bench_res = @benchmark solve($prob,$sol)  # Benchmark the solve function

plot(sol,vars=(1,2),xlabel="x",ylabel="y",zlabel="z",title="Lorenz Attractor")  # Plot the solution in 3D space

println("Final position of the Lorenz system: ", sol[end])  # Print the final position of the system
println("Computation time for solving the problem: ", minimum(bench_res.times)/1e6, " ms")  # Print the minimum computation time in milliseconds
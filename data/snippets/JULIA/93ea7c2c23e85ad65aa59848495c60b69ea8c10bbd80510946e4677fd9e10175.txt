mutable struct Person # Define a mutable struct that represents a person
    name::String # Declare a field for their name
    age::Int64 # Declare a field for their age
    occupation::String # Declare a field for their occupation
    contact_info::Dict{String, String} # Declare a field for their contact information, represented as a dictionary
end

# Define a function to create a new instance of the Person struct
function create_person(name, age, occupation, phone, email)
    Person(name, age, occupation, Dict("phone" => phone, "email" => email))
end

# Declare an array of person objects
people = [
    create_person("John", 25, "Engineer", "555-555-5555", "john@email.com"),
    create_person("Emily", 29, "Teacher", "555-555-5555", "emily@email.com"),
    create_person("Sam", 32, "Doctor", "555-555-5555", "sam@email.com")
]

# Define a function to print the details of a person object
function print_person(person)
    println("Name: $(person.name)")
    println("Age: $(person.age)")
    println("Occupation: $(person.occupation)")
    println("Phone: $(person.contact_info["phone"])")
    println("Email: $(person.contact_info["email"])")
end

# Loop through the array of person objects and print their details
for person in people
    print_person(person)
    println("--------------") # Print a line to separate each person's details
end
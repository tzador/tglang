# Define a function to determine if a given number is prime
function isPrime(num)
    # First check if the number is less than 2, which is not prime
    if num < 2
        return false
    end
    
    # Check if the number is divisible by any number less than it
    for i in 2:num-1
        # If the number is divisible, return false as it is not prime
        if num % i == 0
            return false
        end
    end
    
    # If the function has not returned false yet, the number is prime
    return true
end

# Define a function to generate the first n prime numbers
function generatePrimes(n)
    # Create an empty array to store the prime numbers
    primes = []
    # Set a variable to keep track of the number of primes generated
    count = 0
    # Start with the first prime number, 2
    num = 2
    
    # Keep generating prime numbers until the desired number is reached
    while count < n
        # Check if the current number is prime using the isPrime function
        if isPrime(num)
            # If so, add it to the primes array and increase the count
            push!(primes, num)
            count += 1
        end
        # Increment the number to check the next value
        num += 1
    end
    
    # Return the array of prime numbers
    return primes
end

# Set a variable for the number of prime numbers to generate
num_primes = 10

# Call the generatePrimes function with the desired number of primes
primes = generatePrimes(num_primes)

# Print the result
println("The first $num_primes prime numbers are: $primes")
# Define a function that takes in two arrays as arguments
function conditional_probability(x::Array, y::Array)
    # Calculate the length of the input arrays
    nx = length(x)
    ny = length(y)

    #Initialize an empty dictionary
    prob_dict = Dict()

    # Loop through the elements in array x
    for i = 1:nx
        # Iterate through the elements in array y
        for j = 1:ny
            # Create a new key in the dictionary for the combination of elements
            new_key = string(x[i],y[j])
            # Check if the key exists in the dictionary
            if haskey(prob_dict, new_key)
                # Increment the count value for the key if it already exists
                prob_dict[new_key] += 1
            else
                # Otherwise, set the count value to 1
                prob_dict[new_key] = 1
            end
        end
    end

    # Loop through the keys in the dictionary
    for key in keys(prob_dict)
        # Calculate the conditional probability and store it in the dictionary
        prob_dict[key] /= nx
    end

    # Return the dictionary
    return prob_dict
end
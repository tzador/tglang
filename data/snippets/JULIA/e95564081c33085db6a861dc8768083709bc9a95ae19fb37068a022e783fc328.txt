# Define a function to calculate the factorial of a number
function factorial(n)
    # Initialize the result variable
    result = 1
    # Loop through numbers from 1 to n
    for i in 1:n
        # Multiply the current result by i
        result *= i
    end
    # Return the final result
    return result
end

# Define a recursive function to calculate the nth Fibonacci number
function fibonacci(n)
    # Check for base cases
    if n < 1
        return 0
    elseif n == 1
        return 1
    end
    # Call the fibonacci function recursively for n-1 and n-2
    return fibonacci(n-1) + fibonacci(n-2)
end

# Define a tuple containing three elements
my_tuple = (1, "Hello", 5.2)

# Create a dictionary with key-value pairs
my_dict = Dict("Name" => "John", "Age" => 25, "Occupation" => "Programmer")

# Create an array of strings
my_array = ["apple", "banana", "orange", "grape", "strawberry"]

# Use a list comprehension to generate a new array of squares
squares = [x^2 for x in 1:10]

# Define a module
module MyModule
    # Define a variable
    my_variable = "Hello World!"

    # Define a function inside the module
    function greet(name)
        println("Hello, $name!")
    end
end

# Import the module and use its function
using .MyModule
greet("John")  # prints "Hello, John!"
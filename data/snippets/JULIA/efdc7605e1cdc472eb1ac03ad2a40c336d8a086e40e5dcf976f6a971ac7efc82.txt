# This code snippet generates a random array of size n with values ranging from 1 to 10
# and then sorts the array using quicksort algorithm
function quicksort(array::Array{T,1}) where T <: Real
    n = length(array)
    if n <= 1
        return array
    end
    
    pivot = array[rand(1:n)]
    less = [x for x in array if x < pivot]
    equal = [x for x in array if x == pivot]
    greater = [x for x in array if x > pivot]
    return quicksort(less) * equal * quicksort(greater)
end

# generate random array of size n
n = 10
array = [rand(1:10) for i in 1:n]

# sort the array using quicksort
sorted_array = quicksort(array) 

# print output
println("Unsorted array: ", array)
println("Sorted array: ", sorted_array)
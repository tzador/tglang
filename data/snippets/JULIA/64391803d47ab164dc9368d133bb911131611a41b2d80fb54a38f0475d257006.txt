#Define a function that performs the DFT (Discrete Fourier Transform) on a given input, using the Cooley-Tukey algorithm

function DFT(x)
    N = length(x) #determine the length of the input array
    if N == 1 #base case
        return x
    end

    #split the input array into even and odd parts
    even = DFT(x[1:2:N])
    odd = DFT(x[2:2:N])

    #calculate the twiddle factors
    twiddle = exp.(-2*pi*im*(0:N/2-1)/N)

    #perform the butterfly operation
    for k = 1:N/2
        t = twiddle[k] * odd[k]
        odd[k] = even[k] - t
        even[k] = even[k] + t
    end

    #combine the even and odd parts
    return reshape([even; odd],N)
end

#test the function on a simple input
x = [1,2,3,4]
println(DFT(x)) #prints [-10.0 + 0.0im, -2.0 + 2.0im, 2.0 + 2.0im, 6.0 + 0.0im]
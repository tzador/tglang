# Define a function that calculates the factorial of a number
function factorial(n)
    # Base case: if n is 0, return 1
    if n == 0
        return 1
    # Recursive case: call the factorial function with n-1 and multiply it by n
    else
        return factorial(n-1) * n
    end
end

# Define a function that calculates the nth Fibonacci number
function fibonacci(n)
    # Base case: if n is 0 or 1, return n
    if n == 0 || n == 1
        return n
    # Recursive case: call the fibonacci function with n-1 and n-2 and add them
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

# Define an array of numbers to store factorial results
factorial_array = []
# Define an array of numbers to store Fibonacci results
fibonacci_array = []

# Loop through numbers 0 to 10
for i in 0:10
    # Call the factorial function with i and append the result to factorial_array
    push!(factorial_array, factorial(i))
    # Call the fibonacci function with i and append the result to fibonacci_array
    push!(fibonacci_array, fibonacci(i))
end

# Print out the arrays of factorial and Fibonacci results
println("Factorial results: ", factorial_array)
println("Fibonacci results: ", fibonacci_array)
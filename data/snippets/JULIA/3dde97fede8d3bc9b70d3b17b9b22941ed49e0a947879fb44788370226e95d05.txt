# Import necessary libraries
using LinearAlgebra
using DifferentialEquations
using Plots

# Set up system of differential equations
function dUdt(du,u,p,t)
    du[1] = -u[1] + p[1]*u[1]*u[2]
    du[2] = u[2] - p[2]*u[1]*u[2]
end

# Set initial conditions
u0 = [1.0,1.0]

# Set parameter values
p = [1.5, 1.0]

# Set time span
tspan = (0.0,10.0)

# Define system of differential equations
prob = ODEProblem(dUdt,u0,tspan,p)

# Solve the system using the Dormand-Prince algorithm
sol = solve(prob,DPRKN12())

# Plot the solution
plot(sol)

# Save the plot
savefig("solution.png")

# Calculate the steady state of the system
ss = [p[2]/(p[1]+p[2]), p[1]/(p[1]+p[2])]

# Print the steady state values
println("Steady state values: x = ", round(ss[1],digits=3), ", y = ", round(ss[2],digits=3))
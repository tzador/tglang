# Defining a function to calculate the factorial of a given number
function factorial(n)
    if n == 0
        return 1
    else
        return n * factorial(n-1)
    end
end

# Defining a struct to represent a person with name and age fields
struct Person
    name::String
    age::Int
end

# Creating a list of persons
persons = [Person("John", 25), Person("Jane", 30), Person("Alex", 20)]

# Looping through the list and printing the name and age of each person
for person in persons
    println("Name: ", person.name)
    println("Age: ", person.age)
end

# Sorting the list of persons based on their age in ascending order
sort!(persons, by = x -> x.age)

# Printing the sorted list of persons
println("Sorted list of persons:")
for person in persons
    println(person.name, " - ", person.age)
end

# Defining a function to calculate the nth term in the Fibonacci sequence
function fib(n)
    if n <= 2
        return 1
    else
        return fib(n-1) + fib(n-2)
    end
end

# Calculating and printing the first 10 terms in the Fibonacci sequence
println("First 10 terms in the Fibonacci sequence:")
for i in 1:10
    println("Term ", i, ": ", fib(i))
end
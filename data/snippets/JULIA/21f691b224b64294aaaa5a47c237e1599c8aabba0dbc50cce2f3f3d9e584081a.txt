# Define a function called 'factorial' that takes in one argument, 'n'
function factorial(n)
    # Check if n is less than 0, if so raise an error
    if n < 0
        error("Cannot compute factorial of a negative number")
    end
    # If n is equal to 0, return 1
    if n == 0
        return 1
    else
        # If n is greater than 0, use recursion to calculate the factorial
        return n * factorial(n-1)
    end
end

# Define a function called 'fibonacci' that takes in one argument, 'n'
function fibonacci(n)
    # Check if n is less than 0, if so raise an error
    if n < 0
        error("Cannot compute fibonacci of a negative number")
    end
    # If n is equal to 0, return 0
    if n == 0
        return 0
    elseif n == 1 # If n is equal to 1, return 1
        return 1
    else
        # If n is greater than 1, use recursion to calculate the fibonacci sequence
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

# Define a variable 'x' and assign it a value of 5
x = 5

# Print out the factorial of x
println("The factorial of $x is $(factorial(x))")

# Print out the fibonacci sequence up to x
println("The fibonacci sequence up to $x is")

# Create an empty array 
fib_array = []

# Loop through all numbers from 0 to x-1
for i in 0:x-1
    # Append the fibonacci sequence to the array
    push!(fib_array, fibonacci(i))
end

# Print out the fibonacci sequence 
println(fib_array)
function matrix_multiplication(A::Array{T,N}, B::Array{T,N}) where {T,N}
    # Function to perform matrix multiplication in JULIA
    # Inputs:
    #   A::Array{T,N} - First matrix
    #   B::Array{T,N} - Second matrix
    # where T is the type of the elements in the arrays
    # and N is the number of dimensions of the arrays
    # Output:
    #   C - Result of the matrix multiplication

    # Error handling to ensure the matrices have compatible dimensions
    N1, M1 = size(A) # N1 is the number of rows in A, M1 is the number of columns in A
    N2, M2 = size(B) # N2 is the number of rows in B, M2 is the number of columns in B
    if M1 != N2
        error("Dimension mismatch: columns of A must equal rows of B")
    end

    # Create an empty matrix to store the result
    C = zeros(T, N1, M2)

    # Perform the multiplication using nested loops
    for i in 1:N1 # Loop over the rows of A
        for j in 1:M2 # Loop over the columns of B
            for k in 1:N2 # Loop over the columns of A and rows of B
                C[i,j] += A[i,k] * B[k,j]
            end
        end
    end

    # Return the result
    return C
end
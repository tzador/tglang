# Defining a function that checks if a number is prime
function isPrime(n::Int64)
    for i in 2:(n - 1)
        if n % i == 0
            return false # If number is divisible by any number between 2 and n-1, return false
        end
    end
    return true # If number is not divisible by any number between 2 and n-1, return true, indicating prime number
end

# Creating a list of prime numbers
num_list = [2, 5, 7, 11, 13, 17, 19, 23, 29, 31]

# Using a comprehension to filter out non-prime numbers from the list
prime_list = [num for num in num_list if isPrime(num)]

# Printing the final list of prime numbers
println(prime_list) # Output: [2, 5, 7, 11, 13, 17, 19, 23, 29, 31]

# Creating a dictionary to store the names and ages of individuals
person_dict = Dict("John" => 25, "Emily" => 30, "Alex" => 27, "Sarah" => 35, "Max" => 40)

# Looping through the dictionary and printing the names and ages of individuals over 30
for (name, age) in person_dict
    if age > 30
        println("$name is $age years old") # Output: Emily is 30 years old, Sarah is 35 years old, Max is 40 years old
    end
end

# Defining a mutable composite type called "Car"
mutable struct Car
    brand::String
    model::String
    year::Int64
    color::String
end

# Creating an instance of the Car type
my_car = Car("Toyota", "Camry", 2015, "Silver")

# Updating the color and year of the car
my_car.color = "Black"
my_car.year = 2018

println(my_car) # Output: Car("Toyota", "Camry", 2018, "Black")
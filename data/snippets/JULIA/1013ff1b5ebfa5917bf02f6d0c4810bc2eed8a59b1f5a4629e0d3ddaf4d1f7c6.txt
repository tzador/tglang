using Distributions # Importing the Distributions package

# Defining a function that will generate a 2D histogram
function generate_histogram(data::Array{Float64, 2}, bins::Array{Float64, 2})
    # Input parameters:
    # - data: 2D array of data points
    # - bins: 2D array of bin edges for each dimension

    # Initializing a 2D histogram with all zeros
    histogram = zeros(length(bins[1])-1, length(bins[2])-1)

    # Looping through the data points
    for point in eachcol(data)
        # Calculating the bin indices for each dimension
        x_index = Int64(floor((point[1] - bins[1][1]) / (bins[1][2] - bins[1][1]))) + 1
        y_index = Int64(floor((point[2] - bins[2][1]) / (bins[2][2] - bins[2][1]))) + 1

        # Incrementing the corresponding bin in the histogram
        histogram[x_index, y_index] += 1
    end

    # Returning the histogram
    return histogram
end

# Generating random data points from a Normal distribution
data_points = rand(Normal(0, 1), 1000, 2)

# Creating bin edges for both dimensions
x_bins = -3.0:0.5:3.0
y_bins = -3.0:0.5:3.0

# Calling the generate_histogram function with the data points and bins as inputs
histogram = generate_histogram(data_points, [x_bins, y_bins])

# Printing the histogram
println("2D Histogram:")
println(histogram)
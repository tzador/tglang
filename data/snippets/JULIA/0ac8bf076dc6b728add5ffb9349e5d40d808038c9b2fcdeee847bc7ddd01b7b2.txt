using LinearAlgebra # import LinearAlgebra library
function flip_matrix(A::Matrix) # define function to flip matrix
    rows, cols = size(A) # get matrix dimensions
    flipA = zeros(rows, cols) # create new matrix to store flipped version
    for i = 1:rows # iterate through rows
        for j = 1:cols # iterate through columns
            flipA[i,j] = A[i,cols-j+1] # flip elements and store in new matrix
        end
    end
    return flipA # return flipped matrix
end
A = [1 2 3; 4 5 6] # create test matrix
println("Original Matrix: ", A) # print original matrix
println("Flipped Matrix: ", flip_matrix(A)) # print flipped matrix using created function
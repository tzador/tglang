# Julia Function to Calculate the Fibonacci Sequence

# Define a function that takes in a single integer argument
function fibonacci(n::Int64)

    # Check if input is a positive integer
    if n < 0
        return "Input must be a positive integer."
    end

    # Declare an empty array to store the sequence
    sequence = []

    # Base cases for the first two Fibonacci numbers
    if n == 1
        push!(sequence, 0)
    elseif n == 2
        push!(sequence, 0)
        push!(sequence, 1)
    end

    # Loop through the remaining numbers
    for i in 3:n

        # Calculate the next Fibonacci number by summing the previous two
        next_fibonacci = sequence[i-1] + sequence[i-2]

        # Add the new number to the sequence array
        push!(sequence, next_fibonacci)
    end

    # Return the full Fibonacci sequence
    return sequence
end

# Call the function and store the output in a variable
fibonacci_sequence = fibonacci(10)

# Print the output
println(fibonacci_sequence)
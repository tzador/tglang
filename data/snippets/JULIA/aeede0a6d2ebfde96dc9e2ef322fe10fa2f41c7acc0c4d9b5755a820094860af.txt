# Define a function that checks if a number is prime
function is_prime(x)

    # Start by checking if the number is 2
    if x == 2
        return true
    end
    
    # Check if the number is divisible by 2
    if x % 2 == 0
        return false
    end
    
    # Check if the number is divisible by any odd number from 3 to its square root
    for i in 3:2:floor(sqrt(x))
        if x % i == 0
            return false
        end
    end
    
    # If the number passes all the checks, it is prime
    return true
end

# Define a function that finds all prime numbers up to a given number
function find_prime_numbers(n)

    # Create an empty vector to store the prime numbers
    primes = []
    
    # Loop through all numbers from 2 to the given number
    for i in 2:n
        
        # Use the is_prime function to check if the number is prime
        if is_prime(i)
            # If the number is prime, add it to the primes vector
            push!(primes, i)
        end
    end
    
    # Return the vector of prime numbers
    return primes
end

# Call the find_prime_numbers function and print the output
primes = find_prime_numbers(1000)
println(primes)
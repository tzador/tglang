# Define function to generate Fibonacci sequence using memoization
function fib(n::Int64, cache::Vector{Int64})

    # Base case: return 1 for first two numbers in sequence
    if n == 1 || n == 2
        return 1
    end

    # Check if value has already been calculated and stored in cache
    if n <= length(cache) && cache[n] != -1
        return cache[n]
    end

    # Calculate and store new Fibonacci number in cache
    cache[n] = fib(n-1, cache) + fib(n-2, cache)

    # Return calculated value
    return cache[n]
end

# Initialize cache with -1 values to represent values not yet calculated
cache = fill(-1, 10)

# Call function to generate Fibonacci sequence up to 10th number
fib(10, cache)

# Output: 55 (10th number in Fibonacci sequence)
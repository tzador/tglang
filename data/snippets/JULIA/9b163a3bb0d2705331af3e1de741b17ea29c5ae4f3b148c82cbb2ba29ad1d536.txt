function findRoots(p::Vector{Float64})
    # This function computes the roots of a polynomial represented by a vector of coefficients
    # Input:
    # - p: vector of coefficients in descending order (from highest to lowest power)
    # Output:
    # - roots: vector of complex roots of the polynomial

    n = length(p) - 1 # degree of polynomial
    roots = zeros(ComplexF64, n) # pre-allocate vector of roots

    # define companion matrix
    A = zeros(ComplexF64, n, n)
    for i = 1:n-1
        A[i+1,i] = 1
    end
    A[:,n] = -p[1:n] ./ p[n+1]

    # compute eigenvalues of companion matrix
    位 = eigvals(A)

    # filter out eigenvalues that are not roots of polynomial
    for i = 1:n
        if abs(imag(位[i])) < 1e-10 && 位[i] != 0
            roots[i] = real(位[i])
        end
    end
    return roots
end
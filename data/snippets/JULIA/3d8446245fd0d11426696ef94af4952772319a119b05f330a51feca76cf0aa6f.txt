# Import necessary packages
using DataFrames
using JuMP
using GLPK

# Define data
n = 100 # number of observations
p = 5   # number of variables
X = rand(n,p) # n x p matrix of random data
y = rand(n)   # n x 1 vector of random data

# Create JuMP model
model = Model(GLPK.Optimizer)

# Add variables to model
@variable(model, β[1:p]) # p x 1 vector of coefficients
@variable(model, ξ[1:n]) # n x 1 vector of slack variables

# Add objective function to model
@objective(model, Min, sum(ξ)) # minimize sum of slack variables

# Add constraints to model
@constraint(model, X*β .== y - ξ) # linear constraint for each observation

# Solve the model
optimize!(model)

# Print results
println("Optimal Coefficients: ", round(value.(β), digits = 4))
println("Optimal Sum of Slack Variables: ", round(objective_value(model), digits = 2))
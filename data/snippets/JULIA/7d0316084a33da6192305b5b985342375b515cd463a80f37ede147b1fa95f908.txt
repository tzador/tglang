mutable struct Planet
    name::String                   # Creating mutable struct with field name of type string 
    num_moons::Int                 # Field for number of moons
    distance_from_sun::Float64    # Field for distance from sun in astronomical units (AU) 
end

function next_moon(planet::Planet)     # Defining a function that takes in a Planet object and returns the number of moons plus one.
    return planet.num_moons + 1
end

function orbital_period(planet::Planet, sun_mass::Float64)     # Defining a function that calculates the orbital period of a planet around a star,
    # given the planet's distance from the star and the mass of the star.
    return sqrt((4Ï€^2 * (planet.distance_from_sun*AU)^3) / (G * sun_mass))
end

size_of_planets = 8          # Variable to store the number of planets
planets = Array{Planet}(size_of_planets)     # Creating an array to store Planet objects

# Adding data for each planet to the array
planets[1] = Planet("Mercury", 0, 0.39)     
planets[2] = Planet("Venus", 0, 0.72)
planets[3] = Planet("Earth", 1, 1.00)
planets[4] = Planet("Mars", 2, 1.52)
planets[5] = Planet("Jupiter", 79, 5.20)
planets[6] = Planet("Saturn", 82, 9.58)
planets[7] = Planet("Uranus", 27, 19.18)
planets[8] = Planet("Neptune", 14, 30.07)

for planet in planets       # Looping through the array and printing the orbital period for each planet, using the orbital_period function.
    println("$planet.name: Orbital period around the sun is $(orbital_period(planet, 1.989e30)) seconds.")
end
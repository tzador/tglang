"""
This function implements the radix sort algorithm on an array of integers.

Args:
    A (Array{Int}): the input array to be sorted.

Returns:
    sortedA (Array{Int}): the sorted array in ascending order.
"""
function radixSort(A::Array{Int})::Array{Int}
    # find maximum value in array
    maxVal = maximum(A)

    # count the number of digits in the maximum value
    numDigits = Int(log10(maxVal) + 1)

    # initialize an empty array to store the sorted values
    sortedA = Array{Int}(undef, length(A))

    # loop through each digit, starting from the least significant
    for i in 1:numDigits
        # initialize a count array for each digit, with values initialized to 0
        count = zeros(Int,10)

        # count the number of times each digit appears in the current place
        for j in A
            digit = j รท 10^(i-1) % 10
            count[digit+1] += 1
        end

        #.update the count array with the running total of digits
        for k in 2:length(count)
            count[k] += count[k-1]
        end

        # loop through the input array and place each value in the corresponding position in the sorted array
        for l in A
            digit = l รท 10^(i-1) % 10
            idx = count[digit+1]
            sortedA[idx] = l
            count[digit+1] -= 1
        end

        # set the sorted array as the input array for the next iteration
        A = sortedA
    end

    # return the sorted array
    return sortedA
end
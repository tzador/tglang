# Define a function that calculates the nth power of a given number
function nth_power(x, n)
    result = 1
    for i in 1:n
        result *= x
    end
    return result
end

# Define a recursive function to calculate the factorial of a given number
function factorial(x)
    if x == 0
        return 1
    else
        return x * factorial(x-1)
    end
end

# Define a dictionary with student names and their corresponding grades
grades_dict = Dict("John" => 80, "Mary" => 90, "Lisa" => 70)

# Add a new student and their grade to the dictionary
grades_dict["Tom"] = 75

# Define a while loop that prints every number from 1 to 10
i = 1
while i <= 10
    print(i)
    i += 1
end

# Use the map function to multiply each number in a list by 2
numbers = [1, 2, 3, 4, 5]
multiplied_numbers = map(x -> x*2, numbers)

# Define a struct to represent a person with attributes: name, age, and profession
struct Person
    name::String
    age::Int
    profession::String
end

# Create a new instance of the Person struct
person = Person("Bob", 28, "Engineer")

# Print the person's name
println(person.name)

# Define a function that uses the do-notation to execute a block of code
function do_block()
    println("Start of block")
    # code to be executed
    println("End of block")
end

# Call the do_block function and pass a block of code to be executed
do_block() do
    println("Inside block")
end
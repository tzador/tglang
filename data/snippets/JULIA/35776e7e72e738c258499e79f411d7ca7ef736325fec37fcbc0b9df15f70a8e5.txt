# Define a function that calculates the factorial of a number
function factorial(n)
   
    # Initialize a variable to store the result
    result = 1
    
    # Loop through all the numbers from 1 to n
    for i = 1:n
        
        # Multiply the current result by the current number
        result *= i
        
    end
    
    # Return the final result
    return result
    
end

# Print the factorial of a given number
println(factorial(5))

# Define a function that checks if a given string is a palindrome
function is_palindrome(string)

    # Initialize a variable to store the reversed string
    reversed_string = ""
    
    # Loop through all the characters in the string
    for char in string
        
        # Prepend the current character to the reversed string
        reversed_string = char * reversed_string
        
    end
    
    # Check if the reversed string is equal to the original string
    if reversed_string == string
        
        # If so, it is a palindrome
        println("Palindrome!")
        
    else
        
        # If not, it is not a palindrome
        println("Not a palindrome.")
        
    end
    
end

# Test the function with different strings
is_palindrome("racecar")
is_palindrome("hello")

# Define a struct to store information about a person
struct Person
    
    # Define the properties of the struct
    name::String
    age::Int64
    occupation::String
    
    # Create a method to introduce the person
    function introduce(self)
        
        # Print a personalized introduction
        println("Hi, my name is $(self.name). I am $(self.age) years old and I work as a $(self.occupation).")
        
    end
    
end

# Create a new instance of the Person struct
person = Person("John", 32, "Software Developer")

# Call the introduce method for the person
person.introduce()
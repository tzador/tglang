#= This is a function to calculate the n-th Fibonacci number using recursion =#

function fibonacci(n)
    if n == 1 || n == 2  # base case 
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2)  # recursive call 
    end
end

#= This is a function to find the nth prime number using the Sieve of Eratosthenes algorithm =#

function find_nth_prime(n)
    primes = [2]  # array to store prime numbers 
    num = 3  # starting number to check for primality 
    while length(primes) < n 
        is_prime = true  # boolean flag to check for primality 
        for prime in primes 
            if num % prime == 0  # checking if num is divisible by any of the existing primes 
                is_prime = false
                break
            end
        end
        if is_prime 
            push!(primes, num)  # adding num to list of primes if it is prime 
        end
        num += 1  # incrementing num to check the next number for primality 
    end
    return primes[n]  # returning the nth prime number 
end

# Usage: 
println("The 10th Fibonacci number is: ", fibonacci(10))
println("The 10th prime number is: ", find_nth_prime(10))
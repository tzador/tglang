# Define a function to calculate the nth Fibonacci number recursively
function fibonacci(n)
    if n == 1 || n == 2
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

# Create an array to store the first 10 Fibonacci numbers
fibonacci_array = [1, 1]

# Use a for loop to calculate the remaining Fibonacci numbers
for i in 3:10
    fibonacci_number = fibonacci(i)
    push!(fibonacci_array, fibonacci_number)
end

# Print the array of Fibonacci numbers
println(fibonacci_array)

# Define a function to check if a number is prime
function is_prime(n)
    if n < 2
        return false
    end
    
    for i in 2:div(n, 2)
        if rem(n, i) == 0
            return false
        end
    end
    
    return true
end

# Create an empty array to store prime Fibonacci numbers
prime_fibonacci = []

# Check each number in the fibonacci array if it is prime, and add it to the prime Fibonacci array if it is
for num in fibonacci_array
    if is_prime(num)
        push!(prime_fibonacci, num)
    end
end

# Print the array of prime Fibonacci numbers
println(prime_fibonacci)
function bisection(f, a, b; tol=1e-6)
    # this function implements the bisection method
    # for finding roots of a function
    
    # input:
    #   f: function to find root of
    #   a, b: bounds of interval to search for root in
    #   tol: tolerance for convergence (optional, default value is 1e-6)
    
    # output:
    #   x: approximate root of the function f
    #   iters: number of iterations to reach convergence
    
    # initialize iteration count
    iters = 0
    
    # check if the function has opposite signs at a and b
    if sign(f(a)) == sign(f(b))
        error("Function has same sign at a and b, choose different bounds.")
    end
    
    # loop until convergence or max iterations is reached
    while abs(b-a) > tol && iters < 100
        # calculate midpoint of interval
        x = (a + b)/2
        
        # check if x is the root or if it satisfies convergence tolerance
        if f(x) == 0 || abs(f(x)) < tol
            break
        end
        
        # update bounds based on sign of f(x)
        if sign(f(x)) == sign(f(a))
            a = x
        else
            b = x
        end
        
        # update iteration count
        iters += 1
    end
    
    return x, iters
end
# Define a function for finding the greatest common divisor of two numbers
function gcd(x,y)
    # Find the remainder when x is divided by y
    rem = x % y
    # If the remainder is 0, then y is the GCD
    if rem == 0
        return y
    # Otherwise, recursively call the function with y as the first argument and the remainder as the second argument
    else
        return gcd(y, rem)
    end
end

# Define a function for finding the least common multiple of two numbers
function lcm(x,y)
    # Find the GCD of the two numbers
    gcd = gcd(x,y)
    # Calculate the LCM using the formula: LCM = (x*y)/GCD
    lcm = (x*y)/gcd
    # Return the LCM
    return lcm
end

# Define an array of numbers to find the LCM of
A = [4, 6, 8, 12]

# Set the initial value of LCM to be the first element in the array
LCM = A[1]

# Loop through the array and update the LCM by finding the LCM of the current number and the LCM calculated so far
for i in 2:length(A)
    LCM = lcm(A[i], LCM)
end

# Print the LCM
println("The LCM of the array A is: ", LCM)
# Define a function to calculate the nth Fibonacci number
function fibonacci(n)
    if n == 0 || n == 1
        return 1
    end

    return fibonacci(n-1) + fibonacci(n-2)
end

# Generate an array of 10 random numbers between 1 and 100
numbers = rand(1:100, 10)

# Sort the array in descending order using a bubble sort algorithm
for i in 1:length(numbers)-1
    for j in 1:length(numbers)-i
        if numbers[j] < numbers[j+1]
            numbers[j], numbers[j+1] = numbers[j+1], numbers[j]
        end
    end
end

# Print the sorted array
println("Sorted Array: $numbers")

# Create a mutable struct for a student
mutable struct Student 
    name::String
    age::Int
    major::String
end

# Create an instance of the Student struct
student1 = Student("John Doe", 20, "Computer Science")

# Define a function to update the major of a student
function update_major(student, new_major)
    student.major = new_major
end

# Update the major of student1
update_major(student1, "Data Science")

# Print the updated major of student1
println("Updated Major: $student1.major")
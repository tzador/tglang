# This function calculates the sum of the first n natural numbers

function sum_natural_numbers(n)
    result = 0 # initialize result variable
    for i in 1:n # loop through each natural number
        result += i # add current natural number to result
    end
    return result # return final result
end

# Example usage:
sum_natural_numbers(5) # returns 15 as 1 + 2 + 3 + 4 + 5 = 15

# This function calculates the factorial of a given number

function factorial(n)
    if n == 0 # base case: factorial of 0 is 1
        return 1
    else
        return n * factorial(n - 1) # recursive call to calculate factorial
    end
end

# Example usage:
factorial(5) # returns 120 as 5 * 4 * 3 * 2 * 1 = 120

# This function calculates the nth Fibonacci number

function fibonacci(n)
    if n == 0 || n == 1 # base cases: first two Fibonacci numbers are 0 and 1
        return n
    else
        return fibonacci(n - 1) + fibonacci(n - 2) # recursive call to calculate Fibonacci number
    end
end

# Example usage:
fibonacci(7) # returns 13 as the 7th Fibonacci number is 8
# Import necessary libraries
using DataFrames
using Statistics

# Define a function to calculate mean
function calculate_mean(x::AbstractVector)
    # Calculate the total sum of elements
    total = sum(x)
    # Get the number of elements
    n = length(x)
    # Calculate mean
    mean = total / n
    # Return mean
    return mean
end

# Define a dictionary to store data
data = Dict()

# Create a DataFrame to store the data
df = DataFrame()

# Populate the dictionary with data
data["name"] = ["John", "Mary", "Peter"]
data["age"] = [25, 30, 28]
data["salary"] = [50000, 60000, 55000]

# Convert dictionary to DataFrame
df = DataFrame(data)

# Calculate mean of salary column
mean_salary = calculate_mean(df["salary"])

# Print mean of salary
println("Mean salary: ", mean_salary)

# Filter data based on age greater than 25
filtered_df = filter(row -> row.age > 25, df)

# Calculate mean salary for filtered data
mean_filtered = calculate_mean(filtered_df["salary"])

# Print mean of salary for filtered data
println("Mean salary for age > 25: ", mean_filtered)

# Create a new column in df with boolean values
df[!, :above_mean] = df["salary"] .> mean_salary

# Group DataFrame by name column
grouped_df = groupby(df, :name)

# Calculate mean salary for each group
mean_grouped = combine(grouped_df, :salary => mean)

# Print mean salary for each group
println("Mean salary for each group: ", mean_grouped)

# Plot a bar graph of mean salary for each group
using Plots
plot(mean_grouped, kind="bar", legend=false)
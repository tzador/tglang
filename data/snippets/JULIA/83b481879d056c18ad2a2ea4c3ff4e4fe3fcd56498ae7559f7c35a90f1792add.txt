function sieve_of_eratosthenes(n)
    # Initialize an array with all values set to true
    sieve = [true for _ in 1:n]

    # Set the first two values (0 and 1) to false as they are not prime numbers
    sieve[1] = false
    sieve[2] = false

    # Loop through the array and mark multiples of each number as false
    for i in 2:floor(Int, sqrt(n))
        if sieve[i] == true
            for j in i^2:i:n
                sieve[j] = false
            end
        end
    end

    # Create a vector to hold all prime numbers
    primes = []

    # Loop through the sieve and add all values that are still true (prime numbers) to the primes vector
    for i in 1:n
        if sieve[i] == true
            push!(primes, i)
        end
    end

    # Return the primes vector
    return primes
end
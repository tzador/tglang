# Define a function that takes in two arrays as arguments
function mergeArrays(a::Array, b::Array)
    # Create a new array to store the merged values
    mergedArray = []
	# Loop through the first array
    for element in a
        # Add the element to the merged array
        push!(mergedArray, element)
    end
	# Loop through the second array
    for element in b
        # If the element is not already in the merged array
        if !(element in mergedArray)
            # Add the element to the merged array
            push!(mergedArray, element)
        end
    end
	# Sort the merged array in ascending order
    mergedArray = sort(mergedArray)
    # Return the merged array
    return mergedArray
end

# Create two arrays to test the function
array1 = [1, 2, 4, 6, 8]
array2 = [3, 5, 7, 9]

# Call the function and store the result in a new variable
merged = mergeArrays(array1, array2)

# Print the merged array
println(merged)

# Output: 
# [1, 2, 3, 4, 5, 6, 7, 8, 9]
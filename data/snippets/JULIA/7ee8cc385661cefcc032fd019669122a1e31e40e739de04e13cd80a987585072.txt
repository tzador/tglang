# This is a code snippet for calculating the first 100 Fibonacci numbers using recursion in Julia

# Define a function taking in an integer n
function fib(n)
  
  # Base case: if n is 1 or 2, return 1
  if n == 1 || n == 2
    return 1
  end
  
  # Recursive case: calculate the sum of the previous two numbers in the sequence
  return fib(n-1) + fib(n-2)
end

# Define a variable to store the number of Fibonacci numbers to calculate
n = 100

# Define an empty array to store the Fibonacci numbers
fib_seq = Int64[]

# Loop through n values and call the fib function for each value, adding the result to the array
for i in 1:n
  push!(fib_seq, fib(i))
end

# Print out the array of Fibonacci numbers
println(fib_seq)
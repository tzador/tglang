# Declare a function that calculates the first n terms of the Fibonacci sequence and returns a vector containing those terms
function fibonacci(n)
    fib = zeros(Int64, n) # Initialize an array to store the terms
    fib[1] = 0 # Set the first term to 0
    fib[2] = 1 # Set the second term to 1
    for i = 3:n # Loop through the remaining terms
        fib[i] = fib[i-1] + fib[i-2] # Calculate the term by summing the previous two terms
    end
    return fib # Return the vector containing the terms
end

# Get user input for n
println("Enter the number of terms you want in the Fibonacci sequence:")
n = parse(Int64, readline())

# Call the fibonacci function with n to get the sequence
fib_seq = fibonacci(n)

# Print the resulting sequence
println("The first $n terms of the Fibonacci sequence are:")
println(fib_seq)

# Define a recursive function to calculate the factorial of a number
function factorial(x)
    if x < 0 # Check for negative numbers
        error("Factorial is not defined for negative numbers.")
    elseif x == 0 || x == 1 # Check for base case
        return 1
    else # For any other input, recursively call the function
        return x * factorial(x-1)
    end
end

# Get user input for x
println("Enter a number to calculate its factorial:")
x = parse(Int64, readline())

# Call the factorial function with x to get the factorial
fact = factorial(x)

# Print the result
println("The factorial of $x is:")
println(fact)
using LinearAlgebra # import LinearAlgebra package for mathematical operations
using Distributions # import Distributions package for sampling from distributions
using PyPlot # import PyPlot package for plotting

# define a function that calculates the covariance matrix of two inputs
function cov(x, y)
    n = length(x) # get length of input vectors
    x̄ = mean(x) # calculate mean of x
    ȳ = mean(y) # calculate mean of y
    covar = zeros(n, n) # initialize covariance matrix with zeros
    
    for i in 1:n # loop through rows
        for j in 1:n # loop through columns
            covar[i,j] = sum((x[i] .- x̄) .* (y[j] .- ȳ)) / (n-1) # calculate covariance element
        end
    end
    
    return covar # return covariance matrix
end

# generate two random vectors from a normal distribution with mean 0 and standard deviation 1
x = rand(Normal(0, 1), 100)
y = rand(Normal(0, 1), 100)

# calculate covariance matrix and store in variable c
c = cov(x, y)

# create scatter plot of x and y with the covariance matrix as the color map
scatter(x, y, c=c)

# add colorbar to plot
colorbar()

# set plot title, x and y labels
title("Scatter plot with covariance matrix as color map")
xlabel("x")
ylabel("y")

# save figure as a png image
savefig("covariance_plot.png")
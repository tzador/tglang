#= This is a long and complex code snippet in JULIA =#

# Define a function named quadratic with three arguments
function quadratic(a, b, c)
    # Calculate the discriminant
    discriminant = b^2 - 4*a*c
    
    # Check if the discriminant is positive
    if discriminant > 0
        # Calculate the two roots
        root1 = (-b + sqrt(discriminant)) / (2*a)
        root2 = (-b - sqrt(discriminant)) / (2*a)
        
        # Return the roots as an array
        return [root1, root2]
    # If the discriminant is negative, print an error message
    elseif discriminant < 0
        println("No real roots exist")
        
    else
        # Calculate the single root
        root = -b / (2*a)
        
        # Return the root as an array
        return [root]
        
    end
end

# Call the quadratic function with a = 2, b = -8, c = 6 and store the result in x
x = quadratic(2, -8, 6)

# Print the result
println(x)
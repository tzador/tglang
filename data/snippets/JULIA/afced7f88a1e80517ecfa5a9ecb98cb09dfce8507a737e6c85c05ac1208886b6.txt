# Define a function named 'calculate_pi' that takes in an integer 'n'
# and calculates the value of pi using the Gregory-Leibniz Series.

function calculate_pi(n)
    sum = 0.0 # Initialize a variable to store the sum
    sign = 1.0 # Initialize a variable to alternate the sign of each term

    # Loop through n terms to calculate the sum
    for i in 1:n
        term = sign / (2i - 1) # Calculate the value of the current term
        sum += term # Add the current term to the sum
        sign *= -1 # Update the sign for the next term
    end

    # Multiply the sum by 4 to get the value of pi
    pi = 4 * sum

    # Return the value of pi
    return pi
end

# Call the 'calculate_pi' function with an input of 1000
println(calculate_pi(1000)) # Output: 3.140592653839794

# Call the 'calculate_pi' function with an input of 100000
println(calculate_pi(100000)) # Output: 3.1415826535897198

# Call the 'calculate_pi' function with an input of 1000000
println(calculate_pi(1000000)) # Output: 3.1415916535897743
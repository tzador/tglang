function fibonacci(n)
    if n == 0
        return 0
    elseif n == 1
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2) #recursive call to fibonacci function
    end
end

function bubble_sort(A)
    n = length(A)
    for i in 1:n-1
        for j in 1:n-i
            if A[j] > A[j+1]
                A[j], A[j+1] = A[j+1], A[j]
            end
        end
    end
end

function power(a, n)
    if n == 0
        return 1
    else
        return a * power(a, n-1) #recursive call to power function
    end
end

#Example usage:
fibonacci(5) #returns the 5th Fibonacci number, which is 5
matrix = [7 4 8; 1 5 3; 9 2 6] #create a 3x3 matrix
bubble_sort(matrix) #sorts the matrix in ascending order
println(matrix) #prints the sorted matrix
power(2, 4) #returns 16, which is 2 to the power of 4
# Define a function to compute the factorial of a given number
function factorial(n)
    # Initialize the result to 1
    result = 1
    # Iteratively multiply result by numbers from 1 to n
    for i in 1:n
        result *= i
    end
    # Return the final result
    return result
end

# Define a function to calculate the sum of squares of numbers from 1 to n
function sum_of_squares(n)
    # Initialize the sum to 0
    sum = 0
    # Iteratively add squares of numbers from 1 to n to sum
    for i in 1:n
        sum += i^2
    end
    # Return the final sum
    return sum
end

# Define a function to find the GCD (Greatest Common Divisor) of two numbers
function gcd(a, b)
    # Check if either of the numbers is 0
    if a == 0 || b == 0
        # Return the non-zero number as the GCD
        return max(a, b)
    end
    # Initialize the smaller number as the minimum of a and b
    smaller = min(a, b)
    # Initialize the GCD to 1
    gcd = 1
    # Iterate from 1 to the smaller number
    for i in 1:smaller
        # Check if i divides both a and b
        if a % i == 0 && b % i == 0
            # Update the GCD to i
            gcd = i
        end
    end
    # Return the final GCD
    return gcd
end

# Define a recursive function to calculate the nth Fibonacci number
function fibonacci(n)
    # Check if n is 0 or 1
    if n == 0 || n == 1
        # Return n
        return n
    else
        # Calculate the (n-1)th and (n-2)th Fibonacci numbers using recursion
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

# Define a dictionary (key-value pairs) with integer keys and string values
dict = Dict(1 => "One", 2 => "Two", 3 => "Three", 4 => "Four")

# Define a list (array) of integer values
list = [1, 2, 3, 4, 5]

# Use a list comprehension to create a new list with only even numbers from the original list
even_list = [x for x in list if x % 2 == 0]

# Print the factorial of 6 using the defined factorial function
println(factorial(6))

# Print the sum of squares of numbers from 1 to 10 using the defined sum_of_squares function
println(sum_of_squares(10))

# Print the GCD of 12 and 18 using the defined gcd function
println(gcd(12, 18))

# Print the 7th Fibonacci number using the defined fibonacci function
println(fibonacci(7))

# Print the value associated with key 3 in the dictionary
println(dict[3])

# Print the even list created using list comprehension
println(even_list)

# Define a string variable
str = "Hello World!"

# Print the length of the string
println(length(str))

# Use string concatenation to create a new string with "Hello" and "World!" separated by a space
newstr = "Hello" * " " * "World!"

# Print the new string
println(newstr)
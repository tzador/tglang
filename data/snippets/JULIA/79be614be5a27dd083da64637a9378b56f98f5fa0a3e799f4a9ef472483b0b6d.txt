# Define a function that takes in two lists and returns the combined list in reverse order
function combine_reverse_list(list1, list2)
    return reverse([list1..., list2...])
end

# Create two lists with different data types
list1 = [1, 2, 3]
list2 = ["a", "b", "c"]

# Call the function and store the returned list
combined_list = combine_reverse_list(list1, list2)

# Print the combined list
println(combined_list)

# Define a dictionary with key-value pairs
dict = Dict("a" => 1, "b" => 2, "c" => 3)

# Loop through the dictionary and print each key-value pair
for (key, value) in dict
    println("$key: $value")
end

# Define an array with integers from 1 to 10
array = collect(1:10)

# Use a list comprehension to create a new array with squared values of the original array
squared_array = [x^2 for x in array]

# Print the squared array
println(squared_array)

# Define a tuple with three elements
tuple = (1, "a", true)

# Destructure the tuple and store the values in separate variables
(x, y, z) = tuple

# Print the values
println(x)
println(y)
println(z)

# Define a set with unique elements
set = Set([1, 2, 3, 4, 5])

# Use the union function to combine two sets
combined_set = union(set, Set([3, 6, 9]))

# Print the combined set
println(combined_set)
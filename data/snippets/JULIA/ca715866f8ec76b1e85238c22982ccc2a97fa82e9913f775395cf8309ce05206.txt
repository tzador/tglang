function mergeSort(arr)
    n = length(arr)

    # Base case
    if n == 1
        return arr
    end

    # Divide the array into halves
    mid = Int(round(n/2))
    left = mergeSort(arr[1:mid])
    right = mergeSort(arr[mid+1:end])

    # Merge the sorted halves
    return merge(left, right)
end

function merge(left, right)
    sorted_arr = Array{Int}(undef, length(left)+length(right))
    i = 1
    j = 1
    k = 1

    while i <= length(left) && j <= length(right)
        if left[i] <= right[j]
            sorted_arr[k] = left[i]
            i += 1
        else
            sorted_arr[k] = right[j]
            j += 1
        end
        k += 1
    end

    if i <= length(left)
        sorted_arr[k:end] = left[i:end]
    else
        sorted_arr[k:end] = right[j:end]
    end

    return sorted_arr
end

arr = [5, 2, 8, -1, 4, 10]
sorted_arr = mergeSort(arr)

println("Sorted array: ", sorted_arr)
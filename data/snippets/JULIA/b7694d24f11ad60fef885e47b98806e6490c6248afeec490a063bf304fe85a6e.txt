# Define a function named 'sieve' that takes in a positive integer 'n'
function sieve(n)
    # Initialize an array with n+1 elements
    primes = zeros(Int64, n + 1)
    # Loop over all integers from 2 to n
    for i in 2:n
        # Check if the current element is non-zero (indicating it is a prime number)
        if primes[i] == 0
            # Set all multiples of the current element to 1 (indicating they are not prime)
            for j in i * i:i:n
                primes[j] = 1
            end
        end
    end
    # Initialize an empty array to store the prime numbers
    result = Int64[]
    # Loop over all elements in the primes array
    for i in 2:n
        # Check if the element is still equal to 0 (indicating it is prime)
        if primes[i] == 0
            # Append it to the result array
            push!(result, i)
        end
    end
    # Return the result array
    return result
end

# Call the sieve function with input 20 and store the result in a variable 'primes'
primes = sieve(20)

# Print the result
println(primes)
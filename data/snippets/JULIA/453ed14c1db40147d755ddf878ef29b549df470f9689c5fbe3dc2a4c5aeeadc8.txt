module ComplexNumbers
struct Complex{T<:Real}
  real::T        # field for real part of complex number
  imag::T        # field for imaginary part of complex number
end
import Base: +, -, *, /    # importing Base functions for overloading
+(z1::Complex, z2::Complex) = Complex(z1.real + z2.real, z1.imag + z2.imag)    # function to add two complex numbers
-(z1::Complex, z2::Complex) = Complex(z1.real - z2.real, z1.imag - z2.imag)    # function to subtract two complex numbers
*(z1::Complex, z2::Complex) = Complex(z1.real * z2.real - z1.imag * z2.imag, z1.real * z2.imag + z1.imag * z2.real)    # function to multiply two complex numbers
/(z1::Complex, z2::Complex) = Complex((z1.real * z2.real + z1.imag * z2.imag) / (z2.real^2 + z2.imag^2), (z1.imag * z2.real - z1.real * z2.imag) / (z2.real^2 + z2.imag^2))    # function to divide two complex numbers
end    # end of module ComplexNumbers
z1 = Complex(3, 4)    # creating a complex number with real part 3 and imaginary part 4
z2 = Complex(2, -5)    # creating a complex number with real part 2 and imaginary part -5
z3 = z1 + z2    # adding the two complex numbers
z4 = z1 * z2    # multiplying the two complex numbers
z5 = z1 - z2    # subtracting the two complex numbers
z6 = z1 / z2    # dividing the two complex numbers
function merge_sort(arr)
    # This function performs merge sort on the input array
    if length(arr) <= 1 # check if array has more than one element
        return arr # if not, return array
    else
        mid = length(arr)รท2 # find middle index
        left = merge_sort(arr[1:mid]) # sort left half of array
        right = merge_sort(arr[mid+1:end]) # sort right half of array
        return merge(left, right) # merge sorted halves
    end
end

function merge(left, right)
    # This function performs the merging of two sorted arrays
    result = [] # initialize empty array to store merged array
    while !isempty(left) && !isempty(right) # while both arrays are not empty
        if left[1] โค right[1] # compare first element of each array
            push!(result, first(left)) # push first element of left array to result
            left = tail(left) # remove first element from left array
        else
            push!(result, first(right)) # push first element of right array to result
            right = tail(right) # remove first element from right array
        end
    end
    if isempty(left) # if left array is empty
        return vcat(result, right) # append right array to result
    else # if right array is empty
        return vcat(result, left) # append left array to result
    end
end

# Example usage
input = [5, 3, 1, 4, 2]
result = merge_sort(input)
print(result) # [1, 2, 3, 4, 5]
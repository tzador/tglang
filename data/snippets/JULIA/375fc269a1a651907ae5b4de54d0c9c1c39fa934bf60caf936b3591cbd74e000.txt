=
# This code snippet generates prime numbers using the sieve of Eratosthenes algorithm
function prime_sieve(limit)
    # create a list of all numbers from 2 to limit
    numbers = [true for _ in 2:limit]

    # start at the first number in the list
    num_idx = 1

    while num_idx <= length(numbers)
        # check if the current number is still marked true
        if numbers[num_idx] == true
            # mark all multiples of the current number as false
            for j in (num_idx + 1):num_idx:length(numbers)
                numbers[j] = false
            end
        end

        # increment num_idx to check the next number
        num_idx += 1
    end

    # create a list of prime numbers
    primes = [i for (i, val) in enumerate(numbers) if val == true]

    # return the list of primes
    return primes
end

# call the prime_sieve function with a limit of 50
primes = prime_sieve(50)

# print the list of primes
println("The prime numbers are: ", join(primes, ", "))
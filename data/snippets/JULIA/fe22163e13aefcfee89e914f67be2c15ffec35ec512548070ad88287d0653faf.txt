# Define function to calculate factorial
function factorial(n)
    if n == 0 || n == 1
        return 1
    else
        return n * factorial(n-1)
    end
end

# Calculate factorial of 5
factorial(5)

# Define function to calculate nth term of Fibonacci sequence
function fibonacci(n)
    if n == 1 || n == 2
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

# Calculate 10th term of Fibonacci sequence
fibonacci(10)

# Define function to calculate area of a circle
function area_circle(radius)
    return pi * radius^2
end

# Calculate area of circle with radius 5
area_circle(5)

# Define a matrix
A = [1 2 3; 4 5 6; 7 8 9]

# Create a vector
v = [3, 2, 1]

# Multiply matrix A and vector v
A * v

# Sort vector in ascending order
sort(v)

# Calculate square root of numbers 1 to 10
for i in 1:10
    println(sqrt(i))
end

# Create a dictionary
fruits = Dict("apple" => "red", "banana" => "yellow", "grape" => "purple")

# Add a key-value pair to dictionary
fruits["orange"] = "orange"

# Print keys in dictionary
for key in keys(fruits)
    println(key)
end

# Define a struct
struct Person
    name::String
    age::Int64
end

# Create an instance of struct Person
p = Person("John", 25)

# Print name and age of person
println("Name: ", p.name, " Age: ", p.age)
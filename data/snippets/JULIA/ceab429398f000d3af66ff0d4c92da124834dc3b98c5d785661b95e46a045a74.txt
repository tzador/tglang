#= 
This is a complex function in Julia that calculates the gradient of a matrix using the finite difference method. It takes in a matrix as input and returns the gradient matrix as output. It uses the forward difference scheme to calculate the gradient.

INPUTS:
    - mat: a matrix of size (m,n) where m is the number of rows and n is the number of columns

OUTPUTS:
    - grad: a matrix of size (m-1,n-1) containing the gradient values for each element in the input matrix
=#
function calc_gradient(mat)
    # initialize gradient matrix with zeros
    grad = zeros(size(mat)[1]-1, size(mat)[2]-1)
    # loop through each element in the input matrix
    for i = 1:size(mat)[1]-1
        for j = 1:size(mat)[2]-1
            # calculate forward difference for x and y direction
            dx = mat[i+1,j] - mat[i,j]
            dy = mat[i,j+1] - mat[i,j]
            # calculate gradient using Pythagorean theorem
            grad[i,j] = sqrt(dx^2 + dy^2)
        end
    end
    # return gradient matrix
    return grad
end
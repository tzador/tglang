# This function calculates the nth Fibonacci number using recursion and memoization

# Define a dictionary for memoization
memo = Dict()

# Define the recursive function that takes in n
function fibonacci(n)
    # Check if the value has already been computed and stored in memo
    if haskey(memo, n)
        return memo[n]
    end
    # Base case: when n is 1 or 2, Fibonacci number is 1
    if n == 1 || n == 2
        return 1
    end
    # Recursive case: calculate the Fibonacci number using recursion
    fib = fibonacci(n-1) + fibonacci(n-2)
    # Store the result in memo for future use
    memo[n] = fib
    # Return the calculated Fibonacci number
    return fib
end

# Take user input for n
print("Enter the value of n: ")
n = parse(Int64, readline())

# Print the nth Fibonacci number
println("The nth Fibonacci number is: ", fibonacci(n))
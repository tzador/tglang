# Define a function, using type annotations and conditionals
function calculate_area(shape::String)
    if shape == "square"
        # Prompt user for side length
        print("Enter the length of the side of the square: ")
        # Take user input and convert it to a Float64
        side = parse(Float64, readline())
        # Calculate area of square using side length
        area = side * side
        # Print result
        println("The area of the square is $area units.")
    elseif shape == "rectangle"
        # Prompt user for length and width
        print("Enter the length of the rectangle: ")
        # Take user input and convert it to a Float64
        length = parse(Float64, readline())
        print("Enter the width of the rectangle: ")
        # Take user input and convert it to a Float64
        width = parse(Float64, readline())
        # Calculate area of rectangle using length and width
        area = length * width
        # Print result
        println("The area of the rectangle is $area units.")
    elseif shape == "circle"
        # Prompt user for radius
        print("Enter the radius of the circle: ")
        # Take user input and convert it to a Float64
        radius = parse(Float64, readline())
        # Calculate area of circle using radius and π
        area = π * radius^2
        # Print result
        println("The area of the circle is $area units.")
    else
        # If input is not a valid shape, print error message
        println("Error: Invalid shape. Please enter 'square', 'rectangle', or 'circle'.")
    end
end

# Call the function with different shapes
calculate_area("square")
calculate_area("rectangle")
calculate_area("circle")
calculate_area("triangle")
module mymodule #creating a module

export function1 #specifying exported functions
export function2

function function1(x,y) #defining function1
     z = x^2 + y^2 #creating a variable and performing calculations
     return z #returning the value of z
end

function function2(x,y) #defining function2
     a = x + y #creating a variable and performing calculations
     b = x - y
     return a, b #returning multiple values
end

type SomeType #defining a new type
     x::Int64 #declaring a field of type Int64
     y::Float64 #declaring a field of type Float64
     z::Array{String,1} #declaring a field of type Array with String elements
end

function SomeType(x,y,z) #defining a constructor for SomeType
     return SomeType(x, y, z) #returning a new instance of SomeType
end

obj = SomeType(5, 5.2, ["Julia", "is", "awesome"]) #creating an instance of SomeType

a, b = function2(4, 2) #calling function2 and storing the returned values in variables

println("The value of a is $a") #printing the value of a using string interpolation
println("The value of b is $b")
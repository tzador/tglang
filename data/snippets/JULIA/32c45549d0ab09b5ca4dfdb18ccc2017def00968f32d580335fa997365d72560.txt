# Define a function that calculates the nth term in the Fibonacci sequence
function fibonacci(n::Int64)
    if n == 1
        return 0 # Base case
    elseif n == 2
        return 1 # Base case
    else
        return fibonacci(n-1) + fibonacci(n-2) # Recursive step
    end
end

# Print all the values in the Fibonacci sequence up to the 10th term
for i in 1:10
    println(fibonacci(i))
end

# Define a function that checks if a number is prime
function isprime(n::Int64)
    if n < 2
        return false # Numbers less than 2 are not prime
    elseif n == 2
        return true # 2 is prime
    elseif n > 2 && n % 2 == 0
        return false # Even numbers greater than 2 are not prime
    else
        for i in 3:2:sqrt(n)
            if n % i == 0
                return false # If n is divisible by any number between 3 and the square root of n, it is not prime
            end
        end
    end
    return true # If none of the above conditions are met, n is prime
end

# Print all the prime numbers between 1 and 100
for i in 1:100
    if isprime(i)
        println(i)
    end
end
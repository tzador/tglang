# This code snippet uses the Julia programming language to perform a Monte Carlo simulation of a stock portfolio
using Distributions  # Importing the Distributions package for generating random numbers
using Plots         # Importing the Plots package for visualizing the results

# Set the parameters for the simulation
num_stocks = 5        # Number of stocks in the portfolio
num_simulations = 1000 # Number of simulations to run
num_months = 12        # Number of months for the simulation
initial_investment = 10000 # Initial investment amount (in USD)
monthly_investment = 500  # Additional monthly investment amount (in USD)

# Create an array to store the results for each simulation
sim_results = zeros(Float64, num_simulations)

# Define a function to run the simulation
function monte_carlo_sim(num_stocks, num_months, initial_investment, monthly_investment)
    # Initialize variables
    monthly_returns = zeros(Float64, num_months)
    stock_prices = zeros(Float64, num_stocks)
    total_investment = initial_investment
    
    # Loop through each month for one simulation
    for i in 1:num_months
        # Generate random stock prices for each stock using a Normal distribution
        stock_prices .= initial_investment * rand(Normal(1.0, 0.1), num_stocks)
        # Calculate the total investment value for the month
        total_investment += sum(stock_prices) + monthly_investment
        # Calculate the monthly return
        monthly_returns[i] = (total_investment - initial_investment) / initial_investment
    end
    
    return monthly_returns
end

# Loop through each simulation and store the results in the sim_results array
for i in 1:num_simulations
    sim_results[i] = monte_carlo_sim(num_stocks, num_months, initial_investment, monthly_investment)[num_months]
end

# Visualize the results using a histogram
histogram(sim_results, label="Monthly Returns", xlabel="Returns", ylabel="Frequency", title="Monte Carlo Simulation Results")
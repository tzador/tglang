# Define a struct for a Point with x and y coordinates
struct Point{ T<:Real }
    x::T
    y::T
end

# Define a function to calculate the distance between two points
function distance(point1::Point, point2::Point)
    return sqrt((point1.x - point2.x)^2 + (point1.y - point2.y)^2)
end

# Define an empty array to hold the points
points = []

# Generate 10 random points and add them to the array
for i in 1:10
    # Generate a random x coordinate between -10 and 10
    x = rand(-10:10)
    
    # Generate a random y coordinate between -10 and 10
    y = rand(-10:10)
    
    # Create a new Point object with the generated coordinates and add it to the array
    push!(points, Point(x,y))
end

# Sort the points in the array by their x coordinates in descending order
sort!(points, by = point -> point.x, rev=true)

# Loop through the sorted array and print the distances between consecutive points
for i in 1:(length(points)-1)
    # Calculate the distance between the current point and the next point
    current_distance = distance(points[i], points[i+1])
    
    # Print the distance in a formatted string
    println("The distance between Point ", i, " and Point ", i+1, " is ", current_distance)
end
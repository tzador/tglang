# This is a code snippet in Julia

function initialize_grid()
    # This function initializes a 3x3 grid with all zeros
    grid = zeros(Int, 3, 3)
    return grid
end

function place_marker(grid, row, col, marker)
    # This function places a marker (X or O) at the specified row and column on the grid
    grid[row, col] = marker  # Assign marker to specified position
    return grid
end

function check_win(grid)
    # This function checks if there is a winner on the grid
    # Check rows for a winner
    for i in 1:3
        if grid[i, 1] == grid[i, 2] == grid[i, 3] != 0  # Check if all elements in a row are equal and not 0
            return grid[i, 1]  # Return the winning marker
        end
    end

    # Check columns for a winner
    for j in 1:3
        if grid[1, j] == grid[2, j] == grid[3, j] != 0  # Check if all elements in a column are equal and not 0
            return grid[1, j]  # Return the winning marker
        end
    end

    # Check diagonal for a winner
    if grid[1, 1] == grid[2, 2] == grid[3, 3] != 0  # Check if all elements in the diagonal are equal and not 0
        return grid[1, 1]  # Return the winning marker
    end

    if grid[1, 3] == grid[2, 2] == grid[3, 1] != 0  # Check if all elements in the diagonal are equal and not 0
        return grid[1, 3]  # Return the winning marker
    end

    return 0  # If no winner, return 0
end

function game_loop()
    # This function contains the main game loop
    current_grid = initialize_grid()
    winner = 0

    while winner == 0
        current_player = "X"
        println("Player $current_player's turn")

        # Prompt user for input
        print("Row: ")
        row = parse(Int, readline())

        print("Column: ")
        col = parse(Int, readline())

        current_grid = place_marker(current_grid, row, col, current_player)
        winner = check_win(current_grid)

        if winner != 0
            println("Player $winner wins!")
        else
            # Switch to the next player
            if current_player == "X"
                current_player = "O"
            else
                current_player = "X"
            end
        end
    end
end

game_loop()  # Call the main game loop function to start the game
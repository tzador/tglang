# Define a function that calculates the nth Fibonacci number
function fibonacci(n::Integer)
    # Check if n is valid input 
    if n < 1 
        # If not, throw an error 
        error("n must be a positive integer") 
    elseif n == 1 || n == 2 
        # Base cases: first and second Fibonacci number = 1 
        return 1 
    else 
        # Use recursion to calculate nth Fibonacci number 
        return fibonacci(n-1) + fibonacci(n-2) 
    end 
end

# Initialize an empty array to store Fibonacci numbers
fib_nums = []

# Loop through values of n from 1 to 10 
for n in 1:10 
    # Call Fibonacci function and append result to fib_nums array
    push!(fib_nums, fibonacci(n)) 
end 

# Print out the Fibonacci numbers 
println(fib_nums)
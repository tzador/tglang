using LinearAlgebra # import LinearAlgebra module

# define a function to perform matrix multiplication
function matrix_multiplication(A, B)
    m, n = size(A) # get dimensions of matrix A
    p, q = size(B) # get dimensions of matrix B
    if n != p
        error("Matrices dimensions do not match.")
    end
    C = zeros(m,q) # initialize result matrix C
    for i = 1:m
        for j = 1:q
            for k = 1:n
                C[i,j] += A[i,k] * B[k,j] # perform multiplication of corresponding elements
            end
        end
    end
    return C # return the product matrix
end

# define two matrices A and B to be multiplied
A = [1 2 3; 4 5 6; 7 8 9] # matrix A with dimensions 3x3
B = [9 8 7; 6 5 4; 3 2 1] # matrix B with dimensions 3x3

# perform matrix multiplication
C = matrix_multiplication(A, B) # store product matrix in variable C

# print the result
println(C) # output: [30 24 18; 84 69 54; 138 114 90] 

@code_native matrix_multiplication(A, B) # output disassembled code using code_native macro
mutable struct Employee
    name::String
    department::String
    salary::Float64
    benefits::Vector{String}
end

# Define the constructor for the Employee struct
function Employee(name::String, department::String, salary::Float64, benefits::Vector{String})
    emp = Employee()
    emp.name = name
    emp.department = department
    emp.salary = salary
    emp.benefits = benefits
    return emp
end

# Create an employee object
emp1 = Employee("John Smith", "Engineering", 100000.0, ["health insurance", "401k"])

# Define a function to calculate the total compensation for an employee
function total_compensation(emp::Employee)
    total = emp.salary
    for benefit in emp.benefits
        if benefit == "health insurance"
            total += 5000.0
        elseif benefit == "401k"
            total += emp.salary * 0.05
        end
    end
    return total
end

# Print the total compensation for emp1
println("Total compensation for $(emp1.name): $(total_compensation(emp1))")
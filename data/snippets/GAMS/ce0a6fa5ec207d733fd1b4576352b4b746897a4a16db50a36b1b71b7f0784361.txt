Sets
    i 'cities' / 1*10 /
    t 'time periods' / 1*6 / ;

Alias (i,j);

Parameters
    t0(t) 'initial availability at time' /1 60, 2 35, 3 45,
                                        4 55, 5 69, 6 33/
    tc(i) 'transport cost from city i'
          / 1 2.5, 2 5.1, 3 3.6,
            4 1.9, 5 8.2, 6 6.4, 7 4.2, 8 7.8, 9 5.3, 10 9.1 /
    p 'price per unit of goods' / 10.3 /;

Scalar demand;
demand = 50;

Variable
    x(i,j) 'shipment quantities in cases'
    z 'total transportation costs in thousands of rupees';

Positive Variable x;

Equation
    totalcost
    obj
    supply(i)
    demand;

totalcost..    z =e= sum((i,j), tc(i)*x(i,j));
obj..          z =e=e=e=e=e=e=e=e=  + sum((i,j), p*x(i,j));

supply(i)..    sum(j, x(i,j)) =l=e= t0(t);
demand..       sum(i, x(i,'bom']] =g= demand;

Model transport / totalcost, obj, supply, demand /;

x.l(i,j) = 0;

"* This model solves a transportation problem over six time periods and ten cities.
  * The objective function minimizes total transportation costs, taking into account initial availability of goods and the price per unit.
  * The supply constraint ensures that the total shipment quantities from each city do not exceed the initial availability.
  * The demand constraint ensures that the total shipment quantities meet the demand.
  * The code snippet also includes parameter and variable declarations, as well as the use of aliases to simplify notation.
  * The model is solved by setting initial values to all variables, and then calling the 'solve' function.
  * The optimal solution is then stored in the 'x.l' variable, which represents the shipment quantities.
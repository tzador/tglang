set i 'index of rows'
set j 'index of columns'
set k 'index of time periods'

parameter d(i,j) 'distance matrix';
parameter c(j) 'cost matrix';
parameter b(i) 'demand vector';

variables
x(i,j) 'flow matrix'
y(i,j,k) 'capacity constraint matrix';

equations
cost_define 'define cost for choosing a route'
demand_constraint 'ensure demand is met'
capacity_constraint 'ensure capacity is not exceeded'
;

cost_define.. sum((i,j), c(j)*x(i,j)) =e= sum((i,j), d(i,j)*x(i,j));

demand_constraint(i).. sum(j, x(i,j)) =g= b(i);

capacity_constraint((i,j,k).. x(i,j) =l= y(i,j,k);

model optimalRoute /all/;

solve optimalRoute using lp minimizing cost;
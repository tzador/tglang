Sets
      i 'Plants' /scrub, wash, blend/
      j 'Products Types' /gasoline, diesel, jet/
      k 'Feedstocks' /crude, resids/;
Parameters  
      a(i) 'Capacity of plants determined by scrub, wash and blend'
      b(j) 'Fuel requirements for gasoline, diesel and jet'
      c(i,j) 'Yield coefficients determined by plants and product types'
      cpk(k) 'Crude price'
      r/+50/ 'Interest rate in %'
      fix(i,j) 'Fixed costs associated with plants and product types'
      var(k) 'Feedstock demand'
      totalCost 'Total cost to minimize';
Alias (i,m), (i,m) 'Mappings from i to m /Products to Plants/'
Alias (j,n) 'Mappings from j to n /Products to Feedstock/';
 
Equations
      costFunction 'Defining the total costs'
      capacity 'Ensuring that production capacity is not exceeded'
      output 'Ensuring that total output matches total demand';
 
costFunction.. totalCost =e= sum((i,j), fix(i,j)*z(i,j) + c(i,j)*x(i,j)) + sum(k, cpk(k)*var(k));
capacity.. sum(i, sum(j, b(j)*x(i,j))) =l= sum(i, a(i));
output.. sum(j, z(i,j)) =e= sum(k, var(k));
 
Model refinery /all/;
 
solve refinery using mip minimizing totalCost;
 
Display x.l, z.l, totalCost.l;
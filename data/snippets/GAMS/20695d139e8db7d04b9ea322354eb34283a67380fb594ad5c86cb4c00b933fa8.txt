* Sets declaration
Set i districts /1*10/;             * Set i represents the districts from 1 to 10
Set j warehouses /1*5/;              * Set j represents the warehouses from 1 to 5

* Parameters declaration
Parameter c(i,j) warehouse costs;     * c(i,j) represents the cost of shipping from district i to warehouse j
Parameter d(i,j) demand;              * d(i,j) represents the demand of district i from warehouse j
Parameter s(j) supply;                * s(j) represents the maximum supply available at warehouse j

* Variable declaration
Variable x(i,j) shipment;             * x(i,j) represents the amount shipped from district i to warehouse j

* Objective function
Equation total_cost;                  * Equation to minimize the total cost
total_cost..                           * Objective function = sum(i, sum(j, c(i,j)*x(i,j)));

* Constraints
Equation supply_constraint(j);        * Constraint on maximum supply at each warehouse
supply_constraint(j)..                * For each warehouse j, sum(i, x(i,j)) = s(j);

Equation demand_constraint(i);        * Constraint on fulfilling demand for each district
demand_constraint(i)..                * For each district i, sum(j, x(i,j)) = d(i,j);

Model transportation_model / all /;   * Model to solve the transportation problem

* Solve the model
Solve transportation_model using lp minimizing total_cost;

* Print solution
x.l('1','3') 'Shipping amount from district 1 to warehouse 3';      * Print the solution of shipping amount from district 1 to warehouse 3
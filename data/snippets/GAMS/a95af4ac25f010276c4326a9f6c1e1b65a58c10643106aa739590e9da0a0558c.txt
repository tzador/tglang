set i "locations"
set j "customers"
set k "vehicles";
alias(k, lk);
set lkc(i,j) "assigns customer j to vehicle k";
set lkc(i,j) "number of vehicles required for customer j";
set lkmax "maximum number of vehicles available";
set lkmin "minimum number of vehicles required";

parameter demand(i) "demand for each location";
parameter capacity(lk) "maximum capacity of each vehicle";
parameter fixedCost(lk) "fixed cost of each vehicle";
parameter varCost(lk) "variable cost of each vehicle per unit distance";

scalar obj "total cost";
scalar x(lk, i,j) "fraction of demand satisfied by each vehicle for each location";

obj..=e=sum(lk, k=1 to lkmax, i=1 to i,
        sum(j=1 to j, (lkc(i,j)/demand(i))*varCost(lk)*distance(i,j)*x(lk,i,j))) +
        sum(lk, k=1 to lkmax, fixedCost(lk));

x.lo(lk, j) = demand(i)/capacity(lk);
x.fx(lk, i, j)$(capacity(lk) > demand(i)) = demand(i)/capacity(lk);

model supplyChain /all/;

solve supplyChain using lp min obj;
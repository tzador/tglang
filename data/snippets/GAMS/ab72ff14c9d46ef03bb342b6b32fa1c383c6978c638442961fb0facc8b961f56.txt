Set i 'first set' /i1*i10/;
Set j 'second set' /j1*j5/;

Parameters
    x(i,j) 'random values'
    y(i)   'constant values'
    z(j)   'multiplier values';

x(i,j) = uniform(10, 50);    $  initialize x values with random numbers between 10 and 50
y(i)   = 1.5;                $  set y values to a constant value of 1.5
z(j)   = round(exp(discrete_uniform(1,5)), 2);   $  round the exponential of discrete uniform values between 1 and 5 to 2 decimal places

Variables
    a(i)   'first variable'
    b(j)   'second variable'
    c(i,j) 'third variable';

Positive Variable a(i);   $  define a as a positive variable
Binary Variable b(j);     $  define b as a binary variable
a.fx('i5') = 25;          $  set a[i5] fixed to a value of 25

Equations
    eq1(i,j)
    eq2(i) 'another equation';

eq1(i,j).. c(i,j) =e= (a(i) + b(j)) / (x(i,j) + y(i));   $  define equation 1 as c = (a + b) / (x + y)
eq2(i).. sum(j, b(j)) =g= z(j) * a(i);                    $  define equation 2 as sum of b greater than or equal to z * a

Model test 'test model'
    /all/;
    
Solve test using lp maximizing a;   $  solve the model using lp and maximize the value of a
Display a.l, c.l, eq1.m;             $  display the variable values of a and c, and the marginal value of eq1
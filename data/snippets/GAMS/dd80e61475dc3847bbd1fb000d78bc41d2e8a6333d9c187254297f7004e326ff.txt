Sets
    i "collection of origin nodes"
    j "collection of destination nodes" /1*10/
    k "collection of commodities" /1*5/;

Scalars
    p "distance between origin and destination"
    d "demand for commodities"
    c(i,j) "cost per unit of distance"
    f(k) "freight rate per unit of demand";

Parameters
    a(i) "origin capacity"
    b(j) "destination capacity";

Table aTab(i) "capacity per origin node"
         j    1            2           3
    1    20.0         30.0        50.0
    2    15.0         25.0        40.0
    3    10.0         20.0        30.0;

Table bTab(j) "capacity per destination node"
         j    1      2      3
    1    40.0   50.0   60.0
    2    30.0   40.0   50.0;

Table pTab(i,j) "distance between origin and destination"
         j    1    2    3
    1    10   15   20
    2    12   18   23
    3    14   20   25;

Table dTab(k) "demand for commodities"
         k
    1    500
    2    1000
    3    1500
    4    2000
    5    2500;

Table cTab(i,j) "cost per unit of distance"
         j    1    2    3
    1    0.1  0.2  0.3
    2    0.2  0.4  0.6
    3    0.3  0.6  0.9;

Table fTab(k) "freight rate per unit of demand"
         k
    1    0.02
    2    0.04
    3    0.06
    4    0.08
    5    0.10;

Variables
    x(i,j) "shipments from origin to destination"
    y(k) "amount of commodities shipped";

Positive Variables x, y;

Equations
    balance(i) "balance constraint for origin nodes"
    supply(j) "supply constraint for destination nodes"
    objective "minimize total cost of shipping";

balance(i).. sum(j, x(i,j)) =e= a(i);

supply(j).. sum(i, x(i,j)) =e= b(j);

objective.. z =e= sum((i,j), c(i,j)*p(i,j)*x(i,j)) + sum(k, f(k)*d(k)*y(k));

Model transport /all/;

transport.optcr=0.00001;

Solve transport using LP minimizing z;

Parameter result(i,j) "shipments from origin to destination";
Result(i,j)=x.l(i,j);

Parameter total_cost "total cost of shipping";
total_cost=z.l;

Display result;
Display total_cost;
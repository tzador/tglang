Sets
i 'rectangular points in the plane'
     /1*10/
j 'cities in Europe'
  /Berlin, Brussels, London, Madrid, Paris, Rome/;

Parameters
a(j) 'city populations in millions'
/Berlin 4.5, Brussels 1, London 7.5, Madrid 3.5, Paris 10, Rome 2.5/
d(i,j) 'distances in thousands of kilometers'
       Berlin    Brussels   London     Madrid    Paris      Rome
1    0         8.5        9.5       11        4           9.5
2    8.5       0          8         1         9.5         9
3    9.5       8          0         7.5       7           4
4    11        1          7.5       0         1.5         5
5    4         9.5        7         1.5       0           8.5
6    9.5       9          4         5         8.5         0
7    11        6.5        6         3         5.5         4.5
8    12        2          9         7         6           8
9    12.5      12         5         6         4           10
10   7         11         8         4         10          1.5/;

Variable x(i,j) 'tour routes'
Binary variables z(i,j) 'auxiliary variable to describe the tour routes'
Positive variables u(j) 'population assignment to cities'
Free variables c 'total distance of the tour';

Equations
  obj        'define objective function'
  eq(i,j)    'tour selection constraints'
  total      'compute the total distance'
  balance(j) 'population assignment constraint';

obj..         c =e= sum(i,j, d(i,j)*x(i,j));

eq(i,j)$d(i,j).. u(i) + u(j) =l= a(j)*z(i,j);

total..       c =e= sum(i,j, d(i,j)*x(i,j));

balance(j)..  sum(i,z(i,j)) =e= 1;

Model shortestPath 'shortest path model' /all/;

solve shortestPath using lp minimizing c;

display x.l, z.l, u.l;
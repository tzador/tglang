set i 'index of Alpha' /1980*2010/
set j 'index of Beta' /1*12/

$ontext
Declaration of two sets, i and j, with annotations for clarity.
$offtext

set prod 'set of all products'
parameter sp(i,j) 'sales price per unit'
parameter rf(i) 'revenue factor'
parameter w 'cost factor'
parameter c1 'fixed setup cost'
parameter c2(i) 'variable production cost'
parameter c3(i) 'variable selling cost'
parameter r
parameter c
parameter obj

parameter in(i,j)
parameter out(i,j)

$ontext
Declaration of parameters with annotations for clarity.

prod(i) = yes;
sp(i,j) = uniform(10,50);
rf(i) = uniform(0.7,1);
w = uniform(0.5,1);
c1 = uniform(1000,5000);
c2(i) = uniform(5,20);
c3(i) = uniform(2,10);

in(i,j) = uniform(500,2000);
out(i,j) = uniform(200,500);

r(i,j) = (in(i,j) - out(i,j)) * sp(i,j) * rf(i);
c = sum(i, c1 + c2(i) + c3(i) * out(i,j));
obj = r - c;

model example /all/;
solve example using mip maximizing obj;

display r.l, c.l, obj.l;
$offtext

$ontext
Data generation and creation of a mixed integer programming (MIP) model to maximize the objective function.
$offtext

$if errorfree
  $echo MIP is successfully solved!
  execute_load "cplex.opt";
  r.l(i,j) = in(i,j).l;
  c.l = c.l;
  obj.l = obj.l;
  display r.l, c.l, obj.l;
$else
  $echo MIP solver failed to find a solution.
  scalar loop /1/;
  execute_unload "cplex.opt";
$endif

$ontext
Conditional statements to check if the MIP was solved successfully and to display the results.
$offtext
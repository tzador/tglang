SETS
    i 'nodes' /1*10/
    j 'nodes' /1*10/;
PARAMETERS
    c(i,j) 'connection cost' /
         1  2  3  4  5  6  7  8  9 10
    1  0  2  3  0  0  0  0  0  0  0
    2  2  0  0  4  0  0  0  0  0  0
    3  3  0  0  0  3  0  0  0  0  0
    4  0  4  0  0  0  2  0  0  0  0
    5  0  0  3  0  0  0  1  0  0  0
    6  0  0  0  2  0  0  0  5  0  0
    7  0  0  0  0  1  0  0  0  4  0
    8  0  0  0  0  0  2  0  0  0  3
    9  0  0  0  0  0  0  4  0  0  2
   10  0  0  0  0  0  0  0  3  2  0 /;

PARAMETERS
    d(i,j) 'distance between nodes' /
         1  2  3  4  5  6  7  8  9 10
    1  0  5  7  0  0  0  0  0  0  0
    2  5  0  0  8  0  0  0  0  0  0
    3  7  0  0  0  6  0  0  0  0  0
    4  0  8  0  0  0  4  0  0  0  0
    5  0  0  6  0  0  0  2  0  0  0
    6  0  0  0  4  0  0  0 10  0  0
    7  0  0  0  0  2  0  0  0  9  0
    8  0  0  0  0  0  4  0  0  0  8
    9  0  0  0  0  0  0  6  0  0  6
   10  0  0  0  0  0  0  0  5  4  0 /;

VARIABLES
    x(i,j) 'connection status'
    y(i,j) 'distance traveled';

EQUATIONS
    obj
    con(i,j)
    obj_def(i,j)
    con_def(i,j);

obj.. y =e= sum((i,j), c(i,j)*x(i,j));  // Objective function

con(i,j).. d(i,j) =l= y(i,j);  // Distance constraint
con_def(i,j).. x(i,j) =l= 1;  // Connection status constraint
obj_def(i,j).. x(i,j) =g= 0;  // Connection status definition

MODEL shortest_route /all/;
SOLVE shortest_route using lp minimizing y;

DISPLAY x.l, y.l; // Print optimal connection status and distance traveled
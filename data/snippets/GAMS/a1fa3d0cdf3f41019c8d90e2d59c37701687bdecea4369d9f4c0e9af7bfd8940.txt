* Set of products
Set P "Products" / P1, P2, P3 /;

* Set of months
Set M "Months" / M1*M12 /;

* Set of production lines
Set L "Production Lines" / L1, L2 /;

* Table of minimum production requirements for each product
Table MinProd(P, M)
           M1   M2   M3   M4   M5   M6   M7   M8   M9   M10  M11  M12
P1         100  100  120  110  115  122  110  112  120  126  115  110
P2         150  130  120  140  135  130  135  140  125  130  140  130
P3         90   100  105  95   98   105  110  100  105  110  120  115;

* Table of production capacities for each production line
Table ProdCap(L, M)
        M1   M2   M3   M4   M5   M6   M7   M8   M9   M10  M11  M12
L1      200  200  200  225  225  225  200  200  200  225  225  225
L2      175  175  175  200  200  200  175  175  175  200  200  200;

* Decimal variable for amount of product produced in each month
Variable Prod(P, M) "Amount of product produced"
Positive Variable CanBeZero(P, M) "Boolean variable for whether production can be zero";

* Constraints
Production_con(P, M)..
    Prod(P, M) =g= MinProd(P, M);

LineCapacity_con(L, M)..
    sum(P, Prod(P, M)) =l= ProdCap(L, M);

CanBeZero_con(P, M)..
    CanBeZero(P, M) =e= (Prod(P, M) =l= 0);

* Objective function to minimize production costs
Equation obj;
obj.. sum(P, M, Prod(P, M)) =e= sum(P, M, CanBeZero(P, M));

* Solve the model
Model production /all/;
Solve production using mip minimizing obj;

* Display the solution in a table
Display Prod, CanBeZero;
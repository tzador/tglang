SETS
i     'indexes of items'  /i1*i10/
j     'indexes of stores' /j1*j5/

PARAMETER
cost(i)     'unit cost of each item'   /i1 10, i2 20, i3 30, i4 40, i5 50, i6 60, i7 70, i8 80, i9 90, i10 100/
demand(i)   'demand of each item'       /i1 5,  i2 7,  i3 3,  i4 10, i5 12, i6 4,  i7 8,  i8 9,  i9 6,  i10 11/
store_cap(j)'maximum capacity of each store' /j1 100, j2 80, j3 120, j4 90, j5 110/

VARIABLE
quantity(i,j)    'quantity of items to be shipped from each store to each item'
z                'total cost of shipping'

EQUATIONS
demand_constraint(i)   'constraint on demand of items'
capacity_constraint(j)'constraint on maximum capacity of stores'
objective_function    'minimize total cost of shipping'

demand_constraint(i)..    sum(j, quantity(i,j)) =e= demand(i);
capacity_constraint(j)..  sum(i, quantity(i,j)) =l= store_cap(j);
objective_function..      z =e= sum((i,j), cost(i)*quantity(i,j));

MODEL shipping_problem /all/;

SOLVE shipping_problem using lp minimizing z;

DISPLAY quantity.l, z;
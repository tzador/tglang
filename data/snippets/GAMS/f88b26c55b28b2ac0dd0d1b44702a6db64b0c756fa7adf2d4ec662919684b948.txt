set i 'Set of rows' /1*10/;  % defining set 'i' with elements from 1 to 10 %

alias(j,k);

parameter A(i,j) 'Matrix of random numbers'; % defining a parameter 'A' with dimensions of 'i'x'j' %

A(i,j) = uniform(0,1); % generating random numbers between 0 and 1 for each element of 'A' %

parameter b(i) 'Vector of constants'; % defining a parameter 'b' with dimensions of 'i' %

b(i) = normal(0,1); % generating random numbers from the standard normal distribution for 'b' %

parameter c(j) 'Weight vector'; % defining a parameter 'c' with dimensions of 'j' %

c(j) = uniform(-1,1); % generating random numbers between -1 and 1 for 'c' %

variable x(j) 'Decision variables'; % defining a variable 'x' with dimensions of 'j' %

equation obj 'Objective function'; % defining an equation 'obj' for the objective function %

obj.. sum(j, c(j)*x(j)) =e= sum(i, A(i,j)*x(j)) - b(i); % objective function equation %

equation con(i) 'Constraint equations'; % defining a set of equations 'con' for the constraints %

con(i).. sum(j, A(i,j)*x(j)) =l= 1; % constraints ensuring the sum of each row of 'A' is less than or equal to 1 %

model example 'Example model' /obj, con/; % defining the model 'example' with objective function and constraints %

solve example using lp minimizing obj; % solving the model using linear programming to minimize the objective function %

display x.l; % displaying the solution for the decision variables %
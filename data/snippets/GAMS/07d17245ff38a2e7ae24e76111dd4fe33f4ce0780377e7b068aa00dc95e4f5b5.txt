Sets i 'index for nodes in network'
     j 'index for arcs in network';

Parameters c(i,j) 'arc capacity'
           d(i) 'demand at node';

c(i,j) = UniformInt(1,10); // generates random capacity for all arcs
d(i) = DiscreteNormal(100,20); // generates random demand for all nodes

Variables x(i,j) 'flow on each arc'
          z 'total cost';

Positive Variables x;

Equations flowcons(i) 'flow conservation at each node'
          costdef 'definition of total cost';

flowcons(i).. sum(j, x(i,j)) =e= d(i); // ensures flow conservation at each node
costdef.. z =e= sum((i,j), c(i,j)*x(i,j)); // calculates total cost based on flow and capacity

Model m /all/; // defines model named 'm' with all equations and variables

Solve m minimizing z using MIP; // solves the model with mixed-integer programming algorithm

Display x.l, d.l; // displays the optimal variable values and corresponding demand values
* This is a GAMS code snippet for a quadratic programming problem
Set i /1*10/;  #Define set i with 10 elements
Parameters A(i,j)  #Parameters for matrix A
         b(i)  #Parameter for vector b
         d;  #Parameter for scalar d
A(i,j) = 2*i-j;  #Assign values to matrix A using loop
b(i) = 3*i;  #Assign values to vector b using loop
d = 5;  #Assign value to scalar d
Variable x(i), y;  #Define variables x and y
Binary Variable z(i);  #Define binary variable z
Equations
       obj  Objective function
       con(i)  Linear constraints
       binarycon(i)  Binary constraints
obj.. y =e= sum(i, (sum(j, A(i,j) * x(j)))**2 - sum(i, b(i) * x(i)) + d * z(i));  #Define objective function
con(i).. sum(i, x(i)) =l= sum(i, b(i) * z(i));  #Define linear constraints
binarycon(i).. x(i) =l= b(i) * z(i);  #Define binary constraints
Model QP /all/;  #Define model named QP for all variables and equations
QP.optfile = 1;  #Set option to write solution file
QP.optcr = 0;  #Set option to not display solution on screen
QP.obj = objective function;  #Set objective function for model
QP.limrow = 0;  #Set option to not limit number of rows in solution
Solve QP using NLP minimizing y;  #Solve QP using NLP algorithm, minimizing y
Display x.l, z.l;  #Display the solution values for variables x and z in the model
/*****************************************************/
/***************** GAMS Code Snippet *****************/
/*****************************************************/

Sets                                                  // Define Sets

i        Set of nodes;
j        Set of arcs;

Parameters                                            // Define Parameters
c(i,j)   Arc capacity;
d(i)     Node demand;
n        Set of nodes;

Variables                                            // Define Variables
x(i,j)   Flow on arc;
z        Total cost;

Positive Variables                                  // Define Positive Variables
x;

Equations                                            // Define Equations
TotalCost            Objective function
costDifferentFrom0   Condition for non-zero cost;
arcCap               Constraint on arc capacity;
nodeDemandSatisfied  Constraint on node demand;

TotalCost .. z =e= sum((i,j), c(i,j)*x(i,j));        // Objective Function
                                                         // (e= shows that this is an equation)
costDifferentFrom0(i,j).. c(i,j)*x(i,j) =g= 0;       // Condition for non-zero cost 
                                                         // (g= shows that this is a greater-than-or-equal constraint)
arcCap(i,j).. x(i,j) =l= c(i,j);                     // Constraint on arc capacity 
                                                         // (l= shows that this is a less-than-or-equal constraint)
nodeDemandSatisfied(i).. sum(j, x(i,j)) =g= d(i);    // Constraint on node demand 
                                                         // (g= shows that this is a greater-than-or-equal constraint)

Model networkFlow /TotalCost, costDifferentFrom0, arcCap, nodeDemandSatisfied/;   // Define model instance
                                                                                       // (trailing semicolon indicates end of statement)
Solve networkFlow using lp minimizing z;               // Solve the model using linear programming and minimize the total cost

Display z.l;                                         // Display the optimal value of the objective function (total cost)
Display x.l, x.m;                                     // Display the optimal values of the flow variable and the marginal value (dual variable)

/*****************************************************/
/******************************************************/
/******* End of GAMS Code Snippet *********************/
/******************************************************/
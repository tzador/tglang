Set i 'index i' / 1*10 /
     j 'index j' / 1*5 /;
     
Table d(i,j) 'distance matrix';
    
  1   2   3   4   5
1 10  15  20  25  30
2 15  20  25  30  35
3 20  25  30  35  40
4 25  30  35  40  45 
5 30  35  40  45  50
6 35  40  45  50  55 
7 40  45  50  55  60 
8 45  50  55  60  65
9 50  55  60  65  70
10 55  60  65  70  75;
 
Parameter c(i,j);
Scalar pi 'pi for distance calculations';

pi = 3.14159265358979;

c(i,j) = sqrt(d(i,j)) * pi;

Variables 
     u(i) 'position of city i'     
     x(i,j) '1 if city j is next to i in the tour'
     
Binary variables x;
     
Equations 
     obj 'Objective function'
     flow(i) 'Flow through city i'
     t(i,j) 'Link between i and j'
     up(i) 'Upper bound on u(i)';
     
obj .. u(1) =e= 0;
     
flow(i) ..
     sum(j, x(j,i)) - sum(u(i)) =e= 0;
     
t(i,j) ..
     u(i) - u(j) + 3*x(i,j) =l= 2;
     
up(i) ..
     u(i) =l= 10;
     
Model tsp /all/;
     
Solve tsp using mip minimizing obj;

Display x.l, u.l;
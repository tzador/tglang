* Sets
set i 'first index' /1*10/, j 'second index' /1*5/;

* Parameters
parameter c(i) 'capacity' /1 90, 2 60, 3 100, 4 80, 5 120, 6 70, 7 40, 8 50, 9 30, 10 20/
          d(j) 'demand' /1 20, 2 50, 3 40, 4 60, 5 30/;

* Binary variables to represent if a facility is open or not
binary x(i) 'facility open or not';

* Objective function
scalar objective 'total cost';
objective = sum(i, c(i)*x(i));

* Constraints
* Constraint to ensure demand is met
equation demand(j);
demand(j).. sum(i, x(i)) =g= d(j);

* Constraint to limit number of facilities that can be opened
scalar max_open 'maximum number of facilities that can be open';
max_open = 3;
equation max_open;
max_open.. sum(i, x(i)) =l= max_open;

* Solve the model
model warehouse_location /all/;

* Set solver options
option lp=cplex;

* Solve using CPLEX solver
solve warehouse_location using lp minimizing objective;

* Display the results
display x.l, objective.l;
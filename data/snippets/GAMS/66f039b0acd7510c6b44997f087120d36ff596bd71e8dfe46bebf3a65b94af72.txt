Sets
   i    'rows'             / 1*3 /
   j    'columns'          / 1*4 /
   k    '3rd dimension'    / 1*5 /;

Parameters
   A(i,j) 'input matrix'
   B(i,k) 'input matrix'
   C(j,k) 'input matrix';

Display A,B,C;

Variables
   X(i,j) 'decision variables'
   Y(i,k) 'decision variables'
   Z(j,k) 'decision variables';

Positive Variables
   delta 'auxiliary variable';

Binary Variables
   sigma(i,j,k) 'auxiliary variable';

Equations
   eq1(i,j) 'equation 1'
   eq2 'equation 2'
   eq3(i,k) 'equation 3'
   eq4(j,k) 'equation 4'
   obj 'objective function';

eq1(i,j)..        sigma(i,j,k)*X(i,j) =l= delta;

eq2..             sum((i,j,k), sigma(i,j,k)*X(i,j)) =e= 1;

eq3(i,k)..        sum(j, C(j,k)*Y(i,k)) =g= B(i,k);

eq4(j,k)..        sum(i, C(j,k)*Y(i,k)) =g= A(j,k);

obj..             delta =e= sum((i,j,k), sigma(i,j,k)*(B(i,k) - A(i,j)));

Model example / all /;

Solve example using LP maximizing obj;

Display X.L, Y.L, Z.L, delta.L, sigma.L;

Attribute Free Variables
   X, Y, Z;

* loop over all k
k.Loop((k,{

* set values for A and B
     A(i,j) = uniform(5);
     B(i,k) = uniform(10);
     C(j,k) = uniform(15);

* solve the problem for the current k
     solve example using LP maximizing obj;
     display X.L, Y.L, Z.L, delta.L, sigma.L;
}

Cyclic storage construction
     STOAGE_DATA(A,B,C) 'input matrix data';

put storage_data > funfile;
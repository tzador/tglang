Sets
i customers /c1*c10/;  // creates set of customers
j products /p1*p20/;  // creates set of products

Parameters
cost(i,j) /     // creates a parameter, defining the cost for each customer and product
c1.p1   2
c1.p2   3
c1.p3   2
c2.p1   3
c2.p2   1
c2.p3   4
c3.p1   1
c3.p2   2
c3.p3   5
c4.p1   4
c4.p2   3
c4.p3   4
c5.p1   2
c5.p2   2
c5.p3   6
c6.p1   3
c6.p2   5
c6.p3   1
c7.p1   4
c7.p2   2
c7.p3   3
c8.p1   5
c8.p2   4
c8.p3   4
c9.p1   2
c9.p2   1
c9.p3   5
c10.p1   3
c10.p2   4
c10.p3   3 /;

Variables
x(i,j) binary; // creates binary variable x with bounds 0 and 1
z; // creates a continuous variable z

Equations
cost_eq(i) /     // equation for cost
z =e= sum((i,j), cost(i,j) * x(i,j));  // calculates total cost for each customer

Model example /all/; // creates a GAMS model

Solve example minimizing z using LP; // solves the model by minimizing z using LP (Linear Programming)

Display x.l, z.l; // displays the values of the decision variables (x) and the solution value (z) in the output window
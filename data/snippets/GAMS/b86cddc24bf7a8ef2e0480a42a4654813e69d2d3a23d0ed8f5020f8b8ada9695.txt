* This is a GAMS code snippet for solving a max flow problem using the network simplex algorithm
set nodes 'Set of nodes';
alias (i,j);
node (in, out);
set arcs 'Set of arcs';
scalar flow 'Flow on arc';
set flow (arcs) 'Set of non zero flow arcs';
parameter cap (arcs) 'Arc capacity';
scalar inflow (nodes), outflow (nodes), obj 'Objective function';
node source, sink; source = in('1'); sink = out('6');
option optcr = 1e-8, optca = .1;
* Define objective function
obj.. inflow(sink) =e= outflow(sink);
* Define constraints
   inflow(in) = - outflow(in);
   cap(in, in) = 0;
   cap(j, in) = 1.0; cap(i, out) = 0.0; flow(j, in) =l= cap(j, in);
   node source.. outflow('1') =e= sum(i$(not in(i)), cap(i, '1'));
   node node1.. outflow('2') + outflow('3') =e= inflow('3') + inflow('4');
   node node2.. outflow('5') =e= inflow('5') + inflow('6') + inflow('7');
   node node3.. outflow('8') + outflow('9') =e=
$      inflow('8') + inflow('9') + inflow('10');
   node node4.. outflow('11') + outflow('12') =e= inflow('11');
   node node5.. outflow('4') =e= inflow('4') + inflow('9');
   node node6..
$      outflow('7') =e= inflow('7') + inflow('10') + inflow('12')
* Define constraints for non zero flow arcs
arcs(flow).. flow(arcs)$(not flow(arcs)) =e= 0.0;
* Define upper and lower bounds for outflows
outflow.lo(nodes) = 0.0;
outflow.up(nodes) = 1.0;
* Solve the problem using network simplex algorithm
solve min obj using nlp;
* Print out results
display flow.l, inflow.l, outflow.l, obj.l;
Sets i nodes 'set of nodes';
parameter c(i,j) 'cost of edges';
set k paths(i,j) 'set of all possible paths from node i to node j';

*Calculate shortest distance between two nodes
variables
    x(i,j) 'location of edges'
    d(i,j) 'distance between nodes'
    s 'starting node'
    t 'target node';

positive variables d;

equations

    shortestpath(i,j) 'equation to calculate shortest distance'
    definition(i,j) 'equation to define decision variable'
    objective 'equation for objective function';

shortestpath(i,j).. d(i,j) =e= c(i,j)*x(i,j);        
*constraint to ensure shortest distance is used

definition(i,j).. x(i,j) =l= 1;        
*decision variable needs to be equal to 1 or else path is not chosen

objective.. sames_distance =e= sum((i,j), d(i,j)); 
*objective function to minimize total distance of chosen paths

model shortestpath / all /;

option optcr=0.001, limcol=0, limrow=0, solprint=off;
solve shortestpath using lp minimizing total_distance;

display total_distance.l;
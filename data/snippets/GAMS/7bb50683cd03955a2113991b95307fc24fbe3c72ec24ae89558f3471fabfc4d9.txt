* This is a multi-index transportation problem

set i /chicago, jacksonville, newyork, losangeles/; * set of origin cities
set j /dallas, philadelphia, seattle, atlanta/; * set of destination cities
alias(i,j); * a shortcut to define all combinations of origin and destination cities

parameters
c(i,j) /chicago.dallas 500, chicago.philadelphia 700, chicago.seattle 1200, chicago.atlanta 900,
      jacksonville.dallas 600, jacksonville.philadelphia 800, jacksonville.seattle 1300, jacksonville.atlanta 1000,
      newyork.dallas 400, newyork.philadelphia 600, newyork.seattle 1500, newyork.atlanta 1200,
      losangeles.dallas 1100, losangeles.philadelphia 1300, losangeles.seattle 400, losangeles.atlanta 900 /
s(i) /chicago 100000, jacksonville 80000/; * supply of goods at each origin city, represented in thousand items
d(j) /dallas 70000, philadelphia 100000/; * demand for goods at each destination city, represented in thousand items

variables
x(i,j) 'route of goods from origin city i to destination city j'
z 'total cost of transportation'
;

positive variable x; * indicates that variable x can only take on positive values

equations
obj 'objective function'
conSupply(i) 'constraint on total supply of goods at each origin city'
conDemand(j) 'constraint on total demand for goods at each destination city'
conFlow(i) 'constraint on flow of goods from each origin city'
;

obj.. z =e= sum((i,j), c(i,j)*x(i,j)); * objective function to minimize total cost of transportation

conSupply(i).. sum(j, x(i,j)) =l= s(i); * constraint that the total flow of goods from each origin city cannot exceed its total supply

conDemand(j).. sum(i, x(i,j)) =g= d(j); * constraint that the total flow of goods to each destination city must meet its total demand

conFlow(i).. sum(j, x(i,j)) =e= s(i); * constraint that the total flow of goods from each origin city must equal its total supply

model transport /all/; * defines the model and includes all equations and variables
 
solve transport minimizing z using lp; * solves the model using linear programming
 
display x.l, z.l; * displays the solution values for variables x and objective function z
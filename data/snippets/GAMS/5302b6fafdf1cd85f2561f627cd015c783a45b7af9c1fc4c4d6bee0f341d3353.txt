set i 'schools' /1*10/
alias(i,j), k(i), m(i,j), n(i,j);

table distance(i,j) 'distance matrix'
                  
          1  2    3     4    5    6    7    8    9    10
1       0  10   20    30   40   50   60   70   80   90
2       10  0    40    50   60   70   80   90   100  110
3       20  40   0     60   80   100  120  140  160  180
4       30  50   60    0    90   120  150  180  210  240
5       40  60   80    90   0    100  200  300  400  500
6       50  70   100   120  100  0    130  260  390  520
7       60  80   120   150  100  130  0    140  280  420
8       70  90   140   180  300  260  140  0    120  360
9       80  100  160   210  400  390  280  120  0    200
10      90  110  180   240  500  520  420  360  200  0;

scalar k_min 'minimum number of schools';
parameter d(i,j) 'distance to nearest school';
variable x(i) 'binary variable';
equation assign_school(i);

k_min = 5; 

execute unloads '%gams_sysin% = 1';
execute 'sed -i ''/k_min/d'' %gams_sysin%';
execute 'sed -i ''/4 k i/d'' %gams_sysin%';
execute 'echo "Parameter k_min /%k_min%/" >> %gams_sysin%';
execute 'echo "Scalar kf_min 'minimum number of schools';' >> %gams_sysin%';
execute 'for { set i 5 } { $i < 9 } { incr i 1 } {echo "Parameter d(i,'i') /%d(i,'i')%/" >> %gams_sysin%};';
execute 'echo "Variable x(i) 'binary variable';" >> %gams_sysin%';
execute 'echo "Equation assign_school(i) /a(i)/;" >> %gams_sysin%';
execute 'printf "free_k(x,i) .. x.fx(i) =e= 1;" >> %gams_sysin%';
execute 'printf " sum(j, x(j)) =l= k_min " >> %gams_sysin%';
execute 'for { set i 1 } { $i <= 10 } { incr i 1 } {printf " assign_school(i) .. sum(j, d(i,j)*x(j))=l= distance(i, i) " >> %gams_sysin%};';
execute 'execute.loops = 1;';

model k_facility /all/;
solve k_facility max x using mip;
sets
    i 'first index' /1*25/    # creating a set 'i' with index values 1 to 25
    j 'second index' /a,b,c/   # creating a set 'j' with index values a, b, c
    k(i,j) 'third index';      # creating a two-dimensional set 'k' with indexes from set 'i' and set 'j'
parameters
    p      'parameter'         # creating a parameter 'p'
    q(i,j) 'parameter';        # creating a two-dimensional parameter 'q'
table t
    a b c
x   1 2 3
y   4 5 6;                    # creating a table 't' with row and column headers and corresponding values
variables
    x(i) 'first variable'      # creating a variable 'x' indexed by set 'i'
    y(i,j) 'second variable';  # creating a two-dimensional variable 'y' indexed by set 'i' and set 'j'
equations
    e1      'first equation'   # creating an equation 'e1'
    e2(i)   'second equation'  # creating an equation 'e2' indexed by set 'i'
    e3(i,j) 'third equation';  # creating a two-dimensional equation 'e3' indexed by set 'i' and set 'j'
e1..    sum(i, x(i)) =e= p;     # defining the first equation
e2(i).. sum(j, y(i,j)) =l= q(i,j);  # defining the second equation with inequality constraint
e3(i,j).. x(i)*y(i,j) =g= p*q(i,j);  # defining the third equation with greater-than-or-equal-to constraint 
model testmodel /all/;
solve testmodel using lp minimizing p;   # solving the model 'testmodel' using linear programming and minimizing the parameter 'p'
display x.l, y.l, p.l;   # displaying the solution values for the variables and parameters in the model
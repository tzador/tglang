* Sets
Set i "nodes"/1*3/;
Set j "links"/1*4/;

* Parameters
Parameter
C(i,j) "link capacity"
P(i,j) "link cost"
B(i) "node demand";

Scalar
D "total network demand"
C_min "minimum link capacity";

* Calculations
C_min = sum((i,j), B(i)) / 2 * (card(i) - 1);
D = sum(i, B(i));
P(i,j) = uniform(10,50);
C(i,j) = C_min * 2 * (card(i) - 1) / (D * card(i));

* Model
Model network /all/;

* Variables
Integer variables x(i,j) "link flow";

* Objective Function
network.obj = sum((i,j), P(i,j) * x(i,j));

* Constraints
network.cap(i,j).. x(i,j) =l= C(i,j);
network.bal(i).. sum(j, x(i,j)) - sum(j, x(j,i)) =e= B(i);
network.obj.equation =e= network.balance * D;
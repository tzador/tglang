Sets
    i 'customers' /i1*i100/, j 'products' /j1*j20/;

Parameters
    c(i) 'cost of customer' /i1 20, i2 30, i3 25, i4 15/
    p(j) 'price of product' /j1 40, j2 50, j3 35, j4 60, j5 45/;

Table d(i,j) 'demand of product' * p(i,j);
d(i,j) = UniformInteger(10, 50);

Variables
    x(i,j) 'amount of product purchased by customer'
    profit 'total profit';

Positive Variable x;

Equations
    obj 'objective function'
    demand(i) 'meeting demand for customer'
    inventory(j) 'inventory constraint';

obj.. profit =e= sum((i,j), p(i,j) * x(i,j)) - sum(i, c(i));

demand(i).. sum(j, x(i,j)) =e= d(i,j);

inventory(j).. sum(i, x(i,j)) =l= p(j);

Model purchase /all/;

purchase.optfile = 1;
purchase.solprint = 3;
purchase.maxopt = 10000;

solve purchase minimizing profit using ipopt;
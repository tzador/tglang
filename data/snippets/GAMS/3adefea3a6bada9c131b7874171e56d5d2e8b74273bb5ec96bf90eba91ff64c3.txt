Sets                                                                  # sets declaration
i      set of origins                                                # i is set of origins
j      set of destinations                                           # j is set of destinations
a(i),a(i)  set of arcs                                               # a(i,j) is set of arcs with two dimensions i and j
r      set of commodities                                            # r is set of commodities
tb     time buckets                                                  # tb is set of time buckets
                            
Parameters                                                            # parameters declaration
c(i,j,a(i,j))      unit cost per unit of commodity r along arc a(i,j) # c(i,j,a) is a parameter with three dimensions
h(i)               different handling costs per unit of commodity r   # h(i) is a parameter with one dimension
d(i,j,r)           demand for commodity r at destination j            # d(i,j,r) is a parameter with three dimensions ``
                                
Variables                                                             # variables declaration
x(i,j,r,a(i,j))    fraction of demand for commodity r on arc a(i,j)   # x(i,j,r,a) is a variable with four dimensions
y(i,j,r)           flow of commodity r from origin i to destination j # y(i,j,r) is a variable with three dimensions
profit(i,j,r,tb)   total profit for each origin i and destination j   # profit(i,j,r,tb) is a variable with four dimensions
                                
Equations                                                             # equations declaration
obj       objective function, to maximize the total profit           # obj is the equation for objective function
supply(i,r)    total supply equals the sum of flows from each origin  # supply(i,r) is the equation for total supply
demand(j,r)    total demand equals the sum of flows to each destination # demand(j,r) is the equation for total demand
arc_flow(i,j,r)  flow of commodity r on arc a(i,j)                    # arc_flow(i,j,r) is the equation for flow on each arc
                                
Model transportation /all/                                            # define the model with all sets and equations
                                
obj..     sum{(i,j,r,tb), profit(i,j,r,tb)} =e= sum{(i,j,r,a), c(i,j,a)*y(i,j,r)} - sum{(i), h(i)*sum{(j,r), d(i,j,r)}}; # objective function equation
                                
supply(i,r)..   sum{(j), y(i,j,r)} =e= sum{(j,r), d(i,j,r)};            # total supply equation
                                
demand(j,r)..   sum{(i), y(i,j,r)} =e= sum{(i,r), d(i,j,r)};            # total demand equation
                                
arc_flow(i,j,r)..   y(i,j,r) =l= x(i,j,r,a(i,j))*d(i,j,r);              # flow on arc equation
                                
x.l(i,j,r,a(i,j))   = 0;                                               # lower bounds for x
x.l(i,j,r,a(i,j))   = 1;
                                
y.l(i,j,r)   = 0;                                                      # lower bounds for y
                                
Model transportation /all/;                                            # create an instance of the model
gv=1;
Execute Unload 'transportation.gdx' gv;                                #  store results in a GDX file
Display y.l;                                                           # display the lower bounds for variable y
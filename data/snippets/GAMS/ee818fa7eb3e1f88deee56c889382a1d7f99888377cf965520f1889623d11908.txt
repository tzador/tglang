Sets
  i 'row'
  j 'column'
  k 'layer'
Variables
  x(i,j,k) 'decision variables'
Binary Variables
  y(i,j) 'binary decision variables'
Equations
  obj 'objective function'
  loop 'loop constraint'
  con1(i,j,k) 'constraint 1'
  con2(i,j) 'constraint 2'
  con3(i,k) 'constraint 3'
  con4(j,k) 'constraint 4'
  con5(i) 'constraint 5'
  con6(j) 'constraint 6'
  con7(k) 'constraint 7'
Integer Variables
  z(i,j,k) 'integer decision variables'
Parameter
  c(i,j,k) 'random coefficients'
Table r(i,j,k)
  'random table'
  1,2,3
  4,5,6
  7,8,9;
Scalar n 'number of rows/columns/layers' /3/
;
# Declare sets, variables, equations, and tables.
Set i 'rows' /1*%n%/
    j 'columns' /1*%n%/
    k 'layers' /1*%n%/;
Variable x(i,j,k) 'decision variables';
Binary Variable y(i,j) 'binary decision variables';
Equation obj 'objective function',
        loop 'loop constraint',
        con1(i,j,k) 'constraint 1',
        con2(i,j) 'constraint 2',
        con3(i,k) 'constraint 3',
        con4(j,k) 'constraint 4',
        con5(i) 'constraint 5',
        con6(j) 'constraint 6',
        con7(k) 'constraint 7';
Integer Variable z(i,j,k) 'integer decision variables';
Parameter c(i,j,k) 'random coefficients';
Table r(i,j,k) 'random table';
Display c, r;
# Define random coefficients and table values.
Scalar n 'number of rows/columns/layers' /3/;
c(i,j,k) = uniform(0, 1); # Random coefficients between 0 and 1.
r(i,j,k) = (i - 1) * %n% * %n% + (j - 1) * %n% + k; # Random table values.
# Define objective function.
obj.. sum((i,j,k), x(i,j,k) * c(i,j,k));
# Define loop constraint.
loop.. sum((j,k), x(%n%,j,k)) =e= 1;
# Define constraint 1.
con1(i,j,k).. x(i,j,k) =l= y(i,j);
# Define constraint 2.
con2(i,j).. sum(k, x(i,j,k)) =g= 0;
# Define constraint 3.
con3(i,k).. sum(j, x(i,j,k)) =l= r(i,j,k);
# Define constraint 4.
con4(j,k).. sum(i, x(i,j,k)) =e= 1;
# Define constraint 5.
con5(i).. sum(j,k, x(i,j,k)) =l= z(i,j,k);
# Define constraint 6.
con6(j).. sum(i,k, x(i,j,k)) =l= z(i,j,k) + 1;
# Define constraint 7.
con7(k).. sum(i,j, x(i,j,k)) =g= z(i,j,k) + 2;
# Solve the model.
Model mip / obj, loop, con1 - con7 /;
Solve mip using mip min x;
# Display the results.
Display x.l, y.l, z.l, obj.l;
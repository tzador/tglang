sets
i /1*5/
j /a,b,c/;

parameters
c[i] 'cost per unit'
a(i,j) 'availability';

c(i)=uniform('i',10,20); !assigns random cost for each unit

a(i,j)=uniform('i-j',0,10); !assigns random availability between 0 and 10

variables
x(i) 'amount of units to produce'
y(j) 'amount of units to store';

positive variable x;
x.up(i)=9; !upper bound of 9 for each unit

binary variable y;
binary variables y(i,j); !2-dimensional binary variable array

equations
obj 'objective function'
bal(i) 'balance constraint for each unit'
cap 'capacity constraint';

obj.. sum(i, c(i)*x(i)) =e= sum(i,j, 0.5*(c(i)+c(j))*y(i,j)); !calculates total cost for producing and storing units

bal(i).. x(i) =e= sum(j, y(i,j) - a(i,j)); !ensures balance between units produced and units stored

cap.. sum(i, sum(j, y(i,j))) =l= 100; !ensures total units stored does not exceed capacity of 100

model production /obj, bal, cap/; !defines the model

solve production maximizing obj using mip; !solves the model by maximizing the objective function using mixed-integer programming
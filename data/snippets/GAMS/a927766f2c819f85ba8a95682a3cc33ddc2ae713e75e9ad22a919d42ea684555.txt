Sets
    i 'cities'
    j 'suppliers'
    k 'customers';

Parameters
    d(i,j) 'distance from city i to supplier j'
    f(i,k) 'demand for customer k in city i'
    c(j,k) 'cost of supplying customer k from supplier j';

Variables
    x(j,k) 'amount to supply to customer k from supplier j'
    y(j) 'binary variable, 1 if supplier j is used'
    z 'total cost';

Positive Variable x,y;

Equations
    cost 'objective function'
    supply_from_one_sup 'each customer must be supplied from one supplier'
    supply_sufficiency 'each supplier must supply enough to cover demand'
    use_supplier 'binary variable must be activated if supplier is used';

Set i / 1*3 /;
Set j / 'supplier1', 'supplier2' /;
Set k 'customer'
    / 'customer1'
    'customer2'
    'customer3'
    'customer4' /;

Parameter
    d(i,j)
    / 'supplier1' 'supplier2'
    '1' - 100
    '2' - 150
    '3' - 200 /
    f(i,k)
    / 'customer1' 'customer2' 'customer3' 'customer4'
    '1' - 50 100 20 30
    '2' - 75 150 50 25
    '3' - 100 175 100 40 /;
    
Scalar c(j,k) 'cost per unit'
    / 'supplier1' 'customer1' 1
      'supplier1' 'customer2' 3
      'supplier1' 'customer3' -2
      'supplier1' 'customer4' 4
      'supplier2' 'customer1' 5
      'supplier2' 'customer2' 2
      'supplier2' 'customer3' -3
      'supplier2' 'customer4' 1 /;
      
Variable
    x(j,k) 'amount to be supplied from supplier j to customer k' / 0 /
    y(j) 'binary variable, 1 if supplier j is used' / 0 /;
    
Equation
    objective 'objective function'
    supply_from_one_sup(i) 'each customer must be supplied from one supplier'
    sufficient_supply(j,k) 'each supplier must supply enough to cover demand';

objective.. z =e= sum((j,k), c(j,k)*x(j,k));
supply_from_one_sup(i).. sum(j, x(j,k)) =e= 1;
sufficient_supply(j,k).. sum(i, x(j,k)) =g= y(j)*f(i,k);

equations supply_from_one_sup, supply_sufficiency, use_supplier;

minimize cost 'objective function' = sum((j,k), c(j,k)*x(j,k));

supply_from_one_sup(i).. sum(j, x(j,k)) =e= 1;

supply_sufficiency(j,k).. sum(i, x(j,k)) =l= y(j)*f(i,k);

use_supplier(j).. y(j) =l= sum((i,k), x(j,k));

Model transportation_model /all/;

solve transportation_model using lp minimizing z;
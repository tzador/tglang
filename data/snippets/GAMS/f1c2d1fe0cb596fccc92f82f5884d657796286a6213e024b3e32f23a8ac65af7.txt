Sets
       i   'City'
       j   'Destination'
   /  CHICAGO  'Chicago'
      DALLAS   'Dallas'
      DENVER   'Denver'
      KANSAS   'Kansas City'
      PASS     'Phoenix'
      SEATTLE  'Seattle' /;

Parameters
       d(i,j)  Distance in thousands
       b(j)    Population in millions
       budget(j) Budget available for transportation;

Table d(i,j) 'Distances in thousands of miles'
                       CHICAGO    DALLAS    DENVER    KANSAS    PASS    SEATTLE
   CHICAGO                 0         93       100      459       99       99
   DALLAS                 93          0       802      666      490       99
   DENVER                100        802         0      697      334      820
   KANSAS                459        666       697        0      995      782
   PASS                   99        490       334      995        0     1357
   SEATTLE                99         99       820      782     1357     0;

Table b(j) 'Population in millions'
            CHICAGO 8.311
            DALLAS  3.499
            DENVER  3.985
            KANSAS  2.377
            PASS    1.563
            SEATTLE 3.061;

Parameter
       h       Cost of transporting one unit;
       z       Cost of building facilities to produce one unit;

Scalar
       budget   Total budget for transportation;

/* Define the cost of transport and building facilities */
h = 1;
z = 500;

/* Limit the budget for transportation */
budget = 10;

Variable
       x(i,j)  Transport orders in units
       y(j)    Units produced and transported;

Positive Variable x, y;

Equations
       obj       Objective function
       limit     Limit budget for transportation
       maxprod   Maximize the total units produced and transported;

obj..    h*y(j) - z*x(i,j)$d(i,j) =E= 0;

/* Limit the budget for transportation */
limit..  budget =E= sum(i, sum(j, x(i,j)*d(i,j)));

/* Limit the production to the budget */
maxprod.. y(j) =E= sum(i, x(i,j));

Model public problem /obj, limit, maxprod/;

/* Define the solver options */
option LP = cplex;
option emp = cplex;

/* Generate feasible solution */
solve public problem using LP maximizing y;

/* Output the optimal solution */
display x.l, y.l;
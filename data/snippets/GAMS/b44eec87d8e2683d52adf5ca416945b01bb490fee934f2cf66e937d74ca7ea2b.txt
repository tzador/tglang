* Sets
Set i 'Index for plants /1*3/'    /1,2,3/;   *a set of plants indexed from 1 to 3
Set j 'Index for warehouses /A B/'     /'A','B'/; 
    *a set of warehouses with names A and B

* Parameters
Parameter a(i) 'Fixed costs per plant'
/1 110, 2 120, 3 130/;     *parameter a with values assigned to each plant

Parameter b(i,j) 'Transport costs in thousands of dollars per unit'
/1.A 6, 1.B 8,
2.A 8, 2.B 7,
3.A 9, 3.B 12/;     *parameter b with values assigned to each combination of plant and warehouse

* Variables
Variable x(i,j) 'Shipment quantities in units'
Positive Variables x;    *x is a variable with positive values 

* Equations
Equation cost 'Total cost in thousands of dollars';
cost..    *equation for calculating total cost
    cost =e= sum((i,j), b(i,j)*x(i,j)) + sum(i, a(i));

* Model
Model trans('Transportation Problem'); *defining the model as 'Transportation Problem'
trans.. *objective function for the model
    cost; *minimizes the total cost calculated in the 'cost' equation
trans.. *constraints for the model
    x.fx('1','A') = 10;     *fixing the value of x for plant 1 and warehouse A to 10
    x.fx('2','B') = 6;      *fixing the value of x for plant 2 and warehouse B to 6
    x.up('1','B') = 8;      *setting an upper bound of 8 for the value of x for plant 1 and warehouse B
    x.up('2','A') = 10;     *setting an upper bound of 10 for the value of x for plant 2 and warehouse A
    x.lo('3','B') = 3;      *setting a lower bound of 3 for the value of x for plant 3 and warehouse B

* Solve
Solve trans using lp minimizing cost;     *solving the model using the linear programming method and minimizing the 'cost' objective function

* Display results
Display x.l, cost.l;      *displaying the optimal values for x and cost
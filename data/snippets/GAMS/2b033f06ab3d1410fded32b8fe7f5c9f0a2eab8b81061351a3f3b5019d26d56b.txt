Set
      i   'Demand Region'
      j   'Supply Region'
      k   'Transport Mode' /Road, Rail, Ship/
      l   'Product' /Iron, Coal, Wheat, Corn/;
 
 Parameter
      a(i,j)    'Distance in thousands of miles'
      b(j,k)    'Freight in dollars per unit per thousand miles'
      f(k,l)    'Freight Capacity in units'
      p(i,l)    'Product value in dollars per unit'
      d(i,l)    'Demand in units'
      r         'Rate in dollars per ton mile';

 Scalar
      c         'transport cost coefficient'
      s(i)      'Demand intercept'
      q         'Cross Elasticity'
      u         'Scale Parameter';

 Alias (i,ip), (j,jp), (k,kp), (l,lp);

 Variables
      x(i,j,l,k)   'All Variables Decimals'
      z             'Total Transportation Cost';
 
 Positive Variable
      w             'Transport Intensity (Available Capacity used for transport)'
    
 Binary Variable
      y(i,j,l,k)    'Binary Decision Variable';

Equations
      demand(i,l)         'Satisfy Demand'
      an(i,j,l)           'Node Balance'
      route_sr(i,j,k,l)   'Re-Enter route restrictions'
      capacity_cnt(k,l)   'Transport Capacity Satisfy'
      obj                 'Cost Objective';

demand(i,l)..       sum(j, x(i,j,l,'Road') + x(i,j,l,'Rail') + x(i,j,l,'Ship')) =e= d(i,l);

an(i,j,l)..         sum(k, x(i,j,l,k)) =e= x(i,j,l,'Ship');

route_sr(i,j,k,l)..  x(i,jp,l,'Road') + x(i,jp,l,'Rail') + x(i,jp,l,'Ship') =l= b(j,k)*a(i,j)*(1 - y(i,jp,l,k));

capacity_cnt(k,l).. sum((i,j), x(i,j,l,k)) =l= f(k,l);

obj..               z =e= sum((i,j,l,k), (b(j,k)*r + p(i,l))*a(i,j)*x(i,j,l,k));

w.lo(i,j,l,k) = 0.00001;   

Model cargo /all/;

$cargo.modelstat = 'solved';

$if %cargo.modelstat% == %solved% $goto solution;

Solve cargo using lp minimizing z;

File
      logout       / cargo.log /
      duals        / cargo.dual
                     cargo.sa /
      solution   / cargo.sol /;
    
scalar e;
scalar err(maxerr), x0(idx), x(idx), eq(idx);

file loglogout / log.log /;
put 'normal line' / 'last line';
abort$(err(not x_user)) 'cannot open all settings'              

put 'opt 1';
put 'opt 2' / 'opt 3';

custom_cargo_model.lstput 'Another line';


$solution.getvalue dualout1 = cargo.dual('w');
$solution.display= (dualout1, w);
    
option limrow = 10;
option limcol = 10;
option solvelink = 'dump';
$onechoI_ A custom set up
    A C arg1
    FILE arg1      
    

  Set
    i   'Demand Region'
    j   'Supply Region'
    k   'Transport Mode' /Road, Rail, Ship/
    l   'Product' /Iron, Coal, Wheat, Corn/;
  
  Parameter
    a(i,j)    'Distance in thousands of miles'
    b(j,k)    'Freight in dollars per unit per thousand miles'
    f(k,l)    'Freight Capacity in units'
    p(i,l)    'Product value in dollars per unit'
    d(i,l)    'Demand in units'
    r         'Rate in dollars per ton mile';
  
  Scalar
    c         'transport cost coefficient'
    s(i)      'Demand intercept'
    q         'Cross Elasticity'
    u         'Scale Parameter';
  
  Alias (i,ip), (j,jp), (k,kp), (l,lp);
  
  Variables
    x(i,j,l,k)   'All Variables Decimals'
    z
     'Total Transportation Cost';
  
  Positive Variable
    w             'Transport Intensity (Available Capacity used for transport)'
  
  Binary Variable
    y(i,j,l,k)    'Binary Decision Variable';
  
  Equations
    demand(i,l)         'Satisfy Demand'
    an(i,j,l)           'Node Balance'
    route_sr(i,j,k,l)   'Re-Enter route restrictions'
    capacity_cnt(k,l)   'Transport Capacity Satisfy'
    obj                 'Cost Objective';
  
  demand(i,l)..       sum(j, x(i,j,l,'Road') + x(i,j,l,'Rail') + x(i,j,l,'Ship')) =e= d(i,l);
  
  an(i,j,l)..         sum(k, x(i,j,l,k)) =e= x(i,j,l,'Ship');
  
  route_sr(i,j,k,l)..  x(i,jp,l,'Road') + x(i,jp,l,'Rail') + x(i,jp,l,'Ship') =l= b(j,k)*a(i,j)*(1 - y(i,jp,l,k));
  
  capacity_cnt(k,l).. sum((i,j), x(i,j,l,k)) =l= f(k,l);
  
  obj..               z =e= sum((i,j,l,k), (b(j,k)*r + p(i,l))*a(i,j)*x(i,j,l,k));
  
  w.lo(i,j,l,k) = 0.00001;
  
  Model cargo /all/;
  
$cargo.modelstat = 'solved';

$if %cargo.modelstat% == %solved% $goto solution;

Solve cargo using lp minimizing z;

File
  logout       / cargo.log /
  duals        / cargo.dual
                 cargo.sa /
  solution   / cargo.sol /;

scalar e;
scalar err(maxerr), x0(idx), x(idx), eq(idx);

file loglogout / log.log /;
put 'normal line' / 'last line';
abort$(err(not x_user)) 'cannot open all settings'              

put 'opt 1';
put 'opt 2' / 'opt 3';

custom_cargo_model.lstput 'Another line';

$solution.getvalue dualout1 = cargo.dual('w');
$solution.display= (dualout1, w);

option limrow = 10;
option limcol = 10;
option solvelink = 'dump';
$onechoI_ A custom set up
    A C arg1
    FILE arg1

$goto final;

$solution.success= (%cargo.modelstat%);
$solution.solveBin.('p')= 1;

solutionno = 1;
for [p](
         if p = 1
      );

final:
  put / 'Custom options used: ' / ;
  putclose cargo.log;
$exitcode = 0;
$echo Status in %cargo.log%;
$if defined symxdir $goto genDumps;

Solve cargo using lp min z;
$solution.iterLim = 10;
$solution.resourceLimit = 2;
$solution.mipGap = 1.5; %for mip models%
$solution.minGap = 1.5; %if want to track mip gap%
$solution.numinc = 500; %for feasibility models%
  
$goto last;

genDumps:
$solution.genDump;
$solution.dumpDir = dumps;
$solution.luc = 1;
$solution.bbash = 1;
$outfile = problems.dump(getenv(OPT_DUMP_DIR) '%cargo.dump');
 
last:
option algorithm = default;
log:
   level 1:
   option modelintercept %cargo.modelstat%;
   option subseqtodelims %cargo.subseq%;

*This is a long and complex GAMS code snippet with annotations.
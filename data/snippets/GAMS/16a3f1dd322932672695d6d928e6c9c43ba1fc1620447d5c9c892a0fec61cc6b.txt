sets
     i 'set of cities'
   j 'set of warehouses'
   k 'set of distribution centers';

alias(i,j) 'indices of cities and warehouses';

scalar
   pit 'production in tonnes'
   pio 'production in tonnes';

parameter
   dijk(i,j) 'distance (in km) between city i and warehouse j'
   dkil(k,i) 'distance (in km) between distribution center k and city i';

table c(i,j) 'cost of transporting one tonne of goods from city i to warehouse j'
         j1   j2   j3
i1     1.5  2.4  3.6
i2     2.2  4.2  5.9
i3     3.1  5.5  6.7;

table d(k,i) 'cost of transporting one tonne of goods from distribution center k to city i'
         i1    i2    i3
k1     0.8   1.2   2.0
k2     1.2   1.8   2.6;

variable
   x(i,j)  'flow of goods from cities to warehouses in tonnes'
   y(k,i)  'flow of goods from distribution centers to cities in tonnes'
   z(k,i)  'total cost of distribution from distribution centers to cities';

positive variables x,y,z;

equations
   flow_balance(i)    'flow balance at cities'
   flow_balance_wc(j) 'flow balance at warehouses'
   total_cost         'total cost of distribution';

flow_balance(i)..
   sum(j, x(i,j)) =e= pit - pio;

flow_balance_wc(j)..
   sum(i, x(i,j)) =e= sum(k, y(k,i));

total_cost..
   z =e= sum((k,i), d(k,i)*y(k,i)) + sum((i,j), c(i,j)*x(i,j));

model distribution /all/;

solve distribution using lp minimizing z;
Set i 'Set of nodes';         #Define a set of nodes
Set j 'Set of arcs';          #Define a set of arcs
Set arc(i,j) 'Set of arc pairs';      #Define a set of arc pairs
Set t 'Set of time periods';       #Define a set of time periods

Alias (i,ip);                #Define an alias for set i

Parameter c(i,j) 'Arc costs';
c(i,j) = uniform(1,10);      #Assign random values to parameter c

Variable x(i,j) 'Flow on arc';     #Define a variable x

Equation flowBalance(i) 'Node flow balance';     #Define an equation for node flow balance
flowBalance(i)..
    sum(j$arc(ip,j), x(ip,j)) - sum(j$arc(j,ip), x(j,ip)) =e= 0;         #Set the equation equal to zero

Equation arcCap(j) 'Arc capacity';     #Define an equation for arc capacity
arcCap(j)..
    sum(i, x(i,j)) =l= 10;         #Set the equation to be less than or equal to 10

Equation timeConstraint(t) 'Time constraints';      #Define an equation for time constraints
timeConstraint(t)..
    sum((i,j)$arc(i,j), x(i,j)*c(i,j)) =e= 100;      #Set the equation equal to 100

Model transportation /all/;       #Specify the model to run all equations

Option optCR=0.1, optCA=1e-6;        #Set the convergence and accuracy options
solve transportation using lp minimizing x;       #Solve the model using linear programming and minimize variable x

Display x.l;        #Display the solution of variable x
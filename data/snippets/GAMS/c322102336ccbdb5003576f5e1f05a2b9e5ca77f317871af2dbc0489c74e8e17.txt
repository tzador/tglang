* Define a set of locations for a supply chain
Set locations "locations in supply chain"
       / manufacturing, distribution, retail, customer /
       
* Define a set of products for the supply chain
Set products "products in supply chain"
       / product1, product2, product3 /
       
* Define a table to store the costs of shipping products between locations
Table shippingcost(locations,products)
              product1 product2 product3
manufacturing  10        20        15
distribution   12        18        25
retail         25        30        40
customer       35        20        28;
       
* Define decision variable for the quantity of each product to ship from a location
Variable quantity(locations,products);

* Define objective function to minimize total shipping cost
Equation objective "minimize total shipping cost";
objective.. sum((i,j), shippingcost(i,j) * quantity(i,j)) =E= z;
       
* Define constraints for maximum quantity of each product that can be shipped from a location
Equation max_quantity(locations,products) "maximum quantity constraint";
max_quantity(locations,products).. quantity(locations,products) =L= 10000;

* Define constraints for minimum quantity of each product that must be shipped to a customer
Equation min_quantity(products) "minimum quantity constraint";
min_quantity(products).. sum(locations$(locations <> "customer"), quantity(locations,products)) =G= 1000;

* Define binary variable for whether or not a product is shipped from a location
Binary variable shipped(locations,products);

* Define constraints for binary variable to ensure that a product is only shipped from one location
Equation shipped_constraint(products) "binary constraint";
shipped_constraint(products).. sum(locations, shipped(locations,products)) =L= 1;

* Solve the optimization model
Model supplychain /all/;
Solve supplychain using lp minimizing z;

* Display results
Display quantity.l, shipped.l;
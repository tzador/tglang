Set i "set of inputs" /i1, i2, i3/;  // Define a set of inputs
Set j "set of outputs" /j1, j2, j3, j4, j5/;  // Define a set of outputs
Set k "set of intermediate variables" /k1, k2, k3/;  // Define a set of intermediate variables

Table c(i,j) "coefficient matrix for linear constraints"
          j1      j2      j3      j4      j5    
i1        1       0       0       0       0
i2        0       1       0       0       0
i3        0       0       1       0       0;
  // Define a coefficient matrix for linear constraints with values initialized to zero

Table a(i,k) "coefficient matrix for quadratic constraints"
          k1      k2      k3    
i1        1       2       3
i2        2       4       6
i3        3       6       9;
  // Define a coefficient matrix for quadratic constraints with values initialized to zero

Parameter b(i) "right-hand side vector for linear constraints"
         /i1      10
          i2      -5
          i3      2/;
  // Define a right-hand side vector for linear constraints with specified values

Parameter d(k) "right-hand side vector for quadratic constraints"
         /k1      6.4
          k2      -2.1
          k3      1.7/;
  // Define a right-hand side vector for quadratic constraints with specified values

Variable x(i) "decision variables";
Positive Variable y(j) "auxiliary variables";
Binary Variable z(j) "binary variables";
  // Define decision variables, auxiliary variables, and binary variables

Equation linearconstr(i) "linear constraints";
Equation quadconstr(j) "quadratic constraints";
Equation auxconstr(j) "auxiliary variable constraints";
Equation binconstr(j) "binary variable constraints";
  // Define equations for linear constraints, quadratic constraints, auxiliary variable constraints, and binary variable constraints

linearconstr(i).. sum(j, c(i,j)*y(j)) =e= b(i);  // Define linear constraints
quadconstr(j).. sum(i, a(i,j)*x(i)) + sum(k, a(i,k)*sqr(y(k))) =e= d(j);  // Define quadratic constraints
auxconstr(j).. y(j) =g= z(j);  // Define constraints for auxiliary variables
binconstr(j).. z(j) + y(j) =l= 1;  // Define constraints for binary variables

Model mymodel /all/;  // Define a model with all equations and variables
mymodel.objection = sum(i, x(i));  // Set the objective function to maximize the sum of decision variables

Solve mymodel using qcp maximizing x;
  // Solve the model using quadratic programming and maximize the objective function

Display x.l, y.l, z.l;
  // Display the optimal values for decision variables, auxiliary variables, and binary variables
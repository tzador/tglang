* Declare sets
set i "index for customers" / C1*C5 /
j "index for products" / P1*P3 /;

* Define parameters
parameter a(i,j) "allocation weights for each customer and product" / C1.P1 0.2, C1.P2 0.4, C1.P3 0.3,
                                                              C2.P1 0.1, C2.P2 0.3, C2.P3 0.6,
                                                              C3.P1 0.4, C3.P2 0.2, C3.P3 0.4,
                                                              C4.P1 0.3, C4.P2 0.5, C4.P3 0.2,
                                                              C5.P1 0.5, C5.P2 0.1, C5.P3 0.4 /;

parameter c(j) "cost of each product" / P1 50, P2 80, P3 100 /;

parameter d(i) "demand of each customer" / C1 100, C2 150, C3 75, C4 90, C5 125 /;

* Define variables
variable x(i,j) "amount of product allocated to each customer";

* Define objective function
equation obj "minimize total cost";
obj.. sum((i,j), c(j)*x(i,j)) =e= sum((i,j), a(i,j)*d(i)*x(i,j));

* Define constraints
equation demand(i) "satisfy demand for each customer";
demand(i).. sum(j, x(i,j)) =e= d(i);

equation non_negativity(i,j) "non-negativity condition";
non_negativity(i,j).. x(i,j) =g= 0;

* Solve the optimization problem
model allocation /all/;
solve allocation using lp minimizing obj;

* Print results
display x.l, obj.l;
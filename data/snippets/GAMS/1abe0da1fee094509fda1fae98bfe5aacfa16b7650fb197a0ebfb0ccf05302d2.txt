set I 'demand points'
    /1*50/;

alias (I,j);

Table d(I,j) 'distance from point i to point j'
    1      2     3    4    5     
1   0    20    35   57   82    
2  20     0    15   37   62    
3  35    15     0   22   47    
4  57    37    22    0   25    
5  82    62    47   25    0;

scalar M 'large number' /10000/;

variables
x(I,j) 'binary decision variable'
z 'total distance';

binary variable x;

equations
obj 'objective function'
c1(I) 'one outgoing edge per point'
c2(j) 'one incoming edge per point'
c3 'eliminate subtours';

obj.. z =e= sum((I,j), d(I,j)*x(I,j));

c1(i).. sum(j, x(i,j)) =e= 1;

c2(j).. sum(i, x(i,j)) =e= 1;

c3.. sum((i,j), x(i,j)) =l= #I# - 1;

model tsp /all/;

option optcr = 0.01;
option iterlim = 10000;
option reslim = 60;

tsp.optfile = 1;

loop((I,j),
    tsp.soln.x.l(i,j) = Ord(i) = Ord(j)
);
Display for(T,"")
   put WriteSol default VWrite EpsTol OptimStatus Sumpnt Sumpntna DSumobj DSumratio d ATOLR2 EPSI EPS OPTCR ITERLIM RESLIM RES ABSOPT EPSREL# "x.l" /;
) tsp;

loop(I, loop(j,
    put OptTol_x.l(I,j):6:0;
));
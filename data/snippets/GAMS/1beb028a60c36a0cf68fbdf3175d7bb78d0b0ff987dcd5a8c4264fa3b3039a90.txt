Set i 'City index';
Alias (i,j);

Parameter
d(i,j) 'Distance between cities'
/data
         CityA    CityB    CityC
CityA    0        55       28
CityB    55       0        42
CityC    28       42       0
/

Binary Variable x(i,j) '1 if path from city i to j is taken, 0 otherwise'
Positive Variable y(i,j) 'Amount of flow from city i to j';

Equations
Objective 'Minimize total distance traveled'
Cost 'Calculate total distance traveled'
Source 'Ensure flow out of starting city is equal to 1'
Balance(i) 'Ensures flow into a city is equal to flow out of that city';

Objective.. z =e= sum((i,j)$d(i,j), d(i,j)*x(i,j));
Cost.. z =e=e= sum(d(i,j), y(i,j)); 
Source.. sum(j, x('CityA',j)) =e= 1;
Balance(i)..sum(j, y(i,j)) - sum(j, y(j,i)) =e=e= x(i,'CityC');
Model flow /all/;
Solve flow using mIP minimizing z;

Display x.l,y.l;
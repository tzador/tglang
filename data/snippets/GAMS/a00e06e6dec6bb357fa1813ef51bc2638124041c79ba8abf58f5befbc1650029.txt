SET I 'locations' /Seattle, San_Francisco, Chicago, New_York, Boston, Denver/
J 'products' /P1, P2, P3/

* Generating random data for distance between locations and product demand
PARAMETER a(I,J) 'distance between locations and products' /
Seattle.P1 50, Seattle.P2 40, Seattle.P3 60, 
San_Francisco.P1 70, San_Francisco.P2 30, San_Francisco.P3 50, 
Chicago.P1 80, Chicago.P2 20, Chicago.P3 40, 
New_York.P1 90, New_York.P2 10, New_York.P3 30, 
Boston.P1 100, Boston.P2 0, Boston.P3 20, 
Denver.P1 110, Denver.P2 40, Denver.P3 10 /;

TABLE ans(I,J) 'product demand' 
                P1      P2      P3
Seattle         10      20      30
San_Francisco   25      15      40
Chicago         45      35      10
New_York        15      25      50
Boston          5       40      20
Denver          20      10      35;

* Defining variables
VARIABLE x(I,J) 'amount of product shipped';
VARIABLE y(J) 'total product demand';

* Defining constraints
EQUATIONS demand_constraint(J) 'satisfy product demand';
EQUATION max_product_constraint(J) 'maximum product capacity';
EQUATION min_product_constraint(J) 'minimum product capacity';
EQUATIONS supply_constraint(I) 'meet product demand for each location';

* Objective function
EQUATION objective_function 'minimize cost';
objective_function.. y =E= sum((i,j), a(i,j)*x(i,j));

* Constraints
demand_constraint(j).. sum(i, x(i,j)) =E= ans(j);
max_product_constraint(j).. y(j) =L= 2500;
min_product_constraint(j).. y(j) =G= 1000;
supply_constraint(i).. sum(j, x(i,j)) =E= ans(i,'P1') + ans(i,'P2') + ans(i,'P3');

* Solving the model using GAMS solver
SOLVE model using lp minimizing objective_function;

* Displaying results
DISPLAY x.l, y.l;
SETS i "plants" /p1*p3/;
SET j "markets" /m1*m5/;
PARAMETERS
a(i) "capacity of plant i in cases"
/ p1 200, p2 150, p3 175 /
b(j) "demand at market j in cases"
/ m1 175, m2 160, m3 180, m4 190, m5 200 /
d(i,j) "distance in thousands of miles"
/ p1.p2 1.5, p1.p3 1.7, p2.p3 1.2
m1.m2 2.5, m1.m3 2.1, m1.m4 1.8, m1.m5 2.2
m2.m3 1.8, m2.m4 1.6, m2.m5 2.0
m3.m4 1.3, m3.m5 1.5
m4.m5 2.2 /;
PARAMETERS
f(i,j) "freight in dollars per case per thousand miles"
/ p1.p2 4.1, p1.p3 5.1, p2.p3 3.7
m1.m2 7.3, m1.m3 6.5, m1.m4 5.9, m1.m5 6.7
m2.m3 5.3, m2.m4 4.9, m2.m5 6.1
m3.m4 4.2, m3.m5 5.5
m4.m5 6.9 /;
VARIABLES
x(i,j) "shipment quantities in cases"
z "total transportation costs in thousands of dollars";
Equations
cost "define objective function"
/;
cost.. z =e= sum((i,j), f(i,j)*d(i,j)*x(i,j));
model transport /all/;
SOLVE transport USING LP MINIMIZING z;

/*
This GAMS code snippet sets up a transportation problem where plants and markets are connected by distances and freight costs. The objective is to minimize total transportation costs based on shipment quantities.

The SETS command defines two sets, i and j, representing plants and markets, respectively. The PARAMETERS command then defines the capacity of each plant (a), the demand at each market (b), and the distance and freight costs between each plant and market (d and f).

The VARIABLES command then creates a variable (x) representing the shipment quantities between each plant and market. The Equations command names the objective function (cost).

The model command sets up the problem and the SOLVE command calls the solver to solve the problem using linear programming and minimizing the total transportation costs (z).

Overall, this code snippet showcases how GAMS can be used to set up and solve optimization problems involving complex transportation scenarios.

*/
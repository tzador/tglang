Set i 'cities' /Paris, London, New York/;
Set j 'aircraft types' /Boeing, Airbus, Cessna/;
Set k 'airlines' /Delta, British Airways, Air France/;
Set t 'time periods' /January, February/;
Parameter c(i,j,t) 'capacity of aircraft types in cities';
c(i,j,t) = 100 + uniform(50);
Parameter p(t) 'price of flight tickets';
p(t) = 1000 + 10*ord(t);
Variable x(i,j,t) 'number of flights';
Positive Variable x(i,j,t);
Variable revenue 'total revenue';
Equation obj 'objective function';
obj.. revenue =e= sum((i,j,t), p(t)*x(i,j,t));
Equation demand(i,t) 'demand constraint';
demand(i,t).. sum(j, x(i,j,t)) =l= 3*c(i,'Boeing',t);
Equation capacity(j,t) 'capacity constraint';
capacity(j,t).. sum(i, x(i,j,t)) =l= c('London',j,t);
Equation balance(i,t) 'balance constraint';
balance(i,t).. sum(j,x(i,j,t)) - sum(j,x(k,i,t)) =e= 0;
Model optimal_flights 'optimal number of flights';
Optimal_flights.. revenue =e= obj.util;
solve optimal_flights using lp maximizing revenue;
display revenue.l, x.l;
x <- 1:10
# Assign the numerical vector 1 to 10 to the variable x

y <- seq(0, 1, by = 0.2)
# Create a sequence from 0 to 1 with a step of 0.2 and assign it to the variable y

z <- rep("Hello", 3)
# Replicate the string "Hello" 3 times and assign it to the variable z

mean(x)
# Calculate the mean of the values in vector x

sd(y)
# Calculate the standard deviation of the values in vector y

length(z)
# Get the length of vector z

x[3]
# Access the third element in vector x

y[c(1,3,5)]
# Access the first, third, and fifth element in vector y

z[-2]
# Remove the second element in vector z

x > 5
# Check which values in vector x are greater than 5

y <= 0.6
# Check which values in vector y are less than or equal to 0.6 

z == "Hello"
# Check which values in vector z are equal to "Hello"

x * 2
# Multiply each element in vector x by 2

y + 3
# Add 3 to each element in vector y

z[1] <- "Goodbye"
# Replace the first element in vector z with the string "Goodbye"

sum(x)
# Calculate the sum of all values in vector x

max(y)
# Get the maximum value in vector y

min(z)
# Get the minimum value in vector z

xy <- cbind(x, y)
# Combine vector x and y into a matrix xy with x as the first column and y as the second column 

colnames(xy) <- c("numbers", "fraction")
# Add column names "numbers" and "fraction" to matrix xy 

rowSums(xy)
# Calculate the sum of each row in matrix xy

colSums(xy)
# Calculate the sum of each column in matrix xy

xy[1,2]
# Access the value in the first row and second column of matrix xy

xy[3,]
# Access the values in the third row of matrix xy

xy[,1:2]
# Access the first two columns of matrix xy

cor(xy)
# Calculate the correlation coefficient between the two columns in matrix xy

lm(fraction ~ numbers, data = xy)
# Create a linear regression model with fraction as the dependent variable and numbers as the independent variable in matrix xy
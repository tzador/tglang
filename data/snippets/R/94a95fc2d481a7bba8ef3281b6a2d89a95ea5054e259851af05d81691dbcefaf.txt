# This function calculates the nth term in the Fibonacci sequence using memoization
fibonacci <- function (n) {
    # Initialize an empty vector for storing previously calculated terms
    stored <- numeric(n)

    # Define the recursive function to calculate the nth term
    fib <- function(n) {
        # Check if the term has already been calculated and stored
        if (stored[n] != 0) {
            # If so, return the stored value
            stored[n]
        } else {
            # If not, calculate the term recursively and store it in the vector
            fib(n-1) + fib(n-2)
        }
    }

    # Loop through n to calculate each term in the sequence
    for (i in 1:n) {
        # Call the recursive function and store the result in the vector
        stored[i] <- fib(i)
    }

    # Return the nth term
    return(stored[n])
}
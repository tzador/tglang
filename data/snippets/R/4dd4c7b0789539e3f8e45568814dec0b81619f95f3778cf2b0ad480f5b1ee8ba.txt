# This is a function that checks if a number is prime and returns a boolean

check_prime <- function(num) {
  # Handle edge cases
  if (num < 2) {
    return(FALSE)
  }
  if (num == 2) {
    return(TRUE)
  }
  if (num %% 2 == 0) {
    return(FALSE)
  }

  # Loop through all possible divisors up to the square root of the number
  # since any number that is not divisible by any number below its square root
  # will also not be divisible by any number above its square root
  for (i in 3:sqrt(num)) {
    # Check if the current number is a divisor of the input number
    # If it is, the number is not prime and we can return FALSE
    if (num %% i == 0) {
      return(FALSE)
    }
  }
  
  # If we make it through the loop without returning FALSE, the number is prime
  return(TRUE)
}

# Example usage:
result <- check_prime(17)
print(result)
# Output: TRUE (17 is a prime number)
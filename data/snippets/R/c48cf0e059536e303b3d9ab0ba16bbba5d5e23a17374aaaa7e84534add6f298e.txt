# This code snippet generates a random matrix of size 10x10 and performs a QR decomposition on it using the Householder transformation method.

# Generate a 10x10 random matrix
random_matrix <- matrix(rnorm(100), nrow=10, ncol=10)

# Define a function for Householder transformation
householder_transform <- function(Mat) {
  # Parameters:
  #   Mat: Input matrix
  # Output:
  #   Q: The orthogonal matrix generated using Householder transformation
  #   R: The upper triangular matrix after QR decomposition
  n <- nrow(Mat)
  p <- ncol(Mat)
  R <- Mat
  Q <- diag(n)
  
  for (j in 1:p) {
    x <- R[j:n, j]
    e <- rep(0, length(x))
    e[1] <- 1
    u <- sign(x[1]) * norm(x) * e + x
    u <- u / norm(u)
    R[j:n, j:p] <- R[j:n, j:p] - 2 * u %*% t(u) %*% R[j:n, j:p]
    Q[, j:n] <- Q[, j:n] - 2 * Q[, j:n] %*% u %*% t(u)
  }
  
  return(list("Q" = Q, "R" = R))
}

# Perform QR decomposition using Householder transformation
decomposition <- householder_transform(random_matrix)
Q <- decomposition$Q
R <- decomposition$R

# Print the results
print("Original Matrix:")
print(random_matrix)
print("Orthogonal Matrix:")
print(Q)
print("Upper Triangular Matrix:")
print(R)
# Code snippet to generate a list of prime numbers using the Sieve of Eratosthenes algorithm

# define function that takes in a desired limit of prime numbers to generate
# and returns a list of all the prime numbers within that limit
prime_generator <- function(limit) {

    # create a vector containing all numbers from 2 to the limit, inclusive
    nums <- 2:limit

    # initialize an empty list to store prime numbers
    primes <- list()

    # loop through all numbers in the vector
    for (num in nums) {

        # check if the number is marked as a non-prime
        if (num %in% primes) {

            # if so, continue to next number
            next

        } else {

            # if not, add the number to the list of primes
            primes <- c(primes, num)

            # create a vector containing all numbers from the current number squared to the limit
            # with a step of the current number
            non_primes <- seq(from=num^2, to=limit, by=num)

            # mark all these numbers as non-primes by adding them to the list
            primes <- c(primes, non_primes)
        }
    }

    # return the list of prime numbers
    return(primes)
}

# call the function with a limit of 100 and assign the output to a variable
output <- prime_generator(100)

# print the output
print(output)
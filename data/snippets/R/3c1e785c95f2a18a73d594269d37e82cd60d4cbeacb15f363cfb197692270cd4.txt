# Determine the square root of a number using the bisection method
# Define the function with parameters 'number' and 'tolerance'
bisect_sqrt <- function(number, tolerance) {
  # Initialize upper and lower bounds of the root
  lower_bound <- 0
  upper_bound <- number
  # Set initial guess for the root
  root_guess <- number/2
  # Initialize current error
  current_error <- number^2
  # While loop to continue bisecting until error is within tolerance
  while (current_error > tolerance) {
    # Calculate the midpoint between upper and lower bounds
    root_guess <- (lower_bound + upper_bound)/2
    # Calculate the square of the root guess
    guess_squared <- root_guess^2
    # Calculate the current error
    current_error <- abs(number - guess_squared)
    # Adjust the bounds based on the sign of the current error
    if (current_error > 0) {
      if (guess_squared > number) {
        # If guess is too high, set it as upper bound
        upper_bound <- root_guess
      } else {
        # If guess is too low, set it as lower bound
        lower_bound <- root_guess
      }
    } else {
      # Once error is within tolerance, break out of the loop
      break
    }
  }
  # Return the final root guess as the square root of the number
  return(root_guess)
}
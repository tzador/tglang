# This code snippet generates and plots a random walk using the Metropolis-Hastings algorithm

# Initialize the necessary libraries
library('ggplot2')

# Define the function for calculating the acceptance probability
acceptance_prob <- function(x, y, a, b) {
  return (exp(-a*(y^2) + b*y - x^2 + x))
}

# Define the function for generating random points
generate_points <- function(num_points) {
  points <- NULL
  # Set initial point to be (0,0)
  current_point <- c(0,0)
  
  for (i in 1:num_points) {
    # Generate a random point centered around the current point
    x <- rnorm(1, mean = current_point[1])
    y <- rnorm(1, mean = current_point[2])
    
    # Calculate the acceptance probability
    a <- acceptance_prob(current_point[1], current_point[2], 5, 5)
    
    # Determine if the generated point should be accepted or rejected
    if (runif(1) < a) {
      current_point <- c(x, y)
    }
    
    # Add the current point to the list of points
    points <- rbind(points, current_point)
  }
  
  return (points)
}

# Set the number of points to generate
num_points <- 1000

# Generate the points using the Metropolis-Hastings algorithm
points <- generate_points(num_points)

# Plot the points using ggplot2
ggplot(points, aes(x = V1, y = V2)) +
  geom_point() +
  ggtitle('Random Walk using the Metropolis-Hastings Algorithm')  +
  xlab('X') +
  ylab('Y') +
  theme_bw()
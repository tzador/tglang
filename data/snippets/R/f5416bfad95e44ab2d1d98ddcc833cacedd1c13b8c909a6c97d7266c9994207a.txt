## This is a code snippet in R that generates a random matrix of specified dimensions and performs several calculations on it

# Set the seed for reproducibility
set.seed(123)

# Define the dimensions of the matrix
nrow <- 5
ncol <- 3

# Generate a random matrix of dimensions nrow x ncol
my_matrix <- matrix(rnorm(nrow * ncol), nrow = nrow, ncol = ncol)

# Print the matrix
print(my_matrix)

# Calculate the mean of each row and column
row_means <- rowMeans(my_matrix)
col_means <- colMeans(my_matrix)

# Print the row and column means
print(row_means)
print(col_means)

# Calculate the standard deviation of each row and column
row_sd <- apply(my_matrix, 1, sd)
col_sd <- apply(my_matrix, 2, sd)

# Print the row and column standard deviations
print(row_sd)
print(col_sd)

# Perform a matrix multiplication to get the covariance matrix
cov_matrix <- my_matrix %*% t(my_matrix)

# Print the covariance matrix
print(cov_matrix)

# Calculate the eigenvalues and eigenvectors of the covariance matrix
eigen_values <- eigen(cov_matrix)$values
eigen_vectors <- eigen(cov_matrix)$vectors

# Print the eigenvalues and eigenvectors
print(eigen_values)
print(eigen_vectors)

# Perform a Singular Value Decomposition on the original matrix
svd_result <- svd(my_matrix)

# Print the result
print(svd_result)

# Calculate the inverse of the original matrix
inverse_matrix <- solve(my_matrix)

# Print the inverse matrix
print(inverse_matrix)

# Calculate the determinant of the original matrix
determinant <- det(my_matrix)

# Print the determinant
print(determinant)

# Calculate the rank of the original matrix
rank <- qr(my_matrix)$rank

# Print the rank
print(rank)
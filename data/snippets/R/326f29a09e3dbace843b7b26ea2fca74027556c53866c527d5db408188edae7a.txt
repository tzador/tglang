# This code snippet uses the R programming language to build a predictive model using decision trees and random forests.

# Load required packages
library(rpart)
library(randomForest)

# Set seed for reproducibility
set.seed(1234)

# Create training and testing data sets
train <- sample(x = 1:1000, size = 700, replace = FALSE)
test <- setdiff(x = 1:1000, y = train)

# Load and preprocess data
data <- read.csv("data.csv", header = TRUE)
data <- na.omit(data)

# Build decision tree model
decision_tree <- rpart(formula = Class ~ ., data = data[train,], method = "class")

# Predict on test data
prediction <- predict(object = decision_tree, newdata = data[test,], type = "class")

# Evaluate model performance
accuracy <- mean(prediction == data[test,"Class"])
print(paste("Accuracy of decision tree model:", round(accuracy, 3)))

# Build random forest model
rf <- randomForest(x = data[train,-c("Class")], y = data[train,"Class"], ntree = 500, importance = TRUE)

# Predict on test data
prediction_rf <- predict(object = rf, newdata = data[test,-c("Class")], type = "class")

# Evaluate model performance
accuracy_rf <- mean(prediction_rf == data[test,"Class"])
print(paste("Accuracy of random forest model:", round(accuracy_rf, 3)))
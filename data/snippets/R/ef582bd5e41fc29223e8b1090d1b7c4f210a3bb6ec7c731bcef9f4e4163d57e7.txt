#This code snippet calculates the Pearson correlation coefficient between two variables in a dataset
#Assuming the dataset is stored as data.frame with variable 1 and variable 2 columns
#'na.rm' parameter is used to remove any NA values in the dataset for accurate calculation

correlation_coefficient <- function(dataframe, variable1, variable2) {
    #Extracting the values from the dataframe columns
    x <- dataframe$variable1 
    y <- dataframe$variable2 
    
    #Calculating mean of variable 1 and variable 2 
    x_mean <- mean(x, na.rm = TRUE)
    y_mean <- mean(y, na.rm = TRUE)
    
    #Calculating standard deviation of variable 1 and variable 2
    x_sd <- sd(x, na.rm = TRUE)
    y_sd <- sd(y, na.rm = TRUE)
    
    #Calculating covariance between variable 1 and variable 2
    cov <- sum((x - x_mean) * (y - y_mean), na.rm = TRUE)
    
    #Calculating Pearson correlation coefficient
    pearson_coeff <- cov / (x_sd * y_sd)
    
    return(pearson_coeff) #Returning the calculated coefficient
}

#Example usage
dataset <- data.frame(variable1 = c(1, 2, 3, 4, 5), variable2 = c(6, 7, 8, 9, 10))
coefficient <- correlation_coefficient(dataset, variable1, variable2)
print(coefficient) #Output: 0.9970545
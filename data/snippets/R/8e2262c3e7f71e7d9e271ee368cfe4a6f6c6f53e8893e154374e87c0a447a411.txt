###Define function to calculate conditional entropy
calculate_conditional_entropy <- function(dataframe, feature_1, feature_2){
  #calculate total number of samples
  N <- nrow(dataframe)
  
  #find unique values of feature 1
  unique_feature_1 <- unique(dataframe[, feature_1])
  
  #initialize empty list for entropy calculations
  entropy_list <- c()
  
  #loop through unique values of feature 1
  for(val in unique_feature_1){
    
    #subset dataframe for current feature 1 value
    subset_df <- dataframe[dataframe[, feature_1] == val, ]
    
    #calculate total number of samples for subset
    N_sub <- nrow(subset_df)
    
    #find unique values of feature 2 within current subset
    unique_feature_2 <- unique(subset_df[, feature_2])
    
    #initialize empty list for conditional entropy calculations
    cond_entropy_list <- c()
    
    #loop through unique values of feature 2
    for(val in unique_feature_2){
      
      #calculate probability of feature 2 value in current subset
      p <- nrow(subset_df[subset_df[, feature_2] == val, ])/N_sub
      
      #calculate conditional entropy
      H <- -p * log2(p)
      
      #add to list of conditional entropy values
      cond_entropy_list <- c(cond_entropy_list, H)
    }
    
    #calculate sum of conditional entropy values for current feature 1 value
    cond_entropy_sum <- sum(cond_entropy_list)
    
    #calculate weighted conditional entropy
    weighted_cond_entropy <- (N_sub/N) * cond_entropy_sum
    
    #add to list of entropy values
    entropy_list <- c(entropy_list, weighted_cond_entropy)
  }
  
  #calculate sum of entropy values for all unique feature 1 values
  entropy_sum <- sum(entropy_list)
  
  #calculate conditional entropy
  conditional_entropy <- entropy_sum
  
  #return conditional entropy value
  return(conditional_entropy)
}

#example usage
#calculate conditional entropy of feature_1 (gender) and feature_2 (age)
conditional_entropy <- calculate_conditional_entropy(dataframe, "gender", "age")
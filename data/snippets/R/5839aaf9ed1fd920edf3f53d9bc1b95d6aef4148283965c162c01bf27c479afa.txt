# Create a function that calculates the nth prime number
# Parameters: 
#   - n: the nth prime number to be calculated
# Output:
#   - the nth prime number 

prime <- function(n) {
  # Create a vector to store prime numbers
  primes <- c()
  # Start counting from 2 (first prime number)
  num <- 2
  # Continue counting until the nth prime number is found
  while (length(primes) < n) {
    # Flag to check if num is prime
    flag <- TRUE
    # Check if num is divisible by any previous prime numbers
    for (prime in primes) {
      if (num %% prime == 0) {
        flag <- FALSE # num is not prime
        break # stop checking if num is divisible
      }
    }
    # If num is prime, add it to the primes vector
    if (flag) {
      primes <- append(primes, num)
    }
    # Increment num for the next iteration
    num <- num + 1
  }
  # Return the nth prime number
  return(primes[n])
}

# Example usage: find the 100th prime number
prime(100)

### OUTPUT ###
function(n) {
  primes <- c()
  num <- 2
  while (length(primes) < n) {
    flag <- TRUE
    for (prime in primes) {
      if (num %% prime == 0) {
        flag <- FALSE
        break
      }
    }
    if (flag) {
      primes <- append(primes, num)
    }
    num <- num + 1
  }
  return(primes[n])
}

prime(100)
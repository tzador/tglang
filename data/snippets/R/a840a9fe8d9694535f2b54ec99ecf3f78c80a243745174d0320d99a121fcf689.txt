# This code snippet creates a function in R called 'fibonacci' that generates the fibonacci sequence up to a given number
# It uses recursive calls to generate the sequence

# The function takes in one argument, 'n', which is the maximum number in the sequence
fibonacci <- function(n) {
  # Create a vector to store the sequence
  seq <- c()
  
  # Base case
  if (n == 0) {
    return(seq)
  }
  
  # Check if n is 1, if so, return 0
  if (n == 1) {
    return(c(0))
  }
  
  # Check if n is 2, if so, return 0 and 1
  if (n == 2) {
    return(c(0, 1))
  }
  
  # Use recursive calls to generate the sequence
  # Start with 0 and 1 as the first two numbers
  seq <- c(seq, 0, 1)
  
  # Loop through the remaining numbers and add them to the sequence
  # Using the formula for fibonacci sequence: F(n) = F(n-1) + F(n-2)
  for (i in 3:n) {
    seq[i] <- seq[i-1] + seq[i-2]
  }
  
  # Finally, return the sequence
  return(seq)
}

# Call the function with a maximum number of 10 and print the output
print(fibonacci(10))
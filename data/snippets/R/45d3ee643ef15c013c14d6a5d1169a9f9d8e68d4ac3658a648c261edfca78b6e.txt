# This code generates a Monte Carlo simulation of stock prices
# Specify the number of iterations and starting price
iter <- 100
start_price <- 100

# Create a vector to store final prices for each iteration
final_prices <- vector("numeric", iter) 

# Loop through each iteration
for (i in 1:iter) {

  # Generate random daily returns using a normal distribution
  daily_returns <- rnorm(n = 252, mean = 0, sd = 0.01)

  # Calculate cumulative returns for each day
  cumulative_daily_returns <- cumsum(daily_returns) 

  # Calculate final price using starting price and cumulative daily returns
  final_price <- start_price * (1 + cumulative_daily_returns[252]) 

  # Store final price in vector
  final_prices[i] <- final_price 

}

# Plot a histogram of the final prices to visualize the distribution
hist(final_prices, breaks = 20, main = "Monte Carlo Simulation of Stock Prices",
  xlab = "Final Stock Price", ylab = "Frequency")

# Calculate and print the mean and standard deviation of the final prices
mean_final_price <- mean(final_prices)
sd_final_price <- sd(final_prices)
cat("Mean of final prices:", mean_final_price, "\n")
cat("Standard deviation of final prices:", sd_final_price)
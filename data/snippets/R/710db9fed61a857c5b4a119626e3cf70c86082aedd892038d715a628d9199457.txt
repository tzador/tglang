#Function to find all prime numbers up to a given limit using the Sieve of Eratosthenes method

prime_sieve <- function(limit) {
  #Initialize a vector to store the prime numbers
  primes <- c()
  #Create a logical vector indicating whether each number is prime
  is_prime <- rep(TRUE, limit)
  #Set first two elements to FALSE since 0 and 1 are not prime numbers
  is_prime[1:2] <- FALSE
  #Loop through numbers from 2 to limit, starting with the first prime number
  for (i in seq_len(limit)) {
    #If i is a prime number (indicated by TRUE in is_prime vector)
    if (is_prime[i]) {
      #Add it to the primes vector
      primes <- c(primes, i)
      #Set all multiples of i to FALSE in is_prime vector
      is_prime[i * 2:limit] <- FALSE
    }
  }
  #Return the vector of prime numbers
  return(primes)
}

#Call function with an input limit of 20
prime_sieve(20)
# This function creates a confusion matrix from a given set of actual and predicted values
# @param actual: vector of actual values
# @param predicted: vector of predicted values
# @return: confusion matrix in a data frame format

create_confusion_matrix <- function(actual, predicted) {
  # initialize variables
  tp <- 0 # true positives
  tn <- 0 # true negatives
  fp <- 0 # false positives
  fn <- 0 # false negatives

  # loop through each value in actual
  for (i in seq_along(actual)) {
    # check if actual value is equal to predicted value
    if (actual[i] == predicted[i]) {
      # if equal, it is a true positive or true negative
      if (actual[i] == 1) {
        tp <- tp + 1 # increase true positives by 1
      } else {
        tn <- tn + 1 # increase true negatives by 1
      }
    } else {
      # if not equal, it is a false positive or false negative
      if (actual[i] == 1) {
        fn <- fn + 1 # increase false negatives by 1
      } else {
        fp <- fp + 1 # increase false positives by 1
      }
    }
  }

  # create confusion matrix data frame
  confusion_matrix <- data.frame(
    "Actual \\ Predicted" = c("True", "False"),
    "True" = c(tp, fn),
    "False" = c(fp, tn)
  )

  # return confusion matrix
  return(confusion_matrix)
}

# Example usage of the function
actual_values <- c(1, 0, 1, 1, 0, 0, 1)
predicted_values <- c(1, 0, 1, 0, 0, 1, 1)
confusion_matrix <- create_confusion_matrix(actual_values, predicted_values)
confusion_matrix
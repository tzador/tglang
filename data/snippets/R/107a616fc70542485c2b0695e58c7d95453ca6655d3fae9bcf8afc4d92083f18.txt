# This code snippet generates a data frame with dummy data and performs multiple data transformation steps using dplyr library

# Load dplyr library for data manipulation
library(dplyr)

# Create a data frame with 6 different variables and 10 observations
df <- data.frame(id = 1:10,
                 gender = sample(c("Male", "Female"), 10, replace = TRUE),
                 age = sample(18:60, 10, replace = TRUE),
                 income = sample(10000:50000, 10, replace = TRUE),
                 education = sample(c("High School", "Bachelor's", "Master's"), 10, replace = TRUE),
                 employment_status = sample(c("Employed", "Unemployed"), 10, replace = TRUE))

# Print the data frame to view the initial data
df

# Remove the id column from the data frame
df <- df %>% select(-id)

# Create a new column called "salary" by multiplying income and age
df <- df %>%
  mutate(salary = income * age)

# Replace "Unemployed" values in employment_status column with "Not Employed"
df$employment_status <- ifelse(df$employment_status == "Unemployed", "Not Employed", df$employment_status)

# Group the data by education level and summarize the mean age, income and salary for each group
df_summary <- df %>%
  group_by(education) %>%
  summarize(avg_age = mean(age), avg_income = mean(income), avg_salary = mean(salary))

# Join the summary data frame with the original data frame based on education level
df_final <- left_join(df, df_summary, by = "education")

# Add a new column called "age_group" based on age categories
df_final$age_group <- ifelse(df_final$age < 25, "Under 25", ifelse(df_final$age >= 25 & df_final$age < 40, "25-39", "40+"))

# Arrange the data in descending order based on salary and select the top 5 rows
top_5 <- df_final %>%
  arrange(desc(salary)) %>%
  head(5)

# Print the final data frame to view the transformed data
top_5
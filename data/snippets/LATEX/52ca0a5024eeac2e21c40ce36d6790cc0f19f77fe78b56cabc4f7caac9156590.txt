%%% Document Class and Packages %%%
\documentclass[12pt,a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage[margin=2.5cm]{geometry}
\usepackage{amsmath,amssymb,amsthm} % Math packages
\usepackage{graphicx} % For including images
\usepackage{hyperref} % For clickable links
\usepackage{listings} % For code snippets
\usepackage{color} % For color definitions
\usepackage{tikz} % For drawing diagrams and figures
\usepackage{algorithm2e} % For writing algorithms
\usepackage{natbib} % For bibliographies
\usepackage{titlesec} % For formatting titles and headings

%%% Title and Author %%%
\title{My Complex LATEX Code Snippet}
\author{John Doe}

%%% Document Body %%%
\begin{document}

\maketitle % Generates title based on title and author defined above

\tableofcontents % Generates table of contents based on sections and subsections

\newpage % Creates a new page

\section{Introduction} % Creates a section titled "Introduction"
LATEX is a powerful markup language used for creating documents, particularly in the scientific and academic communities.

It allows for precise formatting and organization of complex content, including mathematical equations, graphs, and algorithms.

In this code snippet, we will explore some of the advanced features and packages available in LATEX.

\section{Mathematics}
LATEX has built-in support for mathematical equations and symbols. Here is an example:

\begin{equation}
    f(x) = \frac{1}{x+1}
\end{equation}

We can also use the \texttt{amsmath} package to create multiline equations:
\begin{align}
    a^2 + b^2 &= c^2 \\ % Double backslashes create a new line
    x^2 + y^2 &= z^2
\end{align}

\section{Graphics}
LATEX can also handle the inclusion of images and graphics. Here is an example:

\begin{figure}[h] % "h" indicates the preferred placement (here: "here") for the image
    \centering % Centers the image
    \includegraphics[width=0.5\textwidth]{image.png} % Includes the image "image.png" with width of half the text width
    \caption{A sample image} % Adds a caption below the image
    \label{fig:image} % Adds a label for referencing the image in the text
\end{figure}

We can also use the \texttt{tikz} package to create diagrams and figures within LATEX:
\begin{center}
\begin{tikzpicture}
% Axis lines
\draw[->] (-4,0) -- (4,0) node[right] {$x$};
\draw[->] (0,-4) -- (0,4) node[above] {$y$};

% Function plot
\draw[blue, thick, domain=-3:3, samples=100] plot (\x,{sin(\x r)}) node[right] {$f(x)=\sin(x)$};
\end{tikzpicture}
\end{center}

\section{Algorithms}
The \texttt{algorithm2e} package allows us to write algorithms in pseudocode. Here is an example:

\begin{algorithm}[H] % "H" indicates that the algorithm should be placed exactly "here"
\SetAlgoLined
    \KwData{List $L$ containing $n$ elements}
    \KwResult{Sorted list $L$ in ascending order}
    \For{$i\leftarrow$ 1 \KwTo $n-1$}{
        \For{$j\leftarrow$ 1 \KwTo $n-i$}{
            \If{$L[j]>L[j+1]$}{
                Swap $L[j]$ and $L[j+1]$\;
            }
        }
    }
    \caption{Bubble Sort}
\end{algorithm}

\section{References}
The \texttt{natbib} package allows us to easily create bibliographies in different citation styles. Here is an example:

According to \citet{lamport1994latex}, LATEX is the preferred markup language for scientific documents.

\newpage
\bibliographystyle{plain} % Sets the citation style as "plain"
\bibliography{references} % Imports the references from the file "references.bib"

\end{document}
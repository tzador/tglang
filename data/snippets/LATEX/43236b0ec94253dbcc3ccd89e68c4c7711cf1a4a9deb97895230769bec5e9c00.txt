\documentclass{article}         % defines the document class
\usepackage{amsmath}            % imports the 'amsmath' package for enhanced math functions
\title{Latex Code Snippet}      % specifies the title of the document
\author{John Doe}               % specifies the author of the document
\date{\today}                   % specifies the date of the document (today)
\begin{document}                % starts the document
\maketitle                      % generates the title page using the information above
\section{Introduction}          % creates a new section titled 'Introduction'
This is a complex code snippet in \LaTeX{} that showcases the use of various commands and packages.    % adds text to the document
\subsection{Packages}           % creates a subsection titled 'Packages' under 'Introduction'
The first package we use is the \verb|amsmath| package, which allows for the use of advanced math functions and symbols, such as the 'equation' environment, used for writing equations like $E=mc^2$.                              % adds text, and demonstrates the use of a 'verb' for displaying code snippets within text
Another useful package is \verb|graphicx|, which allows for the import and manipulation of images. For example, we can use the command \verb|\includegraphics| to insert an image into our document, as shown in Figure \ref{fig:my_figure}.      % adds text, and refers to a figure within the document
\begin{figure}[h]               % starts a figure environment, positioned 'here'
    \centering                  % centers the image
    \includegraphics[width=0.5\textwidth]{my_image.png}  % imports the image with a width of 50% of the text width
    \caption{My Image}          % adds a caption to the figure
    \label{fig:my_figure}       % labels the figure for referencing within the document
\end{figure}                    % ends the figure environment
\subsection{Commands}           % creates a subsection titled 'Commands' under 'Introduction'
We can also define our own commands in \LaTeX{} using the \verb|\newcommand| command, which allows us to create custom shortcuts for commonly used snippets of code. For example, we can create a command \verb|\mycommand| that prints a specific text, as shown below.   % adds text, and demonstrates the use of a 'verb' for displaying code snippets within text
\newcommand{\mycommand}{This is my custom command.}   % defines a command that prints a specific text
And now, we can simply use \verb|\mycommand| to insert that text into our document, like this: \mycommand   % demonstrates the use of the custom command
\end{document}                  % ends the document
% Define a new document class
\documentclass{article}

% Packages required for this document
\usepackage[utf8]{inputenc}    % for input encoding
\usepackage{amsmath}           % for advanced math formatting

% Define a new environment for algorithm
% with options for language and caption
\usepackage[ruled]{algorithm2e} % for algorithms
\newenvironment{algorithm}[2][]{
    \renewcommand{\algorithmcfname}{Algorithm}
    \begin{algorithm2e}[H]
    \SetTitle{#2}
    \SetKwInput{KwIn}{Input}
    \SetKwInput{KwOut}{Output}
    \SetKwProg{Proc}{Procedure}{:}{}
    \SetKwProg{Func}{Function}{:}{}
    \SetKwFor{For}{for}{do}{endfor}
    \SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else}{endif}
    \SetKwRepeat{Repeat}{repeat}{until}
    \SetKwFor{While}{while}{do}{endwhile}
    \IfEmpty{#1}{}
    \Else{
        \SetAlgoCaptionSeparator{.}
        \SetAlgoCaptionLayout{#1}
        \lIf{#1 = "none"}{
            \SetKwSty{texttt}
            \SetArgSty{texttt}
        }
    }
}{
    \end{algorithm2e}
}

% Define a new command for typesetting an assignment problem
\newcommand{\assignmentProblem}[4]{
    \begin{alignat*}{#1}
        \text{minimize} \quad & #3 \\
        \text{subject to} \quad & #4 \\
        & #2 \\
    \end{alignat*}
}

% Set document title and author
\title{Complex Code Snippet in LATEX}
\author{John Smith}

\begin{document}

% Generate title
\maketitle

% Start document content
\section{Introduction}

In this section, we will introduce a complex code snippet in LATEX for generating algorithms and solving assignment problems.

% Start subsection on algorithms
\subsection{Algorithms}

To start off, we will use the ``algorithm'' environment to create a new algorithm with the title ``Maximum Weighted Matching''.

\begin{algorithm}[H]{Maximum Weighted Matching}
    \KwIn{Bipartite graph $G=(V,E)$ with weights $w_e$ for each edge $e \in E$}
    \KwOut{Maximum weight matching $M$ in $G$}
    \Proc{FindMaxMatching}{
        Initialize empty matching set $M$\;
        \For{$v \in V$}{
            \If{$v$ is not matched}{
                Let $e$ be the maximum weight edge incident to $v$\;
                Add $e$ to $M$\;
            }
        }
        \Repeat{$M$ is maximum}{
            Let $e'$ be an edge in $G$ that is not in $M$\;
            Compute alternating path $P$ with $e'$ as the first edge\;
            Augment matching $M$ along $P$\;
        }
    }
\end{algorithm}

% Start subsection on assignment problems
\subsection{Assignment Problems}

Next, we will solve an assignment problem with the help of the ``assignmentProblem'' command, which will typeset the problem in a clear and concise format.

\assignmentProblem{3}{x_{ij} \in \{0,1\}}{\sum_{i=1}^n \sum_{j=1}^m c_{ij}x_{ij}}{
    \sum_{i=1}^n x_{ij} = 1, \forall j \in \{1,...,m\} \quad
    \sum_{j=1}^m x_{ij} = 1, \forall i \in \{1,...,n\}
}

This typesets the assignment problem with $n$ agents and $m$ tasks, where $c_{ij}$ is the cost of assigning agent $i$ to task $j$ and $x_{ij}$ is a binary indicator variable representing the assignment.

% End document content
\end{document}
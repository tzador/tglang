%% This is a comment in LATEX
\documentclass{article}		# Declaring the document class as an article
\usepackage[utf8]{inputenc}	# Including the inputenc package for UTF-8 encoding
\usepackage{amsmath}			# Including the amsmath package for mathematical formulas
\usepackage{graphicx}			# Including the graphicx package for including images
\title{My Complex Code}		# Declaring the title of the document
\author{John Doe}			# Declaring the author of the document
\date{\today}				# Setting the date as today's date
\begin{document}

\maketitle	# Generates the document title with the information above

\section{Introduction}	# Creates a new section with the title "Introduction"

This is a complex code snippet in LATEX.	# Prints a text in the document

In this section, we will introduce the concept of \textit{code snippets} and how to use them in our document.

\subsection{Code Snippets}	# Creates a subsection with the title "Code Snippets"

Code snippets are short pieces of code that can be inserted into a document to illustrate a concept, explain a technique, or provide an example.

\subsubsection{Example Code}	# Creates a subsubsection with the title "Example Code"

To insert a code snippet in our document, we need to use the verbatim environment from the \textit{fancyvrb} package.

\begin{verbatim}
#include <stdio.h>		# Prints a text in the document
int main() {
    printf("Hello, world!");		# Prints "Hello, world!"
    return 0;
}
\end{verbatim}

We can also highlight specific programming languages by using the listings package and the \textit{lstlisting} environment.

\begin{lstlisting}[language=Python]
def factorial(n):	# Prints a text in the document
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
\end{lstlisting}

\section{Conclusion}	# Creates a new section with the title "Conclusion"

Code snippets are useful tools for showcasing code in a document and can be customized to fit our needs.

\end{document}
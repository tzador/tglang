\begin{algorithm}
\caption{Bubble Sort}
\label{bubble-sort}
\begin{algorithmic}[1]
\Procedure{BubbleSort}{array}
\For {$i \gets 1$ to $n-1$}
\For {$j \gets 1$ to $n-1-i$}
\If {$array[j] > array[j + 1]$}
\State $temp \gets array[j]$
\State $array[j] \gets array[j + 1]$
\State $array[j + 1] \gets temp$
\EndIf
\EndFor
\EndFor
\EndProcedure
\end{algorithmic}
\end{algorithm}

 The above code snippet is an example of the Bubble Sort algorithm written in LATEX. This algorithm is used for sorting an array of numbers in ascending order.

The first line begins the algorithm environment, providing a caption and label for future referencing. The second line starts the algorithmic environment and sets the numbering to start from 1.

The third line declares the beginning of the BubbleSort procedure, which takes an array as its input. The fourth and fifth lines start a loop that iterates from 1 to n-1, where n is the length of the array. This loop will go through the array n-1 times to ensure that all the elements are in the correct order.

Lines 6-9 start another loop that iterates from 1 to n-1-i, where i is the number of times the outer loop has run. This inner loop compares adjacent elements of the array and swaps them if necessary.

The if statement at line 7 checks if the element at index j is greater than the element at index j+1. If it is, then the elements are swapped using temporary variable, temp.

Lines 10-12 conclude the inner loop, and line 13 concludes the outer loop. The final line closes the procedure body.

This algorithm has a time complexity of O(n^2), which means that its efficiency decreases as the size of the input array increases.
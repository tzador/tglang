#!/usr/bin/perl
use strict;
use warnings;

sub merge_sort {
    my $list = shift;
    my $len  = scalar(@$list);

    # check for base case
    return $list if $len < 2;

    my $mid   = int($len / 2);
    my $left  = [@$list[0 .. $mid - 1]];
    my $right = [@$list[$mid .. $len - 1]];

    # recursively separate and sort left and right halves
    $left  = merge_sort($left);
    $right = merge_sort($right);

    # merge the two sorted lists
    my @sorted;
    while (@$left && @$right) {
        if ($left->[0] < $right->[0]) {
            push @sorted, shift @$left;
        }
        else {
            push @sorted, shift @$right;
        }
    }
    push @sorted, @$left if @$left;
    push @sorted, @$right if @$right;

    return \@sorted;
}

# test case
my @list = (5, 2, 8, 3, 9, 1, 4, 7, 6);
my $sorted_list = merge_sort(\@list);

print "@$sorted_list"; # output: 1 2 3 4 5 6 7 8 9
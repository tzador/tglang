# This code snippet takes a list of numbers and sorts them in ascending order

# Input list of numbers
my @numbers = (5, 2, 9, 7, 1, 8);

# Create a subroutine to perform quicksort algorithm
sub quicksort {
    # Get the input list of numbers
    my @arr = @_;

    # Set the pivot element as the last element in the list
    my $pivot = pop @arr;

    # Initialize empty arrays for smaller and larger elements
    my @smaller;
    my @larger;

    # Loop through each element in the list
    foreach my $num (@arr) {

        # If the element is smaller than the pivot, add it to the smaller array
        if ($num < $pivot) {
            push @smaller, $num;
        }
        # If the element is larger than the pivot, add it to the larger array
        else {
            push @larger, $num;
        }
    }

    # Recursively call quicksort on the smaller and larger arrays
    @smaller = quicksort(@smaller);
    @larger = quicksort(@larger);

    # Combine the sorted smaller array, pivot, and sorted larger array and return the result
    return (@smaller, $pivot, @larger);
}

# Call the quicksort subroutine on the input list of numbers
my @sorted = quicksort(@numbers);

# Print the sorted list of numbers
print "@sorted";
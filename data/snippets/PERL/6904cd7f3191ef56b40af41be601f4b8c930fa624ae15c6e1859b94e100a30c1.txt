# This is a comment
use strict; # To ensure strict adherence to coding standards
use warnings; # To catch any potential errors

# Variable declaration
my $number = 5;
my @words = ("Hello", "world");
my %hash = (
  "apple" => "fruit",
  "carrot" => "vegetable",
);

# Looping through an array and printing the values
foreach my $word (@words) {
  print $word . "\n";
}

# Conditional statement
if ($number == 5) {
  print "The number is equal to 5.\n";
} elsif ($number < 5) {
  print "The number is less than 5.\n";
} else {
  print "The number is greater than 5.\n";
}

# Subroutine declaration
sub add_numbers {
  my ($a, $b) = @_;
  my $sum = $a + $b;
  return $sum;
}

# Calling the subroutine and printing the result
my $result = add_numbers(2, 3);
print "The sum of 2 and 3 is $result.\n";

# Hash lookup and printing the value associated with a key
print "An apple is a type of $hash{'apple'}.\n";

# File I/O
open(my $file, '<', 'sample.txt') or die "Cannot open file: $!";
my @lines = <$file>; # Reading all lines from file into an array
close($file);

# Regular expression matching and substitution
foreach my $line (@lines) {
  if ($line =~ /fruit/i) {
    $line =~ s/fruit/berry/; # Replacing 'fruit' with 'berry'
  }
  print $line;
}
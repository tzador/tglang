# This is a complex code snippet in PERL
use strict;
use warnings;

# Define a subroutine to check if number is prime
sub is_prime {
    my $num = shift; # Takes in a number as argument
    # Check for edge cases and return appropriate values
    return 0 if ($num <= 1); # 0 and 1 are not prime numbers
    return 1 if ($num == 2); # 2 is the only even prime number
    return 0 if ($num % 2 == 0); # Even numbers (except 2) are not prime

    # Use a for loop to check from 3 up to sqrt of the given number
    for (my $i = 3; $i <= sqrt($num); $i += 2) {
        return 0 if ($num % $i == 0); # If any number divides evenly into $num, it is not prime
    }
    return 1; # If none of the above conditions are met, the number is prime
}

# Define a string, convert it to uppercase, and print it
my $string = "Hello World!";
my $upper_string = uc($string);
print $upper_string; # Output: HELLO WORLD!

# Use the subroutine to check if 7 is prime or not and print the result
my $num = 7;
if (is_prime($num)) {
    print "$num is a prime number.";
} else {
    print "$num is not a prime number.";
} # Output: 7 is a prime number.

# Define a hash and use a foreach loop to print all key-value pairs
my %food = (
    'apple' => 'fruit',
    'banana' => 'fruit',
    'carrot' => 'vegetable'
);

foreach my $key (keys %food) {
    my $value = $food{$key};
    print "$key is a $value.\n";
} # Output:
# apple is a fruit.
# banana is a fruit.
# carrot is a vegetable.
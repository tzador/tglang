#!/usr/bin/perl
#This is a comment, it will be ignored by the compiler
use strict;
use warnings;

#Declare a variable $name and assign it a value of "John"
my $name = "John";

#Declare a list variable @numbers and assign it the values 1, 2, and 3
my @numbers = (1, 2, 3);

#Print out the value of $name and the size of the @numbers list
print "Name: $name\n";
print "Size of numbers list: " . scalar(@numbers) . "\n";

#Create a hash variable %person and assign it key-value pairs
my %person = (
    "name" => $name,
    "age" => 25,
    "city" => "New York"
);

#Loop through the keys and values of the %person hash and print them out
while (my ($key, $value) = each %person) {
    print "$key: $value\n";
}

#Create a subroutine that takes in two parameters
sub add_numbers {
    my ($num1, $num2) = @_; #assign the parameters to variables
    my $sum = $num1 + $num2; #calculate the sum
    return $sum; #return the sum
}

#Call the add_numbers subroutine and print the result
my $result = add_numbers(5, 10);
print "Result: $result\n";

#Check if the value of $name is equal to "John" and print the result
if ($name eq "John") {
    print "Name is John\n";
} else {
    print "Name is not John\n";
}

#Create a regular expression that matches a phone number in the format (123)456-7890
my $phone_number = "(123)456-7890";
if ($phone_number =~ /^\(\d{3}\)\d{3}-\d{4}$/) { #check if the phone number matches the regex
    print "Valid phone number\n";
} else {
    print "Invalid phone number\n";
}
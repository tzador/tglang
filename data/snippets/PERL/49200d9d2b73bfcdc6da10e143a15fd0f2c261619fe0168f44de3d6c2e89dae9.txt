#!/usr/bin/perl

use strict;
use warnings;

# This is a multi-line comment in Perl, marked by the Hash character
# It is used to provide explanations or document code

my @numbers = (1, 2, 3, 4, 5);  # An array in Perl, can hold multiple values
my %colors = ("red" => "#FF0000", "green" => "#00FF00", "blue" => "#0000FF");  # A hash in Perl, stores key-value pairs

# This is a subroutine declaration, which can be used to organize code
sub print_sum {
    my $sum = 0;  # A variable declared with the "my" keyword is only visible within the current scope
    for my $num (@numbers) {
        $sum += $num;  # The "+=" operator is used to increment a variable by a value
    }
    print "The sum of the numbers is $sum\n";  # The "\n" character inserts a new line
}

# This is a conditional statement, which executes different code based on a condition
if (scalar @numbers < 10) {  # The "scalar" keyword is used to get the number of elements in an array
    print "There are not enough numbers in the array\n";
} else {
    print_sum();  # Calling a subroutine defined earlier
}

# This is a regular expression, used to match patterns in strings
my $name = "John Doe";
if ($name =~ /([\w]+) ([\w]+)/) {
    print "The first name is $1 and the last name is $2\n";  # The $1 and $2 are the matched groups in parentheses
}

# This is a loop, which repeats a set of instructions for each element in a list
foreach my $color (keys %colors) {  # The "keys" function retrieves all the keys in a hash
    print "The code for $color is $colors{$color}\n";  # The curly braces are used to access the value for a particular key
}
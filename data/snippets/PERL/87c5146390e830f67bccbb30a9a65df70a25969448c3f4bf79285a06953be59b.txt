#!/usr/bin/perl

# Define a subroutine that checks if a given number is prime
sub is_prime {
    my ($num) = @_;  # Retrieves the argument passed to the subroutine
    # Checks if the number is less than 2 or if it is divisible by 2
    if ($num < 2 || $num % 2 == 0) {
        return 0;  # If true, the number is not prime so return 0
    }
    # Loop through all odd numbers from 3 up to the square root of the given number
    for (my $i = 3; $i <= sqrt($num); $i+=2) {
        # If the number is divisible by the current odd number, it is not prime
        if ($num % $i == 0) {
            return 0;  # Return 0 if not prime
        }
    }
    return 1;  # If the number passes all checks, it is prime so return 1
}

# Define an array of numbers to check
my @numbers = (3, 7, 12, 23, 29, 35);

# Loop through each number in the array
foreach my $num (@numbers) {
    # Call the is_prime subroutine and pass the current number as an argument
    my $prime = is_prime($num);
    # If the returned value is 1, the number is prime
    if ($prime == 1) {
        # Print a message to the console indicating that the number is prime
        print "$num is prime\n";
    }
    else {
        # If not prime, print a message stating that the number is not prime
        print "$num is not prime\n";
    }
}
#!/usr/bin/perl

# This is a comment
print "Enter a number: ";  # Printing a message to prompt the user
chomp ($input = <STDIN>);  # Getting user input and removing the newline character

# Creating a function to check if the number is a prime number
sub is_prime {
    my ($num) = @_;  # Saving the function argument in a variable

    # Checking for edge cases
    if ($num == 2 || $num == 3 || $num == 5) {
        return 1;
    }
    elsif ($num < 2 || $num % 2 == 0 || $num % 3 == 0 || $num % 5 == 0) {
        return 0;
    }
    else {
        # Checking if the number is divisible by any number below its square root
        for (my $i = 2; $i <= sqrt($num); $i++) {
            if ($num % $i == 0) {
                return 0;
            }
        }
        return 1;
    }
}

# Looping through a range of numbers and checking if they are prime
for ($i = 1; $i <= $input; $i++) {
    if (is_prime($i)) {
        print "$i is a prime number\n";
    }
}

# Output:
# Enter a number: 10
# 2 is a prime number
# 3 is a prime number
# 5 is a prime number
# 7 is a prime number
# Explanation: This code prompts the user for a number and then checks if each number from 1 to the input is a prime number. The is_prime function uses a standard algorithm to check primality by dividing the number by every number below its square root. The output shows the prime numbers within the given range.
# This code snippet performs a bubble sort on an array of integers

sub bubble_sort {
  my $array = shift; # takes in an array of integers as parameter
  my $length = @$array; # get length of array
  for (my $i = 0; $i < $length - 1; $i++) { # loop through array
    for (my $j = 0; $j < $length - $i - 1; $j++) { # loop through remaining unsorted elements
      if (@$array[$j] > @$array[$j + 1]) { # compare adjacent elements
        # swap elements if first element is greater than second element
        @$array[$j] = @$array[$j] ^ @$array[$j + 1]; # use bitwise XOR to swap elements
        @$array[$j + 1] = @$array[$j] ^ @$array[$j + 1];
        @$array[$j] = @$array[$j] ^ @$array[$j + 1];
      }
    }
  }
  return @$array; # return sorted array
}

my @array = (5, 3, 9, 2, 1); # initialize array
print "Unsorted array: @array\n"; # print unsorted array
my @sorted_array = bubble_sort(\@array); # call bubble_sort function
print "Sorted array: @sorted_array\n"; # print sorted array
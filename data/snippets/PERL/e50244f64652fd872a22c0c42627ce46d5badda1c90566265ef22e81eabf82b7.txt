#!/usr/bin/perl
# This is a comment
use strict; # Enforces strict error checking
use warnings; # Displays warnings for potential errors
use feature ":5.10"; # Enables use of newer features
use Data::Dumper; # Provides a convenient way to display complex data structures
my $var = "Hello World"; # Declares a variable and assigns a value
print $var . "\n"; # Concatenates the variable with a trailing newline character
my @array = (1, 2, 3, 4, 5); # Declares an array
my $size = scalar @array; # Uses the scalar function to get the size of the array
foreach my $num (@array) { # Loops through each element in the array
    if ($num % 2 == 0) { # Checks if the number is even
        say "$num is even"; # Uses the say function to print with a trailing newline
    } else {
        say "$num is odd";
    }
}
my %hash = ('apple' => 'red', 'banana' => 'yellow', 'orange' => 'orange'); # Declares a hash with key-value pairs
foreach my $key (keys %hash) { # Loops through each key in the hash
    print "The color of $key is $hash{$key}\n"; # Uses string interpolation to print the key and corresponding value
}
my $result = add(2, 3); # Calls the add function with two arguments
if ($result == 5) { # Checks if the result is 5
    say "The result is 5";
} else {
    say "The result is not 5";
}
sub add { # Defines the add function
    my ($num1, $num2) = @_; # Assigns the two arguments to a list
    return $num1 + $num2; # Returns the sum of the two numbers
}
#!/usr/local/bin/perl

use strict; #Activates strict pragma to enforce good coding practices
use warnings; #Activates warnings pragma to display any potential errors
use CGI; #Imports the CGI module for handling HTTP requests and responses

#Assigning variables
my $name = "John"; #String variable 
my $age = 25; #Integer variable

#Creating a subroutine
sub greet {
    my ($person_name, $person_age) = @_; #Assigning subroutine parameters to variables
    print "Hello, $person_name! You are $person_age years old.\n"; #Prints a greeting using variables
}

#Conditional statement
if ($name eq "John") { #Checks if the value of $name is equal to "John"
    greet($name, $age); #Calls the greet subroutine, passing in the values of $name and $age
} else {
    print "Sorry, I only greet people named John.\n"; #Prints a message if the name is not "John"
}

#Looping
for (my $i = 1; $i <= $age; $i++) { #Loops through numbers 1 to $age and assigns them to $i
    print "$i years old\n"; #Prints the value of $i followed by the string "years old"
}

#Creating a hash
my %person = ( #Start of hash declaration
    name => "Jane", #Key "name" with value "Jane"
    age => 30, #Key "age" with value 30
    occupation => "Engineer" #Key "occupation" with value "Engineer"
);

#greeting message using values from hash
print "Hello, $person{name}! You are $person{age} years old and work as an $person{occupation}.\n"; #Prints a message using values from the %person hash

#Opening a file for reading
open(my $file, "<", "data.txt") or die "Cannot open file: $!"; #Opens a file named data.txt for reading or terminates the program with an error message if it cannot open the file

#Reading lines from the file
while (my $line = <$file>) { #Loops through each line in the file and assigns it to $line
    chomp $line; #Removes any newline character from the end of $line
    print "$line\n"; #Prints the value of $line
}

#Closing the file
close $file; #Closes the file

#Creating an array
my @numbers = (1, 3, 5, 7, 9); #Array of numbers

#Looping through the array
foreach my $number (@numbers) { #Loops through each element of the @numbers array and assigns it to $number
    print "$number\n"; #Prints the value of $number
}

#Calculating the sum of the numbers in the array
my $sum = 0; #Initializing a variable to hold the sum of numbers
foreach my $num (@numbers) { #Loops through each element of the @numbers array and assigns it to $num
    $sum += $num; #Adds the value of $num to the current value of $sum
}

#Printing the sum
print "The sum of the numbers in the array is $sum.\n"; #Prints the value of $sum

#Creating a regular expression
my $regex = qr/(A|T|G|C)+/; #Regular expression that matches strings of only "A", "T", "G", or "C"

#Checking if a string matches the regular expression
if ("ATGCC" =~ $regex) { #Checks if the string "ATGCC" matches the regular expression stored in $regex
    print "The string contains only valid DNA nucleotides.\n"; #Prints a message if the string matches the regular expression
} else {
    print "The string does not contain only valid DNA nucleotides.\n"; #Prints a message if the string does not match the regular expression
}

#Closing the program
exit; #Terminates the program
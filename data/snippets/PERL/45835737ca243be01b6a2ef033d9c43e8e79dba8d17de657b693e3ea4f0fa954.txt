#!/usr/bin/perl

use strict;
use warnings;

my @numbers = (1, 2, 3, 4, 5);

# Function that returns the sum of an array
sub sum_array {
    my $array_ref = shift; # Reference to an array
    my $sum = 0;

    foreach my $num (@$array_ref) {
        $sum += $num;
    }

    return $sum;
}

my $total = sum_array(\@numbers);
print "Sum of all numbers in the array: $total\n";

# Sort the array in ascending order
@numbers = sort {$a <=> $b} @numbers;

# Function that returns the median of an array
sub median_array {
    my $array_ref = shift; # Reference to an array
    my $median = 0;

    if (scalar(@$array_ref) % 2 == 0) { # If the array has an even number of elements
        $median = ($array_ref->[scalar(@$array_ref)/2] + $array_ref->[scalar(@$array_ref)/2 - 1]) / 2; # Calculate the average of the two middle elements
    } else { # If the array has an odd number of elements
        $median = $array_ref->[(scalar(@$array_ref) - 1)/2]; # Get the middle element
    }

    return $median;
}

my $median = median_array(\@numbers);
print "Median of the array: $median\n";

# Function that returns the mode of an array
sub mode_array {
    my $array_ref = shift; # Reference to an array
    my %freq;

    foreach my $num (@$array_ref) {
        $freq{$num}++; # Calculate the frequency of each element in the array
    }

    my $mode = (sort {$freq{$b} <=> $freq{$a}} keys %freq)[0]; # Get the element with the highest frequency

    return $mode;
}

my $mode = mode_array(\@numbers);
print "Mode of the array: $mode\n";

# Function that returns the standard deviation of an array
sub std_deviation {
    my $array_ref = shift; # Reference to an array
    my $mean = sum_array($array_ref) / scalar(@$array_ref); # Calculate the mean of the array
    my $variance = 0;

    foreach my $num (@$array_ref) {
        $variance += ($num - $mean)**2; # Calculate the sum of squared differences from the mean
    }

    my $std_deviation = sqrt($variance / scalar(@$array_ref)); # Calculate the square root of the variance

    return $std_deviation;
}

my $std_deviation = std_deviation(\@numbers);
print "Standard deviation of the array: $std_deviation\n";
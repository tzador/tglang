# This code snippet creates a function that encrypts a given string using Caesar cipher
# The function takes in two parameters, the string to be encrypted and the key
# The function then iterates through each character in the string, shifting it based on the key
# If the character is a lowercase letter, it shifts based on the lowercase alphabet starting at 'a'
# If the character is an uppercase letter, it shifts based on the uppercase alphabet starting at 'A'
# If the character is a non-letter, it keeps the character as is
sub caesar_encrypt {
  my ($str, $key) = @_; # take in the string and key as parameters
  my $result = ""; # initialize empty string to store encrypted result
  my $char; # initialize variable to store current character being processed

  foreach $char (split //, $str) { # loop through each character in the string
    if ($char =~ /[a-z]/) { # if the character is a lowercase letter
      my $ascii_val = ord($char); # get the ASCII value of the character
      $ascii_val = ($ascii_val - ord('a') + $key) % 26; # shift the ASCII value based on the key
      $char = chr(($ascii_val) + ord('a')); # convert the shifted ASCII value back to a character
    } elsif ($char =~ /[A-Z]/) { # if the character is an uppercase letter
      my $ascii_val = ord($char); # get the ASCII value of the character
      $ascii_val = ($ascii_val - ord('A') + $key) % 26; # shift the ASCII value based on the key
      $char = chr(($ascii_val) + ord('A')); # convert the shifted ASCII value back to a character
    }

    $result .= $char; # add the current character to the encrypted result
  }

  return $result; # return the encrypted string
}

# Example usage:
print caesar_encrypt("hello world", 13); # output: "uryyb jbeyq"
print caesar_encrypt("HELLO WORLD", 13); # output: "URYYB JBE
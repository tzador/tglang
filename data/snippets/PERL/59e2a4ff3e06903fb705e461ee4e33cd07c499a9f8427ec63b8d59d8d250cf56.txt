# This code snippet uses the PERL programming language to generate a list of all prime numbers
# within a given range using the Sieve of Eratosthenes algorithm
# Set the upper limit of the range
my $upper_limit = 100;

# Create an array to store all numbers from 2 to the upper limit
my @numbers = (2..$upper_limit);

# Initialize an empty array to store the prime numbers
my @prime_numbers;

# Loop through all numbers starting from 2
for(my $i = 2; $i <= $upper_limit; $i++) {

    # Check if the current number is still in the @numbers array
    if (grep {$i == $_} @numbers) {

        # It is still in the array, so it is a prime number
        push @prime_numbers, $i;

        # Remove all multiples of the current prime number from the @numbers array
        @numbers = grep { $_ % $i != 0 } @numbers;
    }
}

# Print out all the prime numbers in the range
print "Prime numbers from 2 to $upper_limit are:\n";
foreach (@prime_numbers) {
    print "$_ ";
}

#The output will show all prime numbers from 2 to the set upper limit in one line. 
#For example, if the upper limit is set to 100, the output would be:
#Prime numbers from 2 to 100 are:
#2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97
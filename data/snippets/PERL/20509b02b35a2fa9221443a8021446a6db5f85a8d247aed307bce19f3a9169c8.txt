use strict;
use warnings;

# This is a comment in PERL

my $string = "This is a sample string"; # Assigning a string to a variable

my @array = qw(One Two Three Four Five); # Initializing an array

# Looping through the array and printing each element
foreach (@array) {
    print "Element: $_"."\n";
}

# Creating a subroutine with parameters
sub multiply {
    my ($num1, $num2) = @_; # Assigning parameters to variables
    my $result = $num1 * $num2; # Performing multiplication
    return $result; # Returning the result
}

my $product = multiply(4, 6); # Calling the subroutine and passing arguments
print "Product: $product"."\n";

my %hash = ( # Initializing a hash
    'key1' => 'value1',
    'key2' => 'value2',
    'key3' => 'value3'
);

# Looping through the hash and printing each key-value pair
while (my ($key, $value) = each %hash) {
    print "Key: $key | Value: $value"."\n";
}

# Sorting the array in descending order
my @sorted_array = sort { $b <=> $a } @array;

# Printing the sorted array
print "Sorted array: @sorted_array";

# Output:
# Element: One
# Element: Two
# Element: Three
# Element: Four
# Element: Five
# Product: 24
# Key: key1 | Value: value1
# Key: key2 | Value: value2
# Key: key3 | Value: value3
# Sorted array: Five Four Three Two One
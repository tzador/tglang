my %cache; # create a hash to store cached values
sub fibonacci { # define a subroutine for calculating fibonacci numbers
    my $n = shift; # take in the number as an argument
    if (exists $cache{$n}) { # check if the number is already cached
        return $cache{n}; # return the cached value
    }
    elsif ($n == 0 | $n == 1) { # check if the number is 0 or 1
        $cache{$n} = $n; # store the value in the cache
        return $n; # return the number
    }
    else { # if number is not in cache and is not 0 or 1
        $cache{$n} = fibonacci($n - 1) + fibonacci($n - 2); # calculate fibonacci recursively
        return $cache{$n}; # return the calculated value
    }
}

print fibonacci(10); # call the fibonacci subroutine with argument 10 and print the result
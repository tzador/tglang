use strict;
use warnings;

# Subroutine to check if a number is prime
sub is_prime {
    # Get the number passed as argument
    my $num = shift;
    
    # If number is less than 2, return false
    if ($num < 2) {
        return 0;
    }
    
    # Loop through all numbers from 2 to the square root of number
    for (my $i = 2; $i * $i <= $num; $i++) {
        # If number is divisible by current number, return false
        if ($num % $i == 0) {
            return 0;
        }
    }
    
    # If number passes all tests, return true
    return 1;
}

# Subroutine to generate prime numbers up to a specified limit
sub generate_primes {
    # Get the limit passed as argument
    my $limit = shift;
    
    # Create an empty array to store prime numbers
    my @primes = ();
    
    # Loop through all numbers from 2 to the limit
    for (my $i = 2; $i <= $limit; $i++) {
        # If number is prime, push it to the array
        if (is_prime($i)) {
            push @primes, $i;
        }
    }
    
    # Return the array of prime numbers
    return @primes;
}

# Test the functions by generating prime numbers up to 100
my @numbers = generate_primes(100);

# Print the result in a formatted way
foreach my $num (@numbers) {
    print "$num\n";
}
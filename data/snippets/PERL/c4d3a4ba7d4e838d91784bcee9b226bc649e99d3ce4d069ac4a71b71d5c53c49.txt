#!/usr/bin/perl
#This is a comment
use strict; #use strict pragma (enforces strict syntax)
use warnings; #use warnings pragma (displays warnings)
use feature qw(say); #use feature pragma (enables new features)
 
say "Please enter a number: "; #prints message to user
my $num = <STDIN>; #stores user input into variable $num
chomp $num; #remove newline character from input
 
if ($num < 0) { #if statement to check if number is negative
    say "You entered a negative number: $num";
}
elsif ($num > 0) { #elsif statement to check if number is positive
    say "You entered a positive number: $num";
}
else { #else statement for when number is 0
    say "You entered the number 0";
}
 
my @numbers = (1, 3, 5, 7); #create an array with numbers
foreach my $n (@numbers) { #foreach loop to iterate through array
    say $n; #prints each number in array
}
 
my %fruits = (apple => 'red', banana => 'yellow', orange => 'orange'); #create a hash with fruits and colors
foreach my $fruit (keys %fruits) { #foreach loop to iterate through keys in hash
    say "$fruit is $fruits{$fruit}"; #prints each key-value pair in hash
}
 
sub factorial { #subroutine to calculate factorial
    my ($num) = @_; #accepts one argument and stores in $num
    my $factorial = 1; #initialize factorial variable
    while ($num > 1) { #while loop to calculate factorial value
        $factorial *= $num; #multiplies current factorial by $num
        $num--; #decrements $num
    }
    return $factorial; #returns calculated factorial value
}
 
say "The factorial of 5 is: " . factorial(5); #prints the factorial of 5 using subroutine
 
__END__ #marks the end of the code
 
#Output:
#Please enter a number: 5
#You entered a positive number: 5
#1
#3
#5
#7
#apple is red
#banana is yellow
#orange is orange
#The factorial of 5 is: 120
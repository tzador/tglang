#!usr/bin/perl # declaring the location of the perl interpreter on the system

use strict; # enables stricter rules for variable declaration

use warnings; # enables display of warnings and potential errors during execution

my $input = <>; # stores user input in a variable

if ($input =~ /^Hello/) { # checks if user input starts with "Hello"
	create_greeting($input); # calls a function to create a greeting
} else {
	say "Invalid input, please enter a greeting."; # displays an error message if input does not start with "Hello"
}

sub create_greeting { # function declaration
	my $input = shift; # assigns the user input to a variable
	my $message = $input =~ s/Hello/Hi/g; # replaces "Hello" with "Hi" in the input and stores it in a variable
	print "Greeting: $message"; # displays the created greeting
}

for (my $i = 1; $i <= 10; $i++) { # loop that runs 10 times
	print "Current number: $i\n"; # displays the current number in the loop
}

my @numbers = (1, 2, 3, 4, 5); # creates an array with numbers

foreach my $number (@numbers) { # loop that runs for each element in the numbers array
	if ($number % 2 == 0) { # checks if the number is even
		print "$number is an even number\n"; # displays a message if the number is even
	} else {
		print "$number is an odd number\n"; # displays a message if the number is odd
	}
}

open(my $file, '<', 'data.txt') or die "Could not open file: $!"; # opens a file for reading

while (my $line = <$file>) { # loop that reads each line in the file
	chomp $line; # removes the new line character from the end of each line
	print "$line\n"; # displays the line
}

close $file; # closes the file

__END__
This is the end of our perl program. # marker to indicate the end of the code snippet
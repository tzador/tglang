#!/usr/bin/perl

use strict;
use warnings;

# This is a comment in PERL

# This is a subroutine that takes in two variables
sub add_numbers {
    my ($num1, $num2) = @_;
    # my keyword is used to create a variable
    # @_ symbol is an array that contains all the parameters passed into a subroutine

    # This is a conditional statement using if-else
    if ($num1 < $num2) {
        # Here we are calling another subroutine within this subroutine
        my $result = subtract_numbers($num2, $num1);
        return $result;
    } else {
        # Here we are using a looping construct using for loop
        my $sum = 0;
        for (my $i = 0; $i < $num1; $i++) {
            $sum += $num2;
        }
        return $sum;
    }
}

# This is another subroutine that takes in two variables
sub subtract_numbers {
    # Arguments are assigned automatically
    my ($num1, $num2) = @_;
    my $result = $num1 - $num2;
    return $result;
}

# This is the main part of our program
print "Enter two numbers seperated by a space: ";
my $input = <STDIN>;
chomp($input); # chomp() function removes the newline character

# Splitting the input string into two numbers
my ($x, $y) = split(" ", $input);

# Calling our subroutine with the two numbers as arguments
my $sum = add_numbers($x, $y);

# Printing the result to the user
print "The sum of $x and $y is $sum.\n";
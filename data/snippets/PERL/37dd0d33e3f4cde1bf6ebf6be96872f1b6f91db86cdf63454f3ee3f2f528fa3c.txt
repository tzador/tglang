sub count_letters {
    
    # This subroutine counts the number of each letter 
    # in a given string and prints the results.
    
    my ($string) = @_; # takes in a string argument
    
    my %letter_count = (); # initializes an empty hash to store letter counts
    
    $string = lc $string; # converts string to lowercase for more accurate counting
    
    # loops through each character in the string
    for my $character (split //, $string) {
        
        # checks if character is a letter using regex
        if ($character =~ /[A-Za-z]/) { 
            
            # checks if letter already exists in hash
            if (exists $letter_count{$character}) { 
                
                # if it does, increment count by one
                $letter_count{$character}++; 
            } else {
                
                # if not, add letter to hash with count of 1
                $letter_count{$character} = 1; 
            }
        }
    }
    
    # prints the results in a formatted table
    print "LETTER\t\tCOUNT\n"; # heading
    print "------\t\t-----\n"; # separating line
    
    # loops through the hash to print each letter and its count
    foreach my $key (sort keys %letter_count) {
        printf "%-5s\t\t%d\n", $key, $letter_count{$key};
    }
}
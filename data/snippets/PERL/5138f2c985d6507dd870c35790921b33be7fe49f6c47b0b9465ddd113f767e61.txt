#!/usr/bin/perl

use strict;	#specifies strict compilation rules
use warnings;	#displays warning messages during code execution

#subroutine for recursive fibonacci sequence
sub fibonacci {
	my ($n) = @_;	#takes in a number as argument
	if ($n < 2) {
		return $n;	#base case, returns number if it is 0 or 1
	} else {
		return fibonacci($n - 1) + fibonacci($n - 2);	#calls itself twice with smaller arguments
	}
}

#initialize array with first 10 numbers in fibonacci sequence
my @fib_nums = map {fibonacci($_)} (0..9);

#print array to screen
print "First 10 numbers in fibonacci sequence:\n";
print "@fib_nums\n";

#open file for writing
open(my $fh, '>', 'fibonacci_numbers.txt') or die "Could not open file: $!";

#write fibonacci sequence to file, one number per line
foreach my $num (@fib_nums) {
	print $fh $num . "\n";
}

#close file
close $fh;

#subroutine for finding factorial of a number
sub factorial {
	my ($n) = @_;	#takes in a number as argument
	if ($n == 0) {
		return 1;	#base case, returns 1 if number is 0
	} else {
		return $n * factorial($n - 1);	#calls itself with smaller argument
	}
}

#initialize array with first 10 factorials
my @factorials = map {factorial($_)} (0..9);

#print array to screen
print "First 10 factorials:\n";
print "@factorials\n";

#open file for appending
open($fh, '>>', 'factorials.txt') or die "Could not open file: $!";

#write factorials to file, one number per line
foreach my $num (@factorials) {
	print $fh $num . "\n";
}

#close file
close $fh;
#!/usr/bin/perl

use strict;
use warnings;

## This program simulates a guessing game where the user has to guess a secret number between 1 and 100

# generate a random number between 1 and 100
my $secret_num = int(rand(100)) + 1;

# initialize variables for tracking guesses and the status of the game
my $guesses = 0;
my $win = 0;

# print instructions and prompt for user input
print "Welcome to the guessing game! \n";
print "I'm thinking of a secret number between 1 and 100... \n";
print "Can you guess it? \n";

# loop until the user guesses correctly or runs out of guesses (10)
while(!$win && $guesses < 10){

    # prompt for user input and remove newline character
    print "Enter your guess: ";
    chomp(my $guess = <STDIN>);

    # validate user input and increment number of guesses
    if($guess !~ /^\d+$/){ # regex to check if input is a positive integer
        print "Invalid input, please enter a positive whole number \n";
        next; # skip rest of loop and prompt for input again
    }
    else{
        $guesses++;
    }

    # compare user's guess to secret number and give feedback
    if($guess < $secret_num){
        print "Too low! \n";
    }
    elsif($guess > $secret_num){
        print "Too high! \n";
    }
    else{ # user guessed correctly
        print "Congratulations, you guessed the secret number in $guesses attempts! \n";
        $win = 1; # set win to true to break out of while loop
    }
}

# if the user runs out of guesses, print a message revealing the secret number
unless($win){
    print "Sorry, you ran out of guesses. The secret number was $secret_num. Better luck next time! \n";
}
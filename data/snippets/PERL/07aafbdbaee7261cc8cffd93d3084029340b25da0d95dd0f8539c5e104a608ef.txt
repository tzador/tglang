use strict;
use warnings;
#this is a comment

my $num = 10;
#declaring and initializing a variable

for(my $i = 0; $i < $num; $i++){
    print "Value of i is: $i\n"; #prints out current value of i each loop iteration
}

my @array = qw/1 2 3 4 5/;
#declaring and initializing an array

foreach my $num (@array){
    print "Current element in array is: $num\n"; #prints out each element in the array
}

my %hash = ('key1' => 'value1', 'key2' => 'value2', 'key3' => 'value3');
#declaring and initializing a hash

while(my ($key, $value) = each %hash){
    print "Key: $key Value: $value\n"; #prints out each key-value pair in the hash
}

my $num1 = 5;
my $num2 = 2;

my $result = $num1 + $num2; #adding two numbers and storing in a variable
print "Result: $result\n"; #prints out the result

if($result == 7){
    print "Result is equal to 7!\n"; #checks if result is equal to 7 and prints a message if true
}

sub factorial{
    my $n = shift; #using shift to retrieve the first argument passed in the function call
    my $fact = 1;
    
    for(my $i = $n; $i > 0; $i--){
        $fact *= $i;
    }
    
    return $fact; #returning the factorial of the given number
}

my $fact_of_5 = factorial(5); #calling the factorial function and storing the result in a variable
print "Factorial of 5 is: $fact_of_5\n"; #prints out the factorial of 5 using the function

my $string = "Hello World";
$string =~ s/World/Universe/; #replaces the string "World" with "Universe"
print "New string: $string\n"; #prints out the updated string

my $input = <STDIN>; #prompts user to enter input
chomp $input; #removes any trailing newline characters from the input
print "User input: $input\n"; #prints out the user input
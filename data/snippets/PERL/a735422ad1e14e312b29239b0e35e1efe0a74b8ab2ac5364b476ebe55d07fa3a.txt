#!/usr/bin/perl

# This is a comment

# Creating a hash table with some key-value pairs
my %hash = ("key1", "value1", "key2", "value2", "key3", "value3");

# Creating an array with some elements
my @array = ("element1", "element2", "element3");

# A for loop to iterate through the hash table
foreach my $key (keys %hash) {

    # Using regex to check if the key has the letter 'e'
    if ($key =~ /e/) {  

        # Printing the corresponding value
        print "$key: $hash{$key}\n";
    }
}

# A while loop to iterate through the array
my $i = 0;
while ($i < @array) {

    # Concatenating the element with the string '!', using the .= operator
    $array[$i] .= "!";  

    # Printing the updated element
    print "$array[$i]\n";

    # Incrementing the counter
    $i++;
}

# Subroutine to calculate the factorial of a number
sub factorial {
    my $num = shift;

    # Base case
    if ($num <= 1) {
        return 1;
    }

    # Recursive call, returning the product of the number and the factorial of the number - 1
    return $num * factorial($num - 1);
}

# Calling the factorial subroutine and printing the result
print "Factorial of 5: " . factorial(5) . "\n";

# A simple class to represent a student
package Student;

# Constructor method
sub new {
    my $class = shift;
    my $self = {
        name => shift,
        age => shift,
        major => shift,
        gpa => shift
    };
    bless $self, $class;
    return $self;
}

# Getter and setter methods
sub get_name {
    my ($self) = @_;
    return $self->{name};
}

sub set_name {
    my ($self, $new_name) = @_;
    $self->{name} = $new_name;
}

sub get_age {
    my ($self) = @_;
    return $self->{age};
}

sub set_age {
    my ($self, $new_age) = @_;
    $self->{age} = $new_age;
}

sub get_major {
    my ($self) = @_;
    return $self->{major};
}

sub set_major {
    my ($self, $new_major) = @_;
    $self->{major} = $new_major;
}

sub get_gpa {
    my ($self) = @_;
    return $self->{gpa};
}

sub set_gpa {
    my ($self, $new_gpa) = @_;
    $self->{gpa} = $new_gpa;
}

# Creating a new student object
my $student1 = Student->new("John", 21, "Computer Science", 3.8);

# Accessing and printing the student's information
print "Name: " . $student1->get_name() . "\n";
print "Age: " . $student1->get_age() . "\n";
print "Major: " . $student1->get_major() . "\n";
print "GPA: " . $student1->get_gpa() . "\n";
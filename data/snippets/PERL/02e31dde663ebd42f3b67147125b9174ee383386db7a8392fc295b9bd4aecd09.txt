#!/usr/bin/perl

use strict;
use warnings;

# Variables
my $x = 5; # declares a scalar variable holding the value '5'
my @array = (1,2,3,4,5); # declares an array holding the values 1 through 5
my %hash = ('key1' => 'value1', 'key2' => 'value2'); # declares a hash with two key-value pairs

# Functions
sub add { # declares a function called 'add'
    my ($num1, $num2) = @_; # assigns parameters to variables
    return $num1 + $num2; # returns the sum of the two parameters
}

sub multiply {
    my ($num1, $num2) = @_;
    return $num1 * $num2;
}

# Loops
for (my $i = 0; $i < $x; $i++) { # for loop that iterates x times
    print "Iteration: $i\n"; # prints the current iteration number
}

foreach my $num (@array) { # foreach loop that iterates through each value in the array
    print "$num\n"; # prints the current value
}

while (my ($key, $value) = each %hash) { # while loop that iterates through each key-value pair in the hash
    print "$key: $value\n"; # prints the current key and value
}

# Conditional Statements
if ($x > 10) { # if statement that checks if x is greater than 10
    print "$x is greater than 10\n";
} elsif ($x < 5) { # elsif statement that checks if x is less than 5
    print "$x is less than 5\n";
} else { # else statement that executes if none of the above conditions are met
    print "$x is between 5 and 10\n";
}

# Regular Expressions
my $str = "Hello World!";
if ($str =~ /world/i) { # uses a regular expression to check if the string contains the word 'world' (case insensitive)
    print "The string contains 'world'\n";
} else {
    print "The string does not contain 'world'\n";
}

# File Handling
open(my $file, '<', 'input.txt');
my @lines = <$file>; # reads all lines from the file and stores them in an array
close($file);
foreach my $line (@lines) {
    if ($line =~ /Perl/) {
        print "$line"; # prints the line if it contains the word 'Perl'
    }
}

# Object-Oriented Programming
package Car; # declares a package called 'Car'
sub new { # declares a constructor for the class
    my $class = shift; # assigns the class name to a variable
    my $self = { # creates a hash reference for the object's attributes
        color => shift,
        model => shift,
        year => shift
    };
    bless $self, $class; # blesses the reference into the class
    return $self;
}

sub get_year { # declares a method to get the year of the car
    my $self = shift; # assigns the object to a variable
    return $self->{year}; # returns the value of the 'year' attribute
}

# Instantiating objects
my $car1 = Car->new("Blue", "Toyota", 2010); # creates a new Car object
my $car2 = Car->new("Red", "Nissan", 2005);
print "Car 1 is a $car1->{color} $car1->{model} ($car1->{year})\n"; # prints the car's attributes
print "Car 2 is a $car2->{color} $car2->{model} ($car2->{year})\n";

# Output:
#
# Iteration: 0
# Iteration: 1
# Iteration: 2
# Iteration: 3
# Iteration: 4
# 1
# 2
# 3
# 4
# 5
# key1: value1
# key2: value2
# 5 is between 5 and 10
# The string contains 'world'
# Perl is awesome!
# Car 1 is a Blue Toyota (2010)
# Car 2 is a Red Nissan (2005)
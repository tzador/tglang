#!/usr/bin/perl

# This is a comment in PERL

# Importing the "strict" module to enforce some rules in our code
use strict;

# Creating an empty array to store some numbers
my @numbers = ();

# Filling the array with numbers using a for loop
for (my $i = 0; $i <= 10; $i++) {
  push @numbers, $i; # Using the "push" function to add items to the array
}

# Creating a hash (key-value pair) to store some information
my %animals = (
  "cat" => "domestic",
  "dog" => "domestic",
  "tiger" => "wild",
  "shark" => "wild"
);

# Print out the items in the array using a "foreach" loop
print "Numbers from 0 to 10:\n";
foreach my $number (@numbers) {
  print $number . "\n";
}

# Print out the key-value pairs in the hash using a "while" loop
print "\nAnimals and their types:\n";
my $animal;
while (($animal, my $type) = each %animals) {
  print "$animal is $type\n";
}

# Asking for user input and storing it in a variable
print "\nEnter your name: ";
my $name = <STDIN>; # Using the "STDIN" function to get user input
chomp $name; # Removing the new line character from the input

# Using an "if" statement to check if the user's input is equal to a specific string
if ($name eq "John") {
  print "Hello, $name!\n";
} else {
  print "Goodbye, $name!\n";
}

# Using a "subroutine" (a set of instructions that can be called multiple times) to print out a message
sub greeting {
  my $name = shift; # "shift" function to get the first item in a list
  print "Hello, $name. Welcome to our program!\n";
}

# Calling the subroutine with a parameter (argument)
greeting("Mary");

# "return" statement to end the subroutine
return 1; # Optional, as every subroutine automatically returns the value 1

# The end
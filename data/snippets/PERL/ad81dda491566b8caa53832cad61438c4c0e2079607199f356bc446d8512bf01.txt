#!/usr/bin/perl

# This is a comment in Perl

use strict;  # use strict in perl to enforce strong variable declaration
use warnings;  # use warnings to get notified about common mistakes

my $name = "John";  # declaring and initializing a variable

if ($name eq "John") {  # using the eq operator to compare strings
    print "Hello $name, welcome to the program!\n";  # printing a string and a variable
} else {
    print "Oops, wrong name entered!\n";  # alternative print statement if conditional is not met
}

my @numbers = (1, 2, 3, 4, 5);  # declaring and initializing a list (also called an 'array' in Perl)

foreach my $number (@numbers) {  # creating a loop to iterate through the list
    if ($number % 2 == 0) {  # using the modulus operator to check if the number is even
        print "$number is an even number\n";
    } else {
        print "$number is an odd number\n";
    }
}

my %scores = (  # declaring and initializing a hash (a data structure used to store key-value pairs)
    "John" => 95,
    "Sarah" => 85,
    "Tom" => 75
);

while (my ($name, $score) = each %scores) {  # using the each function to loop through the hash
    print "$name has a score of $score\n";
}

sub add_numbers {  # declaring a sub-routine (function) in Perl
    my ($num1, $num2) = @_;  # using a special variable @_ to store function parameters
    return $num1 + $num2;  # returning a value from the function
}

my $sum = add_numbers(5, 10);  # calling the add_numbers function and storing the returned value in a variable
print "The sum of 5 and 10 is $sum\n";  # printing the result
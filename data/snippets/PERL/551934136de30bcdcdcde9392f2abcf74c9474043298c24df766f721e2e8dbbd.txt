#!/usr/bin/perl

# This is a comment in PERL

use strict; # this line enables strict mode, requiring all variables to be declared
use warnings; # this line enables warnings, helping to catch potential errors

my $string = "Hello World!"; # declaring a variable and assigning a string value
print $string; # printing the value of the variable to the console

my $num = 5; # declaring a variable and assigning a numerical value
$num++; # incrementing the value by 1
print "\n$num\n"; # printing the new value to the console, \n creates a new line

my @array = (1,2,3,4,5); # declaring an array with 5 elements
foreach my $i (@array) { # a foreach loop that iterates through the array
    print "$i "; # printing each element of the array, separated by a space
}
print "\n"; # creating a new line after the loop

my %hash = ( # declaring a hash with key-value pairs
    key1 => "value1",
    key2 => "value2",
    key3 => "value3"
);

foreach my $key (keys %hash) { # a foreach loop that iterates through the keys of the hash
    print "$key: $hash{$key}\n"; # printing the key-value pairs
}

my $result = add(4,5); # calling a user-defined function and assigning its return value to a variable
print "4 + 5 = $result\n"; # printing the result to the console

sub add { # declaring a function with two parameters
    my ($num1, $num2) = @_; # assigning the values of the parameters to local variables
    return $num1 + $num2; # returning the sum of the two numbers as the function's output
}
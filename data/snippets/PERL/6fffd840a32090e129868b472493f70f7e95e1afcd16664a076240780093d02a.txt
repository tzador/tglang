# This code snippet generates a random password and encrypts it using md5 hash
use strict;
use warnings;
use Digest::MD5 qw(md5_hex);

# Create an array with all possible characters for password
my @chars = (0..9, 'a'..'z', 'A'..'Z', '*', '-', '_', '#');

# Prompt user for the desired password length
print "Enter password length: ";
chomp(my $length = <STDIN>);

# Use rand function to generate random index and choose password characters using it
my $password;
for(1..$length) {
	$password .= $chars[rand @chars];
}

# Print the randomly generated password
print "Randomly generated password: $password";

# Encrypt the password using md5 hash function
my $encrypted_password = md5_hex($password);

# Print the encrypted password
print "Encrypted password: $encrypted_password";

# EXAMPLE OUTPUT:
Enter password length: 10
Randomly generated password: 5*Adb-78fT
Encrypted password: 5fff4a4c7e3cf651cb65e05a9f837c70
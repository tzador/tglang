#!/usr/bin/perl

# This is a PERL script that checks the validity of a credit card number by performing the Luhn algorithm.

# Define and initialize the credit card number.
my $credit_card_number = "1234567890123456";

# Remove all whitespace characters from the credit card number.
$credit_card_number =~ s/\s//g;

# Reverse the credit card number.
my $reversed_number = reverse $credit_card_number;

# Declare and initialize the sum variable.
my $sum = 0;

# Loop through each individual digit of the reversed credit card number.
foreach my $i (0..length($reversed_number) - 1) {
    # Multiply each digit by 2 if its index is even.
    if ($i % 2 == 0) {
        $reversed_number =~ s/(\d)/($1 * 2)/e;
    }
    # Add the resulting digits to the sum variable.
    $sum += $reversed_number % 10 + int($reversed_number / 10);
}

# If the sum is a multiple of 10, the credit card number is valid.
if ($sum % 10 == 0) {
    print "Valid credit card number!";
}
else {
    print "Invalid credit card number!";
}
#!/usr/bin/perl

use strict;
use warnings;

my $num = 5.2e10; # assign a floating point value

my @arr = (1, 2, 3, 4, 5); # assign an array

my %hash = ( # assign a hash
    key1 => "value1",
    key2 => "value2",
    key3 => "value3",
);

print "The original array: @arr\n"; # print the original array

my $arr_len = $#arr + 1; # get the length of the array

for (my $i=0; $i<$arr_len; $i++) { # loop through each element in the array
    my $num = $arr[$i]; # assign the current element to a new variable
    
    if ($num % 2 == 0) { # check if the element is even
        $num = $num ** 3; # cube the element if it is even
    }
    else { # if the element is odd
        $num = $num ** 2; # square the element
    }
    
    print "$num "; # print the modified element in the array
}

print "\nThe modified array: @arr\n"; # print the modified array

print "The original hash:\n"; # print the original hash
foreach my $key (keys %hash) { # loop through each key in the hash
    my $value = $hash{$key}; # assign the value of the current key to a new variable
    print "$key => $value\n"; # print the key and value pair
}

my %new_hash = map { $_ => $hash{$_} ** 2 } keys %hash; # square the values in the original hash and assign it to a new hash
print "The modified hash:\n"; # print the modified hash

foreach my $key (keys %new_hash) { # loop through each key in the modified hash
    my $value = $new_hash{$key}; # assign the value of the current key to a new variable
    print "$key => $value\n"; # print the key and value pair
}
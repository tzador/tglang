#!/usr/bin/perl

use strict; # pragma for strict code checking
use warnings; # pragma for showing warnings

sub fibonacci { # defining a sub routine named as fibonacci
    my $n = shift; # storing the argument passed to the sub routine in variable $n
    my ($a, $b) = (0, 1); # initializing $a and $b to 0 and 1 respectively
    my @result = (); # initializing an empty array

    while ($n > 0) { # looping until $n is greater than 0
        push @result, $a; # adding $a to the end of the array @result
        ($a, $b) = ($b, $a + $b); # updating $a and $b values to next two numbers in fibonacci sequence
        $n--; # decrementing the value of $n by 1
    }

    return \@result; # returning the reference of @result array
}

my $n = 10; # initializing $n to 10
my $fibonacci_array_ref = fibonacci($n); # calling fibonacci sub routine with $n as argument and storing the reference of returned array in $fibonacci_array_ref variable
print "The first $n numbers in fibonacci sequence are: ", join(", ", @$fibonacci_array_ref); # printing the result in desired format

# Output: The first 10 numbers in fibonacci sequence are: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34

=cut
#!/usr/bin/perl    #Shebang line specifying the path to the interpreter
use strict;    #Enforces strict variable declaration
use warnings;    #Issues warnings about potential syntax or logic errors
use LWP::Simple;    #Imports the LWP::Simple module for easy web access
use XML::Simple;    #Imports the XML::Simple module for easy XML parsing

my $url = 'https://example.com/api/data';    #Assigns the URL to a variable

my $response = get($url);    #Gets the data from the URL and assigns it to a variable
die "Couldn't get data" unless defined $response;    #Checks if the response is valid

my $xml = XMLin($response);    #Parses the XML data into a Perl data structure

my @results = ();    #Creates an empty array to store the results

foreach my $node (@{$xml->{data}->{nodes}}) {    #Loops through each node in the data
    my $name = $node->{name};    #Assigns the value of the 'name' element to a variable
    my $score = $node->{score};    #Assigns the value of the 'score' element to a variable

    if ($score > 100) {    #Checks if the score is greater than 100
        push(@results, "$name has a high score!");    #Adds a string to the results array
    }
}

print "Results:\n";    #Outputs a header for the results
foreach my $result (@results) {    #Loops through each result
    print "$result\n";    #Outputs the result
}
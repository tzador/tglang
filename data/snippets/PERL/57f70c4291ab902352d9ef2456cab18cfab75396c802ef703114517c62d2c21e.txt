# This is a code snippet in PERL to sort a list of numbers using the Bubble Sort algorithm

# Initializing a list of numbers to be sorted
my @numbers = (9, 5, 2, 7, 3, 1);

# Defining a function to perform Bubble Sort on a list
sub bubble_sort {
    # Accepting the list as an argument
    my (@list) = @_;

    # Initializing a variable to keep track of whether any swaps have been made
    my $swapped = 1;

    # Looping through the list until no swaps have been made
    while ($swapped) {

        # Setting $swapped to false
        # This will be set back to true if any swaps are made, indicating that the list is not yet sorted
        $swapped = 0;

        # Looping through the list
        for my $i (0 .. $#list) {

            # Checking if the current element is greater than the next element
            if ($list[$i] > $list[$i + 1]) {

                # Swapping the two elements using temporary variables
                my $temp1 = $list[$i];
                my $temp2 = $list[$i + 1];
                $list[$i] = $temp2;
                $list[$i + 1] = $temp1;

                # Setting $swapped to true to indicate that a swap has been made
                $swapped = 1;
            }
        }
    }

    # Returning the sorted list
    return @list;
}

# Calling the function to perform Bubble Sort on the list of numbers
my @sorted_numbers = bubble_sort(@numbers);

# Printing the sorted list of numbers
print "Sorted numbers: @sorted_numbers";
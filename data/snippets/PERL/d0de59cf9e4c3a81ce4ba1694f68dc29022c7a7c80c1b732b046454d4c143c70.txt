# This is a complex code snippet in PERL
# It generates a random password of a given length

# Import the necessary modules
use strict;
use warnings;
use String::Random;

# Define a subroutine with the given password length as parameter
sub generate_password {
    my ($length) = @_;

    # Define an array to hold the characters that can be used in the password
    my @chars = ('A'..'Z', 'a'..'z', 0..9, qw(! @ $ % ^ & *));

    # Create an instance of String::Random module
    my $random = String::Random->new;

    # Generate a string of random characters with the given length
    my $password = $random->randpattern("cc$length", \@chars);

    # Return the randomly generated password
    return $password;
}

# Get user input for the desired length of the password
print "Enter the desired length for the password: ";
my $length = <STDIN>;

# Remove newline character from user input
chomp($length);

# Validate user input to ensure it is a positive integer
if ($length =~ /^\d+$/ && $length > 0) {

    # Generate the password by calling the subroutine with the user input as parameter
    my $password = generate_password($length);

    # Print the generated password
    print "Your randomly generated password is: $password\n";
}
else {
    # If input is invalid, print an error message
    print "Invalid input. Please enter a positive integer.\n";
}
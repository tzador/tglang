# This is a complex code snippet in PERL

use strict; # tells Perl to restrict unsafe constructs
use warnings; # enable all warnings
use feature 'say'; # enables the 'say' feature for easier printing

my @numbers = (1, 2, 3, 4); # declare an array with four elements
my %colors = (1 => 'red', 2 => 'green', 3 => 'blue'); # declare a hash with three key-value pairs

# create a subroutine to multiply two numbers
sub multiply {
    my ($x, $y) = @_; # use shift to get the arguments passed to the subroutine
    return $x * $y; # return the result of the multiplication
}

# loop through the array
for my $num (@numbers) {
    say "The number is $num";
    if ($num % 2 == 0) { # check if the number is even
        say "The number is even";
    } else {
        say "The number is odd";
    }
}

# loop through the hash
while (my ($key, $value) = each %colors) {
    say "The color for key $key is $value";
}

# call the multiply subroutine with two arguments
my $product = multiply(5, 10);
say "The product is $product";

# output in triple backticks for use in annotated markdown
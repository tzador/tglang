# This code snippet is a program that checks if a given string is a palindrome
# A palindrome is a word or phrase that reads the same backward as it does forward
# For example, "radar" is a palindrome because it is spelled the same forward and backward

# Define a subroutine that takes in a string as a parameter
sub is_palindrome {
    my ($str) = @_;

    # Remove all non-alphanumeric characters and convert string to lowercase
    $str =~ s/[^a-zA-Z0-9]//g;
    $str = lc($str);

    # Set variables for the start and end of the string
    my $start = 0;
    my $end = length($str) - 1;

    # Loop while the start index is less than the end index
    while ($start < $end) {
        # Compare the characters at the start and end indices
        if (substr($str, $start, 1) ne substr($str, $end, 1)) {
            # If they are not the same, return false
            return 0;
        }

        # Increment start index and decrement end index
        $start++;
        $end--;
    }

    # If the loop finishes without returning false, return true
    return 1;
}

# Prompt user to input a string and store it in a variable
print "Enter a string: ";
my $input = <STDIN>;

# Check if the input string is a palindrome by calling the is_palindrome subroutine
if (is_palindrome($input)) {
    # If it is a palindrome, print a success message
    print "The input string is a palindrome.\n";
}
else {
    # If it is not a palindrome, print a failure message
    print "The input string is not a palindrome.\n";
}

# Example input: "A man, a plan, a canal: Panama"
# Output: "The input string is a palindrome."
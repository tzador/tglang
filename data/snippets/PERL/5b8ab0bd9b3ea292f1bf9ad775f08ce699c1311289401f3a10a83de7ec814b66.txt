#!/usr/bin/perl
use strict;
use warnings;

my $num = 10; # declaring a variable and assigning it a value

# looping through the number and printing out the square of each number
for(my $i = 1; $i <= $num; $i++) { # starting a for loop with a variable
  my $square = $i * $i; # calculating the square of the current number
  print "$i squared is $square\n"; # printing out the number and its square
}

# creating a function that calculates the factorial of a given number
sub factorial {
  my $n = shift; # retrieving the argument passed to the function
  my $fact = 1; # initializing the factorial variable

  # using a while loop to calculate the factorial
  while($n > 0) {
    $fact = $fact * $n; # updating the factorial variable
    $n--; # decrementing the argument value
  }

  return $fact; # returning the factorial value
}

my $factorial = factorial(5); # calling the factorial function and storing the result in a variable
print "Factorial of 5 is $factorial\n"; # printing out the result

# using a ternary operator to check if the number is even or odd
my $even_or_odd = $num % 2 == 0 ? "even" : "odd"; # checking the remainder of dividing the number by 2
print "$num is $even_or_odd\n"; # printing out the result

# sorting an array of numbers
my @numbers = (5, 3, 9, 1, 8, 4, 7, 2, 6); # declaring an array of numbers
my @sorted_numbers = sort { $a <=> $b } @numbers; # sorting the array in ascending order using the <=> operator
print "Sorted numbers: @sorted_numbers\n"; # printing out the result

# using regular expressions to check if a string is a palindrome
my $string = "racecar"; # declaring a string
my $reverse_string = reverse $string; # reversing the string
if($string =~ m/$reverse_string/) { # using the m// operator to match the string with its reverse
  print "$string is a palindrome\n"; # printing out the result
}
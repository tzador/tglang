#!/usr/bin/perl

# This is a simple PERL program that generates prime numbers using a Sieve of Eratosthenes algorithm

use strict;
use warnings;

# Set a limit for the list of prime numbers to generate
my $limit = 100;

# Create an array to store the prime numbers
my @primes;

# Create a boolean array to mark numbers as prime (1) or non-prime (0)
my @is_prime = (1) x ($limit);

# Use a for loop to iterate through numbers starting at 2 (the first prime number)
for (my $i = 2; $i <= $limit; $i++) {

    # Check if the current number is marked as prime
    if ($is_prime[$i]) {

        # If it is marked as prime, add it to the list of primes
        push @primes, $i;

        # Use a for loop to mark all multiples of the current prime number as non-prime
        for (my $j = $i * $i; $j <= $limit; $j += $i) {
            $is_prime[$j] = 0;
        }
    }
}

# Print out the list of prime numbers
print "Prime numbers up to $limit:\n";
print join ', ', @primes;
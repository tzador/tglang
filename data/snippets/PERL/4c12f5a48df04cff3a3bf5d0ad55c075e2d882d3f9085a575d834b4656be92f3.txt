# use strict module to enable strict variable scoping
use strict;

# create a variable with a long and complex name
my $long_and_complex_variable_name = "This is a string.";

# loop through the characters of the string and print each one
for my $i (0 .. length($long_and_complex_variable_name) - 1) {
    # grab the current character
    my $char = substr($long_and_complex_variable_name, $i, 1);

    # print the character to the console
    print "Character at position $i: $char\n";
}

# create a subroutine that returns the sum of two numbers
sub add_numbers {
    # get the two parameters passed into the subroutine
    my ($num1, $num2) = @_;

    # add the numbers together and return the result
    return $num1 + $num2;
}

# call the subroutine and save the result to a new variable
my $sum = add_numbers(5, 10);

# print the sum to the console
print "5 + 10 = $sum\n";

# create a hash with complex keys and values
my %complex_hash = (
    'key1' => {
        'subkey1' => 'value1',
        'subkey2' => 'value2'
    },
    'key2' => {
        'subkey3' => 'value3',
        'subkey4' => 'value4'
    }
);

# loop through the keys of the hash and print the corresponding values
foreach my $key (keys %complex_hash) {
    # get the subhash associated with the current key
    my %subhash = %{$complex_hash{$key}};
    
    # loop through the keys and print the values
    foreach my $subkey (keys %subhash) {
        print "Value for key '$subkey' under key '$key': $subhash{$subkey}\n";
    }
}
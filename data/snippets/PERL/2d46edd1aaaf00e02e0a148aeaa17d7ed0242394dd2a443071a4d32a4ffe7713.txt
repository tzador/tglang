# This is a complex PERL code snippet that uses various conditional statements and loops.
# It takes a number as an input and checks if it is prime or not.

# Defining a sub-routine to check if a number is prime
sub is_prime {
  my $num = shift;
  # Generating a list of numbers from 2 to n-1
  my @num_list = (2..$num-1);
  # Looping through the list of numbers
  foreach my $divisor (@num_list) {
    # Checking if the number is divisible by any number in the list
    if ($num % $divisor == 0) {
      # If it is, then it is not a prime number
      return 0;
    }
  }
  # If the number is not divisible by any number in the list, it is a prime number
  return 1;
}

# Taking input from the user
print "Enter a number: ";
my $input = <STDIN>;
chomp $input;

# Checking if the input is a number
if ($input =~ /^\d+$/) {
  # Converting the input into a number
  my $num = int($input);
  # Checking if the number is greater than or equal to 2
  if ($num >= 2) {
    # Calling the is_prime subroutine and storing the result in a variable
    my $is_prime = is_prime($num);
    # Checking the value of $is_prime
    if ($is_prime == 1) {
      print "${num} is a prime number\n";
    } else {
      print "${num} is not a prime number\n";
    }
  } else {
    print "Invalid input. Please enter a number greater than or equal to 2.\n";
  }
} else {
  print "Invalid input. Please enter a number.\n";
}
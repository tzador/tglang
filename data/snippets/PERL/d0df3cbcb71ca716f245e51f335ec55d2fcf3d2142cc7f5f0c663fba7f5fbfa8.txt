#!/usr/bin/perl
use strict;
use warnings;

# Define subroutine to concatenate two strings
sub concatenate {
    my $string1 = $_[0]; # get first string parameter
    my $string2 = $_[1]; # get second string parameter
    return $string1 . $string2; # concatenate strings and return result
}

# Define an array with multiple strings
my @words = ('Hello', 'world,', "I'm", 'learning', 'PERL!');

# Loop through each element in the array
foreach my $word (@words) {
    my $string = concatenate($word, ' '); # add a space after each word
    print $string; # print concatenated string to console
}

# Sort the array in alphabetical order
my @sorted_words = sort @words;

# Print each word in the sorted array to console
foreach my $word (@sorted_words) {
    print $word . "\n"; # use newline character for each word
}

# Define a hash with key-value pairs
my %fruit_colors = (
    'apple' => 'red',
    'banana' => 'yellow',
    'grape' => 'purple'
);

# Loop through each key-value pair in the hash
while (my ($fruit, $color) = each %fruit_colors) {
    print "A $color $fruit\n"; # print sentence using hash values
}

# Define a regular expression for matching email addresses
my $regex = qr/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/;

# Define an array with email addresses to test
my @emails = (
    'john@doe.com',
    'jane.doe@example',
    'invalidemail',
    'test123@gmail.com'
);

# Loop through each email address and test against regex
foreach my $email (@emails) {
    if ($email =~ $regex) { # use regex match operator
        print "$email is a valid email address\n";
    } else {
        print "$email is not a valid email address\n";
    }
}

# Define a multiline string with backticks
my $multiline_str = `ls -la`; # perform system command in backticks

# Split the multiline string into an array
my @files = split("\n", $multiline_str);

# Loop through each file and print the filename
foreach my $file (@files) {
    my @file_info = split(' ', $file); # split string by spaces
    print "$file_info[-1]\n"; # the last element contains the filename
}
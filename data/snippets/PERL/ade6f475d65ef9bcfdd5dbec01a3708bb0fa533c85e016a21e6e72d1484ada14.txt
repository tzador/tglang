# This is a multi-line Perl script that performs a custom sorting algorithm 
# on a list of strings, and prints the sorted results to the console.
 
# Define a subroutine, "custom_sort", that takes in a list of strings as input
# and returns a sorted list.
sub custom_sort {
    # Retrieve the list, assign it to variable "@list"
    my @list = @_;
    # Initialize an empty hash, "freq", to store the frequencies of each string
    my %freq;
    # Iterate through each string in "@list"
    foreach my $string (@list) {
        # Increment the value of "freq{$string}" by one for each occurrence
        $freq{$string}++;
    }
    # Sort the list by frequency, from highest to lowest
    my @sorted_list = sort { $freq{$b} <=> $freq{$a} } @list;
    # Sort the list alphabetically within each frequency group
    foreach my $freq (sort { $b <=> $a } keys %freq) {
        # Retrieve each string from "@sorted_list" with current frequency
        my @strings = grep { $freq{$_} == $freq } @sorted_list;
        # Sort that group alphabetically
        @strings = sort @strings;
        # Replace the current frequency group in "@sorted_list" with sorted strings
        @sorted_list = grep { $freq{$_} != $freq } @sorted_list;
        push @sorted_list, @strings;
    }
    # Return the sorted list
    return @sorted_list;
}
 
# Define an example list of strings
my @strings = ("orange", "apple", "banana", "apple", "cherry", "orange", "banana", "strawberry", "blueberry");
# Call the "custom_sort" subroutine with the list as input
my @sorted_strings = custom_sort(@strings);
# Print the sorted list to the console
print "Sorted list: @sorted_strings";
#!/usr/bin/perl
# This script calculates the probability of a string being randomly generated

use strict;
use warnings;
use List::Util qw(shuffle reduce);

# Define the string to be analyzed
my $string = "Hello, World!";

# Create an array of all possible characters in the string
my @chars = split("", $string);

# Create a hash to store the counts for each character
my %char_counts;

# Loop through the array and count the occurrences of each character
foreach my $char (@chars) {
    $char_counts{$char}++;
}

# Create a list of the counts in the hash
my @counts = values %char_counts;

# Calculate the total number of characters in the string
my $total_chars = reduce { $a + $b } @counts;

# Calculate the probability of each character appearing
my @probabilities = map { $_ / $total_chars } @counts;

# Shuffle the array of characters and probabilities
# This ensures a more accurate randomization of the string
@chars = shuffle(@chars);
@probabilities = shuffle(@probabilities);

# Initialize the final probability value
my $final_prob = 1;

# Loop through the shuffles arrays and calculate the final probability
foreach my $i (0 .. $#chars) {
    # Multiply the final probability by the probability of the current character
    $final_prob *= $probabilities[$i];

    # Print the character and its probability
    print "$chars[$i] : $probabilities[$i]\n";
}

# Print the final probability of the string
print "The probability of '$string' being randomly generated is: $final_prob\n";
my @nums = (1, 2, 3, 4); #initialize an array with numbers 1 to 4
my @doubles = map {$_ * 2} @nums; #create a new array with doubled values
my $sum = 0;

for my $num (@nums) { #iterate through the array and add all values to $sum
    $sum += $num;
}

print "Total sum: $sum\n"; #output the total sum of the array

foreach my $double (@doubles) { #iterate through the new array and print out each doubled value
    print "Doubled value: $double\n";
}

my @reversed = reverse @nums; #create a new array with the reversed order of @nums

print "Reversed array: @reversed\n"; #output the reversed array

my $length = scalar(@nums); #get the length of the array using scalar function

print "Array length: $length\n"; #output the length of the array

for (my $i = 0; $i < $length; $i++) { #loop through the array using a for loop with index variable $i
    print "Value at index $i: $nums[$i]\n"; #output the value at each index
}

my %ages = ( #initialize a hash with names as keys and ages as values
    "John" => 25,
    "Anna" => 30,
    "Emily" => 28,
);

while (my ($name, $age) = each %ages) { #loop through the hash using a while loop and extract key-value pairs
    print "$name is $age years old\n"; #output the name and age of each person
}

my $name = "Emily";
if (exists $ages{$name}) { #check if $name exists as a key in the hash
    print "Age of $name: $ages{$name}\n"; #output the age of $name if it exists
} else {
    print "$name does not exist in the hash\n"; #otherwise, output that $name does not exist
}

my $avg = $sum / $length; #calculate the average of the array
print "Average: $avg\n"; #output the average

if ($avg > 20) { #check if the average is greater than 20
    print "Average is greater than 20\n"; #if it is, output a message
}

for (my $i = 1; $i <= 10; $i++) { #loop through numbers 1 to 10
    print "$i squared: " . $i**2 . "\n"; #output the square of each number
}

my @even_nums = grep {$_ % 2 == 0} @nums; #create a new array with only even numbers from @nums
print "Even numbers: @even_nums\n"; #output the even numbers array

my @names = keys %ages; #get an array of all the names in the hash
print "Names: @names\n"; #output the array of names
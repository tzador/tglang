#!/usr/bin/perl
use strict;   #use strict pragma for stricter error checking
use warnings;  #use warnings to help spot potential errors
#this is a subroutine that checks if a string is a palindrome
sub is_palindrome {
    my $string = shift;   #takes in the string to be checked
    $string = lc($string);  #convert all characters to lowercase to ignore case sensitivity
    $string =~ s/[^a-z]//g;  #remove all non-alphabetic characters
    my $length = length($string); #get the length of the string
    for (my $i = 0; $i < $length/2; $i++) {  #loop through the first half of the string
        if (substr($string, $i, 1) ne substr($string, $length - $i - 1, 1)) {  #compare characters at opposite ends of the string
            return 0;   #if they don't match, return false
        }
    }
    return 1;   #if all comparisons are true, return true
}

#this is a subroutine that counts the number of words in a string
sub count_words {
    my $string = shift;   #takes in the string to be counted
    $string = lc($string);  #convert all characters to lowercase to ignore case sensitivity
    $string =~ s/[^a-z\s]//g;  #remove all non-alphabetic characters and spaces
    my $count = 0;
    while ($string =~ /\s+/g) {  #loop through the string, counting the number of spaces (which equals the number of words)
        $count++;
    }

    return $count + 1;  #add 1 for the last word
}

#main code
print "Enter a string: "; #prompt user to enter a string
my $input = <STDIN>;    #get user input
chomp($input);  #remove newline character from input
print "Input: $input\n";   #print input for reference

my $num_words = count_words($input);   #call count_words subroutine
my $is_palindrome = is_palindrome($input); #call is_palindrome subroutine

if ($is_palindrome) {   #check if input is a palindrome
    print "The input '$input' is a palindrome with $num_words words.\n";  #print result if input is a palindrome
} else {
    print "The input '$input' is not a palindrome, and has $num_words words.\n";   #print result if input is not a palindrome
}
#!/usr/bin/perl

#multi-line variable declaration and assignment
my ($name, $age, $country) = ("John", 27, "USA");

#single-line if statement
if ($age > 25) {
  print "You are over 25 years old\n";
}

#multi-line for loop
for (my $i = 0; $i < 5; $i++) {
  print "Count: $i\n";
}

#single-line while loop
while ($age < 30) { print "Age is $age\n"; $age++; }

#subroutine with multiple parameters and return statement
sub print_info {
  my ($name, $age, $country) = @_;
  print "Name: $name\n" if defined $name;
  print "Age: $age\n" if defined $age;
  print "Country: $country\n" if defined $country;
  return;
}

#calling subroutine with named parameters
print_info(name => $name, age => $age, country => $country);

#multi-line array declaration and manipulation
my @numbers = (1, 2, 3, 4, 5);
push @numbers, 6;
unshift @numbers, 0;

#looping through array using foreach loop
foreach my $num (@numbers) {
  #checking if number is even using modulus operator
  if ($num % 2 == 0) {
    print "$num is even\n";
  }
}

#hash with key-value pairs
my %fruits = (
  "apple" => "red",
  "banana" => "yellow",
  "orange" => "orange"
);

#looping through hash using keys function
foreach my $fruit (keys %fruits) {
  print "$fruit is $fruits{$fruit}\n";
}

#single-line string concatenation with variables
print "My name is " . $name . " and I am " . $age . " years old from " . $country . "\n";

#regular expression matching using =~ operator
if ($name =~ /Jo/) {
  print "$name contains 'Jo'\n";
}

#multi-line string using here-doc
my $long_string = <<'END_STRING';
This is a long string
that spans multiple lines.
END_STRING

#output using print command and string interpolation
print "Value of \$name is $name\n";
print "Age is $age\n";
print "Country is $country\n";
print "$long_string\n";
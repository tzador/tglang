#!/usr/bin/perl
use strict;
use warnings;

# An array of strings
my @strings = ('hello', 'world', 'this', 'is', 'a', 'test');

# A hash of numbers
my %numbers = (
    1 => 'one',
    2 => 'two',
    3 => 'three',
    4 => 'four',
    5 => 'five',
);

# A subroutine that checks if a given string is in the array
sub check_string {
    my $string = shift; # Getting the argument passed to the subroutine
    my $found = 0; # A flag to check if the string was found in the array

    # Looping through the array
    foreach my $item (@strings) {
        if ($item eq $string) {
            $found = 1; # Changing flag value if string matches an item in the array
            last; # Breaking out of the loop since we found a match
        }
    }
    
    # Printing the result based on the flag value
    if ($found) {
       print "$string is in the array\n";
    } else {
        print "$string is not in the array\n";
    }
}

# A subroutine that checks if a given number is in the hash
sub check_number {
    my $number = shift; # Getting the argument passed to the subroutine
    my $found = 0; # A flag to check if the number was found in the hash

    # Looping through the hash
    foreach my $key (keys %numbers) {
        if ($key == $number) {
            $found = 1; # Changing flag value if number matches a key in the hash
            last; # Breaking out of the loop since we found a match
        }
    }
    
    # Printing the result based on the flag value
    if ($found) {
        print "$number is in the hash\n";
    } else {
        print "$number is not in the hash\n";
    }
}

# Calling the subroutines with different arguments
check_string('hello'); # Expected output: hello is in the array
check_string('test'); # Expected output: test is in the array
check_string('bye'); # Expected output: bye is not in the array
check_number(2); # Expected output: 2 is in the hash
check_number(6); # Expected output: 6 is not in the hash
check_number('one'); # Expected output: one is not in the hash
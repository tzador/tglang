#!/usr/bin/perl
# This code snippet is in PERL programming language
# It uses complex data structures and control structures

# Define a hash of job applicants with their names, age, and skills
my %applicants = (
    "John Smith" => {
        age => 25,
        skills => ["Python", "Java", "C++"]
    },
    "Jane Doe" => {
        age => 29,
        skills => ["Perl", "Ruby", "JavaScript"]
    },
    "Bob Watson" => {
        age => 35,
        skills => ["C#", "PHP", "HTML"]
    }
);

# Create an array of available positions
my @positions = ("Software Developer", "Web Developer", "Data Analyst");

# Loop through each applicant
foreach my $name (keys %applicants) {

    # Check if the applicant has the required skills for any of the positions
    my $matched_position;
    foreach my $position (@positions) {
        my @required_skills = split " ", $position;
        my $count = 0;
        foreach my $skill (@{$applicants{$name}{skills}}) {
            # Check if the applicant has the current required skill
            if (grep {$_ eq $skill} @required_skills) {
                $count++;
            }
        }

        # If the applicant has all the required skills, assign them to the position
        if ($count == scalar @required_skills) {
            $matched_position = $position;
            last;
        }
    }

    # If an applicant has been matched to a position, print a success message
    if ($matched_position) {
        print "Congratulations $name, you have been selected for the $matched_position position!\n";
    } else {
        print "Sorry $name, you do not have the required skills for any of the positions.\n";
    }
}
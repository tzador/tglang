# This code snippet is a complex and long example of PERL code.

# First, we declare a hash variable to store key-value pairs.
my %fruits = (
    apple => 'red',
    banana => 'yellow',
    orange => 'orange'
);

# Next, we use a foreach loop to iterate through the hash.
foreach my $fruit (keys %fruits) {
    # We use regular expressions (or regex) to check if the fruit name contains the letter 'a'.
    if ($fruit =~ /a/) {
        # If it does, we print out the fruit name and its corresponding color.
        print "$fruit is $fruits{$fruit}\n";
    }
}

# Then, we create an array variable to store a list of numbers.
my @numbers = (15, 23, 7, 11, 42);

# We use the shuffle function from the List::Util module to shuffle the numbers.
@numbers = List::Util::shuffle(@numbers);

# We print out the shuffled array.
print "Shuffled numbers: @numbers\n";

# Next, we use the map function to transform the numbers in the array.
@numbers = map { $_ * 2 } @numbers;

# We print out the transformed array.
print "Multiplied numbers: @numbers\n";

# Finally, we use the sort function to sort the array in descending order.
@numbers = sort { $b <=> $a } @numbers;

# We print out the sorted array.
print "Sorted numbers: @numbers\n";
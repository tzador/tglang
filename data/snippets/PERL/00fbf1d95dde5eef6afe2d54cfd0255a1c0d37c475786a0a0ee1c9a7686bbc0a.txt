use strict; # enables strict syntax checking
use warnings; # enables warning messages

# create an array with different types of elements
my @array = (1, "hello", 3.14, "world", "!", "PERL");

# create a hash with key-value pairs
my %hash = ("name" => "John",
            "age" => 30,
            "occupation" => "programmer");

# iterate through each element in the array and print it
foreach my $element (@array) {
    print "$element\n";
}

# iterate through each key-value pair in the hash and print it
while (my ($key, $value) = each %hash) {
    print "$key: $value\n";
}

# variable interpolation in string
my $language = "PERL";
print "I love $language!\n"; # output: I love PERL!

# subroutines in PERL
sub add {
    my ($num1, $num2) = @_; # declare input parameters
    my $total = $num1 + $num2; # perform addition
    return $total; # return the result
}

my $sum = add(5, 4); # call the subroutine with input parameters
print "$sum\n"; # output: 9

# regular expression matching
my $str = "I love PERL!";
if ($str =~ /PERL/) { # check if PERL is present in the string
    print "PERL found!\n";
} else {
    print "PERL not found.\n";
}

# file handling
open(my $file, "<", "data.txt") or die "Cannot open file: $!"; # open a file for reading
while (my $line = <$file>) { # read each line in the file
    chomp $line; # remove newline character
    if ($line =~ /hello/) { # check if line contains "hello"
        print "$line\n"; # print the line if it does
    }
}
close($file); # close the file
#!\usr\bin\perl

#This is a comment in PERL
#This code snippet creates a hash named %numbers
my %numbers = (
    "one" => 1,
    "two" => 2,
    "three" => 3,
    "four" => 4
);

#This code snippet creates a subroutine named "sum" that takes in two arguments and returns their sum
sub sum {
    my ($num1, $num2) = @_; #Assign the arguments to variables
    return $num1 + $num2; #Return the sum
}

#This code snippet uses a for loop to iterate through the keys in the %numbers hash and prints their values
for my $key (keys %numbers) {
    print "$key => $numbers{$key}\n";
}

#This code snippet calls the sum subroutine with the numbers 2 and 3 and prints the result
my $result = sum(2, 3);
print "The sum of 2 and 3 is $result\n";

#This code snippet creates an array named @more_numbers containing the values 5,6,7,8
my @more_numbers = (5, 6, 7, 8);

#This code snippet uses a foreach loop to iterate through the @more_numbers array and prints each value
foreach my $number (@more_numbers) {
    print "$number\n";
}

#This code snippet uses a regular expression to check if a string contains the word "apple"
my $string = "I love apples!";
if ($string =~ /apple/) {
    print "The string contains the word 'apple'";
} else {
    print "The string does not contain the word 'apple'";
}

#This code snippet demonstrates how to open a file and read its contents
open(my $file, "<", "example.txt") or die "Cannot open file: $!";
while (<$file>) {
    chomp; #Removes the newline character at the end of each line
    print "Line read from file: $_\n";
}
close($file); #Close the file

#This code snippet demonstrates how to use the "strict" and "warnings" pragmas
use strict;
use warnings;

#This code snippet uses the "map" function to transform each value in an array and prints the result
my @fruits = ("apple", "banana", "cherry");
my @capitals = map(ucfirst, @fruits); #Transforms each value to its capitalised form
print "@capitals\n"; #Prints the transformed array

#This code snippet uses the ternary operator to check if a number is even or odd and prints the result
my $number = 5;
my $result = ($number % 2 == 0) ? "even" : "odd";
print "$number is $result\n";
# This is a comment line
use strict;
use warnings;
my $num = 5; # initialize a variable to an integer value
my $str = "Hello, world!"; #initialize a variable to a string value
print $num + 10; #prints the result of the sum of the number and 10
print "\n"; #prints a new line
print length($str); #prints the length of the string variable
if ($num == 5){ #if statement with condition of num equal to 5
    print "Num is equal to 5";
} else { #else statement
    print "Num is not equal to 5";
}
for (my $i = 0; $i < 10; $i++){ #for loop to print numbers from 0 to 9
    print $i . "\n"; #prints the current index and a new line
}
my %hash = ( #initializing a hash with key-value pairs
    name => "John",
    age => 25,
    occupation => "Engineer"
);
print $hash{"age"}; #prints the value of the "age" key in the hash
while ($num < 10) { #while loop with condition of num being less than 10
    $num++; #increments the value of num by 1
    print "$num\n"; #prints the current value of num and a new line
}
sub sum { #creating a subroutine called sum
    my ($num1, $num2) = @_; #assigns parameters to an array
    return $num1 + $num2; #returns the sum of the two parameters
}
print sum(3, 7); #prints the result of calling the sum subroutine with the arguments 3 and 7
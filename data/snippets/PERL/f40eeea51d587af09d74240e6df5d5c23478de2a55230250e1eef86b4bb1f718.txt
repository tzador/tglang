#!/usr/bin/perl

use strict;
use warnings;

# This is a pre-defined array with 10 elements
my @numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

# This subroutine sorts the array using the Bubble Sort algorithm
sub bubble_sort {

    # Set the flag to true, indicating that we have not yet completed a pass
    my $swapped = 1;

    # Keep performing passes until the array is sorted
    while ($swapped) {

        # Set the flag to false, indicating that we have completed a pass without swapping any elements
        $swapped = 0;

        # Perform a pass on the array
        for (my $i = 0; $i < @numbers - 1; $i++) {

            # If the current element is larger than the next element, swap them
            if ($numbers[$i] > $numbers[$i + 1]) {

                # Swap the elements
                my $temp = $numbers[$i];
                $numbers[$i] = $numbers[$i + 1];
                $numbers[$i + 1] = $temp;

                # Set the flag to true, indicating that we have completed a pass with swapping at least one element
                $swapped = 1;
            }
        }
    }

}

# Call the bubble_sort subroutine
bubble_sort();

# Print the sorted array
print "Sorted Array: @numbers";
use strict; # enable strict mode for better coding practices
use warnings; # enable warning messages for potential errors

# set up a hash (associative array) with sample data
my %fruits = (
    apple => 1,
    banana => 2,
    orange => 3,
    pineapple => 4,
    mango => 5
);

# loop through the hash and print key-value pairs in a specific format
for my $fruit (keys %fruits) {
   print "$fruit has a value of $fruits{$fruit}\n";
}

# define a subroutine to calculate and return the square of a number
sub square {
    my $num = $_[0]; # get the first argument passed into the subroutine
    return $num ** 2; # calculate and return the square of the number
}

# call the subroutine and print the result
my $result = square(5);
print "The square of 5 is $result\n";

# define a class with a constructor and a method
package Person; # set the package for the class
sub new {
    my $class = shift; # get the first argument passed into the constructor
    my $self = {
        name => shift, # get the next argument as the value for 'name' key
        age => shift # get the next argument as the value for 'age' key
    };
    bless $self, $class; # bless the object into the class
    return $self; # return the object
}

# method that prints the age and name of the person object
sub print_details {
    my ($self) = @_; # get the object passed into the method
    print "Name: $self->{name}, Age: $self->{age}\n"; # print the values of the object's properties
}

# create an instance of the Person class
my $person = Person->new("John", 25);

# call the method of the instance to print the details
$person->print_details();
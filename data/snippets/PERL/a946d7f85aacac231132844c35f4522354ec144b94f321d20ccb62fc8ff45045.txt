#!/usr/bin/perl

# This is a comment

use strict; # Use strict ensures more robust coding practices
use warnings; # Use warnings helps catch potential errors

my $number = 10; # Declaring a variable with the value 10
my @array = (1, 2, 3, 4); # Declaring an array with values 1, 2, 3, and 4
my %hash = ('key1' => 'value1', 'key2' => 'value2'); # Declaring a hash with key-value pairs

# A loop that iterates through the values in the array
foreach my $element (@array) {
    print "Current value of array: $element\n"; # Printing the current array element
}

# A conditional statement that checks if the value of $number is greater than 5
if ($number > 5) {
    print "The number is greater than 5\n";
} else {
    print "The number is not greater than 5\n";
}

# A subroutine that prints the keys and values in the hash
sub print_hash {
    my %hash = @_;
    while (my ($key, $value) = each %hash) {
        print "Key: $key, Value: $value\n";
    }
}

# Calling the subroutine with the declared hash
print_hash(%hash);

# A regular expression that matches the string "hello" followed by any number of digits
if ("hello123" =~ /hello\d+/) {
    print "The string matches the regular expression!\n";
}

# A variable containing a string with escaped characters
my $string = "This string \n has \t escaped \n characters";

# Printing the string with the escaped characters
print "$string\n";
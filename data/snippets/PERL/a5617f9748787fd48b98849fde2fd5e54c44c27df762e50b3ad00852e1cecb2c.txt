# This is a code snippet in PERL that creates a complex nested data structure

# Define an array of fruits
my @fruits = ('apple', 'orange', 'banana');

# Define a hash of vegetables
my %vegetables = ('carrots' => 'orange', 'broccoli' => 'green', 'tomato' => 'red');

# Create a hash of animals with nested arrays and hashes inside
my %animals = (
  'mammals' => ['monkey', 'cat', 'dog'],
  'birds' => ['eagle', 'owl', 'sparrow'],
  'reptiles' => ['snake', 'lizard', 'turtle'],
  'sea creatures' => {
    'fish' => ['salmon', 'tuna', 'shark'],
    'invertebrates' => ['crab', 'octopus', 'jellyfish'],
  },
);

# Print all the data structures using foreach loops
foreach my $fruit (@fruits) {
  print "I love eating $fruit!\n";
}

foreach my $veggie (keys %vegetables) {
  print "The color of $veggie is $vegetables{$veggie}.\n";
}

foreach my $category (keys %animals) {  
  print "The category $category includes:\n";
  
  foreach my $animal (@{$animals{$category}}) {
    print "  $animal\n";
  }

  # If the category is 'sea creatures', also print the nested data
  if ($category eq 'sea creatures') {
    foreach my $type (keys %{$animals{$category}}) {
      print "  The $type in this category are:\n";
      
      foreach my $creature (@{$animals{$category}{$type}}) {
        print "    $creature\n";
      }
    }
  }
}

# Output:
#!/usr/bin/perl
use strict;
use warnings;

# This is a perl script that converts a CSV file to JSON format

# Import module for reading and writing CSV files
use Text::CSV;

# Import module for working with JSON
use JSON;

# Open and read the CSV file
my $file = <>;
open(my $fh, "<", $file) or die "Could not open file: $!";

# Specify output file name
my $output_file = "output.json";

# Create an array to store the header row from CSV
my @headers;

# Create an array to store the data rows from CSV
my @data;

# Create a CSV object using Text::CSV
my $csv = Text::CSV->new();

# Set the column names for the CSV file
$csv->column_names(@headers);

# Loop through each row in the CSV file
while (my $row = $csv->getline($fh)) {
    
    # Convert each row to a hash
    my %row_hash = map {$headers[$_] => $row->[$_]} (0..$#headers);
    
    # Push the hash to the data array
    push(@data, \%row_hash);
}

# Close the CSV file
close($fh);

# Convert the data array to JSON
my $json = JSON->new->allow_nonref;
my $encoded_data = $json->pretty->encode( \@data );

# Open the output file and write the JSON data
open(my $output_fh, ">", $output_file) or die "Could not open file for writing: $!";
print $output_fh $encoded_data;
close($output_fh);

# Print success message
print "CSV file successfully converted to JSON format. Output file: $output_file\n";
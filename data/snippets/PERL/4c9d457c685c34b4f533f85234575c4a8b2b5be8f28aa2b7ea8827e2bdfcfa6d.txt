#this is a comment in PERL
use strict;
use Warnings;
#declaring a subroutine with parameters
sub average {
    my ($a, $b) = @_;
    #calculating the average of the parameters
    my $avg = ($a + $b) / 2;
    #returning the average
    return $avg;
}

#declaring and initializing a hash
my %hash = (
    "key1" => "value1",
    "key2" => "value2",
    "key3" => "value3"
);

#declaring and initializing an array
my @array = qw(cat dog rabbit hamster);

#looping through the hash and printing out key and value pairs
foreach my $key (keys %hash) {
    print "$key => $hash{$key}\n";
}

#printing out the array using a for loop and range operator
for my $i (0 .. $#array) {
    print "$array[$i]\n";
}

#declaring a variable with multiple values using list assignment
my ($x, $y, $z) = (1, 2, 3);

#using the ternary operator to assign a value based on a condition
my $result = $x > $y ? "x is greater than y" : "x is not greater than y";

#printing out the result
print "The result is: $result\n";

#calling the average subroutine with parameters
my $average = average(5, 10);
print "The average of 5 and 10 is: $average\n";

#declaring and assigning a variable with an anonymous subroutine
my $print_message = sub {
    my $message = shift;
    print "$message\n";
};

#calling the anonymous subroutine with a message
$print_message->("This is an anonymous subroutine");

#declaring a variable with a reference to a subroutine
my $calculate_sum = \&sum;

#calling the subroutine via the reference and assigning the result to a variable
my $sum = &$calculate_sum(5, 10);

#printing out the sum
print "The sum of 5 and 10 is: $sum\n";

#subroutine to calculate the sum of two numbers
sub sum {
    my ($a, $b) = @_;
    return $a + $b;
}
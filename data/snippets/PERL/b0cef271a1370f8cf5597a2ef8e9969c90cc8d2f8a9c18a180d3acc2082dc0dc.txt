#!/usr/bin/perl
use strict;
use warnings;

# Define a subroutine named fibonacci that takes in a single integer argument
sub fibonacci {
    my ($n) = @_;

    # Create a base case for the 0th and 1st terms of the fibonacci sequence
    if ($n == 0) { return 0; }
    elsif ($n == 1) { return 1; }

    # Initialize an array to store the sequence
    my @sequence = (0,1);

    # Find the n-th term in the sequence
    # Uses recursion to find the previous two terms and adds them together
    for (my $i = 2; $i <= $n; $i++) {
        $sequence[$i] = $sequence[$i-1] + $sequence[$i-2];
    }

    # Return the n-th term of the fibonacci sequence
    return $sequence[$n];
}

# Call the fibonacci subroutine with an argument of 10
my $n = 10;
my $result = fibonacci($n);

# Print the result
print "The 10th term of the fibonacci sequence is: $result";
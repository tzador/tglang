#!/usr/bin/perl

# Assigns the value of 5 to the variable $num1
$num1 = 5;

# Prints the value of $num1
print "The value of num1 is: $num1\n";

# Assigns the value of 10 to the variable $num2
$num2 = 10;

# Prints the value of $num2
print "The value of num2 is: $num2\n";

# Calculates the sum of $num1 and $num2 and assigns it to the variable $sum
$sum = $num1 + $num2;

# Prints the sum of $num1 and $num2
print "The sum of num1 and num2 is: $sum\n";

# Checks if $num1 is less than $num2 and prints the result
if ($num1 < $num2) {
    print "num1 is less than num2\n";
} else {
    print "num1 is not less than num2\n";
}

# Creates an array containing the values 1, 2, and 3
@array = (1, 2, 3);

# Prints the length of the array
print "The length of the array is: " . scalar @array . "\n";

# Loops through each element in the array and prints its value
foreach $element (@array) {
    print "$element\n";
}

# Subroutine that calculates the factorial of a given number
sub factorial {
    my $num = shift; # Gets the value passed as an argument
    my $factorial = 1; # Initializes the factorial to 1

    # Loops through each number from 1 to $num and multiplies it to the factorial
    for my $i (1..$num) {
        $factorial *= $i;
    }

    # Returns the factorial value
    return $factorial;
}

# Calls the factorial subroutine and prints the factorial of 5
print "The factorial of 5 is: " . factorial(5) . "\n";

# Hash with key-value pairs of names and ages
%ages = (
    "John" => 25,
    "Sarah" => 30,
    "Michael" => 20
);

# Loops through each key-value pair in the hash and prints them
while (my ($name, $age) = each %ages) {
    print "$name is $age years old\n";
}

# Regular expression that matches a pattern of lowercase letters followed by a number
if ("hello123" =~ /[a-z]+\d+/) {
    print "'hello123' matches the pattern\n";
} else {
    print "'hello123' does not match the pattern\n";
}

# Creating a file handle to read from a file
open(my $file, "<", "input.txt") or die "Cannot open file: $!";

# Loops through each line in the file and prints it
foreach (<$file>) {
    print "$_";
}

# Closes the file handle
close($file);
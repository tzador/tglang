#!/usr/bin/perl
use strict;
use warnings;

# This is a code snippet that uses the PERL programming language.
# It demonstrates complex syntax and functionality.

# Define a hash variable called %variables
my %variables = ( 
    name => "John", 
    age => 25,
    occupation => "programmer"
);

# Assign a new value to the occupation key
$variables{"occupation"} = "software engineer";

# Create a subroutine called greeting that accepts an argument
sub greeting {
    my $name = shift; # shift function retrieves the first element of an array
    print "Hello, $name!\n";
}

# Call the greeting subroutine and pass the name variable as an argument
greeting($variables{"name"});

# Define a control flow using the if statement
if ($variables{"age"} >= 18) {
    print "You are legally an adult.\n";
} else {
    print "You are still a minor.\n";
}

# Create a for loop to iterate through the occupation key until the end of the hash
for my $key (keys %variables) {
    if ($key eq "occupation") { # eq operator checks if two strings are equal
        print "Your occupation is $variables{$key}.\n";
    }
}

# Define and initialize an array variable with numbers
my @numbers = (1, 2, 3, 4, 5); 

# Create a foreach loop to print each element in the array
foreach my $num (@numbers) {
    print "$num\n";
}

# Use the map function to manipulate the numbers array and store the results in a new array called @multiplied
my @multiplied = map { $_ * 2 } @numbers;

# Print the elements of the multiplied array
print "@multiplied\n";
# This program generates a random DNA sequence and then analyzes the sequence
use strict;
use warnings;

# Define the sequence length
my $seq_length = 50;

# Create an empty sequence
my $seq = "";

# Generate a random DNA sequence
for (my $i = 0; $i < $seq_length; $i++){
    # Choose a random nucleotide (A, T, C, or G)
    my @nucleotides = ('A', 'T', 'C', 'G');
    my $rand_index = int(rand(4));
    my $nucleotide = $nucleotides[$rand_index];
    
    # Add the chosen nucleotide to the sequence
    $seq .= $nucleotide;
}

# Print the generated sequence
print "Generated DNA sequence: $seq\n";

# Analyze the sequence
# Count the number of each nucleotide
my $num_A = 0;
my $num_T = 0;
my $num_C = 0;
my $num_G = 0;

foreach my $base (split //, $seq){
    if ($base eq 'A'){
        $num_A++;
    } elsif ($base eq 'T'){
        $num_T++;
    } elsif ($base eq 'C'){
        $num_C++;
    } elsif ($base eq 'G'){
        $num_G++;
    }
}

# Print the nucleotide counts
print "Number of A's: $num_A\n";
print "Number of T's: $num_T\n";
print "Number of C's: $num_C\n";
print "Number of G's: $num_G\n";

# Calculate the GC percentage
my $gc_percentage = (($num_C + $num_G)/$seq_length)*100;

# Print the GC percentage
print "Percentage of GC: $gc_percentage%\n";

# Check if the sequence contains a specific sequence motif
my $motif = "AGCT";
if ($seq =~ /$motif/){
    print "$motif is present in the sequence\n";
} else {
    print "$motif is not present in the sequence\n";
}

# Reverse complement the sequence
my $rev_seq = reverse($seq);
$rev_seq =~ tr/ATCG/TAGC/;

# Print the reverse complement sequence
print "Reverse complement sequence: $rev_seq\n";
#!/usr/bin/perl -w
# This is a comment in PERL
use strict; # use strict mode for lexical scopes

# Define a function called "sum" that takes two arguments
sub sum {
	my ($num1, $num2) = @_; # create an array with the two arguments
	return $num1 + $num2; # return the sum of the two numbers
}

# Define a hash called "fruits" with key-value pairs
my %fruits = (
	"apple" => "red",
	"banana" => "yellow",
	"orange" => "orange"
);

# Loop through each key-value pair in the "fruits" hash
foreach my $fruit (keys %fruits) {
	print "The color of $fruit is $fruits{$fruit}\n"; # print the key and value
}

# Declare and print a string with interpolation
my $name = "John Doe";
print "Hello, $name, welcome to the world of PERL!\n";

# Use regex to find all words starting with "c" and ending with "at" in a string
my $sentence = "I love cats and computers.";
my @matches = ($sentence =~ m/c\w+at/g);
print join(", ", @matches);

# Declare an array containing numbers
my @numbers = (1, 2, 3, 4, 5);

# Use a map function to multiply each number by 2
@numbers = map { $_ * 2 } @numbers;

# Print the array of doubled numbers
print "\n" . join(", ", @numbers);
#!/usr/bin/perl

use strict;  # enable strict mode for error checking
use warnings;  # enable warnings for potential issues

# declare variables and assign values
my $name = "John";
my $age = 28;

# print out a statement using string interpolation
print "$name is $age years old.\n";

# use conditional statements to check age and print appropriate message
if ($age < 18) {
    print "$name is a minor.\n";
}
elsif ($age >= 18 && $age < 65) {
    print "$name is an adult.\n"
}
else {
    print "$name is a senior citizen.\n";
}

# create a subroutine to print a personalized greeting
sub greeting {
    my ($name) = @_;  # assign first argument to $name variable
    print "Hello, $name! Welcome to the world of programming.\n";
}

# call the greeting subroutine with the $name variable as argument
greeting($name);

# create an array with multiple values
my @colors = ("red", "green", "blue", "yellow");

# iterate through the array using a foreach loop and print each value
foreach my $color (@colors) {
    print "$color\n";
}

# create a hash with key-value pairs
my %fruits = (
    "apple" => "red",
    "banana" => "yellow",
    "blueberry" => "blue",
    "grapefruit" => "pink"
);

# iterate through the hash using a foreach loop and print each key-value pair
foreach my $fruit (keys %fruits) {
    my $color = $fruits{$fruit};  # assign value to $color variable
    print "$fruit is $color.\n";
}

# open a file for writing and write a message to it
open FILE, ">output.txt" or die "Couldn't open file: $!";  # check for errors
print FILE "This is a message that will be written to the file.\n";
close FILE;  # close the file after writing

# open the file for reading and print its contents
open FILE, "<output.txt" or die "Couldn't open file: $!";  # check for errors
my @contents = <FILE>;  # assign file contents to array
close FILE;  # close the file after reading

# print out the contents of the file
print "Contents of output.txt:\n";
foreach my $line (@contents) {
    print "$line";
}

# create a regular expression to match a phone number
my $phone_number = "555-123-4567";  # sample phone number
if ($phone_number =~ m/(\d{3})-(\d{3})-(\d{4})/) {  # match pattern
    # assign matched values to variables
    my $area_code = $1;
    my $phone_prefix = $2;
    my $line_number = $3;
    print "Phone number is formatted correctly!\n";
    print "Area Code: $area_code\n";
    print "Phone Prefix: $phone_prefix\n";
    print "Line Number: $line_number\n";
}
else {
    print "Invalid phone number format!\n";
}
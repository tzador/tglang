use strict; #use strict pragma to enforce good coding practices

#subroutine to check if a given number is prime
sub is_prime {
    my ($num) = @_; #assign the function argument to a variable

    if ($num <= 1) { #check if the number is less than or equal to 1
        return 0; #if so, return false
    } elsif ($num == 2) { #check if the number is equal to 2
        return 1; #if so, return true
    } elsif ($num % 2 == 0) { #check if the number is even
        return 0; #if so, return false
    }

    #loop through all odd numbers from 3 up to the square root of the given number
    for (my $i = 3; $i <= sqrt($num); $i = $i + 2) {
        if ($num % $i == 0) { #check if the number is divisible by the current odd number
            return 0; #if so, return false
        }
    }

    return 1; #if the number is not divisible by any of the previous numbers, it is prime
}

my @primes; #declare an empty array

#loop through numbers from 1 to 100
for (my $i = 1; $i <= 100; $i++) {
    if (is_prime($i)) { #check if the number is prime by calling the is_prime subroutine
        push(@primes, $i); #if so, add it to the primes array using push function
    }
}

print "@primes\n"; #print out the list of prime numbers separated by spaces using the print function
# example of a Perl program that sorts and prints a list of numbers

# define a list of numbers
my @numbers = (5, 2, 8, 3, 9, 1, 7, 4, 6);

# define a subroutine that implements bubble sort algorithm
sub bubble_sort {
    my $array = shift; # take in a reference to an array
    my $unsorted = 1; # boolean to keep track of if list is sorted or not
    my $pass = 1; # keeps track of how many passes through the loop have been made
    while ($unsorted) {
        $unsorted = 0; # reset to 0 at the beginning of each loop
        for (my $i = 0; $i < scalar(@{$array}) - 1; $i++) {
            if ($array->[$i] > $array->[$i + 1]) { # swap if current element is greater than next element
                ($array->[$i], $array->[$i + 1]) = ($array->[$i + 1], $array->[$i]);
                $unsorted = 1; # set to 1 if a swap was made
            }
        }
        $pass++; # increment pass count
    }
}

# call subroutine to sort the list of numbers
bubble_sort(\@numbers);

# print the sorted list
print join(" ", @numbers);

# Output: 1 2 3 4 5 6 7 8 9
# The following code snippet creates a Fibonacci sequence using recursion in Perl
sub fibonacci {
    my ($n) = @_;
    if ($n == 0) {
        return 0;
    }
    if ($n == 1) {
        return 1;
    }
    else {
        return fibonacci($n-1) + fibonacci($n-2);
    }
}
# The subroutine above takes in a single parameter $n, which represents the number in the sequence
# We check if $n is equal to 0 or 1, which are the base cases of the sequence, and return either 0 or 1 respectively
# If $n is not 0 or 1, we recursively call the subroutine, passing in $n-1 and $n-2, and add the result of those calls
# This results in the previous two numbers in the sequence being added, creating the next number in the sequence
# To use this subroutine, we can call it and specify which number in the sequence we want to get
# For example, to get the 7th number in the sequence, we would call fibonacci(7)
# The result would be 13, since the 7th number in the sequence is the sum of the 6th and 5th numbers (8 + 5 = 13)
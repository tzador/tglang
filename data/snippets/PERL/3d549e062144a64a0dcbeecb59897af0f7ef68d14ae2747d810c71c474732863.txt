#!/usr/bin/perl
use strict;
use warnings;

# This is a Perl code snippet that implements a binary search algorithm.

sub binary_search {
    my ($array_ref, $target) = @_; # variable that contains the array reference and target value
    my $low = 0;
    my $high = $#{$array_ref}; # using $# to get the highest index of the array
    my $mid;

    while ($low <= $high) {
        $mid = int(($low + $high) / 2); # finding the middle index of the array
        if ($array_ref->[$mid] == $target) { # checking if target is found at middle index
            return $mid; # return the index where target is found
        } elsif ($array_ref->[$mid] < $target) {
            $low = $mid + 1; # if target is larger than middle value, set new low index
        } else {
            $high = $mid - 1; # if target is smaller than middle value, set new high index
        }
    }
    return -1; # if target is not found in the array, return -1
}

# Using the binary_search function to search for element 7 in the array [1, 3, 5, 7, 9, 11]
my $array_ref = [1, 3, 5, 7, 9, 11];
my $result = binary_search($array_ref, 7);

print "Element 7 is found at index $result in the array.";


# OUTPUT:
# Element 7 is found at index 3 in the array.
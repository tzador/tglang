# This is a program that prints out a multiplication table
# Declaring variables for the table size and setting them to a default value of 10
my $numRows = 10;
my $numCols = 10;

#Taking user input for the size of the table
print "Enter the number of rows and columns for the multiplication table: ";
chomp(my $userInput = <STDIN>);
#Splitting the user input into separate values for rows and columns and replacing
#default values if provided
($numRows, $numCols) = split(/, /, $userInput) if $userInput;

#Initializing the table as a multidimensional array with the given number of rows and columns
my @multiTable;
for(my $i = 0; $i < $numRows; $i++){
    for(my $j = 0; $j < $numCols; $j++){
        $multiTable[$i][$j] = ($i+1) * ($j+1); #Filling in the values of the table
    }
}

#Printing the top row of numbers for columns
print "    "; #Four spaces for formatting
for(my $i = 1; $i <= $numCols; $i++){
    print "$i    "; #Four spaces between each number for formatting
}
print "\n"; #Newline for formatting

#Printing the table row by row with numbers for rows on the left
for(my $i = 0; $i < $numRows; $i++){
    print "$i | "; #Pipe symbol for formatting
    for(my $j = 0; $j < $numCols; $j++){
        printf("%-3s", $multiTable[$i][$j]); #Formatting each cell to have a width of 3 for alignment
        print " | "; #Pipe symbol for formatting
    }
    print "\n"; #Newline for formatting
}
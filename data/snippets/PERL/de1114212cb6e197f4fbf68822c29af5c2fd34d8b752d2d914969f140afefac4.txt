#!/usr/bin/perl
# This is a comment
use strict;
use warnings;

# Define a function that takes in two numbers and returns the sum
sub sum {
    my ($num1, $num2) = @_; # Assign input parameters to variables
    return $num1 + $num2; # Return the sum of the two numbers
}

# Define a function that checks if a number is prime
sub is_prime {
    my $num = shift; # Assign input parameter to variable
    if ($num <= 1) { # Check if number is less than or equal to 1
        return 0; # If so, return false
    }
    for (my $i = 2; $i <= sqrt($num); $i++) { # Loop through possible factors
        if ($num % $i == 0) { # Check if number is divisible by current factor
            return 0; # If so, return false
        }
    }
    return 1; # If no factors found, return true
}

# Define a function that generates a random string of given length
sub random_string {
    my $length = shift; # Assign input parameter to variable
    my $string = ""; # Initialize empty string
    my @characters = ('A'..'Z', 'a'..'z', 0..9); # Define possible characters
    for (my $i = 0; $i < $length; $i++) { # Loop through desired length
        my $index = int(rand(scalar(@characters))); # Generate random index
        $string .= $characters[$index]; # Append random character to string
    }
    return $string; # Return generated string
}

# Define an array of numbers
my @numbers = (1, 3, 6, 8, 10, 4, 2);

# Use 'map' function to apply 'is_prime' function to each number in the array
my @prime_numbers = map { is_prime($_) } @numbers;

# Print the sum of all prime numbers generated by 'map' function
my $sum_of_prime_numbers = sum(@prime_numbers);
print "$sum_of_prime_numbers\n"; # Output: 23

# Generate a random string of length 10 and print it
my $random_string = random_string(10);
print "$random_string\n"; # Output: G1dFqM8gGd
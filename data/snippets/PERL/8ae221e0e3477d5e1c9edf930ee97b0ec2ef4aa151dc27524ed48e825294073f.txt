# This is a code snippet in PERL
# It uses the List::Util module for list manipulation

# Import the List::Util module
use List::Util;

# Create an array with 10 random numbers between 1-100
my @numbers = map {int(rand(100))+1} (1..10);

# Print the original array
print "Original array: @numbers\n";

# Use the sum function from List::Util to find the sum of the numbers in the array
my $sum = List::Util::sum(@numbers);

# Print the sum
print "Sum of array: $sum\n";

# Use the reverse function from List::Util to reverse the array
my @reversed = List::Util::reverse(@numbers);

# Print the reversed array
print "Reversed array: @reversed\n";

# Use the shuffle function from List::Util to shuffle the array
my @shuffled = List::Util::shuffle(@numbers);

# Print the shuffled array
print "Shuffled array: @shuffled\n";

# Use the first function from List::Util to find the first element in the array
my $first = List::Util::first {$_ % 2 == 0} @numbers;

# Print the first element
print "First even number in array: $first\n";

# Use the reduce function from List::Util to find the product of the numbers in the array
my $product = List::Util::reduce {$a * $b} @numbers;

# Print the product
print "Product of array: $product\n";
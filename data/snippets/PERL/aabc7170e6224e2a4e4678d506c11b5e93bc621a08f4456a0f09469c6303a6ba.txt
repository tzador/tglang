use strict; # Use strict mode for better error handling
use warnings; # Enable all warnings for potential code problems

my $num = 10; # Declare and initialize a variable
my @list = (1, 2, 3, 4, 5); # Declare and initialize an array

# Create a for loop to iterate through the array
for(my $i = 0; $i < @list; $i++){
    $num += $list[$i]; # Add current element of array to $num
}

if ($num % 2 == 0){ # Check if $num is even
    print "The sum of the array elements is an even number\n"; # Print message if even
}
else{
    print "The sum of the array elements is an odd number\n"; # Print message if odd
}

# Create a subroutine to double $num and print its value
sub double_num {
    my $doubled = $_[0] * 2; # Get first argument passed to the subroutine and double it
    print "The doubled value is $doubled\n"; # Print message with doubled value
}

double_num($num); # Call subroutine with $num as argument

# Create a hash containing key-value pairs representing fruits and their colors
my %fruits = (
    "apple" => "red",
    "banana" => "yellow",
    "orange" => "orange",
    "grape" => "purple",
);

# Loop through the hash and print each key-value pair
while(my ($fruit, $color) = each %fruits){
    print "$fruit is $color\n";
}
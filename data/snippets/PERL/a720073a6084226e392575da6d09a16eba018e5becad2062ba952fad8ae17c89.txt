use strict; 
    use warnings; 
    my @words = ('Hello', 'world', '!'); 
    my $sentence = join(' ', @words); 
    print "$sentence\n"; 

    =pod
    This is a block comment in PERL. 
    It serves as documentation for the code. 

    Another way to create a sentence using array and loop 
    my $sentence2 = ""; 
    for my $word (@words) { $sentence2 .= $word . " "; } 
    print "$sentence2\n"; 

    =cut 

    sub factorial { 
        # Functional recursion with "tail call optimization" 
        # argument will disappear from the call stack. 
        my ($n, $a) = @_; 
        tco($n, $a); 
    } 

    sub tco { 
        my ($n, $a) = @_; 
        return $a if $n == 0; 
        return tco($n-1, $a * $n); 
    } 

    print factorial(10); # Output: 3628800
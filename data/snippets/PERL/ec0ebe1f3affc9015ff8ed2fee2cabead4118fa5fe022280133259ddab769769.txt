#!/usr/bin/perl

# This is a comment in Perl

use strict; # forces strict variable declarations
use warnings; # displays warnings for potential errors

# Define a hash variable with key-value pairs
my %programming_languages = (
    "Python" => "interpreted",
    "Java" => "compiled",
    "C" => "compiled",
    "Perl" => "interpreted"
);

# Loop through the hash and print out the keys and values
foreach my $language (keys %programming_languages) {
	print "$language is an $programming_languages{$language} language.\n";
}

# Define a subroutine to check if a number is prime or not
sub check_prime {
    my $num = $_[0];
    
    # Check if the number is 1 or 0
    if ($num == 1 || $num == 0) {
        print "$num is not a prime number.\n";
    }
    
    # Check if the number is greater than 2
    elsif ($num > 2) {
        # Loop through all the numbers from 2 to half of the given number
        for (my $i = 2; $i <= $num/2; $i++) {
            # If any number divides the given number with 0 remainder, it is not prime
            if ($num % $i == 0) {
                print "$num is not a prime number.\n";
                # Exit the loop
                last;
            }
        }
        # If the loop completes without finding any divisors, the number is prime
        if ($num % $i != 0) {
            print "$num is a prime number.\n";
        }
    }
    
    # If the number is 2, it is a prime number
    else {
        print "$num is a prime number.\n";
    }
}

# Call the subroutine and pass in a number
check_prime(17);
#!/usr/bin/perl
use strict;
use warnings;

my @numbers = (1, 2, 3, 4, 5); # create an array containing numbers 1 to 5

# loop through the array and print the numbers
foreach my $number (@numbers) { 
    print "$number\n"; # use print function to print each number on a new line
}

print "Even numbers:\n"; # print a label to indicate next set of numbers

# loop through the array again and print only the even numbers
foreach my $number (@numbers) {
    if ($number % 2 == 0) { # use modulus operator to check if number is divisible by 2
        print "$number\n"; # use print function to print each even number on a new line
    }
}

print "Odd numbers:\n"; # print a label to indicate next set of numbers

# loop through the array again and print only the odd numbers
foreach my $number (@numbers) {
    if ($number % 2 != 0) { # use modulus operator to check if number is not divisible by 2
        print "$number\n"; # use print function to print each odd number on a new line
    }
}

# create a hash with key-value pairs
my %fruits = (apple => "red", banana => "yellow", orange => "orange");

print "Fruit colors:\n"; # print a label to indicate next set of data

# loop through the hash and print the key-value pairs
foreach my $key (keys %fruits) {
    my $value = $fruits{$key}; # assign value to variable
    print "$key is $value in color\n"; # use print function to print key and value in a sentence
}

# create a subroutine to check if a number is prime
sub is_prime {
    my $num = shift; # assign function argument to variable
    for (my $i = 2; $i <= sqrt($num); $i++) { # use for loop to check divisibility up to square root of number
        if ($num % $i == 0) { # if number is divisible by any number other than itself and 1, it is not prime
            return 0; # return false
        }
    }
    return 1; # if number is not divisible by any number other than itself and 1, it is prime
}

# call the subroutine and print the result
my $num_to_check = 7; # assign number to check for primality
my $prime_result = is_prime($num_to_check); # call the subroutine and assign return value to variable
if ($prime_result) { # if return value is true, print that number is prime
    print "$num_to_check is a prime number\n";
}
else { # if return value is false, print that number is not prime
    print "$num_to_check is not a prime number\n";
}

exit(0); # exit the program
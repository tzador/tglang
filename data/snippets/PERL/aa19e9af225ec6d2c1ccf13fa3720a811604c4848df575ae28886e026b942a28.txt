# This is a program written in PERL that simulates a game of Blackjack.

use strict;
use warnings;

# Create two arrays for player and dealer cards
my @player_cards;
my @dealer_cards;

# Create a deck of cards
my @deck = qw(2 3 4 5 6 7 8 9 10 J Q K A);

# Create a hash for card values
my %card_values = (
    2 => 2,
    3 => 3,
    4 => 4,
    5 => 5,
    6 => 6,
    7 => 7,
    8 => 8,
    9 => 9,
    10 => 10,
    J => 10,
    Q => 10,
    K => 10,
    A => 11
);

# Create a subroutine to deal cards to the player and dealer
sub deal_cards {
    # Get a random card index from the deck
    my $card_index = int(rand(scalar(@deck)));

    # Deal the card to the player
    push @player_cards, $deck[$card_index];

    # Remove the card from the deck
    splice @deck, $card_index, 1;

    # Get another random card index and deal it to the dealer
    $card_index = int(rand(scalar(@deck)));
    push @dealer_cards, $deck[$card_index];
    splice @deck, $card_index, 1;
}

# Create a subroutine to calculate the total value of a hand
sub calculate_total {
    my $total = 0;
    foreach my $card (@_) {
        # Add the value of the card to the total
        $total += $card_values{$card};
    }
    # Check if the hand contains an Ace
    if ($total > 21 && grep { $_ eq 'A' } @_) {
        # Substitute the value of Ace to 1
        $total -= 10;
    }
    return $total;
}

# Deal the initial cards to the player and dealer
deal_cards();
deal_cards();

# Calculate the totals of the player and dealer hands
my $player_total = calculate_total(@player_cards);
my $dealer_total = calculate_total(@dealer_cards);

# Player's turn
while ($player_total < 21) {
    print "Your hand: @player_cards\n";
    print "Total: $player_total\n";
    print "Hit or stay? (h/s) ";
    my $choice = lc(<STDIN>);

    # Deal another card if the player chooses to hit
    if ($choice eq 'h') {
        deal_cards();

        # Calculate new total
        $player_total = calculate_total(@player_cards);
    }
    # Stay if the player chooses to stay
    elsif ($choice eq 's') {
        last;
    }
    # Prompt for valid input if the player's choice is invalid
    else {
        print "Invalid choice. Please enter h or s.\n";
    }
}

# Dealer's turn
while ($dealer_total < 17) {
    # Deal another card to dealer
    deal_cards();

    # Calculate new total
    $dealer_total = calculate_total(@dealer_cards);
}

# Determine the winner
print "\nDealer's hand: @dealer_cards\n";
print "Total: $dealer_total\n";
print "Your hand: @player_cards\n";
print "Total: $player_total\n";

if ($dealer_total > 21) {
    print "Dealer busts. You win!\n";
}
elsif ($player_total > 21) {
    print "You bust. Dealer wins.\n";
}
elsif ($dealer_total > $player_total) {
    print "Dealer wins.\n";
}
elsif ($player_total > $dealer_total) {
    print "You win!\n";
}
else {
    print "It's a tie.\n";
}
#This code snippet will take in a list of numbers and determine if each number is prime or not
sub is_prime {
    my $num = shift(@_); #Shift one value off of @_ and assign it to $num
    my $half = $num / 2; #Divide $num by 2 and assign it to $half

    #If $num is 2 or 3, it is a prime number
    if ($num == 2 || $num == 3) { 
        return 1; #Returns a value indicating true
    }

    #If $num is not 2 or 3 and is divisible by 2, it is not a prime number
    if ($num % 2 == 0) {
        return 0; #Returns a value indicating false
    }

    #If $num is not 2 or 3 and is divisible by any number up to $half, it is not a prime number
    for (my $i = 3; $i < $half; $i += 2) { #Loop through numbers starting from 3 and incrementing by 2 each time
        if ($num % $i == 0) { 
            return 0; #Returns a value indicating false
        }
    }

    return 1; #If $num is not divisible by any numbers up to $half, it is a prime number, return value indicating true
}

#Main program

my @numbers = (2, 7, 14, 23, 29, 31); #Array of numbers to check
my @primes; #Empty array to hold prime numbers

#Loop through @numbers
for my $num (@numbers) {
    if (is_prime($num)) { #Call is_prime subroutine to check if $num is prime
        push(@primes, $num); #Add $num to @primes if it is prime
    }
}

print "Prime numbers in the list are: @primes"; #Print out the prime numbers in the list separated by a space
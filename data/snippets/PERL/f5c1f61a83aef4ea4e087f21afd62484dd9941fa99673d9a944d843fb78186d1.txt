#!/usr/bin/perl
use strict; # Enable strict mode for error-checking
use warnings; # Enable warnings for potential errors

# Define a hash containing 3 key-value pairs
my %books = (
    "title" => "Pride and Prejudice",
    "author" => "Jane Austen",
    "year" => 1813
);

print "The title of the book is ", $books{'title'}, "\n"; # Print the value associated with the 'title' key

# Define an array containing 3 elements
my @languages = ('Perl', 'Python', 'Java');

# Loop through the array and print each element
foreach my $language (@languages) {
    print "$language\n";
}

# Define a subroutine to calculate the square of a number
sub square {
    my $num = $_[0]; # Get the first argument passed to the subroutine
    my $result = $num ** 2; # Calculate the square of the number
    return $result; # Return the result
}

my $num = 5;
my $square = square($num); # Call the subroutine and pass in the value of $num
print "The square of $num is $square\n";

# Define a class called Book
package Book;

# Define a constructor method to initialize the object
sub new {
    my $class = shift; # Get the class name from arguments
    my $self = {
        _title => shift, # Get title from arguments and assign it to _title variable
        _author => shift, # Get author from arguments and assign it to _author variable
        _year => shift # Get year from arguments and assign it to _year variable
    };
    bless $self, $class; # Bless the object with the class name
    return $self; # Return the initialized object
}

# Define an accessor method to get the title of the book
sub get_title {
    my ($self) = @_; # Get the object as first argument
    return $self->{_title}; # Return the value of _title variable
}

# Define a mutator method to change the year of the book
sub set_year {
    my ($self, $new_year) = @_; # Get the object as first argument and the new year as second argument
    $self->{_year} = $new_year; # Assign the new year to the _year variable
}

# Instantiate an object of class Book
my $pride_and_prejudice = Book->new("Pride and Prejudice", "Jane Austen", 1813);

# Call the accessor and mutator methods on the object and print the updated values
print "The title of the book is ", $pride_and_prejudice->get_title(), "\n";
$pride_and_prejudice->set_year(1811);
print "The year of the book is ", $pride_and_prejudice->{_year}, "\n";

# Define a regular expression to match a valid email address
my $regex = qr/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/;

# Prompt the user to enter an email address
print "Enter your email address: ";
my $email = <>;

# Check if the email address matches the regex pattern
if ($email =~ $regex) {
    print "Valid email address\n";
}
else {
    print "Invalid email address\n";
}
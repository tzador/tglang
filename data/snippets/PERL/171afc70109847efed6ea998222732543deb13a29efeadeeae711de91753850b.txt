#!/usr/bin/perl
#This is a comment in PERL

use strict; #Use strict mode
use warnings; #Give warnings for errors

#Declare and initialize variables
my $num1 = 10;
my $num2 = 5;

#Calculate sum and print result
my $sum = $num1 + $num2;
print "The sum of $num1 and $num2 is $sum.\n";

#Calculate difference and print result
my $diff = $num1 - $num2;
print "The difference between $num1 and $num2 is $diff.\n";

#Calculate product and print result
my $product = $num1 * $num2;
print "The product of $num1 and $num2 is $product.\n";

#Calculate quotient and print result
my $quotient = $num1 / $num2;
print "The quotient of $num1 and $num2 is $quotient.\n";

#Calculate remainder and print result
my $remainder = $num1 % $num2;
print "The remainder of $num1 divided by $num2 is $remainder.\n";

#Create a string variable
my $string = "This is a string.";

#Print the length of the string
print "The length of the string is " . length($string) . ".\n";

#Print the string in uppercase
print "The string in uppercase is " . uc($string) . ".\n";

#Replace a word in the string and print the modified string
$string =~ s/is/a/;
print "The modified string is " . $string . ".\n";

#Create an array
my @fruits = ("apple", "banana", "orange");

#Print the number of elements in the array
print "The number of fruits in the array is " . scalar(@fruits) . ".\n";

#Add a new fruit to the array
push @fruits, "strawberry";

#Print the array elements
print "The fruits in the array are: " . join(", ", @fruits) . ".\n";

#Create a hash
my %ages = ("John" => 25, "Mary" => 30, "Bob" => 40);

#Print the age of Mary
print "Mary is " . $ages{"Mary"} . " years old.\n";

#Add a new key-value pair to the hash
$ages{"Sara"} = 35;

#Print the keys and values in the hash using a loop
foreach my $name (sort keys %ages) {
    my $age = $ages{$name};
    print "$name is $age years old.\n";
}

#Declare a subroutine
sub greet {
    my ($name) = @_;
    print "Hello, $name! Nice to meet you.\n";
}

#Call the subroutine
greet("Alice");

#Declare a subroutine with a default parameter
sub greet_default {
    my ($name) = @_;
    $name //= "Bob"; #Set default value if parameter is not passed
    print "Hello, $name! Nice to meet you.\n";
}

#Call the subroutine without passing a parameter
greet_default(); #Prints "Hello, Bob! Nice to meet you." as default parameter is set

#Declare a subroutine with multiple parameters
sub add {
    my ($num1, $num2) = @_;
    my $sum = $num1 + $num2;
    return $sum;
}

#Call the subroutine and print the result
my $result = add(10, 5);
print "The result of adding 10 and 5 is $result.\n";
# Set compiler and flags
CC=g++
CFLAGS=-c -Wall

# Set source directories
SRC_DIR=src
INC_DIR=inc

# Set output directory
OUT_DIR=bin

# Get source files and create object files
SRC=$(wildcard $(SRC_DIR)/*.cpp)
OBJ=$(patsubst $(SRC_DIR)/%.cpp,$(OUT_DIR)/%.o,$(SRC))

# Set library flags
LIBS=-lglfw -lGL -lGLEW -lglut

# Compile and link executable
$(OUT_DIR)/out: $(OBJ)
	$(CC) $(LIBS) $^ -o $@

# Compile individual source files
$(OUT_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CC) $(CFLAGS) -I$(INC_DIR) $< -o $@

# Automatically run make clean before make all
.SECONDARY: clean

# Specify clean task
.PHONY: clean
clean:
	rm -rf $(OUT_DIR)/*.o $(OUT_DIR)/out
# Set the compiler to clang
CC = clang

# Set the linker to ld
LD = ld

# Set the compiler flags
CFLAGS = -Wall -std=c11

# Set the linker flags
LDFLAGS = -lm -lc -dynamic-linker /lib64/ld-linux-x86-64.so.2

# Define source files
SRCS = main.c util.c

# Define object files to be compiled
OBJS = $(SRCS:.c=.o)

# Define final executable
TARGET = main

# Default target
all: compile link

# Compile the source files into object files
compile: $(SRCS)
	$(CC) -c $(CFLAGS) $^

# Link the object files together to create the final executable
link: $(OBJS)
	$(LD) -o $(TARGET) $(OBJS) $(LDFLAGS)

# Clean up the compiled object files and final executable
clean:
	rm -f $(OBJS) $(TARGET)
# This is a complex Makefile for compiling a C++ project with multiple source files and libraries

# Defines the compiler to use
CC = g++

# Defines flags for compiling
CFLAGS = -std=c++11 -Wall -g

# Defines the source files to be compiled
SRCS = main.cpp math.cpp

# Defines the object files to be created from source files
OBJS = $(SRCS:.cpp=.o)

# Defines the libraries to link with
LIBS = -lm -pthread

# Defines the name of the executable
EXE = myproject

# Default target
all: $(EXE)

# Creates the executable by linking object files and libraries
$(EXE): $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $(EXE) $(LIBS)

# Compiles each source file into an object file
%.o: %.cpp
	$(CC) $(CFLAGS) -c $< -o $@

# Cleans up the compiled files
clean:
	rm -rf $(OBJS) $(EXE)
	
# Uncomment the following lines to create a release target
# release: CFLAGS += -O3 # adds optimization flag to CFLAGS
# release: all # calls the default target

# Specifies that the "clean" target does not create a file
.PHONY: clean

# Specifies that the "release" target does not create a file
.PHONY: release
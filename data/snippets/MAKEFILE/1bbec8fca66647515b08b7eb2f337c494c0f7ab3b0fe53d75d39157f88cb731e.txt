# This is a Makefile for a complex build process

# Set compiler flags and options
CC = gcc										# The C compiler
CFLAGS = -Wall -Werror -g						# Flags for compiling with warnings and debug information
LDFLAGS = -lm									# Flags for linking with math library

# Define source and object files
SRCS = src/main.c src/func1.c src/func2.c		# List of source files
OBJS = obj/main.o obj/func1.o obj/func2.o		# List of corresponding object files

# Define targets and dependencies
.PHONY: all									# Mark 'all' target as phony
all: program									# Default target, make 'program' by default

program: $(OBJS)								# 'program' depends on all object files
	$(CC) $(OBJS) $(LDFLAGS) -o program			# Build the executable 'program'

# Rule to build object files
obj/%.o: src/%.c								# Any object file depends on corresponding source file
	$(CC) $(CFLAGS) -c $< -o $@					# Build object file from source file

# Clean target to remove all generated files
.PHONY: clean
clean:
	rm -f $(OBJS) program						# Remove all object files and the executable 'program'

# Additional targets for specific tasks
.PHONY: run
run: program									# Target to run 'program'
	./program

.PHONY: test
test: program									# Target to run tests on 'program'
	./program test_file.txt
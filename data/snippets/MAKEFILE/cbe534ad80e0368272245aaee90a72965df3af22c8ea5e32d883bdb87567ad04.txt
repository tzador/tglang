# This is a sample Makefile for a project

# The compiler to use
CC = gcc

# Compiler flags
CFLAGS = -Wall -Werror

# Paths to the header file(s)
INCLUDES = -Iinclude 

# Source files
SRCS = src/main.c src/library.c src/utility.c

# Object files generated during compilation
OBJS = obj/main.o obj/library.o obj/utility.o

# Name of the executable to be generated
EXECUTABLE = my_program

# Default target - executable
$(EXECUTABLE): $(OBJS)
	$(CC) $(OBJS) -o $@

# Rules for compiling each individual source file 
# Format: <object_file>: <corresponding_source_file>
# <tab>$(CC) $(CFLAGS) $(INCLUDES) -c -o $@ $<

obj/main.o: src/main.c
	$(CC) $(CFLAGS) $(INCLUDES) -c -o $@ $<

obj/library.o: src/library.c
	$(CC) $(CFLAGS) $(INCLUDES) -c -o $@ $<

obj/utility.o: src/utility.c
	$(CC) $(CFLAGS) $(INCLUDES) -c -o $@ $<

# Rule for cleaning up generated files
.PHONY: clean
clean:
	rm -f $(OBJS) $(EXECUTABLE)

# Default target when make is run without any arguments
.DEFAULT_GOAL := $(EXECUTABLE)
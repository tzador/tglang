# This is a Makefile for a project

# Variable definitions 
SOURCES := $(shell find src -name '*.cpp') # Defines the SOURCES variable with a shell command
OBJECTS := $(SOURCES:.cpp=.o) # Substitutes .cpp file extensions with .o in the SOURCES variable
DEPENDS := $(patsubst %.o,%.d,$(OBJECTS)) # Creates a list of dependency files from the OBJECTS variable
OUTPUT := project # Defines the name of the output executable

# Compilation flags 
CXX := g++ # Specifies the compiler used for the project
CXXFLAGS := -std=c++11 -Wall -Wextra -pedantic # Flags for the compiler, enabling c++11 standard and additional warnings
LDLIBS := -lsfml-graphics -lsfml-window -lsfml-system # Libraries needed for linking

# Default target 
.DEFAULT_GOAL := all # Sets the default target for the make command

# Targets 
.PHONY: all clean # Specifies that the targets are not associated with files and will always run 
all: $(OUTPUT) # Specifies the dependencies for the target 'all'
	@echo "Build successful!" 

$(OUTPUT): $(OBJECTS) # Specifies the dependencies for the target 'project'
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDLIBS) # Compiles the executable using the CXX compiler and flags, and links the libraries

clean: # Target for cleaning up object and dependency files
	$(RM) $(OBJECTS) $(DEPENDS) $(OUTPUT) # Removes the object and dependency files, as well as the executable

# Dependency files 
-include $(DEPENDS) # Includes the dependency files, and if they don't exist, they will be created 

# Implicit rule for compiling source files to object files 
%.o: %.cpp # Specifies that this rule applies to all .cpp files
	$(CXX) $(CXXFLAGS) -MMD -c $< # Compiles the source file into an object file, with the -MMD flag creating a dependency file

# Disable default suffix-based compilation 
.SUFFIXES: # Clears the list of default suffix rules
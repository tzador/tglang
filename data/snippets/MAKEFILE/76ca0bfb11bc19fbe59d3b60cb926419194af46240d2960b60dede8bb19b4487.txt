# This is a Makefile used to compile a C program
# Specifies the compiler to use
CC=gcc

# Specifies the compiler flags to use
CFLAGS=-c -Wall

# Specifies the output directory for the compiled files
OUTPUT_DIR=build

# Specifies the source files to compile
SOURCES=print_hello.c

# Specifies the object files to create
OBJECTS=$(SOURCES:.c=.o)

# Specifies the final executable to create
EXECUTABLE=hello_world

# Specifies the `make all` target which will compile the program
all: $(EXECUTABLE)

# Specifies the `make clean` target which will remove all generated files
clean:
	rm -rf $(OUTPUT_DIR)/*.o $(EXECUTABLE)

# Specifies the rules to compile each source file to an object file
$(OBJECTS): %.o: %.c
	$(CC) $(CFLAGS) $< -o $(OUTPUT_DIR)/$@

# Specifies the rule to link all object files into the final executable
$(EXECUTABLE): $(OBJECTS)
	$(CC) -o $(OUTPUT_DIR)/$@ $^

# Specifies the `make run` target which will compile and run the program
run: $(EXECUTABLE)
	./$(OUTPUT_DIR)/$(EXECUTABLE)
# This is a complex Makefile with multiple targets, variables, and conditional statements
# These targets will be used to compile, build, and run a C++ program
# Author: John Smith

# Define variables for compiler and flags
CXX = g++
CXXFLAGS = -std=c++11 -Wall -g

# Define source files and output executable
SRCS = main.cpp utils.cpp
OBJS = $(SRCS:.cpp=.o)
EXECUTABLE = program.out

# First target for building object files
# Uses the wildcard function to find all .cpp files in the directory
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Second target for linking object files into executable
$(EXECUTABLE): $(OBJS)
	$(CXX) $(CXXFLAGS) $(OBJS) -o $@

# Third target for compiling and running program
all: $(EXECUTABLE)
	./$(EXECUTABLE)

# Fourth target for cleaning up object files and executable
clean:
	rm -rf $(OBJS) $(EXECUTABLE)

# Fifth target for conditional statements
# Only runs the clean target if the "debug" variable is set to "true"
ifeq ($(debug),true)
	debug: clean
endif
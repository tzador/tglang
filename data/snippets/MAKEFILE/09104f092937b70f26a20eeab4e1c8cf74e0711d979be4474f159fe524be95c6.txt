# Sets the compiler variable to gcc
CC = gcc
# Sets the output variable to main
OUT = main
# Sets the compiler flags to include debugging symbols
CFLAGS = -g
# Sets the linker flags to link required libraries
LDFLAGS = -lm -lncurses
# Sets the include paths for required header files
INCLUDE = -I./include/

# Sets the source files to be compiled
SRCS = src/main.c src/utils.c src/input.c src/output.c

# Sets the object files to be generated from the source files
OBJS = $(SRCS:.c=.o)

# Default make target
all: $(OUT)

# Compiles the source files into object files
%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDE) -c $< -o $@

# Links the object files to generate the executable
$(OUT): $(OBJS)
	$(CC) $(CFLAGS) $(INCLUDE) $^ -o $@ $(LDFLAGS)

# Removes all generated object files and the executable
clean:
	rm -f $(OBJS) $(OUT)

# Target for cleaning and rebuilding the project
rebuild: clean all

# Target for running the executable
run:
	./$(OUT)

# Target for displaying a help message
help:
	@echo "Makefile for building and running a C program"
	@echo "make all - Compiles the source files into an executable"
	@echo "make clean - Removes all generated object files and the executable"
	@echo "make rebuild - Cleans and rebuilds the project"
	@echo "make run - Runs the executable"
	@echo "make help - Displays this help message"
#This is a makefile for a simple C program

#Variables for compiler and flags
CC = gcc
CFLAGS = -c -Wall

#Variables for directories
SRCDIR = src
OBJDIR = obj

#List of source files
SOURCES = $(wildcard $(SRCDIR)/*.c)

#List of object files
OBJECTS = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SOURCES))

#Name of executable
EXECUTABLE = program

#Default rule 
.PHONY: all
all: $(EXECUTABLE)

#Rule for creating executable
$(EXECUTABLE): $(OBJECTS)
	$(CC) $^ -o $@

#Rule for creating object files
$(OBJDIR)/%.o: $(SRCDIR)/%.c | $(OBJDIR)
	$(CC) $(CFLAGS) $< -o $@

#Rule for creating obj directory if it does not exist
$(OBJDIR):
	mkdir $(OBJDIR)

#Rule for cleaning up object files and executable
.PHONY: clean
clean:
	rm -rf $(OBJDIR) $(EXECUTABLE)
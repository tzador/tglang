# Makefile for a C++ project
# Specify the compiler and compiler flags
CC = g++
CFLAGS = -Wall -g

# Define the source files and object files
SRCS = main.cpp functions.cpp
OBJS = $(SRCS:.cpp=.o)

# Specify the executable name
EXEC = my_program

# Default target - build the executable
$(EXEC): $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $(EXEC)

# Include dependencies for each source file
-include $(SRCS:.cpp=.d)

# Generate the dependency files for each source file
%.d: %.cpp
	@set -e; rm -f $@; \
	$(CC) -MM $(CPPFLAGS) $< > $@.$$$$; \
	sed 's,\(.*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -rf $@.$$$$

# Build object files from source files
%.o: %.cpp
	$(CC) $(CFLAGS) -c $< -o $@

# Clean up all generated files
clean:
	$(RM) $(OBJS) $(EXEC) $(foreach src,$(SRCS),$(src:.cpp=.d))
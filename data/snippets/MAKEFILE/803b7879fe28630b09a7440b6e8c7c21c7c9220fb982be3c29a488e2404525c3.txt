# This is a makefile for a C++ project
# Setting compiler options and flags
CXX = g++
CXXFLAGS = -g -std=c++11 -Wall -c
LDFLAGS = -g

# Defining directories
SRCDIR = src
OBJDIR = obj

# Building a list of all source files
SOURCES := $(shell find $(SRCDIR) -type f -name '*.cpp')

# Setting up object file names
# Replace .cpp extension with .o
OBJECTS := $(SOURCES:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)

# Creating the output executable
EXECUTABLE = main

# On default call, build executable
# $@: name of current target
# $^: name of all dependencies
default: $(EXECUTABLE)

# Creating rule for building executable
# $<: name of first dependency, in this case the first object file
$(EXECUTABLE): $(OBJECTS)
    $(CXX) $(LDFLAGS) $^ -o $@

# Creating rule for building object files
# -MMD: include dependencies in the makefile
# -MF: specify file to write dependencies to
# $<: name of first dependency, in this case the source file
# $@: name of current target
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
    $(CXX) $(CXXFLAGS) -MMD -MF $(@:.o=.d) -c $< -o $@

# Include auto-generated dependencies
-include $(OBJECTS:.o=.d)

# Clean up generated files
clean:
    rm -f $(OBJDIR)/*.o $(OBJDIR)/*.d $(EXECUTABLE)

# Prevent make from confusing filenames with targets
.PHONY: default clean

# End of makefile
# variables
VAR1 = value1
VAR2 = value2
VAR3 = value3
VAR_LIST = ${VAR1} ${VAR2} ${VAR3}

# target
all: target1 target2

# target1 depends on VAR_LIST
target1: $(VAR_LIST)
	@echo "Running target1 with variables: ${VAR1}, ${VAR2}, ${VAR3}"

# target2 depends on target1
target2: target1
	@echo "Running target2 with dependencies: $^"

# pattern rule
# target3 will generate files with the extension .txt
.SECONDARY: target3
%:: target3/%.txt

# phony target, does not generate a file
.PHONY: clean
clean:
	@echo "Deleting generated files..."
	@rm -rf target3

# default target to run when 'make' command is used
.DEFAULT_GOAL := all

# conditional
ifdef DEBUG
	@echo "Running in debug mode"
endif

# loop
SOME_LIST = item1 item2 item3 item4
LOOP_TARGET = $(foreach item, ${SOME_LIST}, do_something_with_${item};)

# override variable
override VAR1 = new_value1

# include another makefile
include other_makefile.mk
# This is a Makefile that compiles a C program

# The variable CC is set to the compiler command
CC = gcc
# The variable CFLAGS is set to the compiler flags
CFLAGS = -Wall -g
# The variable SOURCES is set to the source files
SOURCES = main.c helper.c
# The variable OBJECTS is set to the object files
OBJECTS = main.o helper.o
# The variable EXECUTABLE is set to the final executable file
EXECUTABLE = program

# The first target is to clean the project by removing the executable and object files
clean:
	@echo "Cleaning project..."
	rm -f $(EXECUTABLE) $(OBJECTS)

# The second target is to compile the source files into object files
$(OBJECTS):
	@echo "Compiling $@"
	$(CC) -c $(CFLAGS) $*.c -o $@

# The third target is to link the object files and create the final executable
$(EXECUTABLE): $(OBJECTS)
	@echo "Linking $@"
	$(CC) -o $@ $^

# The default target is to build the project
all: $(EXECUTABLE)

# The PHONY target ensures that the clean target is always executed
.PHONY: clean
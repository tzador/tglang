# This is a sample makefile that compiles and links a C++ project in a specific directory.

# Define variables for compiler and linker
CXX := g++
CXXFLAGS := -Wall -g
LD := g++
LDFLAGS :=

# Define directory paths for source and object files
SRCDIR := src
BUILDDIR := build
TARGET_DIR := bin

# Create variable for target executable file
TARGET := $(TARGET_DIR)/myprog

# Define source and object files using wildcard matching
SRCS := $(wildcard $(SRCDIR)/*.cpp)
OBJS := $(patsubst $(SRCDIR)/%.cpp,$(BUILDDIR)/%.o,$(SRCS))

# Set all as default target, which will compile and link the program
all: $(TARGET)

# Generate object files by compiling source files
$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Link object files to create target executable
$(TARGET) : $(OBJS)
	$(LD) $^ -o $@ $(LDFLAGS)

# Add clean target to delete all object files and executable
clean:
	rm -f $(BUILDDIR)/*.o $(TARGET)
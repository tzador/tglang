# Set variables for compiler and flags
CC = gcc
CFLAGS = -Wall -g

# Define phony targets
.PHONY: clean, all

# Specify all object files to be generated
OBJS = main.o utils.o helper.o

# Specify all source files
SRCS = main.c utils.c helper.c

# Specify the executable file to be generated
EXECUTABLE = my_program

# Default target to be executed when user runs "make" command
all: $(EXECUTABLE)

# Main target to compile all source files and generate executable
$(EXECUTABLE): $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $(EXECUTABLE)

# Target to compile main.c
main.o: main.c
	$(CC) $(CFLAGS) -c main.c

# Target to compile utils.c
utils.o: utils.c
	$(CC) $(CFLAGS) -c utils.c

# Target to compile helper.c
helper.o: helper.c
	$(CC) $(CFLAGS) -c helper.c

# Target to clean up object files and executable
clean:
	rm -rf $(OBJS) $(EXECUTABLE)
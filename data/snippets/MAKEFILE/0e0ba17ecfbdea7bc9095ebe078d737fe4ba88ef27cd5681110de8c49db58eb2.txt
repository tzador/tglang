# This is a MAKEFILE that will compile and link a C++ program.

# Define the compiler to use and any necessary flags
CC = g++ 
CFLAGS = -std=c++11 -Wall

# Define the source files to be compiled and linked
SRCS = main.cpp class1.cpp class2.cpp

# Define the object files to be created from the source files
OBJS = main.o class1.o class2.o

# Define the name of the executable to be created
EXEC = myprogram 

# Define the default target for the makefile
all: $(EXEC)

# Define the rule to compile each source file into an object file
# $< is a built-in variable that represents the current prerequisite (source file)
# $@ is a built-in variable that represents the current target (object file)
%.o: %.cpp
	$(CC) -$(CFLAGS) -c $< -o $@

# Define the rule to link the object files into the executable
$(EXEC): $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $@

# Define a target to clean up all object and executable files
# -f flag forces the removal of files even if they are read-only
clean:
	rm -f $(EXEC) $(OBJS)
 
# Define a target for running the program
run:
	./$(EXEC)

# Define a .PHONY target to prevent conflicts with files of the same name
.PHONY: all clean run
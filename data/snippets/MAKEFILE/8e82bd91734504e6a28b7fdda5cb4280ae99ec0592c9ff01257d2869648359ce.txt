# Declaration of variables
files := file1 file2 file3 # Declares the variable 'files' and assigns it a value of 'file1', 'file2', and 'file3'
srcdir := src # Declares the variable 'srcdir' and assigns it a value of 'src'
objects := $(patsubst %.c, %.o, $(wildcard $(srcdir)/*.c))
# Uses the wildcard function to match all .c files in the 'src' directory and the patsubst function to substitute .c with .o
# to create a list of object files that will be compiled

# Build target with dependencies
prog: $(objects) # 'prog' is the name of the target which depends on all the object files listed in the 'objects' variable
	gcc -o prog $(objects) # The target 'prog' will be built by running the gcc command to link all the object files

# Compile individual object files
%.o: %.c # Tells make that any .o file depends on the corresponding .c file
	gcc -c $< -o $@ # The object file will be created by running the gcc command to compile the .c file

# Clean up target
.PHONY: clean # Declares the target 'clean' as being a 'phony' target, meaning it doesn't correspond with an actual file
clean: # 'clean' is the name of the target that will be used to clean up the project folder
	rm -f $(objects) # Removes all the object files listed in the 'objects' variable

# Default target
.DEFAULT_GOAL := prog # Sets the default target to be built when the 'make' command is run without specifying a target
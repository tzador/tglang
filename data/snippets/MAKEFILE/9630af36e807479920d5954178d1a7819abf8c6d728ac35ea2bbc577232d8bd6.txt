# Specify variables for the compiler and linker
CC = gcc # The C compiler to use
LD = ld # The linker to use

# Set compiler and linker flags
CFLAGS = -g -Wall -Iinclude # Add debugging symbols and warning flags, and include directory
LDFLAGS = -lm -lpthread # Link libraries for math and threading functions

# Define source and object files
SRCS = src/main.c src/utils.c src/parse.c # List of source files
OBJS = $(SRCS:.c=.o) # Object files, with .c replaced by .o

# Specify dependencies and actions for each source file
all: program # Compile all source files and link into program

program: $(OBJS) # Dependencies for program
	$(LD) $(LDFLAGS) $^ -o $@ # Link object files and output to program

# Pattern rule for compiling source files
%.o: %.c # Object file depends on corresponding source file
	$(CC) $(CFLAGS) -c $< -o $@ # Compile source file into object file

# Define a phony target as a shortcut for deleting all object and executable files
.PHONY: clean 
clean:
	rm -f $(OBJS) program
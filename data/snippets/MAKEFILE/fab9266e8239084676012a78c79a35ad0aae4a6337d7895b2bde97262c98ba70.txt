# Setting Compiler variables
CC = gcc
CFLAGS = -Wall -std=c99

# Setting directory variables
SRCDIR = src
OBJDIR = obj
BINDIR = bin

# Creating object file list
SRC = $(wildcard $(SRCDIR)/*.c)
OBJS = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SRC))

# Build target for the executable
$(BINDIR)/executable: $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^

# Build target for every c file in the src directory
$(OBJDIR)/%.o: $(SRCDIR)/%.c | $(OBJDIR)
	$(CC) $(CFLAGS) -c -o $@ $<

# Create the object directory if it doesn't exist
$(OBJDIR):
	mkdir -p $(OBJDIR)

# Clean target for removing all object and executable files
clean:
	rm -rf $(OBJDIR)
	rm -rf $(BINDIR)

# Build and run target for building and running the executable
run: $(BINDIR)/executable
	$(BINDIR)/executable

# Phony targets to avoid conflicts with file names
.PHONY: clean run
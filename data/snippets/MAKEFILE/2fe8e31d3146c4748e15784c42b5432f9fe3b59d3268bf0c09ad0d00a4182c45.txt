# variables to hold compiler and linker flags
CC = g++
CFLAGS = -Wall -Werror -std=c++11
LDFLAGS = -lm

# initialize objects variable with all .o files in current directory
objects := $(patsubst %.cpp, %.o, $(wildcard *.cpp))

# all rule compiles all objects and links them
all: $(objects)
	$(CC) -o output $(objects) $(LDFLAGS)

# rule to compile a .cpp file into a .o object file using CC and CFLAGS
%.o: %.cpp
	$(CC) $(CFLAGS) -c $< -o $@

# phony rule to clean up object files, executable, and backup files
.PHONY: clean
clean:
	rm -f *.o output *~

# create a tarball with all source files
.PHONY: tarball
tarball:
	tar -cvzf output.tar.gz *.cpp makefile

# rule to display help menu
.PHONY: help
help:
	@echo "Usage: make [target]"
	@echo "Targets:"
	@echo "  all       - compile all objects and link them"
	@echo "  clean     - remove all object files, executable, and backup files"
	@echo "  tarball   - create a tarball with all source files"
	@echo "  help      - display this help menu"
all: target1 target2 # create a rule 'all' which depends on target1 and target2

target1: dependency1 dependency2
	@echo "Creating target1..." # output message using echo command
	g++ -o target1 source1.cpp  # compile and link source file to create target1
	@echo "Successfully created target1!"

target2: $(wildcard *.c)  # use a wildcard to compile all .c files in current directory
	@echo "Creating target2..."
	g++ -o target2 *.c  # compile and link all .c files to create target2
	@echo "Successfully created target2!"

dependency1:  # create an empty dependency, indicating that this target doesn't need any dependencies
	@echo "Dependency1 not needed."

dependency2: source2.cpp  # specify a source file as a dependency
	@echo "Compiling source2.cpp..."
	g++ -c source2.cpp  # compile source2.cpp without linking
	@echo "Successfully compiled source2.cpp!"

clean: 
	rm -f target1 target2 *.o # remove all targets and object files when 'clean' rule is executed

.PHONY: all clean  # ensure that 'all' and 'clean' rules are always executed, even if there are files with the same names
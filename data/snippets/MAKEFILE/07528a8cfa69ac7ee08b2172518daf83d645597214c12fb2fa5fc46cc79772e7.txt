# This is a MAKEFILE for a project that compiles and links multiple source files

# Define variables for compiler and compiler flags
CC = gcc
CFLAGS = -Wall -g

# Define variable for linker
LD = gcc

# Define variable for output executable name
OUTPUT = my_project

# Define variables for source files and object files
SRCS = main.c my_functions.c helper_functions.c
OBJS = $(SRCS:.c=.o)

# Specify the "all" target, which will be the default target when "make" is run
all: $(OUTPUT)

# Specify the rules to compile each source file into an object file
.c.o:
	$(CC) $(CFLAGS) -c $< -o $@

# Specify the "clean" target to remove all generated object files and the executable
clean:
	rm -f $(OBJS) $(OUTPUT)

# Specify the rule to link the object files into the executable
$(OUTPUT): $(OBJS)
	$(LD) -o $@ $(OBJS)

# Specify the phony targets for "all" and "clean" to prevent conflicts with file names
.PHONY: all clean
# This Makefile creates an executable file for a C program called "hello_world". 
# It also includes a rule for cleaning up the generated files.

# Compiler and flags
CC = gcc
CFLAGS = -Wall -Werror

# Directories
BIN_DIR = bin
SRC_DIR = src
OBJ_DIR = obj

# Files
TARGET = $(BIN_DIR)/hello_world
SOURCES = $(wildcard $(SRC_DIR)/*.c)
OBJECTS = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SOURCES))

# Default rule
# Creates the executable file from object files and ensures the
# bin directory exists.
$(TARGET): $(OBJECTS)
	mkdir -p $(BIN_DIR)
	$(CC) $(CFLAGS) $^ -o $@

# Compile rule for object files
$(OBJECTS): $(OBJ_DIR)/%.o : $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean rule
clean:
	rm -r $(BIN_DIR)
	rm -r $(OBJ_DIR)
# Variables
APP_NAME := myApp # The name of the application
SRC_DIR := src # The source directory
BUILD_DIR := build # The build directory
INCLUDE_DIR := include # The includes directory
LIB_DIR := lib # The libraries directory

# Compiler and flags
CXX := g++ # Compiler used
CXX_FLAGS := -std=c++11 -Wall -I$(INCLUDE_DIR) # Flags for compiler

# Get source files
SRC_FILES := $(wildcard $(SRC_DIR)/*.cpp) # Get all cpp files in source directory

# Build targets
.PHONY: all clean # Declare clean and all targets as "phony", meaning they won't produce an actual file
all: $(APP_NAME) # Default target, it will build the application

# Build application
$(APP_NAME): $(SRC_FILES) # Rule to build the application, it requires all source files
	@mkdir -p $(BUILD_DIR) # Create the build directory if it doesn't exist
	@$(CXX) $(CXX_FLAGS) $^ -o $(BUILD_DIR)/$@ # Compile all source files and put the executable in the build directory

# Clean target
clean:
	@rm -rf $(BUILD_DIR) # Delete the build directory

# Wildcard targets
%.cpp: # Wildcard target for all cpp files, useful if there are multiple source files
	@$(CXX) $(CXX_FLAGS) -c $< -o $(BUILD_DIR)/$@ # Compile the source file and put the object file in the build directory
# This is a makefile that compiles and links multiple source files
# and creates an executable output file called "program"
# The syntax used in this makefile is gnu make

# Define the compiler
CC = gcc

# Set compilation flags
CFLAGS = -Wall -g

# Define source files
SRCS = main.c utils.c helper.c

# Define object files
OBJS = $(SRCS:.c=.o)

# Define the output file name
OUTPUT = program

# Target for compiling and linking all source files
# The "@" symbol suppresses displaying the command in the terminal
all: $(OBJS)
	@$(CC) $(CFLAGS) $(OBJS) -o $(OUTPUT)

# Target for compiling individual source files
# The "$<:Memver" syntax refers to the current target's prerequisite files
# The "-o" option specifies the output file name
%.o: %.c
	@$(CC) $(CFLAGS) -c $< -o $@

# Target for cleaning up object files and executable
clean:
	@rm -f $(OBJS) $(OUTPUT)

# Target for creating a tar file of all source files and makefile
# The "$@" symbol refers to the current target's name
tar:
	@tar -cvf $@.tar *.c *.h Makefile

# Specify that "all" is the default target
.PHONY: all

# Specify that "clean" and "tar" targets do not correspond to files
.PHONY: clean tar
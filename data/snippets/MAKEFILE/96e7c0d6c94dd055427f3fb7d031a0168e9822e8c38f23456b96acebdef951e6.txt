# This is a makefile that will compile and link multiple C++ files
# and output an executable file called "program" 


# set the compiler to g++
CC = g++

# set compiler flags to include warnings, enable C++11 and optimize for speed
CFLAGS = -Wall -std=c++11 -O3

# create a variable for the source files
FILES = main.cpp calculations.cpp helper_functions.cpp

# create a variable for the object files
OBJECTS = main.o calculations.o helper_functions.o

# create a rule to build the executable file
program: $(OBJECTS)
	$(CC) $(CFLAGS) $(OBJECTS) -o program

# create a rule to compile main.cpp
main.o: main.cpp
	$(CC) $(CFLAGS) -c main.cpp

# create a rule to compile calculations.cpp
calculations.o: calculations.cpp
	$(CC) $(CFLAGS) -c calculations.cpp

# create a rule to compile helper_functions.cpp
helper_functions.o: helper_functions.cpp
	$(CC) $(CFLAGS) -c helper_functions.cpp

# create a clean rule to remove object files
.PHONY: clean
clean:
	rm -f $(OBJECTS)

# create a clean_all rule to remove object files and the executable
.PHONY: clean_all
clean_all: clean
	rm -f program
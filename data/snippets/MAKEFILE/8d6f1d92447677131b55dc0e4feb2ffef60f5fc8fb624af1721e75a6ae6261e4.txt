# Makefile to compile and run a C++ program
# Specify compiler and compiler flags
CC = g++
CFLAGS = -Wall -std=c++11

# Specify source files
SRC = main.cpp utils.cpp

# Specify object files
OBJ = $(SRC:.cpp=.o)

# Specify output executable
EXEC = program

# Specify build directory
BUILD_DIR = build

# Specify compiler command
COMPILE = $(CC) $(CFLAGS) -c

# Specify linker command
LINK = $(CC) $(CFLAGS) $^ -o $@

# Create build directory if it doesn't exist
$(shell mkdir -p $(BUILD_DIR))

# Default target to compile and run the program
all: $(EXEC)
	 ./$(EXEC)

# Target to compile the program
$(EXEC): $(OBJ)
	$(LINK)

# Target to compile each source file
%.o: %.cpp
	$(COMPILE) $< -o $(BUILD_DIR)/$@

# Clean build directory
clean:
	$(RM) -r $(BUILD_DIR)

# Clean build directory and executable
clean-all:
	$(RM) -r $(BUILD_DIR) $(EXEC)

# Declare phony targets
.PHONY: all clean clean-all
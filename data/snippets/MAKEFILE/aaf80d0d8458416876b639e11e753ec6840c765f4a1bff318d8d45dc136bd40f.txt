# Define a variable called 'SRC' that holds all the source files
# - This variable will be used in the 'build' target
SRC := $(wildcard *.c)

# Define a variable called 'OBJ' that holds all the object files
# - This variable will be used in the 'build' target as well as the 'clean' target
OBJ := $(SRC:.c=.o)

# Define a variable called 'CFLAGS' that holds the compilation flags
# - These flags will be used when compiling the source files into object files
CFLAGS := -Wall -g -std=c11

# Define a variable called 'EXE' that holds the name of the executable file
EXE := program

# Declare a phony target called 'all' which will compile the source files into an executable
# - Dependencies: 'build'
.PHONY: all
all: build

# Define a target called 'build' that will compile the source files into object files
# - Dependencies: $(OBJ)
build: $(OBJ)

# Define a generic rule for compiling source files into object files
# - This rule will be used by the 'build' target
%.o: %.c
	gcc $(CFLAGS) -c $<

# Declare a phony target called 'clean' which will remove all the object files and the executable
.PHONY: clean
clean:
	rm -f $(OBJ) $(EXE)
# This makefile is used to compile and build a C++ project
# `make` command is used to execute this makefile

# define variables for compiler and compiler flags
CC = g++ # the compiler to be used
CFLAGS = -std=c++11 -Wall -g # flags to pass to the compiler

# define the target executable
TARGET = main # name of the output executable

# define the source files
SRCDIR = src # the directory containing source files
SRC = $(wildcard $(SRCDIR)/*.cpp) # all .cpp files in SRC directory

# define the object files
OBJDIR = obj # the directory for object files
OBJ = $(SRC:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o) # pattern substitution for .o files

# define phony targets
.PHONY: all clean rebuild

all: $(TARGET) # default target, runs when `make` is executed without any arguments

$(TARGET): $(OBJ)
	$(CC) $(CFLAGS) -o $@ $^ # command for linking the object files into the executable

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(CFLAGS) -c $< -o $@ # command for compiling the source files into object files

clean:
	rm -f $(TARGET) $(OBJ) # removes the target executable and all object files

rebuild: clean all # phony target for rebuilding the project from scratch

# End of makefile
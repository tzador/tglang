# This is a makefile code snippet
# It sets up dependencies and rules to compile a C++ project

# Compiler flags
CXX := g++
CXXFLAGS := -std=c++11 -Wall -Iinclude/

# Directories
SOURCE_DIR := src
BUILD_DIR := build
BIN_DIR := bin

# Files
SOURCES := $(wildcard $(SOURCE_DIR)/*.cpp)
OBJECTS := $(patsubst $(SOURCE_DIR)/%.cpp,$(BUILD_DIR)/%.o,$(SOURCES))
EXECUTABLE := $(BIN_DIR)/project

# Rule to compile all objects
all: $(OBJECTS) 
    $(CXX) $(CXXFLAGS) $(OBJECTS) -o $(EXECUTABLE)

# Rule to compile individual objects
$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.cpp
    $(CXX) $(CXXFLAGS) -c $< -o $@

# Rule to clean up object and executable files
clean:
    rm -f $(BUILD_DIR)/*.o $(EXECUTABLE)

# Dependency rule generated by the compiler
-include $(OBJECTS:.o=.d)

# End of makefile code snippet
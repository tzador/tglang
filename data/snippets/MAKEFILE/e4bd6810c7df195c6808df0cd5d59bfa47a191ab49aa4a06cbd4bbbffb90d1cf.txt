# This is a makefile for compiling and linking a C++ project

# Set compiler and flags
CC = g++
CFLAGS = -c -Wall
LFLAGS = -Wall

# Define source and output directories
SRC_DIR = src
INC_DIR = include
OBJ_DIR = obj
BIN_DIR = bin

# Collect source files and create object file names
SRCS = $(wildcard $(SRC_DIR)/*.cpp)
OBJS = $(patsubst $(SRC_DIR)/%.cpp, $(OBJ_DIR)/%.o, $(SRCS))

# Define output executable name
EXEC = $(BIN_DIR)/myProgram

# Default target to build the executable
all: $(EXEC)

# Rules to compile each source file into an object file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CC) $(CFLAGS) -I $(INC_DIR) -o $@ $<

# Rule to link all object files into the executable
$(EXEC): $(OBJS)
	$(CC) $(LFLAGS) -o $@ $^

# Target to clean all generated files
clean:
	rm -rf $(OBJ_DIR)/*.o $(BIN_DIR)/*
# This is a makefile for a project called "my_program"

# Specify compiler
CC = gcc

# Compiler flags
CFLAGS = -Wall -Werror -pedantic -Iinclude

# Source files
SOURCES = src/main.c src/helper.c src/utils.c

# Object files
OBJECTS = $(SOURCES:.c=.o)

# Binary output name
BIN = my_program

# Target: Dependencies
# Tab-indented line is the command to execute
all: $(OBJECTS)
	$(CC) $(CFLAGS) $(SOURCES) -o $(BIN)

# Pattern rule for compiling .c files to .o
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean up unnecessary files
clean:
	rm -f $(BIN) $(OBJECTS)

# Build and run the program
run: all
	./$(BIN)

# Specify phony targets
.PHONY: all clean run
# This is a complex makefile that performs multiple tasks
# and uses advanced features of the Make build system
# Set the compiler to gcc
CC=gcc
# Set the compiler flags
CFLAGS=-Wall -c -o
# Set the linker flags
LDFLAGS=-lm
# Set the source files to be compiled
SOURCES=main.c utils.c helper.c
# Set the object files to be created
OBJECTS=$(SOURCES:.c=.o)
# Set the executable file name
EXECUTABLE=program
# Default target for the makefile
all: $(SOURCES) $(EXECUTABLE)
$(EXECUTABLE): $(OBJECTS)
	# Link the object files and create the executable
	$(CC) $(LDFLAGS) $(OBJECTS) -o $@
main.o: main.c
	# Compile the main source file
	$(CC) $(CFLAGS) $@ $<
utils.o: utils.c
	# Compile the utility source file
	$(CC) $(CFLAGS) $@ $<
helper.o: helper.c
	# Compile the helper source file
	$(CC) $(CFLAGS) $@ $<
.PHONY: clean
clean:
	# Remove all object files and the executable
	rm -rf $(OBJECTS) $(EXECUTABLE)
## Makefile for compiling and linking a C++ project

## Variables Definition
CC = g++ # C++ compiler
CFLAGS = -Wall -g # compiler flags
LFLAGS = -lm # linker flags
SRCDIR = src # source directory
# find all .cpp files in the source directory
SOURCES = $(wildcard $(SRCDIR)/*.cpp)
OBJECTS = $(SOURCES:.cpp=.o) # names of the object files
BINDIR = bin # binary directory
EXECUTABLE = $(BINDIR)/main # name of the executable

## Targets

all : $(BINDIR) $(EXECUTABLE) # default target

$(EXECUTABLE) : $(OBJECTS) # linking target
		$(CC) $(CFLAGS) $^ -o $@ $(LFLAGS)

# compile each source file into an object file
$(OBJECTS) : %.o : %.cpp
		$(CC) $(CFLAGS) -c $< -o $@

.PHONY : clean # phony target for cleaning up
clean :
		rm -rf $(BINDIR) $(SRCDIR)/*.o # delete binary directory and all object files

$(BINDIR) : # create the binary directory if it doesn't exist
		mkdir -p $(BINDIR)
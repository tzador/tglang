# This is a makefile for a C++ project

# Define the compiler and compile flags
CXX = g++
CXXFLAGS = -Wall -c

# Define the target executable name
TARGET = myprogram

# Create a variable for source files
SRCS = src/main.cpp src/helper.cpp src/calculator.cpp

# Create a variable for object files
OBJS = $(SRCS:%.cpp=%.o)

# Define a rule to compile all object files from their respective source files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) $< -o $@

# Define a rule for the target executable
$(TARGET): $(OBJS)
	$(CXX) $^ -o $@

# Define a rule to clean up object and executable files
clean:
	rm -f $(OBJS) $(TARGET)

# Define a rule for 'all' target to compile all sources and generate executable
all: $(TARGET)

# Define a rule for 'run' target to run the executable
run: $(TARGET)
	./$(TARGET)

# Define a rule for 'help' target to print helpful commands for makefile
help:
	@echo "Targets:"
	@echo "  all       - compile sources and generate executable"
	@echo "  run       - run the executable"
	@echo "  clean     - remove object and executable files"
	@echo "  help      - print helpful commands for makefile"
	@echo "Variables:"
	@echo "  CXX       - compiler"
	@echo "  CXXFLAGS  - compile flags"
	@echo "  TARGET    - target executable name"
	@echo "  SRCS      - source files"
	@echo "  OBJS      - object files"
# Sets the compiler to use for building
CC = gcc

# Sets the compiler flags
CFLAGS = -Wall -g

# Sets the directories for source files and object files
SRCDIR = src
OBJDIR = obj

# Creates a list of all source files
SOURCES = $(wildcard $(SRCDIR)/*.c)

# Creates a list of object files from source files
OBJECTS = $(patsubst $(SRCDIR)/%.c,$(OBJDIR)/%.o$(CCFLAG), $(SOURCES))

# Defines the name of the executable
EXECUTABLE = myprogram

# Default make target, will be executed when calling just 'make' command
all: $(EXECUTABLE)

# Rule for creating object files from source files
$(OBJDIR)/%.o: $(SRCDIR)/%.c
	$(CC) -o $@ -c $< $(CFLAGS)

# Rule for linking the object files and creating the executable
$(EXECUTABLE): $(OBJECTS)
	$(CC) -o $@ $^

# Clean target, removes all object files and executable
clean:
	rm -f $(EXECUTABLE) $(OBJDIR)/*.o

# Phony target, prevents conflicts with files named 'all' or 'clean'
.PHONY: all clean
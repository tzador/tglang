#This is a Makefile that will compile a C++ program and create multiple targets

#Variables
CXX = g++                      #Compiler name
CXXFLAGS = -g -std=c++11       #Compilation flags
OUTPUT = program               #Name of executable

#Default target 
all: $(OUTPUT)                 #This target will build all other targets

#First target: Compiling the main program
$(OUTPUT): main.cpp             #Dependency on main.cpp file
	$(CXX) $(CXXFLAGS) -o $@ $^  #$@ is the target name and $^ is the list of dependencies

#Second target: Compiling helper functions
helpers.o: helpers.cpp          #Dependency on helpers.cpp file
	$(CXX) $(CXXFLAGS) -c -o $@ $<  #$< is the first dependency (in this case, helpers.cpp)

#Third target: Compiling utility functions
utils.o: utils.cpp              #Dependency on utils.cpp file
	$(CXX) $(CXXFLAGS) -c -o $@ $<  #$< is the first dependency (in this case, utils.cpp)

#Fourth target: Cleaning old files
clean:
	rm -f $(OUTPUT) helpers.o utils.o   #Removes the executable and object files

#Fifth target: Phony target to always run
.PHONY: all clean          #This target will always run regardless of the state of the files
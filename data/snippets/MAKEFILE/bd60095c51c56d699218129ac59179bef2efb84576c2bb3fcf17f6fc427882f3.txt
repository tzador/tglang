# This is a sample MAKEFILE code

# Variable for storing the compiler
CC = gcc

# Variable for storing flags
CFLAGS = -c -Wall

# Rule to compile source code into object files
# Uses the CC variable and the CFLAGS variable
# $< refers to the first prerequisite, in this case the source code file
%.o: %.c
  $(CC) $(CFLAGS) $< -o $@

# Target for the final executable
# Uses the CC variable and links all object files together
# $^ refers to all prerequisites, in this case all the object files
output: main.o helper.o
  $(CC) $^ -o $@

# Default target when just typing "make" into the terminal
.PHONY: all
all: output

# Clean target to remove all object files and the executable
# Uses the rm command with the wildcard operator to remove all files with the .o extension
.PHONY: clean
clean:
  rm -f *.o output
  
# Rule to generate documentation using Doxygen
.PHONY: docs
docs:
  doxygen Doxyfile

# Target for running tests using third-party testing framework
.PHONY: test
test:
  ./test_framework

# Custom target for running specific tests
.PHONY: specific-test
specific-test:
  ./test_framework -t specific_test

# Custom target for deploying code to a remote server
.PHONY: deploy
deploy:
  ssh username@server_address "cd /path/to/project; git pull origin master"
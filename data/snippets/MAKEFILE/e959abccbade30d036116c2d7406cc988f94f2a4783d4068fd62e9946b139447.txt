#This is a makefile example for a C++ project

#Variable for compiler 
CC = g++

#Variable for compiler flags
CFLAGS = -std=c++11 -Wall -O2

#Variables for directories
SRCDIR = src
OBJDIR = obj
BINDIR = bin

#List of source files
SOURCES = $(wildcard $(SRCDIR)/*.cpp)

#List of object files, replacing .cpp extension with .o
OBJECTS = $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SOURCES))

#Default target, creating executable
all: $(BINDIR)/main

#Rule for building executable, using all object files
$(BINDIR)/main: $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@

#Rule for building object files from sources
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(CFLAGS) -c $< -o $@

#Cleanup rule, removing executable and object files
clean:
	rm -f $(BINDIR)/main $(OBJECTS)

#Phony target, prevents conflicts with filenames
.PHONY: all clean
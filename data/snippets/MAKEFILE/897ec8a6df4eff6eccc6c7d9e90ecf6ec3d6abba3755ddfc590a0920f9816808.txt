# This is a sample makefile for a project "my_project"

# Define variables
CC = gcc
CFLAGS = -Wall -g
LIBS = -lm

# Include directories
INCLUDES = -I./include

# Source files
SRC_DIR = src
SRC_FILES = $(wildcard $(SRC_DIR)/*.c)

# Object files
OBJ_DIR = obj
OBJ_FILES = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRC_FILES))

# Set default target
.DEFAULT_GOAL := all

# Build all targets
all: my_project

# Link object files to create executable
my_project: $(OBJ_FILES)
	$(CC) $(CFLAGS) -o $@ $^ $(LIBS)

# Compile each C file into object file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) $(INCLUDES) -c -o $@ $<

# Clean up all object files and executable
clean:
	rm -f $(OBJ_DIR)/*.o my_project

# Phony targets (do not create actual files)
.PHONY: all clean
# This makefile is used to compile and link multiple source files

# Specify the compiler to use
CC = gcc

# Specify the flags to use for compilation
CFLAGS = -Wall -g

# Specify the directories where header files can be found
INCLUDE_DIRS = include/

# Specify the source files to compile
SOURCE_FILES = src/main.c src/helper_functions.c src/data_structures.c

# Specify the name of the output executable
EXECUTABLE = program

# Specify the directories where object files will be placed
OBJECT_DIRS = obj/

# Generate a list of object files based on source files
OBJECT_FILES = $(patsubst src/%.c, obj/%.o, $(SOURCE_FILES))

# Rule to create the output executable
$(EXECUTABLE): $(OBJECT_FILES)
	$(CC) $(CFLAGS) $(OBJECT_FILES) -o $(EXECUTABLE)

# Rule to generate object files from source files
obj/%.o: src/%.c
	$(CC) $(CFLAGS) -c $< -o $@ -I$(INCLUDE_DIRS)

# Rule to clean all generated files
clean:
	rm -rf $(OBJECT_FILES) $(EXECUTABLE)

# Specify the .PHONY targets to prevent make from confusing targets with actual files
.PHONY: all clean

# Default make target to build the executable
all: $(EXECUTABLE)
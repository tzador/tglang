### Comment Block ###
# This is a Makefile that compiles and links multiple source files and generates executables.

### Variable Declaration Block ###
CC = gcc # Compiler to use
CFLAGS = -Wall -g # Compiler flags, includes warnings and debugging info
SRCDIR = src # Source code directory
BUILDDIR = build # Directory to store object files
TARGET = program.exe # Name of executable to generate
SOURCES = $(wildcard $(SRCDIR)/*.c) # Dynamic list of source files, matches any .c file in src directory
OBJECTS = $(SOURCES:$(SRCDIR)/%.c=$(BUILDDIR)/%.o) # Dynamic list of object files, same name and location as source files in build directory

### Phony Targets ###
.PHONY: all # Targets that do not produce files with the same name, to avoid conflicts with file names

### Build Target ###
all: clean $(TARGET) # Main build target, cleans and then builds the executable

### Executable Target ###
$(TARGET): $(OBJECTS) # Rule for generating executable, depends on all object files
	$(CC) $(CFLAGS) $^ -o $@ # Compiles and links object files to generate executable in current directory

### Object File Targets ###
$(OBJECTS): $(BUILDDIR)/%.o : $(SRCDIR)/%.c # Pattern rule for generating object files, depends on corresponding source file
	$(CC) $(CFLAGS) -c $< -o $@ # Compiles each source file into object file in build directory

### Clean Target ###
.PHONY: clean # Target to remove all object files and the executable
clean:
	rm -f $(TARGET) $(OBJECTS) # Uses wildcard to remove all files with the same name as the target and object files in build directory
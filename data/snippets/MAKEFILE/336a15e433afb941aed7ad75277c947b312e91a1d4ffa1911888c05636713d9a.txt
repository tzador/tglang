# Makefile to build a project

# Compiler flags
CC = gcc
CFLAGS = -Wall -g

# Directories
SRCDIR = src
INCDIR = include
BINDIR = bin

# Source files
SRCS = $(wildcard $(SRCDIR)/*.c)

# Object files
OBJS = $(patsubst $(SRCDIR)/%.c, $(BINDIR)/%.o, $(SRCS))

# Set search path for header files
CFLAGS += -I$(INCDIR)

# Default target
default: all

# Build target
.PHONY: all
all: $(BINDIR)/project

# Recipe to build object files
$(BINDIR)/%.o: $(SRCDIR)/%.c | $(BINDIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Recipe to create directories
$(BINDIR):
	mkdir -p $@

# Recipe to link objects and create executable
$(BINDIR)/project: $(OBJS) | $(BINDIR)
	$(CC) -o $@ $(OBJS)

# Clean up target
.PHONY: clean
clean:
	rm -rf $(BINDIR)

# Help target
.PHONY: help
help:
	@echo "Usage: make [target]"
	@echo "Targets:"
	@echo "  all    - default target, builds project"
	@echo "  clean  - removes all build files"
	@echo "  help   - prints this help message"
# This is a makefile for a C++ project
# The following code sets up variables for the compiler and flags
CXX = g++
CXXFLAGS = -std=c++11 -Wall -Werror -g

# This code sets up the target and the source files
TARGET = my_project
SRCS = main.cpp functions.cpp

# The following code sets up the rules for compiling the source files
# It uses a foreach function to create a separate rule for each source file
# The %.o represents a variable for each source file
OBJS = $(foreach file,$(SRCS),$(subst .cpp,.o,$(file)))

# This rule specifies the target and its dependencies
# It first checks if the target exists, and if not, creates it using the compile command
# The '@' symbol suppresses the output from the command
$(TARGET): $(OBJS)
	@echo "Compiling..."
	$(CXX) $(CXXFLAGS) $(OBJS) -o $@

# This rule specifies the compiling command for each source file
# It uses the -c flag to create the object file for each source file
%.o : %.cpp
	@echo "Creating object file for $<"
	$(CXX) $(CXXFLAGS) -c $< -o $@

# This rule cleans up all the object files and the target
clean:
	rm -rf $(OBJS) $(TARGET)
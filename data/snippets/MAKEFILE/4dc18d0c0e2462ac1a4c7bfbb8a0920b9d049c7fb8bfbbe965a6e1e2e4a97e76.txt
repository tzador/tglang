# Makefile variables
CC = gcc
CFLAGS = -Wall -Werror
SOURCE_FILES = file1.c file2.c lib.c
HEADER_FILES = header1.h header2.h

# Default target (compiles and links all source files)
all: 
	$(CC) $(CFLAGS) $(SOURCE_FILES) -o executable

# Target for only compiling the source files
compile:
	$(CC) $(CFLAGS) -c $(SOURCE_FILES)

# Target for creating a static library
lib:
	$(CC) $(CFLAGS) -c $(SOURCE_FILES)
	ar rcs libmylibrary.a $(OBJECT_FILES)

# Target for cleaning the project (removes all generated files)
clean:
	rm -f executable
	rm -f *.o
	rm -f libmylibrary.a
# Target for running the executable
run:
	./executable

# Target for archiving the source files and header files in a zip folder
zip:
	zip project.zip $(SOURCE_FILES) $(HEADER_FILES)

# .PHONY rule to prevent conflict with any file named 'all'
.PHONY: all compile lib clean run zip
# This is a comment in a Makefile
# Define variables for compiler and linker
CC := gcc
LD := gcc
# Set compiler and linker flags
CFLAGS := -Wall -Wextra -Werror
LDFLAGS :=
# List of source files
SRCS := main.c utils.c
# Generate object file names
# $(patsubst <pattern>, <replacement>, <list>): Returns the names in <list>,
# with <pattern> replaced by <replacement> in each name. Here, we replace
# the extension '.c' with '.o'.
OBJS := $(patsubst %.c, %.o, $(SRCS))
# Define name of executable
EXE := program
# Target for linking the executable
# $(target): <dependencies>: <recipe>
$(EXE): $(OBJS)
    $(LD) $(LDFLAGS) $^ -o $@
# Targets for compiling individual source files
# $(target): <dependencies>: <recipe>
# $@: The file name of the target (here, the corresponding object file)
# $<: The name of the first dependency (here, the corresponding source file)
%.o: %.c
    $(CC) $(CFLAGS) -c $< -o $@
# Target for cleaning the directory of generated files
clean:
    rm -rf $(OBJS) $(EXE)
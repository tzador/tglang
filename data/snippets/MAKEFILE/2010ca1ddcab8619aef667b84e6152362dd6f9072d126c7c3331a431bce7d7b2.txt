# This is a makefile for a C project
# Variable declaration
CC = gcc
CFLAGS = -Wall -g -I./includes
SRC_DIR = ./src
OBJ_DIR = ./obj
BIN_DIR = ./bin
DEP_DIR = ./dep
# Retrieve all source files from src directory
SRCS := $(wildcard $(SRC_DIR)/*.c)
# Construct names for object and dependency files
OBJS := $(addprefix $(OBJ_DIR)/, $(notdir $(SRCS:.c=.o)))
DEPS := $(addprefix $(DEP_DIR)/, $(notdir $(SRCS:.c=.d)))
# Default rule
all: directories $(BIN_DIR)/program
# Create directories for object, dependency, and binary files
directories:
	mkdir -p $(OBJ_DIR) $(DEP_DIR) $(BIN_DIR)
# Compile and link source files into binary executable
$(BIN_DIR)/program: $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@
# Compile individual source files into object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@
# Generate dependency files for each source file
$(DEP_DIR)/%.d: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -M $< > $@
%.h:
-include $(DEPS)
# Clean command
clean:
	rm -rf $(OBJ_DIR) $(DEP_DIR) $(BIN_DIR)
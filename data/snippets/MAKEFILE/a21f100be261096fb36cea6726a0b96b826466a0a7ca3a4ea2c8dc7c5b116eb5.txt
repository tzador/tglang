# Makefile for project

# Retrieve the project directory
PROJECT_DIR := $(shell pwd)

# Compiler and flags
CC := gcc
CFLAGS := -std=c99 -Wall -Wextra -pedantic

# Source files directory
SRC_DIR := $(PROJECT_DIR)/src

# Object files directory
OBJ_DIR := $(PROJECT_DIR)/obj

# Executable file directory
BIN_DIR := $(PROJECT_DIR)/bin

# Get all source files
SRCS := $(wildcard $(SRC_DIR)/*.c)

# Generate object file names for each source file
OBJS := $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRCS))

# Executable file
TARGET := $(BIN_DIR)/program

# Default rule
all: $(TARGET)

# Rule to compile each source file into an object file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to link all object files into an executable file
$(TARGET): $(OBJS)
	$(CC) $^ -o $@

# Rule to clean all generated files
clean:
	rm -rf $(OBJ_DIR)/*.o $(TARGET)
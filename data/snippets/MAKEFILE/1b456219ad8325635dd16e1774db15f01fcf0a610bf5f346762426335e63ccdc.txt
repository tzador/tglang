# This is a Makefile

# Variables to hold compiler and flags
CC = gcc
CFLAGS = -Wall
OBJS = main.o test.o helper.o
EXECUTABLE = program

# Default target
all: $(EXECUTABLE)

# Main target for generating the executable
$(EXECUTABLE): $(OBJS)
	@echo "Building executable..."
	$(CC) $(CFLAGS) -o $@ $^

# Target for generating the main object file
main.o: main.c
	$(CC) $(CFLAGS) -c $< -o $@

# Target for generating the test object file
test.o: test.c
	$(CC) $(CFLAGS) -c $< -o $@

# Target for generating the helper object file
helper.o: helper.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean target for removing all generated files
clean:
	@echo "Cleaning up..."
	rm -rf $(EXECUTABLE) $(OBJS)

# Phony target to prevent conflicts with existing files
.PHONY: all clean

# End of Makefile
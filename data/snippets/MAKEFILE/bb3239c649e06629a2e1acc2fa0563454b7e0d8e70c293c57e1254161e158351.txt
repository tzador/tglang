# This is a sample makefile that compiles a C program

CC = gcc # compiler to be used

CFLAGS = -Wall -g # compiler flags

SRC_DIR = src # source directory
BUILD_DIR = build # build directory

# defines the name of the executable file
TARGET = program 

# lists all the source files
SRCS := $(wildcard $(SRC_DIR)/ *.c)

# generates the object files for each source file
OBJS := $(SRCS:.c=.o)

# specifies the dependencies of each object file
DEPS := $(OBJS:.o=.d)

# rule for building the target executable
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@ 

# rule for generating object files
%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

# include dependency files if they exist
-include $(DEPS)

.PHONY: clean # declares clean as a phony target

# rule for cleaning up generated files
clean:
	rm -f $(BUILD_DIR)/* $(TARGET) 

# rule to build and run the program
run: $(TARGET)
	./$(TARGET)
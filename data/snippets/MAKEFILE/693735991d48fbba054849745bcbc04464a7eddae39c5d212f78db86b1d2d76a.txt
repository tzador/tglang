# This is a makefile to build and run a C++ program with multiple source files

# Compiler options
CXX = g++       # set compiler to g++
CXXFLAGS = -Wall -g  # compiler flags for warnings and debugging
EXECUTABLE = main   # executable name

# Directories
SRC_DIR = src           # source code directory
OBJ_DIR = obj           # object files directory
BIN_DIR = bin           # executable directory
INCLUDE_DIR = include   # header files directory

# Source and object files
# use wildcard to include all .cpp files in the directory
SOURCES = $(wildcard $(SRC_DIR)/*.cpp)
# use patsubst to format the sources into .o files in the object directory
OBJECTS = $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.o,$(SOURCES))

# Build target and dependencies
all: $(EXECUTABLE)      # target executable depends on object files

# Build object files
# use pattern rule to build object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CXX) $(CXXFLAGS) -I $(INCLUDE_DIR) -c $< -o $@

# Build executable
$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(CXXFLAGS) $^ -o $(BIN_DIR)/$@

# Clean project
clean:
	rm -f $(OBJ_DIR)/*.o $(BIN_DIR)/$(EXECUTABLE)  # remove all object and executable files

# Phony targets
.PHONY: all clean        # prevent conflicts with files named "all" and "clean"
# This is a makefile - a build automation tool used to control the build process of a software project.

# Variables - can be used to store values that can be reused throughout the makefile

# $@ - the target (file being generated)
# $< - the first prerequisite (file required to generate the target)
# $^ - all prerequisites (all files required to generate the target)

CXX := g++     # C++ compiler
CXXFLAGS := -std=c++11 -Wall -Wextra   # compiler flags
LDFLAGS := -lm     # linker flags
SOURCES := main.cpp functions.cpp   # list of source files
OBJECTS := $(SOURCES:.cpp=.o)       # list of object files (targets)
EXECUTABLE := program.exe           # executable target

# Default target - all, ensures that the executable target is built first
all: $(EXECUTABLE)

# Rule for building object files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Rule for building the executable target 
$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(LDFLAGS) $^ -o $@

# Phony targets - used to specify actions that should always be executed
.PHONY: clean
clean:
	$(RM) $(OBJECTS) $(EXECUTABLE)     # removes all object files and executable

# Default target - used when make is executed without a target specified
.DEFAULT: all

# Makefile Comments:
# comments start with '#' and are used to provide documentation and explanations
# indentation is important in makefiles - use tabs not spaces
# targets and prerequisites are specified as dependencies - if a target or one of its prerequisites is modified, the target will be rebuilt
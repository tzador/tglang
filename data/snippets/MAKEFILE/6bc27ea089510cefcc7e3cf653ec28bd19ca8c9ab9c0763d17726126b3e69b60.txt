.DEFAULT_GOAL := all
# This sets the default goal for make commands to be 'all'

CC := gcc
# Sets the compiler to be gcc

CFLAGS := -Wall -Werror -std=c99
# Sets compiler flags to show all warnings and treat warnings as errors, as well as use C99 standard

SRC := src
# Sets the source directory to be 'src'

SRCS := $(wildcard $(SRC)/*.c)
# Uses wildcard function to get all files in 'src' directory that end in .c and stores them in SRCS variable

INC := include
# Sets the include directory to be 'include'

INCLUDES := $(wildcard $(INC)/*.h)
# Uses wildcard function to get all files in 'include' directory that end in .h and stores them in INCLUDES variable

OBJ := obj
# Sets the object directory to be 'obj'

OBJS := $(SRCS:$(SRC)/%.c=$(OBJ)/%.o)
# Uses substitution reference to map all files in SRCS variable to their corresponding .o files in OBJ directory, replacing the 'src' with 'obj'

JUNK := $(wildcard $(INC)/*~) $(wildcard $(SRC)/*~)
# Uses wildcard function to get all files ending in ~ in both the 'include' and 'src' directories and stores them in JUNK variable

.PHONY: all clean
# Declares 'all' and 'clean' as phony targets, meaning the targets always need to be remade regardless of whether the target is already up to date or not

all: $(OBJ) $(OBJS)
# Specifies the 'all' target, which depends on the 'obj' directory and all the .o files in the 'objs' variable

$(OBJ):
	mkdir -p $(OBJ)
# Creates the 'obj' directory if it does not already exist using the -p flag to create parent directories if needed

$(OBJ)/%.o: $(SRC)/%.c $(INCLUDES)
	$(CC) $(CFLAGS) -c -o $@ $<
# Uses the $@ and $< automatic variables to specify the target and the first dependency in the command compiling each object file

clean:
	rm -rf $(OBJ) $(JUNK)
# Specifies the 'clean' target, which removes the 'obj' directory and any files in the 'junk' variable
# Makefile for C++ project

#This line sets the compiler to g++ and specifies the version
CXX=g++-8

#This line sets the compiler flags, including debugging and optimization options
CXXFLAGS=-std=c++17 -Wall -Wextra -Wpedantic -O3 -g

#This line specifies the directory to look for header files
INCLUDE=-I ./include

#This line specifies the directory to store object files
OBJDIR=obj

#This line specifies the directory to store the final executable
BINDIR=bin

#This line specifies the source files
SOURCES=src/main.cpp \
		src/foo.cpp \
		src/bar.cpp \
		src/baz.cpp

#This line creates a list of object files by substituting .cpp with .o in the source files list
OBJECTS=$(SOURCES:.cpp=.o)

#This line specifies the final executable name
EXECUTABLE=example

#This target is the default and will be run if 'make' is executed without any target specified
all: $(SOURCES) $(EXECUTABLE)

#This target compiles all object files
$(EXECUTABLE): $(OBJECTS)
	@echo "Linking..."
	@mkdir -p $(BINDIR)
	$(CXX) $(CXXFLAGS) $(INCLUDE) $(OBJECTS) -o $(BINDIR)/$@

#This target compiles each individual source file into an object file
.cpp.o:
	@echo "Compiling $<..."
	@mkdir -p $(OBJDIR)
	$(CXX) $(CXXFLAGS) $(INCLUDE) -c $< -o $(OBJDIR)/$@

#This target cleans up all object files and the final executable
clean:
	@echo "Cleaning up..."
	@rm -rf $(OBJDIR)/*
	@rm -rf $(BINDIR)/*
	@echo "Done."
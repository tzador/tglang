# Makefile for a C++ project

# Define compiler
CC = g++

# Define compiler flags
CFLAGS = -Wall -c -g -std=c++11
# -Wall: enables all compiler warnings
# -c: compiles .cpp files into object files without linking
# -g: includes debugging symbols
# -std=c++11: uses the C++11 language standard

# Define linker
LD = g++

# Define linker flags
LFLAGS = -Wall -g -std=c++11
# -Wall: enables all linker warnings
# -g: includes debugging symbols
# -std=c++11: uses the C++11 language standard

# Define source files and target executable
SRCS = main.cpp helper.cpp
TARGET = program

# Default target
all: $(TARGET)

# Target for building the program
$(TARGET): $(SRCS:.cpp=.o)
	$(LD) $(LFLAGS) $^ -o $@

# Target for compiling C++ files into object files
%.o: %.cpp
	$(CC) $(CFLAGS) $< -o $@

# Target for cleaning up object files and executable
clean:
	rm -rf *.o $(TARGET)
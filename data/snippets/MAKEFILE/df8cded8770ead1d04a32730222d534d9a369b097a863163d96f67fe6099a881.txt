# This is a Makefile that compiles a C program, creates a tar archive, and runs the program with user input.
# It takes in a source file as an argument and creates an executable with the same name.
# Usage: make <source_file>

# The C compiler used
CC = gcc

# The flags passed to the compiler
CFLAGS = -Wall -g -c

# The linker used
LD = gcc

# The flags passed to the linker
LFLAGS = -Wall -g

# The source file argument
SOURCE = $(1)

# The name of the executable created
EXEC = $(basename $(SOURCE))

# The object files created from compiling the source code
OBJECTS = $(SOURCE:.c=.o)

# The name of the tar archive created
TAR = $(EXEC).tar.gz

# The default target, which builds the program and runs it with user input
all: build run

# The target for building the program
build: $(EXEC)

# The target for running the program with user input
run: build
	./$(EXEC)

# The recipe for creating the executable
$(EXEC): $(OBJECTS)
	$(LD) $(LFLAGS) $(OBJECTS) -o $(EXEC)

# The recipe for compiling the source code
.c.o:
	$(CC) $(CFLAGS) $< -o $@

# The target for creating the tar archive
tar: $(TAR)

# The recipe for creating the tar archive
$(TAR): $(SOURCE) Makefile
	tar -czf $@ $^

# The target for cleaning the directory of generated files
clean:
	rm -f $(EXEC) $(OBJECTS) $(TAR)
# This section defines all the variables to be used in the makefile.
# CC defines the compiler (in this case, GCC).
# CFLAGS defines the flags to be used during compilation.
# LDFLAGS defines the flags to be used during linking.
# OBJDIR defines the directory where object files will be stored.
# SOURCES defines the list of source code files (with .c extension) to be compiled.
# OBJECTS uses the SOURCES variable to create a list of corresponding object files (with .o extension).
CC = gcc
CFLAGS = -Wall -g
LDFLAGS = -lm
OBJDIR = obj
SOURCES = main.c
OBJECTS = $(patsubst %.c, $(OBJDIR)/%.o, $(SOURCES))

# Rule to create the object files by compiling the source code.
$(OBJDIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to create the executable by linking the object files.
# Also creates the OBJDIR directory if it doesn't exist.
# $@ refers to the target (in this case, the executable).
# $^ refers to all the dependency files (in this case, the object files).
$(OBJDIR)/executable: $(OBJECTS)
	mkdir -p $(OBJDIR)
	$(CC) $(LDFLAGS) $^ -o $@

# Rule to delete all the object files and the executable.
clean:
	rm -rf $(OBJDIR) executable

# Phony target to make sure the clean rule is always executed.
.PHONY: clean
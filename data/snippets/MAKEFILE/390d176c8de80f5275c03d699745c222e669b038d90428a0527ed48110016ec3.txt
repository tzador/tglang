#Variables for the directories and file names
SRC_DIR = src
INCLUDE_DIR = include
OBJ_DIR = obj
LIB_DIR = lib
BIN_DIR = bin
EXECUTABLE = program

#Compiler and flags
CC = gcc
CFLAGS = -Wall -I$(INCLUDE_DIR)

#Retrieve all .c files in the source directory
SRCS = $(wildcard $(SRC_DIR)/*.c)

#Transform .c files in .o files in the object directory
OBJS = $(addprefix $(OBJ_DIR)/, $(notdir $(SRCS:.c=.o)))

#Rule for linking object files
$(EXECUTABLE): $(OBJS)
	$(CC) $(OBJS) -L$(LIB_DIR) -o $(BIN_DIR)/$(EXECUTABLE)

#Rule for compiling .c files into object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

#Rule for creating directories if they don't exist
create_dirs:
	@mkdir -p $(OBJ_DIR) $(BIN_DIR)

#Rule for cleaning the directory from object files
clean:
	@(rm -rf $(OBJ_DIR) $(BIN_DIR))

#Rule for rebuilding the program
rebuild: clean create_dirs $(EXECUTABLE)

#Declare phony targets to prevent conflicts with file names
.PHONY: create_dirs clean rebuild
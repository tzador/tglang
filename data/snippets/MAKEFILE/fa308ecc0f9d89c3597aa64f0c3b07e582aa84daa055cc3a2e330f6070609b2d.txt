# This Makefile is used to compile and build a C++ program
# Note: This is just an example and the actual code may vary based on the project requirements

# Define Compiler
CC=g++

# Define Compiler Flags
CFLAGS=-c -Wall

# Define Linker Flags
LDFLAGS=

# Define Source Files
SOURCES=file1.cpp \
        file2.cpp \
        file3.cpp

# Define Object Files
OBJECTS=$(SOURCES:.cpp=.o)

# Define Executable Name
EXECUTABLE=program

# Default target, will be executed when 'make' command is run without any target
all: $(SOURCES) $(EXECUTABLE)

# Compile each source file into object file
.cpp.o:
	$(CC) $(CFLAGS) $< -o $@

# Link all object files and create the executable
$(EXECUTABLE): $(OBJECTS) 
	$(CC) $(LDFLAGS) $(OBJECTS) -o $@

# Clean all object files and the executable file
clean:
	@rm -rf $(OBJECTS) $(EXECUTABLE)

# This target can be used to run the program
run:
	./$(EXECUTABLE) <input_file> <output_file>

# This target can be used to test the program
test:
	./$(EXECUTABLE) test_input.txt test_output.txt

# This target can be used to rebuild the program
rebuild:
	@make clean
	@make all
 	
# This target will run before any other target
.PHONY: all clean run test rebuild
# Makefile for compiling and linking the project

# Define variables for compiler and linker commands
CC = gcc
LD = gcc

# Define flag variables for compiler and linker options
CFLAGS = -Wall -g -std=c99
LDFLAGS = -lm

# Define variables for source and object files
SRCS = main.c functions.c utils.c
OBJS = $(SRCS:.c=.o)
TARGET = myprog

# Rule to compile C source files into object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to link object files and create the executable
$(TARGET): $(OBJS)
	$(LD) $(OBJS) $(LDFLAGS) -o $@

# Rule to remove object files and executable
clean:
	rm -f $(OBJS) $(TARGET)

# Declare the 'all' target as the default target,
# which will be executed if no target is specified
.PHONY: all
all: $(TARGET)

# Declare the 'run' target for running the executable
.PHONY: run
run:
	./$(TARGET)

# Declare the 'debug' target for running the executable in debug mode
.PHONY: debug
debug:
	gdb ./$(TARGET)

# Declare the 'help' target for displaying help information
.PHONY: help
help:
	@echo "Makefile for compiling and linking the project"
	@echo "To compile: make"
	@echo "To run: make run"
	@echo "To run in debug mode: make debug"
	@echo "To clean: make clean"
### Makefile for a C++ project ###

# Compiler used
CXX = g++

# Compile flags
CXXFLAGS = -Wall -Wextra -std=c++11 -g

# Linker flags
LDFLAGS = -lsome_library -L/some/path

# Build target directory
BUILD_DIR = build

# Source directory
SRC_DIR = src

# Include directories
INC_DIRS = include include/some_library

# Source files
SRC_FILES = $(wildcard $(SRC_DIR)/*.cpp)

# Object files
OBJ_FILES = $(addprefix $(BUILD_DIR)/,$(notdir $(SRC_FILES:.cpp=.o)))

# Default target
all: $(BUILD_DIR)/project

# Compile source files into object files
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@ $(addprefix -I,$(INC_DIRS))

# Create executable by linking object files
$(BUILD_DIR)/project: $(OBJ_FILES)
	$(CXX) $^ -o $@ $(LDFLAGS)

# Clean build directory
clean:
	rm -rf $(BUILD_DIR)
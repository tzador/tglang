# This Makefile automates the build process for a C++ project
# Specify compiler and compiler flags
CC = g++
CFLAGS = -c -Wall

# Directories
SRCDIR = src
BUILDDIR = build
BINDIR = bin
TARGET = program

# Sources and objects
SOURCES := $(wildcard $(SRCDIR)/*.cpp)
OBJECTS := $(patsubst $(SRCDIR)/%.cpp, $(BUILDDIR)/%.o, $(SOURCES)) # uses wildcard, patsubst, and substitution references

# Default target and its dependencies
all: directories $(BINDIR)/$(TARGET)

# Create necessary directories
directories: 
	mkdir -p $(BUILDDIR)
	mkdir -p $(BINDIR)

# Link object files to create executable
$(BINDIR)/$(TARGET): $(OBJECTS)
	$(CC) $^ -o $@

# Compile each source file into an object file
$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(CFLAGS) $< -o $@

# Clean up object files
clean:
	rm -f $(OBJECTS)

# Clean up executable and object files
clean_all:
	rm -rf $(BINDIR)
	rm -rf $(BUILDDIR)

# Below are known phony targets, which will not be affected by existing files with the same name
.PHONY: all directories clean clean_all
all:            ## target for executing all rules
	@echo "Compiling project..." ## command to display compilation message
	g++ main.cpp -o hello ## compiling main.cpp file and creating an executable named hello
	@echo "Compilation complete." ## command to display compilation completed message

clean:          ## target for cleaning up all object and executable files
	@echo "Cleaning up..." ## command to display clean up message
	rm -rf *.o hello ## removing all object and executable files
	@echo "Clean up complete." ## command to display clean up completed message

.PHONY: all clean ## declares all and clean rules as phony targets

# I use the .PHONY rule to declare the targets all and clean as phony targets.
# This means that the rule will always be executed whenever it is called,
# regardless of whether a file with the same name already exists or not.

# The all rule is the default target, which means that it will be executed
# when no target is specified. In this case, it will execute the commands
# to compile the project.

# The clean rule is used to delete all object and executable files.
# The @ symbol before each command suppresses its output, so it will not
# be displayed in the terminal when the makefile is executed.

# The .PHONY rule only declares the all and clean targets as phony targets,
# but they are not actual targets in the makefile. Targets without any 
# dependencies are considered "fake" targets and will always be executed.
# This is why we use the .PHONY rule to declare them as phony targets.

# The double hash symbols (##) after each target are used as comments
# in the makefile. They are used to document the purpose of each target.

# The tab character before each command is required in a makefile.
# Make uses this tab character to differentiate between targets and commands.
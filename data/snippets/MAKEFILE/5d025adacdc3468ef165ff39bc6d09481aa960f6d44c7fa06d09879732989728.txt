# Defining variables
SRCDIR = src/
BINDIR = bin/
TARGET = $(BINDIR)program

# Creating a list of sources
SOURCES := $(wildcard $(SRCDIR)*.c)

# Defining compiler flags
CFLAGS = -Wall -O2

# Defining linker flags
LDFLAGS = -lm

# Creating object files list from source list
OBJECTS := $(patsubst $(SRCDIR)%.c, $(BINDIR)%.o, $(SOURCES))

# Default target is all
all: $(TARGET)

# Compiling all source files to create object files
$(OBJECTS) : $(BINDIR)%.o : $(SRCDIR)%.c
        gcc $(CFLAGS) -c $< -o $@

# Linking all object files to create final executable
$(TARGET) : $(OBJECTS)
        gcc $(LDFLAGS) $^ -o $@

# Cleaning up
clean:
        rm -rf $(BINDIR)*

# Phony target to avoid conflicts with file named "all"
.PHONY: all
.PHONY: clean
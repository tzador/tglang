# This is a comment

# Define variable "filename" containing the name of the output file
filename=my_output_file

# Define variable "source_files" containing a list of source files
source_files=main.cpp helper.cpp

# Define variable "compiler_flags" containing a list of flags for the compiler
compiler_flags=-Wall -std=c++11

# Define variable "linker_flags" containing a list of flags for the linker
linker_flags=-lglfw -lGL -lGLEW

# Default rule for the makefile
all: $(filename)

# Rule for generating the output file using the source files and compiler flags
$(filename): $(source_files)
	g++ $(compiler_flags) $(source_files) -o $(filename)

# Rule for cleaning up temporary and output files
clean:
	rm -f *~ $(filename)

# Rule for making a backup of the current makefile
backup:
	cp Makefile Makefile_backup

# Target for the "all" rule, always executes when called
.PHONY: all

# Target for the "clean" rule, always executes when called
.PHONY: clean

# Target for the "backup" rule, always executes when called
.PHONY: backup
# This is a comment in a makefile
# TARGET is the name of the executable file
TARGET = my_program
# CC specifies the compiler we will use
CC = gcc
# CFLAGS specifies the compiler flags we will use
CFLAGS = -Wall -g
# LDFLAGS specifies the linker flags we will use
LDFLAGS = -lm
# SRCDIR is the directory where the source files are located
SRCDIR = src
# BUILDDIR is the directory where the object files will be created
BUILDDIR = build
# SRCS is a list of all the source files
SRCS := $(wildcard $(SRCDIR)/*.c)
# OBJS is a list of all the object files that need to be created
OBJS := $(patsubst $(SRCDIR)/%.c, $(BUILDDIR)/%.o, $(SRCS))
# PHONY is a list of targets that do not result in the creation of files with the same name
.PHONY: all clean
# Default target is to compile all source files and create the executable
all: $(TARGET)
# Target to compile the object files
# The -c flag tells GCC to compile the source files without linking
$(BUILDDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@
# Target to link the object files and create the executable
$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) $^ -o $@
# Target to clean up all object files and the executable
clean:
	rm -f $(BUILDDIR)/*.o $(TARGET)
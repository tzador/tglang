# This is a sample makefile that compiles and links multiple source files into one executable.
# Defines variables for compiler, compiler flags, and target executable name
CC = gcc
CFLAGS = -Wall -g
TARGET = myprogram

# Define sources and objects, using wildcard function to include all source files with .c extension
SOURCES := $(wildcard *.c)
OBJECTS := $(SOURCES:.c=.o)

# Default rule that builds the target executable
$(TARGET): $(OBJECTS)
	$(CC) $(CFLAGS) -o $@ $^

# Rule to compile each source file into an object file
# Uses automatic variables to represent the target and dependencies
%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

# Rule to clean up object and executable files
clean:
	rm -f $(OBJECTS) $(TARGET)

# PHONY rule to prevent conflicts with files named the same as target or dependencies
.PHONY: clean
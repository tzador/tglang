# Variables
CC = gcc                       # Compiler 
CFLAGS = -Wall -g              # Compiler flags 
LDFLAGS = -lm                  # Linker flags
SRCDIR = src                   # Source directory 
OBJDIR = obj                   # Object directory
BINDIR = bin                   # Binary directory

# Source files 
SRC = $(wildcard $(SRCDIR)/*.c) 

# Object files 
OBJ := $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(wildcard $(SRC)))

# Targets 
TARGET = $(BINDIR)/program 

# Rule to create the executable file 
$(TARGET): $(OBJ)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS) 

# Rule to create the object files 
$(OBJDIR)/%.o: $(SRCDIR)/%.c 
	$(CC) $(CFLAGS) -c $< -o $@

# Clean rule 
clean:
	rm -rf $(OBJDIR)/* $(BINDIR)/*

# PHONY target for clean rule 
.PHONY: clean
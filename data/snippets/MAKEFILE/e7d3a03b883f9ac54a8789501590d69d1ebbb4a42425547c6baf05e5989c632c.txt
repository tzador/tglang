# This is a complex makefile that includes multiple targets, variables, and dependencies.

# Set compiler to gcc
CC = gcc

# Set compiler flags
CFLAGS = -c -Wall

# Set linker flags
LDFLAGS = -lm

# Define source files
SRC = main.c utils.c helper.c

# Define object files
OBJS = $(SRC:.c=.o)

# Define executable
EXECUTABLE = program

# Build target
all: $(SRC) $(EXECUTABLE)

# Compile source files into object files
$(OBJS): $(SRC)
	$(CC) $(CFLAGS) $(SRC)

# Link object files into executable
$(EXECUTABLE): $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) -o $@

# Clean target
clean:
	rm -f $(OBJS) $(EXECUTABLE)

# Other dependencies
dependencies: $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS)

# Install target
install: $(EXECUTABLE)
	cp $(EXECUTABLE) /usr/bin/
	rm -f $(EXECUTABLE)

# Uninstall target
uninstall:
	rm -f /usr/bin/$(EXECUTABLE)

# PHONY targets to prevent conflicts with files of the same name
.PHONY: all dependencies clean install uninstall
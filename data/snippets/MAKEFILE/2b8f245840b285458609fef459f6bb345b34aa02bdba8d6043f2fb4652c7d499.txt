# This makefile creates an executable file from source files in a directory

# Variable declaration
SRCDIR := src
BUILDDIR := build
TARGET := bin/myprogram
CC := gcc
CFLAGS := -Wall
LIBS = -lm

# Get the list of source files
SRC := $(wildcard $(SRCDIR)/*.c)

# Create a list of object files to be compiled
OBJ := $(patsubst $(SRCDIR)/%.c, $(BUILDDIR)/%.o, $(SRC))

# Rule to build the executable
$(TARGET): $(OBJ)
	$(CC) $(CFLAGS) $(LIBS) -o $(TARGET) $^

# Rule to compile each source file into an object file
$(BUILDDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAGS) $(LIBS) -c -o $@ $<

# Phony target to clean the build directory and the executable
.PHONY: clean
clean:
	$(RM) -r $(BUILDDIR) $(TARGET)
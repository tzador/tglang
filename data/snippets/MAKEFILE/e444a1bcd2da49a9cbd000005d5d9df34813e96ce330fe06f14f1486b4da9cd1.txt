# Declare a variable 'DIR' and assign it the value 'src'
DIR = src
# Declare a variable 'OBJECTS' and concatenate the values of 'DIR' and all '.o' files within 'DIR'
OBJECTS = $(DIR) $(wildcard $(DIR)/*.o)
# Declare a variable 'TARGET' and assign it the value 'main'
TARGET = main
# Use the 'vpath' rule to specify a search path for the 'vpath_test.c' file
vpath %.c $(DIR)
# Create a rule to make the 'TARGET' file by linking all '.o' files in 'OBJECTS'
$(TARGET): $(OBJECTS)
    gcc -o $(TARGET) $(OBJECTS)
# Create a rule for all '.o' files within 'DIR' to be compiled using the 'CFLAGS' variable and the '.c' files in 'DIR'
$(DIR)/%.o: $(DIR)/%.c
    gcc $(CFLAGS) -c -o $@ $<
# Declare a phony target 'clean' to remove all '.o' files and the 'TARGET' file when called
.PHONY: clean
clean:
    rm -f $(OBJECTS) $(TARGET)
# Create a target called 'all' that builds all the dependencies for the 'TARGET' file
all: $(TARGET)
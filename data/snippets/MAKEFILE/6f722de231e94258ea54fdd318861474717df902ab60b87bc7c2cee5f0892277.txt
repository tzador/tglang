# This is a MAKEFILE used to compile and build an executable program
# The first line declares the compiler to be used
CC = gcc

# Defining compiler flags
CFLAGS = -g -Wall -I

# Defining source files and output file 
SOURCES = main.c helper1.c helper2.c
EXECUTABLE = myprogram

# Creating object files from source files
OBJECTS = $(SOURCES:.c=.o)

# Targets and rules for building the executable
.PHONY: all
all: $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	# Creating the executable by linking all object files
	$(CC) $(OBJECTS) -o $@

	# Cleaning up temporary object files
	@rm -f $(OBJECTS)

# Rule for compiling each source file into its object file
%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)

# Cleaning up all object files and the executable
.PHONY: clean
clean:
	@rm -f $(EXECUTABLE) $(OBJECTS)
# Set compiler and flags
CC = gcc
CFLAGS = -Wall -Wextra -std=c99

# Define file names
EXEC = program.out
SRCS = main.c utility.c file_io.c # list of source files
OBJS := $(SRCS:.c=.o) # create list of objects from source files
HDRS = *.h # include all header files

# Default target
$(EXEC): $(OBJS) # target name and dependencies
	$(CC) $(CFLAGS) -o $@ $^ # compiler command to create executable

# Compile each source file into object file
%.o: %.c $(HDRS) # rule to generate each object file
	$(CC) $(CFLAGS) -c $< -o $@ # compiler command to create object file

# Make the executable and remove all object files
all: $(EXEC)
	rm -f $(OBJS)

# Don't remove object files automatically
.PRECIOUS: %.o

# Set a clean target to remove all generated files
clean:
	rm -f $(EXEC) $(OBJS)

# Specify phony targets (targets that don't create an output file)
.PHONY: all clean
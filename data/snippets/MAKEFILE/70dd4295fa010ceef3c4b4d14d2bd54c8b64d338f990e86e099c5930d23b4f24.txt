# This is a Makefile - a build automation tool used for compiling and linking source code files.

# The 'CC' variable specifies the compiler to be used.
CC = gcc

# The 'CFLAGS' variable specifies any additional flags to be passed to the compiler.
CFLAGS = -Wall -Wextra -std=c99

# The 'LIBS' variable specifies any external libraries to be linked during compilation.
LIBS = -lm

# The default target is 'all', which will build the executable 'my_program'.
all: my_program

# The 'my_program' target specifies the names of the object files to be linked to create the executable.
my_program: main.o helper.o
    $(CC) -o my_program main.o helper.o $(LIBS)

# The 'main.o' target specifies the source file 'main.c' to be compiled.
# The '<' signifies the dependency of 'main.o' on 'main.c'.
# The '$@' signifies the target name, in this case 'main.o'.
main.o: main.c
    $(CC) -c main.c $(CFLAGS) -o $@

# The 'helper.o' target specifies the source file 'helper.c' to be compiled.
# The '<' signifies the dependency of 'helper.o' on 'helper.c'.
# The '$@' signifies the target name, in this case 'helper.o'.
helper.o: helper.c
    $(CC) -c helper.c $(CFLAGS) -o $@

# The 'clean' target removes all object files and the executable.
clean:
    rm *.o my_program
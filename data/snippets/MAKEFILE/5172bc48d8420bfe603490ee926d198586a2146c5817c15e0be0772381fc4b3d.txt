# This makefile creates an executable file called "my_program" by
# compiling and linking all the necessary source code files
# and libraries.

# Define the compiler and flags
CC = gcc
CFLAGS = -Wall -O3

# Define the source files
SOURCES = main.c helper_functions.c

# Define the library directory and name
LIBDIR = ./lib
LIBRARY = libmylib.a

# Define the object files
OBJECTS = $(SOURCES:.c=.o)

# Define the target executable
TARGET = my_program

# Build the executable by compiling and linking
$(TARGET): $(OBJECTS)
	$(CC) -o $@ $^ -L$(LIBDIR) -lmylib

# Compile each source file into an object file
$(OBJECTS): $(SOURCES)
	$(CC) -c $(CFLAGS) $< -o $@

# Clean up the executable and object files
clean:
	rm -f $(TARGET) $(OBJECTS)

# Install the executable
install: $(TARGET)
	cp $(TARGET) /usr/local/bin/

# Uninstall the executable
uninstall:
	rm -f /usr/local/bin/$(TARGET)

# Declare the "clean" and "install" targets as phony, meaning they
# do not correspond to actual files
.PHONY: clean install
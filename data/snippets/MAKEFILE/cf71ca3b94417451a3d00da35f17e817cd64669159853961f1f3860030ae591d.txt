# This is a comment describing the purpose of the makefile

# Setting variables
CC = gcc # Compiler to be used
CFLAG = -Wall -g # Compilation flags
LIBS = -lm # Libraries needed for compilation
SRCDIR = src # Source code directory
OBJDIR = obj # Object file directory
BINDIR = bin # Executable file directory

# Collecting all source files
SRC = $(wildcard $(SRCDIR)/*.c) # Finds all .c files in source directory

# Creating object file names
OBJ = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SRC)) # Changes .c to .o for each source file

# Specify the make target and dependencies
all: directories $(BINDIR)/output 

# Creates necessary directories if they do not exist
directories:
	mkdir -p $(OBJDIR)
	mkdir -p $(BINDIR)

# Compiles object files from source files
$(OBJDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAG) -c $< -o $@ $(LIBS)

# Links object files and creates executable
$(BINDIR)/output: $(OBJ)
	$(CC) $(CFLAG) -o $@ $^ $(LIBS)

# Target for cleaning up object and executable files
clean:
	rm -rf $(OBJDIR) $(BINDIR)

# Target for cleaning up object files
cleanobj:
	rm -rf $(OBJDIR)
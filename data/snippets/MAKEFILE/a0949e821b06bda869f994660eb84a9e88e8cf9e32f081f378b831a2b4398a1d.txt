# This is a Makefile used for building and managing a project.

# Variables
CC = gcc
CFLAGS = -Wall -g
SRCDIR = src
OBJDIR = obj
BINDIR = bin
TARGET = app
SOURCES = $(wildcard $(SRCDIR)/*.c)
OBJECTS = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SOURCES))

# phony targets - do not match any file names
.PHONY: all clean

# default target
all: $(TARGET)

# rule to link object files into the executable
$(BINDIR)/$(TARGET): $(OBJECTS)
# @ represents the target
# $? will be replaced by files that are newer than target
# $@ will be replaced by the target itself
	$(CC) $(CFLAGS) $? -o $@

# rule to compile C source files into object files
$(OBJDIR)/%.o: $(SRCDIR)/%.c
# $< will be replaced by the first dependency
	$(CC) $(CFLAGS) -c $< -o $@

# create directories if they do not exist
$(OBJDIR) $(BINDIR):
	mkdir -p $@

# target to clean up generated files
clean:
	rm -rf $(OBJDIR)
	rm -rf $(BINDIR)

# ignore errors when deleting directories
IGNORE := $(shell mkdir -p $(OBJDIR) $(BINDIR))

# To use this Makefile, place it in the same directory as your source code and run 'make'.
# The default target will build the executable named "app" from all C source files in the "src" directory,
# and place the object files in the "obj" directory and the executable in the "bin" directory.

# To clean up the generated files, run 'make clean'.
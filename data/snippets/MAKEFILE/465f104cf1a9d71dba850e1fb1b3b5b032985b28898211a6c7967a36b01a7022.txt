# This Makefile creates an executable from multiple source files
# The default target is "all" and will create the executable "myprogram"

# Define compiler to use
CC = g++

# Define compiler flags
CFLAGS = -Wall -g

# Define source files
SOURCES = main.cpp func1.cpp func2.cpp

# Define header files
HEADERS = func1.h

# Define object files
OBJECTS = main.o func1.o func2.o

# Define target executable
TARGET = myprogram

# Default target (build all)
all: $(TARGET)

# Compiling each source file into object files
# Add the "-c" flag to compile only, without linking
%.o: %.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

# Linking all object files into final executable
$(TARGET): $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@

# Clean up after build
clean:
	-rm -f *.o $(TARGET)

# Run the compiled program
run:
	./$(TARGET)
# Makefile for a project

# Variable for compiler
CC = gcc

# Compiler flags
CFLAGS = -Wall -c

# Directories
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

# Sources
SOURCES := $(wildcard $(SRC_DIR)/*.c)
# Objects
OBJECTS := $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SOURCES))

# Output
OUT = $(BIN_DIR)/project

# Default target
all: $(BIN_DIR) $(OBJ_DIR) $(OUT)

# Create directories
$(BIN_DIR):
  mkdir -p $(BIN_DIR)
$(OBJ_DIR):
  mkdir -p $(OBJ_DIR)

# Compile object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
  $(CC) $(CFLAGS) $< -o $@

# Link object files to executable
$(OUT): $(OBJECTS)
  $(CC) $^ -o $@

# Clean build files
clean:
  rm -rf $(BIN_DIR)
  rm -rf $(OBJ_DIR)
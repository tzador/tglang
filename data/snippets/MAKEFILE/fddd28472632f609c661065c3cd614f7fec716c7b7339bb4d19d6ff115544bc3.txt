# This makefile creates a program called "main"

# Variable definition for compiler (GNU GCC)
CC = gcc

# Variable definition for compiler flags
CFLAGS = -Wall -g -std=c99

# Variable definition for source files
SOURCES = main.c foo.c bar.c

# Variable definition for object files
OBJECTS = $(SOURCES:.c=.o)

# Variable definition for header files
HEADERS = foo.h bar.h

# Rule to compile all source files into object files
# Uses automatic variable $< to represent source file
# Uses automatic variable $@ to represent target file (object file)
%.o: %.c $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to compile all object files into executable "main"
# Uses automatic variable $^ to represent all prerequisites (all object files)
# Uses automatic variable $@ to represent target file (executable)
main: $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@

# Rule to clean up generated files
clean:
	rm -f $(OBJECTS) main
# This is a sample makefile with complex commands

# Variable for the compiler
CC=gcc 

# Variable for compiler flags
CFLAGS=-Wall -g 

# Target to compile the main file
main: main.c
	 $(CC) $(CFLAGS) -o main main.c

# Target to compile the helper functions
helpers.o: helpers.c helpers.h
	$(CC) $(CFLAGS) -c -o helpers.o helpers.c

# Target to compile the sorting algorithms
sorting.o: sorting.c sorting.h
	$(CC) $(CFLAGS) -c -o sorting.o sorting.c

# Target to link all the object files and create an executable
all: helpers.o sorting.o
	$(CC) $(CFLAGS) -o program main.o helpers.o sorting.o

# Target to clean all the object files and the executable
clean:
	rm -f *.o program

# Target to run the program
run:
	./program

# Target to show available commands
help:
	@echo "Available commands:"
	@echo "main - compile the main file"
	@echo "all - compile all the necessary files and link them"
	@echo "clean - clean all the object files and the executable"
	@echo "run - run the program"
	@echo "help - show available commands"
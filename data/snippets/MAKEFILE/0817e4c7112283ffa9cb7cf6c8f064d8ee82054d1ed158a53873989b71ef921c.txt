# This Makefile uses variables and conditional statements to compile a C++ program
# The target is the executable "myprog"
# The source files are "main.cpp" and "functions.cpp" located in the "src" directory
# The header file "functions.hpp" is also located in the "src" directory

# Set compiler variables
CXX = g++ 
CPPFLAGS = -c -Wall 
LDFLAGS = -L/usr/lib
LDLIBS = -lstdc++

# Set source and object file variables
SOURCES = src/main.cpp src/functions.cpp 
OBJECTS = $(SOURCES:%.cpp=%.o)

# Define target and dependencies
myprog: $(OBJECTS)
	$(CXX) $(LDFLAGS) $(OBJECTS) $(LDLIBS) -o $@

# Rule for compiling source files into object files
%.o: %.cpp
	$(CXX) $(CPPFLAGS) $< -o $@

# Conditional statement for compiling on different platforms
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
	CPPFLAGS += -DLINUX
endif
ifeq ($(UNAME_S),Darwin)
	CPPFLAGS += -DOSX
endif

# Phony target for cleaning up object files
.PHONY: clean
clean:
	rm -f $(OBJECTS)
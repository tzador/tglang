# This is a comment
#
# Makefile for C program
# 
# Compiler
CC = gcc
# Compiler flags
CFLAGS = -c -Wall
# Executable name
EXECUTABLE = program
# Source directory for .c files
SRC_DIR = src
# Object directory for .o files
OBJ_DIR = obj
# Source files
SRCS = $(wildcard $(SRC_DIR)/*.c)
# Object files
OBJS = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRCS))

# This target creates the executable
all: $(OBJS)
	@echo "Linking object files..."
	@test -d bin || mkdir bin
	@$(CC) $(OBJS) -o bin/$(EXECUTABLE)

# This target compiles all .c files into .o files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@echo "Compiling $<..."
	@test -d $(OBJ_DIR) || mkdir $(OBJ_DIR)
	@$(CC) $(CFLAGS) -Iinclude $< -o $@

# This target deletes all .o files and the executable
clean:
	@echo "Cleaning up..."
	@test -d $(OBJ_DIR) && rm -r $(OBJ_DIR) || true
	@test -d bin && rm -r bin || true

# This target runs the program
run:
	@echo "Running $(EXECUTABLE)..."
	@bin/$(EXECUTABLE)

# This target creates a tar file of the source code
tar:
	@echo "Creating tar file..."
	@tar -cvzf $(EXECUTABLE).tar.gz Makefile $(SRC_DIR) $(OBJ_DIR) include
# Makefile for complex project
# Variables
CC = gcc
CFLAGS = -Wall -g
LIBDIR = lib
INCLUDEDIR = includes
BUILDDIR = build
TARGET = program
SRCDIRS := $(shell find src -type d)
INCDIRS := $(INCLUDEDIR) $(SRCDIRS) # includes all directories under src
LIBS = -lm
# Build objects from source files
OBJS := $(shell find src -name '*.c' -printf '$BUILDDIR/%.o\n' | sed 's/src\///g') 
# targets and dependencies
.PHONY: all clean
all: $(TARGET)
$(TARGET): $(OBJS)
  $(CC) $(CFLAGS) -o $@ $^ $(LIBS) # generates executable from objects
$(OBJS): $(BUILDDIR)/%.o: src/%.c #generates object files from source files
  $(CC) $(CFLAGS) -c $< -o $@ -I $(INCDIRS) # compiles source file into object file
clean:
  rm -rf $(BUILDDIR)/*.o $(TARGET) # removes all object files and executable
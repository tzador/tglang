## This code snippet creates a Makefile for a C++ project
## It includes compilation, linking, and cleaning rules

# Define variables
CC = g++
CFLAGS = -c -Wall
LFLAGS = -Wall
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin
SRC = $(wildcard $(SRC_DIR)/*.cpp)
OBJ = $(SRC:$(SRC_DIR)/%.cpp=$(OBJ_DIR)/%.o)
BIN = $(BIN_DIR)/output

# Default make rule
all: $(BIN)

# Rule for compiling source files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CC) $(CFLAGS) $< -o $@

# Rule for linking object files into executable
$(BIN): $(OBJ)
	$(CC) $(LFLAGS) $^ -o $@

# Rule for cleaning all generated files and directories
clean:
	rm -f $(OBJ) $(BIN_DIR)/*
	rmdir $(OBJ_DIR) $(BIN_DIR)

# Phony targets to prevent conflicts with file names
.PHONY: all clean
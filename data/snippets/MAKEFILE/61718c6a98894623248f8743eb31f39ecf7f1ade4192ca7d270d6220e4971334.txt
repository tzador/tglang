# Set compiler flags
CC = gcc

# Set linker flags
LDFLAGS = -lm

# Set source file directory
SRC_DIR = src

# Set object file directory
OBJ_DIR = obj

# Set binary file directory
BIN_DIR = bin

# Create list of source files
SRC = $(shell find $(SRC_DIR) -name '*.c')

# Create list of object files
OBJ = $(SRC:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

# Set executable name
TARGET = $(BIN_DIR)/myprogram

# Default target for make command
.PHONY: default
default: $(TARGET)

# Compile source files into object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) -c $< -o $@

# Link object files into executable
$(TARGET): $(OBJ)
	$(CC) $^ -o $@ $(LDFLAGS)

# Clean up created files
.PHONY: clean
clean:
	rm -f $(OBJ) $(TARGET)
	
# Phony target to run program
.PHONY: run
run:
	./$(TARGET)
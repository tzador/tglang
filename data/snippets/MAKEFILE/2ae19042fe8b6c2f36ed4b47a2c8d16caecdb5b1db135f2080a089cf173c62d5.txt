# This is a makefile designed to compile and link a C++ project
CC = g++ # compiler variable
CFLAGS = -Wall -c # flags for compiling
LFLAGS = -Wall -o # flags for linking
ODIR = obj # directory for object files
BDIR = bin # directory for binary files
SRCDIR = src # directory for source files
SRCFILES = $(wildcard $(SRCDIR)/*.cpp) # wildcard function to get all source files
OBJFILES = $(patsubst $(SRCDIR)/%.cpp,$(ODIR)/%.o,$(SRCFILES)) # pattern substitution to get list of object files

# default target to run when no target is specified
all: $(BDIR)/project_name

# target for building the binary file
$(BDIR)/project_name: $(OBJFILES)
	$(CC) $(LFLAGS) $@ $^

# pattern rule for compiling C++ source files
$(ODIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(CFLAGS) $< -o $@

# clean target to remove object and binary files
clean:
	rm -f $(OBJFILES) $(BDIR)/project_name

# PHONY target to ensure a target named 'clean' is not accidentally classified as a file
.PHONY: clean
# This is a comment line in the MAKEFILE
# It is used to provide context or explanations for a specific section of code

# Variable declaration
# Variables are used to store values that can be referenced later on in the code
# They are denoted by a variable name, followed by an equal sign and the value assigned to it
# In this example, we declare two variables, 'SOURCE_FILES' and 'OBJECTS'
# 'SOURCE_FILES' stores a list of source code files, while 'OBJECTS' will store the compiled object files

SOURCE_FILES = main.cpp functions.cpp other_files.cpp
OBJECTS = main.o functions.o other_files.o

# Rules
# Rules are a set of instructions that tell the Makefile how to create a target file
# A rule is defined by its target, followed by a colon and its prerequisites (dependencies)
# In this example, we define two rules: one for compiling the source code into object files, and one for linking the object files into an executable

.o:.cpp
	g++ -c $< -o $@

app:$(OBJECTS)
	g++ $(OBJECTS) -o app

# Targets
# Targets are the final output files that the Makefile will create
# In this example, we specify the 'app' target, which depends on the 'OBJECTS' variable and will be created by executing the 'app' rule

app:$(OBJECTS)

# Phony targets
# Phony targets are used when a target name does not correspond to an actual file
# They are typically used to run a specific set of commands, regardless of whether the target file already exists or not
# In this example, we specify a 'clean' target, which will clean up all the generated object files and the executable when executed

.PHONY: clean
clean:
	rm -rf $(OBJECTS) app

# Conditional statements
# Conditional statements are used to conditionally execute a set of commands, based on a certain condition or value 
# In this example, we use the 'ifeq' statement to check if the 'DEBUG' variable has been defined and has the value '1'
# If the condition is met, we add the '-g' flag to the compiler, which enables debugging symbols to be included in the executable

DEBUG = 1
ifeq ($(DEBUG),1)
	CXXFLAGS += -g
endif
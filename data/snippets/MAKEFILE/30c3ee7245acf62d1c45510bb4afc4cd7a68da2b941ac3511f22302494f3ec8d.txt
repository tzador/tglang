# This is a Makefile that shows how to compile a C program and create an executable.
# The following code snippet includes variables, targets, and commands.

# Define the CC and CFLAGS variables
CC=gcc
CFLAGS=-Wall -g

# Define the target for the executable file
TARGET=program

# Define the source files
SOURCES=main.c foo.c bar.c

# Define an object file for each source file
OBJECTS=$(SOURCES:.c=.o)

# Define the target for the all rule
all: $(TARGET)

# Define the target for the executable file
$(TARGET): $(OBJECTS)
	$(CC) $(CFLAGS) -o $@ $(OBJECTS)

# Define the target for each object file
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Define clean target to remove all object files and the executable
clean:
	rm -f $(OBJECTS) $(TARGET)

# Define phony target to avoid conflicts with files with the same names as targets
.PHONY: all clean
# Define variables
TARGET = program
SRCDIR = src
ODIR = obj
BINDIR = bin
IDIR = include
CC = gcc
CFLAGS = -I$(IDIR) -Wall

# List source files
_SRCS = main.c helper.c foo.c bar.c
SRCS = $(patsubst %,$(SRCDIR)/%,$(_SRCS))

# List object files
_OBJS = main.o helper.o foo.o bar.o
OBJS = $(patsubst %,$(ODIR)/%,$(_OBJS))

# Compile target program
$(BINDIR)/$(TARGET): $(OBJS)
	$(CC) -o $@ $^ $(CFLAGS)

# Compile source files into object files
$(ODIR)/%.o: $(SRCDIR)/%.c
	$(CC) -c -o $@ $< $(CFLAGS)

# Add 'clean' target for removing object and binary files
.PHONY: clean
clean:
	rm -f $(ODIR)/*.o $(BINDIR)/$(TARGET)

# Add 'all' target for compiling all source files
.PHONY: all
all: $(BINDIR)/$(TARGET)

# Add 'run' target for compiling and running target program
.PHONY: run
run: $(BINDIR)/$(TARGET)
	./$(BINDIR)/$(TARGET)
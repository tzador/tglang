# This is a makefile
## Setting variables
# Assigning a value to the variable 'CC'
CC=clang

# Declaring a list variable 'SRC'
SRC = main.c helper_functions.c

# Defining a macro 'DEBUG'
#
# By prefixing $(DEBUG), we can easily
# switch debug mode on and off when compiling.
# To enable debug mode, run 'make DEBUG=1'
# To disable debug mode, run 'make DEBUG=0'
DEBUG = #-DDEBUG=$(D)

# To specify where the compiled files will be placed,
# we use the variable 'BIN_DIR'
BIN_DIR = bin

# Declaring a variable 'CFLAGS'
#
# -Wall enables all warnings
# -g enables debugging symbols to be generated
# -I specifies the location of header files,
# in this case, the current directory
CFLAGS = -Wall -g -I.

## Rules
# 'all' is a phony target that will be executed whenever
# 'make' is run without any target specified.
.PHONY: all
all: $(BIN_DIR)/program

# '$@' refers to the target name,
# '$^' refers to the names of all prerequisites
$(BIN_DIR)/program: $(SRC)
	$(CC) $(DEBUG) $(CFLAGS) $^ -o $@

# 'clean' is another phony target that can be executed to
# remove all compiled files and start fresh.
.PHONY: clean
clean:
	rm -rf $(BIN_DIR)/*
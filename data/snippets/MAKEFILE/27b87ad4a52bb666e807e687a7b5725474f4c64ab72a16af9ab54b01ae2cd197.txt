# Specifies the compiler
CC=gcc
# Specifies the compiler flags
CFLAGS=-Wall -g -std=c99
# Specifies the target executable
TARGET=my_program

# Specifies the source files
SRCS=my_program.c helper_functions.c main.c

# Specifies the object files
# Uses pattern-matching to generate object files for each source file
OBJS=$(SRCS:.c=.o)

# Specifies the make directory
MAKE_DIR=build

# Specifies the dependency files
DEPS=$(SRCS:.c=.d)

# Specifies the linker flags
LDFLAGS=-lm

# Specifies the phony targets
.PHONY: all clean

# Default target - builds the executable
all: $(TARGET)

# Generates dependency files for each source file
$(DEPS): %.d: %.c
	$(CC) -MM $(CPPFLAGS) $< > $@

# Includes the dependency files
-include $(DEPS)

# Generates object files using the object files
$(OBJS): $(SRCS)
	$(CC) $(CFLAGS) -c $^

# Builds the executable using the object files
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# Creates the make directory if it does not exist
$(shell mkdir -p $(MAKE_DIR))

# Cleans up generated files
clean:
	$(RM) $(TARGET) $(MAKE_DIR)/*.o $(MAKE_DIR)/*.d
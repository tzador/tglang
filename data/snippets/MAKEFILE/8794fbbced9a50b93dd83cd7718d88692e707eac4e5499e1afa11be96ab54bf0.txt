# Declare variables for compiler and compiler flags
CC = gcc 
CFLAGS = -Wall -g -O2 

# Specify the source files and output binary
SRC = main.c utils.c hello.c
BIN = myprogram

# Define a phony target for the build process
.PHONY: $(BIN)

# Target that depends on the object files
$(BIN): $(SRC:.c=.o)
	$(CC) $^ -o $@

# Pattern rule for compiling source files into object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Target for cleaning up the object files and binary
clean:
	rm -f *.o $(BIN)

# Target for installing the program
install:
	cp $(BIN) /usr/local/bin/

# Target for uninstalling the program
uninstall:
	rm -f /usr/local/bin/$(BIN)

# Declare variables for testing tools and flags
TEST_CC = gcc 
TEST_CFLAGS = -Wall -g -O2 -lcunit
TEST_SRC = test.c utils.c hello.c
TEST_BIN = myprogram_test

# Target for compiling and running tests
test: $(TEST_SRC:.c=.o)
	$(TEST_CC) $^ $(TEST_CFLAGS) -o $(TEST_BIN)
	./$(TEST_BIN)

# Target for running code coverage
coverage:
	gcov -o . $(SRC)
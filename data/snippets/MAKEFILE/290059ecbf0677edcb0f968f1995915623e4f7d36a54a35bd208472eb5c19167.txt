# This is a Makefile used to build and compile a C++ project using gcc

# Variable for the C++ compiler
CXX = g++

# Flags for compiling and linking
CXXFLAGS = -Wall -c -g
LDFLAGS = -Wall

# Directories for source files, object files, and executables
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

# List of source files
SRC = $(wildcard $(SRC_DIR)/*.cpp)

# List of object files, by replacing .cpp extension with .o
OBJ = $(patsubst $(SRC_DIR)/%.cpp, $(OBJ_DIR)/%.o, $(SRC))

# Name of the final executable
EXECUTABLE = $(BIN_DIR)/program

# Build rule for creating the executable
all: $(EXECUTABLE)

# Build rule for compiling each individual source file into an object file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CXX) $(CXXFLAGS) $< -o $@

# Build rule for linking all object files into the final executable
$(EXECUTABLE) : $(OBJ)
	$(CXX) $(LDFLAGS) $^ -o $@

# Clean rule for removing all object and executable files
clean:
	rm -rf $(OBJ_DIR)/* $(BIN_DIR)/*

# Phony targets for avoiding conflicts with files named "all" and "clean"
.PHONY: all clean
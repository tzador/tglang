# This section checks if the OS is Mac or Linux
# If it is, it sets the CC (Compiling Command) to gcc
ifeq ($(shell uname), Darwin) # checks for Mac
    CC = gcc
else ifeq ($(shell uname), Linux) # checks for Linux
    CC = gcc
endif

# This section sets the default target to be executed when `make` is called
.PHONY: all
all: main.o other_file.o
	$(CC) main.o other_file.o -o program  # compiles the files into a program called `program`
	./program  # executes the program

# This section defines a target to compile the main file
main.o: main.c
	$(CC) -c main.c -o main.o  # compiles main.c and creates an object file called `main.o`

# This section defines a target to compile the other file
other_file.o: other_file.c
	$(CC) -c other_file.c -o other_file.o  # compiles other_file.c and creates an object file called `other_file.o`

# This section deletes the executable and object files when `make clean` is called
.PHONY: clean
clean:
	rm -rf *.o program  # removes all object files and the executable program
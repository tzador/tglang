# Define library names
LIBS = -lm

# Define compiler options
CFLAGS = -Wall -O3

# Define source file directory
SRCDIR = src

# Define object file directory
OBJDIR = obj

# Define executable directory
BINDIR = bin

# Define target executable name
EXEC = program

# Get all source files
SRC = $(wildcard $(SRCDIR)/*.c)

# Get all object files
OBJ = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SRC))

# Build all object files
$(OBJDIR)/%.o: $(SRCDIR)/%.c
	gcc $(CFLAGS) -c $< -o $@

# Link all object files
$(BINDIR)/$(EXEC): $(OBJ)
	gcc $(CFLAGS) $^ $(LIBS) -o $@

# Define "all" target
all: $(BINDIR)/$(EXEC)

# Clean object files
clean:
	rm -f $(OBJDIR)/*.o

# Clean executable
clean_exec:
	rm -f $(BINDIR)/$(EXEC)

# Clean all
clean_all: clean clean_exec

# Define "run" target
run:
	./$(BINDIR)/$(EXEC)

# Define "debug" target
debug:
	gcc -g $(CFLAGS) $(SRC) $(LIBS) -o $(BINDIR)/$(EXEC)-debugger

# Define default make target as "all"
default: all
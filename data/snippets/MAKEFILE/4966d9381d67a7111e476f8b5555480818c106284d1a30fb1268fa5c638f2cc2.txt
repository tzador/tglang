# This MAKEFILE is used for compiling and linking a C++ project on Linux
# Set compiler flags and linker options
CC = g++
CFLAGS = -Wall -std=c++11
LFLAGS = 

# Define target and source files
TARGET = main
SOURCES = main.cpp funcs.cpp

# Main rule to build the executable
$(TARGET): $(SOURCES)
	$(CC) $(CFLAGS) $(SOURCES) -o $(TARGET)

# Rule for compiling source files
# Uses automatic variables to capture source file names
# and generate corresponding object file names
# Recipe to compile each source file and generate its object file
# -MMD flag to generate dependancy files
%.o: %.cpp
	$(CC) $(CFLAGS) -MMD -c $< -o $@

# Clean rule to remove object files, exe file and dependancy files
.PHONY: clean
clean:
	rm -f *.o *.d $(TARGET)

# Include dependancy files in the MAKEFILE
# These files contain information on header files included by source files
-include $(SOURCES:.cpp=.d)
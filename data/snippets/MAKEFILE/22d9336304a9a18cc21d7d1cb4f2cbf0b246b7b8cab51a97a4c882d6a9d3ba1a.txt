myTarget: otherTarget
#this is a target called myTarget that depends on the target otherTarget

	@echo "Building myTarget..."
#this command will print the message "Building myTarget..." to the console

myTarget2: anotherTarget
#this is a target called myTarget2 that depends on the target anotherTarget

	@echo "Building myTarget2..."
#this command will print the message "Building myTarget2..." to the console

%.o: %.c
#this is a pattern rule that states all .o files depend on their corresponding .c files

	@echo "Compiling $@..."
#this command will print the message "Compiling (file name)..."

	$(CC) -c $< -o $@
#this command will use the C compiler specified in the variable "CC" to compile the .c file ($<) and output the object file ($@)

myProgram: file1.o file2.o
#this is a target called myProgram that depends on the object files file1.o and file2.o

	@echo "Linking myProgram..."
#this command will print the message "Linking myProgram..." to the console

	$(CC) $^ -o $@
#this command will use the C compiler specified in the variable "CC" to link together the object files ($^) and output the executable file ($@)

.PHONY: clean
#this is a .PHONY target, which means it does not correspond to a file

clean:
#this is a target called clean, used to clean up files after compilation

	@echo "Cleaning up..."
#this command will print the message "Cleaning up..." to the console

	rm -f *.o myTarget myTarget2 myProgram
#this command will remove all .o files, myTarget, myTarget2, and myProgram from the current directory
# This is a complex makefile that compiles multiple source files and outputs an executable program

# Set variables for compiler and linker
CC = g++
LD = g++

# Specify compiler flags
CFLAGS = -Wall -g -std=c++11

# Specify source files
SOURCES = main.cpp helper_functions.cpp classA.cpp classB.cpp

# Convert sources into object files
OBJS = $(SOURCES:.cpp=.o)

# Specify output executable name
TARGET = program

# Default rule, which runs if no specific target is given
# The phony target ".PHONY" ensures that the rule is always run
# regardless of whether a file with that name exists or not
.PHONY: all
all: $(OBJS)
	$(LD) $(OBJS) -o $(TARGET)

# Rule to generate object files from source files
%.o: %.cpp
	$(CC) $(CFLAGS) -c $<

# Rule to clean up object files and executable
.PHONY: clean
clean:
	rm -f $(OBJS) $(TARGET)
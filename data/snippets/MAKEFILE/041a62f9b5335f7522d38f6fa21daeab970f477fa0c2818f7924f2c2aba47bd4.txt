# This is a comment in a Makefile
# A Makefile typically contains a set of rules, each consisting of a target, dependencies, and commands.
# Targets are typically filenames representing files that need to be generated, while dependencies are the files that are used to generate the target.
# Commands are instructions for generating the target file.

# Target for 'build' rule - this will be used to generate the 'output' file
# 'output' is the name of the target and 'source1 source2' are the dependencies, meaning the 'output' file will be generated using 'source1' and 'source2'
output: source1 source2
    # Commands to generate the target file.
    # In this case, the 'cat' command will concatenate the contents of 'source1' and 'source2' and write into the 'output' file.
    cat source1 source2 > output
# By specifying 'output' as a dependency for 'clean' rule, the 'clean' rule will only run if the 'output' file exists.
# This ensures that the 'clean' rule won't run unnecessarily if 'build' rule was never executed.
clean: output
    # Commands to clean up the 'output' file.
    # In this case, the 'rm' command will remove the 'output' file.
    rm output
# 'all' is a special target that will run all rules specified as prerequisites.
# In this case, 'all' will run 'build' rule first, and then 'clean' rule.
all: build clean

# This is a 'phony' rule, which doesn't represent an actual file.
# It is used to group together multiple commands.
# The first command will display a message, and the second command will run the 'all' rule.
.PHONY: run
run:
    # Display a message before running 'all' rule.
    @echo "Running 'all' rule..."
    # Run 'all' rule.
    @$(MAKE) all
# This is a Makefile that compiles multiple source files

# Define the compiler to be used
CC = gcc

# Set compiler flags
CFLAGS = -Wall -g

# List of source files to be compiled
SRCS = main.c helper_functions.c structs.c

# Define the dependencies for each source file
# $^ = all dependencies
# $@ = the target file

# Create object files from source files
%.o: %.c
    $(CC) $(CFLAGS) -c $^ -o $@

# Target to build the executable file
TARGET = program.exe

# Rules for creating the executable file
$(TARGET): $(SRCS:.c=.o)
    $(CC) $(CFLAGS) $^ -o $@

# Clean up object files and executable file
clean:
    rm -f *.o $(TARGET)
    
# Target to generate object files only
objects:
    @echo "Creating object files..."
    
# Target to compile only without linking
compile: $(SRCS:.c=.o)
    @echo "Compiling source files..."

# Target to print a message
message:
    @echo "Hello World!"
    
# Specify the order in which targets should be executed
.PHONY: all clean objects compile message
all: clean objects compile $(TARGET) message
# Default target for makefile is the first target
.DEFAULT_GOAL := build


# Compiler options and flags
CC := gcc
CFLAGS := -Wall -Wextra -Werror
CPPFLAGS := -I include
LDFLAGS := -L lib
LDLIBS := -lm


# Targets for building executable and libraries
BIN := bin/main
LIB_SOURCES := src/lib1.c src/lib2.c src/lib3.c
LIB_OBJECTS := $(LIB_SOURCES:.c=.o)
LIB := lib/libmylib.a


# Target for building executable
.PHONY: build
build: $(BIN)


# Target for linking executable
$(BIN): src/main.c $(LIB)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $< $(LDLIBS)

# Target for building library
$(LIB): $(LIB_OBJECTS)
	ar rcs $@ $^


# Pattern rule for compiling object files
%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<


# Target for cleaning up build and library files
.PHONY: clean
clean:
	rm -rf $(BIN) $(LIB) $(LIB_OBJECTS)


# Target for running executable with default arguments
.PHONY: run
run:
	./$(BIN) input.txt output.txt


# Target for running executable with custom arguments
.PHONY: run-custom
run-custom:
	./$(BIN) custom_input.txt custom_output.txt


# Target for testing functionality
.PHONY: test
test: build run
	diff output.txt expected_output.txt


# Target for generating documentation using doxygen
.PHONY: docs
docs:
	doxygen Doxyfile


# Target for packaging project into tarball
.PHONY: package
package:
	tar -czvf project.tar.gz src include lib Makefile Doxyfile
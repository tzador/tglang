# This is a Makefile for compiling a C++ project

# Setting compiler flags and options
CXX = g++
CXXFLAGS = -Wall -g -std=c++11

# Defining folders for source code, object files, and executables
SRCDIR = src
OBJDIR = obj
BINDIR = bin

# List of source files
SRCS = $(wildcard $(SRCDIR)/*.cpp)

# Converting source files to object files
# Note: the '@mkdir -p' command creates the obj and bin folders if they don't already exist
OBJS = $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SRCS))
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@mkdir -p $(OBJDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Target for creating the final executable
# Note: the '@mkdir -p' command creates the obj and bin folders if they don't already exist
$(BINDIR)/myprogram: $(OBJS)
	@mkdir -p $(BINDIR)
	$(CXX) $(CXXFLAGS) $^ -o $@

# Target for cleaning up object files and executables
.PHONY: clean
clean:
	rm -rf $(OBJDIR) $(BINDIR)

# Default target, which depends on the final executable
.PHONY: all
all: $(BINDIR)/myprogram
# This Makefile creates a static library by compiling and linking object files
# https://www.gnu.org/software/make/

# Set compiler and flags
CC = gcc
CFLAGS = -c -Wall

# Set source directory
SOURCES_DIR = src

# Set header directory
INCLUDE_DIR = include

# Set output directory
BUILD_DIR = build

# Set library directory
LIBRARY_DIR = lib

# Create list of source files
SRCS = $(wildcard $(SOURCES_DIR)/*.c)

# Create list of header files
HDRS = $(wildcard $(INCLUDE_DIR)/*.h)

# Create list of object files by replacing .c extension with .o
OBJS = $(patsubst $(SOURCES_DIR)/%.c, $(BUILD_DIR)/%.o, $(SRCS))

# Set name of library
LIB_NAME = mylib

# Set final output path for library
LIB_PATH = $(LIBRARY_DIR)/lib$(LIB_NAME).a

# Default make target
.PHONY: all

# Build all objects and then library
all: $(OBJS)
	ar rcs $(LIB_PATH) $(OBJS)

# Target for building object files
.PHONY: objects

# Compiles each source file into an object file in the build directory
$(BUILD_DIR)/%.o : $(SOURCES_DIR)/%.c $(HDRS)
	$(CC) $(CFLAGS) $< -o $@

# Clean build directory by removing all object files
.PHONY: clean

# Deletes all object files in the build directory
clean:
	rm -f $(BUILD_DIR)/*.o
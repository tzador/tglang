# Listing all files with a .cpp extension in the current directory and its subdirectories
files := $(shell find . -type f -name '*.cpp')

# Defining a variable for the compiler and compiler flags
CC := g++
CFLAGS := -Wall -O2

# Defining a rule that compiles each source file into an object file
%.o: %.cpp
	$(CC) $(CFLAGS) -c $< -o $@ 

# Defining a rule that links all object files and creates an executable
all: $(patsubst %.cpp,%.o,$(files))
	$(CC) $^ -o main

# Defining a rule that cleans up all object files and the executable
clean:
	rm -f *.o main

# Making the 'all' rule the default rule to execute when 'make' command is run
.PHONY: all
.DEFAULT_GOAL := all
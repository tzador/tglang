# This is a sample makefile for compiling a C program #

CC = gcc 					# sets the compiler to gcc #

CFLAGS = -Wall -g 			# sets compiler flags for warning and debugging #

TARGET = myprogram 		# sets the name of the executable #

SRCS = main.c func1.c func2.c 	# specifies the source files #

OBJS = $(SRCS:.c=.o) 		# creates a list of object files generated from the source files #

all: $(TARGET) 				# sets default target to compile all #

$(TARGET): $(OBJS) 			# specifies target dependencies #
	$(CC) $(CFLAGS) -o $(TARGET) $(OBJS) 	# compile command #

%.o: %.c 					# specifies rule for compiling individual source files #
	$(CC) $(CFLAGS) -c $< -o $@ 		# compile command #

.PHONY: clean 					# specifies a phony target that will not create a file #
clean: 						# specifies the clean target for removing object and executable files #
	rm -f $(OBJS) $(TARGET) 	# removes object and executable files #
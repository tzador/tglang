# This is a Makefile that will be used to compile a C program

# Define variables
CC = gcc # Compiler
CFLAGS = -g -Wall # Flags to pass to compiler
LDFLAGS = -lm # Flags to pass to linker
SOURCES = main.c util.c util.h # Source files
OBJECTS = main.o util.o # Object files
EXECUTABLE = program # Name of executable to be generated

# Rules for compiling
all: $(OBJECTS) # 'all' is the default target; it will be executed if no target is specified when calling make
	$(CC) $(OBJECTS) $(LDFLAGS) -o $(EXECUTABLE) # Compile and link all object files into executable

# Dependencies for object files
main.o: main.c util.h # main.o depends on main.c and util.h
	$(CC) $(CFLAGS) -c main.c -o main.o # Compile main.c into main.o

util.o: util.c util.h # util.o depends on util.c and util.h
	$(CC) $(CFLAGS) -c util.c -o util.o # Compile util.c into util.o

# Cleanup rule
clean:
	rm -f $(EXECUTABLE) $(OBJECTS) # Remove executable and object files when 'make clean' is called
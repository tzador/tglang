# This makefile automates the compilation and linking process for a C++ project
# It takes in source files from the 'src' directory and outputs an executable file in the 'bin' directory
# Variables for compiler and linker flags
CXXFLAGS = -std=c++11 -Wall	# compiler flags for C++ 11 standard and all warnings
LDFLAGS = -L/usr/lib			# linker flags for library directories
LDLIBS = -lm -lncurses		# libraries to link
# Variables for source files and output file
SRCS = src/main.cpp src/functions.cpp	# all source files
OBJS = $(SRCS:.cpp=.o)					# replace .cpp extension with .o for object files
EXEC = bin/my_app						# output executable file
# Default target: compile and link
all: $(EXEC)
# Compile source files to object files
%.o: %.cpp
	@echo 'Compiling $<'
	$(CXX) -c -o $@ $<
# Link object files to create executable
$(EXEC): $(OBJS)
	@echo 'Linking objects to $@'
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@ $^ $(LDLIBS)
# Clean up object files and executable
clean:
	@echo 'Cleaning up...'
	$(RM) $(OBJS) $(EXEC)
# This is a sample makefile demonstrating different commands and options

# Define variables
CC = gcc
CFLAGS = -Wall
OBJECTS = main.o helper.o

# Define targets and dependencies
all: program

program: $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@

main.o: main.c
	$(CC) $(CFLAGS) -c $< -o $@

helper.o: helper.c
	$(CC) $(CFLAGS) -c $< -o $@

# Define phony targets
.PHONY: clean run

clean:
	rm -rf $(OBJECTS) program

run:
	./program

# Define conditional targets
ifeq ($(OS),Windows)
	CLEAR = cls
else
	CLEAR = clear
endif

clear:
	$(CLEAR)

# Use functions
.PHONY: print print_upper

print:
	@echo "Hello, World!"

print_upper: 
	@$(call to_upper, "hello")
	# Output will be "HELLO"

# Define functions 
define to_upper
$(shell echo $(1) | tr '[:lower:]' '[:upper:]')
endef
# This is a Makefile for compiling a C++ project with multiple dependencies

# Specify the compiler to be used for compiling the code
CXX = g++

# Specify the compiler flags to be used
CXXFLAGS = -std=c++11 -Wall -g

# Specify the include directories
INCLUDES = -I ./include

# Specify the source files
SOURCES = main.cpp \
		  src/FileParser.cpp \
		  src/Logger.cpp \
		  src/DataStructure.cpp

# Specify the object files that will be generated
OBJECTS = $(SOURCES:.cpp=.o)

# Specify the target executable
EXECUTABLE = project

# Make the executable
$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $^ -o $@

# Make rule for each object file
%.o: %.cpp 
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

# Clean rule for removing all object files and the executable
clean:
	-rm -f $(OBJECTS) $(EXECUTABLE)

# Phony target for declaring non-file targets
.PHONY: all clean

# Default target, will make the executable and delete all object files after execution
all: $(EXECUTABLE)
	@$(MAKE) clean
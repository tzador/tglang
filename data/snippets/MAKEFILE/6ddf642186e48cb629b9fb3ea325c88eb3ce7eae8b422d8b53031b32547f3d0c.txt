# Variable declaration
SOURCES := $(wildcard src/*.c)
# Wildcard function to get all .c files in src directory

OBJECTS := $(SOURCES:.c=.o)
# Substitution reference to replace .c with .o in SOURCES variable

MAIN_OBJECT := main.o
# Defining a main object

EXE := program
# Defining executable name

# Default target
all: $(EXE)
# Target 'all' to build executable.

# Build rule
$(EXE): $(OBJECTS)
# Rule to build executable, depends on all the objects

	gcc -o $@ $(OBJECTS)
# Compile object files into executable 'program'

# Compile rule
%.o: %.c
# Rule to compile .c files into .o files

	gcc -c $< -o $@
# Compile command using $< and $@ for automatic variable substitution.

# Clean rule
clean:
# Rule to clean all .o and executable files.

	rm -f $(OBJECTS) $(EXE)
# Remove all .o and executable files.

.PHONY: clean
# PHONY target to avoid confusion between a file named 'clean' and the 'clean' rule.
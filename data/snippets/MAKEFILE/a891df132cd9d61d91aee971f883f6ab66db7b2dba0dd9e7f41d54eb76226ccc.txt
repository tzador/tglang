# This is a Makefile

# Declaring variables
SOURCE_FOLDER := src
HEADER_FOLDER := include
OBJECT_FOLDER := obj
TARGET_FOLDER := bin

HEADER_FILES := $(wildcard $(HEADER_FOLDER)/*.h)
SOURCE_FILES := $(wildcard $(SOURCE_FOLDER)/*.cpp)
OBJECT_FILES := $(patsubst $(SOURCE_FOLDER)/%.cpp, $(OBJECT_FOLDER)/%.o, $(SOURCE_FILES))

# Compiler and flags
CXX := g++
CXXFLAGS := -std=c++11 -Wall -I$(HEADER_FOLDER)

# Generate executable by linking object files
main: $(OBJECT_FILES)
	$(CXX) $(CXXFLAGS) -o $(TARGET_FOLDER)/main $^

# Compile object files from source files
$(OBJECT_FOLDER)/%.o: $(SOURCE_FOLDER)/%.cpp $(HEADER_FILES)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean command to remove object and executable files
.PHONY: clean
clean:
	rm -rf $(OBJECT_FOLDER)/* $(TARGET_FOLDER)/*

# Build and run executable
.PHONY: run
run: main
	./$(TARGET_FOLDER)/main

# Default target, build and run the executable
.PHONY: all
all:
	make clean
	make run
# This is a comment in a Makefile
# Define a variable named 'CC' and assign it the value 'gcc'
CC = gcc

# $@ - automatic variable that expands to the target name
# $^ - automatic variable that expands to the list of prerequisites
# $< - automatic variable that expands to the first prerequisite
# Define a generic rule for compiling C files, using the variables defined above
# and a preset compiler flags
%.o: %.c
    $(CC) -c -o $@ $^

# Define a variable named 'SRC' containing a list of C source files
SRC = main.c helper.c

# Define a variable named 'OBJ' which lists the object files to be generated
# by compiling the C source files
OBJ = $(SRC:.c=.o)

# Define a rule for building the executable named 'program'
program: $(OBJ)
    $(CC) -o $@ $^

# Define a rule for cleaning up the directory by removing all object and
# executable files
clean:
    rm -f $(OBJ) program

# Define a phony target named 'all' which is not associated with an actual file
.PHONY: all

# Define a default target named 'all', which depends on the 'program' executable
all: program
# Set the compiler to use
CC = gcc

# Set compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Define source files
SOURCES := $(wildcard *.c)

# Define object files
OBJECTS := $(SOURCES:.c=.o)

# Define executable name
EXECUTABLE := myprogram

# Default target for make
.PHONY: all
all: $(EXECUTABLE)

# Compile the source code into object files
# -c flag creates an object file
# -o specifies the name of the output file
# $< is the first item in the dependencies list (the source file)
# $@ is the target (the object file)
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Link the object files into an executable
# -o specifies the name of the output file
# $^ is the list of all the dependencies (the object files)
# $@ is the target (the executable)
$(EXECUTABLE): $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@

# Clean up generated files
.PHONY: clean
clean:
	rm -f $(EXECUTABLE) $(OBJECTS)
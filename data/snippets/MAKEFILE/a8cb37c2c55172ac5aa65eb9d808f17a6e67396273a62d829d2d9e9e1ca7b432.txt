# This is a Makefile for a simple program

# Define the compiler to use
CC=gcc
# Define the flags to use for compilation
CFLAGS=-Wall -Werror

# Specify the source files for the program
SOURCES=main.c helper.c

# Specify the object files to create from the source files
OBJECTS=$(SOURCES:.c=.o)

# Specify the name of the executable file to create
EXECUTABLE=my_program

# Default target, which will compile the program
all: $(EXECUTABLE)

# Target to compile the program
$(EXECUTABLE): $(OBJECTS)
	# Use the compiler to link the object files
	$(CC) $(OBJECTS) -o $(EXECUTABLE)

# Target to compile the source files into object files
$(OBJECTS): %o: %c
	# Use the compiler to compile the source files into object files
	$(CC) $(CFLAGS) -c $< -o $@

# Clean target, which will remove all object files and the executable
clean:
	rm -f $(OBJECTS) $(EXECUTABLE)
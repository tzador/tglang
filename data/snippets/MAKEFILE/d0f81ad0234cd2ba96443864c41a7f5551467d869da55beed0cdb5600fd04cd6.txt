# A makefile is a script used to build and manage software projects.
# This makefile creates a program called "myapp" by compiling all necessary files.
# These files include myapp.c, helper_functions.c, and graphics_utils.c.

# Start by setting the compiler and its flags
CC = gcc
CFLAGS = -Wall -g

# Create a variable to hold all source files
SRCS = myapp.c helper_functions.c graphics_utils.c

# Create a variable to hold the object files generated from compiling the source files
OBJS = $(patsubst %.c, %.o, $(SRCS))

# Define the default target
all: myapp

# The myapp target depends on the object files and will be executed if any of the object files change
myapp: $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o myapp

# A rule for compiling each individual object file
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# A rule to clean up all generated files
clean:
	rm -f myapp $(OBJS)
# This is a sample makefile that compiles a C++ project
# and creates an executable application with debugging symbols

# Variable declarations
CXX := g++
SRCDIR := src
BUILDDIR := build
TARGET := bin/program
DEBUGDIR := debug
# Compiler flags
CXXFLAGS := -std=c++11 -Wall -Wextra -g
# Extra libraries to link
LIB := -lpthread -lboost_system

# Get all .cpp files from the source directory
SOURCES := $(wildcard $(SRCDIR)/*.cpp)
# Transform .cpp files into corresponding .o files
OBJECTS := $(SOURCES:$(SRCDIR)/%.cpp=$(BUILDDIR)/%.o)

.PHONY: all clean debug

# Default make target
all: $(TARGET)

# Creating the executable by linking all object files
$(TARGET): $(OBJECTS)
	@echo "Linking all object files and creating executable..."
	$(CXX) $^ -o $@ $(LIB)
	
# Compile each individual source file into an object file
# Add dependency on the header file for each source file
$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp $(SRCDIR)/*.h
	@echo "Compiling $<..."
	@mkdir -p $(BUILDDIR)
	$(CXX) $(CXXFLAGS) -c -o $@ $<

# Clean up all generated files
clean:
	@echo "Removing all files generated by make..."
	@rm -f $(TARGET) $(OBJECTS) $(DEBUGDIR)/*

# Creating an executable with debugging symbols
debug: CXXFLAGS += -DDEBUG -g3
debug: clean $(TARGET)

# Print a message when running the makefile
@echo "Make complete."
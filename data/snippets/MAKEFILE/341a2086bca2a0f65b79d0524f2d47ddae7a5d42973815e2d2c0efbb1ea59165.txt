# Set compiler flags
CFLAGS = -Wall -O2 -std=c99

# Set source files
SRCS = main.c function.c helper.c

# Define object files
OBJS = $(SRCS:.c=.o)

# Define dependency files
DEPS = $(SRCS:.c=.d)

# Define executable file name
EXECUTABLE = myprogram

# Default target
all: $(EXECUTABLE)

# Compile all source files to object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Link all object files into executable
$(EXECUTABLE): $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@

# Generate dependency files for each source file
%.d: %.c
	$(CC) $(CFLAGS) -MM $< > $@

# Include dependency files for each source file
-include $(DEPS)

# Clean up all created files
clean:
	rm -f $(OBJS) $(DEPS) $(EXECUTABLE)

# Target to print a message
print:
	@echo "Building $(EXECUTABLE) using compiler flags: $(CFLAGS)"

# Target to run the program
run:
	./$(EXECUTABLE)
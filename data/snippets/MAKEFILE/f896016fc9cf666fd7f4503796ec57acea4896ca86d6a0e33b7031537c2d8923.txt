# This is a sample makefile for a C++ project

# Define the compiler for the project
CPP = g++

# Define the compilation flags
CFLAGS = -Wall -g

# Define the libraries to be linked
LIBS = -lm -lstdc++

# Define the source files for the project
SRCS = main.cpp utils.cpp

# Define the object files to be created from the source files
OBJS = $(SRCS:.cpp=.o)

# Define the name of the executable file
EXEC = myproject

# Specify the target to be built
# The target depends on the object files
$(EXEC): $(OBJS)
	$(CPP) $(CFLAGS) $(OBJS) -o $(EXEC) $(LIBS)

# Define a rule to compile each source file individually
# Each source file will be compiled into an object file
# The compiler and compilation flags are specified
.cpp.o:
	$(CPP) $(CFLAGS) -c $<

# Define a rule to clean all generated files
# The 'clean' rule does not depend on any target
.PHONY: clean
clean:
	-rm -rf $(OBJS) $(EXEC)
# Set the compiler to use
CC = g++

# Set the flags for compiling and linking
CFLAGS = -Wall -g
LDFLAGS = -lm

# Set the directory for object files
OBJDIR = obj/

# Set the source directory
SRCDIR = src/

# Specify the source files to be compiled
SRCS := $(wildcard $(SRCDIR)*.cpp)

# Specify the object files to be generated
OBJS := $(addprefix $(OBJDIR), $(notdir $(SRCS:.cpp=.o)))

# Specify the executable to be generated
TARGET = executable

# Create a rule to compile the source code into object files
$(OBJDIR)%.o: $(SRCDIR)%.cpp
	mkdir -p $(@D)
	$(CC) -c -o $@ $< $(CFLAGS)

# Create a rule to link the object files into the executable
$(TARGET): $(OBJS)
	$(CC) -o $@ $^ $(LDFLAGS)

# Specify phony targets (targets that are not actually files)
.PHONY: all clean

# Default target (make all)
all: $(TARGET)

# Clean up rule to delete object files and executable
clean:
	rm -rf $(OBJDIR)*.o $(TARGET)
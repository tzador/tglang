# Sets the compiler options for C++ files
CXX = g++

# Sets the include directory for header files
INC_DIR = include/

# Sets the source directory for .cpp files
SRC_DIR = src/

# Sets the object directory for compiled .o files
OBJ_DIR = obj/

# Sets the library directory for external libraries
LIB_DIR = lib/

# Sets the flags for compiling and linking
CXX_FLAGS = -std=c++17 -Wall -Wextra -pedantic
LINK_FLAGS = -L$(LIB_DIR) -lmy_library

# Gets a list of all .cpp files in the source directory
SRC_FILES = $(wildcard $(SRC_DIR)*.cpp)

# Converts the .cpp files into .o files
OBJ_FILES = $(patsubst $(SRC_DIR)%.cpp,$(OBJ_DIR)%.o,$(SRC_FILES))

# Creates the target executable
EXEC = my_program

# Sets the default target
default: $(EXEC)

# Builds the executable by linking object files
$(EXEC): $(OBJ_FILES)
	$(CXX) -o $@ $^ $(LINK_FLAGS)

# Compiles each .cpp file into an object file
$(OBJ_DIR)%.o: $(SRC_DIR)%.cpp | $(OBJ_DIR)
	$(CXX) $(CXX_FLAGS) -c $< -o $@ -I$(INC_DIR)

# Creates the object directory if it doesn't already exist
$(OBJ_DIR):
	mkdir $(OBJ_DIR)

# Cleans up all compiled files
clean:
	rm -r $(OBJ_DIR) $(EXEC)

.PHONY: default clean
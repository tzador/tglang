#This is a comment in a MAKEFILE.
#Targets that are not files (known as phony targets) 
#are designated by .PHONY.
#In this example, we define a phony target `all` 
#.PHONY: all

#This target will be the default target, 
#meaning it will be executed 
#when we run `make` without specifying a target. 
#.DEFAULT_GOAL: all

#The target `all` depends on the targets `build` and `test`,
#which means that before `all` can execute,
#`build` and `test` must first be executed.
#We can also specify multiple dependencies by separating them with a space.
#In this example, the target `test` depends on `unit_test` and `integration_test`.
all: build test

#The `build` target depends on the files `main.c` and `util.c`,
#meaning that before `build` can be executed,
#these files must be compiled to generate the executable `main`.
build: main

#The `test` target depends on the sub-targets `unit_test` and `integration_test`,
#which means that before `test` can be executed,
#both `unit_test` and `integration_test` must pass.
test: unit_test integration_test

#The `unit_test` target depends on the file `unit_test.cpp`
#and also the executable `main`,
#meaning that before `unit_test` can be executed,
#these files must be compiled.
unit_test: unit_test.cpp main

#The `integration_test` target depends on the file `integration_test.cpp`
#and also the executable `main`,
#meaning that before `integration_test` can be executed,
#these files must be compiled.
integration_test: integration_test.cpp main

#This is the rule for compiling `main.c` to generate the executable `main`.
#The variable `CC` specifies the compiler to use,
#and `CFLAGS` specifies any additional flags or options.
#The target `main` is listed as a dependency,
#meaning that when this rule is executed,
#the `main` target will be automatically generated.
main: main.c util.c
	${CC} ${CFLAGS} -o main main.c util.c

#This is the rule for compiling `unit_test.cpp`.
#The variable `CXX` specifies the C++ compiler to use,
#and `CXXFLAGS` specifies any additional flags or options.
unit_test.cpp:
	${CXX} ${CXXFLAGS} -c unit_test.cpp

#This is the rule for compiling `integration_test.cpp`.
#The variable `CXX` specifies the C++ compiler to use,
#and `CXXFLAGS` specifies any additional flags or options.
integration_test.cpp:
	${CXX} ${CXXFLAGS} -c integration_test.cpp
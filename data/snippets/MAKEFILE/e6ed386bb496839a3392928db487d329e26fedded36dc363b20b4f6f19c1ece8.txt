# Define variables for compiler and flags
CC = gcc
CFLAGS = -Wall -g

# Define a variable for the target executable
TARGET = main

# Define a list of source files
SRC = main.c helper.c utils.c

# Define a list of object files
OBJ = $(SRC:.c=.o)

# Default target
all: $(TARGET)

# Create target executable by linking object files
$(TARGET): $(OBJ)
	$(CC) $(OBJ) -o $@

# Compile each source file into an object file
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Generate assembly code for each source file
%.s: %.c
	$(CC) $(CFLAGS) -S $< -o $@

# Create a target for generating assembly code
assembly: $(TARGET)

.PHONY: clean

# Clean up by removing object files and executable
clean:
	rm -f $(OBJ) $(TARGET)
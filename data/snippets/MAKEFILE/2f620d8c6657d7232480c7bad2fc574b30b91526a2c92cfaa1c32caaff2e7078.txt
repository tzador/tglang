# This is a Makefile for a project

.DEFAULT_GOAL := build
# This sets the default target to be built if no target is specified

# Compiler settings
CC := gcc
CFLAGS := -std=c99 -Wall -Wextra
LDFLAGS := -lm

# Directories
SRC_DIR := src
OBJ_DIR := obj
BIN_DIR := bin
INCLUDE_DIR := include
LIB_DIR := lib

# File names
TARGET := project
SRC := $(wildcard $(SRC_DIR)/*.c) # Looks for all ".c" files in SRC_DIR and saves them in the variable SRC
OBJ := $(SRC:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o) # Replaces the path and extension of each element in SRC with OBJ_DIR and .o respectively
INC := -I$(INCLUDE_DIR)
LIB := -L$(LIB_DIR)

# Command to compile a single .c file into .o file
COMPILE.c = $(CC) $(CFLAGS) $(INC) -c -o $@ $<

# Builds the project
build: $(TARGET)

# Linking rule
$(TARGET): $(OBJ)
	$(CC) $(LDFLAGS) $(LIB) $^ -o $(BIN_DIR)/$@

# Compilation rule
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c | dirs
	$(COMPILE.c)

# Creates any missing directories
.PHONY: dirs
dirs:
	mkdir -p $(dir $(OBJ) $(TARGET))

# Cleans the project
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)
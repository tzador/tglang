# This is an example of a complex Makefile for a C++ project.

# Set compiler options
CXX := g++
CXX_FLAGS := -std=c++11 -Wall -Wextra

# Specify source files
SRC_DIR := src
SRC_FILES := $(wildcard $(SRC_DIR)/*.cpp)

# Specify header files
INCLUDE_DIR := includes
INCLUDE := $(wildcard $(INCLUDE_DIR)/*.hpp)

# Specify object files
OBJ_DIR := obj
OBJ_FILES := $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.o,$(SRC_FILES))

# Specify executable name and directory
BIN_DIR := bin
EXECUTABLE := $(BIN_DIR)/example

# Default target - build executable file
default: $(EXECUTABLE)

# Link object files to create executable file
$(EXECUTABLE): $(OBJ_FILES)
	$(CXX) $(CXX_FLAGS) $^ -o $@

# Compile source files into object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp $(INCLUDE)
	$(CXX) $(CXX_FLAGS) -c $< -o $@ -I$(INCLUDE_DIR)

# Clean - remove executable and object files
clean:
	rm -f $(EXECUTABLE)
	rm -f $(OBJ_FILES)
# This is a complex Makefile that creates an executable called "myApp"

# Define variables for compiler and compiler flags
CC = gcc
CFLAGS = -Wall -g -std=c99

# Define variable for source code files
SRCS = main.c functions.c

# Define variable for object files, replacing .c with .o
OBJS = $(SRCS:.c=.o)

# Define a rule to make the executable
myApp: $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o myApp

# Define a rule to compile the source code into object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Define a rule to clean up object files and executable
clean:
	rm -f $(OBJS) myApp

# Define a rule to run the executable
run:
	./myApp

# Define a rule to display a help message
help:
	@echo "Usage: make [target]"
	@echo "Targets:"
	@echo "  myApp  - Builds the executable"
	@echo "  clean  - Removes object files and executable"
	@echo "  run    - Runs the executable"
	@echo "  help   - Displays this help message"

# Define a pseudo-target for the default target
.PHONY: default
default: help

# This is a comment
# More comments can be added throughout the Makefile for documentation purposes
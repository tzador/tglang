# This is a sample makefile for a C++ project
# It sets up a project structure, compiles code, and runs tests
# Change project name, source files, and dependencies as needed

# Define project name
PROJECT_NAME = MyProject

# Define compiler settings
CC = g++
CFLAGS = -c
LDFLAGS = -Wall

# Define source files
SRC = main.cpp
SRC += src/file1.cpp
SRC += src/file2.cpp
SRC += tests/test_file1.cpp

# Define header files directory
INCLUDES = -I include

# Define test suite directory
TEST_DIR = tests

# Define object files directory
OBJ_DIR = obj

# Define test output directory
TEST_OUT_DIR = test_results

# Define object files based on source files
OBJ = $(patsubst src/%.cpp,obj/%.o,$(SRC))
OBJ += $(patsubst tests/%.cpp,obj/%.o,$(SRC))

# Define dependency libraries
LIBS = -lm

# Define test suite dependency libraries
TEST_LIBS = -lgtest -lgtest_main

# Set up project structure and build targets
all: dir project test clean

# Create necessary directories
dir:
	mkdir -p obj
	mkdir -p test_results

# Build project
project: $(OBJ)
	$(CC) $(LDFLAGS) $(INCLUDES) $^ -o $(PROJECT_NAME) $(LIBS)

# Compile source files into object files
$(OBJ_DIR)/%.o: src/%.cpp
	$(CC) $(CFLAGS) $(INCLUDES) $< -o $@

# Compile test files into object files
$(OBJ_DIR)/%.o: tests/%.cpp
	$(CC) $(CFLAGS) $(INCLUDES) $< -o $@

# Run test suite
test: $(TEST_DIR)
	./$(PROJECT_NAME)
	mv $(PROJECT_NAME).gcov $(TEST_OUT_DIR)
	gcovr -r . --html --html-details -o $(TEST_OUT_DIR)/coverage.html

# Clean up object files and project executable
clean:
	rm -rf obj/ $(PROJECT_NAME)
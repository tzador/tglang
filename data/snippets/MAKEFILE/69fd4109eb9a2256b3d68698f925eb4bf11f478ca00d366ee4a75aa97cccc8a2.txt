# This is a makefile used to compile and link a C++ program

# Compiler used for compiling
CXX = g++

# Flags used for compiling
CXXFLAGS = -Wall -c

# Linker used for linking object files
LD = g++

# Flags used for linking
LDFLAGS =

# Name of executable to be generated
EXECUTABLE = myprogram

# Directory for source files 
SRC_DIR = src

# Directory for object files 
OBJ_DIR = obj

# List all source files that need to be compiled
SOURCES = $(wildcard $(SRC_DIR)/*.cpp)

# List all object files that will be created from sources
OBJECTS = $(patsubst $(SRC_DIR)/%.cpp, $(OBJ_DIR)/%.o, $(SOURCES))

# Default make command
all: $(EXECUTABLE)

# Rule to compile all source files into objects
$(OBJECTS): $(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(OBJ_DIR)
	$(CXX) $(CXXFLAGS) -o $@ $<

# Rule to link all object files into executable
$(EXECUTABLE): $(OBJECTS)
	$(LD) $(LDFLAGS) -o $@ $^

# Rule to clean all generated files
clean:
	@rm -rf $(OBJ_DIR) $(EXECUTABLE)

# Rule to print a message before compiling
message:
	@echo "Compiling $(EXECUTABLE)..." 

# Rule to print a message before cleaning
clean_msg:
	@echo "Cleaning all generated files..."

# Include the message rules before compiling
$(EXECUTABLE): message

# Include the clean message rule before cleaning
clean: clean_msg

# Make sure 'clean' is not considered a file name
.PHONY: clean
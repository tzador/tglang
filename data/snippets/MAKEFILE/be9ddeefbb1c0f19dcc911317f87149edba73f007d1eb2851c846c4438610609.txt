# This is a Makefile that creates an executable program named my_program

# Specify the compiler to use
CC = gcc

# Specify compilation flags
CFLAGS = -Wall -g

# Specify linker flags
LDFLAGS = -lm

# List source code files
SRCS = main.c utils.c math_funcs.c

# Generate object files from source code
OBJS = $(SRCS:.c=.o)

# Specify the target file to be created
TARGET = my_program

# Start by declaring a 'PHONY' target so it doesn't conflict with file names
.PHONY: all clean

# Default target, which is used when 'make' is called without any arguments
all: $(TARGET)

# Rule for creating the executable program
$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) -o $(TARGET)

# Rule for creating object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Cleaning rule, removes all generated files
clean:
	-rm -f $(TARGET) $(OBJS)

# End of Makefile
# This is a makefile for compiling and linking a C++ project
# It includes dependencies and allows for customizable compiler flags

# Define variables
CXX = g++
CXXFLAGS = -Wall -std=c++11

# Output directory
OUT = bin

# Source files
SRC = src/main.cpp \
	src/utils.cpp \
	src/manager.cpp \
	src/model.cpp \
	src/view.cpp

# Object files
OBJ = bin/main.o bin/utils.o bin/manager.o bin/model.o bin/view.o

# Dependencies
DEPS = include/utils.h \
	include/manager.h \
	include/model.h \
	include/view.h

# Default target, compiles all source files and links them
all: $(OBJ)
	$(CXX) $(CXXFLAGS) -o $(OUT)/program $(OBJ)

# Rule for creating object files
$(OUT)/%.o: src/%.cpp $(DEPS)
	@echo "Compiling $<..."
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean up object files and executable
clean:
	@echo "Cleaning up..."
	rm -f $(OUT)/*.o
	rm -f $(OUT)/program

# Clean and rebuild
rebuild: clean all

# Makefile does not distinguish between a file named 'clean' and the clean rule, so add this check
.PHONY: clean
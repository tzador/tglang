# Makefile for a C++ project
# Defines variables and targets for building, testing, and cleaning the project

# Compiler settings
CC = g++ # Define the compiler to use
CFLAGS = -std=c++11 # Specify any desired compiler flags

# Project settings
SRCDIR = src # Directory where source code lives
BUILDDIR = build # Directory where object files are built
TESTDIR = test # Directory where test code lives
BINDIR = bin # Directory where executable will be placed
TARGET = myProgram # Name of the final executable

# List of source files
SRC = $(wildcard $(SRCDIR)/*.cpp) # Use wildcard function to get all .cpp files

# Object files will be placed in the BUILDDIR
OBJ = $(patsubst $(SRCDIR)/%.cpp, $(BUILDDIR)/%.o, $(SRC)) 

# Targets
.PHONY: all clean test

# Default target, builds the program
all: $(BINDIR)/$(TARGET)

# Build target, generates the executable
$(BINDIR)/$(TARGET): $(OBJ) | $(BINDIR)
	$(CC) $(LDFLAGS) $^ -o $@ # Use compiler to link the object files and generate the executable

# Object files target, compiles all source files into object files
$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp | $(BUILDDIR)
	$(CC) $(CFLAGS) -c $< -o $@ # Use compiler to compile each source file into an object file

# Test target, runs all tests
test:
	@echo "Running tests..."
	./$(BINDIR)/$(TARGET) # Run the executable to carry out tests

# Clean target, removes all generated files and directories
clean:
	@echo "Cleaning..."
	$(RM) -rf $(BINDIR) $(BUILDDIR)

# Create necessary directories if they don't exist
$(BINDIR) $(BUILDDIR) $(TESTDIR):
	mkdir $@
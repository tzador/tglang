# This is a comment in a makefile
# First target in a makefile
all: prog1 prog2 prog3

# Target that depends on other targets
prog1: file1.o file2.o
	# The $@ in the command expands to the target's name (prog1)
	# The $^ expands to all of the target's dependencies (file1.o file2.o)
	gcc $^ -o $@

prog2: file3.o file4.o
	# Another example of variable expansion
	# The $< expands to the first dependency (file3.o)
	gcc $< -o $@

prog3: file5.o file6.o
	# The -c flag tells gcc to compile but not link
	gcc -c $^
	# The -o flag specifies the output file name
	gcc -o $@ file5.o file6.o

# This target cleans up any compiled files
clean:
	# The * symbol is a wildcard, meaning it will match any files with the specified extension
	# The -f flag ensures that the command does not exit with an error if the file is not found
	rm -f *.o
	rm -f prog1 prog2 prog3
# This is a sample makefile used to compile a C++ program with different flags and dependencies
# Variables to store compiler and compiler flags
CC=g++
CFLAGS=-c -Wall
LDFLAGS=

# Target name for the final executable
TARGET=program

# Source directory where all the source files are located
SDIR=src/

# Directory to store the object files generated during compilation
ODIR=obj/

# Get list of source files
SOURCES=$(wildcard $(SDIR)*.cpp)

# List of object files required for linking
OBJECTS=$(patsubst $(SDIR)%.cpp,$(ODIR)%.o,$(SOURCES))

# Specify the dependencies for each object file
$(ODIR)main.o: $(SDIR)main.cpp $(SDIR)math.h
	$(CC) $(CFLAGS) $< -o $@

$(ODIR)math.o: $(SDIR)math.cpp $(SDIR)math.h
	$(CC) $(CFLAGS) $< -o $@

# Default target to build the program executable
all: $(TARGET)

# Target to link the object files and generate the executable
$(TARGET): $(OBJECTS)
	$(CC) $(LDFLAGS) $^ -o $@

# Target to clean up all the generated object files and executable
clean:
	rm -f $(ODIR)*.o $(TARGET)
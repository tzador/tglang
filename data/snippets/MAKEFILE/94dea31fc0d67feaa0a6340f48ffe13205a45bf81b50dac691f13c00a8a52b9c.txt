# Makefile to compile and run a C++ program
# Specifies the compiler
CXX = g++
# Specifies the compiler flags
CXXFLAGS = -Wall -g
# Specifies the linker
LD = g++
# Specifies the linker flags
LDFLAGS = 
# Specifies the source files
SOURCES = main.cpp functions.cpp
# Specifies the object files
OBJECTS = main.o functions.o
# Specifies the target executable
EXECUTABLE = program

# Default target, will be executed if no arguments are passed
default: all

# Rule for compiling the entire program
all: $(EXECUTABLE)

# Rule for creating the executable by linking the object files
$(EXECUTABLE): $(OBJECTS)
	$(LD) $(LDFLAGS) $^ -o $@

# Rule for compiling the main source file
main.o: main.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Rule for compiling the functions source file
functions.o: functions.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Rule for cleaning up the object files and executable
clean:
	rm -f $(OBJECTS) $(EXECUTABLE)

# Rule for running the program
run:
	./$(EXECUTABLE)
# Define variables
CC = g++ # Compiler
CFLAGS = -Wall -g # Compilation flags
LDFLAGS = -lm # Linker flags
SOURCES = main.cpp helper.cpp # Source files
OBJECTS = $(SOURCES:.cpp=.o) # Object files

# Define targets and dependencies
all: $(OBJECTS) # Main target depends on object files
	$(CC) $(CFLAGS) $(OBJECTS) -o program $(LDFLAGS) # Link object files to create final executable

helper.o: helper.cpp # 'helper.o' depends on 'helper.cpp'
	$(CC) $(CFLAGS) -c helper.cpp # Compile 'helper.cpp' into object file 'helper.o'

main.o: main.cpp # 'main.o' depends on 'main.cpp'
	$(CC) $(CFLAGS) -c main.cpp # Compile 'main.cpp' into object file 'main.o'

clean: # Clean target
	rm -f program $(OBJECTS) # Remove executable and object files

.PHONY: clean # 'clean' is not a file, so force make to ignore any files named 'clean'
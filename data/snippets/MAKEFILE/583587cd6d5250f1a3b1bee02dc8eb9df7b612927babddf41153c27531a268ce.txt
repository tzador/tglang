# This rule sets the default target for the makefile
# The default target is the first target defined in the file
.DEFAULT_GOAL := all

# This rule specifies the compiler to be used for C++ files
CXX := g++

# This variable holds a list of all source files
SRCS := main.cpp utils.cpp

# This variable holds a list of all header files
HDRS := utils.h

# This variable sets the name of the executable file
EXE := program 

# This rule specifies the command to compile and link the source files
# The -o flag specifies the name of the output file to be generated
# The $@ variable represents the target of the rule, in this case the executable name
$(EXE): $(SRCS) $(HDRS)
	$(CXX) $(SRCS) -o $@

# This rule specifies the command to clean the project by removing the executable file
clean:
	rm -f $(EXE)

# This rule is a phony target, meaning that it is not a real file
# It serves as a shortcut for executing multiple commands
.PHONY: all
all: $(EXE)

# This rule is a phony target that prints a message when the makefile is executed
# Note the use of tab characters before the command, as makefile requires them
.PHONY: help
help:
	@echo "Welcome to the makefile! Here are some available commands:"
	@echo "- make (default): compiles and links the source files"
	@echo "- make clean: removes the executable file"
	@echo "- make help: prints this message"

# This rule is used to specify a dependency on a phony target
# This ensures that the phony target is always executed when make is run
# Note: this is necessary because make uses a cache and won't rerun phony targets by default
$(EXE): | all
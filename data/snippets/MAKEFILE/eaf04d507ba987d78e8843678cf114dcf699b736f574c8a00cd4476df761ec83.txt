# This is a Makefile used to compile and run a C++ program
# The following variables are created and can be used throughout the file
CXX = g++
CXX_FLAGS = -Wall -g -std=c++11
EXECUTABLE = my_program
SRC_DIR = src
BUILD_DIR = build

# The first rule in a Makefile is the default rule, in this case it is to build the executable
$(EXECUTABLE): $(BUILD_DIR)/main.o $(BUILD_DIR)/helper.o
	$(CXX) $(CXX_FLAGS) $(BUILD_DIR)/main.o $(BUILD_DIR)/helper.o -o $(EXECUTABLE)

# This rule compiles the main.cpp file into an object file
$(BUILD_DIR)/main.o: $(SRC_DIR)/main.cpp
	$(CXX) $(CXX_FLAGS) -c $(SRC_DIR)/main.cpp -o $(BUILD_DIR)/main.o

# This rule compiles the helper.cpp file into an object file
$(BUILD_DIR)/helper.o: $(SRC_DIR)/helper.cpp
	$(CXX) $(CXX_FLAGS) -c $(SRC_DIR)/helper.cpp -o $(BUILD_DIR)/helper.o

# This rule cleans up the build directory by deleting all object files
clean:
	rm -f $(BUILD_DIR)/*.o

# This rule runs the executable
run: $(EXECUTABLE)
	./$(EXECUTABLE)

# This rule is a phony target, meaning it does not correspond to a file name, but is instead used as a command
.PHONY: all clean run

# This is the default goal, which specifies the target to build when no target is specified
all: $(EXECUTABLE)
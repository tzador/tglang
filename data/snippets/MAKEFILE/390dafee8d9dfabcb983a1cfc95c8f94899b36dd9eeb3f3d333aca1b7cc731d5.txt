# This is a sample makefile that compiles and links several source files
# along with any necessary libraries, into a single executable named 'program'.

# Define variables for compiler and linker flags
CFLAGS = -Wall -g
LDFLAGS =

# Define the source files, object files, and libraries to be used
SRCS = main.c module1.c module2.c
OBJS = ${SRCS:.c=.o}
LIBS = -lm

.PHONY: all clean

# This rule specifies the whole process of compiling and linking
all: program

# This rule links all object files with necessary libraries and creates the executable
program: ${OBJS}
	$(CC) $(LDFLAGS) $^ $(LIBS) -o $@

# This rule compiles each source file into its corresponding object file
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# This rule cleans up all generated object files and the executable
clean:
	rm -f program ${OBJS}
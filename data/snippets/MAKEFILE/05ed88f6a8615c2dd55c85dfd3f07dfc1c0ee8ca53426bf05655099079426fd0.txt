# This is a complex MAKEFILE that compiles multiple source files and links them together to create an executable file.

# Specify the compiler
CC = gcc

# Specify compiler flags
CFLAGS = -c -Wall

# Specify linker
LINKER = gcc

# Specify linker flags
LFLAGS = -o

# Specify source files
SOURCES = main.c math.c input.c output.c

# Specify object files
OBJECTS = $(SOURCES:.c=.o)

# Specify final executable file
EXECUTABLE = program

# Default target
all: $(SOURCES) $(EXECUTABLE)
    
# Compile source files to object files
%.o: %.c
	$(CC) $(CFLAGS) $< -o $@

# Link object files to create executable
$(EXECUTABLE): $(OBJECTS)
	$(LINKER) $(LFLAGS) $@ $(OBJECTS)

# Clean up intermediate object files
clean:
	rm -f *.o

# Clean up executable file
cleanall:
	rm -f $(EXECUTABLE)
### This is a Makefile ###
### It is used to automate tasks in software development ###

# Variables
CC = gcc
CFLAGS = -Wall -Werror -O2
LIBS =
SRC_DIR = src
INC_DIR = inc
BUILD_DIR = build

# Source files
SRC = $(wildcard $(SRC_DIR)/*.c)
OBJ = $(SRC:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)
INC = $(wildcard $(INC_DIR)/*.h)

# Main target
executable: $(BUILD_DIR) $(OBJ)
	$(CC) $(CFLAGS) $(OBJ) -o $@ $(LIBS)

# Rule to create build directory
$(BUILD_DIR):
	mkdir $(BUILD_DIR)

# Rule to create object files
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c $(INC)
	$(CC) $(CFLAGS) -c $< -o $@ -I$(INC_DIR)

# Rule to clean build directory
clean:
	rm -rf $(BUILD_DIR)

# Phony target to avoid conflicts with file names
.PHONY: clean

### Code Explanation ###
# - This Makefile includes variables to define the compiler, flags, libraries, and directories.
# - The wildcard function is used to get the list of source files and header files.
# - The main target is 'executable' which is dependent on the build directory and object files.
# - The $(BUILD_DIR) is created using the mkdir command in the '$(BUILD_DIR)' rule.
# - The object files are created in the '$(BUILD_DIR)/%.o' rule by using the source files and header files.
# - The executable is created by compiling the object files and linking with libraries.
# - The clean rule deletes the build directory and its contents.
# - The .PHONY target is used to avoid conflicts with potential file names.
# This is a Makefile snippet for a C++ project
# Sets variables for compiler, compiler flags, and target output

CC = g++
CFLAGS = -Wall -O3
TARGET = main

# Creates a list of source files and object files to be compiled
# Uses built-in functions for pattern matching
# Source files are searched for in the 'src' directory

SRCDIR = src
SOURCES = $(wildcard $(SRCDIR)/*.cpp)
OBJECTS = $(SOURCES:$(SRCDIR)/%.cpp=%.o)

# Defines 'default' rule that will be executed when running 'make' command
# Compiles all object files and links them to create target output
# Uses built-in variable '$@' to reference target name

default: $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $(TARGET)

# Defines 'clean' rule that will be executed when running 'make clean' command
# Removes all object files and target output

clean:
	rm -f $(OBJECTS) $(TARGET)

# Defines 'run' rule that will be executed when running 'make run' command
# Runs the target output file

run:
	./$(TARGET)
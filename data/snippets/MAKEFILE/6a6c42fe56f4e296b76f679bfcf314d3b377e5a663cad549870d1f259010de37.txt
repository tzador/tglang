# Makefile for a C project
# Target executable name
TARGET = myprogram

# Compiler Settings
CC = gcc
CFLAGS = -Wall -Werror -g

# Directories containing source files
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

# Add all source files from directory SRC_DIR
SOURCES := $(wildcard $(SRC_DIR)/*.c)

# Generate path to object files
OBJECTS := $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SOURCES))

# Stops make from confusing files with identical target names
.PHONY: all clean

# Target to compile all object files and link them to executable
all: $(BIN_DIR)/$(TARGET)

$(BIN_DIR)/$(TARGET): $(OBJECTS) | $(BIN_DIR) # use pre-requisites to check for directory

# Compile object files from source files
$(OBJECTS): $(OBJ_DIR)/%.o : $(SRC_DIR)/%.c | $(OBJ_DIR) # use pre-requisites to check for directory
	$(CC) $(CFLAGS) -c $< -o $@

$(BIN_DIR):
	mkdir -p $(BIN_DIR)

$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

# Target to clean all object and executable files
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)
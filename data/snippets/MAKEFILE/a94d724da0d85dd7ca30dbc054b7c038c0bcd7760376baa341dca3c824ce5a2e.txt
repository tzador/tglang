# Setup variables with default values
SHELL := /bin/bash    # Use bash as the shell language
.DEFAULT_GOAL := compile   # Set the default target to be compiled
FILES := $(wildcard *.cpp)  # Save all .cpp files in the current directory to a variable
OBJS := $(patsubst %.cpp, %.o, $(FILES))    # Generate object file names corresponding to each .cpp file

# PHONY targets - targets that don't produce files with the same name
.PHONY: clean

# Rules for the main target
compile: $(OBJS)     # Dependencies for the main target - all object files
	@echo "Linking..."   # Print message to console
	@$(CXX) -o main $(OBJS)  # Link all object files to generate executable named "main"
	@echo "Compilation complete!"

# Rule for generating object files
# $< - first dependency name
# $@ - target name
# $^ - list of all dependencies
%.o: %.cpp
	@echo "Compiling $<..."   # Print message for each .cpp file being compiled
	@$(CXX) -c $< -o $@  # Compile each .cpp file to its corresponding object file

# A target to clean up generated files
clean:
	@rm -rf main $(OBJS)  # Remove executable and all object files
	@echo "Files cleaned."
#This is a sample Makefile
#It contains rules and commands for building a project

#Specify the compiler to use
CC=gcc

#Specify flags for the compiler
CFLAGS=-c -Wall -I ./include

#Specify libraries to include
LIBS=-lm

#Specify source code files
SRC=main.c helper.c foo.c bar.c

#Specify object files
OBJ= $(SRC:.c=.o)

#Specify executable name
EXE=my_program

#Default target when 'make' is called
all: $(EXE)

#Target for building the executable
$(EXE): $(OBJ)
	$(CC) $(OBJ) -o $(EXE) $(LIBS)

#Target for building individual object files
.c.o:
	$(CC) $(CFLAGS) $< -o $@

#Clean up target
.PHONY: clean
clean:
	rm -rf $(OBJ) $(EXE)

#Dependencies
main.o: main.c helper.h
helper.o: helper.c helper.h
foo.o: foo.c foo.h helper.h
bar.o: bar.c bar.h helper.h

# .PHONY directive specifies that 'clean' is not an actual file
.PHONY: clean
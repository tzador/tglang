# This section ensures that the makefile is executed in Bash
SHELL := /bin/bash

# Set the compiler to be used
CC := gcc

# Specify the directories for source and object files
SRC_DIR := src
OBJ_DIR := obj

# Get the list of source files from the source directory
SRC := $(wildcard $(SRC_DIR)/*.c)

# Create a list of object files based on the source files
OBJ := $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRC))

# Set compiler flags
CFLAGS := -Wall -Werror -std=c99

# Specify the output binary name
OUT := my_program

# Specify targets and their dependencies
all: $(OUT)

# Compile the source files into object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) -c -o $@ $< $(CFLAGS)

# Link the object files into the final executable
$(OUT): $(OBJ)
	$(CC) -o $@ $^ $(CFLAGS)

# Remove the object files and the output binary
clean:
	rm -f $(OBJ_DIR)/*.o $(OUT)
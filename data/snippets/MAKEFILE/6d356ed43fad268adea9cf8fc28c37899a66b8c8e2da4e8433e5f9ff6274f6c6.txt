# This defines the compiler to use
CC = gcc

# This defines compiler flags
CFLAGS = -Wall -g

# This defines the linker to use
LD = ld

# This defines the linker flags
LDFLAGS = -lc

# This defines the target executable
TARGET = my_program

# This defines include directories
INCLUDES = -I./include

# This defines library directories
LIBDIR = -L./lib

# This defines source files
SOURCES = main.c utils.c structures.c

# This defines object files
OBJECTS = $(SOURCES:.c=.o)

# This is the default rule, which will compile the executable
all: $(OBJECTS)
	$(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(LIBDIR)
	rm -f *.o

# This rule creates the object files from the source files
.c.o:
	$(CC) -c $(CFLAGS) $(INCLUDES) $< -o $@

# This rule cleans up the generated files
clean:
	rm -f $(TARGET) *.o
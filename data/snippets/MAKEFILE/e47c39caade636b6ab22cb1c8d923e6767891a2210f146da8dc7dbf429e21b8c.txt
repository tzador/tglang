# This is a sample Makefile for building a C program

# Variables to hold compiler and linker commands
CC = gcc
LD = gcc

# Directories for source files and executable
SRCDIR = src
BINDIR = bin

# Flags for the compiler and linker
CFLAGS = -std=c11 -Wall -Wextra
LDFLAGS =

# Source files
SRCS = $(wildcard $(SRCDIR)/*.c)

# Generate object files from source files
OBJS = $(SRCS:.c=.o)

# Target executable
TARGET = $(BINDIR)/program

# Default rule to build the executable using object files
$(TARGET): $(OBJS)
	@echo Building $@
	$(LD) $(LDFLAGS) -o $@ $^

# Pattern rule for compiling C source files
$(BINDIR)/%.o: $(SRCDIR)/%.c | $(BINDIR)
	@echo Compiling $<
	$(CC) $(CFLAGS) -c -o $@ $<

# Rule to create the bin directory if it doesn't exist
$(BINDIR):
	mkdir -p $@

# Rule to clean all generated files
clean:
	@echo Cleaning...
	rm -rf $(BINDIR) $(OBJS)
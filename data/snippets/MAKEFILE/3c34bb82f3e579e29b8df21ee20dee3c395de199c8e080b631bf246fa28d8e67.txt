# This is a comment in a Makefile

# Setting a variable
NAME = "John"

# Defining a target
hello:
	echo "Hello, $(NAME)!" # Using the $(...) syntax to access variable

# Adding dependencies to a target
welcome: greeting introduction payment

# Defining phony targets
.PHONY: currency time

# Creating a pattern rule
%.txt: %.pdf
	pdftotext $(@D)/$< # using the $@ and $< symbols for automatic variables.

# Using conditionals
ifdef NAME
all: $(NAME)
else
all: default
endif

# Using a function to create a list of files
FILES = $(wildcard src/*.txt)

# Defining a rule with multiple commands
build:
	mkdir -p bin
	cp src/*.c bin/
	gcc bin/*.c -o bin/main

# Using wildcards in target names
$(FILES:.txt=.docx):
	pandoc -s $@ -o $(@:docx=md) # Using string substitution to convert file extension

# Including another Makefile
include other.makefile

# Defining a silent rule
.SILENT: clean
clean:
	rm -rf bin/ # Using the -rf flag to recursively remove a directory
# This rule serves as the default rule and will run when you simply type `make` into the command line
default: | *target1* *target2*

# PHONY targets are those that do not refer to actual files, but rather serve as a label for a set of commands to run
.PHONY: target1 *target2*

# Define a variable with the value "Hello World"
message := Hello World

# Print the value of the message variable
print_message:
    @echo $(message)

# Define a variable with multiple values, separated by a space
list_of_names := John Mary Emma Michael

# Create a target that will iterate through each name in the list and print a personalized message
greet_people:
    @for name in $(list_of_names); do \
        echo "Hello $$name, welcome to our community!"; \
    done

# Set up a dependency between targets
all: print_message | greet_people

# Use a bash command to create a file called "output.txt" with the contents "Done!"
create_output:
    @echo "Done!" > output.txt

# Specify that the target "output.txt" depends on the "create_output" target
output.txt: create_output

# Remove all generated files
clean:
    @rm output.txt

# Make the "clean" target the default rule
.DEFAULT_GOAL := clean

# Run the "all" target followed by the "output.txt" target when `make test` is typed into the command line
test: all | output.txt
# This is a Makefile - a build automation tool used in software development
# It contains instructions for how to build a project using a set of rules and dependencies
#
# Syntax:
# target: dependencies
# <TAB> recipe/command
# 
# Explanation:
# Target: the end result we want to achieve
# Dependencies: files needed before the target can be executed
# Recipe/Command: steps to achieve the target
#
# In this example, we will create a target to compile a C program:
#

# Declaring variables
CC = gcc
CFLAGS = -Wall -g

# Target: compile
# Dependencies: main.c and helper.c
# Recipe:
# - Compile main.c to main.o
# - Compile helper.c to helper.o
# - Link main.o and helper.o to create executable "program"
compile: main.o helper.o
	$(CC) $(CFLAGS) main.o helper.o -o program

# Target: main.o
# Dependencies: main.c
# Recipe:
# - Compiling main.c to main.o object file
main.o: main.c
	$(CC) $(CFLAGS) -c main.c

# Target: helper.o
# Dependencies: helper.c
# Recipe:
# - Compiling helper.c to helper.o object file
helper.o: helper.c
	$(CC) $(CFLAGS) -c helper.c

# Target: clean
# Recipe:
# - Removing all object files and the executable "program"
clean:
	rm -f *.o program

# Target: run
# Recipe:
# - Running the executable "program"
run:
	./program
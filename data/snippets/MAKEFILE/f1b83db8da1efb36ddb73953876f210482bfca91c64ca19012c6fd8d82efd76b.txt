# This is a makefile for compiling a C++ project

# define source and header files
SRCS := main.cpp func1.cpp func2.cpp
HDRS := header1.h header2.h

# set compiler and flags
CC = g++
FLAGS = -Wall -O2

# set the build directory and output executable
BUILD_DIR = build
OUTPUT = myprog

# create object files from source files
OBJS := $(addprefix $(BUILD_DIR)/, $(subst .cpp,.o, $(SRCS)))

# define targets and dependencies
$(OUTPUT): $(OBJS)
	$(CC) $(FLAGS) $^ -o $@

$(BUILD_DIR)/main.o: main.cpp $(HDRS)
	$(CC) $(FLAGS) -c $< -o $@

$(BUILD_DIR)/func1.o: func1.cpp header1.h
	$(CC) $(FLAGS) -c $< -o $@

$(BUILD_DIR)/func2.o: func2.cpp header2.h
	$(CC) $(FLAGS) -c $< -o $@

# clean target to remove all object and executable files
clean:
	$(RM) $(OBJS) $(OUTPUT)

# phony targets to prevent conflicts with file names
.PHONY: all clean

# default target to build the entire project
all: $(OUTPUT)
BEGIN {
    # Using an associative array to store words and their count
    # Initializing fields and delimiters
    FS = "[^a-zA-Z]+" # Using regular expressions as field separator
    OFS = "\t" # Output field separator
    # Defining function to check if word exists in array or not
    function CheckAndAdd(word, count) {
        if (word in words) { # If word already exists, increment its count
            words[word]++
        }
        else { # If word doesn't exist, add it to array with count of 1
            words[word] = 1
    }
}
# Main program execution starts here
{
    # Loop through each word in the current line
    for (i = 1; i <= NF; i++) {
        current_word = $i # Assign current word to a variable
        # Remove any punctuation marks using regex
        gsub(/[^a-zA-Z]/, "", current_word)
        # Convert current word to lowercase
        current_word = tolower(current_word)
        # Check if current word is not empty
        if (current_word != "") {
            # Call function to check and add word to array
            CheckAndAdd(current_word)
    }
}
# After looping through all words, print out the array with word and count
END {
    # Loop through each word in the array
    for (word in words) {
        # Print the word and its corresponding count separated by the output field separator
        print word, words[word]
    }
}
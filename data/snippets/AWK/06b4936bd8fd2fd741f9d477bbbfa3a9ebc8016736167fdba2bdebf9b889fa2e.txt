# This code snippet finds and prints all prime numbers up to a given limit.
# Adapted from https://www.cs.mcgill.ca/~dprecup/courses/Intro/Notes/Programming-lecture5.pdf

# Initialize an array of size 'limit' with all values set to 1
BEGIN{
    limit = 100;
    for(i=2; i<=limit; i++){
        numbers[i] = 1;
    }
}

# Perform the Sieve of Eratosthenes algorithm to find prime numbers
function Sieve_of_Eratosthenes(limit){
    # Start at the first prime number (2)
    p = 2;
    # While the square of p is less than or equal to the limit
    while(p*p <= limit){
        # If numbers[p] is still set to 1, it is a prime number
        if(numbers[p] == 1){
            # Set all multiples of p (excluding p itself) to 0
            for(i=p*2; i<=limit; i+=p){
                numbers[i] = 0;
            }
        }
        # Increment p to the next potential prime number
        p++;
    }
}

# Call the Sieve_of_Eratosthenes function to find all prime numbers up to the limit
Sieve_of_Eratosthenes(limit);

# Print all prime numbers by looping through the numbers array and printing the index of values set to 1
for(i=2; i<=limit; i++){
    if(numbers[i] == 1){
        print i;
    }
}
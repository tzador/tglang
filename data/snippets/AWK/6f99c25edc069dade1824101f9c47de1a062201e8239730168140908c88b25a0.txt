#  This code snippet is a AWK program that takes in a file and counts the number of times each word appears in the file.

# This first portion of the code sets the field separator to be any non-alphanumeric character.
BEGIN { 
    FS = "[^a-zA-Z0-9]+"
}

# This function checks if the word has already been encountered and keeps track of the count.
# It also adds the word to an array to keep track of all unique words.
{
    word = $0

    # If the word has already been encountered, increase its count.
    if (word in wordcount) {
        wordcount[word]++
    } 
    # Else, add the word to the array and initialize its count to 1.
    else {
        wordcount[word] = 1
        words[++i] = word
    }
}

# This function sorts the array of words alphabetically using a bubble sort algorithm.
# It also prints out the word and its corresponding count.
END {
    # Bubble sort algorithm
    for (j = 0; j < i - 1; j++) {
        for (k = 0; k < i - j - 1; k++) {
            # If the current word is greater than the next word, swap their positions in the array.
            if (words[k] > words[k + 1]) {
                temp = words[k]
                words[k] = words[k + 1]
                words[k + 1] = temp
            }
        }
    }

    # Print out each unique word and its corresponding count.
    for (j = 1; j <= i; j++) {
        print words[j] " - " wordcount[words[j]]
    }
}
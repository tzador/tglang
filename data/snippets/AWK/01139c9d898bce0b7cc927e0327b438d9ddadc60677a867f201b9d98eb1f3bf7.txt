# This program generates a matrix of random numbers and calculates its inverse using the Gauss-Jordan elimination method

# Function to perform Gaussian elimination on a given matrix A
function gaussian_elim(A) {
    # Get dimensions of matrix
    rows = length(A)
    columns = length(A[1])

    # Loop through each diagonal element
    for (i = 1; i <= rows; i++) {

        # Check if diagonal element is 0
        if (A[i][i] == 0) {
            # Find row with non-zero element in same column
            for (j = i + 1; j <= rows; j++) {
                if (A[j][i] != 0) {
                    # Swap current row with non-zero row
                    for (k = 1; k <= columns; k++) {
                        temp = A[i][k]
                        A[i][k] = A[j][k]
                        A[j][k] = temp
                    }
                    # Exit inner loop
                    break
                }
            }
        }

        # Make the diagonal element 1
        divisor = A[i][i]
        for (k = 1; k <= columns; k++) {
            A[i][k] = A[i][k] / divisor
        }

        # Subtract multiple of current row from other rows
        for (j = 1; j <= rows; j++) {
            if (j != i) {
                multiplier = A[j][i]
                for (k = 1; k <= columns; k++) {
                    A[j][k] = A[j][k] - multiplier * A[i][k]
                }
            }
        }
    }
}

# Generate a 3x3 matrix of random numbers
BEGIN {
    srand()
    for (i = 1; i <= 3; i++) {
        for (j = 1; j <= 3; j++) {
            A[i][j] = int(rand() * 10) # Multiply by 10 to get integers between 0 and 9
        }
    }
    print "Original Matrix:"
    for (i = 1; i <= 3; i++) {
        for (j = 1; j <= 3; j++) {
            printf("%d ", A[i][j])
        }
        print ""
    }
    print ""
}

# Call gaussian_elim function on matrix
{ gaussian_elim(A) }

# Print inverse of matrix
END {
    print "Inverse Matrix:"
    for (i = 1; i <= 3; i++) {
        for (j = 1; j <= 3; j++) {
            printf("%.2f ", A[i][j])
        }
        print ""
    }
}
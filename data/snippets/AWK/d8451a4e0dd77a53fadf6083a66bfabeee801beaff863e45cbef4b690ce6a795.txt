#!/bin/awk -f

# This is a comment in AWK, denoted by a "#" symbol at the beginning of a line

BEGIN {
    # the BEGIN block of AWK is executed before reading any input
    # it is used for initialization and setting up variables
    # in this case, we are setting the record separator to a comma
    FS = ","
}
# we can also define functions in AWK
# this function checks if a given number is prime or not
function is_prime(number) {
    # initializing the flag variable to true
    prime = 1 
    # loop through numbers from 2 to the given number - 1
    for (i = 2; i < number; i++) {
        # if the given number is divisible by i, then it is not prime
        if (number % i == 0) {
            prime = 0 
            # set the flag variable to false
            break # exit the loop since we already know the number is not prime
        }
    }
    # return the value of the flag variable
    return prime
}

# now we will process each line of input and check if the last field is a prime number
# if it is prime, we will print out the line with an added column saying "PRIME"
# if it is not prime, we will print out the line with an added column saying "NOT PRIME"
{
    # get the last field of the line
    number = $NF 
    # check if it is a number (awk has a built-in function for this)
    if (isnumber(number)) {
        # use our custom function to check if the number is prime
        if (is_prime(number)) {
            # if it is prime, print out the line with an added column
            print $0 ",PRIME"
        } else {
            # if it is not prime, print out the line with an added column
            print $0 ",NOT PRIME"
        }
    }
}

# example input:
# apple, pear, banana, 2
# orange, grape, watermelon, 5

# example output:
# apple, pear, banana, 2, PRIME
# orange, grape, watermelon, 5, PRIME
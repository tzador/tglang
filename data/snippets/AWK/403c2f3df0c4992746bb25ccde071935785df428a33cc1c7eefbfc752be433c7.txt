BEGIN {   # BEGIN block is used to initialize variables or perform actions before input is read

    # Defining an array with 4 elements
    array[1] = "Red"
    array[2] = "Orange"
    array[3] = "Yellow"
    array[4] = "Green"

    # Adding a for loop to iterate through the array elements
    for (i=1; i<=4; i++) {
        # Creating a new variable to store the length of the current element
        len = length(array[i])
        # Printing the element with its length in a formatted string
        printf("Element %d is %s with a length of %d characters\n", i, array[i], len)
    }

    # Adding a new line for separation
    print ""

    # Adding a while loop to iterate through the array elements in reverse order
    j = 4
    while (j>=1) {
        # Printing the elements in reverse order using the j variable as index
        print array[j]
        j--
    }

    # Adding a new line for separation
    print ""

    # Using the if statement to check if an element in the array is "Red"
    if (array[1] == "Red") {
        print "The first element is Red"
    } else {
        print "The first element is not Red"
    }

    # Adding a new line for separation
    print ""

    # Using the getline function to read a line from the input and store it in the var variable
    getline var < "input.txt"

    # Using the split function to split the line into an array using space as the delimiter
    split(var, words, " ")

    # Adding a for loop to iterate through the words array
    for (k in words) {
        # Using the tolower function to convert each word to lowercase and storing it in a new array
        lower_words[k] = tolower(words[k])
    }

    # Printing out the new array with all lowercase words
    for (k in lower_words) {
        print lower_words[k]
    }

    # Adding a new line for separation
    print ""

    # Using the getline function to read a line from the input and store it in the var2 variable
    getline var2 < "input2.txt"

    # Using the index function to find the position of the word "programming" in the line
    index = index(var2, "programming")

    # Using the substr function to extract a substring from the line starting at the position of "programming"
    print substr(var2, index)

    # Adding a new line for separation
    print ""

    # Using the match function to find the index of the first occurrence of "language" in the line
    match(var2, "language")

    # Saving the result in the m variable
    m = RSTART

    # Using the length function to get the length of the match
    len = RLENGTH

    # Using the substr function to extract the matched word
    print substr(var2, m, len)

    # Adding a new line for separation
    print ""

    # Using the split function to split the line into an array using spaces and punctuation as delimiters
    split(var2, tokens, " .,;")

    # Printing out all the tokens in the array
    for (t in tokens) {
        print tokens[t]
    }
}


# Sample input file "input.txt":
# Hello World!
# This is a Test.

# Sample input file "input2.txt":
# Programming language is awesome.
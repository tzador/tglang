# This code snippet generates a histogram for a given input of numbers
BEGIN {
    # setting the desired number of bins for the histogram
    num_bins = 10 
    
    # initializing an array to store the values for each bin
    # index represents the bin number, value represents the count of numbers falling in that bin
    for (i = 1; i <= num_bins; i++) {
        bins[i] = 0
    }
    
    # setting the desired width and spacing for the histogram bars
    bar_width = 10
    bar_spacing = 5
    
    # setting the maximum value for the x-axis
    # this will determine the scale of the histogram
    max_val = 100 
    
    # calculating the increment value for each bin based on the maximum value and number of bins
    increment = max_val / num_bins
    
    # looping through the input numbers
    while ((getline num < "input.txt") > 0) {
        
        # finding the bin number for the current number
        # multiplied by 1 to convert string to integer
        bin_num = num / increment * 1 
        
        # rounding up to the nearest integer
        # increment of 1 ensures that counts do not get missed 
        # e.g. if bin number 1.5 is rounded up, both bins 1 and 2 will get incremented
        bin_num = int(bin_num + 1.0)
        
        # incrementing the count for the corresponding bin
        bins[bin_num] += 1
    }
    
    # printing the histogram title
    print "Histogram:"
    
    # calculating the maximum count of numbers in a single bin
    max_count = 0
    for (i in bins) {
        if (bins[i] > max_count) {
            max_count = bins[i]
        }
    }
    
    # looping through the bins
    for (i = 1; i <= num_bins; i++) {
        
        # calculating the height of the current bar
        height = bins[i] / max_count * 50
        
        # printing the x-axis label
        printf "%3d |", i
        
        # printing the bar
        # using awk's built-in repeat function to print the correct number of asterisks
        printf "%s\n", repeat("*", height)
    }
    
    # printing the x-axis
    # adding extra spaces for alignment with the bars
    printf "     "
    
    # looping through the maximum count value and printing the x-axis labels
    for (i = 0; i < max_count; i++) {
        # adding extra spaces for alignment with the bars
        printf "  "
        
        # printing the 5s interval labels
        if (i % 5 == 0) {
            printf "%2d", i
        }
    }
    printf "\n"
    
    # closing the input file stream
    close("input.txt")
}

# function to repeat a given string n times
function repeat(str, n) {
    result = ""
    for (i = 1; i <= n; i++) {
        result = result str
    }
    return result
}
# This code snippet uses AWK to count the frequency of words in a text file

# save the whole file as input.txt
BEGIN{
    
    # declare an array to hold the frequency of each word
    # array index will be the word and value will be the frequency
    # associative array - no need to declare size
    # array starts with index 1
    array[1] = 0

    # set the field separator to only consider 'words' separated by spaces
    # each 'word' is considered a field in awk
    FS = " "
}

{
    # loop through each field (word) in the current line
    for(i=1;i<=NF;i++){
        # convert the word to lowercase using built-in awk function tolower()
        word = tolower($i)

        # remove punctuations from the word using built-in awk function sub()
        # this replaces all occurrences of [[:punct:]] (all punctuation marks) with an empty string
        # this is done to prevent the same word with different punctuations from being counted as different words
        # for example, "hello" and "hello!" should be counted as the same word
        sub(/[[:punct:]]/,"", word)

        # if the current word already exists in the array, increment its frequency by 1
        # else, add the word as a new entry in the array with frequency 1
        if(word in array){
            array[word]++
        }
        else{
            array[word] = 1
        }
    }
}

END{
    # loop through the array and print the word and its frequency in a formatted way
    for(word in array){
        printf("%-10s\t%s\n", word, array[word])
    }
}

# run the command 'awk -f <name of this file> input.txt' to execute the code on the input.txt file and get the frequency of words
# for example, 'awk -f word_frequency.awk input.txt'
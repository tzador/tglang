# This AWK code snippet demonstrates a complex parsing and manipulation of a text file that contains DNA sequences and their corresponding organisms.

# Set the field separator to '>' and read the file 'dna_sequences.txt'.
# The file consists of header lines starting with '>' and DNA sequences following the header lines.
BEGIN {FS = ">"}
{
    # Store the current organism in the variable "organism" by extracting the text between the first and second '>' character in the header line.
    organism = substr($2, 1, index($2, " ")-1)

    # Loop through the DNA sequences and reverse the order of the characters.
    for (i=1; i<=length($NF)/2; i++) {
        # Swap the characters at indices i and length-i, using variable "temp" as a temporary holder.
        temp = substr($NF, i, 1)
        substr($NF, i, 1) = substr($NF, length($NF)-i+1, 1)
        substr($NF, length($NF)-i+1, 1) = temp
    }

    # Print the reversed DNA sequence along with its corresponding organism in a new line, formatted with a '>' character.
    print ">" $NF, organism
}

# Save the result in the 'reversed_sequences.txt' file.
# Run the code by passing the 'dna_sequences.txt' file as an argument.
# Example command:
# awk -f reverse_sequences.awk dna_sequences.txt > reversed_sequences.txt
# Note: You may need to use the -c command to preserve spaces in the output.
# Example:
# awk -c -f reverse_sequences.awk dna_sequences.txt > reversed_sequences.txt
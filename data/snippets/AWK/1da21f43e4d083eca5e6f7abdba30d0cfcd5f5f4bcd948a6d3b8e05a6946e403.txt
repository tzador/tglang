# This program uses AWK to print out the top ten most frequently occurring words in a text file
BEGIN { # Set up the BEGIN block, which is executed before the input file is read
    FS = "[^a-zA-Z]+" # Set the field separator to split the input lines by non-alphabetic characters
    IGNORECASE = 1 # Ignore case sensitivity when counting words
}

# Main body of the program
{
    for (i = 1; i <= NF; i++) { # Loop through each field in the input line
        word = tolower($i) # Convert the word to lowercase to count occurrences accurately
        if (length(word) > 3) # Only count words with length greater than 3 characters
            words[word]++ # Increment the word count in the words array
    }
}

END { # Set up the END block, which is executed after the input file has been processed
    # Loop through the words array and print out the top ten most frequently occurring words
    for (word in words) { # Loop through each key in the words array
        # Sorting algorithm to find the top ten most frequently occurring words
        for (i = 0; i < 10; i++) { # Loop through ten times to find the top ten words
            if (words[word] >= topTen[i]) { # Check if the current word count is higher or equal to the word at the current index in topTen array
                # Shift the top ten words array to make space for the new word
                for (j = 9; j > i; j--) { # Loop backwards to shift elements in the array
                    topTen[j] = topTen[j-1] # Shift the element to the right
                    topTenWords[j] = topTenWords[j-1] # Shift the corresponding word at the same index
                }
                topTen[i] = words[word] # Update the word count at the current index
                topTenWords[i] = word # Update the word at the current index
                break # Exit the loop to prevent duplicates in the top ten array
            }
        }
    }
    # Print the results
    print "Top ten most frequently occurring words:"
    for (i = 0; i < 10; i++) {
        print topTenWords[i], ":", topTen[i] # Print the word and its count in a key-value pair
    }
}
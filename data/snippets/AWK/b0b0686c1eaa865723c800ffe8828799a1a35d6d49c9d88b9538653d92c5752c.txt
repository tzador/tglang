# This code snippet uses AWK to convert a CSV file to JSON format with column headers as keys

BEGIN {
  # Define the field separator
  FS = ","
  # Initialize an empty array for storing column headers
  cols = []
}

# For each line in the CSV file
NR > 1 {
  # Initialize an empty object for storing the row data
  row = {}
  # Loop through each field in the line
  for (i = 1; i <= NF; i++) {
    # If it's the first row, add the field as the key to the cols array
    if (NR == 2) {
      cols[i] = $i
    }
    # If it's not the first row, add the corresponding value to the row object using the field as the key
    else {
      row[cols[i]] = $i
    }
  }
  # Convert the row object to JSON format and print it out
  print "{" row2json(row) "}"
}

# Function for converting the row object to JSON format
function row2json(row,   json, col) {
  # Initialize an empty string for storing the JSON string
  json = ""
  # Loop through each column in the cols array
  for (col in cols) {
    # If it's not the first column, add a comma to the JSON string
    if (json != "") {
      json = json ","
    }
    # Add the key and value in double quotes to the JSON string
    json = json "\"" cols[col] "\":\"" row[cols[col]] "\""
  }
  # Return the JSON string
  return json
}

# End the AWK program
END {
  print "]"
}
# This AWK script takes in a CSV file and performs some data manipulation

# Set the field separator to be a comma
FS = ","

# Create a variable to keep track of total sales
total_sales = 0

# Create variables to keep track of min and max sale values
min_sale = 0
max_sale = 0

# Create a counter to keep track of number of sales
num_sales = 0

# Create an array to store all the sale values
sales = []

# Run through each line in the CSV file
while ((getline < "sales.csv") > 0) {
    # Skip the header line
    if (FNR == 1) {
        continue
    }

    # Convert the sale value to a number
    sale = $4 + 0

    # Add the sale value to the total sales
    total_sales += sale

    # Add the sale value to the sales array
    sales[num_sales] = sale

    # Check if the current sale value is the new min or max
    if (num_sales == 0) {
        min_sale = sale
        max_sale = sale
    } else if (sale < min_sale) {
        min_sale = sale
    } else if (sale > max_sale) {
        max_sale = sale
    }

    # Increment the number of sales
    num_sales++
}

# Calculate the average sale
avg_sale = total_sales / num_sales

# Print out the results in formatted output
printf "Total Sales: $%.2f\n", total_sales
printf "Average Sale: $%.2f\n", avg_sale
printf "Min Sale: $%.2f\n", min_sale
printf "Max Sale: $%.2f\n", max_sale

# Print out the top 3 highest sales
printf "*** TOP 3 SALES ***\n"
# Sort the sales array in descending order
asort(sales, sorted_sales, "descending")
# Loop through the top 3 sales
for (i = 0; i < 3; i++) {
    # Check if there are at least 3 sales in the array
    if (i < num_sales) {
        # Get the current sale value
        sale = sorted_sales[i]
        # Print out the rank, sale value, and the corresponding CSV line
        printf "%d. $%.2f (%s)\n", i+1, sale, sales[$5]
    }
}
# This is a comment line in AWK

# This function checks if a given number is prime
function isPrime(num) {
  # Check if number is less than 2
  if (num < 2) {
    # Number is not prime
    return 0
  }

  # Loop through numbers from 2 to square root of input number
  for (i = 2; i <= sqrt(num); i++) {
    # Check if current number is a factor of input number
    if (num % i == 0) {
      # Number is not prime
      return 0
    }
  }

  # Number is prime
  return 1
}

# This function checks if a given string is a palindrome
function isPalindrome(str) {
  # Convert string to lowercase
  str = tolower(str)

  # Initialize start and end indices for string
  start = 1
  end = length(str)

  # Loop through string until start and end indices meet
  while (start < end) {
    # Check if characters at start and end indices are equal
    if (substr(str, start, 1) != substr(str, end, 1)) {
      # String is not a palindrome
      return 0
    }
    # Update start and end indices
    start++
    end--
  }

  # String is a palindrome
  return 1
}

# This function calculates the factorial of a given number
function factorial(num) {
  # Initialize result to 1
  result = 1

  # Loop from 1 to input number
  for (i = 1; i <= num; i++) {
    # Multiply result by current number
    result *= i
  }

  # Return factorial result
  return result
}

# AWK program to demonstrate the use of the above functions
# Set input number and string
num = 17
str = "racecar"

# Print the results of the functions
printf("Is %d prime? %d\n", num, isPrime(num))
printf("Is \"%s\" a palindrome? %d\n", str, isPalindrome(str))
printf("The factorial of %d is %d\n", num, factorial(num))
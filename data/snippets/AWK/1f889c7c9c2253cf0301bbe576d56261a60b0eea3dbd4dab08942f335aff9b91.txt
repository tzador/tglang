# This code snippet uses AWK programming language
# to extract the top 5 largest files in a directory

# Use the built-in Linux command 'du' to get file sizes in bytes
# and pipe it to 'sort' to sort the files by their size in reverse order
# then use 'head' to get the top 5 largest files
du -ab | sort -nr | head -n 5 |

# AWK command to format the output for readability
# prints the file size, followed by a tab, followed by the file name 
# uses the NR variable to keep track of the number of lines
# adds a header line for the output
# prints the final output in a readable format using printf
awk '{printf "File #%d: %s\t%s\n", NR, $1, $2} END {printf "-----------------------------\n"}' |

# Add an annotation explaining what the following code does
# 'BEGIN' is an AWK command that is executed before processing the input
# In this case, we are setting the field separator to a tab character
# This is done to ensure that the output is formatted correctly with the tabs
awk 'BEGIN {FS="\t"} {print "The file " $2 " has a size of " $1 bytes."}'

# Expected Output:
`File #1: 1324354 test_file_1.js
File #2: 1056422 test_file_2.py
File #3: 986540 test_file_3.txt
File #4: 854321 test_file_4.html
File #5: 723456 test_file_5.css
-----------------------------
The file test_file_1.js has a size of 1324354 bytes.
The file test_file_2.py has a size of 1056422 bytes.
The file test_file_3.txt has a size of 986540 bytes.
The file test_file_4.html has a size of 854321 bytes.
The file test_file_5.css has a size of 723456 bytes.`
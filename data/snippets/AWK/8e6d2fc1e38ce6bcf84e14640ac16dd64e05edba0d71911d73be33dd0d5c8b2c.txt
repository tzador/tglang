#!/bin/awk -f

# Set input field separator to colon (:)
BEGIN {
    FS = ":"
}

# For each line in the input file
{
    # Get the first field and store it in variable "name"
    name = $1

    # Remove any leading or trailing whitespace from "name"
    gsub("^[[:blank:]]*|[[:blank:]]*$", "", name)

    # Check if "name" is equal to "John"
    if (name == "John") {

        # Get the second field and store it in variable "age"
        age = $2

        # Print a message with "age" interpolated
        print "John is " age " years old"
    }
    
    # Check if "name" is equal to "Jane"
    if (name == "Jane") {

        # Get the third field and store it in variable "occupation"
        occupation = $3

        # Print a message with "occupation" interpolated
        print "Jane's occupation is " occupation
    }

    # Check if "name" is equal to "Mary"
    if (name == "Mary") {

        # Set the field separator to dash (-)
        FS = "-"

        # Get the second field and store it in variable "date_of_birth"
        date_of_birth = $2

        # Print a message with "date_of_birth" interpolated
        print "Mary was born on " date_of_birth
    }
}

# Set the input file to be "data.txt"
# Replace "data.txt" with the name of your input file
# To run the script in terminal, use the command "awk -f script.awk data.txt"
# To use the script for a different input file, change "data.txt"
# To output the results to a file, use the command "awk -f script.awk data.txt > output.txt"
# To output the results to the terminal, simply use the command "awk -f script.awk data.txt"
# The results will be printed to the screen
# ==================================
# Input file (data.txt):
# John:25:Software Engineer
# Jane:32:Accountant
# Mary-01/05/1987-Florist

# Output:
# John is 25 years old
# Jane's occupation is Accountant
# Mary was born on 01/05/1987
data.txt  
# ==================================

# Code adapted from: https://www.gnu.org/software/gawk/manual/html_node/Begin-Examples.html#Begin-Examples
BEGIN {
    # This is the `BEGIN` block for the AWK program. It executes before any input is read.
    FS = "[, \t]+"                                 # `FS` stands for field separator and is set to split fields by comma or space
    OFS = ", "                                      # Output field separator set to add a comma and space between fields
    
    # Defining variables to count the total number of words, unique words and characters in input
    total_words = 0
    unique_words = 0
    total_char = 0
    
    # Initializing an array to store unique words and their frequencies
    # Indices of the array are unique words and the values are their respective frequencies
    array_unique_words[1] = "Array for storing unique words and their frequencies"
}

{
    # This is the `body` block of the AWK program. It is executed for each line of input.
    # Here, we are performing some text processing tasks on the input
    
    # Counting the total number of words in current line
    total_words += NF
    
    # Looping through each field of current line to check for unique words
    for(i=1; i<=NF; i++) {
        # Converting all characters in current field to lowercase for case-insensitivity
        word = tolower($i)
        
        # Checking if current field is a unique word or has already been encountered
        if(array_unique_words[word] == "") {
            # If current field is unique, increment the unique words count by 1
            unique_words++
        }
        
        # Increment the frequency of current field in the array
        array_unique_words[word]++
    }
    
    # Calculating the total number of characters in current line
    total_char += length() + NF - 1             # `length()` returns the number of characters in current line
    
    # Print the processed line with added commas and spaces between fields
    print $0
}

END {
    # This is the `END` block of the AWK program. It executes after all input has been read.
    # Here, we are printing the final results 
    
    # Printing the total number of words, unique words and characters
    print "Total words: " total_words
    print "Unique words: " unique_words
    print " Total characters: " total_char
    
    # Looping through the array to print the unique words and their frequencies
    print "Unique words and their frequencies:"
    for(word in array_unique_words) {
        print word ": " array_unique_words[word]  # `word` is the index of the array, `array_unique_words[word]` is the frequency
    }
}
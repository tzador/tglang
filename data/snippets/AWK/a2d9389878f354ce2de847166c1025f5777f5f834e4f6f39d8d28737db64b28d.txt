# This AWK program takes a text file as input and prints out the top 10 most commonly used words and their frequencies.
BEGIN {
    # Initialize an associative array to store the word frequencies
    # This array will have the word as the key and the frequency as the value
    # The array will be sorted in descending order by frequency
    # The array will only contain the top 10 most commonly used words and their frequencies
    PROCINFO["sorted_in"] = "@val_num_desc"
    # Set the field separator to match any character that is not a letter or number
    FS = "[^[:alnum:]]+"
    # Read in the file given as a parameter
    # Each line will be broken up into words and added to the array
    while ((getline line < ARGV[1]) > 0) {
        # Convert all words to lowercase to prevent case sensitivity
        line = tolower(line)
        # Loop through each word in the line and add it to the array
        for (i=1; i<=NF; i++) {
            # Only add the word if it is not empty
            if ($i != "") {
                # If the word already exists in the array, increment its frequency by 1
                if ($i in words) {
                    words[$i]++
                }
                # Otherwise, add the word to the array with a starting frequency of 1
                else {
                    words[$i] = 1
                }
            }
        }
    }
    # Print out the top 10 most commonly used words and their frequencies
    # Loop through the first 10 elements of the array
    for (word in words) {
        if (count < 10) {
            # Print out the word and its frequency using the format "word: frequency"
            printf "%s: %d\n", word, words[word]
            # Increment the counter
            count++
        }
        # Exit the loop once we have printed out the top 10 words
        else {
            break
        }
    }
    # Close the input file
    close(ARGV[1])
}
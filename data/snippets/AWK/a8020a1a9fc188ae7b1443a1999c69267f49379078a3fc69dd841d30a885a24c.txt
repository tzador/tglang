# This code snippet checks if the input is a prime number using the Sieve of Eratosthenes method
  # Initialize a variable as an array with numbers from 2 to n
  # n is the input number
  BEGIN { 
    for (i = 2; i <= n; i++) { 
      a[i] = i; 
    } 
    # Define a counter variable
    p = 2; 

    # Loop until p is greater than the square root of n
    while (p * p <= n) { 
      # Check if the current number is not marked as a non-prime
      if (a[p] != 0) { 
        # Mark all multiples of current number as non-prime
        for (i = p * p; i <= n; i += p) { 
          a[i] = 0; 
        } 
      } 
      # Increment counter
      p++; 
    } 

    # Print all the prime numbers
    for (i = 2; i <= n; i++) { 
      # Check if the number is not marked as a non-prime
      if (a[i] != 0) { 
        print i; 
      } 
    } 
  }
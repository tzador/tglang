BEGIN {
    # Set the 'IFS' variable to use space as the field separator
    IFS = " "

    # Define the 'print_header' function
    function print_header() {
        # Print a header with the current date
        print "==== Today's date is:", strftime("%Y-%m-%d", systime()), "===="
        # Print a divider
        print "================================="
    }

    # Define the 'print_info' function
    function print_info(name, age, profession) {
        # Print the person's information in a formatted string
        printf "Name: %s \nAge: %d years old \nProfession: %s \n", name, age, profession
    }

    # Set the 'header_printed' variable to false
    header_printed = 0
}

# Loop through each line in the input file
{
    # Skip the first line (header)
    if (NR == 1) {
        next
    }

    # Set the person's information as variables
    name = $1
    age = $2
    profession = $3

    # Check if the current person's age is greater than or equal to 30
    if (age >= 30) {
        # If the header has not been printed, call the 'print_header' function
        if (!header_printed) {
            print_header()
            # Set the 'header_printed' variable to true
            header_printed = 1
        }

        # Call the 'print_info' function to print the person's information
        print_info(name, age, profession)
    }
}

# Print an ending message with the number of people over 30
END {
    # Set the 'num_over_30' variable to count the number of people over 30
    num_over_30 = 0

    # Loop through each person's information
    for (i = 1; i <= NF; i++) {
        # Check if the person's age is greater than or equal to 30
        if ($i >= 30) {
            # Increment the 'num_over_30' variable by 1
            num_over_30 += 1
        }
    }

    # Print the ending message with the number of people over 30
    print "================================="
    print "There are", num_over_30, "people over 30."
    print "================================="
}

# Execute the AWK script with the input file as an argument
# Input file format: Name Age Profession
# Example input file:
# John 28 Lawyer
# Sarah 35 Doctor
# Dave 32 Engineer
# Output:
# ==== Today's date is: 2021-08-19 ====
# =================================
# Name: Sarah
# Age: 35 years old
# Profession: Doctor
# Name: Dave
# Age: 32 years old
# Profession: Engineer
# =================================
# There are 2 people over 30.
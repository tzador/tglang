BEGIN { # BEGIN statement marks the beginning of the script
    FS = "," # Set the field separator to ',' to read CSV files
    # AWK variables with descriptive names for readability
    long_term_debt = 0
    short_term_debt = 0
    # Create arrays to store data for each category
    # Index 0 will store total debt and the following indices will store debt for each year
    LT_debt_array[0] = "Long-Term Debt:"
    ST_debt_array[0] = "Short-Term Debt:"
}
{
    # Loop through each record in the CSV file
    # $1 and $2 represent the first and second column, respectively
    # If the record contains a term of "Long-Term", add debt value to corresponding array
    if ($1 == "Long-Term"){
        for (i=2; i<=NF; i++){
            LT_debt_array[i-1] += $i # Adding the debt value to the appropriate year index in the array
            long_term_debt += $i # Track the total debt for this category
        }
    }
    # If the record contains a term of "Short-Term", add debt value to corresponding array
    else if ($1 == "Short-Term"){
        for (i=2; i<=NF; i++){
            ST_debt_array[i-1] += $i # Adding the debt value to the appropriate year index in the array
            short_term_debt += $i # Track the total debt for this category
        }
    }
}
END { # END statement marks the end of the script
    # Print the results for Long-Term Debt category
    printf("%s %d\n", LT_debt_array[0], long_term_debt)
    for (i=1; i<=NF; i++){
        printf("Year %d debt: %d\n", i-1, LT_debt_array[i])
    }
    # Print the results for Short-Term Debt category
    printf("%s %d\n", ST_debt_array[0], short_term_debt)
    for (i=1; i<=NF; i++){
        printf("Year %d debt: %d\n", i-1, ST_debt_array[i])
    }
}
#!/bin/awk -f

# The {code} is a built-in function that converts the input into HTML code.
BEGIN {

  # This section declares all the variables needed for the code.
  RS = "-"; FS = ","; count = 0;

  # The getline function reads the first line of input and stores it in the variable "line".
  getline line

  # The "split" function splits the input line by the field separator "," and stores the results in the "fields" array.
  split(line,fields,",")

  # This loop iterates over each field in the "fields" array.
  for (i in fields) {

    # The "match" function checks if the current field contains an "a" followed by a number.
    if (match(fields[i],/a\>[0-9]/)) {

      # If the condition is met, the "count" variable is incremented by 1.
      count++

      # The "getline" function reads the next line of input and stores it in the variable "line".
      getline line

      # The "split" function splits the input line by the field separator "-" and stores the results in the "split_line" array.
      split(line,split_line,"-")

      # The "code" variable is assigned the HTML code for displaying the current field and its value.
      code = "<p>" fields[i] ": " split_line[1] "</p>"

      # The "print" function outputs the HTML code.
      print code

      # The "exit" statement is used to end the current iteration of the loop.
      # This is needed because the loop will continue to iterate over the remaining fields in the array, but the required HTML code has already been output.
      exit
    }
  }
}

# The END block is executed after all input has been processed.
# Here, the number of fields containing "a" followed by a number is displayed.
END {
  print count " fields matched the pattern."
}

# Sample input:
# a1,b2,c3
# d4-a,5e,6f
# g7-h,8i,j9

# Sample output:
# <html>
#   <body>
#     <p>a1: d4</p>
#     <p>a2: g7</p>
#     2 fields matched the pattern.
#   </body>
# </html>
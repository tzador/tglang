function split(word, sep) {
   # This function splits a string into an array of substrings
   # based on a specified separator and returns the array
   # Parameters:
   #   word (string): the string to be split
   #   sep (string): the separator to split the string on
   # Returns:
   #   an array of substrings from the original string
   len = length(word)
   array_length = 0
   array_index = 1
   # initialize an empty array to store the substrings
   split_array = {}
   # loop through each character in the string
   for (i = 1; i <= len; i++) {
       # if the current character matches the separator
       if (substr(word, i, 1) == sep) {
           # add the substring between the previous index and the current index to the array
           split_array[array_index] = substr(word, prev_index, (i-prev_index))
           # increment the array index
           array_index++
           # set the previous index to the current index + 1
           prev_index = i+1
           # increment the length of the array
           array_length++
       }
   }
   # add the remaining substring to the array
   split_array[array_index] = substr(word, prev_index, len)
   # return the array
   return split_array
}
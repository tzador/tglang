# This code snippet uses AWK to count the number of words in a file and print the count for each word.
# The file to be read is specified as the first argument when running the script.
# Usage example: awk -f wordcount.awk file.txt

BEGIN{
    # Initialize an empty array to store the word count for each word
    # The index of the array will be the word itself
    # The value of the array will be the number of times the word appears in the file
    # Syntax for creating an array in AWK is "array_name[index] = value"
    word_count[""] = 0
}

{
    # Split each line of the file into an array of words,
    # using space as the delimiter
    # The built-in AWK function "split()" is used with the syntax "split(string, array, separator)"
    # After the split, the variable "words" will be an array containing all the words on that line
    split($0, words, " ")

    # Loop through each word in the array
    for(i=1; i<=length(words); i++) {

        # Remove any punctuation from the word using the built-in AWK function "gsub()"
        # The syntax for gsub() is "gsub(find, replace, string)"
        # Here, we are replacing any non-alphanumeric character with an empty string
        gsub("[^a-zA-Z0-9]", "", words[i])

        # Convert the word to lowercase using the built-in AWK function "tolower()"
        # The syntax for tolower() is "tolower(string)"
        words[i] = tolower(words[i])

        # Check if the word already exists in the word_count array
        if (words[i] in word_count) {

            # If the word exists, increment the count by 1
            word_count[words[i]]++

        } else {

            # If the word does not exist, add it to the array with a count of 1
            word_count[words[i]] = 1
        }
    }
}

END{
    # Loop through all the words in the word_count array
    for(word in word_count) {

        # If the word is not empty (the initial empty string value that was added),
        # print the word and its corresponding count in the format "word: count"
        if (word != "") {
            print word": "word_count[word]
        }
    }
}
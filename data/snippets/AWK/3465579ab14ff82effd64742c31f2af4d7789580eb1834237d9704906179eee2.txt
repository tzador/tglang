# This code snippet will use the AWK programming language to count and display the number of times a word appears in a file.

# We begin by using the BEGIN pattern which will execute the following code block only once at the beginning of the program.
BEGIN{
    # Declare an associative array 'count' to store the word count.
    # The key will be the word and the value will be the count.
    # We also define the field separator to be any non-alphanumeric character.
    # This means each word will be treated as a separate field.
    FS = "[^[:alnum:]]+";
    # Initialize the variable 'total' to 0 which will store the total number of words.
    total = 0;
}

# Next, we use the /pattern/ { action } syntax to create a pattern-action statement.
# This will be executed for each line in the input file.
# The pattern will match all fields and the action will be to increment the count of that word in the 'count' array.
# We also increment the 'total' variable to keep track of the total number of words.
{
    for(i=1; i<=NF; i++){
        count[$i]++;
        total++;
    }
}

# Finally, we use the END pattern which will execute the following code block at the end of the program.
END{
    # Loop through the 'count' array and print the word and its count.
    for(word in count){
        printf("%s: %s\n", word, count[word]);
    }
    # Print the total number of words.
    printf("Total: %d\n", total);
}
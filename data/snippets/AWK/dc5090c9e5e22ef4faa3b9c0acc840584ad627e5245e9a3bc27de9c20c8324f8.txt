# This is a complex AWK code snippet that reads and processes a CSV file
# The code snippet implements a nested for loop structure to iterate over rows and columns
# It also uses conditional statements and built-in AWK functions

BEGIN { # Start of AWK program
	FS="," # Set the field separator to comma for CSV file
	
	# Define arrays to store unique values for each column
	delete col1; delete col2; delete col3; delete col4; delete col5
	
	row_count = 0 # Variable to count the number of rows
	
	# Read CSV file and store values in corresponding arrays
	while ((getline < "input_file.csv") > 0) { # Loop through each row of the file
		row_count++ # Increment row count
		
		# Loop through each column in the row
		for (i=1; i<=NF; i++) {
			if (NR == 1) { # For the first row (header)
				# Store column names as keys in arrays
				col1[$i] = i
				col2[$i] = i
				col3[$i] = i
				col4[$i] = i
				col5[$i] = i
			}
			
			else { # For subsequent rows
				# Store unique values for each column as keys in arrays
				col1[$(col1[1])] = 1
				col2[$(col2[1])] = 1
				col3[$(col3[1])] = 1
				col4[$(col4[1])] = 1
				col5[$(col5[1])] = 1
			}
		}
	}
	
	# Print unique values for each column
	print "Unique values for Column 1: "
	for (key in col1) {
		if (key != 1) { # Skip the first key (corresponding to column name)
			print "\t" key
		}
	}
	
	print "Unique values for Column 2: "
	for (key in col2) {
		if (key != 1) { # Skip the first key (corresponding to column name)
			print "\t" key
		}
	}
	
	print "Unique values for Column 3: "
	for (key in col3) {
		if (key != 1) { # Skip the first key (corresponding to column name)
			print "\t" key
		}
	}
	
	print "Unique values for Column 4: "
	for (key in col4) {
		if (key != 1) { # Skip the first key (corresponding to column name)
			print "\t" key
		}
	}
	
	print "Unique values for Column 5: "
	for (key in col5) {
		if (key != 1) { # Skip the first key (corresponding to column name)
			print "\t" key
		}
	}
	
	close("input_file.csv") # Close the CSV file
	print "Total number of rows: " row_count # Print the total number of rows in the file
}

# End of AWK program
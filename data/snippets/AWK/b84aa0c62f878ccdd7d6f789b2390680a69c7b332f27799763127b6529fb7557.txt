############################################
# This AWK code snippet performs a search  #
# and replace operation on a CSV file.      #
#                                          #
# Input: CSV file with header row           #
#        search term                       #
#        replace term                       #
# Output: Updated CSV file (overwrite)      #
############################################

# Set search term and replace term using command line arguments
SEARCH_TERM = ARGV[2]
REPLACE_TERM = ARGV[3]

# Check if search term and replace term are provided
if (SEARCH_TERM == "" || REPLACE_TERM == "")
  # Exit with error message
  printf "ERROR: Please provide both search and replace terms\n" > "/dev/stderr"
  exit 1
fi

# Initialize counter for number of replacements
num_replacements = 0

# Set field separator as comma for CSV file
FS = ","

# Read header row and store in array
# We will use this array to determine which fields to update
NR == 1 {
  for (i = 1; i <= NF; i++) {
    # Store header field names in array with their respective indices
    header_fields[$i] = i
  }
}

# Perform search and replace on each field in the CSV file
NR > 1 {
  # Loop through each field in current record
  for (i = 1; i <= NF; i++) {
    # Check if the current field needs to be updated
    if ($i == SEARCH_TERM) {
      # Update the field with the replace term
      $i = REPLACE_TERM
      # Increment number of replacements
      num_replacements++
    }
  }
  # Reconstruct the record with the updated fields
  record = $1
  # Loop through each field in header array
  for (header in header_fields) {
    # Append current field value to reconstructed record
    record = record FS $header
  }
  # Print the updated record to the output file
  print record > FILENAME
}

# Print number of replacements and success message to standard output
printf "Number of replacements: %d\nSearch and replace operation successful\n" % num_replacements
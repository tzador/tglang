# Setting up an AWK program to analyze text files and generate a report

BEGIN {
    RS = "." # Set the record separator to a period to read files by sentences
    FS = " " # Set the field separator to a space to read words in each sentence
    total_sentences = 0 # Initialize a variable to count total sentences
    total_words = 0 # Initialize a variable to count total words
    unique_words = 0 # Initialize a variable to count total unique words
    word_count = 0 # Initialize a variable to keep track of word count per sentence
    max_words = 0 # Initialize a variable to keep track of maximum words in a sentence
    max_sentence = "" # Initialize a variable to keep track of the sentence with maximum words
    min_words = 9999 # Initialize a variable to keep track of minimum words in a sentence
    min_sentence = "" # Initialize a variable to keep track of the sentence with minimum words
    word_frequency = [] # Initialize an empty array to store word frequencies
}

# Function to calculate word frequency
function calc_word_freq(sentence) {
    for (i = 1; i <= NF; i++) {
        word = $i # Set word variable to current field
        word_frequency[word]++ # Increment word frequency in array
    }
}

# Function to print report
function print_report() {
    # Print total sentences, words, and unique words
    printf("---REPORT---\n")
    printf("Total Sentences: %d\n", total_sentences)
    printf("Total Words: %d\n", total_words)
    printf("Unique Words: %d\n", unique_words)

    # Print average words per sentence
    printf("Average Words Per Sentence: %f\n", total_words / total_sentences)

    # Print sentence with maximum words
    printf("Sentence with Maximum Words: %s\n", max_sentence)
    printf("Number of Words in Maximum Sentence: %d\n", max_words)

    # Print sentence with minimum words
    printf("Sentence with Minimum Words: %s\n", min_sentence)
    printf("Number of Words in Minimum Sentence: %d\n", min_words)

    # Print word frequency table
    printf("---WORD FREQUENCY---\n")
    for (word in word_frequency) {
        printf("%s: %d\n", word, word_frequency[word])
    }
}

# Main body of AWK program
{
    # Skip over empty lines
    if ($0 != "") {
        total_sentences++ # Increment total sentences count
        word_count = NF # Store number of words in sentence
        total_words += word_count # Increment total words count by number of words in sentence
        calc_word_freq($0) # Call function to calculate word frequency in sentence
        # Update max words and corresponding sentence
        if (word_count > max_words) {
            max_words = word_count
            max_sentence = $0
        }
        # Update min words and corresponding sentence
        if (word_count < min_words) {
            min_words = word_count
            min_sentence = $0
        }
    }
}

END {
    # Calculate unique words count
    for (word in word_frequency) {
        unique_words++ # Increment unique words count
    }
    print_report() # Call function to print report
}
+ store(&str word)  // function to store a word in the dictionary
 {
    STRING value = "";  // initialize value variable as empty string

    for (int i = 0; i < word.length(); i++){  // loop through each character in the word
        if (value == ""){  // check if value is still empty
            value = word[i];  // if yes, set value as first character in the word
        }
        else{  // if value is not empty
            value = value + " " + word[i];  // concatenate a space and current character to it
        }
    }

    if (value in dictionary){  // check if value already exists in the dictionary
        dictionary[value] = dictionary[value] + 1;  // if yes, increment its count
    }
    else{  // if value does not exist in the dictionary
        dictionary[value] = 1;  // set count as 1
    }
}

+ search(&str word)  // function to search for a word in the dictionary
 { 
    if (word in dictionary){  // check if word exists in the dictionary
        return dictionary[word];  // return its count if it does
    }
    else{  // if word does not exist in the dictionary
        return 0;  // return 0 as its count
    }
}

+ keyboard latin{  // define a keyboard layout
    store "is"  // store the word "is" into the dictionary
    store "hello"  // store the word "hello" into the dictionary
    store "goodbye" // store the word "goodbye" into the dictionary
    store "welcome" // store the word "welcome" into the dictionary
}

+ group(main) // define a main group for the keyboard
{
    key "i" + "s" > use(search, "is"); // when "i" and "s" are pressed together, search for "is" in the dictionary and return its count
    key "z" + "x" > use(search, "hello"); //when "z" and "x" are pressed together, search for "hello" in the dictionary and return its count
    pick(1) key "g" > use(search, "goodbye"); // when "g" is pressed, search for "goodbye" in the dictionary and return its count
    any() key "w" > use(search, "welcome"); // when any key is pressed followed by "w", search for "welcome" in the dictionary and return its count
}
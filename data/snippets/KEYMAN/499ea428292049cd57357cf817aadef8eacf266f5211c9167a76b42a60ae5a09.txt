begin Unicode > use(main)       -- sets up the context unicode
group(main) using keys          -- starts the main group

    + [a-z] > index(1)                  -- sets up index for alphabet keys
    + [A-Z] > index(2)                  -- sets up index for capital alphabet keys
    + [0-9] > index(3)                  -- sets up index for numerical keys
    + [\\] > index(4)                   -- sets up index for special character keys

    any(4) + any(1) > index(5) + any(2)  -- index for special characters and alphabet keys
    any(1) + any(4) > index(5) + any(3)  -- index for alphabet keys and numerical keys

    context(caps => 'A')                  -- sets the caps lock to 'A'

    any(index) char > context(index)     -- sets the context of keys based on their index

match index with
    '1' + 'A' > output ▶ [e]            -- output 'e' when 'A' and '1' keys are pressed
    '2' + 'Z' > output ▶ [T]            -- output 'T' when 'Z' and '2' keys are pressed
    '3' + '#' > output ▶ [$]            -- output '$' when '#' and '3' keys are pressed
    '4' + '~' > output ▶ [-]            -- output '$' when '~' and '4' keys are pressed
    else + ['] + any(index) > beep         -- beep when any key other than 'A', 'Z', '#', '~' and "'" are pressed

end match;
end group;
end Unicode;
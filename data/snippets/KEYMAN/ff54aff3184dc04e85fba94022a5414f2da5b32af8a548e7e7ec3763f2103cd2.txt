store(my_layout) "Keyboard Layout"   
begin   
    match[any] > index(0)    + [any] > index(1)  + [any] > context(200) "%s"    
    match[%s] + [any] store(my_layout_keys) "[a-z]"    
    match[any] + [any] > context(200) Save("%s","my_layout")    
    store(%s) "Keyboard Target"    
    any(%d...%d) + index(0) any(%d...%d) index(1) > index(4)   "%d"    
    save(StoreID) > index(5) SetText("%s")    
    store(StoreID, waiting)    SetTarget(%s)    
    + [any] [any] any("*")> load(my_layout)  
    index(2)   "keyman:evaluateContext(%d)"  
    + [any]    index(3)    "keyman:context(%s)"  
    store(RemainingKeyWait)    any(index(4) + index(5))  
    if(index(1) + index(6) - 1 ) > index(1)    SetStoreIndex(my_layout_keys, index(7) - 1)    
    index(7)   "keyman:transition(%s)"  
    store(PtrIndex) "contextDirection"  
    unicode(any), store(LastChar)  
    +"my_layout" + [any]  > index(1) Unicode(context(2))  
    set(my_layout, %s) "Keyboards Context"  
    unicode(s(e)lect) FinalAction(%s) "Keyman"  
    my_layout "Keyman Option"  
    system(list) "Keyman Buffer "%s""  
    any(%d...%d) any() > index(8) "Keyman Flush option"  
    index(9) "Any target"%s  
    store(CaretIndex) UseCookie("KeymanCookie", index(10), unicodetext)  
    If(SelectText ) any("%s+") "Final"  
    index(11)  "YourAnswer"  
    call(from()) KeyS(u)ck(%s, "Keyman")  
    %s index(12) SetUnhandledExceptionFilter("KeymanMonitor", Pointer(index(13)),"%s")  
    call(PtrIndex + StoreIndex) If(NextWord)  
end
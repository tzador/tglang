+ any(x) {  // declares a function named "any" that takes in a variable x
    var i, res := 0;  // declares and initializes variables i and res
    for i < strlen(x) + 1 {  // executes a for loop while i is less than the length of x plus one
        res += x[i];  // adds x[i] to res
        i++;  // increments i
    }
    return res;  // returns the final value of res
}

match (_, context) "{  // declares a match statement with "_" to represent the first parameter, and "context" as the second parameter
    index = 0;  // declares a variable index and sets its value to 0
    store(CODE) 'store{  // declares a store statement with a variable "CODE" to store the following code
        + any(context[type].base) > "0" + index {  // calls the "any" function with the base parameter of the context and checks if the result is greater than 0 + index
            context[type] := remove(context[type], index, 1);  // removes 1 character from the index position of the context[type]
        }
        index += 2;  // adds 2 to the index
    }'  // ends the store statement
}  // ends the match statement
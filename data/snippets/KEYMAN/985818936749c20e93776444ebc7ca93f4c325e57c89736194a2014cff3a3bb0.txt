" ==============================================================================
" // This is a complex code snippet in KEYMAN programming language
" 
" Author: John Doe
" Purpose: This code snippet is used for data manipulation and analysis
" ==============================================================================
" 
" ---------------------------------------
" // SECTION 1: Variable Initialization
" ---------------------------------------
" 
" Declare variables to store data and analysis results
" 
" C1 := CHAR  ! variable to store character data
" N1 := NUMBER ! variable to store numerical data
" S1 := STR    ! variable to store string data
" B1 := BOOL   ! variable to store boolean data
" 
" -------------------------------------------------
" // SECTION 2: Data Input and Conversion to Numbers
" -------------------------------------------------
" 
" Ask user to input data
" 
" PICKANY "Please enter a character: "         ! prompt for input
" C1 := P               ! store input in C1
" 
" PICKANY "Please enter a number: "           ! prompt for input
" S1 := STRING         ! convert input to string
" N1 := VAL S1         ! convert string to number using VAL function
" 
" PICKANY "Please enter a string: "           ! prompt for input
" S1 := P              ! store input in S1
" 
" PICKANY "Please enter a boolean (T/F): "    ! prompt for input
" B1 := BOOL           ! convert input to boolean
" 
" ----------------------------------
" // SECTION 3: Data Analysis
" ----------------------------------
" 
" Check if input is a vowel
" 
" IF C1 == "a" OR C1 == "e" OR C1 == "i" OR C1 == "o" OR C1 == "u" THEN
"   S1 := "Input is a vowel"  ! update S1 with result
" ELSE
"   S1 := "Input is not a vowel"  ! update S1 with result
" ENDIF
" 
" Check if input is a prime number
" 
" IF N1 < 2 THEN
"   S1 := "Input is not a prime number"  ! update S1 with result
" ELSE
"   B1 := TRUE                        ! initialize B1 as TRUE
"   FOR I FROM 2 TO N1 - 1 DO          ! loop through numbers from 2 to N1-1
"     IF N1 MOD I == 0 THEN            ! check if N1 is divisible by any number
"       B1 := FALSE                   ! update B1 to FALSE if divisible
"       BREAK                          ! break out of loop
"     ENDIF
"   NEXT I
" IF B1 == TRUE THEN
"   S1 := "Input is a prime number"    ! update S1 with result
" ELSE
"   S1 := "Input is not a prime number" ! update S1 with result
" ENDIF
" 
" -----------------------------------------------------
" // SECTION 4: Output Results and Error Handling
" -----------------------------------------------------
" 
" Print results and handle possible errors
" 
" CONSOLE "Input character: " + C1          ! print input character
" CONSOLE "Input number: " + N1             ! print input number
" CONSOLE "Input string: " + S1             ! print input string
" 
" IF B1 == TRUE THEN
"   CONSOLE "Result is true"               ! print result for prime number check
" ELSE
"   CONSOLE "Result is false"              ! print result for prime number check
" ENDIF
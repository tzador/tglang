store(&Keys) 'This store statement declares a keyboard object called "Keys"
behold '&' 'This is an annotation for a variable that is used to access member keys of the keyboard object
begin 'This is the beginning of the keyboard layout definition
key(0) '"' 'This specifies that the "0" key should output a double quotation mark
textSuggestion 'This is a suggestion for the textSuggestion variable
capslock 'This is used to indicate that the key should output its shifted character if the caps lock state is on
key(2) 'a' 'This specifies that the "2" key should output the lowercase letter "a"
textSuggestion 'This is a suggestion for the textSuggestion variable
end 'This is the end of the keyboard layout definition
!
any(LENGTH) 'This begins the rule for specifying the length of characters allowed for input
deletes 'This will delete any character that does not comply with the specified length
set(&err, 1) 'This sets an error variable to 1 if the length rule is not met
context('') 'This specifies that the rule applies to the entire keyboard
!Amharic_Ge'ez 'This is the specification for the Amharic_Ge'ez keyboard
deadkey '~' 'This defines the "~" key as a deadkey, meaning it modifies the key following it
+' 'This specifies that if the "~" key is followed by a "+", the output should be "Â±"
today() 'This will output the current date when the "today" key is pressed
deadkey '`' 'This defines the "`" key as a deadkey, meaning it modifies the key following it
'x' 'This specifies that if the "`" key is followed by an "x", the output should be a multiplication symbol
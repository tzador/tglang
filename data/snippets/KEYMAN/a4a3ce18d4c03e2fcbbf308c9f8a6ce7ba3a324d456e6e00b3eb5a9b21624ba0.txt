root Unicode

any(cons) + 's' > context // adding suffix 's' to any consonant

+ 'ion' > index: 1 + 'i' // replacing 'ion' with 'ion' and adding 'i' to the beginning

context (n) '(' next '/plural ) /^/' + any(vowel) > index: 1 + 'e' // changing the context for nouns to add -e after plural suffix if the next letter is a vowel

c + 'h' '{n}?' + > context // handling the exceptions for words starting with 'ch' where 'h' is pronounced as a separate consonant

+ any(consonants) + 'a' > index: 1 + 'o' // changing words ending with '-a' to '-o' (ex: pizza -> pizzo)

+ 'w' '{u}?' > context // correcting mispronunciation of words starting with 'w' where 'u' is not pronounced (ex: wrong -> rong)

key keyboard_ID

+ [CTRL ALT K] > 'kelvin' // creating a shortcut for typing 'kelvin' with CTRL+ALT+K

begin Unicode // defining the beginning of a new Unicode range

 U+1F600Â U+1F77F + [ALT CAPS LOCK] > context // handling keyboard switching for emoticons in website URLs 

[SHIFT K_9] + any(ROW J) > index: 1 + '9' // replacing alphabetical row J with number row 9 when SHIFT and the number 9 key are pressed at the same time

end Unicode // ending the Unicode range definition

store(StartsWithVowel) '1' // storing the value '1' if the word starts with a vowel 

store(StartsWithConsonant) '0' // storing the value '0' if the word starts with a consonant

any(cons) + 's'  > context
+ any([StartsWithConsonant]) + '/' + store([StartsWithVowel]) + '/' + [quote] > context // adding additional context for plural forms of words starting with a consonant or vowel
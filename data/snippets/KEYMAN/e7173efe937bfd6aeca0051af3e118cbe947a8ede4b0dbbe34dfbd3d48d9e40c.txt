-- Define an object to store key mappings
store(&matchRules)

-- Define the context to match against
context(&matchContext)

+ any(nul) ">" any > index(left, 1, 0) "⁞" index(right, 0, 1) any "⁞" 
  if(&matchContext) any(key) index(left, 0, 0) &insert(key, 1, 0) index(right, 0, 1)
  index(left, 2, 0) &delete()

+ any(nul) "<" any > index(left, 1, 0) "⁞" index(right, 0, 1) any "⁞"
  if(&matchContext) any(key) index(left, 0, 0) &insert(key, 1, 0) index(right, 0, 1)
  index(left, 2, 0) &delete()

-- Define function to insert key
function index(left, right, pos)
  local str = getString(&matchRules, pos)
  str = insert(str, 1, left)
  str = insert(str, str:length() + 1, right)
  return str

-- Define function to delete key
function delete()
  local str = getString(&matchRules, 0)
  str = remove(str, 1, 1)
  return str

-- Define function to match context
function matchContext()
  local str = context()
  if (str == "KEYMAN") then
    return true
  end
  return false
end
 -- Define function to insert key at given index
function insert(str, key, index)
  return substr(str, 1, index) + key + substr(str, index + 1, str:length())
end
 
-- Define function to remove characters from a string
function remove(str, index, count)
  return substr(str, 1, index - 1) + substr(str, index + count, str:length())
end
store(n)  'Small letter shortcut
any(n) > 'Small letter shortcut for all characters
beep (n) 'Unicode character shortcut

begin 'Start of rule section
+ [NAMES_END] + any(n)  '>' 'Maps the output of the rule to the variable's value'
 '  'The variable will disable the rule if it contains 0'
context (n) index(not n) use store(n) any(n) '<' 'Create new context using index value'
+ store (n) index(numfrom(n)) any(not n) '<' 'Stores the unicode character for current context'
context any(n) '<' 'Create new context for all characters'
+ any(n) 'Regex search for any character'
index(n) '<' 'Set the index for the current context'
 

any(n) + '  'The output of the rule will be a unicode character'
  [NAMES_END] > 'Maps the output of the rule to the variable's value'
  '  'The variable will disable the rule if it contains 0'
  '  'The output of the rule will be an error'
  'The output of the rule will be an empty string'
  
context (n) use index(n) any([n] ANY) '<' 'Create new context using index value'
+ any(n) '<' 'Create new context for a specific character'
  [UNICODE] > index(n)
  > index(n) 

'Output of rule section' 
output(index(n)) 'Concatenate all index values and output as a unicode string'

end 'End of rule section'
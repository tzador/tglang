store(&KMVar1) {       //stores value in KMVar1

        ' This is a long and complex code snippet in KEYMAN
        ' It involves storage and manipulation of variables
        ' and creation of a recursive function

        // create a loop to iterate through array and assign values
        cmb @ KMHiragana = ['あ', 'ぃ', 'ぅ', 'ぇ', 'ぉ'];
        for index = 0 to 4 step 1
            cmb @ KMKatakana = KMHiragana(index);

        + [CTRL ALT SHIFT M] + [CTRL ALT SHIFT S] >  // define hotkey combination
        if(KMVar = KMHiragana(2)) {   // checks if KMVar is equal to third value in array

            output(KMHiragana(3));   // outputs fourth value in array
        }

        define &KMFunction() {    // define recursive function with &KM prefix
            store(&KMVar2) {        // stores value in KMVar2

                if(KMVar2 contains 'e') {    // checks for 'e' in KMVar2
                    set(&KMVar2, 'a');       // sets 'a' for all 'e' in KMVar2
                }
            }
            call(&KMFunction);  // calls the recursive function
        }

        // output KMVar2 after calling the recursive function
        output('Updated KMVar2: ' + KMVar2);
    }

    // define &KMVar3 which will be used in a callback function
    define &KMVar3;
    output('Waiting for input from user...');

    // callback function triggered when user types 'I' using hotkey
    + 'I' + [CTRL ALT SHIFT C] > call(&KMCallback);
    define &KMCallback() {  
        store(&KMVar3) {        // stores value in KMVar3
            clear(&KMVar1);     // clears KMVar1
            prompt('Please enter a new value: ');  // prompts user for input
        }
        store(&KMVar1) {        // stores new value in KMVar1
            output('New value for KMVar1: ' + KMVar1);  // outputs new value
            call(&KMFunction);    // calls the recursive function again
        }
    }
// Example of a function that reverses a string
begin function ReverseString(text: String) {
    var result: String = ''; // empty string
    for(var i: Number = text.length - 1; i >= 0; i--) { // loop backwards through string
        result += text[i]; // add each character to result in reverse order
    }
    return result;
}

// Example of a custom keyboard layout
store(&unicode) 'custom' + 'basic';

group(main) using keys

K_A = 'a' U+0061 > 'รก' U+00E1 > 'a' + 'acute';
K_B = 'b' U+0062 c 'c' > 'b' U+0062 'c' U+0063 > 'c' U+010D;

Any(&enclosed) + [SHIFT K_1] > U+007B // open curly bracket
Any(&enclosed) + [SHIFT K_2] > U+005B // open square bracket
Any(&enclosed) + [SHIFT K_3] > U+005D // close square bracket
Any(&enclosed) + [SHIFT K_4] > U+0028 // open parentheses
Any(&enclosed) + [SHIFT K_5] > U+0029 // close parentheses

+ [CTRL K_1] > 'a' 'b' // insert characters 'ab' when CTRL + 1 is pressed
+ [CTRL K_2] > Call(&ReverseAlias);
// Call statement to call our defined function ReverseString
+ [CTRL K_3] > v 'a' 'r' 'Reversed' is 'ReverseString(bt) + Call(&ReverseAlias)';

group(vowelsOnly) using keys // create a group to only show and use vowels

K_A = 'a';
K_E = 'e';
K_I = 'i';
K_O = 'o';
K_U = 'u';

group(consonantsOnly) using keys // create a group to only show and use consonants

K_B = 'b';
K_C = 'c';
K_D = 'd';
K_F = 'f';
K_G = 'g';
K_H = 'h';
K_J = 'j';
K_K = 'k';
K_L = 'l';
K_M = 'm';
K_N = 'n';
K_P = 'p';
K_Q = 'q';
K_R = 'r';
K_S = 's';
K_T = 't';
K_V = 'v';
K_W = 'w';
K_X = 'x';
K_Y = 'y';
K_Z = 'z';
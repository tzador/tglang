+ [CTRL ALT r] > use(doFunction)

store(&s) Some Text In Store(
    &s % 'Some text in store'
)

context &c = Unicode;
+ any(cons) 'a' + 'grave' > (\x) if(&c) context use(doFunction)
+ any(vowel) + 'deadkey' > (\x) if(&c) context use(doFunction)

any(vowel) + 'any' > use(\x) if(&c) context use(doFunction)

CharBegin % Start of character definition block
any(c) + 'acute' + 'k' > n (&c % 'k' with an acute accent)
any(c) + 'circumflex' > n (&c % 'c with a circumflex')
next &c > n (
    if(&c = 'o' or 'u') (
        (\u031B % Combining inverted breve)
    ) if(&c = 'e' or 'i') (
        (\u0301 % Combining acute)
    )
)
CharEnd % End of character definition block

group(main); % Start of the main group

store(&text) 'Sample Text';
store(&text2) 'Another Text';

replace(%s); $("[^a-zA-Z\\s]","") use(\x) group(main); % Replace any non-letter and non-whitespace character with empty string

store(&alphabet) ('a'.. 'z','A'.. 'Z');

any(&alphabet); % Matches any letter in the alphabet

char &vowels {
    'a', 'e', 'i', 'o', 'u'
};

char &consonants {
    'b', 'c', 'd', 'f', 'g',
    'h', 'j', 'k', 'l', 'm',
    'n', 'p', 'q', 'r', 's',
    't', 'v', 'w', 'x', 'y',
    'z'
};

any(&vowels) use(addTilde);
any(&consonants) use(addCircumflexGrave);
store(&text) 'Example Text';
store(&text2) 'Another Example';
any(&text); > callFunction(\x) use(argument1) % Matches and calls function on every character in the stored text

store(&arg1) 'Argument One';
store(&arg2) 'Argument Two';

if(&arg1='Argument One' and &arg2='Argument Two') > print('Both arguments matched');

Jump(&c,'$()^\wedge') % Jumps to the next character in the stored string if it matches the regex pattern '$()^\wedge'

+ [CTRL ALT l] > use(anotherFunction)

group(symbols); % Start of the symbols group

any('&symbols) + '.period' > n (&c,'\u0307' % Combining dot above)

any('&symbols) + '/slash' > n (&c,'\u0338' % Combining long solidus overlay)

any('&symbols) + '-hyphen' useshape(&c) > 'graves' % Matches any symbol character and replaces it with its grave form

if(&c='\u2018') > n ('\u0301'); % If the symbol character is a left single quotation mark, replace it with a combining acute
if(&c='\u2019') > n ('\u0302'); % If the symbol character is a right single quotation mark, replace it with a combining circumflex

use(n) &c1 ("\u005E"); % Adds a circumflex to the character
use(n) &c2 ('\u026C'); % Adds a  ? to the character
next (&c), use(n) &c &c1 &c2 % Adds to the next character and n to the first and second character

store(&text) 'Symbolic Text';
store(&text2) 'Another Symbolic Text';

any(&symbols); > print('\\u'+($('-','') use(\x))) group(symbols); % Matches any symbol character, replaces any hyphens with empty string, and adds a Unicode escape sequence to the output.
begin Unicode > use(main), store(&u)
 
group(VOWELS)   \+ U+033C  > index(1,2) "_"  \n
    ~ [a e o u]
 
group(CONSONANTS) + [L T] > index(1,1) "_" 
    ~ [b d g k m n r]
    + [M P] + "_" > index(1,2) "_" 
    ~ [f h l]
 
store(A) | "\u{1C>" + U+033C
 
any(A) + U+033C > index(1,1) " " 
any(A) any(A) > index(1,1) index(2,2)
 
if(none(A) any(CONSONANTS) none(A)) Any(A) > index(2,1) "_" 
 
if(none(A) any(A) none(A) any(VOWELS) ) Any(CONSONANTS) > index (2,2) "_"
 
+ any(VOWELS) > index (1)
 
set(&vuni)
 
if(APOSTROPHE ANY(VOWELS)) + any(APOSTROPHE) > context index(1,1) store(&luni) "a" > context index(1,2) any(APOSTROPHE) 
if(APOSTROPHE+VOWELS) > context index(1,1) store(&luni) "a" > context index(1,2) any(APOSTROPHE) 


Any(A) any(VOWELS) any(A) > index (1,2) "_" 
 
if(none(any(A)+any(VOWELS)none(any(A)) Any(any(VOWELS))), index (1))+any(CONSONANTS) > any(CONSONANTS)+
 
any(A) > context index (1,1) "n" > context index (1,2) "+" 
any(U) > context index (1,1) "o" > context index (1,2) "+" 
any(L) > context index (1,1) "l" > context index (1,2) "+"
 
set(&string, '&#x25C3;&#9414;&#x00F8;&#x00A3;&#x2033;')
set(&result, map(&string, index(1,1)) + map(&string, index(1,2))) 

set(&msg, "Input some text:")
+ any(VOWELS) > index(1,1) "\"" + store(&msg) 
any(.VOWELS) > ", you are the first vowel.\"" 
 
if(+ any(CONSONANTS) > set(&check, "you have some consonants in your input: " + index(1)))

Output (annotated in markdown for clarity):
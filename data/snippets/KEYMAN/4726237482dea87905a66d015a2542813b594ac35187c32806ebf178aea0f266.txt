+ saveTextToFile: function(text, filename){
                // define File object
                var f = File();
                // open file for writing
                f.openAndSelectForOutput();
                // write text to file
                f.output(text);
                // save file with provided filename
                f.saveAs(filename);
                // close file
                f.close();
            }

+ createKeyCombo: function(key1, key2, output){
                // create KeyCombo object
                var keyCombo = KeyCombo();
                // set key1 and key2 as keystrokes
                keyCombo.setKeystroke(key1);
                keyCombo.setTailKeystroke(key2);
                // provide the output when key combo is pressed
                keyCombo.setOutput(output);
                //return the key combo
                return keyCombo;
            }

+ addKeyComboToGroup: function(group, keycombo){
                // add key combo object to group
                group.push(keycombo);
            }

+ addKeyCombosToGroup: function(group, ...keycombos){
                // loop through key combo arguments
                for(var i=0; i<keycombos.length; i++){
                    // add each key combo to the group
                    group.push(keycombos[i]);
                }
            }

+ setupTavultesoftKeyman: function(){
                // create new Keyman interface object
                var keyman = new Tavultesoft.KeymanWeb;
                // initialize keyman
                keyman.init();
                // return keyman object
                return keyman;
            }

+ createKeyboard: function(keyman, name, langid, storeID){
                // create keyboard object
                var keyboard = new keyman.Keyboard;
                // set keyboard name
                keyboard.name = name;
                // set keyboard language id
                keyboard.languageID = langid;
                // set keyboard store id
                keyboard.storeID = storeID;
                // return keyboard object
                return keyboard;
            }

+ registerKeyboard: function(keyman, keyboard){
                // register keyboard with keyman
                keyman.register(keyboard);
            }

+ loadKeyboard: function(keyman, keyboardID){
                // load keyboard with provided id
                keyman.setActiveKeyboard(keyboardID);
            }

+ addKeyboardToGroup: function(group, keyboard){
                // add keyboard object to group
                group.push(keyboard);
            }

+ addKeyboardsToGroup: function(group, ...keyboards){
                // loop through keyboard arguments
                for(var i=0; i<keyboards.length; i++){
                    // add each keyboard to the group
                    group.push(keyboards[i]);
                }
            }

+ saveGroupToFile: function(group, filename){
                // define File object
                var f = File();
                // open file for writing
                f.openAndSelectForOutput();
                // stringify group array
                var str = JSON.stringify(group);
                // write string to file
                f.output(str);
                // save file with provided filename
                f.saveAs(filename);
                // close file
                f.close();
            }

+ loadGroupFromFile: function(filename){
                // define File object
                var f = File();
                // open file for reading
                f.openAndSelectForInput();
                // read data from file
                var data = f.input();
                // parse JSON string to group array
                var group = JSON.parse(data);
                // close file
                f.close();
                // return group array
                return group;
            }

+ deleteKeyCombo: function(group, index){
                // delete key combo at provided index
                group.splice(index, 1);
            }

+ deleteKeyboard: function(group, index){
                // delete keyboard at provided index
                group.splice(index, 1);
            }
+DECLARE

$version '10.0';
    ! This declares a variable named 'version' with a value of '10.0'

char $keyboard 'basic';
    ! This declares a character variable named 'keyboard' with a value of 'basic'

enum names 'John', 'Mary', 'David';
    ! This creates an enum called 'names' with three possible values: 'John', 'Mary', and 'David'

store(  ! Start of Store function
    &option = "option1":U+0009
    ! This stores the value "option1" to the 'option' variable
    )(group rules)  ! Stores the rules in a group named 'rules'
    
AnyBase() + [cons( 'i', 'e' )] [cons( store(&option + OPTIONPOST cons( 'i', 'e' )), 'b' )]; 
    ! This rule creates a keyboard layout where the characters "i" and "e" are mapped to "option1" and "b" respectively.
    
+CONTEXT

index(%dgroup% %smg4% L1S ): Context(indexL1S), Deadkey('SELECT KEYBOARD'), Setindex( 0 );
    ! This defines a context where the dgroup is mapped to 'indexL1S',
    ! 'smg4' is the deadkey that activates this context, and sets the index to 0

test(11) using keys  `c1, `c2, `c3, `c4, `c5, `c6 `c7, `c8, `c9, `ca;
    ! This is a test statement that checks if the keys c1-ca can be pressed and outputs the result as 11 (pass).

match '%s(<+>)':
    store(&input + MATCHEDKEY, '%1');  
    ! This stores the key that was matched within angle brackets to the 'input' variable

(group rules)using keys `ba, `bb, `bd;

! This specifies the rules used for the group named 'rules'.
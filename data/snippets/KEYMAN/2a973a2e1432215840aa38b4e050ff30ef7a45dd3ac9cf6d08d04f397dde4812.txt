// This function creates a Keyman customizable keyboard, with the option to specify font, language and layout
function createKeymanKeyboard(keyboardLayout, font, language){
    
    // Initial setup for Keyman keyboard
    let keyboard = new Keyman.Keyboard();
    
    // Check if font is specified, if not, use default font
    if (font) {
        keyboard.setFont(font);
    }
    else{
        keyboard.setFont("Arial");
    }
    
    // Check if language is specified, if not, use default language
    if (language) {
        keyboard.setLanguage(language);
    }
    else{
        keyboard.setLanguage("English");
    }
    
    // Set the layout of the keyboard based on keyboardLayout parameter
    switch(keyboardLayout){
        case "QWERTY":
            keyboard.setLayout(Keyman.KeyLayout.QWERTY);
            break;
        case "AZERTY":
            keyboard.setLayout(Keyman.KeyLayout.AZERTY);
            break;
        case "DVORAK":
            keyboard.setLayout(Keyman.KeyLayout.DVORAK);
            break;
        default:
            // If invalid keyboard layout is specified, throw an error
            throw new Error("Invalid keyboard layout specified");
    }
    
    // Add custom keys to the keyboard layout
    let customKeys = ["▶", "◀", "▲", "▼"];
    keyboard.addKeys(customKeys);
    
    // Add functionality to the custom keys
    // In this example, the "▶" key will input the HTML code for "►"
    keyboard.addFunction(customKeys[0], function(){
        keyboard.outputHTML("&#9658;");
    });

    // This function will add the keyboard layout to the Keyman app
    function addToKeyman(){
        Keyman.addKeyboard(keyboard);
    }

    // Return the newly created keyboard object
    return keyboard;
}

// Example usage of the function to create a custom Keyman keyboard with the QWERTY layout and Times New Roman font
let customKeyboard = createKeymanKeyboard("QWERTY", "Times New Roman");

// Add the custom keyboard to Keyman
customKeyboard.addToKeyman();
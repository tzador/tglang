+ use(context) {
assume K_LAST_TWOCHARS = 'ui|al|er|st|pa'
store(U_lkey) K_LAST_TWOCHARS
store(U_lstrip) '? $match'
store(Chr_lkey) '[\u0900-\u0DFF]'
store(Chrs_lstrip) C_PUNCTUATION_KEYSCHEMA ' '+U_lkey
+ any(Chr_lkey) > context > index[+1] any(Chrs_lstrip) with U_lkey + any(Chr_lkey) > index context > index[+1] use(U_lstrip) + any(Chr_lkey) > use(U_lkey)
if(index>2) any(Chr_lkey) use(U_lstrip) index[-1] use(U_lkey) + any(Chr_lkey) use(U_lstrip) index[-1] index[+1] use(U_lkey) + any(Chr_lkey) use(U_lstrip) index[-1] index[*$]
index[+1] use(U_lkey)
[/ KEYMAN]
As the code snippet is written in KEYMAN, it follows the basic structure of a KEYMAN code. It begins with the "+ use(context)" statement which declares the context where the code will be used. The "assume" statement creates a variable named "K_LAST_TWOCHARS" and assigns it a string of commonly used characters in two-character combinations. The "store" statements created variables for the first (U_lkey) and last (Chrs_lstrip) characters, as well as their corresponding keys for use in the code.

Next, the "+ any(Chr_lkey)" statement checks if any of the characters within the "store" variables is present in the context, and if so, proceeds to the next steps. The ">" symbol indicates the direction in which to apply the following statements. The "context" statement specifies the index of the matched character and the "index" statement tells the code to select the next character in the index.

The "with" statement specifies the variable to use in the code, in this case, it uses the U_lkey variable. The "+ any(Chr_lkey)" statement repeats the previous steps for every character matched in the context.

The "if(index>2)" statement checks if the index of the matched character is greater than 2, and if so, executes the following statements. The "[-1]" statement selects the previous character in the index, and the "index[+1]" statement selects the character after it. The "use" statement tells the code to use the specified variable for the selected character.

The code snippet ends with the "index[*$]" statement which tells the code to select all characters after the previously selected one. This is useful for instances where a character has multiple possible combinations. The last "use(U_lkey)" statement executes the code for the selected character.

The [/ KEYMAN] statement marks the end of the code snippet and is used to close any open blocks or statements.
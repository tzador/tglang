+ [RULE]
store(&amp;amp;) 'letter1'
store(&amp;middot;) 'letter2'
store(&amp;empty(z)) 'letter3'
store(&amp;empty(h)) 'letter4

any(&amp;letter1) + "'" > store(&amp;dagger)                          c store letter1 + single quote
match[index] + '&amp;letter1' > index + match[index, 1] + store(&amp;dagger)  c store letter1 before first match character
&amp;dagger '^'                                                     c store starting quote
c match[first match] + letter1 > first match + '&amp;dagger'            c replace first letter with letter1 + dagger
nul when '='                                                     c do not output '=' character
&amp;dagger                 c output dagger character
any(&amp;letter1) + '&amp;dagger' > any(&amp;letter3)                  c replace letter1 with empty(z) before the dagger character
any(&amp;letter3) 'd' + '&amp;dagger' > any(&amp;letter2)              c replace empty(z) with letter2 after the dagger character
any(&amp;letter1) '&' + '&amp;dagger' > any(&amp;letter4)              c replace letter1 with empty(h) after the dagger character
any(&amp;letter4) 'h' + '&amp;dagger' > any(&amp;letter1)              c replace empty(h) with letter1 after the dagger character
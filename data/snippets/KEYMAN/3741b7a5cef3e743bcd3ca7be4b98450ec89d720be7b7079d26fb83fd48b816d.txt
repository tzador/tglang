#pragma once
/*
KEYMAN programming language
DESCRIPTION: Keyman is a high-level, interpreted language designed for building keyboard mapping input methods.
AUTHOR: John Doe
VERSION: 1.0
*/

// KEYMAN global variables
key Layout standard_layout; // stores the standard keyboard layout to be modified
key Layout custom_layout; // stores the custom keyboard layout created by the user

// KEYMAN function definitions

/* Function: set_keyboard_layout
 * Description: Sets the standard keyboard layout and initializes the custom layout with the same parameters.
 * Parameters:
 * - standard: the standard layout to be set
 */
function set_keyboard_layout(standard) {
    standard_layout = standard;
    custom_layout = standard;
}

/* Function: add_layer
 * Description: Adds a new layer to the custom keyboard layout.
 * Parameters:
 * - layer_name: the name of the new layer
 * - existing_layer: the layer to be copied from
 */
function add_layer(layer_name, existing_layer) {
    custom_layout.add_layer(layer_name, existing_layer);
}

/* Function: add_mapping
 * Description: Adds a new mapping to the specified layer.
 * Parameters:
 * - layer_name: the name of the layer to add the mapping to
 * - keystroke: the original keystroke to be mapped
 * - mapping: the new keystroke to replace the original keystroke
 */
function add_mapping(layer_name, keystroke, mapping) {
    custom_layout.add_mapping(layer_name, keystroke, mapping);
}

/* Function: customize_keyboard
 * Description: Starts the customization process for the keyboard layout.
 * Parameters:
 * - standard_layout: the standard layout to be modified
 */
function customize_keyboard(standard_layout) {
    set_keyboard_layout(standard_layout); // set the standard and custom layout
    add_layer("Custom Layer", standard_layout.default_layer); // add a new layer based on the standard layout
    add_mapping("Custom Layer", "a", "1"); // add a new mapping to the custom layer
}
+ store(&out, context) {
  // This function stores the specified context in the 'out' variable
  // for use in the 'load' function.
  var context, temp, tempPos; // declare variables
  out = []; // initialize 'out' variable as empty array
  for (var i = 0; i < context.length; i++) { // loop through each character in context
    temp = context.charAt(i); // store current character in temp variable
    if (temp != ' ') { // if character is not a space
      tempPos = findFromArray(out, temp); // call findFromArray function to check if character already exists in 'out' array
      if (tempPos != -1) { // if character already exists in 'out' array
        out[tempPos].freq++; // increment frequency of character in 'out' array
      } else { // if character does not exist in 'out' array
        out.push(new LetterFreq(temp, 1)); // push new LetterFreq object to 'out' array with frequency of 1
      }
    }
  }
  return(out); // return 'out' array with updated character frequencies
}

+ load(&source, context) {
  // This function loads the stored context from the 'source' variable
  // and replaces characters in the 'context' string accordingly.
  var source, temp; // declare variables
  for (var i = 0; i < source.length; i++) { // loop through each character in source
    temp = source[i]; // store current character in temp variable
    for (var j = 0; j < context.length; j++) { // loop through each character in context
      if (context.charAt(j) == temp.character) { // if character in context matches character in temp
        context = context.substring(0, j) + temp.frequency + context.substring(j+1); // replace character in context with frequency of character in temp
      }
    }
  }
  return(context); //return updated 'context' string
}
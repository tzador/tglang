+main()

begin
    // This function allows the user to input a character
    var input: string

    // This variable stores the number of characters in the input
    var length: integer

    // This array stores the ASCII values of the characters in the input
    var ascii_values: array of integer

    // This array stores the binary representation of the ASCII values
    var binary_values: array of integer

    // This loop reads in the input string character by character
    for i := 0; i < length; i++ do
        input := read()

        // This function converts a character to its ASCII value
        ascii_values[i] := ord(input)

    end for

    // This loop converts each ASCII value to binary representation
    for j := 0; j < length; j++ do
        binary_values[j] := toBinary(ascii_values[j])

        // This function converts a decimal number to binary
        function toBinary(decimal: integer)
            var binary: integer

            // This variable stores the position of the current binary digit being calculated
            var position: integer

            // This loop converts the decimal number to binary
            while decimal > 0 do
                // This statement calculates the binary digit for the current position
                // by using the remainder of the decimal number divided by 2
                binary := binary + (decimal % 2) * 10 ^ position
                decimal := decimal / 2
                position := position + 1
            end while
        end function
    end for

    // This loop prints out the binary values separated by spaces
    for k := 0; k < length; k++ do
        print(binary_values[k] + " ")
    end for

    // This statement prints out the length of the input and the number of binary values calculated
    print("Input character length: " + length + " Number of binary values calculated: " + length)

end
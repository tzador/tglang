REM === Keyman Code Snippet ===
Store(n) ' Store number to be processed 
 
Define v ' Variable to store result 

REM === Check if number is positive === 
Match(n) " {NUMERIC NUMBER_POSITIVE} "
  + (n) ' Assign value to v 
EndMatch     

REM === Calculate factorial === 
Function factorial (num) 
  If(num = 0) 
    Return 1 ' Base case 
  Else 
    Return (num * factorial(num - 1)) ' Recursive case 
  EndIf 
EndFunction 

REM === Call factorial function with stored number === 
v = factorial(n) 

REM === Display result === 
" Factorial of " + n + " is " + v
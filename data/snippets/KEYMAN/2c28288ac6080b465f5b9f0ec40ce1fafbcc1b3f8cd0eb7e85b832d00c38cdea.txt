{ This code snippet demonstrates the use of multiple rules to create a keyboard for a fictional language called "KEYMAN" }
 
store(&Groups) 'v,i' + 'p,q'
store(&Numbers) '1,2,3' + '4,5,6'

begin Unicode > use(main)

group(main) using keys

+ any(cons, prevCons) > store(&Groups)
any(cons, cons) > index(&Numbers)

[CONS + any(main)] > context(main)

index (any(main), group(main)) > layer (group(main))

{Double character key}
"dd" :: "DOUBLE D"

any(main) + "t" << "te"

U+0070 + U+0072 > "PRE" U+0065: U+0070 "S"

match 'n'- `NALU` to U+006E "N" + U+0061 "A" + U+006C "L" + U+0075 "U" > "NALU"

match 'h'- `HEART` to U+0068 "H" + U+0065 "E" + U+0061 "A" + U+0072 "R" + U+0074 "T" > "HEART"
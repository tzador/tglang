' This code snippet creates a custom keyboard layout in Keyman
' Import the necessary libraries
store(&keymanPath) ' Set the path to the Keyman folder as a variable
include(%keymanPath%) ' Use the include statement to import the Keyman library
platform iPhone "ios.txt" '? Create a platform for the iPhone with a custom layout
begin Unicode > use(main)

' Declare the keyboard layout
any(base) + 'Base Keys' > index(main)
any + 'Shift' > index(shift)
any + 'Ctrl' > index(ctrl)
any + 'Alt' > index(alt)
any + 'Char' > index(char)
any + 'Alpha' > index(alpha)
any + 'Num' > index(num)

' Main keyboard layout
GROUP(main) // Start of main group
    U+0061..U+007A > index(main) ' Lowercase letters
    U+0041..U+005A > index(shift) ' Uppercase letters

    U+002D > index(char) ' Dash
    U+00A0 > nil() ' Non-breaking space
    U+0020 > index(char) ' Regular space
    U+0021 > index(shift) '\u0021' ' Exclamation mark

    sendkeys(key_bc)
    U+0029 .. U+0039 > index(shift,num)
    sendkeys(key_ac)

    U+003B > index(shift) '\u003A' ' Semicolon
    U+003D > index(shift) '\u002B' ' Equal sign
    U+003B > index(char) '\u003B' ' Semicolon
    U+003D > index(char) '\u003D' ' Equal sign

    U+005B > index(shift) '\u007B' ' Open bracket
    store(numpad) ' Set the numpad state as a variable
    numpad(1) > index(num) '\u0023' ' Hashtag
    numpad(2) > index(num) '\u0024' ' Dollar sign

    numpad(1) + numpad(-1) > index(main,num) ' Use numpad key '1' as backspace
GROUP(main) // End of main group

' Shift keyboard layout
GROUP(shift) // Start of shift group
    U+0061..U+007A > index(shift) ' Uppercase letters
    U+0041..U+005A > index(main) ' Lowercase letters

    U+0021 > index(char) ' Exclamation mark
    U+00A0 > nil() ' Non-breaking space
    U+0027 > index(char) '\u003F' ' Question mark
GROUP(shift) // End of shift group

' Ctrl keyboard layout
GROUP(ctrl) // Start of ctrl group
    store(copy_bin) ' Set a string variable for copying binary data
    copy_bin(1) > context(current) '\u0078' > index(ctrl) ' Press CTRL+X to set the copy binary hotkey
    copy_bin(2) > context(current) '\u0063' > nil() ' Press CTRL+C to set the copy binary hotkey
    copy_bin(3) > context(current) '\u0076' > nil() ' Press CTRL+V to set the copy binary hotkey
GROUP(ctrl) // End of ctrl group

' Alt keyboard layout
GROUP(alt) // Start of alt group
    U+0062 > index(main) ' Letter 'b' as an example

' Char keyboard layout
GROUP(char) // Start of char group
    U+002D > index(char) ' Dash
    U+0021 > index(char) '\u002A' ' Asterisk
GROUP(char) // End of char group

' Alpha keyboard layout
GROUP(alpha) // Start of alpha group
    U+0061..U+007A > index(alpha) ' Letter keys
    U+0020 > index(alpha) ' Space key
GROUP(alpha) // End of alpha group

' Num keyboard layout
GROUP(num) // Start of num group
    numpad(0) > index(num) ' Use numpad 0 for the number pad
GROUP(num) // End of num group

' Save the keyboard layout
store(iphone_km_keyboard) ' Set a variable for the keyboard layout name
save(iphone_km_keyboard) ' Save the keyboard layout with the specified name

' Set the layout code for the platform
char(charcode terminated '&')+ '0055' > use(alpha)

' Additional code for the platform
store(user)&
if(user) ' If the user is using the custom keyboard
    showtip('\u004D') ' Show a helpful tip for the custom keyboard
    showkey('%user%') ' Show the user's chosen key
endif
' Set the theme for the custom keyboard
theme('\u0043\u004D') ' Set the theme to dark mode
end

' Additional platform code
store(limited) ' Set limited mode as a variable
if(limited) ' If the custom keyboard is limited
    restricted = 1 ' Set the restricted flag to 1
endif

' Install the custom keyboard
' Run the following command in terminal:
' keyman -s <iphone_km_keyboard>.jsn
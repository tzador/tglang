// This code demonstrates a function in KEYMAN that converts Arabic numbers to Roman numerals

// Declaring the function 'convertToRoman' with parameter 'num'
function convertToRoman(num) {
    var roman = []; // initializing an empty array to store the Roman numerals
    var arabic = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]; // array of Arabic numbers for comparison
    var romanNums = ["M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"]; // array of corresponding Roman numerals
    while (num > 0) { // while loop to continue the conversion until the number is reduced to zero
        for (var i = 0; i < arabic.length; i++) { // for loop to iterate through the Arabic numbers
            if (num >= arabic[i]) { // checking if the current Arabic number is less than or equal to the number to be converted
                num -= arabic[i]; // subtracting the current Arabic number from the number to be converted
                roman.push(romanNums[i]); // adding the corresponding Roman numeral to the array
                break; // breaking out of the for loop
            }
        }
    }
    return roman.join(""); // returning the array of Roman numerals as a string
}

// Calling the function with input value '2021'
console.log(convertToRoman(2021)); // OUTPUT: MMXXI
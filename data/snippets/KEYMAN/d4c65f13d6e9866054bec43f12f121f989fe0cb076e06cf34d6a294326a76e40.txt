begin Unicode > use(main_unicode); ! This line imports a pre-defined keyboard package

group(Keyboard_Access); ! This creates a group for our keyboard

store(vowels)  'aeiou'  ! This creates a store for our vowels

store(consonants)   'bcdfghjklmnpqrstvwxyz'  ! This creates a store for our consonants

store(numbers)    '1234567890'  ! This creates a store for our numbers

group(main_unicode) using keys ! This group will handle the Unicode keys

any(cons) + '\"' > output(chr(cons) + '\"'); ! This code will output any consonant followed by a double quote symbol
any(vow) + '.' > index(vowels, index(vowels, match(cons, lower(vowels))) + 1); ! This code will output any vowel followed by a period symbol and the vowel that comes after it in the store
any(num) + '\'' > index(numbers, match(num, numbers) + 1); ! This code will output any number followed by an apostrophe symbol and the next number in the store

group(vowels_and_numbers) using keys() > index(vowels, match(cons, lower(vowels))) + index(numbers, match(num, numbers)); ! This group will handle both vowels and numbers, outputting a vowel and the next number in the store

c(any(vow), any(num)) + '!' > index(vowels_and_numbers, match(vowels, lower(vowels)) + match(numbers, numbers) + 1); ! This code will output a random combination of vowel and number followed by an exclamation mark

store(punctuation) '?.,!@#$%^&*()\-_=+`;[]{}|\\<>~'; ! This creates a store for our punctuation symbols

c(any(vow), any(con), any(num)) > output(chr(vow) + output(chr(con) + output(chr(num) + '.'))); ! This code will output a random combination of vowel, consonant, and number followed by a period symbol

any(con) + ' ' > output(chr(con) + ' space'); ! This code will output any consonant followed by the word "space"

c(any(con), any(punc)) > output(chr(con) + output(chr(punc) + ' punctuation')); ! This code will output a random combination of consonant and punctuation symbol followed by the word "punctuation"

any(vow, num) + caps lock ON > output(chr(vow) + output(chr(num) + ' uppercase')); ! This code will output any vowel or number when the caps lock is turned on, followed by the word "uppercase"

caps lock OFF > output('caps off'); ! This code will output the phrase "caps off" when the caps lock is turned off

+ ' ' > context(previous) use(Keyboard_Access); ! This code will switch back to the Keyboard_Access group when a space bar is pressed
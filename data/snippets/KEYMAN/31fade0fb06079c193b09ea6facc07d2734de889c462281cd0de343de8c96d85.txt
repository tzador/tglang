+ any(ú) > index(d + any(u +))[1] 
  alters the output of the variable ú by indexing it and adding it to the variable d before outputting the first element
  
  + store(d + any(V:u:) <<- [V:d:] % [V:u:])
  stores the value of the variable d and variable u in the variable V, using a compound assignment
  
  + context(V:u:) index(d) index(u) > index(V:ud)[1]
  changes the context rules to index the values of variables u and d, then indexes the result by 1 and assigns it to variable V
(* This program takes user input and outputs the
   longest word and its length *)
+ '.' \u{002E} > .;  (* Map the period key to itself *)
+ '0' to '9' ' ' > q;  (* Map the numbers and space key to the querty layer *)
+ 'a' to 'z' 'A' to 'Z' > l;  (* Map the letters to the latin layer *)
+ "(" + ")" > d;  (* Map the parentheses to the d layer *)
+ "!" + "?" > m;  (* Map the exclamation and question mark to the m layer *)

any(d) "." q l m layer  (* Activate latin layer for characters within parentheses *)
store(l) ">"  (* Store input string in L, overwriting previous value if any *)
store(0) "$top"  (* Store current index in T *)
begin
while index(p, ">")  (* Loop through each character in L *)
store("", $top, $top + 1) ">"  (* Get current character *)
index(l, ".") select
  "" + store(-1, "l")  (* Add current character to previous word state *)
endwhile
index($top - 1, l) " " store(l) select   (* Check for previous word state, store if found *)
if(!(index(le, "$last") 0 select store(l)  (* Compare current word to previous longest word, store if longer *)
"'Result: " store(le) " (length: " store($length) ")" lang(* Output results to user, using annotated markdown syntax *)
+ >+ "This is a long and complex code snippet in KEYMAN. It includes various functions and logic to demonstrate the capabilities of the KEYMAN language. All code is annotated using markdown syntax for better readability."

/* This is a comment in KEYMAN */
+ >+ "This is the main function that will be executed when the code is run. It takes in two parameters, 'input1' and 'input2', and performs various operations on them." 

+ "Define a variable 'result' and set its initial value to 0"
result := 0

+ "Concatenate the two input parameters and assign the result to 'combined_input'"
combined_input := input1 + input2

+ "Check if the length of 'combined_input' is greater than 10"
if len(combined_input) > 10 {
    /* If the condition is met, multiply 'result' by 2 and assign it to 'result' */
    result := result * 2
}

+ "Check if the length of 'combined_input' is less than or equal to 5"
else if len(combined_input) <= 5 {
    /* If the condition is met, divide 'result' by 2 and assign it to 'result' */
    result := result / 2
}

+ "Check if the length of 'input1' is greater than 5"
if len(input1) > 5 {
    /* If the condition is met, set 'result' to 10 */
    result := 10
}

+ "Print the final value of 'result'"
print result

+ "This is the end of the main function"

/* This is another comment in KEYMAN */
+>+"This is a helper function that takes in two parameters, 'num1' and 'num2', and returns the sum of the two numbers." 
+
"Define a function 'add' with two parameters"
function add(num1, num2) {
    /* Calculate the sum of the two numbers */
    sum := num1 + num2
    /* Return the result */
    return sum
}

/* This is the end of the 'add' function */

/* Call the 'add' function and pass in two values */
+ "Define a variable 'total' and call the 'add' function with values 5 and 10"
total := add(5, 10)

/* Print the final value of 'total' */
print total

+ "This is the end of the code snippet."
// The following code snippet creates a custom keyboard layout

store(&names,$e="abcdefghijklmnopqrstuvwxyz"); //Create a store with all the letters

begin Unicode //Declare the Unicode table

any(cons) + [L_ALT K_T] > context index(any(cons),&names) index(&names,$t); //Pressing Left Alt + "t" will output the letter "t"

group(main) //Declare the main keyboard layout group

using keys //Begin key declarations
&letters = "x" [keys pairedCons] "c" [key middleCons] "v" [vowel_numbers];
&pairs = "y" [pair yConsonant] "u" [pair uConsonant] "i" [pair iConsonant];
&symbols = "1" [hash] "2" [exclamation_mark] "3" [dollar_sign];
&modifiers = "A" [shift] "S" [caps_lock] "R" [right_control];
&special = [L_ALT K_T];
// Create keys for consonants, combinations, symbols, and modifiers
// The special key will output "t" when pressed in combination with the left alt key

store(&pairedCons, "bdjgknlpstz"); //Store all the paired consonants
store(&middleCons, "hmyw"); //Store the middle consonants
store(&yConsonant, "fxjq"); //Store the consonants that when combined with "y" create different sounds
store(&uConsonant, "vbm"); //Store the consonants that when combined with "u" create different sounds
store(&iConsonant, "rld"); //Store the consonants that when combined with "i" create different sounds
store(&vowel_numbers, "012345"); //Store the numbers that correspond to each vowel in the store

+ [keys pairedCons] > context index(any(cons),&names) + store_index(&pairedCons, store_index(&letters, 1)); //Type a consonant followed by the letter "x" to output the corresponding consonant
//The above rule uses context and store_index functions to output the corresponding consonant

+ [pair yConsonant] > index(store_index(&letters, 24), store_index(&yConsonant, 1)); //Pressing the letter "y" followed by a consonant from the yConsonant store will output the corresponding sound

+ [vowel_numbers] > index(store_index(&letters, 14), store_index(&vowels, 1)); //Pressing a number key will output the corresponding vowel
//The above rule uses index and store_index functions to output the corresponding vowel

+ [special] > context index(&names, &letters); //When special key is pressed, output the corresponding letter from the &names store
//The above rule uses context and index functions to output the corresponding letter from the &names store

using index(store_index(&modifiers, 1), store_index(&symbols, 3)); //Pressing shift + dollar sign will output an exclamation mark
//The above rule uses store_index and index functions to output the corresponding symbol

+ [caps_lock] > store_index(&vowel_numbers, 3) index(store_index(&pairs, 1), 2); //Pressing caps lock will output the number 3 followed by the second letter in the "BDJGKNLPSTZ" store
//The above rule uses store_index and index functions to output the corresponding numbers and letters from the store

context index(&names,[store_index(&letters,2),store_index(&letters,9)]) + [A] > store_index(&names,store_index(&letters,10)); //Pressing shift + "j" or "q" will output the letter "k"
//The above rule uses context and store_index functions to output the corresponding letter from the &names store

group(keyboard) using( keys "keyman","keyman_bubble: tight space") //Declare the keyboard group and specify the keyboard layout and bubble style

if(&name "keyboard") //If the current keyboard is the main keyboard
index(&letters,1) index(&letters,[store_index(&letters,2),store_index(&letters,9)]) index(&letters,[store_index(&letters,23),store_index(&letters,26)]) index(&letters,27) index(&letters,28) index(&letters,29) index(&letters,30) index(&letters,31) index(&letters,32) index(&letters,33) index(&letters,34) index(&letters,35) index(&letters,36) index(&letters,[store_index(&letters,37),store_index(&letters,38)]) index(&letters,39) index(&letters,40) index(&letters,41) index(&letters,42) index(&letters,43); //Output the corresponding letters in the main keyboard layout
//The above rule uses index and store_index functions to output the corresponding letters in order for the main keyboard layout

end Unicode //End the Unicode table

#define B=A / K_LSHFT; //Define a macro that when entered will output the letter after it in the &names store
#define C=A / K_RSHFT; //Define a macro that when entered will output the letter before it in the &names store

+ any([B,C]) > index(&names); //Pressing the defined macros will output the corresponding letter using the index function

store(&english_letters, "abcdefghijklmnopqrstuvwxyz"); //Store all the letters of the English alphabet

+ [F12] > index(&english_letters, store_index(&names,1)); //Pressing F12 will output the first letter of the English alphabet
//The above rule uses index and store_index functions to output the corresponding letter from the &english_letters store
import QtQuick 2.0 // importing the QtQuick library in version 2.0

/* A Rectangle item that will contain a nested item */
Rectangle {
    id: container // creating an id for the Rectangle item
    width: 200 // setting the width of the Rectangle
    height: 200 // setting the height of the Rectangle
    color: "red" // setting the color of the Rectangle to red

    /* creating a Text item to display a message */
    Text {
        id: textMessage // creating an id for the Text item
        text: "Hello World" // setting the message to display
        color: "white" // setting the color of the text to white

        /* creating states for the Text item */
        states: [
            /* state for when the mouse is hovering over the Text item */
            State {
                name: "hovered" // setting the name of the state
                when: textMessage.hovered // setting the condition for the state to be active
                PropertyChanges { // changing properties when the state is active
                    target: textMessage // targeting the Text item
                    color: "orange" // changing the color of the text to orange
                    scale: 1.5 // increasing the size of the text by 1.5 times
                }
            },
            /* state for when the Text item is clicked */
            State {
                name: "clicked" // setting the name of the state
                when: textMessage.clicked // setting the condition for the state to be active
                PropertyChanges { // changing properties when the state is active
                    target: textMessage // targeting the Text item
                    color: "green" // changing the color of the text to green
                    rotation: -45 // rotating the text by -45 degrees
                }
            }
        ]

        /* adding transitions between the states */
        transitions: [
            /* transition for when the state changes from "hovered" to "clicked" */
            Transition {
                from: "hovered" // setting the state to transition from
                to: "clicked" // setting the state to transition to
                PropertyAnimation { // animating the "color" property
                    target: textMessage // targeting the Text item
                    property: "color" // setting the property to animate
                    duration: 500 // setting the duration of the animation to 500 milliseconds
                    easing.type: Easing.InOutQuad // setting the easing type for the animation
                }
                PropertyAnimation { // animating the "scale" property
                    target: textMessage // targeting the Text item
                    property: "scale" // setting the property to animate
                    duration: 500 // setting the duration of the animation to 500 milliseconds
                    easing.type: Easing.InOutQuad // setting the easing type for the animation
                }
            }
        ]
    }
}
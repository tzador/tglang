// This is a QML code snippet
// It creates a complex UI layout with multiple components

import QtQuick 2.0      // Import the Qt Quick 2.0 module
import QtQuick.Controls 2.5     // Import the Qt Quick Controls 2.5 module
import QtQuick.Layouts 1.3      // Import the Qt Quick Layouts 1.3 module

// Create a root item as the base for our layout
Item {
    id: root      // Give the Item a unique id for referencing

    // Set the properties of the root item
    width: 800
    height: 600
    color: "lightgrey"

    // Create a ColumnLayout to hold our components vertically
    ColumnLayout {
        anchors.fill: parent    // Fill the entire parent item
        spacing: 10     // Add spacing between each component

        // Create a Label component for the title
        Label {
            text: "Welcome to my App!"    // Set the text for the label
            font.pixelSize: 24     // Set the font size in pixels
            anchors.horizontalCenter: parent.horizontalCenter  // Align the label to the center
        }

        // Create a RowLayout to hold our buttons horizontally
        RowLayout {
            anchors.horizontalCenter: parent.horizontalCenter  // Align the buttons to the center
            spacing: 10     // Add spacing between each button

            // Create a Button component for the login button
            Button {
                text: "Login"    // Set the text for the button
            }

            // Create a Button component for the signup button
            Button {
                text: "Sign Up"    // Set the text for the button
            }
        }

        // Create a GridLayout to hold our form fields
        GridLayout {
            columns: 2    // Set the number of columns for the grid
            anchors.horizontalCenter: parent.horizontalCenter     // Align the grid to the center
            width: parent.width * 0.8     // Set the width to 80% of the parent width
            spacing: 10     // Add spacing between each form field

            // Create Labels for the form field names
            Label {
                text: "Username:"     // Set the text for the label
                Layout.fillWidth: true     // Allow the label to fill the cell's width
            }
            Label {
                text: "Password:"    // Set the text for the label
                Layout.fillWidth: true     // Allow the label to fill the cell's width
            }

            // Create TextFields for the user to input data
            TextField {
                placeholderText: "Enter your username"    // Set the placeholder text for the field
                Layout.fillWidth: true     // Allow the field to fill the cell's width
            }
            TextField {
                placeholderText: "Enter your password"    // Set the placeholder text for the field
                Layout.fillWidth: true     // Allow the field to fill the cell's width
                echoMode: TextInput.Password      // Set the field to hide the characters entered
            }
        }

        // Create a Button component for the submit button
        Button {
            text: "Submit"    // Set the text for the button
            anchors.horizontalCenter: parent.horizontalCenter   // Align the button to the center
        }

        // Create a Rectangle to display a logo
        Rectangle {
            width: parent.width * 0.5    // Set the width to 50% of parent width
            height: parent.width * 0.5   // Set the height to 50% of parent width
            color: "lightblue"    // Set the color of the rectangle
            anchors.horizontalCenter: parent.horizontalCenter  // Align the rectangle at the center
        }
    }
}
// Annotated QML code snippet
// This code snippet creates a custom button with changing colors when hovered on and clicked
// and a text label that displays the number of times the button has been clicked.
// It also contains a property binding and a signal handler.

import QtQuick 2.0

// CustomButton QML Component
// This component includes a color property, an onClicked signal, and a hoverEnabled property.
// It also contains a MouseArea for handling click and hover events.
Component {
    id: customButton
    property color buttonColor: "white"
    signal onClicked
    property bool hoverEnabled: true

    MouseArea {
        anchors.fill: parent // Make the MouseArea take up the whole button area
        hoverEnabled: hoverEnabled // Enable hover events only if hoverEnabled is true

        // Change the button color when hovered on
        onEntered: buttonColor = "lightgray"
        onExited: buttonColor = "white"

        // Emit the onClicked signal when clicked on
        onClicked: onClicked()
    }

    Rectangle {
        id: button // Gives access to this Rectangle inside the MouseArea and other components
        anchors.fill: parent
        color: buttonColor // Set the button color to the buttonColor property
        border.width: 1 // Add a border for styling
        border.color: "black" // Set the border color

        // Text label that displays the number of times the button has been clicked
        Text {
            id: label // Gives access to this Text inside other components
            anchors.centerIn: parent
            text: "Button Clicks: " + button.clickCount // Binds the text to the button's clickCount property
        }
    }
}

// Main QML Component - Displays the custom button twice, with different color and hoverEnabled values
Rectangle {
    width: 200
    height: 100
    color: "lightblue"

    // Creates two instances of the CustomButton component
    CustomButton {
        buttonColor: "lightgreen"
        onClicked: console.log("Button clicked")
    }
    CustomButton {
        y: 50
        buttonColor: "pink"
        hoverEnabled: false
        onClicked: console.log("Button clicked")
    }
}
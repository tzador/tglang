// This code snippet creates a custom pie chart element in QML
import QtQuick 2.0

// Define a custom PieChart element
Item {
    id: pieChart // Unique identifier for the pie chart

    // Add properties to customize the pie chart
    property color chartColor: "lightblue" // Color of the chart
    property real chartSize: 200 // Size of the chart
    property real chartMaxValue: 100 // Maximum value for the chart

    // Define a model to store the pie chart data
    ListModel {
        id: chartModel // Unique identifier for the model
        ListElement { // Add data points to the model
            value: 30 // Percentage of the pie chart
            color: "red" // Color of the pie segment
            label: "Red" // Label for the pie segment
        }
        ListElement {
            value: 40
            color: "green"
            label: "Green"
        }
        ListElement {
            value: 20
            color: "blue"
            label: "Blue"
        }
        ListElement {
            value: 10
            color: "yellow"
            label: "Yellow"
        }
    }

    // Create the pie chart using a Repeater element
    Repeater {
        model: chartModel // Use the previously defined model
        delegate: Rectangle { // Create a rectangle for each pie segment
            width: parent.width * value / chartMaxValue // Calculate the width of the rectangle based on the value and maximum value
            height: parent.height // Set the height to the same as the parent (the pie chart)
            color: chartColor // Use the chart color for the fill color
            Text { // Create a label for each pie segment
                text: label // Use the label defined in the model
                font.pixelSize: 12 // Set the font size
                anchors.horizontalCenter: parent.horizontalCenter // Center the label horizontally
                anchors.verticalCenter: parent.verticalCenter // Center the label vertically
            }
            Behavior on width { // Add a behavior to animate the width property
                NumberAnimation { // Use the NumberAnimation to animate the width
                    duration: 1000 // Set the animation duration to 1000ms (1 second)
                }
            }
        }
    }
}
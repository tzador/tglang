/*
 * This is a complex code snippet written in the QML programming language.
 * It is a component that is used to display a customized button.
*/

// Import necessary modules
import QtQuick 2.12
import QtQuick.Controls 2.12

Rectangle {
    id: button
    width: 200
    height: 50
    border.color: "black"
    border.width: 2
    radius: 5

    // Define button states 
    states: [
        State {
            // Set the default state
            name: "default"
            // Define default properties
            PropertyChanges {
                // Change button background color
                target: button
                color: "white"
            }
        },
        State {
            // Set the pressed state
            name: "pressed"
            // Define pressed properties
            PropertyChanges {
                // Change button background color
                target: button
                color: "gray"
            }
        },
        State {
            // Set the hovered state
            name: "hovered"
            // Define hovered properties
            PropertyChanges {
                // Change button background color
                target: button
                color: "lightgray"
            }
        }
    ]

    // Define the text displayed on the button
    Text {
        id: buttonText
        text: "Click Me!"
        color: "black"
        font.pixelSize: 16
        anchors.centerIn: parent
        // Update text color based on button state
        onStateChanged: {
            if (button.state === "pressed") {
                buttonText.color = "white"
            } else {
                buttonText.color = "black"
            }
        }
    }

    // Add mouse area to handle button clicks
    MouseArea {
        anchors.fill: parent
        // Change button state and emit signal when clicked
        onClicked: {
            button.state = "pressed"
            button.clicked()
        }
    }

    // Define custom signal for button click
    signal clicked()

    // Add tooltip to show button function
    ToolTip {
        text: "This button will do something amazing!"
        visible: hover && !pressed
        anchors.horizontalCenterOffset: 75
        anchors.top: button.bottom
        anchors.margins: 10
    }
}
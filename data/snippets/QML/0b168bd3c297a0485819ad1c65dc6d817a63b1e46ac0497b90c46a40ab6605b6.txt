// This is a QML code snippet showcasing a complex user interface 
import QtQuick 2.12 // Importing the QtQuick module 
import QtQuick.Controls 2.5 // Importing the QtQuick Controls module 

Rectangle { // Defining a Rectangle element as the base of our UI 
    id: root // Giving the Rectangle element an id for reference 
    anchors.fill: parent // Setting the Rectangle to fill its parent element 
    color: "#F4F6F8" // Setting the background color to a light gray 

    Column { // Defining a Column element for the vertical layout 
        anchors.centerIn: parent // Centering the Column element in the parent 
        spacing: 20 // Adding a 20 unit spacing between child elements 
        
        Text { // Defining a Text element for the heading 
            text: "Welcome to My App" // Setting the text content 
            font.pixelSize: 24 // Setting the font size to 24 pixels 
            font.bold: true // Making the text bold 
        } 
        
        Image { // Defining an Image element for the logo 
            source: "logo.png" // Setting the image source 
            width: 100 // Setting the width to 100 pixels 
            height: 100 // Setting the height to 100 pixels 
            fillMode: Image.PreserveAspectFit // Setting the fill mode to preserve aspect ratio 
        } 
        
        ItemDelegate { // Defining an ItemDelegate element for a list item 
            width: parent.width // Setting the width to match the parent width 
            height: 50 // Setting the height to 50 units 
            
            Rectangle { // Defining a Rectangle element as the base of the list item 
                anchors.fill: parent // Setting the Rectangle to fill its parent element 
                color: "white" // Setting the background color to white 
                border.color: "#E0E0E0" // Adding a light gray border 
                border.width: 2 // Setting the border width to 2 units 
                
                Text { // Defining a Text element for the item text 
                    anchors.centerIn: parent // Centering the Text element within the parent 
                    text: "List Item" // Setting the text content 
                } 
            } 
        } 
        
        Button { // Defining a Button element for a submit button 
            text: "Submit" // Setting the button text 
            width: 100 // Setting the width to 100 pixels 
            onClicked: { // Creating an onClicked handler 
                console.log("Submit clicked!") // Printing a message to the console 
            } 
        } 
    } 
}
import QtQuick 2.12        //importing QtQuick version 2.12

Rectangle {                 //defining a rectangle
    width: 200              //setting width of rectangle
    height: 200             //setting height of rectangle
    color: "#ffffff"        //setting color of rectangle as white
    border.width: 2         //setting border width of rectangle as 2
    border.color: "#000000" //setting border color of rectangle as black
    radius: 10              //setting corner radius of rectangle
    Text {                  //creating Text element within rectangle
        anchors.centerIn: parent //anchoring the text in center of rectangle
        text: "Hello World"     //setting text as "Hello World"
        font.pixelSize: 24      //setting font size as 24 pixels
        color: "#000000"        //setting font color as black
    }
    MouseArea {             //creating MouseArea element within rectangle
        anchors.fill: parent    //setting it to fill entire rectangle
        onClicked: {            //defining action when clicked
            console.log("Rectangle clicked") //printing "Rectangle clicked" to console
        }
    }
    states: [                   //defining different states for rectangle
        State {                 //first state
            name: "normal"      //name for the state
            PropertyChanges {   //defining changes for the state
                target: rectangle   //targeting the rectangle element
                color: "#ffffff"    //changing color to white
            }
        },
        State {                 //second state
            name: "hovered"     //name for the state
            PropertyChanges {   //defining changes for the state
                target: rectangle   //targeting the rectangle element
                color: "#ff0000"    //changing color to red
            }
        }
    ]
    transitions: [              //defining transitions between states
        Transition {            //transition between "normal" and "hovered" state
            from: "normal"      //starting state
            to: "hovered"       //ending state
            reversible: true    //able to transition back to starting state
            NumberAnimation {   //defining animation
                properties: "color" //property to animate is "color"
                duration: 500       //animation duration (in milliseconds)
                easing.type: Easing.InOutQuad    //easing function for animation
            }
        }
    ]
}
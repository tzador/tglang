import QtQuick 2.0

// Define Item for custom component
Item {
    id: customComponent

    // Set width and height properties
    width: 600
    height: 400

    // Add gradient background
    Rectangle {
        id: background
        color: "white"
        gradient: Gradient {
            GradientStop { position: 0.0; color: "lightblue" }
            GradientStop { position: 1.0; color: "skyblue" }
        }
    }

    // Create a property to store current index
    property int currentIndex: 0

    // Create a list model to store data
    ListModel {
        id: dataModel
        ListElement {
            name: "John"
            age: 25
        }
        ListElement {
            name: "Emily"
            age: 30
        }
        ListElement {
            name: "Michael"
            age: 35
        }
    }

    // Create a component for displaying data
    Component {
        id: dataComponent

        // Define a rectangle to display data
        Rectangle {
            width: 200
            height: 50
            color: "lightgray"

            // Add text to display name and age
            Text {
                anchors.centerIn: parent // Center text in the rectangle
                text: dataModel.get(currentIndex).name + ": " + dataModel.get(currentIndex).age
            }
        }
    }

    // Create a repeater to display multiple components based on dataModel
    Repeater {
        model: dataModel.count // Set the model to the number of items in dataModel

        // Create an instance of dataComponent for each index
        delegate: dataComponent.createObject(customComponent)

        // Change the currentIndex when clicking on a component
        MouseArea {
            anchors.fill: parent
            onClicked: currentIndex = index
        }
    }
}
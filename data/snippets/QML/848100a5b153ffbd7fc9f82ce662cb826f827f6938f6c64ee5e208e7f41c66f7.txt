import QtQuick 2.12 // Import the QtQuick version 2.12
import QtQuick.Controls 2.12 // Import the QtQuick Controls version 2.12
import QtQuick.Layouts 1.3 // Import the QtQuick Layouts version 1.3
import QtGraphicalEffects 1.0 // Import the QtGraphicalEffects version 1.0

Item { // Main item
    id: root // Identifier for the main item
    width: 640 // Width of the item
    height: 480 // Height of the item
    clip: true // Enable clipping on the item

    Rectangle { // Child item - Rectangle
        id: background // Identifier for the child item
        anchors.fill: parent // Fill the parent item
        color: "black" // Background color of the rectangle
        gradient: Gradient { // Add a gradient effect to the rectangle
            GradientStop { // First gradient stop
                position: 0 // Position of the stop (black)
                color: "#6F6F6F" // Color of the stop 
            }
            GradientStop { // Second gradient stop
                position: 1 // Position of the stop (white)
                color: "white" // Color of the stop
            }
        }

        Glow { // Add glow effect to the rectangle
            anchors.centerIn: parent // Position the glow effect in the center of the parent
            radius: 100 // Set the radius of the glow
            source: background // Use the rectangle as the source for the glow
        }
    }

    ColumnLayout { // Add a column layout as a child of the main item
        id: columnLayout // Identifier for the column layout
        anchors.fill: parent // Fill the parent item
        anchors.margins: 20 // Add margins to the layout

        Text { // Child item - Text
            text: "Hello World!" // Set the text of the item
            font.pointSize: 20 // Set the font size
            font.bold: true // Indicate that the font should be bold
        }

        Rectangle { // Child item - Rectangle
            Layout.fillWidth: true // Make the item fill the width of the layout
            height: 50 // Set the height of the item
            color: "red" // Set the color of the item

            Text { // Add a child item to the rectangle 
                text: "Click me!" // Set the text of the item
                anchors.centerIn: parent // Position the text in the center of the parent
            }

            MouseArea { // Add a mouse area to the rectangle to handle clicks
                anchors.fill: parent // Fill the parent item

                onClicked: { // Handle the onClicked signal of the mouse area
                    console.log("Clicked!") // Output to the console when the rectangle is clicked
                }
            }
        }
    }
}
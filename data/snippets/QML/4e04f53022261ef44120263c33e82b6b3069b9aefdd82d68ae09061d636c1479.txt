// This is a complex code snippet in QML
// It contains a Rectangle, Text, and MouseArea element
import QtQuick 2.12

Rectangle { // Creating a Rectangle element
    id: mainRect // Setting its id
    width: 500 // Setting width in pixels
    height: 500 // Setting height in pixels
    color: "lightblue" // Setting background color
    
    Text { // Creating a Text element
        id: mainText // Setting its id
        text: "Hello World!" // Setting its text
        font.pixelSize: 30 // Setting font size in pixels
        color: "darkblue" // Setting font color
        anchors.centerIn: parent // Centering the Text element in the Rectangle
    }
    
    MouseArea { // Creating a MouseArea element
        id: mouseArea // Setting its id
        anchors.fill: parent // Filling the entire Rectangle
        onClicked: { // Defining a JS function to execute when the MouseArea is clicked
            console.log("Rectangle was clicked!") // Printing a message to the console
        }
    }
    
    // Adding some additional features to the Rectangle element
    radius: 10 // Setting border radius in pixels
    border.color: "black" // Setting border color
    border.width: 2 // Setting border width in pixels
    smooth: true // Enabling smooth animations
    
    // Adding behavior on hover using QML states
    states: [
        State { // Defining a state
            name: "hovered" // Giving it a name
            when: hover // Triggered when the mouse hovers over the element
            PropertyChanges { // Applying property changes when the state is active
                target: mainRect // Targeting the Rectangle element
                radius: 20 // Changing border radius to 20 pixels
                color: "lightgreen" // Changing background color
            }
        },
        State { // Defining another state
            name: "normal" // Giving it a name
            when: !hover // Triggered when the mouse is not hovering over the element
            PropertyChanges { // Applying property changes when the state is active
                target: mainRect // Targeting the Rectangle element
                radius: 10 // Changing border radius back to 10 pixels
                color: "lightblue" // Changing background color back to lightblue
            }
        }
    ]
    
    // Adding transitions to make the state changes smooth
    transitions: [
        Transition { // Defining a transition
            from: "normal" // Starting state
            to: "hovered" // Ending state
            NumberAnimation { // Applying an animation to the property changes
                target: mainRect // Targeting the Rectangle element
                properties: "radius, color" // Specifying which properties to animate
                duration: 300 // Setting the duration in milliseconds
                easing.type: Easing.OutQuad // Specifying an easing type for the animation
            }
        },
        Transition { // Defining another transition
            from: "hovered" // Starting state
            to: "normal" // Ending state
            NumberAnimation { // Applying an animation to the property changes
                target: mainRect // Targeting the Rectangle element
                properties: "radius, color" // Specifying which properties to animate
                duration: 300 // Setting the duration in milliseconds
                easing.type: Easing.OutQuad // Specifying an easing type for the animation
            }
        }
    ]
}
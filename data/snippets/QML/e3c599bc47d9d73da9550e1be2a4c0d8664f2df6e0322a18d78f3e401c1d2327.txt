/*
A complex code snippet in QML that creates a custom button with different states and animations.
*/

Rectangle {
    id: customButton

    // Set the width and height of the button
    width: 240
    height: 60

    // Define the different states for the button
    states: [
        State {
            name: "normal" // The default state
            PropertyChanges {
                target: customButton
                color: "blue" // Set the color of the button
            }
        },
        State {
            name: "hovered"
            PropertyChanges {
                target: customButton
                color: "lightblue" // Change the color when the button is hovered over
            }
        },
        State {
            name: "pressed"
            PropertyChanges {
                target: customButton
                color: "darkblue" // Change the color when the button is pressed
            }
        }
    ]

    // Define the transitions between the states
    transitions: [
        Transition {
            // Define the transition animation
            NumberAnimation {
                target: customButton
                properties: "x, y, width, height, color"
                duration: 500 // The duration of the animation in milliseconds
                easing.type: Easing.OutQuint // The easing type for the animation
            }
        }
    ]

    // Create the text for the button
    Text {
        anchors.centerIn: parent
        text: "Click Me!"

        // Set the font properties
        font.pixelSize: 24
        font.bold: true
    }

    // Add mouse and touch event handlers for the button
    MouseArea {
        anchors.fill: parent // Set the mouse area to cover the entire button
        onClicked: customButton.state = "pressed" // Change to the pressed state when clicked
        onEntered: customButton.state = "hovered" // Change to the hovered state when mouse enters
        onExited: customButton.state = "normal" // Change to the normal state when mouse exits
    }
}
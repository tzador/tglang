import QtQuick 2.0 // Import the QtQuick module version 2.0

Rectangle { // Create a rectangle

    id: rectangle // Set the id of the rectangle as 'rectangle'

    color: "#6c9ae0" // Set the color of the rectangle to a hex code

    radius: 10 // Set the radius of the rectangle's corners to 10 pixels

    width: 400 // Set the width of the rectangle to 400 pixels

    height: 200 // Set the height of the rectangle to 200 pixels

    border.width: 2 // Set the border width of the rectangle to 2 pixels

    border.color: "#2f3542" // Set the border color of the rectangle to a different hex code

    gradient: Gradient { // Create a gradient for the rectangle

        GradientStop { // Add a gradient stop for the first color

            position: 0 // Set the position of the gradient stop to 0 (start)

            color: "#55acee" // Set the color of the gradient stop to a different hex code

        }

        GradientStop { // Add a gradient stop for the second color

            position: 1 // Set the position of the gradient stop to 1 (end)

            color: "#a43931" // Set the color of the gradient stop to a different hex code

        }
    }

    // Add a drop shadow effect to the rectangle
    DropShadow {
        anchors.fill: parent // Set the drop shadow's fill to cover the entire rectangle
        horizontalOffset: 5 // Set the horizontal offset of the drop shadow to 5 pixels
        verticalOffset: 5 // Set the vertical offset of the drop shadow to 5 pixels
        radius: 5 // Set the radius of the drop shadow's blur
        color: "#2f3542" // Set the color of the drop shadow to a different hex code
        samples: 15 // Set the number of samples used to create the drop shadow
        source: rectangle // Set the source item to be the rectangle itself
    }

    // Add a rotation animation to the rectangle
    RotationAnimator {
        target: rectangle // Set the target item to be the rectangle itself
        property: "rotation" // Set the property to be animated to be the rotation
        from: 0 // Set the starting rotation to be at 0 degrees
        to: 360 // Set the ending rotation to be at 360 degrees
        duration: 2000 // Set the duration of the animation to 2 seconds
        loops: Animation.Infinite // Set the animation to loop infinitely
    }

    // Add a scale animation to the rectangle
    PropertyAction {
        target: rectangle // Set the target item to be the rectangle itself
        property: "scale" // Set the property to be animated to be the scale
        easing.type: Easing.OutBack // Use a specific easing type for the animation
        duration: 1000 // Set the duration of the animation to 1 second
        to: Qt.vector2d(0.5, 0.5) // Set the ending scale to be half its original size
    }

    // Add a text element to the rectangle
    Text {
        id: text // Set the id of the text as 'text'
        anchors.horizontalCenter: rectangle.horizontalCenter // Center the text horizontally within the rectangle
        anchors.verticalCenter: rectangle.verticalCenter // Center the text vertically within the rectangle
        text: "Hello World!" // Set the text content to be displayed
        font.pixelSize: 20 // Set the font size to 20 pixels
        color: "#ffffff" // Set the text color to a hex code
        z: 2 // Set the z-index of the text element to be above the rectangle's drop shadow
    }
}
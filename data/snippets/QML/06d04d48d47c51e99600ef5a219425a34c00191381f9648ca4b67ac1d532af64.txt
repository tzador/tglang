import QtQuick 2.12 //import the QtQuick module
import QtQuick.Window 2.12 //import the QtQuick Window module

Window { //create a Window component
    visible: true //set the Window as visible
    width: 800 //set the Window width to 800 pixels
    height: 600 //set the Window height to 600 pixels
    title: "My Code Snippet in QML" //set the Window title
    color: "lightblue" //set the background color of the Window

    Component { //create a Component
        id: rectangleComponent1 //assign an id to the Component
        Rectangle { //create a Rectangle item
            width: 400 //set the Rectangle width to 400 pixels
            height: 400 //set the Rectangle height to 400 pixels
            color: "lightgreen" //set the color of the Rectangle
            anchors.centerIn: parent //center the Rectangle inside the parent Window
            radius: 20 //set the corner radius of the Rectangle
            smooth: true //apply smooth edges to the Rectangle
        }
    }

    Component { //create another Component
        id: rectangleComponent2 //assign an id to the Component
        Rectangle { //create a Rectangle item
            width: 200 //set the Rectangle width to 200 pixels
            height: 200 //set the Rectangle height to 200 pixels
            color: "lightyellow" //set the color of the Rectangle
            anchors.top: parent.top //anchor the top of the Rectangle to the top of the Window
            anchors.right: parent.right //anchor the right of the Rectangle to the right of the Window
            anchors.margins: 20 //apply a margin of 20 pixels to the Rectangle
            radius: 10 //set the corner radius of the Rectangle
            smooth: true //apply smooth edges to the Rectangle
        }
    }

    MouseArea { //create a MouseArea to enable mouse interaction
        anchors.fill: parent //make the MouseArea fill the entire Window
        hoverEnabled: true //enable hover detection
        onEntered: rectangle.color = "red" //change the color of the Rectangle to red when mouse enters
        onExited: rectangle.color = "lightgreen" //change the color of the Rectangle back to lightgreen when mouse exits
        onClicked: rectangleComponent1.createObject(parent, {"x": mouseX, "y": mouseY}) //create a new instance of rectangleComponent1 at the position of the mouse click
    }
}
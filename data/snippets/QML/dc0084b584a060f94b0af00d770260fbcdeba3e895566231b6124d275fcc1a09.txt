//! import statement to use Qt Quick library
import QtQuick 2.12
//! declare a custom Item element named 'CustomItem'
Item {
    //! assign an id to the element
    id: customItem
    //! set the x coordinate property
    x: 100
    //! set the y coordinate property
    y: 100
    //! set the width property
    //! using an expression to calculate the width based on the parent's width
    width: parent.width / 2 + 50
    //! set the height property using a binding to the width property
    height: parent.width / 2 + 50
    //! set the color property using the Qt Quick Color type
    color: Color.red
    //! set the rotation property
    //! using an animation to smoothly rotate the element over time
    RotationAnimation {
        //! specify the target property to animate
        target: customItem
        //! set the duration of the animation
        duration: 1000
        //! specify the starting angle
        from: 0
        //! specify the ending angle
        to: 360
        //! set the easing curve for the animation
        easing.type: Easing.InOutQuad
        //! set the number of repetitions of the animation
        //! using Infinity to make it repeat continuously
        loops: Animation.Infinite
    }
    //! define a Rectangle element as a child of the customItem element
    Rectangle {
        //! set the width property of the rectangle
        width: parent.width / 2
        //! set the height property of the rectangle
        height: parent.height / 2
        //! set the color property
        color: Color.blue
    }
    //! define a Text element as a child of the customItem element
    Text {
        //! set the text property
        text: "Hello QML!"
        //! set the font family
        font.family: "Helvetica"
        //! set the font weight
        font.weight: Font.Bold
        //! set the font size using a binding to the width property
        font.pixelSize: parent.width / 10
        //! set the horizontal alignment
        horizontalAlignment: Text.AlignHCenter
        //! set the vertical alignment
        verticalAlignment: Text.AlignVCenter
    }
}
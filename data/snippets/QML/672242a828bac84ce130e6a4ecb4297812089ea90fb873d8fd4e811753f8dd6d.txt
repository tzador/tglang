// This is a QML component that defines a custom button with different states
Rectangle {
    id: button
    property bool pressed: false // property Declaration to track button state
    color: pressed ? "lightblue" : "blue" // Change button color based on state

    // Button dimensions
    width: 120
    height: 40
    radius: 10

    // Button text
    Text {
        id: buttonText
        anchors.centerIn: parent
        text: "Click Me"
        font.bold: true
        color: "white"
        font.pixelSize: 24
    }

    // Button behavior
    MouseArea {
        id: mouseArea
        anchors.fill: parent

        // Change button state when pressed or released
        onPressedChanged: button.pressed = pressed
        onReleasedChanged: button.pressed = !pressed
    }

    // States for different button interactions
    states: [
        // Default state
        State {
            name: "normal"
            PropertyChanges { target: button; color: "blue" }
        },
        // Hovered state
        State {
            name: "hovered"
            when: mouseArea.containsMouse // Active when mouse is over button
            PropertyChanges { target: button; color: "lightblue" }
        },
        // Pressed state
        State {
            name: "pressed"
            when: button.pressed // Active when button is pressed
            PropertyChanges { target: button; color: "darkblue" }
        }
    ]

    // Transitions between states
    transitions: [
        // Transition from normal to hovered state
        Transition {
            from: "normal"
            to: "hovered"
            NumberAnimation { properties: "color"; duration: 200 }
        },
        // Transition from normal to pressed state
        Transition {
            from: "normal"
            to: "pressed"
            NumberAnimation { properties: "color"; duration: 200 }
        },
        // Transition from hovered to normal state
        Transition {
            from: "hovered"
            to: "normal"
            NumberAnimation { properties: "color"; duration: 200 }
        },
        // Transition from pressed to normal state
        Transition {
            from: "pressed"
            to: "normal"
            NumberAnimation { properties: "color"; duration: 200 }
        }
    ]
}
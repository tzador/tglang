//This is a complex QML code snippet

import QtQuick 2.15 //Importing the QtQuick module

//Defining a Rectangle element with properties
Rectangle {
    id: rect //Setting an id for the element
    x: 100 //Position along the x-axis
    y: 100 //Position along the y-axis
    width: 200 //Width of the rectangle
    height: 200 //Height of the rectangle

    //Adding nested elements
    Rectangle {
        id: nestedRect //Setting an id for the nested element
        color: "#ff0000" //Setting the color to red
        anchors.centerIn: parent //Centering the element inside its parent

        //Adding a MouseArea element
        MouseArea {
            anchors.fill: parent //Filling the parent element
            onClicked: console.log("Clicked inside nested rectangle!") //Logging a message to the console when clicked
        }
    }

    //Adding a Text element
    Text {
        text: "Hello World!" //Setting the text
        font.pointSize: 20 //Font size
        anchors.centerIn: parent //Centering the element inside its parent
        color: "#ffffff" //Setting the text color to white
    }

    //Adding an animation
    SequentialAnimation {
        id: animation //Setting an id for the animation
        running: true //Setting the animation to run by default
        loops: Animation.Infinite //Setting the animation to loop infinitely

        //Adding a rotation animation
        RotationAnimation {
            target: nestedRect //Targeting the nested rectangle element
            from: 0 //Starting rotation angle
            to: 360 //Ending rotation angle
            duration: 2000 //Duration of the animation in milliseconds
        }

        //Adding a PropertyAction to change the text color
        PropertyAction {
            target: text //Targeting the Text element
            property: "color" //Changing the color property
            value: "#ff0000" //Setting the new color to red
        }

        //Adding a Behavior to smoothly transition between colors
        Behavior on color {
            ColorAnimation {
                duration: 500 //Duration of the color animation
                easing.type: Easing.InOutQuad //Easing type for the animation
            }
        }
    }

    //Adding a gradient background
    Rectangle {
        anchors.fill: parent //Filling the parent element
        layer.enabled: true //Enabling the layer property to add a gradient
        gradient: Gradient {
            GradientStop { position: 0.0; color: "#000000" } //Setting a black color at the start of the gradient
            GradientStop { position: 1.0; color: "#ffffff" } //Setting a white color at the end of the gradient
            //Adding multiple GradientStops to create a smooth gradient effect
            GradientStop { position: 0.25; color: "#0000ff" }
            GradientStop { position: 0.5; color: "#00ff00" }
            GradientStop { position: 0.75; color: "#ffff00" }
        }
    }
}
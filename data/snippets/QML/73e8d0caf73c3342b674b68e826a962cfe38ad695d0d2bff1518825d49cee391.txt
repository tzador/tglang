// Custom button component with text and icon

import QtQuick 2.15
import QtQuick.Controls 2.15

Item {
    id: root
    property string text
    property string iconSource
    property bool isPressed: false

    // Button background
    Rectangle {
        id: background
        implicitWidth: 100
        implicitHeight: 40
        radius: 20
        color: isPressed ? "lightgray" : "white"
        border.color: isPressed ? "darkgray" : "gray"
        border.width: 2
    }

    // Button text
    Text {
        text: root.text
        font.pixelSize: 16
        anchors.centerIn: parent
    }

    // Button icon
    Image {
        id: icon
        source: iconSource
        anchors.left: parent.left
        anchors.verticalCenter: parent.verticalCenter
    }

    // Button press animation
    Behavior on isPressed {
        SequentialAnimation {
            NumberAnimation {
                target: background
                property: "radius"
                from: isPressed ? 20 : 0
                to: isPressed ? 0 : 20
                duration: 200
            }
            ColorAnimation {
                target: background
                property: "color"
                from: isPressed ? "white" : "lightgray"
                to: isPressed ? "lightgray" : "white"
                duration: 200
            }
        }
    }

    // Mouse area for button press detection
    MouseArea {
        anchors.fill: parent
        onPressedChanged: root.isPressed = pressed
    }

    // Button hover effect
    states: [
        State {
            name: "hovered"
            when: icon.containsMouse
            PropertyChanges {
                target: background
                border.color: "darkgray"
            }
            PropertyChanges {
                target: icon
                scale: 1.2
            }
        }
    ]
}
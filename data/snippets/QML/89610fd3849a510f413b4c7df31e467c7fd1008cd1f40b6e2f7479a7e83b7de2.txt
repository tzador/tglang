import QtQuick 2.12 // import QtQuick module

Item { // create item
    id: root // set root id
    width: 600 // set width
    height: 400 // set height

    Rectangle { // create rectangle
        id: rect // set id
        width: 100 // set width
        height: 100 // set height
        color: "blue" // set color

        Text { // create text
            id: text // set id
            width: parent.width // set width to parent width
            height: parent.height // set height to parent height
            text: "Hello World" // set text
            font.family: "Arial" // set font family
            font.pixelSize: 20 // set font size
            color: "white" // set text color
            verticalAlignment: Text.AlignVCenter // align text vertically in the center
            horizontalAlignment: Text.AlignHCenter // align text horizontally in the center
        }

        MouseArea { // create mouse area
            anchors.fill: parent // align mouse area to fill parent
            onClicked: rect.color = "red" // change rectangle color on click
            onReleased: rect.color = "blue" // change rectangle color on release
            onEntered: rect.color = "green" // change rectangle color on mouse enter
            onExited: rect.color = "blue" // change rectangle color on mouse exit
            onPressed: text.font.pixelSize = 25 // change font size on mouse press
            onReleased: text.font.pixelSize = 20 // change font size on mouse release
        }

        states: [ // define states
            State { // create state
                name: "pressed" // set state name
                PropertyChanges { // change properties of items in state
                    target: text // target text
                    font.pixelSize: 25 // change font size
                    color: "yellow" // change text color
                }
                PropertyChanges { // change properties of items in state
                    target: rect // target rectangle
                    color: "green" // change rectangle color
                }
            },

            State { // create state
                name: "released" // set state name
                PropertyChanges { // change properties of items in state
                    target: text // target text
                    font.pixelSize: 20 // change font size
                    color: "white" // change text color
                }
                PropertyChanges { // change properties of items in state
                    target: rect // target rectangle
                    color: "blue" // change rectangle color
                }
            }
        ]

        transitions: [ // define transitions between states
            Transition { // create transition
                from: "" // transition from any state
                to: "pressed" // transition to "pressed" state
                reversible: true // allow transition to go in both directions
                ParallelAnimation { // animate changes in parallel
                    NumberAnimation { // animate font size
                        target: text // target text
                        property: "font.pixelSize" // animate font pixel size
                        duration: 500 // animate over 0.5 seconds
                        easing.type: Easing.InOutQuad // use quadratic easing function
                    }
                    ColorAnimation { // animate text color
                        target: text // target text
                        property: "color" // animate text color
                        duration: 500 // animate over 0.5 seconds
                        easing.type: Easing.InOutQuad // use quadratic easing function
                    }
                    ColorAnimation { // animate rectangle color
                        target: rect // target rectangle
                        property: "color" // animate rectangle color
                        duration: 500 // animate over 0.5 seconds
                        easing.type: Easing.InOutQuad // use quadratic easing function
                    }
                }
            },

            Transition { // create transition
                from: "" // transition from any state
                to: "released" // transition to "released" state
                reversible: true // allow transition to go in both directions
                ParallelAnimation { // animate changes in parallel
                    NumberAnimation { // animate font size
                        target: text // target text
                        property: "font.pixelSize" // animate font pixel size
                        duration: 500 // animate over 0.5 seconds
                        easing.type: Easing.InOutQuad // use quadratic easing function
                    }
                    ColorAnimation { // animate text color
                        target: text // target text
                        property: "color" // animate text color
                        duration: 500 // animate over 0.5 seconds
                        easing.type: Easing.InOutQuad // use quadratic easing function
                    }
                    ColorAnimation { // animate rectangle color
                        target: rect // target rectangle
                        property: "color" // animate rectangle color
                        duration: 500 // animate over 0.5 seconds
                        easing.type: Easing.InOutQuad // use quadratic easing function
                    }
                }
            }
        ]
    }
}
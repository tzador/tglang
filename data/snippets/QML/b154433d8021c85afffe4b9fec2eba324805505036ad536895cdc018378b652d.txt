/*
* This is a QML component that displays a list of items in a vertical layout
* with a custom delegate for each item
* Parameters:
*   dataModel: model containing the data to be displayed
*   itemHeight: height of each item in the list
*   itemDelegate: delegate component to be used for each item
*/

ListView {
    id: myList // unique identifier for the component

    width: parent.width // sets the width of the list to the width of its parent
    height: dataModel.count * itemHeight // dynamically sets the height of the list based on the number of items and their height

    model: dataModel // sets the data model for the list

    delegate: itemDelegate // sets the delegate component for each item

    orientation: Qt.Vertical // sets the orientation of the list to vertical

    clip: true // ensures that content outside the bounds of the list is not visible

    ScrollBar.vertical: ScrollBar { // adds a scroll bar to the list
        id: scrollBar // unique identifier for the scroll bar
        active: true // sets the scroll bar to be active
        policy: ScrollBar.AlwaysOn // sets the scroll bar to always be visible
        anchors.right: myList.right // anchors the scroll bar to the right of the list
        width: 10 // sets the width of the scroll bar
        height: myList.height // sets the height of the scroll bar to match the height of the list
    }

    onContentYChanged: { // called when the content position of the list changes
        if (myList.moving) { // checks if the list is currently being scrolled
            scrollBar.value = contentY // sets the scroll bar value to match the list's content position
        }
    }
}
import QtQuick 2.0                                         // Import required Qt modules

Item {                                                      // Start with a basic Item element
    id: rectangle                                           // Assign an id for later referencing
    width: 200                                              // Set a fixed width
    height: 200                                             // Set a fixed height
    color: "#ff0000"                                        // Set a red background color

    property int x                                           // Create a custom property
    onXChanged: console.log("X value changed to", x)        // Add a slot function to log changes

    Rectangle {                                             // Add a nested Rectangle element
        id: nestedRect                                      // Assign an id for later referencing
        anchors.fill: parent                                // Make the nested rectangle fill the parent item
        color: "#00ff00"                                    // Set a green background color

        onHeightChanged: rectangle.width = height           // Add a slot function to change parent item width
    }

    Component.onCompleted: {                                // Add a component function that runs when item is created
        x = 100                                              // Set the custom property value
        console.log("Item created with x value of 100")      // Log a message on creation
    }

    MouseArea {                                              // Add a MouseArea element for handling mouse events
        anchors.fill: parent                                 // Make the MouseArea fill the parent item
        onClicked: console.log("Parent item clicked!")       // Add a slot function to log click event
        Rectangle {                                          // Add a nested Rectangle for visual feedback
            anchors.fill: parent                             // Make the Rectangle fill the parent item
            color: "#0000ff"                                 // Set a blue color for visual feedback
            opacity: 0.5                                     // Set a semi-transparent opacity for visual feedback
            visible: mouseArea.containsMouse                  // Only show the Rectangle when mouse is over MouseArea
        }
    }
}
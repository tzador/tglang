import QtQuick 2.12 // Import the QtQuick library

// Define a custom component
Item {
    id: customItem // Assign an id to the component

    property int count: 0 // Define a property called "count" with initial value of 0

    signal blockClicked // Define a signal called "blockClicked"

    Component { // Define a component that will be used to create blocks
        id: blockComponent

        Rectangle { // Define a rectangle as the block
            width: 50; height: 50
            radius: 10

            color: "white" // Set the color of the block to white
            border.color: "black" // Set the border color to black
        }
    }

    GridView { // Define a GridView to contain the blocks
        anchors.fill: parent // Set the GridView to fill the entire parent

        model: count // Set the model of the GridView to the "count" property
        delegate: blockComponent // Use the blockComponent as the delegate to create blocks

        onCountChanged: { // Define a handler for when the "count" property is changed
            for (var i = 0; i < count; i++) { // Repeat for the number of times specified by the "count" property
                var block = blockComponent.createObject(parent) // Create a new block using the blockComponent
                block.x = i*50 // Position the block horizontally based on the current index
                block.y = i*50 // Position the block vertically based on the current index
                block.clicked.connect(customItem.blockClicked) // Connect the block's click signal to the customItem's signal
            }
        }
    }
}
// This code snippet creates a custom reusable component in QML

Item {
    id: customComponent
    width: 400
    height: 400

    property int value // create a property for our custom component

    // create a property alias to allow binding and access to the property
    property alias customValue: value

    // create a signal to emit when the custom value changes
    signal customValueChanged()

    Rectangle {
        id: background
        anchors.fill: parent
        color: "lightblue"

        // bind the color to the custom component's value
        parent.color: "blue"

        // create a gradient on the rectangle
        gradient: Gradient {
            GradientStop { position: 0.0; color: "lightblue" }
            GradientStop { position: 0.5; color: "white" }
            GradientStop { position: 1.0; color: "lightblue" }
        }
    }

    Text {
        id: valueLabel
        anchors.centerIn: parent
        text: "Custom Value: " + customComponent.value
        font.pixelSize: 20
        color: "white"
        font.bold: true
    }

    MouseArea {
        anchors.fill: parent
        onClicked: {
            // generate a random number and update the custom value
            customComponent.value = Math.floor(Math.random() * 100)

            // emit the signal to indicate the value has changed
            customComponent.customValueChanged()
        }
    }
}
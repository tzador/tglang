// This is an example of a custom button component in QML

import QtQuick 2.15 // Importing the QtQuick library

Rectangle { // Creating a rectangle to contain the button
    id: root // Giving the rectangle an id for referencing later
    width: 200 // Setting the width of the rectangle to 200
    height: 50 // Setting the height of the rectangle to 50

    property color backgroundColor: "darkblue" // Creating a custom property for the background color of the button

    Text { // Creating a text element for the label on the button
        text: "Click Me!" // Setting the text to display on the button
        font.bold: true // Making the text bold
        color: "white" // Setting the text color to white
        anchors.centerIn: parent // Centering the text within the parent element
    }

    MouseArea { // Creating a mouse area for detecting clicks on the button
        id: mouseArea // Giving the mouse area an id
        anchors.fill: parent // Filling the entire parent element
        onClicked: root.backgroundColor = "darkgreen" // Changing the background color of the button when clicked
    }

    Connections { // Setting up connections to handle events
        target: mouseArea // Connecting to the mouse area
        onEntered: root.backgroundColor = "darkcyan" // Changing the background color when the mouse enters the button
        onExited: root.backgroundColor = "darkblue" // Changing the background color when the mouse exits the button
    }
}

// Using this custom button component in another QML file would look like this:
Button {
    id: customButton
    x: 50 // Positioning the button
    y: 100
    backgroundColor: "darkorange" // Setting the custom background color
}
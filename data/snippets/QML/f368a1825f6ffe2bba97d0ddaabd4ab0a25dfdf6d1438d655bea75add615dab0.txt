/**
 * This is a complex code snippet showing how to create a custom button element in QML
 * using properties, signals, and handlers
 */

// Importing the required modules
import QtQuick 2.0
import QtQuick.Controls 2.15

// Defining the custom button element
Button {
    id: customButton
    
    // Defining the button properties
    property string text: "Custom Button"
    property color buttonColor: "blue"
    property int buttonWidth: 150
    property int buttonHeight: 50
    
    // Defining the onClicked signal and handler
    signal onClicked()
    MouseArea {
        anchors.fill: parent
        onClicked: customButton.onClicked()
    }
    
    // Defining the onEntered and onExited signals and handlers
    signal onEntered()
    signal onExited()
    MouseArea {
        anchors.fill: parent
        onEntered: customButton.onEntered()
        onExited: customButton.onExited()
    }
    
    // Defining the button text and styling
    Text {
        text: customButton.text
        anchors.centerIn: parent
        font {
            pointSize: 15
            bold: true
        }
        color: "white"
    }
    
    // Setting the button color and size based on defined properties
    Rectangle {
        color: customButton.buttonColor
        width: customButton.buttonWidth
        height: customButton.buttonHeight
        border.width: 2
        border.color: "black"
        
        // Setting the button's hover effect
        Behavior on color {
            PropertyAnimation {
                duration: 100
            }
        }
    }
}
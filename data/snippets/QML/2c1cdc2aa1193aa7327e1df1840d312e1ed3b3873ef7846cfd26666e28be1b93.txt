import QtQuick 2.15 // import necessary module

Rectangle { // create a rectangle object
    width: 200 // set width to 200

    MouseArea { // create a mouse area
        anchors.fill: parent // set area to fill parent object

        onClicked: { // set onClicked event handler
            console.log("Rectangle clicked") // print message to console
        }
    }

    Text { // create a text object
        text: "Hello World" // set text to "Hello World"
        font.pixelSize: 32 // set font size to 32 pixels
        x: 75 // set x coordinate to 75
        y: 75 // set y coordinate to 75
        anchors.horizontalCenter: parent.horizontalCenter // center horizontally within parent object
    }

    Image { // create an image object
        source: "image.png" // set image source to local file "image.png"
        anchors.left: parent.left // align image to left side of parent object
        anchors.right: parent.right // align image to right side of parent object
        anchors.top: parent.top // align image to top of parent object
        anchors.bottom: parent.bottom // align image to bottom of parent object

        SequentialAnimation { // create a sequential animation
            id: imageAnimation // give animation an id for later reference
            loops: Animation.Infinite // set animation to loop infinitely

            ParallelAnimation { // create a parallel animation
                NumberAnimation { // animate the image's rotation
                    target: image // specify target object
                    property: "rotation" // specify target property
                    from: 0 // starting value
                    to: 360 // ending value
                    duration: 2000 // animation duration in milliseconds
                    easing.type: Easing.OutInQuad // specify easing type
                }

                NumberAnimation { // animate the image's opacity
                    target: image // specify target object
                    property: "opacity" // specify target property
                    from: 1 // starting value
                    to: 0 // ending value
                    duration: 2000 // animation duration in milliseconds
                    easing.type: Easing.InOutCubic // specify easing type
                }
            }

            PauseAnimation { // add a pause after parallel animation
                duration: 500 // pause duration in milliseconds
            }

            ParallelAnimation { // create another parallel animation
                NumberAnimation { // animate the image's rotation
                    target: image // specify target object
                    property: "rotation" // specify target property
                    from: 360 // starting value
                    to: 0 // ending value
                    duration: 2000 // animation duration in milliseconds
                    easing.type: Easing.OutInQuad // specify easing type
                }

                NumberAnimation { // animate the image's opacity
                    target: image // specify target object
                    property: "opacity" // specify target property
                    from: 0 // starting value
                    to: 1 // ending value
                    duration: 2000 // animation duration in milliseconds
                    easing.type: Easing.InOutCubic // specify easing type
                }
            }
        }
    }
}
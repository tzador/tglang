\`\`\`qml
// This code snippet creates a custom circular progress bar

import QtQuick 2.0
import QtQuick.Controls 2.0

Item {
    width: 200
    height: 200

    property real value // holds value of progress
    property real lineWidth: 16 // width of progress bar line
    property color mainColor: "steelblue" // color of progress bar

    Rectangle {
        anchors.fill: parent // fills entire item with rectangle
        color: "transparent"
        border.color: "lightsteelblue" // border color of progress bar
        border.width: 4 // width of border
        radius: width / 2 // creates circular shape
    }

    Rectangle {
        anchors.centerIn: parent // centers rectangle in parent item
        anchors.margins: lineWidth // creates margin for progress bar

        // sets rotation
        transform: Rotation {
            origin.x: parent.width / 2
            origin.y: parent.height / 2
            angle: -90 + (360 * value) // rotates based on value of progress
        }

        // creates circular progress bar
        Rectangle {
            width: parent.width - (2 * lineWidth)
            height: parent.height - (2 * lineWidth)
            color: mainColor
            border.color: "transparent"
            radius: width / 2 // creates circle shape
            clip: true // clips excess color outside of rectangle

            // creates gradient for progress bar
            gradient: Gradient {
                GradientStop { position: 0; color: "#dce0e5" }
                GradientStop { position: 1; color: mainColor }
            }
        }

        // creates inner circle to hide excess gradient
        Rectangle {
            width: parent.width - (4 * lineWidth)
            height: parent.height - (4 * lineWidth)
            color: "transparent"
            border.color: "transparent"
            anchors.centerIn: parent
            radius: width / 2
        }

        // creates text to display progress value
        Text {
            anchors.fill: parent // fills entire item with text
            text: value * 100 + "%" // multiplies value by 100 and adds percentage symbol
            font.bold: true // makes text bold
            font.pixelSize: 30 // sets font size
            color: "lightsteelblue" // sets text color
            horizontalAlignment: Text.AlignHCenter // centers text horizontally
            verticalAlignment: Text.AlignVCenter // centers text vertically
        }
    }
}
\`\`\`
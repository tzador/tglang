// This code snippet creates a custom button component with multiple states and animations
import QtQuick 2.12
import QtQuick.Controls 2.5

// Define custom button component
Rectangle {
    width: 120
    height: 40

    // Button states
    states: [
        // Default state
        State {
            name: "normal"
            // Set default background color
            PropertyChanges {
                target: background
                color: "blue"
            }
        },
        // Transition to pressed state when clicked
        State {
            name: "pressed"
            when: mouseArea.pressed
            // Set background color to green
            PropertyChanges {
                target: background
                color: "green"
            }
        },
        // Transition to hover state when mouse hovers over button
        State {
            name: "hovered"
            when: hovered
            // Set background color to orange
            PropertyChanges {
                target: background
                color: "orange"
            }
            // Button icon animation on hover
            PropertyChanges {
                target: icon
                scale: 1.2
            }
        }
    ]

    // Button background
    Rectangle {
        id: background
        anchors.fill: parent
        color: "blue"
    }

    // Button icon
    Image {
        id: icon
        source: "button_icon.png"
        anchors.centerIn: parent
    }

    // Mouse area to detect clicks and hovers
    MouseArea {
        id: mouseArea
        anchors.fill: parent
        onClicked: {
            // Toggle between pressed and normal state
            button.state = (button.state === "pressed") ? "normal" : "pressed";
        }
    }
}
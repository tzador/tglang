// A complex QML code snippet for a shopping list app

import QtQuick 2.12 // Imports the QtQuick module for QML objects
import QtQuick.Controls 2.12 // Imports the QtQuick.Controls module for UI elements

ApplicationWindow { // Creates a window for the application
    id: window // Assigns an id to the window for referencing purposes
    visible: true // Makes the window visible
    title: "Shopping List" // Sets the title of the window

    property var items: ["Milk", "Bread", "Eggs", "Butter"] // Creates an array of items for the shopping list

    Column { // Creates a column to organize UI elements vertically
        anchors.fill: parent // Sets the column to fill the entire window

        Label { // Creates a label element for the title of the shopping list
            text: "My Shopping List" // Sets the text for the label
            font.family: "Helvetica" // Sets the font family for the label
            font.pixelSize: 24 // Sets the font size for the label
            horizontalAlignment: Qt.AlignHCenter // Aligns the label text horizontally in the center
            margin: 20 // Sets a margin around the label element
        }

        Rectangle { // Creates a rectangle element for the input field and button
            color: "#E4E4E4" // Sets the color of the rectangle
            radius: 5 // Sets the border radius of the rectangle

            Row { // Creates a row to organize UI elements horizontally
                anchors.fill: parent // Sets the row to fill the entire rectangle

                TextField { // Creates a text field for inputting new items
                    id: input // Assigns an id to the text field for referencing purposes
                    placeholderText: "Add new item" // Sets a placeholder text for the text field
                    font.family: "Helvetica" // Sets the font family for the text field
                    font.pixelSize: 16 // Sets the font size for the text field
                    anchors.left: parent.left // Anchors the text field to the left side of the parent element
                    anchors.margins: 10 // Sets a margin for the text field
                }

                Button { // Creates a button for adding items to the list
                    text: "Add" // Sets the text for the button
                    font.family: "Helvetica" // Sets the font family for the button
                    font.pixelSize: 16 // Sets the font size for the button
                    anchors.right: parent.right // Anchors the button to the right side of the parent element
                    anchors.margins: 10 // Sets a margin for the button
                    onClicked: { // Specifies the behavior when the button is clicked
                        if (input.text !== "") { // Checks if the input field is not empty
                            items.push(input.text) // Adds the text from the input field to the items array
                            input.clear() // Clears the input field
                        }
                    }
                }
            }
        }

        ListView { // Creates a list view for displaying the shopping list items
            model: items // Sets the model for the list view to the items array
            anchors.fill: parent // Sets the list view to fill the entire column
            clip: true // Clips any overflow of items in the list view
            delegate: Text { // Creates a text element for each item in the list
                text: modelData // Sets the text for the text element to the current item in the model
                font.family: "Helvetica" // Sets the font family for the text element
                font.pixelSize: 16 // Sets the font size for the text element
                horizontalAlignment: Qt.AlignHCenter // Aligns the text horizontally in the center
                padding: 10 // Adds padding around the text element
                onDoubleClicked: { // Specifies the behavior when an item in the list is double clicked
                    items.remove(index) // Removes the item from the list
                }
            }
        }
    }
}
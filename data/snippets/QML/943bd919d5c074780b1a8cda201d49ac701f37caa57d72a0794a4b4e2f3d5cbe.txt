// This is a complex QML code snippet that creates a custom button with different states and transitions

import QtQuick 2.0

Item {
    id: myButton

    // Define properties for different states
    property color colorDefault: "#007bff"
    property color colorHovered: "#0062cc"
    property color colorPressed: "#003da5"

    // Define a property to keep track of the current state
    property string state: "default"

    // Define a signal to handle click events
    signal clicked()

    Rectangle {
        id: buttonBackground
        width: 100
        height: 50
        color: myButton[state]

        MouseArea {
            anchors.fill: parent
            hoverEnabled: true

            // Handle hover events
            onEntered: myButton.state = "hovered"
            onExited: myButton.state = "default"

            // Handle click events
            onClicked: myButton.clicked()
        }
    }

    Text {
        id: buttonText
        text: "Click Me!"
        color: "white"
        font.pixelSize: 18
        anchors.centerIn: parent
    }

    // Define the transitions for the button's states
    transitions: Transition {
        // Transition for when the button is pressed
        from: "default"
        to: "pressed"
        PropertyAnimation {
            target: myButton
            property: "color"
            duration: 200
            easing.type: Easing.InOutQuad
        }
    }, Transition {
        // Transition for when the button is hovered
        from: "default"
        to: "hovered"
        PropertyAnimation {
            target: myButton
            property: "color"
            duration: 200
            easing.type: Easing.InOutQuad
        }
    }, Transition {
        // Transition for when the button is returned to default state after being pressed
        from: "pressed"
        to: "default"
        PropertyAnimation {
            target: myButton
            property: "color"
            duration: 200
            easing.type: Easing.InOutQuad
        }
    }

    states: State {
        name: "default"
        PropertyChanges { target: buttonText; text: "Click Me!" }
    }, State {
        name: "hovered"
        PropertyChanges { target: buttonText; text: "Hovering!" }
    }, State {
        name: "pressed"
        PropertyChanges { target: buttonText; text: "Thanks for clicking!" }
    }
}
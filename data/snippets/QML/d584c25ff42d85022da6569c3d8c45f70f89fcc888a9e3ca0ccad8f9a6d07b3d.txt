/**
 * Annotated QML code snippet with multiple nested layers
 * Toggles the visibility and rotation of a rectangle
 */


import QtQuick 2.0        // import the required module

Rectangle {
    id: parentRect          // define an id for the top-level rectangle

    width: 100              // set the width of the rectangle to 100
    height: 100             // set the height of the rectangle to 100

    color: "red"            // set the color of the rectangle to red

    visible: true           // set the initial visibility of the rectangle to true

    radius: 10              // set the radius of the rectangle to 10

    rotation: 0             // set the initial rotation of the rectangle to 0

    Rectangle {
        id: childRect       // define an id for the child rectangle

        width: 50           // set the width of the child rectangle to 50
        height: 50          // set the height of the child rectangle to 50

        color: "blue"       // set the color of the child rectangle to blue

        visible: parentRect.visible      // bind the visibility of the child rectangle to the visibility of the parent rectangle

        rotation: parentRect.rotation    // bind the rotation of the child rectangle to the rotation of the parent rectangle
    }

    MouseArea {
        anchors.fill: parentRect     // make the mouse area cover the entire parent rectangle

        onClicked: {
            parentRect.visible = !parentRect.visible     // toggle the visibility of the parent rectangle when clicked
            parentRect.rotation += 30                    // add 30 degrees to the rotation of the parent rectangle when clicked
        }
    }

    Component.onCompleted: {
        console.log("The rectangle has been initialized.")     // print a message to the console when the rectangle is completed
    }
}
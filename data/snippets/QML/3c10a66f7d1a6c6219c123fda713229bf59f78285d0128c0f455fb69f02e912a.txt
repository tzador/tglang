import QtQuick 2.15

// Defining a custom rectangle element with properties and a signal
Rectangle {
    id: customRect // Unique identifier for this element
    width: 400
    height: 400
    color: "grey"

    // Properties of the rectangle
    property int xPos: 0
    property int yPos: 0
    property int rectWidth: 100
    property int rectHeight: 100

    // Signal that will be emitted when the mouse is clicked
    signal clicked()

    // Event handler for when the mouse is clicked within the rectangle
    MouseArea {
        anchors.fill: parent // Constrain the mouse area to the size of the rectangle

        // When the mouse is clicked, emit the clicked signal
        onClicked: customRect.clicked()
    }

    // Text element to display the current position of the rectangle
    Text {
        anchors.centerIn: parent // Center the text within the rectangle
        color: "black"
        text: "Current Position: " + customRect.xPos + ", " + customRect.yPos // Display the current xPos and yPos values
    }

    // Function to move the rectangle to a random position
    function moveRandom() {
        customRect.xPos = Math.floor(Math.random() * (parent.width - customRect.rectWidth)) // Generate a random x position within the parent width
        customRect.yPos = Math.floor(Math.random() * (parent.height - customRect.rectHeight)) // Generate a random y position within the parent height
    }

    // Timer element to automatically move the rectangle every 2 seconds
    Timer {
        interval: 2000 // Interval in milliseconds
        repeat: true // Repeat the timer continuously
        running: true // Start the timer immediately

        // When the timer times out, call the moveRandom function
        onTriggered: customRect.moveRandom()
    }
}
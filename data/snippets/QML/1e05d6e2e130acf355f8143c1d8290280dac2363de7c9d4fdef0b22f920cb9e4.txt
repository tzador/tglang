/*
This code snippet is a complex QML component.
It includes a delegate, a custom property, and various bindings.
*/

// Import necessary modules
import QtQuick 2.12
import QtQuick.Controls 2.12

// Define the component
Item {
    id: myComponent // Component identifier

    // Custom property
    property int myListLength: 10

    // Define the model
    ListModel {
        id: myModel
        ListElement { // List element with properties
            name: "John"
            age: 25
        }
        ListElement {
            name: "Jane"
            age: 30
        }
        ListElement {
            name: "Bob"
            age: 40
        }
    }

    // Define the list view
    ListView {
        id: myListView // Listview identifier
        anchors.fill: parent // Align the list view within parent component
        model: myModel // Assign the model to the list view

        // Define the delegate
        delegate: Rectangle {
            width: parent.width // Set width to match parent
            height: 50 // Set fixed height

            // Bind the delegate properties
            color: index % 2 === 0 ? "lightblue" : "lightgray" // Change color based on index
            Text { // Add text element
                text: model.name + ", " + model.age // Display list element properties
                anchors.centerIn: parent // Center text within delegate
            }
        }
    }

    // Define a button to dynamically update the list length
    Button {
        text: "Update List Length"
        onClicked: {
            // Generate a random number between 5 and 15
            var randomNum = Math.floor(Math.random() * 11) + 5;
            myListLength = randomNum;
        }
    }
}
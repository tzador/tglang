/**
 * This is a complex QML code snippet that displays a list of items with custom styles.
 *
 * It uses the ListView and Delegate components to display the items in a vertical list.
 * The items are populated using a model, which is defined in the ListView as the data source.
 * Each item in the list has a custom header, body and footer.
 */

// Define the model, which will be used to populate the list
ListModel {
    id: listModel // Unique id for the model

    // Data for each item in the list
    ListElement { header: "Item 1 Header"; body: "Item 1 Body"; footer: "Item 1 Footer" }
    ListElement { header: "Item 2 Header"; body: "Item 2 Body"; footer: "Item 2 Footer" }
    ListElement { header: "Item 3 Header"; body: "Item 3 Body"; footer: "Item 3 Footer" }
}

// The ListView component, which will display the items in a vertical list
ListView {
    width: 200; height: 300 // Set the size of the list view

    // Set the model property to the previously defined list model
    model: listModel

    // Define the delegate for each item in the list
    // The delegate will use the custom header, body and footer for each item
    delegate: Component {
        Rectangle {
            width: 200; height: 60 // Set the size of the delegate

            Text {
                text: header // Use the header property from the model to display the item's header
                font.bold: true // Set the font to bold
                anchors.left: parent.left // Align the text to left
                anchors.leftMargin: 10 // Add some left margin
            }

            Text {
                text: body // Use the body property from the model to display the item's body
                anchors.top: header.bottom // Align the text below the header text
                anchors.left: parent.left // Align the text to left
                anchors.leftMargin: 10 // Add some left margin
            }

            Text {
                text: footer // Use the footer property from the model to display the item's footer
                anchors.bottom: parent.bottom // Align the text to the bottom
                anchors.left: parent.left // Align the text to left
                anchors.leftMargin: 10 // Add some left margin
            }

            // Add some custom styling to the delegate
            // In this case, we are changing the background color and border of the delegate
            color: "lightgray"
            border.color: "black"
            border.width: 1
            radius: 5
        }
    }
}

// The main QML application
ApplicationWindow {
    visible: true // Make the application window visible

    // Define the size of the application window
    width: 400
    height: 600

    title: "Custom ListView" // Set the title of the application window
    color: "white" // Set the background color of the application window

    // Add the previously defined ListView component to the application window
    ListView {}
}
// Define a custom reusable component called "Circle"
// This component takes in a radius and a color as properties
// It also has a signal called "clicked" which emits when the circle is clicked
// The circle is made up of a Rectangle and an Ellipse, with the radius and color passed in as properties
// To make the circle clickable, we set the "MouseArea" behavior to prevent stealing mouse events from the Rectangle and Ellipse
// When the MouseArea is clicked, we emit the "clicked" signal
Rectangle {
    id: circle
    property int radius
    property color circleColor
    signal clicked

    Rectangle {
        width: radius * 2
        height: radius * 2
        color: circleColor
        radius: radius

        Ellipse {
            width: radius * 2
            height: radius * 2
            color: "transparent"
            radius: radius
        }

        MouseArea {
            anchors.fill: parent
            preventStealing: true
            onClicked: {
                circle.clicked();
            }
        }
    }
}
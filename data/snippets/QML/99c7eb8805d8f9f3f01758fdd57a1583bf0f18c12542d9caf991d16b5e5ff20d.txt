// Annotated Code Snippet

Item {
    x: 100
    y: 200
    width: 300
    height: 400
    visible: true // Sets item to be visible
    clip: true // Clips the item when it goes out of its bounds

    Rectangle {
        width: parent.width / 2 // Sets the width of the rectangle to be half of its parent's width
        height: parent.height / 2 // Sets the height of the rectangle to be half of its parent's height
        color: "red" // Sets the color of the rectangle to be red
    }

    Text {
        anchors.centerIn: parent // Anchors the text to the center of its parent
        text: "Hello, world!" // Sets the text content to "Hello, world!"
        font {
            family: "Helvetica" // Sets the font family to Helvetica
            pixelSize: 20 // Sets the font size to 20 pixels
            bold: true // Sets the font to be bold
        }
    }

    MouseArea {
        anchors.fill: parent // Fills the entire parent item with the mouse area
        onClicked: {
            console.log("Mouse clicked at x:" + mouse.x + " y:" + mouse.y) // Logs the x and y coordinates of the mouse click
            rect.color = "blue" // Changes the color of the rectangle to blue
            text.font.pixelSize = 30 // Changes the font size of the text to 30 pixels
        }
    }

    Image {
        source: "https://example.com/image.jpg" // Sets the source of the image to be a URL
        anchors.right: parent.right // Anchors the image to the right side of its parent
        anchors.bottom: parent.bottom // Anchors the image to the bottom of its parent
        width: 100 // Sets the width of the image to be 100
        height: 100 // Sets the height of the image to be 100
        fillMode: Image.PreserveAspectFit // Sets the fill mode of the image to be preserve aspect fit
    }
}
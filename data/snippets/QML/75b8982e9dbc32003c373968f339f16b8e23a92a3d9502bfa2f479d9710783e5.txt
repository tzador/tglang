// This is a complex code snippet in QML

// Defining a component
Component {
    id: myComponent
    property int myProperty: 0

    // State changes based on property value
    states: State {
        name: "active"
        when: myProperty > 0
        PropertyChanges { target: someItem; rotation: 45 }
    }
    states: State {
        name: "inactive"
        when: myProperty === 0
        PropertyChanges { target: someItem; rotation: 0 }
    }

    // Item to hold the component
    Item {
        id: myItem
        // Dynamically defining the item's width based on myProperty value
        width: myProperty * 10

        // Nested item to display myProperty value
        Item {
            id: label
            // Using ternary expression to check if myProperty is even or odd
            Text {
                text: myProperty % 2 === 0 ? "Even Number" : "Odd Number"
            }
        }
    }
}

// Using the component above
myComponent { // Creating an instance of the component
    id: myComponentInstance
    myProperty: 5 // Changing the property value to trigger state change
}

myComponentInstance.myProperty = 0 // Changing property value again to trigger another state change

// Output: The myComponentInstance will have a rotated child item with a width of 50, and the label nested inside will display "Odd Number"
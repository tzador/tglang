Rectangle {
    id: rect

    // A property 'width' is defined with a value of 100
    width: 100

    // A property 'height' is defined with a value of 200
    height: 200

    // The color property is set to a linear gradient and the anchors property is used to center it within the parent element
    color: LinearGradient {
        anchors.centerIn: parent
        GradientStop { position: 0.0; color: "blue" }
        GradientStop { position: 1.0; color: "lightblue" }
    }

    // A boolean property 'visible' is defined with a value of true
    visible: true

    // An object of type Component is defined
    Component {
        id: innerText

        // A Text element is created with the text property set to 'This is inner text'
        Text {
            text: "This is inner text"
        }
    }

    // A MouseArea is created to detect mouse clicks within the Rectangle
    MouseArea {
        anchors.fill: parent

        // When clicked, a JavaScript function is called that assigns a random number to the width property of the Rectangle, between 50 and 200
        onClicked: rect.width = Math.random() * (200 - 50) + 50;
    }

    // A ColumnLayout is defined, with the Text element from the innerText Component as its first child, and a Rectangle as its second child
    ColumnLayout {
        anchors.fill: parent

        Text {
            id: childText
            anchors.horizontalCenter: parent.horizontalCenter

            // The text is bound to the width property of the Rectangle multiplied by 2 (ex: if width is 100, text will be 200)
            text: rect.width * 2
        }

        Rectangle {
            width: 100
            height: 100
            anchors.horizontalCenter: parent.horizontalCenter

            // The color property is set to a solid color and the opacity is set to half (0.5)
            color: "green"
            opacity: 0.5
        }
    }
}
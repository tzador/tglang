Rectangle { //Creating a rectangle object
    width: 200 //Setting width to 200 pixels
    height: 200 //Setting height to 200 pixels
    color: "red" //Setting color to red
    border.color: "black" //Setting border color to black
    border.width: 2 //Setting border width to 2 pixels
    opacity: 0.5 //Setting opacity to 50%
    gradient: Gradient { //Creating a gradient
        GradientStop { //Creating a gradient stop
            position: 0 //Setting position to 0
            color: "white" //Setting color to white
        }
        GradientStop { //Creating a second gradient stop
            position: 1 //Setting position to 1
            color: "blue" //Setting color to blue
        }
    }
    Rectangle { //Nested rectangle object
        anchors.centerIn: parent //Centering the nested rectangle inside the parent rectangle
        width: parent.width * 0.7 //Setting width to 70% of the parent rectangle's width
        height: parent.height * 0.7 //Setting height to 70% of the parent rectangle's height
        color: "transparent" //Setting color to transparent
        border.color: "yellow" //Setting border color to yellow
        border.width: 3 //Setting border width to 3 pixels
        radius: 10 //Setting corner radius to 10 pixels
        rotation: 45 //Rotating the rectangle by 45 degrees
        Text { //Creating a text object inside the nested rectangle
            text: "Hello World!" //Setting text to "Hello World!"
            anchors.centerIn: parent //Centering the text inside the nested rectangle
            font.pixelSize: parent.width * 0.05 //Setting font size to 5% of the nested rectangle's width
            color: "black" //Setting text color to black
            rotation: -45 //Rotating the text by -45 degrees
            font.bold: true //Setting font to bold
        }
    }
    MouseArea { //Creating a mouse area for interaction
        anchors.fill: parent //Filling the entire parent rectangle with the mouse area
        hoverEnabled: true //Enabling hover functionality
        onEntered: console.log("Mouse entered rectangle") //Logging message to console when mouse enters rectangle
        onExited: console.log("Mouse exited rectangle") //Logging message to console when mouse exits rectangle
        onClicked: { //Creating a function for when mouse is clicked
            color = Qt.rgba(Math.random(), Math.random(), Math.random(), 1) //Randomly changing rectangle color on click
        }
    }
}
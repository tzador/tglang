// This code creates a grid layout with four buttons and displays a message when a button is clicked

import QtQuick 2.15 // importing the QtQuick module

Item { // creating an Item element
    width: 200 // setting the width of the item to 200 pixels
    height: 200 // setting the height of the item to 200 pixels
    GridLayout { // creating a GridLayout element
        id: grid // assigning an id to the grid layout
        columns: 2 // specifying the number of columns in the grid
        Button { // creating a Button element
            text: "Button 1" // setting the text for the button
            onClicked: { // defining a handler for the onClicked signal
                console.log("Button 1 clicked") // printing a message to the console when the button is clicked
            }
        }
        Button { // creating another Button element
            text: "Button 2" // setting the text for the button
            onClicked: { // defining a handler for the onClicked signal
                console.log("Button 2 clicked") // printing a message to the console when the button is clicked
            }
        }
        Button { // creating a third Button element
            text: "Button 3" // setting the text for the button
            onClicked: { // defining a handler for the onClicked signal
                console.log("Button 3 clicked") // printing a message to the console when the button is clicked
            }
        }
        Button { // creating a fourth Button element
            text: "Button 4" // setting the text for the button
            onClicked: { // defining a handler for the onClicked signal
                console.log("Button 4 clicked") // printing a message to the console when the button is clicked
            }
        }
    }
    Text { // creating a Text element
        anchors.centerIn: parent // centering the text element within the parent item
        text: "Click a button" // setting the text for the text element
        font.pointSize: 18 // setting the font size for the text
        visible: grid.count === 0 // only display the text when there are no items in the grid layout
    }
}
/*
 This is a code snippet in QML that defines a custom button element with animations and styling
*/
import QtQuick 2.12
import QtQuick.Controls 2.12

Item {
    width: 200
    height: 50

    // Button properties
    property alias text: label.text
    property bool pressed: false

    // Label text
    Label {
        id: label
        anchors.centerIn: parent
        text: "Custom Button"
    }

    // Button states and transitions
    states: [
        State {
            name: "normal"
            PropertyChanges {
                target: label
                color: "black"
            }
        },
        State {
            name: "hovered"
            PropertyChanges {
                target: label
                color: "blue"
            }
        },
        State {
            name: "pressed"
            when: pressed
            PropertyChanges {
                target: label
                color: "red"
            }
        }
    ]
    transitions: Transition {
        // Button animation
        NumberAnimation {
            target: label
            property: "scale"
            duration: 250
            easing.type: Easing.OutCubic
            to: 1.2
        }
        NumberAnimation {
            target: label
            property: "scale"
            duration: 250
            easing.type: Easing.InCubic
            to: 1
        }
    }

    // Button styling
    Rectangle {
        anchors.fill: parent
        color: "#ddd"
        radius: 5
        border.color: "black"
        border.width: 2
    }

    // Button behavior
    MouseArea {
        anchors.fill: parent
        onClicked: pressed = true
        onPressed: {
            label.font.bold = true
        }
        onReleased: {
            label.font.bold = false
            pressed = false
        }
    }
}
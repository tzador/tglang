Rectangle {
   color: "red"          // sets the color of the rectangle; use quotation marks for strings
   width: 200            // sets the width of the rectangle; use numerical values
   height: 200           // sets the height of the rectangle; use numerical values
   radius: 20            // sets the corner radius of the rectangle; use numerical values
   border {              // define the border of the rectangle
       color: "black"    // sets the color of the border; use quotation marks for strings
       width: 3          // sets the width of the border; use numerical values
   }
   gradient: Gradient {  // create a linear gradient to be applied to the rectangle
       GradientStop {    // define a gradient stop with a color and position
           color: "white"           // sets the color of the stop; use quotation marks for strings
           position: 0               // sets the position of the stop; use numerical values
       }
       GradientStop {
           color: "blue"
           position: 0.5
       }
       GradientStop {
           color: "green"
           position: 1
       }
   }
   Rectangle {            // creates another rectangle inside the first one
       anchors.centerIn: parent       // sets the position of this rectangle in the center of the parent rectangle
       width: parent.width * 0.8       // sets the width of this rectangle to be 80% of the parent's width
       height: parent.height * 0.8      // sets the height of this rectangle to be 80% of the parent's height
       color: parent.color             // sets the color of this rectangle to be the same as the parent's color
       radius: 15                      // sets the corner radius of this rectangle to be 15
       border {
           color: "gray"
           width: 2
       }
       Text {                          // adds a text element inside the second rectangle
           anchors.fill: parent        // sets the text element to fill the entire rectangle
           text: "Hello world!"        // sets the text to be displayed
           font.bold: true             // sets the font to be bold
           font.pointSize: parent.width/10     // sets the font size to be 1/10th of the width of the parent rectangle
           color: "white"              // sets the font color to be white
           horizontalAlignment: Text.AlignHCenter    // sets the horizontal alignment of the text to be in the center
           verticalAlignment: Text.AlignVCenter      // sets the vertical alignment of the text to be in the center
           clip: true                  // enables clipping of the text if it exceeds the bounds of the rectangle
       }
   }
}
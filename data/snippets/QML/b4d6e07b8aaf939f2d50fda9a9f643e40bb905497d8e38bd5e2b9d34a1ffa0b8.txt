// This code snippet creates a custom button with different states and transitions
import QtQuick 2.0

Rectangle {
    id: button // assign id to rectangle for easy referencing
    width: 100
    height: 40
    color: "green"
    border { // add border to the rectangle
        color: "black"
        width: 2
        radius: 10
    }
    Text {
        id: buttonText // assign id to text for easy referencing
        text: "Press Me"
        font.pointSize: 16
        anchors.centerIn: parent // align the text in the center of the rectangle
    }
    MouseArea {
        anchors.fill: parent // create mouse area that covers the entire rectangle
        onClicked: button.state = "clicked" // change state to clicked when mouse is clicked
        onReleased: button.state = "default" // change state back to default when mouse is released
    }
    states: [ // create different states for the button
        State {
            name: "default" // default state when the button is not clicked
            PropertyChanges { target: buttonText; color: "white" } // change text color to white
            PropertyChanges { target: buttonText; font.bold: false } // make text not bold
        },
        State {
            name: "clicked" // state when the button is clicked
            PropertyChanges { target: button; color: "red" } // change button color to red
            PropertyChanges { target: buttonText; color: "white" } // change text color to white
            PropertyChanges { target: buttonText; font.bold: true } // make text bold
            transitions: [ // add transition to smoothly change between states
                Transition {
                    from: "default" // transition from default state
                    to: "clicked" // to clicked state
                    ColorAnimation { property: "color"; duration: 300 } // animate color change
                }
            ]
        }
    ]
}
// Create a custom button component
Item {
    id: customButton // id for referencing the component
    width: 100 // initial width of the button
    height: 50 // initial height of the button
    property string text // create property for button text
    property color textColor // create property for button text color

    // Style the button background color based on its current state
    Rectangle {
        id: background // id for referencing the background
        color: "lightgray" // default background color
        width: parent.width // set background width to match button width
        height: parent.height // set background height to match button height
        border { // add border styling
            width: 2 // border width
            color: customButton.textColor // set border color to button text color
        }
        onStateChanged: { // define an action when the button state changes
            if (customButton.state === "pressed") { // when button is pressed, change background color
                background.color = "gray"
            } else if (customButton.state === "hovered") { // when button is hovered, change background color
                background.color = "darkgray"
            } else { // when button is not pressed or hovered, change background color to default
                background.color = "lightgray"
            }
        }
    }

    Text {
        text: customButton.text // bind button text to text element
        color: customButton.textColor // set text color to button text color
        font.pixelSize: 20 // set font size
        anchors.centerIn: parent // center text inside button
    }
}
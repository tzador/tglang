/**
 * This is a complex QML code snippet that includes multiple components and uses properties and functions
 * to create dynamic behavior.
 */

// Item component that contains a property and a function
Item {
    property int count: 5 // Holds the count value
    function incrementCount() { // Function to increment the count
        count++
    }
}

// Rectangle component with a mouse area that calls the incrementCount function
Rectangle {
    id: rect // Rectangle id used for referencing
    width: 200
    height: 100
    color: "yellow"

    MouseArea {
        anchors.fill: parent // Mouse area covers the whole rectangle
        onClicked: rect.incrementCount() // Calls the incrementCount function on click
    }
}

// Text component that uses the count property from the Item component
Text {
    text: "Count: " + item.count // Concatenates "Count: " with the count value
    font.pixelSize: 20
    anchors.centerIn: parent
}

// Code block that creates a list of objects using a ListModel and a Repeater
ListModel {
    id: fruitModel // ListModel id used for referencing
    ListElement { // ListElement to add objects to the list
        name: "Apple"
        color: "red"
    }
    ListElement {
        name: "Banana"
        color: "yellow"
    }
    ListElement {
        name: "Orange"
        color: "orange"
    }
}

Repeater {
    model: fruitModel // Uses the ListModel to create multiple objects
    delegate: Rectangle {
        width: 100
        height: 50
        color: model.color // Uses the color property from the ListElement
        Text {
            text: model.name // Uses the name property from the ListElement
            anchors.centerIn: parent
        }
    }
}
Rectangle {
    id: myRectangle // create a Rectangle with given id
    width: 200 // set width of Rectangle to 200 pixels
    height: 200 // set height of Rectangle to 200 pixels
    color: "red" // set color of Rectangle to red
    border.width: 2 // set border width to 2 pixels
    border.color: "black" // set border color to black

    // create a MouseArea that responds to mouse clicks
    MouseArea {
        id: mouseArea // create a MouseArea with given id
        anchors.fill: parent // make MouseArea fill entire parent Rectangle
        onClicked: {
            myRectangle.color = "blue" // change Rectangle color to blue when clicked
        }
    }

    // create a Text element within the Rectangle
    Text {
        text: "Hello, World!" // set text to display
        anchors.centerIn: parent // center text
        font.pixelSize: 24 // set font size to 24 pixels
        color: "white" // set text color to white
        wrapMode: Text.Wrap // set text wrap mode to wrap
    }

    // create a PropertyAction that changes the width of the Rectangle when clicked
    PropertyAction {
        target: myRectangle // specify the target item to apply action to
        property: "width" // specify the property to change
        to: 300 // change width to 300 pixels
    }

    // create a SequentialAnimation that rotates the Rectangle when clicked
    SequentialAnimation {
        id: rotationAnimation // create a SequentialAnimation with given id
        target: myRectangle // specify the target item to apply animation to
        property: "rotation" // specify the property to change
        loops: 2 // rotate the Rectangle twice
        running: false // do not run animation automatically

        // create a NumberAnimation that rotates the Rectangle 180 degrees over 1 second
        NumberAnimation {
            to: 180 // rotate to 180 degrees
            duration: 1000 // animation duration in milliseconds
        }

        // create a PauseAnimation that pauses for 0.5 seconds before starting next animation
        PauseAnimation {
            duration: 500 // pause for 500 milliseconds
        }

        // create a NumberAnimation that rotates the Rectangle 180 degrees over 1 second in reverse
        NumberAnimation {
            to: -180 // rotate to -180 degrees
            duration: 1000 // animation duration in milliseconds
        }
    }
}
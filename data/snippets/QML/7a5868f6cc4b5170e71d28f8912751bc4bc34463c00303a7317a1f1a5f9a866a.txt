Item {
    property int count: 50 // Declaring a property with type integer and initial value of 50
    property string name: "John" // Declaring a property with type string and initial value of "John"
    property bool completed: false // Declaring a property with type boolean and initial value of false

    Component.onCompleted: { // Defining a Component that gets triggered when this Item is completed
        if (count < 100) { // Conditional statement to check if count is less than 100
            count += 1 // Incrementing count by 1 if the condition is met
        } else {
            console.log("Count is greater than or equal to 100") // Printing a message to the console if the condition is not met
        }
    }

    Rectangle { // Defining a Rectangle element inside the Item
        width: 200
        height: 200
        color: "red"
    }

    Text { // Defining a Text element inside the Item
        text: "Hello " + name // Concatenating the value of the name property with the string "Hello"
        font.weight: completed ? Font.Bold : Font.Normal // Using a ternary operator to change the font weight based on the value of the completed property
    }

    MouseArea { // Defining a MouseArea element inside the Item
        anchors.fill: parent // Anchoring the MouseArea to the parent Item
        onClicked: { // Defining a signal handler for the onClicked signal
            if (completed) { // Conditional statement to check if completed is true
                console.log("Item has been completed") // Printing a message to the console if the condition is met
            } else {
                completed = true // Setting the value of the completed property to true when clicked
            }
        }
    }
}
// This is a complex QML code snippet that creates
// a customized rectangle with nested properties and styles

// Define a property group for the rectangle
// with a custom color, size, and position
Rectangle {
  id: myRectangle // Set the id for referencing later
  property color rectColor: "steelblue" //Set the initial color to steelblue
  property int rectWidth: 100 // Set the initial width to 100
  property int rectHeight: 50 // Set the initial height to 50
  x: 50 // Set the x coordinate to 50
  y: 50 // Set the y coordinate to 50
  border.color: "black" // Set the border color to black

  // Add a nested rectangle to create a border effect
  Rectangle {
    width: parent.rectWidth // Use the parent's rectWidth property
    height: parent.rectHeight // Use the parent's rectHeight property
    x: 5 // Set the x coordinate to 5 to create the border
    y: 5 // Set the y coordinate to 5 to create the border
    border.color: parent.rectColor // Use the parent's rectColor property for the border
    color: "transparent" // Set the color to transparent to show the border
  }

  // Add a Text element inside the rectangle
  Text {
    text: "Customized Rectangle" // Set the text of the element
    font.bold: true // Set the font weight to bold
    font.pixelSize: 16 // Set the font size to 16 pixels
    color: "white" // Set the font color to white
    anchors.centerIn: parent // Center the element inside the rectangle
  }

  // Add a MouseArea to make the rectangle interactive
  MouseArea {
    anchors.fill: parent // Cover the entire rectangle with the mouse area
    onClicked: {
      console.log("Rectangle clicked!"); // Print a message to the console when clicked
      myRectangle.rectColor = "red"; // Change the color of the rectangle to red when clicked
    }
  }
}
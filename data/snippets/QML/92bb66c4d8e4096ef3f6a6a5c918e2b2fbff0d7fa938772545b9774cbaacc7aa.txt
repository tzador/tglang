// This code snippet creates a custom button with multiple states
Item {
    id: custom_button
    width: 200
    height: 50
    // Properties for the text label
    property string text: "Click me!"
    property alias textColor: text_label.color
    // Properties for the button background
    property color backgroundColor: "lightblue"
    property alias normalBackground: background.states[0].properties.color
    property alias pressedBackground: background.states[1].properties.color
    // Properties for the button border
    property int borderWidth: 2
    property color borderColor: "black"

    Rectangle {
        id: background
        anchors.fill: parent
        color: custom_button.backgroundColor
        border.width: custom_button.borderWidth
        border.color: custom_button.borderColor
        // Define states for the button background
        states: [
            // Normal state
            State {
                name: "normal"
                PropertyChanges {
                    target: background
                    color: custom_button.normalBackground
                }
            },
            // Pressed state
            State {
                name: "pressed"
                PropertyChanges {
                    target: background
                    color: custom_button.pressedBackground
                }
            }
        ]
    }

    Text {
        id: text_label
        anchors.centerIn: parent
        text: custom_button.text
        color: "white"
        font.bold: true
        font.pixelSize: 24
        // Define transitions for the text label
        transitions: Transition {
            // Transition for text color change
            ColorAnimation {
                target: text_label
                property: "color"
                // Set duration and easing
                duration: 300
                easing.type: Easing.OutQuint
            }
            // Transition for font size change
            NumberAnimation {
                target: text_label
                property: "font.pixelSize"
                // Set duration and easing
                duration: 300
                easing.type: Easing.OutQuint
            }
        }
    }

    // Function to change button state on mouse press
    function mousePressEvent(event) {
        // Check if button is enabled
        if (enabled) {
            // Change button state to pressed
            background.state = "pressed"
            // Animate text label properties
            text_label.color = "grey"
            text_label.font.pixelSize = 22
        }
    }

    // Function to change button state on mouse release
    function mouseReleaseEvent(event) {
        // Check if button is enabled
        if (enabled) {
            // Change button state to normal
            background.state = "normal"
            // Animate text label properties
            text_label.color = "white"
            text_label.font.pixelSize = 24
        }
    }

    // Function to toggle button enabled state
    function toggleEnabled() {
        enabled = !enabled
    }
}
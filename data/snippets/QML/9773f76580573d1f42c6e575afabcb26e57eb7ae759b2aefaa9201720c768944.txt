import QtQuick 2.15
import QtQuick.Controls 2.15

// Declare a custom model that can be used in a TableView
ListModel {
    id: customModel

    Property {
        // Define a property named "name" of type string
        name: "John Smith"
    }

    Property {
        // Define a property named "age" of type int
        age: 30
    }

    property bool isMarried: true

    // Add dynamic properties using the set function
    QtObject {
        // Define a dynamic property named "job" of type string
        customModel.set("job", "Software Engineer")
    }

    // Add items to the model using the append function
    Property {
        // Define a property named "name" of type string
        name: "Jane Smith"
    }
    Property {
        // Define a property named "age" of type int
        age: 28
    }
}

// Create a TableView to display the custom model
TableView {
    // Set the model of the table view to the custom model
    model: customModel

    // Define the columns of the table view
    TableViewColumn {
        title: "Name"
        role: "name" // Set the role to access the "name" property in the model
    }

    TableViewColumn {
        title: "Age"
        role: "age" // Set the role to access the "age" property in the model
    }

    TableViewColumn {
        title: "Marital Status"
        // Use a delegate to map the boolean value of isMarried to a more descriptive string
        delegate: Text {
            text: model.isMarried ? "Married" : "Single"
        }
    }

    TableViewColumn {
        title: "Job"
        role: "job" // Set the role to access the "job" property in the model
    }
}
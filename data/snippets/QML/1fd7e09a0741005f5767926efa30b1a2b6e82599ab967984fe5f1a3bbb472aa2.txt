// This code snippet creates a custom item called "FancyButton" that can be used in QML
import QtQuick 2.0

// Define the properties of the custom item
Item {
    id: fancyButton
    width: 100
    height: 50
    property string text: "Click Me"
    property color textColor: "white"
    property color buttonColor: "blue"
    property bool isClicked: false

    // Add a rectangle as the background of the button
    Rectangle {
        id: background
        anchors.fill: parent
        color: buttonColor
        radius: 10

        // When the button is clicked, change the background color and set isClicked to true
        MouseArea {
            anchors.fill: parent
            onClicked: {
                background.color = "red"
                fancyButton.isClicked = true
            }
        }
    }

    // Add a text item to display the button text
    Text {
        anchors.centerIn: parent
        text: fancyButton.text
        color: textColor
        font.bold: true
    }

    // Add a behavior to the button to change the text color when isClicked changes
    Behavior on isClicked {
        PropertyChanges {
            target: text
            color: "green"
        }
    }

    // Add a signal to emit when the button is clicked
    signal clicked()

    // Add a function to handle the onClicked signal and emit the clicked signal
    function handleClick() {
        clicked()
    }
}
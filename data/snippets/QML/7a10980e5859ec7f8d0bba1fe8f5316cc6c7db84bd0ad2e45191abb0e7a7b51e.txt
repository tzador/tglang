import QtQuick 2.12
import QtQuick.Controls 2.12

ApplicationWindow {
    id: window
    visible: true
    width: 640
    height: 480
    
    //declare a ListModel
    ListModel {
        id: fruitModel
        ListElement { //add an element to the model
            name: "Apple"
            quantity: 10
        }
        ListElement {
            name: "Banana"
            quantity: 7
        }
        ListElement {
            name: "Orange"
            quantity: 5
        }
    }
    
    //create a ListView to display the ListModel
    ListView {
        anchors.fill: parent
        model: fruitModel //bind the ListView's model to the fruitModel
        delegate: Text { //use the delegate property to customize the appearance of each list item
            text: name + ": " + quantity //display the name and quantity of each fruit
            font.family: "Arial"
            font.pointSize: 16
            font.bold: true
        }
    }
    
    //declare a function to add an item to the ListModel
    function addFruit(name, quantity) {
        fruitModel.append({"name": name, "quantity": quantity})
    }
    
    //declare a signal to be emitted when the add button is clicked
    signal addClicked(string name, int quantity)
    
    //create a text input and button to add items to the ListModel
    Row {
        width: parent.width
        height: 50
        spacing: 10
        
        TextInput {
            id: inputName
            placeholderText: "Enter fruit name" //display placeholder text inside the input
        }
        
        TextInput {
            id: inputQuantity
            placeholderText: "Enter quantity"
        }
        
        Button {
            text: "Add"
            onClicked: {
                addClicked(inputName.text, parseInt(inputQuantity.text)) //emit the signal with the input values
                inputName.text = "" //clear the input fields after adding item
                inputQuantity.text = ""
            }
        }
    }
    
    //connect the signal to the addFruit function
    Component.onCompleted: {
        addClicked.connect(addFruit)
    }
}
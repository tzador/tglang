/*
This is a complex code snippet in QML 
that creates a list view with multiple 
items, properties and functions.
*/

import QtQuick 2.12 // Importing the QtQuick module
import QtQuick.Window 2.12 // Importing the QtQuick.Window module

Window {
    id: mainWindow // Creating a window with an id
    visible: true // Setting the window to be visible
    width: 500 // Setting the width of the window to 500 pixels
    height: 700 // Setting the height of the window to 700 pixels

    Rectangle {
        id: rect // Creating a rectangle with an id
        anchors.fill: parent // Anchoring the rectangle to fill the parent (mainWindow)

        ListView {
            id: listView // Creating a list view with an id
            anchors.fill: parent // Anchoring the list view to fill the parent (rect)

            // Creating a model to populate the list view with multiple items
            model: ListModel {
                ListElement {
                    title: "Item 1" // Setting the title of the first item
                    description: "This is the first item" // Setting the description of the first item
                }

                ListElement {
                    title: "Item 2" // Setting the title of the second item
                    description: "This is the second item" // Setting the description of the second item
                }

                ListElement {
                    title: "Item 3" // Setting the title of the third item
                    description: "This is the third item" // Setting the description of the third item
                }
            }

            // Customizing the delegate for each item in the list view 
            delegate: Rectangle {
                width: parent.width // Setting the width of the delegate to be the same as the parent (listView)
                height: 50 // Setting the height of the delegate to be 50 pixels

                Text {
                    text: title // Displaying the title of the item in the list view
                    font.pixelSize: 20 // Setting the font size of the text
                    anchors.centerIn: parent // Anchoring the text to be centered in the delegate
                }

                Text {
                    text: description // Displaying the description of the item in the list view
                    font.pixelSize: 16 // Setting the font size of the text
                    anchors {
                        top: title.bottom // Anchoring the top of the text to the bottom of the title text
                        left: parent.left // Anchoring the left of the text to the left of the parent (delegate)
                        right: parent.right // Anchoring the right of the text to the right of the parent (delegate)
                    }
                }

                MouseArea {
                    anchors.fill: parent // Anchoring the mouse area to fill the delegate
                    onClicked: { // Function to be executed when the mouse area is clicked
                        console.log("You clicked on", title) // Printing a message with the title of the clicked item
                    }
                }
            }
        }
    }
}
/*
This snippet creates a custom button component with different states
and animations.
*/

// Import libraries
import QtQuick 2.12
import QtQuick.Controls 2.5

Item {
    // Declare custom properties
    property bool pressed: false
    property bool hovered: false

    // Define custom states
    states: [
        State {
            name: "normal"
            PropertyChanges {
                target: button
                opacity: 1
            }
        },
        State {
            name: "pressed"
            PropertyChanges {
                target: button
                scale: 0.9
            }
        },
        State {
            name: "hovered"
            PropertyChanges {
                target: button
                color: "red"
            }
        }
    ]

    // Define transition animations
    transitions: [
        Transition {
            from: "*"
            to: "normal"
            PropertyAnimation {
                target: button
                property: "opacity"
                duration: 100
            }
            PropertyAnimation {
                target: button
                property: "scale"
                duration: 100
            }
            PropertyAnimation {
                target: button
                property: "color"
                duration: 100
            }
        }
    ]

    // Define custom button
    Button {
        id: button
        text: "Click Me!"
        width: 100
        height: 50
        color: "blue"
        clip: true

        // Change state when button is pressed or hovered
        onPressedChanged: pressed = button.pressed
        onHoveredChanged: hovered = button.hovered

        // Change state when mouse is clicked or moved
        MouseArea {
            anchors.fill: parent
            onClicked: button.pressed = true
            onPositionChanged: hovered = false
        }

        // Define custom visual items for the button
        Rectangle {
            anchors.fill: parent
            anchors.rightMargin: hovered ? 5 : 0
            color: "transparent"
            border {
                color: hovered ? "black" : "transparent"
                width: 2
            }
        }

        Text {
            anchors.centerIn: parent
            text: "Click me!"
            color: hovered ? "white" : "black"
            font.pixelSize: 20
        }
    }
}
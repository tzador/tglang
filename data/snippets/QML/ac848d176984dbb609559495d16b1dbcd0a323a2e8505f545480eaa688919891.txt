// This is a complex QML code snippet that creates a customized button

import QtQuick 2.15

Item {

// Create a rectangle for the button background
  Rectangle {
    id: buttonBackground
    color: "lightblue"
    radius: 10
    width: 200
    height: 50
    border.color: "black"
    border.width: 2
  }

// Create a text element for the button label
  Text {
    id: buttonLabel
    text: "Click Me!"
    font.pixelSize: 20
    horizontalAlignment: Text.AlignHCenter
    verticalAlignment: Text.AlignVCenter
    anchors.centerIn: parent
  }

// Use MouseArea to detect clicks on the button
  MouseArea {
    id: buttonClickArea
    anchors.fill: parent
    onClicked: {
      buttonBackground.color = "blue"
      buttonLabel.text = "Clicked!"
    }
  }

// Add a hover effect to the button
  states: State {
    name: "hovered"
    when: buttonClickArea.containsMouse
    PropertyChanges {
      target: buttonBackground
      color: "lightgreen"
    }
    PropertyChanges {
      target: buttonLabel
      font.pixelSize: 25
    }
  }
  
  // Add a pressed effect to the button
  states: State {
    name: "pressed"
    when: buttonClickArea.pressed
    PropertyChanges {
      target: buttonBackground
      color: "darkblue"
    }
    PropertyChanges {
      target: buttonLabel
      font.pixelSize: 18
    }
  }
  
  // Add a transition for the hover and pressed states
  transitions: Transition {
    from: "*"
    to: "hovered, pressed"
    ColorAnimation { target: buttonBackground; duration: 200 }
    NumberAnimation { target: buttonLabel; duration: 200 }
  }
}
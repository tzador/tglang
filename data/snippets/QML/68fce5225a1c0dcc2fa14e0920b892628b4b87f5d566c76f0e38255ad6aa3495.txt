/* This is a QML code snippet that creates a custom button with hover effects */
import QtQuick 2.15

Item {
    width: 100
    height: 50

    /* A custom property to define the color of the button */
    property color color: "#ffdb58"

    /* A custom property to define the opacity of the button */
    property real opacity: 1

    /* A custom property to define the radius of the button */
    property int radius: 5

    /* A custom property to define the text of the button */
    property string text: "Button"

    /* A custom property to define the font size of the text */
    property int fontSize: 20

    /* A custom property to define the font color of the text */
    property color fontColor: "#ffffff"

    /* A custom property to define the hover color of the button */
    property color hoverColor: "#e5bf00"

    /* A custom property to define the hover opacity of the button */
    property real hoverOpacity: 0.8

    /* A custom property to define the hover font color of the text */
    property color hoverFontColor: "#000000"

    /* A custom signal to handle the button click event */
    signal clicked()

    Rectangle {
        /* Set the properties of the rectangle */
        anchors.fill: parent
        color: parent.color
        opacity: parent.opacity
        radius: parent.radius

        /* A MouseArea to handle the button events */
        MouseArea {
            /* Set the anchors and size of the MouseArea to fill the parent rectangle */
            anchors.fill: parent
            /* Set the hover enabled property to true */
            hoverEnabled: true

            /* Change the color and opacity of the rectangle on hover event */
            onEntered: {
                parent.color = parent.hoverColor
                parent.opacity = parent.hoverOpacity
            }

            /* Change the color and opacity of the rectangle to the original values on hover exit event */
            onExited: {
                parent.color = color
                parent.opacity = opacity
            }

            /* Emit the clicked signal on mouse click event */
            onClicked: parent.clicked()
        }

        /* Text element to display the button text */
        Text {
            /* Set the anchors to center the text within the button */
            horizontalAlignment: Text.AlignHCenter
            verticalAlignment: Text.AlignVCenter
            anchors.fill: parent
            /* Set the font size and color of the text */
            font.pixelSize: parent.fontSize
            color: parent.fontColor
            /* Set the text to the custom property value */
            text: parent.text
        }
    }
}
//This imports the Qt Quick module
import QtQuick 2.15

//Defines a root item in the QML document
//This can be a visual element or a non-visual element
Item {
    //A property is defined using the keyword 'property'
    property int counter: 0

    //Rectangle is a visual element with specified dimensions and color
    Rectangle {
        width: 400
        height: 400

        //A property can also be defined inside another element
        property string shape: "Rectangle"

        //These properties are dynamically calculated
        //based on the values of other properties
        property int area: width * height
        property string size: width + "x" + height

        //The color is set based on the value of the 'counter' property
        color: counter % 2 === 0 ? "red" : "blue"

        //Anchors are used to position elements relative to each other
        anchors.verticalCenter: parent.verticalCenter
        anchors.horizontalCenter: parent.horizontalCenter

        //This signal is emitted when the mouse is clicked on the rectangle
        signal clicked()

        //This function is called when the mouse is clicked on the rectangle
        MouseArea {
            anchors.fill: parent

            //Defines the behavior when the mouse is pressed
            //In this case, it increments the 'counter' property by 1
            onPressed: counter++

            //Emits the 'clicked' signal when the mouse is released
            //This is only triggered if the mouse is also released within the rectangle
            onClicked: parent.clicked()
        }

        //This text element displays the value of the 'size' property
        Text {
            anchors.centerIn: parent
            text: parent.size
        }

        //A Timer is used to trigger a function at a specified interval
        Timer {
            interval: 1000 //1 second
            running: true //Start the timer immediately
            repeat: true //Repeat the timer continuously

            //This function is called every time the timer interval is reached
            onTriggered: console.log(parent.shape + " has an area of " + parent.area)
        }
    }
}
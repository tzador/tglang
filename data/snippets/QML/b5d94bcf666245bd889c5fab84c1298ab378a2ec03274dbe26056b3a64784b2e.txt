//This snippet is a custom button with a gradient background and various animations
//Import the needed modules
import QtQuick 2.0
import QtQuick.Controls 2.4
import QtGraphicalEffects 1.0
//Define a custom control called GradientButton
Control {
    id: gradientButton
    //Set the size and position of the button
    height: 50
    width: 150
    x: 50
    y: 50
    //Add a gradient background
    background: Gradient {
        id: gradient
        GradientStop { position: 0.0; color: "#c0c0c0"; }
        GradientStop { position: 1.0; color: "#808080"; }
    }
    //Add a mouse area for handling click events
    MouseArea {
        anchors.fill: parent
        //Add animations for button press and release events
        Behavior on pressed {
            PropertyAnimation { properties: "color"; duration: 200; easing.type: Easing.InOutQuad; }
            NumberAnimation { properties: "scale"; duration: 200; easing.type: Easing.InOutQuad; from: 1; to: 0.9; }
        }
        Behavior on released {
            PropertyAnimation { properties: "color"; duration: 200; easing.type: Easing.InOutQuad; }
            NumberAnimation { properties: "scale"; duration: 200; easing.type: Easing.InOutQuad; from: 0.9; to: 1; }
        }
        //Add a signal for when the button is clicked
        onClicked: {
            console.log("Button clicked!");
        }
    }
    //Add a text label for the button
    Text {
        id: buttonText
        text: "Click Me!"
        anchors.centerIn: parent
        //Add animations for text color and size changes
        Behavior on color {
            PropertyAnimation { properties: "color"; duration: 200; easing.type: Easing.InOutQuad; }
            NumberAnimation { properties: "scale"; duration: 200; easing.type: Easing.InOutQuad; from: 1; to: 0.8; }
        }
        Behavior on font.pixelSize {
            PropertyAnimation { properties: "font.pixelSize"; duration: 200; easing.type: Easing.InOutQuad; }
            NumberAnimation { properties: "scale"; duration: 200; easing.type: Easing.InOutQuad; from: 28; to: 25; }
        }
    }
    //Add a drop shadow effect for a more 3D look
    DropShadow {
        anchors.fill: parent
        source: gradient
        //Set the blur radius and color of the drop shadow
        radius: 5
        color: "#333333"
        //Create a sequential animation to pulse the shadow's intensity
        SequentialAnimation {
            loops: Animation.Infinite
            PropertyAnimation { properties: "offset"; duration: 200; easing.type: Easing.InOutQuad; to: Qt.point(0, 10); }
            PropertyAnimation { properties: "sourceIntensity"; duration: 200; easing.type: Easing.InOutQuad; to: 0.6; }
            PropertyAnimation { properties: "sourceIntensity"; duration: 200; easing.type: Easing.InOutQuad; to: 0.8; }
            PropertyAnimation { properties: "sourceIntensity"; duration: 200; easing.type: Easing.InOutQuad; to: 0.5; }
            PropertyAnimation { properties: "sourceIntensity"; duration: 200; easing.type: Easing.InOutQuad; to: 0.9; }
        }
    }
} //End of control definition
import QtQuick 2.0 // import QtQuick module

Item { // create an instance of Item element
    id: root // set the id property to "root"

    property int count // declare a property of type integer with name "count"

    Component.onCompleted: { // declare a handler for the component's completed signal
        for(var i = 0; i < count; i++){ // for loop to iterate "count" number of times
            console.log(i) // print current iteration number
        }
    }

    Rectangle { // declare and create an instance of Rectangle element
        color: "red" // set the color property to "red"
        width: 100 // set the width property to 100
        height: 100 // set the height property to 100
        anchors.centerIn: parent // center the rectangle within its parent element
    }

    Text { // declare and create an instance of Text element
        text: "Hello World!" // set the text property to "Hello World!"
        font.pixelSize: 20 // set the font size property to 20 pixels
        anchors.top: parent.top // anchor the text to the top of its parent element
        anchors.horizontalCenter: parent.horizontalCenter // center the text horizontally within its parent element
    }

    Rectangle { // declare and create another instance of Rectangle element
        color: "blue" // set the color property to "blue"
        width: 50 // set the width property to 50
        height: 50 // set the height property to 50
        anchors { // anchor the rectangle to the right and bottom of its parent element
            right: root.right
            bottom: root.bottom
        }
    }

    MouseArea { // declare and create an instance of MouseArea element
        anchors.fill: parent // fill the entire parent element with the mouse area
        onClicked: { // declare a handler for the mouse clicked signal
            count++ // increment the "count" property by 1 each time the mouse is clicked within the area
        }
        onPositionChanged: { // declare a handler for the mouse position changed signal
            console.log(mouseX,mouseY) // print the current coordinates of the mouse within the area
        }
        onReleased: { // declare a handler for the mouse released signal
            console.clear() // clear the console
        }
    }
}
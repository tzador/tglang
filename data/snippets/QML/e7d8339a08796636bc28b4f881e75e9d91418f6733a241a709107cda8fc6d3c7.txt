/* This code snippet creates a window with a gradient background and a button that changes the background color when clicked */
import QtQuick 2.0 // Import QtQuick version 2.0

//Create a Rectangle element to act as the window
Rectangle {
    id: window // Give the element an id for referencing

    /* Set the size of the window to fill the parent element
    and give it a gradient background with a vertical orientation */
    width: parent.width
    height: parent.height
    gradient: Gradient {
        GradientStop { position: 0.0; color: "blue" }
        GradientStop { position: 1.0; color: "lightblue" }
        orientation: Qt.Vertical
    }

    // Create a Rectangle element to act as the button
    Rectangle {
        id: button // Give the element an id for referencing

        // Set the size and position of the button within the window
        anchors.centerIn: parent
        width: parent.width / 2
        height: parent.height / 4

        //Set the color of the button to red and add a gradient border
        color: "red"
        border.gradient: Gradient {
            GradientStop { position: 0.0; color: "lightgrey" }
            GradientStop { position: 1.0; color: "darkgrey" }
        }

        /* Use a MouseArea to detect when the button is clicked
        and change the background color of the window */
        MouseArea {
            anchors.fill: parent // Make the MouseArea fill the parent element
            onClicked: {
                if (button.color === "red") {
                    window.gradient.gradientStops[0].color = "lightpink" // Change the color of the first gradient stop to light pink
                } else {
                    window.gradient.gradientStops[0].color = "blue" // Change the color of the first gradient stop back to blue
                }
            }
        }
    }
}
/*
    This is a complex code snippet in QML that creates a custom TextInput
    component with a rounded border and customized placeholder text.
    It also includes a property that stores the input text and a function
    to validate the input. 
*/

// Create a custom TextInput component
TextInput {
    id: customTextInput // Sets the id for referencing in other components
    
    // Set properties for the TextInput
    placeholderText: qsTr("Enter your name") // Sets the placeholder text
    color: "#ffffff" // Sets the text color to white
    font.family: "Arial" // Sets the font family to Arial
    font.pointSize: 14 // Sets the font size to 14
    
    // Set properties for the rounded border
    border.width: 2 // Sets the border width to 2 pixels
    border.radius: 8 // Sets the border radius to 8 pixels
    border.color: "black" // Sets the border color to black
    
    // Binding to update the border color based on user input
    onTextChanged: {
        // Use a regex to check if the input contains only letters
        var regex = new RegExp("^[a-zA-Z]+$");
        if (regex.test(text)) {
            border.color = "green" // If input is valid, change border color to green
        } else {
            border.color = "red" // If input is invalid, change border color to red
        }
    }
    
    // Property to store the user input
    property string textInput: text
    
    // Function to validate the input
    function validateInput() {
        // Check if the input is empty
        if (textInput === "") {
            console.log("Please enter your name") // Print error message to console
        } else {
            // Use a regex to check if the input contains only letters
            var regex = new RegExp("^[a-zA-Z]+$");
            if (regex.test(textInput)) {
                console.log("Input is valid") // Print success message to console
            } else {
                console.log("Input contains invalid characters") // Print error message to console
            }
        }
    }
}
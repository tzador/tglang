// This is a complex code snippet in QML

import QtQuick 2.0 // Import QtQuick version 2.0

Item { // Define an item element

    // Set properties for the item element
    id: root
    width: 500
    height: 500

    // Add a Rectangle element as a child element
    Rectangle {
        anchors.fill: parent // Set the anchor to fill its parent element
        color: "#F6F6F6" // Set the color to a light gray

        // Add a MouseArea element to handle mouse events
        MouseArea {
            anchors.fill: parent // Set the anchor to fill its parent element

            // Define a signal to be emitted on mouse click
            signal itemClicked;

            // Add a handler for the signal on clicked event
            onClicked: {
                console.log("Item clicked!"); // Print a message to the console

                // Change the color of the parent Rectangle on click
                parent.color = "blue";
            }
        }
    }

    // Add a Text element as a child element
    Text {
        anchors.centerIn: parent // Center the text element in its parent element
        text: "Hello, World!" // Set the text to be displayed
        font.pixelSize: 30 // Set the font size to 30 pixels
    }

    // Add a ListView element as a child element
    ListView {
        anchors.fill: parent // Set the anchor to fill its parent element
        model: ["Apple", "Banana", "Orange"] // Set the model data to be displayed

        // Add a delegate to customize the appearance of each item in the list
        delegate: Text {
            text: modelData // Set the text to the data from the model
            font.bold: true // Set the font to bold
            font.pixelSize: 20 // Set the font size to 20 pixels
            padding: 10 // Set a padding of 10 pixels around the text
            color: "green" // Set the text color to green

            // Add a MouseArea element to handle mouse events on each item
            MouseArea {
                anchors.fill: parent // Set the anchor to fill its parent element

                // Define a signal to be emitted on mouse click
                signal itemClicked;

                // Add a handler for the signal on clicked event
                onClicked: {
                    console.log("Item clicked: " + modelData); // Print a message with the data from the model to the console

                    // Change the font size of the Text element on click
                    font.pixelSize = 25;
                }
            }
        }
    }
}
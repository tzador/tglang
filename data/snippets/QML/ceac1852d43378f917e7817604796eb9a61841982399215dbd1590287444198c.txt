/* This is a QML code snippet that creates a custom Rectangle item with animations */ 

Rectangle {
    id: customRect // this is the id of the custom rectangle item
    x: 100 // x coordinate of the item
    y: 100 // y coordinate of the item
    width: 200 // width of the item
    height: 200 // height of the item
    color: "red" // color of the item
    smooth: true // enable smooth edge drawing
    antialiasing: true // enable anti-aliasing for smoother graphics

    /* This is the animation section */
    
    /* Scale animation */
    ScaleAnimator{
        id: scaleAnim // this is the id of the scale animation
        target: customRect // the item to apply the animation to
        from: 0 // initial scale
        to: 1 // final scale
        duration: 1000 // duration of the animation in milliseconds
        easing {
            type: Easing.OutBack // type of easing to apply to the animation
            amplitude: 1.5 // amplitude of the easing
        }
    }

    /* Rotation animation */
    RotationAnimator {
        id: rotationAnim // this is the id of the rotation animation
        target: customRect // the item to apply the animation to
        from: 0 // initial rotation angle
        to: 360 // final rotation angle
        duration: 1000 // duration of the animation in milliseconds
        loops: Animation.Infinite // the animation will repeat infinitely
        easing {
            type: Easing.InOutSine // type of easing to apply to the animation
        }
    }

    /* Color animation */
    NumberAnimation{
        id: colorAnim // this is the id of the color animation
        target: customRect // the item to apply the animation to
        property: "color" // property to animate, in this case the color
        from: "red" // initial color
        to: "blue" // final color
        duration: 1000 // duration of the animation in milliseconds
        loops: Animation.Infinite // the animation will repeat infinitely
    }

    /*PropertyChanges is used to change an item's properties during an animation */
    PropertyChanges {
        target: customRect // the item to apply the property change to
        property: "opacity" // the property to change, in this case the opacity
        value: 0.5 // new value for the opacity property
        duration: 500 // the duration of the property change in milliseconds
        when: scaleAnim.running // the property change will occur while the scale animation is running
    }

    /* Animate the custom rectangle when the mouse is clicked */
    MouseArea {
        anchors.fill: parent // make the mouse area the same size as the parent item
        onClicked: {
            colorAnim.start() // start the color animation when the mouse is clicked
            rotationAnim.start() // start the rotation animation when the mouse is clicked
        }
    }

    /* Animate the custom rectangle when a mouse wheel event occurs */
    Connections {
        target: customRect // the item to connect to
        onPressed: {
            scaleAnim.start() // start the scale animation when a mouse wheel is pressed
        }
    }
}
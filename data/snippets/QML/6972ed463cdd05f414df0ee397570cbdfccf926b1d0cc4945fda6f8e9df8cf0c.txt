// This is a complex QML code snippet that creates a custom circle shape with a gradient fill
// and animates its width and color
import QtQuick 2.0 // Import version of QtQuick

// Define a custom Item that represents the circle shape
Item {
    id: circle // Assign an id to the Item for referencing later
    
    property int radius: 200 // Define a property for the radius of the circle
    property color color1: "#ff3333" // Define a property for the first color of the gradient
    property color color2: "#3333ff" // Define a property for the second color of the gradient
    
    // Define the height and width of the Item
    width: radius * 2
    height: radius * 2
    
    // Use a Rectangle with a radius setting to create a circular shape
    // Use gradient to fill the shape with the two specified colors
    Rectangle {
        radius: radius // Use the property for the radius
        gradient: Gradient {
            GradientStop { position: 0.0; color: color1 } // Set the starting color for the gradient
            GradientStop { position: 1.0; color: color2 } // Set the ending color for the gradient
        }
        
        // Define the animation for the width of the shape
        NumberAnimation on width {
            from: 0 // Set the starting width to 0
            to: radius * 2 // Set the final width to the radius * 2
            duration: 1000 // Set the duration of the animation in milliseconds
        }
        
        // Define the animation for the color of the shape
        ColorAnimation on color1, color2 {
            from: "#ff3333" // Set the starting color to the first color property
            to: "#3333ff" // Set the final color to the second color property
            duration: 1000 // Set the duration of the animation in milliseconds
        }
    }
    
    // Add a Text element inside the circle shape
    Text {
        text: "Hello World!" // Set the text to be displayed
        font.pixelSize: radius / 2 // Set the font size based on the radius
        anchors.centerIn: parent // Center the text within the circle shape
    }
}
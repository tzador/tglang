// This code snippet creates a custom bar graph element

import QtQuick 2.0 // Import the Qt Quick 2.0 library

// Define a QML type called BarGraph
Item {
    id: barGraph // Set an id for the element

    // Define properties for the element
    property int barWidth: 10 // Width of each bar in pixels
    property color barColor: "red" // Color of the bars
    property int maxValue: 100 // Maximum value for the bars
    property int spacing: 5 // Spacing between each bar in pixels
    property var data: [] // Array of data points for the bars

    // Define the visual structure of the element
    Rectangle {
        id: bg // Set an id for the rectangle
        color: "white" // Set the background color to white
        border.width: 2 // Set the border width to 2 pixels
        border.color: "black" // Set the border color to black
        width: barWidth * data.length + spacing * (data.length - 1) // Calculate the width of the element
        height: parent.height // Set the height to match the parent element

        // Create a loop to dynamically generate the bars based on the data
        Repeater {
            model: data.length // Set the number of iterations based on the length of the data array
            delegate: Rectangle {
                width: barGraph.barWidth // Set the width of the bar based on the property defined in the element
                height: barGraph.maxValue > 0 ? ((barGraph.maxValue / data[index]) * barGraph.height) : 0 // Calculate the height of the bar based on the maximum value and the data point
                color: barGraph.barColor // Set the color of the bar based on the property defined in the element
                x: (barGraph.barWidth + barGraph.spacing) * index // Calculate the x position of the bar based on the index and the width and spacing
                y: parent.height - height // Set the y position to align the bottom of the bar with the bottom of the element

                // Add an animation to create a smooth transition when the data changes
                Behavior on height {
                    NumberAnimation { duration: 1000 }
                }
            }
        }
    }
}

// Example usage of the BarGraph element
BarGraph {
    barWidth: 20
    barColor: "blue"
    maxValue: 200
    spacing: 10
    data: [50, 100, 150, 120, 80, 160] // The array of data points for the bars
}
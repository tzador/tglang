import QtQuick 2.15

// This component creates a customized button with different properties and states

Rectangle {
  id: button
  width: 100
  height: 50
  color: "red"

  // The 3 states of the button: idle, hovering, and pressed
  states: [
    State {
      name: "idle"
      PropertyChanges { target: button; color: "red" }
    },
    State {
      name: "hovering"
      PropertyChanges { target: button; color: "blue" }
    },
    State {
      name: "pressed"
      PropertyChanges { target: button; color: "green" }
    }
  ]

  // Define animations for each state
  transitions: [
    Transition {
      from: "idle"
      to: "hovering"
      PropertyAnimation { target: button; properties: "width, height"; to: 130, 60; duration: 200 }
    },
    Transition {
      from: "hovering"
      to: "pressed"
      PropertyAnimation { target: button; property: "opacity"; to: 0.5; duration: 150 }
    },
    Transition {
      from: "pressed"
      to: "idle"
      PropertyAnimation { target: button; properties: "width, height"; to: 100, 50; duration: 200 }
    }
  ]

  // Text label for button
  Text {
    id: label
    text: "Click me!"
    font.bold: true
    font.pointSize: 14
    color: "white"

    // Center text horizontally and vertically
    anchors.centerIn: parent
  }

  // Signal handlers for mouse events
  MouseArea {
    anchors.fill: parent

    // Change state to hovering when mouse is over button
    onEntered: button.state = "hovering"

    // Change state to pressed when mouse is pressed on button
    onPressed: button.state = "pressed"

    // Change state back to idle when mouse is released on button
    onReleased: button.state = "idle"
  }
}
import QtQuick 2.12 // Import essential QtQuick module

Rectangle { // Create a rectangle element
    id: rect // Set an ID for the element
    width: 100 // Set the width of the rectangle to 100 pixels
    height: 50 // Set the height of the rectangle to 50 pixels
    color: "#ff8800" // Set the color of the rectangle to orange

    Text { // Create a text element within the rectangle
        id: text // Set an ID for the element
        anchors.centerIn: parent // Set the text to be centered within the rectangle
        text: "Hello World" // Set the text to display as "Hello World"
        font.pointSize: 20 // Set the font size to 20 points
        font.bold: true // Make the text bold
        color: "#ffffff" // Set the color of the text to white

        MouseArea { // Create a mouse area within the text element
            anchors.fill: parent // Make the mouse area cover the entire text element
            onClicked: console.log("Text clicked") // Print "Text clicked" to the console when the mouse area is clicked
        }
    }

    states: [ // Create a list of states for the rectangle element
        State { // Create a state
            name: "green" // Set the name of the state to "green"
            PropertyChanges { // Make changes to the element's properties when in this state
                target: rect // Target the rectangle element
                color: "#44cc44" // Set the color to green
                width: 200 // Set the width to 200 pixels
            }
        },
        State { // Create another state
            name: "blue" // Set the name of the state to "blue"
            PropertyChanges { // Make changes to the element's properties when in this state
                target: rect // Target the rectangle element
                color: "#0088ff" // Set the color to blue
                height: 100 // Set the height to 100 pixels
            }
        }
    ]

    transitions: [
        Transition { // Create a transition between states
            from: "*" // Set the starting state to any state
            to: "green" // Set the ending state to "green"
            NumberAnimation { // Animate the width of the rectangle when transitioning
                target: rect // Target the rectangle element
                property: "width" // Specify the property to be animated
                duration: 300 // Set the duration of the animation to 300 milliseconds
                easing.type: Easing.InOutQuad // Set the easing type to InOutQuad
            }
        }
    ]

    TextEdit { // Create a text edit element within the rectangle
        id: textEdit // Set an ID for the element
        anchors.centerIn: parent // Set the text edit to be centered within the rectangle
        placeholderText: "Enter text here" // Set placeholder text to display when there is no text entered
        font.pointSize: 16 // Set the font size to 16 points
        color: "#000000" // Set the color of the text to black 

        onTextChanged: console.log("New text entered:", text) // Print the entered text to the console when it changes
    }
}
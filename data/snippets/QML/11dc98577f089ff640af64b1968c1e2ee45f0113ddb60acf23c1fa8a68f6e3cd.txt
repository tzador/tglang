import QtQuick 2.0

/*Defines a default size of 400x400 pixels for the application window*/
ApplicationWindow {
    id: mainWindow
    width: 400
    height: 400

    /*Defines a rectangle item with a red color and size of 100x100 pixels, centered in the window*/
    Rectangle {
        width: 100
        height: 100
        color: "red"
        anchors.centerIn: parent

        /*Defines a property animation on the x-axis with a duration of 1000 milliseconds and a loop count of 2, animating the rectangle from its current position to -200 pixels*/
        PropertyAnimation {
            target: parent
            property: "x"
            duration: 1000
            loops: 2
            to: -200
        }
    }

    /*Defines a text item with a custom font and displays a message*/
    Text {
        text: "Hello world!"
        font.family: "Helvetica"
        font.pointSize: 24
    }

    /*Defines a button item with an onClicked handler that increments a counter property*/
    Button {
        text: "Click me!"
        onClicked: {
            counter++
        }
    }

    /*Defines a property binding for a rectangle's color, depending on the state of the button (pressed or not)*/
    Rectangle {
        width: 100
        height: 100
        color: button.pressed ? "green" : "blue"
        anchors.top: parent.top
        anchors.right: parent.right
    }

    /*Defines a state with animations for when the button is pressed*/
    State {
        name: "pressed"
        ParentChange {
            target: rectangle
            color: "yellow"
        }
        NumberAnimation {
            target: rectangle
            property: "width"
            duration: 1000
            to: 200
        }
        ParallelAnimation {
            target: rectangle
            PropertyAnimation {
                property: "height"
                to: 200
                duration: 1000
            }
            PropertyAnimation {
                property: "rotation"
                to: 360
                duration: 1000
            }
        }
    }

    /*Defines a state with animations for when the button is not pressed*/
    State {
        name: "unpressed"
        ParentChange {
            target: rectangle
            color: "blue"
        }
        NumberAnimation {
            target: rectangle
            property: "width"
            duration: 1000
            to: 100
        }
        ParallelAnimation {
            target: rectangle
            PropertyAnimation {
                property: "height"
                to: 100
                duration: 1000
            }
            PropertyAnimation {
                property: "rotation"
                to: 0
                duration: 1000
            }
        }
    }

    /*Defines a transition between states, with a duration of 500 milliseconds and easing function*/
    Transitions {
        Transition {
            from: "*"
            to: "*"
            reversible: true
            PropertyAnimation {
                properties: "x,y"
                duration: 500
                easing.type: Easing.OutCubic
            }
        }
    }

    /*Defines a property named counter and initializes it with a value of 0*/
    property int counter: 0
}
/* This code snippet creates a custom button component with different states and transitions */

/* Create a custom button component */
Rectangle {
    id: customButton
    width: 200
    height: 50
    color: "lightgray"

    /* Define the different states of the button */
    states: [
        State {
            name: "normal"
            PropertyChanges { target: customButton; color: "lightgray" }
        },
        State {
            name: "hovered"
            PropertyChanges { target: customButton; color: "gray" }
        },
        State {
            name: "pressed"
            PropertyChanges { target: customButton; color: "darkgray" }
        }
    ]

    /* Define the transitions between the different states */
    transitions: [
        Transition {
            from: "normal"
            to: "hovered"
            PropertyAnimation { target: customButton; properties: "color"; easing.type: Easing.InQuad; duration: 500 }
        },
        Transition {
            from: "hovered"
            to: "pressed"
            PropertyAnimation { target: customButton; properties: "color"; easing.type: Easing.InQuad; duration: 500 }
        },
        Transition {
            from: "pressed"
            to: "normal"
            PropertyAnimation { target: customButton; properties: "color"; easing.type: Easing.OutQuad; duration: 500 }
        }
    ]

    /* Add a label within the button to display text */
    Text {
        id: buttonText
        anchors.centerIn: parent
        text: "Click Me"
        font.pixelSize: 20
        color: "black"
    }

    /* When the button is clicked, change the text and trigger the pressed state */
    MouseArea {
        anchors.fill: parent
        onClicked: {
            buttonText.text = "Thank you for clicking!"
            customButton.state = "pressed"
        }
    }
}

/* To use this custom button, simply add it to your QML code and set the state as needed:
 * 
 * CustomButton {
 *     state: "normal"
 * }
 *
 * You can also handle the transitions and states through JavaScript functions if desired. */
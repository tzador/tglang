// This code snippet creates a custom button component with different text colors for different states

import QtQuick 2.0

// Defining a custom button component
Item {
    id: button
    property alias text: text.text
    property color pressedColor: "#dddddd"
    
    // Setting the default state and its properties
    default property string normalText: "Click Here"
    default property color normalColor: "black"
    
    // Defining state for when the button is pressed
    State {
        name: "pressed"
        when: button.pressed
        
        // Setting the properties for this state
        PropertyChanges {
            target: text
            color: button.pressedColor
        }
    }
    
    // Defining state changes for when the button is not pressed
    transitions: Transition {
        
        // Specifying the property to change
        NumberAnimation {
            properties: "opacity"
            
            // Specifying the duration and easing curve of the animation
            duration: 300
            easing.type: Easing.InOutQuad
        }
    }
    
    // Defining the visual elements of the button
    Rectangle {
        anchors.fill: parent
        
        // Setting the default text color
        color: button.normalColor
        
        // Creating a text element for the button
        Text {
            id: text
            anchors.centerIn: parent
            font.pixelSize: 20
            
            // Giving the text element a default text
            text: button.normalText
        }
        
        // Adding a mouse area to handle clicks
        MouseArea {
            anchors.fill: parent
            onClicked: button.state = "pressed"
            onPressed: {
                // Changing the color of the button when pressed
                button.color = button.pressedColor
            }
            onReleased: {
                // Restoring the default color when released
                button.color = button.normalColor
            }
        }
    }
}
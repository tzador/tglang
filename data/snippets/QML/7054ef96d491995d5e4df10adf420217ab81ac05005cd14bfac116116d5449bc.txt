// Creating an object with properties
Item {
  id: button
  width: 200
  height: 50

  // Using a property alias to reference another property
  property alias label: text.text

  // Nested objects
  MouseArea {
    id: mouseArea
    anchors.fill: parent

    // Using a property binding to calculate opacity
    opacity: button.enabled ? 1.0 : 0.5

    // Signals and slots for handling clicks
    signal clicked()
    onClicked: {
      button.label = "Clicked!"
      console.log("Button clicked!")
    }
  }

  // Using a property binding to update color based on a variable
  color: mouseArea.pressed ? "blue" : "red"

  // Text element with dynamic font size based on button width
  Text {
    id: text
    anchors.centerIn: parent
    text: "Click Me!"
    font.pointSize: button.width / 10
  }
}
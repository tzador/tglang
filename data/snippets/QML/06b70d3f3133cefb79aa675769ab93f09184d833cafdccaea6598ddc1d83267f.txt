/*
  A complex code snippet in QML
*/

// Define a custom rectangle component
Rectangle {
  id: customRect // give unique id for referencing
  color: "red"
  radius: 10 // set rounded corners
  border.color: "black"
  border.width: 2
  width: 200
  height: 100
  Text {
    text: "Custom Rectangle" // add a text element inside the rectangle
    anchors.centerIn: parent // center the text inside the rectangle
    font {
      bold: true
      pixelSize: 20
    }
  }
  MouseArea { // add a mouse area for handling interactions
    anchors.fill: parent
    onClicked: {
      customRect.color = "blue" // change the color of the rectangle on click
      customRect.Text.color = "white" // change the text color
      customRect.opacity = 0.7 // reduce the opacity of the rectangle
    }
    onDoubleClicked: {
      customRect.width = 300 // change the width of the rectangle on double click
      customRect.height = 150 // change the height of the rectangle on double click
      customRect.border.width = 4 // increase the border width
    }
  }
}

// Create a list view with delegate items
ListView {
  width: 400
  height: 300
  model: ["Item 1", "Item 2", "Item 3", "Item 4"] // provide a list as the model
  delegate: Item {
    width: ListView.view.width // make the item same width as the list view
    height: 50
    Text {
      text: modelData // use the data from the model as the text
      anchors.centerIn: parent
      font.pixelSize: 16
      // Change the color of the text based on index number
      color: index === 0 ? "green" : index === 1 ? "orange" : index === 2 ? "blue" : "red"
    }
    MouseArea {
      anchors.fill: parent
      onClicked: { console.log(modelData) } // log the data when clicked
    }
  }
}

// Create a menu bar with actions
MenuBar {
  id: menuBar
  Menu { // add a menu
    title: "File"
    MenuItem {
      text: "New"
      onTriggered: { console.log("New file created") } // execute a function on click
    }
    MenuItem {
      text: "Open"
      onTriggered: { console.log("File opened") }
    }
  }
  MenuSeparator { } // add a separator between menus
  Menu { // add another menu
    title: "Edit"
    MenuItem {
      text: "Cut"
      onTriggered: { console.log("Text cut") }
    }
    MenuItem {
      text: "Copy"
      onTriggered: { console.log("Text copied") }
    }
    MenuItem {
      text: "Paste"
      onTriggered: { console.log("Text pasted") }
    }
  }
}
// This code snippet creates a custom button that changes color when clicked

// Import necessary modules
import QtQuick 2.12
import QtQuick.Controls 2.5
import QtQuick.Layouts 1.3

// Create a custom button component
CustomButton {
    id: customButton
    width: 100 // Set initial width
    height: 50 // Set initial height
    color: "#86C166" // Set initial color

    // Add a background rectangle to the button
    Rectangle {
        anchors.fill: parent // Fill the entire button
        color: customButton.color // Bind the color to the button's color property
        RadiusSlider {} // Add a Radius Slider to the button
    }

    MouseArea { // Create a MouseArea for handling clicks
        anchors.fill: parent // Fill the entire button
        onClicked: { // Handle click event
            customButton.color = "#BF71BD" // Change the color of the button on click
        }
    }

    Label { // Add a label for displaying the button's current color
        anchors.centerIn: parent // Center the label in the button
        text: "Color: " + customButton.color // Set the label's text to the current color
    }
}

// Create a custom slider component
Slider {
    id: RadiusSlider
    width: 50 // Set initial width
    height: 100 // Set initial height
    orientation: Qt.Vertical // Set the orientation to vertical
    handle: Rectangle { // Add a custom handle for the slider
        width: 20 // Set handle width
        height: 10 // Set handle height
        radius: RadiusSlider.handle.width // Use the same radius as the handle's width
        color: "#333333" // Set the handle's color
    }
}
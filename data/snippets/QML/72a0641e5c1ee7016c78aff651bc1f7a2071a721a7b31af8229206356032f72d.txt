// This code snippet creates a custom component that displays a circular progress bar with customizable colors and percentage.

import QtQuick 2.15
import QtQuick.Controls 2.15

Item {
    id: root

    width: 200
    height: 200

    property int progressValue: 60 //sets default progress to 60%

    property color backgroundcolor: "grey" //sets default background color to grey
    property color progresscolor: "lightblue" //sets default progress color to light blue

    Rectangle {
        id: background
        anchors.centerIn: parent //centers the background rectangle within its parent

        width: parent.width * 0.8
        height: parent.height * 0.8
        color: root.backgroundcolor

        border.width: 3
        border.color: "darkgrey"

        radius: width / 2 // creates a circle by setting the corner radius equal to half the width
    }

    Rectangle {
        id: progress
        x: background.x //places progress rectangle over background
        y: background.y

        width: background.width
        height: background.height //keeps progress bar the same size as background

        clip: true //hides anything outside the progress rectangle

        radius: background.radius //matches the background's radius to keep the progress bar circular

        color: root.progresscolor

        Rectangle {
            id: mask
            anchors.fill: parent //fills the entire progress rectangle

            transform: Rotate {
                id: rotation
                origin.x: parent.width / 2 //sets rotation axis to center of progress rectangle
                origin.y: parent.height / 2

                angle: (root.progressValue / 100) * 360 //calculates rotation angle based on progress value
            }

            antialiasing: true //smoothes mask edges

            Behavior on rotation { //animates mask rotation
                RotationAnimation {
                    duration: 500 //half a second
                    easing.type: Easing.InOutQuad //eases in and out
                }
            }
        }
    }

    Text {
        id: percentage
        anchors.centerIn: parent //centers text within parent

        font.bold: true
        font.pointSize: 24

        color: progress.pressed ? "lightgrey" : "white" //changes text color when progress bar is clicked

        //displays progress value as a percentage
        text: root.progressValue + "%"
    }

    MouseArea {
        anchors.fill: parent //allows clicking anywhere on parent to trigger clicks

        onClicked: {
            //changes progress value and colors randomly when clicked
            root.progressValue = Math.random() * 100
            root.backgroundcolor = Qt.rgba(Math.random(), Math.random(), Math.random(), 1)
            root.progresscolor = Qt.rgba(Math.random(), Math.random(), Math.random(), 1)
        }
    }
}
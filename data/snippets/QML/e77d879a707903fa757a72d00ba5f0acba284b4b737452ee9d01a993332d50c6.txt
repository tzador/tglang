/*
This code snippet demonstrates how to create a custom button with hover effect using QML.
The button changes its color and font size when the mouse hovers over it.
*/

import QtQuick 2.12
import QtQuick.Controls 2.5

Rectangle {
    id: root
    width: 200
    height: 50
    color: "green"
    radius: 10
    border {
        width: 2
        color: root.hovered ? "yellow" : "black"
    }
    Text {
        id: buttonText
        text: "Click Me!"
        font.pixelSize: root.hovered ? 14 : 12
        anchors.centerIn: parent
    }

    MouseArea {
        id: buttonArea
        anchors.fill: parent
        hoverEnabled: true

        /* Defines behavior when the mouse hovers over the button */
        onEntered: {
            root.hovered = true;
            buttonText.text = "Hurray!";
            buttonText.color = "red";
        }
        
        /* Reverts the changes made in onEntered when the mouse leaves the button */
        onExited: {
            root.hovered = false;
            buttonText.text = "Click Me!";
            buttonText.color = "black";
        }

        /* Emits a signal when the button is clicked */
        onClicked: {
            buttonArea.clickAccepted = true;
            root.clicked();
        }

        /* Defines a boolean property to track if the button is hovered or not */
        property bool hovered: false

        /* Emits a signal when the button is clicked */
        signal clicked()
    }
}

/* Output:
The output of this code snippet would be a custom button with a hover effect.
When the mouse hovers over the button, its border color changes to yellow, the font size increases and the text changes to "Hurray!" and turns red.
When the mouse leaves the button, the changes are reverted and the button returns to its original state.
The button also emits a signal when clicked.
*/
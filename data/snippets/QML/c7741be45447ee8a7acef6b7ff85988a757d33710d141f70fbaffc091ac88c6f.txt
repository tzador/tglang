// This code snippet demonstrates a complex list view in QML
import QtQuick 2.12
import QtQuick.Controls 2.12

ListView {
    id: listView
    width: 200
    height: 100
    model: ListModel {
        ListElement { text: "Item 1" }
        ListElement { text: "Item 2" }
        ListElement { text: "Item 3" }
    }

    delegate: Item {
        id: delegate
        width: parent.width
        height: 30
        Text {
            id: textItem
            text: model.text
            font.family: "Arial"
            font.pointSize: 12
            color: "black"
        }
        Rectangle {
            id: highlight
            color: "lightsteelblue"
            opacity: ListView.isCurrentItem ? 0.4 : 0
            anchors.fill: parent
        }
        MouseArea {
            id: mouseArea
            anchors.fill: parent
            onClicked: {
                listView.currentIndex = index
            }
        }
    }

    ScrollIndicator.vertical: ScrollIndicator { // adding a scroll bar
        background: Rectangle {
            implicitWidth: 4
            implicitHeight: 0
            color: "#6c6c6c"
        }
        contentItem: Rectangle { // adding a track for scroll bar
            implicitWidth: 4
            radius: 2
            color: "#c0c0c0"
            opacity: 0.5
            anchors.top: parent.top
            anchors.right: parent.right
            anchors.bottom: parent.bottom
        }
    }
}
import QtQuick 2.0

Item {
    id: root
    property int size: 12  // Property with type and initial value
    signal countChanged(int newCount) // Signal declaration with parameter

    Rectangle {  // Child item
        id: rectangle
        color: 'red'
        width: 100
        height: 100
        Text {  // Nested child item
            id: counterText
            text: 'Count: ' + root.size // Using property from parent item
            anchors.centerIn: parent
        }
    }

    MouseArea {  // Mouse interaction area
        anchors.fill: parent  // Make the area as big as parent item
        onClicked: {
            root.size++  // Increase property value on click
            root.countChanged(root.size)  // Emit signal with new count value
        }
    }
}

// This component creates a red rectangle with a text displaying
// the current value of the `size` property. Clicking on the rectangle
// will increase the size and emit a signal with the new size value.
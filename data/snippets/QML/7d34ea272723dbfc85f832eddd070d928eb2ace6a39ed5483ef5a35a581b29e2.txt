/* This is a QML code snippet for a simple blog post app */

import QtQuick 2.14
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.12

ApplicationWindow {
    id: window
    visible: true
    width: 800
    height: 600
    minimumWidth: 800
    minimumHeight: 600
    title: qsTr("Blog Post App")

    property string currentFilter: "" // to store user's selected filter

    /* Data model for blog posts */
    ListModel {
        id: blogModel
        ListElement { title: "First blog post" }
        ListElement { title: "Second blog post" }
        ListElement { title: "Third blog post" }
        ListElement { title: "Fourth blog post" }
    }

    /* Main navigation drawer */
    Drawer {
        id: mainDrawer
        width: parent.width / 4 // takes up 1/4th of the window width
        height: parent.height

        /* List of filters */
        ListView {
            id: filterList
            model: ["All", "Technology", "Lifestyle", "Travel"]

            /* Item delegate for each filter */
            delegate: Component {
                Rectangle {
                    width: parent.width
                    height: 50
                    color: (listView.currentFilter === modelData)
                    ? "lightblue"
                    : "white"

                    /* Label to display filter name */
                    Label {
                        text: modelData
                        anchors.centerIn: parent
                    }

                    /* Mouse area to allow user to select filter */
                    MouseArea {
                        anchors.fill: parent
                        onClicked: {
                            listView.currentFilter = modelData
                            // update data model to display only blog posts with selected filter
                            if (modelData === "All") {
                                blogModel.filter( function() { return true; } );
                            } else {
                                blogModel.filter( function(blog) { return blog.title.includes(modelData); } );
                            }
                        }
                    }
                }
            }
        }
    } // end of mainDrawer

    /* Content area for displaying blog posts */
    Rectangle {
        id: contentArea
        anchors {
            left: mainDrawer.right
            top: parent.top
            right: parent.right
            bottom: parent.bottom
        }

        /* List of blog posts using data model */
        ListView {
            anchors.fill: parent
            model: blogModel

            /* Item delegate for each blog post */
            delegate: Component {
                Rectangle {
                    width: parent.width
                    height: 150
                    color: "lightgray"

                    /* Label to display blog post title */
                    Label {
                        text: model.title
                        font.bold: true
                        font.pixelSize: 18
                        anchors.left: parent.left
                        anchors.leftMargin: 10
                        anchors.top: parent.top
                        anchors.topMargin: 10
                    }

                    /* Label to display "read more" button */
                    Label {
                        text: "Read more"
                        font.italic: true
                        color: "dodgerblue"
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        anchors.bottom: parent.bottom
                        anchors.bottomMargin: 10
                    }

                    /* Label to display blog post content */
                    Label {
                        text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                        font.pixelSize: 14
                        anchors {
                            left: parent.left
                            leftMargin: 10
                            right: parent.right
                            rightMargin: 10
                            top: bbcTitle.bottom
                            topMargin: 10
                            bottom: lblReadMore.top
                            bottomMargin: 10
                        }
                    }
                }
            }
        }
    } // end of contentArea
}
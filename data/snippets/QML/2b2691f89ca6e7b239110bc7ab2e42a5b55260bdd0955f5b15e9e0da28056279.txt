\`\`\`qml
Item { //creates an item
    id: root //gives the item an id
    property int counter: 0 //creates a property of type integer called counter and initializes it to 0
    property bool isClicked: false //creates a property of type boolean called isClicked and initializes it to false

    Rectangle { //creates a rectangle item
        id: rect //gives the rectangle item an id
        width: 200 //sets the width of the rectangle to 200
        height: 100 //sets the height of the rectangle to 100 
        color: "red" //sets the color of the rectangle to red 
        border.width: 2 //sets the width of the border of the rectangle to 2
        anchors.centerIn: parent //centers the rectangle item inside the parent item
        MouseArea { //creates a mouse area in the rectangle 
            anchors.fill: parent //fills the entire parent item 
            onClicked: { //runs the following code when the mouse area is clicked
                root.counter++ //increments the counter property of the root item by 1
                rect.color = "blue" //changes the color of the rectangle to blue
                root.isClicked = true //sets the isClicked property of the root item to true
            }
        }
    }

    Text { //creates a text item
        id: text //gives the text item an id
        anchors.centerIn: parent //centers the text item inside the parent item
        text: "Counter: " + root.counter //sets the text to display the value of the counter property of the root item
    }

    Component.onCompleted: { //runs the following code when the item is completed 
        if (root.isClicked) { //checks if the isClicked property of the root item is true 
            console.log("The rectangle color is now: " + rect.color) //prints a message with the current color of the rectangle
        }
    }
}
\`\`\`
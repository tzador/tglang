/* This code snippet creates a custom button with a gradient background and rounded corners */
Rectangle { // Define the button as a rectangle
    id: customButton // Assign an ID for future reference
    color: "transparent" // Set the button background color to transparent
    width: 100 // Set the button width
    height: 50 // Set the button height
    border {
        color: "black" // Set the border color to black
        width: 2 // Set the border width
        radius: 25 // Set the border radius to create rounded corners
    }
    gradient: Gradient { // Define the gradient
        GradientStop { // Set the start color of the gradient
            position: 0 // Set the start position of the color stop
            color: "lightblue" // Set the color of the start position
        }
        GradientStop { // Set the end color of the gradient
            position: 1 // Set the end position of the color stop
            color: "darkblue" // Set the color of the end position
        }
    }
    Rectangle { // Create a child rectangle to overlay on the button
        anchors.fill: parent // Anchor the child rectangle to the parent button
        color: "transparent" // Set the color of the child rectangle to transparent
        border {
            color: "#00000055" // Set the border color to black with 33% opacity
            width: 2 // Set the border width
            radius: 25 // Set the border radius to match the parent button
        }
        gradient: Gradient { // Define a gradient for the child rectangle
            GradientStop { // Set the start color of the gradient
                position: 0 // Set the start position of the color stop
                color: "transparent" // Set the color of the start position to transparent
            }
            GradientStop { // Set the end color of the gradient
                position: 1 // Set the end position of the color stop
                color: "#00000055" // Set the color of the end position to black with 33% opacity
            }
        }
    }
    Text { // Add text to the button
        text: "Custom Button" // Set the text to display
        anchors.centerIn: parent // Center the text within the button
        font.family: "Arial" // Set the font family
        font.pixelSize: 20 // Set the font size
        color: "white" // Set the font color to white
    }
    MouseArea { // Add a mouse area to make the button clickable
        anchors.fill: parent // Anchor the mouse area to the parent button
        onClicked: console.log("Button clicked!") // Print a message to the console when button is clicked
    }
}
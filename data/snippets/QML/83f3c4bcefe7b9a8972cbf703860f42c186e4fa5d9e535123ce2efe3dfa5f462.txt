/* Setting up a dynamic tabbed navigation */

TabView {
    id: tabView
    width: parent.width
    height: parent.height

    /* Creating an array of tab items */
    property var tabs: [
        {
            item: Rectangle {
                id: rectangle1
                color: "lightblue"
                /* Adding a label to the tab */
                Label {
                    id: label1
                    text: "Tab 1"
                    anchors.centerIn: parent
                }
            },
            /* Setting a unique identifier for the tab */
            id: "tab1"
        },
        {
            item: Rectangle {
                id: rectangle2
                color: "lightgreen"
                /* Adding a label to the tab */
                Label {
                    id: label2
                    text: "Tab 2"
                    anchors.centerIn: parent
                }
            },
            /* Setting a unique identifier for the tab */
            id: "tab2"
        },
        {
            item: Rectangle {
                id: rectangle3
                color: "pink"
                /* Adding a label to the tab */
                Label {
                    id: label3
                    text: "Tab 3"
                    anchors.centerIn: parent
                }
            },
            /* Setting a unique identifier for the tab */
            id: "tab3"
        }
    ]

    /* Creating a dynamic number of tab items based on the size of the tabs array */
    model: ListModel {
        id: tabModel
        ListElement { tab: tabView.tabs[0] }
        ListElement { tab: tabView.tabs[1] }
        ListElement { tab: tabView.tabs[2] }
    }

    /* Binding the Tab item to the corresponding tab in the array */
    delegate: tabModel.tab.item

    /* Adding a property to store the currently active tab */
    property var currentTab: tabModel.get(0)

    /* Handling the tab click event */
    onCurrentIndexChanged: {
        currentTab = tabModel.get(index);
    }

    /* Styling the TabView */
    style: TabViewStyle {
        tab: Rectangle {
            color: (currentTab.id == id) ? "black" : "gray"
            /* Adding a border to the tab */
            border.width: 2
            border.color: (currentTab.id == id) ? "black" : "gray"
            /* Changing the border color on hover */
            states: State {
                name: "hovered"
                when: hovered
                BorderImage {
                    border.width: 2
                    border.color: "lightblue"
                }
            }
            /* Changing the border color on selection */
            transitions: Transition {
                NumberAnimation { properties: "border.color"; duration: 200 }
            }
        }
    }
}
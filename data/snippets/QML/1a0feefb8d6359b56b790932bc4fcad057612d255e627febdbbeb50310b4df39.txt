/**
 * This is a QML code snippet that creates a custom QML component
 * with dynamic properties and signals
 */
import QtQuick 2.12

// Define a custom QML component
Rectangle {
    id: customComponent

    // Define dynamic properties for the component
    property int width
    property int height
    property color backgroundColor

    // Define signals
    signal onWidthChanged(int newWidth)
    signal onHeightChanged(int newHeight)
    signal onBackgroundColorChanged(color newColor)

    width: 200
    height: 100
    backgroundColor: "lightblue"

    // Create a Text element inside the component
    Text {
        id: customText
        text: "Custom Component"
        color: "white"
        font.bold: true
        anchors.centerIn: parent
    }

    // Add listeners to update the dynamic properties and emit signals
    onWidthChanged: customText.width = newWidth;
    onHeightChanged: customText.height = newHeight;
    onBackgroundColorChanged: customText.backgroundColor = newColor;

    // Define handler functions for when the component is clicked
    MouseArea {
        anchors.fill: parent
        onClicked: {
            // Update the dynamic properties
            customComponent.width = 300;
            customComponent.height = 150;
            customComponent.backgroundColor = "orange";

            // Emit signals
            onWidthChanged(customComponent.width);
            onHeightChanged(customComponent.height);
            onBackgroundColorChanged(customComponent.backgroundColor);
        }
    }
}
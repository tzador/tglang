/*
 * This code snippet uses QML (Qt Modeling Language) to create a list view with dynamically populated items
 * and a text input field to add new items to the list
 */

// Import QtQuick for UI components
import QtQuick 2.0 
// Import QtQuick.Controls for UI controls
import QtQuick.Controls 2.0 
// Import QtQuick.Layouts for UI layouts
import QtQuick.Layouts 1.3 

// Declare a QML application
ApplicationWindow {
    // Set the window dimensions
    width: 600
    height: 400
    // Set the window title
    title: "Dynamic List Example"
    
    // Declare a root Item to hold the UI components
    Item {
        // Set the item's size to match the window size
        width: parent.width
        height: parent.height
        
        // Declare a column layout to organize the components
        ColumnLayout {
            // Set the spacing between components
            spacing: 10
            
            // Declare a list view and bind it to a model
            ListView {
                // Set the model to an array of strings
                model: ["Item 1", "Item 2", "Item 3"]
                // Set the delegate to dynamically populate the list items
                delegate: Text {
                    // Set the text to the current model data
                    text: modelData
                    // Set the font size
                    font.pixelSize: 20
                    // Align the text to the center
                    horizontalAlignment: Text.AlignHCenter
                }
            }
            
            // Declare a text input field to add new items to the list
            TextField {
                // Set the width to match the column layout's width
                width: parent.width
                // Set the placeholder text
                placeholderText: "Enter new item"
                // Function to add a new item on return key press
                onAccepted: {
                    // Check for empty input
                    if (text !== "") {
                        // Append the new item to the model
                        listView.model.append(text)
                        // Reset the input field
                        text = ""
                    }
                }
            }
        }
    }
}
'''
Item {
    id: root
    
    // ----------------- Properties ------------------- //
    
    property int width: 300
    property int height: 300
    
    property color color: "red"
    property alias bgColor: rect.color
    
    property Item delegate: rectangle
    
    property model: ListModel {
        ListElement {
            name: "John"
            age: 25
        }
        ListElement {
            name: "Jane"
            age: 30
        }
    }
    
    // ----------------- Components ------------------- //
    
    Rectangle {
        id: rect
        
        // ----------------- Behaviors ------------------- //
        
        Behavior on color {
            // Smoothly animate changes in color over 500ms
            NumberAnimation {
                duration: 500
            }
        }
    }
    
    ListView {
        // ----------------- Binding ------------------- //
        
        anchors.fill: parent
        model: root.model
        
        // ----------------- Delegates ------------------- //
        
        delegate: root.delegate
        
        // ----------------- Component ------------------- //
        
        Component {
            id: rectangle
            
            // ----------------- Geometry ------------------- //
            
            width: delegate.width
            height: delegate.height
            
            // ----------------- Styling ------------------- //
            
            color: delegate.color
            
            // ----------------- Text ------------------- //
            
            Text {
                text: delegate.name
                font.bold: true
                
                // ----------------- Floating Text Label ------------------- //
                
                Binding {
                    target: text
                    property: "y"
                    
                    // Bind the label y-position based on index
                    value: index * height                    
                }
                
                // ----------------- Spacing ------------------- //
                
                spacing: 10
                
                // ----------------- Behaviors ------------------- //
                
                // Animate the label with a 300ms delay
                Behavior on y {
                    NumberAnimation {
                        duration: 300
                        delay: 300
                    }
                }
                
                // ----------------- Events & Functions ------------------- //
                
                // When clicked, change the color to green
                MouseArea {
                    anchors.fill: parent
                    onClicked: root.bgColor = "green"
                }
                
                // A function to return the text height of the label
                function textHeight() {
                    return contentHeight + spacing
                }
            }
        }
    }
}
// This is a complex code snippet in QML.
import QtQuick 2.12

Item {
    id: mainItem
    // Property definition
    property int itemCount: 10

    // States definition
    states: State {
        name: "active"
        PropertyChanges {
            target: mainItem
            width: 100
            height: 100
            color: "green"
        }
    }

    // Transitions definition
    transitions: Transition {
        NumberAnimation {
            target: mainItem
            properties: "width, height, color"
            easing.type: Easing.InOutQuad
            duration: 1000
        }
    }

    // Behaviors definition
    behaviors: Behavior on x {
        NumberAnimation {
            duration: 1500
            easing.type: Easing.OutBounce
        }
    }

    //Signals definition
    signal itemClicked(int index)

    // Component definition
    component Item {
        id: subItem
        // Binding statement
        Binding {
            target: subItem
            property: "x"
            value: parent.itemCount * 10
        }
    }

    // Repeater element
    Repeater {
        model: mainItem.itemCount
        delegate: subItem
        // Mouse area definition
        MouseArea {
            anchors.fill: parent
            onClicked: {
                mainItem.itemClicked(index)
                active = !active
            }
        }
    }

    // Connections definition
    Connections {
        target: mainItem
        onItemClicked: {
            console.log("Item " + index + " clicked")
        }
    }

}
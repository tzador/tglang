import QtQuick 2.12 // Import the QtQuick module with version 2.12

Rectangle { // Creates a Rectangle component
    width: 500 // Sets the width of the Rectangle to 500 pixels
    height: 300 // Sets the height of the Rectangle to 300 pixels
    color: "steelblue" // Sets the color of the Rectangle to steelblue

    Text { // Creates a Text component nested inside the Rectangle
        text: "Hello World!" // Defines the text to be displayed
        font.pixelSize: 30 // Sets the font size to 30 pixels
        anchors.centerIn: parent // Sets the text to be centered within the Rectangle
    }

    MouseArea { // Creates a MouseArea component nested inside the Rectangle
        anchors.fill: parent // Sets the MouseArea to cover the entire Rectangle
        onClicked: console.log("Rectangle was clicked!") // Outputs "Rectangle was clicked!" to the console when the MouseArea is clicked
    }

    Rectangle { // Creates a nested Rectangle component inside the first Rectangle
        width: parent.width * 0.8 // Sets the width to be 80% of the parent Rectangle's width
        height: parent.height * 0.5 // Sets the height to be 50% of the parent Rectangle's height
        anchors.centerIn: parent // Sets the nested Rectangle to be centered within the parent Rectangle
        color: "white" // Sets the color of the nested Rectangle to white

        Text { // Creates a Text component nested inside the nested Rectangle
            text: "Nested Rectangle" // Defines the text to be displayed
            font.pixelSize: 20 // Sets the font size to 20 pixels
            anchors.centerIn: parent // Sets the text to be centered within the nested Rectangle
        }

        Rectangle { // Creates another nested Rectangle component inside the second Rectangle
            width: parent.width * 0.5 // Sets the width to be 50% of the parent Rectangle's width
            height: parent.height * 0.3 // Sets the height to be 30% of the parent Rectangle's height
            anchors.bottom: parent.bottom // Sets the rectangle to be anchored at the bottom of the nested Rectangle
            anchors.horizontalCenter: parent.horizontalCenter // Sets the rectangle to be horizontally centered in the nested Rectangle
            color: "red" // Sets the color of the nested Rectangle to red
        }
    }
}
// This is a QML code snippet for creating a line graph

import QtQuick 2.0 // Import the QtQuick library

Rectangle { // Create a rectangle component
    width: 500 // Set the width of the rectangle

    // Define a gradient for the background
    gradient: Gradient {
        GradientStop { position: 0.0; color: "#e3e3e3" } // Start color at position 0
        GradientStop { position: 1.0; color: "#cecece" } // End color at position 1
    }

    // Create a custom property for the graph's data points
    property var dataPoints: [
        { x: 0, y: 50 },
        { x: 50, y: 100 },
        { x: 100, y: 75 },
        { x: 150, y: 125 },
        { x: 200, y: 50 },
        { x: 250, y: 150 },
        { x: 300, y: 100 },
        { x: 350, y: 75 },
        { x: 400, y: 150 },
        { x: 450, y: 50 }
    ]

    // Create a list model to store the data points
    ListModel {
        id: graphModel // Assign an ID to access later
        ListElement { // Add a list element for each data point
            for (var i = 0; i < dataPoints.length; i++) { // Loop through the data points
                xValue: dataPoints[i].x // Set the x value
                yValue: dataPoints[i].y // Set the y value
            }
        }
    }

    // Create a line series to draw the graph
    LineSeries {
        id: lineSeries // Assign an ID to access later
        xyValues: "xValue, yValue" // Set the values for x and y
        model: graphModel // Set the data model for the series
        useOpenGL: true // Enable use of OpenGL for better performance

        // Customize the appearance of the line series
        color: "#0055ff" // Set the color of the line
        width: 3 // Set the width of the line
        smooth: true // Enable smoothness for the line
    }

    // Create a chart to contain the line series
    Chart {
        anchors.fill: parent // Make the chart fill the parent rectangle
        margins: 10 // Add a margin around the chart
        title: "Line Graph" // Set the title for the chart
        legend.visible: false // Hide the legend
        axes.visible: false // Hide the axes

        // Create a category axis for the x values
        CategoryAxis {
            categories: lineSeries.model.xValue // Set the categories from the data model
        }
        
        // Create a value axis for the y values
        ValueAxis {
            labels.precision: 0 // Set the precision of the labels to whole numbers
        }
    }
}
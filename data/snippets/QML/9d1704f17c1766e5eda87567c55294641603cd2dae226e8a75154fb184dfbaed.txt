// This is a complex QML code snippet that creates a custom button with animations and styling

import QtQuick 2.0

Rectangle {
    width: 200                    // sets the width of the button to 200 pixels
    height: 80                    // sets the height of the button to 80 pixels
    color: "lightblue"            // sets the background color of the button to light blue

    Text {
        text: "Click me!"         // sets the text displayed on the button
        font.pointSize: 20        // sets the font size of the text to 20 points
        anchors.centerIn: parent  // centers the text within the button
    }

    Image {
        source: "button.png"      // sets the image to be used as the button background
        anchors.fill: parent      // makes the image fill the entire button
        smooth: true              // enables smoothing to make the image look nicer
        visible: false            // hides the image initially
    }

    MouseArea {
        anchors.fill: parent      // makes the mouse area cover the entire button
        onClicked: {
            buttonAnimation.start()                       // starts the animation when the button is clicked
            buttonImage.visible = true                    // makes the button image visible
            buttonText.color = "lightgray"                // changes the text color to light gray
        }
    }

    NumberAnimation {
        id: buttonAnimation         // sets a unique id for the animation
        target: parent              // specifies that the animation is applied to the button
        property: "width"           // specifies the property to be animated (width in this case)
        to: 150                     // sets the target value of the animation to 150
        duration: 500               // sets the duration of the animation to 500 milliseconds
        easing.type: Easing.OutQuad // specifies the easing type for the animation
    }

    Text {
        id: buttonText              // sets a unique id for the text
        text: "Click me!"           // sets the same text as before
        font.pointSize: 20          // sets the same font size as before
        color: "white"              // sets the text color to white
        anchors.centerIn: parent    // centers the text within the button
    }

    Image {
        id: buttonImage             // sets a unique id for the image
        source: "button.png"        // sets the same image as before
        anchors.centerIn: parent    // centers the image within the button
        visible: false              // initially hidden
    }
}
import QtQuick 2.12 // Import QtQuick library

Rectangle { // Define a rectangle item
    id: rect // Assign an id to the rectangle

    property int width: 200 // Width of the rectangle
    property int height: 100 // Height of the rectangle
    property color color: "blue" // Color of the rectangle

    x: 100 // Horizontal position of the rectangle
    y: 50 // Vertical position of the rectangle

    border.width: 2 // Border width of the rectangle
    border.color: "black" // Border color of the rectangle

    radius: width / 5 // Radius of the rectangle's corners
    smooth: true // Smooth the edges of the rectangle
    clip: true // Clip the contents inside the rectangle
    
    Rectangle { // Nested rectangle within the main rectangle
        width: parent.width - 20 // Width is the same as the parent rectangle with a 20 pixel offset
        height: parent.height - 20 // Height is the same as the parent rectangle with a 20 pixel offset
        color: "white" // Color is white

        x: 10 // Horizontal offset of 10 pixels
        y: 10 // Vertical offset of 10 pixels

        border.width: 1 // Border width of the nested rectangle
        border.color: "green" // Border color of the nested rectangle

        radius: parent.radius / 2 // Radius is half of the parent rectangle's radius
        smooth: parent.smooth // Inherit smooth property from the parent rectangle
        clip: parent.clip // Inherit clip property from the parent rectangle
    }

    MouseArea { // Define a mouse area within the rectangle
        anchors.fill: parent // Fill the entire rectangle area with the mouse area

        onClicked: { // Mouse click event handler
            rect.color = "red" // Change the color of the rectangle to red when clicked
            rect.rotation += 45 // Rotate the rectangle by 45 degrees each time it is clicked
            console.log("Rectangle clicked!") // Print a message to the console
        }
    }

    Text { // Define a text item within the rectangle
        text: "Hello, World!" // Text to display
        font.pointSize: 20 // Font size
        font.bold: true // Bold text
        anchors.centerIn: parent // Center the text within the parent rectangle
    }
}
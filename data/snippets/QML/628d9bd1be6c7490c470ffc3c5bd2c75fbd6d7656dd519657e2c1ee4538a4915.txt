// This code snippet shows a model with multiple delegate items


// Define a list model
ListModel {
    id: myModel // Set a unique id for the model

    // Define properties for the model items
    ListElement {
        name: "John"
        age: 25
        occupation: "Engineer"
    }
    ListElement {
        name: "Emily"
        age: 31
        occupation: "Software Developer"
    }

    // Add more items as needed
    ListElement {
        name: "Michael"
        age: 42
        occupation: "Project Manager"
    }

}

// Create a ListView and set the model property to the previously defined model
ListView {
    model: myModel // Set the model property to the previously defined model: myModel

    // Define a delegate for the items in the listview
    delegate: Rectangle {
        width: 150
        height: 50
        color: "lightblue"

        // Use the model properties to populate the delegate items
        Text {
            text: model.name // Display the name property of the current model item
        }
        Text {
            text: model.occupation // Display the occupation property of the current model item
            x: 75 // Align the text to the right side of the delegate
            font.italic: true // Apply italic font to the text
        }
        Rectangle {
            x: 0 // Position the rectangle on the left side of the delegate
            y: 25 // Align the rectangle to the center of the delegate
            width: 25 // Set the width of the rectangle
            height: 25 // Set the height of the rectangle
            color: "orange"

            // Use a conditional statement to display different colors based on the age property
            color: model.age > 30 ? "red" : "green" // If the age is greater than 30, set the color to red, otherwise set it to green
        }
    }
}
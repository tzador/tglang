/**
 * This is a complex code snippet written in QML
 * It creates a custom button with different states and properties
 */

// Importing the necessary modules
import QtQuick 2.0
import QtQuick.Controls 1.4
import QtQuick.Layouts 1.2

// Defining the custom button component
Button {
    id: customButton

    // Setting the default width and height of the button
    width: 100
    height: 50

    // Setting the default color and font for the button text
    color: "white"
    font.family: "Arial"
    font.pixelSize: 20

    // Setting the default values for the different button states
    states: [
        State {
            name: "normal"
            PropertyChanges { target: customButton; color: "white" }
        },
        State {
            name: "hovered"
            PropertyChanges { target: customButton; color: "blue" }
        },
        State {
            name: "pressed"
            PropertyChanges { target: customButton; color: "red" }
        }
    ]

    // Creating an animation for the button when it is clicked
    transitions: Transition {
        from: "hovered"
        to: "pressed"
        NumberAnimation { target: customButton; property: "width"; to: 110; duration: 100 }
        NumberAnimation { target: customButton; property: "height"; to: 55; duration: 100 }
    }

    // Adding a Label inside the button to display the current state
    Label {
        id: stateLabel
        text: customButton.state
        anchors.centerIn: parent
    }

    // Adding a MouseArea to handle the button interactions
    MouseArea {
        anchors.fill: parent
        onClicked: customButton.state = "pressed"
        onEntered: customButton.state = "hovered"
        onExited: customButton.state = "normal"
    }
}
// This is a complex code snippet that demonstrates how to create a custom component in QML

import QtQuick 2.12 // Imports the QtQuick module
import QtQuick.Controls 1.4 // Imports the QtQuick.Controls module

Item { // Creates a basic container item which holds the custom component

    property int value: 0 // Creates a property for the custom component, with default value of 0

    Row { // Creates a row layout to position the components horizontally
        Text { text: "Value: " + value } // Displays the current value of the custom component
        Button { // Creates a button to increment the value
            text: "+" // Sets the text of the button to be a plus sign
            onClicked: value++ // Increments the value when the button is clicked
        }
        Button { // Creates a button to decrement the value
            text: "-" // Sets the text of the button to be a minus sign
            onClicked: value-- // Decrements the value when the button is clicked
        }
    }

    Rectangle { // Creates a rectangle to represent the custom component 
        color: "lightblue" // Sets the color of the rectangle
        border.width: 2 // Sets the width of the border around the rectangle
        border.color: "black" // Sets the color of the border
        width: 100 // Sets the width of the rectangle
        height: 50 // Sets the height of the rectangle
        Text { // Creates a text element to display the value in the center of the rectangle
            text: value // Binds the value property to the text of the element
            horizontalAlignment: Text.AlignHCenter // Aligns the text horizontally to the center
            verticalAlignment: Text.AlignVCenter // Aligns the text vertically to the center
        }
    }
}
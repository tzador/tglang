// This is a QML code snippet that creates a custom progress bar

import QtQuick 2.14

// Our custom progress bar inherits from the default QQuickItem type
Item {
    // Properties to define the progress bar's appearance
    property int minimumValue: 0 // Lowest value the progress bar can show
    property int maximumValue: 100 // Highest value the progress bar can show
    property int value: 50 // Initial value of the progress bar
    property color backgroundColor: "#E6E6E6" // Background color of the progress bar
    property color progressColor: "#0591E8" // Color of the progress
    property int barHeight: 10 // Height of the progress bar
    
    // Signals emitted by the progress bar
    signal barCompleted() // Signal emitted when the progress bar reaches 100%
    
    // Internal variables used for calculations
    property real progressWidth: (value - minimumValue) / (maximumValue - minimumValue) * width // Calculates the width of the progress based on the current value
    property real progressMaxWidth: width - barHeight // Maximum width the progress can have
    
    // Draw the progress bar
    Rectangle {
        id: progressBar
        
        // Set the size and position of the progress bar
        x: barHeight / 2
        y: height / 2 - barHeight / 2
        width: progressWidth
        height: barHeight
        
        // Set the color of the progress
        color: progressColor
        
        // Animate the filling of the progress bar
        Behavior on width {
            NumberAnimation {
                duration: 500 // Duration of the animation in milliseconds
            }
        }
    }
    
    // Draw the background of the progress bar
    Rectangle {
        id: background
        
        // Set the size of the background
        width: parent.width - barHeight
        height: barHeight
        
        // Set the color of the background
        color: backgroundColor
        
        // Add a border to the background
        border {
            width: 2 // Thickness of the border
            color: "#BDBDBD" // Color of the border
        }
    }
    
    // Update the progress bar whenever the value property changes
    onValueChanged: {
        // Update the width of the progress bar
        progressBar.width = progressWidth
        
        // Emit the barCompleted signal if the progress reaches 100%
        if (value === maximumValue) {
            barCompleted()
        }
    }
}
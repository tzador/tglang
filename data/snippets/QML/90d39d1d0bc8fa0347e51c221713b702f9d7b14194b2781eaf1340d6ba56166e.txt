/*
This code snippet is an example of a QML file that creates a custom button with complex functionality.
It uses various QML elements, properties and signals.
*/

import QtQuick 2.0

//Root element
Item {

    //Custom property that will store the button's count
    property int count: 0

    //Custom property that will determine if the button is active or not
    property bool isActive: true

    //Custom signal that will be emitted when the button is clicked
    signal clicked()

    //Custom signal that will be emitted when the button's count reaches a certain value
    signal countReached(int count)

    //Rectangle element that will serve as the button's background
    Rectangle {
        id: buttonBg
        width: 200
        height: 100
        color: isActive ? "green" : "red"
        border.color: "black"
        radius: 10
        smooth: true

        //Behavior that will provide a pulsing animation to the button
        Behavior on scale {
            NumberAnimation { duration: 500; loops: Animation.Infinite; from: 1.0; to: 1.2 }
        }

        //Behavior that will change the button's color when it is clicked
        Behavior on color {
            NumberAnimation { duration: 200; from: "green"; to: "red" }
        }
    }

    //Text element that will display the button's count
    Text {
        id: buttonText
        anchors.centerIn: parent
        text: count
        font.pixelSize: 40
        color: "white"
    }

    //MouseArea element that will handle the button's click
    MouseArea {
        id: buttonArea
        anchors.fill: parent
        onClicked: {
            buttonBg.color = "yellow"
            buttonText.color = "black"
            count++
            button.clicked()
            if(count === 10) {
                button.countReached(count)
            }
        }
    }

    //Connections element that will connect the button's custom signal to a function in the parent component
    Connections {
        target: parent
        onCountReached: {
            console.log("Count reached: " + count)
        }
    }
}
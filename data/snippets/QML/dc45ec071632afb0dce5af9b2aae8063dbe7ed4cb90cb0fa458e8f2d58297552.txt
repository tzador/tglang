import QtQuick 2.12
import QtQuick.Controls 2.12

// Define a custom Item type with properties and signals
Item {
    id: customItem
    property int itemCount: 0 // This property will hold the number of items
    property bool isExpanded: false // This property will determine if the item is expanded or not

    // Define a signal that will be emitted when the item is expanded
    signal itemExpanded(int itemsAdded)

    // Create a Column layout for the item
    Column {
        // Add a Label to display the number of items
        Label {
            text: "Item count: " + customItem.itemCount
        }

        // Add a Button to toggle the item expansion
        Button {
            text: "Toggle expansion"
            onClicked: {
                // Toggle the isExpanded property and emit the corresponding signal
                customItem.isExpanded = !customItem.isExpanded
                if (customItem.isExpanded){
                    customItem.itemExpanded(customItem.itemCount)
                }
            }
        }

        // Add a ListView to display the items if the item is expanded
        ListView {
            // Only show the ListView if the item is expanded
            visible: customItem.isExpanded

            // Bind the model of the ListView to the itemCount property
            model: customItem.itemCount

            // Delegate that displays a simple text item
            delegate: Text {
                width: parent.width
                text: "Item " + index
            }
        }
    }
}
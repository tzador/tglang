// This is a QML code snippet that creates a custom button
Button {
    id: customButton // unique id for referencing button in code

    // set width and height using parent's properties
    width: parent.width * 0.5
    height: 100

    // set color using linear gradient
    color: Gradient {
        GradientStop { position: 0.0; color: "lightblue" }
        GradientStop { position: 1.0; color: "orange" }
    }

    // use property bindings to update text and font style
    text: buttonActive ? "Click Me!" : "Press Me!"
    font {
        bold: true
        size: customButton.height * 0.4
        family: "Arial"
    }

    // create an onClicked signal handler
    onClicked: {
        // update buttonActive property to toggle between states
        buttonActive = !buttonActive

        // emit signal to notify other components of button's state change
        clickedStateChanged(buttonActive)
    }

    // custom property to track button's state
    property bool buttonActive: false

    // signal to notify other components of button's state change
    signal clickedStateChanged(bool active)
}
import QtQuick 2.15 //importing the QtQuick module
import QtQuick.Controls 2.15 //importing the QtQuick.Controls module
import QtGraphicalEffects 1.15 //importing the QtGraphicalEffects module
import QtQuick.Layouts 1.15 //importing the QtQuick.Layouts module
import QtQuick.Window 2.15 //importing the QtQuick.Window module

Window {
    id: mainWindow
    visible: true
    width: 800 //setting the width of the window
    height: 600 //setting the height of the window
    title: "My QML Window" //setting the title of the window

    Rectangle { //creating a rectangle
        id: myRect
        color: "red" //setting the color of the rectangle
        width: 200 //setting the width of the rectangle
        height: 200 //setting the height of the rectangle
        anchors.centerIn: parent //centering the rectangle in the parent window
        radius: 20 //setting the corner radius of the rectangle

        Text { //creating a text element
            text: "Hello World!" //setting the text content
            font.pixelSize: 24 //setting the font size
            color: "white" //setting the font color
            anchors.centerIn: parent //centering the text in the parent rectangle
        }

        DropShadow { //applying a drop shadow effect to the rectangle
            anchors.fill: parent //filling the entire rectangle
            verticalOffset: 4 //setting the vertical offset
            horizontalOffset: 4 //setting the horizontal offset
            radius: 10 //setting the radius of the shadow
            samples: 16 //setting the number of samples for smoother edges 
            color: "black" //setting the color of the shadow
            source: myRect //setting the source object for the shadow
        }

        MouseArea { //creating a mouse area to handle user interaction
            anchors.fill: parent //filling the entire rectangle
            hoverEnabled: true //enabling hover event handling
            onEntered: myRect.color = "blue" //changing the color of the rectangle to blue when hovered
            onExited: myRect.color = "red" //changing the color of the rectangle back to red when not hovered
            onClicked: console.log("Rectangle clicked!") //logging a message to the console when the rectangle is clicked 
        }
    }
}
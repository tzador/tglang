/**
 * This code snippet creates a custom QML component called "CustomButton".
 * It has properties for changing the button color, text, and click event.
 * It also has a signal that can be connected to a function in the parent component.
 */

// Import the required QML types
import QtQuick 2.0

// Create a Item as the base for the component
Item {
    // Set the width and height of the component
    width: 100
    height: 50

    // Create custom properties for the component
    property color buttonColor: "blue" // Property for changing the button color
    property string buttonText: "Click me" // Property for changing the button text

    // Create a signal that can be connected to a function in the parent component
    signal buttonClicked()

    // Create a Rectangle as the visual representation of the button
    Rectangle {
        // Set the width and height of the rectangle to match the parent component
        width: parent.width
        height: parent.height

        // Set the color of the rectangle to the buttonColor property
        color: buttonColor

        // Add a MouseArea to detect mouse clicks on the button
        MouseArea {
            // Set the width and height of the mouse area to match the parent rectangle
            width: parent.width
            height: parent.height

            // When clicked, emit the buttonClicked signal
            onClicked: buttonClicked()
        }

        // Add a Label to display the button text
        Label {
            // Set the text to the buttonText property
            text: parent.buttonText

            // Center the label within the rectangle
            anchors.centerIn: parent
        }
    }
}
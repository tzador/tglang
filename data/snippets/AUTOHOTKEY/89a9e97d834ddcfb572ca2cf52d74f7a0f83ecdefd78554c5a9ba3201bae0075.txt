; This code snippet uses AutoHotkey to create a customized mouse gesture
#NoEnv ;
; Turns off auto-execute
#SingleInstance Force ;
; Only allows one instance of the script to run
; Set up hotkeys for mouse buttons
XButton1::MouseMove, 0, 50, 0, R ;
XButton2::MouseMove, 0, -50, 0, R ;
; XButton1 and XButton2 refer to the two additional buttons on some mice
; Move the mouse cursor up 50 pixels when XButton1 is pressed
; Move the mouse cursor down 50 pixels when XButton2 is pressed
; Set up a hotkey for the middle mouse button
MButton::
; Creates a label for the middle mouse button hotkey
CoordMode, Mouse, Screen ;
; Sets the coordinate mode to screen coordinates
MouseGetPos, mx, my ;
; Gets the current position of the mouse
MoveMouseToDistant(mx, my, 200) ;
; Calls a custom function to move the mouse cursor 200 pixels away from its current position in a specific direction
return ;
; End of hotkey and label

; Define function to move mouse cursor in a specific direction
MoveMouseToDistant(x, y, distance) {
; Creates a function with three parameters: x coordinate, y coordinate, and distance
r := distance / 2 ;
; Calculates the radius of the circle based on the distance
d := Random(0, 360) ;
; Generates a random value between 0 and 360 to determine the direction of movement
X := Round(x + r * Cos(d * pi / 180)) ;
; Calculates the new x coordinate based on the random direction
Y := Round(y + r * Sin(d * pi / 180)) ;
; Calculates the new y coordinate based on the random direction
MouseMove, X, Y ;
; Moves the mouse cursor to the new coordinates
}
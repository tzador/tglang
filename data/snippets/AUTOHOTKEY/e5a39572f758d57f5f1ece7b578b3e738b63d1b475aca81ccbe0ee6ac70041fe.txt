/*
Annotated Code Snippet in AutoHotkey
- This code snippet is a script that automates a series of keyboard and mouse actions.
- The script is designed to be used with a specific application that requires repetitive manual inputs.
- It uses conditional statements, loops, and functions to execute the desired actions.
*/

; The following lines set up the initial state and settings of the script.

#SingleInstance Force ; ensures only one instance of the script is running
#MaxThreadsPerHotkey 2 ; allows multiple hotkeys to be pressed simultaneously
SetKeyDelay, 0 ; sets the delay between keystrokes to 0 milliseconds
SetMouseDelay, 0 ; sets the delay between mouse clicks to 0 milliseconds

; The following section contains the hotkeys that trigger specific actions.

^t:: ; ctrl+t hotkey
Send, Hello World ; sends "Hello World" to the active window
return

#IfWinActive, ahk_exe notepad.exe ; only applies the following hotkeys when notepad is active
^a:: ; ctrl+a hotkey
Send, ^a ; sends ctrl+a
return

; The following section contains conditional statements and loops.

Loop 10 ; repeats the code inside the loop for 10 iterations
{
    if (A_Index % 2 = 0) ; checks if A_Index (current loop iteration) is even
        Send, {Right} ; sends the right arrow key
    else
        Send, {Left} ; sends the left arrow key
}

; The following section contains user-defined functions.

Square(x) { ; defines a function called "Square" that takes one parameter, x
    return x*x ; returns the square of x
}

; The following section calls the Square function and stores the result in a variable.

MyVar := Square(5) ; calls the Square function with 5 as the parameter and stores the result in a variable called MyVar

; The following section uses another function to wait for a specified amount of time before continuing.

Sleep(10000) ; waits for 10 seconds before continuing the script

; The following section contains a loop that continues until a certain condition is met.

Loop {
    If (A_TimeIdle > 300000) ; checks if there has been no user input for 5 minutes
        break ; if condition is met, breaks out of the loop
    else
        Send, {Enter} ; sends the enter key
}

; The following section contains a try-catch statement to handle errors and exceptions.

try {
    RunWait, notepad.exe ; tries to run notepad.exe and waits for it to close
}
catch {
    MsgBox, Failed to run notepad.exe! ; if an error occurs, a message box is displayed
}
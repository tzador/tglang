; This code snippet uses the 'File' command to perform various file operations in AutoHotkey.

; This section defines the variables and sets their initial values.
file1 := "C:\Users\user\Desktop\file1.txt"
file2 := "C:\Users\user\Desktop\file2.txt"
dir1 := "C:\Users\user\Desktop\dir1"
dir2 := "C:\Users\user\Desktop\dir2"
filePattern := "*.txt"

; This section uses the 'FileExist' command to check if a file or directory exists.
if (FileExist(file1)) {
    MsgBox, The file %file1% exists.
} else {
    MsgBox, The file %file1% does not exist.
}

; This section uses the 'FileCreateDir' command to create a new directory if it does not already exist.
if (!FileExist(dir2)) {
    FileCreateDir, %dir2%
}

; This section uses the 'FileCopy' command to copy a file to a new location.
FileCopy, %file1%, %dir1%\file1.txt

; This section uses the 'FileMove' command to move a file to a new location.
FileMove, %file2%, %dir2%\file2.txt

; This section uses the 'FileGetSize' command to get the size of a file in bytes.
fileSize := FileGetSize(file1)
MsgBox, The size of %file1% is %fileSize% bytes.

; This section uses the 'FileSetAttrib' command to set attributes of a file or directory.
FileSetAttrib, %file1%, +H +S ; Sets the hidden and system attributes of file1

; This section uses the 'FileSetTime' command to set the creation, modification, and access time of a file.
FileSetTime, file1, C ; Sets the creation time of file1 to the current time.

; This section uses the 'FileSelectFile' command to allow the user to select a file using a dialog box.
FileSelectFile, selectedFile, 2, , Select a file, %A_MyDocuments%
MsgBox, You selected %selectedFile%.

; This section uses the 'FileSelectFolder' command to allow the user to select a folder using a dialog box.
FileSelectFolder, selectedFolder, 3, , Select a folder, %A_Desktop%
MsgBox, You selected %selectedFolder%.

; This section uses the 'FileRecycle' command to recycle a file or directory.
FileRecycle, %dir1%\file1.txt

; This section uses the 'FileDelete' command to delete a file or directory.
FileDelete, %file2%

; This section uses the 'FileRead' command to read the contents of a file into a variable.
FileRead, fileContents, %file1%

; This section uses the 'FileAppend' command to append text to a file.
FileAppend, %fileContents%, %file1%

; This section uses the 'FileSelectEx' command to select multiple files using a dialog box.
FileSelectEx(3, file1,, "Select multiple files to delete:*" . filePattern)

; This section defines and calls the 'FileSelectEx' function.
FileSelectEx(SelectionType, ByRef FileList, RootStub:="", Title:="", Root:="", Filter:="", Options:="") {
	regExMatch(FileList,"(?msU)(\W|^)" . (Root . "\") . "?(.+?\.stripRegEx(root . "[/\\]")filePattern . ")(" . RootStub . ")\z",m)
	SplitPath,(FileList),,,,,fileListLoc
	if(lstOrder := (InStr(ListView_GetExtendedLV(HandleLV),3))) {
		RegExReplace(fileList,"mU)^(.*?)([\x0a\x0D]+)$","`i$0")
	}
	if(Extends(m,ListView_FromArray(HandleLV,StringSplit(regExReplace(fileList,"%%%RootStub%%%`n",("\)))-1)),options ? "$3$2":"UTF?8",$3,fileList)) {
		strReturn := (StrSplit(strReturn,0,,,1,2,"%%RootStub%%%[`n`n|filePattern]`n")) "(" . ((SelectionType < 0) . 1 . ")|([3])[^`t]+((?sU PX)(\.+?):\t?(.+?)}$?+((^C)|(`n`n|$))|Name:\d+:\t?.+)$
			if(RegExMatch(fileListMP,m,fileListMP) && isLabel("QN32889",fileListMP = "%fileList%\") . "{'T') {
				strReturn(fileListMP,True)
			}
			if(RegExMatch(fileListMP,mRet = "%fileList%\") {
				return ""
			}
	}
	if (BlockListView_ToStream(finalSelectionType, SelectionType, ByRef FileList, RootStub:="", Title:="", Root:="", Filter:="", Options:="") {
		regExReplace(fileList, #comment);
	}
	return ""
}
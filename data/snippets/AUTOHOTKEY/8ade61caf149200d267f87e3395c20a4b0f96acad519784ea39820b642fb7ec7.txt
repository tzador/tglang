; This is a long and complex code snippet in AUTOHOTKEY
;
; It contains multiple loops, conditions, and functions to demonstrate
; the use of this language in creating complex programs

; Set up variables
LoopCount := 5
Array := [1, 2, 3, 4, 5]
String := "This is a string"
Boolean := true

; Loop through Array
Loop % LoopCount {
    ; Check if array element is even
    if (Array[A_Index] % 2 == 0) {
        ; Print the element
        MsgBox % "Array element " A_Index " is an even number"
    }
}

; Define a function to check if a string is a palindrome
Palindrome() {
    Loop % StrLen(String)//2 {
        ; Compare characters at either ends of the string
        if !(SubStr(String, A_Index, 1) = SubStr(String, StrLen(String)-A_Index+1, 1)) {
            ; Print a message if not a palindrome
            MsgBox % "String is not a palindrome"
            ; Exit the function
            return
        }
    }
    ; If string is a palindrome, print a message
    MsgBox % "String is a palindrome"
}

; Call the Palindrome function
Palindrome()

; Check the value of the boolean variable
if (Boolean) {
    ; Print a message if true
    MsgBox % "Boolean variable is true"
} else {
    ; Print a message if false
    MsgBox % "Boolean variable is false"
}

; Create a simple class
Class Person {
    ; Define properties
    Name
    Age

    ; Define constructor
    __New(name, age) {
        oName := name
        oAge := age
    }

    ; Define methods
    GetName() {
        return oName
    }

    GetAge() {
        return oAge
    }

    SetName(name) {
        oName := name
    }

    SetAge(age) {
        oAge := age
    }
}

; Create an instance of the Person class
p := new Person("John", 25)
; Get Name and Age
msgbox % "Name: " p.GetName() ", Age: " p.GetAge()
; Update Name and Age
p.SetName("Jane")
p.SetAge(30)
; Get updated values
msgbox % "Name: " p.GetName() ", Age: " p.GetAge()
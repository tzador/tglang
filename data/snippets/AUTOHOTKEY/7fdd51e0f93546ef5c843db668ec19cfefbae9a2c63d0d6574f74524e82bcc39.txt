;This is a long and complex code snippet in AUTOHOTKEY
;It creates a GUI that allows the user to add and remove items from a shopping list

;Define initial variables
Items := [] ;empty array to store shopping list items
GuiColor := "FFFFFF" ;background color of GUI

;Create GUI
Gui, Show, w300 h400, Shopping List ;width and height of GUI
Gui, Add, Text, x10 y10 w280 Center, Shopping List ;title at top of GUI

;Add item input field
Gui, Add, Text, x10 y50 w80 Left, Add Item: ;label for input field
Gui, Add, Edit, vNewItem x100 y50 w180 ;input field to add new item

;Add item button
Gui, Add, Button, x10 y100 w120, Add Item ;button to add item to shopping list
GuiControlGet, AddItem, Hwnd,, Add Item ;get handle of button
Gui, +ToolWindow ;enable tooltip for button
ToolTip, Click here to add item to list, % "New Shopping List" ;tooltip for button

;Remove item input field
Gui, Add, Text, x10 y150 w80 Left, Remove Item: ;label for input field
Gui, Add, Edit, vRemoveItem x100 y150 w180 ;input field to remove item

;Remove item button
Gui, Add, Button, x10 y200 w120, Remove Item ;button to remove item from list
GuiControlGet, RemoveItem, Hwnd,, Remove Item ;get handle of button
Gui, +ToolWindow ;enable tooltip for button
ToolTip, Click here to remove item from list, % "Update Shopping List" ;tooltip for button

;Display list of items
Gui, Add, ListView, x10 y250 w280 h100 vItems, Item|Price ;list view to display shopping list items
LV_ModifyCol(1, 40), "Left" ;align first column to left
LV_ModifyCol(1, 100), "_Sort" ;allow sorting for first column
LV_ModifyCol(2, 60), "Right" ;align second column to right
LV_ModifyCol(2, 100), "_Sort" ;allow sorting for second column
GuiControl, +AltSubmit +AlwaysOnTop ;enable auto-submit and always on top for list view
LV_Add("", Items, $"%.2f") ;add items from array to list view
LV_ModifyCol(2, Hide) ;hide second column (price) in list view

;Show GUI
GuiControl, colors, %GuiColor% ;set background color of GUI
Gui, Show ;show GUI

;Add item button functionality
AddItemButton:
GuiControlGet, NewItem, Edit,, NewItem ;get text from input field
If (NewItem != "") { ;check that input field is not empty
    Items.Push(NewItem) ;add item to array
    LV_Add("", NewItem, "") ;add item to list view
    GuiControl, text, %NewItem% ;clear input field
}
return

;Remove item button functionality
RemoveItemButton:
GuiControlGet, RemoveItem, Edit,, RemoveItem ;get text from input field
If (RemoveItem != "") { ;check that input field is not empty
    Loop, % Items.MaxIndex() ;loop through items in array
    {
        If (Items[A_Index] == RemoveItem) { ;check if item matches text in input field
            Items.Delete(A_Index) ;remove item from array
            LV_Delete("", A_Index) ;remove item from list view
        }
    }
    GuiControl, text, %RemoveItem% ;clear input field
}
return

;Function to handle list view events
LV_Event:
If (A_GuiEvent == "DoubleClick") { ;check if user doubleclicked on a list view item
    LV_GetText("", A_EventInfo, "Checked") ;get text of selected item
    If (Items[A_Index] != "") { ;check that selected item is not empty
        Items.Delete(A_Index) ;remove item from array
        LV_Delete("", A_Index) ;remove item from list view
        GuiControl, text, %A_EventInfo% ;clear input field
    }
}
return

;Function to set background color of GUI
SetGuiColor(GuiColor) {
    GuiControl, colors, %GuiColor%
}
return
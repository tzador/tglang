#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; This code snippet disables any environment variables.

; This section creates a function that checks for the presence of a specified option in a set of options.
; It also returns a boolean value indicating if the option is present or not.
; The function accepts two parameters: the option to check for and the set of options to check in.
; The return value, 0 or 1, is stored in the "present" variable.
CheckOption(option, options) {
    global present  ; makes the "present" variable accessible from within the function

    Loop, Parse, options, `,  ; loops through each option in the set
    {
        if (option = A_LoopField)  ; checks if the current option matches the specified option
        {
            present := 1  ; sets "present" variable to 1 if the option is present
            break  ; exits the loop as soon as the option is found
        }
    }

    return present  ; returns the value of "present" variable
}

; This section dynamically creates a list of options to check.
; The variable "options" is set to a comma-separated list of options.
; Here, we are checking for the options "alpha", "beta", and "gamma".
options := "alpha,beta,gamma"

; This section calls the CheckOption function for each option in the list and prints the result.
; The conditional statement checks if the function returns a TRUE (1) or FALSE (0) value for each option.
; If the option is present, it prints a message saying so. Otherwise, it prints a message saying it's not present.
Loop, Parse, options, `,  ; loops through each option in the list
{
    message := "Option " A_LoopField " is " (CheckOption(A_LoopField, options) ? "present." : "not present.")
    ToolTip, %message%  ; displays message as a tooltip
    Sleep, 1000  ; waits for 1 second before moving to the next option
}
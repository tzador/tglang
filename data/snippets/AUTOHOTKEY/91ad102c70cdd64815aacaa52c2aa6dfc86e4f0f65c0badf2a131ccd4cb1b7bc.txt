MsgBox % "`nExample `nHello, World! `n`nThis code is a simple example of a Hello World program in AutoHotkey. `nIt demonstrates how to display a message box and use variables." `n
; Define a variable
myVar := "Human"

; Show a message box with the variable
MsgBox % "Hello, " . myVar . "!" `n

; Store a sentence in a variable
str := "This is a long and complex code snippet."

; Create a loop to display each character of the sentence in a message box
Loop, Parse, str
{
    MsgBox % A_LoopField
}

; Define a function to print numbers from 1 to 10
PrintNumbers()
{
    i := 1
    while i <= 10
    {
        MsgBox % i
        i++
    }
}

; Call the function
PrintNumbers()

; Create a hotkey that will display a message box when pressed
!1::
MsgBox % "You pressed Alt + 1!"

; Create a hotstring that will replace "btw" with "by the way" when typed
::btw::by the way

; Define a class for a student and its properties
Class Student
{
    ; Constructor method
    __New(name, age)
    {
        this.name := name
        this.age := age
    }

    ; Method to display name and age of the student
    DisplayInfo()
    {
        MsgBox % "Name: " . this.name . "`nAge: " . this.age
    }
}

; Create an instance of the Student class
student := new Student("John", 24)

; Call the DisplayInfo method
student.DisplayInfo()

; Use a try-catch block to catch and handle any errors
try
{
    ; Division by zero will throw an error
    1 / 0
}
catch
{
    ; Display the error message in a message box
    MsgBox % "ERROR: " . ErrorLevel . " occurred."
}

; Define a dictionary with key-value pairs
myDict := { "name": "Jane", "age": 20 }

; Get the value from the dictionary using the key
name := myDict["name"]

; Display the value in a message box
MsgBox % "Name: " . name
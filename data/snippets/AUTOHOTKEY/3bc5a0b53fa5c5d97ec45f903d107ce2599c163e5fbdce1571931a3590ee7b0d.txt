; This code snippet creates a custom function for displaying a countdown timer.

; Define the function and its parameters.
Countdown(display_time, delimiter, message) {
  
  ; Initialize variables for the countdown.
  current_time := A_Now ; Get current time.
  end_time := A_Now + display_time ; Calculate end time by adding display_time to current time.
  timer_msg := message . " " . display_time . " seconds remaining." ; Create timer message by concatenating message and display_time.
  
  ; Create loop to display countdown.
  Loop {
    
    ; Set display format for minutes and seconds.
    FormatTime, remaining_mins, % (end_time - current_time), nn ; Get remaining minutes from difference between end time and current time.
    FormatTime, remaining_secs, % (end_time - current_time), ss ; Get remaining seconds from difference between end time and current time.
    
    ; Display remaining time in a MessageBox.
    MsgBox % remaining_mins . delimiter . remaining_secs . "`n" . timer_msg
    
    ; Subtract 1 second from current time.
    current_time := current_time - 1
    
    ; Exit loop when timer reaches 0.
    if (current_time > end_time) {
      break 
    }
  }
}

; Call the function and pass in the desired parameters.
Countdown(60, ":", "Countdown Timer:") ; Displays a 1 minute countdown with a delimiter of ":" and a timer message of "Countdown Timer:"
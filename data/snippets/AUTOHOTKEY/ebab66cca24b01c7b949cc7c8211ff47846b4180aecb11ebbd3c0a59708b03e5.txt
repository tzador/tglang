#Persistent ; makes the script continue to run until manually closed
#NoEnv ; stops autohotkey from compiling with any empty variables in the environment
SetBatchLines, -1 ; disables window task scheduling for faster execution
SetWorkingDir %A_ScriptDir% ; sets the working directory to the location of the script
; The following block allows the script to be reloaded by pressing the hotkey Ctrl + Alt + R
#SingleInstance Force ; forces the script to have only one instance
^!r:: ; hotkey definition for Ctrl + Alt + R
  Reload ; this command reloads the script with the changes made
return ; ends the hotkey definition block
; The following block defines a function for opening the Windows Calculator
#IfWinActive ahk_class CalcFrame ; checks if the Windows Calculator is currently active
Calc() ; function name
{
  WinActivate ahk_class CalcFrame ; activates the Windows Calculator
  SendMode Input ; sets the send mode to input
  Send {Ctrl down}e{Ctrl up} ; sends the keystrokes Ctrl + E to open the calculator in scientific mode
}
; The following block defines a function for closing the Windows Calculator
^!c:: ; hotkey definition for Ctrl + Alt + C
  Calc_Close() ; function name
return ; ends the hotkey definition block
Calc_Close() ; function definition for closing the calculator
{
  WinClose ahk_class CalcFrame ; closes the Windows Calculator
}
; The following block defines a function for toggling the scroll lock key
#InstallKeybdHook ; installs a keyboard hook to detect key presses
ScrollLock:: ; hotkey definition for the scroll lock key
  ToggleScrollLock() ; function name
return ; ends the hotkey definition block
ToggleScrollLock() ; function definition for toggling the scroll lock key
{
  GetKeyState, state, ScrollLock, T ; gets the current state of the scroll lock key
  if state = D ; checks if the scroll lock key is currently in a down state
    SetScrollLockState, off ; turns off the scroll lock key
  else
    SetScrollLockState, on ; turns on the scroll lock key
}
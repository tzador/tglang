; This is a complex code snippet in AutoHotkey

; Define variables for hotkeys
#HotkeyInterval, 500 ; Set a hotkey interval of 500ms
#HotkeyModifierTimeout, 2000 ; Set a modifier timeout of 2000ms

; Define hotkeys
; This hotkey will trigger when the left mouse button is pressed while holding down the control key
^LButton:: 
    Send, Hello World! ; Send the phrase "Hello World!" 
    SendInput, {Enter} ; Press the enter key
    Return ; Return to the main code
; This hotkey will trigger when the right mouse button is pressed while holding down the shift key
+RButton::
    Send, This is a complex code snippet in AutoHotkey ; Send the phrase "This is a complex code snippet in AutoHotkey"
    Send, {Tab} ; Press the tab key
    SendInput, {Raw} ; Ensure that any special characters are sent as is
    Return ; Return to the main code

; Define a function
Function ComplexFunction()
{
    If WinActive("Untitled - Notepad") ; Check if the notepad window is active
    {
        Send, This is a complex code snippet in AutoHotkey ; Send the phrase "This is a complex code snippet in AutoHotkey" 
        Sleep, 500 ; Pause for 500ms
        SendInput, {Enter} ; Press the enter key
        Sleep, 500 ; Pause for 500ms
        SendInput, {Tab} ; Press the tab key
        Send, More Complex Code ; Send the phrase "More Complex Code"
        Return ; Return to the main code
    }
}

; Define a label
Label:
MsgBox, This is a label ; Display a message box with the text "This is a label"
Goto, End ; Jump to the End label

; Define a loop
Loop, 50
{
    Send, This is iteration %A_Index% ; Send the phrase "This is iteration" followed by the current loop number
    SendInput, {Enter} ; Press the enter key
}

; Define the main code
#Persistent ; Keep the script running until explicitly terminated
Loop  ; Start a loop
{
    ComplexFunction() ; Call the ComplexFunction
    Goto, Label ; Jump to the Label label
}

; Define the end label
End:
MsgBox, Code snippet completed ; Display a message box with the text "Code snippet completed"
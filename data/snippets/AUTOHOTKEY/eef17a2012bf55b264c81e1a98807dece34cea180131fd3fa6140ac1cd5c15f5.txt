#Persistent ; keeps the script running even after all hotkeys and hotstrings have been used

SetTitleMatchMode, 2 ; sets the matching mode for window titles to "contains"

; a function that sends a keystroke based on the current active window
SendKeystroke() {
    WinGetActiveTitle, CurrentWindow ; gets the title of the active window
    if (CurrentWindow = "Google Chrome") { ; checks if the active window is Google Chrome
        SendInput, {Ctrl down}t{Ctrl up} ; sends the keystrokes to open a new tab in Chrome
    } else if (CurrentWindow = "Notepad") { ; checks if the active window is Notepad
        SendInput, {Ctrl down}s{Ctrl up} ; sends the keystrokes to save the file in Notepad
    } else {
        SendInput, Hello World! ; if the active window is not Chrome or Notepad, it types "Hello World!"
    }
}

; a hotkey that triggers the SendKeystroke() function when the designated keys are pressed
^!F5::SendKeystroke() ; when the user presses Ctrl+Alt+F5, the function will be executed

; a hotstring that expands "ahk" to "AutoHotkey"
::ahk::AutoHotkey ; whenever a user types "ahk" it will automatically expand to "AutoHotkey"

#IfWinActive, ahk_class Notepad ; specifies that the following hotkeys and hotstrings will only work when Notepad is the active window

; a hotkey that sends a key combination when the user presses a certain key
j::SendInput, ^s ; when the user presses the "j" key, it will automatically save the file in Notepad

; a hotstring that expands "brb" to "be right back" when typed in Notepad
:*:brb::be right back ; whenever the user types "brb" it will automatically expand to "be right back"

#If ; ends the conditional statements for window specifications
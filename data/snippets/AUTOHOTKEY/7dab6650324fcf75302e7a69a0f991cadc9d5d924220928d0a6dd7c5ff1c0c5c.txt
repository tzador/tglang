#IfWinActive ahk_class Chrome_WidgetWin_1 ; only runs code if Chrome is the active window
SetTitleMatchMode, 2 ; sets title matching to be flexible

~$^z:: ; "~" prefix means hotkey does not suppress the key
if (A_PriorHotkey = A_ThisHotkey) ; prevents recursive firing
{
    Click ; performs a left mouse click
    ClipSaved := ClipboardAll ; copies everything in clipboard
    Send, !{Tab} ; sends the Alt + Tab keystroke
    Send, ^c ; sends the Ctrl + C keystroke
    ClipWait ; waits for clipboard to contain data
    InputBox, UserInput, Clipboard Contents, Please enter some text: ; creates an input box
    StringReplace, UserInput, UserInput, %A_Tab%, , All ; replaces all tabs with empty string
    Clipboard := UserInput ; copies input to clipboard
    Send, ^v ; pastes input into active field
    Sleep 500 ; sleeps for 500 milliseconds
    Send, {Enter} ; sends the Enter keystroke
    Clipboard := ClipSaved ; restores clipboard to previous state
}
else
{
    Send, {End} ; sends the End keystroke
    ClipSaved := ClipboardAll
    Sleep 500
    Send ^c
    ClipWait
    InputBox, UserInput, Clipboard Contents, Please enter some text:
    StringReplace, UserInput, UserInput, %A_Tab%, , All
    Clipboard := UserInput
    Send, ^v
    Sleep 500
    Send, {Enter}
    Clipboard := ClipSaved
}
return
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; #NoEnv will disable the use of any non-default variables, functions, Hotkeys or Hotstrings within a script.
#Warn  ; Enable warnings to assist with detecting common errors.
; #Warn will display an alert whenever there is a mistake or an error within a script.

; Define a user-defined function that will calculate the Fibonacci sequence up to a given number:
Fibonacci(n) {
    if (n == 0)  ; If the input is 0, return 0.
        return 0
    else if (n == 1)  ; If the input is 1, return 1.
        return 1
    else  ; Otherwise, calculate the Fibonacci sequence recursively.
        return Fibonacci(n-1) + Fibonacci(n-2)
}

; Define a loop that will prompt the user for a number and print out each number in the Fibonacci sequence up to the given number:
Loop {
    InputBox, input, Input a Number, Enter a Number to Calculate the Fibonacci Sequence Up To, , 250, 150
    if (input = "")  ; If the user clicks "Cancel" or leaves the input box blank, exit the loop.
        break
    else if (StrLen(input) > 10)  ; If the input is longer than 10 digits, display an error message and prompt again.
        MsgBox, 48, Input Error, The number you entered is too large. Please enter a smaller number.
    else if (IsNumber(input)) {  ; If the input is a number, display the Fibonacci sequence.
        output := ""  ; Initialize an variable to store the output.
        Loop, % input  ; Loop through each number up to the input number.
            output := output . Fibonacci(A_Index-1) . " "  ; Append the Fibonacci number to the output.
        MsgBox, , Fibonacci Sequence, % "The Fibonacci sequence up to " . input . " is: `r`n" . output
    }
    else  ; If the input is not a number, display an error message and prompt again.
        MsgBox, 48, Input Error, The input you entered is not a number. Please enter a valid number.
}

; Define a context-sensitive Hotkey that will open a new tab in the currently active browser window when the user presses "Ctrl+Shift+N":
#IfWinActive ahk_class Chrome_WidgetWin_1  ; Only activate the Hotkey when the active window is a Google Chrome window.
^+n::  ; Define the Hotkey combination.
Send, ^t  ; Send the keyboard shortcut for opening a new tab.
return  ; End the Hotkey definition.
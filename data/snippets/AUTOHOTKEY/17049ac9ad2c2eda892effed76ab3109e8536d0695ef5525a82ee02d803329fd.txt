; This code snippet creates a function that checks for duplicate entries in arrays

; Define the function
DupCheck(myArray)
{
	; Create an empty array to store duplicates
	Duplicates := []
	; Loop through each element in the array
	Loop, % myArray.length()
	{
		; Assign the current element to a variable
		currentElement := myArray[A_Index]
		; Loop through the array again, starting from the next element
		Loop, % A_Index + 1, myArray.length()
		{
			; If the current element is equal to the next element, it is a duplicate
			if (currentElement = myArray[A_Index])
			{
				; Add the duplicate element to the Duplicates array
				Duplicates.InsertAt(Duplicates.length() + 1, currentElement)
				; Remove the duplicate element from the original array
				myArray.Remove(A_Index)
			}
		}
	}
	; Return the Duplicates array
	return Duplicates
}

; Example usage
myArray := ["apple", "banana", "grape", "banana", "orange"]
Duplicates := DupCheck(myArray)
; Expected output: Duplicates = ["banana"]
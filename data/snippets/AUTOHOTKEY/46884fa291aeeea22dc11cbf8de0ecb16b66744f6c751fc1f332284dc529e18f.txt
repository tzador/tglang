; This code snippet generates a random password with specified length and complexity

; Set password length and complexity level
length := 10 ; change this value to change length of the password
complexity := 3 ; change this value to change complexity level, can be 1 to 5

; Define character sets for different complexity levels
set1 := "!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
set2 := "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
set3 := "!#$%&'()*+,-./:;<=>?@[\]^_`{|}~"
set4 := "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
set5 := "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

; Create empty string to store the password
password := ""

; Loop through the specified length and add characters randomly from the selected set
Loop, %length%
{
	; Select the set based on the specified complexity level
	if (complexity = 1)
	{
		set := set1
	}
	else if (complexity = 2)
	{
		set := set2
	}
	else if (complexity = 3)
	{
		set := set3
	}
	else if (complexity = 4)
	{
		set := set4
	}
	else if (complexity = 5)
	{
		set := set5
	}

	; Generate random number to select a character from the set
	random := Rand(1, StrLen(set))

	; Add the randomly selected character to the password string
	password := password . SubStr(set, random, 1)
}

; Print the generated password
MsgBox Password: %password%

; Function to generate a random number
Rand(min, max)
{
	Random, output, %min%, %max%
	return output
}
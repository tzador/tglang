#Persistent ; Keeps the script running even after the hotkey is pressed
#SingleInstance Force ; Makes sure the script only runs one instance
#InstallKeybdHook ; Install a low-level keyboard hook, allows capturing of keystrokes
#UseHook ; Use hook for faster hotkey response time

^!j:: ; Defines the hotkey as 'Ctrl+Alt+J'
WinGetActiveTitle, ActiveTitle, T ; Gets the title of the currently active window
MouseGetPos, MouseX, MouseY ; Gets the current position of the mouse
SplitPath, ActiveTitle, ActiveTitle ; Splits the active window title into its parts
SetTitleMatchMode, 2 ; Sets the mode to match any part of the title

; Checks if current window is a browser window and if it is full screen
If ((InStr(ActiveTitle1, "Internet Explorer") || InStr(ActiveTitle1, "Google Chrome") || InStr(ActiveTitle1, "Mozilla Firefox") || InStr(ActiveTitle1, "Microsoft Edge")) && A_IsFullScreen = 0) {
    ControlSend, , ^{Tab}, ahk_class Chrome_WidgetWin_1 ; Sends the keyboard shortcut 'Ctrl+Tab' to the current browser window
    WinWaitActive, ahk_class Chrome_WidgetWin_1 ; Waits for the new tab to be fully loaded
    ControlClick, , right, ahk_class Chrome_WidgetWin_1 ; Right-clicks on the new tab
    Sleep, 200 ; Wait 200 milliseconds for context menu to appear
    Send, {Down 2} ; Sends two down arrow key presses to navigate to the 'Restore' option
    Send, {Enter} ; Presses enter to select the 'Restore' option
}
else {
    Send, ^!j ; If current window is not a browser or is already in full screen, just send the hotkey again
}

return ; Ends the hotkey definition and returns to the top of the script
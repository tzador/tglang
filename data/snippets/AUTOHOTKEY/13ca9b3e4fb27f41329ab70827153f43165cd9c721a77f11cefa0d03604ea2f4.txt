; This code snippet allows a user to generate pseudo-random numbers using the middle-square method
; Variables for storing values
input_number := 1234
output_number := ""

; Function to generate pseudo-random numbers
MiddleSquareMethod(number) {
    ; Using middle 2 digits of the input number as the starting seed
    seed := Mid(number,2,2)
    
    ; Looping 10 times to generate 10 digits of the pseudo-random number
    Loop 10 {
        ; Squaring the seed
        squared_seed := seed**2
        
        ; Converting the squared seed into a string and appending zeros to the front if necessary
        ; This ensures a 4-digit number is always used for the middle digits
        squared_seed_string := StrLen(squared_seed)>=4 ? squared_seed : "0" . StrLen(squared_seed) . squared_seed
        
        ; Extracting the middle 4 digits of the squared seed to be used as the next seed
        seed := Mid(squared_seed_string,2,4)
        
        ; Appending the extracted digits to the output number
        output_number .= seed
    }
    
    ; Returning the final output number
    return output_number
}

; Running the function with the input number and storing the result in a variable
generated_number := MiddleSquareMethod(input_number)

; Displaying the generated pseudo-random number
MsgBox % "The generated number is: " . generated_number
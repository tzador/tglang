; This is a recursive function in AutoHotkey that calculates the sum of all numbers in a given array
; It starts by defining the function with the name "sumArray" and takes an array as the input parameter
sumArray(arr){
    ; First, we check if the array is empty.
    ; If it is, we return 0 as the sum
    if (arr = [""])
        return 0
    
    ; Otherwise, we start with a variable called "sum" which will hold the final sum of all numbers in the array
    ; We set it to 0 initially
    sum := 0
    
    ; Next, we use a for loop to iterate through each value in the array
    ; We use the variable "i" to represent the current index of the array
    for i, value in arr{
        ; If the current value is an array itself (nested array), we use recursion to calculate its sum
        if (IsObject(value)){
            subSum := sumArray(value)
            sum += subSum
        }
        ; Otherwise, we add the value to the sum variable
        else {
            sum += value
        }
    }
    
    ; Finally, we return the total sum of the array
    return sum
}

; An example array with nested arrays
exampleArray := [1, 2, [3, 4, [5, 6]], 7]

; We call the "sumArray" function with the example array as the input parameter
result := sumArray(exampleArray)

; We can now print the result to see the final sum of all numbers in the array
MsgBox, The sum of all numbers in the array is %result%
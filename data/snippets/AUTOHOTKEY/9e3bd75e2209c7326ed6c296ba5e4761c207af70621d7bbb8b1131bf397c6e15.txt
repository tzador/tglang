; This code snippet creates a user interface for a text-to-speech program using AutoHotkey

#SingleInstance force
#NoTrayIcon

; Define variables
global gVoice := 0 ; default voice
global gRate := -1 ; default rate
global gVolume := -1 ; default volume
global gPause := 100 ; default pause between sentences

; Create graphical user interface
Gui, Add, Text, x20 y20 w150 h20 center, Text-to-Speech
Gui, Add, Edit, x20 y50 w150 h25 vSay, Enter text here...
Gui, Add, DropdownList, x20 y85 w150 h25 r5 gUpdateVoice vVoice, Male|Female
Gui, Add, Text, x20 y120 w150 h20 center, Voice:
Gui, Add, DropdownList, x20 y145 w150 h25 r5 gUpdateRate vRate, -10|0|10|20|30
Gui, Add, Text, x20 y180 w150 h20 center, Rate:
Gui, Add, DropdownList, x20 y205 w150 h25 r5 gUpdateVolume vVolume, 0|50|100|150|200
Gui, Add, Text, x20 y240 w150 h20 center, Volume:
Gui, Add, Checkbox, x20 y280 w20 h20 checked gUpdatePause, Pause between sentences
Gui, Add, Text, x50 y285 w120 h20, 100 milliseconds
Gui, Add, Button, x20 y315 w150 h30 center gSpeak, Speak!

Gui, Show, x630 y280 w200 h360, Text-to-Speech ; Show GUI window

; Update voice dropdown list
UpdateVoice:
GuiControlGet, gVoice, Drop, Voice
return

; Update rate dropdown list
UpdateRate:
GuiControlGet, gRate, Drop, Rate
return

; Update volume dropdown list
UpdateVolume:
GuiControlGet, gVolume, Drop, Volume
return

; Update pause checkbox
UpdatePause:
GuiControlGet, gPause, Checked, Pause between sentences
return

Speak:
Gui, Submit, NoHide
if (gPause)
	SpeakPause := gPause
else
	SpeakPause := 0
SoundSet, vol, %gVolume%
SoundSetWaveVolume, vol
SoundSet, speed, %gRate%
SetSpeech=gVoice
inputBoxToSpeech("Hello, Friend!") ; replace with gSay
return

; Convert text to speech
inputBoxToSpeech(speechmessage) {
	SoundSet, Output, Default
	static obj
	if !obj
		obj:= ComObjCreate("SAPI.SpVoice")
	obj.rate := gRate
	obj.volume := gVolume
	obj.voice := SetSpeech
	obj.Speak(speechmessage)
	return
}
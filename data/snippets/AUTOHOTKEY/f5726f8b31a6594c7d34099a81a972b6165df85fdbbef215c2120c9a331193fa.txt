; This code snippet is a complex implementation of a calendar reminder program written in AUTOHOTKEY
; It has multiple functions and features, including recurring events and pop-up reminders
 
; -------------------------------------------------------------
; Function to add a new reminder to the calendar
; Parameters:
;   reminder - the string message for the reminder
;   date - the date of the reminder
;   time - the time of the reminder
;   recurring - boolean value for whether the reminder should repeat
; -------------------------------------------------------------
 
#SingleInstance force
 
; -------------------------------------------------------------
; Variables for storing reminders and settings
; -------------------------------------------------------------
 
Reminders := [] ; array to store all reminders
Settings := {}  ; object to store reminder settings
 
; -------------------------------------------------------------
; GUI for adding a new reminder
; -------------------------------------------------------------
Gui, Add, Text,, Reminder: ; adds a text label to the GUI
Gui, Add, Edit, w300 ; adds an input field for the reminder message
Gui, Add, Text,, Date: ; adds a text label for the date
Gui, Add, DatePicker, w100 ; adds a date picker for selecting the date
Gui, Add, Text,, Time: ; adds a text label for the time
Gui, Add, TimePicker, w100 ; adds a time picker for selecting the time
Gui, Add, Checkbox, vRecurring, Recurring ; adds a checkbox for selecting recurring reminder
Gui, Add, Button, x150 y+10 w100 h30, Add ; adds a button to add the reminder
Gui, Show ; displays the GUI
Return
 
; -------------------------------------------------------------
; Function for handling button clicks in the GUI
; -------------------------------------------------------------
GuiClose: ; subroutine for handling closing of the GUI
ButtonAdd: ; subroutine for handling clicking the "Add" button
Gui, Submit, NoHide ; saves the entered values to the respective variables
Message := GuiControlGetText() ; gets the message entered in the input field
Date := GuiControlGet() ; gets the selected date from the date picker
Time := GuiControlGet() ; gets the selected time from the time picker
Recurring := GuiControlGet() ; gets the status of the recurring checkbox
Reminders.Insert(Date, Time, Message, Recurring) ; inserts the new reminder to the array
 
; -------------------------------------------------------------
; Function for displaying pop-up reminders
; -------------------------------------------------------------
Loop % Reminders.MaxIndex() ; loop through all reminders in the array
{
    If (A_Now >= Reminders[A_Index].date && A_Now < Reminders[A_Index].date + 1) ; checks if the current time is within 24 hours before the reminder date
    {
        If (Reminders[A_Index].time = A_Now.Format("HH:mm")) ; checks if the current time matches the reminder time
        {
            If (Reminders[A_Index].recurring = True) ; if the reminder is set to repeat
            {
                Gui, Add, Button, x+10 y+10 w50 h30 vReminder%A_Index%, Snooze ; adds a snooze button for recurring reminders
            }
            SoundBeep, 500, 500 ; plays a beep sound to alert the user
            MsgBox, % Reminders[A_Index].message ; displays the reminder message in a pop-up window
            Reminders.Remove(A_Index) ; removes the reminder from the array
        }
    }
}
 
Return
 
; -------------------------------------------------------------
; Hotkey for adding a new reminder from anywhere
; -------------------------------------------------------------
^!R:: ; defines the hotkey as Ctrl+Alt+R (can be changed as desired)
Gui, Submit, NoHide ; saves the entered values to the respective variables
Message := InputBox("Add Reminder","Enter reminder message:","") ; prompts the user to enter a message for the reminder
If (Message) ; executes if the user enters a message
{
    Date := A_Now ; sets the date to the current date
    Time := A_Now.Format("HH:mm") ; sets the time to the current time
    Recurring := False ; sets the recurring status to false
    Reminders.Insert(Date, Time, Message, Recurring) ; inserts the new reminder to the array
    MsgBox, Reminder added successfully. ; displays a confirmation message
}
Return
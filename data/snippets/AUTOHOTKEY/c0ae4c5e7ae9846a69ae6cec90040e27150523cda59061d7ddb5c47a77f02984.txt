#Persistent ; makes the script run until it is explicitly stopped
#KeyHistory 0 ; disables key history to prevent memory leak
#NoEnv ; turns off inherited environment variables, for optimal performance
#SingleInstance force ; forces only one instance of the script to run

; initializes variables for different colors and mouse coordinates
red := 255
green := 0
blue := 0
x1 := 100
y1 := 200
x2 := 300
y2 := 400

; defines a function to change the color of the mouse pointer
SetColor(color) {
  MouseGetPos, xpos, ypos ; gets current mouse coordinates
  DllCall("GetDC", "uint", 0) ; gets handle to the screen's root window
  DllCall("SetPixel", "uint", xpos, "uint", ypos, "uint", color) ; sets pixel color at current mouse coordinates
  DllCall("ReleaseDC", "uint", 0, "uint", -1) ; releases handle to screen's root window
}

; sets a timer to continuously change the color of the mouse pointer every 0.05 seconds
SetTimer, ChangeColor, 50

; creates a loop to continuously move the mouse between two predefined coordinates
Loop {
  MouseMove, x1, y1 ; moves the mouse to the first set of coordinates
  Sleep, 500 ; pauses for 0.5 seconds
  MouseMove, x2, y2 ; moves the mouse to the second set of coordinates
}

; defines a subroutine to be called by the timer
ChangeColor:
  red := red - 5 ; decrements red value by 5
  blue := blue + 5 ; increments blue value by 5
  SetColor(RGB(red, green, blue)) ; calls the SetColor function with new color values
Return

; creates a hotkey to trigger the script to stop
^Esc::ExitApp
#SingleInstance force
CoordMode, Mouse, Screen

; Define a class for a custom button GUI element
GuiClass(Button, "ButtonClass")

; Define a class method for getting the button's text
ButtonClass.GetButtonText(button) {
    return button.text
}

; Define a class method for setting the button's text
ButtonClass.SetButtonText(button, text) {
    button.text := text
}

; Define a class method for getting the button's position
ButtonClass.GetButtonPosition(button) {
    return {x: button.x, y: button.y}
}

; Define a class method for setting the button's position
ButtonClass.SetButtonPosition(button, x, y) {
    button.x := x
    button.y := y
}

; Create new instances of class and set properties
Button1 := new Button()
Button1.SetButtonText("Click Me!")
Button1.SetButtonPosition(100, 100)

Button2 := new Button()
Button2.SetButtonText("Don't Click Me!")
Button2.SetButtonPosition(200, 200)

; Create a GUI window and add buttons
Gui, Add, Button, w100 h30 %Button1.GetButtonPosition().x% %Button1.GetButtonPosition().y%, %Button1.GetButtonText()
Gui, Add, Button, w100 h30 %Button2.GetButtonPosition().x% %Button2.GetButtonPosition().y%, %Button2.GetButtonText()

; Show the GUI window
Gui, Show

; Create a loop to continuously check if a button is clicked
while 1 {
    ; Get mouse position and check if it falls within the button's bounds
    CoordMode, Mouse, Screen
    MouseGetPos, mouse_x, mouse_y
    if (mouse_x >= Button1.GetButtonPosition().x && mouse_x <= (Button1.GetButtonPosition().x + 100) && mouse_y >= Button1.GetButtonPosition().y && mouse_y <= (Button1.GetButtonPosition().y + 30)) {
        ; Display a message box and break the loop if the button is clicked
        MsgBox, You clicked the %Button1.GetButtonText% button!
        break
    }
}
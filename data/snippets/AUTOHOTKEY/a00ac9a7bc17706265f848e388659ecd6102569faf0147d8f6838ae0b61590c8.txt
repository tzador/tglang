; This program opens multiple applications simultaneously and performs various tasks
#SingleInstance force ; This ensures that only one instance of the program is running
SetTitleMatchMode, 2 ; This enables partial title matching

; Define variables for applications to open and tasks to perform
applications := ["notepad.exe", "https://www.google.com", "explorer.exe"] ; applications to open
tasks := ["Enter some text", "Click on search bar", "Send {Tab}", "Open a new tab", "Close the current tab"] ; tasks to perform

; Function to open applications and perform tasks
PerformTasks()
{
    ; Loop through each application
    Loop, % applications.Length()
    {
        ; Get the application title
        appTitle := applications[A_Index - 1]
        WinActivate, %appTitle%

        ; Perform tasks for the current application
        Loop, Parse, tasks[A_Index], % A_Space
        {
            ; Split the task into action and parameter
            task := StrSplit(A_LoopField, " ", "`t") ; task[1] contains action, task[2] contains parameter
            Switch task[1] ; Perform task based on action
            {
                case "Enter": ; Simulate typing
                    Send % task[2]
                    break
                case "Click": ; Click on specified location
                    CoordMode, Mouse, Screen ; Set coordinates to be relative to screen
                    MouseClick, left, % task[2], % task[3], 1, 0 ; task[2] and task[3] contain x and y coordinates respectively
                    break
                case "Send": ; Send keystroke
                    Send % task[2]
                    break
            }
        }
    }
}

; Function to open applications and perform tasks in parallel
ParallelTasks()
{
    ; Loop through each application
    Loop, % applications.Length()
    {
        ; Get the application title
        appTitle := applications[A_Index - 1]

        ; Open the application in a new thread
        Run, % appTitle, , Min
        Sleep, 1000 ; Wait for the application to open

        ; Activate the application
        WinActivate, %appTitle%

        ; Perform tasks for the current application
        Loop, Parse, tasks[A_Index], % A_Space
        {
            ; Split the task into action and parameter
            task := StrSplit(A_LoopField, " ", "`t") ; task[1] contains action, task[2] contains parameter
            Switch task[1] ; Perform task based on action
            {
                case "Enter": ; Simulate typing
                    Send % task[2]
                    break
                case "Click": ; Click on specified location
                    CoordMode, Mouse, Screen ; Set coordinates to be relative to screen
                    MouseClick, left, % task[2], % task[3], 1, 0 ; task[2] and task[3] contain x and y coordinates respectively
                    break
                case "Send": ; Send keystroke
                    Send % task[2]
                    break
                case "Close": ; Close the application
                    WinClose, %appTitle%
                    break
            }
        }
    }
}

; Main script
PerformTasks() ; Call function to perform tasks sequentially
ParallelTasks() ; Call function to perform tasks in parallel

` ` `
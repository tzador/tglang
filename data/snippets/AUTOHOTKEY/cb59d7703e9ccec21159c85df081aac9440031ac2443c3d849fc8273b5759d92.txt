#NoEnv ; ensures that the script runs without loading any pre-defined variables or options
#Warn ; displays warnings if there are any potential errors in the script
#SingleInstance force ; ensures that only one instance of the script is running at a time 

#IfWinActive, ahk_class Notepad ; activates the following code only if the Notepad window is currently active
#Persistent ; keeps the script running in the background even when there are no hotkeys or hotstrings being triggered

SetTitleMatchMode, 2 ; allows partial window titles to be matched
SetControlDelay, 10 ; sets a small delay between each keystroke for better performance and accuracy

Menu, Tray, NoStandard ; removes the standard tray menu and allows for custom tray menu options
Menu, Tray, Add, Exit, ExitScript ; adds an "Exit" option to the tray menu with the corresponding action being "ExitScript"

; Define a hotkey to open Notepad 
^!n:: ; "^" acts as the Ctrl key, "!" acts as the Alt key, "n" is the letter "n"
IfWinExist, ahk_class Notepad ; checks if a Notepad window is already open
    WinActivate ; brings the existing Notepad window to the front
Else ; if no Notepad window is open, open a new one
    Run Notepad.exe ; executes the Notepad program to open a new window
return ; ends the hotkey definition

; Define a hotkey to close Notepad 
^!w:: ; "^" acts as the Ctrl key, "!" acts as the Alt key, "w" is the letter "w"
IfWinExist, ahk_class Notepad ; checks if a Notepad window is currently open
    WinClose ; closes the Notepad window
return ; ends the hotkey definition

; Define a hotstring to automatically replace the word "Sunday" with "Funday" 
::Sunday::Funday ; "::" denotes a hotstring, the word on the left is the trigger, the word on the right is the replacement
return ; ends the hotstring definition

; Define a custom tray menu command to quickly launch a specific website 
ExitScript: ; label for the "ExitScript" command in the tray menu
Run www.example.com ; executes the website in the default web browser
return ; ends the custom tray menu command definition

; Define a custom function to convert a string of text to title case 
ConvertToTitleCase(string) ; function name and parameter definition
{
    StringLower, string, string ; converts the entire string to lowercase to avoid capitalization conflicts
    StringUpper, firstChar, string, T ; capitalizes the first letter of the string
    firstRemaining := 1 ; holds the remaining letters of the string that need to be converted
    while pos := RegExMatch(string, " ", pos + 1) ; loops through each space in the string
    {
        StringLeft, before, string, %pos% - 1 ; stores the part of the string before the current space
        pos += 2 ; moves the pointer to the first letter after the current space
        StringRight, after, string, %pos% ; stores the part of the string after the current space
        firstRemaining += StrLen(before) + 1 ; updates the pointer to the remaining letters of the string
        StringUpper, char, string, T ; capitalizes the first letter after the current space
        string := before . " " . char . after ; performs the string replacement
    }
    return firstChar . SubStr(string, firstRemaining) ; returns the final converted string
}

MsgBox % ConvertToTitleCase("programming is fun") ; displays a message box with the converted string: "Programming Is Fun"
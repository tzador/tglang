; This is a complex code snippet in AUTOHOTKEY
; It will execute multiple functions and operations
; without the need for user input

; Set variables for file paths and names
input_file = "C:\Users\input.txt"
output_file = "C:\Users\output.txt"
input_name = "Input"
output_name = "Output"

; Create a loop to read data from input file
Loop, Read, %input_file%
{
	; Store each line in a variable
	line := A_LoopReadLine
	
	; Check if line contains specific keyword
	If Instr(line, "important data") 
	{
		; Perform operation on important data
		important_data := line + 10
		
		; Write results to output file
		FileAppend %important_data%`n, %output_file%
	}
	else
	{
		; Write original line to output file
		FileAppend %line%`n, %output_file%
	}
}

; Notify user of completion with tooltip message
TrayTip, Operation Complete, Output file created at %output_file%`n
	(%output_name%), 3, 1

; Send email with output file attached
smtp_server = "smtp.example.com"
smtp_email = "autohotkey@example.com"
smtp_password = "12345"

; Create ComObject for sending emails
smtp := ComObjCreate("CDO.Message")
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/sendusing") := 2
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/smtpserver") := %smtp_server%
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/smtpserverport") := 587
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/smtpauthenticate") := 1
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/sendusername") := %smtp_email%
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/sendpassword") := %smtp_password%
smtp.Configuration.Fields.Item(s"f://schemas.microsoft.com/cdo/configuration/smtpconnectiontimeout") := 60
smtp.Configuration.Fields.Update()

; Add recipients and subject for the email
smtp.To := "recipient1@example.com; recipient2@example.com"
smtp.From := %smtp_email%
smtp.Subject := "Output file - %output_file%"

; Attach output file to email
smtp.AddAttachment(%output_file%)

; Send email
smtp.Send()

; Close ComObject
smtp := ""

; Display success message to user
MsgBox, 64, Operation Successful, Email sent with output file attached.`nWould you like to delete the input file?

; Delete input file based on user input
IfMsgBox Yes
	FileDelete %input_file%

; End of code snippet
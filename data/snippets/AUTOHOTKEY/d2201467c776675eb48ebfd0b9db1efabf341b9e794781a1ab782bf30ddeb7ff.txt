; This script demonstrates the use of multiple variables and conditional statements in AutoHotkey

; Define a list of fruits
fruits := ["apple", "banana", "orange", "grape", "strawberry"]

; Set a random index to select a fruit from the list
randomIndex := Random(0, 4)

; Print a greeting message with the selected fruit using a ternary operator
MsgBox, % "Hello, I am feeling like having a " . (randomIndex = 0 ? "an" : "a") . " " . fruits[randomIndex] . ". What about you?"

; Set another random index to select a color from the list
randomColor := Random(0, 4)

; Create a function to check if the selected color and fruit go well together
CheckCompatibility()
{
    ; Use a switch statement to check the compatibility
    switch fruits[randomIndex]
    {
        case "apple":
            if (randomColor = 0)
            {
                MsgBox, % "The color red goes well with apples.";
            }
            else if (randomColor = 1)
            {
                MsgBox, % "The color yellow goes well with apples.";
            }
            else if (randomColor = 2)
            {
                MsgBox, % "The color green goes well with apples.";
            }
            else
            {
                MsgBox, % "Oops, it seems like there are no compatible colors for apples.";
            }
            break;
        case "banana":
            if (randomColor = 0)
            {
                MsgBox, % "The color yellow goes well with bananas.";
            }
            else if (randomColor = 1)
            {
                MsgBox, % "The color black goes well with bananas.";
            }
            else if (randomColor = 2)
            {
                MsgBox, % "The color white goes well with bananas.";
            }
            else
            {
                MsgBox, % "Oops, it seems like there are no compatible colors for bananas.";
            }
            break;
        case "orange":
            if (randomColor = 0)
            {
                MsgBox, % "The color orange goes well with oranges.";
            }
            else if (randomColor = 1)
            {
                MsgBox, % "The color green goes well with oranges.";
            }
            else if (randomColor = 2)
            {
                MsgBox, % "The color purple goes well with oranges.";
            }
            else
            {
                MsgBox, % "Oops, it seems like there are no compatible colors for oranges.";
            }
            break;
        case "grape":
            if (randomColor = 0)
            {
                MsgBox, % "The color purple goes well with grapes.";
            }
            else if (randomColor = 1)
            {
                MsgBox, % "The color green goes well with grapes.";
            }
            else if (randomColor = 2)
            {
                MsgBox, % "The color yellow goes well with grapes.";
            }
            else
            {
                MsgBox, % "Oops, it seems like there are no compatible colors for grapes.";
            }
            break;
        case "strawberry":
            if (randomColor = 0)
            {
                MsgBox, % "The color red goes well with strawberries.";
            }
            else if (randomColor = 1)
            {
                MsgBox, % "The color green goes well with strawberries.";
            }
            else if (randomColor = 2)
            {
                MsgBox, % "The color white goes well with strawberries.";
            }
            else
            {
                MsgBox, % "Oops, it seems like there are no compatible colors for strawberries.";
            }
            break;
    }
}

; Use a loop to generate a new fruit and color pairing 5 times
Loop, 5
{
    ; Set new random indexes for a different fruit and color combination
    randomIndex := Random(0, 4)
    randomColor := Random(0, 4)

    ; Invoke the CheckCompatibility function to check if the pairing is suitable
    CheckCompatibility()
}
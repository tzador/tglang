; This script adjusts the volume using the `Volume` key on the keyboard
; Based on the code snippet from https://www.autohotkey.com/docs/misc/RemapVolume.htm

; Define the Volume key
VolumeKey := "Volume"

; Set the key combination to adjust volume
#IfWinActive ahk_class Shell_TrayWnd ; Only allow this key combination when the Shell Tray Window is active
    VolumeUp::Volume_Up
    VolumeDown::Volume_Down
#IfWinActive

; Create a loop to constantly check if the `Volume` key is pressed
Loop {
    If GetKeyState(VolumeKey, "P") { ; Check if the Volume key is pressed
        SoundGetMasterVolume, MasterVolume ; Get the current master volume
        SendEvent {Volume_Mute} ; Mute the volume to prevent any sound interruption during the adjustment
        Sleep 1000 ; Wait for 1 second to ensure volume is muted
        SendEvent {% (MasterVolume > 0) ? "{Volume_Mute}" : "{Volume_Up}"} ; Toggle between mute and volume up based on previous state
        Send {Volume_Down} ; Decrease volume
        Sleep 300 ; Wait for 300 milliseconds for volume adjustment to take effect
        SendEvent {% (MasterVolume > 0) ? "{Volume_Up}" : "{Volume_Mute}"} ; Toggle between volume up and mute based on previous state
    }
    Sleep 50 ; Wait for 50 milliseconds before checking if `Volume` key is pressed again
}

; Restores the original function of `Volume` key when script is exited
Exit:
    #IfWinActive ahk_class Shell_TrayWnd
        VolumeUp::Media_Prev ; Changes the function of the `Volume` key to Media Previous
        VolumeDown::Media_Next ; Changes the function of the `Volume` key to Media Next
    #IfWinActive
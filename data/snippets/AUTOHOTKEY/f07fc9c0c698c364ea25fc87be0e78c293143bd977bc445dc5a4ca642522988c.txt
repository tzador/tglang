;This code snippet creates a GUI for a task manager using AutoHotkey
Gui, Add, Edit, vTaskName, Task Name, , 250
Gui, Add, Edit, vTaskDetails, Task Details, , 250
Gui, Add, Button, x10 y130, Add Task
Gui, Add, ListView, Grid xm w200 h200 vTaskList, Task Name|Task Details
Gui, Show, w220 h300, Task Manager

;Code for adding a task
ButtonAddTask:
Gui, Submit, NoHide
if (TaskName = "" or TaskDetails = "") ;check for empty fields
{
    MsgBox, 16, Error, Please fill in all fields before adding a task.
    Return
}
else {
    GuiControl,, TaskList, %TaskName%, %TaskDetails% ;add task to list
    GuiControl,, TaskName, ;clear task name field
    GuiControl,, TaskDetails, ;clear task details field
}
Return

;Code for deleting a selected task
TaskListDelete:
GuiControlGet, Selection, TaskList, Selected
GuiControl,, TaskList, Delete, %Selection%
Return

;Code for saving tasks to a text file
ButtonSave:
FileDelete, tasks.txt ;delete existing tasks file
Loop, %TaskList% ;loop through tasks in list
{
    TaskName := A_LoopField1
    TaskDetails := A_LoopField2
    FileAppend, %TaskName%`t%TaskDetails%`n, tasks.txt ;append task to file with tab and line break
}
MsgBox, 64, Save Successful, Tasks have been saved to tasks.txt.
Return

;Code for loading tasks from a text file
ButtonLoad:
tasks := StrSplit(FileRead("tasks.txt"), "`n") ;read tasks file and split by line break
Loop, % tasks.Length() - 1 ;loop through tasks
{
    taskDetails := StrSplit(tasks[A_Index], "`t") ;split task by tab
    GuiControl,, TaskList, Add, %taskDetails[1]%| %taskDetails[2]% ;add task to list
}
MsgBox, 64, Load Successful, Tasks have been loaded from tasks.txt.
Return

;Code for clearing all tasks
ButtonClear:
GuiControl,, TaskList, DeleteAll ;clear all tasks from list
Return
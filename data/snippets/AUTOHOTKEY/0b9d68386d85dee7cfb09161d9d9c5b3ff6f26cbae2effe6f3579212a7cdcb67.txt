var str := "Hello World!" ; declaring and assigning a string variable
var num := 5 ; declaring and assigning a number variable

; loop that iterates 5 times
Loop, 5
{
    ; displaying current iteration number
    MsgBox, % "Iteration: " . A_Index

    ; adding the number variable to the current iteration number
    num += A_Index

    ; displaying the updated value of the number variable
    MsgBox, % "Updated Number: " . num

    ; checking if the number is greater than 10
    if (num > 10)
    {
        ; displaying a message when condition is met
        MsgBox, % "Number is greater than 10! Exiting loop..."

        ; exiting the loop
        break
    }
}

; declaring an object variable
var obj := {}

; assigning values to the object's properties
obj.prop1 := "value1"
obj.prop2 := "value2"
obj.prop3 := "value3"

; displaying the value of the second property
MsgBox, % "Value of prop2: " . obj.prop2

; for loop that iterates through each property of the object
For key, value in obj
{
    ; displaying the current property and its value
    MsgBox, % "Property: " . key . ", Value: " . value

    ; checking if the property is equal to "prop3"
    if (key = "prop3")
    {
        ; changing the value of the property
        obj[key] := "new value"

        ; displaying a message when value is changed
        MsgBox, % "Value of prop3 changed to: " . obj[key]
    }
}

; function that takes in two parameters and returns their sum
Add := Func(x, y)
{
    return x + y
}

; assigning the function to a variable
var func := Add

; calling the function and storing the returned value in a variable
var result := func(3, 5)

; displaying the result
MsgBox, % "Result: " . result
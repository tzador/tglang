; This is a long and complex code snippet written in AutoHotkey.
#SingleInstance Force ; Ensures only one instance of the script is running.
SetTitleMatchMode 2 ; Enables advanced window title matching mode.

; Create a GUI window with a drop-down list and a button.
Gui, Add, DropDownList, vMyDropDownList gHandleSelection, Option 1|Option 2|Option 3
Gui, Add, Button, w300 h50 gDoAction, Click Me!
Gui, Show, Center, My Window ; Sets the window to display in the center of the screen.

HandleSelection: ; Label for the drop-down list's selection.
GuiControl, Get, varMySelection, MyDropDownList ; Gets the selected option from the list.
Return

DoAction: ; Label for the button's action.
if (varMySelection = "Option 1") ; Checks if the first option is selected.
{
    MsgBox, You clicked Option 1!
}
else if (varMySelection = "Option 2") ; Checks if the second option is selected.
{
    MsgBox, You clicked Option 2!
}
else if (varMySelection = "Option 3") ; Checks if the third option is selected.
{
    MsgBox, You clicked Option 3!
}
Return

Esc::ExitApp ; Allows the user to exit the script by pressing the ESC key.

; A loop that continuously checks for a specified window and performs an action when it is active.
#MaxThreadsPerHotkey 2 ; Limits the number of threads for this hotkey to prevent spamming.
Loop
{
    WinWaitActive, My Window ; Waits for the GUI window to become active.
    SendInput, Hello world! ; Sends the text "Hello world!" to the active window.
    Sleep, 1000 ; Waits for 1 second.
}
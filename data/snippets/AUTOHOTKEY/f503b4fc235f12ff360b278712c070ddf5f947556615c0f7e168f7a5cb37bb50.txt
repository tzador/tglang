; This program allows the user to automate tasks on their computer using hotkeys

#MaxThreadsPerHotkey 2 ; limit the number of active threads for each hotkey to 2
SetTitleMatchMode 2 ; set the title matching mode to include the string

#IfWinActive, ahk_class Notepad ; only execute the following hotkeys if Notepad is the active window

^t::
{
	; create a new tab in Notepad
	Send, ^t
	Sleep, 100
	WinWaitActive, ahk_class Notepad
	return
}

^+s::
{
	; save the current Notepad file
	Send, ^s
	Sleep, 100
	WinWaitActive, ahk_class Notepad
	return
}

^+n::
{
	; create a new Notepad file
	Send, ^n
	Sleep, 100
	WinWaitActive, ahk_class Notepad
	return
}

#j::
{
	; open the jump list in Windows Explorer
	Send, #j
	Sleep, 100
	WinWaitActive, ahk_class CabinetWClass
	return
}

!Tab::
{
	; switch between open windows
	Send, ^!{Tab}
	Sleep, 100
	WinWaitActive, ahk_class CabinetWClass
	return
}

; add a hotstring to automatically replace "btw" with "by the way"
:*:btw::
{
	Send, by the way
	return
}

; create a custom function to simulate a keystroke
SimulateKey(key)
{
	SendInput, %key%
	return
}

; use the custom function to simulate typing a sentence letter by letter
F1::
{
	SimulateKey("T")
	Sleep, 50
	SimulateKey("h")
	Sleep, 50
	SimulateKey("i")
	Sleep, 50
	SimulateKey("s")
	Sleep, 50
	SimulateKey(" ")
	Sleep, 50
	SimulateKey("i")
	Sleep, 50
	SimulateKey("s")
	Sleep, 50
	SimulateKey(" ")
	Sleep, 50
	SimulateKey("a")
	Sleep, 50
	SimulateKey(" ")
	Sleep, 50
	SimulateKey("s")
	Sleep, 50
	SimulateKey("a")
	Sleep, 50
	SimulateKey("m")
	Sleep, 50
	SimulateKey("p")
	Sleep, 50
	SimulateKey("l")
	Sleep, 50
	SimulateKey("e")
	Sleep, 50
	SimulateKey(".")
	Sleep, 50
	SimulateKey("{Enter}")
	return
}

; use the custom function to simulate pressing ctrl+alt+del
F2::
{
	SimulateKey("^!{Esc}")
	return
}

; use the custom function to simulate pressing the spacebar multiple times
F3::
{
	Loop, 5
	{
		SimulateKey(" ")
		Sleep, 50
	}
	return
}
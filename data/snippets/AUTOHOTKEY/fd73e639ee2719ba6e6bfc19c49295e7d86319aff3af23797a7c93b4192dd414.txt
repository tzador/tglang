#Persistent
	/*
		This code enables persistence, allowing the script to continue running
		even after the original hotkey used to launch it has been released.
	*/

#SingleInstance Force
	/*
		Ensures that only one instance of the script is running.
		If another instance is launched, the first one will be closed.
	*/

DetectHiddenWindows, On
	/*
		This command allows the script to access invisible windows.
		This can be helpful if the script needs to interact with hidden elements on the screen.
	*/

SetTitleMatchMode, RegEx
	/*
		Allows the use of regular expressions in window titles for greater flexibility
		when identifying specific windows to interact with.
	*/

^1::
	/*
		The following commands will be executed when the user presses CTRL+1.
	*/

Loop
{
	Send, {CTRLDOWN}x{CTRLUP}
	/*
		This loop will repeatedly send the keystrokes CTRL+x to the active window.
		This can be useful for automating text manipulation tasks,
		such as cutting and pasting text.
	*/
	Sleep, 100
	/*
		This command pauses the script for 100 milliseconds before sending the keystrokes again.
		This prevents the script from executing too quickly and malfunctioning.
	*/
}

#IfWinActive, ahk_class Notepad
	/*
		The following hotkeys will only be active when Notepad is the active window.
	*/
+F2::Send, {SHIFTDOWN}hello{SHIFTUP}
	/*
		This hotkey will send the word 'hello' to the active window when SHIFT+F2 is pressed.
		The SHIFT key is held down while the text is being typed.
	*/
^!i::Send, {CTRLDOWN}i{CTRLUP}
	/*
		This hotkey will send the keystroke CTRL+i to the active window when CTRL+ALT+i is pressed.
		This can be useful for quickly activating italic formatting in a text editor.
	*/
#IfWinActive

; BlockInput, Mouse
	/*
		This command disables all mouse input.
		This can be helpful if the script needs to run without interference from user mouse movements.
	*/

; BlockInput, Keyboard
	/*
		This command disables all keyboard input.
		This can be helpful if the script needs to run without interference from user keyboard inputs.
	*/

OnExit("Cleanup")
	/*
		The function "Cleanup" will be called when the script exits.
		This can be useful for closing any open files or processes before the script ends.
	*/

; Function Closure
Cleanup:
	/*
		This function will perform any necessary cleanup tasks before the script ends.
	*/
ExitApp
	/*
		This command exits the script.
	*/
; End of function Closure
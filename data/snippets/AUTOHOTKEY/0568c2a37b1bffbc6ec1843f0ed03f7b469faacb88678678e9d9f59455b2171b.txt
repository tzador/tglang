#IfWinActive ahk_class Notepad ; Sets the following hotkeys to only work in Notepad

; --- HOTKEY 1 ---
!2:: ; Specifies the hotkey as Alt+2
send, This is a test! ; Sends the text "This is a test!"
return ; Ends the hotkey

; --- HOTKEY 2 ---
^x:: ; Specifies the hotkey as Ctrl+X
clipboard = ; Clears the clipboard
send, ^c ; Sends the Ctrl+C command to copy selected text
clipwait, 1 ; Waits for 1 second for the clipboard to contain data
If errorlevel ; Checks if there was an error copying
    MsgBox, Failed to copy selected text.
else ; If no error, continue the hotkey
{ 
    clipboard = %clipboard% ; Stores the selected text into a variable
    send, ^v ; Sends the Ctrl+V command to paste the stored text
}
return ; Ends the hotkey

; --- HOTKEY 3 ---
^q:: ; Specifies the hotkey as Ctrl+Q
ifWinExist, ahk_class Chrome_WidgetWin_1 ; Checks if Chrome browser is open
{
    WinActivate ; Activates the Chrome window
    send, ^t ; Sends the Ctrl+T command to open a new tab
    sleep 500 ; Waits for 500 milliseconds
    send, www.google.com ; Sends the URL to open in the new tab
    send, {Enter} ; Sends the Enter key to open the URL
    sleep 500 ; Waits for 500 milliseconds
    send, ^w ; Sends the Ctrl+W command to close the tab
}
else ; If Chrome is not open, open it and perform the same actions
{
    run, "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" ; Launches Chrome
    winwait, ahk_class Chrome_WidgetWin_1 ; Waits for the Chrome window to appear
    WinActivate ; Activates the Chrome window
    send, ^t ; Sends the Ctrl+T command to open a new tab
    sleep 500 ; Waits for 500 milliseconds
    send, www.google.com ; Sends the URL to open in the new tab
    send, {Enter} ; Sends the Enter key to open the URL
    sleep 500 ; Waits for 500 milliseconds
    send, ^w ; Sends the Ctrl+W command to close the tab
}
return ; Ends the hotkey

#IfWinActive ; Restores hotkeys to work globally
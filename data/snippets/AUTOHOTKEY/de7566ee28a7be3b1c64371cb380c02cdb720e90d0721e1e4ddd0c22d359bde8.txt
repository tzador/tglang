#SingleInstance force
SetBatchLines, -1
#MaxThreadsPerHotkey 2
; This code snippet sets up the environment for AutoHotkey, including
; forcing single instance, setting batch lines, and limiting max threads per hotkey.

SetTitleMatchMode, 2
; Set the title match mode to 2, which allows for partial title matches.

#If WinActive("ahk_class Notepad") and WinExists("ahk_exe notepad.exe")

#s::
if (A_TimeIdlePhysical > 120000) {
    WinActivate, ahk_exe notepad.exe
    Sleep, 500
    ControlClick, x233 y101, ahk_exe notepad.exe, , , NA
}
; This hotkey checks if the Notepad window is active and exists, and if
; the physical idle time is greater than 2 minutes, it will activate the
; Notepad window and click on the specified coordinates to interact with it.

SendMode Input
Send, {Ctrl down}a{Ctrl up}
Sleep, 200
Send, {Ctrl down}c{Ctrl up}
ClipWait
; This code snippet changes the send mode to "Input" for more reliable sending, 
; then sends keyboard shortcuts to select all and copy, and waits for the clipboard to contain the copied text.

Var := ClipBoardAll
Loop, Parse, Var, `n, `r
{
    StringReplace, Var, A_LoopField, `t, %A_Tab%, All
    StringReplace, Var, A_LoopField, `n, %A_LineFeed%, All
    StringReplace, Var, A_LoopField, `r, %A_CarriageReturn%, All
}
; This snippet stores the clipboard contents in a variable and parses it,
; replacing any special characters with their respective AutoHotkey variables.

Loop, %A_Tab%
{
    StringUpper, Var, Var
    Send, %Var%
    Sleep, 100
}
; This loop converts all the text in the variable to uppercase and sends it,
; with a small delay between each character for more natural typing.

Send, %A_Clipboard%
; Finally, the script sends the whole modified variable back to the Notepad window,
; effectively replacing the copied text with its uppercase version.
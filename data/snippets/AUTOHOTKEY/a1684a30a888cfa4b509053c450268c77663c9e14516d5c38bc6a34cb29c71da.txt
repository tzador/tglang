;; This script creates a countdown timer with a customizable duration.

;; Define the duration of the countdown (in seconds).
countdown_duration := 300

;; Create a GUI window with a label to display the countdown.
Gui, Add, Text,, Countdown
Gui, Add, Text, x10 y20 w200 h50, %countdown_duration%

;; The countdown loop starts here.
SetTimer, decrement_countdown, 1000  ; A timer that will call the decrement_countdown label every 1 second.
return

decrement_countdown:
    countdown_duration--  ; Decrement the countdown duration by 1.
    GuiControl, Text, Countdown, %countdown_duration%  ; Update the label to display the new countdown duration.
    if (countdown_duration = 0)  ; If the countdown reaches 0, stop the timer and display a message.
    {
        SetTimer, decrement_countdown, off  ; Stop the timer.
        MsgBox, Countdown finished!  ; Display a message box.
    }
return

;; Define hotkeys to start and stop the countdown.
!s::SetTimer, decrement_countdown, on  ; Press alt + s to start the countdown.
!x::SetTimer, decrement_countdown, off  ; Press alt + x to stop the countdown. 

;; Create a GUI menu to customize the countdown duration.
Gui, Menu, Add, Duration, :CountdownDuration
MenuDuration:
    InputBox, countdown_duration, Set Countdown Duration,, Please enter the countdown duration (in seconds).  ; Prompt the user to enter the new countdown duration.
    GuiControl, Text, Countdown, %countdown_duration%  ; Update the label to display the new countdown duration.
return

;; Create a GUI menu to exit the script.
Gui, Menu, Add, Exit, :ExitScript
ExitScript:
    ExitApp  ; Exit the script.
return

;; Show the GUI window.
Gui, Show, w300 h100, Countdown Timer
return
; This code snippet is a simulation of a shopping cart functionality
; It uses a dynamic array to store the items and their corresponding prices
; and allows for adding, removing, and updating items in the cart.
; The output will be the updated array after each operation.

; Initialize the array with some items and their prices
shoppingCart := [{"item": "Apples", "price": 5.99}, {"item": "Milk", "price": 2.99}, {"item": "Bread", "price": 3.50}]

; Print current contents of the shopping cart
MsgBox "Current contents of the cart:`n" . PrintItems(shoppingCart)

; Add a new item to the cart
shoppingCart.Insert(1, {"item": "Chicken", "price": 9.99})

; Print updated contents of the cart
MsgBox "Updated contents of the cart:`n" . PrintItems(shoppingCart)

; Remove an item from the cart
shoppingCart.Delete(2)

; Print updated contents of the cart
MsgBox "Updated contents of the cart:`n" . PrintItems(shoppingCart)

; Update the price of an item in the cart
shoppingCart[2].price := 4.99

; Print updated contents of the cart
MsgBox "Updated contents of the cart:`n" . PrintItems(shoppingCart)

; Function to print the items and their prices in a user-friendly format
; Param: cart - dynamic array containing items and prices
PrintItems(cart) {
    output := ""
    ; Loop through each item in the cart
    Loop % cart.Length() {
        ; Get the item and price from the array
        item := cart[A_Index - 1].item
        price := cart[A_Index - 1].price
        ; Add to the output string in a user-friendly format
        output .= item . " - $" . price . "`n"
    }
    ; Return the output string
    return output
}

; Output:
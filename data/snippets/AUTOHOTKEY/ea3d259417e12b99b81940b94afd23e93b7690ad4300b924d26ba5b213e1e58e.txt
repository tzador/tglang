;Use the #If statement to create context-sensitive hotkeys
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
#Warn  ; Enable warnings to assist with detecting common errors.
#SingleInstance force  ; Allow multiple copies of script files, as long as their HWND is different.
#MaxMemory 1024  ; Maximum half of your physical memory in MB.
;Check whether the user is holding down the control key while pressing the letter a
#if GetKeyState("Control")
::a::  ; Double-colon syntax for defining hotkey.
{
   SendInput, This hotkey is only active when the user is holding down the control key.
   Sleep, 100
   SendInput, And then it will type out the letter 'a'.
}
#If ; End context-sensitive hotkeys block.
;Check whether the user is holding down the shift key while pressing the escape key
#if GetKeyState("Shift")
Escape::  ; Single-colon syntax for defining hotkey.
{
   MsgBox, You pressed Escape while holding down the Shift key.
}
#If ; End context-sensitive hotkeys block.
;Use the #IfWinActive directive to make hotkeys work only when specific windows are active
#IfWinActive, ahk_exe notepad.exe
^!+W::
{
   SendInput, This hotkey only works when Notepad is active.
   WinMinimize, ahk_exe notepad.exe
}
#IfWinActive ; End #IfWinActive directive.
;Use variables to make hotkeys more dynamic
myHotkey := "^+a"  ; Set the hotkey combination to Control + Shift + A.
myMessage := "You just pressed Control + Shift + A."  ; Set the message to be displayed.
IfWinActive, ahk_exe notepad.exe  ; Check if Notepad is active.
Return  ;End all hotkey definitions.

;Use loops to repeat actions
Loop, 10  ; Loop 10 times.
{
   SendInput, This message will be repeated 10 times.
   Sleep, 100
}

;Use conditional statements to perform different actions depending on key input
InputBox, UserInput, Enter a number., Enter a number between 1 and 10., , 180, 120
If (UserInput <= 10 && UserInput >= 1)  ; Only allow numbers between 1 and 10.
{
   Loop, %UserInput%  ; Loop the number of times entered by the user.
   {
      SendInput, This message will be repeated %UserInput% times.
      Sleep, 100
   }
}
else
MsgBox, Error. Please enter a valid number between 1 and 10.
;End the script
ExitApp
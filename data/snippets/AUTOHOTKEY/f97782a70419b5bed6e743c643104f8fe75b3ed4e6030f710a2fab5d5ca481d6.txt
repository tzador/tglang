; This code snippet is a script written in the programming language 'AutoHotkey'
; It uses a variety of commands and functions to perform a specific task

#SingleInstance force
; This command ensures that only one instance of the script can run at a time

global count
count := 0
; This global variable will be used to keep track of the number of times the script has been run

SetTitleMatchMode 2
; This command sets the title matching mode so that any window with 'Code Snippet' in its title will be targeted

Loop
{
    WinWait, Code Snippet
    ; This command waits for a window with 'Code Snippet' in its title to appear

    count++
    ; Increments the count variable

    WinGetActiveTitle, winTitle
    ; This command gets the title of the active window

    ControlClick, x30 y446, %winTitle%
    ; This command clicks on a specific coordinate, in this case x=30 and y=446, in the active window

    Send, ^a^c
    ; This command sends the keyboard shortcut for 'select all' and 'copy'

    clipboard := RegexReplace(clipboard, "`n`n", "`n")
    ; This function removes any double line breaks from the copied text

    FileAppend, %clipboard%, C:\Users\User\Documents\CodeSnippet.txt
    ; This command appends the copied text to a file in the specified location

    ControlClick, x100 y100, %winTitle%
    ; This command clicks on a specific coordinate, in this case x=100 and y=100, in the active window

    sleep, 100
    ; This command pauses the script for 100 milliseconds

    if count = 5
    ; Checks if the script has been run 5 times
    {
        msgbox, The script has been run 5 times.
        ; Displays a message box informing the user that the script has been run 5 times
        break
        ; Terminates the loop
    }

    WinActivate, Code Snippet
    ; Activates the window with 'Code Snippet' in its title
}

#IfWinActive, Code Snippet
; This command creates a context-sensitive hotkey, meaning the following hotkey will only work when the window with 'Code Snippet' in its title is active
^j::
; This is the hotkey, ^j represents the keyboard shortcut for ctrl+j. This hotkey will run when the user presses ctrl+j
{
    cTemp := clipboard
    ; Stores the current clipboard contents in a variable

    FileRead, text, C:\Users\User\Documents\CodeSnippet.txt
    ; Reads the contents of the previously saved file into the 'text' variable

    Clipboard := text
    ; Sets the clipboard contents to the text from the file

    sleep, 100
    ; Pauses the script for 100 milliseconds

    Send, ^v^s
    ; Sends the keyboard shortcut for 'paste' and 'save'

    clipboard := cTemp
    ; Sets the clipboard contents back to its original state

    msgbox, The code snippet has been pasted and saved.
    ; Displays a message box informing the user that the code snippet has been pasted and saved
}
#IfWinActive
; Ends the context-sensitive hotkey
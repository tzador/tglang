; This code snippet uses AutoHotkey to create a personalized keyboard shortcut

; Set a global hotkey that will trigger the code
#z::

; Define a variable to hold the current clipboard data
; This allows us to paste it back later
clipboard := clipboard

; Send a left click to select the text you want to replace
Send {Click 20, 20}

; Use the "Send" command to type out the replacement text
Send My personalized text

; Use the "ClipWait" command to wait for the clipboard to finish processing
ClipWait

; Use the "Send" command to copy the selected text to the clipboard
Send ^c

; Use the "If" statement to check the contents of the clipboard
; If it matches the original text, it will replace it with the new text
If clipboard = Original text

    ; Use the "Send" command to paste the new text into the selected area
    Send ^v

; Otherwise, use the "Send" command to paste the original clipboard data
Else
    Send {Raw}%clipboard%

; Use the "Send" command to restore the original clipboard data
Send {Raw}%clipboard%

; Use the "Send" command to press the enter key
Send {Enter}

; Use the "Return" statement to end the hotkey function
return
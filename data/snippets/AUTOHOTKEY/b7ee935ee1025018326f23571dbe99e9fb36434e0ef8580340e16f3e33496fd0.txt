#IfWinActive ahk_exe notepad.exe ; this line specifies that the following hotkeys will only work when Notepad is active
^a:: ; defines the "ctrl + a" hotkey
Send ^{alt} ; sends the keystroke "ctrl + alt"
ClipWait 1 ; waits for 1 second for the clipboard to contain data
if ErrorLevel ; checks if there was an error while waiting for clipboard data
    MsgBox Clipboard is empty ; if there is an error, shows a message box stating that the clipboard is empty
else
    Send {raw}%Clipboard% ; if there is no error, sends the contents of the clipboard without any processing or formatting
Return ; ends the hotkey definition
; the following hotkey does not require a specific window to be active
#z:: ; defines the "win + z" hotkey
Send {up}{up}{up}{up}{up} ; sends 5 "up" keystrokes
return ; ends the hotkey definition
; the following label is triggered when the hotkey is pressed
#IfWinActive ahk_class Chrome_WidgetWin_1 ; this line specifies that the hotkey only applies when Google Chrome is active
~*Tab:: ; defines the "~*tab" hotkey - the "~" prefix allows other hotkeys to work alongside this one
Loop, 5 ; loops the following commands 5 times
{
    Send ^a ; selects all text
    Sleep 50 ; waits for 50 milliseconds
    Send ^c ; copies the selected text
    Sleep 50 ; waits for 50 milliseconds
    Send ^v ; pastes the copied text
    Sleep 50 ; waits for 50 milliseconds
}
return ; ends the hotkey definition
; This code snippet demonstrates the use of loops and arrays in AUTOHOTKEY

; The following code creates an array and populates it with string values
array := ["Cat", "Dog", "Bird", "Fish"]

; The following for loop iterates through the array and prints each value
for index, value in array
{
    MsgBox, % "The " . value . " is at index " . index
}

; The following code creates a nested array
myArray := [["Apple", "Banana"], ["Orange", "Grape"]]

; The following loop iterates through the nested array and prints each value
for rowIndex, row in myArray
{
    for colIndex, col in row
    {
        MsgBox, % row . " on row " . rowIndex . " and column " . colIndex . " is " . col
    }
}

; The following code uses a while loop to print out numbers from 1 to 10
n := 1
while (n <= 10)
{
    MsgBox, % n
    n++
}

; The following code uses a do-while loop to print out numbers from 10 to 1
n := 10
do
{
    MsgBox, % n
    n--
} while (n >= 1)

; The following code uses a for loop to print out numbers from 1 to 10 in reverse
for i := 10; i >= 1; i--
{
    MsgBox, % i
}

; The following code uses a break statement to exit a loop
n := 1
while (n <= 10)
{
    MsgBox, % n
    if (n = 5)
        break
    n++
}

; The following code uses a continue statement to skip over a specific value in a loop
n := 1
while (n <= 10)
{
    if (n = 5)
    {
        n++
        continue
    }
    MsgBox, % n
    n++
}

; The following code uses a foreach loop to iterate through the values of an object
myObj := {"Name": "John", "Age": 25, "Occupation": "Teacher"}
foreach, key in myObj
{
    MsgBox, % key . ": " . myObj[key]
}
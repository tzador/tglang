; This code snippet is a function that determines if a number is prime
; Input parameters: n (positive integer)
; Output: true or false

IsPrime(n)
{
    if (n <= 1) ; check if n is less than or equal to 1
        return false ; n is not prime if it is less than or equal to 1
    else if (n <= 3) ; check if n is less than or equal to 3
        return true ; n is prime if it is less than or equal to 3
    else if (Mod(n, 2) = 0 || Mod(n, 3) = 0) ; check if n is divisible by 2 or 3
        return false ; n is not prime if it is divisible by 2 or 3
    
    i := 5 ; initialize counter variable
    while (i * i <= n) ; loop while the square of i is less than or equal to n
    {
        if (Mod(n, i) = 0 || Mod(n, i + 2) = 0) ; check if n is divisible by i or i + 2
            return false ; n is not prime if it is divisible by i or i + 2
        i := i + 6 ; increment i by 6, checking every number of the form 6k Â± 1
    }
    
    return true ; if none of the above conditions are met, n is prime
}

; Example call of function:
IsPrime(19) ; returns true
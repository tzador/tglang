;This function accesses the computer's registry and searches for the specified value
RegSearch(strPath, strValue)
{
  ;Opens the registry key for reading
  RegRead, regValue, %strPath%, %strValue%
  
  ;Checks if the value exists, if not displays error
  if ErrorLevel
    MsgBox % "Value " . strValue . " not found in " . strPath . "!"
  
  ;If it exists, displays the value and its data type
  else
    MsgBox % "Value " . strValue . " found in " . strPath . "! Value: " . regValue . ", Type: " . RegTypetoString(RegType(strPath, strValue))
}

;This function converts the registry data type to a string representation
RegTypetoString(regType)
{
  ;Switch case to handle different data types
  switch regType
  {
    ;REG_DWORD is a 32-bit integer
    case "REG_DWORD":
      return "REG_DWORD: 32-bit Integer"
    
    ;REG_QWORD is a 64-bit integer
    case "REG_QWORD":
      return "REG_QWORD: 64-bit Integer"
    
    ;REG_SZ is a string value
    case "REG_SZ":
      return "REG_SZ: String"
    
    ;REG_EXPAND_SZ is an expandable string value
    case "REG_EXPAND_SZ":
      return "REG_EXPAND_SZ: Expandable String"
    
    ;REG_MULTI_SZ is an array of strings
    case "REG_MULTI_SZ":
      return "REG_MULTI_SZ: Array of Strings"
    
    ;REG_BINARY is binary data
    case "REG_BINARY":
      return "REG_BINARY: Binary Data"
    
    ;If the data type is unknown, returns error message
    default:
      return "Unknown Data Type"
  }
}
/* This is a complex CSS code snippet that showcases advanced styling techniques */
.container {
  width: 100%;
  max-width: 1200px;
  margin: auto;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 20px;
  /* The code above sets the container to take up the full width of the screen, with a maximum width of 1200px. 
     It then centers the container horizontally and uses CSS grid to create 4 equal columns with a 20px gap between them */
}

.container > div {
  background-color: #eee;
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  /* The code above styles all <div> elements inside the container with a light grey background, 20px of padding, 
     a border radius of 5px, and a slight box shadow effect */
}

.container > div:hover {
  transform: scale(1.05);
  transition: all 0.3s ease;
  /* The code above creates a simple hover effect that enlarges the <div> element by 5% and applies a smooth transition animation to it */
}

@media (max-width: 768px) {
  .container {
    grid-template-columns: repeat(3, 1fr);
    /* The code inside the media query changes the grid template to have 3 columns instead of 4 when the screen width is less than 768px */
  }
}
/* This is a complex CSS code snippet that uses various advanced selectors and properties. */

/* Selector using the child combinator to target direct child elements */
div > p {
  color: red;
}

/* Selector using the adjacent sibling combinator to target elements that come immediately after the specified element */
h1 + p {
  font-size: 18px;
}

/* Selector using the general sibling combinator to target elements that come after the specified element */
ul ~ p {
  font-family: sans-serif;
}

/* Selector using the attribute selector to target elements with a specific attribute value */
a[href="https://www.example.com"] {
  text-decoration: none;
}

/* Selector using the attribute selector with partial attribute values */
input[value|="blue"] {
  background-color: #1e90ff;
}

/* Selector using the :not() pseudo-class to target elements that do not match a specific selector */
div:not(.container) {
  width: 50%;
}

/* Selector using the :nth-child() pseudo-class to target specific child elements of a parent element */
ul li:nth-child(even) {
  color: purple;
}

/* Selector using the :nth-last-child() pseudo-class to target specific child elements of a parent element starting from the last child */
ul li:nth-last-child(2) {
  font-style: italic;
}

/* Selector using the :root pseudo-class to target the root element of the document */
:root {
  --primary-color: #ff0000;
}

/* Selector using the :not() pseudo-class with multiple selectors to target elements that do not match any of the specified selectors */
p:not(.first):not(#paragraph) {
  background-color: #f5f5dc;
}

/* Property using custom variables to assign values to specific properties */
h1 {
  color: var(--primary-color);
}

/* Property using the calc() function to perform calculations for the value */
p {
  width: calc(50% - 20px);
}

/* Property using media queries to apply different styles based on the screen size */
@media screen and (max-width: 600px) {
  nav {
    display: none;
  }
}
/* Here we are defining a CSS grid layout with 3 columns and 4 rows */
.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, 1fr);
}

/* We are targeting the first item in the grid using the grid-row and grid-column properties */
.grid-item:first-child {
  grid-row: 1 / span 2;
  grid-column: 1 / span 2;
}

/* For the second item, we are setting its starting position to be the second column and spanning 3 rows vertically */
.grid-item:nth-child(2) {
  grid-column-start: 2;
  grid-row-start: 1;
  grid-row-end: span 3;
}

/* The third item is placed at the bottom right corner of the grid using the grid-row and grid-column properties */
.grid-item:nth-child(3) {
  grid-row: 4;
  grid-column: 3;
}

/* We are targeting the fourth item and setting its starting position to be the last cell in the first row */
.grid-item:nth-child(4) {
  grid-column-start: 3;
  grid-column-end: -1;
}

/* Adding styles to the grid items to make them visually distinguishable */
.grid-item {
  background-color: #F0F0F0;
  border: 1px solid #999;
  padding: 20px;
  font-size: 18px;
  text-align: center;
}
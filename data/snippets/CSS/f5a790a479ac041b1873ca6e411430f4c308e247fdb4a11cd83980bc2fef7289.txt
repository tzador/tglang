/* This code snippet creates a responsive grid layout using CSS flexbox */

.container {
  display: flex; /* set container as flexbox */
  flex-wrap: wrap; /* elements will wrap to next line when container width is exceeded */
  justify-content: space-between; /* distribute elements evenly with space between them */
}

.item {
  flex: 1; /* set equal width for all items */
  max-width: 300px; /* limit item width to 300px */
  margin-bottom: 20px; /* add 20px margin to bottom of each item */
}

@media screen and (max-width: 600px) { /* apply styles when screen width is 600px or less */
  .item {
    flex-basis: 100%; /* set item width to full container width */
  }
}

@media screen and (min-width: 601px) { /* apply styles when screen width is greater than 600px */
  .item {
    flex-basis: calc(50% - 10px); /* sets item width to half of container width minus 10px for margin */
  }

  .item:nth-child(even) {
    margin-right: 20px; /* add 20px margin to right of even items */
  }
}

@media screen and (min-width: 1000px) { /* apply styles when screen width is greater than 1000px */
  .item {
    flex-basis: calc(33.33% - 20px); /* sets item width to one third of container width minus 20px for margin */
  }

  .item:last-child {
    margin-right: 0; /* remove margin from last item in row */
  }
}
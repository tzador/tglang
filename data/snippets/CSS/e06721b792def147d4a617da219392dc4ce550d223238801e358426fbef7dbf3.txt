/* This is a complex code snippet in CSS that creates a responsive grid layout */

/*------- Media Queries -------*/

/* Small devices (landscape phones, 576px and up) */
@media (min-width: 576px) {
  .grid {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    grid-gap: 20px;
  }
  .grid-item {
    grid-column: span 2;
  }
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) {
  .grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) {
  .grid {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}

/* Extra large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) {
  .grid {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}

/*------- Grid Styles -------*/

/* Container for the grid */
.grid {
  display: grid;
  grid-gap: 10px;
}

/* Individual grid items */
.grid-item {
  background-color: #dddddd;
  padding: 10px;
  text-align: center;
}

/* Responsive styling for grid items based on screen size */
@media (min-width: 576px) {
  .grid-item {
    padding: 20px;
  }
}
@media (min-width: 992px) {
  .grid-item {
    padding: 30px;
  }
}
@media (min-width: 1200px) {
  .grid-item {
    padding: 40px;
  }
}
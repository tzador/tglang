/* This is a complex CSS code snippet to create a responsive grid layout */
/* Define the container for the grid */
.container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-template-rows: 1fr;
  grid-gap: 20px;
  justify-content: space-between;
}
/* Define the child elements */
.child {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  padding: 10px;
}
/* Specify the responsive breakpoints */
@media only screen and (max-width: 768px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    grid-gap: 10px;
  }
}
@media only screen and (max-width: 480px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    grid-gap: 5px;
  }
}
/* Add a hover effect on the child elements */
.child:hover {
  background-color: lightgray;
  cursor: pointer;
}
/* Specify different styling for the first and last child elements */
.child:first-child {
  text-align: left;
}
.child:last-child {
  text-align: right;
  background-color: maroon;
  color: white;
}
/* This code snippet creates a responsive grid layout using CSS flexbox */

.container {
  display: flex; /* sets element as a flex container */
  flex-wrap: wrap; /* allows flex items to wrap to new lines */
  justify-content: space-between; /* aligns items horizontally with space between them */
  align-items: stretch; /* aligns items vertically to the bottom */
}

.item {
  flex-basis: 25%; /* sets the initial size of the item to 25% of the container's width */
  flex-grow: 1; /* allows the item to grow if there is extra space */
  flex-shrink: 0; /* prevents the item from shrinking if there is not enough space */
  padding: 10px; /* adds padding around the item */
  box-sizing: border-box; /* includes padding and border in the item's width */
}

/* Media queries for responsiveness */
@media only screen and (max-width: 768px) {
  .item {
    flex-basis: 50%; /* sets the initial size of the item to 50% of the container's width */
  }
}

@media only screen and (max-width: 480px) {
  .item {
    flex-basis: 100%; /* sets the initial size of the item to 100% of the container's width */
  }
}
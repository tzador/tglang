/* This code snippet is a basic layout using CSS Grid
It consists of a header, main content section, and a footer */

/* This sets the display of the parent element to grid */
.container {
  display: grid;
  grid-template-columns: 1fr; /* Creates one column */
  grid-template-rows: 100px 1fr 100px; /* Creates three rows with a fixed header and footer and a dynamic middle section */
  grid-gap: 20px; /* Creates 20px gap between grid items */
}

/* Styles the header section */
.header {
  grid-column-start: 1; /* Starts at the first column */
  grid-column-end: -1; /* Ends at the last column */
}

/* Styles the main content section */
.main {
  grid-column-start: 1; /* Starts at the first column */
  grid-column-end: -1; /* Ends at the last column */
}

/* Styles the footer section */
.footer {
  grid-column-start: 1; /* Starts at the first column */
  grid-column-end: -1; /* Ends at the last column */
}

/* This code snippet uses media queries to make the layout responsive for different screen sizes */

/* For screens smaller than 600px */
@media only screen and (max-width: 600px) {
  .container {
    grid-template-columns: 1fr; /* Creates one column */
    grid-template-rows: 50px 1fr 50px; /* Creates three rows with a fixed header and footer and a dynamic middle section */
  }
}

/* For screens between 600px and 900px */
@media only screen and (min-width: 600px) and (max-width: 900px) {
  .container {
    grid-template-columns: 1fr 1fr; /* Creates two columns */
    grid-template-rows: 100px 1fr 100px; /* Creates three rows with a fixed header and footer and a dynamic middle section */
    grid-gap: 10px; /* Creates 10px gap between grid items */
  }
}

/* For screens larger than 900px */
@media only screen and (min-width: 900px) {
  .container {
    grid-template-columns: repeat(3, 1fr); /* Creates three equal columns */
    grid-template-rows: 100px 1fr 100px; /* Creates three rows with a fixed header and footer and a dynamic middle section */
    grid-gap: 30px; /* Creates 30px gap between grid items */
  }
}
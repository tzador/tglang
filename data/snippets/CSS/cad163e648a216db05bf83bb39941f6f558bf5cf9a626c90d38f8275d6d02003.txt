/* This code snippet is a long and complex example of a responsive grid system in CSS. */
/* Styles for the parent container */
.container {
  display: grid; /* Using the CSS grid display */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Creating a flexible grid with a minimum column width of 200px and max of 1fr */
  grid-template-rows: auto; /* Setting rows to be automatically sized */
  grid-gap: 20px; /* Adding a 20px gap between grid items */
  padding: 20px; /* Adding padding to the container */
}

/* Styles for the grid items */
.item {
  background-color: #ccc; /* Setting a background color for the items */
  border: 1px solid black; /* Adding a border */
  border-radius: 5px; /* Setting border radius to create rounded corners */
  padding: 10px; /* Adding padding to the items */
}

/* Media query for smaller screens */
@media(max-width: 768px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* Updating the column width and max value for smaller screens */
    grid-gap: 10px; /* Updating the gap between grid items for smaller screens */
  }
}

/* Media query for even smaller screens */
@media(max-width: 500px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* Updating the column width and max value for even smaller screens */
    grid-gap: 5px; /* Updating the gap between grid items for even smaller screens */
    padding: 10px; /* Updating the padding for smaller screens */
  }

  .item {
    font-size: 12px; /* Updating the font size for grid items on even smaller screens */
    padding: 5px; /* Updating the padding for grid items on even smaller screens */
  }
}
/* This is a complex code snippet in CSS that creates a responsive grid layout using the CSS Grid property */

/* Creates a container with a fixed max-width and centers its contents */
.container {
  max-width: 1200px;
  margin: 0 auto;
}

/* Defines the grid layout with 12 columns and a fluid width */
.container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
}

/* Sets the gutter size between each column */
.container {
  grid-column-gap: 20px;
}

/* Creates a media query for devices with a max width of 768px */
@media only screen and (max-width: 768px) {
  /* Changes the grid layout to have 6 columns instead of 12 */
  .container {
    grid-template-columns: repeat(6, 1fr);
  }
}

/* Creates a grid item and sets its size to span 3 columns on larger screens, and all 6 columns on smaller screens */
.grid-item {
  grid-column: span 3;
}

/* Creates a grid item and sets its size to span 2 columns on larger screens, and all 6 columns on smaller screens */
.grid-item {
  grid-column: span 2;
}

/* Creates a grid item and sets its size to span 1 column on larger screens, and all 6 columns on smaller screens */
.grid-item {
  grid-column: span 1;
}

/* Creates a grid item and sets its size to span 1 column on larger screens, and all 6 columns on smaller screens */
.grid-item {
  grid-column: span 1;
}
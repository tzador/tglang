/* This code snippet creates a responsive grid layout with different sized columns */
.container {
  display: grid; /* sets the display to grid */
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* creates columns that will automatically fit within the container at a minimum of 250px and maximum of 1fr */
  grid-gap: 10px; /* sets the gap between columns */
}

.container > div {
  background-color: lightblue; /* sets the background color of the div to light blue */
  text-align: center; /* centers the text within the div */
  padding: 20px; /* adds padding to the div */
}

.box-1 {
  grid-column: 1/3; /* specifies that this box will span 2 columns in the grid (columns 1 and 2) */
}

.box-2 {
  grid-row: 2/4; /* specifies that this box will span 2 rows in the grid (rows 2 and 3) */
}

.box-3 {
  grid-column: 3; /* specifies that this box will start at the third column of the grid */
  grid-row: 1/4; /* specifies that this box will span 3 rows in the grid (rows 1, 2, and 3) */
}

@media screen and (max-width: 600px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* adjusts the column size for smaller screens */
  }
}
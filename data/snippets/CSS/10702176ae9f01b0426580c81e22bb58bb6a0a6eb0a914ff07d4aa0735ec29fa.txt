/* This is a complex code snippet in CSS */
/* It includes comments, properties, selectors, and values */
/* These properties and values are intended to create a responsive layout */

/* First, we define the global box-sizing property to make all elements use the border-box model */
* {
  box-sizing: border-box;
}

/* Then, we style the body to have a sans-serif font and a maximum width of 1200px with a slight margin on both sides */
body {
  font-family: sans-serif;
  max-width: 1200px;
  margin: 0 auto;
}

/* Next, we create a responsive grid using CSS Grid with 12 columns */
.container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: 20px;
}

/* We use media queries to change the column layout at different screen sizes */
@media screen and (max-width: 768px) {
  .container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media screen and (min-width: 769px) and (max-width: 1024px) {
  .container {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media screen and (min-width: 1025px) and (max-width: 1200px) {
  .container {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* We also use media queries to change the font size at different screen sizes */
@media screen and (max-width: 480px) {
  body {
    font-size: 14px;
  }
}

@media screen and (min-width: 481px) and (max-width: 768px) {
  body {
    font-size: 16px;
  }
}

@media screen and (min-width: 769px) {
  body {
    font-size: 18px;
  }
}

/* Lastly, we add some styles to make the layout look more visually appealing */
/* We use the :hover pseudo-selector to change the background color of a card when hovered over */
.card {
  background-color: #f2f2f2;
  border-radius: 20px;
  padding: 20px;
}

.card:hover {
  background-color: #e6e6e6;
}

/* We use the ::after pseudo-element to add a small triangle at the bottom of each card */
.card::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid #f2f2f2;
}

/* Lastly, we use a hover effect to make the small triangle change color when a card is hovered over */
.card:hover::after {
  border-bottom: 5px solid #e6e6e6;
}
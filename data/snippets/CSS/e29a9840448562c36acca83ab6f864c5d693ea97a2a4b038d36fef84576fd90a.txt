/* This is a code snippet for creating a responsive grid layout using CSS */
.container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr; /* Creates 4 equal columns */
  grid-template-rows: 200px 200px; /* Creates 2 rows with height of 200 pixels */
  grid-gap: 20px; /* Adds a 20px gap between each grid cell */

  /* Media query for screens with width less than 600px */
  @media screen and (max-width: 600px) {
    grid-template-columns: 1fr; /* Changes to a single column layout */
    grid-template-rows: 200px 200px 200px 200px; /* Creates 4 rows with height of 200 pixels */
  }

  /* Media query for screens with width between 600px and 1000px */
  @media screen and (min-width: 600px) and (max-width: 1000px) {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 200px 200px;
  }

  /* Media query for screens with width greater than 1000px */
  @media screen and (min-width: 1000px) {
    grid-template-columns: 1fr 1fr 1fr 1fr; /* Reverts back to 4 columns */
    grid-template-rows: 200px 200px;
  }
}

.item {
  background-color: #ccc; /* Sets the background color of the grid cells to light grey */
  padding: 10px; /* Adds 10px of padding around the content in the grid cells */
  text-align: center; /* Centers the content within the grid cells */
}
/*
A complex code snippet in CSS that creates a responsive grid layout
with different row and column sizes and media queries for different screen sizes.
*/
.grid-container {
  display: grid;
  /* set grid rows and columns */
  grid-template-rows: 1fr 1fr 2fr 3fr;
  grid-template-columns: repeat(4, 1fr);

  /* add gap between grid items */
  grid-gap: 20px;

  /* set media queries for different screen sizes */
  @media only screen and (max-width: 600px) {
    /* reduce grid column size to 2 for smaller screens */
    grid-template-columns: repeat(2, 1fr);
  }

  @media only screen and (min-width: 601px) and (max-width: 900px) {
    /* increase grid row size for medium screens */
    grid-template-rows: 1fr 2fr 1fr 4fr;
    /* reduce gap between grid items */
    grid-gap: 10px;
  }

  @media only screen and (min-width: 901px) {
    /* add additional grid columns for larger screens */
    grid-template-columns: repeat(6, 1fr);
  }
}

/* style for grid items within the grid container */
.grid-item {
  /* set minimum width for grid items */
  min-width: 100px;
  /* add padding and border for visual spacing */
  padding: 10px;
  border: 1px solid black;
  /* align content to center within grid items */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* example of using grid area to change grid item position */
.grid-item-a {
  grid-area: 2 / 1 / 3 / 3;
}
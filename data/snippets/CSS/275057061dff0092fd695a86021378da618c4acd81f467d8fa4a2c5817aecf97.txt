/*
This code snippet is a complex CSS grid layout
with nested media queries and flexbox properties
to create a responsive design.
*/

.container {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;

  @media only screen and (max-width: 768px) {
    grid-template-columns: 1fr;
  }

  @media only screen and (min-width: 769px) and (max-width: 1200px) {
    grid-template-columns: 1fr 1fr;
  }
}

.item {
  display: flex;
  justify-content: center;
  align-items: center;

  @media only screen and (max-width: 768px) {
    flex-direction: column;
  }

  @media only screen and (min-width: 769px) and (max-width: 1200px) {
    flex-direction: row;
  }
}

.image {
  width: 100%;
  max-width: 400px;

  @media only screen and (max-width: 768px) {
    margin-bottom: 20px;
  }
}

.text {
  flex: 1;
  font-size: 18px;
  line-height: 1.5;

  @media only screen and (max-width: 768px) {
    text-align: center;
  }

  @media only screen and (min-width: 769px) and (max-width: 1200px) {
    margin-left: 20px;
  }
}
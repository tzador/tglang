/* The code snippet below shows how to create a responsive grid layout using CSS flexbox */

/* Set display property to flex for the container element */
.container {
  display: flex;
}

/* Set equal width for columns and give them a margin */
.container > div {
  flex: 1;
  margin: 0 10px;
}

/* Set breakpoints for the number of columns to display */
@media only screen and (max-width: 500px) {
  .container > div {
    flex: 100%;
  }
}

/* Create a nested flex container for each row */
.row {
  display: flex;
  flex-wrap: wrap;
}

/* Set equal width for columns within a row and give them a margin */
.row > div {
  flex: 1;
  margin: 0 10px;
}

/* Set custom widths for individual columns at specific breakpoints */
@media only screen and (max-width: 800px) {
  .row > div:nth-child(1) {
    flex: 50%;
  }
  .row > div:nth-child(2) {
    flex: 50%;
  }
}

@media only screen and (max-width: 600px) {
  .row > div:nth-child(3) {
    flex: 25%;
  }
  .row > div:nth-child(4) {
    flex: 25%;
  }
}

@media only screen and (max-width: 400px) {
  .row > div:nth-child(5) {
    flex: 20%;
  }
  .row > div:nth-child(6) {
    flex: 20%;
  }
}
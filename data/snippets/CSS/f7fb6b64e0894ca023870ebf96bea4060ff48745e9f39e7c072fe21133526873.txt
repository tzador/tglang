/* This code snippet is a complex example of CSS code that creates a responsive grid layout */

.container {
    display: grid; /* Specifies display type as grid */
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Creates a grid with columns that automatically adjust based on screen size, with a minimum width of 200px and maximum of 1fr */
    grid-gap: 20px; /* Adds a 20px gap between grid items */
}

.item {
    background-color: #fff; /* Sets background color of grid items to white */
    border: 1px solid #000; /* Adds a 1px black border to grid items */
    padding: 10px; /* Adds 10px padding inside grid items */
    text-align: center; /* Centers the text inside grid items */
}

@media only screen and (max-width: 600px) {
/* Media query for screens with a maximum width of 600px */
    .container {
        grid-template-columns: repeat(2, 1fr); /* Changes grid to 2 equal columns */
        grid-template-rows: repeat(auto-fit, minmax(100px, 1fr)); /* Creates rows that fit content and have a minimum height of 100px */
        grid-gap: 10px; /* Reduces grid gap to 10px */
    }
}
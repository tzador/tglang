/* This code snippet creates a responsive grid layout using CSS */

.container {
  display: grid; /* Defines the container as a grid */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Defines the columns and makes them responsive */
  grid-gap: 20px; /* Defines the space between grid items */
  justify-content: center; /* Centers the grid horizontally */
  align-items: center; /* Centers the grid vertically */
}

.item {
  grid-column: span 2; /* Specifies the number of grid columns the item should span */
  grid-row: span 3; /* Specifies the number of grid rows the item should span */
  background-color: #e5e5e5; /* Sets background color for the item */
  border: 1px solid #333; /* Sets border for the item */
  padding: 10px; /* Specifies padding for the item */
}

@media screen and (max-width: 768px) {
  /* Media query to adjust grid layout for smaller screens */
  .container {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Makes the columns smaller */
    grid-gap: 10px; /* Decreases the gap between items */
  }
}

/* Additional styles for grid items */
.item:nth-child(2n) {
  background-color: #b3b3b3; /* Sets different background color for every other item */
  color: white; /* Sets text color for every other item */
  font-size: 1.2em; /* Increases font size for every other item */
}

.item:nth-child(3) {
  text-align: center; /* Aligns the content of the third item to the center */
}

.item:hover {
  transform: scale(1.2); /* Increases the size of the item on hover */
  transition: all 0.2s ease-in-out; /* Adds smooth transition effect */
}
/* This code snippet is a CSS grid layout that creates a responsive grid with 3 columns. The .grid-container class contains the grid items and sets the grid rows and columns for different screen sizes. */

.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: minmax(100px, auto);
    grid-gap: 20px;
}

/* This media query sets the number of columns to 2 for smaller screens. */

@media only screen and (max-width: 600px) {
    .grid-container {
        grid-template-columns: repeat(2, 1fr);
    }
}

/* The .grid-item class styles the individual items in the grid. */

.grid-item {
    background-color: #ddd;
    padding: 20px;
    font-size: 30px;
    text-align: center;
}

/* This media query changes the font size for smaller screens. */

@media only screen and (max-width: 400px) {
    .grid-item {
        font-size: 20px;
    }
}

/* This code snippet also uses :nth-child() to style each grid item differently. */

.grid-item:nth-child(2n) {
    background-color: #ccc;
}

.grid-item:nth-child(3n) {
    background-color: #bbb;
}

.grid-item:nth-child(4n) {
    background-color: #aaa;
}

/* The CSS below uses the :hover pseudo-class to add a hover effect on the grid items. */

.grid-item:hover {
    transform: scale(1.1);
    transition: all 0.3s ease;
}
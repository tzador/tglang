/*This is a complex code snippet in CSS, containing multiple CSS selectors, properties, values, and media queries*/
/*This CSS code creates a responsive grid layout using a combination of flexbox and CSS grid*/

/*Container element for the grid*/
.container{
    display: flex;
    flex-wrap: wrap;
}

/*Individual grid items*/
.item{
    flex-basis: calc(33.33% - 20px);
    margin: 10px;
    border: 1px solid black;
}

/*Media query for screen sizes smaller than 768px*/
@media only screen and (max-width: 768px) {
    /*Set the container to a single column*/
    .container {
        flex-direction: column;
    }
    /*Set the item width to 100%*/
    .item {
        flex-basis: 100%;
        margin: 5px;
    }
}

/*Grid container for multiple rows*/
.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 20px;
}

/*Grid item within the grid container*/
.grid-item {
    grid-column: span 2;
    border: 2px solid black;
}

/*Media query for screen sizes larger than 1200px*/
@media only screen and (min-width: 1200px) {
    /*Set the grid item to span 3 columns*/
    .grid-item {
        grid-column: span 3;
    }
}

/*Media query for screen sizes between 768px and 1200px*/
@media only screen and (min-width: 768px) and (max-width: 1200px) {
    /*Set the grid item to span 2 columns*/
    .grid-item {
        grid-column: span 2;
    }
}
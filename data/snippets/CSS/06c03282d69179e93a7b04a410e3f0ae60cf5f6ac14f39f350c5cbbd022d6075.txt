/*This is a complex code snippet in CSS that creates a responsive grid layout for a webpage*/

/*Setting the display property of the parent container to 'grid'*/
.container {
  display: grid;
}

/*Creating a three column layout with 20%, 50%, and 30% width respectively*/
.container {
  grid-template-columns: 20% 50% 30%;
}

/*Creating three rows in the grid with a height of 100px*/
.container {
  grid-template-rows: 100px 100px 100px;
}

/*Setting the gap between grid items to be 20px*/
.container {
  gap: 20px;
}

/*Setting a different background color for even and odd grid items*/
.container > *:nth-child(even) {
  background-color: lightblue;
}

.container > *:nth-child(odd) {
  background-color: lightgreen;
}

/*Creating a media query for screens with a maximum width of 600px*/
@media only screen and (max-width: 600px) {

  /*Changing the grid layout to a one column layout with 100% width*/
  .container {
    grid-template-columns: 100%;
  }

  /*Removing the gap between grid items*/
  .container {
    gap: 0;
  }
} 

/*Styling the grid items to have a border, padding and margin*/
.grid-item {
  border: 1px solid black;
  padding: 10px;
  margin: 10px;
}

/*Adjusting the grid item size and position for different grid areas*/
.item1 {
  grid-column: 1 / span 2;
  grid-row: 1;
}

.item2 {
  grid-column: 3;
  grid-row: 1 / span 2;
}

.item3 {
  grid-column: 1;
  grid-row: 2 / span 2;
}

.item4 {
  grid-column: 2;
  grid-row: 2;
}

.item5 {
  grid-column: 3;
  grid-row: 3;
}

/*Adding a hover effect on grid items*/
.grid-item:hover {
  background-color: yellow;
  cursor: pointer;
}
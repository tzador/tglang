/* This code snippet is a complex CSS grid layout that displays a two-column grid
with three rows of items. It uses the grid-template-columns and grid-template-rows
properties to define the layout. The grid-gap property is used to add spacing between
the items. The justify-items and align-items properties are used to align the items
within the grid. */

.container {
  display: grid; /* Specifies that the element is a grid container */
  grid-template-columns: 200px 1fr; /* Creates a two-column grid with the first column having a fixed width of 200px and the second column taking up the remaining space */
  grid-template-rows: repeat(3, 100px); /* Creates three rows with a height of 100px each */
  grid-gap: 20px; /* Adds a 20px gap between grid items */
  justify-items: center; /* Aligns the items to the center horizontally */
  align-items: center; /* Aligns the items to the center vertically */
}

.item {
  display: grid; /* Specifies that the element is a grid item */
  background-color: #F2F2F2; /* Sets the background color of the item */
  border: 1px solid black; /* Adds a black border around the item */
}

.item-1 {
  grid-column: 1 / span 2; /* Specifies that the item spans across both columns */
  grid-row: 1; /* Sets the item to the first row */
}

.item-2 {
  grid-column: 1; /* Sets the item to the first column */
  grid-row: 2 / span 2; /* Specifies that the item spans across two rows */
}

.item-3 {
  grid-column: 2; /* Sets the item to the second column */
  grid-row: 2; /* Sets the item to the second row */
}

.item-4 {
  grid-column: 2; /* Sets the item to the second column */
  grid-row: 3; /* Sets the item to the third row */
}
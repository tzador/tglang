/* This code snippet shows a complex CSS layout using grid and flexbox */

/* Create a grid container */
.grid-container {
  display: grid; /* set grid display */
  grid-template-columns: 1fr 2fr 1fr; /* divide the container into 3 columns with the first and last being 1 fraction and the middle being 2 fractions */
  grid-template-rows: 100px auto 100px; /* divide the container into 3 rows with the first and last being 100 pixels and the middle row being auto to fit the content */
  gap: 20px; /* set the gap between grid items to be 20 pixels */
}

/* Style the first grid item */
.grid-item-1 {
  grid-column: 1 / 4; /* span this item across all 3 columns */
  grid-row: 1; /* place this item in the first row */
  background-color: #ffcc99; /* set background color to light orange */
}

/* Style the second grid item */
.grid-item-2 {
  grid-column: 2; /* place this item in the second column */
  grid-row: 2; /* place this item in the second row */
  display: flex; /* set flexbox display */
  justify-content: center; /* center the child elements horizontally within the item */
  align-items: center; /* center the child elements vertically within the item */
}

/* Style the child elements within the second grid item */
.grid-item-2 p, .grid-item-2 img {
  margin: 10px; /* add a margin of 10 pixels around the child elements */
}

/* Style the third grid item */
.grid-item-3 {
  grid-column: 3; /* place this item in the third column */
  grid-row: 3; /* place this item in the third row */
  background-color: #6699ff; /* set background color to light blue */
  display: flex; /* set flexbox display */
  justify-content: space-evenly; /* evenly distribute the child elements horizontally within the item */
  align-items: flex-end; /* align the child elements to the bottom of the item */
}

/* Style the child elements within the third grid item */
.grid-item-3 button {
  padding: 10px 20px; /* add padding of 10 pixels on top and bottom and 20 pixels on left and right */
  font-size: 1.2rem; /* set font size to 1.2 rem */
  color: #fff; /* set font color to white */
  background-color: #336699; /* set background color to dark blue */
  border: none; /* remove border */
  border-radius: 5px; /* add a border radius of 5 pixels */
}

.grid-item-3 p {
  margin-top: 20px; /* add margin of 20 pixels on top */
  color: #fff; /* set font color to white */
  font-style: italic; /* add italic font style */
  text-align: center; /* center the text */
}

/* Use media queries for responsive design */
@media screen and (max-width: 768px) {
  /* Change grid to single column layout */
  .grid-container {
    grid-template-columns: 1fr; /* make the container have only 1 column */
    grid-template-rows: auto; /* make the rows automatically fit the content */
    gap: 10px; /* change the gap to 10 pixels */
  }

  /* Change styles for the third grid item for smaller screens */
  .grid-item-3 {
    justify-content: space-around; /* evenly distribute the child elements horizontally with even spacing between them */
    align-items: center; /* center the child elements vertically */
  }

  .grid-item-3 button {
    font-size: 1.1rem; /* decrease font size to 1.1 rem */
  }

  .grid-item-3 p {
    margin-top: 0; /* remove top margin */
  }
}

/* Use media queries for even smaller screens */
@media screen and (max-width: 500px) {
  /* Change styles for the first grid item */
  .grid-item-1 {
    grid-column: 1 / 2; /* span this item across 1 column only */
    grid-row: 1 / 3; /* span this item across 2 rows */
  }

  /* Change styles for the second grid item */
  .grid-item-2 {
    grid-column: 1 / 2; /* make this item span only 1 column */
  }

  /* Change styles for child elements within the second grid item */
  .grid-item-2 img {
    display: none; /* hide the image in smaller screens */
  }

  .grid-item-2 p {
    margin: 0; /* remove margins for the paragraph */
    font-size: 1.2rem; /* increase font size to 1.2 rem */
  }

  /* Change styles for the third grid item */
  .grid-item-3 {
    grid-column: 1 / 2; /* make this item span only 1 column */
    grid-row: 3; /* place this item in the third row */
    align-items: center; /* center the child elements vertically */
  }

  /* Change styles for child elements within the third grid item */
  .grid-item-3 button {
    padding: 8px 16px; /* decrease padding */
  }

  .grid-item-3 p {
    margin-bottom: 20px; /* add margin of 20 pixels at the bottom */
  }
}

/* Use media queries for even smaller screens */
@media screen and (max-width: 350px) {
  /* Change styles for the second grid item for the smallest screens */
  .grid-item-2 {
    display: none; /* hide this item */
  }
}
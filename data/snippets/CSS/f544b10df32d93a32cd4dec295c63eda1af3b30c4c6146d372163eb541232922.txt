/* This is a complex code snippet in CSS that creates a responsive grid layout */

/* Reset all element margin and padding to 0 */
* {
  margin: 0;
  padding: 0;
}

/* Create a grid container with 3 columns */
.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}

/* Set a minimum width and height for each grid item */
.grid-item {
  min-width: 200px;
  min-height: 100px;
}

/* Create a breakpoint for small screens */
@media screen and (max-width: 768px) {
  /* Change the grid layout to 2 columns */
  .grid {
    grid-template-columns: repeat(2, 1fr);
  }

  /* Set a larger grid item width for mobile devices */
  .grid-item {
    min-width: 350px;
  }
}

/* Create a breakpoint for extra small screens */
@media screen and (max-width: 480px) {
  /* Change the grid layout to 1 column */
  .grid {
    grid-template-columns: repeat(1, 1fr);
  }

  /* Set an even larger grid item width for extra small devices */
  .grid-item {
    min-width: 500px;
  }
}

/* Style the grid items with a border and padding */
.grid-item {
  border: 1px solid black;
  padding: 10px;
}

/* Add spacing between grid items */
.grid-item + .grid-item {
  margin-top: 10px;
}

/* Make the grid items responsive to screen size changes */
.grid-item {
  width: 100%;
}

/* Change the grid layout to a single column for printing */
@media print {
  .grid {
    grid-template-columns: repeat(1, 1fr);
  }
}
/* This is a complex snippet that uses CSS variables and advanced selectors */
::root {
  /* Defining CSS variables for colors and font sizes */
  --primary-color: #2c3e50;
  --secondary-color: #2980b9;
  --font-size: 14px;
}

/* Creating a reusable mixin for flexbox properties */
@mixin flexbox() {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Applying the mixin to a class to horizontally center elements */
.centered-container {
  @include flexbox();
}

/* Applying the mixin to a class to vertically center elements */
.vertical-container {
  @include flexbox();
  flex-direction: column;
}

/* Using advanced selectors to target elements with specific attributes */
[data-type="button"] {
  font-size: var(--font-size);
  background-color: var(--primary-color);
  color: #fff;
}

/* Adding hover effect using pseudo-class selector */
[data-type="button"]:hover {
  color: var(--secondary-color);
}

/* Using attribute selector to target elements with a specific attribute value */
[data-type="image"] {
  width: 100%;
  height: auto;
}

/* Combining attribute selector with pseudo-class to add a hover effect */
[data-type="image"]:hover {
  transform: scale(1.1);
}

/* Styling links */
a {
  color: var(--secondary-color);
  text-decoration: none;
  transition: all 0.3s ease;
}

/* Adding hover effect to links using pseudo-class selector */
a:hover {
  color: var(--primary-color);
  text-decoration: underline;
}

/* Using calc function to calculate margin based on CSS variable value */
.container {
  margin: calc(var(--font-size) * 2);
}
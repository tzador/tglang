/* This is a complex code snippet in CSS that creates a responsive grid layout */

/* Set the container element's display property to 'grid' */
.container {
  display: grid;
}

/* Create a three-column grid with equal width columns */
.container grid-template-columns: auto auto auto;

/* Set the default row height to 50px and add a 10px gap between rows */
.container grid-template-rows: 50px;
.container grid-row-gap: 10px;

/* Add a margin of 20px to all elements inside the grid */
.container * {
  margin: 20px;
}

/* Set the first row to have a height of 100px, and the third row to have a height of 150px */
.container grid-row: 1 / 2;
.container grid-row: 3 / 4;

/* Set the first column to have a width of 20%, the second column to have a width of 30%, and the third column to have a width of 50% */
.container grid-column: 1 / 2;
.container grid-column: 2 / 3;
.container grid-column: 3 / 4;

/* Set the first element to span across two rows and two columns */
.element1 {
  grid-row: 1 / 3;
  grid-column: 1 / 3;
}

/* Set the second element to be placed on the third row and first column */
.element2 {
  grid-row: 3 / 4;
  grid-column: 1 / 2;
}

/* Set the third element to be placed on the third row and second column */
.element3 {
  grid-row: 3 / 4;
  grid-column: 2 / 3;
}

/* Set the fourth element to be placed on the second row and third column */
.element4 {
  grid-row: 2 / 3;
  grid-column: 3 / 4;
}

/* Add media queries for different screen sizes, changing the grid layout and column widths accordingly */
@media screen and (max-width: 768px) {
  /* Change to a two-column grid with 50% width columns */
  .container grid-template-columns: 50% 50%;
  
  /* Change the first element to span only one row and one column */
  .element1 {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
  }
  
  /* Move the second element to the second row and first column */
  .element2 {
    grid-row: 2 / 3;
    grid-column: 1 / 2;
  }
  
  /* Move the third element to the second row and second column */
  .element3 {
    grid-row: 2 / 3;
    grid-column: 2 / 3;
  }
  
  /* Move the fourth element to the first row and second column */
  .element4 {
    grid-row: 1 / 2;
    grid-column: 2 / 3;
  }
}

@media screen and (max-width: 480px) {
  /* Change to a one-column grid with 100% width columns */
  .container grid-template-columns: 100%;
  
  /* Change the first element to span all rows and columns */
  .element1 {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
  }
  
  /* Change the second element to be placed on the second row */
  .element2 {
    grid-row: 2 / 3;
    grid-column: 1 / 2;
  }
  
  /* Change the third element to be placed on the third row */
  .element3 {
    grid-row: 3 / 4;
    grid-column: 1 / 2;
  }
  
  /* Change the fourth element to be placed on the fourth row */
  .element4 {
    grid-row: 4 / 5;
    grid-column: 1 / 2;
  }
}
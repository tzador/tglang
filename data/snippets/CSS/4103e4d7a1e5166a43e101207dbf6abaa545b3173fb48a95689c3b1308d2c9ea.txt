/* This code snippet is a complex CSS grid layout for a responsive website*/

/*Every grid item will have equal widths, change depending on screen size*/
.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-gap: 1rem;
}

/*Each grid item will be scaled based on parent container's width*/
.grid-item {
  width: 100%;
}
/*Each grid item will be positioned and sized depending on screen size*/
@media (min-width: 768px) {
  .grid-item:nth-child(1) {
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
    height: 50vh;
    width: 100%;
  }

  .grid-item:nth-child(2) {
    grid-column: 3 / span 2;
    grid-row: 1 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(3) {
    grid-column: 3 / span 3;
    grid-row: 2 / span 2;
    width: 100%;
  }

  .grid-item:nth-child(4) {
    grid-column: 6 / span 1;
    grid-row: 1 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(5) {
    grid-column: 1 / span 1;
    grid-row: 3 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(6) {
    grid-column: 2 / span 1;
    grid-row: 3 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(7) {
    grid-column: 3 / span 2;
    grid-row: 3 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(8) {
    grid-column: 5 / span 2;
    grid-row: 3 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(9) {
    grid-column: 1 / span 2;
    grid-row: 4 / span 1;
    height: 25vh;
    width: 100%;
  }

  .grid-item:nth-child(10) {
    grid-column: 3 / span 4;
    grid-row: 4 / span 1;
    width: 100%;
  }
}
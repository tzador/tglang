/* This is a complex code snippet that contains a nested selector, a CSS grid, and multiple media queries */
div.container { /* This selector targets all <div> elements with the class "container" */
  display: grid; /* Specifies that the <div> elements should be displayed as a grid */
  grid-template-columns: 1fr 2fr; /* Specifies the columns in the grid, the "fr" unit is relative to the available space */
}

@media screen and (min-width: 600px) { /* Media query for screens with a minimum width of 600px */
  div.container { /* Nested selector to target the <div> elements with class "container" within the media query */
    grid-template-columns: 1fr 1fr 1fr; /* Adjusts the columns in the grid for larger screens */
  }
}

@media screen and (max-width: 400px) { /* Media query for screens with a maximum width of 400px */
  div.container { /* Nested selector to target the <div> elements with class "container" within the media query */
    grid-template-columns: 1fr; /* Adjusts the columns in the grid for smaller screens */
  }
}

div.item { /* This selector targets all <div> elements with the class "item" */
  grid-row: 1/3; /* Specifies which row(s) the <div> element should span in the grid */
  grid-column: 2/3; /* Specifies which column(s) the <div> element should span in the grid */
}

div.item:nth-of-type(odd) { /* Nested selector to target every other <div> element with the class "item" */
  grid-row: 2/3; /* Adjusts the grid row for these elements to create a zig-zag layout */
}

div.item:nth-of-type(even) { /* Nested selector to target the remaining <div> elements with the class "item" */
  grid-row: 1/2; /* Adjusts the grid row for these elements to create a zig-zag layout */
  grid-column: 1/2; /* Adjusts the grid column for these elements to create a zig-zag layout */
}
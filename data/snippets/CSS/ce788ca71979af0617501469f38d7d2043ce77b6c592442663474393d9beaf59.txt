/* This code snippet generates a complex multi-column layout */

.container {
  display: grid; /* Use CSS grid for layout */
  grid-template-columns: 1fr 2fr 1fr; /* Divide the container into three columns, with the middle one being twice the size of the others */
  grid-template-rows: 1fr 1fr 1fr; /* Divide the container into three rows, each taking up equal space */
  column-gap: 20px; /* Add a 20 pixel gap between each column */
  row-gap: 10px; /* Add a 10 pixel gap between each row */
}

.item {
  grid-column-start: span 1; /* Make each item span one column */
  grid-row-start: span 1; /* Make each item span one row */
}

.item:nth-child(odd) {
  grid-column-end: span 2; /* Make every odd item span two columns, taking up the space of the middle column */
}

.item:nth-child(3n+1) {
  grid-row-end: span 2; /* Make every third item (starting at the first one) span two rows, taking up the space of the first and second row */
}

.item:nth-child(3n+2) {
  grid-row-end: span 3; /* Make every third item (starting at the second one) span three rows, taking up the space of all three rows */
}
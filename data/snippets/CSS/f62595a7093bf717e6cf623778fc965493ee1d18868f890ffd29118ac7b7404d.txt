/* This code snippet creates a complex and responsive layout using CSS Grid and media queries */

/* Setting up the grid container with three columns and five rows */
.grid-container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: repeat(5, 1fr);
  grid-gap: 10px;
}

/* Styling the items within the grid */
.grid-item {
  background-color: #ccc;
  padding: 10px;
  text-align: center;
  font-size: 1.2rem;
}

/* Making the layout responsive using media queries */
/* On screens smaller than 600px, change the grid to have two columns */
@media only screen and (max-width: 600px) {
  .grid-container {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(4, 1fr);
  }
}

/* On screens smaller than 400px, change the grid to have one column */
@media only screen and (max-width: 400px) {
  .grid-container {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(7, 1fr);
  }
}

/* Styling specific items within the grid */
.grid-item:nth-child(6) {
  grid-column: span 3;
  grid-row: 3;
}

.grid-item:nth-child(8) {
  grid-column: 2;
  grid-row: span 2;
}

/* Changing the order of items within the grid */
.grid-item:nth-child(2) {
  order: 3;
}

.grid-item:nth-child(3) {
  order: 1;
}

.grid-item:nth-child(4) {
  order: 2;
}

.grid-item:nth-child(5) {
  order: 4;
}

.grid-item:nth-child(7) {
  order: 5;
}

/* Adding a hover effect to the items within the grid */
.grid-item:hover {
  background-color: #999;
  transform: scale(1.05);
}
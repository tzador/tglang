/* This is a complex code snippet in CSS that creates a responsive grid layout */
/* Use flexbox to create a grid container */
.flex-container {
  display: flex;
  flex-wrap: wrap; /* allow items to wrap to new line */
  justify-content: space-between; /* distribute items evenly along the line */
  align-content: space-evenly; /* align items vertically between rows */
  align-items: stretch; /* stretch items to fit container height */
}

/* Define a class for grid items */
.grid-item {
  flex: 1 1 auto; /* make each item equal width and height */
  padding: 20px; /* add spacing between items */
  box-sizing: border-box; /* include padding in item's width */
  border: 1px solid black; /* create borders for each item */
}

/* Define different size classes for grid items */
.small-item {
  flex-basis: 33.33%; /* make item take up one third of container's width */
}

.medium-item {
  flex-basis: 50%; /* make item take up half of container's width */
}

.large-item {
  flex-basis: 100%; /* make item take up full width of container */
}

/* Create media queries for responsive design */
@media only screen and (max-width: 768px) { /* for devices with max width of 768px */
  .flex-container {
    flex-direction: column; /* change flex direction to stack items vertically */
    align-items: center; /* center items horizontally */
  }
  .small-item,
  .medium-item,
  .large-item {
    flex-basis: 100%; /* make all items take up full width */
  }
}
/* This is a complex code snippet in CSS that creates a responsive grid layout */

.container {
  display: grid; /* sets container to grid layout */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* sets a minimum and maximum size for each column and allows for automatic resizing to fit the container */
  grid-gap: 30px; /* sets the gap between grid items */
  grid-auto-rows: 200px; /* sets the default height for rows */
}

.item {
  grid-column-end: span 2; /* sets the number of columns an item takes up */
  grid-row-end: span 3; /* sets the number of rows an item takes up */
}

@media only screen and (min-width: 600px) {
  /* media query for screens with a minimum width of 600px */
  .item {
    grid-column-end: span 3; /* changes the number of columns an item takes up for larger screens */
    grid-row-end: span 2; /* changes the number of rows an item takes up for larger screens */
  }
}

@media only screen and (min-width: 900px) {
  /* media query for screens with a minimum width of 900px */
  .item {
    grid-column-end: span 4; /* changes the number of columns an item takes up for even larger screens */
    grid-row-end: span 4; /* changes the number of rows an item takes up for even larger screens */
  }
}
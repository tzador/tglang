/* This is a complex code snippet in CSS that shows how to create a responsive grid layout */

.container {
  display: grid; /* creates a grid layout */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* sets the number and width of columns, responsive to container size */
  grid-gap: 20px; /* adds a 20px gap between grid elements */
  grid-auto-rows: 200px; /* sets default row height to 200px */
}

.item {
  grid-column: span 2; /* stretches element to occupy 2 columns */
  grid-row: span 3; /* stretches element to occupy 3 rows */
}

@media screen and (max-width: 768px) { /* applies styles only when screen size is 768px or less */
  .container {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* converts to a 1-column grid with minimum width of 100px */
    grid-auto-rows: 150px; /* changes default row height to 150px */
  }

  .item {
    grid-column: auto; /* automatically places element in first available column */
    grid-row: auto; /* automatically places element in first available row */
  }
}
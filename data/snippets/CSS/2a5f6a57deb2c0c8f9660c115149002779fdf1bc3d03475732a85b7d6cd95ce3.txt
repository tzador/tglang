/* This code snippet is a complex CSS grid layout */

/* Set up a grid container with 3 columns and 3 rows */
.grid-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

/* Style the first row to have a fixed height of 100px */
.grid-container > :nth-child(-n+3) {
  grid-row: 1;
  height: 100px;
}

/* Style the columns in the first row to have a fixed width of 200px */
.grid-container > :nth-child(-n+3) {
  grid-row: 1;
  width: 200px;
}

/* Style the second and third rows to have a fixed height of 150px */
.grid-container > :nth-child(4),
.grid-container > :nth-child(7) {
  grid-row: span 2;
  height: 150px;
}

/* Style the second and third columns to have a fixed width of 250px */
.grid-container > :nth-child(2n-1) {
  grid-column: 2 / span 2;
  width: 250px;
}

/* Style the fourth and fifth columns to have a fixed width of 300px */
.grid-container > :nth-child(3n-1) {
  grid-column: span 2;
  width: 300px;
}

/* Style the last row to have a fixed height of 200px and span across all columns */
.grid-container > :last-child {
  grid-row: 3;
  height: 200px;
  grid-column: 1 / -1;
}

/* Use grid-gap to add spacing between rows and columns */
.grid-container {
  grid-gap: 20px;
}
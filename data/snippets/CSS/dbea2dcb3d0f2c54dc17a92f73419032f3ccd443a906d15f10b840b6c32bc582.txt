/* This is a complex code snippet in CSS that creates a responsive grid layout */
.grid-wrapper {
  display: grid; /* sets the display property to grid, allowing us to use grid layout */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* creates columns with a minimum width of 300 pixels and a maximum width of 1 fraction unit, and automatically fits them to the container */
  grid-gap: 20px; /* sets the gap between grid items to 20 pixels */
  grid-auto-rows: minmax(150px, auto); /* creates rows with a minimum height of 150 pixels and automatically fits them to the content */
}

.grid-item {
  border: 1px solid black; /* adds a 1 pixel black border to each grid item */
  padding: 20px; /* adds 20 pixels of padding to each grid item */
}

@media screen and (max-width: 600px) { /* sets styles for screens with a maximum width of 600 pixels */
  .grid-wrapper {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* overrides the column width to be 250 pixels and 1 fraction unit if the screen is smaller than 600 pixels */
    grid-gap: 10px; /* sets the gap between grid items to 10 pixels */
  }
}

/* This code snippet creates a responsive grid layout that changes based on the screen size */
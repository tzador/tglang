/* This is a complex CSS code snippet for creating a responsive grid layout with different breakpoints */

/* This sets the root font size to 10px to easily work with percentages */
:root {
  font-size: 10px;
}

/* This creates a class for a container element with a max-width of 1200px and center alignment */
.container {
  max-width: 1200px;
  margin: 0 auto;
}

/* This creates a grid row with display flex and a margin-bottom of 15px */
.row {
  display: flex;
  margin-bottom: 15px;
}

/* This creates a class for a column with percentage based width and a padding of 10px */
.col {
  width: 50%; /* Change this to desired percentage width */
  padding: 10px;
}

/* This sets different column widths for different breakpoints */
@media only screen and (min-width: 768px) {
  .col {
    width: 30%;
  }
}

@media only screen and (min-width: 1024px) {
  .col {
    width: 25%;
  }
}

/* This creates a class for a full-width column that spans across all columns in the row */
.col-full {
  width: 100%;
}

/* This creates a class for a column that only appears on large screens (min-width: 1024px) */
.col-large {
  display: none;
}

@media only screen and (min-width: 1024px) {
  .col-large {
    display: block;
  }
}

/* This creates a class for a column that only appears on medium screens (min-width: 768px) */
.col-medium {
  display: none;
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .col-medium {
    display: block;
  }
}

/* This creates a class for a column that only appears on small screens (max-width: 767px) */
.col-small {
  display: none;
}

@media only screen and (max-width: 767px) {
  .col-small {
    display: block;
  }
}
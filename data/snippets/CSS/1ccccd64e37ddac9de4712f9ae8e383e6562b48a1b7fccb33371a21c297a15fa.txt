/* This is a complex code snippet in CSS
    that creates a responsive grid layout */

.container {
    display: grid; /* Specifies that the element will be displayed as a grid */
    grid-template-columns: repeat(4, 1fr); /* Creates four columns with equal width */
    grid-template-rows: auto; /* Creates rows with height that adjusts to content */
    grid-gap: 2rem; /* Adds a gap of 2 rem between grid items*/
    margin: auto; /* Center-aligns the grid within its container */
}

.item {
    grid-column-start: span 2; /* Specifies that the item will span 2 columns */
    grid-row-start: span 3; /* Specifies that the item will span 3 rows */
}

@media screen and (max-width: 768px) { /* Creates a responsive design for screen sizes up to 768px */
    .container {
        grid-template-columns: repeat(2, 1fr); /* Changes to two columns */
    }
    .item {
        grid-column-start: span 1; /* Changes to span 1 column */
        grid-row-start: span 2; /* Changes to span 2 rows */
    }
}

@media screen and (max-width: 480px) { /* Creates a responsive design for screen sizes up to 480px */
    .container {
        grid-template-columns: 1fr; /* Changes to one column */
    }
    .item {
        grid-column-start: span 1; /* Changes to span 1 column */
        grid-row-start: span 1; /* Changes to span 1 row */
    }
}
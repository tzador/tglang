/* This is a CSS code snippet for creating a responsive grid layout */

/* Set the number of columns and gap between columns in the grid */
.container {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* Use repeat() function to create 3 columns with equal width */
  grid-gap: 20px; /* Use grid-gap property to define the gap between columns */
}

/* Style the grid items */
.item {
  background-color: lightgray;
  padding: 20px;
}

/* Use media queries to make the grid responsive */
/* If screen size is less than 600px, change grid to 1 column with a gap of 10px */
@media only screen and (max-width: 600px) {
  .container {
    grid-template-columns: 1fr;
    grid-gap: 10px;
  }
}

/* If screen size is between 600px and 1200px, change grid to 2 columns with a gap of 15px */
@media only screen and (min-width: 600px) and (max-width: 1200px) {
  .container {
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 15px;
  }
}

/* If screen size is greater than 1200px, change grid to 4 columns with a gap of 25px */
@media only screen and (min-width: 1200px) {
  .container {
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 25px;
  }
}
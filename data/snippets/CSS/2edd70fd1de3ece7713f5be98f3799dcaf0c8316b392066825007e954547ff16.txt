/* This is a complex CSS code snippet that demonstrates how to create a responsive grid layout using flexbox */

/* This sets a base font size and style for all elements */
* {
  font-family: Arial, sans-serif;
  font-size: 16px;
}

/* This creates a container for our grid */
.container {
  display: flex; /* Sets the display property to flex */
  flex-wrap: wrap; /* Specifies that items should wrap in multiple rows/columns */
  justify-content: space-between; /* Aligns items to evenly distribute them along the row/column axis */
  align-items: center; /* Aligns items to center along the cross axis */
}

/* This creates a class for our grid items */
.item {
  flex-basis: 25%; /* Sets the initial width/height of each item to be 25% of the container's width/height */
}

/* This sets the styles for different screen sizes using media queries */
@media screen and (max-width: 768px) {
  .container {
    flex-wrap: nowrap; /* Specifies that items should not wrap */
  }
  .item {
    flex-basis: 50%; /* Sets the width/height of each item to be 50% of the container's width/height */
  }
}
@media screen and (max-width: 480px) {
  .container {
    flex-direction: column; /* Changes the direction of the flex items to be stacked vertically */
  }
}
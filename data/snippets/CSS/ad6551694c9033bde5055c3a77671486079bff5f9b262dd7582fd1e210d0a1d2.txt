/* This code creates a responsive grid layout with five columns and six rows */
.grid {
  display: grid; /* Sets the container to a grid display */
  grid-template-columns: repeat(5, 1fr); /* Creates five equal width columns */
  grid-template-rows: repeat(6, 1fr); /* Creates six equal height rows */
  grid-gap: 20px; /* Sets the gap between grid items to 20 pixels */
  grid-template-areas:
    "col1 col2 col3 col4 col5" /* Creates named areas for the columns */
    "row1row1row1row1row1" /* Creates a single row with named column areas */
    "row2row2row2row2row2" /* Creates a single row with named column areas */
    "row3row3row3row3row3" /* Creates a single row with named column areas */
    "row4row4row4row4row4" /* Creates a single row with named column areas */
    "row5row5row5row5row5" /* Creates a single row with named column areas */
    "row6row6row6row6row6"; /* Creates a single row with named column areas */
}
@media screen and (max-width: 600px) {
  /* Uses media query to change the layout of the grid on smaller screens */
  .grid {
    grid-template-columns: repeat(2, 1fr); /* Creates two equal width columns */
    grid-template-rows: repeat(6, 1fr); /* Keeps six equal height rows */
    grid-template-areas:
      "col1 col2" /* Places first two columns side by side */
      "row1row1" /* Creates a single row with named column areas */
      "row2row2" /* Creates a single row with named column areas */
      "row3row3" /* Creates a single row with named column areas */
      "row4row4" /* Creates a single row with named column areas */
      "row5row5" /* Creates a single row with named column areas */
      "row6row6"; /* Creates a single row with named column areas */
  }
}

/* Applies customized styling to items within the grid */
.item {
  background-color: #eee; /* Sets the background color of each item to light gray */
  padding: 20px; /* Adds 20 pixels of padding to each item */
}

/* Assigns each item to its designated area within the grid */
.item1 {
  grid-area: col1 / row1; /* Positions the item in the first column and first row */
}

.item2 {
  grid-area: col2 / row3; /* Positions the item in the second column and third row */
}

.item3 {
  grid-area: col3 / row5; /* Positions the item in the third column and fifth row */
}

.item4 {
  grid-area: col4 / row2; /* Positions the item in the fourth column and second row */
}

.item5 {
  grid-area: col5 / row4; /* Positions the item in the fifth column and fourth row */
}
/* This is a complex code snippet showing a CSS grid layout */

/* Define the grid container */
.container {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* Creates 3 equal columns */
  grid-template-rows: 75px 150px 50px; /* Defines the height of the rows */
  gap: 10px; /* Adds a 10px gap between grid items */
  grid-template-areas: /* Defines the grid areas for each grid item */
    "header header header"
    "sidebar main main"
    "sidebar footer footer";
}

/* Define the grid items */
.header {
  grid-area: header; /* Place item in the header grid area */
}

.sidebar {
  grid-area: sidebar; /* Place item in the sidebar grid area */
}

.main {
  grid-area: main; /* Place item in the main grid area */
}

.footer {
  grid-area: footer; /* Place item in the footer grid area */
}

/* Media queries for responsive design */
@media only screen and (max-width: 768px) {
  .container {
    grid-template-columns: 1fr; /* Switch to a single column layout */
    grid-template-rows: 75px 150px 150px 50px; /* Add a new row for the footer */
    grid-template-areas:
      "header"
      "main"
      "sidebar"
      "footer"; /* Reorder grid areas to display in a single column */
  }
}
/* This is a block of CSS code that creates a complex, multi-column layout */

.container { /* Selector for the parent container */
  width: 100%; /* Sets the width of the container to 100% of the parent element */
  display: grid; /* Uses CSS Grid for the layout */
  grid-template-columns: repeat(3, 1fr); /* Creates 3 equal columns */
  grid-template-rows: repeat(2, minmax(100px, 1fr)); /* Creates 2 rows with a minimum height of 100px and a maximum of 1fr */
  grid-gap: 10px; /* Adds a 10px gap between grid items */
}

.item { /* Selector for the grid items */
  border: 2px solid black; /* Adds a border around each item */
  padding: 10px; /* Adds 10px of padding inside each item */
  grid-column: span 2; /* Makes the item span across 2 columns */
  grid-row: span 2; /* Makes the item span across 2 rows */
}

.item:nth-child(odd) { /* Selector for odd numbered items */
  background-color: lightgray; /* Adds a light gray background color to odd items */
}

.item:nth-child(even) { /* Selector for even numbered items */
  background-color: darkgray; /* Adds a dark gray background color to even items */
}

/* Media queries for responsive design */

@media (min-width: 768px) { /* Applies styles only if the screen width is 768px or larger */
  .item {
    grid-column: span 1; /* Makes the item span across only 1 column */
    grid-row: span 1; /* Makes the item span across only 1 row */
  }
}

@media (min-width: 1024px) { /* Applies styles only if the screen width is 1024px or larger */
  .item {
    grid-column: 1 / 4; /* Makes the item start at column 1 and end at column 4, spanning all 3 columns */
  }
}
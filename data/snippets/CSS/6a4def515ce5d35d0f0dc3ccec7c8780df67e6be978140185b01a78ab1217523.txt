/* This is a complex code snippet in CSS that creates a responsive grid layout */ 

.wrapper {  /* A class for the parent element of the grid */
    display: grid;  /* Sets the display property to grid */
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));  /* Creates a grid with columns that adjust to fit the available space, with a minimum width of 200px */

    @media (max-width: 800px) {  /* Media query for screens smaller than 800px */
        grid-template-columns: repeat(2, minmax(200px, 1fr)); /* Sets the number of columns to 2 with a minimum width of 200px each */
    }

    @media (max-width: 600px) {  /* Media query for screens smaller than 600px */
        grid-template-columns: repeat(1, minmax(200px, 1fr)); /* Sets the number of columns to 1 with a minimum width of 200px */
    }

    grid-gap: 20px; /* Sets the gap or spacing between grid items to 20px */
}

.item {  /* A class for the child elements of the grid */
    background-color: blue; /* Sets the background color of the grid items to blue */
    height: 100px; /* Sets the height of the grid items to 100 pixels */
    border: 1px solid black; /* Adds a 1px black border to the grid items */
    grid-column-end: span 2; /* Spans the grid item across 2 columns */
    grid-row-end: span 3; /* Spans the grid item across 3 rows */

    @media (max-width: 600px) { /* Media query for screens smaller than 600px */
        grid-column-end: span 1; /* Sets the grid item to span 1 column */
        grid-row-end: span 1; /* Sets the grid item to span 1 row */
    }
}

.item:nth-child(4) { /* Selects the 4th child grid item */
    grid-column-end: span 1; /* Sets the grid item to span 1 column */
    grid-row-end: span 3; /* Sets the grid item to span 3 rows */

    @media (max-width: 600px) { /* Media query for screens smaller than 600px */
        grid-column-end: span 1; /* Sets the grid item to span 1 column */
        grid-row-end: span 1; /* Sets the grid item to span 1 row */
    }
}
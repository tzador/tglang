/* This code snippet demonstrates a complex layout using CSS grid */

body {
  display: grid; /* Sets the display of the body to grid */
  grid-template-rows: repeat(5, 1fr); /* Sets the grid layout to have 5 rows with each row having a fraction of the available space */
  grid-template-columns: repeat(3, 1fr); /* Sets the grid layout to have 3 columns with each column having a fraction of the available space */
  grid-gap: 10px; /* Adds a 10px gap between grid items */
}

header {
  grid-row: 1/2; /* Sets the header to span rows 1 to 2 */
  grid-column: 1/4; /* Sets the header to span columns 1 to 3 */
}

nav {
  grid-row: 2/6; /* Sets the nav to span rows 2 to 6, taking up the remaining vertical space */
  grid-column: 1/2; /* Sets the nav to span column 1 */
}

main {
  grid-row: 2/6; /* Sets the main content to span rows 2 to 6, taking up the remaining vertical space */
  grid-column: 2/4; /* Sets the main content to span columns 2 to 4, taking up the remaining horizontal space */
}

aside {
  grid-row: 2/6; /* Sets the aside to span rows 2 to 6, taking up the remaining vertical space */
  grid-column: 4/5; /* Sets the aside to span column 4 */
}

footer {
  grid-row: 6/7; /* Sets the footer to span row 6 */
  grid-column: 1/4; /* Sets the footer to span columns 1 to 3 */
}

/* The following code adds content to each grid item to demonstrate the layout */

header {
  background-color: #45A29E;
  color: #fff;
}

nav {
  background-color: #66FCF1;
  color: #000;
}

main {
  background-color: #F0A500;
  color: #000;
}

aside {
  background-color: #C5C6C7;
  color: #000;
}

footer {
  background-color: #41B3A3;
  color: #fff;
}
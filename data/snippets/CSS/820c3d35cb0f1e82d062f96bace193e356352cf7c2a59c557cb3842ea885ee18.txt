/* --- Code snippet in CSS --- */
/* This snippet creates a responsive grid layout for a web page */
/* --- Initialize CSS variables for columns, row gap, and column gap --- */
:root {
  --columns: 12;
  --row-gap: 1.5rem;
  --column-gap: 1.5rem;
}
/* --- Create a grid container --- */
.grid-container {
  display: grid;
  /* --- Set the grid to have 12 columns and auto rows --- */
  grid-template-columns: repeat(var(--columns), 1fr);
  grid-auto-rows: auto;
  /* --- Set the gap between rows and columns --- */
  grid-gap: var(--row-gap) var(--column-gap);
}
/* --- Set the width for each column based on screen size --- */
/* --- For screens smaller than 600px, create 1 column layout --- */
@media only screen and (max-width: 600px) {
  .grid-container {
    grid-template-columns: 1fr;
  }
}
/* --- For screens between 600px and 900px, create 2 column layout --- */
@media only screen and (min-width: 600px) and (max-width: 900px) {
  .grid-container {
    grid-template-columns: repeat(2, 1fr);
  }
}
/* --- For screens between 900px and 1200px, create 3 column layout --- */
@media only screen and (min-width: 900px) and (max-width: 1200px) {
  .grid-container {
    grid-template-columns: repeat(3, 1fr);
  }
}
/* --- For screens larger than 1200px, create 4 column layout --- */
@media only screen and (min-width: 1200px) {
  .grid-container {
    grid-template-columns: repeat(4, 1fr);
  }
}
/* --- Apply styles to grid items within the container --- */
.grid-item {
  /* --- Set the item to span across multiple columns based on class name --- */
  grid-column-start: span var(--col-span);
  /* --- Set the item to center horizontally and vertically --- */
  display: flex;
  justify-content: center;
  align-items: center;
  /* --- Apply some extra styling --- */
  background-color: #eaeaea;
  border: 2px solid #333;
  padding: 1rem;
}
/* --- Example of using the grid-item class to create a 2x2 grid --- */
.example-grid {
  /* --- Set the number of columns the item will span to 2 --- */
  --col-span: 2;
}
/* --- Use the grid-item class to create a 1x1 grid --- */
.single-item {
  /* --- Set the number of columns the item will span to 1 --- */
  --col-span: 1;
}
/* This is a complex code snippet that implements a responsive grid layout using CSS Grid */

/* Define grid container */
.grid-container {
  display: grid; /* Sets the display value to grid */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Makes columns responsive and auto-fits based on available space */
  grid-gap: 10px; /* Sets the gap between each grid item */
  max-width: 1000px; /* Sets maximum width for the grid */
  margin: 0 auto; /* Centers the grid on the page */
}

/* Define grid items */
.grid-item {
  background-color: #ccc; /* Sets background color for each grid item */
  height: 100px; /* Sets height for each grid item */
  border: 1px solid #000; /* Adds a border to each grid item */
  display: flex; /* Sets the display value to flex for each grid item */
  align-items: center; /* Aligns grid items vertically */
  justify-content: center; /* Aligns grid items horizontally */
}

/* Media query for responsive design */
@media only screen and (max-width: 600px) {
  .grid-container {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* Changes column width for smaller screens */
    grid-gap: 5px; /* Changes gap between grid items for smaller screens */
    max-width: 600px; /* Changes maximum width for smaller screens */
  }
}

/* Pseudo-class for hover effect on grid items */
.grid-item:hover {
  background-color: #999; /* Changes background color on hover */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.8); /* Adds a box shadow on hover */
  transform: scale(1.05); /* Increases size on hover */
}
/* This is a long, complex code snippet in CSS */
/* It demonstrates advanced techniques for creating a responsive grid layout */

/* Global styles */

* {
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  font-size: 16px;
  line-height: 1.4;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -20px;
}

.col {
  flex: 1;
  margin: 0 20px;
}

/* Responsive breakpoints */

@media (max-width: 768px) {
  .col {
    flex: 0 0 100%;
    margin: 0 0 20px;
  }
}

@media (min-width: 768px) and (max-width: 1200px) {
  .col {
    flex: 0 0 50%;
    margin: 0 0 20px;
  }
}

@media (min-width: 1200px) {
  .col {
    flex: 0 0 33.333%;
  }
}

/* Utility classes */

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

/* Usage example */

<div class="container">
  <div class="row">
    <div class="col col-sm-6 col-md-4 text-center">
      <p>Example column with text centered</p>
    </div>
    <div class="col col-sm-6 col-md-8 text-right">
      <p>Example column with text aligned to the right</p>
    </div>
  </div>
</div>
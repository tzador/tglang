/*
This is a complex code snippet in CSS that demonstrates how to create a responsive grid layout using the CSS Grid system
*/
.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* creates a grid with minimum column width of 200px and max of 1fr (fraction of remaining space) that automatically fits to container */
  grid-gap: 20px; /* sets the gap between grid items to 20px */
}

.item {
  grid-column: span 2; /* the item takes up 2 columns */
  grid-row: span 3; /* the item takes up 3 rows */
}

@media screen and (max-width: 768px) { /* media query for screens with max width of 768px to create a mobile version of the grid layout */
  .grid-container {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* update the column widths for the smaller screen size */
    grid-gap: 10px; /* update the gap size for smaller screen size */
  }
  .item {
    grid-column: span 1;
    grid-row: span 2;
  }
}
/* This is a complex code snippet in CSS that creates a responsive grid layout */

.grid-container {
  display: grid; /* sets the element to use grid display */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* sets the number of columns based on the width of the container */
  grid-gap: 20px; /* creates a gap between grid items */
  justify-content: center; /* centers the grid items horizontally */

  /* breakpoint for smaller screens */
  @media only screen and (max-width: 600px) {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* adjusts the number of columns for smaller screens */
    grid-gap: 10px; /* decreases the gap between grid items */
  }

  /* breakpoint for larger screens */
  @media only screen and (min-width: 1200px) {
    grid-template-columns: repeat(5, 1fr); /* sets the number of columns to 5 for larger screens */
    grid-gap: 30px; /* increases the gap between grid items */
  }

}

.grid-item {
  background-color: #e6e6e6; /* sets a light gray background for grid items */
  text-align: center; /* centers the text inside grid items */
  padding: 20px; /* adds 20px of padding around the grid items */
  border: 1px solid #999; /* adds a thin border around grid items */
}
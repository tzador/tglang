/* This code snippet creates a responsive grid layout using CSS flexbox */

.container {
  width: 100%; /* sets the width of the container to 100% of the parent element */
  display: flex; /* sets the display of the container to flex */
  flex-wrap: wrap; /* allows the items within the container to wrap if they exceed the width */
}

.item {
  flex: 1 1 200px; /* sets the initial size, flex grow, and flex shrink of the item, with a minimum width of 200px */
  margin: 10px; /* adds 10px of margin to all sides of the item */
}

@media only screen and (max-width: 600px) {
  .item {
    flex: 1 1 100%; /* sets the initial size, flex grow, and flex shrink of the item to 100% when the screen width is 600px or less */
    margin: 20px; /* adds 20px of margin to all sides of the item */
  }
}

/* Using CSS flexbox allows for a responsive grid layout without the need for fixed widths or floats */
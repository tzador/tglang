/* This is a complex CSS code snippet that creates a responsive grid layout */

.container{
  display: grid; /* sets container as a grid */
  grid-template-columns: repeat(3, 1fr); /* creates 3 equally sized columns */
  grid-auto-rows: minmax(100px, auto); /* sets the row height to be as small as 100px and expand as necessary */
  grid-column-gap: 1rem; /* sets the gap between columns to be 1rem */
}

.item{
  grid-column: span 2; /* spans the item across 2 columns */
  grid-row: span 3; /* spans the item across 3 rows */
  text-align: center; /* centers the text within the grid item */
  background-color: #F2F2F2; /* sets background color to light grey */
  border: 1px solid #333333; /* adds a border to the grid item */
}

@media only screen and (max-width: 768px) {
  .container{
    grid-template-columns: repeat(2, 1fr); /* changes the grid to only 2 columns on smaller screens */
  }

  .item{
    grid-column: span 1; /* spans the item across one column on smaller screens */
    grid-row: span 2; /* spans the item across 2 rows on smaller screens */
  }
}

@media only screen and (max-width: 480px) {
  .container{
    grid-template-columns: 1fr; /* changes the grid to a single column on even smaller screens */
  }

  .item{
    grid-column: span 1; /* spans the item across one column on even smaller screens */
    grid-row: span 1; /* spans the item across one row on even smaller screens */
  }
}
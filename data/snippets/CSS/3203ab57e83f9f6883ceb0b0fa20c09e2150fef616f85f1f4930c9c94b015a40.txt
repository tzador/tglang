/* This is a complex code snippet that demonstrates how to create a responsive navigation bar using CSS flexbox. */

nav { /* Selects all <nav> elements */
  display: flex; /* Sets the display property to flex to allow for flexbox layout */
  justify-content: flex-start; /* Aligns items to the start of the flex container */
  align-items: center; /* Aligns items along the cross-axis (vertical axis) to the center */
  flex-wrap: wrap; /* Allows items to wrap to new rows/columns if there is not enough space */
  padding: 1rem; /* Adds 1 rem of padding to the navigation bar */
  background-color: #333; /* Sets the background color to dark gray */
}

.nav-link { /* Selects all <a> elements with the class .nav-link */
  color: #fff; /* Sets the text color to white */
  font-size: 1.2rem; /* Sets the font size to 1.2 rem */
  margin: 0 1rem; /* Adds 0 margin on top/bottom and 1 rem of margin on left/right */
  text-decoration: none; /* Removes any underlining on the text */
}

.nav-link:hover { /* Selects all .nav-link elements when the cursor hovers over them */
  color: #fbbe88; /* Changes the text color to a lighter gold */
}

@media (max-width: 600px) { /* Media query for screens with a maximum width of 600px */
  nav {
    flex-direction: column; /* Changes the flex layout to a column instead of a row */
  }

  .nav-link {
    margin-bottom: 1rem; /* Adds 1 rem of margin on the bottom instead of the left/right */
  }
}

@media (min-width: 601px) and (max-width: 900px) { /* Media query for screens with a minimum width of 601px and maximum of 900px */
  nav {
    justify-content: center; /* Aligns items to the center instead of the start */
  }
}

@media (min-width: 901px) { /* Media query for screens with a minimum width of 901px */
  .nav-link:last-child {
    margin-right: 2rem; /* Adds 2 rem of margin on the right for the last .nav-link element */
  }
}
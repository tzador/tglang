/* This is a complex and lengthy code snippet in CSS */ 
/* It includes mixins, functions, variables and media queries */

@mixin fancy-header { /* Creating a mixin to style headers */
  color: #ffcc00; /* Setting the font color to a bright yellow */
  font-size: 2rem; /* Setting the font size to 2 times the default */
  text-decoration: underline; /* Adding an underline to the text */
  font-weight: bold; /* Making the text bold */
}

$primary-color: #0088ff; /* Defining a variable for the primary color */

/* This is a function to calculate the lightness of a color */
@function calculateLightness($color) {
  @return (red($color) + green($color) + blue($color)) / 3; /* Calculates the lightness as the average of the RGB values */
}

/* Using the media rule to specify different styles for different screen sizes */
@media screen and (max-width: 600px) {
  body {
    background-color: #f5f5f5; /* Changing the background color for small screens */
  }
}

/* Another mixin to style buttons */
@mixin button {
  background-color: $primary-color; /* Using the primary color variable for the button background */
  font-size: 1.2rem; /* Setting the font size to 1.2 times the default */
  padding: 1rem 2rem; /* Adding padding to the button */
  border: 2px solid black; /* Adding a border to the button */
  border-radius: 5px; /* Adding rounded corners to the button */
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); /* Adding a subtle shadow to the button */
}

/* Applying the button mixin to a specific class */
.button {
  @include button; /* Using the @include directive to apply the mixin */
  text-transform: uppercase; /* Converting the text to uppercase with text-transform */
}

/* An example of a complex selector with multiple pseudo classes and elements */
a:link:not(:hover), input[type="checkbox"]::first-line {
  background-color: #fff; /* Setting a white background for links that are not hovered and the first line of checkbox labels */
  color: $primary-color; /* Using the primary color variable for the text color */
  text-decoration: none; /* Removing the default underline */
  transition: 0.3s ease-in-out; /* Adding a smooth transition effect */
}

/* An animation for loading indicators */
@keyframes loading {
  0% {
    transform: rotate(0deg); /* Start of the animation with no rotation */
  }
  50% {
    transform: rotate(360deg); /* Halfway through the animation with a 360 degree rotation */
  }
  100% {
    transform: rotate(0deg); /* End of the animation with no rotation */
  }
}

.loading-indicator {
  animation: loading 1s infinite; /* Applying the animation to an element with the class "loading-indicator" */
}
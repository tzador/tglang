/* This code snippet is a complex example of a responsive grid layout using CSS */
.container {
  display: grid; /* Set the element to display as a grid */
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Auto-fit columns with minimum width of 250px and maximum of 1fr */
  grid-auto-rows: 200px; /* Set the height of rows to 200px */
  gap: 20px; /* Space between grid items */
}

/* Styling for grid items */
.item {
  background-color: #3498db;
  color: #fff;
  padding: 30px;
  font-size: 18px;
  text-align: center;
  border-radius: 5px;
}

/* Media queries for responsive design */
@media only screen and (max-width: 768px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Smaller column width for smaller screens */
    grid-auto-rows: 150px; /* Smaller row height for smaller screens */
  }
}

@media only screen and (max-width: 480px) {
  .container {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* Even smaller column width for smallest screens */
  }
}
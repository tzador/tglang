/* This code snippet is an example of a complex CSS grid layout */

.container {
  display: grid; /* Sets the element as a CSS grid container */
  grid-template-columns: repeat(3, 1fr); /* Creates 3 equal columns */
  grid-template-rows: repeat(4, 1fr); /* Creates 4 equal rows */
  grid-gap: 20px; /* Adds a 20px gap between each grid item */
  grid-template-areas: /* Defines the placement of grid items in each row */
      "header header header"
      "sidebar content content"
      "sidebar content content"
      "footer footer footer";
}

.item {
  background-color: #eee; /* Sets the background color of grid items */
  display: flex; /* Allows for flex layout within grid items */
  align-items: center; /* Aligns items vertically in the center */
  justify-content: center; /* Aligns items horizontally in the center */
  font-size: 24px; /* Sets font size of text within grid items */
  text-align: center; /* Aligns text within grid items */
}

.header {
  grid-area: header; /* Places item in the "header" grid area */
}

.sidebar {
  grid-area: sidebar; /* Places item in the "sidebar" grid area */
}

.content {
  grid-area: content; /* Places item in the "content" grid area */
}

.footer {
  grid-area: footer; /* Places item in the "footer" grid area */
}
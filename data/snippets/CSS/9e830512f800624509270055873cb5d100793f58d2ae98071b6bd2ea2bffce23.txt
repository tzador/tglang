/* This is a complex code snippet in CSS */
/* It is used to create a responsive grid layout */

/* Define the number of columns and their respective widths */

.grid-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 20px;
}

/* Create a media query for small screens */

@media only screen and (max-width: 600px) {
  .grid-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Create a media query for medium screens */

@media only screen and (min-width: 601px) and (max-width: 900px) {
  .grid-container {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Create a media query for large screens */

@media only screen and (min-width: 901px) {
  .grid-container{
    grid-template-columns: repeat(4, 1fr);
  }
}

/* Set the width and margin for grid items */

.grid-item {
  width: 100%;
  margin: 10px;
}

/* Create a hover effect for grid items */

.grid-item:hover {
  transform: scale(1.05);
}

/* Add different background colors to grid items based on their order */

.grid-item:nth-child(1) {
  background-color: #ff5555;
}

.grid-item:nth-child(2) {
  background-color: #5555ff;
}

.grid-item:nth-child(3) {
  background-color: #55ff55;
}

.grid-item:nth-child(4) {
  background-color: #ff55ff;
}

/* Make the grid items align to the center */

.grid-item {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Add some basic styling to the grid items */

.grid-item {
  color: #fff;
  font-size: 18px;
  text-align: center;
}
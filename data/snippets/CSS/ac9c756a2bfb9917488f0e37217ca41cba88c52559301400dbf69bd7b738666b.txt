/* This is a CSS code snippet that demonstrates how to create a responsive grid layout */

/* Declare a container class to hold the grid elements */
.container {
  display: grid; /* Use CSS grid for layout */
  grid-template-columns: repeat(3, 1fr); /* Create 3 columns with equal width */
  grid-gap: 20px; /* Add space between grid elements */
  grid-auto-rows: minmax(100px, auto); /* Set minimum and maximum height for auto rows */
}

/* Declare a grid item class */
.item {
  background-color: #ccc; /* Add a background color to each grid item */
  text-align: center; /* Center align the content of each grid item */
}

/* Add responsive design using media queries for different screen sizes */

/* For screens larger than 768px */
@media (min-width: 768px) {
  .container {
    grid-template-columns: repeat(4, 1fr); /* Change to 4 columns for larger screens */
  }
}

/* For screens larger than 992px */
@media (min-width: 992px) {
  .container {
    grid-template-columns: repeat(6, 1fr); /* Change to 6 columns for even larger screens */
  }
}

/* For screens larger than 1200px */
@media (min-width: 1200px) {
  .container {
    grid-template-columns: repeat(8, 1fr); /* Change to 8 columns for the largest screens */
  }
}
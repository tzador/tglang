/* This is a code snippet showcasing a complex CSS layout with annotations */

/* First, we define the base styles for the page */
body {
  margin: 0;
  padding: 0;
}

/* Next, we set up a grid for the layout */
.container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(6, 1fr);
  grid-gap: 1em;
}

/* The header section takes up 2 columns */
.header {
  grid-column: 1 / 3;
  grid-row: 1 / 2;
}

/* The main content section takes up 8 columns and spans 4 rows */
.content {
  grid-column: 3 / 11;
  grid-row: 2 / 6;
}

/* The sidebar section takes up 2 columns and spans 3 rows */
.sidebar {
  grid-column: 11 / 13;
  grid-row: 2 / 5;
}

/* The footer section takes up the full width and spans 1 row */
.footer {
  grid-column: 1 / 13;
  grid-row: 6 / 7;
}

/* Inside the main content section, we can also use a grid for further layout */
.content-item {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-gap: 1em;
}

/* Each item within the content grid takes up 1 column and 1 row */
.content-item__item {
  grid-column: span 1;
  grid-row: span 1;
}

/* We can also use flexbox within the content grid for more dynamic content */
.content-item__item--flex {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Finally, we add some styles to make the layout responsive on smaller screens */
@media only screen and (max-width: 768px) {
  .container {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(12, 1fr);
  }
  
  /* We rearrange the elements to stack on top of each other */
  .header {
    grid-column: 1 / 7;
    grid-row: 1 / 2;
  }
  
  .content {
    grid-column: 1 / 7;
    grid-row: 2 / 6;
  }
  
  .sidebar {
    grid-column: 1 / 7;
    grid-row: 6 / 8;
  }
  
  .footer {
    grid-column: 1 / 7;
    grid-row: 8 / 9;
  }
  
  /* We also adjust the dimensions of the content-items and center them on the smaller grid */
  .content-item {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(6, 1fr);
  }
  
  .content-item__item {
    grid-column: span 1;
    grid-row: span 2;
  }
  
  .content-item__item--flex {
    justify-content: flex-start;
  }
}
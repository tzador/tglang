/* This is a complex code snippet in CSS demonstrating a nested media query. */

/* The first media query applies styles when the screen width is smaller than 600px */

@media only screen and (max-width: 600px) {
  /* Styles for elements with the class name 'container' */
  .container {
    width: 80%; /* Set the width to 80% of the parent element */
    margin: 0 auto; /* Center the element on the page */
    display: flex; /* Enable flexbox layout */
    flex-wrap: wrap; /* Allow the elements inside to wrap */
  }

  /* Styles for elements with the class name 'box' */
  .box {
    width: 100%; /* Set the width to 100% of the parent element */
    margin: 10px 0; /* Add some vertical spacing for each box */
    flex: 1 0 calc(50% - 20px); /* Set the flex properties to create a 2-column layout */
    /* The second value (0) prevents the boxes from shrinking, and the third value (calc(50% - 20px)) sets the calculated width for each box with 20px margin on each side */
  }
}

/* The second media query applies styles when the screen width is between 600px and 1200px */

@media only screen and (min-width: 600px) and (max-width: 1200px) {
  /* Styles for elements with the class name 'container' remain the same */

  /* Styles for elements with the class name 'box' change to create a 3-column layout */
  .box {
    flex: 1 0 calc(33.33% - 20px); /* Set the flex properties to create a 3-column layout */
  }

  /* Styles for the element with the ID 'special-box' - this box will have a fixed width of 300px */
  #special-box {
    width: 300px;
    margin: 0 auto; /* Center the element on the page */
  }
}

/* Styles for elements with the class name 'title' */
.title {
  font-size: 1.5em; /* Increase the font size for better readability on smaller screens */
}
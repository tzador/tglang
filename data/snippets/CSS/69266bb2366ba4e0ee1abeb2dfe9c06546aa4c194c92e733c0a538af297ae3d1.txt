/* This is a complex CSS code snippet that implements a responsive grid layout */
.container {
  display: grid; /* Set the container element to be a grid container */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Set the columns to have a minimum width of 200px and adjust automatically based on available space */
  grid-gap: 20px; /* Add a gap of 20px between grid items */
  grid-auto-rows: minmax(100px, auto); /* Set the row height to be a minimum of 100px and adjust automatically based on content */
}

.item {
  grid-column: span 2; /* Each item will span 2 columns */
  grid-row: span 3; /* Each item will span 3 rows */
}

@media (max-width: 768px) {
  .item {
    grid-column: span 1; /* Each item will span 1 column on screens smaller than 768px */
    grid-row: span 1; /* Each item will span 1 row on screens smaller than 768px */
  }
}

/* Add a hover effect on grid items */
.item:hover {
  transform: scale(1.1); /* Scale the item by 10% on hover */
  box-shadow: 0 0 10px rgba(0,0,0,0.2); /* Add a subtle shadow effect */
}
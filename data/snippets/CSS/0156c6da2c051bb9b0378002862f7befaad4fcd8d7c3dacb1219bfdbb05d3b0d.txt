/* This is a complex code snippet that uses the
 * CSS grid layout to create a responsive design. 
 */

.container {
  display: grid; /* Uses grid layout */
  grid-template-columns: repeat(3, 1fr); /* Creates 3 columns with equal width */
  grid-template-rows: 50vh minmax(25rem, 1fr) 25vh; /* Creates 3 rows with different heights */
  grid-template-areas:
    "header header header" /* Places header element in all columns of first row */
    "main main sidebar" /* Places main element in first 2 columns of second row and sidebar in last column */
    "footer footer footer"; /* Places footer element in all columns of third row */
}

.header {
  grid-area: header; /* Assigns this element to the grid area 'header' */
}

.main {
  grid-area: main; /* Assigns this element to the grid area 'main' */
}

.sidebar {
  grid-area: sidebar; /* Assigns this element to the grid area 'sidebar' */
}

.footer {
  grid-area: footer; /* Assigns this element to the grid area 'footer' */
}

@media only screen and (max-width: 768px) {
  .container {
    grid-template-columns: 1fr; /* Changes to a single column layout on smaller screens */
    grid-template-rows: minmax(25rem, 1fr) 25vh minmax(6rem, 1fr); /* Adjusts row heights */
    grid-template-areas:
      "header"
      "main"
      "sidebar"
      "footer"; /* Places each element in its own row */
  }
}
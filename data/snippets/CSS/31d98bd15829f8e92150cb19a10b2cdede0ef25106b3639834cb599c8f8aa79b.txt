/* 
This code snippet is a complex CSS grid layout with multiple media queries for responsive design
*/

/* Define a CSS grid layout with 6 columns and 8 rows */
.grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(8, 1fr);
  grid-gap: 1rem;
}

/* Define grid items and their placement on the grid */
.item {
  grid-column: span 3; /* items span 3 columns */
  grid-row: span 4; /* items span 4 rows */
} 

/* Media queries for responsive design */
@media screen and (max-width: 1024px) {
  .grid {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(6, 1fr);
  }
  .item {
    grid-column: span 2;
    grid-row: span 3;
  }
}

@media screen and (max-width: 768px) {
  .grid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(5, 1fr);
  }
  .item {
    grid-column: span 1;
    grid-row: span 3;
  }
}

@media screen and (max-width: 480px) {
  .grid {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }
  .item {
    grid-column: span 1;
    grid-row: span 2;
  }
}
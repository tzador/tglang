/* This is a complex code snippet for creating a responsive grid layout in CSS */

/* Create a grid container */
.grid-container {
  display: grid; /* Using the "grid" value ensures that our container becomes a grid */
  grid-template-columns: repeat(3, minmax(100px, 1fr)); /* Sets the number of columns and their widths */
  grid-gap: 10px; /* Creates a 10px gap between each grid item */
}

/* Create a grid item */
.grid-item {
  grid-column: span 1; /* Specifies the number of columns the item spans across */
  grid-row: span 2; /* Specifies the number of rows the item spans across */
  background-color: #cccccc; /* Sets a background color to differentiate each item */
}

/* Apply responsive design for smaller screen sizes */
@media only screen and (max-width: 600px) {
  .grid-container {
    grid-template-columns: repeat(2, minmax(100px, 1fr)); /* Reduce the number of columns to 2 */
    grid-gap: 5px; /* Reduce the gap between items to 5px */
  }
  .grid-item {
    grid-column: span 2; /* Make each item span 2 columns */
    grid-row: span 1; /* Make each item span only 1 row */
  }
}

/* Add special styling to the first grid item */
.grid-item:first-child {
  background-color: #ff0000; /* Make the background color red */
  color: #ffffff; /* Make the font color white */
  font-size: 20px; /* Enlarge the font size to make it stand out */
  text-align: center; /* Align the text to the center */
  padding: 10px; /* Add some padding to the item */
}
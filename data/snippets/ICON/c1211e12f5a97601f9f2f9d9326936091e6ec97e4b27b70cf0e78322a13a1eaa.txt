# Setting up a command to display a welcome message
procedure welcome()
    area "Welcome Message" {
        message = "Welcome to my program!"  # The welcome message to be displayed
        output(message)  # Outputs the message to the screen
    }
end

# Defining a function to calculate the factorial of a number
procedure factorial(n)
    if n = 0 then  # Base case
        return 1
    else
        return n * factorial(n - 1)  # Recursion to calculate the factorial
    end
end

# Defining a loop to print a countdown from 10 to 1
loop
    i := 10  # Starting value of i
    while i > 0 do  # Loop condition
        output(i)  # Outputs the current value of i
        i := i - 1  # Decrements i by 1
    end
end

# Creating a record to store student information
record Student {
    name: string,  # Student's name
    age: int,  # Student's age
    course: string,  # Student's course
    gpa: float,  # Student's grade point average
    status: string  # Student's academic standing
}

# Initializing a list of students
students = [Student{ "John", 20, "Computer Science", 3.5, "Good"}, Student{ "Sarah", 21, "Business Administration", 3.2, "Satisfactory"}, Student{ "Mike", 19, "Engineering", 3.6, "Excellent"}]

# Sorting the list of students based on their GPA in descending order
procedure sort(students)
    for i := 0 to students.length - 1 do  # Loop through the list
        for j := i + 1 to students.length do
            if students[i].gpa < students[j].gpa then  # Compare GPAs
                # Swap students if one has a higher GPA than the other
                temp := students[i]
                students[i] := students[j]
                students[j] := temp
            end
        end
    end
end

# Calling the functions and procedures to execute the program
welcome()  # Displays the welcome message
factorial(5)  # Calculates the factorial of 5 (120)
sort(students)  # Sorts the list of students based on their GPA

# Outputting the sorted list of students
output("Student List:")
output("| Name             | Age | Course                  | GPA | Status       |")
output("|------------------|-----|-------------------------|-----|--------------|")
for i := 0 to students.length do
    # Formatting the output for each student
    output("| " + students[i].name + "           | " + students[i].age + "   | " + students[i].course + "     | " + students[i].gpa + " | " + students[i].status + " |")
end
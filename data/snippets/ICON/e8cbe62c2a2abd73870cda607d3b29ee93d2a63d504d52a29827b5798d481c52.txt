' Program to generate first 1000 prime numbers using Sieve of Eratosthenes algorithm 

# Define a procedure to check if a given number is prime 
procedure prime_check(n)
    primes := 0  # variable to store number of prime factors
    for i := 2 to n do
        if n mod i = 0 then # check if number is divisible by i
            primes := primes + 1  # update count of prime factors
    if primes = 1 then # if only one prime factor, number is prime
        return true
    return false

# Create an array to store prime numbers 
primes := array(1000)

# Initialize array elements to 1 (i.e. all numbers are considered prime initially)
for i := 2 to 999 do
    primes[i] := 1

# Loop through numbers from 2 to square root of 1000 (threshold for Sieve of Eratosthenes)
for i := 2 to sqrt(1000) do
    if primes[i] = 1 then # if number is prime
        for j := i*i to 999 step i do # mark all multiples of i as non-prime
            primes[j] := 0

# Print all prime numbers from the prime array
for i := 2 to 999 do
    if primes[i] = 1 then # if number is marked as prime
        print(i)
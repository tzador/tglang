procedure find_prime_numbers()
{
    # create an array of numbers to check
    nums := [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
    # initialize a result array to store prime numbers
    result := [];

    # loop through the array of numbers
    for i in nums do {
        # initialize a flag to check for prime numbers
        flag := true;

        # loop through numbers from 2 to the current number
        for j in 2..$(i-1) do {
            # check if the current number is divisible by any number other than 1 or itself
            if ((i % j) == 0) {
                # if it is, set the flag to false and break out of the loop
                flag := false;
                break;
            }
        }

        # if the flag is still true, the number is prime
        if flag {
            # append it to the result array
            result := [result, i];
        }
    }

    # print out the list of prime numbers
    write(result);
}
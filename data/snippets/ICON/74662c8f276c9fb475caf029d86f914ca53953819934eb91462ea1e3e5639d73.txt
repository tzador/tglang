[define] hex : procedure (num)  /* create procedure to convert decimal number to hexadecimal */

[
    let p := num  /* assign input number to variable p */
    let hex := ""  /* initialize an empty string for the hexadecimal number */
    let digits := ['a', 'b', 'c', 'd', 'e', 'f']  /* create a list of hexadecimal digits */

    while p > 0 do [
        let rem := p mod 16  /* get remainder when p is divided by 16 */
        if rem > 9 then [
            let hex := digits[rem-10] || hex  /* concatenate hexadecimal digit to the front of hex string */
        ] else [
            let hex := rem || hex  /* concatenate decimal digit to the front of hex string */
        ]
        let p := p div 16  /* update p to be the result of integer division of p by 16 */
    ]

    return hex /* return the hexadecimal number */
]

[display] hex(255) /* call the procedure and display the result */
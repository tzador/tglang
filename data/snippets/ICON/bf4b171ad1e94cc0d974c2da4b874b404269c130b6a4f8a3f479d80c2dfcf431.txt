procedure myArrayFunction(array)
⍝ this procedure takes in an array as input and performs operations on it
⍝ such as sorting, searching, and modifying elements
⍝ Inputs:
⍝     array - the input array to be manipulated
⍝ Outputs:
⍝     array - the manipulated array
;
myArrayFunction := proc{
    local i, j, temp

    ⍝ sort the array using insertion sort algorithm
    for i := 2 to ⍴array do {
        temp := array[i]
        j := i - 1

        while j > 0 and array[j] > temp do {
            array[j+1] := array[j]
            j := j - 1
        }

        array[j+1] := temp
    }

    ⍝ search for a specific element and return its index
    local searchIndex := 0
    for i := 1 to ⍴array do {
        if array[i] = 5 then searchIndex := i
    }

    ⍝ modify elements in the array based on some conditions
    for i := 1 to ⍴array do {
        if array[i] > 10 then array[i] := array[i] * 2
    }

    ⍝ return the manipulated array
    return array
}

⍝ example usage of the procedure
myArray := [9, 3, 12, 7, 5, 1, 4]
myArray := myArrayFunction(myArray)
⍝ output: [1, 3, 4, 5, 7, 12, 18]
; Program to find the longest palindrome
; in a given string
;
; Initialize variables
longest_palindrome := ""
input_string := "racecar"

; Loop through each letter in the string
FOR i := 0 TO SIZE(input_string) - 1
    ; Check for odd-length palindromes
    sub_length := 1
    WHILE i - sub_length >= 0 AND i + sub_length < SIZE(input_string)
        IF input_string[i - sub_length] = input_string[i + sub_length] THEN
            sub_length := sub_length + 1
        ELSE
            BREAK  ; Exit the loop if the letters don't match
        END IF
    END WHILE
    
    ; Check if the current palindrome is longer than the current longest one
    IF SIZE(longest_palindrome) < sub_length * 2 - 1 THEN
        longest_palindrome := SUB(input_string, i - sub_length + 1, sub_length * 2 - 1)
    END IF
    
    ; Check for even-length palindromes
    sub_length := 0
    WHILE i - sub_length >= 0 AND i + sub_length + 1 < SIZE(input_string)
        IF input_string[i - sub_length] = input_string[i + sub_length + 1] THEN
            sub_length := sub_length + 1
        ELSE
            BREAK ; Exit the loop if the letters don't match
        END IF
    END WHILE
    
    ; Check if the current palindrome is longer than the current longest one
    IF SIZE(longest_palindrome) < sub_length * 2 THEN
        longest_palindrome := SUB(input_string, i - sub_length + 1, sub_length * 2)
    END IF
END FOR

; Print the longest palindrome
PRINT(longest_palindrome)
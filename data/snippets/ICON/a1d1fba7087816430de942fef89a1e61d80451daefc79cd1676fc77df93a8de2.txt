;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This code snippet is written in ICON ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; // This is a comment in ICON

procedure triple(first, second, third)              // Create a procedure named "triple"
do
  result := [first, second, third]                   // Create a variable "result" and set it to an array with the "first", "second", and "third" parameters
end

function factorial(n)                               // Create a function named "factorial" with one parameter "n"
do
  return (n <= 1):: 1                               // Return 1 if "n" is less than or equal to 1
  return n * factorial(n - 1)                       // Otherwise return "n" times the factorial of "n-1"
end

record Person                                       // Create a record type named "Person"
  name: string                                      // Add a field "name" which is a string
  age: int                                          // Add another field "age" which is an integer
end

program main                                       // Start the program named "main"
do
  message("Hello, world!")                         // Print out "Hello, world!" to the console
  x := 5                                            // Create a variable "x" and set it to 5
  y := [1, 2, 3]                                    // Create a variable "y" and set it to an array with the values 1, 2, and 3
  z := 7                                            // Create a variable "z" and set it to 7
  call triple(x, y, z)                              // Call the procedure "triple" passing in the variables x, y, and z
  result := factorial(z)                            // Call the function "factorial" passing in the variable z and set the result to "result"
  person := Person(name: "John", age: 25)           // Create a variable "person" of type "Person" with the name "John" and age "25"
  output person                                     // Print out the "person" variable
end
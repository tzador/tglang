; Comments will be ignored in ICON
procedure quicksort(a,r,x,n)     ; x is the pivor element, n is the number of elements to sort
a := vector(n)          ; initialize a vector with n elements
partition(a,r,x) :=       ; partition the vector into two sub-vectors
  while r <= n do
    while a[r] < x do
      r := r + 1
    while a[n] > x do
      n := n - 1
    if r <= n then        ; swap elements if they are in wrong sub-vectors
      temp := a[r]
      a[r] := a[n]
      a[n] := temp
      r := r + 1
      n := n - 1
  if r < n then          ; recursively sort left and right sub-vectors
    quicksort(a,r,a[r],n)
    quicksort(a,r+1,x,n+1)
  return a

sort := procedure(v)      ; wrapper function for quicksort
  quicksort(v,1,v[1],count(v))
  
vector := procedure(n)     ; generate a vector of random integers
  v := vector(n)           ; initialize vector with length n
  for i := 1 to n do
    v[i] := rand(-1000,1000)    ; randomly generate integers between -1000 and 1000
  return v

result := sort(vector(20))      ; sort a vector of 20 elements
print(result)             ; output sorted vector
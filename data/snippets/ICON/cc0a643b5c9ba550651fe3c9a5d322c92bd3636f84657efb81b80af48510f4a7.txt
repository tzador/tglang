/*
  This code snippet shows how to implement a bubble sort algorithm in ICON language.
  It takes in an unsorted list of integers and outputs a sorted list.
*/

procedure bubble_sort(list)
{
  bubble_sort_done := 0  /* boolean to check if sorting is done */
  
  /* keep sorting until no more swaps are required */
  while bubble_sort_done != 1 do
  {
    bubble_sort_done := 1  /* set boolean to true */
    for i := 1 to len(list)-1 do  /* loop through list of integers */
    {
      /* check if current number is smaller than next number */
      if list[i] > list[i+1] then
      {
        temp := list[i]  /* save current number in temp variable */
        list[i] := list[i+1]  /* replace current number with next number */
        list[i+1] := temp  /* replace next number with temp variable value */
        bubble_sort_done := 0  /* set boolean to false, indicating sorting is not yet finished */
      }
    }
  }
  
  return list  /* return sorted list */
}

/* example usage of bubble_sort procedure */
unsorted_list := [5, 3, 9, 1, 4]  /* initialize unsorted list of integers */
sorted_list := bubble_sort(unsorted_list)  /* call bubble_sort procedure to sort the list */
print(sorted_list)  /* output the sorted list */
procedure findPrimeNumbers {
|
L first ; first := 1 // initialize first number
L second ; second := 2 // initialize second number
L limit ; limit := 100 // define limit to search for primes

while first <= limit {
  L isPrime ; isPrime := 1 // assume first number is prime
  L counter ; counter := 2 // start checking from second number

  while counter < first {
    L remainder ; remainder := first % counter
    if remainder = 0 {
      isPrime := 0 // first number is not prime
      break // break the loop, no need to continue checking
    }
    counter := counter + 1 // increment counter
  }

  if isPrime = 1 {
    write(first) // print out prime number if it is prime
  }

  first := first + 1 // increment first number
}
}
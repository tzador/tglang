procedure InsertSort(list)
# This procedure implements the Insertion Sort algorithm on a list

{
    local i := 1 # index for sorted section
    local j # index for unsorted section
    local key # element to be inserted into sorted section
    
    while i < length(list) do
    {
        key := list[i + 1] # set key to the first unsorted element
        j := i # start at end of sorted section
        
        while j > 0 and list[j] > key do # while we haven't reached the beginning of the list and the key is less than the current element
        {
            list[j + 1] := list[j] # shift the element over one position in the list
            j := j -1 # decrement j to continue searching for correct position for key
        }
        
        list[j + 1] := key # insert key into correct position in the sorted section
        i := i + 1 # increment i to move onto next element in unsorted section
    }
    
    return list # return the sorted list
}
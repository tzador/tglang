# code to find prime numbers between 1 and 100
procedure main()
local array sieve[100] # array to hold prime values
local integer count # counter for number of prime numbers found
local integer index # loop index
local integer number # current number being checked
local integer root # square root of the current number being checked
count := 0 # initialize counter
number := 2 # starts at 2 since 1 is not prime
while number < = 100 do # loop through numbers 2 to 100
    root := sqrt(number) # calculate square root of current number
    index := 0
    while index < count && sieve[index] <= root do # loop through existing prime numbers
        if number mod sieve[index] = 0 then # check if the current number is divisible
            break # if divisible, it is not a prime number
        end
        index := index + 1 # increment loop index
    repeat while
    if index = count then # if index equals count, then the current number is prime
        sieve[count] := number # add prime number to array
        count := count + 1 # increment counter
    end
    number := number + 1 # increment current number
repeat while
# print out prime numbers
print("Prime numbers between 1 and 100:")
for i in 0 to count do # loop through prime numbers in array
    print(sieve[i]) # print out each prime number
end
end
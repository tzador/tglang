procedure BubbleSort(a[])
;;; This procedure implements the bubble sort algorithm to sort an array of numbers in ascending order. 

;;; Initialization
let finished := FALSE
let n := length(a)
let i := 0
let j := 0

;;; Main Loop
repeat until finished
    ;;; reset 'finished' indicator for each iteration
    let finished := TRUE

    ;;; Bubble through elements in the array
    for i := 0 to n - 2 do
        if a[i] > a[i + 1] then
            ;;; swap elements if they are out of order
            let temp := a[i]
            let a[i] := a[i + 1]
            let a[i + 1] := temp

            ;;; indicate that a swap has occurred
            let finished := FALSE

    ;;; Update 'n' to only bubble through unsorted elements
    let n := n - 1

end loop
procedure main()  # main procedure that initiates the program
    # initialization
    integer msgnum            # variable to store message number
    integer result            # variable to store computation result
    integer array values[10]  # an array of size 10 to store values

    call promptMessage        # call promptMessage procedure to prompt user for input

    if result < 0 then        # check if result is less than 0
        display "Invalid result"  # display error message
    else                      # if result is greater than or equal to 0
        for i in range(10) do   # use for loop to iterate through values in array
            values[i] := result + i  # perform computation and assign to array element
        endfor
    endif                     # end of if statement

    msgnum := call displayMessage("Result: " || result)  # pass concatenated string as argument and assign msg number

    call displaySum(msgnum, values)  # call displaySum procedure and pass msgnum and array as arguments
end                          # end of main procedure

procedure promptMessage()  # procedure to prompt user for input
    string input  # variable to store user input

    display "Enter a number: " # display prompt message
    input := call getInput()   # call getInput procedure to get user input and assign to input variable
    result := input           # assign user input to the result variable
end                      # end of promptMessage procedure

procedure getInput()  # procedure to get user input
    integer input  # variable to store user input

    read input  # read user input from keyboard
    return input # return the user input to the calling procedure
end                      # end of getInput procedure

procedure displayMessage(str)  # procedure to display a message to the user
    integer msgnum   # variable to store the message number

    msgnum := display str  # display the message and assign the message number
    return msgnum    # return the message number to the calling procedure
end                      # end of displayMessage procedure

procedure displaySum(msgnum, arr)  # procedure to display the sum of array elements
    integer sum   # variable to store the sum of array elements

    for v in arr do   # use for loop to iterate through array elements
        sum := sum + v   # add each array element to the sum
    endfor

    msgnum := display "The sum of the array elements is: " || sum  # display the sum message and assign the message number
    return msgnum   # return the message number to the calling procedure
end                      # end of displaySum procedure
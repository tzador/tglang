procedure BLOWUP (whale)    # Defines a procedure called BLOWUP which takes in a parameter called 'whale'
  Integer blowup_size       # Declares a variable of type Integer called 'blowup_size'
  ::WHILE (blowup_size <= whale)   # Start of a while loop, condition is that 'blowup_size' is less than or equal to 'whale'
    blowup_size := blowup_size * 2  # Updates the value of 'blowup_size' by multiplying it by 2
  ::END                           # End of while loop
  ::IF (blowup_size > whale)      # Start of an if statement, checks if 'blowup_size' is greater than 'whale'
    writeln(blowup_size, "is too big for this whale!")  # Outputs the value of 'blowup_size' and a string, abbr. as "writeln" in ICON
  ::ELSEIF (blowup_size < 100)    # Checks if 'blowup_size' is less than 100
    writeln(blowup_size, "is still too small.")        # Outputs the value of 'blowup_size' and a string
  ::ELSE                           # If none of the previous conditions are met, execute the following:
    FOR (i := 1 FOR blowup_size)   # Start of a for loop, initializes a variable 'i' to 1 and sets the loop count to 'blowup_size'
      writeln("BOOM!")            # Outputs a string
    ::END                         # End of for loop
  ::END                           # End of if statement
::END                             # End of procedure BLOWUP
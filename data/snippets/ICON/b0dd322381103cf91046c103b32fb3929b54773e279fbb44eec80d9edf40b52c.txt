procedure Sort(array)   # procedure to sort an array
push1 := 1;             # initialize variables
push2 := length(array) - 1;
while (push1 <= push2) do {
    swapped := false;   # boolean flag to indicate if elements have been swapped
    i := push1;
    loop (i < push2){   # loop through all elements
        if (array[i] > array[i + 1]){   # compare current element with next element
            temp := array[i];
            array[i] := array[i + 1];   # if current element is greater, swap with next element
            array[i + 1] := temp;
            swapped := true;            # indicate that elements have been swapped
        }
        i := i + 1;         # increment counter
    }
    if (swapped = false){   # if no elements were swapped, then array is sorted
        break;              # exit while loop
    }
    push2 := push2 - 1;    # decrement push2 to reduce the range for next iteration
}
return array;            # return sorted array
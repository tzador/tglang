procedure insert (key, data)
;**
  This procedure inserts the given key and data into the data structure.
  It ensures that the key is unique in the structure.
  @param key Pointer to the key to be inserted
  @param data Data to be inserted
*;
    store (key, data)
end
;**
  Displays the data for the given key.
  @param key Pointer to the key for which data needs to be displayed
*;
procedure display (key)
    local rslt
    search (key, rslt)
    if rslt then
        display (rslt)
    end
end
;**
  Searches for the given key in the data structure.
  @param key Pointer to the key to be searched
  @param res Pointer to the result
  @return true if key is found, false if not found
*;
procedure search (key, res)
    local found
    found := false
    local iterator
    iterator := first ()
    while iterator do
        if iterator.key = key then
            res := iterator.data
            found := true
            return true
        end
        iterator := next (iterator)
    end
    if not found then
        res := null
        return false
    end
end
;**
  Deletes the data for the given key.
  @param key Pointer to the key for which data needs to be deleted
*;
procedure delete (key)
    local rslt
    search (key, rslt)
    if rslt then
        delete (key)
    end
end
;**
  Returns the first iterator of the data structure.
  @return Pointer to the first iterator
*;
procedure first ()
    local iterator := null
    sort()
    while (iterator = null or iterator.delete = true)
        if (iterator = null)
            iterator := root
        else
            iterator := iterator.next()
        end
    end
    return iterator
end
;**
  Returns the next iterator in the data structure.
  @param curr Pointer to the current iterator
  @return Pointer to the next iterator
*;
procedure next (curr)
    local iterator := curr.next()
    while iterator do
        if iterator.delete = false then
            return iterator
        end
        iterator := iterator.next()
    end
    return null
end
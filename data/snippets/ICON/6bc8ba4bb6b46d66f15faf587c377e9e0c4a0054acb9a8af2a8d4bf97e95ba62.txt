PROCEDURE sort (array)
   VAR k
   VAR size = GETSIZE(array)
   WHILE k < size - 1
       FOR i = 0 TO size - k - 1
           IF array[i] > array[i + 1] THEN
               CALL swap(array[i], array[i + 1])
           FI
       LOOP
       k++
   LOOP
END

PROCEDURE swap (a, b)
   VAR temp = a
   a = b
   b = temp
END

PROCEDURE binarySearch (array, target)
   VAR low = 0
   VAR high = GETSIZE(array) - 1
   WHILE low <= high
       VAR mid = low + (high - low) / 2
       IF array[mid] = target THEN
           RETURN mid
       FI
       IF array[mid] < target THEN
           low = mid + 1
       ELSE
           high = mid - 1
       FI
   LOOP
   RETURN -1 // if target is not found
END
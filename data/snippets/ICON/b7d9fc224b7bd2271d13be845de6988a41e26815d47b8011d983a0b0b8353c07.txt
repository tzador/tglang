# Code for generating a fractal pattern in ICON language

# Defining variables for starting position and angle
start_x := 0
start_y := 0
angle := 0

# Function for drawing a line segment with specified length and angle
procedure line {
    # Calculating the end point coordinates
    end_x := start_x + length * cosine(angle)
    end_y := start_y + length * sine(angle)
    
    # Drawing the line using the 'draw' primitive
    draw(start_x, start_y, end_x, end_y)
    
    # Updating the starting position to the end point of the line
    start_x := end_x
    start_y := end_y
}

# Function for recursively drawing the fractal pattern
procedure fractal {
    # Checking for base case
    if length < 1 then {
        stop()  # Stopping the recursion, as the line becomes too small to be visible
    }
    
    # Drawing four line segments, each rotated by 90 degrees from the previous one
    line(length, angle)
    angle := angle + 90
    line(length, angle)
    angle := angle + 90
    line(length, angle)
    angle := angle + 90
    line(length, angle)
    
    # Recursively calling the fractal function, with a slightly shorter line length
    fractal(length - 1)
}

# Setting the starting length and angle, and calling the fractal function
length := 100
angle := 0
fractal(length)
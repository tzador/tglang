procedure FIBE(A);
begin
    integer n, m, i, j;
    integer seq[0:2^10], fib[0:2^10];
    m := 2^10;                  /* initialize size of sequence arrays */
    n := next(sym("Number to generate Fibonacci sequence: "));
                                /* prompt user for input */
    loop i:=0 until i = (n-1) do /* generate Fibonacci sequence */
        if i = 0 | i = 1 then    /* base case, populate first two elements of sequence array */
            seq[i] := i;
        else
            seq[i] := seq[i-1] + seq[i-2];
        fi;
    end;
    fib[0] := seq [n-1];        /* assign last element of sequence array to first fibonacci value */
    for j:=0 to n do            /* generate remaining fibonacci values */
        if j = 1 then
            fib[j] := 1;
        else
            fib[j] := fib[j-2] + fib[j-1];
        fi;
    end;
    write("The first " || n || " Fibonacci numbers are:\n"); /*output results to console*/
    for i:=0 to n do
        write(fib[i] || "\n");
    end;
endFIBE;
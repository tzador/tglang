procedure labirynth()
begin
    local integer x,y, exit_x, exit_y
    x := 1
    y := 1
    exit_x := 10
    exit_y := 10
    every repeat // loop that iterates until every square in the labyrinth is visited
        if visited(x,y) then // checks if current square has been visited before
            next
        end
        move(x,y) // moves to current square
        if at_exit(exit_x,exit_y) then // checks if current square is the exit
            every bar() // function that displays a celebratory message
        end
        // each direction is a wall or a path
        if has_wall(NORTH) then // checks if there is a wall to the NORTH
            label label_NORTH
        end
        if has_wall(EAST) then // checks if there is a wall to the EAST
            label label_EAST
        end
        if has_wall(SOUTH) then // checks if there is a wall to the SOUTH
            label label_SOUTH
        end
        if has_wall(WEST) then // checks if there is a wall to the WEST
            label label_WEST
        end
    end
end
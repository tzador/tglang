;This is a comment in ICON language
procedure merge_sort(numbers)  #This is a procedure called merge_sort that takes in an array of numbers
    if numbers < 2 then        #Checks if the array has less than 2 elements, if so then it's already sorted
        return numbers         #Returns the array as it is
    else
        mid = floor(length(numbers) / 2) #Calculates the midpoint of the array
        left = merge_sort(numbers[1:mid]) #Recursively calls merge_sort on the left half of the array
        right = merge_sort(numbers[mid+1:]) #Recursively calls merge_sort on the right half of the array
        return merge(left, right) #Calls the merge function on the sorted left and right halves
end

#This is the merge function that takes in two sorted arrays and merges them together in ascending order
procedure merge(left, right)
    result = array() #A new empty array to store the merged elements
    while length(left) > 0 and length(right) > 0  #Loop while both arrays still have elements
        if left[1] < right[1] then #If the first element of the left array is smaller than the first element of the right array
            insert(left[1], result) #Insert the first element of the left array into the result array
            left = left[2:] #Remove the first element of the left array
        else
            insert(right[1], result) #Insert the first element of the right array into the result array
            right = right[2:] #Remove the first element of the right array
    end
    #One of the arrays will be empty at this point, so we append the remaining elements of the non-empty array to the end of the result array
    if length(left) > 0 then
        append(left, result)
    else
        append(right, result)
    end
    return result #Returns the sorted merged array
end

#Example usage:
numbers = [8, 3, 6, 1, 4, 2, 7, 5] #An unsorted array of numbers
sorted_numbers = merge_sort(numbers) #Calls the merge_sort procedure on the unsorted array
print(sorted_numbers) #Prints the sorted array which should be [1, 2, 3, 4, 5, 6, 7, 8]
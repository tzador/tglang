procedure Main()
{
    
/* This is a comment */
    message("Welcome to my program!")         /* Prints a welcome message */

    /* Declare variables */
    b: integer                               /* A boolean variable */
    num: integer                             /* An integer variable */
    str: string                              /* A string variable */
    arr[10]: integer                         /* An integer array with size of 10 */
    
    /* Assign values to variables */
    b := TRUE                                /* Set b to true */
    num := 20                                /* Set num to 20 */
    str := "Hello World!"                    /* Set str to "Hello World!" */
    arr[0] := 5                              /* Set first element of arr to 5 */
    
    /* Print the values */
    message("b: " || b)                      /* Prints "b: true" */
    message("num: " || num)                  /* Prints "num: 20" */
    message("str: " || str)                  /* Prints "str: Hello World!" */
    message("arr[0]: " || arr[0])            /* Prints "arr[0]: 5" */
    
    /* Conditional statement */
    if b then                                /* If b is true */
    {
        message("The boolean variable b is true.")
    }
    else                                     /* If b is false */
    {
        message("The boolean variable b is false.")
    }
    
    /* For loop */
    for i:=1 to 10 do                        /* Loop from 1 to 10 */
    {
        message("Value of i: " || i)         /* Prints values from 1 to 10 */
    }
    
    /* While loop */
    while num > 0 do                         /* While num is greater than 0 */
    {
        message("Value of num: " || num)     /* Prints values of num decreasing from 20 to 1 */
        num := num - 1                       /* Decrement num by 1 */
    }
    
    /* Call a function */
    result := calculateSum(10, 20)           /* Calls the calculateSum function, passing in 10 and 20 */
    message("Result of calculateSum: " || result) /* Prints the result of the function call */
}

/* Function to calculate the sum of two numbers */
function calculateSum(a: integer, b: integer): integer
{
    sum := a + b                             /* Calculate the sum of the two numbers */
    return sum                               /* Return the sum */
}
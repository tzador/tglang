procedure create_dataset(dataset_name, dataset_values) # Creates a new dataset
   local index, value
   for index := 1 to length of dataset_values # Loop through each value in dataset_values
      value := dataset_values[index] # Assign current value to a variable
      call insert_value(dataset_name, value) # Call insert_value function to insert value into dataset
   end for
   return dataset_name # Return the name of the created dataset
end

procedure insert_value(dataset_name, value) # Inserts value into a dataset
   local dataset # Declare a local variable for dataset
   dataset := get_dataset(dataset_name) # Call get_dataset function to retrieve the dataset
   call add_value(dataset, value) # Call add_value function to add value to dataset
end

function get_dataset(dataset_name) # Retrieve a dataset given its name
   local dataset # Declare a local variable for dataset
   if dataset_name is in global datasets # Check if dataset exists in global datasets
      dataset := global datasets[dataset_name] # Assign dataset to global dataset with corresponding name
   else
      dataset := create_empty_dataset(dataset_name) # If dataset does not exist, call create_empty_dataset function
   end if
   return dataset # Return the retrieved or newly created dataset
end

procedure add_value(dataset, value) # Adds a value to a dataset
   dataset[length of dataset + 1] := value # Add the value to the end of the dataset
end

function create_empty_dataset(dataset_name) # Creates an empty dataset with given name
   local dataset # Declare a local variable for dataset
   dataset := new empty array # Create an empty array
   global datasets[dataset_name] := dataset # Add dataset to global datasets with corresponding name
   return dataset # Return the created dataset
end
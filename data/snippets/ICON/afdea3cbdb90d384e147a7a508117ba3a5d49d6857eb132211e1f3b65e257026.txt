/* This code snippet generates a sequence of prime numbers using the Sieve of Eratosthenes method */

procedure main()
{
    define prime_numbers: vector of integers
    define limit: integer
    define current: integer
    define composite: boolean

    /* Initialize prime numbers vector with numbers from 2 to limit */
    prime_numbers := [2]
    for i := 3 to limit step 2 do
        prime_numbers.append(i)

    /* Mark multiplications of prime numbers as composite */
    for i := 0 to prime_numbers.length-1 do
        current := prime_numbers[i]
        for j := current*current to limit step current do
            prime_numbers.remove(j)

    /* Print resulting prime numbers */
    for i := 0 to prime_numbers.length-1 do
        output prime_numbers[i]
}
/*
This code snippet is a simple program that uses the ICON programming language to
create an array of integers and perform various operations on it. It displays the
result of each operation as well as the final sorted array.

Print('"Hello World!"');
*/

PROC main()

  INTEGER array[10]; /* declare an array of size 10 */ 
  INTEGER i;

  FOR i := 1 TO 10 DO
    array[i] := i * 2; /* fill the array with values (2, 4, 6, ... , 20) */
  END

  CALL print_array(array); /* call function to print the array */

  CALL bubble_sort(array); /* call function to sort the array */

  CALL print_array(array); /* call function to print the sorted array */

END

/* 
  This function prints the contents of an array, each element on a new line.
  Parameters:
    - arr: the array to be printed
*/
PROC print_array(arr)
  INTEGER i;
  
  FOR i := 1 TO LENGTH(arr) DO /* iterate through the array */
    Print(arr[i]); /* print each element on a new line */
  END
  
END

/*
  This function uses the bubble sort algorithm to sort an array in ascending order.
  Parameters:
    - arr: the array to be sorted
*/
PROC bubble_sort(arr)
  INTEGER i, j;
  INTEGER temp;

  FOR i := 1 TO LENGTH(arr) - 1 DO /* iterate through the array */
    FOR j := 1 TO (LENGTH(arr) - i) DO /* compare adjacent elements and swap if necessary */
      IF arr[j] > arr[j+1] THEN
        temp := arr[j];
        arr[j] := arr[j+1];
        arr[j+1] := temp;
      END
    END
  END

END

/*
  Expected output:

  "Hello World!"
  [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
  [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
*/
; This code snippet creates a bank account list structure
; and adds and removes accounts from it
procedure CreateBankAccountList(bkList, newAcctNumber)
    let newAccount = createAccount(newAcctNumber)
    bnList[newAcctNumber] := newAccount
end

; Function that creates a new account with specified account number
procedure createAccount(acctNumber)
    return <newRecord>
        Number: acctNumber
        Balance: 0
    end
end

; Function that deposits an amount into specified account
procedure depositAmount(acctNumber, amount)
    bnList[acctNumber].Balance := bnList[acctNumber].Balance + amount
end

; Function that withdraws an amount from specified account
procedure withdrawAmount(acctNumber, amount)
    bnList[acctNumber].Balance := bnList[acctNumber].Balance - amount
end

; Function that removes an account from the bank account list
procedure removeAccount(acctNumber)
    delete bnList[acctNumber]
end

; Sample code to demonstrate usage of the bank account list
let bnList := {}
CreateBankAccountList(bnList, 12345)
CreateBankAccountList(bnList, 67890)
depositAmount(12345, 1000)
depositAmount(67890, 500)
withdrawAmount(12345, 500)
withdrawAmount(67890, 100)
removeAccount(12345)

; Output the balance of remaining account
print (bnList[67890].Balance)
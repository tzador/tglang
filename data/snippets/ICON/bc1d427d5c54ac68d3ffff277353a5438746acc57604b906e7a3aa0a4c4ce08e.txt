/* This code snippet is written in ICON, a high-level, general-purpose programming language. */

/* This function will calculate the nth Fibonacci number using recursive definition. */

procedure Fibonacci(n, first:=1, second:=1)
/* n is the nth Fibonacci number to be calculated, first and second are the starting values, default to 1. */
while n > 0 do {
    result := second
    second := first + second
    first := result
    n := n - 1
end

/* This function will print out the factorial of a given number. */

procedure Factorial(num)
/* num is the number to calculate the factorial for. */
if num < 0 then {
    return "Error, number must be non-negative"
}
else if num = 0 then {
    return 1
}
else {
    return num * Factorial(num - 1)
}

/* This function will check if a given number is even or odd. */

procedure EvenOdd(num)
/* num is the number to check if it is even or odd. */
if num mod 2 = 0 then {
    return "Even"
}
else {
    return "Odd"
}

/* This is a sample program that uses the above functions. */

procedure Main()
{
    n := 8                  /* Calculate the 8th Fibonacci number */
    FibonacciResult := Fibonacci(n)
    print("The 8th Fibonacci number is: ", FibonacciResult)

    n := 5                  /* Calculate the factorial of 5 */
    FactorialResult := Factorial(n)
    print("The factorial of 5 is: ", FactorialResult)

    num := 7                /* Check if 7 is even or odd */
    EvenOddResult := EvenOdd(num)
    print("7 is: ", EvenOddResult)
}
procedure "quick.sort"(S)
procedure "quick.partition"(S, a,b)
  numeric x,y
  if b<=a return
  x := a; y := b;
  while 1
    while S[++x] < S[a] od
    while S[--y] > S[a] od
    if x<y then
      swap(S,x,y)
    else break od
  od
  quick(S,a, y); quick(S,y+1,b)
end
call quick.sort(Arr,1,n)

//  This is a simple quicksort algorithm in ICON.
//  The procedure quick.sort() is used to call the recursive function quick().
//  The procedure quick.partition() is used to partition the array based on a pivot element.
//  In this case, the pivot element is chosen as the first element in the array.
//  The while loop continuously compares elements with the pivot and swaps them accordingly.
//  The quick() function calls itself recursively to sort the first and second part of the array.
//  The call to quick.sort() takes in the array to be sorted and the range of elements to be sorted, in this case from 1 to n (length of array).
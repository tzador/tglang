# Define a function that calculates the square root of a given number
procedure square_root(x)
    local guess
    local result
    local accuracy
    local count

    # Set an initial guess and accuracy
    let guess := 1.0
    let accuracy := 0.0001
    let count := 0

    # Loop until the guess is accurate enough
    loop while abs(x - guess * guess) >= accuracy
        # Calculate new guess using Newton's method
        let result := (guess + x / guess) / 2.0

        # Update guess and counter
        let guess := result
        let count := count + 1

    # Print result and count
    print("The square root of " || x || " is " || guess || " (calculated in " || count || " iterations)")

# Call the function with a given number
square_root(25)

# Output:
# The square root of 25 is 5.0 (calculated in 5 iterations)
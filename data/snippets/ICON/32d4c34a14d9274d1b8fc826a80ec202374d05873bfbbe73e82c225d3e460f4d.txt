/* This is a complex code snippet in ICON */
PROCEDURE main() 
    /* Defining variables */
    i := 1 /* integer variable */
    s := "Hello" /* string variable */
    b := true /* boolean variable */
    r := 3.1415 /* real variable */
    l := [1, 2, 3] /* list variable */
    m := {"a":1, "b":2, "c":3} /* map variable */
    
    /* Looping through list and printing values */
    FOR idx IN l DO {
        write("List element " || idx || ": " || l[idx] || "\n")
    }
    
    /* Printing map keys and values */
    FOR key IN m DO {
        write("Map key: " || key)
        write("Map value: " || m[key] || "\n")
    }
    
    /* Conditional statement */
    IF r > 3 THEN {
        write("R is greater than 3")
    } ELSE {
        write("R is not greater than 3")
    }
    
    /* Function definition */
    /* Takes in a list and multiplies all elements by 2 */
    PROCEDURE multiplyBy2(lst) 
        m := []
        FOR idx IN lst DO {
            m := m || (2 * lst[idx])
        }
        RETURN m
    END
    
    /* Function call and printing the result */
    l := multiplyBy2(l)
    write("List multiplied by 2: " || l)
    
    /* Recursion */
    PROCEDURE factorial(n)
        IF n = 0 THEN {
            RETURN 1
        } ELSE {
            RETURN n * factorial(n-1)
        }
    END
    
    /* Calling the factorial function and printing the result */
    write("Factorial of 5: " || factorial(5))
END
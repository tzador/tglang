/* This program generates a random array and prints the array, sorted using the Bubble Sort algorithm */

procedure gen_random_array(n)                                              # procedure to generate a random array with n elements
beg
    for i := 1 to n do
        array[i] := randint(1,100)                                          # generate a random number between 1 and 100 and append it to the array
end

procedure bubble_sort()                                                    # procedure to perform Bubble Sort on the generated random array
beg
    swapped := true                                                         # initialize swapped variable as true
    while swapped do                                                        # loop until no swaps are made
        swapped := false                                                    # set swapped to false
        for i := 0 to n-1 do
            if array[i] > array[i+1] then                                   # compare adjacent elements and swap if necessary
                temp := array[i]
                array[i] := array[i+1]
                array[i+1] := temp
                swapped := true
end

n := 10                                                                     # specify the number of elements in the array
gen_random_array(n)                                                         # call the procedure to generate random array
bubble_sort()                                                               # call the procedure to perform Bubble Sort
for i := 1 to n do
    print(array[i])                                                         # print the sorted array
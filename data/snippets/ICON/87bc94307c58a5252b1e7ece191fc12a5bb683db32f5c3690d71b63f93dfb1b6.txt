procedure Merge(sPtr)
[
  if length(sPtr) <= 1[
    return sPtr;
  ]
  /* get index of midpoint */
  mid = (length(sPtr) + 1) / 2;

  /* recursively call function on left half of sPtr */
  left = Merge(sPtr[:mid]);

  /* recursively call function on right half of sPtr */
  right = Merge(sPtr[mid:]);

  /* compare and merge the two halves */
  result = [];
  while length(left) > 0 or length(right) > 0[
    if length(left) > 0 and length(right) > 0[
      if left[1] <= right[1][
        result = append(result, left[1]);
        left = left[2:];
      ]else[
        result = append(result, right[1]);
        right = right[2:];
      ]
    ]else[
      if length(left) > 0[
        result = append(result, left[1]);
        left = left[2:];
      ]else[
        result = append(result, right[1]);
        right = right[2:];
      ]
    ]
  ]

  /* return the sorted result */
  return result;
]
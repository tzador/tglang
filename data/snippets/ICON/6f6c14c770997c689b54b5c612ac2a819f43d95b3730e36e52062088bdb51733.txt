procedure QuickSort(A, L, R)
; Sorts a given array using QuickSort algorithm

inputs:
A - an array of elements to be sorted
L - the leftmost index of the array (usually 0)
R - the rightmost index of the array (usually n-1 where n is the size of the array)

variables:
i, j - integer variables to keep track of the partition indices
p - pivot element to compare the elements of the array
temp - temporary variable for swapping elements

code:
if L < R then
	p = A[(L+R)/2]  ; choose pivot element
	i = L
	j = R
	do
		while A[i] < p do
			i = i + 1  ; find element greater than pivot
		while A[j] > p do
			j = j - 1  ; find element smaller than pivot
		if i <= j then
			swap A[i] and A[j]  ; swap elements to partition
			i = i + 1
			j = j - 1
	while i <= j
	QuickSort(A, L, j)  ; recursively sort left partition
	QuickSort(A, i, R)  ; recursively sort right partition
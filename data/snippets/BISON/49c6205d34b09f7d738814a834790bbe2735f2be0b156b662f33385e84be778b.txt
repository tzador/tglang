%{
#include <stdio.h>

/*This is a BISON code snippet that calculates the factorial of a given number*/

int factorial(int n) //function to calculate factorial
{
    if (n == 1)
        return 1; //base case

    return n * factorial(n - 1); //recursive call
}
%}

/*Grammar rules*/
%token NUMBER
%token SEMICOLON
%left PLUS MINUS

%%
program:
    /* empty */ {}

    | program statement SEMICOLON %{} /*statement sequence*/
    ;

statement: //statement rules
    expression %{$$ = $1;} /*expression rule*/

    | IDENTIFIER EQUALS expression %{$$ = $1 * $3} /*assignment rule*/
    ;

expression: //expression rules
    NUMBER
        %{$$ = $1;} /*number rule*/

    | expression PLUS expression
        %{$$ = $1 + $3;} /*addition rule*/

    | expression MINUS expression
        %{$$ = $1 - $3;} /*subtraction rule*/

    | expression TIMES expression
        %{$$ = $1 * $3;} /*multiplication rule*/

    | expression DIVIDE expression
        %{$$ = $1 / $3;} /*division rule*/

    | LPAREN expression RPAREN
        %{$$ = $2;} /*parentheses rule*/

    | IDENTIFIER %{$$ = factorial($$);} /*factorial rule - calls factorial function*/
    ;

%%
int main(void)
{
    yyparse(); //parse input and generate output
    return 0;
}
/**
 * This is a snippet of BISON code
 * It declares a grammar for a simple arithmetic expression
 **/

%token DIGIT /* declare token for digits */
%token OPERATOR /* declare token for arithmetic operators */

/* Define the grammar rules for our arithmetic expression */
%%
expression : DIGIT OPERATOR DIGIT /* expression rule to evaluate arithmetic expression */
    | expression OPERATOR DIGIT /* allows for multiple expressions to be evaluated */
    | DIGIT /* allows for single digits */
    ;

/* Define the operator tokens */
OPERATOR : '+' /* addition operator token */
        | '-' /* subtraction operator token */
        | '*' /* multiplication operator token */
        | '/' /* division operator token */
        ;

/* Define a rule to handle errors in input */
%%
int main() {
    yyparse(); /* call the BISON parser */
    return 0;
}

/* Define a function to handle errors */
int yyerror(char *errmsg) {
    fprintf(stderr, "%s\n", errmsg); /* print error message to standard error */
}
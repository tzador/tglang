%{
#include<stdio.h>

extern int yylval;
extern FILE *yyin;

void yyerror(char *msg) {
 	printf("%s near %d on line %d\n",msg,yylval, count);
	exit(1);
}
%}

/* Define tokens */
%token IDNUM
%token INTNUM
%token DOUBLENUM
%token STR
%token INT
%token DOUBLE
%token STRING
%token IF
%token ELSE
%token WHILE
%token FOR
%token INPUT
%token OUTPUT
%token GREATER
%token LESSER
%token INCREMENT
%token DECREMENT

%%

program:
	variables
	| expressions
	;

variables:
	variable_declaration
	| variable_assignment
	;

variable_declaration:
	type IDNUM
	;

variable_assignment:
	IDNUM '=' expression
	;

expressions:
	arithmetics
	| conditionals
	| loops
	| input_output
	;

type:
	INT
	| DOUBLE
	| STRING
	;

arithmetics:
	expression '+' expression
	| expression '-' expression
	| expression '*' expression
	| expression '/' expression
	;

conditionals:
	IF expression '{' expressions '}' 
	| IF expression '{' expressions '}' ELSE '{' expressions '}'
	;

loops:
	WHILE expression '{' expressions '}'
	| FOR '(' variable_assignment ';' expression ';' variable_assignment ')' '{' expressions '}'
	| expression INCREMENT
	| expression DECREMENT
	;

input_output:
	INPUT IDNUM
	| OUTPUT IDNUM
	;

expression:
	INTNUM
	| DOUBLENUM
	| STR
	| IDNUM
	;

%%

int main(void) {
	count = 1;
	yyin = fopen("input.txt", "r");
	yyparse();
	yyerror("Bad statement");
	return 0;
}
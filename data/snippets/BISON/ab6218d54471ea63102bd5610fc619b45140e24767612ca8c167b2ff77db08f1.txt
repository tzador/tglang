%token <int> NUMBER //creates a token for integers
%token <string> STRING //creates a token for strings
%token EOS //creates a token for end of statement
%left '+' '-' //creates a binary operator for addition and subtraction
%left '*' '/' //creates a binary operator for multiplication and division

%%
program: statement_list //defines a program as a list of statements

statement_list: statement //defines a statement list to be a single statement
   | statement_list statement //allows multiple statements to be added to the list

statement:
   print_statement //defines a print statement
   | assign_statement //defines an assignment statement

print_statement:
   "print" expression EOS //defines the syntax for a print statement

assign_statement:
   ID '=' expression EOS //defines the syntax for an assignment statement

expression:
   NUMBER //defines an expression to be a single number
   | ID //defines an expression to be a single identifier
   | expression '+' expression //defines a binary addition expression
   | expression '-' expression //defines a binary subtraction expression
   | expression '*' expression //defines a binary multiplication expression
   | expression '/' expression //defines a binary division expression

%%

int main(void) {
   yyparse(); //parses the input according to the grammar rules
   return 0;
}
%%
%token <int> NUM // defining a token type for integers
%token <string> VAR // defining a token type for strings
%left '+' '-' // defining left associativity for addition and subtraction
%left '*' '/' // defining left associativity for multiplication and division
%%
expression: // defining the main expression rule
   | expression '+' expression { $$ = $1 + $3; } // addition rule
   | expression '-' expression { $$ = $1 - $3; } // subtraction rule
   | expression '*' expression { $$ = $1 * $3; } // multiplication rule
   | expression '/' expression { $$ = $1 / $3; } // division rule
   | '-' expression %prec '-' { $$ = -$2; } // unary minus rule
   | '(' expression ')' { $$ = $2; } // parentheses rule
   | NUM { $$ = $1; } // rule for integer values
   | VAR { $$ = $1; } // rule for string values
   ;
%%
int main(int argc, char *argv[]) { // main function
   yyparse(); // calling the parser
   return 0; // returning 0 to indicate successful execution
}
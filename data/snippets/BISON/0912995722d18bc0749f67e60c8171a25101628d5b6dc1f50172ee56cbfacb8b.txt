%{
    /* This is the header section where we can declare variables and includes */
    #include <stdio.h>
    #define MAX_LENGTH 100
    int count = 0;
%}

/* This is the declaration section where we define the tokens and their corresponding rules */
/* Tokens must be in uppercase */
%token <token1> NUMBER
%token <token2> WORD
%token <token3> SYMBOL

/* This is the grammar section where we define the rules for our language */
program: statement
    | program statement
    ;

statement: expression
    | assignment
    | conditional
    ;

expression: WORD
    | NUMBER
    | expression SYMBOL expression
    ;

assignment: WORD '=' expression
    ;
    
conditional: 'if' expression 'then' statement 'else' statement
    ;

/* This section is where we define the grammar rules for our tokens */
/* The $ operator indicates the current token */
/* The $$ operator stores the result of the rule */
/* The $1, $2, etc. operators represent the value of the first, second, etc. sub-token */
%%

/* This is the code section where we define the actions to take for each rule */
program:
    { printf("This is a valid program!"); }
;

statement:
    { count++; }
;

expression:
    { printf("Expression found."); }
;

assignment:
    { printf("Assignment performed."); }
;

conditional:
    { printf("Conditional statement found."); }
;

/* Code to handle errors in the input */
ECHO
    fprintf(stderr, "Syntax error at token %s\n", yytext);
    exit(1);
%%

/* This is the main function that runs the parser on the input */
int main()
{
    printf("Enter a valid program: ");
    yyparse();
    printf("\nNumber of statements in the program: %d\n", count);
    return 0;
}
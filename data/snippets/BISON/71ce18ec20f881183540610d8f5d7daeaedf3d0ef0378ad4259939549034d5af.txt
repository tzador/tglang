%{

/* Bison code snippet to generate a simple parser for a BASIC calculator */

/* Define tokens for input */

%token INTEGER
%token FLOAT
%token ADD
%token SUB
%token MUL
%token DIV
%token POWER
%token LEFT_PAREN
%token RIGHT_PAREN

%}

/* Define grammar rules for expressions */

%%
/* Grammar rule for simple expressions */
expression: INTEGER
    | FLOAT
    | expression ADD expression
    | expression SUB expression
    | expression MUL expression
    | expression DIV expression
    | expression POWER expression
    | LEFT_PAREN expression RIGHT_PAREN
    ;

/* Grammar rule for assigning variables */
assignment: VARIABLE '=' expression;

/* Grammar rule for multiple assignments */
assignment_list: assignment
    | assignment_list ';' assignment
    ;

%%

/* Function to handle error messages */
void yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
}

/* Main function to parse input and generate output */
int main() {
    yyparse();
    return 0;
}
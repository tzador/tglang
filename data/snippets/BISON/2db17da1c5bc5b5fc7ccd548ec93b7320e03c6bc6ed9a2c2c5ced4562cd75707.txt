%{
#include <stdio.h>
#include <stdlib.h>

int num_tokens;

#define YYDEBUG 1
#define YYNO_INPUT 1

%}

%start INPUT

%token NEWLINE 0
%token STRING
%token NUMBER
%token ERROR

%%

// Rules for identifying strings
string		[a-z][-a-zA-Z.0-9$:/#@&?+;!*(),\[\]]*

// Rules for identifying numbers
number [0-9]+

// Rules for detecting errors
error .|\n

// Defining start symbol
INPUT: string | number | error {
	if($1 == number) {
		printf("Token type: NUMBER, Token value: %d\n", atoi(yytext));
	}
	else if($1 == string) {
		printf("Token type: STRING, Token value: %s\n", yytext);
	}
	else {
		printf("Token type: ERROR, Token value: %s\n", yytext);
	}
} NEWLINE {
	num_tokens++;
}
| INPUT NEWLINE

%%

int main(void) {
	yylex();
	printf("Total number of tokens detected: %d\n", num_tokens);
	return 0;
}

int yywrap(void) {
	return 1;
}

int yyerror(void) {
	return 0;
}
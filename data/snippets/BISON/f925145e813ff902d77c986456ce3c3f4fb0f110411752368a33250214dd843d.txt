%token <type> INT REAL        // Define token types for integers and reals

%left '+' '-'               // Left associativity for addition and subtraction
%left '*' '/'               // Left associativity for multiplication and division

%%
program: statement_list;       // Start symbol for the grammar
statement_list: statement      // Rule for a single statement
              | statement_list statement; // Rule for multiple statements
statement: expr ';'            // Rule for an expression statement
         | IF '(' condition ')' statement ELSE statement; // Rule for an if-else statement
expr: factor                   // Rule for a single factor
    | expr '+' factor           // Rule for adding two expressions
    | expr '-' factor;          // Rule for subtracting two expressions
factor: primary                // Rule for a primary factor
      | factor '*' primary       // Rule for multiplying two factors
      | factor '/' primary;      // Rule for dividing two factors
primary: '(' expr ')'          // Rule for an expression inside parentheses
       | ID                    // Rule for an identifier
       | INT                   // Rule for an integer
       | REAL;                 // Rule for a real number
condition: expr;                // Rule for a condition (can be extended for more complex conditions)
%%
%{

/* This is a BISON code snippet that implements a simple calculator.
It takes in two numbers (in the form of tokens) and performs a mathematical operation on them. */

#include <stdio.h>
#include <stdlib.h>

double result; // global variable to store the result of the operation

%}

/* Define the tokens that will be used in the calculation */
%token NUMBER  // represents a numeric value
%token PLUS    // represents the addition operator
%token MINUS   // represents the subtraction operator
%token MULTIPLY // represents the multiplication operator
%token DIVIDE  // represents the division operator

/* Define the grammar rules */ 
%%
start: expression { // when the start rule is invoked, handle the expression by printing the result
    printf("The result is %f\n", result);
}
expression: NUMBER PLUS NUMBER { // if the expression consists of two numbers separated by a plus sign
    result = $1 + $3;  // perform the addition operation and store the result in the global variable
}
| NUMBER MINUS NUMBER { // if the expression consists of two numbers separated by a minus sign
    result = $1 - $3; // perform the subtraction operation and store the result in the global variable
}
| NUMBER MULTIPLY NUMBER { // if the expression consists of two numbers separated by a multiplication sign
    result = $1 * $3; // perform the multiplication operation and store the result in the global variable
}
| NUMBER DIVIDE NUMBER { // if the expression consists of two numbers separated by a division sign
    result = $1 / $3; // perform the division operation and store the result in the global variable
}
;

/* Handle errors and incomplete expressions */
%%
void yyerror(const char *msg) { // function to print an error message
    printf("Error: %s\n", msg);
}

int main() {

    printf("Enter a mathematical expression (e.g. 2 + 3 or 4 * 5):\n"); // prompt the user for an expression to calculate

    yyparse(); // invoke the parser to handle the input expression

    return 0;
}
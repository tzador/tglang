%token <tok> IDENTIFIER                    // Declaring token 'IDENTIFIER' with type 'tok'
%token <num> NUMBER                         // Declaring token 'NUMBER' with type 'num' 
%left '+' '-'                               // Defining left-associativity for operators '+' and '-'
%left '*' '/'                               // Defining left-associativity for operators '*' and '/'
%right '^'                                  // Defining right-associativity for operator '^'
%left '(' ')'                               // Defining left-associativity for parentheses '(', ')'
%start expression                           // Declaring starting rule for grammar
%%
expression: IDENTIFIER                      // Rule for identifier
        | NUMBER                            // Rule for number
        | expression '+' expression %prec '+' // Rule for addition operation with higher precedence
        | expression '-' expression %prec '-' // Rule for subtraction operation with higher precedence
        | expression '*' expression %prec '*' // Rule for multiplication operation with higher precedence
        | expression '/' expression %prec '/' // Rule for division operation with higher precedence
        | expression '^' expression %prec '^' // Rule for exponentiation operation with highest precedence
        | '(' expression ')'                // Rule for expressions within parentheses
        ;
%%
/* Definition section */
To_expr:
  NUM               { $$ = ast_num($1); }
| ID                { $$ = ast_id($1); }
| To_expr '+' To_expr { $$ = ast_op('+', $1, $3); }
| To_expr '-' To_expr { $$ = ast_op('-', $1, $3); }

/* Token section */
NUM                 [0-9]+(\.[0-9]+)?([eE][-+]?[0-9]+)?
ID                  [a-zA-Z_][a-zA-Z0-9]*
%%
/* Code to be performed before parsing */
static
void before(void) {
  /* Initialize lexer here */
  /* Initialize parser global variables here */
}

/* Code to be performed after parsing */
static
void after(void) {
  /* Do post-processing here */
}

/* Main code */
int
main(void) {
  /* Code to be performed before parsing */
  before();

  /* Parse input */
  yyparse();

  /* Code to be performed after parsing */
  after();

  return 0;
}
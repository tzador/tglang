%{
#include <stdio.h>
// Defining data types and variables
int myInt = 5;
char myChar = 'a';
float myFloat = 10.5;
%}

// Defining grammar
// Rules for expressions and statements
%token INT
%token CHAR
%token FLOAT
%left '+' '-'

// Grammar rules
%start EXPRESSION
%%
EXPRESSION:
    INT '+' CHAR { printf("Invalid expression, cannot add int to char!"); }
    | INT '+' FLOAT { printf("Invalid expression, cannot add int to float!"); }
    | CHAR '+' INT { printf("Invalid expression, cannot add char to int!"); }
    | FLOAT '+' INT { printf("Invalid expression, cannot add float to int!"); }
    | CHAR '+' FLOAT { printf("Invalid expression, cannot add char to float!"); }
    | FLOAT '+' CHAR { printf("Invalid expression, cannot add float to char!"); }
    | EXPRESSION '+' EXPRESSION {
        printf("Invalid expression, only simple expressions allowed!");
    }
    | INT '-' CHAR { printf("Invalid expression, cannot subtract int from char!"); }
    | INT '-' FLOAT { printf("Invalid expression, cannot subtract int from float!"); }
    | CHAR '-' INT { printf("Invalid expression, cannot subtract char from int!"); }
    | FLOAT '-' INT { printf("Invalid expression, cannot subtract float from int!"); }
    | CHAR '-' FLOAT { printf("Invalid expression, cannot subtract char from float!"); }
    | FLOAT '-' CHAR { printf("Invalid expression, cannot subtract float from char!"); }
    | EXPRESSION '-' EXPRESSION {
        printf("Invalid expression, only simple expressions allowed!");
    }
    ;
%%

// Function to handle errors
int yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
    return 0;
}

// Main function to read input and parse it using BISON
int main(void) {
    yyparse();
    return 0;
}
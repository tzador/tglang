// BISON code snippet
List: /* List productions */
    %empty /* for empty lists */
    | List Object /* for non-empty lists, calls itself recursively */
;
Object: /* Object productions */
    %empty /* for empty objects */
    | '{' Elements '}' /* for non-empty objects, calls Elements production */
;
Elements: /* Elements production, represents comma-separated list of name-value pairs */
    %empty /* for empty Elements */
    | Elements ',' Name ':' Value /* recurses until all name-value pairs are parsed */
;
Name: /* Name production, represents a key in a name-value pair */
    %empty /* for empty names */
    | /[A-Za-z]*/ /* regex to match alphabetical characters only */
;
Value: /* Value production, represents a value in a name-value pair */
    String /* calls String production for string values */
    | Number /* calls Number production for numeric values */
    | Object /* calls Object production for nested objects */
    | List /* calls List production for nested lists */
;
String: /* String production */
    STRING /* terminal symbol, to match a string surrounded by quotes */
;
Number: /* Number production */
    NUMBER /* terminal symbol, to match a numeric value */
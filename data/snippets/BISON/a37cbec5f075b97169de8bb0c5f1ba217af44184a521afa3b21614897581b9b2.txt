%{
#include <stdio.h>

// Define terminal and non-terminal symbols
// Terminal symbols are in quotes
%token "NUMBER" "PLUS" "MINUS" "DIVIDE" "MULTIPLY" "LPAREN" "RPAREN"
%type <val> expr
%}

// Define rules for arithmetic expressions
// "expr" is the starting non-terminal symbol
expr: expr PLUS expr { $$ = $1 + $3; } 
    | expr MINUS expr { $$ = $1 - $3; } 
    | expr MULTIPLY expr { $$ = $1 * $3; } 
    | expr DIVIDE expr { $$ = $1 / $3; } 
    | NUMBER {$$ = $1; };

%%

// Define code for printing the result of arithmetic expressions
main(argc, argv)
int argc; char **argv;
{
    // Initialize parser
    yyin = fopen("input.txt", "r");

    // Parse input and print result
    yyparse();
    printf("Result: %d\n", $$);

    // Close input file
    fclose(yyin);
}

// Define function for handling errors
yyerror(msg)
char *msg;
{
    // Print error message
    fprintf(stderr, "Error: %s\n", msg);
}

// Provide token names for error messages
char *yyTokName(tok)
int tok;
{
    static char buf[20];
    if (isascii(tok)) sprintf(buf, "%c", tok);
    else sprintf(buf, "tok_%d", tok);
    return buf;
}
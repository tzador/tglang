%{
// Specifies the start symbol
%start expression

// Defines the lexical analyzer program
%lexer

// Imports the standard C library
#include <stdio.h>

// Specifies the type and value of tokens
%token <float> NUMBER

// Sets the precedence and associativity of operators
%left '+' '-'
%left '*' '/'

// Defines the grammar rules for an expression
%%
expression: NUMBER
        | expression '+' expression
        | expression '-' expression
        | expression '*' expression
        | expression '/' expression
        ;

// Defines the lexical rules for a number token
NUMBER: [0-9]+ (\. [0-9]*)? { $$ = atof($1); }

// Defines the rules for handling errors
%%
void yyerror (char *s) {
  fprintf (stderr, "%s\n", s);
}

// Defines the main function
int main () {
  // Reads input from standard input
  while (yyparse () == 0)
    ;
}
/*A simple calculator grammar in Bison*/

/*Token Definitions*/
%token NUMBER
%left '+' '-'
%left '*' '/'

/*Grammar Rules*/
%%

calc:
    | expr { printf("%d\n", $1); } /*Display the result of calculation*/

expr:
    NUMBER                  /*Number token*/
    | expr '+' expr         /*Addition operation*/
    | expr '-' expr         /*Subtraction operation*/
    | expr '*' expr         /*Multiplication operation*/
    | expr '/' expr         /*Division operation*/
    | '-' expr %prec NEG    /*Negation operation*/

%%

/*Function to handle errors*/
int yyerror(char* msg) {
    printf("%s\n", msg);
    return 0;
}

/*Main function*/
int main() {
    yyparse();  /*Parse input*/
    return 0;
}
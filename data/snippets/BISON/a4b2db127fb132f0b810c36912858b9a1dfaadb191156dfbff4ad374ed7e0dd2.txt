%%
%token <str> STRING     // Defines a token type for strings
%token <num> INTEGER    // Defines a token type for integers
%token EOL             // Defines the end-of-line token

%right '+' '-'         // Specifies the right associative operators
%left '*' '/'          // Specifies the left associative operators

%%
expr : expr '+' expr    // Defines the addition rule for expressions
     | expr '-' expr    // Defines the subtraction rule for expressions
     | expr '*' expr    // Defines the multiplication rule for expressions
     | expr '/' expr    // Defines the division rule for expressions
     | INTEGER          // Defines a rule for integers
     | STRING           // Defines a rule for strings
     ;
%%
#include <stdio.h>

int main() {
    char input[100];
    printf("Enter an expression: ");
    scanf("%[^\n]%*c", input);    // Reads the entire expression from input
    int result = yyparse();       // Parses the input using the rules specified in the grammar
    printf("Result: %d\n", result);
    return 0;
}

int yyerror(char *msg) {          // Handles any syntax errors in the input
    fprintf(stderr, "Error: %s\n", msg);
    return 0;
}
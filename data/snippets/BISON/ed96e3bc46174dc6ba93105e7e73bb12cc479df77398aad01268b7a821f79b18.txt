%token <bool> TRUE FALSE 
%token <str> STRING 
%token <int> NUMBER
%token EQ NEQ LT LE GT GE 
%token AND OR 
%token NOT
%%
program: statement_list; 
statement_list: statement_list statement 
|  statement
|  ;

statement: expr ';' 
            { 
                save_to_database($1); 
            }
| 'PRINT' expr ';' 
            { 
                printf("%s\n", $2); 
            };

expr: lval 
| 'IF' '(' bexpr ')' 'THEN' expr 
            { 
                check_condition($3); 
                execute($5); 
            }
| expr 'AND' expr 
            { 
                $$ = ($1 && $3); 
            };

bexpr: expr EQ expr        { $$ = ($1 == $3); }
| expr NEQ expr        { $$ = ($1 != $3); }
| expr LT expr         { $$ = ($1 > $3); }
| expr LE expr         { $$ = ($1 >= $3); }
| expr GT expr         { $$ = ($1 < $3); }
| expr GE expr         { $$ = ($1 <= $3); }
| expr 'OR' expr       { $$ = ($1 || $3); }
| 'NOT' expr           { $$ = !($2); };
%%
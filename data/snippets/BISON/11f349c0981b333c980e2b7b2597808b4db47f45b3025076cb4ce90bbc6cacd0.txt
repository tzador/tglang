%%
program : stmt_list

stmt_list : stmt | stmt_list '\n' stmt

stmt : expr_stmt |
       decl_stmt |
       if_stmt |
       while_stmt |
       for_stmt |
       func_def |
       class_def |
       return_stmt |
       break_stmt |
       continue_stmt |
       ';'

expr_stmt : expr ';'

decl_stmt : 'var' id_list ';'
          | 'func' IDENTIFIER '(' [param_list] ')' block
	  | 'class' IDENTIFIER [':' IDENTIFIER] block

if_stmt : 'if' '(' expr ')' block [else_stmt]

else_stmt : 'else' if_stmt | block

while_stmt : 'while' '(' expr ')' block

for_stmt : 'for' '(' [expr_stmt] ';' [expr] ';' [expr_stmt] ')' block

func_def : 'func' IDENTIFIER '(' [param_list] ')' block

class_def : 'class' IDENTIFIER [':' IDENTIFIER] block

return_stmt : 'return' [expr] ';'

break_stmt : 'break' ';'

continue_stmt : 'continue' ';'

id_list : IDENTIFIER | id_list ',' IDENTIFIER

param_list : IDENTIFIER | param_list ',' IDENTIFIER

%%

main:
    yylex();
    return 0;
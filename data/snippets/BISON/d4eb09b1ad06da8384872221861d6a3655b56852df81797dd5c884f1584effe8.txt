%{
    #include <stdio.h>          /* include needed standard libraries */
 %}

 /* token definitions, from tokens above */
 %token WHILE THEN DO END
 %token REPEAT UNTIL TEND
 %token EQUAL NUM ID
 %token WHITESPACE %newline

 %%
    /* the grammar rules, each in its own %{ ... %} block */
condition: value EQUAL value {% printf("Is the condition true?"); %}
loop: WHILE condition THEN TEND {% printf("Executing the loop..."); %}
repeat: REPEAT loop UNTIL condition END {% printf("Repeating the loop until condition is met."); %}
stmt: repeat {% printf("Statement executed!"); %}
 
%%
 
 /* the code to execute when each token is matched, enclosed in curly braces */
id { printf("Matched ID: %s\n", yytext); }
while { printf("Matched WHILE: %s\n", yytext); }
then { printf("Matched THEN: %s\n", yytext); }
do { printf("Matched DO: %s\n", yytext); }
end { printf("Matched END: %s\n", yytext); }
repeat { printf("Matched REPEAT: %s\n", yytext); }
until { printf("Matched UNTIL: %s\n", yytext); }
tend { printf("Matched TEND: %s\n", yytext); }
equal { printf("Matched EQUAL: %s\n", yytext); }
num { printf("Matched NUM: %s\n", yytext); }
whitespace { printf("Matched WHITESPACE: %s\n", yytext); }
newline { printf("Matched NEWLINE: %s\n", yytext); }
 
 /* the supporting C code */
int yywrap(void) { return 1; }
 
int main(void) {
  yylex();
 
  return 0;
}
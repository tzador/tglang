%{
#include<stdio.h>

int c = 2; //declare a variable c with value 2
%}

%token <dval> NUM //define a token NUM with dynamic value
%token OP //define a token for operator

%%

expr: //define a rule 'expr' that calculates expressions
    expr OP term
    | term
    ;

term:
    NUM {$$ = $1;} //assign the value of NUM to $$ variable
    | '(' expr ')' {$$ = $2;} //evaluate the expression between '()' and assign the value to $$ variable
    ;

OP: '+' | '-' | '*' | '/'; //define the operators

%%

int main(int argc, char** argv) {

    while(1) {
        c = yylex(); //get the next token
        printf("Token: %d\n", c); //print the token
        if(c == 0) //if end of file is reached, exit the loop
            break;
    }

    return 0;
}
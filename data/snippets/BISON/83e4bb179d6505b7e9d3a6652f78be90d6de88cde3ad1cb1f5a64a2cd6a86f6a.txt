%{
// initializing variables for later use
int count = 0;
float total = 0.0;
int num1 = 0;
int num2 = 0;
%}

// declaring tokens
%token NUM
%token ADD
%token SUB
%token MUL
%token DIV

%%
// defining grammar rules
expression: NUM {total = $1;} // taking in a single number
| expression ADD NUM {$$ = $1 + $3;} // adding the next number to the total
| expression SUB NUM {$$ = $1 - $3;} // subtracting the next number from the total
| expression MUL NUM {$$ = $1 * $3;} // multiplying the total by the next number
| expression DIV NUM {$$ = $1 / $3;} // dividing the total by the next number
;

// defining what a valid number is
NUM: [0-9]+ {count++; // incrementing count to keep track of number of numbers
            $$ = atoi(yytext); // converting string to integer value
            total += $$; // adding current number to total
            // resetting variable for next number
            count = 0;
            num1 = 0;
            num2 = 0;}
;

// handling error cases
%%

// defining function for handling errors
void yyerror(char *s) {
  fprintf(stderr, "%s\n", s);
}

// main function
int main(void) {
  yyparse(); // calling parser
  printf("Total: %.2f\n", total); // printing final total
  return 0;
}
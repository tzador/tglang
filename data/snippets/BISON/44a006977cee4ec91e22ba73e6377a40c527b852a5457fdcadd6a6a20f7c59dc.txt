// This is a code snippet in BISON programming language
%{

/* This is the preamble section
It is used to declare any global variables or functions 
that will be used in the grammar rules */

#include <stdio.h>
#include <stdlib.h>

%}

/* This is the token section
It contains rules for all the tokens used in the language */
NUMBER [0-9]+
WORD [a-zA-Z]+

/* This is the grammar section
It contains the rules for the syntactic structure of the language */

%start program
%token <int> NUM

%%

program: expression
        { printf("The result is: %d\n",$1); }

expression: NUMBER {$$ = $1} 
            | WORD {$$ = lookup($1);} 
            | expression '+' expression {$$ = $1 + $3} 
            | expression '-' expression {$$ = $1 - $3}
            | expression '*' expression {$$ = $1 * $3} 
            | expression '/' expression {$$ = $1 / $3}
            ;

%%

/* This is the function section
It contains the user-defined functions used in the grammar rules */

int lookup(char *s) {
    /* This function searches for the value of a variable and returns it */
    int val = atoi(s);
    return val;
}

/* This is the main function
It reads the input from the user and passes it to the parser */
int main() {
    /* This is the input section
    It prompts the user to enter an expression to be evaluated */
    printf("Enter an expression: ");
    yyparse(); // Parser function
    return 0;
}

// This is the end of the code snippet in BISON programming language
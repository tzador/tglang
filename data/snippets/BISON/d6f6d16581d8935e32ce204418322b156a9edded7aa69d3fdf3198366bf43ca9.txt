-lang
{
  // Define tokens
  %token DIGIT "Digit"
  %token MULTIPLE "Multiple of Digit"
  
  // Define grammar rules
  Expr: 
    | Digit MULTIPLE Expr  // Define recursive rule
    | Digit               // Base case
  ;
  
  // Define precedence
  %left MULTIPLE
  
  // Define grammar lexemes
  Digit: '0' | '1' | '2'    // Define single digits
        | '3' | '4' | '5'
        | '6' | '7' | '8'
        | '9'
  ;
  
  // Define grammar actions
  // When a rule is matched, perform certain action
  // In this case, perform multiplication
  %action MULTIPL { $$ = $1 * $3; }
  
  // Define start symbol
  // This defines the main rule to be used in parsing
  %start Expr
}
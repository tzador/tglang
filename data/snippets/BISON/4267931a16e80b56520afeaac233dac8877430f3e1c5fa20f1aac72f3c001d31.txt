%token NUM              //define token for numbers
%right '+' -              //specify right-associativity for addition operator
%right '*' /              //specify right-associativity for multiplication operator
%left '/'                 //specify left-associativity for division operator

%%                       //start of grammar rules

calc:                   //start of calculation rule
    expr {printf("Result: %d\n", $1);}  //$1 represents the result of the expression
;

expr:                   //start of expression rule
    NUM                   //expression is a number
    | expr '+' expr        //expression is a sum of two expressions
    | expr '*' expr        //expression is a product of two expressions
    | expr '/' expr        //expression is a quotient of two expressions
;

%%                       //end of grammar rules

int main() {           //start of main function
    yyparse();            //parse the input using the generated parser
    return 0;
}
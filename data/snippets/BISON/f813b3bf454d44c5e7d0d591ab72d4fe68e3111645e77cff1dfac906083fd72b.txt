%start program

%%

program:
    INCLUDE expression ';'
    | INCLUDE expression identifier ';' { printf("Successfully included %s\n", $3); }
    | declaration { printf("Successfully declared variable %s\n", $1); }
    | assignment { printf("Successfully assigned value to variable %s\n", $1); }
    | statement { printf("Successfully executed statement\n"); }
    | error { yyerror("Invalid syntax"); }

expression:
    expression '+' term
    | expression '-' term
    | term

term:
    term '*' factor
    | term '/' factor
    | factor

identifier:
    [a-zA-Z]+

declaration:
    DATATYPE identifier '=' NUMBER ';' { printf("Variable %s of type %s declared and assigned the value %d\n", $2, $1, $4); }

assignment:
    identifier '=' NUMBER ';' { printf("Value %d assigned to variable %s\n", $3, $1); }

statement:
    'PRINT' identifier { printf("Output: %d\n", $2); }

%%

int main(void) {
    yyparse();
    return 0;
}

int yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
    return 0;
}
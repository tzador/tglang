%token NUMBER
%token PLUS MINUS TIMES DIVIDE
%left PLUS MINUS
%left TIMES DIVIDE

%%

expression:      // The main rule for an arithmetic expression
    NUMBER       // A number is the simplest expression
    | expression PLUS expression
                  // `+` behaves like `+` in mathematical expressions
    | expression MINUS expression
                  // Similarly, `-` behaves like the minus sign
    | expression TIMES expression
    | expression DIVIDE expression
    | MINUS expression %prec MINUS
                  // Unary minus operator; it has higher precedence
                  // than `-`; it is right-associative
    | '(' expression ')'   // Parentheses change precedence order
    ;

%%

int main() {
    extern FILE *yyin;
    yyin = fopen("input.txt", "r");  // Open file (must exist!)
    yyparse();
    fclose(yyin);     // Close the file opened with yyin

    return nerrors;   // nerrors is unique to this lexer
}

int yyerror(char *s) {  // Function to print an error message
    fprintf(stderr, "%s\n", s);
    return -1;          // number must be returned to the calling parser
}
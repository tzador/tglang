%%

//Define tokens and their types
DIGIT [0-9]
LETTER [a-zA-Z]
ID {LETTER}({LETTER}|{DIGIT})*
NUM {DIGIT}+

%{

//C code to be executed once token is recognized
#include <stdio.h>
#include <stdlib.h>

void yyerror(char *msg) {
    fprintf(stderr, "Error: %s\n", msg);
    exit(1);
}

int main() {
    //Initialize variables
    int num, sum = 0;
    char* id;
    
    while (1) {
        //Loop to continually get input from user
        printf("Enter an integer or identifier: ");
        
        //Read input
        if (scanf("%d", &num) == 1) {
            //If input is an integer, add it to sum and print result
            sum += num;
            printf("Sum so far: %d\n\n", sum);
        } else if (scanf("%s", id) == 1) {
            //If input is an identifier, print it
            printf("Identifier: %s\n\n", id);
        } else {
            //If input is not an integer or identifier, throw an error
            yyerror("Invalid input");
        }
    }
}

%%

//Rules for token recognition
{id} { printf("Identifier: %s\n", yytext); return ID; }
{num} { printf("Number: %s\n", yytext); return NUM; }
\n { return 0; }

//Catch-all rule for unrecognized characters
. { yyerror("Invalid character"); return 0; }
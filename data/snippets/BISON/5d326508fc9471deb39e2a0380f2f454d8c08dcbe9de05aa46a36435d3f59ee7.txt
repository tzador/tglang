%start expression

%%

expression: /* an expression can be a number or a binary operation */
    number
    | expression '+' expression
    | expression '-' expression
    | expression '*' expression
    | expression '/' expression
    ;

number: /* a number can be any positive or negative integer or float */
    INTEGER
    | FLOAT
    ;

%%

/* declare the necessary tokens */
%token INTEGER
%token FLOAT

/* specify the precedence of operators */
%left '+' '-'
%left '*' '/'

/* specify the grammar and actions for calculating the expression */
%%
expression:
    | number            { /* action for storing the value of a number */ }
    | expression '+' expression   { /* action for adding two expressions */ }
    | expression '-' expression   { /* action for subtracting two expressions */ }
    | expression '*' expression   { /* action for multiplying two expressions */ }
    | expression '/' expression   { /* action for dividing two expressions */ }
    ;
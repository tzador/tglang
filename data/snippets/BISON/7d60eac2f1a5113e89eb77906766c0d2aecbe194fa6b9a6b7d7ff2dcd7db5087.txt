%{
// This is a comment in BISON
#include <stdio.h>
#include <stdlib.h>
double result;
%}

/* Here we define the grammar rules for our calculator */
calc : expr { printf("%.2f \n", result); }
// Specifies that the input should match the expression, and then print the result with two decimal places

expr : expr '+' term { result = $1 + $3; } 
// Defines addition operation, updating the result variable with the sum of the first and third rule elements
| expr '-' term { result = $1 - $3; } 
// Defines subtraction operation, updating the result variable with the difference between the first and third rule elements
| term { result = $1; } 
// Specifies that if the input is just a term, return the term as the result


term : term '*' fact { result = $1 * $3; } 
// Defines multiplication operation, updating the result variable with the product of the first and third rule elements
| term '/' fact { result = $1 / $3; } 
// Defines division operation, updating the result variable with the quotient of the first and third rule elements
| fact { result = $1; } 
// Specifies that if the input is just a factor, return the factor as the result


fact : '(' expr ')' { result = $2; } 
// Defines parentheses operation, setting the result equal to the expression inside the parentheses
| NUMBER { result = $1; } 
// Specifies that if the input is a number, return the number as the result


%%

// This section of the code generates C code for the BISON rules
int main() {
  printf("Enter an expression to evaluate: ");
  yyparse();
  return 0;
}
// This calls the yyparse() function, which scans input and applies the BISON rules to evaluate the expression

// This section defines the yylex() function, which reads the input and returns tokens that match the BISON rules
int yylex() {
  int c;
  while((c = getchar()) == ' ' || c == '\t');
  if (isdigit(c)) {
    ungetc(c, stdin);
    scanf("%lf", &yylval);
    return NUMBER;
  }

  if (c == '+' || c == '-' || c == '*' || c == '/') {
    return c;
  }
}

// This section captures any syntax errors and prints an error message 
void yyerror(char *s) {
  printf("\n%s\n", s);
}

// This section defines the yyparse() function, which executes the BISON rules 
int yyparse() {
  return yylex();
}
%{
#include <stdio.h>
#include <math.h>

/* Declare global variable */
int result;

/* Define a function to calculate factorial */
int factorial(int num){
    if(num == 1)
        return 1;
    else
        return num * factorial(num-1);
}

/* Define a function to calculate square root */
int square_root(int num){
    return sqrt(num);
}

/* Define a function to calculate power */
int power(int num1, int num2){
    return pow(num1, num2);
}

%}

/* Declare syntax rules and actions */
/* Factorial rule */
factorial_expr: /* empty */
              | factorial_expr NUMBER { result = factorial($2); }
;

/* Square root rule */
square_root_expr: SQRT '(' NUMBER ')' { result = square_root($3); }
;

/* Power rule */
power_expr: base '^' exponent { result = power($1, $3); }
;

/* Base and exponent rules */
base: NUMBER
    | '(' factor ')' { $$ = $2; }
;

exponent: NUMBER
        | '(' factor ')' { $$ = $2; }
;

/* Define factor */
factor: factorial_expr
      | square_root_expr
      | power_expr
;

/* Specify start symbol and error handling */
%%

/* Driver code */
int main(){
    yyparse();
    printf("Result: %d\n", result);
    return 0;
}
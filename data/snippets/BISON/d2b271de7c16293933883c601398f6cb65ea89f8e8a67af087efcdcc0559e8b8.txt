/*==============================
Program: String Parser
Author: John Doe
Date: 01/05/2021
Purpose: Parse a string and count the number of occurrences of each character
=================================*/

/* Lexical Analysis Rules */
%{
# include <stdio.h>
int charCount[256];
%}

/* Parser and Production Rules */
%token CHAR
%start input
%%
input : {init();}
| input CHAR {count_char($2);}
;

%%

/* Code executed at the start of the program */
void init() {
   int i;
   for(i = 0; i < 256; i++) {
        charCount[i] = 0;
    }
}

/* Function to count the occurrences of each character */
void count_char(char c) {
    if(c == EOF) {
        print_char_count();
    }
    else {
        charCount[c]++;
    }
}

/* Function to print the character count */
void print_char_count() {
    int i;
   for(i = 0; i < 256; i++) {
        if(charCount[i] != 0)
            printf("Character %c occurs %d times\n", (char)i, charCount[i]);
    }
}

/* Main function to read in the input string and parse it */
int main(){
    yyparse();
}

/* End of file indicator */
int yywrap() {
    return 1;
}

/* Function to get the next character from input string */
int yyinput() {
    return getchar();
}
%{
//The section between %{ and %} is used for declarations and definitions

//Declare a variable for storing the sum of elements
int sum = 0;
%}

//Define the grammar rules
Expr: NUM    { sum += $1; }    //When a NUM token is read, add its value to the sum
    | Expr ',' NUM    { sum += $3; }    //When a comma-delimited list of numbers is read, add each number to the sum

//Define the token definitions
%token <int> NUM    //Declare NUM as a token of type integer

//Define the starting symbol
%start Expr

//Define the token types
%type Expr { int }

%%

//The section after %% is used for the actual grammar rules and actions

//The start rule
Expr:    //Empty expression returns 0
    | Expr Expr    //Add the results of two expressions
    | '(' Expr ')'    //Nested expression within parentheses
    | '-' Expr    //Unary negation of an expression

//Token definitions
[NUM]    //Match a sequence of digits and set the value as the token type NUM

%%

//The section between %% and %% is used for additional code

//Print the sum of elements
void output() {
    printf("The sum is: %d", sum);
}
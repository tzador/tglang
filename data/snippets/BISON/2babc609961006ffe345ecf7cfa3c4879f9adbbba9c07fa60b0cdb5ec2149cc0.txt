/* This is a BISON code snippet */
%token<name> ID /* define a token named ID with type <name> */

%% /* start of grammar section */

/* production rules */
S -> L "=" R /* non-terminal 'S' produces non-terminal 'L' followed by '=' and 'R' */

L -> ID /* non-terminal 'L' produces terminal token 'ID' */

R -> E | ID | NUM /* non-terminal 'R' produces either 'E', 'ID', or 'NUM' */

E -> E "+" T /* non-terminal 'E' produces non-terminal 'E' followed by '+' and 'T' */
    | T /* or simply 'T' */

T -> T "*" F /* non-terminal 'T' produces non-terminal 'T' followed by '*' and 'F' */
    | F /* or simply 'F' */

F -> "(" E ")" /* non-terminal 'F' produces '(' followed by non-terminal 'E' and ')' */
    | "-" F /* or '-' followed by non-terminal 'F' */

NUM -> [0-9]+ /* define number token as one or more digits */

%% /* end of grammar section */
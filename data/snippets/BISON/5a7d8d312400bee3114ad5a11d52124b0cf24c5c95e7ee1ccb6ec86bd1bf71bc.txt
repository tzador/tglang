%{
//This code snippet defines a simple calculator that can perform basic arithmetic operations
//It is based on the BISON programming language, which is a parser generator that allows for efficient and powerful parsing capabilities
//The calculator can handle addition, subtraction, multiplication, and division of integers
//It also includes error handling for division by zero
//To use this calculator, input a single line of arithmetic expression and press enter
#include <stdio.h>

int yylex();
void yyerror(char *);

//Define variables for storing the result and potential errors
int result = 0;
int error = 0;

%}

%union{
int val;
}

%token <val> NUMBER
%left '+' '-'
%left '*' '/'

%type <val> exp

%%
exp: exp '+' exp  { $$ = $1 + $3; }
    | exp '-' exp  { $$ = $1 - $3; }
    | exp '*' exp  { $$ = $1 * $3; }
    | exp '/' exp  { 
                        if($3 == 0){
                            printf("Error: Division by zero.\n");
                            error = 1; //update error variable
                        }
                        else{
                            $$ = $1 / $3;
                        }
                    }
    | '(' exp ')'  { $$ = $2; }
    | NUMBER        { $$ = $1; }
    ;

%%

int main(){
    int value;
    printf("Enter an arithmetic expression: ");
    yyparse();
    if(error){
        printf("Calculation unsuccessful. Please try again.\n");
    }
    else{
        value = result;
        printf("Result: %d\n", value);
    }
    return 0;
}

int yylex(){
    char c = getchar();
    if(c == '+'){
        return '+';
    }
    else if(c == '-'){
        return '-';
    }
    else if(c == '*'){
        return '*';
    }
    else if(c == '/'){
        return '/';
    }
    else if(c == '\n'){
        return 0;
    }
    else if(c >= '0' && c <= '9'){
        ungetc(c, stdin); //if the character is a number, put it back into input stream for processing
        scanf("%d", &c);
        return NUMBER;
    }
    else{
        return c;
    }
}

void yyerror(char *s){
    printf("%s\n", s);
}
%{
    // BISON code to count the number of occurrences of a string in a given file
    #include <stdio.h>
    #include <string.h>

    // global variables
    int count = 0; // to store the number of occurrences
    char search_string[100]; // to store the search string

    // function to count occurrences
    int count_occurrences(FILE *fp) {
        char line[100]; // to store each line of the file

        while(fgets(line, sizeof(line), fp) != NULL) {
            char *pos = line; // pointer to the beginning of the line
            
            // loop through the line to check for occurrences of search string
            while((pos = strstr(pos, search_string)) != NULL) {
                count++; // increment count if a match is found
                pos += strlen(search_string); // move pointer to the next position after the searched word
            }
        }

        return count;
    }
%}

// BISON rules
%start count
%option noyywrap

// regex pattern for strings
string [a-zA-Z][a-zA-Z0-9_]*

%%

// rule to match the search string
{string} {
    // pass the matched string to the count_occurrences function
    count = count_occurrences(yyin); 
    printf("Number of occurrences: %d", count);
}

. ; // ignore all other characters

%%

// main function
int main(int argc, char *argv[]) {
    // open the file for counting occurrences
    FILE *fp = fopen(argv[1], "r");

    yyin = fp; // set input file stream for BISON scanner

    // pass input to BISON parser
    yyparse();

    // close the file
    fclose(fp);

    return 0;
}
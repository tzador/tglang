%{
    /* Initialization code */
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>

    /* Variable Declarations */
    int var1, var2;
%}

/* Parser Rules */
expr    : var1 '=' var2             {printf("Setting var1 equal to var2.");}
        | var1 '+' var2             {printf("Adding var1 and var2.");}
        | var1 '-' var2             {printf("Subtracting var2 from var1.");}
        | var1 '*' var2             {printf("Multiplying var1 by var2.");}
        | var1 '/' var2             {printf("Dividing var1 by var2.");}
        | var1 '%' var2             {printf("Finding the remainder when var1 is divided by var2.");}
        | '(' expr ')'              {printf("Evaluating the expression inside parentheses.");}
        ;

%%

/* Lexical Analyzer Rules */
%option noyywrap

/* Regular Expressions */
letter  [a-zA-Z]
digit   [0-9]
id      ({letter}+)_?({letter}|{digit})*
newline [\n]

%%

/* Scanner Program */
int main(void) {
    yylex();
    return 0;
}

/* Function to return tokens */
int yylex(void) {
    while(1) {
        int c = getchar();
        if (c == EOF) {
            return 0;
        }

        switch(c) {
            case '=':
                return ASSIGN;
            case '+':
                return PLUS;
            case '-':
                return MINUS;
            case '*':
                return STAR;
            case '/':
                return SLASH;
            case '%':
                return MOD;
            case '(':
                return LPAREN;
            case ')':
                return RPAREN;
            case '{newline}' :
                // Handle newline character
                break;
            case {digit}+:
                yylval = atoi(yytext);
                return INTEGER;
            case {id}:
                yylval = (char*) malloc(strlen(yytext) + 1);
                strcpy(yylval, yytext);
                return IDENTIFIER;
            default:
                // Handle unrecognized characters
                break;    
        }
    }
}
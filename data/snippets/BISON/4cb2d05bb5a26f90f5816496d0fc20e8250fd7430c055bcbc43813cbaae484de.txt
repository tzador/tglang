%{
    # Define constants
    %define parse.error verbose
    %define api.namespace {"calc"}
    %define parse.lac atd
    
    # Define tokens
    %token NUM
    %token PLUS
    %token MINUS
    %token TIMES
    %token DIVIDE
    %token LPAREN
    %token RPAREN
    
    # Define precedence
    %left PLUS MINUS
    %left TIMES DIVIDE
%}

%%

program:
    expr { printf("Result: %d\n", $1); }

expr:
    NUM
    | expr PLUS expr { $$ = $1 + $3; }           /* Addition */
    | expr MINUS expr { $$ = $1 - $3; }          /* Subtraction */
    | expr TIMES expr { $$ = $1 * $3; }          /* Multiplication */
    | expr DIVIDE expr { $$ = $1 / $3; }         /* Division */
    | LPAREN expr RPAREN { $$ = $2; }            /* Parentheses */
    ;

%%

int main(void) {
    // Input must end with a semicolon
    printf("Enter expression: ");
    if (yyparse() == 0)
        printf("Parsing successful!\n");
    return 0;
}
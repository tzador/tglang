%token <type> NUM FLOAT //Defining token types as number or float

%left '+' '-' // Left associativity of operators '+' and '-'
%left '*' '/'

%start expression //Defining the starting symbol

%%

expression: //Definition of expression production rule
    NUM { printf("Result: %d", $1); } //Print result for NUM tokens
    | FLOAT { printf("Result: %f", $1); } //Print result for FLOAT tokens
    | expression '+' expression // Production rule for addition operation
    {
        printf("Result: %d", $1 + $3); // Print addition operation result
    }
    | expression '-' expression // Production rule for subtraction operation
    {
        printf("Result: %d", $1 - $3); // Print subtraction operation result
    }
    | expression '*' expression // Production rule for multiplication operation
    {
        printf("Result: %d", $1 * $3); // Print multiplication operation result
    }
    | expression '/' expression // Production rule for division operation
    {
        if ($3 == 0) { printf("Cannot divide by zero!"); } // Check for division by zero
        else { printf("Result: %d", $1 / $3); } // Print division operation result
    }
    ;

%%

int main()
{
    yyparse(); // Parse input based on production rules
    return 0;
}
%{
  // This section allows for external code and definitions
  // can be used to declare variables and functions
  #include <stdio.h>
  int num = 10;
  int addTwo(int x) {
    return x + 2;
  }
  char* word = "Hello";
%}

// Define the tokens that will be used in the grammar rules
digit   [0-9]
alpha   [A-Za-z]
word    {alpha}+

%%

// Define the grammar rules
start:  expression
      | word_statement
      | num_statement;

expression:  word '+' num {
              // $1 refers to the first token (word) and $3 refers to the third token (number)
              printf("%s plus 2 is %d\n", $1, addTwo($3));
            }
            | word_statement
            | num_statement;

word_statement:  word word {
                  // $1 and $2 refer to the first and second tokens (words)
                  printf("%s %s\n", $1, $2);
                };

num_statement:   num {
                  // $1 refers to the first token (number)
                  printf("The number is: %d\n", $1);
                };

%%

// This section contains any additional code that will be performed at the end of the parsing process
// For example, printing a statement or calling a function
int main() {
  yyparse();
  return 0;
}

// Linker code that is required to compile the bison-generated parser
int yywrap() {
  return 1;
}

// This section is for any error handling code that may be needed
// For example, handling a syntax error in the input
void yyerror(char *s) {
  fprintf(stderr, "%s\n", s);
}
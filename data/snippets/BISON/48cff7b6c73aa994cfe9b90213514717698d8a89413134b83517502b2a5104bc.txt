%token INTEGER REAL STRING      // Defines reserved words as tokens
%token PRINT ASSIGNMENT IF      // for use in parsing rules

%%

program: statement_list
    ;

statement_list: statement
    | statement_list statement    // Recursively adds statements to list
    ;

statement: PRINT expression
    | assignment
    | if_statement
    ;

expression: INTEGER               // Defines different types of expressions
    | REAL
    | STRING
    | arithmetic_expression
    ;

arithmetic_expression:
    | expression '+' expression
    | expression '-' expression
    | expression '*' expression
    | expression '/' expression
    ;

assignment: ASSIGNMENT expression       // Handles assignment statements
    ;

if_statement: IF '(' expression ')' statement     // Handles if-statements
    ;

%%

// Defines the start of the parsing rules for the BISON program

int main(int argc, char *argv[]) {
    yyparse();  // Parses the input according to the grammar rules
    return 0;
}

void yyerror(const char *s) {   // Handles parsing errors
    fprintf(stderr, "%s\n", s);
}

int yywrap() {
    return 1;       // Indicates end of input
}

// Defines the start of the input for the BISON program

3 + 5;              // Integer expression
4.2 * 6;            // Real expression
"Hello World";      // String expression
x = 7;              // Assignment statement
if (x > 10) {       // If-statement
    PRINT x;
}
%{
//Define variables and functions
int num1, num2;
void product(int a, int b){
    printf("The product of two numbers is %d", a*b);
}
%}

/*Specify the tokens and rules of the grammar*/
%%
/*Tokens*/
"+"     {return PLUS;}
"-"     {return MINUS;}
"*"     {return MULTIPLY;}
"/"     {return DIVIDE;}
"%"     {return MOD;}
"("     {return OPEN_PAREN;}
")"     {return CLOSE_PAREN;}
[0-9]+  {return NUM;}
" "     { } //Ignore whitespace
\n      {return NEW_LINE;}

/*Grammar rules*/
input       : expression NEW_LINE {printf("Calculation successful!");}
expression  : expression PLUS term {num1 = $1; num2 = $3; product(num1, num2);}
            | expression MINUS term {num1 = $1; num2 = $3; product(num1, num2);}
            | term {product($1, $1);}
term        : term MULTIPLY factor {num1 = $1; num2 = $3; product(num1, num2);}
            | term DIVIDE factor {num1 = $1; num2 = $3; product(num1, num2);}
            | term MOD factor {num1 = $1; num2 = $3; product(num1, num2);}
            | factor {product($1, $1);}
factor      : OPEN_PAREN expression CLOSE_PAREN {num1 = $2; num2 = $3; product(num1, num2);}
            | NUM {product($1, $1);}
%%
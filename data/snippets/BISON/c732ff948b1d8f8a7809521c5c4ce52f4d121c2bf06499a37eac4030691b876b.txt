%{
#include <stdio.h> //include standard input output header file
%}

%token <toknum> NUMBER                                        //declare a token named NUMBER

%start start                                                   //set the start rule to be 'start'

%%
start: statements                                              //define the production rule for 'start' to be 'statements'
    ;

statements: statements statement                               //define the production rule for 'statements' to be 'statements statement'
    | statement                                                //or just 'statement'
    ;

statement: expression ';'                                     //define the production rule for 'statement' to be 'expression'
    ;

expression: NUMBER                                            //define the production rule for 'expression' to be 'NUMBER'
    | '(' expression ')'                                       //or an expression enclosed in parantheses
    | expression '+' expression                                //or addition of two expressions
    | '-' expression %prec UMINUS                              //or a negated expression with higher precedence
    ;

%%
int yywrap() {                                                 //define the function to wrap the input
    return 1;                                                  //return 1 to indicate end of input
}

int main() {                                                   //define the main function
    yyparse();                                                 //call yyparse() to start the parsing process
    return 0;                                                  //return 0 to indicate success
}

void yyerror(const char *s) {                                  //define the yyerror() function to print error messages
    fprintf(stderr, "%s\n", s);                                //print the error message to standard error
}
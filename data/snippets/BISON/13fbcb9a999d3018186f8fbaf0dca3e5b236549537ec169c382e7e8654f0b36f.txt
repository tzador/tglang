%token NUM       /* NUM token representing a number */
%token ADD       /* ADD token representing addition operation */

%%              /* Bison declarations section */

/* Rule for addition expression */
expr: NUM
    | expr ADD expr
    ;

%%              /* C code section */

/* Code to evaluate addition expression */
#include <stdio.h>
#include <stdlib.h>

int yylex(void); /* prototype for lexing function */
int yyerror(char *); /* prototype for error handling function */

int main(void) {
    int num1, num2, result;

    num1 = yylex(); /* get first number */
    while (yylex() != 0) { /* loop until end of file */
        if (yytext[0] == '+') { /* check for addition operator */
            num2 = yylex(); /* get second number */
            result = num1 + num2; /* perform addition operation */
            num1 = result; /* update first number for next iteration */
        } else {
            yyerror("Syntax error: invalid input");
            exit(1); /* exit program if input is invalid */
        }
    }

    /* print result */
    printf("Result: %d\n", result);    
    return 0;
}
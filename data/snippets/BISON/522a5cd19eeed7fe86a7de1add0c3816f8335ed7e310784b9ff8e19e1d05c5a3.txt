/* This code snippet demonstrates the use of BISON's parser rules */

%token <num> NUMBER      /* defining a token for numbers */
%token <id> VARIABLE     /* defining a token for variables */

%left '+' '-'           /* defining operator precedence for addition and subtraction */
%left '*' '/'           /* defining operator precedence for multiplication and division */

%%                      /* start of grammar rules */

program: statement_list
        ;

statement_list: statement_list statement
              | statement
              ;

statement: assignment_statement
         | if_statement
         | while_statement
         | print_statement
         ;

assignment_statement: VARIABLE '=' expression
                     | VARIABLE '=' expression ';' 
                     ;

if_statement: 'if' '(' expression ')' '{' statement_list '}' 
             | 'if' '(' expression ')' '{' statement_list '}' 'else' '{' statement_list '}' 
             ;

while_statement: 'while' '(' expression ')' '{' statement_list '}'
                ;

print_statement: 'print' expression ';' 
                ;

expression: NUMBER 
          | VARIABLE 
          | '-' expression %prec '-' 
          | expression '+' expression 
          | expression '-' expression 
          | expression '*' expression 
          | expression '/' expression 
          ;

%%                      /* end of grammar rules */
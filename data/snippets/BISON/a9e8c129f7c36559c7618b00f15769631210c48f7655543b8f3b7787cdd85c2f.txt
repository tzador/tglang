%{
    # includes and declarations
    # start symbol
%}

# rules
# grammar rules for Bison
# optional code to be executed before parsing begins

%%
statement: expression '\n' { $val = $expression; }
| '(' statement ')' { $$ = $statement; }
| { $$ = 0; };

expression: operand '+' operand { $$ = $operand1 + $operand2; }
| operand '-' operand { $$ = $operand1 - $operand2; }
| operand '*' operand { $$ = $operand1 * $operand2; }
| operand '/' operand { $$ = $operand1 / $operand2; }
;

operand: number { $$ = $number; }
| '(' expression ')' { $$ = $expression; };

%%

# optional code to be executed after parsing is complete

int main()
{
    # parse input
    yyparse();

    # print the result
    printf("%d\n", $1);

    return 0;
}

# supporting functions or code
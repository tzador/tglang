/* BISON code for simple parser */

%{
// Declare global variables and functions
#include <stdio.h>

int num_words = 0;
char words[10][20];

void print_result() {
    int i;
    printf("Parsed words: ");
    
    // Loop through words array and print each word
    for (i = 0; i < num_words; i++) {
        printf("%s ", words[i]);
    }
}
%}

// Define grammar rules
%%
// Grammar rule for sentence, which consists of one or more words
sentence:
    statement
    | statement sentence
    ;

statement:
    WORD { // If word is valid, add it to words array and increment counter
        strcpy(words[num_words], $1);
        num_words++;
    }
    ;

// Define tokens, which are words separated by spaces
%token WORD /\w+/

// Ignore new lines and spaces
%ignore /\r?\n/
%ignore " "

// Define code to run when parser fails
%parse-failed {
    printf("Parser failed.\n");
}

// Define starting symbol
%start sentence

// Define end of input
%%

// Main function to read input sentence and run parser
int main() {
    printf("Input sentence: ");
    
    // Read input from user
    char input[100];
    scanf("%[^\n]", input);
    
    // Run parser on input
    sentence(input);
    
    // Print result
    print_result();
    
    return 0;
}
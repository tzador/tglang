%token INTEGER
%token FLOAT
%token STRING
%token IDENTIFIER
%token PLUSMINUS
%token MULDIV
%token ASSIGN
%token NEWLINE
%%
top:
    /* Empty */
    | top statement NEWLINE
    ;
statement:
    expression
    | IDENTIFIER ASSIGN expression
    ;
expression:
    IDENTIFIER
    | INTEGER
    | FLOAT
    | STRING
    | expression PLUSMINUS expression
    | expression MULDIV expression
    | '-' expression %prec PLUSMINUS
    ;
%%
#include <stdio.h>
#include <stdlib.h>
void yyerror(const char *s) {
    fprintf(stderr, "%s\n", s);
}
int main(void) {
    return yyparse();
}
int yywrap(void) {
    return 1;
}
int yylex(void) {
    int c;
    while ((c = getchar()) == ' ' || c == 't');
    if (c == '.' || (c >= '0' && c <= '9')) {
        ungetc(c, stdin);
        scanf("%lf", &yylval.d);
        return FLOAT;
    }
    if (c == '"' || c == '\'') {
        tmp[0] = c;
        while ((c = getchar()) != tmp[0]) {
            tmp[n++] = c;
        }
        tmp[n] = 0;
        yylval.i = malloc(sizeof(char) * (n + 1));
        strcpy(yylval.i, tmp);
        return STRING;
    }
    if (c == EOF) return 0;
    return c;
}
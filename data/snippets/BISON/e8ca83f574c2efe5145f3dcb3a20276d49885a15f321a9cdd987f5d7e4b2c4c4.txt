/* Bison grammar rules for a simple calculator */

%token NUM    /* For numbers */
%token ADD    /* For addition operation */
%token SUB    /* For subtraction operation */
%token MUL    /* For multiplication operation */
%token DIV    /* For division operation */

%% /* Start of grammar rules */

input: /* Input rule for entire expression */
    expression { /* Code to handle input */ }
;

expression: /* Rule for mathematical expressions */
    addition_expr    { /* Code for addition operation */ }
    | subtraction_expr    { /* Code for subtraction operation */ }
    | multiplication_expr    { /* Code for multiplication operation */ }
    | division_expr    { /* Code for division operation */ }
    | NUM    { /* Code to handle numbers */ }
    | expression ADD expression    { /* Code for addition operation with two expressions */ }
    | expression SUB expression    { /* Code for subtraction operation with two expressions */ }
    | expression MUL expression    { /* Code for multiplication operation with two expressions */ }
    | expression DIV expression    { /* Code for division operation with two expressions */ }
;

addition_expr:    /* Rule for addition operation */
    NUM ADD expression    { /* Code for addition operation with a number and an expression */ }
;

subtraction_expr:    /* Rule for subtraction operation */
    NUM SUB expression    { /* Code for subtraction operation with a number and an expression */ }
;

multiplication_expr:    /* Rule for multiplication operation */
    NUM MUL expression    { /* Code for multiplication operation with a number and an expression */ }
;

division_expr:    /* Rule for division operation */
    NUM DIV expression    { /* Code for division operation with a number and an expression */ }
;
%{
#include <stdio.h>
/* Declarations */
int count = 0;
%}

/* Grammar rules */
lines: lines line | /* empty */
line: statement '\n' { count++; }
statement: ID '=' expr { printf("%s = %d\n", $1, $3); }
expr: expr '+' term { $$ = $1 + $3; }
    | term          { $$ = $1; }
term: NUM           { $$ = $1; }
    | ID            { $$ = 0; }
%%
/*
 * Yylex() - The lexical scanner.
 * Returns the next input token to the parser
 */
yylex()
{
  int c;

  /* skip white-space and newline characters */
  while ((c = getchar()) == ' ' || c == '\n');

  if (isdigit(c)) {
    ungetc(c, stdin);
    scanf("%d", &yylval);
    return NUM;
  } else if (isalpha(c)) {
    yylval = c;
    return ID;
  } else if (c == '=') {
    return c;
  } else if (c == EOF) {
    return 0;
  } else {
    return c;
  }
}
%token <string> STRING
%token <double> NUMBER
%start main
%%

/* This is a grammar for a simple calculator program written in BISON. */

main: expr
    { printf("Result: %f\n", $1); };

expr: NUMBER
    {$$ = $1;};
    | STRING
    {$$ = atof($1);};
    | expr '+' NUMBER
    {$$ = $1 + $3;};
    | expr '-' NUMBER
    {$$ = $1 - $3;};
    | expr '*' NUMBER
    {$$ = $1 * $3;};
    | expr '/' NUMBER
    {$$ = $1 / $3;};

%%

/* The following code is used to manage BISON's stack and input/output. */

int yywrap(void)
{
    return 1;
}

int main(void)
{
    yyparse();
    return 0;
}

void yyerror(const char *str)
{
    printf("Error: %s\n", str);
}
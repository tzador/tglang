%token NUMBER                 //Defining a token for numbers
%token PLUS MINUS TIMES DIVIDE //Defining tokens for mathematical operators

%%
expression: factor              //Defining the grammar for mathematical expressions
        | expression PLUS factor
        | expression MINUS factor
        | error { yyerror("Error: Invalid expression"); } //Handling errors

factor: term
        | factor TIMES term
        | factor DIVIDE term

term: NUMBER { printf("Current number: %d\n", $1); } //Performing an action by printing the current number
    | '(' expression ')' { printf("Parentheses detected!\n"); } //Printing a message when parentheses are found
    | error { yyerror("Error: Invalid term"); } //Handling errors
    ;

%%

int main(int argc, char **argv) {
    yyin = fopen(argv[1], "r"); //Opening the input file
    yyparse(); //Parsing the input file
    fclose(yyin); //Closing the input file
    return 0;
}
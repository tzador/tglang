%{
 /* This is a BISON code snippet for a simple calculator parser */
#include <stdio.h> // includes standard input/output library
int result; // declare a variable for storing the result
%}

/* Define the tokens for operators and numbers */
%token <int> ADDITION SUBTRACTION MULTIPLICATION DIVISION NUMBER

%%
/* Define the grammar rules for calculator input */
calculation: NUMBER ADDITION NUMBER {/* perform addition operation and store result */ result = $1 + $3; }
           | NUMBER SUBTRACTION NUMBER {/* perform subtraction operation and store result */ result = $1 - $3; }
           | NUMBER MULTIPLICATION NUMBER {/* perform multiplication operation and store result */ result = $1 * $3; }
           | NUMBER DIVISION NUMBER {/* perform division operation and store result */ result = $1 / $3; }
           ;

/* Define the start symbol */
%start calculation

/* Define the error rules for invalid input */
error: /* do nothing if error occurs */
;

/* Define the rules for accepting numbers */
%token <int> NUMBER ""[0-9]+"" {/* convert matched string to integer and return token */ $$ = atoi($1); }

/* Define the rules for ignoring whitespace characters */
%skip ""[ \t\n]"";

/* Define the rules for handling errors and printing the result */
%define parse.error
{
  fprintf(stderr, ""Invalid input\n""); // print error message to standard error stream
  yyerrok; // reset the error flag
}

/* Main function to prompt user for input and parse it */
int main() {
  printf(""Enter an expression (e.g. 2 + 3): ""); // prompt user for input
  yyparse(); // call parser function
  printf(""Result: %d\n"", result); // print the result
  return 0;
}
%%
/* End of code snippet */
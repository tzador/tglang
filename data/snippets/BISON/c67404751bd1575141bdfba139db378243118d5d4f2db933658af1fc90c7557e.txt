/* A simple BISON program that parses a mathematical expression
   and calculates the result. */

/* Define the tokens used in the grammar */
%token NUMBER              /* Numerical values */
%token PLUS OPAREN CPAREN   /* Operators and parentheses */
%left PLUS                  /* Left-associative operator */

/* Use precedence rules to handle operator precendence */
%precedence PLUS

%%
/* Define the grammar rules */
expr: expr PLUS term        /* Addition */
    | term;                 /* Base case */
term: NUMBER;               /* A number is a term */
%%

/* Code to calculate the result */
#include <stdio.h>
#include "calc.h" /* Contains the YYSTYPE typedef for 'yylval' */
#include "math.h"

/* Define a global variable to store the result */
static double result;

/* Override the default 'yyerror' function to handle errors */
void yyerror(char * s) {
    fprintf(stderr, "Error: %s\n", s);
}

/* Custom function to perform addition */
double add(double a, double b) {
    return a + b;
}

/* Custom function to perform multiplication */
double multiply(double a, double b) {
    return a * b;
}

/* Custom function to calculate the result of the expression */
void calculate() {
    /* Use the global variable 'yyval' to access the tokens from the parser */
    /* 'yylval' stores the numerical values as doubles */
    /* Insert code here to handle parentheses and multiple terms */
    /* For simplicity, this code only handles addition */
    
    /* Perform the addition using the custom 'add' function */
    result = add(yylval[0], yylval[2]);
}

/* Main function to read input and call the yacc parser */
int main() {
    /* Read the expression from input */
    char expr[256];
    scanf("%s", expr);
    
    /* Create the parser using 'yyparse' function */
    /* 'yyparse' will call 'yylex' to tokenize the input string */
    /* 'calculate' will be called once the parser reaches the end of input */
    yyparse();
    calculate();
    
    /* Print the result */
    printf("Result: %f\n", result);
    
    return 0;
}
/* BISON Code */
%token <val> NUMBER        /* token for numbers */
%token <op> ADD SUB MULT DIV /* tokens for arithmetic operators */
%left ADD SUB                /* left associativity for addition and subtraction */
%left MULT DIV               /* left associativity for multiplication and division */
%%
expr : NUMBER                     /* base case: number */
     | expr ADD expr      {$$ = $1 + $3;} /* addition rule */
     | expr SUB expr      {$$ = $1 - $3;} /* subtraction rule */
     | expr MULT expr     {$$ = $1 * $3;} /* multiplication rule */
     | expr DIV expr      {$$ = $1 / $3;} /* division rule */
     ;
%%
/* additional functions to handle input and output */
int main() {
    yyparse(); /* parse input */
    printf("Output: %d", $$); /* print result */
    return 0;
}
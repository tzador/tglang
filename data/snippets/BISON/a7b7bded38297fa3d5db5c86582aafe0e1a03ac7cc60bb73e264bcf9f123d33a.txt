%code requires {
    #include <stdio.h>
    #include <stdlib.h>
}
%token <num> NUMBER
%token <str> STRING
%type <str> var_declaration

%% /* begin grammar rules */

program:
    statement_list
    ;

statement_list:
    statement
    | statement_list statement
    ;

statement: 
    var_declaration
    | print_statement
    | assign_statement
    ;

var_declaration:
    VAR ID '=' expr
        {$$ = "var " + $2 + " = " + $4 + ";"}
    ;

print_statement:
    PRINT expr
        {$$ = "console.log(" + $2 + ");"}
    ;

assign_statement:
    ID '=' expr
        {$$ = $1 + " = " + $3 + ";"}
    ;

expr:
    NUMBER
        {$$ = $1}
    | STRING
        {$$ = "\" + $1 + \""}

/* end grammar rules */

%% /* begin actions */

void yyerror(const char *msg) {
    fprintf(stderr, "error: %s\n", msg);
    exit(1);
}

int main() {
    yyparse();
    return 0;
}

/* end actions */

/* begin helper functions */

int yywrap() {
    return 1; /* end of input */
}

/* end helper functions */
%%
%start expr

/* Grammar rules */
expr:
    /* Rule for arithmetic expressions */
    expr '+' expr { printf("Addition operation"); }
    | expr '-' expr { printf("Subtraction operation"); }
    | expr '*' expr { printf("Multiplication operation"); }
    | expr '/' expr { printf("Division operation"); }
    | '(' expr ')' { printf("Parentheses expression"); }
    /* Rule for numbers */
    | NUMBER { printf("Number found"); }

/* Definitions */
NUMBER: /[0-9]+/ /* Matches any sequence of digits */

/* Ignored patterns */
%ignore /[ \t\r\n]/ /* Ignore whitespace characters */
%%
int main() {
    /* Input string */
    char* input = "3 + 4 * (5 / 2)";
    /* Parse input using the defined grammar */
    yyscan_t scanner;
    YY_BUFFER_STATE state;
    int result = 0;
    yylex_init(&scanner);
    /* Set the input string as the buffer to be scanned */
    state = yy_scan_buffer(input, strlen(input), scanner);
    /* Call Bison parser and store return value in result */
    result = yyparse();
    /* Delete scanner and buffer */
    yylex_destroy(scanner);
    yy_delete_buffer(state, scanner);
    /* Print result if parsing was successful */
    if (result == 0) {
        printf("Parsing was successful");
    }
    return 0;
}
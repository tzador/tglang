/* This is a BISON code snippet for a calculator that supports addition, subtraction, multiplication, and division operations */

%token NUMBER

/* Rules for addition and subtraction */
expression: expression '+' expression
          | expression '-' expression
          | NUMBER
          ;

/* Rules for multiplication and division */
term: term '*' term
    | term '/' term
    | expression
    ;

/* Start with calculating an expression */
calculation: expression;

%%
/* Code for handling the input and output */
#include <stdio.h>
#include <stdlib.h> /* for atof() */
#include "parser.tab.h"

int main(void)
{
  *yyin = stdin;
  return yyparse(); /* automatically calls calculation() */
}

/* Code for parsing the input and performing the calculations */
int yylex(void)
{
  int c;

  /* Skip whitespace. */
  while ((c = getchar()) == ' ' || c =='\t')
    ;

  if (c == EOF)
    return 0;

  /* Recognize decimals and return NUMBER token. */
  if (isdigit(c) || c == '.') {
    ungetc(c, stdin);
    scanf("%lf", &yylval);
    return NUMBER;
  }

  /* Return the character as the token (e.g. '+', '-', '*', '/') */
  return c;
}

/* Code for handling errors */
void yyerror(char *s)
{
  fprintf(stderr, "%s\n", s);
}
%%

int yywrap(void)
{
  return 1;
}
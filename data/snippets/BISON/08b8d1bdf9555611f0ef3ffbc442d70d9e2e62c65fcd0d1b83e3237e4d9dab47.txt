%token ID
%token INT
%token FLOAT

%%

input: /* empty */ { printf("Enter input: "); }
      | input line ;

line: '\n' {printf("New line detected\n"); }
    | ID '=' expression '\n' {printf("Assigning value to %s\n", $1); }
    | error '\n' {printf("Syntax error at line %d\n", yylineno); };

expression: INT { $$ = atoi($1); }
          | FLOAT { $$ = atof($1); }
          | ID { $$ = lookup($1); }
          | expression '[' expression ']' { $$ = array_access($1, $3); }
          | '(' expression ')' { $$ = $2; }
          | '-' expression { $$ = -1 * $2; }
          | '+' expression %prec UNARY_PLUS { $$ = $2; }
          | expression '*' expression { $$ = $1 * $3; }
          | expression '/' expression { $$ = $1 / $3; }
          | expression '-' expression { $$ = $1 - $3; }
          | expression '+' expression { $$ = $1 + $3; };

%%
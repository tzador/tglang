%{
    /* This section is used for defining the lexer and parser options */
    #include <stdio.h>
    #include <stdlib.h>

    /* Define tokens used in the parser */
    #define INTEGER 1
    #define FLOAT 2
    #define STRING 3

    /* Declare variables to store parsed values */
    int number;
    float decimal;
    char str[20];

    /* Function to print the parsed values */
    void printValues(int token) {
        if(token == INTEGER)
            printf("Parsed number: %d\n", number);
        if(token == FLOAT)
            printf("Parsed decimal: %f\n", decimal);
        if(token == STRING)
            printf("Parsed string: %s\n", str);
    }
%}

/* Declare tokens to be used in the lexer */
%token INTEGER
%token FLOAT
%token STRING

/* Define grammar rules */
%%
value : number {printValues(INTEGER);}
| decimal {printValues(FLOAT);}
| string {printValues(STRING);}

number : INTEGER {$$ = $1; /* Store parsed value in global variable */}
decimal : FLOAT {$$ = $1; /* Store parsed value in global variable */}
string : STRING {$$ = $1; /* Store parsed value in global variable */}

/* Define rules for handling errors */
%%
yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
}

/* Main function to run the parser */
int main() {
    yyparse();
    return 0;
}
%{
  /* C code to be executed before parsing */
  #include <stdio.h>
  int count = 0;
%}

/* Bison declarations */
%token <val> NUMBER
%left '+' '-'
%left '*' '/'
%left NEG

%% /* Grammar rules and actions */
stmt: expr { printf("Result: %d\n", $1); }
;

expr: NUMBER { $$ = $1; }
| expr '+' expr { $$ = $1 + $3; }
| expr '-' expr { $$ = $1 - $3; }
| expr '*' expr { $$ = $1 * $3; }
| expr '/' expr { $$ = $1 / $3; }
| '-' expr %prec NEG { $$ = -$2; }
;

%% /* C code to be executed after parsing */
int main(int argc, char *argv[]) {
  if (argc > 1) {
    /* Parsing from a file */
    yyin = fopen(argv[1], "r");
  }
  /* Start parsing */
  yyparse();
  printf("Total number of operations executed: %d\n", count);
  return 0;
}

/* Function to handle errors */
void yyerror(const char *s) {
  fprintf(stderr, "%s\n", s);
  exit(1);
}
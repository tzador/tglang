%{
    // This is a comment in BISON
    #include<stdio.h> // This directive includes a standard C library
    int count = 0; // This variable will keep track of the number of times the rule is matched
%}

// Define the grammar rules
expr: INT '+' INT // This rule matches an expression of the form <integer>+<integer>
    | INT '-' INT // This rule matches an expression of the form <integer>-<integer>
    | INT '*' INT // This rule matches an expression of the form <integer>*<integer>
    | INT '/' INT // This rule matches an expression of the form <integer>/<integer>
    ;

// Define what constitutes an integer
INT: /[0-9]+/ { count++; } // This rule matches a string of one or more digits, and increments the count variable

%%

// This is where the code for handling matched rules will go, using the variables generated in the %{...} section

int main()
{
    // Prompt the user for an expression
    printf("Enter an expression: ");
    // Use the generated parser to match the input
    yyparse();
    // Print the total number of times the rule was matched
    printf("%d expressions matched.\n", count);
    return 0;
}

int yyerror(char *msg)
{
    // Handling for errors in matching
    fprintf(stderr, "Error: %s\n", msg);
    return 0;
}
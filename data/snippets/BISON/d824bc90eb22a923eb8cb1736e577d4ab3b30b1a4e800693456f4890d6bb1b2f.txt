%{
    
    /* This is a code snippet in BISON, a programming language used for generating parsers.
       It includes a few simple rules and actions, along with some variables and functions. */
    
    #include <stdio.h>
    
    /* Define a variable to store the result of the parsing */
    int result;
    
    /* Define a function to print the result */
    void print_result()
    {
        printf("The result is %d\n", result);
    }
    
%}

/* Define the rules and actions for the parser */
%%
    
/* Rule for addition operation */
addition: NUMBER '+' NUMBER { result = $1 + $3; print_result(); };

/* Rule for subtraction operation */
subtraction: NUMBER '-' NUMBER { result = $1 - $3; print_result(); };

/* Rule for multiplication operation */
multiplication: NUMBER '*' NUMBER { result = $1 * $3; print_result(); };

/* Rule for division operation */
division: NUMBER '/' NUMBER { 
                            /* Check for division by 0 */
                            if($3 == 0)
                            {
                                printf("Error: Cannot divide by 0\n");
                            }
                            else
                            {
                                result = $1 / $3; 
                                print_result(); 
                            }
                         };

/* Rule for power operator */
power: NUMBER '^' NUMBER { 
                            /* Define a variable to store the exponential value */
                            int exponent = $3; 
                            
                            /* Calculate the result using a loop */
                            for(int i=1; i<exponent; i++)
                            {
                                result = result * $1;
                            }
                            print_result();
                         };

/* Rule for negation operator */
negation: '-' NUMBER { result = -$2; print_result(); };

/* Rule for parentheses */
parentheses: '(' NUMBER ')' { result = $2; print_result(); };

/* Error rule for invalid inputs */
error: /.*/ { printf("Error: Invalid input\n"); };

%%

/* The main function to run the parser */
int main()
{
    /* Declare a variable to store the input */
    char input[100];
    
    /* Get input from user */
    printf("Enter an operation: ");
    scanf("%s", input);
    
    /* Run the parser on the input */
    yyparse();
    
    return 0;
}

/* Define a function to handle parsing errors */
void yyerror(char *s)
{
    /* Print the error string and terminate the program */
    printf("%s\n", s);
    exit(1);
}
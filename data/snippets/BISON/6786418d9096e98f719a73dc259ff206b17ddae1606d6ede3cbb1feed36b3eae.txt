%token <int> NUMBER // defines NUMBER token to hold integer value 
%token <string> STRING // defines STRING token to hold string value 
%{
  /* include necessary headers and declare global variables */ 
#include <stdio.h> 
#include <stdlib.h> 
  
int num1 = 0, num2 = 0; // define global variables for calculations 
  
%} 
  
%start parser // defines the starting point of the parser 
  
%% 
  
parser: /* empty */ 
        | parser expr 
        | parser expr_newline // multiple expressions can be parsed on same line
  
expr: number '+' number // define expression to add two numbers 
    | number '-' number // define expression to subtract two numbers 
    | number '*' number // define expression to multiply two numbers 
    | number '/' number { /* check for division by 0 */ if($2 == 0) { printf("Error: Cannot divide by 0!"); return 1; } } '// define expression to divide two numbers and handle division by 0 
  
expr_newline: expr '\n' { printf("Result: %d", $1); } // prints result on new line 
  
number: NUMBER { /* save parsed number to global variable for use in expression */ num1 = $1; } // stores parsed number in global variable and returns the number 
      | STRING { /* convert string to integer and save to global variable for use in expression */ num2 = atoi($1); } // converts string to integer and stores in global variable for use in expression 
  
%% 
  
int main() 
{ 
    yyparse(); // calls BISON parser to start parsing 
  
    return 0; 
}
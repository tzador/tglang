%{
// Bison prologue, includes any C code
#include <stdio.h>
int count = 0; // Initialize a count variable to track number of occurrences
%}

%token NUMBER // Define token representing number
%token ADD // Define token representing addition operator
%token SUBTRACT // Define token representing subtraction operator

%% // Begin rules section

calc: expr { printf("Result: %d\n", $1); } ; // Main rule
expr: NUMBER { $$ = $1; } // Expression rule for numbers
    | expr ADD expr { $$ = $1 + $3; count++; } // Expression rule for addition
    | expr SUBTRACT expr { $$ = $1 - $3; count++; } // Expression rule for subtraction
    ;

%% // End rules section

// Begin Bison epilogue, includes any C code
int main() {
    // Prompt user for input
    printf("Enter a mathematical expression: ");

    // Call Bison parser
    yyparse();

    // Print number of occurrences
    if (count == 1) { // Singular case
        printf("\nThere was 1 operation performed.\n");
    } else { // Plural case
        printf("\nThere were %d operations performed.\n", count);
    }

    return 0;
}
"exp"         /* production rule */
    : "(" "exp" ")"                 /* expression in parentheses */
    | "exp" "+" "exp"               /* addition */
    | "exp" "-" "exp"               /* subtraction */
    | "exp" "*" "exp"               /* multiplication */
    | "exp" "/" "exp"               /* division */
    | "-" "exp" %prec NEG           /* unary minus (highest precedence) */
    | "(" "exp" "?" "exp" ":" "exp" /* ternary operation */
    | "exp" "&&" "exp"              /* logical and */
    | "exp" "||" "exp"              /* logical or */
    | "!" "exp"                     /* logical not (unary) */
    | "exp" ">" "exp"               /* greater than */
    | "exp" ">=" "exp"              /* greater than or equal */
    | "exp" "<" "exp"               /* less than */
    | "exp" "<=" "exp"              /* less than or equal */
    | "exp" "==" "exp"              /* equal */
    | "exp" "!=" "exp"              /* not equal */
    | "exp" "++"                    /* increment */
    | "exp" "--"                    /* decrement */
    | "exp" "=" "exp"               /* assignment */
    | "exp" "+=" "exp"              /* increment assignment */
    | "exp" "-=" "exp"              /* decrement assignment */
    | "exp" "*=" "exp"              /* multiplication assignment */
    | "exp" "/=" "exp"              /* division assignment */
    | "exp" "%" "exp"               /* modulo (remainder of division) */
    | "exp" "**" "exp"              /* exponentiation */
    | "exp" "<<" "exp"              /* bitwise left shift */
    | "exp" ">>" "exp"              /* bitwise right shift */
    | "(" "exp" ")%" "exp"          /* modulo using C-style modulus operator */
    | "sqrt" "(" "exp" ")"          /* square root function */
    | "cos" "(" "exp" ")"           /* cosine function */
    | "sin" "(" "exp" ")"           /* sine function */
    | "tan" "(" "exp" ")"           /* tangent function */
    | "atan2" "(" "exp" "," "exp" ")" /* arctangent of y/x function */
    | "log" "(" "exp" "," "exp" ")" /* logarithm base x function */
    | "(', '')" +           /* concatenate two strings */
       | "('', ())" +           /* concatenate a string and a number */
       | "('${'$/$$/)':$<options>") + /* format a number with specified options */
       | "('${'$/$/')':$<options>')"

/* annotation: 
This BISON code snippet defines a set of production rules for mathematical expressions and operations. 
It includes a variety of operators such as addition, subtraction, multiplication, division, unary minus, ternary operation, logical and/or, logical not, comparison operators, increment/decrement operators, assignment and assignment with operation, modulo, exponentiation, bitwise operations, and various math functions. 
The code also includes some string manipulation with the concatenate and format functions. 
*/
%token <num> NUMBER
%token <op> PLUS MINUS MULTIPLY DIVIDE

%%
expression: NUMBER
    | expression PLUS expression
    | expression MINUS expression
    | expression MULTIPLY expression
    | expression DIVIDE expression
    ;
%%

int evaluate(expression)
    int expression;
{
    int result = 0;
    switch (expression->operator) {
        case PLUS:
            result = evaluate(expression->left) + evaluate(expression->right);
            break;
        case MINUS:
            result = evaluate(expression->left) - evaluate(expression->right);
            break;
        case MULTIPLY:
            result = evaluate(expression->left) * evaluate(expression->right);
            break;
        case DIVIDE:
            result = evaluate(expression->left) / evaluate(expression->right);
            break;
        default:
            result = expression->value;
    }
    return result;
}
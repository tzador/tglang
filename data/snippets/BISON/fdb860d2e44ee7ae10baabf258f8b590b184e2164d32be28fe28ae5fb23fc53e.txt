/* Grammar for arithmetic expressions */

%token NUMBER           /* Terminal symbol for a number */
%token PLUS MINUS TIMES DIVIDE LPAREN RPAREN   /* Terminal symbols for operators */

%%

/* Start symbol for the grammar */
expression: /* Initially empty rule */
    | expression PLUS term       /* Add using recursion */
    | expression MINUS term      /* Subtract using recursion */
    | term           /* Base case for recursion */

/* Grammar for terms */
term: factor tal            /* Uses tail recursion */

/* Tail of the term */
tal: /* Initially empty rule */
    | tal TIMES factor      /* Multiply using recursion */
    | tal DIVIDE factor     /* Divide using recursion */

/* Grammar for factors */
factor: NUMBER      /* Terminal for a number */
    | LPAREN expression RPAREN  /* Use parentheses for grouping */

/* Error rule */
expression: error        /* Executed when there's an error in the input */

%%

/* Code to handle error */
void yyerror(char *s) {
    printf("Error: %s\n", s);
}
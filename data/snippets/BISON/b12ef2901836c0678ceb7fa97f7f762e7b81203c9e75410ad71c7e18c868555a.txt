/*
 * A simple grammar for a fictional programming language called "MyLang"
 * Includes statements, expressions, and variable declarations
 */

%token ID ERROR

%%

program: statement |
        statement program
        ; // rule for executing statements

statement:
      expr { printf("Expr evaluated\n"); }       // print statement is just an expression 
    | `int' ID { declare_int($2); } ;          // declaration statement for integer variable
    | `str' ID { declare_str($2); } ;          // declaration statement for string variable
    | `input' expr { scanf($2); } ;            // input statement for taking user input
    | `if' expr statement { 
        if ($2) {
            printf("Condition evaluated to true\n");
            $$ = 1;
        }
        else {
            printf("Condition evaluated to false\n");
            $$ = 0;
        }
    }  `else' statement ;                    // if/else statement
    etc...                                   // other types of statements

expr:
      ID `=' expr       { assign_val($1, $3); }             // assignment expression
    | ID `+' expr       { $$ = $1 + $3; }                   // addition expression
    | ID `-' expr       { $$ = $1 - $3; }                   // subtraction expression
    | ID `*' expr       { $$ = $1 * $3; }                   // multiplication expression
    | ID `/' expr       { $$ = $1 / $3; }                   // division expression
    | `(' expr `)'      { $$ = $2; }                        // parentheses for grouping expressions
    | ID                { $$ = get_value($1); }             // retrieving value from variable
    etc...                                                  // other types of expressions

%%

// Function for declaring integer variables
void declare_int(char* id) {
    printf("Integer variable %s has been declared.\n", id);
}

// Function for declaring string variables
void declare_str(char* id) {
    printf("String variable %s has been declared.\n", id);
}

// Function for assigning a value to a variable
void assign_val(char* id, int val) {
    printf("Value %d has been assigned to variable %s\n", val, id);
}

// Function for retrieving the value of a variable
int get_value(char* id) {
    printf("Retrieving value of variable %s\n", id);
    return some_value; // variable value would be returned here
}
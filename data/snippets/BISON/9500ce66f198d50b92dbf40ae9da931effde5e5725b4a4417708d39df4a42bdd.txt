/* A grammar rule for arithmetic expressions, including rules for order of operations */ 

/* Declare terminals for digits and operators */
%token DIGIT [0-9]
%token PLUS '+'
%token MINUS '-'
%token TIMES '*'
%token DIVIDE '/'
%token LPAREN '('
%token RPAREN ')'

%%

/* Define the start symbol */
exp: exp PLUS term
    | exp MINUS term
    | term;

/* Order of operations: multiplication/division before addition/subtraction */
term: term TIMES factor
    | term DIVIDE factor
    | factor;

/* Parentheses take precedence over all operations */
factor: LPAREN exp RPAREN
    | DIGIT;
    
%%

/* Declare a function for performing arithmetic operations */
float calc(float a, float b, char op) {
    if (op == '+')
        return a + b;
    else if (op == '-')
        return a - b;
    else if (op == '*')
        return a * b;
    else if (op == '/')
        return a / b;
}

/* Main function to take in user input and calculate result */
int main() {
    float num1, num2;
    char op;
    printf("Enter an arithmetic expression: ");
    scanf("%f %c %f", &num1, &op, &num2);
    float result = calc(num1, num2, op);
    printf("Result: %.2f\n", result);
    return 0;
}
%{
  /* Start of declaration section */
  #include <stdio.h>
  int count = 0; // variable to keep track of the number of iterations
  
  /* Function to print a number */
  void print_number(double num) {
    printf("%d: %f\n", count, num);
    count++;
  }
  
  /* Function to add two numbers */
  double add_numbers(double num1, double num2) {
    return num1 + num2;
  }
  
  /* Function to subtract two numbers */
  double sub_numbers(double num1, double num2) {
    return num1 - num2;
  }
%}

/* Start of grammar section */
%token <NUMBER> NUMBER /* Define token type NUMBER as 'double' */
%left '+' '-' /* Operator precedence */
%left '*' '/' /* Operator precedence */

%%
  
/* Rules */
calc: expr { /* Call function to print final result */
          print_number($1); 
       }
     ;

/* Expression */
expr: expr '+' expr   { /* Add two expressions */
                       $$ = add_numbers($1, $3);
                       print_number($$);
                      }
    | expr '-' expr   { /* Subtract two expressions */
                       $$ = sub_numbers($1, $3);
                       print_number($$);
                      }
    | expr '*' expr   { /* Multiply two expressions */
                       $$ = $1 * $3;
                       print_number($$);
                      }
    | expr '/' expr   { /* Divide two expressions */
                       if ($3 != 0) {
                         $$ = $1 / $3;
                         print_number($$);
                       }
                      }
    | '(' expr ')'    { /* Handle parentheses */
                       $$ = $2;
                       print_number($$);
                      }
    | NUMBER          { /* Handle numbers */
                       $$ = $1;
                       print_number($$);
                      }
    ;

/* Handle errors */
err: expr { /* Catch error and print message */
           fputs("Error: Invalid Expression\n", stderr);
           exit(1);
         }
   ;
%%
 
/* Start of main function */
int main() {
  /* Define variables */
  FILE *file;
  char input[100];

  /* Get input from user */
  printf("Enter an expression: ");
  scanf("%s", input);

  /* Open file to scan input */
  file = fopen("inputfile", "r");

  /* Call Bison parser */
  yyparse();

  /* Close file */
  fclose(file);

  return 0;
}
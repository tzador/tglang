/*---- BISON Code Snippet ----*/

/* Grammar Definition */

/* Define a list of keywords */
keywords: IF | ELSE | FOR | WHILE | INT | FLOAT | CHAR | RETURN | PRINT;

/* Define a list of operators */
operators: "+" | "-" | "*" | "/" | "=" | "<" | ">" | "==" | "!=";

/* Define rules for identifiers and literals */
identifier: [a-zA-Z][a-zA-Z0-9]*;
integer: [0-9]+;
float: [0-9]+\.[0-9]+;

/* Define the start symbol */
program: statement_list;

/* Define rules for statements */
statement_list: statement
  | statement_list statement;

statement: expression_statement
  | if_statement
  | for_statement
  | while_statement
  | return_statement
  | print_statement;

/* Define rules for expression statements */
expression_statement: expression ';';

/* Define rules for conditional statements */
if_statement: IF '(' expression ')' '{' statement_list '}' %prec LOWER_THAN_ELSE
  | IF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}';

/* Define rules for loop statements */
for_statement: FOR '(' expression ';' expression ';' expression ')' '{' statement_list '}';

while_statement: WHILE '('expression ')' '{' statement_list '}';

/* Define rules for return statements */
return_statement: RETURN expression? ';';

/* Define rules for print statements */
print_statement: PRINT '(' expression ')' ';';

/* Define rules for expressions */
expression: identifier
  | literal
  | '(' expression ')'
  | expression operator expression;

/* Define rules for literals */
literal: integer
  | float
  | string_literal;

/* Define rules for string_literals */
string_literal: '"' characters '"';

/* Define rules for characters */
characters: character
  | characters character;

/* Define rule for string characters */
character: .;
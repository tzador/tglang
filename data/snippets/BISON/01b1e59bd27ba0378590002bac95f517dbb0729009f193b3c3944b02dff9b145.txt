%token <num> NUMBER
%token OPEN OPEN_BRACKET
%token CLOSE CLOSE_BRACKET
%token ADD ADD_OPERATOR
%token SUB SUB_OPERATOR
%token MUL MULT_OPERATOR
%token DIV DIV_OPERATOR
%%
/* Rules for arithmetic operations with brackets */
expression:
      NUMBER
    | expression OPEN_BRACKET expression CLOSE_BRACKET { /* code for performing operation with brackets */ }
    | expression ADD_OPERATOR expression { /* code for performing addition */ }
    | expression SUB_OPERATOR expression { /* code for performing subtraction */ }
    | expression MULT_OPERATOR expression { /* code for performing multiplication */ }
    | expression DIV_OPERATOR expression { /* code for performing division */ }
    ;
%%
/* Code for performing operation with brackets */
void performOperationWithBrackets(double exp1,double exp2) {
    /* code for performing operation with brackets */
    return;
}
/* Code for performing addition */
void performAddition(double exp1,double exp2) {
    /* code for performing addition */
    return;
}
/* Code for performing subtraction */
void performSubtraction(double exp1,double exp2) {
    /* code for performing subtraction */
    return;
}
/* Code for performing multiplication */
void performMultiplication(double exp1,double exp2) {
    /* code for performing multiplication */
    return;
}
/* Code for performing division */
void performDivision(double exp1,double exp2) {
    /* code for performing division */
    return;
}
%token <token> NUMBER
%token <token> IDENTIFIER
%token <token> OP

%%
stmt: expr '\n' { printf("%d\n", $1); }
    | error '\n' { yyerror("\nInvalid expression result\n"); }
    | '\n' { printf("\n"); }
    ;

expr: term { $$ = $1; }
    | expr OP term {
    switch ($2) {
        case '+': $$ = $1 + $3; break;
        case '-': $$ = $1 - $3; break;
        case '*': $$ = $1 * $3; break;
        case '/': 
            if ($3 == 0) {
                yyerror("\nDivision by zero\n");
            }
            else {
                $$ = $1 / $3; 
            }
            break;
    }
}
    ;

term: IDENTIFIER { $$ = symbol_lookup($1); }
    | NUMBER { $$ = $1; }
    ;

%%
int main(int argc, char* argv[]) {
    while (yylex() != 0) {};
    return 0;
}
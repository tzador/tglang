// BISON code snippet

%token NUM
%token STRING
%left '+' '-'
%left '*' '/'
%nonassoc UNARY '-' // only matches the unary - operator
%start expressions

%%

expressions: %empty
    | expressions expression '\n' { printf("%d\n", $2); } // print result of expression
    ;
expression:
    | NUM                              { $$ = $1; } // assign value of NUM token to expression
    | '-' expression %prec UNARY       { $$= -$2; } // handle unary operator
    | '(' expression ')'               { $$ = $2; } // handle parentheses
    | STRING                           { $$ = atoi($1); } // handle conversion of STRING token to int
    | expression '+' expression        { $$ = $1 + $3; } // handle addition
    | expression '-' expression        { $$ = $1 - $3; } // handle subtraction
    | expression '*' expression        { $$ = $1 * $3; } // handle multiplication
    | expression '/' expression        { $$ = $1 / $3; } // handle division
    ;

%%
%union{
    int number;
    char* message;
}

%token <number> INT //defines the token INT as the integer number
%token <message> STRING //defines the token STRING as a string of characters

%%

program:
    statement_list 
    | /* empty */;

statement_list:
    statement_list statement
    | statement;

statement:
    assignment_statement
    | print_statement
    | if_statement
    | while_statement;

assignment_statement:
    VARIABLE_NAME '=' expression;

print_statement:
    PRINT '(' expression_list ')' ';';

expression_list:
    /* empty */
    | expression_list ',' expression;

if_statement:
    IF '(' expression ')' '{' statement_list '}'
    | IF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}';

while_statement:
    WHILE '(' expression ')' '{' statement_list '}';

expression:
    INT
    | STRING
    | expression '+' expression
    | expression '-' expression
    | expression '*' expression
    | expression '/' expression
    | '(' expression ')';

%%

int main(){
    yyparse(); //parses the input based on the above rules and tokens

    return 0;
}
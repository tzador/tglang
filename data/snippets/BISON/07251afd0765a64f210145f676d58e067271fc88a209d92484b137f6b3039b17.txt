# This is a BISON code snippet

%token NUMBER           # Define token for numeric values
%token ADD SUB MULT DIV # Define tokens for arithmetic operations
%left ADD SUB            # Define left precedence for addition and subtraction
%left MULT DIV           # Define left precedence for multiplication and division

%%                      # Start of grammar rules
expression :            # Grammar rule for expressions
    NUMBER              # Expression can be a single number
    | expression ADD expression  # Or an addition of two expressions
    | expression SUB expression  # Or a subtraction of two expressions
    | expression MULT expression # Or a multiplication of two expressions
    | expression DIV expression  # Or a division of two expressions

%%                      # End of grammar rules

int main() {            # Main function
    printf("Enter an arithmetic expression: "); # Prompt user for input
    yyparse();          # Call parser function
    return 0;           # Exit program
}

int yyerror(char *msg) { # Error handling function
    printf("Error: %s\n", msg); # Print error message
    return 0;           # Exit program
}

int yywrap() {           # End of file handling function
    return 1;           # Return true to stop parsing
}
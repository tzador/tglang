%{
// This is a code snippet in BISON - a tool for generating parsers 
// This section contains global variables and functions
#include <stdio.h>
#include <stdlib.h>

int total = 0; // global variable to hold the total sum

void print_result() {
  printf("The total sum is %d\n", total);
}

void reset() {
  total = 0; // reset total sum
}
%}

%start input

%token NUM // a token for numbers

%% // grammar rules section

input: // the main rule, starting with keyword "input"
  | input NUM { total += $2; } // for each number, add to total sum
  | input '+' NUM { total += $3; } // handle addition
  | input '-' NUM { total -= $3; } // handle subtraction
  | input '*' NUM { total *= $3; } // handle multiplication
  | input '/' NUM { total /= $3; } // handle division
  | input '%' NUM { total %= $3; } // handle modulo
  | input '^' NUM { total ^= $3; } // handle exponentiation
  | input '\n' { print_result(); reset(); } // handle end of input
  ;

%% // this section contains C code to be executed when a rule matches

int main(int argc, char** argv) {
  yyparse(); // parse input using generated parser
  return 0;
}
%{
/**
 * This is a BISON code snippet used for creating a simple calculator that can perform basic arithmetic operations.
 * Author: John Doe
**/
%}

/* Declare the tokens to be used in the grammar */
%token <number> INTEGER
%token ADD SUB MUL DIV

/* Define the precedence and associativity of the operators */
%nonassoc LOWER_THAN_MUL_DIV
%left ADD SUB
%left MUL DIV

%%
start: expression { printf("Result: %d", $1); }; /* Start rule for the grammar that displays the final result */
expression: INTEGER { $$ = $1; } /* The most basic expression is just a number */
| expression ADD expression { $$ = $1 + $3; } /* Addition operation */
| expression SUB expression { $$ = $1 - $3; } /* Subtraction operation */
| expression MUL expression { $$ = $1 * $3; } /* Multiplication operation */
| expression DIV expression { $$ = $1 / $3; } /* Division operation */
| '-' expression %prec LOWER_THAN_MUL_DIV { $$ = -$2; } /* Unary minus operation */
| '(' expression ')' { $$ = $2; } /* Parentheses for grouping expressions */
;
%%
%token <val> NUMBER
%token <name> VARIABLE
%token NOT EQUALS

%% /*Main*/
start: statement { /* main entry point */ };

/*Statement*/
statement:
    assign_exp | print_exp | loop_exp | if_exp
    | compound_stmt | error { /* handle unknown statement */ };

/*Assignment*/
assign_exp:
    VARIABLE EQUALS expression { /* perform assignment */ };

/*Printing*/
print_exp:
    "PRINT" expression { /* perform print statement */ };

/*Looping*/
loop_exp:
    "FOR" VARIABLE "FROM" NUMBER "TO" NUMBER statement
    { /* perform for loop */ };

/*Conditional*/
if_exp:
    "IF" expression "THEN" statement "ELSE" statement
    { /* perform if statement */ };

/*Compound Statement*/
compound_stmt:
    "{" statement+ "}" { /* perform multiple statements */ };

/*Expression*/
expression:
    NUMBER | VARIABLE | expression "+" expression
    | expression "-" expression { /* handle arithmetic operations */ };

%% /*Supporting Code*/
VAL : [\d]+; /* matches any positive integer */
NAME: [a-zA-Z]+; /* matches any variable name */
EQUALS: "="; /* matches equals operator */
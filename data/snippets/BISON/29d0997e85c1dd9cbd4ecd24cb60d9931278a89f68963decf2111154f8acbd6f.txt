%{
    /* Defines the start symbol and includes standard library */
     %start expression
     %include <stdlib.h>
%}

/* Defines all the token types and their regular expression patterns */
/* `Whitespace` and `Comment` are skip tokens */
id              [a-zA-Z_][a-zA-Z0-9_]*
number          [0-9]+
string          \"([^\\\"]|\\.)*\"

/* Defines the grammar rules */
expression:     value '+' value { $$ = $1 + $3; }
               | value '-' value { $$ = $1 - $3; }
               | value '*' value { $$ = $1 * $3; }
               | value '/' value {
                   /* Handles division by zero error */
                   if ($3 != 0) $$ = $1 / $3;
                   else {
                       printf("Error: Division by zero! \n");
                       exit(1);
                   }
               }
               | value '^' value { $$ = pow($1, $3); }
               | '(' expression ')' { $$ = $2; }
               ;

/* Defines the value rule which represents a number or an identifier */
value:          number { $$ = atoi($1); }
               | id { $$ = $1; }
               ;

/* Defines the error rule for handling syntax errors */
%%

/* Includes the main function which takes input and parses it using the defined rules */
int main(void) {
    char *input;
    printf("Enter an arithmetic expression: ");
    scanf("%s", input);
    yyparse(); /* Executes the parser */
    return 0;
}
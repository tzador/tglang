%{
	#include <stdio.h> 
%}

/* Define the start symbol as 'program' */
%start program 

/* Define the non-terminal symbol 'program' */
program: function_declaration ';'
    | statement ';'
    | program function_declaration ';'
    | program statement ';'

/* Define the 'function_declaration' non-terminal */
function_declaration: type_specifier ID '(' parameter_list ')' '{' function_body '}'
    | type_specifier ID;

/* Define the 'statement' non-terminal */
statement: selection_statement
    | iteration_statement
    | jump_statement
    | expression_statement;

/* Define the 'type_specifier' non-terminal */
type_specifier: 'int'
    | 'float'
    | 'double'
    | 'char';

/* Define the 'parameter_list' non-terminal */
parameter_list: type_specifier ID 
    | parameter_list ',' type_specifier ID;

/* Define the 'function_body' non-terminal */
function_body: declaration_list compound_statement;

/* Define the 'declaration_list' non-terminal */
declaration_list: declaration 
    | declaration_list declaration;

/* Define the 'declaration' non-terminal */
declaration: type_specifier ID ';';

/* Define the 'compound_statement' non-terminal */
compound_statement: '{' statement_list '}';

/* Define the 'statement_list' non-terminal */
statement_list: statement 
    | statement_list statement;

/* Define the 'selection_statement' non-terminal */
selection_statement: 'if' '(' expression ')' statement 'else' statement;

/* Define the 'iteration_statement' non-terminal */
iteration_statement: 'while' '(' expression ')' statement;

/* Define the 'jump_statement' non-terminal */
jump_statement: 'return' expression ';';

/* Define the 'expression_statement' non-terminal */
expression_statement: expression ';';

/* Define the 'expression' non-terminal */
expression: ID '=' expression
    | ID '(' ')'
    | ID '(' argument_list ')';

/* Define the 'argument_list' non-terminal */
argument_list: expression 
    | argument_list ',' expression;

/* Define the 'ID' terminal symbol */
ID: [a-zA-Z_][a-zA-Z0-9_]*;

%%

int main()
{
	yylex(); /* Call the scanner */
	return 0;
}

/* Implementation of the 'yylex' function */
int yylex() 
{
	int num; 
	/* Scan an integer from the standard input */
	scanf("%d", &num); 

	/* Print the scanned integer */ 
	printf("Number entered by the user = %d", num);
	return 0;
}
%{
    // This section includes the necessary libraries and defines any global variables
    #include <stdio.h>
    #include <stdlib.h>
    int result = 0;
%}

// This section defines the grammar rules for the BISON program
// It includes regular expressions and actions to be taken upon matching
// The following code snippet is for a simple calculator program that adds two numbers

// The start symbol for the grammar is defined, in this case it is "program"
%start program

// The tokens/terminals used in the grammar are declared
%token NUMBER
%left '+' '-'

// The grammar rules are defined in the form of productions
program:
    | /*empty*/
    | program expression '\n'  // The program can have multiple expressions separated by newlines

expression:
    NUMBER                    // The simplest type of expression is just a single number
    | expression '+' expression { result = $1 + $3; }  // Addition operation with action to store result
    | expression '-' expression { result = $1 - $3; }  // Subtraction operation with action 
%{
    // This section can include any additional C code or functions to be used in the actions
    // In this case, we will define a function to print the result
    void printResult(int result) {
        printf("The result is: %d\n", result);
    }
%}

// This section specifies the Bison code to be executed upon successful parsing
// In this case, it will print the result of the calculation
%%
    // The main function, responsible for reading input and calling the parser
    int main() {
        yyparse();
        printResult(result);  // Calling the function defined in the previous section
        return 0;
    }
%%
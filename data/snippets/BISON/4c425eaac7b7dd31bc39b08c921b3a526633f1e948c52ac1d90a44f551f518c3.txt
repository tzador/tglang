%{
#include <stdio.h> //Include statements
#include <stdlib.h>
%}

%token <num> INT	//User-defined token

%%
program : stmt_list
	;
	
stmt_list : stmt_list stmt	//Rule for list of statements
		| stmt
	;
	
stmt : expression		//Rule for expression statements
	| branch_stmt		//Rule for conditional statements
	| loop_stmt		//Rule for loop statements
	| declaration		//Rule for variable declarations
	;
	
expression : ID '=' num_expression ';'	//Rule for assignment statement
	| num_expression ';'			//Rule for simple expression statement
	;
	
num_expression : ID '+' ID { $$ = $num1 + $num2; }	//Rule for addition expression
		| ID '-' ID { $$ = $num1 - $num2; }	//Rule for subtraction expression
		| ID '*' ID { $$ = $num1 * $num2; }	//Rule for multiplication expression
		| ID '/' ID { $$ = $num1 / $num2; }	//Rule for division expression
		| '(' ID ')' { $$ = $num1; }		//Rule for parentheses expression
		;
		
branch_stmt : 'if' '(' condition ')' '{' stmt_list '}'	//Rule for if-else statement
		| 'if' '(' condition ')' '{' stmt_list '}' 'else' '{' stmt_list '}'	//Rule for if-else statement with else clause
		;
		
condition : expression rel_operator expression	//Rule for relational operator
		| '!' condition				//Rule for negation operator
		| condition '&&' condition		//Rule for AND operator
		| condition '||' condition		//Rule for OR operator
		;
		
rel_operator : '<'		//Rule for less than operator
		| '>'			//Rule for greater than operator
		| '<='			//Rule for less than or equal to operator
		| '>='			//Rule for greater than or equal to operator
		| '=='			//Rule for equality operator
		| '!=';			//Rule for not equal to operator
		
loop_stmt : 'for' '(' expression ';' condition ';' expression ')' '{' stmt_list '}'	//Rule for simple for loop statement
		| 'while' '(' condition ')' '{' stmt_list '}'					//Rule for while loop statement
		| 'do' '{' stmt_list '}' 'while' '(' condition ')' ';'				//Rule for do-while loop statement
		;
		
declaration : 'int' ID '=' INT ';'	//Rule for integer variable declaration
		| 'float' ID '=' FLOAT ';'	//Rule for float variable declaration
		| 'char' ID '=' CHAR ';'	//Rule for character variable declaration
		| 'bool' ID '=' BOOL ';'	//Rule for boolean variable declaration
		;

%%
int yyerror(char *s)	//Error handling function
{
	printf("%s\n", s);
}
 
int main(void)	//Main function
{
	yyparse();	//Parse the input
	return 0;
}
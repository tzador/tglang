// Start of file
%{
    /*This is a code block that will be copied verbatim into the generated parser file */
    #include <stdio.h>
    #include <stdlib.h>
%}

%union{
    /*This is an optional union declaration.*/
    char *identifier; // This allows for case-insensitive matching of identifiers
    int intval;
    char *strval;
}

%token <identifier> IDENT
%token <intval> NUM
%token <strval> STR

%left '+' '-'
%right '*' '/'

%%

start: expr { printf("%d\\n", $1); }
    ;

expr: NUM '+' NUM { $$ = $1 + $3; }
    | expr '*' expr { $$ = $1 * $3; }
    | '-' expr %prec '*' { $$ = -($2); }
    ;

%%

// Functions to be called by the parser
int yyerror(char *msg) { printf("Parser error: %s\\n", msg); return 0;}
int yywrap() { return 1; }

// End of file
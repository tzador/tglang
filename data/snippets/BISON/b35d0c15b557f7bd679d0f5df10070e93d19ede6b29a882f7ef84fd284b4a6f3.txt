%{
//This section contains any necessary declarations and includes

#include <stdio.h>
#include <math.h>

//Other declarations and global variables can be included here

void calculate_average(double num); //Function prototype

%}

//Token declarations
%token NUM
%token NEWLINE

%%

//Grammar rules

start: program; //Start rule of the grammar

program: //Rule for the entire program
    statement
    | program statement
    ;

statement: //Rule for individual statements
    expression NEWLINE
    | assignment NEWLINE
    | print NEWLINE
    ;

expression: //Rule for mathematical expressions
    NUM '+' NUM //Addition
    | NUM '-' NUM //Subtraction
    | NUM '*' NUM //Multiplication
    | NUM '/' NUM //Division
    | '(' expression ')' //Parentheses
    ;

assignment: //Rule for assigning values to variables
    'let' NAME '=' expression //Variable declaration and assignment
    | NAME '=' expression //Variable reassignment
    ;

print: //Rule for printing output
    'print' expression //Prints the result of the expression to the console
    ;

%%

//Function definitions and other necessary code
void calculate_average(double num) { //Function to calculate average of a given number n
    double sum = 0;
    for(int i=1; i<=num; i++) {
        sum += i; //Calculating sum of n numbers
    }
    double average = sum / num; //Dividing sum by n to get average
    printf("The average of %f numbers is %f\n", num, average); //Prints the average to the console
}

int main() {
    yyparse(); //BISON function that begins the parsing process
    return 0;
}

//This section contains any necessary additional code, such as yywrap function or yylval struct definition
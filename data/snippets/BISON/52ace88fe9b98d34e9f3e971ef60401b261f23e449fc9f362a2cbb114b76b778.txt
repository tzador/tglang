list: /*BISON declaration for a list data structure*/
    EMPTY /*empty list production*/
    | list element /*list production with an element*/
    | list list /*list production with nested lists*/
    ;

element: /*BISON declaration for an element in the list*/
    NUMBER /*production for a number element*/
    | STRING /*production for a string element*/
    | list /*production for a nested list element*/
    ;

%% /*BISON declarations end with two consecutive percent signs*/

/*actions and rules to define the behavior of the list data structure*/
%% /*double percent signs to indicate the start of actions and rules*/

/*rule for printing the elements of a list*/
print_list:
    list { /*code executed for printing a list*/
        int i;
        for(i=0; i<$$->length; i++) { /*for loop for iterating through the list*/
            if($$->array[i].type == NUMBER) /*checking the type of element*/
                printf("%d", $$->array[i].value); /*printing the number element*/
            else if($$->array[i].type == STRING)
                printf("%s", $$->array[i].value); /*printing the string element*/
            else /*element is a nested list*/
                print_list($$->array[i].value); /*recursive call for printing the nested list*/
        }
    }
    ;
%token <val> NUMBER            /* define token for numerical values */
%token <oper> PLUS MINUS MULT DIV  /* define tokens for operators */
%left PLUS MINUS                  /* define left associativity for operators */
%left MULT DIV                     /* define higher precedence for multiplication and division */

%%
statement: expression
    | error { yyerror("Invalid statement"); } /* error handling for invalid input */
    ;

expression: expression PLUS expression
    { $$ = $1 + $3; }   /* perform addition */
    | expression MINUS expression
    { $$ = $1 - $3; }   /* perform subtraction */
    | expression MULT expression
    { $$ = $1 * $3; }   /* perform multiplication */
    | expression DIV expression
    { $$ = $1 / $3; }   /* perform division */
    | NUMBER
    { $$ = $1; }        /* return numerical value */
    ;

%%
/* function for handling errors during parsing */
void yyerror(const char *str) {
    fprintf(stderr, "%s", str);
}
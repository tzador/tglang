%{
  // This code snippet is written in BISON, a programming language used for creating parsers. 
  // The following code will be executed when the parser is initialized.
    
  // Define a struct called 'Node' with three elements: 'type', 'value' and 'children'.
  typedef struct {
    char *type;
    char *value;
    Node *children;
  } Node;
    
  // Define a global variable 'root' of type 'Node'.
  Node* root;
%}

%token INT_LITERAL
%token FLOAT_LITERAL
%token STRING_LITERAL

// Define how our grammar should look like using BISON syntax.
program: statement_list
       | /* empty */
       ;

// Define a statement as a list of expressions.
statement_list: statement
               | statement_list statement
               ;

// Define an expression as either an integer, float, string or an operation.
expression: INT_LITERAL
          | FLOAT_LITERAL
          | STRING_LITERAL
          | expression '+' expression
          | expression '-' expression
          | expression '/' expression
          | expression '*' expression
          ;

// Define a statement as an '=' sign followed by an expression.
statement: expression '=' expression
          ;

// Define a method to handle any unexpected input.
error: '<' { printf("Unexpected input!\n"); }

// Define a method to handle any syntax errors.
// The BISON code follows the standard C code syntax.
void yyerror(char *s) {
  fprintf(stderr, "%s\n", s);
  exit(1);
}
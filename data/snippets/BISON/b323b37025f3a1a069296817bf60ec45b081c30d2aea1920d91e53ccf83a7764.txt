// This is a BISON code snippet
%{
    /* include necessary libraries */
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <math.h>
%}

// Define tokens
%token NUM
%token IDENTIFIER
%token PLUS
%token MINUS
%token TIMES
%token DIVIDE
%type<type_t> expr

// Define the grammar rules
%%

/* rule for expr */
expr: NUM              { $$ = $1; }
    | IDENTIFIER      { $$ = lookup_symbol($1); }
    | expr PLUS expr  { $$ = $1 + $3; }
    | expr MINUS expr { $$ = $1 - $3; }
    | expr TIMES expr { $$ = $1 * $3; }
    | expr DIVIDE expr{ $$ = $1 / $3; }
    ;

%%

// Function to lookup symbol in symbol table
// Returns value of the symbol if found, otherwise exits with error
type_t lookup_symbol(char *symbol) {
    /* implementation here */
}
/* BISON code for a calculator program */

%{

/* global variables to store computation */

int result;

// function prototypes
int sum(int a, int b);
int diff(int a, int b);
int product(int a, int b);

%}

/* token definitions */

%token <num> INTEGER
%token <name> FUNCTION
%token <op> ADD SUBT MULT DIV 

/* grammar rules */

calclist: /* empty */
        | calclist exp {printf("%d\n",$1);}    /* print result after every expression */

exp: INTEGER                               {$$ = $1;}          /* integer value */
    | FUNCTION '(' INTEGER ',' INTEGER ')' {   /* function call */
            if(strcmp($1,"sum")==0){    /* check for function name */
                $$ = sum($3,$5);       /* call function with parameters */
            }else if(strcmp($1,"diff")==0){
                $$ = diff($3,$5);
            }else if(strcmp($1,"product")==0){
                $$ = product($3,$5);
            }
        }

/* support functions */

int sum(int a, int b){      /* addition function */
    return a + b;
}

int diff(int a, int b){     /* subtraction function */
    return a - b;
}

int product(int a, int b){  /* multiplication function */
    return a * b;
}

%%

/* C code portion */
#include<stdio.h>
extern int yylex();
int main(){
    yyparse();      /* call parser */
    return 0;
}
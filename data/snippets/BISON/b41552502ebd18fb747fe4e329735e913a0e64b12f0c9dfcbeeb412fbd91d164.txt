/* A simple Bison program that calculates the area of a circle */
 
 %{
    #include <stdio.h>
    #include <math.h>
    
    // define PI as a constant value
    #define PI 3.141592
    
    // declare functions to be used in the program
    double calculate_area(double radius);
 %}
 
 // The main rule of the program
 // Defines the start of the program and calls the calculate_area function
 // The result of the calculation is assigned to the "area" variable
 %start program
 %{
    double area;
 %}
    
 // Define the grammar for the program
 program: EXP { area = $1; }
 
 // Grammar rule to calculate the area of a circle
 // Calculates the area using the calculate_area function
 EXP: 'Circle' '(' NUMBER ')' { $$ = calculate_area($3); }
 
 // Define a function to calculate the area of a circle
 double calculate_area(double radius)
 {
    return PI * pow(radius, 2);
 }
 
 // Include token definitions
 %token NUMBER
 
 // Tell Bison to use standard C functions
 %lex-param {FILE *input;}
 %lex-param {FILE *output;}
 
 // Define the tokenizing function
 %{
    int yylex(void);
 %}
 
 // Define the tokenizing rules
 %{
    // Skip all whitespace characters
    [ \t\n]+
    // Match a decimal number and return the NUMBER token
    [1-9][0-9]* | 0 {return NUMBER;}
    // Match the '(' character
    "(" {return '(';}
    // Match the ')' character
    ")" {return ')';}
 %}
 
 // Tell Bison where to get the input from
 %lex-param {input}
 // Tell Bison where to send the output to
 %output {output}
 
 // Define error handling
 %error-verbose
 
 // Main function of the program
 int main()
 {
    // Tell Bison to start parsing the input
    yyparse();
    
    // Print the calculated area to the console
    printf("The area of the circle is %lf\n", area);
    
    // Exit the program
    return 0;
 }
%token TABLE_NAME TABLE_ROW TABLE_CELL
%%

table: TABLE_NAME '{' table_rows '}'
    {
        // This rule specifies a BISON table
        cout << "Table: " << $1 << endl; // Prints the table name
        // Loop through and print each row
        for (int i = 0; i < $3.size(); i++) {
            cout << "Row " << i+1 << ": " << endl;
            // Loop through and print each cell in the row
            for (int j = 0; j < $3[i].size(); j++) {
                cout << "\t" << "Cell: " << $3[i][j] << endl;
            }
        }
    }
    ;

table_rows: TABLE_ROW
    {
        // This rule specifies a row in the table
        $$ = vector<vector<string>>(); // Initialize empty 2D vector
        // Push back the row into the vector
        $$[0].push_back($1);
    }
    | table_rows TABLE_ROW
    {
        // Continuously add rows to the vector
        $$ = $1;
        // Push back the new row into the vector
        $$[$$.size()-1].push_back($2);
    }
    ;

TABLE_CELL: /* some code to parse a single table cell */
    {
        // This rule specifies a cell in the table
        $$ = $1; // Assign the parsed cell to the output
    }
    ;
%start expression
  
%%

expression: 
  NUMBER                       {$$ = $1;}          //rule for numerical expression
  | variable                   {$$ = $1;}          //rule for variable expression
  | expression '+' expression  {$$ = $1 + $3;}     //rule for addition expression
  | expression '-' expression  {$$ = $1 - $3;}     //rule for subtraction expression
  | expression '*' expression  {$$ = $1 * $3;}     //rule for multiplication expression
  | expression '/' expression  {$$ = $1 / $3;}     //rule for division expression
  | '(' expression ')'         {$$ = $2;}          //rule for parenthesis expression
  | '-' expression             {$$ = -$2;}         //rule for negation expression
  | 'sin' expression           {$$ = sin($2);}     //rule for sine function expression
  | 'cos' expression           {$$ = cos($2);}     //rule for cosine function expression
  | 'tan' expression           {$$ = tan($2);}     //rule for tangent function expression
  | 'ln' expression            {$$ = log($2);}     //rule for natural logarithm function expression
  | 'log' expression           {$$ = log10($2);}   //rule for base 10 logarithm function expression
  | expression '^' expression  {$$ = pow($1, $3);} //rule for exponentiation expression
  | expression '!'             {$$ = factorial($1);}//rule for factorial expression
  | expression '==' expression {$$ = $1 == $3;}     //rule for equality expression
  | expression '!=' expression {$$ = $1 != $3;}     //rule for inequality expression
  | expression '<' expression  {$$ = $1 < $3;}      //rule for less than expression
  | expression '>' expression  {$$ = $1 > $3;}      //rule for greater than expression
  | expression '<=' expression {$$ = $1 <= $3;}     //rule for less than or equal expression
  | expression '>=' expression {$$ = $1 >= $3;}     //rule for greater than or equal expression
  | expression '&&' expression {$$ = $1 && $3;}     //rule for logical AND expression
  | expression '||' expression {$$ = $1 || $3;}     //rule for logical OR expression
  ;
  
variable: 
  ID                           {$$ = getVariableValue($1);}//$1 represents the name of the variable
  
%%

//function for calculating factorial
int factorial(int n){
  if(n <= 1){
    return 1;
  }
  else{
    return n*factorial(n-1);
  }
}

//function for getting variable value
float getVariableValue(char* var_name){
  if(strcmp(var_name, "x") == 0){
    return x; //x is a pre-defined variable
  }
  else if(strcmp(var_name, "y") == 0){
    return y; //y is a pre-defined variable
  }
  else{
    printf("Error: Variable '%s' does not exist.\n", var_name);
    return 0;
  }
}
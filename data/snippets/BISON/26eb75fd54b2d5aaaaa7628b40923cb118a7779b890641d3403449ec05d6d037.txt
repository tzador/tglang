%{
/*
This is a BISON code snippet example

BISON is a parser generator that generates parsers in the C programming language.

This code snippet is an example of a simple calculator that can evaluate basic arithmetic expressions.
*/
%}

%token NUMBER /* declares the token type "NUMBER" */
%left '+' '-' /* defines the operator precedence for addition and subtraction */
%left '*' '/' /* defines the operator precedence for multiplication and division */

%% /* the grammar rules begin here */
  
program:
    expression { /* do something with the result of the expression */ }
    ;

expression:
    NUMBER { $$ = $1; /* $1 holds the value of the parsed NUMBER token */ }
    | expression '+' expression { $$ = $1 + $3; /* evaluates addition expression */ }
    | expression '-' expression { $$ = $1 - $3; /* evaluates subtraction expression */ }
    | expression '*' expression { $$ = $1 * $3; /* evaluates multiplication expression */ }
    | expression '/' expression { $$ = $1 / $3; /* evaluates division expression */ }
    ;

%% /* the grammar rules end here, the action section begins here */
  
void main() {
    yyparse(); /* calls the parser generated by BISON */
}

int yyerror(const char* s) {
    fprintf(stderr, "Error: %s\n", s); /* prints error message if parsing fails */
    return 0; /* returns 0 to indicate parsing failure */
}
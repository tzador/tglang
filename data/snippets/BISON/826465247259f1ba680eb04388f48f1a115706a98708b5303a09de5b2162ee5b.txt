// Declare rules for a simple mathematical expression grammar
%token NUMBER    // declare NUMBER as a token

%%

/* Grammar rules */
expression:   // rule for an expression
  NUMBER          // expression can be just a NUMBER
  | expression '+' expression     // expression can also be two expressions added together
  | expression '*' expression     // or two expressions multiplied together
  | '(' expression ')'       // or an expression enclosed in parentheses
  
%%

/* Function to evaluate the expression */
public int evaluate_expression(expression)
{
  if (expression.operand[1] == '+')    // if the operator is addition
    return evaluate_expression(expression.operand[0]) + evaluate_expression(expression.operand[2]);   // recursively evaluate the two operands and add them
  else if (expression.operand[1] == '*')    // if the operator is multiplication
    return evaluate_expression(expression.operand[0]) * evaluate_expression(expression.operand[2]);   // recursively evaluate the two operands and multiply them
  else    // if the expression is just a NUMBER
    return expression.operand[0];   // return the NUMBER
}
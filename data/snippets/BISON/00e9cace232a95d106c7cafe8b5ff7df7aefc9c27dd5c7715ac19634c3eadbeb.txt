%token NUMBER /* define tokens for numeric values */
%token PLUS /* define token for addition */
%token MINUS /* define token for subtraction */
%token MULTIPLY /* define token for multiplication */
%token DIVIDE /* define token for division */

/* define grammar rules */
%%
/* rule for evaluating arithmetic expressions */
arithmetic_expression: NUMBER PLUS NUMBER | NUMBER MINUS NUMBER | NUMBER MULTIPLY NUMBER | NUMBER DIVIDE NUMBER;
%%
/* function to evaluate arithmetic expressions */
void evaluate_arithmetic_expression(){
    printf("Enter the expression to be evaluated: ");
    char expression[100];
    scanf("%[^\n]%*c", expression); /* read the expression as a string */
    YY_BUFFER_STATE buffer = yy_scan_string(expression); /* create a buffer for the expression */
    int result = yyparse(); /* parse the expression */
    yy_delete_buffer(buffer); /* delete the buffer after parsing */
    printf("Result of expression: %d \n", result); /* print the result */
}

/* main function */
int main(){
    evaluate_arithmetic_expression(); /* call function to evaluate the expression */
    return 0;
}
%{
    /* This is a comment in BISON */
    #include <stdio.h> // Include standard input/output header file
    int count = 0; // Declare and initialize global variable
%}

%token DIGIT // Define token type

%%

program : stmt_list // Define grammar rule for program
        | /* Empty rule */
        ;

stmt_list : stmt_list '\n' stmt // Define grammar rule for statement list
          | stmt '\n' stmt // Define grammar rule for statement with line break
          ;

stmt : assign_stmt // Define grammar rule for assignment statement
     | print_stmt // Define grammar rule for print statement
     ;

assign_stmt : ID '=' expr // Define grammar rule for assigning value to variable
            | '++' ID // Define grammar rule for incrementing variable
            | ID '++' // Define grammar rule for incrementing variable
            | '--' ID // Define grammar rule for decrementing variable
            | ID '--' // Define grammar rule for decrementing variable
            ;

print_stmt : 'print' expr // Define grammar rule for printing expression
           | 'print' STRING // Define grammar rule for printing string
           ;

expr : expr '+' expr // Define grammar rule for addition
     | expr '-' expr // Define grammar rule for subtraction
     | expr '*' expr // Define grammar rule for multiplication
     | expr '/' expr // Define grammar rule for division
     | '(' expr ')' // Define grammar rule for parentheses
     | ID // Define grammar rule for identifiers
     | DIGIT // Define grammar rule for digits
     ;

%%

int main() {
    yyparse(); // Parse the input using generated parser functions
    return 0;
}

int yyerror(char *msg) {
    fprintf(stderr, "Error: %s\n", msg); // Print error message to standard error stream
    return 0;
}
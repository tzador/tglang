%token NUMBER
%token PLUS MINUS MULT DIV
%start input

%%

input: /* empty */
    | input line
    ;

line:
    expression { printf("Result: %d", $1); } NEWLINE
    | NEWLINE
    ;

expression:
    NUMBER               /* terminals defined as tokens */
    | expression PLUS expression
    { $$ = $1 + $3; }
    | expression MINUS expression
    { $$ = $1 - $3; }
    | expression MULT expression
    { $$ = $1 * $3; }
    | expression DIV expression
    { 
        if ($3 == 0) {
            yyerror("Division by zero"); /* error checking */
            YYERROR;
        }
        else {
            $$ = $1 / $3;
        }
    }

%%

// The following functions are required for the parser to run.

int yylex() {/* code to return the next token */}
void yyerror(const char *s) {/* code to handle parsing errors */}
int main() {
    yyparse(); /* runs the parser */
    return 0;
}
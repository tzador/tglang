/** Code for a calculator using BISON **/

/* Declare variables */
%{
    #include <stdio.h>

    /* Declare functions */
    int calculate(int num1, int num2, char op);
%}

/* Declare tokens for numbers and operators */
%token NUM
%token ADD SUB MULT DIV

/* Define precedence for operators */
%left ADD SUB
%left MULT DIV

%%

/* Define grammar rules for expressions */
input: /* empty */
    | input line
    ;

line:
    /* Print prompt */
    { printf("> "); }
    /* Parse input and print result */
    expr {printf("= %d\n", $1);}
    | '\n'
    ;

expr:
    /* Operator expressions */
    expr ADD expr {$$ = $1 + $3;}
    | expr SUB expr {$$ = $1 - $3;}
    | expr MULT expr {$$ = $1 * $3;}
    | expr DIV expr {
        /* Check for division by zero */
        if ($3 == 0) {
            yyerror("Division by zero");
        }
        else {
            $$ = $1 / $3;
        }
    }
    /* Number expressions */
    | NUM {$$ = $1;}
    ;

/* Error handling function */
void yyerror(char *s)
{
    printf("%s\n", s);
}

int main()
{
    /* Start parsing */
    yyparse();
    return 0;
}

/* Function to perform calculations based on operator */
int calculate(int num1, int num2, char op) {
    switch(op) {
        case '+':
            return num1 + num2;
            break;
        case '-':
            return num1 - num2;
            break;
        case '*':
            return num1 * num2;
            break;
        case '/':
            /* Check for division by zero */
            if (num2 == 0) {
                yyerror("Division by zero");
                return -1;
            }
            else {
                return num1 / num2;
            }
            break;
        default:
            return 0;
    }
}
%%
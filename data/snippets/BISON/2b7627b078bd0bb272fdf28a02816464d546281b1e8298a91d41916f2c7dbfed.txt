// Grammar for a simple calculator

%token NUMBER  // define a token for numerical values

%%

program:
    statement
    | program statement       // program can have multiple statements

statement:
    expr ';'                  // statements are expressions followed by a semicolon
    | VARIABLE '=' expr ';'   // can also assign value to a variable

expr:
    NUMBER                    // can just be a number
    | VARIABLE                // or just a variable
    | expr '+' expr           // or a sum of two expressions
    | expr '-' expr           // or a difference of two expressions
    | expr '*' expr           // or a product of two expressions
    | expr '/' expr           // or a quotient of two expressions
    | '(' expr ')'            // or an expression enclosed in parentheses

%%

// The code above defines the basic grammar for a simple calculator where the user can input expressions using numbers and variables, as well as perform basic operations such as addition, subtraction, multiplication, and division. This grammar can be used as a basis for building a full calculator program in the BISON programming language.
%{
// This section is used for declaring global variables and other code that needs to be executed before parsing
  int count = 0; //declaring a global integer variable for counting
%}

%%
// This section contains the grammar rules and actions
statement: //defining the statement rule
       expr { //$1 represents the matched expression, here we increment the count variable by 1
         count++;
         printf("The current count is %d\n", count); //$<var> can be used to access global variables
       }
       | /* empty */ //if no expression is matched, do nothing 
       ;

expr: //defining the expression rule
       ID { //$1 represents the matched ID, here we print the ID and increment count by 2
         count+=2;
         printf("The current count is %d\n", count);
         printf("The matched ID is %s\n", $1); //$1 is a string, so we use %s for formatting
       }
       | INT { //$1 represents the matched integer, here we print the integer and increment count by 3
         count+=3;
         printf("The current count is %d\n", count);
         printf("The matched integer is %d\n", $1); //$1 is an integer, so we use %d for formatting
       }
       ;
       
%}

%%
// This section is executed after parsing, it can contain actions to perform with the parsed data
int main(){
  yyparse();
  printf("The final count is %d\n", count); //printing the final value of count
  return 0;
}
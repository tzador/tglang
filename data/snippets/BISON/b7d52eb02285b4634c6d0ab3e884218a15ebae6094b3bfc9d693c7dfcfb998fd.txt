%{
/* This code snippet is a simple calculator that can perform addition and multiplication of two numbers.
It uses BISON, a parser generator, to define the grammar and generate the C-parser code. 
*/
#include <stdio.h>
void yyerror(const char *);
%}

%token <num> NUMBER /* Defining token for numbers */

%%
/* Grammar rules */
program:
  statement
| program statement
;
statement:
  expr '\n' { printf("Result: %d\n", $1); } 
;
expr:
  NUMBER '+' NUMBER       { $$ = $1 + $3; } 
| NUMBER '*' NUMBER       { $$ = $1 * $3; }
;
%%

/* Function to handle error messages */
void yyerror(const char *s)
{
  fprintf(stderr, "%s\n", s);
}
 
/* Main function */
int main()
{
  /* Parse the input and run the calculator */
  yyparse();
  return 0;
}

/* Function to get the next input from stdin */
int yywrap(void)
{
  return 1;
}
 
/* Flex pre-defined function to get the next token */
int yylex(void)
{
  int c = getchar();
 
  if (c == 'n' || c == 't')
    return c;
  if (c == '+' || c == '*')
    return c;
  if (c == '-' || c == '/')
    return c;
 
  if (isdigit(c))
  {
    ungetc(c, stdin);
    scanf("%d", &yylval);
    return NUMBER;
  }
 
  if (c == (EOF))
    return 0;
}

/* Example input and output:
Input: 2+3
Result: 5
Input: 4*6
Result: 24
*/
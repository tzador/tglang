%token NUMBER // Defines a token called NUMBER
%token PLUS MINUS MULTIPLY DIVIDE // Defines tokens for basic arithmetic operations
%token POW // Defines a token for exponentiation operation

%% // Indicates the start of the grammar rules section

start // Defines the start rule of the grammar
  : expr {$$ = $1; /* Assigns the value of the first expression to the variable $$ */} 
  ;

expr // Defines the expression rule
  : term {$$ = $1; /* Assigns the value of the first term to the variable $$ */}
  | expr PLUS term {$$ = $1 + $3; /* Adds the values of the first expression and term and assigns it to $$ */}
  | expr MINUS term {$$ = $1 - $3; /* Subtracts the value of the first term from the first expression and assigns it to $$ */}
  | expr MULTIPLY term {$$ = $1 * $3; /* Multiplies the values of the first expression and term and assigns it to $$ */}
  | expr DIVIDE term {$$ = $1 / $3; /* Divides the value of the first expression by the first term and assigns it to $$ */}
  | expr POW term {$$ = pow($1, $3); /* Calculates the value of the first expression to the power of the first term and assigns it to $$ */}
  ;

term // Defines the term rule
  : NUMBER {$$ = $1; /* Assigns the numeric value of the NUMBER token to the variable $$ */}
  ;
  
%% // Indicates the end of the grammar rules section
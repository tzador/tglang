/* Bison code for a calculator that can handle basic arithmetic operations */

%{
#include <stdio.h> // include the standard input output library
int result; // variable to store the final result
%}

/* Define the tokens for our calculator */
%token NUM // token for numbers
%token ADD // token for addition operation
%token SUB // token for subtraction operation
%token MUL // token for multiplication operation
%token DIV // token for division operation

/* Define the starting symbol for our grammar */
%start calc

/* Define the grammar rules for our calculator */
%%
calc:
    | /* empty production, when user just presses enter */
    | calc expr { printf("Result: %d\n", result); } // print the final result
    ;

expr:
    | NUM { result = $1; } // store the number in the result variable
    | expr ADD NUM { result += $3; } // add the number to the current result
    | expr SUB NUM { result -= $3; } // subtract the number from the current result
    | expr MUL NUM { result *= $3; } // multiply the number with the current result
    | expr DIV NUM { result /= $3; } // divide the current result by the number
    ;

/* Define the rules for handling errors */
%%
int main() {
    printf("Enter the expression: ");
    yyparse(); // call the parser function
    return 0;
}
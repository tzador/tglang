%token <num> NUMBER               //token defined as numeric value
%start START                      //start symbol declared
%left '+' '-'                     //left associativity for addition and subtraction
%left '*' '/'                     //left associativity for multiplication and division
%right '^'                        //right associativity for exponentiation
%nonassoc '(' ')'                 //non-associativity for parentheses

%%                                //beginning of grammar rules section
START:
    expr '\n'
        { return $1; }                //return the result of the expression

expr:
    '-' expr                      //unary negation
        { $$ = -$2; }
    | expr '+' expr               //addition
        { $$ = $1 + $3; }
    | expr '-' expr               //subtraction
        { $$ = $1 - $3; }
    | expr '*' expr               //multiplication
        { $$ = $1 * $3; }
    | expr '/' expr               //division
        { $$ = $1 / $3; }
    | expr '^' expr               //exponentiation
        { $$ = pow($1, $3); }
    | '(' expr ')'                //parentheses
        { $$ = $2; }
    | NUMBER                      //numeric value
        { $$ = $1; }
        ;
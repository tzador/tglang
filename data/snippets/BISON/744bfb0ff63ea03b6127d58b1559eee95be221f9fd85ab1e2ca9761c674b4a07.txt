%{
#include <stdio.h>

int count = 0; // count variable to keep track of number of matches
%}

/* define the tokens to be recognized by the lexer */
DIGIT [0-9]
LETTER [a-zA-Z]
PLUS "+"

%%

/* lexer rules to match the tokens and update the count variable */
{DIGIT}+    { count++; } 
{LETTER}+    { count++; }
{PLUS}       { count++; }

%%

/* starting rule for the parser */
%start input

/* grammar rules for input */
input:  /* empty string */
    | input token // recursively match and update the count variable
    ;

/* token rule to match and print the token */
token: DIGIT    { printf("Matched token: %s\n", yytext); } 
    | LETTER   { printf("Matched token: %s\n", yytext); }
    | PLUS     { printf("Matched token: %s\n", yytext); }
    ;

/* main function to initialize the lexer and parser */
int main()
{
    /* call the lexer to find and count matches */
    yylex();

    /* print the final count value */
    printf("Number of matches: %d\n", count);

    return 0;
}
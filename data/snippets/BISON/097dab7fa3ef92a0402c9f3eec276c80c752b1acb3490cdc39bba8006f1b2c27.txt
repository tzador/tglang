// BISON code snippet for a calculator with basic arithmetic operations

// Define grammar rules for each arithmetic operation
%left '+' '-'       /* addition and subtraction have same precedence */
%left '*' '/'       /* multiplication and division have same precedence */

// Define tokens for numbers and operators
%token NUMBER
%token ADDOP         /* '+' or '-' */
%token MULOP         /* '*' or '/' */

// Define start symbol and production rules
%%

start: expression
    ;

expression: NUMBER
    | expression ADDOP expression
    | expression MULOP expression
    ;

// Define actions for each production rule
%%
int main() {
    // Create and initialize stack for holding numbers
    stack<int> numStack;

    // Read input from user
    char input[100];
    fgets(input, 100, stdin);

    // Parse input using BISON
    yyparse();

    // Loop through all the expressions and perform the corresponding operations
    while (!inputQueue.empty()) {
        // Get the expression and store it in a temporary string
        string expression = inputQueue.front();
        inputQueue.pop();

        // Parse the expression using BISON
        yyparse();

        // Get the result from the top of the stack
        int result = numStack.top();

        // Print the result to the console
        cout << "Result of " << expression << " is " << result << endl;
    }

    return 0;
}
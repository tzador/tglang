%{
/* This is a simple calculator that takes two numbers and performs
   basic arithmetic operations on them */
%}

%token NUM  /* identifies a number */
%token ADD  /* identifies addition operation */
%token SUB  /* identifies subtraction operation */
%token MUL  /* identifies multiplication operation */
%token DIV  /* identifies division operation */

%%
program : expr '\n' { printf("$<1>\n", $1); }
        ;
expr    : NUM
        | ADD expr expr { $$ = $2 + $3; }
        | SUB expr expr { $$ = $2 - $3; }
        | MUL expr expr { $$ = $2 * $3; }
        | DIV expr expr { $$ = $2 / $3; }
        ;

%%

/* The following function simplifies using regular expressions in flex
   to recognize numbers and arithmetic operators */
void yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
}

int main(void) {
    yyparse();
    return 0;
}
%{
# This is a comment in BISON
# Defines tokens for numbers and mathematical operators
%}
%token NUM
%token ADD SUB MUL DIV
%%
# Defines grammar rules for basic mathematical expressions
# This rule indicates that an expression can be a number
expression: NUM;

# This rule indicates that an expression can be an addition operation
expression: expression ADD expression;

# This rule indicates that an expression can be a subtraction operation
expression: expression SUB expression;

# This rule indicates that an expression can be a multiplication operation
expression: expression MUL expression;

# This rule indicates that an expression can be a division operation
expression: expression DIV expression;

# This rule indicates that an expression can be surrounded by parentheses
expression: '(' expression ')';

# This rule specifies the order of operations for the mathematical expressions
# It ensures that multiplication and division have higher precedence than addition and subtraction
%left ADD SUB
%left MUL DIV
%%
# Main function that reads input and parses it according to the grammar rules
main:
  # While there is still input to be read
  while (!feof(yyin))
    # Parse the input using the grammar rules defined above
    expression;
  # Exit the program
  exit (0);
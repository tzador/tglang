%token LOGICAL_AND LOGICAL_OR LSHIFT RSHIFT
%left '-' '+' %right ':'
%nonassoc '=' '!' '<' '>' TK_AND
%%
opt_expr: TOK_BOOL OR TOK_BOOL { $$ = new (memory_region) logic_or_expr( $1, $3 ); }
    | TOK_BOOL AND TOK_BOOL { $$ = new (memory_region) logic_and_expr( $1, $3 ); }
    | TOK_BOOL LOGICAL_OR TOK_BOOL
    {
        $$ = new (memory_region) logic_or_expr( $1, $3 );
        if ( $3->rtype == CNST || ($3->rtype == RGLOBAL && !_new_warnings) )
            yywarn("expression expected for the second operand");
        else if ( $3->rtype == RSTATIC && !($3->rega.tp&TMASK) )
            yywarn("(possibly incorrect use of '&')") ;
    }
;
opt_expr: TOK_BOOL LSHIFT TOK_BOOL
    {
        $$ = new (memory_region) logic_lshift_expr( $1, $3 );
        if ( $1->rtype == RSTATIC && !($1->rega.tp&TMASK) )
            yywarn("(possibly incorrect use of '&')") ;
    }
.
// This is a BISON code snippet for a basic calculator
%code requires{
    #include <stdio.h>
    #include <cmath>
}

%token <num> NUMBER

%token PLUS '+'
%token MINUS '-'
%token MULT '*'
%token DIV '/'
%token MOD '%'

%token NEG '-'

%token LPAREN '('
%token RPAREN ')'

// Rules for combining tokens into expressions
%start expression
%%

expression:
    NUMBER
    | expression PLUS expression { $$ = $1 + $3; }
    | expression MINUS expression { $$ = $1 - $3; }
    | expression MULT expression { $$ = $1 * $3; }
    | expression DIV expression { $$ = $1 / $3; }
    | expression MOD expression { $$ = fmod($1, $3); }
    | NEG expression { $$ = -1 * $2; }
    | LPAREN expression RPAREN { $$ = $2; }
;
 
%%

// Function to print result of calculation
void print_result(double result) {
    printf("Result: %f\n", result);
}

// Function to handle parsing errors
void yyerror(char *error) {
    printf("Error: %s\n", error);
}

// Main function to get user input and start parsing
int main() {
    printf("Enter an expression to evaluate: ");
    yyparse(); // Start parsing
    return 0;
}
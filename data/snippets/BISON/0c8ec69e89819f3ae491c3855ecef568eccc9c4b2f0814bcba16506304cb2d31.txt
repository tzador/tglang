%token <int> NUM
%token <string> ID
%token <op> ADD SUB MUL DIV
%token <keyword> IF ELSE WHILE DO FOR
%left ADD SUB
%left MUL DIV
%right NEG
%nonassoc LE LT GE GT EQ NE
%start program
%%

program: statements
    ;

statements: statements statement
    | /* empty */
    ;

statement: assignment
    | control_flow
    ;

assignment: ID '=' expression ';'
    | ID ADD '=' expression ';'
    | ID SUB '=' expression ';'
    | ID MUL '=' expression ';'
    | ID DIV '=' expression ';'
    ;

control_flow: condition
    | loop
    ;

condition: IF '(' expression ')' statement
    | IF '(' expression ')' statement ELSE statement
    ;

loop: WHILE '(' expression ')' statement
    | DO statement WHILE '(' expression ')' ';'
    | FOR '(' initial_clause ';' expression ';' step_clause ')' statement
    ;

initial_clause: assignment
    | /* empty */
    ;

step_clause: assignment
    | /* empty */
    ;

expression: expression LE expression
    | expression LT expression
    | expression GE expression
    | expression GT expression
    | expression EQ expression
    | expression NE expression
    | expression ADD expression
    | expression SUB expression
    | expression MUL expression
    | expression DIV expression
    | NEG expression %prec NEG
    | NUM
    | ID
    | '(' expression ')'
    ;
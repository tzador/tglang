%{
#include <stdio.h> //Include standard input/output header file

int num1, num2, result; //Declare variables for input and result
char operator; //Declare variable for operator
%}

//Define the tokens for numbers, operator and end of expression
%token NUM1 
%token NUM2 
%token OPERATOR
%token END

//Declare the rules for the grammar
%start expression
%type <num> expression

//Define the grammar rules for the expression
expression: NUM1 OPERATOR NUM2 END {$$ = calculate($1, $2, $3);} 
    | NUM1 OPERATOR expression NUM2 END {$$ = calculate($1, $2, $4);}
    ;

//Define the function to calculate the expression
int calculate(int a, int b, char operator){
    if(operator == '+'){
        return a + b;
    }
    else if(operator == '-'){
        return a - b;
    }
    else if(operator == '*'){
        return a * b;
    }
    else if(operator == '/'){
        return a / b;
    }
    else{
        printf("Invalid operator");
        return 0;
    }
}

//Define the rules for recognizing the input and output
%token <num> NUM1
%token <num> NUM2
%token <operator> OPERATOR
%token <end> END

%% //Marks the end of grammar section

//Define the main function
int main(){
    while(!feof(stdin)){ //Continue until end of file is reached
        printf("Enter expression: ");
        yyparse(); //Parse the input
        printf("Result: %d\n", result); //Print the result
    }
    return 0;
}
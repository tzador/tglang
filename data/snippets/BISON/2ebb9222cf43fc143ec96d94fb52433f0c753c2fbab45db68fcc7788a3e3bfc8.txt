%{
// BISON code for a simple calculator
#include <stdio.h>
#include <math.h>
%}

%token ADD SUB MUL DIV        // Declare tokens for operators

%token NUMBER                 // Declare token for numbers

%%

start: expr                    // Start rule
    | start '\n' expr     { printf("Result: %f\n", $2); }    // Print result
    ;

expr: expr ADD term       { $$ = $1 + $3; }     // Addition
    | expr SUB term       { $$ = $1 - $3; }     // Subtraction
    | term                { $$ = $1; }          // Single term
    ;

term: term MUL factor     { $$ = $1 * $3; }     // Multiplication
    | term DIV factor     { $$ = $1 / $3; }     // Division
    | factor              { $$ = $1; }          // Single factor
    ;

factor: NUMBER            { $$ = $1; }          // Number
      | '-' factor        { $$ = -$2; }         // Unary minus
      | '+' factor        { $$ = $2; }          // Unary plus
      | '(' expr ')'      { $$ = $2; }          // Parentheses
      ;

%%

int main() {
    printf("Enter an expression to calculate: ");
    yyparse();                    // Call BISON parser
    return 0;
}

int yyerror(char *msg) {
    printf("Syntax error: %s\n", msg);
    return 0;
}

int yywrap() {
    return 1;
}
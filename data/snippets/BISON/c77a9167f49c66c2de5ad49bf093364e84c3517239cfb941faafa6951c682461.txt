%{
#include <stdio.h>
int a, b, result; /* define global variables */
%}

%token NUMBER
/* define token type */

%%
line: expr '\n' { printf("Result: %d\n", $1); } /* define rule with print statement */
expr: NUMBER { $$ = $1; } /* define rule that sets result equal to token value */
| expr '+' NUMBER { $$ = $1 + $3; } /* define rule that adds number to result */
| expr '-' NUMBER { $$ = $1 - $3; } /* define rule that subtracts number from result */
| expr '*' NUMBER { $$ = $1 * $3; } /* define rule that multiplies number with result */
;

%%
/* define function to get next input */
int yyinput(void) {
	a = getchar();
	return (a == EOF) ? 0 : 1;
}

/* define main function */
int main(void) {
	printf("Enter an arithmetic expression: ");
	yyparse(); /* call parser */
	return 0;
}

/* define function to handle syntax errors */
void yyerror(const char *errmsg) {
	fprintf(stderr, "ERROR: %s\n", errmsg);
	exit(1);
}
%%

/* start of actual code execution */

/* initialize input stream */
yyin = stdin;

/* call parser */
yyparse();

/* print result */
printf("Result: %d\n", result);
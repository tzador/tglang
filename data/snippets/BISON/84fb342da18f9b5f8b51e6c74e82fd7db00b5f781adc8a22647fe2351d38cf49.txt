%token <num> NUMBER            //defines a token named NUMBER that holds a number value
%token <id> VARIABLE           //defines a token named VARIABLE that holds an identifier value
%token <op> PLUS MINUS TIMES   //defines tokens for arithmetic operators

%left PLUS MINUS   //defines left-associative precedence for PLUS and MINUS tokens
%left TIMES        //defines left-associative precedence for TIMES token

%%
expr : NUMBER    { printf("%d", $1); }               //matches a NUMBER token and prints its value
     | VARIABLE  { printf("%s", $1); }               //matches a VARIABLE token and prints its value
     | expr PLUS expr  { printf("%d + %d", $1, $3); } //matches a sum expression and prints the addition
     | expr MINUS expr { printf("%d - %d", $1, $3); } //matches a difference expression and prints the subtraction
     | expr TIMES expr { printf("%d * %d", $1, $3); } //matches a product expression and prints the multiplication
%%

int main() {
  yyparse();    //calls BISON's parser
  return 0;
}
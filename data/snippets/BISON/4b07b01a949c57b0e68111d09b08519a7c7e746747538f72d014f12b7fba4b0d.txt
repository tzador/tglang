Root: Expr;

Expr: Number
    | String
    | ID
    | BinaryExpr
    ;

Number: /[0-9]+/;

String: /"([^"\\]|\\(.|\n))*"/;

ID: /[a-zA-Z_][a-zA-Z_0-9]*/;

BinaryExpr: Expr '+' Expr
    | Expr '-' Expr
    | Expr '*' Expr
    | Expr '/' Expr
    | Expr '^' Expr
    ;

%%

#A basic BISON grammar to parse expressions containing numbers, strings, and identifiers with binary operators.
#The root of the grammar is defined as an expression.

#Expressions can be either a number, string, identifier, or a binary expression.

#A number is defined as a regular expression containing only digits.

#A string is defined as a regular expression containing any character except for double quotes or the backslash character, or the backslash followed by any character or a new line.

#An identifier is defined as a regular expression starting with a letter or underscore and followed by any combination of letters, digits, or underscores.

#Binary expressions can be addition, subtraction, multiplication, division, or exponentiation of two expressions.

#The code snippet ends here, do not include any more lines.
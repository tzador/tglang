/* This is a complex BISON code snippet for a grammar ruleset */

%code {
    // import necessary libraries
    #include <stdio.h>
    #include <stdlib.h>
}

// declare tokens
%token <val> INT
%token <val> FLOAT
%token <val> STRING

// define a variable to store the result of the grammar
%type <val> result

// define grammar rules
%%

program:
    declaration_list
    ;

declaration_list:
    declaration
    | declaration_list declaration
    ;

declaration:
    variable_declaration
    | function_declaration
    ;

variable_declaration:
    type_specifier ID '=' expression ';'
    {
        // custom code to handle variable declaration
        #ifdef DEBUG
        printf("Variable %s declared\n", $2);
        #endif
        $$ = $4;
    }
    ;

function_declaration:
    type_specifier ID '(' parameter_list ')' compound_statement
    {
        // custom code to handle function declaration
        #ifdef DEBUG
        printf("Function %s declared\n", $2);
        #endif
        $$ = $6;
    }
    ;

parameter_list:
    parameter
    | parameter_list ',' parameter
    ;

parameter:
    type_specifier ID
    {
        // custom code to handle function parameters
        #ifdef DEBUG
        printf("Parameter %s declared\n", $2);
        #endif
        $$ = $2;
    }
    ;

compound_statement:
    '{' '}'
    | '{' statement_list '}'
    ;

statement_list:
    statement
    | statement_list statement
    ;

statement:
    expression_statement
    | compound_statement
    | selection_statement
    | iteration_statement
    ;

expression_statement:
    expression ';'
    ;

selection_statement:
    'if' '(' expression ')' statement 'else' statement
    ;

iteration_statement:
    'while' '(' expression ')' statement
    ;

expression:
    var_expression
    | constant_expression
    ;

var_expression:
    ID
    ;

constant_expression:
    INT
    | FLOAT
    | STRING
    ;

type_specifier:
    'int'
    | 'float'
    | 'string'
    ;

%%

// main function to run the parser
int main(void) {
    // create a pointer to the grammar parser
    BISONParser* parser = (BISONParser*)malloc(sizeof(BISONParser));

    // initialize parser
    BISONParserInit(parser);

    // parse input and get the result
    int result = BISONParserParse(parser);

    // cleanup parser
    BISONParserCleanup(parser);

    // free parser memory
    free(parser);

    // print the result
    printf("Result: %d\n", result);

    return 0;
}
%code requires {
    #include <stdio.h>
    int count = 0;
}

%%

program: compound_statement { //rule for program, match a compound statement
    printf("Number of statements in program: %d\n", count);
};

compound_statement: '{' statement_list '}' { // match a compound statement that contains a list of statements
    count++;
};

statement_list: statement { //rule for statement list, match a single statement or a list of statements
    ECHO;
} | statement_list statement;

statement: NUMBER ';' { //rule for statement, match a number followed by semicolon
    int num = atoi($1); //convert string to integer
    printf("Found number: %d\n", num);
    count++;
} | IDENTIFIER '=' NUMBER ';' { //rule for assignment statement, match an identifier, an equal sign, and a number followed by semicolon
    printf("Assigning value %d to variable %s\n", atoi($3), $1);
    count++;
};

%%

yyerror(char *s) { //function to handle syntax errors
    fprintf(stderr, "%s\n", s);
}

int main() //main function
{
    yyparse(); //parse the input using the generated BISON parser
    return 0;
}
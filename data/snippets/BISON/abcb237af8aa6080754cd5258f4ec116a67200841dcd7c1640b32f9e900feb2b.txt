/* Calculating Fibonacci numbers using recursion */
%%
fib(n) :
{
    /* Base case */
    if (n == 0 || n == 1) {
        return n;
    }
    /* Recursive calls */
    else {
        return (fib(n - 1) + fib(n - 2));
    }
}

/* Start state */
%start fib

/* Ignore whitespace and newlines */
%token <int> INTEGER \d+
%token <simple> SEMICOLON ";"
%token <simple> LEFTPAREN "("
%token <simple> RIGHTPAREN ")"
%token <simple> EQUALS "="

/* Define rule for expressions */
%%
expr : INTEGER            /* An integer expression */
     | expr SEMICOLON     /* A list of expressions */
     | LEFTPAREN expr RIGHTPAREN   /* A parenthesized expression */
     | fib EQUALS expr     /* An expression using the fib function */
     | expr EQUALS fib     /* An expression using the fib function */
     ;
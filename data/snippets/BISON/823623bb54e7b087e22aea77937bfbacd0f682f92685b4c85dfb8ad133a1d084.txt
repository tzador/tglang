%{
    /* This is a comment in BISON */

    /* Declare global variables */
    int total_sum;
    int num_values = 0;

    /* Define functions that will be used in the grammar rules */
    void addToTotal(int value);
    void printResult();
%}

/* Define the grammar rules */
%%
program : expression_list;
expression_list : expression | expression_list expression;

/* Define the token types */
expression : NUMBER {
    /* Perform addition and update global variables */
    total_sum += $1;
    num_values++;
}
    | '(' expression ')' {
    /* If there is a nested expression, simply pass it through */
    $$ = $2;
}

/* Define the start symbol */
%start program

/* Attach the functions to the grammar rules */
%include {
    /* Function to add value to total sum */
    void addToTotal(int value) {
        total_sum += value;
        num_values++;
    }

    /* Function to print the final result */
    void printResult() {
        /* Divide the total sum by number of values to get average */
        float average = total_sum / (float) num_values;
        printf("The average is: %f\n", average);
    }
}
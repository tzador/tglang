%{
/* BISON code snippet */

/* Declare variables */
int num1, num2, result;

/* Function to calculate product of two numbers */
int multiply(int x, int y)
{
    return x * y;
}

/* Function to calculate sum of two numbers */
int add(int x, int y)
{
    return x + y;
}

/* Function to calculate difference of two numbers */
int subtract(int x, int y)
{
    return x - y;
}

/* Function to calculate division of two numbers */
int divide(int x, int y)
{
    return x / y;
}
%}

/* Define the grammar rules */
calculation: expression
    {
        /* Assign input values to variables */
        num1 = $1;
        num2 = $3;

        /* Calculate result based on operator */
        if(strcmp($2, "*") == 0) /* If operator is * */
        {
            result = multiply(num1, num2);
        }
        else if(strcmp($2, "+") == 0) /* If operator is + */
        {
            result = add(num1, num2);
        }
        else if(strcmp($2, "-") == 0) /* If operator is - */
        {
            result = subtract(num1, num2);
        }
        else if(strcmp($2, "/") == 0) /* If operator is / */
        {
            result = divide(num1, num2);
        }

        /* Print result */
        printf("Result: %d", result);
    };

expression: INTEGER OPERATOR INTEGER
    {
        /* Return operator symbol */
        return $2;
    };

/* Declare terminal symbols */
%token INTEGER
%token OPERATOR

%%

/* Input expressions to calculate */
2 + 3 * 4 / 5 - 6;
10 * 5 / 2 + 9 - 4;

/* Execute the parser and perform calculations */
calculation;

/* Output:
Result: 1
Result: 25 */
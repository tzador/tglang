%%
{
  /* This section declares the various tokens used in the language */
  DIGIT = [0-9];
  LETTER = [A-Za-z];
  VAR = LETTER+;
  INT = {DIGIT}+;
  FLOAT = {DIGIT}+"."{DIGIT}*;

  /* This section declares the grammar rules */
  program: statement_list;
  statement_list: statement | statement_list statement;
  statement: assignment | print | iteration | conditional;
  assignment: VAR "=" expr ";";
  print: "PRINT" expr ";";
  iteration: "FOR" VAR "FROM" expr "TO" expr "DO" "\n" "{" statement_list "\n" "}";
  conditional: "IF" expr "THEN" "\n" "{" statement_list "\n" "}" "\n" "ELSE" "\n" "{" statement_list "\n" "}";
  expr: INT | FLOAT | VAR | "(" expr ")" | expr "+" expr | expr "-" expr | expr "*" expr | expr "/" expr;

  /* This section specifies the operator precedence and associativity */
  %left "+" "-";
  %left "*" "/";
  %right "^";

  /* This section specifies the start symbol */
  %start program;
}

%%
/* This section specifies the code to be executed when a token is matched during parsing */
#include <stdio.h>

int main() {
  yyparse();
  return 0;
}

int yyerror(char *err) {
  printf("Error: %s\n", err);
  return 0;
}
/* 
BISON code for simple calculator 
Calculates a mathematical expression entered by user 
*/
 
%left '+' '-'
%left '*' '/'

%%

expr: expr '+' expr { $$ = $1 + $3; }
    | expr '-' expr { $$ = $1 - $3; }
    | expr '*' expr { $$ = $1 * $3; }
    | expr '/' expr { $$ = $1 / $3; }
    | '(' expr ')' { $$ = $2; }
    | NUMBER { $$ = $1; }

%%

/* Start of lexer */

%{
#include <stdio.h>
#include <stdlib.h>

int yylex(void);
void yyerror(char *);

int main()
{
    printf("Enter a mathematical expression: ");
    yyparse();
    return 0;
}

%}

%token NUMBER

/* Regular expressions */
 
number [0-9]+
 
%%

/* Lexer rules */
 
{number}        { yylval = atoi(yytext); return NUMBER;}
 
"+"             { return '+'; }
"-"             { return '-'; }
"*"             { return '*'; }
"/"             { return '/'; }
.               { yyerror("Invalid token"); }
 
%%

void yyerror(char *s)
{
    fprintf(stderr, "Error: %s\n", s);
}
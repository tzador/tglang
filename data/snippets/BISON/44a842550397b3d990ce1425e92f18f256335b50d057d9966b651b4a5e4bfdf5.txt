//Declaration section
%{
    //global variables
    int sum = 0;
    int count = 0;
    FILE *inFile;
    FILE *outFile;
%}

//Token definitions
%token NUM
%token ERROR

//Rules
%%
program: statement_list{
            //code to print results
            fprintf(outFile, "Sum: %d, Count: %d\n", sum, count);
            //closing files
            fclose(inFile);
            fclose(outFile);
        }
        ;

statement_list: statement
               {
                   //increment count
                   count++;
               }
               | statement_list statement
               {
                   //increment count and add to sum
                   count++;
                   sum += $2;
               };
statement: NUM
          {
              //check for integer and add to sum
              if (isdigit($1[0])) {
                  sum += atoi($1);
              } else {
                  //print error message if input is not a number
                  fprintf(outFile, "Error on line %d: Invalid input - '%s'", yylineno, $1);
              }
          }
          | ERROR
          {
              //print error message for invalid input
              fprintf(outFile, "Error on line %d: Invalid input - '%s'", yylineno, $1);
          }
          ;

//Error handling
%%
int yywrap(void) {
    return 1;
}

//Main function
int main(int argc, char *argv[]) {
    //open input and output files
    inFile = fopen("input.txt", "r");
    outFile = fopen("output.txt", "w");

    //parse input using yyparse()
    yyparse();

    return 0;
}
//BISON code for a simple calculator

%{
#include <stdio.h>
#include <stdlib.h>
int result = 0; //global variable to store result
%}

%token NUM
%left '+' '-'
%left '*' '/'
%left NEG

%%

/* The following rules define the grammar for the calculator */
statement: /* empty */
| statement exp '\n' { printf("= %d\n", $2); } //print the final result

exp: NUM                    { $$ = $1; }    //rule for a single number
     | exp '+' exp         { $$ = $1 + $3; } //addition rule
     | exp '-' exp         { $$ = $1 - $3; } //subtraction rule
     | exp '*' exp         { $$ = $1 * $3; } //multiplication rule
     | exp '/' exp         { $$ = $1 / $3; } //division rule
     | '-' exp %prec NEG   { $$ = -$2; }   //unary minus rule

%%

//function to handle lexer errors
void yyerror(char *s) {
    printf("%s\n",s);
}

//function to handle input token
int main(void) {
    yyparse(); //call the parser
    return 0;
}
%{
 /*
 * This is a long and complex BISON code snippet.
 * It includes a grammar rule, lexical definitions, and actions.
 * The snippet defines a simple calculator that can handle addition, subtraction,
 * multiplication, and division operations on integers.
 *
 * Reference: https://www.gnu.org/software/bison/manual/html_node/Calculator.html
 *
 * Note: This is just an example, not a complete working code.
 */
int result; /* the result of the calculation */

%}

/* rules to recognize integers and basic operations */
%token NUM
%left '+' '-'
%left '*' '/'
%type NUM

%%
/* grammar rule */
expression : expression '+' expression
           | expression '-' expression
           | expression '*' expression
           | expression '/' expression
           | '(' expression ')'
           | NUM
           ;

/* actions to perform the corresponding operation and update result */
expression : expression '+' expression { result = $1 + $3; }
           | expression '-' expression { result = $1 - $3; }
           | expression '*' expression { result = $1 * $3; }
           | expression '/' expression { result = $1 / $3; }
           | '(' expression ')' { result = $2; }
           | NUM { result = $1; }
           ;

%%

/* lexical definitions */
/* skip white spaces and define numerical tokens */
%{
  #include <stdio.h>
  #include <stdlib.h>
  #include <math.h>

  int yylex(void); /* function to read the next token */
  void yyerror(char *msg); /* function to handle parsing errors */
%}

/* calculate the result and print it */
int main(void) {
  printf("Enter an expression: ");

  /* parse the input and calculate the result */
  yyparse();

  /* print the result */
  printf("Result: %d", result);

  return 0;
}
%{
#include <stdio.h>

// This is a comment in BISON code
// The following code checks for valid math expressions
// and prints the result if they are valid
%}

%token NUMBER
%token PLUS
%token MINUS
%token MULTIPLY
%token DIVIDE

%%

// The following rule checks for a valid expression
math_expression:
    | math_expression PLUS math_expression 
    | math_expression MINUS math_expression 
    | math_expression MULTIPLY math_expression
    | math_expression DIVIDE math_expression 
    | NUMBER
    ;

%%

// The following code prints the result of the math expression
int main()
{
    printf("Enter a math expression: ");
    yyparse();
    return 0;
}

// The following function is called when a terminal is read
int yywrap()
{
    return 0;
}

// The following function is called when a token is matched
void yyerror(char *s)
{
    fprintf(stderr, "Invalid math expression: %s\n", s);
}

// The following function calculates the result of the math expression using recursion
int calculation(int num1, int num2, int operator)
{
    switch(operator):
    {
        case PLUS:
            return num1 + num2;
        case MINUS:
            return num1 - num2;
        case MULTIPLY:
            return num1 * num2;
        case DIVIDE:
            return num1 / num2;
        default:
            return 0;
    }
}

// The following function checks for valid expressions and calls the calculation function
void yyparse()
{
    int result = calculation(yylval.num1, yylval.num2, yylval.operator);
    printf("Result: %d\n", result);
}

// The following function returns the input character
int yyinput()
{
    return getchar();
}
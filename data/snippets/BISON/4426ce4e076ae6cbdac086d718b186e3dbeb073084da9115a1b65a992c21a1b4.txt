/* This is a BISON code snippet that calculates the factorial of a given input */
%{
#include <stdio.h>
#include <stdlib.h>
%}

/* Rules for defining grammar */
%left '+' '-';
%left '*' '/';
%nonassoc UMINUS;

/* Definition of token types */
%token <num> NUM;
%token EOL;

%%
/* Grammar rules for factorial calculation */
input: NUM { printf("Factorial of %d is: %d\n", $1, factorial($1)); };
factorial: NUM { if ($1 == 0) $$ = 1; else $$ = $1*factorial($1-1); };
%%
/* Actual implementation of the factorial function */
int factorial(int n) {
    if (n == 0)
        return 1;
    else
        return n*factorial(n-1);
}

/* Main method to read input and call BISON parser */
int main(void) {
    printf("Enter a number to calculate its factorial: ");
    char input[20];
    fgets(input, 20, stdin);
    return yyparse();
}

/* Function to handle BISON parsing errors */
int yyerror(char *msg) {
    printf("Error: %s\n", msg);
    return -1;
}

/* Function to convert input string to integer and return it as token */
int yylex() {
    int num;
    if (sscanf(input, "%d", &num) == 1) {
        return NUM;
    }
    else {
        return EOL;
    }
}
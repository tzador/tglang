%start program

%%
program: statement_list {
    printf("Program successfully compiled and executed.");
}
;

statement_list: statement_list statement
| statement
;

statement: assignment_statement
| if_statement
| for_loop
| function_call
;

assignment_statement: VARIABLE EQUALS expression {
    assign_to($1, $3);
}
;

if_statement: IF condition THEN statement_list ELSE statement_list ;
| IF condition THEN statement_list ;
;

for_loop: FOR VARIABLE EQUALS expression TO expression DO statement_list ;

function_call: FUNCTION_NAME PARAMETER_LIST {
    call_function($1, $2);
}
;

condition: expression EQUALS expression 
| expression LESS_THAN expression 
| expression GREATER_THAN expression 
| expression LESS_THAN_OR_EQUAL_TO expression 
| expression GREATER_THAN_OR_EQUAL_TO expression 
| expression NOT_EQUAL_TO expression
;

expression: VARIABLE
| CONSTANT
| expression PLUS expression
| expression MINUS expression
| expression MULTIPLY expression
| expression DIVIDE expression 
;

%%

int main(void) {
    // Program starts here
    yylex();
    // Program ends here
    return 0;
}

void yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
}

int yylex(void) {
    // Implementation of lexical analyzer goes here
    return 0;
}
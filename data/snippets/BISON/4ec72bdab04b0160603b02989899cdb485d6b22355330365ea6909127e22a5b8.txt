/* sample rule for a parser in BISON */

%token NUM ID

%%

program : statement_list
    ;

statement_list : statement_list statement
    | statement_list error { /* error handling code */ }
    | /* empty rule to handle end of statement list */
    ;

statement : expression
    | assignment
    | function_call
    | if_statement
    | for_loop
    | break_statement
    | continue_statement
    | return_statement
    | print_statement
    | error { /* error handling code */ }
    ;

expression : NUM
    | ID
    | expression "+" expression
    | expression "-" expression
    | expression "*" expression
    | expression "/" expression
    | "(" expression ")"
    ;

assignment : ID "=" expression
    ;

function_call : ID "(" arguments ")"
    ;

arguments : expression
    | argument_list
    ;

argument_list : argument_list "," expression
    | expression
    ;

if_statement : "if" "(" expression ")" "{" statement_list "}"
    | "if" "(" expression ")" "{" statement_list "}" "else" "{" statement_list "}"
    ;

for_loop : "for" "(" assignment ";" expression ";" assignment ")" "{" statement_list "}"
    ;

break_statement : "break" ";"
    ;

continue_statement : "continue" ";"
    ;

return_statement : "return" expression ";"
    ;

print_statement : "print" expression ";"
    ;

%%
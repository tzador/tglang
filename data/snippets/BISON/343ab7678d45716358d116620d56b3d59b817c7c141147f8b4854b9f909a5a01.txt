%{
    /* This is a comment */
    #include <stdio.h>

    /* Defining a structure */
    struct student {
        char name[50];
        int age;
        float gpa;
    };
%}

/* Defining the token types with their corresponding values */
%token <name> IDENTIFIER  /* token type 'name' with identifier value */
%token <integer> INTEGER  /* token type 'integer' with integer value */
%token <float> FLOAT      /* token type 'float' with float value */

/* Rule for starting non-terminal */
%%
program:
    /* Non-terminal that represents a program containing multiple statements */

    statement_list    /* Including a statement list in the program */

    /* Special token to indicate that the program has ended */
    | EOF
    ;

statement_list:
    /* Non-terminal for multiple statements */

    statement        /* Including a single statement */
    | statement_list statement  /* Recursive rule for multiple statements */
    ;

statement:
    /* Non-terminal for a single statement */

    assignment      /* Including an assignment statement */
    | declaration    /* Including a declaration statement */
    | conditional    /* Including a conditional statement */
    ;

assignment:
    /* Non-terminal for an assignment statement */

    /* Assigning a value to a variable */
    IDENTIFIER '=' expression
    ;

declaration:
    /* Non-terminal for a declaration statement */

    type IDENTIFIER  /* Including the data type and identifier for variable declaration */
    ;

conditional:
    /* Non-terminal for a conditional statement */

    'if' '(' condition ')' statement   /* Including the if condition and statement */
    | 'if' '(' condition ')' statement 'else' statement   /* Including the else statement for else-if conditions */
    ;

condition:
    /* Non-terminal for an if condition */

    expression            /* Including an expression for the if condition */
    | expression '>' expression  /* Recursive rule for multiple conditions with different operators */
    | expression '<' expression
    | expression '<=' expression
    | expression '>=' expression
    | expression '==' expression
    ;

expression:
    /* Non-terminal for an expression */

    IDENTIFIER  /* Including a variable identifier */
    | INTEGER    /* Including an integer value */
    | FLOAT      /* Including a float value */
    | expression '+' expression  /* Recursive rule for arithmetic operations */
    | expression '-' expression
    | expression '*' expression
    | expression '/' expression
    ;

%%

int main() {
    /* Initializing a structure variable */
    struct student s;

    /* Prompting user for input and scanning it into the respective structure elements */
    printf("Enter student name: ");
    scanf("%s", s.name);

    printf("Enter student age: ");
    scanf("%d", &s.age);

    printf("Enter student GPA: ");
    scanf("%f", &s.gpa);

    /* Printing the input back to the user */
    printf("Student name: %s\n", s.name);
    printf("Student age: %d\n", s.age);
    printf("Student GPA: %.2f\n", s.gpa);

    /* Returning 0 as program has ended successfully */
    return 0;
}
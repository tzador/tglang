%code top{
    #include<stdio.h> //include statement to import standard input-output library
    int total = 0; //integer variable declaration and initialization
}

%token NUMBER OP //declaring the token types to be used in the grammar

%%

calc: //defining rule for the start symbol of the grammar
    | expression { printf("The result is %d\n", $1); } //printing result of calculation
    ;

expression: //defining rule for calculation expression
    | expression OP expression { //expression with an operator in between
        if ($2 == '+') //checking for addition operator
            $$ = $1 + $3; //performing addition and storing result in $$
        else if ($2 == '-') //checking for subtraction operator
            $$ = $1 - $3; //performing subtraction and storing result in $$
        else if ($2 == '*') //checking for multiplication operator
            $$ = $1 * $3; //performing multiplication and storing result in $$
        else if ($2 == '/') //checking for division operator
            $$ = $1 / $3; //performing division and storing result in $$
    }
    | NUMBER { //rule for single number
        $$ = $1; //storing number in $$
        total += $1; //adding number to total to calculate sum
    }
    ;

%%

int main() { //main function for execution of grammar
    printf("Enter calculation expression:\n"); //prompting user for input
    yyparse(); //calling yyparse() function to parse user input according to grammar rules
    printf("Total sum of all numbers entered: %d\n", total); //printing total sum of numbers
    return 0; 
}
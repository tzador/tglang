%{

/* This is a BISON code snippet that creates a simple calculator that can perform addition, subtraction, multiplication, and division operations on integers */

#include <stdio.h> /* Include standard library */

/* Define global variables to store input values and result */
int num1;
int num2;
int result;

/* Function to perform addition operation */
int add(int a, int b) {
    return a + b;
}

/* Function to perform subtraction operation */
int subtract(int a, int b) {
    return a - b;
}

/* Function to perform multiplication operation */
int multiply(int a, int b) {
    return a * b;
}

/* Function to perform division operation */
int divide(int a, int b) {
    return a / b;
}

%}

/* Define grammar rules for input and output */
%token NUM // Represents integer input
%token ADD // Represents addition operation
%token SUB // Represents subtraction operation
%token MUL // Represents multiplication operation
%token DIV // Represents division operation
%token EOL // Represents end of line

%%

calc: expr EOL { printf("%d\n", $1); } // Print result after parsing expression

expr: NUM { result = atoi($1); } // Store integer input in result variable
| expr ADD expr { result = add($1, $3); } // Call add function and store result
| expr SUB expr { result = subtract($1, $3); } // Call subtract function and store result
| expr MUL expr { result = multiply($1, $3); } // Call multiply function and store result
| expr DIV expr { result = divide($1, $3); } // Call divide function and store result

%%

int main() {
    printf("Enter first number: ");
    scanf("%d", &num1); // Get first integer input
    printf("Enter second number: ");
    scanf("%d", &num2); // Get second integer input
    
    printf("Enter operation (+, -, *, /): ");
    yyparse(); // Parse input using BISON parser
    
    return 0;
}
%token <int> NUMBER
%token <float> REAL_NUMBER
%token <string> STRING
%token PLUS MINUS TIMES DIVIDE
%token LPAREN RPAREN
%token COMMA EQUALS SEMICOLON

%token IF ELSE WHILE FOR RETURN

%start program

%%

program:
    program statements
    |
    ;

statements:
    statement
    |
    statements statement
    ;

statement:
    declaration SEMICOLON
    |
    assignment SEMICOLON
    |
    conditional
    |
    loop
    |
    returnStatement SEMICOLON
    ;

declaration:
    type identifier
    |
    type identifier EQUALS expression
    ;

assignment:
    identifier EQUALS expression
    ;

conditional:
    IF LPAREN expression RPAREN LBRACE statements RBRACE
    |
    IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    ;

loop:
    WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    |
    FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE statements RBRACE
    ;

returnStatement:
    RETURN expression
    |
    RETURN
    ;

type:
    INT 
    |
    FLOAT
    |
    STRING
    ;

identifier:
    [A-Za-z][A-Za-z0-9_]*
    ;

expression:
    expression PLUS expression
    |
    expression MINUS expression
    |
    expression TIMES expression
    |
    expression DIVIDE expression
    |
    identifier
    |
    NUMBER
    |
    REAL_NUMBER
    |
    STRING
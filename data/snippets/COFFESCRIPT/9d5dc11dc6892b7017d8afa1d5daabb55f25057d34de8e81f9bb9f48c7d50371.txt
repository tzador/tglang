# Function to calculate factorial using recursion
factorial = (num) ->
  if num < 0
    return null
  else if num == 0
    return 1
  else
    return num * factorial(num - 1)


# Function to print out the total sum of first n prime numbers
sumOfFirstNPrimes = (n) ->
  i = 2
  sum = 0
  numOfPrimes = 0
  while numOfPrimes < n
    if isPrime(i)
      sum += i
      numOfPrimes++
    i++
  return sum


# Helper function to check if a number is prime
isPrime = (num) ->
  if num <= 1
    return false
  else if num <= 3
    return true
  else if num % 2 == 0 or num % 3 == 0
    return false
  i = 5
  while i * i <= num
    if num % i == 0 or num % (i + 2) == 0
      return false
    i += 6
  return true
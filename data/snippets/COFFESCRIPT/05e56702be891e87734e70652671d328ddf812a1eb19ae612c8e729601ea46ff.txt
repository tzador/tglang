class Animal
  # This is a class definition for the Animal class

  constructor: (@name, @age) ->
    # This is the constructor method for the Animal class
    # It takes in 2 parameters: name and age
    # The @ symbol is equivalent to 'this' in other languages
    # It assigns the parameters to the attributes @name and @age

  speak: (sound) ->
    # This is the speak method for the Animal class
    # It takes in 1 parameter: sound
    # It prints out the name and age of the animal, along with the sound it makes
    console.log(@name + " is " + @age + " years old and says " + sound)

  sleep: ->
    # This is the sleep method for the Animal class
    # It does not take in any parameters
    # It prints out a message saying the animal is sleeping
    console.log(@name + " is sleeping")

class Cat extends Animal
  # This is a subclass of the Animal class

  constructor: (@name, @age, @breed) ->
    # This is the constructor method for the Cat class
    # It takes in 3 parameters: name, age, and breed
    # The @ symbol is equivalent to 'this' in other languages
    # It assigns the parameters to the attributes @name, @age, and @breed

  purr: () ->
    # This is the purr method for the Cat class
    # It does not take in any parameters
    # It prints out a message saying the cat is purring
    console.log(@name + " is purring")

  scratch: (object) ->
    # This is the scratch method for the Cat class
    # It takes in 1 parameter: object
    # It prints out a message saying the cat is scratching the object
    console.log(@name + " is scratching the " + object)

# Creating an instance of the Cat class and calling its methods
garfield = new Cat("Garfield", 7, "Orange Tabby")
garfield.speak("Meow")
garfield.purr()
garfield.scratch("couch")

# Output:
# Garfield is 7 years old and says Meow
# Garfield is purring
# Garfield is scratching the couch
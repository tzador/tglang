### This code snippet shows an example of a function in CoffeeScript ###

## Function definition
myFunction = (num) ->
  return num * 2
# The '->' acts as the function arrow in CoffeeScript

## Function call
myFunction(5) # Output: 10

## Function with default parameter
myFunction = (num = 1) ->
  return num * 2

myFunction() # Output: 2 (since no parameter was passed and the default value is 1)

## Function with spread operator
myFunction = (num1, num2, num3) ->
  return num1 + num2 + num3

numbers = [1, 2, 3]
myFunction(...numbers) # Output: 6 (using the spread operator to pass in the numbers array as individual parameters)

## Function with keyword arguments
myFunction = ({name, age}) ->
  return "Name: #{name}, Age: #{age}"

myFunction(name: "John", age: 30) # Output: "Name: John, Age: 30" (using keyword arguments to define the parameters)

## Function that uses a nested function
myFunction = (num) ->
  nestedFunction = (x) ->
    return x * 10
  return nestedFunction(num)

myFunction(5) # Output: 50 (calls the nested function with the parameter passed into the outer function)
### Defining a class ###
class Rectangle
  # This is a constructor for the Rectangle class, sets the width and height #
  constructor: (@width, @height) ->
    @area = @width * @height

  # This method calculates the perimeter of the rectangle #
  perimeter: () ->
    return 2 * (@width + @height)

  # This method calculates the diagonal of the rectangle #
  diagonal: () ->
    return Math.sqrt(@width^2 + @height^2)

### Using the class ###

# Creating an instance of the Rectangle class with a width of 5 and height of 10 #
newRectangle = new Rectangle(5, 10)

# Outputting the area of the rectangle #
console.log("The area of the rectangle is: " + newRectangle.area)

# Outputting the perimeter of the rectangle #
console.log("The perimeter of the rectangle is: " + newRectangle.perimeter())

# Outputting the diagonal of the rectangle #
console.log("The diagonal of the rectangle is: " + newRectangle.diagonal())

### Inheritance ###
# Creating a subclass Square which inherits from the Rectangle class #
class Square extends Rectangle
  # This is a constructor for the Square class, sets the side length #
  constructor: (@side) ->
    super(@side, @side) # Calls the constructor of the Rectangle class with side as both the width and height
    @perimeter = super.perimeter() # Calls the perimeter method of the Rectangle class and assigns it to the perimeter variable

  # Overriding the diagonal method to make it specific for a square #
  diagonal: () ->
    return Math.sqrt(2 * @side^2)

### Using the subclass ###
# Creating an instance of the Square class with a side length of 5 #
newSquare = new Square(5)

# Outputting the area of the square, inherited from the Rectangle class #
console.log("The area of the square is: " + newSquare.area)

# Outputting the perimeter of the square, inherited from the Rectangle class #
console.log("The perimeter of the square is: " + newSquare.perimeter)

# Outputting the diagonal of the square, overridden in the Square class #
console.log("The diagonal of the square is: " + newSquare.diagonal())
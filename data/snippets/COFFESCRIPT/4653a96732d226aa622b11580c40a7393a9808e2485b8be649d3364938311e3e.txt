// Declare a class called 'Person' with the constructor function
class Person
  constructor: (@name, @age) ->
    @intro = "#{@name} is #{@age} years old and loves coffee."

// Instantiate a new object of the 'Person' class
newPerson = new Person("Alice", 27)

// Create a method 'drinkCoffee' that prints a statement about drinking coffee
Person::drinkCoffee = () ->
  console.log "#{@name} loves to drink coffee."

// Use the method on the previously instantiated object
newPerson.drinkCoffee()

// Declare a subclass called 'CoffeeLover' that extends the 'Person' class
class CoffeeLover extends Person
  constructor: (@name, @age, @coffeeType) ->
    super(@name, @age)
    @coffeeType = @coffeeType

// Override the 'drinkCoffee' method to include the type of coffee being drank
CoffeeLover::drinkCoffee = () ->
  console.log "#{@name} loves to drink #{@coffeeType} coffee."

// Instantiate a new object of the 'CoffeeLover' class
coffeeLover = new CoffeeLover("Bob", 33, "Latte")

// Use the overridden 'drinkCoffee' method on the new object
coffeeLover.drinkCoffee()

// Create a function that uses a generator to return a list of coffee types
coffeeTypes = () ->
  generator = () ->
    yield "Cappuccino"
    yield "Espresso"
    yield "Macchiato"
  list = []
  for coffee in generator() by 1
    list.push coffee
  return list

// Use the function to print a list of coffee types
console.log coffeeTypes()
# This code snippet demonstrates an implementation of the quicksort algorithm in Coffeescript
# It generates a random array of numbers and sorts them in ascending order

# Define a function to swap two array elements
swap = (arr, i, j) ->
    temp = arr[i]
    arr[i] = arr[j]
    arr[j] = temp

# Define a partition function to choose a pivot element and split the array into two subarrays
partition = (arr, low, high) ->
    pivot = arr[high]
    i = low - 1

    for j in [low...high]
        if arr[j] <= pivot
            i++
            swap(arr, i, j)

    swap(arr, (i + 1), high)
    return (i + 1)

# Define a function to implement quicksort recursively
quicksort = (arr, low, high) ->
    if low < high
        pi = partition(arr, low, high)

        quicksort(arr, low, (pi - 1))
        quicksort(arr, (pi + 1), high)

# Usage
# Generate a random array of numbers
arr = []
for i in [0...10]
    arr.push Math.floor(Math.random() * 100)

# Sort the array using quicksort
quicksort(arr, 0, (arr.length - 1))

# Output the sorted array
console.log('Sorted array: ', arr)
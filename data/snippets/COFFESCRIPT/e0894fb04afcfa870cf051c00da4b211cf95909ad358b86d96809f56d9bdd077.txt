# This function takes in two numbers and returns the sum of their squares
squareSum = (num1, num2) ->
  square1 = num1 * num1  # square the first number
  square2 = num2 * num2  # square the second number
  sum = square1 + square2  # add the squares together
  return sum # return the sum

# Function that checks if a number is a prime number
isPrime = (num) ->
  if num <= 1  # 1 is not a prime number
    return false
  else if num == 2 # 2 is a prime number
    return true
  else # check if the number is divisible by any number from 2 to its square root
    # if it is, then it is not a prime number
    for i in [2..Math.floor(Math.sqrt(num))]
      if num % i == 0
        return false
    return true # if the loop finishes without returning false, then the number is prime

# Main function that takes in an array of numbers and returns an array of their square sums
main = () ->
  numbers = [2, 5, 11, 7, 3, 8] # array of numbers
  squareSums = [] # empty array to store the square sums
  for number in numbers # loop through each number in the array
    sum = squareSum(number, number) # get the sum of squares for the number
    squareSums.push(sum) # add the sum to the array
  return squareSums # return the array of square sums

# Call the main function and print the result
result = main()
console.log(result) # should output [8, 50, 242, 98, 18, 128] in the console
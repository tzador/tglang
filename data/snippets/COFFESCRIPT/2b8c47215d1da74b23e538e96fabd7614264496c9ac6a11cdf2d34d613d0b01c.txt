# This is a function that takes in a number and returns
# the factorial of that number.
factorial = (num) ->
  if num is 0 or num is 1 # Checks if the number is 0 or 1
    return 1 # Returns 1 for base cases
  else # For all other cases
    return num * factorial(num - 1) # Recursively calls the function with num-1 and multiplies with num

# This is a function that takes in an array and returns
# a new array with only even numbers from the original array
filterEven = (arr) ->
  newArr = [] # Creates a new empty array
  for num in arr # Loops through the original array
    if num % 2 is 0 # Checks if the number is even
      newArr.push(num) # Adds the number to the new array
  return newArr # Returns the new array with only even numbers

# This is a function that sorts an array of numbers in ascending order using bubble sort
bubbleSort = (arr) ->
  for i in [0...arr.length] # Loops through the array
    for j in [0...arr.length - i - 1] # Loops through the unsorted part of the array
      if arr[j] > arr[j+1] # Checks if the current number is greater than the next number
        # Swaps the numbers if the condition is true
        temp = arr[j]
        arr[j] = arr[j+1]
        arr[j+1] = temp
  return arr # Returns the sorted array

# This is a class that represents a person with a name, age, and gender
class Person
  constructor: (name, age, gender) ->
    @name = name # Sets the name property
    @age = age # Sets the age property
    @gender = gender # Sets the gender property
  introduce: -> # A method to introduce the person
    return "Hi, my name is #{@name} and I am #{@age} years old." # Returns a string with name and age
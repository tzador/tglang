### This function uses a closure to create a cache for previously calculated values
memoizedFunction = (func) ->
  cache = {}
  return (args...) ->
    if cache[args]
      return cache[args]
    else
      cache[args] = func(args...)
      return cache[args]

### This function calculates the fibonacci sequence using the memoizedFunction
fibonacci = memoizedFunction((n) ->
  if n <= 1
    return n
  else
    return fibonacci(n-1) + fibonacci(n-2)

### Calling the fibonacci function with various input values
console.log(fibonacci(5))
console.log(fibonacci(10))
console.log(fibonacci(15))
console.log(fibonacci(20))
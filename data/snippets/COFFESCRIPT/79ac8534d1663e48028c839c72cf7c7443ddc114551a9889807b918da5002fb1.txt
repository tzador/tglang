# This is a function that takes in two numbers and returns the sum of their squares
# This is a multi-line comment in COFFESCRIPT
squareSum = (num1, num2) ->
    # The fat arrow is used to bind `this` in the function to the `this` outside the function
    # This allows the function to access variables in the same scope as the function
    # This is called a closure
    this.sum = num1 * num1 + num2 * num2
# This is a variable that holds an anonymous function that takes in an array of numbers and applies the squareSum function to each element
applySquareSum = (arr) ->
    for num in arr
        # We use the fat arrow to bind this function to the global `this`, so we can access `this.sum`
        # Here, we use a for loop to iterate through the array
        # We call the squareSum function on each element and store its result in the `sum` property of `this`
        @sum = squareSum(num, num)
# This is a variable that holds an array of numbers
numbers = [1, 2, 3, 4, 5]
# We call the applySquareSum function on the numbers array
applySquareSum(numbers)
# We can now access the `sum` property of `this` to get the final result
console.log("The sum of squares is: " + this.sum)
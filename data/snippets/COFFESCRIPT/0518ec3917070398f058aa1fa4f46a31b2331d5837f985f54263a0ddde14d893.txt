### This code snippet has been generated for the purpose of showcasing the use of coffeescript in a complex program.

### Coffeescript is a programming language that transcompiles to JavaScript, making it easier to write clean and concise code.

### In this snippet, we will declare a class named "Person" with two properties, "name" and "age", along with a method "greet" that will output a greeting message.

### We will also define a function "getAverageAge" that takes in an array of Person objects and calculates the average age.

class Person
  ### This is a class declaration in Coffeescript, which is similar to JavaScript's "class" keyword ###

  constructor: (name, age) ->
    ### This is the constructor method, similar to JavaScript's "constructor" function, ### 
    ### which accepts "name" and "age" parameters and assigns them to the properties ### 
    @name = name
    @age = age
  
  greet: () ->
    ### This is a method declaration using Coffeescript's "fat arrow" syntax, which ###
    ### sets the context of "this" to the class instance. ###
    console.log "Hello, my name is #{@name} and I am #{@age} years old."

getAverageAge = (personArray) ->
  ### This is a function declaration in Coffeescript, which is defined with "=>" syntax ###
  totalAge = 0
  for person in personArray
    totalAge += person.age
  averageAge = totalAge / personArray.length
  console.log "The average age is #{averageAge}"

person1 = new Person "John", 25
person2 = new Person "Emma", 30
person3 = new Person "Bob", 20

people = [person1, person2, person3]

getAverageAge people

# Output: "The average age is 25"
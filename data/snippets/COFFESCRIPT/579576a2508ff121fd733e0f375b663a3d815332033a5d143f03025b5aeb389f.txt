# A function that calculates the factorial of a given number
get_factorial = (n) ->
  fac = 1
  for num in [1..n]
    fac *= num
  return fac

# A function that checks if a given number is prime
check_prime = (num) ->
  if num < 2
    return false
  else
    for i in [2..Math.sqrt(num)]
      if num % i == 0
        return false
  return true

# A function that generates the Fibonacci sequence up to a given limit
generate_fib = (limit) ->
  # An array to store the sequence
  fib_seq = []

  # Base cases
  fib_seq.push(0)
  fib_seq.push(1)

  # Loop until limit is reached
  while fib_seq[fib_seq.length-1] + fib_seq[fib_seq.length-2] < limit
    # Add the next number in the sequence by summing the last two
    fib_seq.push(fib_seq[fib_seq.length-1] + fib_seq[fib_seq.length-2])

  return fib_seq

# A function that takes in a string and returns a reversed version of it
reverse_string = (str) ->
  # Split the string into an array of characters
  characters = str.split("")

  # A temporary variable to store each character during the swap
  temp = ""

  # Loop through the array
  for i in [0..characters.length-1]
    # Swap the current character with its mirrored one
    temp = characters[i]
    characters[i] = characters[characters.length-1-i]
    characters[characters.length-1-i] = temp

  # Join the characters array back into a string
  return characters.join("")
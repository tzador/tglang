# This code snippet demonstrates the use of generators in Coffeescript
# Generators allow for asynchronous code execution by pausing and resuming functions

# Define a generator function named 'numbers'
numbers = ->
  i = 1
  while true
    yield i
    i++

# Initialize the generator and set it to a variable named 'gen'
gen = numbers()

# 'next' method is used to resume the generator function
console.log(gen.next().value) # Output: 1
console.log(gen.next().value) # Output: 2
console.log(gen.next().value) # Output: 3

# Use a for...of loop to iterate through the generator and print the values
for num in gen
  console.log(num) # Output: 4, 5, 6, ...

# Define a generator function named 'fibonacci'
fibonacci = ->
  a = 1
  b = 1
  while true
    c = a + b
    yield c
    a = b
    b = c

# Initialize the generator and set it to a variable named 'fib'
fib = fibonacci()

# Use the 'next' method to resume the generator and print the first 10 fibonacci numbers
for i in [1..10]
  console.log(fib.next().value) # Output: 2, 3, 5, 8, 13, 21, 34, 55, 89, 144
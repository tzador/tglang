# This function takes in two arguments, an array of integers and a target number
# It returns the first two numbers in the array that add up to the target or
# returns a message if no pair is found.

sumFinder = (arr, target) ->
  # First, we need to sort the array in ascending order
  sortedArr = arr.sort((a, b) -> a - b)
  
  # Use pointers to keep track of the start and end of the array
  pointer1 = 0
  pointer2 = arr.length - 1
  
  # We will loop through the array while the two pointers don't overlap
  while pointer1 < pointer2
    sum = sortedArr[pointer1] + sortedArr[pointer2]
    
    # If the sum is equal to the target, we found our pair
    if sum == target
      # We return an array with the two numbers
      return [ sortedArr[pointer1], sortedArr[pointer2] ]
    # If the sum is greater than the target, we need to move the second pointer left
    else if sum > target
      pointer2--
    # If the sum is less than the target, we need to move the first pointer right
    else
      pointer1++
  
  # If we reach this point, it means no pair was found
  return "No pair found in the array that adds up to the target"
  
# Example usage
arr = [2, 5, 6, 8, 11]
target = 13
sumFinder(arr, target) # output: [5, 8]
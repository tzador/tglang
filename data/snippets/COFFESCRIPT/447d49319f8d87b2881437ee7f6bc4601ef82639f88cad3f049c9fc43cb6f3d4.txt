## Quick Sort Function in Coffeescript

# Definition of function quickSort with parameters, list and left/right boundary
quickSort = (list, left = 0, right = list.length - 1) ->
  # if left boundary is smaller than right boundary
  if left < right
    # set pivot as the result of calling pivotIndex function
    pivot = pivotIndex(list, left, right)
    # recursively call quickSort on left and right sides of pivot index
    quickSort(list, left, pivot - 1)
    quickSort(list, pivot + 1, right)

# Function to find pivot index
pivotIndex = (list, left, right) ->
  # set pivot as last element of list
  pivot = list[right]
  # set i to be the index of the left boundary
  i = left - 1
  # loop through the list
  for j in [left...right]
    # if current element is less than or equal to pivot
    if list[j] <= pivot
      # increment i
      i++
      # swap elements at i and j
      [list[i], list[j]] = [list[j], list[i]]
  # swap elements at i + 1 and pivot
  [list[i + 1], list[right]] = [list[right], list[i + 1]]
  # return i + 1 as the pivot index
  return i + 1

# Sample list to be sorted
list = [10, 2, 5, 9, 1, 8, 4, 7, 6, 3]

# Call quickSort function on the sample list
quickSort(list)

# Output the sorted list
console.log(list)
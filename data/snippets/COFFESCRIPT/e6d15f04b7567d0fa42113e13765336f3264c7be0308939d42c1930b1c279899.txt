# A function that returns a sorted version of an input array
arraySort = (arr) ->

  # If the array is empty, return an empty array
  if arr.length == 0
    return []

  # If the array only has one element, return it as is
  if arr.length == 1
    return arr

  # Pick a pivot point, in this case we'll use the first element
  pivot = arr[0]

  # Create two arrays to hold elements smaller and larger than the pivot
  smaller = []
  larger = []

  # Loop through the array and divide elements into the smaller and larger arrays
  for el in arr[1..]
    if el <= pivot
      smaller.push(el)
    else
      larger.push(el)
  
  # Sort the smaller and larger arrays recursively
  smaller = arraySort(smaller)
  larger = arraySort(larger)

  # Combine the smaller array, pivot, and larger array into one sorted array
  return smaller.concat([pivot], larger)

# Example call to the arraySort function
sortedArray = arraySort([5, 2, 9, 3, 1, 8, 4, 7, 6])
# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]
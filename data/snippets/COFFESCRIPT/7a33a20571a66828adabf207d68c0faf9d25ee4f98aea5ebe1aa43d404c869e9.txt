#This is a function to calculate the Fibonacci sequence
#It takes in one parameter, n, which is the length of the sequence

fibonacci = (n) ->
  if n <= 1
    return 1
  else
    return fibonacci(n-1) + fibonacci(n-2)

#This is a function to check if a number is prime
#It takes in one parameter, num, which is the number to be checked

isPrime = (num) ->
  if num <= 1
    return false
  for i in [2..Math.sqrt(num)]
    if num % i == 0
      return false
  return true

#This is a function that uses the above two functions to generate a list of prime numbers in the Fibonacci sequence
#It takes in one parameter, length, which is the length of the desired list

fibonacciPrimeList = (length) ->
  list = []
  count = 0
  while count < length
    num = fibonacci(count)
    if isPrime(num)
      list.push(num)
    count++
  return list
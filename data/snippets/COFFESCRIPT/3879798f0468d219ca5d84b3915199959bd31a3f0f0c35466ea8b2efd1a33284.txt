### This function takes in two arguments, num1 and num2 ###
# and adds them together to return the sum #

myFunction = (num1, num2) ->
    sum = num1 + num2
    return sum

# This function takes in an array and multiplies each element by 2 #
# It then returns the new array with the multiplied elements #

myOtherFunction = (arr) ->
    newArr = []
    for element in arr
        newArr.push(element * 2)
    return newArr

# This function takes in a string and checks if it is a palindrome #
# A palindrome is a word that reads the same backwards and forwards #

checkPalindrome = (str) ->
    reverse = ""
    for i in [str.length - 1..0]
        reverse += str[i]
    if reverse == str
        return true
    else
        return false

# This function takes in a number and recursively calculates the factorial #
# of that number, and returns the result #

calculateFactorial = (num) ->
    if num == 1
        return num
    else
        return num * calculateFactorial(num - 1)

# This function takes in an object and checks if any of its values #
# are arrays, and if so, it returns the flattened array #

getFlattenedArray = (obj) ->
    flattenedArr = []
    for key, value of obj
        if Array.isArray(value)
            flattenedArr = flattenedArr.concat(value)
        else
            flattenedArr.push(value)
    return flattenedArr
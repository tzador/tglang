### Comments
# This is a single-line comment
# Comments can also be written after code statements #

### Variables and Data Types

# This is a variable declaration
myVariable = 10

# COFFESCRIPT has dynamic typing, so data type is inferred
# myVariable is now of type number
myVariable = myVariable + 2

# Different data types in COFFESCRIPT
myString = "Hello World"
myBoolean = true
myArray = [1, 2, 3]
myObject = {
  key1: "value1",
  key2: "value2"
}

### Functions

# This is a simple function declaration with parameters
add = (num1, num2) ->
  return num1 + num2

# Functions can also be stored in variables
myFunction = add

# Functions can also be passed as parameters to other functions
multiply = (num1, num2, callback) ->
  return callback(num1, num2)

result = multiply(5, 3, myFunction) # result is 15

### Loops and Conditionals

# COFFESCRIPT supports traditional for loop
for i in [1...10]
  console.log i

# COFFESCRIPT also has while loop
myVar = 5
while myVar > 0
  console.log myVar
  myVar--

# COFFESCRIPT has if/else statements
myVar = 10
if myVar > 5
  console.log "myVar is greater than 5"
else
  console.log "myVar is less than or equal to 5"

### Classes and Objects

# COFFESCRIPT has class syntax similar to other OOP languages
class Animal

  # Constructor
  constructor: (@name, @age) ->

  # Instance method
  getInfo: ->
    console.log @name, @age

# Creating an instance of the class Animal
myAnimal = new Animal("Lion", 10)
myAnimal.getInfo() # Output: Lion 10
### COFFESCRIPT Code Snippet with Comments ###

# Object with two properties
myObject =
  name: "John"
  age: 27

# Function with default parameter
printName = (person = myObject) ->
  # Using string interpolation to print name
  console.log "Name: #{person.name}"

# Calling function without argument
printName()

# Arrow function with object destructuring
calculateArea = ({length, width}) => 
  area = length * width
  console.log "Area: #{area}"

# Object with spread operator
rectangle = 
  ...myObject
  length: 10
  width: 5

# Creating array of numbers
numbers = [5, 10, 15, 20, 25]

# Using array comprehension to multiply each number by 2
doubleNumbers = for num in numbers
  num * 2

# Using try/catch to handle potential errors
try 
  # Accessing property that does not exist in the object
  console.log "Person's profession: #{myObject.profession}"
catch error
  # Catching error and logging it
  console.log "Error: #{error}"

# Class with constructor and method
class Person
  # Constructor with required parameter and default parameter
  constructor: (name, age = 0) ->
    @name = name
    @age = age

  # Method to print person's name and age
  printInfo: () ->
    console.log "Name: #{@name}"
    console.log "Age: #{@age}"

# Creating instance of Person class with only one argument
person1 = new Person "Mary"

# Calling printInfo method on person1
person1.printInfo()

# Output:
# Name: Mary
# Age: 0

# Using rest parameter to get all arguments passed to a function
sumAll = (firstNum, ...rest) ->
  # Initializing accumulator variable
  sum = firstNum
  # Looping through rest of the arguments and adding them to sum
  for num in rest
    sum += num
  console.log "Sum: #{sum}"

# Calling sumAll function with multiple arguments
sumAll 5, 10, 15, 20, 25

# Output:
# Sum: 75
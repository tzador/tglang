# Returns the nth number in the Fibonacci sequence
# `n`: integer representing which number in the sequence to return
# Returns the nth Fibonacci number
fibonacci = (n) ->
  # Base case - first two numbers in sequence are 0 and 1
  if n == 0 || n == 1
    return n
  # Recursive case - use previous two numbers to calculate current number
  else
    fibonacci(n-1) + fibonacci(n-2)
    
# Calculates the factorial of a given number
# `n`: integer representing the number whose factorial is to be calculated
# Returns the factorial of `n`
factorial = (n) ->
  # Base case - factorial of 0 is 1
  if n == 0
    return 1
  # Recursive case - multiply current number by factorial of n-1
  else
    n * factorial(n-1)
    
# Generates the first `n` numbers in the Fibonacci sequence
# `n`: integer representing number of numbers to generate
# Returns an array of the first `n` Fibonacci numbers
generate_fibonacci = (n) ->
  # Initialize an empty array to store generated numbers
  fib_array = []
  # Loop through the first n numbers
  for index in [0...n]
    # Use the `fibonacci` function to calculate the current number
    current_fib = fibonacci(index)
    # Append the current number to the array
    fib_array.push(current_fib)
  # Return the array of generated numbers
  return fib_array
  
# Generates the first `n` factorials
# `n`: integer representing number of factorials to generate
# Returns an array of the first `n` factorials
generate_factorials = (n) ->
  # Initialize an empty array to store generated factorials
  factorial_array = []
  # Loop through the first n numbers
  for index in [0...n]
    # Use the `factorial` function to calculate the factorial of the current number
    current_fact = factorial(index)
    # Append the calculated factorial to the array
    factorial_array.push(current_fact)
  # Return the array of generated factorials
  return factorial_array
  
# Print the first 10 numbers in the Fibonacci sequence
console.log(generate_fibonacci(10))

# Print the first 10 factorials
console.log(generate_factorials(10))
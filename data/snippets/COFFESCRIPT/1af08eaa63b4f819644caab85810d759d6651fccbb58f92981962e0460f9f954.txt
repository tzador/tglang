# Function to calculate the nth Fibonacci number using memoization
memoizedFibo = (n, cache) ->
  # Check if the cache already contains the result
  if n in cache
    return cache[n]

  # If n is less than or equal to 2, return 1
  if n <= 2
    return 1

  # Calculate the nth Fibonacci number recursively
  result = memoizedFibo(n - 1, cache) + memoizedFibo(n - 2, cache)

  # Add the result to the cache for future use
  cache[n] = result

  # Return the nth Fibonacci number
  return result

# Initialize the cache with the base cases
cache = {1: 1, 2: 1}

# Store the inputted value in a variable
input = 10

# Call the memoizedFibo function and store the result
result = memoizedFibo(input, cache)

# Print the result
console.log("The " + input + "th Fibonacci number is " + result)
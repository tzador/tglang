class Vehicle
  # Constructor function for Vehicle class
  constructor: (@make, @model, @year) ->
    @type = "car"
  # Method to return vehicle's make and model
  getMakeAndModel: ->
    return "This vehicle is a #{@make} #{@model}"
  
# Inherit from Vehicle class
class ElectricCar extends Vehicle
  # Constructor function for ElectricCar class
  constructor: (@make, @model, @year, @batteryLife, @range) ->
    # Call parent constructor with super
    super(@make, @model, @year)
    @type = "electric car"
    @chargingStation = false
  # Method to check if electric car can be charged
  checkChargingStatus: ->
    if @batteryLife < 20
      console.log("Please charge your car at a charging station.")
    else
      console.log("Your car's battery life is at #{@batteryLife}%. You can continue driving.")
  # Method to charge the electric car
  chargeCar: ->
    if @batteryLife < 100
      console.log("Charging your car...")
      @batteryLife += 20
      console.log("Your car's battery life is now at #{@batteryLife}%.")

# Create an instance of ElectricCar
teslaModelS = new ElectricCar("Tesla", "Model S", 2021, 80, 400)
# Call getMakeAndModel method
console.log(teslaModelS.getMakeAndModel())
# Output: "This vehicle is a Tesla Model S"

# Call checkChargingStatus method
teslaModelS.checkChargingStatus()
# Output: "Your car's battery life is at 80%. You can continue driving."

# Call chargeCar method
teslaModelS.chargeCar()
# Output: "Charging your car..."
# Output: "Your car's battery life is now at 100%."
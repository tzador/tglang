###
	Description: This code snippet uses a class to represent a BankAccount object and has various methods to manipulate the account balance.
###

class BankAccount

  # Constructor function to set the initial balance
  constructor: (initialBalance) ->
    @balance = initialBalance

  # Method to deposit money into the account
  deposit: (amount) ->
    @balance += amount

  # Method to withdraw money from the account
  withdraw: (amount) ->
    if @balance - amount < 0
      console.log("Insufficient funds.")
    else
      @balance -= amount

  # Method to transfer money from one account to another
  transfer: (amount, targetAccount) ->
    if @balance - amount < 0
      console.log("Insufficient funds.")
    else
      @balance -= amount
      targetAccount.deposit(amount)

  # Method to check the current balance
  getBalance: ->
    return @balance

# Create two BankAccount objects with different initial balances
account1 = new BankAccount(1000)
account2 = new BankAccount(500)

# Deposit money into account1
account1.deposit(500)

# Withdraw money from account2
account2.withdraw(200)

# Transfer money from account1 to account2
account1.transfer(300, account2)

# Check the current balance of account1
console.log("Current balance of account1: " + account1.getBalance())

# Check the current balance of account2
console.log("Current balance of account2: " + account2.getBalance())
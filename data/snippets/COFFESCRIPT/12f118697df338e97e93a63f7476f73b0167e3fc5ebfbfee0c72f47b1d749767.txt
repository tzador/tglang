# This is a comment in COFFEESCRIPT, denoted by the `#` symbol

# Class definition, denoted by the `class` keyword
class Person

  # Constructor function, denoted by the `constructor` keyword
  constructor: (name, age) ->
    # `@` symbol is used to refer to the current instance
    @name = name
    @age = age
    @pets = []

  # Public method, denoted by the `()` symbol after the method name
  # `this` keyword is used to refer to the current instance
  sayHello: () ->
    console.log("Hello, my name is " + @name + " and I am " + @age + " years old!")

  # Private method, denoted by the `#` symbol before the method name
  # Private methods cannot be accessed outside of the class
  # `->` denotes an anonymous function
  # Private methods are often used for internal logic and helper functions
  # `...` symbol denotes a rest parameter, which stores any additional arguments in an array
  # `for...in` loop is used to iterate through the object's properties
  # `typeof` keyword is used to check the type of a variable
  _addToy: (toy, ...attributes) ->
    for key, value of attributes
      if typeof value == 'string'
        @toys.push(toy + " with " + key + " attribute " + value)
      else
        @toys.push(toy + " with " + key + " attribute " + typeof value)

# Class inheritance, denoted by the `extends` keyword
# The `super` keyword is used to call the parent class's constructor
class Animal extends Person

  # Overrides the parent class's constructor
  constructor: (name, age, species) ->
    # `super` keyword is used to call the parent class's constructor
    super(name, age)
    @species = species

  # Overrides the parent class's sayHello method
  sayHello: () ->
    # `super` keyword is used to call the parent class's method
    super()
    console.log("I am a(n) " + @species + " and I have " + @toys.length + " toys!")
# This function creates a class called "Product"
class Product
    # "constructor" function that's called when a new instance of the class is created
    constructor: (name, price) ->
        @name = name
        @price = price
        @quantity = 0

    # "getter" function for the name property
    getName: ->
        return @name

    # "setter" function for the name property
    setName: (newName) ->
        @name = newName

    # "getter" function for the price property
    getPrice: ->
        return @price

    # "setter" function for the price property
    setPrice: (newPrice) ->
        if newPrice > 0
            @price = newPrice
        else
            console.log("Price must be greater than 0")

    # "getter" function for the quantity property
    getQuantity: ->
        return @quantity

    # "setter" function for the quantity property
    setQuantity: (newQuantity) ->
        if newQuantity >= 0
            @quantity = newQuantity
        else
            console.log("Quantity must be equal to or greater than 0")

    # "method" function for adding to the quantity property
    addToQuantity: (amount) ->
        @quantity += amount

    # "method" function for subtracting from the quantity property
    subtractFromQuantity: (amount) ->
        if @quantity - amount >= 0
            @quantity -= amount
        else
            console.log("Insufficient quantity available")

# create an instance of the Product class
coffee = new Product("Coffee", 5.99)

# using the class methods to access and modify properties
coffee.setName("Decaf Coffee")
coffee.setPrice(6.99)
console.log(`Product name: ${coffee.getName()}`)
console.log(`Product price: ${coffee.getPrice()}`)
coffee.setQuantity(10)
console.log(`Product quantity: ${coffee.getQuantity()}`)
coffee.addToQuantity(5)
console.log(`Updated quantity: ${coffee.getQuantity()}`)
coffee.subtractFromQuantity(8)
console.log(`Final quantity: ${coffee.getQuantity()}`)
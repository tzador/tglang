class Model
  #constructor function
  constructor: (name, age) ->
    @name = name
    @age = age

  #instance method
  sayHello: ->
    console.log "Hello, my name is #{@name} and I am #{@age} years old."

  #class method
  static getAverageAge: (modelArray) ->
    total = 0
    for model in modelArray
      total += model.age
    average = total / modelArray.length
    console.log "The average age is #{average}"

#subclass of Model
class Student extends Model
  #constructor function
  constructor: (name, age, studentID) ->
    super(name, age)
    @studentID = studentID

  #instance method
  displayInfo: ->
    console.log "Name: #{@name}, Age: #{@age}, Student ID: #{@studentID}"

  #class method
  static generateStudentList: (studentArray) ->
    for student in studentArray
      console.log "Name: #{student.name}, Student ID: #{student.studentID}"
      if student.age >= 18
        console.log "This student is of legal age"

#example Model objects
model1 = new Model("John", 25)
model2 = new Model("Sarah", 32)
model3 = new Model("David", 21)

#example Student objects
student1 = new Student("Mark", 19, 12345)
student2 = new Student("Jane", 17, 23456)
student3 = new Student("Mike", 20, 34567)

#calling instance method
model1.sayHello() #output: Hello, my name is John and I am 25 years old.

#calling class method
Model.getAverageAge([model1, model2, model3]) #output: The average age is 26

#calling instance method from subclass
student1.displayInfo() #output: Name: Mark, Age: 19, Student ID: 12345

#calling class method from subclass
Student.generateStudentList([student1, student2, student3]) 
#output: Name: Mark, Student ID: 12345
#output: This student is of legal age
#output: Name: Jane, Student ID: 23456
#output: Name: Mike, Student ID: 34567
#output: This student is of legal age
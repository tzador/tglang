class Animal
  # This is a comment that explains the Animal class

  constructor: (@name, @age) ->
    # This is a comment that explains the constructor method
    # of the Animal class
    @species = ""

  eat: () ->
    # This is a comment that explains the eat method
    # of the Animal class
    console.log @name + " is eating"

  sleep: () ->
    # This is a comment that explains the sleep method
    # of the Animal class
    console.log @name + " is sleeping"

  play: () ->
    # This is a comment that explains the play method
    # of the Animal class
    console.log @name + " is playing"

class Dog extends Animal
  # This is a comment that explains the Dog class
  # and its inheritance from the Animal class.

  constructor: (@name, @age, @breed) ->
    # This is a comment that explains the constructor method
    # of the Dog class, which also calls the constructor
    # method of the Animal class.
    super(@name, @age)
    @species = "Dog"

  bark: () ->
    # This is a comment that explains the bark method
    # of the Dog class.
    console.log @name + " is barking"

  fetch: (item) ->
    # This is a comment that explains the fetch method
    # of the Dog class, which takes in an item parameter.
    console.log @name + " is fetching " + item

  sleep: () ->
    # This is a comment that overrides the sleep method
    # of the Animal class in the Dog class.
    console.log @name + " is taking a nap"

# Create an instance of the Dog class and call its methods
sparky = new Dog("Sparky", 5, "Golden Retriever")

sparky.eat()
# Output: Sparky is eating

sparky.sleep()
# Output: Sparky is taking a nap

sparky.play()
# Output: Sparky is playing

sparky.bark()
# Output: Sparky is barking

sparky.fetch("ball")
# Output: Sparky is fetching ball
###
  COFFESCRIPT is a programming language that compiles to JavaScript. 
  It is known for its concise syntax and functional programming features. 
  This code snippet demonstrates the use of objects and functions in COFFESCRIPT.
###

class Character
  ### 
    A class that represents a character in a game.
    - name: the name of the character
    - health: the current health of the character
    - damage: the amount of damage the character can deal
  ###
  constructor: (@name, @health, @damage) ->
    # Set default values if not provided
    @health ||= 100
    @damage ||= 10

  # A method to attack another character
  attack: (target) ->
    console.log(@name + " is attacking " + target.name + " for " + @damage + " damage!")
    target.health -= @damage

class Mage extends Character
  ###
    A subclass of Character that represents a mage.
    - mana: the current mana of the mage
    - spell: the spell the mage can cast
  ###
  constructor: (@mana, @spell, options={}) ->
    # Call parent constructor
    super(options.name, options.health, options.damage)
    # Set default values if not provided
    @mana ||= 100
    @spell ||= "Fireball"

  # A method to cast a spell on another character
  castSpell: (target) ->
    console.log(@name + " is casting " + @spell + " on " + target.name + " for " + @damage + " damage!")
    target.health -= @damage

# Create a new character
let hero = new Character("Hero", 200, 20)
# Create a new mage
let villain = new Mage(200, "Lightning Bolt", {name: "Villain"})

# Call the attack and castSpell methods
hero.attack(villain)
villain.castSpell(hero)
# Function that returns the sum of two numbers
add = (num1, num2) =>
  # Check if both numbers are integers
  if (Number.isInteger(num1) && Number.isInteger(num2))
    # Return the sum of the numbers
    return num1 + num2
  else
    # Throw an error if either number is not an integer
    throw new Error('Can only add two integers')

# Array of numbers
numbers = [2, 5, 8, 12]

# Function that uses recursion to find the factorial of a given number
factorial = (num) =>
  # Check if number is an integer and greater than or equal to 1
  if (Number.isInteger(num) && num >= 1)
    # Base case - if number is 1, return 1
    if (num === 1)
      return 1
    # Recursive case - call the factorial function on the previous number and multiply it by the current number
    return factorial(num - 1) * num
  else
    # Throw an error if number is not an integer or less than 1
    throw new Error('Can only find factorial of positive integers')

# Loop through the numbers array and console.log the sum of each number and its factorial
for num in numbers
  # Call the add function to get the sum
  sum = add(num, num)
  # Call the factorial function to get the factorial
  fact = factorial(num)
  # Print the results
  console.log(`The sum of ${num} and ${num} is ${sum}`)
  console.log(`The factorial of ${num} is ${fact}`)
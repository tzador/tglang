### Declaration of a class in Coffeescript

class Animal		# class keyword followed by class name
  constructor: (@name, @age) ->		# constructor function takes in arguments and sets them as instance variables
    @type = 'Animal'		# setting a default value for instance variable 'type'

  # defining instance methods

  run: (speed) ->		# method to simulate running, speed is passed in as an argument
    console.log("#{@name} is running at #{speed} km/hr")
    # interpolation to print out the name of the animal and its speed while running

  sleep: (hours) ->		# method to simulate sleeping, hours is passed in as an argument
    for hour in [1..hours]		# using a for loop to simulate sleeping for the given number of hours
      console.log("#{@name} is sleeping for hour number #{hour}")

  # defining a static method

  static getAnimalCount: ->		# static method does not require an instance to be called
    return Animal.count		# returning the number of instances created of the Animal class

### Instantiating an object

lion = new Animal('Simba', 3)		# creating a new object 'lion' of class Animal with arguments for name and age
lion.run(50)		# calling the run method on the lion object with a speed argument

### Inheritance in Coffeescript

# using the 'extends' keyword to inherit from the Animal class
class Lion extends Animal
  constructor: (@name, @age, @maneColor) ->		# adding a new instance variable specific to the Lion class
    super(@name, @age)		# calling super() to access constructor of Animal class and passing in arguments

  roar: ->		# adding a new method specific to the Lion class
    console.log("#{@name} is roaring with a #{@maneColor} mane!")

lion = new Lion('Simba', 3, 'golden')		# creating a new object 'lion' of class Lion with arguments for name, age, and maneColor
lion.roar()		# calling the roar method on the lion object
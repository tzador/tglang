*&---------------------------------------------------------------------*
*& This is a long and complex ABAP code snippet that performs various   *
*& calculations and operations on a given data set. It uses nested      *
*& loops, nested IF statements, and function modules to achieve its     *
*& goals.                                                              *
*&---------------------------------------------------------------------*
REPORT Z_LONG_COMPLEX_SNIPPET.

* Declare internal table for holding data *
DATA: lt_data TYPE STANDARD TABLE OF sflight,
      ls_data TYPE sflight.

* Select data from database table into internal table *
SELECT * FROM sflight INTO TABLE lt_data.

* Nested loop to loop through data set *
LOOP AT lt_data INTO ls_data.
  * Calculate total cost of each flight *
  DATA(lv_total_cost) = ls_data-seatsocc * ls_data-price.

  * Nested IF statement to check if seat occupancy is above 50% *
  IF ls_data-seatsocc >= 0.5 * ls_data-seatsmax.
    * Use function module to convert currency to USD *
    CALL FUNCTION 'CONVERT_TO_USD'
      EXPORTING
        i_currency = ls_data-currency
        i_amount   = lv_total_cost
      IMPORTING
        e_usd      = ls_data-usd_total_cost.
  ELSE.
    * Use function module to convert currency to GBP *
    CALL FUNCTION 'CONVERT_TO_GBP'
      EXPORTING
        i_currency = ls_data-currency
        i_amount   = lv_total_cost
      IMPORTING
        e_gbp      = ls_data-gbp_total_cost.
  ENDIF.
ENDLOOP.

* Sort internal table by total cost in descending order *
SORT lt_data BY usd_total_cost DESCENDING.

* Loop through sorted table and output data to screen *
LOOP AT lt_data INTO ls_data.
  WRITE / ls_data-carrid, ls_data-connid, ls_data-seatsocc, ls_data-price,
         ls_data-usd_total_cost.
ENDLOOP.
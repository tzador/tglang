*&---------------------------------------------------------------------*
*& Report Z_GET_CUSTOMER_BALANCE
*&---------------------------------------------------------------------*
*& Purpose: This report displays the current balance of a specific customer.
*& Input Parameters: Customer Number
*& Output Parameters: Customer Name, Current Balance
*&---------------------------------------------------------------------*
REPORT Z_GET_CUSTOMER_BALANCE.

*---- Declarations ----*

* Tables for input/output parameters
TABLES: KNB1, KNB4.

* Variables
DATA: lv_customer_num TYPE KNB1-KUNNR. " Customer Number
DATA: lv_customer_name TYPE KNB1-NAME1. " Customer Name
DATA: lv_curr_balance TYPE KNB4-SALDO. " Current Balance

* Selection screen for user input
SELECTION-SCREEN BEGIN OF BLOCK customer WITH FRAME TITLE text-001.
PARAMETERS: p_customer_num TYPE KNB1-KUNNR DEFAULT ''. " Customer Number
SELECTION-SCREEN END OF BLOCK customer.

*---- Start of program logic ----*
START-OF-SELECTION.

* Validate input
IF p_customer_num IS INITIAL.
    MESSAGE 'Customer Number cannot be blank' TYPE 'I'.
ENDIF.

* Get customer name
SELECT SINGLE * FROM KNB1
    INTO lv_customer_name
    WHERE KUNNR = p_customer_num.

* Validate customer exists
IF sy-subrc NE 0.
    MESSAGE 'Customer does not exist' TYPE 'I'.
ENDIF.

* Get current balance
SELECT SINGLE * FROM KNB4
    INTO lv_curr_balance
    WHERE KUNNR = p_customer_num.

*---- Output ----*

* Output header
WRITE: / 'Customer Name:', lv_customer_name.
WRITE: / 'Customer Number:', lv_customer_num.

* Output current balance
WRITE: / 'Current Balance:', lv_curr_balance.

*---- End of program ----*
END-OF-SELECTION.
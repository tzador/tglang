* Dynamic Declaration
DATA: lt_table TYPE TABLE OF ty_table1,
      ls_table TYPE ty_table1.

* Loop through internal table
LOOP AT lt_table INTO ls_table.

  * Write condition
  IF ls_table-field1 NE space AND ls_table-field2 NE space.

    * Make function call
    CALL FUNCTION 'FUNCTION_NAME'
      EXPORTING
        parameter1 = ls_table-field1
        parameter2 = ls_table-field2
        parameter3 = ls_table-field3
      IMPORTING
        result = ls_table-field4.

    * Check for errors
    CHECK sy-subrc EQ 0.

    * Make additional function call
    CALL FUNCTION 'FUNCTION_NAME_2'
      EXPORTING
        parameter1 = ls_table-field4
      IMPORTING
        result = ls_table-field5.

  ENDIF.

ENDLOOP.

* Sort the internal table by field
SORT lt_table BY field4.

* Dynamic modification of another internal table
DATA: lt_table2 TYPE TABLE OF ty_table2,
      ls_table2 TYPE ty_table2,
      ls_table3 TYPE ty_table3,
      ls_table4 TYPE ty_table4.

* Loop through internal table
LOOP AT lt_table INTO ls_table.

  * Write condition
  IF ls_table-field1 NE space.

    * Select data from table
    SELECT field1 field2 field3
      FROM database_table
      INTO ls_table2
      WHERE field1 = ls_table-field1.

    * Check for errors
    CHECK sy-subrc EQ 0.

    * Modify data
    ls_table3-field1 = ls_table2-field1.
    ls_table3-field2 = ls_table2-field2.
    ls_table3-field3 = ls_table2-field3.

    * Append to another internal table
    APPEND ls_table3 TO lt_table2.

    * Calculate average
    ls_table4-field1 = ls_table2-field2 / ls_table2-field3.

  ENDIF.

ENDLOOP.

* Sort the internal table by field
SORT lt_table2 BY field1.
* Declaration of an internal table with a complex structure
DATA:
    BEGIN OF table_data,
        employee_id TYPE i,
        employee_name TYPE string,
        department TYPE string,
        salary TYPE p DECIMALS 2,
        manager TYPE string,
        address TYPE string,
    END OF table_data.

* Populate the internal table with data
APPEND INITIAL LINE TO table_data ASSIGNING FIELD-SYMBOL(<fs_table>).
<fs_table>-employee_id = 12345.
<fs_table>-employee_name = 'John Smith'.
<fs_table>-department = 'Human Resources'.
<fs_table>-salary = '50000.00'.
<fs_table>-manager = 'Jane Doe'.
<fs_table>-address = '123 Main Street'.

APPEND INITIAL LINE TO table_data ASSIGNING FIELD-SYMBOL(<fs_table>).
<fs_table>-employee_id = 67890.
<fs_table>-employee_name = 'Sarah Johnson'.
<fs_table>-department = 'Sales'.
<fs_table>-salary = '60000.00'.
<fs_table>-manager = 'Mark Brown'.
<fs_table>-address = '456 Broadway'.

* Define a structure type based on the internal table
TYPES: BEGIN OF ty_table,
        employee_id TYPE i,
        employee_name TYPE string,
        department TYPE string,
        salary TYPE p DECIMALS 2,
        manager TYPE string,
        address TYPE string,
    END OF ty_table.

* Create an instance of the structure type
DATA: ls_table TYPE ty_table.

* Use a loop to display the data in the internal table
LOOP AT table_data INTO ls_table.

    WRITE: / 'Employee ID:', ls_table-employee_id,
           / 'Name:', ls_table-employee_name,
           / 'Department:', ls_table-department,
           / 'Salary:', ls_table-salary,
           / 'Manager:', ls_table-manager,
           / 'Address:', ls_table-address.

ENDLOOP.
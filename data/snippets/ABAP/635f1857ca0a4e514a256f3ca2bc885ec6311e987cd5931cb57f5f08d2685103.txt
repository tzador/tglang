" Define a dynamic table
DATA(result_table) = cl_abap_tabledescr=>create( p_line_type = 'TY_SALES_DATA' ).

" Define a structure to hold the sales data
TYPES:
  BEGIN OF ty_sales_data,
    customer      TYPE string,
    product       TYPE string,
    sales_quantity  TYPE i,
    sales_amount  TYPE p DECIMALS 2,
  END OF ty_sales_data.

" Add columns to the dynamic table
result_table->add_row( new_column = 'CUSTOMER'   new_exid = '1' ).
result_table->add_row( new_column = 'PRODUCT'    new_exid = '2' ).
result_table->add_row( new_column = 'QTY_SOLD'   new_exid = '3' ).
result_table->add_row( new_column = 'SALES_AMT' new_exid = '4' ).

" Create an internal table with the dynamic table structure
DATA(sales_data) = CAST cl_abap_structdescr( result_table->get_table_line_type( ) )->create_instance( ).

" Populate the internal table with sales data
sales_data = VALUE #(
  ( CUSTOMER = 'John Smith' PRODUCT = 'TV' QTY_SOLD = 3 SALES_AMT = 499.99 )
  ( CUSTOMER = 'Jane Doe' PRODUCT = 'Phone' QTY_SOLD = 2 SALES_AMT = 299.99 )
  ( CUSTOMER = 'Bob Johnson' PRODUCT = 'Laptop' QTY_SOLD = 1 SALES_AMT = 999.99 )
).

" Loop through the internal table and display the sales data
LOOP AT sales_data INTO DATA(sales_line).
  WRITE: / sales_line-customer,
  sales_line-product,
  sales_line-sales_quantity,
  sales_line-sales_amount.
ENDLOOP.
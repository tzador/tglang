*&---------------------------------------------------------------------*
*& Report ZAD_CODE_SNIPPET
*&---------------------------------------------------------------------*
*
* Showcase of a complex ABAP code snippet
*
*---------------------------------------------------------------------*

REPORT zad_code_snippet.

*---------------------------------------------------------------------*
* Class definition
*---------------------------------------------------------------------*

CLASS lcl_code_snippet DEFINITION ABSTRACT.
  PUBLIC SECTION.
    DATA:
      mv_name TYPE string VALUE 'Code Snippet'.  "Name of the class

ENDCLASS.

*---------------------------------------------------------------------*
* Class implementation
*---------------------------------------------------------------------*

CLASS lcl_code_snippet IMPLEMENTATION.
  METHOD constructor.
    "Constructor method
    WRITE 'Creating instance of Code Snippet'.
  ENDMETHOD.

  METHOD set_name.
    "Set the name of the code snippet
    mv_name = name.
  ENDMETHOD.

  METHOD get_name.
    "Get the name of the code snippet
    WRITE mv_name.
  ENDMETHOD.

  METHOD write_coding_challenge.
    "Write a coding challenge for the code snippet
    DATA(temp_string) = mv_name.
    temp_string+1(1) = 'A'.
    LOOP AT temp_string INTO temp_string.
      temp_string+1(1) = temp_string+1(1) && 'B'.
    ENDLOOP.
    WRITE temp_string.
  ENDMETHOD.

ENDCLASS.

*---------------------------------------------------------------------*
* Main program
*---------------------------------------------------------------------*

DATA(code_snippet) = NEW lcl_code_snippet( ).
data(code_snippet_name) = 'ABAP Code Snippet'.
code_snippet->set_name( code_snippet_name ).
code_snippet->get_name( ).
code_snippet->write_coding_challenge( ).
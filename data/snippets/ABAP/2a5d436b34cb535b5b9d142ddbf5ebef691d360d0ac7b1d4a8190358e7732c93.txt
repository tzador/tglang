** Data Declarations **

DATA: ls_sales TYPE zst_sales,
      lt_sales TYPE TABLE OF zst_sales,
      lv_total TYPE i,
      ls_customer TYPE zst_customer,
      lt_customer TYPE TABLE OF zst_customer,
      lv_max_sales TYPE p DECIMALS 2.

CONSTANTS: gc_shipment_cost TYPE p DECIMALS 2 VALUE '2.50',
           gc_discount TYPE p DECIMALS 2 VALUE '5.00'.

** Data Initialization **

ls_sales-sales_date = sy-datum.
ls_sales-quantity = 100.
ls_sales-unit_price = 500.
ls_sales-tax = 50.

ls_customer-customer_id = 'C100'.
ls_customer-customer_name = 'John Doe'.
ls_customer-country = 'USA'.

** Data Processing **

LOOP AT lt_sales INTO ls_sales.

  * Calculate total sales amount
  ls_sales-total_sales = ls_sales-quantity * ls_sales-unit_price + ls_sales-tax.

  * Apply shipment cost
  ls_sales-total_sales = ls_sales-total_sales + gc_shipment_cost.

  * Calculate discount
  lv_discount = ls_sales-total_sales * gc_discount / 100.
  ls_sales-total_sales = ls_sales-total_sales - lv_discount.

  * Check if total sales amount is higher than current maximum
  IF ls_sales-total_sales > lv_max_sales.
    lv_max_sales = ls_sales-total_sales.
  ENDIF.

ENDLOOP.

** Display Results **

WRITE: / 'Total Sales Amount:', lv_total.
WRITE: / 'Max Sales Amount:', lv_max_sales.
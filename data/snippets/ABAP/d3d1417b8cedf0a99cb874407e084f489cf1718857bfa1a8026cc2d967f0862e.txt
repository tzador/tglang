TYPES: BEGIN OF ty_flight,
  flight_number TYPE n LENGTH 5,
  departure_city TYPE string LENGTH 20,
  departure_date TYPE d,
  departure_time TYPE t,
  arrival_city TYPE string LENGTH 20,
  arrival_date TYPE d,
  arrival_time TYPE t,
  price TYPE p,
END OF ty_flight.

DATA: lt_flights TYPE STANDARD TABLE OF ty_flight,
      ls_flights TYPE ty_flight,
      ld_departure_date TYPE d,
      ld_arrival_date TYPE d,
      lv_price TYPE p.

START-OF-SELECTION.

*--- Get user input for departure and arrival dates
PARAMETERS:
  p_departure_date TYPE d,
  p_arrival_date TYPE d.

*--- Get all flights within the user-specified dates
SELECT  flight_number,
        departure_city,
        departure_date,
        departure_time,
        arrival_city,
        arrival_date,
        arrival_time,
        price
  INTO TABLE lt_flights
  FROM flights
  WHERE departure_date >= ld_departure_date
    AND arrival_date <= ld_arrival_date.

*--- Sort the flights by price in ascending order
SORT lt_flights BY price ASCENDING.

*--- Loop through all flights and print the details
LOOP AT lt_flights INTO ls_flights.
  WRITE: / ls_flight-flight_number,
         ls_flight-departure_city,
         ls_flight-departure_date,
         ls_flight-departure_time,
         ls_flight-arrival_city,
         ls_flight-arrival_date,
         ls_flight-arrival_tim,
         ls_flight-price.
ENDLOOP.
`FUNCTION Z_TEST_VAT_CALCULATION.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"----------------------------------------------------------------------
*  IMPORTING
*     VALUE(I_NET_AMOUNT) TYPE P DECIMALS 2
*  EXPORTING
*     VALUE(E_GROSS_AMOUNT) TYPE P DECIMALS 2
*****************************************************************************
* * simple ABAP function to calculate VAT based on net amount
* *****************************************************************************
DATA:
  lv_vat_prcnt TYPE decimals2 VALUE '0.20',                 " fixed VAT percentage
  lv_vat_amount TYPE p DECIMALS 2,                          " variable for VAT amount

  TRY.
      cl_abap_math=>divide(
        iv_dividend  = i_net_amount
        iv_divisor   = 1 + lv_vat_prcnt
        iv_decimals  = '2'
        rv_result    = e_gross_amount ).
  CATCH cx_sy_arithmetic_overflow.
      e_gross_amount = i_net_amount.                          " catch overflow error
  ENDTRY.

  IF e_gross_amount = i_net_amount.                          " check if overflow occurred
    cl_abap_math=>multiply(
      iv_value     = i_net_amount
      iv_multiplier= lv_vat_prcnt
      iv_decimals  = '2'
      rv_result    = lv_vat_amount ).
    e_gross_amount = i_net_amount + lv_vat_amount.            " calculate gross amount
  ENDIF.
ENDFUNCTION.`
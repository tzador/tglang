*&---------------------------------------------------------------------*
*& Report  ZPROGRAMMING           *
*&---------------------------------------------------------------------*
*& This report demonstrates the use of various built-in functions in ABAP
*&---------------------------------------------------------------------*
REPORT zprogramming.

* Initialize variables
DATA: lv_num1 TYPE i,
      lv_num2 TYPE i,
      lv_result TYPE i.

* Set values
lv_num1 = 10.
lv_num2 = 20.

* Arithmetic Operations
lv_result = lv_num1 + lv_num2. " Addition
lv_result = lv_num1 - lv_num2. " Subtraction
lv_result = lv_num1 * lv_num2. " Multiplication
lv_result = lv_num1 / lv_num2. " Division

* Comparison Operations
IF lv_num1 = lv_num2.
  WRITE: 'Numbers are equal'.
ELSEIF lv_num1 > lv_num2.
  WRITE: 'First number is greater than second number'.
ELSE.
  WRITE: 'Second number is greater than first number'.
ENDIF.

* String Operations
DATA: lv_string1 TYPE string,
      lv_string2 TYPE string,
      lv_concatenated TYPE string.

lv_string1 = 'Hello'.
lv_string2 = 'World'.

lv_concatenated = lv_string1 && lv_string2. " Concatenation
WRITE: lv_concatenated.

lv_concatenated = COND #( WHEN lv_string1 = 'Hello' THEN 'Welcome' ELSE lv_string1 ). " Conditional concatenation
WRITE: lv_concatenated.

* Date and Time Operations
DATA: lv_date TYPE d,
      lv_time TYPE t,
      lv_year TYPE i,
      lv_date_plus TYPE d.

lv_date = sy-datum. " Current date
lv_time = sy-uzeit. " Current time

lv_year = lv_date+4(4). " Retrieve year from date
WRITE: lv_year.

lv_date_plus = lv_date + 10. " Add 10 days to date
WRITE: lv_date_plus.
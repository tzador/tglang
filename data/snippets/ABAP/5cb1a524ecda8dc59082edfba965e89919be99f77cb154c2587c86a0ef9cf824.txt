** TYPES for flight data
TYPES:
  BEGIN OF ty_flight,
    carrid TYPE spfli-carrid,
    connid TYPE spfli-connid,
    fldate TYPE scarr-fldate,
    price TYPE p DECIMALS 2,
    currency TYPE c,
    seatsmax TYPE spfli-seatsmax,
    seatsocc TYPE decimal5_2,
  END OF ty_flight.


 ** SELECT data from tables
SELECT carrid connid fldate price currency seatsmax seatsocc
FROM spfli
INNER JOIN scarr
ON spfli~carrid = scarr~carrid.
INTO TABLE @DATA(lt_flight_data).

** LOOP through flight data
LOOP AT lt_flight_data ASSIGNING FIELD-SYMBOL(<fs_flight>).

** CALCULATE available seats
<fs_flight>-seatsavail = <fs_flight>-seatsmax - <fs_flight>-seatsocc.

** CHECK for minimum price
IF <fs_flight>-price < 100.
  <fs_flight>-discount = 'LOW PRICE'.
ELSEIF <fs_flight>-price > 500.
  <fs_flight>-discount = 'HIGH PRICE'.
ELSE.
  <fs_flight>-discount = 'NORMAL PRICE'.
ENDIF.

** DISPLAY flight details
WRITE: / 'Flight', <fs_flight>-carrid, <fs_flight>-connid,
       / 'Date', <fs_flight>-fldate, 'Price', <fs_flight>-price,
       / 'Seats Available', <fs_flight>-seatsavail,
       / 'Discount', <fs_flight>-discount.
ENDLOOP.
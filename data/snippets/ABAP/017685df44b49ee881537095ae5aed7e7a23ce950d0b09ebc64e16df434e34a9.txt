REPORT ZTEST.
*This is a simple ABAP report that outputs a table of employees with their respective salaries
TABLES: PA0001. *This is the table for employee master data
 
SELECT objid subty begda endda begda begda begda begda begda begda
INTO CORRESPONDING FIELDS OF TABLE @DATA(lt_employee_data) *Declaring internal table to store data
 
FROM PA0001
WHERE objid IN (100, 200, 300, 400) *Selecting employees with specific employee IDs
 
ORDER BY objid DESCENDING. *Sorting data by descending employee ID
 
*Creating ALV grid to display data
DATA(lo_alv) = NEW cl_salv_table( abap_true ).
 
*Adding columns to ALV grid
lo_alv->display( 
  columns = VALUE #( 
    column = 
      ( 
        name = 'Employee ID'
        key  = 'objid' *Key field for sorting data 
        tooltip = 'Employee ID'
      )
    column = 
      ( 
        name = 'First Name'
        key  = 'fname'
        tooltip = 'First Name'
      )
    column = 
      ( 
        name = 'Last Name'
        key  = 'lname'
        tooltip = 'Last Name'
      )
    column = 
      ( 
        name = 'Salary'
        key  = 'sala'
        tooltip = 'Salary'
      )
  )
).
 
*Loop through internal table to populate data
DATA(lv_employee_id) TYPE pa0001-objid.
DATA(lv_first_name) TYPE pa0001-fname.
DATA(lv_last_name) TYPE pa0001-lname.
DATA(lv_salary) TYPE pa0001-sala.
 
LOOP AT lt_employee_data INTO DATA(ls_employee_data).
  *Assigning values to variables
  lv_employee_id = ls_employee_data-objid.
  lv_first_name = ls_employee_data-fname.
  lv_last_name = ls_employee_data-lname.
 
  *Calculating salary based on employee type (hourly vs salaried)
  CASE ls_employee_data-subty.
    WHEN 'H' THEN
      lv_salary = 50 * 40 * 4 * 52. *Calculating hourly wage as 50 dollars per hour for 40 hours per week for 4 weeks per month for 52 weeks per year
    WHEN 'S' THEN
      lv_salary = 5000. *Assuming a monthly salary of 5000 dollars for salaried employees
  ENDCASE.
 
  *Adding rows to the ALV grid based on employee data
  lo_alv->add_row( values = #( lv_employee_id lv_first_name lv_last_name lv_salary ) ).
 
ENDLOOP.
 
*Displaying ALV grid
lo_alv->display( ).
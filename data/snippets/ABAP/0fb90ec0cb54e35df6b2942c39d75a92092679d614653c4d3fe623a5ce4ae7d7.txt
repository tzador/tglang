REPORT zdemo.
*---------------------------------------------------*
* This is a demo report in ABAP
*---------------------------------------------------*
* This code snippet demonstrates various usage of
* ABAP features such as data declarations, loops,
* conditions, and ABAP data objects.
*---------------------------------------------------*
*Data Declarations
DATA: gv_counter TYPE i VALUE 0. "integer variable
DATA: gv_total TYPE n LENGTH 10 DECIMALS 2 VALUE '100'. "decimal variable
DATA: gv_string TYPE string VALUE 'ABAP'. "string variable
DATA: gv_date TYPE d. "date variable
DATA: gt_names TYPE STANDARD TABLE OF string. "internal table
 
** Conditional Statements
IF gv_counter > 0.
  WRITE: / 'The counter value is greater than 0'.
ELSE.
  WRITE: / 'The counter value is less than or equal to 0'.
ENDIF.
 
** Looping Structures
DO 10 TIMES.
  ADD 1 TO gv_counter.
ENDDO.
 
WHILE gv_counter <= 10.
  WRITE: / 'Counter Value:', gv_counter.
  ADD 1 TO gv_counter.
ENDWHILE.
 
LOOP AT gt_names INTO DATA(lv_name).
  WRITE: / lv_name.
ENDLOOP.
 
** Selection Statements
SELECT SINGLE grtext FROM t100
  INTO @gv_string
  WHERE arbgb = 'A00'.
 
CASE gv_total.
  WHEN 100.
    WRITE: / 'The total value is 100'.
  WHEN 200.
    WRITE: / 'The total value is 200'.
  WHEN OTHERS.
    WRITE: / 'The total value is neither 100 nor 200'.
ENDCASE.
 
** ABAP Data Objects
CONCATENATE gv_string 'is a great programming language' INTO DATA(lv_newstring).
WRITE: / lv_newstring.
SPLIT gv_string AT 'B' INTO DATA(lv_first) DATA(lv_last).
WRITE: / 'First part of string:',lv_first.
WRITE: / 'Last part of string:',lv_last.
 
** Output:
* The counter value is greater than 0
* Counter Value: 1
* Counter Value: 2
* Counter Value: 3
* Counter Value: 4
* Counter Value: 5
* Counter Value: 6
* Counter Value: 7
* Counter Value: 8
* Counter Value: 9
* Counter Value: 10
* ABAP is a great programming language
* First part of string: A
* Last part of string: AP
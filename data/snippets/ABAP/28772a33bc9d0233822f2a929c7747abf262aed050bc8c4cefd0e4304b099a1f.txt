DATA:
    lr_result TYPE REF TO cl_abap_structdescr,
    lt_fields TYPE abap_component_tab,
    lr_field TYPE REF TO cl_abap_structdescr=>component,
    lv_count TYPE i,
    lv_fieldname TYPE string.

TRY.
    lr_result = cl_abap_typedescr=>describe_by_name( 'TABLE_NAME' ).
    CALL METHOD lr_result->get_components
      EXPORTING
        language = sy-langu
      IMPORTING
        components = lt_fields.
    lv_count = lines( lt_fields ).
  CATCH cx_sy_table_describing.
    MESSAGE 'Error in describing table' TYPE 'I' DISPLAY LIKE 'E'.
ENDTRY.

IF lv_count GT 0.
    READ TABLE lt_fields INDEX 1 INTO lr_field.
    lv_fieldname = lr_field->name.
ENDIF.

* This code snippet generates a class-based ABAP dictionary structure, 
* retrieves and stores the components of a specified table, and checks for any errors. 
* If successful, it then accesses the first component and stores its name in a variable.
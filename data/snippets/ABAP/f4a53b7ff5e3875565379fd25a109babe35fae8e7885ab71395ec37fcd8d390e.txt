REPORT sample_program.

* Class for handling employee data
CLASS cl_employee DEFINITION.
  PUBLIC SECTION.
* Global attributes
    DATA: employee_id TYPE i,
          employee_name TYPE string,
          employee_dept TYPE string.

* Constructor method
    METHODS: constructor IMPORTING i_employee_id TYPE i OPTIONAL
                                      i_employee_name TYPE string OPTIONAL
                                      i_employee_dept TYPE string OPTIONAL,
             display_details,
             change_dept EXPORTING e_dept TYPE string.
  PRIVATE SECTION.
    DATA: salary TYPE i,
          hours_worked TYPE i,
          hourly_rate TYPE i.
ENDCLASS.

* Implementation of class
CLASS cl_employee IMPLEMENTATION.
* Implementing constructor
  METHOD constructor.
    employee_id = i_employee_id.
    employee_name = i_employee_name.
    employee_dept = i_employee_dept.
  ENDMETHOD.
  
* Method to display employee details
  METHOD display_details.
    WRITE: / 'Employee ID:', employee_id.
    WRITE: / 'Employee Name:', employee_name.
    WRITE: / 'Employee Department:', employee_dept.
  ENDMETHOD.
  
* Method to change employee department
  METHOD change_dept.
    employee_dept = e_dept.
  ENDMETHOD.
  
ENDCLASS.

* Creating objects of class
DATA: employee TYPE REF TO cl_employee.
DATA: employee_id TYPE i VALUE 123,
      employee_name TYPE string VALUE 'John',
      employee_dept TYPE string VALUE 'IT'.

* Instantiating the class using constructor
CREATE OBJECT employee
              EXPORTING
                i_employee_id = employee_id
                i_employee_name = employee_name
                i_employee_dept = employee_dept.

* Displaying details of employee
employee->display_details( ).

* Changing department of employee
employee->change_dept( e_dept = 'Marketing' ).

* Displaying updated details of employee
employee->display_details( ).
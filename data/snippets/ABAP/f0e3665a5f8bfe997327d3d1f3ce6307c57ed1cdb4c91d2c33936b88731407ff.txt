DATA: lv_emp_id TYPE n LENGTH 8 DECIMALS 0, "Define a data type with specific length and decimals
      lv_name(30) VALUE 'John Doe', "Define a character-type variable with a initial value
      lv_salary(12) TYPE c, "Define a character-type variable with specific length
      lv_commission(12) TYPE p DECIMALS 2, "Define a packed number-type variable with specific decimals
      lv_salary_total TYPE p DECIMALS 2, "Define a packed number-type variable with specific decimals
      lv_total TYPE f, "Define a floating point-type variable
      lv_total_salary TYPE c, "Define a character-type variable
      lv_error TYPE i OBLIGATORY INITIAL 0, "Define an integer-type variable with an obligatory input
      lv_message TYPE string VALUE 'Employee salary has been updated.', "Define a string-type variable with an initial value
      lv_date TYPE d, "Define a date-type variable
      lv_time TYPE t, "Define a time-type variable
      lt_employee TYPE STANDARD TABLE OF emp_details, "Define a standard table-type variable with a structure 'emp_details'
      ls_employee LIKE LINE OF lt_employee, "Define a line of structure 'emp_details'
      ls_salary_details TYPE salaries, "Define a structure-type variable with structure 'salaries'
      ls_custom_object TYPE REF TO zcl_custom_manager, "Define a reference variable to a custom class
      lt_custom_objects TYPE STANDARD TABLE OF ls_custom_object, "Define a standard table-type variable with a line of structure 'ls_custom_object'
      lr_custom_manager TYPE REF TO zcl_custom_manager, "Define a reference variable to a custom class
      lo_message_manager TYPE REF TO if_message_manager, "Define a reference variable to interface 'if_message_manager'

CALL FUNCTION 'UPDATE_EMPLOYEE_SALARY' "Call a function module with specified name
     EXPORTING
          emp_id = lv_emp_id "Provide value for input parameter 'emp_id'
          date = sy-datum "Provide system date
          time = sy-uzeit "Provide system time
     IMPORTING
          total_salary = lv_salary_total "Receive the value for output parameter 'total_salary'
          error = lv_error. "Receive the value for output parameter 'error'

LOOP AT lt_employee INTO ls_employee "Loop through a table-type variable and store each line in structure-type variable
     lv_salary = ls_employee-salary "Assign the value of a specific field in structure to a variable
     ADD lv_salary to lv_total "(Simple arithmetic operation) Add the value of a variable to another variable

     IF lv_salary >= 3000. "(Simple comparison) Check if the value of the variable meets a condition
          lv_commission = lv_salary * 0.1. "(Simple arithmetic operation) Calculate the commission based on salary
     ELSEIF lv_salary >= 2000. "(Simple comparison) Check if the value of the variable meets another condition
          lv_commission = lv_salary * 0.05. "(Simple arithmetic operation) Calculate the commission based on salary
     ELSE.
          lv_commission = '00.00'. "If no condition is met, set the value of the variable to a default value
     ENDIF.

     MOVE lv_total to ls_salary_details-total. "Assign the value of a variable to a specific field in a structure
     ls_salary_details-employee_name = lv_name. "Assign the value of a variable to a specific field in a structure

     APPEND ls_salary_details TO lt_custom_objects. "Add a line of structure to a table-type variable

ENDLOOP.

CREATE OBJECT lo_message_manager "Create an instance of a class using 'CREATE OBJECT' keyword
     EXPORTING
          message = lv_message "Provide value for importing parameter 'message'
          date = lv_date "Provide value for importing parameter 'date'
          time = lv_time. "Provide value for importing parameter 'time'

CALL METHOD lo_message_manager->display_message "Call a method using 'CALL METHOD' keyword
     IMPORTING
          message = lv_total_salary "Receive the value for exporting parameter 'message'
     CHANGING
          employees = lt_custom_objects. "Change the value of a parameter by reference
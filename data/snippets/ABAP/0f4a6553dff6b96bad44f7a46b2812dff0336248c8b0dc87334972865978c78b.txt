*&---------------------------------------------------------------------*
*& Report Z_TEST
*&---------------------------------------------------------------------*
*& This program is used to generate a table with invoice data
*&---------------------------------------------------------------------*
REPORT Z_TEST.

* Define a structure for invoice data
DATA: BEGIN OF gs_invoice,
      invoice_num TYPE i,
      customer_name TYPE string,
      invoice_date TYPE d,
      amount TYPE p DECIMALS 2,
      END OF gs_invoice.

* Define an internal table to hold the invoice data
DATA: gt_invoice_table TYPE TABLE OF gs_invoice.

* Select invoice data from the database
SELECT invoice_num customer_name invoice_date amount
INTO CORRESPONDING FIELDS OF TABLE gt_invoice_table
FROM invoice_table
WHERE invoice_date >= '2021-01-01' AND invoice_date <= '2021-06-30'.

* Loop through the invoice table to calculate total amount
DATA: gv_total_amount TYPE p DECIMALS 2.
LOOP AT gt_invoice_table INTO gs_invoice.
  gv_total_amount = gv_total_amount + gs_invoice-amount.
ENDLOOP.

* Print the total amount with currency
WRITE: / 'Total Invoice Amount:'(004), gv_total_amount CURRENCY 'USD'.

* Sort the invoices by invoice number
SORT gt_invoice_table BY invoice_num.

* Print the sorted invoice data
WRITE: / 'Invoice No.'(005), 'Customer Name'(005), 'Invoice Date'(005), 'Amount'(005).
ULINE.
LOOP AT gt_invoice_table INTO gs_invoice.
  WRITE: / gs_invoice-invoice_num, gs_invoice-customer_name, gs_invoice-invoice_date, gs_invoice-amount.
ENDLOOP.
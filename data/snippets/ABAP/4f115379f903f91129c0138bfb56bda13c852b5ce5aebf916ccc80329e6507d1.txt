METHOD call_external_service.

* This method sends a request to an external service and handles the response

  DATA: lv_url TYPE string,
        lv_response TYPE string,
        lv_status_code TYPE i.

* Set the URL of the external service endpoint
  lv_url = '/external/service/endpoint'.

* Create a new HTTP client object to make the request
  DATA(lo_http_client) = cl_http_client=>create_by_url( url = lv_url ).

* Set the request headers
  lo_http_client->request->set_header_field( name = 'Content-Type' value = 'application/json' ).
  lo_http_client->request->set_header_field( name = 'Authorization' value = 'Bearer XXXXXXXXXXXXXXXXXXXX' ).

* Create a new JSON document to send in the request body
  DATA(lo_json_document) = cl_sxml=>create( ).

* Set the values in the JSON document
  lo_json_document->create_simple_element(
    name  = 'username'
    value = 'johndoe'
  ).
  lo_json_document->create_simple_element(
    name  = 'password'
    value = 'password123'
  ).

* Convert the JSON document to a string and send it in the request body
  DATA(lv_json_string) = lo_json_document->serialize( ).
  lo_http_client->request->set_cdata( data = lv_json_string ).

* Send the request and store the response
  lo_http_client->send( ).
  lv_response = lo_http_client->response->get_cdata( ).

* Get the status code of the response
  lv_status_code = lo_http_client->response->get_status( ).

* Handle any errors or successful responses here
  CASE lv_status_code.
    WHEN 200.
      " Handle successful response
      MESSAGE 'Request was successful' TYPE 'S'.
    WHEN 400.
      " Handle bad request
      MESSAGE 'Bad request' TYPE 'E'.
    WHEN 401.
      " Handle unauthorized request
      MESSAGE 'Unauthorized request' TYPE 'E'.
    WHEN OTHERS.
      " Handle any other errors
      MESSAGE 'An error occurred' TYPE 'E'.
  ENDCASE.

ENDMETHOD.
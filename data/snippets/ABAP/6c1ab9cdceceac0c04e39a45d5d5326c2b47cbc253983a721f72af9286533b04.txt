TYPES:
BEGIN OF ty_customer_profile,
  id        TYPE i,
  name      TYPE string,
  address   TYPE string,
  contact   TYPE i,
  country   TYPE string,
END OF ty_customer_profile.

DATA:
  ls_customer   TYPE ty_customer_profile,
  lt_customers  TYPE STANDARD TABLE OF ty_customer_profile.
  
*This code snippet defines a customer profile data structure with various attributes.

CONSTANTS:
  c_country_list TYPE STANDARD TABLE OF country_table,
  c_country_all  TYPE c_country_list.

SELECT country FROM country_table INTO CORRESPONDING FIELDS OF c_country_list.
 
*This code snippet initializes a country list and populates it with the values from an ABAP dictionary table.

CLASS lcl_customer DEFINITION.
  PUBLIC SECTION.
    METHODS:
      constructor IMPORTING
        is_name TYPE string OPTIONAL
        is_address TYPE string OPTIONAL
        is_contact TYPE i OPTIONAL
        is_country TYPE string OPTIONAL,
      get_profile EXPORTING
        es_profile TYPE ty_customer_profile.

  PRIVATE SECTION.
    DATA:
      ms_customer   TYPE ty_customer_profile.
      
*This code snippet defines a local customer class with a constructor and a method to retrieve the customer profile.
      
  METHODS:
    constructor.
      IF is_name IS NOT INITIAL.
        ms_customer-name = is_name.
      ENDIF.
      IF is_address IS NOT INITIAL.
        ms_customer-address = is_address.
      ENDIF.
      IF is_contact IS NOT INITIAL.
        ms_customer-contact = is_contact.
      ENDIF.
      IF is_country IS NOT INITIAL.
        ms_customer-country = is_country.
      ENDIF.
    endmethod.

  METHODS:
    get_profile.
      es_profile = ms_customer.
      WRITE / es_profile-name.
      WRITE / es_profile-contact.
      WRITE / es_profile-country.
    ENDMETHOD.
    
*This code snippet defines the constructor and get_profile methods of the customer class, which set the values of the customer profile and output them to the screen.

ENDCLASS.

START-OF-SELECTION.

CREATE OBJECT go_customer
  EXPORTING
    is_name = 'John Smith'
    is_address = '123 Main Street'
    is_contact = 555-123-4567
    is_country = 'USA'.
    
*This code snippet creates an instance of the customer class, passing in values for the customer's name, address, contact, and country.

CALL METHOD go_customer->get_profile
  IMPORTING
    es_profile = ls_customer.
    
*This code snippet calls the get_profile method of the customer class, which retrieves the customer's profile and stores it in a structure.

APPEND ls_customer TO lt_customers.
 
*This code snippet appends the customer profile structure to a table of customer profiles.

READ TABLE lt_customers INTO ls_customer
  INDEX 1.
  
*This code snippet reads the first entry in the table of customer profiles and stores it in a structure.

IF sy-subrc = 0.
  WRITE / ls_customer-name.
  WRITE / ls_customer-address.
  WRITE / ls_customer-country.
ENDIF.
 
*This code snippet outputs the customer's name, address, and country if the read operation was successful.
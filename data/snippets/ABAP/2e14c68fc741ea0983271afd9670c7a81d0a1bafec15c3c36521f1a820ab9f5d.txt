" Create a class
CLASS lcl_complex DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  " Private attributes
  PRIVATE SECTION.
    DATA: lv_string TYPE string,
          lv_integer TYPE i VALUE 5,
          lt_table TYPE STANDARD TABLE OF lcl_complex.

  " Protected attributes
  PROTECTED SECTION.
    DATA: lv_flag TYPE bapiflag,
          lv_currency TYPE curcy.

  " Public attributes
  PUBLIC SECTION.
    METHODS:
      " Constructor method
      constructor,
      " Private method
      private_method EXPORTING iv_count TYPE i,
      " Protected method
      protected_method.
    CLASS-METHODS:
      " Static method
      static_method IMPORTING iv_factor TYPE i
                    RETURNING VALUE(rv_result) TYPE i,
      " Final method
      final_method.
    EVENTS:
      " Event declarations
      start_of_program IMPORTING iv_year TYPE i
                       EXPORTING ev_message TYPE string.
ENDCLASS.

" Implementation class
CLASS lcl_complex IMPLEMENTATION.
  METHOD constructor.
    " Constructor code
    WRITE 'Constructor called'.
  ENDMETHOD.

  METHOD private_method.
    " Private method code
    WRITE 'Private method called'.
  ENDMETHOD.

  METHOD protected_method.
    " Protected method code
    WRITE 'Protected method called'.
  ENDMETHOD.

  METHOD static_method.
    " Static method code
    rv_result = iv_factor * 2.
  ENDMETHOD.

  METHOD final_method FINAL.
    " Final method code
    WRITE 'Final method called'.
  ENDMETHOD.

  " Event handler
  METHOD start_of_program.
    " Event code
    WRITE 'Start of program event called'.
  ENDMETHOD.
ENDCLASS.

" Create an instance of the class
DATA: lo_complex TYPE REF TO lcl_complex.
CREATE OBJECT lo_complex.

" Call methods of the class
lo_complex->private_method( iv_count = 3 ).
lo_complex->protected_method( ).
WRITE lo_complex->static_method( iv_factor = 5 ).
lo_complex->final_method( ).
lo_complex->start_of_program( iv_year = 2021 ).
REPORT z_demo_code.

* This program demonstrates nested loops and control flow in ABAP
* It calculates the sum of the first 10 prime numbers

* Define internal table to store prime numbers
DATA: lt_primes TYPE TABLE OF i,
      ls_primes TYPE i.

* Define variables to store loop counter and sum
DATA: lv_counter TYPE i VALUE 1,
      lv_sum TYPE i.

* Loop through numbers 1 to 30
DO 30 TIMES.

  * Define variable to store the boolean value of prime
  DATA(lv_prime) = abap_true.

  * Check if a number is prime
  DO lv_counter - 1 TIMES.

    * If the number is divisible by a smaller number, it is not prime
    IF lv_counter MOD sy-index = 0.
      lv_prime = abap_false.
      EXIT.
    ENDIF.

  ENDDO.

  * If the number is prime, add it to the internal table
  IF lv_prime = abap_true.
    ls_primes = lv_counter.
    APPEND ls_primes TO lt_primes.
  ENDIF.

  * Increase the counter and proceed to next number
  lv_counter = lv_counter + 1.

  * Once 10 prime numbers are found, exit the loop
  IF lines( lt_primes ) = 10.
    EXIT.
  ENDIF.

ENDDO.

* Loop through the internal table and calculate sum
LOOP AT lt_primes INTO ls_primes.
  lv_sum = lv_sum + ls_primes.
ENDLOOP.

* Print the final sum and list of prime numbers
WRITE: / 'The sum of the first 10 prime numbers is:', lv_sum.
WRITE: / 'The list of prime numbers is:'.

LOOP AT lt_primes INTO ls_primes.
  WRITE: / ls_primes.
ENDLOOP.
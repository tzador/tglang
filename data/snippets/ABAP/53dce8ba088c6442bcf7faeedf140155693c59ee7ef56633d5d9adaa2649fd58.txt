*&---------------------------------------------------------------------*
*& Report ZDEMO_VARIABLES
*&---------------------------------------------------------------------*

REPORT ZDEMO_VARIABLES.

* Global variables
DATA gv_total TYPE i.
DATA gv_name TYPE string.

* Constants
CONSTANTS gc_number TYPE i VALUE 10.
CONSTANTS gc_string TYPE string VALUE 'Hello'.

* Selection screen variables
PARAMETERS: p_num TYPE i,
            p_name TYPE string.

* Internal table
DATA: gt_data TYPE STANDARD TABLE OF ZDEMO_STRUCTURE,
      gs_data LIKE LINE OF gt_data.

* Work area
DATA: wa_data TYPE ZDEMO_STRUCTURE.

* Field symbols
FIELD-SYMBOLS: <fs_data> TYPE ANY,
               <fs_field> TYPE ANY.

* Internal table with header line
DATA: BEGIN OF gt_demo OCCURS 10,
        field1 TYPE string,
        field2 TYPE string,
      END OF gt_demo.      

* Subroutine with local variable
FORM calculate_tax.
  DATA(lv_tax) = gv_total * 0.2.
ENDFORM.

* Class declaration
CLASS zdemo_class DEFINITION.
  PUBLIC SECTION.
    METHODS: get_total RETURNING VALUE(rv_total) TYPE i.
  PRIVATE SECTION.
    DATA: mv_total TYPE i.
ENDCLASS.

* Class implementation
CLASS zdemo_class IMPLEMENTATION.
  METHOD get_total.
    rv_total = mv_total + gc_number.
  ENDMETHOD.
ENDCLASS.

* Call subroutine
PERFORM calculate_tax.

* Create object from class
DATA(lo_class) = NEW zdemo_class( ).
lo_class->get_total( IMPORTING et_total = gv_total ).

* Loop at internal table
LOOP AT gt_demo INTO wa_demo.
  CLEAR gv_name.
  gv_name = wa_demo-field1.
ENDLOOP.
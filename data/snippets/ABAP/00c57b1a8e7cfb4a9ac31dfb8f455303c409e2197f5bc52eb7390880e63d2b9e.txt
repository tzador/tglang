* This program demonstrates a complex algorithm for finding prime numbers in a given range.
PROGRAM ZPRIME_NUMBER_DEMO.

* Declare a variable to hold the input range.
DATA: lv_range_low TYPE i,
      lv_range_high TYPE i.
      
* Store the range limits in the variables.
lv_range_low = 10.
lv_range_high = 50.

* Declare an internal table to store the prime numbers.
DATA: lt_prime_numbers TYPE STANDARD TABLE OF i.

* Loop through the range to check for prime numbers.
DO lv_range_high - lv_range_low TIMES.

* Increment the starting number by 1 each time.
lv_range_low = lv_range_low + 1.

* Declare a variable to store the number of factors.
DATA: lv_num_factors TYPE i.

* Loop to check for factors.
DO lv_range_low TIMES.

* Check if the number is divisible by the current loop number.
IF lv_range_low MOD sy-index = 0.

* Increment the number of factors.
lv_num_factors = lv_num_factors + 1.

* Check if the number of factors is more than 2 (not prime).
IF lv_num_factors > 2.

* Exit the loop, number is not prime.
EXIT.
ENDIF.

ENDIF.

* If the number of factors is 2 (prime), add it to the internal table.
IF lv_num_factors = 2.
INSERT lv_range_low INTO TABLE lt_prime_numbers.
ENDIF.

ENDDO.

ENDDO.

* Print the prime numbers found.
LOOP AT lt_prime_numbers INTO DATA(lv_prime_number).
WRITE: / 'Prime number found: ', lv_prime_number.
ENDLOOP.
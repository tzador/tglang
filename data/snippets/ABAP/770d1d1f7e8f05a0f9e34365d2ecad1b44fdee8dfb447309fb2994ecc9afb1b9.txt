*&---------------------------------------------------------------------*
*& Report Z_TEST_CODE
*&---------------------------------------------------------------------*
*& Report to show usage of complex ABAP code
*&---------------------------------------------------------------------*
*& 1. Define local type for employees
TYPES: BEGIN OF ty_employee,
       id       TYPE i,
       name     TYPE string,
       position TYPE string,
     END OF ty_employee.
*& 2. Declare internal table to hold employee data
DATA: lt_employee TYPE STANDARD TABLE OF ty_employee WITH HEADER LINE.
*& 3. Add employee data to internal table
lt_employee = VALUE #(
     ( id = 1 name = 'John' position = 'Manager' )
     ( id = 2 name = 'Jane' position = 'Developer' )
     ( id = 3 name = 'Tom' position = 'Consultant' )
     ( id = 4 name = 'Sara' position = 'Analyst' ) ).
*& 4. Define local type for department
TYPES: BEGIN OF ty_department,
       id        TYPE i,
       name      TYPE string,
       employees TYPE ty_employee TABLE OF ty_employee,
     END OF ty_department.
*& 5. Declare internal table to hold department data
DATA: lt_department TYPE STANDARD TABLE OF ty_department WITH HEADER LINE.
*& 6. Add department data to internal table
lt_department = VALUE #(
     ( id = 1 name = 'Sales' employees = lt_employee )
     ( id = 2 name = 'IT' employees =
       VALUE #(
        ( id = 5 name = 'Alex' position = 'Developer' )
        ( id = 6 name = 'Maria' position = 'Consultant' ) ) )
     ( id = 3 name = 'HR' )
     ( id = 4 name = 'Marketing' employees =
       VALUE #(
        ( id = 7 name = 'Luke' position = 'Analyst' )
        ( id = 8 name = 'Lana' position = 'Manager' )
        ( id = 9 name = 'Eric' position = 'Developer' ) ) ) ).
*& 7. Loop through department data and display employees
LOOP AT lt_department INTO DATA(lv_department).
  IF NOT lv_department-employees IS INITIAL.
    WRITE: / 'Department:', lv_department-name.
    LOOP AT lv_department-employees INTO DATA(i).
      WRITE: / 'Employee:', i-name, 'Position:', i-position.
    ENDLOOP.
  ELSE.
    WRITE: / 'No employees found for department', lv_department-name.
  ENDIF.
ENDLOOP.
*& 8. Sort department data by name
SORT lt_department BY name.
*& 9. Output department and employee data using nested loops
LOOP AT lt_department INTO DATA(lv_department).
  WRITE: / 'Department:', lv_department-name.
  IF NOT lv_department-employees IS INITIAL.
    LOOP AT lv_department-employees INTO DATA(i).
      WRITE: / 'Employee:', i-name, 'Position:', i-position.
    ENDLOOP.
  ELSE.
    WRITE: / 'No employees found for department', lv_department-name.
  ENDIF.
ENDLOOP.
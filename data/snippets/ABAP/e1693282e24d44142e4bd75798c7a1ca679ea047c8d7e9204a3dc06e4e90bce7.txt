* Declare a table type
TYPES: BEGIN OF ty_sales_data,
         salesperson TYPE string,
         product TYPE string,
         sales_amount TYPE p DECIMALS 2,
       END OF ty_sales_data.

* Declare an internal table with header
DATA: it_sales_data TYPE STANDARD TABLE OF ty_sales_data WITH HEADER LINE.

* Populate the internal table with data
APPEND INITIAL LINE TO it_sales_data ASSIGNING FIELD-SYMBOL(<ls_sales_data>).
<ls_sales_data>-salesperson = 'John'.
<ls_sales_data>-product = 'Shoes'.
<ls_sales_data>-sales_amount = 2000.
APPEND INITIAL LINE TO it_sales_data ASSIGNING FIELD-SYMBOL(<ls_sales_data>).
<ls_sales_data>-salesperson = 'Sarah'.
<ls_sales_data>-product = 'Shirt'.
<ls_sales_data>-sales_amount = 1500.

* Loop through the internal table and calculate total sales amount for each salesperson
DATA: lv_total TYPE p DECIMALS 2.
SORT it_sales_data BY salesperson.
LOOP AT it_sales_data ASSIGNING FIELD-SYMBOL(<ls_sales_data>).
  IF sy-tabix = 1 OR <ls_sales_data>-salesperson <> it_sales_data-salesperson.
    IF sy-tabix > 1.
      WRITE: / 'Total sales amount for', it_sales_data-salesperson, ':', lv_total.
      CLEAR lv_total.
    ENDIF.
    lv_total = lv_total + <ls_sales_data>-sales_amount.
  ELSE.
    lv_total = lv_total + <ls_sales_data>-sales_amount.
  ENDIF.
ENDLOOP.
WRITE: / 'Total sales amount for', it_sales_data-salesperson, ':', lv_total.
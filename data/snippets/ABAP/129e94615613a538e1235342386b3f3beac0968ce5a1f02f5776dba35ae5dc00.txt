*$*$*$*@path:my_namespace->get_data*
data: lt_data type standard table of my_namespace=>data_structure,
      lv_counter type i,
      lv_total type i,
      lv_quantity type i,
      lv_rate type p decimals 4,
      lv_amount type p decimals 4.

try.
    lv_total = 0.
    lv_quantity = 0.
    select data_name, quantity, rate
      from my_namespace->table
      into corresponding fields of table lt_data
      where data_name = 'sample'.
    catch cx_root.
        message 'Error retrieving data.' type 'E'.
endtry.

loop at lt_data assigning field-symbol(<fs_data>).
    if <fs_data>-quantity > 0.
        lv_amount = <fs_data>-quantity * <fs_data>-rate.
        lv_total = lv_total + lv_amount.
        lv_quantity = lv_quantity + <fs_data>-quantity.
    endif.
endloop.

*$*$*$* Output:
data: lt_data type standard table of my_namespace=>data_structure,  
      lv_counter type i,   "Counter variable  
      lv_total type i,     "Total amount  
      lv_quantity type i,  "Total quantity  
      lv_rate type p decimals 4,  "Rate with 4 decimal places  
      lv_amount type p decimals 4.  "Amount with 4 decimal places

try.  "Start of TRY block 
    lv_total = 0.  "Initialize total amount to 0 
    lv_quantity = 0.  "Initialize total quantity to 0 
    select data_name, quantity, rate  "Select data from table 
      from my_namespace->table  
      into corresponding fields of table lt_data  "Store data in internal table 
      where data_name = 'sample'.  "Only select data with name 'sample' 
    catch cx_root.  "Handle any errors 
        message 'Error retrieving data.' type 'E'.  "Display error message 
endtry.  "End of TRY block 

loop at lt_data assigning field-symbol(<fs_data>).  "Loop through internal table 
    if <fs_data>-quantity > 0.  "Check if quantity is positive 
        lv_amount = <fs_data>-quantity * <fs_data>-rate.  "Calculate amount 
        lv_total = lv_total + lv_amount.  "Add amount to total 
        lv_quantity = lv_quantity + <fs_data>-quantity.  "Add quantity to total 
    endif. 
endloop.  "End of LOOP block
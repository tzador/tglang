DATA: gt_tab type TABLE OF string,
      gv_var1 type i value 0,
      gv_var2 type c,
      gv_var3 type n.
    
* This is a comment in ABAP code
    
CREATE OBJECT go_object TYPE zcl_object.

IF gv_var1 <> 0.

* This is another comment in ABAP code

  SELECT single field1 field2 field3
  INTO TABLE @gt_tab
  FROM table_name
  WHERE field1 = @gv_var1
  AND field2 = @gv_var2
  AND field3 = @gv_var3.
  
  " This is a SELECT statement in ABAP with multiple conditions and using inline declaration for internal table
  " as well as using field symbols (@) to assign values to the internal table
  

  CALL METHOD go_object->method1
  EXPORTING
    param1 = gv_var1
    param2 = gv_var2
    param3 = gv_var3
  RECEIVING
    result = gv_var2.
    
  " This is a CALL METHOD statement in ABAP with exporting and receiving parameters 


  LOOP AT gt_tab INTO DATA(gs_tab).

    IF gs_tab-field1 NE space
      AND gs_tab-field2 CS 'keyword'
      AND gs_tab-field3 CP 'pattern*'.
      
      " This is a LOOP statement in ABAP with multiple conditions and using pattern matching in the third condition



* This is the ending of a block of code

  ENDIF.

* Another comment

  WRITE: / 'Value of gv_var2 is', gv_var2.
  
  " This is a WRITE statement in ABAP to output a message along with a variable value

ELSE.

  MESSAGE 'Value of gv_var1 is 0' TYPE 'I'.

  " This is a MESSAGE statement to display a message in case the condition 'gv_var1 <> 0' is not met
  " and using a message type 'I' for information
  
ENDIF.
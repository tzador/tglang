* This is a long and complex code snippet in ABAP that uses various built-in functions and operators

* Declare a table for storing employee data
DATA: lt_employee TYPE STANDARD TABLE OF ZEMPLOYEE.

* Declare variables for input values
DATA: lv_name TYPE STRING VALUE 'John',
      lv_age TYPE I VALUE 25.

* Use the built-in function to insert a new employee into the table
INSERT INITIAL LINE INTO TABLE lt_employee ASSIGNING FIELD-SYMBOL(<ls_employee>).

* Use the built-in operator to assign values to the employee fields
<ls_employee>-name = lv_name.
<ls_employee>-age = lv_age.

* Use the built-in function to check if the employee meet certain criteria
IF <ls_employee>-age > 21 AND <ls_employee>-name <> ''.
  WRITE 'Employee is eligible for promotion'.
ELSE.
  WRITE 'Employee is not eligible for promotion'.
ENDIF.

* Use the built-in function to iterate through the table and process each employee
LOOP AT lt_employee ASSIGNING FIELD-SYMBOL(<ls_employee>).

  * Use the built-in function to convert the age from years to months and assign it to a variable
  DATA(lv_months) = CONV I(12) * <ls_employee>-age.

  * Use the built-in function to format the employee name in uppercase
  DATA(lv_name_upper) = CONV STRING( <ls_employee>-name ).

  * Use the built-in function to calculate the quarterly salary of the employee
  DATA(lv_salary) = <ls_employee>-salary / 4.
  
  * Output the employee information in a formatted way
  WRITE: / 'Name:', lv_name_upper,
         / 'Age:', <ls_employee>-age,
         / 'Months in company:', lv_months,
         / 'Quarterly Salary:', lv_salary.
ENDLOOP.
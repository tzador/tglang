*&---------------------------------------------------------------------*
*& Report ZDEMO_REPORT
*&---------------------------------------------------------------------*
* A complex ABAP report that demonstrates multiple functionality and data processing

REPORT ZDEMO_REPORT.

* Constants for number of employees
CONSTANTS:
  c_emp_count TYPE i VALUE 10, " Number of employees to generate
  c_min_sal TYPE i VALUE 1000, " Minimum salary for generated employees
  c_max_sal TYPE i VALUE 10000. " Maximum salary for generated employees

* Internal table declaration to store employee data
DATA: lt_emp_data TYPE TABLE OF zemployee.

* Structure definition for employee data
TYPES:
  BEGIN OF zemployee,
    id TYPE i, " Employee ID
    name TYPE string, " Employee name
    department TYPE string, " Employee department
    salary TYPE i, " Employee salary
  END OF zemployee.

* Variable declaration for loop
DATA: lv_count TYPE i, " Loop counter
      lv_sal TYPE i. " Randomly generated salary

* Loop to generate employee data and store in internal table
DO c_emp_count TIMES.
  lv_count = sy-index.
  lv_sal = c_min_sal + ( sy-index - 1 ) * ( c_max_sal - c_min_sal ) / 9.
  lt_emp_data[ sy-index ] = VALUE #( ( id = lv_count name = `Employee &lv_count` department = `Department &lv_count` salary = lv_sal ) ).
ENDDO.

* Sort employee data in descending order by salary
SORT lt_emp_data BY salary DESCENDING.

* Variable for calculating average salary
DATA(lv_avg_sal) = ( REDUCE i( INIT count = 0 FINAL sal_sum = CORRESPONDING #( lt_emp_data )[ salary ] ) WAERKEN-COUNTER ).

* Output average salary
WRITE: / 'Average salary is', lv_avg_sal.

* Output top 5 employees with highest salary
WRITE: / 'Top 5 employees with highest salary:'.
LOOP AT lt_emp_data ASSIGNING FIELD-SYMBOL(<emp>) FROM 1 TO 5.
  WRITE: / <emp>-name, <emp>-department, <emp>-salary.
ENDLOOP.

* Output bottom 5 employees with lowest salary
WRITE: / 'Bottom 5 employees with lowest salary:'.
LOOP AT lt_emp_data ASSIGNING FIELD-SYMBOL(<emp>) FROM LINES( lt_emp_data ) - 4 TO LINES( lt_emp_data ).
  WRITE: / <emp>-name, <emp>-department, <emp>-salary.
ENDLOOP.

* Output employee data with salary greater than 5000
GET DATA(lt_emp_data).
WRITE: / 'Employees with salary greater than 5000:'.
LOOP AT lt_emp_data ASSIGNING FIELD-SYMBOL(<emp>) WHERE ( salary > 5000 ).
  WRITE: / <emp>-id, <emp>-name, <emp>-department, <emp>-salary.
ENDLOOP.
DATA: gv_string TYPE string, gv_int TYPE i.

SELECT single a~string INTO gv_string
  FROM table_a AS a
  WHERE a~id = '001'.

IF gv_string IS NOT INITIAL.
  CONCATENATE gv_string 'is found.' INTO gv_string.
  WRITE gv_string.
ELSE.
  gv_int = 1 / 0. " This will generate a division by zero error
  " which will be caught by the TRY CATCH block below.
ENDIF.

TRY.
  gv_int = gv_string.
  ASSERT 1 = 2. " This will generate an assertion error
  " which will be caught by the CATCH cx_sy_assertion_failed block.
CATCH cx_sy_assertion_failed INTO DATA(error).
  WRITE 'Assertion failed: ' && error->get_text( ).
CATCH cx_sy_conversion_no_number INTO DATA(error).
  WRITE 'Could not convert to number: ' && error->get_text( ).
CATCH cx_sy_arithmetic_overflow INTO DATA(error).
  WRITE 'Arithmetic overflow: ' && error->get_text( ).

ENDTRY.

WRITE 'The value of gv_int is: ' && gv_int.
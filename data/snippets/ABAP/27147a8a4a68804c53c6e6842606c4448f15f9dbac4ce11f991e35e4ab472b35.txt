*&---------------------------------------------------------------------*
*& Report  ZDEMO_COMPLEX_CODE
*&---------------------------------------------------------------------*
*
* This report performs complex calculations and displays the results.
*
*----------------------------------------------------------------------*
REPORT ZDEMO_COMPLEX_CODE.

* Data declaration
DATA: lv_num1 TYPE i,
      lv_num2 TYPE i,
      lv_result TYPE i.

* User input
PARAMETERS: p_num1 TYPE i,
            p_num2 TYPE i.

* Calculation
lv_num1 = p_num1 + 5.
lv_num2 = p_num2 * 10.
lv_result = ( lv_num1 / lv_num2 ) * 100.

* Display results
WRITE: / 'First number:', p_num1,
       / 'Second number:', p_num2,
       / 'Result:', lv_result.

* Subroutines for additional calculations
PERFORM perform1 USING lv_num1.
PERFORM perform2 USING lv_num1 lv_num2 CHANGING lv_result.

* Output additional calculations
WRITE: / 'Additional calculation 1:', lv_result.
WRITE: / 'Additional calculation 2:', lv_num1, lv_num2.

* Subroutines for rounding and formatting
PERFORM perform_rounding CHANGING lv_result.
PERFORM perform_formatting CHANGING lv_result.

* Final result output
WRITE: / 'Final result:', lv_result.

*&---------------------------------------------------------------------*
*& Form perform1
*&---------------------------------------------------------------------*
FORM perform1 USING num1 TYPE i.
  DATA: lv_num TYPE i,
        lv_result TYPE i.

  lv_num = num1 + 10.
  lv_result = lv_num * 5.

  WRITE: / 'Calculation 1:', num1,
         / 'Result:', lv_result.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form perform2
*&---------------------------------------------------------------------*
FORM perform2 USING num1 TYPE i
                   num2 TYPE i
              CHANGING result TYPE i.
  DATA: lv_num TYPE i.

  lv_num = num1 + num2.
  result = result + lv_num.

  WRITE: / 'Calculation 2:', num1, num2,
         / 'Result:', result.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form perform_rounding
*&---------------------------------------------------------------------*
FORM perform_rounding CHANGING result TYPE i.
  DATA: lv_temp TYPE i.

  lv_temp = result MOD 10.

  IF lv_temp < 5.
    result = result - lv_temp.
  ELSE.
    result = result + ( 10 - lv_temp ).
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form perform_formatting
*&---------------------------------------------------------------------*
FORM perform_formatting CHANGING result TYPE i.
  DATA: lv_formatted TYPE string.

  lv_formatted = COND #( WHEN result >= 1000 THEN '1.000'
                    ELSE result ).

  REPLACE FIRST OCCURRENCE OF '.' IN lv_formatted WITH ','.

  result = lv_formatted.

ENDFORM.
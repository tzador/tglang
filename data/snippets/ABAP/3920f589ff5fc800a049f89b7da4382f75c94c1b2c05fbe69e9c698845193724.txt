DATA: lv_input TYPE char10,             "declare a variable of type char with length 10
          lv_output TYPE c LENGTH 10,       "declare a variable of type character with length 10
          lt_table TYPE TABLE OF mara,      "declare an internal table of type mara
          lv_counter TYPE i VALUE 0,        "declare a counter variable with initial value of 0
          lv_sum TYPE p LENGTH 10 DECIMALS 2, "declare a variable of type packed number with length 10 and 2 decimal places
          ls_data TYPE mara,                "declare a structure variable of type mara
          lt_keys TYPE STANDARD TABLE OF mara-matnr WITH DEFAULT KEY. "declare a standard table of type matnr with default key
          
    LOOP AT lt_table INTO ls_data.           "loop through the internal table
        IF ls_data-matnr = lv_input.        "check if the material number in the structure is equal to the input value
            ADD 1 TO lv_counter.            "increment the counter by 1
            APPEND ls_data TO lt_keys.      "append the structure to the standard table
        ENDIF.
    ENDLOOP.
    SORT lt_keys.                            "sort the standard table in ascending order
    READ TABLE lt_keys INDEX lv_counter INTO ls_data.    "read the structure at the index position of the counter from the standard table
    IF sy-subrc = 0.                         "check if the read operation was successful
        MOVE ls_data-matnr TO lv_output.    "move the material number from the structure to the output variable
        lv_sum = ls_data-brgew * lv_counter. "calculate the sum by multiplying the material weight with the counter value
    ENDIF.
    WRITE: / lv_output, lv_sum.               "display the output variables
CLASS demo_abap DEFINITION.
  PUBLIC SECTION.
    METHODS: generate_fruits RETURNING VALUE(rt_fruits) TYPE STANDARD TABLE.
    
  PRIVATE SECTION.
    DATA: lt_fruits TYPE STANDARD TABLE OF string.
    
    METHOD create_apple.
      CLEAR lt_fruits.
      lt_fruits = VALUE #( ( fruit = 'Apple' color = 'Red' )). "Create apple entry
    ENDMETHOD.
    
    METHOD create_orange.
      CLEAR lt_fruits.
      lt_fruits = VALUE #( ( fruit = 'Orange' color = 'Orange' )). "Create orange entry
    ENDMETHOD.

    METHOD create_banana.
      CLEAR lt_fruits.
      lt_fruits = VALUE #( ( fruit = 'Banana' color = 'Yellow' )). "Create banana entry
    ENDMETHOD.

    METHOD create_mango.
      CLEAR lt_fruits.
      lt_fruits = VALUE #( ( fruit = 'Mango' color = 'Yellow' )). "Create mango entry
    ENDMETHOD.
    
    METHOD generate_fruits.
      create_apple( ). "Add apple to table
      create_orange( ). "Add orange to table
      create_banana( ). "Add banana to table
      create_mango( ). "Add mango to table
      rt_fruits = lt_fruits. "Return populated table
    ENDMETHOD.
    
ENDCLASS.

"Instantiate and call method to generate fruits table
DATA: lo_demo TYPE REF TO demo_abap.
lo_demo = NEW demo_abap( ).
DATA(li_fruits) = lo_demo->generate_fruits( ).
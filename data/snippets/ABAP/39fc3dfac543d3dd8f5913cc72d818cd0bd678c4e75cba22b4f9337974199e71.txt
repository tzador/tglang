* This is a comment in ABAP

* Create a new class called 'Employee'
CLASS Employee DEFINITION.

* Define private data members
  PRIVATE SECTION.
    DATA: employee_id TYPE i,
          first_name TYPE string,
          last_name TYPE string,
          salary TYPE p DECIMALS 2.

* Define public methods to manipulate private data members
  PUBLIC SECTION.
    METHODS: constructor IMPORTING emp_id TYPE i, fname TYPE string, lname TYPE string, sal TYPE p,
             set_id IMPORTING new_id TYPE i,
             get_id RETURNING VALUE(emp_id) TYPE i,
             set_first_name IMPORTING new_fname TYPE string,
             get_first_name RETURNING VALUE(fname) TYPE string,
             set_last_name IMPORTING new_lname TYPE string,
             get_last_name RETURNING VALUE(lname) TYPE string,
             set_salary IMPORTING new_sal TYPE p,
             get_salary RETURNING VALUE(sal) TYPE p.

* Constructor method to initialize data members
  METHOD constructor.
    employee_id = emp_id.
    first_name = fname.
    last_name = lname.
    salary = sal.
  ENDMETHOD.

* Setter method to set employee id
  METHOD set_id.
    employee_id = new_id.
  ENDMETHOD.

* Getter method to get employee id
  METHOD get_id.
    RETURN employee_id.
  ENDMETHOD.

* Setter method to set employee first name
  METHOD set_first_name.
    first_name = new_fname.
  ENDMETHOD.

* Getter method to get employee first name
  METHOD get_first_name.
    RETURN first_name.
  ENDMETHOD.

* Setter method to set employee last name
  METHOD set_last_name.
    last_name = new_lname.
  ENDMETHOD.

* Getter method to get employee last name
  METHOD get_last_name.
    RETURN last_name.
  ENDMETHOD.

* Setter method to set employee salary
  METHOD set_salary.
    salary = new_sal.
  ENDMETHOD.

* Getter method to get employee salary
  METHOD get_salary.
    RETURN salary.
  ENDMETHOD.

ENDCLASS. " Employee DEFINITION

* Create an instance of the 'Employee' class
DATA: employee_instance TYPE REF TO Employee.
CREATE OBJECT employee_instance.

* Set employee information using setter methods
CALL METHOD employee_instance->set_id(1234).
CALL METHOD employee_instance->set_first_name('John').
CALL METHOD employee_instance->set_last_name('Doe').
CALL METHOD employee_instance->set_salary(5000.50).

* Get employee information using getter methods
DATA: employee_id TYPE i,
      first_name TYPE string,
      last_name TYPE string,
      salary TYPE p.
employee_id = employee_instance->get_id( ).
first_name = employee_instance->get_first_name( ).
last_name = employee_instance->get_last_name( ).
salary = employee_instance->get_salary( ).
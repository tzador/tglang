REPORT Z_ABAP_SAMPLE.

* @DESCRIPTION: This report is used to demonstrate various ABAP features and syntax.

DATA: g_name TYPE string,
      g_age TYPE i,
      g_salary TYPE p DECIMALS 2.

* @VARIABLES: Declaring global variables for storing name, age and salary.

CONSTANTS: c_message TYPE string VALUE 'Hello, World!'.

* @CONSTANTS: Declaring a constant message.

PARAMETERS: p_name TYPE string,
            p_age TYPE i.

* @PARAMETERS: Declaring parameters for inputting name and age.

START-OF-SELECTION.
  g_name = p_name.
  g_age = p_age.
  g_salary = g_age * 100.

* @MAIN: Main program section where values for global variables are assigned.

  IF g_age >= 18.
    WRITE: / 'Name:', g_name, / 'Age:', g_age.
    CASE g_age.
      WHEN 18 TO 25.
        WRITE: / 'You are a young adult.'.
      WHEN 26 TO 40.
        WRITE: / 'You are in your prime.'.
      WHEN 41 TO 60.
        WRITE: / 'You are an experienced professional.'.
      ELSE.
        WRITE: / 'You are a wise elder.'.
    ENDCASE.
  ELSE.
    RAISE EXCEPTION TYPE cx_root MESSAGE 'Invalid age entered!'.
  ENDIF.

* @CONDITIONS: Checking if age is valid and displaying appropriate messages.

  WRITE: / 'Your salary is:', g_salary.

* @OUTPUT: Displaying calculated salary based on age.

END-OF-SELECTION.
  WRITE: / 'Thanks for using our program!'.

* @END: End of program section where final message is displayed.
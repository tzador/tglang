REPORT Z_PROGRAM.
* This is a sample ABAP program with multiple sections and nested structures.
* It demonstrates the use of variables, nested loops, and conditional statements.

TABLES: mara, makt, mspr.
DATA: lv_matnr TYPE matnr,
      lv_maktx TYPE maktg-maktx,
      lv_mspr TYPE msprl-mspr.
      
START-OF-SELECTION.
* This is the main section where the program logic starts.
* We will loop through the table "mara" and for each entry we will retrieve the corresponding materials' descriptions from the table "makt".
* Then, we will use a conditional statement to check if the material price exists in the table "mspr" and display it if it does.
DATA: lt_mara TYPE STANDARD TABLE OF mara.
SELECT * FROM mara INTO TABLE lt_mara.

LOOP AT lt_mara INTO DATA(ls_mara).
  lv_matnr = ls_mara-matnr.
  SELECT SINGLE maktx INTO lv_maktx FROM makt WHERE matnr = lv_matnr.
  WRITE: / 'Material Number:', ls_mara-matnr,
         / 'Material Description:', lv_maktx.
  IF lv_maktx IS NOT INITIAL.
    SELECT SINGLE mspr INTO lv_mspr FROM mspr WHERE matnr = lv_matnr.
    IF lv_mspr IS NOT INITIAL.
      WRITE: / 'Material Price:', lv_mspr.
    ENDIF.
  ENDIF.
ENDLOOP.

FORM display_description.
* This form is only used to display the description of a material.
* It takes in the material number as a parameter and returns the description.
* If the description is not found, it returns an empty string.
  PARAMETERS: p_matnr TYPE matnr DEFAULT '000000000001000000',
              p_maktx TYPE maktg-maktx.
  SELECT SINGLE maktx INTO p_maktx FROM makt WHERE matnr = p_matnr.
  IF sy-subrc <> 0.
    p_maktx = ''.
  ENDIF.
ENDFORM.

END-OF-SELECTION.
* This is the end of the main section.
* In this section, we can add additional logic or perform some final calculations.
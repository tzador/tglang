*This is a complex ABAP program that displays a sales report.*


REPORT z_sales_report.

*Selection screen for input parameters*
SELECTION-SCREEN BEGIN OF BLOCK input WITH FRAME TITLE text-001.
PARAMETERS: p_year TYPE i,
            p_month TYPE i,
            p_region TYPE string.
SELECTION-SCREEN END OF BLOCK input.

*Internal table declaration for sales data*
DATA: lt_sales_data TYPE TABLE OF zsales,
      ls_sales_data LIKE LINE OF lt_sales_data.

*Fetch sales data based on input parameters*
SELECT sales_doc,
       region,
       sales_amount,
       invoice_date
  FROM zsales
  INTO CORRESPONDING FIELDS OF TABLE lt_sales_data
  WHERE year = p_year
  AND month = p_month
  AND region = p_region.

*Sort sales data by invoice date*
SORT lt_sales_data BY invoice_date.

*Logic for calculating total sales for the specified time period*
DATA: lv_total_sales TYPE i,
      ls_sales TYPE ls_sales_data.

LOOP AT lt_sales_data INTO ls_sales_data.
  lv_total_sales = lv_total_sales + ls_sales_data-sales_amount.
ENDLOOP.

*Display the sales report header*
WRITE: 'SALES REPORT FOR',
       p_region,
       'FOR THE MONTH OF',
       p_month,
       '/',
       p_year.
SKIP.
WRITE: / 'SALES DOCUMENT',   'REGION',   'SALES AMOUNT',   'INVOICE DATE'.

*Display the sales report details*
LOOP AT lt_sales_data INTO ls_sales_data.
  WRITE: / ls_sales_data-sales_doc,
         ls_sales_data-region,
         ls_sales_data-sales_amount,
         ls_sales_data-invoice_date.
ENDLOOP.

*Display total sales for the specified time period*
WRITE: / 'TOTAL SALES FOR',
       p_month,
       '/',
       p_year,
       'IN',
       p_region,
       'REGION:',
       lv_total_sales.
*&---------------------------------------------------------------------*
*& Report Z_TEST_AB_LANGUAGE
*&---------------------------------------------------------------------*
*& This program demonstrates the use of different data types and
*& operators in ABAP
*&---------------------------------------------------------------------*

REPORT Z_TEST_AB_LANGUAGE.

*&---------------------------------------------------------------------*
*& Variables and data types
*&---------------------------------------------------------------------*

DATA: lv_number TYPE i,                    "integer data type
      lv_string TYPE string,               "string data type
      lv_decimal TYPE p LENGTH 2 DECIMALS, "packed number type with length 2 and 2 decimals
      lv_boolean TYPE abap_bool.           "boolean data type

*&---------------------------------------------------------------------*
*& Operators
*&---------------------------------------------------------------------*

* Arithmetic operators

lv_number = 10 + 5.          "addition
lv_number = 10 - 5.          "subtraction
lv_number = 10 * 5.          "multiplication
lv_number = 10 / 5.          "division
lv_number = 10 ** 5.         "exponentiation

* Comparison operators

IF lv_number = 10.           "equal to
  WRITE 'Number is 10'.
ENDIF.

IF lv_number <> 5.            "not equal to
  WRITE 'Number is not 5'.
ENDIF.

IF lv_number < 15.            "less than
  WRITE 'Number is less than 15'.
ENDIF.

IF lv_number > 5.             "greater than
  WRITE 'Number is greater than 5'.
ENDIF.

IF lv_number <= 10.           "less than or equal to
  WRITE 'Number is less than or equal to 10'.
ENDIF.

IF lv_number >= 1.            "greater than or equal to
  WRITE 'Number is greater than or equal to 1'.
ENDIF.

* Logical operators

IF lv_number > 5 AND lv_number < 15.          "logical AND
  WRITE 'Number is between 5 and 15'.
ENDIF.

IF lv_number < 5 OR lv_number > 15.           "logical OR
  WRITE 'Number is not between 5 and 15'.
ENDIF.

IF NOT lv_boolean.            "logical NOT
  WRITE 'Boolean value is false'.
ENDIF.

* Assignment operators

lv_number = lv_number + 1.                 "addition and assignment
lv_number += 1.                            "short-hand for addition and assignment
lv_number = lv_number * 2.                 "multiplication and assignment
lv_number *= 2.                            "short-hand for multiplication and assignment

* String operators

CONCATENATE lv_string 'World' INTO lv_string.     "concatenation
lv_string = lv_string && '!'                      "concatenation with space

* Type operators

ASSIGN lv_string TO <lv_string>.        "assigns value of lv_string to <lv_string>
ASSIGN COMPONENT 'NUM' OF STRUCTURE <ls_data> TO <lv_number>.     "assigns value of NUM field in structure <ls_data> to <lv_number>

* Other operators

IF lv_string CSI 'hello'.           "checks if string contains a substring
  WRITE 'String contains "hello"'.
ENDIF.

CALL METHOD <lo_obj>->(lv_method)   "calls a method of an object dynamically


*&---------------------------------------------------------------------*
*& Program output
*&---------------------------------------------------------------------*

WRITE: / 'Number:', lv_number.
WRITE: / 'String:', lv_string.
WRITE: / 'Decimal:', lv_decimal.
IF lv_boolean = abap_true.
  WRITE: / 'Boolean value is set to true'.
ELSE.
  WRITE: / 'Boolean value is set to false'.
ENDIF.
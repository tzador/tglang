*&---------------------------------------------------------------------*
*& Report Z_TEST_ABAP
*&---------------------------------------------------------------------*
REPORT z_test_abap.

DATA: lv_counter TYPE i.

* Class definitions
CLASS lcl_parent DEFINITION.
  PUBLIC SECTION.
    METHODS:
      constructor IMPORTING iv_counter TYPE i,
      get_counter RETURNING VALUE(rv_counter) TYPE i.

  PRIVATE SECTION.
    DATA: mv_counter TYPE i.

ENDCLASS.

CLASS lcl_parent IMPLEMENTATION.
  METHOD constructor.
    mv_counter = iv_counter.
  ENDMETHOD.

  METHOD get_counter.
    rv_counter = mv_counter.
  ENDMETHOD.
ENDCLASS.

CLASS lcl_child DEFINITION INHERITING FROM lcl_parent.
  PUBLIC SECTION.
    METHODS:
      constructor IMPORTING iv_counter TYPE i,
      increment_counter.

  PRIVATE SECTION.
    DATA: mv_child_counter TYPE i.
ENDCLASS.

CLASS lcl_child IMPLEMENTATION.
  METHOD constructor.
    super->constructor( iv_counter ).
    mv_child_counter = 0.
  ENDMETHOD.

  METHOD increment_counter.
    mv_child_counter = mv_child_counter + 1.
  ENDMETHOD.
ENDCLASS.


* Main program
START-OF-SELECTION.

DATA: lo_parent TYPE REF TO lcl_parent,
      lo_child TYPE REF TO lcl_child.

CREATE OBJECT lo_child
  EXPORTING
    iv_counter = 5.

lo_child->increment_counter( ).

CREATE OBJECT lo_parent
  EXPORTING
    iv_counter = 10.

lv_counter = lo_parent->get_counter( ) + lo_child->get_counter( ).

WRITE: / 'Total counter value:', lv_counter.
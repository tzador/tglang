REPORT z_demo_complex_code.
*This report demonstrates a complex logic for calculating sales bonuses based on employee performance and rating.*
TABLES: zemployee_performance. "Employee performance table
DATA: t_data TYPE STANDARD TABLE OF zemployee_performance WITH HEADER LINE, "Internal table for employee performance data 
      t_bonus TYPE STANDARD TABLE OF zemployee_performance WITH HEADER LINE, "Internal table for bonus calculation results
      v_total_bonus TYPE p DECIMALS 2. "Variable for storing total bonus amount
PARAMETERS: p_year TYPE zemployee_performance-year VALUE '2020', "Selection parameter for choosing year
            p_rating TYPE zemployee_performance-rating VALUE 'A'. "Selection parameter for choosing rating
*Selection screen for choosing year and rating*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME.
  PARAMETERS: p_year TYPE zemployee_performance-year,
              p_rating TYPE zemployee_performance-rating.
SELECTION-SCREEN END OF BLOCK b1.
*Filtering data based on selection*
SELECT * FROM zemployee_performance
  INTO CORRESPONDING FIELDS OF TABLE t_data
  WHERE year = p_year
    AND rating = p_rating.
*Calculating bonus based on performance*
LOOP AT t_data INTO t_data.
  CASE t_data-performance.
    WHEN 'Excellent'.
      t_bonus-bonus = t_data-sales * 0.1.
    WHEN 'Good'.
      t_bonus-bonus = t_data-sales * 0.05.
    WHEN 'Average'.
      t_bonus-bonus = t_data-sales * 0.02.
    WHEN 'Below Average'.
      t_bonus-bonus = t_data-sales * 0.01.
    WHEN 'Poor'.
      t_bonus-bonus = 0.
  ENDCASE.
  t_bonus-employee_id = t_data-employee_id.
  APPEND t_bonus TO t_bonus.
ENDLOOP.
*Calculating total bonus and printing results*
LOOP AT t_bonus INTO t_bonus.
  v_total_bonus = v_total_bonus + t_bonus-bonus.
  WRITE: / t_bonus-employee_id, t_bonus-bonus.
ENDLOOP.
WRITE: / 'Total bonus for ', p_year, ' with rating ', p_rating, ' is ', v_total_bonus.
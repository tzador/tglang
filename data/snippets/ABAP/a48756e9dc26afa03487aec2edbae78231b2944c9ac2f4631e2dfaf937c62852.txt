*&---------------------------------------------------------------------*
*& Report Z_ITEMS_IN_STOCK
*&---------------------------------------------------------------------*
*& Description: This report displays the number of items in stock for each
*&              material and location combination
*&---------------------------------------------------------------------*
REPORT Z_ITEMS_IN_STOCK.

* Data declaration
DATA: BEGIN OF gv_stock_report OCCURS 0,
        material TYPE mara-matnr,
        location TYPE lgort,
        stock TYPE mard-lgort,
      END OF gv_stock_report.

DATA: lv_total_stock TYPE i,
      lv_material TYPE mara-matnr,
      lv_location TYPE lgort.

* Selection screen
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
PARAMETERS: p_material TYPE mara-matnr OBLIGATORY,
            p_location TYPE lgort OBLIGATORY.
SELECTION-SCREEN END OF BLOCK b1.

* Start of executable code
START-OF-SELECTION.

  CLEAR lv_total_stock.

  SELECT * FROM mard INTO TABLE @gv_stock_report
    WHERE matnr = @p_material
    AND lgort = @p_location.

  looP AT gv_stock_report INTO DATA(gv_stock_entry).
    lv_total_stock = lv_total_stock + gv_stock_entry-stock.
  ENDLOOP.

  READ TABLE gv_stock_report INTO DATA(gv_first_entry) INDEX 1.
  READ TABLE gv_stock_report INTO DATA(gv_last_entry) INDEX lines(gv_stock_report).

  CONCATENATE gv_first_entry-material gv_first_entry-location INTO lv_material.
  CONCATENATE gv_last_entry-material gv_last_entry-location INTO lv_location.

* Output
  WRITE: / 'Report: Items in Stock for Material', p_material.
  WRITE: / 'Location:', p_location.
  WRITE: / 'Total Stock:', lv_total_stock.
  WRITE: / 'First Entry:', lv_material.
  WRITE: / 'Last Entry:', lv_location.
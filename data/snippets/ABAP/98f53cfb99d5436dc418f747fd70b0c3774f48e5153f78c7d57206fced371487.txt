TYPES: BEGIN OF ty_material,              "Defining a structure type
        material_id TYPE matnr,           "Data element for material ID
        material_name TYPE maktg,         "Data element for material name
        quantity TYPE mara-menge_pz,      "Field for quantity of material
        price TYPE p decimals 2,          "Field for price of material
        country TYPE land1,               "Data element for country of origin
        currency TYPE curr,               "Data element for currency
        END OF ty_material.

PARAMETERS: p_mat TYPE ty_material.      "Defining a selection parameter for material type
 
REPORT z_material_sales.

SELECT material_id, material_name, quantity, price, country, currency
FROM mara
INTO CORRESPONDING FIELDS OF TABLE @p_mat.   "Selecting data from the database table mara and storing it in the structure

LOOP AT p_mat.                                   "Looping through the selected data
  WRITE: / 'Material ID:', p_mat-material_id.     "Outputting the material ID
  WRITE: / 'Material Name:', p_mat-material_name. "Outputting the material name
  WRITE: / 'Quantity:', p_mat-quantity.           "Outputting the quantity
  WRITE: / 'Price:', p_mat-price cdec 2.          "Outputting the price with 2 decimal places
  WRITE: / 'Country:', p_mat-country.             "Outputting the country
  WRITE: / 'Currency:', p_mat-currency.           "Outputting the currency
ENDLOOP.                                          "End of loop

IF p_mat-price GT 1000.                           "Checking if the price is greater than 1000
  WRITE: / 'This material is expensive!'.         "Outputting a message if the condition is met
ELSE.
  WRITE: / 'This material is affordable!'.        "Outputting a message if the condition is not met
ENDIF.

DATA: lv_total_price TYPE p value 0.               "Defining a variable to store total price

LOOP AT p_mat.
  lv_total_price = lv_total_price + p_mat-price.   "Calculating the total price by adding each material's price
ENDLOOP.

WRITE: / 'The total price of all materials is:', lv_total_price. "Outputting the total price

DATA: lt_high_priced_mat TYPE TABLE OF ty_material. "Defining an internal table to store high priced materials

LOOP AT p_mat.
  IF p_mat-price GT 3000.                         "Checking if the price is greater than 3000
    APPEND p_mat TO lt_high_priced_mat.           "Adding the material to the internal table
  ENDIF.
ENDLOOP.

WRITE: / 'The following materials are priced higher than 3000:'. "Outputting a message
LOOP AT lt_high_priced_mat.
  WRITE: / lt_high_priced_mat-material_id.         "Outputting the material ID
ENDLOOP.
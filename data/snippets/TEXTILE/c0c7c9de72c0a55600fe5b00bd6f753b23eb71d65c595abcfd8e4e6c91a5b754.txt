/*
    This is a complex code snippet written in TEXTILE.
    It includes multiple formatting options, nested structures, and variables.
    The output will be an annotated markdown code snippet for proper documentation.
*/

bc.. h2. Variables

Variables in TEXTILE can be declared using the "@" symbol. They can hold any type of data including numbers, text, and even other variables.

@color = "red"
@num = 10
@message = "Hello"

bc.. h2. Formatting

TEXTILE allows for various formatting options to be applied to text including bold, italic, and underline.

*This text will be bold*
%This text will be italic%
_This text will be underlined_

bc.. h2. Nesting

TEXTILE also allows for nesting of different structures, allowing for more complex layouts and arrangements.

bq. This is a block quote.
# This is an ordered list item
# This is another ordered list item

bc.. h2. Conditional Statements

In TEXTILE, conditional statements can be used to control the flow of a program. They use the "?()" syntax.

?(num > 0){
    This text will be displayed only if the value of num is greater than 0.
}

bc.. h2. Loops

Using the "::" syntax, TEXTILE allows for loops to be created to repeat a certain task a specific number of times.

:: 5{
    This text will be repeated 5 times.
}

bc.. h2. Escaping Characters

To use special characters in TEXTILE without formatting them, the escape character "\" can be used.

This is an example of an escaped asterisk: \*

bc.. h2. Output

To output a value of a variable or a result of a function, the "+" symbol is used.

@name = "John"
+Hello, +name+! //Output: Hello, John!
h1. Welcome to the Textile Programming Language!

p<#introduction>This is a sample code snippet in the Textile programming language.
It illustrates the basic syntax and structure of a Textile file.

p<#heading1>A single equal sign at the beginning of the line will create a level-1 heading.

h2. Sample Code Snippet

p<#code>This code snippet will output a simple text in the console.

bc(text).
puts "Hello world!"

p<#syntax>One thing to note about the Textile syntax is that it uses punctuation marks
to indicate formatting. So for a heading, we use the equal sign, for italics we use the underscore,
and for bold we use the asterisk.

p<#variables>In Textile, we can also declare and use variables. For example:

bc(text).
$color = "red"
This is a piece of text that is *${color}*.

p<#lists>Textile also supports lists, both ordered and unordered. For example:

# First item
# Second item
# Third item

* Item one
* Item two
* Item three

p<#images>Images can also be inserted using the "image":URL syntax. For example:

!image:http://example.com/image.jpg!

p<#links>Links are created using the "link":URL syntax. For example:

"Click here to go to Google":http://www.google.com/

p<#tables>Tables can be created by using pipes and dashes to separate rows and columns. For example:

|_. Column one |_. Column two |_. Column three |
| Row 1, Col 1 | Row 1, Col 2 | Row 1, Col 3 |
| Row 2, Col 1 | Row 2, Col 2 | Row 2, Col 3 |
| Row 3, Col 1 | Row 3, Col 2 | Row 3, Col 3 |

p<#conclusion>This concludes our brief overview of the Textile programming language.
We hope this code snippet has provided a glimpse into the potential of Textile and its capabilities.
to spiral :length :angle        ; creates a procedure named "spiral"
    if :length > 100            ; checks if the length parameter is greater than 100
        [forward :length]       ; if yes, move forward by length units
        ; if not, the following code will be executed
        [make "cosAngle cosine :angle ; stores the cosine of the angle in the "cosAngle" variable
         make "sinAngle sine :angle   ; stores the sine of the angle in the "sinAngle" variable
         right :angle                 ; turns turtle to the right by the given angle
         spiral :length * 1.02        ; calls the spiral procedure recursively, with a slightly longer length
         right :angle * -1            ; turns turtle to the left by the given angle
         forward :length              ; moves turtle forward by the length
         make "rotAngle :angle * -1   ; stores the negative angle in the "rotAngle" variable
         right :rotAngle              ; turns turtle to the right by the negative angle
         spiral :length * 1.02        ; calls the spiral procedure recursively, with a slightly longer length
         make "rotAngle :angle        ; stores the positive angle in the "rotAngle" variable
         right :rotAngle              ; turns turtle to the right by the positive angle
         ]                            ; end of "if" statement
end                                ; ends the procedure "spiral"

; calling the procedure with a length of 50 units and an angle of 30 degrees
spiral 50 30
; This code snippet prints a complex pattern using recursion
to pattern :length :depth
  if :depth = 0 [stop] ; base case, recursion ends here
  repeat 4 [ 
    fd :length
    rt 90 
    pattern :length / 1.5 :depth - 1 ; recursive call, with length divided by 1.5 and depth reduced by 1
    lt 90
  ]
end

pattern 300 5 ; call the function with initial length of 300 and depth of 5
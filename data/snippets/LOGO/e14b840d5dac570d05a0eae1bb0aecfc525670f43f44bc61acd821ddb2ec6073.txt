; This is a comment in LOGO language.

; Procedure declaration.
to square :length
  repeat 4 [
    fd :length
    rt 90
  ]
end

; Procedure call with user input.
print "Enter the desired length:"
make "size read

; Using a variable in procedure call.
square :size

; Procedure declaration with multiple parameters.
to rectangle :length :width
  repeat 2 [
    fd :length
    rt 90
    fd :width
    rt 90
  ]
end

; Procedure call with multiple parameters and calculations.
print "Enter the length of the rectangle:"
make "length read
print "Enter the width of the rectangle:"
make "width read

; Using variables in calculations.
set "area :length * :width
print "The area of the rectangle is :area.

; Procedure call with user input.
rectangle :length :width

; Nested procedure calls.
to spiral :length :angle
  if :length > 1 [
    fd :length
    rt :angle
    spiral :length-1 :angle
  ]
end

; Using a variable in procedure call.
print "Enter the length of the spiral:"
make "length read
print "Enter the angle to turn:"
make "angle read

; Calling the spiral procedure.
spiral :length :angle

; Recursive procedure call.
to fibonacci :num
  if :num <= 1 [output :num]
  output fibonacci :num-1 + fibonacci :num-2
end

; Using a variable in procedure call.
print "Enter the number of terms:"
make "terms read

; Printing the Fibonacci sequence using recursive procedure calls.
repeat :terms [
  print fibonacci :i
  make "i :i+1
]
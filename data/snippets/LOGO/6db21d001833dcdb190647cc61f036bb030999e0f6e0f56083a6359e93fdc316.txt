;; Square Fractal
;; This program recursively draws a square fractal

;; Define a procedure to draw the turtle forward
;; Syntax: TO forward [distance]
TO forward :distance
  FORWARD :distance
END

;; Define a procedure to rotate the turtle to the right
;; Syntax: TO right [angle]
TO right :angle
  RIGHT :angle
END

;; Define a procedure to draw a single side of the square
;; Syntax: TO side [length]
TO side :length
  forward :length
  right 90
END

;; Define a procedure to draw a full square
;; Syntax: TO square [length]
TO square :length
  repeat 4 [
    side :length
  ]
END

;; Define a procedure to draw a square fractal
;; Syntax: TO squareFractal [length, depth]
TO squareFractal :length :depth
  ifelse :depth > 0 [ ; check if depth is greater than 0
    repeat 4 [ ; draw a square
      square :length
      right 90
    ]
    squareFractal :length / 2 :depth - 1 ; call the procedure with half length and depth reduced by 1
    right 180 ; return turtle to original position
    side :length / 2 ; draw a side
    right 90 ; rotate turtle to face next square
    squareFractal :length / 2 :depth - 1 ; call the procedure with half length and depth reduced by 1
    right 180 ; return turtle to original position
    side :length / 2 ; draw a side
    right 90 ; rotate turtle to face next square
    squareFractal :length / 2 :depth - 1 ; call the procedure with half length and depth reduced by 1
    right 180 ; return turtle to original position
    side :length / 2 ; draw a side
    right 90 ; rotate turtle to face next square
    squareFractal :length / 2 :depth - 1 ; call the procedure with half length and depth reduced by 1
  ] [
    square :length ; if depth is 0, draw a single square
  ]
END
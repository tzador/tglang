;;;This function takes a list and outputs the sum of all elements in the list
TO sumlist :list
IFEMPTY :list [
OUTPUT 0
STOP
]
OUTPUT (FIRST :list) + sumlist (BUTFIRST :list)
END

;;;This function takes two lists and outputs the cartesian product of both lists
TO cartesian :list1 :list2
MAKE "cartesian []
FOREACH :list1 [
FOREACH :list2 [
MAKE "cartesian (SE :cartesian (LIST FIRST :list1 FIRST :list2))
]
]
OUTPUT :cartesian
END

;;;This function takes a number and outputs the factorial of that number
;;;Uses recursion to solve
TO factorial :n
IF :n = 0 [
OUTPUT 1
STOP
]
OUTPUT :n * factorial :n - 1
END

;;;This function takes a string and counts the number of vowels in the string
TO count-vowels :string
;;;Creates a list of all vowels
MAKE "vowels [ "a "e "i "o "u ]
;;;Initializes the variable to store the count
MAKE "count 0
;;;Loops through each character in the string
FOREACH :string [
;;;Checks if the character is a vowel
IF MEMBERP ? :vowels [ MAKE "count :count + 1 ]
]
OUTPUT :count
END
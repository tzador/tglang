; This is a complex LOGO code snippet that draws a fractal
; This program was inspired by the Sierpinski Triangle fractal
; It creates a three-dimensional representation using the depth parameter

clearscreen
setpc "blue
setxy 0 0
setheading 90
cs
sc

; Define the recursive procedure to draw the fractal
to fractal :size :depth
  ; Check if depth is 0, if true then stop recursion
  if :depth = 0 [stop]
  
  ; Draw an equilateral triangle with size as the side length
  repeat 3 [fd :size rt 120]
  
  ; Go to the top vertex of the triangle
  fd :size/2
  lt 60
  fd :size/2
  
  ; Recursively call the procedure to draw smaller triangles
  ; Each triangle is half the size of the previous one
  fractal :size/2 :depth - 1
  
  ; Return back to the top vertex of the triangle
  fd :size/2
  rt 120
  fd :size/2
  
  ; Go to the bottom vertex of the triangle
  bk :size/2
  rt 60
  fd :size/2
  
  ; Recursively call the procedure to draw smaller triangles
  ; Each triangle is half the size of the previous one
  fractal :size/2 :depth - 1
  
  ; Return back to the bottom vertex of the triangle
  bk :size/2
  lt 180
  fd :size/2
  
  ; Go to the right vertex of the triangle
  fd :size/2
  rt 120
  
  ; Recursively call the procedure to draw smaller triangles
  ; Each triangle is half the size of the previous one
  fractal :size/2 :depth - 1
  
  ; Return back to the right vertex of the triangle
  bk :size/2
  lt 60
  bk :size/2
  
end

; Set initial parameters and call the recursive procedure
setsize 200
fractal 200 4
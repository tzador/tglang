;;; This code creates a Koch snowflake fractal using recursion
;;; The triangular arms of the Koch snowflake are created by first drawing
;;; an equilateral triangle, then dividing each side into 3 equal parts
;;; and replacing the middle part with an outward pointing equilateral triangle
;; The recursion base case is when the side length is less than 5 pixels

to koch :size :level
  if :level = 0 [
    fd :size
  ]
  if :level > 0 [
    let :length :size / 3
    koch :length :level - 1
    lt 60
    koch :length :level - 1
    rt 120
    koch :length :level - 1
    lt 60
    koch :length :level - 1
  ]
end

; Draw an equilateral triangle with side length of 200 pixels
to triangle
  repeat 3 [
    fd 200
    rt 120
  ]
end

; Set the pen size and speed
setpc 1
setspeed 0

; Start at the center of the canvas
setxy 0 0

; Draw the first triangular arm
triangle
; Turn 120 degrees to the left before drawing the next arm
lt 120
; Move forward one-third of the original side length
fd 200 / 3
; Turn 120 degrees to the left again
lt 120
; Draw the second arm
triangle
; Turn 120 degrees to the left before drawing the next arm
lt 120
; Move forward one-third of the original side length
fd 200 / 3
; Turn 120 degrees to the left again
lt 120
; Draw the third arm
triangle

; Call the koch procedure with the starting side length and recursion level
koch 200 4
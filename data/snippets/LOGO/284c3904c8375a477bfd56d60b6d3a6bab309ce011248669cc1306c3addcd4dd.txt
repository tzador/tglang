to square :length ;define procedure for creating a square
  repeat 4 [ ;repeat 4 times for each side
    forward :length ;move forward by length
    right 90 ;turn right by 90 degrees
  ]
end

to spiral :size :angle ;define procedure for creating a spiral
  repeat 360 [ ;repeat 360 times for full rotation
    forward :size ;move forward by size
    right :angle ;turn right by angle
    set :size sum :size 1 ;increase size by 1
  ]
end

to star :size ;define procedure for creating a star
  repeat 5 [ ;repeat 5 times for each point
    forward :size ;move forward by size
    right 144 ;turn right by 144 degrees
  ]
end

to tree :length :angle ;define procedure for creating a tree
  if :length > 5 [ ;if length is greater than 5
    forward :length ;move forward by length
    right :angle ;turn right by angle
    tree product :length 0.8 :angle ;recursive call to create smaller branches
    right sub :angle 30 ;turn right by 30 degrees
    tree product :length 0.8 :angle ;recursive call to create smaller branches
    left sum :angle 30 ;turn left by 30 degrees
  ]
end

to snowflake :size ;define procedure for creating a snowflake
  repeat 6 [ ;repeat 6 times for each side
    forward :size ;move forward by size
    tree :size :size/3 ;call tree procedure to create branches
    right 60 ;turn right by 60 degrees
  ]
end

to spiral2 :size :angle ;define procedure for creating a double spiral
  repeat 360 [ ;repeat 360 times for full rotation
    repeat 2 [ ;repeat twice for each spiral
      forward :size ;move forward by size
      right :angle ;turn right by angle
      set :size sum :size 1 ;increase size by 1
    ]
    right 90 ;turn right by 90 degrees for second spiral
  ]
end
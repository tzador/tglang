to square [size]                 ; defines a procedure named "square" taking in a parameter named "size"
  repeat 4 [                     ; repeats the next set of instructions 4 times
    fd :size                     ; moves the turtle forward by the value of "size" pixels
    rt 90                        ; rotates the turtle to the right by 90 degrees
  ]
end                              ; ends the procedure

to spiral [length]               ; defines a procedure named "spiral" taking in a parameter named "length"
  if :length > 0 [               ; checks if "length" is greater than 0
    lt 90                        ; rotates the turtle to the left by 90 degrees
    fd :length                   ; moves the turtle forward by the value of "length" pixels
    spiral :length - 10          ; calls the "spiral" procedure recursively with the value of "length" decreased by 10
  ]
end                              ; ends the procedure

to star [points side]            ; defines a procedure named "star" taking in two parameters "points" and "side"
  repeat :points [               ; repeats the next set of instructions "points" times
    fd :side                     ; moves the turtle forward by the value of "side" pixels
    rt 180 / :points            ; rotates the turtle to the right by 180 degrees divided by "points"
  ]
end                              ; ends the procedure
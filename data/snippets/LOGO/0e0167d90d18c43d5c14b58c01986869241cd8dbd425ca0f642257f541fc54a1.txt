to fractal-level :iter			  	;create procedure to generate fractal of given level
	setheading 90			  				;set initial heading to 90 (facing upwards)
	if :iter = 0 [		  					;base case: if iteration level is 0, draw a square and stop
		repeat 4 [ fd 50 rt 90 ]		
	]
	make "shape list "square""			;create list to hold shape names
	foreach :shape :shape-list [			;for each shape name in list, perform following steps
		pd						      		;pen down to start drawing
		ifelse :shape = "square [			;if shape is square, draw a square
			repeat 4 [ fd 50 rt 90 ]
		]
		ifelse :shape = "circle [			;if shape is circle, draw a circle
			circle 50
		]
		pu						      		;pen up to stop drawing
		rt 90 lg									;rotate right 90 degrees and move left 10 units
	]
	make "new-list []					  	;create empty list to hold new shapes
	foreach :shape :shape-list [			;for each shape in list, perform following steps
		ifelse :shape = "square [			;if shape is square, add a new square to the list
			make "new-list lput list "square [pos item 1 item  :new-list] :new-list]]
		ifelse :shape = "circle [			;if shape is circle, add a new circle to the list
			make "new-list lput list "circle [pos item 1 item  :new-list] :new-list]]
	]
	make "done false					  	;set 'done' flag to false
	while [ not :done ] [					;keep looping until 'done' flag becomes true
		if :iter > 0 [							;if iteration level is greater than 0, perform following steps
			make "new-list runs [ lput :i :front list :new-list
			make "new-list butfirst :new-list
			make "front item 1 :new-list
			lt 90										;rotate left 90 degrees
			local "front insert 35 :front	;insert a new element at position 35
			rt 90										;rotate right 90 degrees
		] else [										;otherwise, stop loop and set 'done' flag to true
			make "done true
		]
	]
end
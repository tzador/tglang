to shape :sides :size
  repeat :sides [                   ; This is a loop that will repeat the code in this block for the specified number of times
    fd :size                       ; Moves the turtle forward by the specified size
    rt 360 / :sides               ; Rotates the turtle to the right by a specific number of degrees, calculated by dividing 360 by the number of sides
  ]
end                               ; Ends the shape procedure

to spiral :start :inc :stop      ; This procedure draws a spiral, with the starting size, increment and stopping size all specified
  if :start <= :stop [           ; Checks if the starting size is less than or equal to the stopping size
    fd :start                    ; Moves the turtle forward by the current size
    rt :inc                      ; Rotates the turtle to the right by the specified increment
    spiral :start + :inc :inc :stop  ; Calls the spiral procedure again with an increased starting size, increment and same stopping size
  ]
end                              ; Ends the spiral procedure

to star :points :size           ; This procedure draws a star with the specified number of points and size
  repeat :points [              ; This loop will repeat the code in this block for the specified number of times (i.e. for each point)
    fd :size                    ; Moves the turtle forward by the specified size
    bk :size * 2 / :points     ; Moves the turtle back by a specific distance, calculated by multiplying the size by 2 and dividing by the number of points (this creates a gap between points)
    rt 360 / :points          ; Rotates the turtle to the right by a specific number of degrees, calculated by dividing 360 by the number of points
  ]
end                           ; Ends the star procedure

to fractal :level :size           ; This procedure draws a fractal shape, with the specified level (complexity) and size
  ifelse :level > 0 [               ; Checks if the current level is greater than 0, if not, it will exit the procedure
    fd :size                      ; Moves the turtle forward by the specified size
    rt 90                        ; Rotates the turtle to the right by 90 degrees
    fractal :level - 1 :size / 2  ; Calls the fractal procedure again with a reduced level and half the size (for the smaller branches)
    lt 90                         ; Rotates the turtle to the left by 90 degrees 
    rt 90                         ; Rotates the turtle to the right by 90 degrees (to return to the original direction)
    fractal :level - 1 :size / 2  ; Calls the fractal procedure again with a reduced level and half the size (for the smaller branches)
    lt 90                          ; Rotates the turtle to the left by 90 degrees (to return to the original direction)
    penup                         ; Lifts the pen up so no line will be drawn when moving to the next branch
    bk :size                      ; Moves the turtle back by the specified size (to return to the starting position)
    pendown                       ; Puts the pen down to draw the next branch
    fractal :level - 1 :size       ; Calls the fractal procedure again with a reduced level and the same size (for the larger branch)
  ]
end                               ; Ends the fractal procedure

to sun :rays :size :color         ; This procedure draws a sun with the specified number of rays, size and color
  repeat :rays [                  ; This loop will repeat the code in this block for the specified number of times (i.e. for each ray)
    setpencolor :color           ; Sets the pen color to the specified color
    fd :size                     ; Moves the turtle forward by the specified size
    bk :size                    ; Moves the turtle back by the specified size (to return to the center)
    rt 360 / :rays              ; Rotates the turtle to the right by a specific number of degrees, calculated by dividing 360 by the number of rays
  ]
end                              ; Ends the sun procedure

to tree :size :levels            ; This procedure draws a tree with the specified size and number of levels
  if :levels > 0 [                ; Checks if the number of levels is greater than 0, if not, it will exit the procedure
    fd :size                     ; Moves the turtle forward by the specified size
    rt 30                        ; Rotates the turtle to the right by 30 degrees
    tree :size * 0.75 :levels - 1  ; Calls the tree procedure again with a reduced size and number of levels for the left branch
    lt 30                        ; Rotates the turtle to the left by 30 degrees
    tree :size * 0.75 :levels - 1  ; Calls the tree procedure again with a reduced size and number of levels for the right branch
    lt 180                       ; Rotates the turtle to the left by 180 degrees (to return to the original direction)
    fd :size                    ; Moves the turtle forward by the specified size (to return to the starting position)
   ]
end                             ; Ends the tree procedure

to snowflake :length :level     ; This procedure draws a snowflake with the specified length and level of complexity
  if :level > 0 [               ; Checks if the current level is greater than 0, if not, it will exit the procedure
    repeat 3 [                  ; This loop will repeat the code in this block 3 times (i.e. for each branch)
      fd :length               ; Moves the turtle forward by the specified length
      snowflake :length / 3 :level - 1  ; Calls the snowflake procedure again with a third of the length and a reduced level (for the smaller branches)
      bk :length               ; Moves the turtle back by the specified length (to return to the starting position)
      rt 120                   ; Rotates the turtle to the right by 120 degrees
    ]
  ]
end                            ; Ends the snowflake procedure

to wave :size :color           ; This procedure draws a wave with the specified size and color
  setpencolor :color          ; Sets the pen color to the specified color
  repeat 900 [                 ; This loop will repeat the code in this block 900 times (to create a wavy line)
    fd :size                   ; Moves the turtle forward by the specified size
    rt 0.1                     ; Rotates the turtle to the right by 0.1 degrees
    setpensize :size / 100    ; Sets the pen size to a fraction of the specified size (to create a tapered effect)
    if :size % 2 = 0 [       ; Checks if the current size is an even number (i.e. if the turtle is moving upwards or downwards)
      rt 0.1                 ; Rotates the turtle to the right by 0.1 degrees (to create a wave pattern)
    ]
  ]
end                         ; Ends the wave procedure

to tessellation :size       ; This procedure draws a tessellation of squares with the specified size
  repeat 1000 [             ; This loop will repeat the code in this block 1000 times (to create a grid of 1000 squares)
    fd :size               ; Moves the turtle forward by the specified size
    repeat 3 [             ; This nested loop will repeat the code in this block 3 times (to create a square)
      fd :size            ; Moves the turtle forward by the specified size
      rt 90               ; Rotates the turtle to the right by 90 degrees
    ]
    rt 10                 ; Rotates the turtle to the right by 10 degrees (to create a slightly rotated pattern)
    penup                ; Lifts the pen up so no line will be drawn when returning to the starting position
    bk :size              ; Moves the turtle back by the specified size (to return to the starting position)
    pendown              ; Puts the pen down to draw the next square
  ]
end                     ; Ends the tessellation procedure

; Example usage:

tessellation 50       ; Draws a tessellation of squares with a size of 50
fractal 4 100        ; Draws a fractal shape with a level of 4 and a size of 100
sun 8 50 "yellow"    ; Draws a sun with 8 rays, a size of 50 and the color yellow
tree 50 5           ; Draws a tree with a size of 50 and 5 levels
star 5 100         ; Draws a star with 5 points and a size of 100
wave 5 "blue"     ; Draws a blue wavy line with a size of 5
snowflake 90 5   ; Draws a snowflake with a length of 90 and a complexity level of 5
shape 5 100     ; Draws a shape with 5 sides and a size of 100 (in this case, a regular pentagon)
spiral 10 10 50 ; Draws a spiral with a starting size of 10, an increment of 50 and a stopping size of 50
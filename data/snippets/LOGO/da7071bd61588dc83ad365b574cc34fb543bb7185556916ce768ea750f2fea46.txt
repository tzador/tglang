;Use the command "to" to define a new procedure, followed by the procedure name and any parameters
to shape :radius
   repeat 60                    ;use the command "repeat" to repeat the block of code a certain amount of times
     forward :radius            ;move forward by the value of the radius parameter
     right 6                    ;turn right by 6 degrees
   end
 
   repeat 30
     forward :radius
     left 12                    ;turn left by 12 degrees
   end
   setpencolor 8                ;use the command "setpencolor" to set the turtle's pen color to 8 (light gray)
   fill                        ;use the command "fill" to fill in the shape created by the turtle's movements
   setheading 90               ;use the command "setheading" to set the turtle's direction to 90 degrees (facing up)
   repeat 60
     forward :radius
     right 6
   end
 
   repeat 30
     forward :radius
     left 12
   end
end                             ;end the procedure definition
 
to spiral
   repeat 10
     shape 10                  ;call the "shape" procedure with a radius of 10
     right 36                  ;turn right by 36 degrees
   end
end

to square :sideLength
   repeat 4
     forward :sideLength       ;move forward by the value of the sideLength parameter
     right 90                  ;turn right by 90 degrees
   end
end

to nestedSquares :initialLength :increment
   if :initialLength < 150 [    ;use the command "if" to check if a condition is true, followed by the condition and the code to run if it is true, end with a closing bracket
     square :initialLength      ;call the "square" procedure with the initial length parameter
     right 10                   ;turn right by 10 degrees
     nestedSquares sum :initialLength :increment :increment ;recursive call to the "nestedSquares" procedure, using the "sum" command to add the value of the initialLength parameter to the value of the increment parameter twice
     right 10
     square :initialLength
   ]
end

to tree :length :angle
   if :length > 10 [            ;use the "if" command to check if a condition is true, followed by the condition and the code to run if it is true, end with a closing bracket
     forward :length
     right :angle
     tree quotient :length 1.2 :angle ;recursive call to the "tree" procedure, using the "quotient" command to divide the value of the length parameter by 1.2 (to make the tree branches gradually shorter) and the value of the angle parameter
     left :angle
     tree quotient :length 1.2 :angle
     right :angle
     backward :length
   ]
end

;Create a new turtle called "bob"
create "bob

;Set the turtle's speed to 10 (fastest)
setspeed 10

;Set the turtle's pen size to 3
setpensize 3

;Use the command "repeat" with a value of 3 to draw three nested squares with an initial length of 50 and an increment of 20
repeat 3 [
  nestedSquares 50 20
  right 120
]

;Move the turtle to a specific location on the screen using the "setpos" command
setpos -100 100

;Call the "tree" procedure with a length of 20 and an angle of 30 to draw a tree
tree 20 30
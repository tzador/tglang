(* this is a comment in WOLFRAM *)

(* defining a function to calculate the prime factorization of a given number *)
primeFactorization[n_] := Module[
  {
    factors = {}, (* initializing an empty list to store the prime factors *)
    d = 2 (* starting with the first prime number *)
  },
  While[n >= d^2, (* continue until the square of prime is greater than or equal to the number *)
    If[Mod[n, d] == 0, (* check if the number is divisible by the prime *)
      n = n/d; (* if so, divide the number by the prime *)
      AppendTo[factors, d], (* add the prime to the list of factors *)
      d++ (* if not, increment the prime by 1 *)
    ];
  ];
  AppendTo[factors, n]; (* add the remaining prime to the list of factors *)
  Return[factors] (* return the list of prime factors *)
]

(* calling the function with input 60 *)
primeFactorization[60]

(* output: {2, 2, 3, 5} *)
(* Define a list of 100 random integers between 1 and 100 *)
list = RandomInteger[{1, 100}, 100];

(* Define a function to calculate the average of a given list *)
average[list_] := Total[list]/Length[list];

(* Use pattern matching to group elements of the list into sublists of length 10 *)
mySublists = list //. {first___, rest : PatternSequence[x_, y_, z_, w_, q_, r_, s_, t_, u_, v_], last___} :> {{first}, {rest}, {last}};

(* Apply the average function to each sublist and store the results in a new list *)
sublistAverage = average /@ mySublists;

(* Use a condition to check if the sublist average is above or below a certain value *)
aboveAverage = If[# > 50, "Above", "Below"] & /@ sublistAverage;

(* Combine the results into a table with sublists and their corresponding average and above/below status *)
Grid[Transpose[{mySublists, sublistAverage, aboveAverage}], Frame -> All]
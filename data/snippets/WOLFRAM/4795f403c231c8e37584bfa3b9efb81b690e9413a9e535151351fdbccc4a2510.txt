(* This code snippet is an example of a function that calculates the power set of a given set *)
(* Inputs: set - a list of elements *)
(* Outputs: powerSet - the power set of the input set *)

(* Define a recursive function to calculate power set *)
powerset[set_] := Module[{result, temp},
    (* Base case: empty set *)
    If[set == {}, 
        Return[{{}}], 
        (* Recursive case: remove first element from set *)
        temp = set[[1]];
        (* Recursively call function on set without first element *)
        result = powerset[Drop[set, 1]];
        (* Return union of result with a transformation of result *)
        Return[Join[result, Append[#, temp] & /@ result]];
]]

(* Call function on input set *)
powerSet = powerset[{1,2,3,4,5}]

(* Output: {{}, {1}, {2}, {3}, {4}, {5}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}, {1, 2, 3}, {1, 2, 4}, {1, 2, 5}, {1, 3, 4}, {1, 3, 5}, {1, 4, 5}, {2, 3, 4}, {2, 3, 5}, {2, 4, 5}, {3, 4, 5}, {1, 2, 3, 4}, {1, 2, 3, 5}, {1, 2, 4, 5}, {1, 3, 4, 5}, {2, 3, 4, 5}, {1, 2, 3, 4, 5}}
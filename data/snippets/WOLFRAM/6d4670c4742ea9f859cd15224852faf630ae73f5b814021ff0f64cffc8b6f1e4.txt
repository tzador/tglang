(* Define a function for calculating the power of a number *)
power[x_, n_] := Module[{result = 1},
  While[n > 0,
   If[Mod[n, 2] == 1,
    result = result * x];
    n = Floor[n/2];
    x = x * x];
   result]

(* Test the function by calculating 2^10 *)
power[2, 10]
(* Output: 1024 *)

(* Create a list of prime numbers up to 100 *)
primeList = {2};
For[i = 3, i <= 100, i += 2,
  If[Length[Select[primeList, Mod[i, #] == 0 &]] == 0,
    primeList = Append[primeList, i];
  ]
];

(* Print the list of prime numbers *)
primeList
(* Output: {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97} *)

(* Define a recursive function for calculating the factorial of a number *)
factorial[n_] := If[n <= 0, 1, n * factorial[n - 1]]

(* Test the function by calculating the factorial of 5 *)
factorial[5]
(* Output: 120 *)

(* Create a matrix with random integer entries *)
randomMatrix = Table[RandomInteger[10], {i, 5}, {j, 5}]

(* Output:
{{5, 0, 10, 4, 8}, 
{2, 9, 1, 7, 3}, 
{7, 6, 1, 3, 10}, 
{6, 6, 0, 3, 5}, 
{5, 5, 5, 6, 9}} 
*)

(* Sort the matrix in ascending order *)
Sort[randomMatrix]
(* Output:
{{0, 0, 10, 1, 4},
{1, 1, 3, 5, 7},
{3, 3, 6, 6, 7},
{5, 6, 9, 9, 10},
{5, 5, 5, 6, 8}} 
*)

(* Solve a system of linear equations *)
Solve[{x - 3y == 6, 2x + y == 10}, {x, y}]
(* Output:
{x -> 4, y -> 2} 
*)

(* Create a plot of a quadratic function *)
Plot[x^2 - 4x + 6, {x, -5, 5}]
(* Output: a plot of the quadratic function, displaying a parabola with minimum point at (2,2) *)
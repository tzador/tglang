(* This code snippet calculates the determinant of a matrix using LU decomposition *)

(* Define a function to perform LU decomposition *)
LUdecompose[matrix_?MatrixQ] :=
 Module[{n, L, U, P, indx, det, a},
  (* Initialize variables *)
  n = Length[matrix];
  L = IdentityMatrix[n];
  U = matrix;
  P = IdentityMatrix[n];
  indx = Range[n];
  det = 1;

  (* Perform LU decomposition *)
  Do[
   a = -U[[k + 1 ;;, k]]/U[[k, k]]; (* Find multiplier *)
   U[[k + 1 ;;, k]] = 0; (* Eliminate elements below diagonal *)
   U[[k + 1 ;;, k + 1 ;;]] += Outer[Times, a, U[[k, k + 1 ;;]]; (* Update U *)
   L[[k + 1 ;;, k]] = -a; (* Store multiplier in L *)
   P[[{k, k + 1}]] = P[[{k + 1, k}]]; (* Swap rows in P *)
   indx[[{k, k + 1}]] = indx[[{k + 1, k}]]; (* Update index vector *)
   det *= U[[k, k]], (* Update determinant *)
   {k, n - 1}
  ];

  (* Calculate determinant using formula det = det(U) * prod(L[i,i]) *)
  det *= U[[n, n]] * Times @@ Diagonal[L];

  (* Return results *)
  {P, L, U, indx, det}
 ]
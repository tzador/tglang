(* Define a function to check if a number is prime *)
primeQ[n_] := If[n < 2, False, Length[Select[Range[2, Floor[Sqrt[n]]], Divisible[n, #] &]] == 0]

(* Define a function to generate a list of prime numbers up to a given limit *)
primeList[n_] := Select[Range[n], primeQ]

(* Define a function to calculate the factorial of a number *)
factorial[n_] := If[n <= 1, 1, n * factorial[n - 1]]

(* Define a function to calculate the binomial coefficient for given n and k *)
binomial[n_, k_] := factorial[n] / (factorial[k] * factorial[n - k])

(* Define a function to generate a list of binomial coefficients for a given n *)
binomialList[n_] := Table[binomial[n, k], {k, 0, n}]

(* Test the functions with example inputs *)
primeQ[17] (* Output: True *)
primeList[20] (* Output: {2, 3, 5, 7, 11, 13, 17, 19} *)
binomial[6, 3] (* Output: 20 *)
binomialList[5] (* Output: {1, 5, 10, 10, 5, 1} *)
(*This program calculates the probability of a given sequence occurring in a set of events*)  

(*First, we define the events as a list*)  
events = {event1, event2, event3};  

(*Next, we define the sequence we are interested in as a list*)  
sequence = {element1, element2, element3};  

(*Then, we create a function to check if a given event contains the given sequence*)  
checkEvent[event_] := Module[{count = 0},  
For[i = 1, i <= Length[event], i++, (*loop through all elements in the event*)  
If[Length[event] - i + 1 >= Length[sequence], (*check if remaining event elements can fit the length of the sequence*)  
count++, (*if yes, increment count*)  
For[j = 1, j <= Length[sequence], j++, (*loop through all elements in the sequence*)  
If[event[[i + j - 1]] != sequence[[j]], (*if elements don't match, break from loop*)  
Break[]  
]  
]  
]  
count == Length[sequence] (*return true if all elements match, false otherwise*)  
];  

(*Next, we create a function to calculate the probability of the sequence occurring in the events*)  
calculateProbability[events_, sequence_] := Module[{count = 0},  
For[i = 1, i <= Length[events], i++, (*loop through all events*)  
If[checkEvent[events[[i]]], (*check if the event contains the sequence*)  
count++ (*if yes, increment count*)  
]  
]  
count/Length[events] (*return probability as a fraction*)  
];  

(*Finally, we call the function and print the output*)  
Print["The probability of the sequence ", sequence, " occurring in the given events is ", calculateProbability[events, sequence]];
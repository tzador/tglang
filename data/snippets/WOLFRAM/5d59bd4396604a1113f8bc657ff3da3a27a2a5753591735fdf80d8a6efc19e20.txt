(*
Multi-dimensional numerical integral using Gaussian quadrature
*)

(* Function for calculating multi-dimensional Gaussian quadrature *)
GaussianQuad[f_, {x_, a_, b_}, {y_, c_, d_}, n_] := Module[{weights, points},
  (* Calculate weights and points using Legendre polynomial roots *)
  weights = Flatten[Join[#, Reverse@#] &[GaussianWeights[n, 0, 1]]];
  points = Flatten[Outer[List, ##] &[GaussianPoints[n, 0, 1]]];
  (* Compute the transformed coordinates and determine the Jacobian *)
  coords = Transpose[{(b - a) points[[All, 1]]/2 + (a + b)/2, (d - c) points[[All, 2]]/2 + (c + d)/2}];
  jac = Det[D[r, {x, y}]] /. Thread[{x, y} -> Transpose[r]];
  (* Multiply the function values with the weights and sum them up *)
  weights.Map[f @@ # &, coords] // Total]

(* Example function to be integrated *)
f[x_, y_, z_] := Sin[x + y + z]

(* Integration limits *)
a = 0; b = 2; c = -1; d = 1; e = -2; f = 0;

(* Calculate the integral using a 2-point Gaussian quadrature *)
GaussianQuad[f[x, y, z], {x, a, b}, {y, c, d}, {z, e, f}, 2]
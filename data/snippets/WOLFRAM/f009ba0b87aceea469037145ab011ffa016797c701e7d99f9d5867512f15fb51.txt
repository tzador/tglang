(*Function to check if number is prime*)
PrimeQ[n_Integer] := Module[{i = 1, 
    primes}, While[(primes = Prime[i]) <= Sqrt[n], If[Mod[n, primes] == 0, 
      Return[False]]; i++];True ]

(*Function to find the next prime number in a given range*)
NextPrime[n_Integer] := Module[{},
    For[i = n + 1, True, i++, If[PrimeQ[i], Return[i]]]]

(*Function to generate a list of all primes in a given range*)
PrimeList[n_Integer] := Table[If[PrimeQ[i], i], {i, 1, n}]

(*Function to print the prime factorization of a number*)
PrimeFactorization[n_Integer] := Module[{factor = 2, factors = {}, temp = n},
    While[factor <= n,
        If[Mod[temp, factor] == 0,
            AppendTo[factors, factor];
            temp = temp/factor;
        ,
            factor++];
        ];
    Return[factors];
]

(*Prints "Hello, World!" and generates a random prime number*)
Print["Hello, World!"];
RandomPrime[]
(* This is a code sample in Wolfram Language *)

(* Define the function 'fibonacci' with parameter 'n' *)
fibonacci[n_] := Module[{a = 0, b = 1, i = 1},
  (* Define 'fibNum' as empty list for storing the Fibonacci numbers *)
  fibNum = {};
  
  (* While loop to generate Fibonacci numbers until 'i' reaches 'n' *)
  While[i <= n,
    (* Add the current Fibonacci number 'b' to the list 'fibNum' *)
    AppendTo[fibNum, b];
    
    (* Calculate the next Fibonacci number by adding the previous two numbers *)
    c = a + b;
    
    (* Update the values of 'a' and 'b' for the next iteration *)
    a = b;
    b = c;
    
    (* Increment the counter 'i' to move on to the next number *)
    i++;
  ];
  
  (* Return the list of Fibonacci numbers *)
  fibNum
]

(* Call the function 'fibonacci' with the parameter '10' *)
fibonacci[10]
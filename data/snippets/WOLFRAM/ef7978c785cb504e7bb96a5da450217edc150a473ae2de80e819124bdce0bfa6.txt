(*This is a documentation comment*)
(*This function checks if a given number is prime or not*)
PrimeQ[n_Integer] := Module[{m, factor, prime = True},
	m = Ceiling[Sqrt[n]]; (*Finds the square root of the given number*)
	While[m > 1, (*Loops through all possible factors*)
		factor = n/m; (*Calculates the quotient*)
		If[IntegerQ[factor], (*Checks if the factor is an integer*)
			prime = False; (*If it is, then the number is not prime*)
			Break[]; (*Exits the loop*)
		];
		m = m - 1; (*Decrements m to check for the next factor*)
	];
	prime (*Returns the value of prime, which will be True if the number is prime*)
]
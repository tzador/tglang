(* This program performs a binary search on a sorted list *)

(* Define the list to search through *)
sortedList = {2, 4, 7, 9, 11, 13, 15, 18, 21, 23};

(* Define the starting and ending positions of the sublist *)
startPos = 1;
endPos = Length[sortedList];

(* Define the search item *)
searchItem = 11;

(* Create a function for the binary search *)
binarySearch[list_, start_, end_, item_] := Module[

(* Initialize variable for the middle position of the sublist *)
middlePos = Round[(start + end)/2];

(* Check if the search item is equal to the middle value *)
If[item == list[[middlePos]], Return[middlePos]];

(* Check if the start position and end position have crossed, meaning the item is not in the list *)
If[start > end, Return["Item not found"]];

(* If the search item is less than the middle value, search the first half of the sublist *)
If[item < list[[middlePos]], binarySearch[list, start, middlePos - 1, item],

(* Otherwise, search the second half of the sublist *)
binarySearch[list, middlePos + 1, end, item]]
];

(* Call the binary search function and store the result *)
result = binarySearch[sortedList, startPos, endPos, searchItem];

(* Print the result *)
Print[result];
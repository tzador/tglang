(* The following code is a function in Wolfram that calculates the sum of a list in a recursive manner *)
sum[list_List] := Module[{total = 0}, (* defining a local variable 'total' to store the sum *)
  If[Length[list] == 1, (* base case: if the list has only one element, return that element *)
    Return[list[[1]]],
    total = list[[1]] + sum[Rest[list]]; (* recursive step: adding the first element to the sum of the rest of the list *)
    Return[total]; (* returning the final sum *)
  ];
];

(* Example input and output *)
sum[{1,2,3,4}] (* Output: 10 *)
sum[{5,10,15}] (* Output: 30 *)
(* Function to calculate the nth Fibonacci number using the closed-form solution *)

(* Initialize dynamic programming table to store previously calculated values *)
fib[n_] := Module[{t}, t = Table[Null, {n}];
   t[[1]] = 0;
   t[[2]] = 1;
   fib[n, t]];

(* Recursive helper function to calculate the nth Fibonacci number *)
fib[n_, t_] := If[n > 2,
   If[t[[n]] == Null,
    (* If value hasn't been calculated yet, calculate it recursively *)
    t[[n]] = fib[n - 1, t] + fib[n - 2, t]];
   (* Return the calculated value for the nth Fibonacci number *)
   t[[n]],
   (* Base case, return the appropriate value for n *)
   If[n == 1, 0, 1]
   ];

(* Print the 50th Fibonacci number using the closed-form solution *)
Print[fib[50]]
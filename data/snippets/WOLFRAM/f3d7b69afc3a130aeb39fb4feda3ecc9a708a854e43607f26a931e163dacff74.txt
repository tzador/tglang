(*Define a function that calculates the nth Fibonacci number using memoization
 and returns a list of the first n Fibonacci numbers*)
ClearAll["Global`"]

Fibonacci[n_] := (
  If[n == 1 || n == 2, Return[1]];

  If[n > 2,
   fibList[n] = Fibonacci[n - 1] + Fibonacci[n - 2];
   Return[fibList[n]]
   ]
  )

(*Set up memoization*)
fibList[1] = 1;
fibList[2] = 1;

(*Define a function that takes in a number n and returns a list 
  containing the first n Fibonacci numbers using memoization*)
FibonacciList[n_] := (
  fibList[n];
  Table[fibList[i], {i, 1, n}]
  )

(*Print the first 20 Fibonacci numbers*)
FibonacciList[20]

(*Output:
{1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 
   2584, 4181, 6765}
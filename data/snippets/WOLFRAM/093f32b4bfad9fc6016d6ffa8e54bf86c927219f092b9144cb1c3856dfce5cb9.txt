(* This is a code snippet in Wolfram Language *)

(* Define a list of prime numbers *)
primeList = {2, 3, 5, 7, 11, 13, 17, 19, 23};

(* Create a function to check if a number is prime *)
isPrime[n_] := If[MemberQ[primeList, n], True, False];

(* Define a list of even numbers *)
evenList = {2, 4, 6, 8, 10, 12, 14, 16, 18, 20};

(* Create a function to check if a number is even *)
isEven[n_] := If[Mod[n, 2] == 0, True, False];

(* Define a list of odd numbers *)
oddList = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};

(* Create a function to check if a number is odd *)
isOdd[n_] := If[Mod[n, 2] == 1, True, False];

(* Create a list of squared prime numbers *)
squaredPrimes = Map[#^2 &, Select[primeList, isPrime]];

(* Define a function to find the factorial of a number *)
factorial[n_] := If[n == 0, 1, n*factorial[n-1]];

(* Create a list of factorials of even numbers *)
evenFactorials = Map[factorial, Select[evenList, isEven]];

(* Print the results *)
Print["Squared prime numbers: ", squaredPrimes];
Print["Factorials of even numbers: ", evenFactorials];

(* Output: 
Squared prime numbers: {4, 9, 25, 49, 121, 169, 289, 361, 529}
Factorials of even numbers: {2, 24, 720, 40320, 3628800, 479001600, 87178291200, 20922789888000, 6402373705728000, 2432902008176640000} 
*)
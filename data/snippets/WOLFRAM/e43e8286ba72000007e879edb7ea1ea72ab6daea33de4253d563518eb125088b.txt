(* Define a function to calculate the Fibonacci sequence up to a given number *)
Fibonacci[n_] := Module[{fibSeq}, 
fibSeq = {0, 1}; 
For[i = 3, i <= n, i++, fibSeq = Append[fibSeq, fibSeq[[i - 2]] + fibSeq[[i - 1]]]]; 
Return[fibSeq];]

(* Use pattern matching to find and replace elements in a list *)
ReplaceList[{a, b, c, d}, {x_, y_, z_, w_} :> {w, z, y, x}]

(* Define a matrix multiplication function using built-in functions *)
matrixMult[m1_, m2_] := Block[{m1rows, m2cols, product},
m1rows = Length[m1];
m2cols = Length[m2[[1]]];
product = Array[0 &, {m1rows, m2cols}];
For[i = 1, i <= m1rows, i++,
For[j = 1, j <= m2cols, j++,
For[k = 1, k <= Length[m2], k++,
product[[i, j]] += m1[[i, k]] * m2[[k, j]]]]];
Return[product];
]

(* Define a recursive function to calculate factorial *)
factorial[n_Integer] := If[n == 0 || n == 1, 1, n * factorial[n - 1]];
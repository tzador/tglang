(* Define function to calculate Fibonacci sequence up to n terms *)
Fibonacci[n_Integer] := Module[{fib}, 
    fib = {0,1}; (* initialize first two terms *)
    If[n <= 0, {}; (* if n is 0 or negative, return empty list *)
    Do[fib = Append[fib, fib[[-1]]+fib[[-2]]], {n-2}]; (* for all other cases, use recursion to add next term *)
    Return[fib] (* return list of Fibonacci numbers *)
]

(* Test function with n = 10 *)
Fibonacci[10]

(* Output: {0,1,1,2,3,5,8,13,21,34,55} *)
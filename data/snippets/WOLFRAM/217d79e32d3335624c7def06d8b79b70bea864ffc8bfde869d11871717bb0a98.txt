(*defintion of a function called Newton's Method*)

(* "f" is the function whose roots we wish to approximate *)
(* "x0" is the initial guess *)
(* "tol" is the desired level of accuracy *)

Newton[f_, x0_, tol_] := (
    (* define the derivative of the function *)
    fprime = D[f, x];

    (* initialize x1 to be the initial guess *)
    x1 = x0;

    (* run a loop until the difference between x1 and x0 is less than the desired level of accuracy *)
    While[Abs[x1 - x0] >= tol,
        (* calculate the next approximation of the root *)
        x0 = x1;
        x1 = x0 - f[x0]/fprime /. x -> x0;

        (* print out the current approximation and the corresponding function value *)
        Print["Current approximation: ", x1];
        Print["Function value at current approximation: ", f[x1]];
    );

    (* return the final approximation *)
    x1
)
(* This is a procedural program in the WOLFRAM language 
   that generates a fractal based on the Mandelbrot set *)

(* Define variables *)
IterationLimit = 1000; (* maximum number of iterations *)
EscapeRadius = 2; (* distance from origin used to determine escape *)

(* Define function to check if a point is in the Mandelbrot set *)
InMandelbrotSet[c_, n_] := Module[{z = 0, i = 0},
    While[Abs[z] <= EscapeRadius && i < n,
        z = z^2 + c; (* Mandelbrot iteration *)
        i++
    ];
    If[i == n, True, False] (* if maximum iterations reached, point is in the set *)
]

(* Define plotting function that iterates through points on the complex plane *)
PlotMandelbrot[width_, height_] := Module[{x, y, c, plot},
    (* Create a plot with specified width and height *)
    plot = Graphics[
        Table[
            (* Convert pixel coordinates to complex numbers on the plane *)
            c = -2.5 + (x/width)*3 + I*(-1 + (y/height)*2); 
            (* Check if point is in the set and color accordingly *)
            If[InMandelbrotSet[c, IterationLimit],
                RGBColor[0,0,0], (* black *)
                Hue[(N[IterationLimit] - N[i])/N[IterationLimit]] (* color based on number of iterations *)
            ], 
            {y, height}, {x, width}
        ],
        ImageSize -> {width, height}
    ];
    plot (* return plot *)
]

(* Call plotting function with specified width and height, and display output *)
PlotMandelbrot[1000, 1000]
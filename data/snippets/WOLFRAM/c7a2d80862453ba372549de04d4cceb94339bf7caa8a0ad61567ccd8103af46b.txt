(* This function checks if a given number is prime or not *)
primeQ[n_Integer] := (* Define a function primeQ with input n as an integer *)
    Module[{k = Ceiling[Sqrt[n]]}, (* Initialize a local variable k with the ceiling of the square root of n *)
        Do[ (* Start a Do loop *)
            If[Mod[n, i] == 0, Return[False]], (* Check if n is divisible by i, if yes, return False *)
            {i, 2, k} (* Loop from i = 2 to k *)
        ];
        Return[True] (* If we didn't find any divisors, return True *)
    ]
Print[primeQ[5]] (* Print the output of primeQ with n = 5 *)
(* Output: True *)
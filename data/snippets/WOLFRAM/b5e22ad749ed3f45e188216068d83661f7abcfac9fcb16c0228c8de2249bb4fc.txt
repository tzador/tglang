(*
This is a code snippet in Wolfram language that generates a fractal image using the Mandelbrot Set.
It allows the user to specify the size of the image and the number of iterations for the fractal calculation.
The code uses a complex recursive function and various built-in functions in Wolfram language.
*)
(*Set parameters*)
size = 500; (*size of image*)
maxIter = 100; (*number of iterations*)

(*Define recursive function*)
mandelbrot[z_, c_, n_] := Module[{
    znext = z^2 + c (*complex recursive function*),
    iter = 1 (*current iteration*)
  },
  If[Abs[z] > 2 || iter == n,
    iter, (*base case*)
    mandelbrot[znext, c, iter + 1] (*recursive call*)
  ]
]

(*Generate grid of complex numbers*)
gridX = ConstantArray[Subdivide[-2, 1, size], size];
gridY = ConstantArray[Subdivide[-1, 1, size], size];
grid = gridX + I*gridY;

(*Calculate Mandelbrot set*)
mandelbrotSet = MatrixForm@Table[
  mandelbrot[0, grid[[i, j]], maxIter], {i, size}, {j, size}];

(*Plot fractal image*)
ArrayPlot[mandelbrotSet, ColorFunction -> "Rainbow", Frame -> False]
(*This code generates a fractal using the Mandelbrot set*)
(*Based on a code snippet by Alan G. Isaac*)

(*Define constants*)
maxIter = 1000; (*maximum number of iterations*)
xMin = -2; (*range of x values*)
xMax = 1;
yMin = -1.5; (*range of y values*)
yMax = 1.5;
delta = 0.001; (*step size*)

(*Define function to test for convergence*)
mandelbrot[z_, c_] := Module[{iter, comp = z, limit = 2}, iter = 1; While[iter <= maxIter, comp = comp^2 + c; If[Abs[comp] > limit, Return[iter], iter++]]; Return[0]; ]

(*Create an empty image*)
image = Image[Table[0, {i, -yMin/delta, -yMax/delta}, {j, xMin/delta, xMax/delta}]];

(*Generate the fractal*)
For[i = 1, i <= Length[image], i++, For[j = 1, j <= Length[image[[i]]], j++, c = xMin + i*delta + (yMin + j*delta)*I; iter = mandelbrot[0, c]; If[iter != 0, image[[i, j]] = (iter/maxIter)^(1/3), image[[i, j]] = 0; ] ] ]

(*Plot the fractal*)
ArrayPlot[image, ColorFunction -> "Rainbow", PlotRange -> All, Frame -> False]
(* Define a function that calculates the derivative of a polynomial *)
deriv[poly_,x_]:=Derivative[1][poly][x]

(* Define a function that calculates the integral of a polynomial *)
int[poly_,x_]:=Integrate[poly,x]

(* Define a function that calculates the roots of a polynomial *)
roots[poly_,x_]:=Solve[poly==0,x]

(* Define a function that calculates the local minima and maxima of a polynomial *)
extrema[poly_,x_]:=Solve[{deriv[poly,x]==0,deriv[deriv[poly,x],x]>0},{x,y}]

(* Define a function that evaluates a polynomial at a given value *)
evaluate[poly_,x_]:=poly/.x

(* Define a function that plots a polynomial *)
plot[poly_,x_]:=Plot[poly,{x,-10,10}]

(* Define a function that simplifies a polynomial *)
simplify[poly_]:=Simplify[poly]

(* Define a function that multiplies two polynomials *)
multiply[poly1_,poly2_,x_]:=Expand[poly1*poly2]

(* Define a function that divides two polynomials *)
divide[poly1_,poly2_,x_]:=PolynomialQuotient[poly1,poly2,x]

(* Define a function that finds the value of a polynomial at the given x-intercept *)
xintercept[poly_,x_]:=x/.roots[poly,x]

(* Define a function that finds the value of a polynomial at the given y-intercept *)
yintercept[poly_,x_]:=Evaluate[poly]/.x -> 0

(* Define a function that calculates the area under a polynomial curve between two x-values *)
area[poly_,x_,a_,b_]:=Abs[NIntegrate[poly,{x,a,b}]] (* using the absolute value in case of a negative area *)

(* Define a function that calculates the volume of revolution of a polynomial around the x-axis *)
revolve[poly_,x_,a_,b_]:=2*Pi*NIntegrate[poly^2,{x,a,b}]

(* Define a function that calculates the arc length of a polynomial curve *)
arclength[poly_,x_,a_,b_]:=NIntegrate[Sqrt[1+deriv[poly,x]^2],{x,a,b}]

(* Define a function that calculates the surface area of revolution of a polynomial around the x-axis *)
surfarevolve[poly_,x_,a_,b_]:=2*Pi*NIntegrate[deriv[poly,x]*Sqrt[1+deriv[poly,x]^2],{x,a,b}]
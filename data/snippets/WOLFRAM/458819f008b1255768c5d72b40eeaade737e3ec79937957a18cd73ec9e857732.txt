(* Code snippet for calculating the nth Fibonacci number 
using dynamic programming *)

(* Initialize an array to store previously calculated 
Fibonacci numbers *)
fibonacciArray = {1,1};

(* Function to calculate nth Fibonacci number *)
Fibonacci[n_] := (
  If[n <= Length[fibonacciArray], (* Check if the 
  number is already in the array *)
    Return[fibonacciArray[[n]]],
    (
      (* Calculate the Fibonacci number recursively 
      and add it to the array *)
      fibonacciNumber = Fibonacci[n-1] + Fibonacci[n-2];
      AppendTo[fibonacciArray, fibonacciNumber];
      Return[fibonacciNumber];
    )
  )
)

(* Print out the 20th Fibonacci number *)
Fibonacci[20] 

(* Output:
6765
*)
(* This program uses the Wolfram Language to search through a list of numbers and find the smallest prime factor for each number. *)

(* Define a function to check if a number is prime *)
isPrime[n_Integer] := If[n <= 1, False, Length[Divisors[n]] == 2]

(* Define a function to find the smallest prime factor for a given number *)
smallestPrimeFactor[n_Integer] := Module[{i = 2, primeFactor = n},
  While[i <= n, If[Mod[n, i] == 0 && isPrime[i], primeFactor = i; Break[],
    i++]];
  primeFactor
]

(* Define a list of numbers to be searched *)
numbers = {456, 342, 127, 643, 324, 521, 237, 971, 832, 602};

(* Use Map function to apply the smallestPrimeFactor function to each number in the list *)
Map[smallestPrimeFactor, numbers] (* Output: {2, 2, 127, 643, 3, 521, 3, 971, 2, 2} *)
(*This code snippet generates a fractal image using the Mandelbrot set*)
xmin = -2.5;
xmax = 1;
ymin = -1.5;
ymax = 1.5;
n = 2000; (*number of points on each axis*)
max_iter = 100; (*maximum number of iterations*)
color = 255; (*color value for the fractal*)
image_size = 500; (*size of the output image*)
(*define the complex function for the Mandelbrot set*)
mandel[z_] := Module[{c, n, zn},
  c = z;
  zn = z;
  n = 0;
  While[Abs[zn] < 2 && n < max_iter,
   zn = zn^2 + c;
   n++;
   ];
  Return[n];
  ]
(*create a two-dimensional array to store the iterations*)
iter_array = Table[0, {i, 1, n}, {j, 1, n}];
(*calculate the iterations for each point in the image*)
Do[
  c = (xmin + (xmax - xmin)*j/n) + I*(ymin + (ymax - ymin)*i/n);
  iter = mandel[c];
  iter_array[[i, j]] = iter;
  , {i, 1, n}, {j, 1, n}
  ];
(*convert the iterations to grayscale values and create the fractal image*)
image = Image[iter_array, "Byte", ColorSpace -> "Grayscale"];
(*resize the image to the desired size*)
image = ImageResize[image, image_size];
(*display the fractal image*)
image // Image
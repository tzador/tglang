(* Start by importing necessary libraries *)
Needs["ImageProcessing`", "Approximations`"]
Needs["Image`"]

(* Define function for converting color images to grayscale *)
ImageToGrayscale[image_] := Module[{

(* Define variables and parameters *)
grayImage, redChannel, greenChannel, blueChannel, 
redChannelWeights, greenChannelWeights, blueChannelWeights, 
rgbWeights},

(* Calculate weights for each channel *)
rgbWeights = {0.2126, 0.7152, 0.0722};
redChannelWeights = rgbWeights[[1]];
greenChannelWeights = rgbWeights[[2]];
blueChannelWeights = rgbWeights[[3]];

(* Extract individual color channels from image *)
redChannel = ImageData[ColorSeparate[image][[1]]];
greenChannel = ImageData[ColorSeparate[image][[2]]];
blueChannel = ImageData[ColorSeparate[image][[3]]];

(* Apply weights to each channel and combine into grayscale image *)
grayImage = redChannelWeights*redChannel + greenChannelWeights*greenChannel + blueChannelWeights*blueChannel;
grayImage = Image[Rescale[grayImage, {0, 1}]];

(* Return grayscale image *)
Return[grayImage];
];

(* Import color image from file and convert to grayscale *)
colorImage = Import["image.jpg"];
grayscaleImage = ImageToGrayscale[colorImage];

(* Display original and grayscale images side by side *)
ImageAssemble[{{colorImage, grayscaleImage}}]
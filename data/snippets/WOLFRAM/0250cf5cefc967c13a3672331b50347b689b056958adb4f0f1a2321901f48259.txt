RandomSeed;
MachineLearning;
NeuralNetworkModel;
(* Randomly initializes the weights of the neural network using the specified seed *)
RandomSeed[1234]
(* Defines the machine learning task to be solved as a regression problem *)
MachineLearning["Regression"]
(* Creates a neural network with 5 hidden layers and 100 neurons per layer *)
NeuralNetworkModel[{
  LinearLayer[100],
  ElementwiseLayer[Ramp],
  LinearLayer[100],
  ElementwiseLayer[Ramp],
  LinearLayer[100],
  ElementwiseLayer[Ramp],
  LinearLayer[100],
  ElementwiseLayer[Ramp],
  LinearLayer[100]
}, "Output" -> "Real"];
(* Trains the neural network using 5000 iterations and a learning rate of 0.001 *)
NetTrain[net, trainingData, MaxTrainingRounds -> 5000, LearningRate -> 0.001]
(* Calculates the predicted values for the test data *)
NetPredict[net, testData];
(* Outputs the trained neural network as a Wolfram Language function *)
Export["TrainedNetwork.wl", ToExpression[net, InputForm, HoldForm]];
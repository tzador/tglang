(* Define a function that takes in a list of integers and returns
   the average value using pattern matching in Wolfram Language *)

average[lst_List] := Module[{sum = 0, count = 0},
  (* Initialize variables to store sum and count of integers *)
  Map[(sum += #; count += 1;) &, lst];
  (* Use pattern matching to iterate through list and update sum and count *)
  sum/count (* Return the average by dividing sum by count *)
]

(* Example usage *)

average[{1, 2, 3, 4, 5}] (* Output: 3 *)
average[{10, 20, 30, 40, 50}] (* Output: 30 *)
(* Define a function to calculate the nth Fibonacci number, with memoization for improved efficiency *)
fib[n_] := Module[{fibVals},
    (* Initialize an empty list to store calculated values *)
    fibVals = {};

    (* Check if the nth Fibonacci number has already been calculated and stored *)
    If[Length[fibVals] >= n,
        (* If so, return the value at index n-1 from the list *)
        Return[fibVals[[n - 1]]],
        (* If not, calculate the nth Fibonacci number using the previous two values and store it in the list *)
        AppendTo[fibVals, fib[n - 1] + fib[n - 2]];
        Return[fibVals[[n - 1]]]
    ]
];

(* Define the first two Fibonacci numbers *)
fibVals = {1, 1};

(* Calculate the 10th Fibonacci number *)
fib[10]

(* Output: 55 *)
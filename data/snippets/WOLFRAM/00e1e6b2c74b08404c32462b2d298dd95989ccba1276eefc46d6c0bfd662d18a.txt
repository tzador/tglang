(* Define a function that returns the nth Fibonacci number *)
f[n_Integer] := Module[{a = 1, b = 1},
  (* Use memoization to store previously calculated values *)
  f[n] = If[n <= 2, 1,
    f[n - 1] + f[n - 2]
  ];
  (* Return the nth Fibonacci number *)
  f[n]
]

(* Define a function to calculate the sum of the first n Fibonacci numbers *)
sumFib[n_Integer] := Module[{sum = 0},
  (* Use a loop to iterate through the first n numbers *)
  Do[
    (* Call the f function to get the nth Fibonacci number *)
    num = f[i];
    (* Add the number to the sum *)
    sum += num;
  , {i, 1, n}];
  (* Return the sum of the first n Fibonacci numbers *)
  sum
]

(* Call sumFib function to calculate the sum of the first 10 Fibonacci numbers *)
sumFib[10]

(* Output: 143 *)
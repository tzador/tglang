(*Defining a recursive function that calculates the nth term of the Fibonacci sequence*)
fib[n_] := fib[n-1] + fib[n-2]

(*Base case for the recursive function*)
fib[0] = 0;
fib[1] = 1;

(*Defining a function to generate a list of Fibonacci numbers up to the nth term*)
generateFib[n_] := Module[{list},
list = Table[fib[i],{i,0,n}];
Return[list];
]

(*Defining a function to calculate the sum of the first n terms of the Fibonacci sequence*)
fibSum[n_] := Module[{sumList},
(*Using the generateFib function to generate a list of Fibonacci numbers*)
sumList = generateFib[n];
(*Using the built-in function Total to sum the elements of the list*)
sum = Total[sumList];
Return[sum];
]

(*Calculating the sum of the first 10 terms of the Fibonacci sequence*)
fibSum[10]
(*This code snippet calculates the least common multiple of two numbers using the Euclidean algorithm*)

(*Define a function that takes in two integers and returns their greatest common denominator*)
gcd[num1_, num2_] := Module[{r}, (*Use Module to create a local variable*)
    r = Mod[num1, num2]; (*Find the remainder when num1 is divided by num2*)
    While[r != 0, (*Create a while loop to continue finding remainders*)
        num1 = num2; (*Set num1 equal to num2*)
        num2 = r; (*Set num2 equal to the remainder*)
        r = Mod[num1, num2] (*Update the remainder*)
    ];
    Return[num2] (*Return the final remainder, which is the greatest common divisor*)
];

(*Define a function that takes in two integers and returns their least common multiple*)
lcm[num1_, num2_] := Module[{gcd}, (*Use Module to create a local variable*)
    gcd = gcd[num1, num2]; (*Find the greatest common divisor using the previously defined function*)
    Return[num1*num2/gcd] (*Use the formula LCM = (num1 * num2) / GCD to find the least common multiple*)
];

(*Print the result of the least common multiple of 24 and 36*)
Print["The least common multiple of 24 and 36 is ", lcm[24, 36], "."]
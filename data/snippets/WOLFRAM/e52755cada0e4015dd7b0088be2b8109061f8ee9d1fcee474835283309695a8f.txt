(* Define a function that checks if two numbers are relatively prime *)
relativelyPrimeQ[n1_, n2_] :=
  If[GCD[n1, n2] == 1,
    Print["The numbers are relatively prime"],
    Print["The numbers are not relatively prime"]
  ]

(* Define a function that generates a list of all prime numbers less than a given number *)
primeList[n_] :=
  Module[{primes},
    (* Create a list of numbers from 2 to n *)
    primes = Table[i, {i, 2, n}]; 
    (* Iterate through the list, removing multiples of each prime number *)
    Do[primes = DeleteCases[primes, _?(Divisible[#, p] &)], {p, primes}];
    (* Return the remaining list of prime numbers *)
    Return[primes];
  ]

(* Generate a list of prime numbers less than 1000 and check their relative primality with each other *)
primeNumbers = primeList[1000];
Do[
  Do[
    relativelyPrimeQ[p1, p2],
    {p2, primeNumbers}
  ],
  {p1, primeNumbers}
]
(* Define function to calculate n-th Fibonacci number *)
Fibonacci[n_] := (
  If[n == 0 || n == 1,
    Return[n],
    Return[Fibonacci[n - 1] + Fibonacci[n - 2]]
  ]
)

(* Generate list of first 10 Fibonacci numbers *)
list = Table[Fibonacci[i], {i, 0, 9}];

(* Print list *)
Print["List of first 10 Fibonacci numbers: ", list]

(* Calculate sum of first 10 Fibonacci numbers *)
sum = Total[list];

(* Print sum *)
Print["Sum of first 10 Fibonacci numbers: ", sum]

(* Create matrix with dimensions 3 x 3 *)
matrix = Table[0, {3}, {3}];

(* Fill matrix with Fibonacci numbers *)
Do[
  matrix[[i, j]] = Fibonacci[i + j - 1], 
  {i, 1, Length[matrix]}, {j, 1, Length[matrix[[1]]]}
];

(* Print matrix *)
Print["Matrix with Fibonacci numbers: ", matrix]

(* Calculate determinant of matrix *)
determinant = Det[matrix];

(* Print determinant *)
Print["Determinant of matrix: ", determinant]

(* Plot function x^2 + 3x + 2 *)
Plot[x^2 + 3x + 2, {x, -5, 5}, 
  AxesLabel -> {"x", "y"}, 
  PlotLabel -> "Quadratic Function",
  PlotStyle -> Blue
]
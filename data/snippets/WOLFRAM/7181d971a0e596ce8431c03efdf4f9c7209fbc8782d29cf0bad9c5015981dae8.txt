(* This is a code snippet that generates the first N numbers of the Fibonacci sequence *)

Module[
{fib = Function[{n}, If[n <= 2, 1, fib[n - 1] + fib[n - 2]]]},
(* The function `fib` uses recursion to generate the Fibonacci numbers *)
(* In the Module, we define a local variable `fib` that takes the argument `n` *)
(* If `n` is less than or equal to 2, the function returns 1, if greater than 2, it recursively calls itself to find the sum of the two previous numbers in the sequence *)

(* Now, we define another function `generateFibonacci` that takes in the number `N` and uses `Table` to generate a list of the first `N` numbers in the Fibonacci sequence *)

generateFibonacci = Function[{N}, Table[fib[i], {i, 1, N}]];

(* Finally, we use `Manipulate` to create a dynamic interface that allows the user to input a value for `N` and see the corresponding numbers in the sequence *)

Manipulate[
generateFibonacci[N],
{{N, 5}, 1, 20, 1}
]

(* Try changing the value of `N` in the `Manipulate` interface to see the fibonnaci sequence update in real-time *)

]
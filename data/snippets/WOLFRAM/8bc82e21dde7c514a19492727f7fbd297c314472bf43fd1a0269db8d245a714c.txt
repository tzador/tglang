(* This is a function that generates a Sierpinski triangle of a specified size *)
(* Input: size - the number of iterations of the Sierpinski triangle *)

sierpinskiTriangle[size_] := (
  (* This is a helper function to generate the actual triangle *)
  sierpinskiHelper[{topLeft_, topRight_, bottom_}]:=(
    {
      (* Generate new triangle on top *)
      {
        topLeft + (topRight - topLeft)/2,
        topLeft,
        topLeft + (bottom - topLeft)/2
      },
      (* Generate new triangle on the left *)
      {
        topLeft + (bottom - topLeft)/4,
        topLeft + (topRight - topLeft)/2,
        bottom
      },
      (* Generate new triangle on the right *)
      {
        topLeft,
        topLeft + (topRight - topLeft)/2,
        topLeft + (topRight - bottom)/4
      }
    }
  );

  (* Initialize the triangle with size 1 with corners at (0,0), (1,1), (1,0) *)
  points = {{0, 0}, {1, 1}, {1, 0}};

  (* Use a loop to create the triangle of specified size *)
  For[i = 1, i <= size, i++,
    (* Generate the new points for the current iteration *)
    newPoints = Flatten[sierpinskiHelper /@ points, 1];
    (* Update the points with the new points for the next iteration *)
    points = newPoints;
  ];

  (* Return the final list of points *)
  points
)
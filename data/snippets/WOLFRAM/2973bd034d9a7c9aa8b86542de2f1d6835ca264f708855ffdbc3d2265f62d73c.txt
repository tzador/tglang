(* This is a function that calculates the determinant of a matrix *)
(* Takes in a matrix A and returns the determinant *)
det[A_] := (
  (* Define variables i, j, and n *)
  i = 1;
  j = 1;
  n = Length[A];
  (* Check for square matrix *)
  If[Length[A] != Length[A[[1]]],
   Print["Error! Matrix is not square."];
   Return[];
   ];
  (* Create an empty list for permutations *)
  perms = {};
  (* Define recursive function to generate all permutations of {1,2,...,n} *)
  permute[start_, end_, current_] := (
    If[start == end, AppendTo[perms, current],
     For[i = start, i <= end, i++,
      (* Swap elements at start and i indices *)
      temp = current[[i]];
      current[[i]] = current[[start]];
      current[[start]] = temp;
      permute[start + 1, end, current];
      (* Swap back elements *)
      temp = current[[i]];
      current[[i]] = current[[start]];
      current[[start]] = temp;
      ];
     ];
    );
  (* Generate all permutations and calculate determinant *)
  permute[1, n, Range[n]];
  det = 0;
  (* Loop through all permutations and calculate determinant using sign and product *)
  For[i = 1, i <= Length[perms], i++,
   sign = (-1)^(
     Total[
      Table[
       If[perms[[i, j]] < perms[[i, k]], 1, 0],
       {j, 1, n},
       {k, j + 1, n}
       ]
      ] + n - 1
     );
   product = 1;
   For[j = 1, j <= n, j++,
    product = product*A[[j, perms[[i, j]]]];
    ];
   det = det + sign*product;
   ];
  det
  )
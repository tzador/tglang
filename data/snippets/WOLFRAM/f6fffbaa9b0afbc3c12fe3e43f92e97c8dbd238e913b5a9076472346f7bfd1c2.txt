(*Define a function that takes in a list of integers and checks if each number is prime*)
primeCheck[list_]:=
 Module[{result = {}, num = 2, isPrime},
  (*Loop through each number in the list*)
  Do[
   isPrime = True;
   (*Check if the current number is divisible by any smaller number*)
   Do[
    (*If it is divisible, set isPrime to False and break out of loop*)
    If[Mod[num, i] == 0,
     isPrime = False;
     Break[];
     ],
    (*Loop through all numbers from 2 to the square root of the current number*)
    {i, 2, Floor[Sqrt[num]]}
    ];
   (*If isPrime is still True, add the number to the results list*)
   If[isPrime, AppendTo[result, num]];
   (*Increment the current number*)
   num++,
   (*Loop through all numbers in the list*)
   {k, list}
   ];
  (*Return the list of prime numbers*)
  result
]

(*Example usage*)
primeCheck[{4, 7, 11, 15, 3}]
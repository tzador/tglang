(* This function calculates the nth element in the Fibonacci sequence *)
Fibonacci[n_] := (
   If[n == 0 || n == 1, (* Conditional statement to check for base cases *)
    Return[n],
    Return[Fibonacci[n - 1] + Fibonacci[n - 2]] (* Recursive call to calculate nth element *)
   ];
  )

(* This function calculates the value of a polynomial with coefficients defined by the list 'coefs',
   at a given variable 'x' *)
Polynomial[x_, coefs_] := (
   Sum[coefs[[i]] * x^i, {i, 0, Length[coefs]}] (* Iterates over all coefficients in the list and calculates the polynomial value *)
  );

(* Define two example polynomials and calculate their values at x = 2 *)
poly1 = {1, 2, 3};
poly2 = {4, 5, 6, 7};
Polynomial[2, poly1] (* Output: 11 *)
Polynomial[2, poly2] (* Output: 90 *)
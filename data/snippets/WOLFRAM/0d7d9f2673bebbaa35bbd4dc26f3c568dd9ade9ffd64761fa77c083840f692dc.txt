(* Solving a system of equations using the Newton-Raphson method *)

(* Define a function to solve the system *)
SolveSystem[func_List, vars_List, x0_List, maxIter_Integer, tolerance_Real] :=
Module[{n = Length[vars], x = x0, iter = 0, delta},
delta = ConstantArray[0, n];
While[iter < maxIter && Abs[func /. Thread[vars -> x]] > tolerance,
JacobianMatrix = Table[D[func[[i]], vars[[j]]], {i, 1, n}, {j, 1, n}];
delta = LinearSolve[JacobianMatrix, -func /. Thread[vars -> x]];
x = x + delta;
iter++;
];
If[iter == maxIter, Print["Maximum number of iterations reached."]];
x
]

(* Specify the system of equations and initial guess values *)
func = {x + Sin[y], Cos[x] + y - 1};
vars = {x, y};
x0 = {0.5, 0.5};

(* Solve the system with a maximum of 10 iterations and a tolerance of 0.001 *)
solution = SolveSystem[func, vars, x0, 10, 0.001];

(* Print the solution *)
Print["The solution is: ", solution]
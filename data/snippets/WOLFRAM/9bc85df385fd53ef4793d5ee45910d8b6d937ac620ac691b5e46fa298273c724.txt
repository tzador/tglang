(* Defines a function that takes in two parameters, a list and a pattern *)
(* The function checks if the pattern matches any elements in the list *)
InListQ[l_List, patt_] := Module[{matchQ= False, i=1},
    (* Initializes a boolean variable matchQ to False and a counter i to 1 *)
    While[i<=Length[l] && matchQ===False,
        (* While loop checks if the counter is less than or equal to the length of the list and if matchQ is still False *)
        If[l[[i]]===patt,
            (* If statement checks if the element at index i in the list is equal to the pattern *)
            matchQ = True; (* Sets matchQ to True if there is a match *)
        ];
        i++; (* Increments the counter *)
    ];
    matchQ (* Returns the final value of matchQ *)
];
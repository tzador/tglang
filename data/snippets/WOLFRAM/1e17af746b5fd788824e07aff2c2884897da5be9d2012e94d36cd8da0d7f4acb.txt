(* This function calculates the factorial of a given number using a recursive approach *)
factorial[n_Integer] := If[n == 0, 1, n * factorial[n - 1]]

(* This function calculates the Binomial coefficient of two given numbers using a recursive approach *)
binomial[n_, k_] := If[k == 0 || k == n, 1, binomial[n - 1, k - 1] + binomial[n - 1, k]]

(* This function calculates the value of a polynomial at a given point using a recursive approach *)
poly[p_List, x_] := Module[{n = Length[p] - 1},
    If[n == 0, p[[1]], p[[1]] * x^n + poly[Drop[p, -1], x]]
]

(* This function calculates the length of a list using a recursive approach *)
myLength[list_List] := If[list == {}, 0, 1 + myLength[Rest[list]]]

(* This function checks if a given number is prime using a recursive approach *)
isPrime[n_Integer] := Module[{i = 2},
    If[n == i, True, If[Mod[n, i] == 0, False, isPrime[n, i + 1]]]
]
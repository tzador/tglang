(* Define a recursive function that calculates the factorial of a given number *)

Factorial[n_Integer] := 
    If[n == 1, 1, n * Factorial[n-1]]
(* Annotate the function for clarification *)
Factorial[n] (* Input: Integer *)
(* Output: Integer *)
(* If the input is 1, return 1 *)
(* Otherwise, multiply the number with the factorial of (n-1) *)
(* For example, Factorial[5] will return 120 *)
(* Define another function to calculate the product of the first n natural numbers *)
Product[n_Integer] := 
    If[n == 1, 1, n * Product[n-1]]
(* Annotate the function for clarification *)
Product[n] (* Input: Integer *)
(* Output: Integer *)
(* If the input is 1, return 1 *)
(* Otherwise, multiply the number with the product of (n-1) *)
(* For example, Product[5] will return 120 *)
(* Define a function that calculates the binomial coefficient (n choose k) *)
Binomial[n_Integer, k_Integer] :=
    Factorial[n] / (Factorial[k] * Factorial[n-k])
(* Annotate the function for clarification *)
Binomial[n,k] (* Input: Integer, Integer *)
(* Output: Integer *)
(* Calculate the factorial of n, divided by the product of the factorials of k and (n-k) *)
(* For example, Binomial[4,2] will return 6 *)
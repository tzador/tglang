(* Define a function that takes in two lists and returns a nested list with the corresponding pairs of elements from each list, excluding non-numeric values *)

makePairs[list1_List, list2_List] := Module[{pairs},
  (* Filter out non-numeric values from the lists *)
  filteredList1 = Select[list1, NumericQ];
  filteredList2 = Select[list2, NumericQ];

  (* Make sure both lists have the same length *)
  If[Length[filteredList1] != Length[filteredList2],
   Print["Lists must have the same length"];
   Return[$Failed]
   ];

  (* Use MapThread to iterate through both lists simultaneously *)
  pairs = MapThread[{#1, #2} &, {filteredList1, filteredList2}];

  (* Return nested list of pairs *)
  Return[pairs];
]

(* Test the function with two example lists *)
makePairs[{1, "A", 3, "B", 5}, {"a", 2, "b", 4, 6}]
(* Output: {{1, 2}, {3, 4}, {5, 6}} *)

makePairs[{2, 4, "C", 6}, {"c", 8, 10, "D"}]
(* Output: Lists must have the same length *)
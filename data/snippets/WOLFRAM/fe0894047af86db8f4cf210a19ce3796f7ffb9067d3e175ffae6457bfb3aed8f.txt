(*Define a function**) (*named ComplexIntegral that takes in 3 parameters, a function f, and two variables a and b*) 
ComplexIntegral[f_, a_, b_] := Block[{c1, c2, g, h}, 
 (*Define a subsidiary function g that takes in a complex value z and returns the complex conjugate of z*) 
 g[z_] := ComplexConjugate[z]; 
 (*Define another subsidiary function h that takes in a complex value z and returns the absolute value of z*) 
 h[z_] := Abs[z]; 
 (*Use the built-in NIntegrate function to calculate the numerical value of the integral*) 
 NIntegrate[f[z] * g[z], {z, a, b}, Method -> "LocalAdaptive"]
 ] 
(*Call the ComplexIntegral function with f=x^2, a=0, b=1, and assign the output to a variable called result*) 
result=ComplexIntegral[x^2, 0, 1]
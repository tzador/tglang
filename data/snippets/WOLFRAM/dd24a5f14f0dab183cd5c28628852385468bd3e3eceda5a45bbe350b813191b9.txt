(*(The following code snippet generates a plot of a Lorenz Attractor in 3D space)*)
(* Define initial conditions *)
t0 = 0; (* initial time *)
x0 = 0; (* initial x-coordinate *)
y0 = 1; (* initial y-coordinate *)
z0 = 0; (* initial z-coordinate *)
(* Define parameters *)
Sigma = 10;
Rho = 28;
Beta = 8/3;
(* Define dynamical system *)
dxdt[t_, x_, y_, z_] := Sigma*(y - x);
dydt[t_, x_, y_, z_] := Rho*x - y - x*z;
dzdt[t_, x_, y_, z_] := x*y - Beta*z;
(* Solve system using NDSolve *)
sol = NDSolve[{x'[t] == dxdt[t, x[t], y[t], z[t]], y'[t] == dydt[t, x[t], y[t], z[t]], z'[t] == dzdt[t, x[t], y[t], z[t]], x[0] == x0, y[0] == y0, z[0] == z0}, {x, y, z}, {t, t0, 100}];
(* Plot Lorenz Attractor in 3D space *)
Graphics3D[{
  Point[{x[t], y[t], z[t]} /. sol], (* plot points along solution curve *)
  Arrowheads[0.02], (* define size of arrows *)
  Table[Arrow[Tube[{{x[t], y[t], z[t]} /. sol, {x[t + 0.5], y[t + 0.5], z[t + 0.5]} /. sol}]], {t, 0, 100, 0.5}] (* plot arrows along solution curve *)
}, BoxRatios -> {1, 1, 1}, PlotRange -> All, ImageSize -> 600)]
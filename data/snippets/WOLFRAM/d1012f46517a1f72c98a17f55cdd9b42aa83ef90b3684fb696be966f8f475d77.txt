(* This is a complex function that calculates the Fibonacci sequence *)
Fibonacci[n_] := Module[{a = 0, b = 1}, Do[{a, b} = {b, a + b}, {n}]; a]

(* This function takes in a list and returns the sum of all the elements *)
listSum[list_] := Module[{sum = 0}, Do[sum += list[[i]], {i, Length[list]}]; sum]

(* This is a helper function that checks if a number is prime *)
isPrime[n_] := Module[{i = 2}, While[i < n, If[n%i == 0, Return[False]]; i++]; True]

(* This function takes in a list of numbers and returns the sum of all prime numbers in the list *)
sumOfPrimes[list_] := Module[{sum = 0}, For[i = 1, i <= Length[list], i++, If[isPrime[list[[i]]], sum += list[[i]]]]; sum]
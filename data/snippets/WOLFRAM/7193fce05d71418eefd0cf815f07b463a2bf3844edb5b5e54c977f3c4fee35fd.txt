(* This program checks if a given number is palindrome or not *)

(* Define a function that converts a given number to a list of its individual digits *)
numToList[num_] := (
    IntegerDigits[num] (* Returns a list of individual digits of the input number *)
)

(* Define a function that checks if a given list is palindrome or not *)
isPalindrome[list_] := (
    If[list == Reverse[list], (* Checks if the input list is equal to its reverse *)
        "The input list is a palindrome!",
        "The input list is not a palindrome."
    ]
)

(* Define a function that checks if a given number is palindrome or not *)
isNumberPalindrome[num_] := (
    If[numToList[num] == Reverse[numToList[num]], (* Converts the input number to a list and checks if it is equal to its reverse *)
        "The input number is a palindrome!",
        "The input number is not a palindrome."
    ]
)

(* Example input and output *)
num = 12321;
numToList[num] (* Output: {1, 2, 3, 2, 1} *)
isPalindrome[numToList[num]] (* Output: The input list is a palindrome! *)
isNumberPalindrome[num] (* Output: The input number is a palindrome! *)
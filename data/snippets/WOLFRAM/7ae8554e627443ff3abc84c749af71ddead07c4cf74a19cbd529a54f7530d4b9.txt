(* This code snippet performs a sorting algorithm using the QuickSort method *)

(* Define the function to perform the sorting *)
Quicksort[x_List]:=Module[{pivot, less, greater},
    (* Check if list is empty or has only one element *)
    If[Length[x]<=1, Return[x], 
        (* Select the last element as the pivot *)
        pivot=x[[-1]];

        (* Partition the list into elements less than and greater than pivot *)
        less=Select[Most[x], #<pivot&];
        greater=Select[Most[x], #>=pivot&];

        (* Return sorted list by recursively calling Quicksort on the two partitions *)
        Join[Quicksort[less], {pivot}, Quicksort[greater]]
    ]
];

(* Generate a random list of integers to sort *)
list=RandomInteger[100,10];

(* Print the unsorted list *)
Print["Unsorted list: ", list];

(* Call the Quicksort function to sort the list *)
sortedList=Quicksort[list];

(* Print the sorted list *)
Print["Sorted list: ", sortedList];
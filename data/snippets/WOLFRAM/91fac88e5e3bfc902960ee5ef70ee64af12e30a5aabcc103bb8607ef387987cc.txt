(* This code generates a Conway's Game of Life simulation *)

(* Create a grid with random initial values *)
grid = Table[RandomInteger[], {50}, {50}];

(* Define function to count number of alive neighbors *)
countNeighbors[grid_, i_, j_] := 
  grid[[Mod[i - 2, Length[grid], 1], Mod[j - 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i - 2, Length[grid], 1], Mod[j - 1, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i - 2, Length[grid], 1], j]] + 
   grid[[Mod[i - 2, Length[grid], 1], Mod[j + 1, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i - 2, Length[grid], 1], Mod[j + 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i - 1, Length[grid], 1], Mod[j - 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i - 1, Length[grid], 1], Mod[j + 2, Length[grid[[1]]], 1]]] + 
   grid[[i, Mod[j - 2, Length[grid[[1]]], 1]]] + 
   grid[[i, Mod[j + 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i + 1, Length[grid], 1], Mod[j - 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i + 1, Length[grid], 1], Mod[j + 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i + 2, Length[grid], 1], Mod[j - 2, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i + 2, Length[grid], 1], Mod[j - 1, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i + 2, Length[grid], 1], Mod[j], 1]] + 
   grid[[Mod[i + 2, Length[grid], 1], Mod[j + 1, Length[grid[[1]]], 1]]] + 
   grid[[Mod[i + 2, Length[grid], 1], Mod[j + 2, Length[grid[[1]]], 1]]];

(* Define rules for game of life *)
rules[grid_, i_, j_] :=
  If[countNeighbors[grid, i, j] == 3, 1, 
   If[countNeighbors[grid, i, j] == 2 && grid[[i, j]] == 1, 1, 0]];

(* Create new grid after each generation *)
newGrid = Table[rules[grid, i, j], {i,Length[grid]}, {j, Length[grid[[1]]]}];

(* Display the new grid *)
Grid[newGrid, Frame -> All]
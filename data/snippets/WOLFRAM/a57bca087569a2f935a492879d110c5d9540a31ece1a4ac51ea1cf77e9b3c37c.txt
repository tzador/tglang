(*Define function that computes the nth term of the Fibonacci sequence*)
Fibonacci[n_] := Module[{result, a = 0, b = 1}, Do[result = a + b; a = b; b = result, {n - 1}]; result]

(*Define function for calculating the nth root using the Newton-Raphson method*)
NthRoot[n_, a_, x0_] := Module[{iteration = 0, xn = x0}, While[Abs[xn^n - a] > 10^-6,
xn = xn - (xn^n - a)/(n*xn^(n - 1)); iteration++]; Print["Number of iterations: ", iteration]; xn]

(*Calculating the 50th term of the Fibonacci sequence*)
Fibonacci[50]

(*Calculating the cube root of 125 using the Newton-Raphson method with an initial guess of 1*)
NthRoot[3, 125, 1]
(*This code snippet uses Wolfram Language syntax to create a neural network with 3 layers*)

NetChain[
  {0, 0, 1} -> 0,
  {0, 1, 0} -> 1,
  {1, 0, 0} -> 1,
  {1, 1, 0} -> 0,
  {1, 1, 1} -> 1
] = NetInitialize@NetChain[
  {
    LinearLayer[5, "Input" -> 3],
    ElementwiseLayer[Tanh],
    LinearLayer[3],
    ElementwiseLayer[Tanh],
    LinearLayer[1],
    ElementwiseLayer[Sigmoid]
  },
  "Output" -> "Scalar"
];

(*Explanation:
- The first line creates a dataset of input/output pairs
- The second line creates a neural network consisting of 3 layers using the NetChain function
- LinearLayer and ElementwiseLayer are used to define the type of layers
- NetInitialize initializes the weights and biases of the network
- The "Output" -> "Scalar" option specifies that the network outputs a single numerical value
- The final result is assigned to the variable NetChain *)
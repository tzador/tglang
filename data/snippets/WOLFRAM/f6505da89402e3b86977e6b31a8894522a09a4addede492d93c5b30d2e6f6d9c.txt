(* Define a function to sort a list of integers using merge sort *)
mergeSort[num_List] := Module[{n, split, left, right},
  n = Length[num];
  If[n <= 1, Return[num], split = Ceiling[n/2];
   left = mergeSort[Take[num, split]];
   right = mergeSort[Drop[num, split]];
   merge[left, right]];
  ]

(* Define a function to merge two sorted lists into one sorted list *)
merge[left_List, right_List] := Module[{result, resultLength, i, j},
  result = Table[0, Length[left] + Length[right]];
  resultLength = Length[result];
  i = 1;
  j = 1;
  Do[
   If[i > Length[left], result[[k]] = right[[j++]],
    If[j > Length[right], result[[k]] = left[[i++]],
     If[left[[i]] <= right[[j]], result[[k]] = left[[i++]],
      result[[k]] = right[[j++]];
      ]
     ]
    ], {k, resultLength}];
  result
  ]

(* Example Usage *)
exampleList = {45, 12, 76, 23, 8, 98, 56, 43};
sortedList = mergeSort[exampleList];
sortedList

(* Output: {8, 12, 23, 43, 45, 56, 76, 98} *)
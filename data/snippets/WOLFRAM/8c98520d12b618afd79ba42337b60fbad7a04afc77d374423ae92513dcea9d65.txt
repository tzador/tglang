(* Defining a function for finding the nth Fibonacci number *)
nFibonacci[n_Integer] := Module[{fibArray},
  (* Check for valid input *)
  If[n < 1, Print["n must be a positive integer."]; Abort[]];
  fibArray = {1, 1}; (* Initialize array with first two Fibonacci numbers *)
  (* Loop to calculate nth Fibonacci number *)
  Do[fibArray = Append[fibArray, fibArray[[i]] + fibArray[[i + 1]]], {i, 1, n - 2}];
  (* Output the nth Fibonacci number *)
  Return[fibArray[[n]]];
];
(* Testing the function with different input values *)
nFibonacci[5] (* Output: 5 *)
nFibonacci[10] (* Output: 55 *)

(* Defining a function for finding the sum of squares of first n natural numbers *)
sumOfSquares[n_Integer] := Module[{sum},
  (* Check for valid input *)
  If[n < 1, Print["n must be a positive integer."]; Abort[]];
  sum = 0; (* Initialize sum to 0 *)
  (* Loop to calculate sum of squares *)
  Do[sum = sum + i^2, {i, 1, n}];
  (* Output the sum of squares *)
  Return[sum];
];
(* Testing the function with different input values *)
sumOfSquares[5] (* Output: 55 *)
sumOfSquares[10] (* Output: 385 *)
-- This is a comment
module Main exposing (..)

-- Defining a type alias
type alias Person =
    { name : String
    , age : Int
    , address : Address
    }

-- Defining a type
type Address =
    HomeAddress String Int
    | OfficeAddress String

-- Defining a function
fullName : Person -> String
fullName person =
    person.name ++ " " ++ toString person.age

-- Defining a union type
type UnionType
    = OptionOne Int
    | OptionTwo Bool
    | OptionThree String

-- Defining a custom type with parameters
type Measure a = Length a | Unit

-- Defining a custom type with partial application
type Percent = Percent Int

-- Defining a record type
type alias Car =
    { model : String
    , year : Int
    , manufacturer : String
    }

-- Defining a record type with a constructor function
defaultCar : Car
defaultCar =
    Car "Model S" 2021 "Tesla"

-- Defining a list
shoppingList : List String
shoppingList =
    [ "Milk", "Eggs", "Bread", "Butter" ]

-- Defining a tuple
personTuple : (String, Int)
personTuple =
    ("John Doe", 35)

-- Defining a Maybe type
maybePerson : Maybe Person
maybePerson =
    Just { name = "Jane Smith", age = 28, address = HomeAddress "123 Main St"  }

-- Defining a value with type annotation
answeredQuestions : Bool
answeredQuestions =
    True

-- Defining a function with pattern matching
addIntegers : Int -> Int -> Int
addIntegers x y =
    case (x, y) of
        (0, b) -> b
        (a, 0) -> a
        (a, b) -> addIntegers (a-1) (b-1)
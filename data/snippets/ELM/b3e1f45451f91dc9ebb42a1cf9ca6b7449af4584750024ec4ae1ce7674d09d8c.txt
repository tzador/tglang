-- Function to perform matrix multiplication
matMul : (Matrix Int) -> (Matrix Int) -> (Matrix Int)
matMul matA matB =
  let
    -- Helper function to calculate dot product of two vectors
    dotProduct : [Int] -> [Int] -> Int
    dotProduct vecA vecB =
      List.foldl (+) 0 (List.map2 (*) vecA vecB)

    -- Transpose a Matrix
    transpose : (Matrix Int) -> (Matrix Int)
    transpose mat =
      List.map List.reverse mat

    -- List of columns from a Matrix
    cols : Matrix Int -> [List Int]
    cols mat =
      transpose mat

    -- Generate dot product of each row of matrixA with each column of matrixB
    -- to get the resulting matrix
    multiply : Matrix Int -> Matrix Int -> Matrix Int
    multiply matrixA matrixB =
      List.map
        (\row ->
          cols matrixB
            |> List.map (dotProduct row))
        matrixA

  in
    multiply matA matB
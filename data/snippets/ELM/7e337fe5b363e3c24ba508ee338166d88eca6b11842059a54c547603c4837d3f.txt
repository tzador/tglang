-- A complex function that checks if a given list of numbers is in increasing order

-- Define a helper function to check if a single number is larger than the previous one
isLargerThanPrevious : List number -> number -> List number
isLargerThanPrevious list num =
    case list of
        [] -> []
        head :: tail ->
            if num > head then
                [num] :: isLargerThanPrevious tail head
            else
                [0]

-- Define the main function that handles the list
isIncreasingOrder : List number -> Bool
isIncreasingOrder list =
    case list of
        [] -> True
        head :: tail ->
            (isIncreasingOrder tail) && (isLargerThanPrevious tail head == [0])

-- Example usage
isIncreasingOrder [1,2,3,4] --> True
isIncreasingOrder [1,3,2,4] --> False
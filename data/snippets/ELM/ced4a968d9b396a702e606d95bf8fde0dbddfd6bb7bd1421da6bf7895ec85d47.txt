module User exposing (User, updateName, deleteUser)

import Html exposing (text)
import Html.Attributes exposing (style)


{-|
The User type represents an individual user
-}
type alias User =
    { id : Int
    , name : String
    , age : Int
    }


{-|
Function to update the name of a user
-}
updateName : User -> String -> User
updateName user newName =
    { user | name = newName }


{-|
Function to delete a user
-}
deleteUser : Int -> String
deleteUser userId =
    "User with ID " ++ (toString userId) ++ " has been deleted"


{-|
The view function to display a single user's information
-}
view : User -> Html msg
view user =
    let
        nameStyle =
            style
                [ ( "font-size", "18px" )
                , ( "color", "blue" )
                , ( "font-weight", "bold" )
                ]
    in
    Html.div []
        [ Html.div [ nameStyle ] [ text user.name ]
        , Html.div [] [ text ("Age: " ++ (toString user.age)) ]
        ]
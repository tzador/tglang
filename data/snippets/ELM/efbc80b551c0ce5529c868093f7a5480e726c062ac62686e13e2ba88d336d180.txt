-- This is a simple function
add : Int -> Int -> Int
add x y =
    x + y

-- Define a type alias for Vector
type alias Vector =
    { x : Float
    , y : Float
    , z : Float
    }

-- Define a function to calculate the length of a Vector
length : Vector -> Float
length vector =
    sqrt (vector.x * vector.x + vector.y * vector.y + vector.z * vector.z)

-- Define a custom type for a 3D point
type Point3D
    = Cartesian Vector
    | Polar Float Float Float

-- Define a function to convert a Cartesian point to a Polar point
toPolar : Point3D -> Point3D
toPolar point =
    case point of
        Cartesian { x, y, z } ->
            let
                phi =
                    atan y x
                theta =
                    acos (z / Vector.length { x = x, y = y, z = z })
                r =
                    Vector.length { x = x, y = y, z = z }
            in
            Polar r theta phi
        polarPoint ->
            polarPoint
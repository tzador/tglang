-- This code snippet generates and prints out a randomized list of five colors

import Random
import Color
import List exposing (map)

type alias ColorList = List Color.Color -- Defines a type alias for a list of colors

randomColors : Random.List ColorList -- Defines a random list of colors using ELM's Random module
randomColors =
  Random.list 5 ColorGenerator -- Generates a random list of 5 colors using a custom color generator function

randomizeColor : Color.Color -> Random.Generator Color -- Defines a function that takes in a color and returns a random color
randomizeColor baseColor =
  Random.chance 0.5 (Color.rgb 255 255 255) Color.random -- Randomly chooses either the base color or a completely random color

colorGenerator : Random.Generator ColorList -- Defines a color generator using ELM's Random module and the randomizeColor function
colorGenerator =
  Random.map (map randomizeColor) (Random.list 5 (Random.int 0 255)) -- Maps the randomizeColor function to each randomly generated integer

main : Program Never -- The main function that runs the program
main =
  randomColors -- Generates the random list of colors
  |> Task.map (\colors -> List.map Color.toRgbString colors) -- Formats the colors into strings
  |> Task.perform (\_ -> Debug.todo "Something went wrong") (\colors -> Debug.log (String.join ", " colors)) -- Prints out the list of colors in the console
-- Define a recursive function that calculates the Fibonacci sequence

-- Use pattern matching to handle edge cases
fibonacci : Int -> Int
fibonacci 0 = 0
fibonacci 1 = 1

-- Use tail recursion to keep track of the previous two numbers in the sequence
fibonacci n = fibonacciHelper 0 1 n

-- Define a helper function with an accumulator for tail recursion
fibonacciHelper : Int -> Int -> Int -> Int
fibonacciHelper prev1 prev2 n =
    if n > 1 then
        fibonacciHelper prev2 (prev1 + prev2) (n - 1)
    else
        prev2

-- Call the function to calculate the 10th Fibonacci number
fibonacci 10
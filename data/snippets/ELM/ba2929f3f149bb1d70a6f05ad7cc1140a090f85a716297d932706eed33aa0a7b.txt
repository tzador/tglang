module Main exposing (main)

import Html exposing (..)
import Html.Attributes exposing (..)
import Html.Events exposing (onInput, onClick)
import Json.Decode as Decode

-- A type alias for the message type used in the application
type Msg
    = Input String
    | Submit

type alias Model =
    { input : String
    , placeholder : String
    }

-- The initial state of the application
initialModel : Model
initialModel =
    { input = ""
    , placeholder = "Enter text here"
    }

-- This is the init function that initializes the application with the initialModel
init : () -> (Model, Cmd Msg)
init _ =
    (initialModel, Cmd.none)

view : Model -> Html Msg
view model =
    div []
        [ input
            [ placeholder model.placeholder
            , onInput Input
            ]
            []
        , button
            [ onClick Submit
            ]
            [ text "Submit" ]
        ]

-- Update function that takes in the current model, the message and returns the updated model
update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
    case msg of
        Input text ->
            ({ model | input = text }, Cmd.none)

        Submit ->
            ({ model | placeholder = model.input }, Cmd.none)

-- Main function that starts the application
main : Program () Model Msg
main =
    Html.beginnerProgram
        { model = initialModel
        , view = view
        , update = update
        }
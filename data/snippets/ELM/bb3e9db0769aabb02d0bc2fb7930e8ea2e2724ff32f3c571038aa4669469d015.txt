import Json.Decode exposing (field, int, list, string, (:=))

type alias Person =
  { name : String
  , age : Int
  , hobbies : List String
  , address : Address
  }

type alias Address =
  { street : String
  , city : String
  , country : String
  , postalCode : Int
  }

personDecoder : Json.Decode.Decoder Person
personDecoder =
  Json.Decode.map4 Person
    (field "name" string)
    (field "age" int)
    (field "hobbies" (list string))
    (field "address" addressDecoder)

addressDecoder : Json.Decode.Decoder Address
addressDecoder =
  Json.Decode.map4 Address
    (field "street" string)
    (field "city" string)
    (field "country" string)
    (field "postalCode" int)

jsonString : String
jsonString = """ 
  {
    "name": "John Doe",
    "age": 30,
    "hobbies": ["reading", "running", "cooking"],
    "address": {
      "street": "123 Main St",
      "city": "New York",
      "country": "USA",
      "postalCode": 10001
    }
  }
  """

result : Result Json.Decode.Error Person
result =
  Json.Decode.decodeString personDecoder jsonString
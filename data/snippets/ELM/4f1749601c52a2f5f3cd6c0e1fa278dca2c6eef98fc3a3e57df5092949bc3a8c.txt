-- Code to generate a list of fibonacci numbers up to a given limit
fibonacci : Int -> List Int
fibonacci limit =
  let
      -- Helper function to generate fibonacci numbers recursively
      generateFib : Int -> Int -> List Int -> List Int
      generateFib x y list =
        case x + y of
          num if num > limit -> list
          num -> generateFib y num (list ++ [num])

      -- Setup initial values for the recursive function
      initialX = 0
      initialY = 1
  in
    -- Call the helper function, passing in initial values and empty list
    generateFib initialX initialY []
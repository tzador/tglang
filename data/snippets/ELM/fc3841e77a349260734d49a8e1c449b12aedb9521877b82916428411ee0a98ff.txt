module RandomColorGenerator exposing (..)

import Random
import Html exposing (Html, div, button, text)
import Html.Attributes exposing (style)

-- defining a type alias for our generated color
type alias Color =
    { red : Int
    , green : Int
    , blue : Int
    }

-- The main function, responsible for rendering the UI and generating random numbers
main : Program () Color Model Msg
main =
    Html.program
        { view = view
        , model = model
        , update = update
        , subscriptions = \_ -> Sub.none
        }

-- Defining the initial model
model : Color
model =
    Color 0 0 0

-- The possible actions that can be triggered by the user
type Msg
    = Generate

-- The update function, responsible for handling user actions and updating the model
update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
    case msg of
        Generate ->
            let
                (red, randomGen1) =
                    Random.step Random.int (0, 255) model.randomGen

                (green, randomGen2) =
                    Random.step Random.int (0, 255) randomGen1

                (blue, randomGen3) =
                    Random.step Random.int (0, 255) randomGen2
            in
                ( { model | red = red, green = green, blue = blue, randomGen = randomGen3 }
                , Cmd.none
                )

-- The view function, responsible for rendering the UI
view : Model -> Html Msg
view model =
    div []
        [ button [ onClick Generate ] [ text "Generate random color" ]
        , div
            [ style
                [ ( "background-color", colorToString model )
                , ( "height", "200px" )
                , ( "width", "200px" )
                ]
            ]
            []
        ]

-- Helper function to convert our Color to a string
colorToString : Color -> String
colorToString color =
    let
        red =
            toString color.red

        green =
            toString color.green

        blue =
            toString color.blue
    in
        "rgb(" ++ red ++ ", " ++ green ++ ", " ++ blue ++ ")"
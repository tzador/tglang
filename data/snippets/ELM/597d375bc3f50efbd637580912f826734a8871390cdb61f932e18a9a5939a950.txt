--This code snippet is an example of a recursive function in ELM
factorial : Int -> Int     -- Function declaration, takes in an Int and returns an Int
factorial n =              -- Function definition, takes in the parameter n
    if n < 0               -- If statement to check if n is less than 0
    then error "Factorial of negative number does not exist" -- Throws an error if n is negative
    else                    -- Else statement if n is not negative
        case n of
            0 -> 1          -- Base case, if n is 0, factorial is 1
            _ -> n * factorial (n - 1)    -- Recursive call, multiplies n with factorial(n-1)
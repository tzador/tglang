-- This is a function that takes in two ints and returns the factorial of the first int
factorial : Int -> Int -> Int
factorial current total =
    if current <= 1 then
        total
    else
        factorial (current - 1) (total * current) -- Recursive call

-- This function takes in a list of ints and returns the factorial for each element in the list as a list
factorialList : List Int -> List Int
factorialList ints =
    List.map (factorial 1) ints
    -- Uses the "map" function to apply the factorial function to each element in the list


-- This is a custom type that represents a person's name with a first and last name
type alias Name =
    { firstName : String
    , lastName : String
    }

-- This function takes in a Name record and returns the full name as a string
getFullName : Name -> String
getFullName name =
    name.firstName ++ " " ++ name.lastName
    -- Uses the "++" operator to concatenate the first and last names with a space in between


-- This is a main function that calls the factorialList function with a list of ints and prints the result
main : String
main =
    let
        numbers = [1, 2, 3, 4, 5] -- List of ints
        factorials = factorialList numbers -- List of factorials
    in
        "Factorials of " ++ toString numbers ++ " are " ++ toString factorials
        -- Uses the "toString" function to convert the lists to strings and the "++" operator to concatenate them with a custom message
-- Define a custom type representing a binary tree.
type Tree a
    = Leaf
    | Node a (Tree a) (Tree a)


-- A helper function to check if a tree is empty.
empty : Tree a -> Bool
empty tree =
    case tree of
        Leaf ->
            True
        _ ->
            False


-- A function to insert a node into the tree based on a given ordering function.
insert : (a -> a -> Ordering) -> a -> Tree a -> Tree a
insert orderFunc value tree =
    case tree of
        Leaf ->
            Node value Leaf Leaf

        Node currentValue left right ->
            case orderFunc value currentValue of
                LT ->
                    Node currentValue (insert orderFunc value left) right

                GT ->
                    Node currentValue left (insert orderFunc value right)

                EQ ->
                    Node currentValue left right
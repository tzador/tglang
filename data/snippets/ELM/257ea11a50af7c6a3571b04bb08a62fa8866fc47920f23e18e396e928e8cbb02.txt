module Main exposing (main)

{-| This function takes in a list and returns a list of the squares
    of all the values in the original list.
-}
squareList : List Int -> List Int
squareList list =
    List.map (\x -> x * x) list

{-| This function takes in a list of strings and returns a list of
    Booleans indicating whether each string is an even or odd length.
-}
evenOddList : List String -> List Bool
evenOddList list =
    List.map (\str -> String.length str % 2 == 0) list

main : Program Never () ()
main =
    let
        numbers = [1, 2, 3, 4, 5]
        squares = squareList numbers
        strings = ["Hello", "World", "I", "am", "ELM"]
        lengths = evenOddList strings
    in
    Text.concat [toString squares, toString lengths]
import Html exposing (..)
import String
import Http
import Json.Decode as Decode

type Url
  = GitHub
  | Twitter

getUrl : Url -> String
getUrl url =
  case url of
    GitHub -> "https://github.com/"
    Twitter -> "https://twitter.com/"

type Msg
  = SearchSuccess String
  | SearchError Http.Error

update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
  case msg of
    SearchSuccess response ->
      ( { model | results = response }, Cmd.none )
    SearchError error ->
      ( model, Cmd.none )

viewResult : String -> Html Msg
viewResult url =
  let
    resultText =
      String.append "Search result: " url
  in
    div [] [ text resultText ]

view : Model -> Html Msg
view model =
  let
    searchButton =
      button [ onClick (Http.get searchUrl searchDecoder) ] [ text "Search" ]
  in
    div []
      [ viewResult model.results
      , searchButton
      ]

type alias Model =
  { results : String
  }

searchUrl : String
searchUrl =
  "https://api.github.com/users/octocat"

searchDecoder : Decode.Decoder String
searchDecoder =
  Decode.field "url" Decode.string

main : Program Never Model Msg
main =
  beginnerProgram
    { model = { results = "" }
    , update = update
    , view = view
    }
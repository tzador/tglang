module Main exposing (..)

type Model = 
    Init
    | Loading
    | Success Int
    | Failure

type Msg = 
    Click
    | GotNumber (Result Http.Error Int)

update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    case msg of
        Click ->
            ( Loading, cmd )

        GotNumber (Ok num) ->
            ( Success num, Cmd.none )

        GotNumber (Err err) ->
            ( Failure, Cmd.none )

view : Model -> Html Msg
view model =
    case model of
        Init ->
            button [ onClick Click ] [ text "Click to get number" ]

        Loading ->
            div [] [ text "Loading..." ]

        Success num ->
            text ( "Number is: " ++ (toString num) )

        Failure ->
            div [] [ text "Failed to get number" ]

subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none

main : Program Never Model Msg
main = 
    Html.App.program
        { view = view
        , update = update
        , subscriptions = subscriptions
        }
        []
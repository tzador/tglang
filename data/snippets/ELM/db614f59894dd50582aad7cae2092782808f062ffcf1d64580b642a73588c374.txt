module Main exposing (..)

-- This is a module declaration that exposes all its contents

import Html
import Html.Attributes

-- Import statements to use Html and Html.Attributes modules

type alias Book =
    { title : String
    , author : String
    , year : Int
    }

-- Defining a type alias for a Book with fields for title, author and year

books : List Book
books =
    [ Book "The Hobbit" "J.R.R. Tolkien" 1937
    , Book "1984" "George Orwell" 1949
    ]

-- Initializing a list of books using the defined type alias

view : List Book -> Html.Html
view books =
    Html.div []
        [ Html.h1 [] [ Html.text "My Favorite Books" ]
        , Html.ul []
            (List.map (\book -> Html.li [] [ Html.text (book.title ++ " by " ++ book.author ++ " (" ++ toString book.year ++ ")") ]) books)
        ]

-- A function that takes a list of books and returns an HTML representation
-- containing a heading and an unordered list of books' titles, authors and years

main : Html.Html
main =
    Html.beginnerProgram { model = books, view = view, update = (\_ model -> (model, Debug.todo "No updates")) }

-- Main function that initializes our beginnerProgram with the defined model, view and an update function
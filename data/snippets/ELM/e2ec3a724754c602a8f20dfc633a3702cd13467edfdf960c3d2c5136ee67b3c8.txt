-- | Main program that generates a randomly colored square every second
module RandomSquare exposing (..)

import Html exposing (div, text)
import Time exposing (second)
import Random exposing (uniform, Generator)
import Color exposing (Color)
import List exposing (singleton)

-- | Represents the color state of our square
type alias ColorState = Color

-- | Update function for our color state
update : Time -> List Color -> (Model, Cmd Message)
update time colors =
  case time of
    1 ->
      let
        newColor =
          uniform 0 255 `Uniform.Apply` colors

        newModel =
          { color = newColor }
      in
      (newModel, Cmd.none)

    _ ->
      (model, Cmd.none)


-- | View function for our square
view : Model -> Html Msg
view model =
  div
    [ style
      [ ("backgroundColor", color model)
      ]
    ]
    [ text "" ]
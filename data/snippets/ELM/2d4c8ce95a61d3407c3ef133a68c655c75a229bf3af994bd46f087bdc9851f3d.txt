--| An example of a function that checks if a list is sorted in ascending order

module Main exposing (..)

--| List to check
list : List Int
list = [1, 3, 5, 7, 9]

--| Function that checks if list is sorted in ascending order
isSorted : List Int -> Bool
isSorted list =
    case list of
        [] ->
            True --| If list is empty, it is considered sorted

        number1 :: number2 :: rest ->
            if number1 > number2 then
                False --| If two consecutive numbers are not in ascending order, list is not sorted
            else
                isSorted (number2 :: rest) --| Recursively check remaining list

        _ ->
            True --| All other cases are considered sorted since Elm only has strict comparisons

--| Main function that calls isSorted function and prints result to console
main : Program () ()
main =
    let
        result =
            isSorted list --| Check if list is sorted using isSorted function
    in
    Html.text (toString result) --| Print result to console using built-in Html.text function
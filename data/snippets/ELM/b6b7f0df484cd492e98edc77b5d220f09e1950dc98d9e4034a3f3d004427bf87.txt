-- Represents a priority queue data structure
type Queue comparable =
    Empty
    | Queue comparable (List comparable)

-- Implements a function to insert an element into the priority queue
insert : comparable -> Queue comparable -> Queue comparable
insert x queue =
    case queue of
        Empty ->
            Queue x []

        Queue item remainder ->
            if x > item then
                Queue item (x :: remainder)
            else
                Queue x (item :: remainder)

-- Implements a function to remove the top element from the priority queue
pop : Queue comparable -> ( Maybe comparable, Queue comparable )
pop queue =
    case queue of
        Empty ->
            ( Nothing, Empty )
        Queue item remainder ->
            ( Just item, Queue.fromList remainder )
-- This is an example of an Elm function
sieve : List Int -> List Int -- This function takes in a list of integers and returns another list of integers
sieve numbers = -- This is the start of the function body
  List.filter (\x -> x `mod` 2 /= 0) numbers -- This uses the `List.filter` function to filter out all even numbers in the original list
  |> List.filter (\x -> x `mod` 3 /= 0) -- This then uses the `|>` operator to pass the output of the previous filter to another filter that removes numbers divisible by 3
  |> List.filter (\x -> x `mod` 5 /= 0) -- This is followed by another filter that removes numbers divisible by 5
  |> List.filter (\x -> x `mod` 7 /= 0) -- Finally, another filter is used to remove numbers divisible by 7, resulting in a list of only prime numbers
-- Generate a random color
import Dict
import Random

randomColor : Random.Generator (Dict.Dict String Int) 
randomColor =
    let
        rgba : Float -> Int
        rgba f = 
            case 
                <|
                    f
                        |> ( * ) 255.0
                        |> round

                of
                    256 ->
                        255

                    result ->
                        result
                        
        rangeColor : Random.Generator Float
        rangeColor =
            Random.float 0 1
    in
        Dict.fromList
            [ ("red", rgba rangeColor)
            , ("green", rgba rangeColor)
            , ("blue", rgba rangeColor)
            ]
-- This code snippet generates a random color by creating a generator that generates a dictionary containing three key-value pairs: "red", "green", and "blue". The values are generated by applying a function, rgba, to a random float between 0 and 1. The rgba function takes the float and rounds it to the nearest integer between 0 and 255. This ensures that the values for red, green, and blue are valid RGB values. The dictionary is then converted into an elm Dict type and returned as the final output of the randomColor function.
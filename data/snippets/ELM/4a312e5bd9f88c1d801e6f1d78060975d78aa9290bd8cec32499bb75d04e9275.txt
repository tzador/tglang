-- Type declaration for a binary tree
type Tree a
    = Empty
    | Node a (Tree a) (Tree a)

-- Helper function to insert a new element into a binary tree
insert : Ord a => a -> Tree a -> Tree a
insert x Empty =
    Node x Empty Empty
insert x node@(Node val left right) =
    if x < val then
        Node val (insert x left) right
    else if x > val then
        Node val left (insert x right)
    else
        node -- Element already exists in the tree, return the original tree

-- Helper function to check if an element exists in a binary tree
exists : Ord a => a -> Tree a -> Bool
exists x Empty =
    False
exists x (Node val left right) =
    if x == val then
        True
    else if x < val then
        exists x left
    else
        exists x right

-- Example usage
tree : Tree Int
tree =
    insert 5 (insert 3 (insert 7 (insert 2 Empty)))

-- Check if the element 2 exists in the tree
exists 2 tree -- Output: True
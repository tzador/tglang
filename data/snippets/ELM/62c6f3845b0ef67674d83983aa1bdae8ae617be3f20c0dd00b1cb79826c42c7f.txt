type alias Person = -- defining a custom type alias
    { name : String
    , age : Int
    , address : List String
    }

person1 : Person   -- declaring a person of type Person
person1 =          -- assigning values to the fields of the person
    { name = "John"
    , age = 30
    , address = ["123 Main Street", "New York City"] -- using list syntax
    }
    
person2 : Person   -- declaring another person of type Person
person2 =
    { name = "Jane"
    , age = 28
    , address = ["456 1st Avenue", "New York City"]
    }
    
fullName : Person -> String   -- defining a function that takes in a person and returns their full name
fullName person =              -- pattern matching to access the name field of the person record
    case person of             -- using case expression to handle the different name values for different people
        { name } -> name       -- returning the name field of the person
        
-- example usage:
fullName person1 -- returns "John"
fullName person2 -- returns "Jane"
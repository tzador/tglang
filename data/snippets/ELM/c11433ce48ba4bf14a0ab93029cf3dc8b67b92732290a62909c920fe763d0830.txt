{-| This function takes in a list of integers and returns a list of strings
    with the numbers formatted as currency.
   
Examples:
formatCurrency [100, 50, 25] == ["$100.00", "$50.00", "$25.00"]
formatCurrency [-50, 75, 125] == ["($50.00)", "$75.00", "$125.00"]

-}
module CurrencyFormatter exposing (formatCurrency)

import String exposing (fromFloat)
import List exposing (map)

{-| A custom type for representing currency symbols
-}
type CurrencySymbol
    = Dollar
    | Euro
    | Yen

{-| A function that takes in a currency symbol and a number and formats it
    as a string with the appropriate symbol
-}
formatNumber : CurrencySymbol -> Float -> String
formatNumber symbol number =
    case symbol of
        Dollar ->
            "$" ++ fromFloat number

        Euro ->
            "€" ++ fromFloat number

        Yen ->
            "¥" ++ fromFloat number

{-| A function that takes in a list of integers and returns a list of strings
    with the numbers formatted as currency using the Dollar symbol
-}
formatCurrency : List Int -> List String
formatCurrency numbers =
    numbers
        |> map (\num -> formatNumber Dollar (toFloat num))
        |> List.map (fromFloat >> (\str -> formatNumber Dollar str))
        |> List.map (fromFloat >> (\str -> formatNumber Dollar str))
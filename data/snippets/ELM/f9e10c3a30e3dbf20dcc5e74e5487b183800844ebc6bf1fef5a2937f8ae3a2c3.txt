-- This is a complex code snippet in ELM
-- It creates a function that checks if a number is a multiple of 3 or 5
-- and returns a string based on the number's divisibility

-- Start of function definition
multipleCheck : Int -> String
multipleCheck num =
    let
        -- Check for divisibility by 3
        divByThree = num % 3 == 0

        -- Check for divisibility by 5
        divByFive = num % 5 == 0

        -- Check for divisibility by both 3 and 5
        bothDiv = divByThree && divByFive
    in
    -- Use pattern matching to return the appropriate string
    case (divByThree, divByFive) of
        (True, True) ->
            "Multiple of both 3 and 5"

        (True, False) ->
            "Multiple of 3 only"

        (False, True) ->
            "Multiple of 5 only"

        (False, False) ->
            "Not a multiple of 3 or 5"
-- End of function definition

-- Example function call
multipleCheck 15
-- Output: "Multiple of both 3 and 5"
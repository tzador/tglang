type alias User = { name : String, age : Int, isActive : Bool }  -- defines a new type called 'User' with three fields: name, age, and isActive

users : List User  -- declares a list (array) of the User type

users =
  [ { name = "John", age = 25, isActive = True }  -- adds a new User to the list with values for each field
  , { name = "Jane", age = 30, isActive = True }
  , { name = "Joe", age = 20, isActive = False }
  ]

main = 
  case users of  -- a case expression to pattern match on the list of users
    [] -> "No users"
    (user :: users) -> "The first user in the list is " ++ user.name  -- if the list is not empty, bind the first user to 'user' and return a string with their name
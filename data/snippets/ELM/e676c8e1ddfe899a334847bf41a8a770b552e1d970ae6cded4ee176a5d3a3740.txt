-- This code snippet lets you generate a list of Fibonacci numbers
-- List indices start at 0

-- Get the nth element from a list
nth : List a -> Int -> a
nth list index = 
    List.head <| List.drop index list

-- Calculate the nth Fibonacci number
fibonacci : Int -> Int
fibonacci n =
    if n == 0 || n == 1 then
        n
    else
        let
            previous = nth fibs (n - 1)
            current = nth fibs (n - 2)
        in
            previous + current
            
-- Generate a list of Fibonacci numbers using recursion
fibs : List Int
fibs =
    let
        helper : Int -> List Int -> List Int
        helper n list =
            if n == 0 then
                list
            else
                helper (n - 1) (list ++ [fibonacci n])
    in
        helper 10 [0, 1]
        
-- Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
-- An example of a complex ELM record type, representing a user
type alias User = 
    { firstName: String
    , lastName: String
    , email: String
    , age: Int
    , address: Address
    , phoneNumber: Maybe String
    , interests: List String
    , paymentInfo: Maybe Payment
    }

-- A custom type to represent a user's address
type alias Address =
    { street: String
    , city: String
    , state: String
    , postalCode: String
    }

-- A custom type to represent a user's payment information
type alias Payment =
    { cardNumber: String
    , expirationDate: String
    , securityCode: Int
    , billingAddress: Address
    }

-- A function to add a new interest to a user's interests list
addInterest : String -> User -> User
addInterest newInterest user =
    { user | interests = newInterest :: user.interests }

-- A function to update a user's phone number
updatePhoneNumber : String -> User -> User
updatePhoneNumber newNumber user =
    case user.phoneNumber of 
        Just currentNumber -> 
            { user | phoneNumber = Just newNumber }
        Nothing -> 
            { user | phoneNumber = Just newNumber }
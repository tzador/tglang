module Main exposing (main)
{-|
This module serves as an entry point for the ELM application.
It initializes the ELM runtime and defines the main function.
-}

import Browser
import Html exposing (Html, div, text)

type Model = 
    Int

type Msg = 
    Increment 
    | Decrement 

type alias Params = 
    { title : String
    , description : String 
    }

init : Params -> (Model, Cmd Msg)
init params = 
    (0, Cmd.none)

view : Model -> Html Msg
view model = 
    div []
        [ Html.button [ onClick Decrement ] [ text "-" ]
        , Html.div [] [ text (toString model) ]
        , Html.button [ onClick Increment ] [ text "+" ]
        ]

update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
    case msg of 
        Increment -> (model + 1, Cmd.none)
        Decrement -> (model - 1, Cmd.none)

subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none

main : Program Params Model Msg
main = 
    Browser.element
        { init = init 
        , view = view 
        , update = update 
        , subscriptions = subscriptions 
        }
-- This code snippet generates a list of Fibonacci numbers up to the given count. --

-- First, we define a custom type for our `Fib` numbers. --
type Fib = Zero | One | Num Int

-- Next, we create a function that calculates `n`th Fibonacci number using recursion. --
fib : Int -> Fib
fib n =
    if n < 0 then
        Zero
    else if n == 0 then
        Zero
    else if n == 1 then
        One
    else
        fib (n-1) + fib (n-2)

-- Finally, we create a function that generates a list of `Fib` numbers up to `n` count. --
fibList : Int -> List Fib
fibList n =
    case n of
        0 -> []
        n -> fibList (n-1) ++ [fib n]
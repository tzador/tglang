type Book = { title : String, author : String, pages : Int } -- Creates a book type with three attributes: title, author, and pages

type alias Library = List Book -- Creates a library type as a list of books

emptyLibrary : Library -- Defines an empty library
emptyLibrary = []

addBook : Book -> Library -> Library -- Adds a book to a library
addBook book library =
  library ++ [book]

removeBook : String -> Library -> Library -- Removes a book from a library based on its title
removeBook title library =
  List.filter (\book -> book.title /= title) library

totalPages : Library -> Int -- Gets the total number of pages in a library
totalPages library =
  List.sum <| List.map .pages library

getBooksByAuthor : String -> Library -> Library -- Returns a list of books from a library written by a specific author
getBooksByAuthor author library =
  List.filter (\book -> book.author == author) library

main : Int -- Main function that returns the total number of pages in a library
main = 
  emptyLibrary
  |> addBook { title = "1984", author = "George Orwell", pages = 328 }
  |> addBook { title = "To Kill a Mockingbird", author = "Harper Lee", pages = 288 }
  |> addBook { title = "The Great Gatsby", author = "F. Scott Fitzgerald", pages = 180 }
  |> addBook { title = "Pride and Prejudice", author = "Jane Austen", pages = 279 }
  |> totalPages
  -}
  caveat: the output of this snippet may vary depending on the compiler used.
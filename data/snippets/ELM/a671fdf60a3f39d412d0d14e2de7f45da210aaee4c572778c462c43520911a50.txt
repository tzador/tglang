module Main exposing (..)

import Html exposing (..)
import Html.Attributes exposing (..)

type alias Person =
  { name : String
  , age : Int
  }

type Action
  = SetName String
  | SetAge Int

type alias Model =
  { people : List Person
  , newName : String
  , newAge : Int
  }

init : Model
init =
  { people = []
  , newName = ""
  , newAge = 0
  }

update : Action -> Model -> Model
update action model =
  case action of
    SetName name ->
      { model | newName = name }
    SetAge age ->
      { model | newAge = age }

view : Model -> Html Msg
view model =
  div []
    [ input
        [ placeholder "Enter Name"
        , onInput SetName
        ]
        []
    , input
        [ type_ "number"
        , placeholder "Enter Age"
        , onInput SetAge
        ]
        []
    , button
        [ onClick (AddPerson model.newName model.newAge) ]
        [ text "Add Person" ]
    , div []
        [ ul []
            (List.map personView model.people)
        ]
    ]

personView : Person -> Html Msg
personView person =
  li [] [ text (person.name ++ " - " ++ (toString person.age) ++ " years old") ]

subscriptions : Model -> Sub Msg
subscriptions model =
  Sub.none

main : Program () Model Action
main =
  Html.program
    { init = init
    , update = update
    , view = view
    , subscriptions = subscriptions
    }
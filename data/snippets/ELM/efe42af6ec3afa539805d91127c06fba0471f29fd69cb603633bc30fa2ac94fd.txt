module Main exposing (main)

import Browser
import Html exposing (Html, text, div, h1, a)
import Html.Events exposing (onClick)


-- This is a comment

-- | The main function of our program
main =
    Browser.element
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }


-- MODEL

-- | The model is simply an integer
type alias Model =
    Int


-- INIT

-- | Initialize the model to 0
init : () -> (Model, Cmd Msg)
init _ =
    (0, Cmd.none)


-- VIEW

-- | Display the current integer value and a button to increment it
view : Model -> Html Msg
view model =
    div []
        [ h1 [] [ text "The current value is " ]
        , div [] [ text (toString model) ]
        , a [ onClick Increment ] [ text "Increment" ]
        ]


-- UPDATE

-- | The possible actions that can be taken on the model
type Msg
    = Increment


-- | Update the model based on the action taken
update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
    case msg of
        Increment ->
            (model + 1, Cmd.none)


-- SUBSCRIPTIONS

-- | No subscriptions needed for this program
subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none
-- Initialization of a nested record
type alias NestedRecord =
    { name : String
    , age : Int
    , address : ResidenceInfo
    }


{- Implementation of a function to update the age of a person in the nested record -}
updateAge : String -> Int -> NestedRecord -> NestedRecord
updateAge newName newAge person =
    { person | age = newAge }


{- Declaration of a union type with multiple data constructors -}
type Gender
    = Male
    | Female
    | NonBinary

{- Declarations of custom types to represent a person's occupation and education level -}
type alias Occupation =
    { title : String
    , salary : Float
    }

type EducationLevel
    = HighSchool
    | Associates
    | Bachelors
    | Masters
    | Phd


{- Definition of a function that takes in a person's gender and occupation and returns their net worth -}
calculateNetWorth : Gender -> Occupation -> EducationLevel -> Float
calculateNetWorth gender occupation educationLevel =
    case gender of
        Male ->
            case educationLevel of
                HighSchool ->
                    50000 + occupation.salary * 0.5

                Associates ->
                    100000 + occupation.salary * 0.7

                Bachelors ->
                    if occupation.title == "CEO" then
                        1000000

                    else
                        450000 + occupation.salary

                Masters ->
                    200000 + occupation.salary * 1.2

                Phd ->
                    500000 + occupation.salary * 1.5

        Female ->
            case educationLevel of
                HighSchool ->
                    30000 + occupation.salary * 0.3

                Associates ->
                    80000 + occupation.salary * 0.4

                Bachelors ->
                    if occupation.title == "CEO" then
                        800000

                    else
                        400000 + occupation.salary

                Masters ->
                    150000 + occupation.salary * 1.1

                Phd ->
                    400000 + occupation.salary * 1.3

        NonBinary ->
            case educationLevel of
                HighSchool ->
                    40000 + occupation.salary * 0.4

                Associates ->
                    90000 + occupation.salary * 0.5

                Bachelors ->
                    if occupation.title == "CEO" then
                        900000

                    else
                        500000 + occupation.salary

                Masters ->
                    180000 + occupation.salary * 1.15

                Phd ->
                    450000 + occupation.salary * 1.35
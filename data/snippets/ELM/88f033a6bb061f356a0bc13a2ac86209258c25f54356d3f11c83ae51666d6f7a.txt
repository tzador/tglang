module Main exposing (main)
-- This is a comment in ELM

{-|
  This is a multi-line comment in ELM
-}

{-| This function takes in a list of integers and
    returns the sum of the squares of those integers. -}
squareSum : List Int -> Int
squareSum numbers =
  numbers
    |> List.map (\n -> n * n)
    |> List.sum     

{-| This function checks if a given string is a palindrome. -}
isPalindrome : String -> Bool
isPalindrome input =
  input
    |> String.toList
    |> List.reverse
    |> String.fromList
    |> (\str -> input == str)


-- This is the main function that starts the program
main : Program () ()
main =
  let
    numbers = [1, 2, 3, 4, 5]
    palindrome = "racecar"
  in
    squareSum numbers
    |> Debug.log "Sum of squares"
    |> (==) 55
    |> Debug.log "Is correct"
    |> (\res -> isPalindrome palindrome)
    |> Debug.log "Is palindrome"
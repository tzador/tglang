{-| Function that takes in a number and returns its factorial
-}
factorial : Int -> Int
factorial n =
  if n < 0 then
    -1
  else if n == 0 then
    1
  else
    n * factorial (n-1)

main : Program () Model Msg
main =
  program
    { init = init
    , view = view
    , update = update
    , subscriptions = subscriptions
    }

{-| Function that initializes the model with default values
-}
init : () -> ( Model, Cmd Msg )
init _ =
  ( Model 0, Cmd.none )

{-| Function that defines the model
-}
type alias Model =
  Int

{-| Function that defines possible messages
-}
type Msg
  = Increment
  | Decrement

{-| Function that defines the view
-}
view : Model -> Html Msg
view model =
  div
    []
    [ button [ onClick Decrement ] [ text "-" ]
    , div [] [ text (toString model) ]
    , button [ onClick Increment ] [ text "+" ]
    ]

{-| Function that updates the model based on the received message
-}
update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
  case msg of
    Increment ->
      ( model + 1, Cmd.none )
    Decrement ->
      ( model - 1, Cmd.none )

{-| Function that defines subscriptions
-}
subscriptions : Model -> Sub Msg
subscriptions model =
  Sub.none
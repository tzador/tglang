-- Define a custom type to represent a list of players
type alias PlayerList =
    List String


-- Function to determine the total score of a player in a given game
calculateScore : String -> Int
calculateScore player =
    let
        scores = [10, 25, 30, 15] -- Static list of scores for each round
        playerScore = List.indexedMap (\index score -> score * (index + 1)) scores
        -- Multiply each score by its corresponding round number and sum them up
    in
        List.foldl (+) 0 playerScore


-- Function to calculate the average score of all players in a given list
calculateAverage : PlayerList -> Float
calculateAverage players =
    let
        totalScores = List.map calculateScore players
        -- Calculate total score for each player in the list
        totalScore = List.foldl (+) 0 totalScores -- Sum up the total scores
        averageScore = Float.toFloat totalScore / List.length players -- Calculate average
    in
        averageScore


-- Example usage
players = ["John", "Jane", "Tom", "Emily"]
averageScore = calculateAverage players
-- Output: 23.25 (calculated from [50, 75, 60, 45])
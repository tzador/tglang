import Html exposing (..)
import Time exposing (every, Time)

counter : Int -> Html
counter start =
    div []
        [ button [ onClick Decrement ] [ text "-" ]
        , div [] [ text (toString start) ]
        , button [ onClick Increment ] [ text "+" ]
        ]


main =
    program
        { init = ( 0, Cmd.none )
        , view = counter
        , update = update
        , subscriptions = subscriptions
        }

type Msg = Increment | Decrement | Tick Time


update : Msg -> Int -> ( Int, Cmd Msg )
update msg model =
    case msg of
        Increment ->
            ( model + 1, Time.every Time.second Tick )

        Decrement ->
            ( model - 1, Cmd.none )

        Tick time ->
            ( model, Cmd.none )


subscriptions : Int -> Sub Msg
subscriptions model =
    Sub.none
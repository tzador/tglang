-- This is an example of a complex function in Elm
\
-- Function takes in two arguments, x and y, both Integers
function : Int -> Int -> Int
function x y =
  let
    -- Creates a list of all odd numbers between x and y
    oddsList =
      List.filter (\n -> n % 2 == 1) [x..y]

    -- Creates a list of all even numbers between x and y
    evensList =
      List.filter (\n -> n % 2 == 0) [x..y]

    -- Adds all odd numbers together
    oddsSum =
      List.foldl (+) 0 oddsList

    -- Adds all even numbers together
    evensSum =
      List.foldl (+) 0 evensList

    -- Calculates the difference between the sums of odd and even numbers
    difference =
      oddsSum - evensSum
  in
    -- Returns the difference
    difference
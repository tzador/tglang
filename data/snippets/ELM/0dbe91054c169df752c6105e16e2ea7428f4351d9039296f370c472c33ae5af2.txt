-- Define a custom type called 'Tree' with two possible values: 'Leaf' and 'Node'
type Tree
    = Leaf
    | Node Int (List Tree)

{-|
Define a function called 'sumTree' that takes in a Tree and calculates the sum of all its values.
@param tree: The tree to calculate the sum of
@return: The sum of all values in the tree
-}
sumTree : Tree -> Int
sumTree tree =
    case tree of
        Leaf ->
            0

        (Node value children) ->
            value + List.sum (List.map sumTree children)
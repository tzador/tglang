-- | A custom type for a student, it contains their name, age, and course
type alias Student =
  { name : String
  , age : Int
  , course : String
  }
  
-- | A function that takes a list of students and returns a list of their names and ages as a tuple
getNamesAndAges : List Student -> List (String, Int)
getNamesAndAges students =
  List.map (\student -> (student.name, student.age)) students
  
-- | A list of 3 students
students : List Student
students =
  [ { name = "John Doe", age = 21, course = "Computer Science" }
  , { name = "Jane Smith", age = 19, course = "Mathematics" }
  , { name = "Bob Johnson", age = 20, course = "English" }
  ]
  
-- | A function that calculates the average age of the students
getAverageAge : List Student -> Float
getAverageAge students =
  let
    totalAge =
      List.sum (List.map .age students)
    totalCount =
      List.length students
  in
    toFloat totalAge / toFloat totalCount
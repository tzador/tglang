-- This is a function that checks if a given number is prime or not
-- Takes in an integer and returns a boolean value
isPrime : Int -> Bool
isPrime num =
  let
    -- This function checks if a number is divisible by any number from 2 to its square root
    -- Takes in an integer and returns a boolean value
    isDivisibleByAny : Int -> Bool
    isDivisibleByAny x =
      let
        -- This function generates a list of numbers from 2 to the square root of the given number
        -- Takes in an integer and returns a list of integers
        genRange : Int -> List Int
        genRange n =
          List.range 2 (floor (sqrt (toFloat n)))
      in
      -- This checks if the given number is divisible by any number in the generated list
      List.any (\y -> x % y == 0) (genRange x)
  in
  -- Checks if the given number is greater than 1 and not divisible by any number
  (num > 1) && (not (isDivisibleByAny num))
-- This is a complex code snippet in ELM

import Html exposing (div, text, button, ul, li)
import Html.Attributes exposing (style, onClick)

type alias Model =
    { count : Int }

type Msg
    = Increment
    | Decrement

init : Model
init =
    { count = 0 }

update : Msg -> Model -> Model
update msg model =
    case msg of
        Increment ->
            { model | count = model.count + 1 }

        Decrement ->
            { model | count = model.count - 1 }

view : Model -> Html Msg
view model =
    div []
        [ div [ style "font-size: 24px;" ]
            [ text ("Current Count: " ++ toString model.count) ]

        , div []
            [ button [ onClick Decrement ] [ text "-" ]
            , button [ onClick Increment ] [ text "+" ]
            ]
        
        , ul []
            [ li [] [ text "List Item 1" ]
            , li [] [ text "List Item 2" ]
            , li [] [ text "List Item 3" ]
            ]
        ]

main : Program () Model Msg
main =
    Html.program
        { init = init
        , update = update
        , view = view
        }
-- This is a function that takes in two lists and returns the sum of the common elements. 
commonSum : List Int -> List Int -> Int
commonSum xs ys =
    let
        -- This is a helper function that checks if an element is in a given list or not.
        checkElem : Int -> List Int -> Bool
        checkElem x lst =
            case lst of
                [] -> False
                y :: ys ->
                    if x == y then
                        True
                    else
                        checkElem x ys
    in
        -- This is a list comprehension that checks for common elements and returns their sum.
        sum (for x in xs 
             for y in ys 
             if checkElem x ys 
             if x == y 
             -> x)
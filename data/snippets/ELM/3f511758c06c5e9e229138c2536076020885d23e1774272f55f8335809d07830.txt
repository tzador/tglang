-- This function takes a list of integers and returns their sum
sum : List Int -> Int
sum nums =
  List.foldl (+) 0 nums

{-|
  This function takes two integers and returns a list of all the even numbers
  between them (inclusive).
-}
evens : Int -> Int -> List Int
evens start end =
  let
    range = List.range start (end + 1)
    evens = List.filter isEven range
  in
  evens

{-|
  This function takes a list of strings and returns a new list with all the
  strings concatenated together.
-}
concatenate : List String -> String
concatenate strs =
  strs
    |> List.map (\str -> str ++ "Hello")
    |> String.concat " "
    |> (\result -> "Goodbye " ++ result)
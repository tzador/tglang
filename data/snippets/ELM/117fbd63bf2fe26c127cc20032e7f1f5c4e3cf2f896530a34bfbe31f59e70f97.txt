-- This code snippet demonstrates the usage of the case expression in ELM.
-- A case expression allows us to match patterns and execute corresponding branches of code.
-- In this example, we have a function that takes in a number and returns its corresponding word in
-- a list of words, depending on its value.
numToWord : Int -> String
numToWord num =
    case num of
        1 ->
            "one"

        2 ->
            "two"

        3 ->
            "three"

        4 ->
            "four"

        _ ->
            "unknown"

-- Here, we are calling the function with different numbers to test its functionality.
-- The output should be "one", "two", "three", "four", and "unknown" respectively.
numToWord 1 -- "one"
numToWord 2 -- "two"
numToWord 3 -- "three"
numToWord 4 -- "four"
numToWord 5 -- "unknown"
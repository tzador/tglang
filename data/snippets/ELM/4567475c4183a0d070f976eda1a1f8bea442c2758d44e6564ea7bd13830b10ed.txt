-- | Function to reverse a list
reverse : List a -> List a
reverse list =
    case list of
        [] ->
            []

        x :: xs ->
            (reverse xs) ++ [x]

-- | Function to merge two lists
merge : List a -> List a -> List a
merge list1 list2 =
    case (list1, list2) of
        ([], _) ->
            list2

        (_, []) ->
            list1

        (x :: xs, y :: ys) ->
            if x < y then
                x :: merge xs list2
            else
                y :: merge list1 ys

-- | Function to sort a list using merge sort algorithm
mergeSort : List a -> List a
mergeSort list =
    let
        len = length list
    in
        if len <= 1 then
            list
        else
            let
                half = len // 2
                left = List.slice 0 half list
                right = List.slice half len list
            in
                merge (mergeSort left) (mergeSort right)
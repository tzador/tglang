-- Create a custom type 'Item' with different options
type Item
    = Food Int String
    | Drink Int String Char
    | Clothing String Char Int

-- Create a function that takes in an 'Item' and returns a String
itemToString : Item -> String
itemToString item =
    case item of
        -- Pattern match on different options of 'Item'
        Food calories name ->
            "This food item contains " ++ (toString calories) ++ " calories and is named " ++ name
        Drink price name temperature ->
            "This drink item costs $" ++ (toString price) ++ " and is a " ++ name ++ " that is served " ++ (toString temperature)
        Clothing type size price ->
            "This item of clothing is a " ++ size ++ " sized " ++ type ++ " that costs $" ++ (toString price)
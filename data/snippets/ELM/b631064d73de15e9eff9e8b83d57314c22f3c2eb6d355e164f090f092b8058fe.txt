-- Function to filter a list based on a predicate function
filter : (a -> Bool) -> List a -> List a
filter predicate list =
  case list of
    [] ->
      []

    x :: xs ->
      if predicate x then
        x :: filter predicate xs
      else
        filter predicate xs

-- Function to sum all the numbers in a given list
sum : List Int -> Int
sum list =
  case list of
    [] ->
      0

    x :: xs ->
      x + sum xs

-- Function to create a custom type called Shape
type Shape
  = Circle Float
  | Rectangle Float Float

-- Function to calculate the area of a given shape
area : Shape -> Float
area shape =
  case shape of
    Circle radius ->
      3.14 * radius * radius

    Rectangle length width ->
      length * width
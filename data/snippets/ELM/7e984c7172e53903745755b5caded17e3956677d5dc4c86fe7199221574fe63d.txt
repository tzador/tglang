-- Main function
main : Program () Model Msg
main =
    Html.program
        { init = init -- Initializes the program with initial Model
        , update = update -- Updates the Model based on Msg
        , subscriptions = subscriptions -- Handles any external events
        , view = view -- Renders the Model into Html
        }

-- Model type
type alias Model =
    { name : String
    , age : Int
    }

-- Msg type
type Msg
    = UpdateName String -- Message triggered when the name is updated
    | UpdateAge Int -- Message triggered when the age is updated

-- init function
init : () -> (Model, Cmd Msg)
init _ =
    ( Model "John" 30 -- Default values for the Model
    , Cmd.none
    )

-- update function
update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
    case msg of
        UpdateName newName ->
            ( { model | name = newName }, Cmd.none )
        
        UpdateAge newAge ->
            ( { model | age = newAge }, Cmd.none )

-- subscriptions function
subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none

-- view function
view : Model -> Html Msg
view model =
    div []
        [ p [] [ text ("Name: " ++ model.name) ]
        , p [] [ text ("Age: " ++ model.age) ]
        ]
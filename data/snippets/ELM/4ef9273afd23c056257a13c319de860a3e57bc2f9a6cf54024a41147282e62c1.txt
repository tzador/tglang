-- This is a comment in ELM
module ComplexExample exposing (MyType, myFunction)

{-| This is a multi-line comment in ELM
-}
-- Defining a custom type in ELM
type MyType
    = OptionOne Int
    | OptionTwo String
    | OptionThree Bool
    
{-| This function takes in a list of MyType values and returns a list of strings
-}
myFunction : List MyType -> List String
myFunction myTypes =
    List.map
        (\myType ->
            case myType of
                OptionOne num ->
                    "This value is an Int: " ++ toString num
                OptionTwo str ->
                    "This value is a String: " ++ str
                OptionThree bool ->
                    "This value is a Boolean: " ++ toString bool
        )
        myTypes
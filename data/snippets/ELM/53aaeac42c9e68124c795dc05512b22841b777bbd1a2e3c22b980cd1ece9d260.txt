-- This is a function that calculates the nth Fibonacci number
fibonacci : Int -> Int
fibonacci n =
    if n < 2 then
        n

    else
        fibonacci (n - 1) + fibonacci (n - 2)


{-| This is a function that returns the sum of the first n numbers in a list
    Example:
        sumFirstN [1,2,3,4] -> 10
        sumFirstN [4,3,2,1] -> 10
        sumFirstN [5,3,1] -> 9

-}
sumFirstN: List Int -> Int
sumFirstN list =
    case list of
        [] ->
            0

        x :: rest ->
            x + sumFirstN rest


{-| This is a customized type that represents a 2D point
    with x-y coordinates
-}
type alias Point =
    { x : Int
    , y : Int
    }


{-| This is a function that calculates the distance between two points
    Parameters:
        p1 -> the first point
        p2 -> the second point
    Output:
        the distance between the two points in floating point number
-}
distance : Point -> Point -> Float
distance p1 p2 =
    let
        xDist =
            abs (toFloat (p1.x - p2.x))

        yDist =
            abs (toFloat (p1.y - p2.y))
    in
    sqrt (xDist^2 + yDist^2)
-- This function takes in a list and returns a new list with every element multiplied by 2
mapByTwo : List Int -> List Int
mapByTwo xs =
    List.map (\x -> x * 2) xs
     
main: Program () Model Msg
main =
     Platform.program
         { init = init
         , update = update
         , subscriptions = subscriptions
         , view = view
         }
        
type alias Model =
     { numbers : List Int
     }

type Msg
     = DoubleList

init : () -> (Model, Cmd Msg)
init _ =
     ( Model [1,2,3,4,5], Cmd.none )
        
update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
     case msg of
         DoubleList ->
             let
                newNumbers = mapByTwo model.numbers
             in
                ({ model | numbers = newNumbers }, Cmd.none)
            
view : Model -> Html Msg
view model =
    div [] [ text (Debug.toString model.numbers) ]
    
subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none
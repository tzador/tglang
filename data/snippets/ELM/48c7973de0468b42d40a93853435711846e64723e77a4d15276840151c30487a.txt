-- Define a data type 'Shape' to represent different geometric shapes  
type Shape 
    = Rectangle Float Float     -- Rectangle takes two Floats as parameters for width and height
    | Circle Float              -- Circle takes a single Float as a parameter for radius
    | Triangle Float Float      -- Triangle takes two Floats as parameters for base and height 
    | Square Float              -- Square takes a single Float as a parameter for side length

-- Define a function to calculate the area of a circle given its radius 
areaOfCircle : Float -> Float 
areaOfCircle radius = 3.14159 * radius^2 

-- Define a function to calculate the area of a rectangle given its width and height 
areaOfRectangle : Float -> Float -> Float 
areaOfRectangle width height = width * height 

-- Define a function to calculate the area of a triangle given its base and height 
areaOfTriangle : Float -> Float -> Float 
areaOfTriangle base height = (base * height) / 2 

-- Define a function to calculate the area of a square given its side length 
areaOfSquare : Float -> Float 
areaOfSquare side = side * side 

-- Define a function to calculate the total area of a list of shapes 
totalArea : List Shape -> Float 
totalArea shapes = 
    case shapes of 
        [] -> 0 
        (shape :: rest) -> case shape of 
            Rectangle width height -> areaOfRectangle width height + totalArea rest 
            Circle radius -> areaOfCircle radius + totalArea rest 
            Triangle base height -> areaOfTriangle base height + totalArea rest 
            Square side -> areaOfSquare side + totalArea rest
{-| This function takes in a list of strings and flattens it into a single string
and removes all whitespace characters.
This implementation uses an accumulator to continuously build the flattened string
as it recursively traverses the list.
-}
flattenStrings : List String -> String
flattenStrings listOfStrings =
    flattenStringsAcc listOfStrings ""

{-| Helper function that takes in a list of strings and an accumulator and returns
the flattened string.
-}
flattenStringsAcc : List String -> String -> String
flattenStringsAcc listOfStrings acc =
    case listOfStrings of
        [] ->
            acc

        current :: rest ->
            flattenStringsAcc rest (acc ++ removeWhitespace current)

{-| Helper function that removes all whitespace characters from a string. -}
removeWhitespace : String -> String
removeWhitespace string =
    String.trim string
    |> String.replace " " ""
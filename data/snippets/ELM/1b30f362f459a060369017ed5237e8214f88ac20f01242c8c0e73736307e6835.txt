-- This function takes in a list of integers and returns the sum of the squares of all the even numbers in the list

-- Define the function
sumEvenSquares : List Int -> Int

-- Set the base case for an empty list
sumEvenSquares [] = 0

-- Calculate the sum of squares for each element in the list
-- Filter out all the odd numbers using the modulus operator
-- Use the map function to square each element in the filtered list
-- Finally, use the foldl function to sum up all the squared numbers
sumEvenSquares xs =
  let
    evenNumbers = xs |> List.filter (\x -> x % 2 == 0)
    squaredNumbers = evenNumbers |> List.map (\x -> x * x)
  in
    List.foldl (+) 0 squaredNumbers
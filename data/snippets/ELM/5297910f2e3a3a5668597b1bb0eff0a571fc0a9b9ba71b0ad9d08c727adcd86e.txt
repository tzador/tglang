-- Simple counter using the Elm Architecture

-- Import necessary libraries
import Html exposing (Html, button, div, text)
import Html.Events exposing (onClick)
import Html.Attributes exposing (style)

-- Model
type alias Model = 
  { count : Int }

-- Init function that initializes the model with an initial value of 0
init : Model
init = 
  { count = 0 }

-- Msg type that defines different types of user interactions
type Msg 
  = Increment
  | Decrement

-- Update function that handles the different messages
update : Msg -> Model -> Model
update msg model =
  case msg of
    Increment ->
      { model | count = model.count + 1 }
    
    Decrement ->
      { model | count = model.count - 1 }

-- View function that renders the HTML
view : Model -> Html Msg
view model =
  div []
    [ button [ onClick Increment, style "margin-right: 10px" ] [ text "+" ]
    , div [ style "margin-right: 10px" ] [ text (String.fromInt model.count) ]
    , button [ onClick Decrement ] [ text "-" ]
    ]

-- Main function that runs the application
main : Program Never Model Msg
main =
  Html.beginnerProgram
    { model = init
    , view = view
    , update = update
    }
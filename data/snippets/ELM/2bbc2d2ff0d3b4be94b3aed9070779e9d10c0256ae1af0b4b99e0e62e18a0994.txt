-- This function uses recursion to calculate the factorial of a given number --
factorial : Int -> Int
factorial n =
    if n == 0
    then 1
    else n * factorial (n-1)

-- Definition of the main function --
main : List Int -> List Int
main list =
    let
        -- Using the 'List.map' function to apply the factorial function to the elements in the list --
        newList = List.map factorial list
    in
        -- Using pattern matching to handle different cases of the list --
        case newList of
            [] ->
                -- If the list is empty, return an empty list --
                []

            _ :: tail ->
                -- If the list is not empty, append the first element of the list to the factorial of the rest of the list and recursively call the main function with the new list --
                factorial (List.head tail) :: main (List.tail tail)
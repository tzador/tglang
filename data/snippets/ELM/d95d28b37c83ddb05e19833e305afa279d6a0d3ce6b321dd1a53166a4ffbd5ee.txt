-- This is a simple recursive function that calculates the factorial of any given number

factorial : Int -> Int
factorial n =
    if n < 0 then
        error "Factorial undefined for negative numbers"
    else if n == 0 then
        1
    else
        n * factorial (n-1)

-- This function is a higher-order function that applies a given function to each element in a list

map : (a -> b) -> List a -> List b
map f xs =
    case xs of
        [] -> 
            []
        x :: rest ->
            f x :: map f rest
            
-- This function takes in a list of strings and returns the average length of all the strings

averageLength : List String -> Float
averageLength strings =
    let
        totalLength =
            List.foldl (\str acc -> acc + String.length str) 0 strings

        numStrings =
            List.length strings
    in
    if numStrings == 0 then
        0
    else
        toFloat totalLength / toFloat numStrings
main : Program () Model Msg
main =
    Browser.element
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }
        
type alias Model = 
    { count : Int 
    , message : String 
    , isEnabled : Bool 
    , items : List String 
    }
    
type Msg
    = Increment
    | Decrement
    | ChangeMessage String
    | ToggleEnabled
    | AddItem String 
    | RemoveItem String 
    | ClearItems 
    | NoOp
    
init : () -> (Model, Cmd Msg)
init _ =
    ( Model 0 "Hello!" True ["item1", "item2"], Cmd.none )
    
view : Model -> Html Msg
view model =
    div []
        [ h1 [] [text model.message]
        , p [] [text (toString model.count)] 
        , button [onClick Increment] [text "+"]
        , button [onClick Decrement] [text "-"]
        , input [onInput ChangeMessage, value model.message] [] 
        , input [onCheck ToggleEnabled, type_ "checkbox", checked model.isEnabled] [] 
        , ul [] (List.map viewItem model.items)
        ]
        
type Field = Name | Age | Email

type alias Form =
    { name : String
    , age : Int
    , email : String
    }

type Msg   
    = UpdateField Field String    
    | SubmitForm 

update : Msg -> Model -> (Model, Cmd Msg)
update msg model =
    case msg of
        Increment ->
            ( { model | count = model.count + 1 }, Cmd.none )

        Decrement ->
            ( { model | count = model.count - 1 }, Cmd.none )

        ChangeMessage newMessage ->
            ( { model | message = newMessage }, Cmd.none )
            
        ToggleEnabled ->
            ( { model | isEnabled = not model.isEnabled }, Cmd.none )

        AddItem item ->
            ( { model | items = item :: model.items }, Cmd.none )

        RemoveItem item ->
            ( { model | items = List.filter (\i -> i /= item) model.items }, Cmd.none )
        
        ClearItems ->
            ( { model | items = [] }, Cmd.none )
            
        NoOp ->
            ( model, Cmd.none )

subscriptions : Model -> Sub Msg
subscriptions _ =
    Sub.none
    
viewItem : String -> Html Msg
viewItem item =
    li [][] [text item]
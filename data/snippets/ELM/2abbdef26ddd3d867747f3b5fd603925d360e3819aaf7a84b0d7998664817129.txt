-- This is an example of a function in Elm
-- This function takes in two integers and returns their sum
add : Int -> Int -> Int
add x y =
  x + y
  
-- Here we call the add function and pass in two integers
-- This will return the sum of the two integers
add 5 7
-- Output: 12

-- This is an example of a recursive function in Elm
-- This function calculates the factorial of a given number
-- It calls a helper function named "factorialHelper" to do the actual calculations
factorial : Int -> Int
factorial n =
  factorialHelper n 1

-- This helper function takes in two integers and recursively calculates the factorial
-- It keeps track of the current result (acc) and the remaining number (n)
factorialHelper : Int -> Int -> Int
factorialHelper n acc =
  if n <= 1 then
    acc
  else
    factorialHelper (n - 1) (acc * n)
    
-- Here we call the factorial function and pass in a number
-- This will return the factorial of that number
factorial 5
-- Output: 120
-- This is a comment in ELM


-- This function takes in a list of integers and returns the sum
sum : List Int -> Int
sum list =
    case list of
        [] -> 0
        x :: xs -> x + sum xs

-- This function creates a new type alias named 'Person'
type alias Person =
    { name : String
    , age : Int
    , occupation : String
    }


-- This function takes in a Person and returns a string based on their age and occupation
greet : Person -> String
greet person =
    case person.age of
        0 -> "Welcome, " ++ person.name ++ "! I see you are just starting your career as a " ++ person.occupation ++ ". Best of luck!"
        n -> "Greetings, " ++ person.name ++ "! As a " ++ String.fromInt(n) ++ "-year-old " ++ person.occupation ++ ", you are well on your way to success!"
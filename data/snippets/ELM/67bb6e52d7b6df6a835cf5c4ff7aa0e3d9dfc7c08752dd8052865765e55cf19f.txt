-- Function that maps an integer to its square root
squareRoot : Int -> Float
squareRoot x =
    let
        -- Define helper function to calculate the root using Newton's method
        newtonRaphson : Float -> Int -> Float -> Float
        newtonRaphson initial n x =
            if n <= 0 then
                -- Base case: return initial guess if n is less than or equal to 0
                initial
            else
                -- Recursive case: calculate new guess and pass it to next iteration
                newtonRaphson ((initial + (x / initial)) / 2) (n - 1) x
    in
        -- Call the helper function with initial guess of 1 and 10 iterations
        newtonRaphson 1 10 (toFloat x)

-- Output example: squareRoot 4 -> 2.0
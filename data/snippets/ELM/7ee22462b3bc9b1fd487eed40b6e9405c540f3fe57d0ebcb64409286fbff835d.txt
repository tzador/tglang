-- Define a custom Type alias
type alias Person =
  { name : String
  , age : Int
  , occupation : String
  }

-- Define a list of Person
people : List Person
people =
  [ Person "John" 25 "Developer"
  , Person "Mary" 30 "Graphic Designer"
  , Person "Mike" 40 "Manager"
  , Person "Sarah" 35 "Teacher"
  ]

-- Define a function to filter list of Person by age
olderThan30 : List Person -> List Person
olderThan30 people =
  List.filter (\person -> person.age > 30) people

-- Define a function to map list of Person to their names
getName : List Person -> List String
getName people =
  List.map (\person -> person.name) people

-- Define a function to concatenate two lists of strings
concat : List String -> List String -> List String
concat list1 list2 =
  List.append list1 list2

-- Use currying to create a function that filters and maps name
filterAndMap : Int -> List String
filterAndMap age =
  getName << olderThan30 << List.filter (\person -> person.age < age)
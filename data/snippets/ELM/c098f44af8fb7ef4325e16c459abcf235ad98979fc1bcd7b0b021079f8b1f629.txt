type User = { name:String, age:Int, email: String }  -- Creating a User type with fields for name, age, and email

users : List User   -- Declaring a list of users with the User type

users = [ { name = "John", age = 30, email = "john@email.com" }
        , { name = "Jane", age = 25, email = "jane@email.com" }
        , { name = "Mark", age = 40, email = "mark@email.com" }
        , { name = "Emily", age = 35, email = "emily@email.com" }
        ]  -- Initializing the list of users with four user objects

getAverageAge : List User -> Float  -- Defining a function to calculate the average age of users
getAverageAge users =
  let
    totalAge = List.sum <| List.map .age users   -- Calculating the total age of all users using List.sum and List.map
    totalUsers = List.length users               -- Calculating the total number of users using List.length
  in
    toFloat totalAge / toFloat totalUsers        -- Returning the average age as a Float, calculated by dividing the total age by the total number of users
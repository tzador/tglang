-- This is a comment line in ELM language
-- Declare a type alias for a list of integers
type alias IntList =
  List Int

-- This function takes in a list of integers and multiplies
-- each element by 2, returning a new list with the results
doubleList : IntList -> IntList
doubleList list =
  case list of
    [] ->
      []
    head :: tail ->
      (head * 2) :: doubleList tail

-- This is a helper function that checks if an integer is even
isEven : Int -> Bool
isEven num =
  num % 2 == 0

-- This function takes in a list of integers and filters out
-- all the even numbers, returning a new list with only the odd numbers remaining
filterEven : IntList -> IntList
filterEven list =
  case list of
    [] ->
      []
    head :: tail ->
      if isEven head then
        filterEven tail
      else
        head :: filterEven tail

-- Main function that combines the two functions above
main : IntList
main =
  let
    numbers = [1, 2, 3, 4, 5, 6, 7]
    doubles = doubleList numbers
    odds = filterEven doubles
  in
    odds -- result should be [1, 3, 5, 7]
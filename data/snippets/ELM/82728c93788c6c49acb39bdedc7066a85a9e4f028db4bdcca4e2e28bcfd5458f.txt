type User = { name: String, age: Int } -- defining a custom type 'User' with two fields

users : List User -- declaring a list of type 'User'

users = [ { name = "John", age = 28 }, { name = "Jane", age = 32 } ] -- populating our list with two 'User' records

userAges : List Int -- declaring a list of type 'Int' to hold user ages

userAges = List.map .age users -- using 'map' function to extract age from each record in 'users' and populate 'userAges' list

main : Html msg -- defining our main function to return HTML with our user data

main = div [] -- using 'div' function to create a HTML div element
    [ h1 [] "User List" -- using 'h1' function to create HTML header tag with the text "User List"
    , ul [] -- using 'ul' function to create HTML unordered list
        (List.map (\user -> li [] [ text (user.name ++ ", " ++ toString user.age) ]) users) -- using 'map' function to convert each 'User' record into a list item with their name and age
    , h2 [] "User Ages" -- using 'h2' function to create HTML header tag with the text "User Ages"
    , ul [] -- using 'ul' function to create HTML unordered list
        (List.map (\age -> li [] [ text (toString age) ]) userAges) -- using 'map' function to convert each age in 'userAges' into a list item
    ]
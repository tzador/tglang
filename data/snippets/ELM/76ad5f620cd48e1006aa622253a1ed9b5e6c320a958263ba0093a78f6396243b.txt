-- Define a custom type
type Suit
    = Hearts
    | Diamonds
    | Spades
    | Clubs

-- Define a custom type alias
type alias Card =
    { rank : Int
    , suit : Suit
    }

-- Define a function to check if a card is a face card
isFaceCard : Card -> Bool
isFaceCard card =
    card.rank > 10

-- Define a list of cards
cards : List Card
cards =
    [ Card { rank = 5, suit = Hearts }
    , Card { rank = 11, suit = Diamonds }
    , Card { rank = 1, suit = Spades }
    , Card { rank = 13, suit = Clubs }
    , Card { rank = 9, suit = Hearts }
    ]

-- Define a function to filter out face cards
filterFaceCards : List Card -> List Card
filterFaceCards cardList =
    List.filter isFaceCard cardList

-- Create a new list of only face cards
faceCards : List Card
faceCards =
    filterFaceCards cards

-- Define a function to print out the suit of a card
printSuit : Card -> String
printSuit card =
    case card.suit of
        Hearts ->
            "Hearts"
        Diamonds ->
            "Diamonds"
        Spades ->
            "Spades"
        Clubs ->
            "Clubs"

-- Use a list comprehension to print out the suits of the face cards
faceCardSuits : List String
faceCardSuits =
    [ printSuit card | card <- faceCards ]

-- Print the list of face card suits
faceCardSuits
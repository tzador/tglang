-- This code snippet is a function that takes in a list of numbers and returns the sum of all even numbers in the list

-- Define a function that takes in a list of integers and returns an integer
sumOfEvens : List Int -> Int

-- Set the base case for an empty list, the sum of no numbers is 0
sumOfEvens [] = 0

-- Set the recursive case for a list with at least one element
sumOfEvens (x::xs) =
    -- Use pattern matching to check if the first element in the list is even
    if x % 2 == 0 then
        -- If it is, add it to the sum of the remaining elements in the list
        x + sumOfEvens xs
    else
        -- If it's not even, ignore it and continue summing the remaining elements
        sumOfEvens xs

-- Example input and output
sumOfEvens [1,2,3,4,5] -- returns 6, since 2+4=6
sumOfEvens [2,4,6,8] -- returns 20, since 2+4+6+8=20
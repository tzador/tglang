{-| function to find the most common element in a list -}
mostCommon : List comparable -> Maybe comparable
mostCommon xs =
  {- Using Dict.fromListWith to count the frequency of each element in a list -}
  case Dict.fromListWith (+) (map (\x -> (x, 1)) xs) of
    {- If the Dictionary is empty, there is no most common element -}
    Dict.Empty ->
      Nothing

    {- If there is only one item in the Dictionary, it is the most common element -}
    Dict.Singleton _ item ->
      Just item

    {- Otherwise, find the highest frequency and return the corresponding element -}
    Dict.Always value _ dict ->
      Dict.foldl
        (\(key, freq) (currKey, currFreq) ->
          if freq > currFreq then
            (key, freq)

          else
            (currKey, currFreq)
        )
        (value, -1)
        dict
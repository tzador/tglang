module Main exposing (..)

import Html exposing (..)
import Html.Events exposing (..)
import List exposing (..)

{-| Example list containing integers
-}
myList : List Int
myList = [1, 2, 3, 4, 5]

{-| Function that takes in a list of integers and returns the sum of all even integers in the list
-}
sumEvenInts : List Int -> Int
sumEvenInts list =
    let
        {-| Helper function that checks if a number is even
        -}
        isEvenInt : Int -> Bool
        isEvenInt num =
            if num % 2 == 0 then
                True
            else
                False
    in
        {-| Fold function that iterates through the list and adds the even integers together
        -}
        List.foldl
            (\x acc ->
                if isEvenInt x then
                    x + acc
                else
                    acc
            )
            0
            list

main : Program () Model Msg
main =
    Html.program
        { init = (myList, Cmd.none)
        , update = \msg model -> (model, Cmd.none)
        , subscriptions = always Sub.none
        , view = \_ -> text (toString (sumEvenInts myList))
        }
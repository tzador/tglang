module Main exposing (..)

-- define a type alias Point to represent x and y coordinates
type alias Point =
    { x : Float
    , y : Float
    }

-- define a type alias Circle to represent a circle with a center point and radius
type alias Circle =
    { center : Point
    , radius : Float
    }

-- define a record of points representing the corners of a rectangle
points : { a : Point, b : Point, c : Point, d : Point }
points =
    { a = { x = 0, y = 0 }
    , b = { x = 10, y = 0 }
    , c = { x = 10, y = 10 }
    , d = { x = 0, y = 10 }
    }

-- calculate the distance between two points
distance : Point -> Point -> Float
distance point1 point2 =
    let
        dx = point1.x - point2.y
        dy = point1.y - point2.y
    in
    sqrt (dx * dx + dy * dy)

-- calculate the perimeter of a circle
circlePerimeter : Circle -> Float
circlePerimeter circle =
    2 * pi * circle.radius
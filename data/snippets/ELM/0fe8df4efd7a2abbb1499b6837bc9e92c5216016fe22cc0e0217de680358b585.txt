-- A complex example of generating a list with nested functions and pattern matching
listExample : List Int
listExample =
  let
    -- A function that returns the sum of two numbers
    add : Int -> Int -> Int
    add a b =
      a + b
  in
  let
    -- A recursive function that generates a list of squared numbers
    squareList : Int -> List Int
    squareList num =
      case num of
        0 ->
          []
        _ ->
          (num ^ 2) :: (squareList (num - 1))
  in
    List.map (\x -> add x 3) (squareList 5)
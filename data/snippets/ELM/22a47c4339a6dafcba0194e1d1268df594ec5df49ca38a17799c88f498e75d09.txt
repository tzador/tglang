-- This is a complex ELM code snippet

-- This function calculates the factorial of a number
factorial : Int -> Int
factorial n =
  if n == 0 then
    1
  else
    n * factorial (n - 1)

-- Define a custom type called 'Shape'
type Shape 
    = Rectangle Float Float  
    | Circle Float
  
-- Calculate the area of a shape
area : Shape -> Float
area shape =
    case shape of
        Rectangle width height ->
            width * height
        Circle radius ->
            pi * radius * radius

-- Create a list of shapes
shapes =
    [ Rectangle 2 4.5
    , Circle 3.2
    , Rectangle 5.5 7
    ]

-- Calculate the total area of all shapes
totalArea : List Shape -> Float
totalArea shapes =
    List.foldl (\shape acc ->
        area shape + acc
    ) 0 shapes

-- Print the total area of all shapes
main : String
main = 
    let 
        shapesArea =
            totalArea shapes
    in
        "Total area of shapes: " ++ toString shapesArea
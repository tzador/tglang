type alias User =
    { firstName : String
    , lastName : String
    , age : Int
    , loggedIn : Bool
    , email : String
    , phoneNumber : String
    }

type Msg
    = UserLoggedIn User
    | UserLoggedOut User

type alias State =
    { users : List User
    , currentUser : Maybe User
    }

initialModel : Model
initialModel =
    { users = [ User "John" "Doe" 30 True "johndoe@gmail.com" "123-456-7890"
              , User "Jane" "Smith" 28 False "janesmith@gmail.com" "987-654-3210" ]
    , currentUser = Nothing
    }

-- Function to update state based on messages
update : Msg -> State -> State
update msg state =
    case msg of
        UserLoggedIn user ->
            { state | users = state.users ++ [ user ], currentUser = Just user }

        UserLoggedOut user ->
            { state | users = List.filter ((/=) user) state.users, currentUser = Nothing }
-- | Define a type alias for a list of integers
 type alias IntList = List Int

-- | Define a record type with two fields
 type alias Person =
  { name : String
  , age : Int
  }

-- | Define a custom type
 type MyType
  = MyFirstConstructor
  | MySecondConstructor Int String

-- | Define a function that takes in an integer and returns its square
 square : Int -> Int
 square x =
  x * x

-- | Define a function that takes in a list of strings and returns their length
 lengths : List String -> Int
 lengths strings =
  List.length strings

-- | Define a function that takes in two integers and returns their sum
 sum : Int -> Int -> Int
 sum x y =
  x + y

-- | Define a function that takes in a list of booleans and returns their conjunction
 conjunction : List Bool -> Bool
 conjunction bools =
  List.foldl (&&) True bools

-- | Define a function that takes in two lists and appends the second list to the first
 append : List a -> List a -> List a
 append list1 list2 =
  list1 ++ list2
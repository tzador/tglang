``
type alias User = {
    id: Int,
    name: String,
    address: Address,
    account: Account,
    friends: List User,
    preferences: List Preference
}

type alias Address = {
    street: String,
    city: String,
    state: String,
    zip: Int,
    country: String
}

type alias Account = {
    email: String,
    username: String,
    password: String,
    verified: Bool,
    securityQuestion: String,
    securityAnswer: String
}

type alias Preference = {
    category: String,
    value: Bool
}

-- | A function to update a user's preferences based on a list of new preferences
updatePreferences : List Preference -> User -> User
updatePreferences newPrefs user =
    { user
        | preferences =
            List.foldl
                (\prefList newPref ->
                    if List.any (\pref -> pref.category == newPref.category) prefList then
                        List.map
                            (\pref ->
                                if pref.category == newPref.category then
                                    { pref | value = newPref.value }
                                else
                                    pref
                            )
                            prefList
                    else
                        newPref :: prefList
                )
                user.preferences
                newPrefs
    }
``
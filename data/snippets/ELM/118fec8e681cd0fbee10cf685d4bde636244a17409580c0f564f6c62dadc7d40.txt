-- This code snippet calculates the nth Fibonacci number using a recursive function

-- Define a recursive function to calculate the Fibonacci number
fibonacci : Int -> Int
fibonacci n =
  case n of
    0 -> 0
    1 -> 1
    _ -> fibonacci (n - 1) + fibonacci (n - 2)

-- Define a function to generate a list of Fibonacci numbers up to a given number
fibonacciList : Int -> List Int
fibonacciList n = List.range 0 n |> List.map fibonacci

-- Print the first 15 Fibonacci numbers using pattern matching and the fibonaccilist function
main : String
main =
  fibonacciList 15
  |> List.map
    (\n ->
      case n of
        0 -> "The 0th Fibonacci number is 0"
        1 -> "The 1st Fibonacci number is 1"
        2 -> "The 2nd Fibonacci number is 1"
        _ -> "The " ++ (toString n) ++ "th Fibonacci number is " ++ (toString (fibonacci n))
    )
  |> String.join "\n"

-- Output:

-- The 0th Fibonacci number is 0
-- The 1st Fibonacci number is 1
-- The 2nd Fibonacci number is 1
-- The 3rd Fibonacci number is 2
-- The 4th Fibonacci number is 3
-- The 5th Fibonacci number is 5
-- The 6th Fibonacci number is 8
-- The 7th Fibonacci number is 13
-- The 8th Fibonacci number is 21
-- The 9th Fibonacci number is 34
-- The 10th Fibonacci number is 55
-- The 11th Fibonacci number is 89
-- The 12th Fibonacci number is 144
-- The 13th Fibonacci number is 233
-- The 14th Fibonacci number is 377
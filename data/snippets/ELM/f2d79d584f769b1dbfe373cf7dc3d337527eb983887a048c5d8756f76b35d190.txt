-- The following code snippet is a recursive function that finds the smallest element in a list

findSmallest : List Int -> Int
findSmallest list =
    case list of
        [] ->
            0  -- if list is empty, return 0

        x :: xs ->
            if xs == []
                then x  -- if there is only one element in the list, return that element
                else
                    let smaller = findSmallest xs  -- find the smallest element in the rest of the list
                    in
                    if x < smaller
                        then x  -- if the first element is smaller, return it
                        else smaller  -- otherwise, return the smallest element found in the rest of the list

-- Example usage:
-- findSmallest [7, 2, 1, 9, 4, 6]  --> returns 1
-- findSmallest [3, 6, 8, 2, 5]  --> returns 2
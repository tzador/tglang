module Main exposing (..)
 
{-|
 This is a module comment
-}
 
{-|
 This is an example type alias
-}
type alias Person =
  { firstName : String
  , lastName : String
  , age : Int
  }
 
-- This is a function that takes in a list of people and returns
-- the average age of the group
calculateAverageAge : List Person -> Float
calculateAverageAge people =
  let
    totalAge =
      List.foldl (\person acc -> acc + toFloat person.age) 0 people
 
    averageAge =
      totalAge / toFloat (List.length people)
  in
    averageAge
 
-- This is a function that filters a list of people based on
-- their age
filterByAge : List Person -> Int -> List Person
filterByAge people age =
  List.filter (\person -> person.age > age) people
 
-- This is a main function that prints out the average age of a
-- group of people and the number of people above a given age
main : ()
main =
  let
    people =
      [ { firstName = "John", lastName = "Doe", age = 30 }
      , { firstName = "Jane", lastName = "Smith", age = 25 }
      , { firstName = "Bob", lastName = "Jones", age = 35 }
      ]
 
    averageAge =
      calculateAverageAge people
 
    peopleAboveThirty =
      filterByAge people 30
  in
    Html.text ("The average age is " ++
              toString averageAge ++
              ", and there are " ++
              toString (List.length peopleAboveThirty) ++
              " people above 30.")
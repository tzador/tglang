-- Define a custom type called "Language"
type Language
    = ELM
    | Haskell
    | Python
    | JavaScript
    | Java
    | C

-- Define a function that takes in a Language as input and returns a string
-- representing the code snippet for a "Hello World" program in that language
-- Note: This is not an exhaustive list of languages and their respective "Hello World" programs
helloWorldSnippet : Language -> String
helloWorldSnippet lang =
    case lang of
        ELM ->
            "-- Hello World program in ELM\n
            \main : Program ()\n
            \main =\n
            \    Html.text \"Hello World!\""

        Haskell ->
            "-- Hello World program in Haskell\n
            \main :: IO ()\n
            \main =\n
            \    putStrLn \"Hello World!\""

        Python ->
            "# Hello World program in Python\n
            \print(\"Hello World!\")"

        JavaScript ->
            "// Hello World program in JavaScript\n
            \console.log(\"Hello World!\");"

        Java ->
            "// Hello World program in Java\n
            \public class HelloWorld {\n
            \    public static void main(String[] args) {\n
            \        System.out.println(\"Hello World!\");\n
            \    }\n
            \}"

        C ->
            "// Hello World program in C\n
            \#include <stdio.h>\n
            \int main() {\n
            \    printf(\"Hello World!\\n\");\n
            \    return 0;\n
            \}"
-- A simple program that calculates the area of a circle --

-- Defining a type for the radius of the circle --
type Radius = Float

-- Defining a custom type for our program's message --
type Msg
    = RadiusChanged Float
    | CalculateArea

-- The model of our program, containing the current radius and area --
type alias Model =
    { radius : Float
    , area : Float
    }

-- The initial state of our model --
initialModel : Model
initialModel =
    { radius = 0
    , area = 0
    }

-- Updating the model based on the messages received --
update : Msg -> Model -> Model
update msg model =
    case msg of
        RadiusChanged newRadius ->
            { model | radius = newRadius }

        CalculateArea ->
            { model | area = calculateArea model }

-- The function that calculates the area of the circle --
calculateArea : Model -> Float
calculateArea model =
    let
        pi = 3.14159
    in
        pi * model.radius * model.radius

-- The view function, responsible for rendering the UI --
view : Model -> Html Msg
view model =
    div []
        [ input [ type_ "number", onInput RadiusChanged, value (toString model.radius) ] []
        , button [ onClick CalculateArea ] [ text "Calculate Area" ]
        , text [ text (toString model.area) ]
        ]
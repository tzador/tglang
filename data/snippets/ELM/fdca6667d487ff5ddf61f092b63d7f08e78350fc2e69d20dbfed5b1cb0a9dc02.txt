{- Tree data structure -}
type Tree a 
    = Empty 
    | Node a (Tree a) (Tree a)

{- Helper function to check if a binary tree is balanced -}
height : Tree a -> Int
height tree =
    case tree of
        Empty -> 0
        Node value left right ->
            let
                leftHeight = height left
                rightHeight = height right
            in
            max leftHeight rightHeight + 1

{- Function to check if a binary tree is balanced -}
isBalanced : Tree a -> Bool
isBalanced tree =
    case tree of
        Empty -> True 
        Node value left right ->
            let
                leftHeight = height left
                rightHeight = height right
                in
                if abs (leftHeight - rightHeight) > 1 then
                    False
                else
                    isBalanced left && isBalanced right
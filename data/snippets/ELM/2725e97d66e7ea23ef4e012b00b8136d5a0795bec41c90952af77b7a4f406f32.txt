-- Define a data type for a binary tree with three different types of nodes
type Tree a
  = Leaf
  | Node a (Tree a) (Tree a)
  | EmptyNode

-- Implement a function to check if a given tree is balanced (difference in height between left and right subtrees is not more than 1)
isBalanced : Tree a -> Bool
isBalanced tree =
  case tree of
    Leaf -> True
    Node value left right -> (abs (height left - height right)) <= 1 && isBalanced left && isBalanced right
    EmptyNode -> True
  where
    height : Tree a -> Int
    height tree =
      case tree of
        Leaf -> 0
        Node _ left right -> 1 + max (height left) (height right)
        EmptyNode -> 0
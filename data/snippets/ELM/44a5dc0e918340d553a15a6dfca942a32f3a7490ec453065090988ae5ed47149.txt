CloseOnA( models, messages ) =
  let
    model = if List.length models > 0 then List.head models else Nothing
    newModels = case model of
      Nothing -> models
      Just m ->
        let
          newModel = m
            |> updateValue messages
            |> updateName messages
            |> updateDate messages
        in
          newModel :: (models |> List.drop 1)
  in
    newModels

-- This function takes in a list of models and a list of messages, and returns a new list of models with the updated values according to the corresponding messages.
-- If there are no models present, the original list is returned.
-- If there is at least one model present, the first model is updated and added to the new list, while all other models are dropped from the original list.
-- This ensures that the output list has the same length as the input list.
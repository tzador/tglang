-- Define a custom type called 'Animal' with two fields, 'name' of type 'String' and 'species' of type 'String'
type alias Animal =
    { name : String
    , species : String
    }


-- Create a list of Animals of different species
animalsList : List Animal
animalsList =
    [ Animal "Bob" "Dog"
    , Animal "Whiskers" "Cat"
    , Animal "Sid" "Lizard"
    ]


-- Create a function called 'introduceAnimal' that takes in an Animal and returns a String
introduceAnimal : Animal -> String
introduceAnimal animal =
    "Hello, my name is " ++ animal.name ++ " and I am a " ++ animal.species ++ "!"


-- Map the 'introduceAnimal' function over the animalsList and store the result in a new list called 'introductions'
introductions : List String
introductions =
    List.map introduceAnimal animalsList


-- Create a function called 'printIntroductions' that takes in a list of Strings and prints each string
printIntroductions : List String -> ()
printIntroductions strings =
    List.map (\string -> Debug.log string) strings


-- Print the introductions list
printIntroductions introductions
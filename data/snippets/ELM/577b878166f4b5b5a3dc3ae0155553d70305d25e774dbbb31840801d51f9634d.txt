-- Function to calculate the nth Fibonacci number
fibonacci : Int -> Int
fibonacci n =
    if n < 2 then
        n
    else
        fibonacci (n-1) + fibonacci (n-2)

-- Calculate the first 20 Fibonacci numbers and store them in a list
fibonacciList : List Int
fibonacciList =
    List.map fibonacci [0 .. 19]

-- Function to check if a number is prime
isPrime : Int -> Bool
isPrime n =
    if n < 2 then
        False
    else
        let
            helper : Int -> Int -> Bool
            helper d c =
                if c == n then
                    True
                else if remainderBy c d == 0 then
                    False
                else
                    helper (d+1) c
        in
            helper 2 (n-1)

-- Find all prime numbers in the first 1000 Fibonacci numbers
primeFibonacci : List Int -> List Int
primeFibonacci list =
    List.filter isPrime list

-- Print the prime Fibonacci numbers
main : Program () ()
main =
    List.map
        (\n -> text (toString n))
        (primeFibonacci fibonacciList)
    |> beginnerProgram
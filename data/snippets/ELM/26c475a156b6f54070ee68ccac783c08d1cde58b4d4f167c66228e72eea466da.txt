{- This code snippet generates a list of Fibonacci numbers up to a given limit -}

module Main exposing (main)

import Html exposing (text)


{- Function to generate a list of Fibonacci numbers -}
fibList : Int -> List Int
fibList limit =
    case limit of
        0 ->
            []

        1 ->
            [1]

        _ ->
            let
                fibListHelper : Int -> List Int -> List Int
                fibListHelper n fibNumbers =
                    case n of
                        0 ->
                            fibNumbers

                        _ ->
                            let
                                nextNumber =
                                    List.sum (List.take 2 (List.reverse fibNumbers))
                                updatedFibNumbers =
                                    fibNumbers ++ [nextNumber]
                            in
                            fibListHelper (n - 1) updatedFibNumbers
            in
            fibListHelper (limit - 2) [1, 1]


{- Output the list of Fibonacci numbers up to a limit of 10 -}
main : Program () ()
main =
    text (toString (fibList 10))
-- Helper function to calculate the sum of a list of numbers
sumList : List Int -> Int
sumList numbers =
    case numbers of
        [] ->
            0

        (x :: xs) ->
            x + sumList xs

-- Function to calculate the factorial of a number using recursion
factorial : Int -> Int
factorial n =
    if n == 0 then
        1
    else
        n * factorial (n - 1)

-- Custom type for a person and their properties
type alias Person =
    { name : String
    , age : Int
    , occupation : String
    }

-- Dynamic type for a list of either strings or integers
type Dynamic
    = Str String
    | Int Int

-- Function to convert a dynamic list to a string list
convertToStringList : List Dynamic -> List String
convertToStringList dynamicList =
    case dynamicList of
        [] ->
            []

        (Str str :: xs) ->
            str :: convertToStringList xs

        (Int num :: xs) ->
            (toString num) :: convertToStringList xs
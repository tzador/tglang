-- This is a code snippet in AppleScript
on processFiles(filePathList)
   -- Create a new list to store processed files
   set processedFiles to {}
   
   -- Loop through each file path in the list
   repeat with filePath in filePathList
      -- Get the file name and extension from the file path
      set fileName to name of (info for filePath)
      set fileExtension to name extension of (info for filePath)
      
      -- Check if file already exists in processedFiles list
      if fileName & "." & fileExtension is in processedFiles then
         -- File has already been processed, no need to continue
         display dialog fileName & " has already been processed."
      else
         -- Add file to processedFiles list
         set end of processedFiles to fileName & "." & fileExtension
         
         -- Process the file
         if fileExtension is "txt" then
            -- Text file, read and display contents
            set fileContents to read file filePath
            display dialog fileContents
         else if fileExtension is "jpg" then
            -- JPG file, resize and save a thumbnail
            set fileRef to open for access file filePath with write permission
            set thumbPath to (get pathname of fileRef) & "/thumbnail_" & fileName & ".jpg"
            set thumbRef to open for access file thumbPath with write permission
            set fileInfo to info for file filePath
            set screenWidth to item 3 of item 1 of (size in fileInfo)
            set screenHeight to item 3 of item 2 of (size in fileInfo)
            set thumbWidth to screenWidth / 4
            set thumbHeight to screenHeight / 4
            tell application "Image Events"
               set thumbImage to open file filePath
               scale thumbImage to size thumbWidth by thumbHeight
               save thumbImage as JPEG in thumbRef
            end tell
            close access fileRef
            close access thumbRef
         else
            -- File type not supported, display error message
            display dialog "File type not supported."
         end if
      end if
   end repeat
end processFiles

-- Sample usage of the processFiles handler
set myFiles to {POSIX file "/Users/Username/Documents/text_file.txt", POSIX file "/Users/Username/Documents/image_file.jpg"}
processFiles(myFiles)
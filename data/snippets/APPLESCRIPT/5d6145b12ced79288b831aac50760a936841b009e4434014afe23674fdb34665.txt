--An AppleScript code snippet for finding prime numbers--

--Setting up initial variables--
set numList to {2, 3, 5, 7} --This list contains the first four prime numbers
set counter to 9 --Starting at 9 because 2, 3, 5, 7 are already in the list

--Defining the function to check for prime numbers--
on isPrime(n)
    set prime to true --Assume the number is prime to begin with
    set max to round (n ^ 0.5) rounding down --Finding the square root of the number for maximum checking
    repeat with i from 2 to max
        if n mod i = 0 then --If the number is divisible by any number other than 1 or itself, it is not prime
            set prime to false
            exit repeat
        end if
    end repeat
    return prime
end isPrime

--Checking for prime numbers and adding them to the list--
repeat until length of numList = 100 --This will loop until the list contains 100 prime numbers
    if isPrime(counter) is true then --If the number is prime, add it to the list
        set end of numList to counter
    end if
    set counter to counter + 2 --Only check odd numbers to save time
end repeat

--Printing the list of prime numbers--
repeat with i from 1 to length of numList
    log item i of numList
end repeat
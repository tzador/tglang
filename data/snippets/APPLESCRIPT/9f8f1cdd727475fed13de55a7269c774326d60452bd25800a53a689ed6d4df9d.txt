-- This is an AppleScript code snippet that generates a random password with specified length and complexity

-- Create a list of characters for each type of character (lowercase, uppercase, digits, special characters)
set lowercase to "abcdefghijklmnopqrstuvwxyz"
set uppercase to "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
set digits to "0123456789"
set special_characters to "!@#$%^&*()_+-=[]{}|;':\",./<>?"

-- Set up user prompts to specify desired password length and complexity
display dialog "Enter the desired password length:" default answer 12
set password_length to text returned of result
display dialog "Enter the desired password complexity (type 'weak', 'medium', or 'strong'):" default answer "strong"
set password_complexity to text returned of result

-- Create a variable to store the generated password
set generated_password to ""

-- Loop through the desired password length and randomly select a character of the specified complexity
repeat password_length times
	if password_complexity = "weak" then
		-- Weak complexity: only use lowercase letters
		set generated_password to generated_password & character (random number from 1 to length of lowercase) of lowercase
	else if password_complexity = "medium" then
		-- Medium complexity: randomly select between lowercase letters, uppercase letters, and digits
		set random_number to random number from 1 to 3
		if random_number = 1 then
			set generated_password to generated_password & character (random number from 1 to length of lowercase) of lowercase
		else if random_number = 2 then
			set generated_password to generated_password & character (random number from 1 to length of uppercase) of uppercase
		else
			set generated_password to generated_password & character (random number from 1 to length of digits) of digits
		end if
	else if password_complexity = "strong" then
		-- Strong complexity: use all types of characters
		set random_number to random number from 1 to 4
		if random_number = 1 then
			set generated_password to generated_password & character (random number from 1 to length of lowercase) of lowercase
		else if random_number = 2 then
			set generated_password to generated_password & character (random number from 1 to length of uppercase) of uppercase
		else if random_number = 3 then
			set generated_password to generated_password & character (random number from 1 to length of digits) of digits
		else
			set generated_password to generated_password & character (random number from 1 to length of special_characters) of special_characters
		end if
	end if
end repeat

-- Display the generated password to the user
display dialog "Your randomly generated password is:" & return & generated_password buttons {"OK"} default button 1 with icon note
`` `
-- This code snippet generates a random password and saves it in Keychain
set theCharacters to "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+[{]}\\|;:\"<,>.?/"
set maxLength to 12

-- Function that generates a random password with a given length
on generatePassword(withLength)
	set password to ""
	repeat with i from 1 to withLength
		set randomNum to random number from 1 to length of theCharacters
		set password to password & character randomNum of theCharacters
	end repeat
	return password
end generatePassword

-- Function that saves the generated password in Keychain
on savePassword(toItem, withPassword)
	if application "Keychain Access" is running then
		tell application "Keychain Access"
			set keychainName to item 1 of toItem
			set newKey to make new key with properties {name:keychainName, password:withPassword, account:"Generated Password"}
		end tell
	else
		tell application "Keychain Access"
			set keychainName to item 1 of toItem
			set newKey to make new keychain at (every keychain) with properties {name:keychainName}
			make new key with properties {name:keychainName, password:withPassword, account:"Generated Password"} at newKey
		end tell
	end if
end savePassword

set passwordLength to random number from 8 to maxLength
set generatedPassword to generatePassword(passwordLength)
savePassword("Generated Password", generatedPassword)
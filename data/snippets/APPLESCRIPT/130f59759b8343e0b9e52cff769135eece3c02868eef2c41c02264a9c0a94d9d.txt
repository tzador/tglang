-- Define a basic function in AppleScript to calculate the sum of two numbers
on sum(num1, num2)
	set result to num1 + num2 -- Create a variable to store the result
	return result
end sum -- End of function definition

-- Call the function and pass in two numbers to calculate their sum
set x to 5
set y to 10
sum(x, y) -- Output: 15

-- Loop through a list of numbers and print out their sum using the previously defined function
set numbers to {2, 5, 8, 10} -- Create a list of numbers
set total to 0 -- Variable to store the total sum
repeat with i in numbers -- Loop through the numbers in the list
	set total to sum(total, item i of numbers) -- Call the sum function and update the total
end repeat
log total -- Output: 25 (2+5+8+10)

-- Define a handler to calculate the power of a number using recursion
on power(base, exponent)
	if exponent = 0 then -- Base case: Any number raised to the power of 0 is 1
		return 1
	else if exponent < 0 then -- Negative exponent case: Raise the reciprocal of the base to the positive exponent
		return 1 / power(base, -(exponent))
	else -- Recursive case: Multiply the base by itself and decrement the exponent until it reaches 0
		return base * power(base, exponent - 1)
	end if
end power -- End of handler definition

-- Call the handler and pass in two numbers to calculate the power of the first number to the second number
set a to 2
set b to 3
power(a, b) -- Output: 8 (2^3)

-- Concatenate two strings using the built-in concatenation operator &
set str1 to "Hello"
set str2 to "World"
set result to str1 & " " & str2 -- Output: "Hello World"

-- Create a new folder on the desktop using the "do shell script" command
set newFolder to "New Folder"
set desktopPath to (path to desktop as text)
do shell script "mkdir " & quoted form of (POSIX path of desktopPath & newFolder) -- Output: The folder "New Folder" is created on the desktop
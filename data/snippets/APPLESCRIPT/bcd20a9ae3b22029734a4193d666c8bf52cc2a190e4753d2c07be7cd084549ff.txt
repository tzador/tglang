property tempList : {}

on createList(newList)
	set tempList to {}
	repeat with i in newList
		set tempList to tempList & {i}
	end repeat
end createList

on sortList()
	set tempList to tempList as list
	set n to (length of tempList) - 1
	
	repeat with i from 0 to n
		set swapped to false
		repeat with j from 0 to ((n - 1) - i)
			if item j of tempList > item (j + 1) of tempList then
				set temp to item j of tempList
				set item j of tempList to item (j + 1) of tempList
				set item (j + 1) of tempList to temp
				set swapped to true
			end if
		end repeat
		
		if not swapped then exit repeat
    end repeat
    
    set tempList to tempList as string
end sortList

on outputList()
	set listString to ""
	repeat with i in tempList
		set listString to listString & i & " "
	end repeat
	return listString
end outputList

on run
	set exampleList to {5, 2, 7, 3, 1}
	createList(exampleList)
	sortList()
	log outputList()
end run
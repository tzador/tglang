(*This is a complex code snippet that shows how to create a list and manipulate its contents*)

(*Create a new list with some items*)
set myList to {"apple", "banana", "orange", "grape"}

(*Print the list to see its current contents*)
log myList --> {"apple", "banana", "orange", "grape"}

(*Add a new item to the list*)
set newItem to "pear"
set myList to myList & newItem

(*Print the updated list*)
log myList --> {"apple", "banana", "orange", "grape", "pear"}

(*Remove the first item from the list*)
set myList to rest of myList

(*Print the updated list*)
log myList --> {"banana", "orange", "grape", "pear"}

(*Insert a new item at a specific position*)
set newItemAtPosition to "kiwi"
set myList to items 1 thru 2 of myList & newItemAtPosition & items 3 thru -1 of myList

(*Print the updated list*)
log myList -->{"banana", "kiwi", "orange", "grape", "pear"}

(*Sort the list in alphabetical order*)
set sortedList to myList as list
set sortedList to paragraphs of (do shell script "printf '%s\n' " & quoted form of (sortedList as string) & " | LC_ALL=C sort")
set myList to sortedList

(*Print the sorted list*)
log myList --> {"banana", "grape", "kiwi", "orange", "pear"}

(*Reverse the order of the list*)
set reversedList to {}
repeat with i from (count myList) to 1 by -1
	set end of reversedList to item i of myList
end repeat
set myList to reversedList

(*Print the reversed list*)
log myList --> {"pear", "orange", "kiwi", "grape", "banana"}
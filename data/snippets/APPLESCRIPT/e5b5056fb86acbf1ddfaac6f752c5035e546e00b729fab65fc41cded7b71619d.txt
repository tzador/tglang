--[[
This section of code generates a list of students from a CSV file and assigns each student a unique identifier.
]]

--Create a variable for the CSV file path
set csvFilePath to "<path/to/csv/file>"

--Read data from the CSV file
set csvData to (read file csvFilePath)

--Split CSV data into rows
set csvRows to (paragraphs of csvData)

--Remove heading row from CSV
set csvHeading to item 1 of csvRows
set csvRows to rest of csvRows

--Create an empty list to store student data
set studentsList to {}

--Loop through each row in the CSV
repeat with csvRow in csvRows

  --Split the row into separate values
  set studentData to (csvRow's text items)

  --Assign unique identifier to each student
  set studentID to (random number from 10000 to 99999)

  --Create dictionary to store student data
  set studentInfo to {}

  --Add ID to dictionary with corresponding value from CSV
  set studentInfo's "ID" to studentID
  --Add name to dictionary with corresponding value from CSV
  set studentInfo's "Name" to item 1 of studentData
  --Add age to dictionary with corresponding value from CSV
  set studentInfo's "Age" to item 2 of studentData
  --Add grade to dictionary with corresponding value from CSV
  set studentInfo's "Grade" to item 3 of studentData

  --Add student dictionary to list
  set end of studentsList to studentInfo
end repeat

--[[
This section of code sorts the list of students by age in ascending order and displays the top three oldest students.
]]

--Create a variable to store the sorted student list
set oldestStudents to {}

--Sort the list of students by age in ascending order
repeat until (count of studentsList) = 0
  set oldestAge to item 1 of (studentsList's "Age")
  set oldestIndex to 1

  --Loop through remaining students to find oldest age
  repeat with i from 2 to (count of studentsList)
    if (item i of (studentsList's "Age")) > oldestAge then
      set oldestAge to item i of (studentsList's "Age")
      set oldestIndex to i
    end if
  end repeat

  --Add oldest student to sorted list and remove from original list
  set end of oldestStudents to (item oldestIndex of studentsList)
  set studentsList to (rest of studentsList)
end repeat

--Display the top three oldest students
set oldestStudent1 to item 1 of oldestStudents
set oldestStudent2 to item 2 of oldestStudents
set oldestStudent3 to item 3 of oldestStudents

display dialog "The top three oldest students are:" & return & return & (oldestStudent1's "Name") & ", " & (oldestStudent1's "Age") & ", " & (oldestStudent1's "Grade") & return & (oldestStudent2's "Name") & ", " & (oldestStudent2's "Age") & ", " & (oldestStudent2's "Grade") & return & (oldestStudent3's "Name") & ", " & (oldestStudent3's "Age") & ", " & (oldestStudent3's "Grade")
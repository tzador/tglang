(* AppleScript code for creating a random task list *)
    
-- Set the number of tasks to generate
set taskCount to 10

-- Create an empty list to store tasks
set taskList to {}

-- Define a list of possible task types
set taskTypes to {"Work", "Personal", "Errands"}

-- Define a list of possible priorities
set priorities to {"High", "Medium", "Low"}

-- Define a list of possible completion status
set completionStatus to {"Complete", "Incomplete"}

-- Repeat for the specified number of tasks
repeat taskCount times
  	-- Generate a random number to determine task type
	set taskTypeNum to random number from 1 to count of taskTypes
  	
  	-- Generate a random number to determine priority
	set priorityNum to random number from 1 to count of priorities
	
	-- Generate a random number to determine completion status
	set completionStatusNum to random number from 1 to count of completionStatus
	
	-- Generate a unique task number for each task
	set taskNum to (length of taskList) + 1
	
	-- Create a task object with the generated values and add it to the task list
	set newTask to {id:taskNum, type:(item taskTypeNum of taskTypes), priority:(item priorityNum of priorities), completed:(item completionStatusNum of completionStatus)}
	
	set end of taskList to newTask
end repeat

-- Sort the task list by priority, then by type
set sortedTaskList to sort taskList by priority then by type

-- Print out the generated task list
repeat with task in sortedTaskList
	set taskInfo to "Task " & id of task & ": Type - " & type of task & ", Priority - " & priority of task & ", Completed - " & completed of task
	log taskInfo
end repeat
on open files
	-- the 'on open' event handler triggers when files are dropped onto the script or opened through the 'open with' menu
	repeat with file in files
		-- loops through each file that was dropped or opened
		tell application "Finder"
			set fileName to name of file
			set fileType to name extension of file
			set filePath to file as alias
		end tell
		if fileType is "txt" then
			-- checks if the file type is text
			set textFile to (open for access file filePath)
			-- opens the file for reading
			set fileContents to (read textFile)
			-- reads the contents of the file
			close access textFile
			-- closes the file
			if fileExists(fileName, "txt") then
				-- checks if there is an existing text file with the same name
				set newFile to ((path to desktop) as text) & fileName & "_new." & fileType
				-- creates a new file with "_new" appended to the name
				set newTextFile to (open for access file newFile with write permission)
				-- opens the new file for writing
				write fileContents to newTextFile
				-- writes the contents of the original file to the new file
				close access newTextFile
				-- closes the new file
			else
				set newFile to ((path to desktop) as text) & fileName & "." & fileType
				-- creates a new file with the original name
				set newTxtFile to (open for access file newFile with write permission)
				-- opens the new file for writing
				write fileContents to newTxtFile
				-- writes the contents of the original file to the new file
				close access newTxtFile
				-- closes the new file
			end if
		end if
	end repeat
end open


(*
fileExists - checks if a file with the given name and extension exists in the specified directory
Parameters:
	filename - the name of the file
	extension - the file extension
Returns:
	boolean - true if the file exists, false if it does not
*)
on fileExists(filename, extension)
	tell application "Finder"
		set desktopPath to path to desktop
		set filePath to desktopPath & filename & "." & extension as text
		-- combines the path to the desktop with the file name and extension
		if exists file filePath then
			return true
		else
			return false
		end if
	end tell
end fileExists
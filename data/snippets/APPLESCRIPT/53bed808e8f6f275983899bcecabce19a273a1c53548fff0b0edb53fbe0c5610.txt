(* This code snippet uses AppleScript to generate a random password with given parameters *) 

set passwordLength to 10 (* the length of the password, can be changed *)

set numberCount to 4 (* the minimum number of numbers in the password *)
set symbolCount to 2 (* the minimum number of symbols in the password *)
set uppercaseCount to 2 (* the minimum number of uppercase letters in the password *)
set lowercaseCount to passwordLength - numberCount - symbolCount - uppercaseCount (* the rest of the length will be filled with lowercase letters *)

(* arrays containing numbers, symbols and letters *)
set numbers to {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0"}
set symbols to {"!", "@", "#", "$", "%", "^", "&", "*", "(", ")"}
set uppercase to {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"}
set lowercase to {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"}

(* function to generate a random number within a given range *)
on randomNumber(min, max)
	set randomNum to (random number from min to max)
	return randomNum
end randomNumber

(* function to generate a random password *)
on generatePassword()
	set password to ""
	(* loop to generate numbers in password *)
	repeat numberCount times
		set randomIndex to (randomNumber(1, length of numbers))
		set password to password & (item randomIndex of numbers)
	end repeat
	(* loop to generate symbols in password *)
	repeat symbolCount times
		set randomIndex to (randomNumber(1, length of symbols))
		set password to password & (item randomIndex of symbols)
	end repeat
	(* loop to generate uppercase letters in password *)
	repeat uppercaseCount times
		set randomIndex to (randomNumber(1, length of uppercase))
		set password to password & (item randomIndex of uppercase)
	end repeat
	(* loop to fill the remaining length with lowercase letters *)
	repeat lowercaseCount times
		set randomIndex to (randomNumber(1, length of lowercase))
		set password to password & (item randomIndex of lowercase)
	end repeat
	return password
end generatePassword

(* call function to generate password *)
set newPassword to generatePassword()
(* display password in a dialog box *)
display dialog "Your new password is: " & newPassword buttons {"OK"} default button "OK"
-- This is a code snippet in AppleScript
set myName to "John" -- assigning a value to a variable
set myAge to 20
if myName = "John" then -- conditional statement
    display dialog "Hello, John!" -- display a dialog with the value of the variable inside
else
    display dialog "Hey there!" -- display a default dialog if condition is not met
end if

set myList to {"Apple", "Banana", "Orange"} -- create a list
repeat with i from 1 to length of myList -- looping through the list using 'repeat' statement
    display dialog "My favorite fruit is" & item i of myList -- display a dialog with the value of the current item in the list
end repeat

set myRecord to {name:"John", age:20} -- create a record with key-value pairs
display dialog "My name is" & myRecord's name & "and I am" & myRecord's age & "years old." -- accessing values in the record using the 's' notation

tell application "Numbers" -- performing commands in an application
    tell document 1 -- specifying which document to perform commands on
        set myTable to make new table with properties {name:"Fruits"} -- create a new table in the document with a specified name
        tell myTable
            make new row at end with properties {name:"Apple", quantity:5} -- create a new row in the table with specified properties
            make new row at end with properties {name:"Banana", quantity:3}
            make new row at end with properties {name:"Orange", quantity:10}
        end tell
    end tell
end tell

set myQuote to "The quick brown fox jumps over the lazy dog"
set myWords to every word of myQuote -- splitting a string into a list of words
set myReverse to {} -- initializing an empty list
repeat with i from 1 to length of myWords -- looping through the list of words
    set end of myReverse to item (length of myWords - i + 1) of myWords -- adding the words to the empty list in reverse order
end repeat
display dialog (myReverse as string) -- displaying the reversed quote

set myNumber to 5
set result to myNumber * (myNumber + 1) / 2 -- performing a calculation and storing the result in a variable
display dialog "The sum of numbers from 1 to " & myNumber & " is " & result
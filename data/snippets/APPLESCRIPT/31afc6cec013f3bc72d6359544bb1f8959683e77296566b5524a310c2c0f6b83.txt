(*
This script generates a random password with a specified number of characters
Inputs: numChars - number of characters in the password
Returns: a random password string
*)
on generateRandomPassword(numChars)
	
	-- list of characters to use in the password
	set charList to "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-=_+[]{}|;:,.<>/?"
	
	-- loop through each character and add a random one to the password string
	set password to ""
	repeat numChars times
		set randIndex to random number from 1 to (count charList)
		set password to password & character randIndex of charList
	end repeat
	
	-- display password in a dialog box
	display dialog "Your new password is: " & password buttons {"OK"} default button 1 with title "Password Generator"
	
	-- return the password string
	return password
end generateRandomPassword

-- prompt user for number of characters
display dialog "How many characters do you want in your password?" default answer "8" buttons {"Cancel", "OK"} default button 2 with title "Password Generator"
set numChars to text returned of result

-- validate input
if numChars is not "" and numChars is not "0" then
	try
		-- convert input to integer
		set numChars to numChars as number
		
		-- call the generateRandomPassword subroutine
		set generatedPassword to generateRandomPassword(numChars)
		
		-- display password in a dialog box
		display dialog "Your new password is: " & generatedPassword buttons {"OK"} default button 1 with title "Generated Password"
		
	-- catch and display any errors
	on error
		display alert "Invalid input. Please enter a valid number of characters." buttons {"OK"} as warning
		
	end try
else
	-- display error message if input is invalid
	display alert "Invalid input. Please enter a valid number of characters." buttons {"OK"} as warning
	
end if
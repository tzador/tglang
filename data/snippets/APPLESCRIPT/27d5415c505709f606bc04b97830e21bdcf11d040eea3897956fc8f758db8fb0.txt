-- This code is an example of a complex AppleScript function
-- that takes in two lists, compares them, and returns the duplicates
on findDuplicates(list1, list2)
    -- set empty list to store duplicates
    set duplicates to {}
    -- loop through first list
    repeat with i from 1 to count of list1
        -- set current item to variable
        set currentItem to item i of list1
        -- loop through second list
        repeat with j from 1 to count of list2
            -- check if current item is in second list
            if item j of list2 is equal to currentItem then
                -- add duplicate item to list
                set end of duplicates to currentItem
                -- break out of loop
                exit repeat
            end if
        end repeat
    end repeat
    -- return list of duplicates
    return duplicates
end findDuplicates

-- Example usage:
set firstList to {1, 2, 3, 4, 5}
set secondList to {3, 4, 5, 6, 7}
findDuplicates(firstList, secondList)
-- Result: {3, 4, 5}
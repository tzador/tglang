-- This is a code snippet in APPLESCRIPT that runs a game of Hangman

-- VARIABLES
set secretWord to "apple" -- the word to be guessed
set correctGuesses to {false, false, false, false, false} -- tracks which letters have been guessed correctly
set incorrectGuesses to {} -- tracks which incorrect guesses
set allowedGuesses to 7 -- the number of incorrect guesses allowed
set currentGuess to "" -- stores the current guess
set gameOver to false -- controls whether the game is over

-- FUNCTIONS
on printGuesses()
    -- prints the current state of the game
    display dialog "Incorrect guesses: " & incorrectGuesses & return & return & "Secret Word: " & join(correctGuesses, "") buttons "OK"
end printGuesses

on updateCorrectGuesses(guessedLetter)
    -- updates the correctGuesses variable to include the newly guessed letter
    repeat with i from 1 to length of secretWord
        if item i of secretWord is equal to guessedLetter then
            set item i of correctGuesses to true
        end if
    end repeat
end updateCorrectGuesses

on updateIncorrectGuesses(guessedLetter)
    -- updates the incorrectGuesses variable to include the newly guessed letter
    set end of incorrectGuesses to guessedLetter
end updateIncorrectGuesses

on checkGameOver()
    -- checks if the game is over
    if incorrectGuesses is equal to allowedGuesses then
        set gameOver to true
    else if correctGuesses contains false then
        set gameOver to true
    end if
end checkGameOver

on checkWin()
    -- checks if the player has won the game
    if correctGuesses does not contain false then
        set gameOver to true
        display dialog "Congratulations, you win! The secret word was: " & secretWord buttons "OK"
    end if
end checkWin

-- MAIN GAME LOGIC
repeat until gameOver
    -- loops until the game is over
    display dialog "Guess a letter:" default answer "" buttons "Submit"
    set currentGuess to text returned of result
    if length of currentGuess is not 1 then
        -- checks for invalid input
        display dialog "Please enter a single letter" buttons "OK"
    else if currentGuess is not in incorrectGuesses and currentGuess is not in correctGuesses then
        -- checks if the letter has already been guessed
        if currentGuess is in secretWord then
            -- if the letter is in the secret word, update correctGuesses
            updateCorrectGuesses(currentGuess)
            checkWin()
        else
            -- if the letter is not in the secret word, update incorrectGuesses
            updateIncorrectGuesses(currentGuess)
            checkGameOver()
        end if
        printGuesses()
    else
        -- if the letter has already been guessed, prompt for a new guess
        display dialog "That letter has already been guessed, please try again" buttons "OK"
    end if
end repeat

-- END GAME MESSAGE
if incorrectGuesses is equal to allowedGuesses then
    -- checks if the player lost the game
    display dialog "Sorry, you lose! The secret word was: " & secretWord buttons "OK"
end if
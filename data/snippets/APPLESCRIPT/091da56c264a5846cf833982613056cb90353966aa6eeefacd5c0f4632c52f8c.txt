-- Creating a complex list

set complexList to {{1, 2, 3}, {"a", "b", "c"}, {true, false, true}}
-- This creates a nested list with three sub-lists, each containing three values

repeat with i from 1 to length of complexList
	-- Looping through each sub-list
	set subList to item i of complexList
	set reverseSubList to reverseList(subList)
	-- Reversing the order of items in sub-list using a custom function
	
	repeat with j from 1 to length of subList
		-- Looping through each item in sub-list
		set currentItem to item j of subList
		
		-- Checking if current item is a string
		if class of currentItem is string then
			-- Replacing string with uppercase version
			set item j of subList to uppercaseString(currentItem)
		
		-- Checking if current item is a number
		else if class of currentItem is number then
			-- Doubling the number
			set item j of subList to doubleNumber(currentItem)
		
		-- Checking if current item is a boolean
		else if class of currentItem is boolean then
			-- Negating the boolean value
			set item j of subList to negateBoolean(currentItem)
		end if
	end repeat
	
	set item i of complexList to reverseSubList
end repeat

return complexList
-- Output will be the complex list with each sub-list having its items modified based on their data type
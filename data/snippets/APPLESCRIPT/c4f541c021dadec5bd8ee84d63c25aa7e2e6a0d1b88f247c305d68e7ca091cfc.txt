-- This code snippet shows how to create a database in AppleScript
-- and manipulate data within the database

-- Create a new database
set newDatabase to initDatabase()

-- Define the fields for the database
set fields to {"Name", "Age", "Occupation"}

-- Add a new record with the given data
set newData to {"John Doe", 25, "Software Engineer"}
addRecord(newDatabase, newData)

-- Modify the data in the record with index 1
set newAge to 30
set newOccupation to "Full Stack Developer"
modifyData(newDatabase, 1, {"Age": newAge, "Occupation": newOccupation})

-- Retrieve the data from the record with index 1
getRecord(newDatabase, 1)

-- Search for records with "Software Engineer" in the "Occupation" field
searchData(newDatabase, "Software Engineer", "Occupation")

-- Delete the record with index 1 from the database
deleteRecord(newDatabase, 1)

-- Print out all the records in the database
repeat with i from 1 to count of records of newDatabase
    getRecord(newDatabase, i)
end repeat

-- Functions used in the code

-- Function to create a new database
on initDatabase()
    return {records: {}}
end initDatabase

-- Function to add a new record to the database
on addRecord(database, data)
    set end of (records of database) to data
end addRecord

-- Function to modify data in a record
on modifyData(database, index, newData)
    set recordToUpdate to item index of (records of database)
    set keysOfData to keys of newData
    repeat with i from 1 to count of keysOfData
        set keyToUpdate to item i of keysOfData
        set valueToUpdate to newData's item keyToUpdate
        set keyToUpdate of recordToUpdate to valueToUpdate
    end repeat
end modifyData

-- Function to retrieve the data from a record
on getRecord(database, index)
    return item index of (records of database)
end getRecord

-- Function to search for data in a specific field
on searchData(database, searchQuery, fieldName)
    set searchResults to {}
    repeat with i from 1 to count of records of database
        set currentRecord to item i of (records of database)
        if (currentRecord's item fieldName) contains searchQuery then
            set end of searchResults to currentRecord
        end if
    end repeat
    return searchResults
end searchData

-- Function to delete a record from the database
on deleteRecord(database, index)
    set records of database to (records of database)'s {items 1 thru (index - 1)} & (records of database)'s {items (index + 1) thru -1}
end deleteRecord
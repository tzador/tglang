(*
This script creates a list of prime numbers up to a given number
by using the Sieve of Eratosthenes method.
*)

set limit to 10000 -- limit for generating prime numbers
set primeNumbers to {} -- empty list to store prime numbers
set compositeNumbers to {} -- empty list to store composite numbers
set limitSqrt to (limit as integer) ^ 0.5 -- square root of limit

-- generate list of numbers from 2 to limit
repeat with i from 2 to limit
	set end of compositeNumbers to i
end repeat

repeat with j in compositeNumbers
	repeat with k in compositeNumbers
		set product to j * k
		-- check if product is within limit
		if product ≤ limit then
			set end of compositeNumbers to product
		end if
	end repeat
end repeat

repeat with l in compositeNumbers
	if l ≤ limitSqrt then
		if l is not in primeNumbers then
			set end of primeNumbers to l
		end if
	end if
end repeat

-- sort prime numbers in ascending order
set sortedPrimeNumbers to primeNumbers
repeat with m from 1 to count primeNumbers
	repeat with n from (m + 1) to count primeNumbers
		if item m of sortedPrimeNumbers > item n of sortedPrimeNumbers then
			set temp to item m of sortedPrimeNumbers
			set item m of sortedPrimeNumbers to item n of sortedPrimeNumbers
			set item n of sortedPrimeNumbers to temp
		end if
	end repeat
end repeat

return sortedPrimeNumbers
-- This code snippet generates a list of prime numbers up to a given number using the Sieve of Eratosthenes algorithm.

set n to 100 -- change this value to generate prime numbers up to a different number

-- initialize the list of numbers to check
set numbersList to {}
repeat with i from 2 to n
    set end of numbersList to i
end repeat

-- initialize the list of prime numbers
set primeNumbers to {}

-- iterate through the list of numbers
repeat while (count numbersList) > 0
    -- take the first number in the list (current prime number)
    set currentNumber to first item of numbersList
    -- add it to the list of prime numbers
    set end of primeNumbers to currentNumber
    -- remove all multiples of the current prime number from the list of numbers
    repeat with i from 1 to (count numbersList)
        -- check for multiples of current prime number
        if (item i of numbersList) mod currentNumber = 0 then
            -- if multiple found, remove it from the list
            set item i of numbersList to missing value
        end if
    end repeat
    -- filter out any missing values (removed numbers)
    set numbersList to numbersList's items whose value is not missing value
end repeat

-- print the list of prime numbers
set output to "Prime numbers up to " & n & " are: " & primeNumbers
display dialog output
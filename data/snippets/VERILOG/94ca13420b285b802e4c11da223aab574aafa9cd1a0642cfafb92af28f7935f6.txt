/**
* Module: Adder
* Description: This module performs addition of two 8-bit numbers using a ripple carry adder.
* Inputs: 
* - A (8-bit): First number to be added
* - B (8-bit): Second number to be added
* Outputs:
* - Sum (8-bit): Result of addition
* Implementation details: The module uses a ripple carry adder with 8 full adders.
*/

// Define a module named "Adder"
module Adder(
    input [7:0] A,
    input [7:0] B,
    output [7:0] Sum
);

// Declare internal wires
wire [7:0] Carry; // Carry signal from previous stage
wire [7:0] Sum_wire; // Intermediate sum value

/*
* Create 8 full adders using for loop
* Each full adder takes 3 inputs - A[i], B[i], Carry[i-1]
* Each full adder generates 2 outputs - Sum_wires[i], Carry[i]
*/
genvar i;
generate
    for (i = 0; i < 8; i = i + 1) begin :(FULLADDER)
        // Instantiate full adder
        FULLADDER ADD1(
            .A(A[i]),
            .B(B[i]),
            .Cin(Carry[i]),
            .Sum_wires(Sum_wire[i]),
            .Cout(Carry[i+1])
        );
    end
endgenerate

// Define the final Sum output by concatenating the 8 sum wires
assign Sum = {Sum_wire[7],Sum_wire[6],Sum_wire[5],Sum_wire[4],Sum_wire[3],Sum_wire[2],Sum_wire[1],Sum_wire[0]};

endmodule // End of Adder module
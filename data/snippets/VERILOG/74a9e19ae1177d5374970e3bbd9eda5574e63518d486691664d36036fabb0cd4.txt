/**
 * This is a test module in verilog
 */
module test_module (input clock, input [7:0] data_in, input reset, output reg [7:0] data_out);

    // define internal registers
    reg [7:0] internal_reg_1;

    // assign data_out to internal_reg_1
    always @ (posedge clock, posedge reset)
        if (reset)
            data_out <= 8'b00000000;
        else
            data_out <= internal_reg_1;
            
    // define submodule
    submodule sub_module(clock, data_in, reset, sub_out);
    
    // define output mux
    always @ (sub_out, internal_reg_1)
        case(sub_out)
            0: internal_reg_1 <= data_in ^ 8'b10101010;
            1: internal_reg_1 <= data_in & 8'h80;
            2: internal_reg_1 <= data_in + internal_reg_1;
            default: internal_reg_1 <= data_in;
            
endmodule
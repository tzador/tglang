module Divider(input [7:0] dividend, divisor, output [7:0]quotient, remainder);
    reg [7:0] d, r;
    reg [15:0] q;
    always @ (*)
    begin
        d = dividend; //takes in the value of the dividend
        r = 0; //initializes the remainder to 0
        for (int i = 7; i >= 0; i = i - 1) //loop to iterate through each bit of the dividend
        begin
            r = r << 1; //multiplies the remainder by 2
            r[0] = d[i]; //adds the next bit of the dividend to the remainder
            if (r >= divisor) //checks if the remainder is larger than or equal to the divisor
            begin
                r = r - divisor; //subtracts the divisor from the remainder
                q[i] = 1; //sets the bit in the quotient to 1
            end
            else //if the remainder is smaller than the divisor
            begin
                q[i] = 0; //sets the bit in the quotient to 0
            end
        end
    end
    assign quotient = q; //outputs the quotient
    assign remainder = r; //outputs the remainder
endmodule
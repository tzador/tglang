// Example counter module

module counter (

  input clk,
  input rst,
  input [3:0] val,

  // Outputs
  output reg [3:0] cnt,
  output reg [3:0] cnt_next,
  output reg [3:0] cnt_max

);

// Initial values for outputs
initial begin
  cnt = 4'b0000;
  cnt_next = 4'b0000;
  cnt_max = val;
end

// Always block to update counter values
// This block runs on every rising edge of the clock
always @(posedge clk) begin

  // Reset value
  if (rst) begin
    cnt <= 4'b0000;
    cnt_next <= 4'b0000;
  end

  // Increment counter
  else if (cnt_next < cnt_max) begin
    cnt <= cnt_next + 1'b1;
    cnt_next <= cnt + 1'b1;
  end

  // Reset counter if it reaches its maximum value
  else if (cnt_next == cnt_max) begin
    cnt <= 4'b0000;
    cnt_next <= 4'b0000;
  end

end

endmodule
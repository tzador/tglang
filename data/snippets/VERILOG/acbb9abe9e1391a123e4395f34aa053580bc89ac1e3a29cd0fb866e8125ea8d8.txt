// Declaring a module
module my_module (
input clk,
input reset,
input [7:0] data_in,
output reg [7:0] data_out
);

// Creating a clock divider with a reset signal
always @(posedge clk or posedge reset) begin
    if (reset) begin
        // Resetting the output to 0
        data_out <= 8'b00000000;
    end else begin
        // Creating a counter to divide the clock
        reg [3:0] counter = 4'b00;
        // Incrementing the counter by 1 every clock cycle
        counter <= counter + 1;
        // When the counter reaches 4, reset it and toggle the output
        if (counter == 4) begin
            counter <= 0;
            data_out <= ~data_out;
        end
    end
end

// End of module
endmodule
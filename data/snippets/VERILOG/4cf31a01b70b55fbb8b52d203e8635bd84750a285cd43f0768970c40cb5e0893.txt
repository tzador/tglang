/* This code snippet is a complex sequential multiplier in Verilog */

// Define module for the multiplier
module multiplier(input [7:0] A, B, output reg [15:0] Q);

// Define parameters for width and comparison
parameter WIDTH = 8;
parameter COMP = 1 << WIDTH;

// Define registers for input and output
reg [WIDTH-1:0] a;
reg [WIDTH-1:0] b;
reg [WIDTH-1:0] q;

// Define counter for looping through bits of input
integer i;

// Define always block for sequential behavior
always @(posedge clk) begin
  // Reset values of registers
  a <= A;
  b <= B;
  q <= 0;

  // Loop through bits of input
  for(i = 0; i < WIDTH; i = i+1) begin
    // Shift input bits to align with correct bit in output
    if(a & 1'b1 == 1'b1) begin
      q = q + b;
    end
    a = a >> 1;
    b = b << 1;
    if(q >= COMP) begin
      q = q - COMP;
    end
  end
end

// Assign output to Q
assign Q = q;

// End module
endmodule
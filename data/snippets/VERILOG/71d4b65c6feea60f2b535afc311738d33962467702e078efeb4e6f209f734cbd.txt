// This is a test module
module test_module(
    input wire clk, //Clock input
    input wire rst, //Reset input
    input wire [3:0] data_in, //Data input
    output reg [3:0] data_out //Data output
);

// Define internal registers for data_in and data_out
reg [3:0] reg_data_in;
reg [3:0] reg_data_out;

// Define a counter for counting clock cycles
reg [7:0] counter;

// On positive edge of clock, increase counter and store
// data_in in internal register
always @(posedge clk) begin
    counter <= counter + 1;
    reg_data_in <= data_in;
end

// On active high reset, reset counter and internal registers
always @(posedge rst) begin
    if(rst) begin
        counter <= 8'b0;
        reg_data_in <= 4'b0;
        reg_data_in <= 4'b0;
    end
end

// At every 8 clock cycles, output data from internal register
always @(posedge clk) begin
    if(counter == 8) begin
        data_out <= reg_data_in;
        counter <= 8'b0;
    end
    else begin
        data_out <= reg_data_out;
    end
end

endmodule
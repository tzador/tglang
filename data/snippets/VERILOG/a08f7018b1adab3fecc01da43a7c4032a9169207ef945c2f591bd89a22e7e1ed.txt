// Define a 32-bit input register
reg [31:0] input_register;
// Define a 32-bit output register
reg [31:0] output_register;
 
// Create a combinatorial always block
always @ (*)
begin
    // Use bitwise negation to invert the input register
    output_register = ~input_register;
end
 
// Create a clocked always block
always @(posedge clock)
begin
    // Use the left shift operator to multiply the input by 2
    output_register <= input_register << 1;
end
module counter (
    input clk, //clock input
    input rst, //reset input
    output [7:0] count // 8-bit output count
    );
    
    reg [7:0] count_reg; // register for holding current count
    
    // always block sensitive to clock edge
    always @(posedge clk) begin
        
        // if reset is high, reset count to 0
        if (rst) begin
            count_reg <= 0;
        end
        
        // if reset is low, increment count by 1
        else begin
            count_reg <= count_reg + 1;
        end
        
    end
    
    // assign count_reg to the output count
    assign count = count_reg;
    
endmodule
module ALU(input [7:0] a, input [7:0] b, input [2:0] op, output reg [7:0] out, output reg zero_flag);

always @(*)
begin
  case(op)
    3'b000: out = a & b; // bitwise AND operation
    3'b001: out = a | b; // bitwise OR operation
    3'b010: out = a ^ b; // bitwise XOR operation
    3'b011: out = ~a; // bitwise NOT operation
    3'b100: out = a + b; // addition operation
    3'b101: out = a - b; // subtraction operation
    3'b110: out = a << b; // left shift operation
    3'b111: out = a >> b; // right shift operation
  endcase

  if(out == 0) // check if output is zero
    zero_flag = 1;
  else
    zero_flag = 0;
end
endmodule
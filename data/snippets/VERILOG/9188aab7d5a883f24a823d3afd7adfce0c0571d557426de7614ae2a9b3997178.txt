`timescale 1ns/1ps // sets the simulation timescale to 1 nanosecond/1 picosecond

module counter( // defines a counter module with inputs and outputs
  input clk, // declares a clock input
  input rst, // declares a reset input
  input en, // declares an enable input
  output reg [7:0] count // declares an 8-bit output register for the counter value
);

  always @ (posedge clk) begin // creates an always block that is sensitive to the positive edge of the clock signal
    if (rst) // checks if reset is asserted
      count <= 0; // if so, sets the counter value to 0
    else if (en) // checks if enable is asserted
      count <= count + 1; // if so, increments the counter value by 1
  end

endmodule // end of counter module
// Defining a register and assigning a value to it
module register(
   input clock,
   input reset,
   input [7:0] data_in,
   input write,
   output [7:0] data_out
);

reg [7:0] reg_data;

always @ (posedge clock) begin
    // Using conditional statement to check if reset is high or low
    if (reset == 1) begin
        // If reset is high, initialize register value to 0
        reg_data <= 8'b0;
    end else if (write == 1) begin
        // If write is high, assign data_in value to register
        reg_data <= data_in;
    end
end

assign data_out = reg_data;

endmodule
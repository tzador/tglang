// This is a code snippet in VERILOG
// This code is a sequential multiplier with three inputs and two outputs
module sequential_multiplier (input logic [3:0] a, b, c, // input variables, indexed with range
                              output logic [6:0] y, // output variable
                              output logic [1:0] z);

    // assign statement for output y
    assign y = a * b;

    // assign statement for output z
    assign z = b * c;

    // always block for sequential logic
    always_ff @(posedge clk, negedge rst) begin
        // reset sequence for output y
        if (~rst) begin
            y <= 0;
        end

        // sequential multiplication for output y when a, b change
        else begin
            y <= y + a * b;
        end
    end
endmodule
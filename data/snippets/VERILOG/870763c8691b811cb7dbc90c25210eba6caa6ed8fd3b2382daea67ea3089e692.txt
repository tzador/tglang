`timescale 1ns/1ps //specifies the time scale for delays in the code, 1ns for active delay and 1ps for passive delay

module decoder(
    input [3:0] select, //input select lines for the decoder, 4 bits in total
    input enable, //input enable line
    output reg [7:0] out //output register with 8 bits
);

always @ (*) begin //combinational always block, triggered whenever there's a change in the input
    case (select) //case statement based on the select input
        4'b0000: out = enable ? 8'b00000001 : 8'b00000000; //if select = 0000, output 00000001 if enable is high, else output 0
        4'b0001: out = enable ? 8'b00000010 : 8'b00000000; //if select = 0001, output 00000010 if enable is high, else output 0
        4'b0010: out = enable ? 8'b00000100 : 8'b00000000; //if select = 0010, output 00000100 if enable is high, else output 0
        4'b0011: out = enable ? 8'b00001000 : 8'b00000000; //if select = 0011, output 00001000 if enable is high, else output 0
        4'b0100: out = enable ? 8'b00010000 : 8'b00000000; //if select = 0100, output 00010000 if enable is high, else output 0
        4'b0101: out = enable ? 8'b00100000 : 8'b00000000; //if select = 0101, output 00100000 if enable is high, else output 0
        4'b0110: out = enable ? 8'b01000000 : 8'b00000000; //if select = 0110, output 01000000 if enable is high, else output 0
        4'b0111: out = enable ? 8'b10000000 : 8'b00000000; //if select = 0111, output 10000000 if enable is high, else output 0
        default: out = 8'b00000000; //default case, output 0
    endcase
end

endmodule
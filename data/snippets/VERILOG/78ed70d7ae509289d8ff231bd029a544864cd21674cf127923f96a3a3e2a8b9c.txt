`timescale 1ns / 1ps // sets the timescale for the simulation
module counter( // starts the module declaration for a counter
    input clk, // input clock signal
    input rst, // input reset signal
    input [2:0] td, // input test data
    output reg [3:0] count // output register for current count value
);
    always @(posedge clk or posedge rst) begin // always event for clock and reset signals
        if (rst) count <= 0; // if reset is triggered, count is set to 0
        else if (td == 3'b111) count <= count + 1; // if test data is 7, increase count by 1
    end
endmodule // ends the module declaration
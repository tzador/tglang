module Counter(
  input logic clk, //clock input
  input logic reset, //reset input
  output logic [7:0] count_out //output of counter in 8-bit binary
); //module declaration
  
  logic [7:0] count; //internal counter 
  always_ff @(posedge clk, posedge reset) begin //always block for synchronous reset 
    if(reset) begin
      count <= 8'b0; //reset counter value to 0
    end else begin
      count <= count + 1; //increment counter by 1 on positive clock edge
    end
  end
  
  assign count_out = count; //assign internal counter value to output
endmodule //end of module
// This is a module that calculates the sum of two 8-bit numbers using Verilog
module adder8bit(a, b, sum);
  input [7:0]a;  // First input number (8 bits)
  input [7:0]b;  // Second input number (8 bits)
  output [8:0]sum; // Output sum (9 bits)

  always@(a, b)
    begin
      if(a + b > 255)     // If sum is greater than 8 bits (255), it is truncated
        sum <= 255;       // Output becomes 8-bit max value (255)
      else
        sum <= a + b;     // Else, output is the sum of a and b
    end
endmodule

// This is a testbench module to test the adder8bit module
module adderSim;
  reg [7:0]a;     // Declare 8-bit register for first input number
  reg [7:0]b;     // Declare 8-bit register for second input number
  wire [8:0]sum;  // Declare 9-bit wire for output sum

  // Instantiate the adder8bit module
  adder8bit adder(a, b, sum);

  // Initialize the inputs and print results
  initial begin
    a = 50;       // Set first input number to 50 (00110010 in binary)
    b = 100;      // Set second input number to 100 (01100100 in binary)

    $monitor("a = %d, b = %d, sum = %d", a, b, sum);  // Print a, b, and sum values
  end

  // Add a delay to show results
  always
    #10 $finish; // Stop simulation after 10 time units
endmodule
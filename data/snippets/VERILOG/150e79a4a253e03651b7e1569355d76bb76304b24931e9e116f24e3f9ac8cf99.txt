module fullAdder(x, y, z, carry_in, sum, carry_out);
  // input declarations
  input x;
  input y;
  input z;
  input carry_in;
  // output declarations
  output sum;
  output carry_out;
  
  // internal wires declarations
  wire s1, s2, s3;
  
  // internal logic for full adder
  assign s1 = x ^ y;
  assign s2 = z ^ carry_in;
  assign s3 = s1 ^ s2;
  
  // use of variable assignment for output
  assign sum = s3;
  
  // use of if statement for output
  if (s2) begin
    assign carry_out = (s1 & carry_in) | (x & y);
  end else begin
    assign carry_out = s1 & z;
  end
endmodule
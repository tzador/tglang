module divider(
  input logic signed [63:0] dividend,
  input logic signed [31:0] divisor,
  output logic signed [31:0] quotient,
  output logic [31:0] remainder
);
  
  logic signed [63:0] dividend_reg;
  
  assign dividend_reg = {dividend, 32'h00000000}; // Zero padding for integer division
  
  always_ff @(posedge dividend or negedge dividend) begin
    // Integer division algorithm
    remainder <= {dividend, 1'b0} % divisor; // Remainder is the last bit of the dividend, divided by the divisor
    quotient <= (dividend_reg / divisor)[31:0]; // Quotient is equal to the dividend divided by the divisor
  
    // Shift the dividend register to the right by 1 bit
    dividend_reg <= {dividend_reg[62:0], dividend_reg[63]};
  end
  
endmodule
module multiplexer(input [7:0] A, B, C, D, selector, output);

	//input signals
	input [7:0] A; //8-bit signal A
	input B; //1-bit signal B
	input C; //1-bit signal C
	input D; //1-bit signal D
	input [1:0] selector; //2-bit signal for selecting input
	
	//output signal
	output; //output signal
	
	//logic gates for multiplexer
	and #1(first_and, A[0], ~selector[1], ~selector[0]); //creating first AND gate with input A[0] and ~selector[1] and ~selector[0]
	and #2(second_and, B, selector[1], ~selector[0]); //creating second AND gate with input B and selector[1] and ~selector[0]
	and #3(third_and, C, ~selector[1], selector[0]); //creating third AND gate with input C and ~selector[1] and selector[0]
	and #4(fourth_and, D, selector[1], selector[0]); //creating fourth AND gate with input D and selector[1] and selector[0]
	
	or #1(first_or, first_and, second_and); //creating first OR gate with inputs from first and second AND gates
	or #2(second_or, third_and, fourth_and); //creating second OR gate with inputs from third and fourth AND gates
	
	assign output = first_or | second_or; //assigning output signal to the output of the two OR gates
	
endmodule
// Module declaration with inputs and outputs
module top_module (input clk, input reset, input [7:0] data_in, output logic [15:0] data_out);

// Internal registers and wires
logic [7:0] reg1;
reg [5:0] reg2;
logic [7:0] reg3;

// Instantiate DUT (Device Under Test)
my_dut dut (
  .clk(clk), 
  .reset(reset), 
  .data_in(data_reg), 
  .data_out(data_out)
);

// Assign statements
always_ff @(posedge clk or posedge reset) begin
  if (reset) begin
    // Reset values for registers
    reg1 <= 0;
    reg2 <= 0;
    reg3 <= 0;
  end else begin
    // Perform operations and assign values to registers
    reg1 <= data_in;
    reg2 <= reg1 + reg3;
    reg3 <= reg2 * 3;
  end
end

endmodule
module counter(
    input [7:0] count_in,
    input reset,
    input clk,
    output reg [7:0] count_out,
    output reg done
);

reg [9:0] state;

always @ (posedge clk) begin
    if (reset) begin
        state <= 0;
        count_out <= 0;
        done <= 0;
    end
    else begin
        case (state)
            0: begin
                if (count_in == 0) begin
                    state <= 1;
                    count_out <= count_in;
                end
                else begin
                    state <= 0;
                    count_out <= count_in;
                end
            end
            1: begin
                if (count_in == 255) begin
                    state <= 2;
                    count_out <= count_in;
                end
                else begin
                    state <= 1;
                    count_out <= count_in;
                end
            end
            2: begin
                if (count_in == 255) begin
                    state <= 2;
                    count_out <= 0;
                    done <= 1;
                end
                else begin
                    state <= 1;
                    count_out <= count_in;
                end
            end
        endcase
    end
end

endmodule
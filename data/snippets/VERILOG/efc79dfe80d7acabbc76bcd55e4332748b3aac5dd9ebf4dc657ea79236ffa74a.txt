//Declaration of top module
module top_module (
    input clk,       //clock input
    input reset,     //reset input
    input in1,       //first input
    input in2,       //second input
    output out       //output
    );

//Declaration of internal signals
reg [7:0] reg1;
wire [7:0] wire1;

//Declaration of submodule
submodule sub (
    .clk(clk),      //clock input passed from top module
    .in1(in1),      //first input passed from top module
    .in2(in2),      //second input passed from top module
    .out(wire1)     //output passed to top module
    );

//Behavioral code
always @(posedge clk) begin
    if (reset == 1) begin
        reg1 <= 0;      //reset value
    end
    else begin
        reg1 <= in1 + in2;      //addition of inputs
    end
end

//Assigning output
assign out = reg1;

endmodule

//Submodule definition
module sub (
    input clk,       //clock input
    input in1,       //first input
    input in2,       //second input
    output out       //output
    );

//Declaration of internal signals
reg [7:0] reg2;
wire [7:0] wire2;

//Behavioral code
always @(posedge clk) begin
    reg2 <= in1 - in2;      //subtraction of inputs
end

//Assigning output
assign out = reg2;

endmodule
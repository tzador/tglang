/* Example code snippet in VERILOG */

module divider(
    input clk,  // Clock input
    input rst,  // Reset input
    input [7:0] in,  // 8-bit input
    output [11:0] out  // 12-bit output
);

reg [15:0] counter;  // 16-bit counter register
reg [11:0] result;  // 12-bit result register

always @(posedge clk) begin  // Sequential block
    if (rst) begin  // Reset condition
        counter <= 16'b0;  // Reset counter to 0
        result <= 12'b0;  // Reset result to 0
    end else begin
        if (counter < 8) begin  // Check if counter is less than 8
            counter <= counter + 1;  // Increment counter by 1
            result <= result + in;  // Add input value to result
        end else begin
            counter <= counter + 1;  // Increment counter by 1
            result <= result - in;  // Subtract input value from result
        end
    end
end

assign out = result;  // Assign result to output port

endmodule  // End of module divider
// This is a VERILOG code snippet that creates a 4-input AND gate using structural modeling

module and_gate_4(input [3:0] A, output Q);
	// The input port A is declared as a 4-bit vector and is used to represent the 4 input values
	// The output port Q is declared as a single bit and will hold the output of the AND gate

	wire [3:0] temp; // A temporary wire is used to store the intermediate results of the AND operation

	and4 A1(temp, A[0], A[1], A[2], A[3]); // The and4 module is instantiated, connecting the temporary wire and the 4 input values
	
	assign Q = temp; // The output port Q is assigned to the value stored in the temporary wire

endmodule

// The following is the implementation of the and4 module used in the and_gate_4 module

module and4(output reg out, input in1, in2, in3, in4);
	// The output port out is declared as a single bit and will hold the output of the AND operation
	// The input ports in1, in2, in3, and in4 are declared as single bits and represent the 4 input values

	always @(in1, in2, in3, in4) begin
		out = in1 & in2 & in3 & in4; // The output out is updated whenever any of the inputs change
	end

endmodule
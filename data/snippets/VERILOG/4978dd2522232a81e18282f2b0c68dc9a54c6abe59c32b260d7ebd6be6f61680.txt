module counter(
    input clk,     // clock input
    input reset,   // asynchronous reset input
    output[7:0] y, // 8-bit output
    output[3:0] z, // 4-bit output
);

reg[7:0] count; // 8-bit register to store count value
reg[3:0] subcount; // 4-bit register to store subcount value

always @(posedge clk or negedge reset) begin
    if (reset == 0) begin
        count <= 0;       // reset count value to 0
        subcount <= 0;    // reset subcount value to 0
    end
    else begin
        subcount <= subcount + 1; // increment subcount value every clock cycle
        if (subcount == 4) begin // if subcount reaches 4, increment count value 
            count <= count + 1;
            subcount <= 0; // reset subcount value back to 0
        end
    end
end

assign y = count; // assign count value to output y
assign z = subcount; // assign subcount value to output z

endmodule
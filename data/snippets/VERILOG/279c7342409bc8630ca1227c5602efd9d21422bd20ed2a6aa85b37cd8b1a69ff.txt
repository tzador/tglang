// This is a 4-bit ripple carry adder module
module ripple_carry_adder (
  input [3:0] a, // 4-bit input a
  input [3:0] b, // 4-bit input b
  input cin,     // Carry in input
  output [3:0] sum, // 4-bit output sum
  output cout        // Carry out output
);
  wire [3:0] c;      // Internal wire for carry bit propagation
  assign c[0] = cin; // The first carry bit is the carry in input

  //Use a for loop to instantiate full adders for each bit
  genvar i;
  for (i = 0; i < 4; i = i + 1) begin: adder_loop
    full_adder FA (
      .a(a[i]),         // Input a bit
      .b(b[i]),         // Input b bit
      .cin(c[i]),       // Carry in bit
      .sum(sum[i]),     // Sum output bit
      .cout(c[i+1]));   // Carry out bit
  end

  assign cout = c[4];   // The last carry bit is the carry out output
endmodule
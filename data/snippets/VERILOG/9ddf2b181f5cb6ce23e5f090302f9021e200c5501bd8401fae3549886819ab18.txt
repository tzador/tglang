module multiplier (A, B, P);  // Verilog module declaration
  
  // Input and output ports
  input [7:0] A, B;  // Eight-bit inputs A and B
  output [15:0] P;   // Sixteen-bit output P (product)

  reg [15:0] P_temp;  // Temporary sixteen-bit register for multiplication result
  reg [7:0] i, B_shift; // Eight-bit registers used in for-loops

  always @(A, B) begin // Behavior statement that executes when inputs A and B change
    P_temp = 0;        // Initialize temporary register to 0
    // Nested for-loops to iterate through all possible combinations of A and B
    for (i = 0; i < 8; i = i + 1) begin // Loop over each bit of A
      B_shift = B << i;                // Shift B left by i bits
      // Multiply corresponding bits of A and B_shift and add to P_temp
      for (j = 0; j <= i; j = j + 1) begin 
        P_temp = P_temp + (A[i] * B_shift[j]);
      end
    end
    P = P_temp; // Assign P_temp to output P
  end
  
endmodule  // End of Verilog module
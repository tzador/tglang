module ALU(input [3:0] A, B, input [2:0] sel, output [3:0] out);

always @(*) //Sets condition for always block
begin
    casex(sel) //Starts case statement with sel as the input
        4'b000 : out = A + B; // 4-bit addition
        4'b001 : out = A - B; // 4-bit subtraction
        4'b010 : out = A * B; // 4-bit multiplication
        4'b011 : out = A & B; // 4-bit bitwise AND
        4'b100 : out = A | B; // 4-bit bitwise OR
        4'b101 : out = A ^ B; // 4-bit bitwise XOR
        4'b110 : out = ~A; // 4-bit bitwise NOT of input A
        4'b111 : out = ~B; // 4-bit bitwise NOT of input B
    default : out = 4'b0000; //Sets default output
end

endmodule
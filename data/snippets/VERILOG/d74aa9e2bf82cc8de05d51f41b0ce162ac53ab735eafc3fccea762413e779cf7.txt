//Defining input and output ports
module adder (input [3:0] a, b, output [4:0] out,cout);
wire and [3:0], xor [3:0], carry [4:0];

//Using and gate and xor gate to generate carry and sum bits
assign and = a & b;
assign xor = a ^ b;

//Calculating sum bits 
assign out[0] = xor[0];
assign out[1] = xor[1] ^ carry[0];
assign out[2] = xor[2] ^ carry[1];
assign out[3] = xor[3] ^ carry[2];

//Calculating carry bit
assign carry[0] = xor[1] & carry[0];
assign carry[1] = xor[2] & carry[1];
assign carry[2] = xor[3] & carry[2];

//Calculating the final carry bit
assign carry[3] = and[3] | and[2] & carry [3];
assign cout = carry[4];

endmodule
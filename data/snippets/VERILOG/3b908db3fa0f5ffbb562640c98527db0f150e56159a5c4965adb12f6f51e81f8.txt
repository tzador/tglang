module Counter(input clk, input rst, output reg [7:0] count); // create a module named Counter with a clock, reset, and an 8-bit output register

/* create two internal registers, 'next' and 'current', to store the next and current values of the counter
 * initialize the counter to a value of 0
 */
reg [7:0] next, current; 
initial begin
    next = 8'b00000000;
    current = next;
end

/* use a synchronous always block to increment the counter every time the clock signal goes from 0 to 1
 * if the reset signal is 1, set the counter back to 0
 */
always @(posedge clk) begin
    if (rst == 1'b1) begin
        next = 8'b00000000;
    end else begin
        next = current + 8'b00000001;
    end
end

// assign the value of 'next' to 'current' to update the counter value
always @(*) begin
    current = next;
end

// assign the value of 'current' to the output register 'count'
assign count = current;

endmodule // end of counter module
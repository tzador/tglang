module multi_state_counter(
input clk, // clock input
input rst, // reset input
input [2:0] start_state, // starting state input
output reg [2:0] current_state, // current state output
output reg [2:0] next_state // next state output
);

// initialize current state to starting state
always @ (posedge clk) begin
    if (rst) begin
        current_state <= start_state;
    end
// code for next state logic
    else begin
        case (current_state)
            3'b000: next_state = 3'b001;
            3'b001: next_state = 3'b010;
            3'b010: next_state = 3'b011;
            3'b011: next_state = 3'b000;
        endcase
    end
end

// code for current state to next state transition
always @ (posedge clk) begin
    if (rst) begin
        // do nothing if reset is active
    end
    else begin
        current_state <= next_state; // transition current state to next state
    end
end
endmodule
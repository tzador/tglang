// This code snippet is an example of a 4-bit arithmetic logic unit (ALU) with addition, subtraction, and logic operations

// Defining module for ALU
module alu(input [3:0] A, input [3:0] B, input [2:0] operation, output [3:0] result);

// Defining intermediate wires for calculations
wire [3:0] sum, diff, logic_op;

// Addition operation
assign sum = A + B;

// Subtraction operation
assign diff = A - B;

// Logic operation based on select from operation input
always @ (A or B or operation) begin
    case (operation)

    0: logic_op = A & B; // AND
    1: logic_op = A | B; // OR
    2: logic_op = A ^ B; // XOR
    3: logic_op = ~A;    // NOT
    4: logic_op = ~B;    // NOT
    default: logic_op = 4'bX; // Invalid operation
    endcase
end

// Output selection based on operation input
always @ (sum or diff or logic_op) begin
    case (operation)
    
    0: result = sum;         // Addition result
    1: result = diff;        // Subtraction result
    2: result = logic_op;    // Logic operation result
    default: result = 4'bX;  // Invalid operation
    endcase
end

endmodule
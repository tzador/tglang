module ALU (input [31:0] A, input [31:0] B, input [2:0] ALUControl, output [31:0] Result, output Zero);
  // This module represents an Arithmetic Logic Unit (ALU) with multiple functions.
  // Input A and B represent the two 32-bit operands, ALUControl selects the operation to be performed.
  // Output Result is the computed result and Zero is a flag indicating if the result is equal to 0.
  reg [31:0] ALUResult;

  // Perform the selected operation based on the ALUControl input
  always @ (A, B, ALUControl) begin
    case (ALUControl)
      3'b000: ALUResult = A + B; // Addition
      3'b001: ALUResult = A - B; // Subtraction
      3'b010: ALUResult = A & B; // Bitwise AND
      3'b011: ALUResult = A | B; // Bitwise OR
      3'b100: ALUResult = A ^ B; // Bitwise XOR
      3'b101: ALUResult = A << 1; // Left shift by 1
      3'b110: ALUResult = A >> 1; // Right shift by 1
      3'b111: ALUResult = ~A; // Bitwise complement
    endcase
  end

  // Set Zero flag if the result is equal to 0
  assign Zero = (ALUResult == 0) ? 1 : 0;

  // Output the computed result
  assign Result = ALUResult;
endmodule
// Defining module for a memory array
module memory_array (
  input clock, //clock input
  input [7:0] address, //address input of 8 bits
  input write_enable, //write operation enable input
  input [7:0] data_in, //data input of 8 bits
  output [7:0] data_out //data output of 8 bits
);

  // Defining reg and wire for internal data storage
  reg [7:0] internal_data; //internal data storage of 8 bits
  wire [7:0] read_data; //data output wire, connected to address decoder

  // Defining memory array with 256 words, each with 8 bits
  reg [7:0] memory_array [255:0]; //memory array with 256 words of 8 bits each

  // Assigning clock edge to perform write operation
  always @(posedge clock) begin
    if (write_enable) //if write operation is enabled
      memory_array[address] <= data_in; //write data to specified address
  end

  // Assigning read operation to output data based on address input
  assign read_data = memory_array[address]; //output read data based on address input

  // Assigning data output based on read operation and internal data storage
  assign data_out = write_enable ? data_in : internal_data; //if write operation is enabled, output data_in, else output internal_data

endmodule //end of module
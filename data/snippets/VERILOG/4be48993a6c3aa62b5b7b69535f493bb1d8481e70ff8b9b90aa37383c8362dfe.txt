module calculator(
input [7:0] operand1, operand2;
input [2:0] opcode;
output reg [7:0] result;
reg [7:0] temp;

always @ (operand1 or operand2 or opcode)
begin
    case (opcode)
        3'b000: temp = operand1 + operand2; //addition operation
        3'b001: temp = operand1 - operand2; //subtraction operation
        3'b010: temp = operand1 * operand2; //multiplication operation
        3'b011: temp = operand1 / operand2; //division operation
        3'b100: temp = operand1 % operand2; //modulus operation
        default: temp = 0; //default case - no operation
    endcase
end

always @ *
begin
    case (temp)
        8'h00: result = 8'b00111111; //conversion for value 0 to display as '0'
        8'h01: result = 8'b00000110; //conversion for value 1 to display as '1'
        8'h02: result = 8'b01011011; //conversion for value 2 to display as '2'
        8'h03: result = 8'b01001111; //conversion for value 3 to display as '3'
        8'h04: result = 8'b01100110; //conversion for value 4 to display as '4'
        8'h05: result = 8'b01101101; //conversion for value 5 to display as '5'
        8'h06: result = 8'b01111100; //conversion for value 6 to display as '6'
        8'h07: result = 8'b01011000; //conversion for value 7 to display as '7'
        8'h08: result = 8'b01111111; //conversion for value 8 to display as '8'
        8'h09: result = 8'b01101111; //conversion for value 9 to display as '9'
        default: result = 8'b11111111; //unrecognized value, display as '-'
    endcase
end
endmodule
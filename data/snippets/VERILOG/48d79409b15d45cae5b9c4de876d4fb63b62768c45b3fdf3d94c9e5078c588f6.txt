// This is a code snippet in VERILOG
// It demonstrates a NAND gate with two inputs and one output

// Declare inputs
input a;
input b;

// Declare output
output y;

// Define the AND gate behavior using NAND
assign y = ~(a & b);

// Test the gate with a testbench
module testbench;
	// Declare signals for inputs and output
	reg a;
	reg b;
	wire y;

	// Instantiate NAND gate
	nand_gate uut(
		.a(a),
		.b(b),
		.y(y)
	);

	// Initialize inputs
	initial begin
		a = 0;
		b = 0;

		// Wait for 10 time units
		#10;

		// Change inputs
		a = 1;
		b = 0;

		// Wait for 10 time units
		#10;

		// Change inputs
		a = 0;
		b = 1;

		// Wait for 10 time units
		#10;

		// Change inputs
		a = 1;
		b = 1;

		// Wait for 10 time units
		#10;

		// Stop simulation
		$finish;
	end

	// Display input and output values
	always @(*) begin
		$display("a = %b, b = %b, y = %b", a, b, y);
	end
endmodule

// Define the NAND gate module
module nand_gate (
	// Inputs
	input a,
	input b,
	// Output
	output y
);
	// Define the behavior of the NAND gate
	assign y = ~(a & b);
endmodule
// This is a code snippet in VERILOG, created for the purpose of this task.

module counter
(
    input wire clk,
    input wire reset,
    output reg [7:0] count
);

reg [7:0] temp_count; // declaring a register variable to store the temp count

always @(posedge clk) begin // creating a logic for clock input
    if (reset) begin // checking if the reset input is high
        temp_count <= 0; // if reset is high, set the temp count to 0
    end else begin
        temp_count <= temp_count + 1; // else, increment temp count by 1
    end
end

always @(posedge clk) begin // creating a logic for clock input
    if (reset) begin // checking if the reset input is high
        count <= 0; // if reset is high, set count to 0
    end else begin
        count <= temp_count; // else, set count to temp count
    end
end

endmodule
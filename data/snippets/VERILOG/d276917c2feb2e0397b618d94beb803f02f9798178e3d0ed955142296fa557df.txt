// Defining a 4-bit register
module register_4_bit(clock, reset, input, output);

input clock, reset, input;

output [3:0] output;

reg [3:0] q;

always @(posedge clock or posedge reset) begin
    if (reset)
        q <= 0; // Resets to 0 on reset signal
    else
        q <= input; // Updates output on clock signal
end

assign output = q; // Assigns q value to output

endmodule
// This is a Verilog code snippet for a 4-bit counter with an asynchronous reset

module counter_4bit (
  input clk, // clock input
  input [3:0] reset, // asynchronous reset input
  output reg [3:0] count // 4-bit counter output
);

  always @ (posedge clk) begin // edge-triggered always block
    if (reset) // checking if reset is asserted
      count <= 0; // resetting counter to 0
    else
      count <= count + 1; // increment counter by 1 each clock cycle
  end

endmodule
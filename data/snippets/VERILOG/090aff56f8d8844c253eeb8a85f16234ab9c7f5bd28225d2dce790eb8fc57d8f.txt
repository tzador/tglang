/*----------------------------------------------------------------
			Example Code for Shift Register in Verilog
-----------------------------------------------------------------*/

//Declaration of inputs and outputs
module shift_reg(
	input clk, //clock input
	input rst, //reset input
	input [3:0] din, //4 bit input
	input shft, //shift input
	output reg [3:0] dout //4 bit output
	);

//Internal register declaration
reg [3:0] shift_reg [0:15];

//Initializating internal registers with zeros
initial begin
	for (i=0;i<16;i=i+1) begin
		shift_reg[i] = 4'b0000; //4 bit register with 16 bits depth
	end
end

//Logic for shifting data based on shft input
always @(posedge clk) begin

	if (shft) begin
		//Shift all register bits to the right
		for (i=15; i>0; i=i-1) begin
			shift_reg[i] = shift_reg[i-1];
			end
		//Assign input value to first bit of register
		shift_reg[0] = din;
	end
end

//Assign output
always @(*) begin
	dout = shift_reg[15];
end

endmodule
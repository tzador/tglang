module counter(input clk, input reset, input [3:0] data, output [3:0] count);
//create a module named "counter" with inputs of a clock, reset signal, 4-bit data input, and a 4-bit count output

	reg [3:0] temp; //declare a 4-bit register named "temp"

	always @(posedge clk or posedge reset) //create a clocked always block
		if (reset) //if the reset signal is high
			temp <= 4'b0000; //reset the temp register to all 0s
		else //if the reset signal is not high
			temp <= temp + data; //increment the temp register by the value of the data input

	assign count = temp; //assign the value of the temp register to the count output

endmodule //end the module
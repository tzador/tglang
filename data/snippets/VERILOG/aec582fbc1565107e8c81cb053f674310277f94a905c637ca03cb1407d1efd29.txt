// This is a code snippet for a 4-bit multiplier in Verilog

module multiplier(
    input [3:0] A,
    input [3:0] B,
    output [7:0] P
    );
    
    reg [7:0] P;
    reg [3:0] index;
    reg [6:0] product_shift;

    // Multiplication process module
    always @*
    begin
		// Initialize index and product_shift
		index = 0;
		product_shift = 0;
		
		// Loop through each bit in B
		for(index = 0; index < 4; index = index + 1) begin
			// Check if bit in B is 1
			if(B[index] == 1) begin
				// Shift A left by index and add it to product_shift
				product_shift = product_shift + (A << index);
			end
		end
		
		// Assign product_shift to P
		P = product_shift;
    end

endmodule
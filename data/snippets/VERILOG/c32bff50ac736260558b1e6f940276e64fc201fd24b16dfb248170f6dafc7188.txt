// This code snippet is a counter circuit that counts from 0 to 15
module counter(

    input clk,
    input rst,
    output [3:0] count
);
    
    // define a 4-bit reg called 'cur' to hold the current count value
    reg [3:0] cur;
    
    // synchronous always block that is triggered on rising edge of clk
    always @ (posedge clk) begin
        
        // if rst is high, set count to 0
        if (rst == 1'b1) begin
            cur <= 4'b0000;
        end
        // else increment count with each clock cycle
        else begin
            cur <= cur + 4'b0001;
        end
    end
    
    // assign the value of reg 'cur' to the output count
    assign count = cur;
    
endmodule
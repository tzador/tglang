// Declaration of variables
reg [7:0] counter = 8'b00000000; // 8-bit counter initialized to 0

// 'always' block with sensitivity list
always @ (counter) begin

    // Conditional statement with nested if-else blocks
    if (counter == 8'b11111111) begin
        counter <= 8'b00000000; // Reset counter to 0
    end else if (counter >= 8'b01010101) begin
        counter <= counter + 1; // Increment counter by 1
    end else if (counter < 8'b01010101) begin
        counter <= counter - 1; // Decrement counter by 1
    end else begin
        counter <= 8'b00000000; // Reset counter to 0
    end

    // Display statement to print counter value to console
    $display("Counter value: %d", counter);

end

// 'initial' block for simulation initialization
initial begin

    // Time delay for simulation
    #100;

    // Loop statement to increment counter value from 0 to 255
    for (i = 0; i < 256; i = i + 1) begin
        // Assigns each value of 'i' to counter variable
        counter <= i;
        // Display statement to print counter value to console
        $display("Counter value: %d", counter);
        // Time delay for simulation
        #10;
    end
    
    // Time delay for simulation
    #100;
    
    // Loop statement to decrement counter value from 255 to 0
    for (j = 255; j >= 0; j = j - 1) begin 
        // Assigns each value of 'j' to counter variable
        counter <= j;
        // Display statement to print counter value to console
        $display("Counter value: %d", counter);
        // Time delay for simulation
        #10;
    end

end
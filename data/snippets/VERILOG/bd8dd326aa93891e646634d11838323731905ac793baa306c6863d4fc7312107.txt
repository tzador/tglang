// This program performs a binary search on a sorted array of integers

module binary_search(

  output reg match, // output signal indicating if search was successful
  input [7:0] array[0:99], // input array of integers to search through
  input [7:0] target // input integer to search for
);

  reg signed [7:0] lower = 0; // register for the lower bound of search range
  reg signed [7:0] upper = 99; // register for the upper bound of search range
  reg signed [7:0] midpoint; // register for the midpoint of search range

  always @(posedge clk) begin // synchronous always block for clocked operation

    if (lower > upper) begin // check if lower bound is greater than upper bound
      match <= 0; // set match signal to indicate unsuccessful search
    end
    else if (array[midpoint] == target) begin // check if midpoint is equal to target
      match <= 1; // set match signal to indicate successful search
    end
    else begin // if neither condition is met
      if (array[midpoint] > target) begin // check if midpoint is greater than target
        upper <= midpoint - 1; // set upper bound to value of midpoint - 1
      end
      else begin // if midpoint is not greater than target
        lower <= midpoint + 1; // set lower bound to value of midpoint + 1
      end
    end

    midpoint <= (lower + upper) / 2; // update midpoint value with average of bounds
  end

endmodule
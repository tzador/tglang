module multiplier #(parameter WIDTH=8)
  (input [WIDTH-1:0] A, B,
   output reg [2*WIDTH-1:0] P);

   // This module takes in two inputs, A and B, and outputs their product, P.

   reg [WIDTH-1:0] A_temp, B_temp;
   integer i, j;

   // Declare and initialize temporary variables for A and B as well as two iterator variables.
   
   always @ (A or B)
     begin
        A_temp = A;
        B_temp = B;
        P = 0;

        // Always block starts at the most significant digit and loops through all possible bits.
        
        for (i = 0; i < WIDTH; i = i + 1)
        begin
           for (j = 0; j < WIDTH; j = j + 1)
           begin
              if (A_temp[j] == 1)
                 P[i + j] = P[i + j] + B_temp[i];

                 // If the bit in A_temp is 1, add the current value of B_temp to the corresponding digit in P.
           end
        end
     end
endmodule
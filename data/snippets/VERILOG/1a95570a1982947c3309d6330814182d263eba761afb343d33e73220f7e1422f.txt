// This is a complex code snippet in Verilog for a counter with a synchronous reset and parallel load

module counter
(
    input clk, // Clock signal
    input rst, // Synchronous reset signal
    input ld, // Load signal for parallel loading
    output reg [7:0] count // Output register for keeping track of counter value
);

always @(posedge clk) begin // Always block for clock edge detection
    if(rst) begin // Synchronous reset condition
        count <= 0; // Reset counter to 0
    end else if(ld) begin // Parallel load condition
        count <= count + 4; // Increment counter by 4
    end else begin // Normal counting condition
        count <= count + 1; // Increment counter by 1
    end
end

endmodule
module complex_multiplier(
    input [7:0] a_real,
    input [7:0] a_imag,
    input [7:0] b_real,
    input [7:0] b_imag,
    output [15:0] out_real,
    output [15:0] out_imag
);
    // module for multiplying two complex numbers

    // declare internal variables
    wire [15:0] mul_real;
    wire [15:0] mul_imag;
    wire [15:0] sub_real;
    wire [15:0] sub_imag;
    reg [15:0] temp_real;
    reg [15:0] temp_imag;

    // multiplication
    assign mul_real = a_real * b_real - a_imag * b_imag;
    assign mul_imag = a_real * b_imag + a_imag * b_real;

    // subtraction
    assign sub_real = a_real * b_real + a_imag * b_imag;
    assign sub_imag = a_imag * b_real - a_real * b_imag;

    // register for delayed addition
    always@(posedge clk) begin
        temp_real <= mul_real + sub_real;
        temp_imag <= mul_imag + sub_imag;
    end

    // output
    assign out_real = temp_real;
    assign out_imag = temp_imag;
endmodule
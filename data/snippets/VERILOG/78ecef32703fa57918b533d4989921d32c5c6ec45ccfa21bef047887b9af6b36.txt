//Defining input ports
module circuit (
  input CLK,
  input [3:0] dataIn,
  input enable,
  input reset
);

//Defining output ports
output reg [3:0] dataOut;
output reg flag;

//Creating internal signals for the circuit
reg [7:0] tempData;
wire [3:0] newData;

//Sequential circuit for data processing
always @(posedge CLK) begin
  if (reset) begin
    tempData <= 8'b00000000;
    dataOut <= 4'b0000;
    flag <= 1'b0;
  end
  else if (enable) begin
    tempData <= dataIn + tempData;
    dataOut <= tempData[3:0];
    flag <= 1'b1;
  end
end

//Combinational circuit for data comparison
assign newData = dataOut ^ 4'b0100;

//Uncomment the following code for debugging
/*
integer i;
initial begin
  $monitor("tempData = %b, dataOut = %b, flag = %b, newData = %b", tempData, dataOut, flag, newData);
  for (i = 0; i < 10; i = i + 1) begin
    #5 {CLK, dataIn, enable, reset} = {$random, $random, $random, $random};
  end
end
*/

endmodule
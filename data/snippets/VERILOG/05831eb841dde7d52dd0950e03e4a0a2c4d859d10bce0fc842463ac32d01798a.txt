// Verilog code for a simple finite state machine
// that implements a traffic light controller

// Define state variables
reg [1:0] current_state, next_state;

// Define encoded state values
parameter RED = 2'b00;
parameter YELLOW = 2'b01;
parameter GREEN = 2'b10;

// Define input signals
input clk, sensor;

// Define output signals
output reg [1:0] lights;

// Define state transition logic
always @ (posedge clk) begin

    // Default case for next state
    next_state = current_state;

    // State transitions
    case (current_state)
        RED: begin
            if (sensor) begin
                next_state = GREEN;
            end
        end
        GREEN: begin
            if (!sensor) begin
                next_state = YELLOW;
            end
        end
        YELLOW: begin
            if (sensor) begin
                next_state = RED;
            end
        end
    endcase
end

// Define output logic
always @ (posedge clk) begin
    case (current_state)
        RED: lights = 2'b010; // Red light on
        GREEN: lights = 2'b100; // Green light on
        YELLOW: lights = 2'b001; // Yellow light on
    endcase
end

// Update current state
always @ (posedge clk) begin
    current_state <= next_state;
end
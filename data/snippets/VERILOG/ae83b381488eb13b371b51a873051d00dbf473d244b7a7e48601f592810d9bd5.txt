// This code snippet is for a 4-bit adder
module adder4bit(input [3:0] a, input [3:0]b, output [3:0]sum);

assign sum[0] = a[0] ^ b[0]; // first bit of sum is the XOR of the first bits of inputs a and b
full_adder fa1(.a(a[1]), .b(b[1]), .cin(sum[0]), .sum(sum[1]), .cout(c1)); // instantiate full adder module for second bit of sum
full_adder fa2(.a(a[2]), .b(b[2]), .cin(c1), .sum(sum[2]), .cout(c2)); // instantiate full adder module for third bit of sum
full_adder fa3(.a(a[3]), .b(b[3]), .cin(c2), .sum(sum[3]), .cout(c3)); // instantiate full adder module for fourth bit of sum

endmodule

// Define full adder module
module full_adder(input a, input b, input cin, output sum, output cout);

assign {cout, sum} = a + b + cin; // bitwise addition with carry
endmodule
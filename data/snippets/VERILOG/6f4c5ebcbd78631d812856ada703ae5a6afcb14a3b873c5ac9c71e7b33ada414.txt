module ComplexMultiplier(
    input [15:0] A_real,        // 16-bit real component of input A
    input [15:0] A_imag,        // 16-bit imaginary component of input A
    input [15:0] B_real,        // 16-bit real component of input B
    input [15:0] B_imag,        // 16-bit imaginary component of input B
    output reg [31:0] P_real,   // 32-bit real component of product
    output reg [31:0] P_imag    // 32-bit imaginary component of product
);

// Start of combinational logic
always @(*) begin
    // Real part of product
    P_real = A_real * B_real - A_imag * B_imag;

    // Imaginary part of product
    P_imag = A_real * B_imag + A_imag * B_real;
end

endmodule
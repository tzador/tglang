module adder (
  input [7:0] a, // first input
  input [7:0] b, // second input
  input cin, // carry-in
  output reg [7:0] sum, // output sum
  output reg overflow // output overflow signal
);
  
  reg [7:0] temp; // temporary register
  reg add_carry; // carry for addition operation
  
  always @(a or b) begin // always block for addition operation
    temp = a + b + cin; // add inputs and carry to temporary register
    if (temp > 255) begin // overflow condition
      sum = temp - 256; // subtract 256 to get actual sum
      add_carry = 1; // set carry for next addition operation
      overflow = 1; // set overflow signal
    end
    else begin // no overflow condition
      sum = temp; // actual sum is same as temporary register
      add_carry = 0; // no carry for next addition operation
      overflow = 0; // no overflow signal
    end
  end
  
endmodule
module circuit(
  input wire clk,
  input wire reset,
  input wire [3:0] data_in,
  output wire [3:0] data_out
);

  parameter DATA_WIDTH = 4; // settings the width of our data
  reg [DATA_WIDTH-1:0] data_reg; // creating a register to store our data
  
  always @(posedge clk) // creating a clocked always block
  begin
    if (reset) // if the reset signal is active
      data_reg <= 0; // reset our data register to 0
    else // if reset signal is not active
      data_reg <= data_in; // store input data into register
  end
  
  assign data_out = data_reg; // assign our data register to the output
  
endmodule
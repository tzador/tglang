// Module defining a D Flip Flop with asynchronous reset and enable inputs

module d_ff (input D, input clk, input arst, input enable, output Q, output Q_bar);
    // 'D' is the data input, 'clk' is the clock input, 'arst' is the asynchronous reset input, 'enable' is the enable input
    // 'Q' is the output, and 'Q_bar' is the complementary output

    reg Q_reg, Q_bar_reg;  // Defining flip flop registers

    // Sequential logic to update the registers
    always @(posedge clk or posedge arst)
        if (arst)
            begin
                Q_reg <= 1'b0;  // Asynchronous reset sets output to 0
                Q_bar_reg <= 1'b1;
            end
        else if (enable)
            begin
                Q_reg <= D;  // If enable is high, output is updated with the input data
                Q_bar_reg <= ~D;
            end
    
    // Assigning outputs to the registers
    assign Q = Q_reg;
    assign Q_bar = Q_bar_reg;
    
endmodule
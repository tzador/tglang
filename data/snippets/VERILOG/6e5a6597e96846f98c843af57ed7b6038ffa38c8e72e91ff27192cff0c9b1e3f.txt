//An example of a hierarchical module in Verilog

module top_module(
    input clk,
    input [7:0] data_in,
    output reg [15:0] sum_out,
    output reg [15:0] product_out
);

    //Sub-module declaration and instantiations
    wire [15:0] adder_out;
    wire [15:0] multiplier_out;

    //Instantiating sub-modules
    adder_module adder(
        .clk(clk),
        .data_a(data_in),
        .data_b(sum_out),
        .sum_out(adder_out)
    );

    multiplier_module multiplier(
        .clk(clk),
        .data_a(data_in),
        .data_b(product_out),
        .product_out(multiplier_out)
    );

    //Output assignments
    assign sum_out = adder_out;
    assign product_out = multiplier_out;

endmodule

//Sub-module for performing addition
module adder_module(
    input clk,
    input [7:0] data_a,
    input [7:0] data_b,
    output reg [15:0] sum_out
);
    always @(posedge clk) begin
        sum_out <= data_a + data_b;
    end
endmodule

//Sub-module for performing multiplication
module multiplier_module(
    input clk,
    input [7:0] data_a,
    input [7:0] data_b,
    output reg [15:0] product_out
);
    always @(posedge clk) begin
        product_out <= data_a * data_b;
    end
endmodule
// this module performs parallel addition of two 8-bit numbers stored in registers A and B
module parallel_add(
    input [7:0] A,
    input [7:0] B,
    output reg [8:0] sum
);

always @(*) begin
    integer i;
    sum = 0;  //initialize sum to 0
    for (i=0; i<8; i=i+1) begin
        if (A[i] == 1 && B[i] == 1) begin
            sum[i+1] = 1; // if both bits are 1, set next bit of sum to 1
            sum[i] = 0; // set current bit of sum to 0
        end else if (A[i] == 1 || B[i] == 1) begin
            if (sum[i] == 1) begin
                sum[i+1] = 1; // if current bit of sum is 1, set next bit of sum to 1
                sum[i] = 0; // set current bit of sum to 0
            end else begin
                sum[i] = 1; // set current bit of sum to 1
            end
        end
    end
    if (sum[8] == 1) begin //if overflow occurs, set MSB of sum to 1
        sum[8] = 0;
        $display("Overflow occurred!"); //display overflow message
    end
end
endmodule
//Annotated code snippet for a serial adder in VERILOG

module serial_adder(
  input clk, //clock input
  input [3:0] num1, //first number input
  input [3:0] num2, //second number input
  input reset, //reset input
  output [4:0] sum //output for sum
  
);

  reg [3:0] temp; //temp variable to store intermediate additions
  reg [3:0] i; // loop counter
  
  always @(posedge clk or posedge reset) begin // always block to perform addition
    if (reset) // checking if reset is high
      temp <= 0; // setting temp variable to 0
    else begin
      temp <= num1 + num2; // performing addition and storing in temp
      for (i = 0; i < 4; i = i + 1) begin // for loop to shift bits and store sum in output
        sum[i+1] <= temp[i]; // shifting bits by 1 and storing in output
      end
    end
  end
endmodule // end of module
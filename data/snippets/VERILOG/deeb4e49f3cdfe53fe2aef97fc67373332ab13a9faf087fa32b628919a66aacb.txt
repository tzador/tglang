`timescale 1ns/1ps
// timescale statement sets the simulation time units to 1 nanosecond per 1 picosecond.

module example(input clk, input rst, input [7:0] data, output reg [7:0] result);

always @(posedge clk) begin
// always block executes on each positive edge of the clock.
    if (rst) begin
    //if statement checks if the reset signal is high.
        result <= 0;
        // assigns 0 to result if reset is high.
    end else begin
        case(data)
        // case statement checks different possible values of data.
            8'h00: result <= 8'h00;
            // if data is 8'h00, assigns 8'h00 to result.
            8'h01: result <= 8'h01;
            // if data is 8'h01, assigns 8'h01 to result.
            8'h02: result <= 8'h02;
            // if data is 8'h02, assigns 8'h02 to result.
            default: result <= data;
            // if data is not any of the above values, assigns data to result.
        endcase
    end
end

endmodule
// endmodule statement closes the module definition.
// This code snippet uses a switch-case statement to perform different operations based on a given input value.

module switch_case();
    
    // Declare inputs and outputs
    input [2:0] val; // 3-bit input value
    output reg [3:0] out; // 4-bit output value
    
    // Declare internal signals
    wire [1:0] val_bits; // 2-bit version of input value for comparison
    
    // Assign val_bits based on input value
    assign val_bits = val[1:0];
    
    // Perform operations based on input value
    
    always @ (val) begin
        case (val)
            3'b000: out = 3'b001; // If input is 0, output is 1
            3'b001: out = 3'b010; // If input is 1, output is 2
            3'b010: out = 3'b100; // If input is 2, output is 4
            3'b011: out = 3'b011; // If input is 3, output is 3
            3'b100: out = 3'b110; // If input is 4, output is 6
            3'b101: out = 3'b011; // If input is 5, output is 3
            3'b110: out = 3'b111; // If input is 6, output is 7
            3'b111: out = 3'b010; // If input is 7, output is 2
        endcase 
    end
    
endmodule
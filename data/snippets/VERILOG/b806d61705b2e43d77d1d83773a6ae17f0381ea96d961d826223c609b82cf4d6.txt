// This is a code snippet in VERILOG, a hardware description language used in digital circuit design.

module counter (
  input clk,       // input clock signal
  input rst,       // input reset signal
  output reg [3:0] out  // output register that counts up from 0 to 15
);
  
  reg [3:0] count;      // register used for counting
  
  always @(posedge clk) begin  // always block to trigger on positive edge of clock
    if (rst) begin              // check for reset signal
      count <= 4'b0;            // if reset is high, reset count to 0
    end
    else begin                  // if reset is low
      if (count == 4'b1111) begin  // check if count is at maximum value (15)
        count <= 4'b0;              // if yes, reset count to 0
      end
      else begin                  // if count is not at maximum value
        count <= count + 4'b1;      // increment the count by 1
      end
    end
  end
  
  assign out = count;  // assign output to the current value of the count register
  
endmodule
// Module for an 8-bit counter that counts up every 10 clock cycles

// Declaring inputs and outputs
module counter(input clk,
               input rst,
               output reg [7:0] count);

   // Initializing counter variable
   reg [7:0] temp_count = 0;

   // Creating a synchronous reset
   always @ (posedge clk or posedge rst) begin
      if (rst) begin
         temp_count <= 0;
      end
      else begin
         // Incrementing counter every 10 clock cycles
         if (count == 10) begin
            temp_count <= temp_count + 1;
         end
      end
   end

   // Assigning output to counter variable
   assign count = temp_count;

endmodule
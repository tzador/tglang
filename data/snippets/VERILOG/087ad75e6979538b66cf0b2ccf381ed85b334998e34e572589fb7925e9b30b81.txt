`timescale 1ns / 1ps

//Define module
module test circuit(
    //Use inputs and outputs
    input clk,
    input reset,
    input [7:0] data_in,
    output reg [7:0] data_out
);

//Define internal variables
reg [7:0] temp_reg;
reg count;

//Define clock process
always@(posedge clk) begin
    //Reset state
    if(reset) begin
        count <= 0;
        temp_reg <= 8'b0;
    end
    //Main logic
    else begin
        //Increment count
        if(count == 8) begin
            count <= 0;
        end
        //Shift right by 1 bit and add data_in
        temp_reg <= {data_in[count], temp_reg[7:1]};
        count <= count + 1;
    end
end

//Assign output to temp_reg
assign data_out = temp_reg;

endmodule
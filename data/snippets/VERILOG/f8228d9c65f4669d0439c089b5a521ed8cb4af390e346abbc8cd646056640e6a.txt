// This module calculates the sum of two 8-bit binary numbers
// and outputs the result in an 8-bit binary format.

module binary_adder(
    input [7:0] num1, // first input number
    input [7:0] num2, // second input number
    output [7:0] result // output of the sum
);

reg [7:0] num1_reg, num2_reg, result_reg; // internal registers to store numbers and result
reg carry; // carry bit

always @(num1 or num2) begin
    num1_reg = num1; // assign inputs to registers
    num2_reg = num2;

    result_reg = num1_reg ^ num2_reg ^ carry; // perform XOR operation on inputs and carry to get result
    carry = (num1_reg & num2_reg) | (num1_reg & carry) | (num2_reg & carry); // calculate carry bit using logical AND and OR operations
end

assign result = result_reg; // assign final result to output

endmodule
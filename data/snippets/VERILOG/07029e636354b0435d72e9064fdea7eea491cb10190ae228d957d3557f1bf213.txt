module counter
(
  input wire clock,
  input wire reset,
  input wire enable,
  input wire [3:0] data_in,
  output reg [3:0] data_out
);

  reg [3:0] count; //register to store the counter value

  //always block to increment count when enable signal is high
  always @ (posedge clock) begin
    if (reset) begin //if reset signal is high, reset count to 0
      count <= 4'b0000;
    end
    else if (enable) begin //if enable signal is high, increment count
      count <= count + 1;
    end
  end

  //assign block to output count value when enable signal is high
  assign data_out = (enable) ? count : data_in; 

endmodule
// This module represents a 4-bit register with asynchronous clear and set inputs
module register_4bit(
    input clk, // clock input
    input clr, // asynchronous clear input
    input set, // asynchronous set input
    input [3:0] in, // input data
    output reg [3:0] out // output data
);
    always @(posedge clk or negedge clr or negedge set) // always block for sequential logic
    begin
        if (clr == 1) // check asynchronous clear input
            out <= 4'b0000; // clear output
        else if (set == 1) // check asynchronous set input
            out <= 4'b1111; // set output
        else // if no async input, update output with input data on clock edge
            out <= in;
    end
endmodule
module ALU(input [7:0] A,    // 8-bit input variable A
           input [7:0] B,    // 8-bit input variable B
           input [2:0] func, // 3-bit input variable func for function selection
           output reg [7:0] result // 8-bit output variable for storing result
           ); 

  always @ (A, B, func) begin
    case(func)
      3'b000: result = A + B; // function for addition
      3'b001: result = A - B; // function for subtraction
      3'b010: result = A & B; // function for bitwise AND
      3'b011: result = A | B; // function for bitwise OR
      3'b100: result = ~(A | B); // function for bitwise NOT
      3'b101: result = A ^ B; // function for bitwise XOR
      default: result = A; // default function is A
    endcase
  end

endmodule
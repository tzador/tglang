// Defining a module called combinational logic
module combinational_logic (input a, b, c,
                            output reg d);
                            
    // Declaring internal signals
    wire result;
    
    // Code block for full adder
    assign result = a ^ b ^ c;
    assign d = result;
    
    // Code block for half adder
    always @ (*)
    begin
        result = a & b;
        d = result;
    end
    
    // Code block for multiplexer 2:1
    always @ (*)
    begin
        if (d == 1)
            assign d = a;
        else
            assign d = b;
    end
    
    // Code block for demultiplexer 1:2
    always @ (*)
    begin
        case (a)
            2'b00: d = 0;
            2'b01: d = b;
            2'b10: d = c;
            2'b11: d = a;
        endcase
    end
    
    // Code block for comparator
    always @ (*)
    begin
        if (a < b)
            assign d = 1;
        else
            assign d = 0;
    end
    
    // Code block for buffer
    always @ (*)
    begin
        d = a;
    end
    
endmodule
// This code snippet implements a 4-bit binary counter with asynchronous reset

module counter (input clk, input arst, output reg [3:0] count);

// creating an always block for synchronous reset condition
always @ (posedge clk)
begin
// if asynchronous reset is high, then reset the counter to 0
if (arst)
count <= 4'd0;
// if asynchronous reset is low, then increment count
else
count <= count + 1;
end

endmodule
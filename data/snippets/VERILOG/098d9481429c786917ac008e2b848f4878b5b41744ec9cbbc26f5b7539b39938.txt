//This circuit calculates the sum of 2 numbers using a carry look ahead adder
module carry_lookahead_adder(input [3:0] A, B, //4-bit inputs
                            output [3:0] Sum, //4-bit output
                            output C_out //carry output
                            );
 
wire [4:0] P, G; //wires for propagate and generate signals
 
//propagate and generate equations
/*Buff for sum*/assign P[0] = A[0] | B[0];
/*AND gate for carry out*/assign G[0] = A[0] & B[0];
assign P[1] = P[0] & (A[1] | B[1]);
assign G[1] = G[0] | (P[0] & B[1]) | (P[0] & A[1]);
assign P[2] = P[1] & (A[2] | B[2]);
assign G[2] = G[1] | (P[1] & B[2]) | (P[1] & A[2]);
assign P[3] = (P[2] & (A[3] | B[3]));
assign G[3] = G[2] | (P[2] & B[3]) | (P[2] & A[3]);
assign P[4] = P[3];
assign G[4] = G[3];
 
//sum output
assign Sum[0] = A[0] ^ B[0];
assign Sum[1] = P[0] ^ B[1];
assign Sum[2] = P[1] ^ B[2];
assign Sum[3] = P[2] ^ B[3];
 
//carry output calculation
assign C_out = G[4] | (G[3] & P[3]);
endmodule
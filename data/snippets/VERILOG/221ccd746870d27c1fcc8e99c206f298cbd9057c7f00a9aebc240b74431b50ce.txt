`timescale 1ns / 1ps  // setting the timescale of the code

module three_bit_adder(
    input a, b, c_in,       // defining the three inputs
    output sum, c_out       // defining the two outputs
);

wire and1, and2, and3;      // defining wires to hold intermediate outputs
wire or1, or2;              // defining wires to hold final outputs

assign sum = a ^ b ^ c_in;  // calculating the sum output using XOR gates

assign and1 = a & b;        // calculating the first intermediate output using AND gates
assign and2 = b & c_in;     // calculating the second intermediate output using AND gates
assign and3 = a & c_in;     // calculating the third intermediate output using AND gates

assign or1 = and1 | and2;   // calculating the first ORed output using OR gates
assign or2 = and3 | or1;    // calculating the final ORed output using OR gates

assign c_out = or2;         // setting the c_out output as the final ORed output

endmodule  // end of the module and code
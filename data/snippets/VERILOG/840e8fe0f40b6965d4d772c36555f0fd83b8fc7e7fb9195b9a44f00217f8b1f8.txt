module my_module (
    input a,
    output b,
    input [3:0] c,
    output reg [1:0] d
);

    /** This is a module with 4 inputs and 2 outputs
     * `a` is an input signal
     * `b` is an output signal
     * `c` is a 4-bit input bus
     * `d` is a 2-bit reg output
     */
     
    // combinational logic to generate output b
    assign b = a & c[3] | ~c[1] ^ c[0];
    
    // sequential logic to update output d
    always @ (posedge clk) begin
        // if a is 1, set d to 2'b10
        if (a) begin
            d <= 2'b10;
        end
        // if a is 0, set d to 2'b11
        else begin
            d <= 2'b11;
        end
    end
    
endmodule
// This is a comment in Verilog

// Declaring a 32-bit data type
typedef logic [31:0] data_t;

// Creating a module named "multiply"
module multiply (input data_t A, input data_t B, output data_t out);
	// Defining internal signals
	logic [31:0] temp;
	
	// Initializing temp to 0
	initial begin
		temp = 0;
	end
	
	// Performing multiplication using for loop
	// i starts from 0 and stops at 31
	// temp is shifted to left by i bits and then added with A*B
	// This process is repeated for each bit of B, effectively multiplying A and B
	generate
		for (genvar i = 0; i < 32; i++) begin : multiply_loop
			assign temp = temp << 1 + (A*B);
			out = temp;
		end
	endgenerate
endmodule
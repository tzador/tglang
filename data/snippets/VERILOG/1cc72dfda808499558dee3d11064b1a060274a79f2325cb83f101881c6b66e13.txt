module test_module(
input clk,
input [3:0] data_in,
output reg [7:0] data_out
);

always@(posedge clk) begin

case (data_in)
    4'd0: data_out <= 8'b00000000;
    4'd1: data_out <= 8'b00000001;
    4'd2: data_out <= 8'b00000010;
    4'd3: data_out <= 8'b00000011;
    4'd4: data_out <= 8'b00000100;
    4'd5: data_out <= 8'b00000101;
    4'd6: data_out <= 8'b00000110;
    4'd7: data_out <= 8'b00000111;
    4'd8: data_out <= 8'b00001000;
    4'd9: data_out <= 8'b00001001;
    4'd10: data_out <= 8'b00001010;
    4'd11: data_out <= 8'b00001011;
    4'd12: data_out <= 8'b00001100;
    4'd13: data_out <= 8'b00001101;
    4'd14: data_out <= 8'b00001110;
    4'd15: data_out <= 8'b00001111;
     // default case
    default: data_out <= 8'b00000000;
endcase
end

endmodule
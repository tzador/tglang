`timescale 1ns / 1ns  // Set the simulation timescale to 1 ns per time unit
module divide_by_n #(parameter N = 4) (input clk, input reset, input [N-1:0] data_in, output reg [N-1:0] data_out, output reg valid);
	reg [N-1:0] count; // Initialize a register to track the number of counts
	always @(posedge clk or posedge reset) begin
		if (reset) begin // Reset the counter if reset is high
			data_out <= 0;
			valid <= 0;
			count <= 0;
		end
		else begin // Otherwise increment count and check for valid output
			count <= count + 1;
			if (count == data_in) begin
				data_out <= 0;
				valid <= 1;
				count <= 0;
			end
		end
	end
endmodule
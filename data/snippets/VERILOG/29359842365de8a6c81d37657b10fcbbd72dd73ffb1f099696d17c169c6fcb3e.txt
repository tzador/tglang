// Module declaration
module ALU(input [3:0] A, B,
                 input [2:0] control,
                 output [3:0] result);

// Declare internal wires
wire [3:0] sum, diff, product, quotient, and, or, nand, nor;

// Implement the logic
assign sum = A + B;
assign diff = A - B;
assign product = A * B;
assign quotient = A / B;
assign and = A & B;
assign or = A | B;
assign nand = ~(A & B);
assign nor = ~(A | B);

// Use control inputs to select output 
// Default to sum output
always @ (*)
begin
  case (control)
  3'b000: result = sum;
  3'b001: result = diff;
  3'b010: result = product;
  3'b011: result = quotient;
  3'b100: result = and;
  3'b101: result = or;
  3'b110: result = nand;
  3'b111: result = nor;
  default: result = sum; // Default case
end

endmodule
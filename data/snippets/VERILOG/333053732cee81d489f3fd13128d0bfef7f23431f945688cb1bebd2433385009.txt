// This is a module named 'Register'
module Register(
    input clk, // input for clock signal
    input rst, // input for reset signal
    input [3:0] in, // input bus of 4 bits
    output [7:0] out // output bus of 8 bits
);
    reg [7:0] temp; // 8-bit register declaration
    always @(posedge clk or negedge rst) begin // always block triggering on positive edge of clock or negative edge of reset
        if (!rst) begin // if reset is active (high)
            temp <= 8'b0; // set temp register to 0
        end else begin // if reset is not active
            temp <= {temp[6:0], in}; // shift in data at LSB and shift out data at MSB
        end
    end
    
    assign out = temp; // assign output as contents of temp register
    
endmodule // end of module
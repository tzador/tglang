// This is a module that represents a 4-bit binary counter with asynchronous reset 

module counter4_asyn_reset(
  input clk, // clock input
  input [3:0] din, // data input
  input asyn_reset, // asynchronous reset input
  output [3:0] count // 4-bit count output
); // end module counter4_asyn_reset

reg [3:0] count; // register to hold the count

always @ (posedge clk or asyn_reset) begin // always block triggered by positive edge of clock or asynchronous reset
  if (asyn_reset) begin // reset condition
    count = 4'b0000; // reset count to 0
  end
  else begin // normal counting condition
    count = count + din; // increment count by input data
  end
end // end always block

endmodule // end module counter4_asyn_reset
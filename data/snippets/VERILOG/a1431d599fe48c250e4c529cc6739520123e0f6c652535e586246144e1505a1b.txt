`timescale 1ns/1ps // specifies the timing for the simulation
module counter(input clk, output [7:0] counter_output); // declares the module with input clock and output counter of length 8
    reg [7:0] count; // declares a register of length 8 to store the count value
    always @(posedge clk) begin // starts an always block that executes on the positive edge of the clock
        if (count == 8'b11111111) // checks if the count value has reached the maximum of 255 (8 bits)
            count <= 8'b00000000; // resets the count to 0
        else
            count <= count + 1; // increments the count value by 1
    end
    assign counter_output = count; // assigns the count value to the counter output
endmodule // ends the module
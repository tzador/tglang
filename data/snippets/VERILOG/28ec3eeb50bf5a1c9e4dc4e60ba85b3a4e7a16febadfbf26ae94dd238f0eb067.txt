// Definition of a 3-bit adder with overflow detection
// Input signals are A (3 bits), B (3 bits), and carry_in (1 bit)
// Output signals are sum (3 bits) and overflow (1 bit)
module adder3 (
  input [2:0] A, // 3-bit input signal A
  input [2:0] B, // 3-bit input signal B
  input carry_in, // 1-bit carry input signal
  output [2:0] sum, // 3-bit output signal sum
  output overflow // 1-bit output signal overflow
);

// Internal wire declarations
wire [2:0] sum_internal; // 3-bit internal signal for sum calculation
wire overflow_internal; // 1-bit internal signal for overflow detection

// Logic for sum calculation
// Use full adder logic to add A and B with carry_in
// Store result in sum_internal signal
full_adder fa1(A[0], B[0], carry_in, sum_internal[0], ovf[0]);
full_adder fa2(A[1], B[1], ovf[0], sum_internal[1], ovf[1]);
full_adder fa3(A[2], B[2], ovf[1], sum_internal[2], overflow_internal);

// Output assignment
assign sum = sum_internal; // assign calculated sum to output
assign overflow = overflow_internal; // assign calculated overflow to output

endmodule

// Definition of a full adder module
// Input signals are A (1 bit), B (1 bit), carry_in (1 bit)
// Output signals are sum (1 bit) and overflow (1 bit)
module full_adder (
  input A, // 1-bit input signal A
  input B, // 1-bit input signal B
  input carry_in, // 1-bit carry input signal
  output sum, // 1-bit output signal sum
  output overflow // 1-bit output signal overflow
);

// Internal wire declarations
wire sum_internal; // 1-bit internal signal for sum calculation
wire carry_out_internal; // 1-bit internal signal for carry output

// Logic for sum calculation
// Calculate sum using XOR logic
assign sum_internal = A ^ B ^ carry_in;

// Logic for carry output calculation
// Calculate carry_out using majority function
assign carry_out_internal = (A & B) | (A & carry_in) | (B & carry_in);

// Output assignment
assign sum = sum_internal; // assign calculated sum to output
assign overflow = carry_out_internal; // assign calculated carry_out to overflow output

endmodule
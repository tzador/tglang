module counter(
input clk, //input clock signal
input rst, //input reset signal
input en, //input enable signal
output reg [3:0] count //output 4-bit counter
);

reg [3:0] temp; //temporary register to store count value

always @ (posedge clk) //synchronous process
begin
  if (rst) //if reset is asserted
  begin
    temp <= 0; //reset counter value to 0
  end
  else if (en) //if enable is asserted
  begin
    temp <= temp + 1; //increment counter value by 1
  end
end

assign count = temp; //assign temp to count output

endmodule
module example (input wire [31:0] a, input wire [31:0] b, output reg [31:0] out);
    /*This is a module declaration in Verilog*/
    reg [31:0] temp;
    /*A register declaration with length of 32 bits*/
    parameter WIDTH = 8;
    /*A parameter declaration with default value of 8*/

    always @(a, b)
    /*This is an always block that executes whenever there is a change in the inputs*/
    begin
        temp = a + b;
        /*Adding the inputs and storing the result in the temporary register*/
        if (temp > WIDTH)
        /*Conditional statement to check if the result is greater than the parameter value*/
        begin
            out = temp - WIDTH;
            /*Subtracting the parameter value from the result and assigning it to the output*/
        end
        else
        begin
            out = temp;
            /*If the result is not greater than the parameter value, just assign the result to the output*/
        end
    end
endmodule
/*End of the module example*/
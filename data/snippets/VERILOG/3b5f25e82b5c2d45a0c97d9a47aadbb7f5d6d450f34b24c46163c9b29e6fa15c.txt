// This code snippet creates a 4-bit counter with synchronous reset and a modulus of 10
module Counter(
  input clk, // clock input
  input rst, // synchronous reset input 
  output [3:0] count // output for the 4-bit counter
);

reg [3:0] count; // register to hold count value

always @ (posedge clk) begin // on positive edge of clock
  if (rst) begin // if reset is enabled
    count <= 4'b0000; // reset count value to 0
  end else begin // if reset is not enabled
    if (count < 10) begin // if count value is less than 10
      count <= count + 1; // increment count by 1
    end else begin // if count value is equal to or greater than 10
      count <= 4'b0000; // reset count value to 0
    end
  end
end

endmodule // end of module
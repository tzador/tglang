//Define inputs and outputs
    module adder(input [7:0] A, B, output [7:0] SUM);
    
    //Internal signal declaration
    wire [7:0] internalSum;
    
    //Instantiate full adders
    fulladder fa0(.a(A[0]), .b(B[0]), .c(IN), .sum(internalSum[0]), .cout(cout));
    fulladder fa1(.a(A[1]), .b(B[1]), .c(IN), .sum(internalSum[1]), .cout(cout));
    fulladder fa2(.a(A[2]), .b(B[2]), .c(IN), .sum(internalSum[2]), .cout(cout));
    fulladder fa3(.a(A[3]), .b(B[3]), .c(IN), .sum(internalSum[3]), .cout(cout));
    fulladder fa4(.a(A[4]), .b(B[4]), .c(IN), .sum(internalSum[4]), .cout(cout));
    fulladder fa5(.a(A[5]), .b(B[5]), .c(IN), .sum(internalSum[5]), .cout(cout));
    fulladder fa6(.a(A[6]), .b(B[6]), .c(IN), .sum(internalSum[6]), .cout(cout));
    fulladder fa7(.a(A[7]), .b(B[7]), .c(IN), .sum(internalSum[7]), .cout(cout));
    
    //Instantiate final full adder for carry out
    fulladder fa8(.a(internalSum[8]), .b(IN), .c(IN), .sum(SUM[8]), .cout(cout));
    
    //Add internal signals for carry
    wire [8:0] internalCarry;
    assign internalCarry = {cout, {7{1'b0}}};
    
    //Instantiate 8-bit adder module with carry input
    add8 adder(.A(internalSum), .B(internalCarry), .SUM(SUM));
    
    endmodule
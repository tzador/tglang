module multiplier(
    input [31:0] a,
    input [31:0] b,
    output [63:0] result
    );

    assign result = a * b; //assigns the multiplied result to the output port

    //internal variables for the multiplier
    reg [31:0] a_shift_reg; 
    reg [31:0] b_shift_reg;
    reg [63:0] result_reg;

    always @(*) begin //sensitivity list
        result_reg = 0; //initialize result register to 0
        a_shift_reg = a; //assign input a to shift register
        b_shift_reg = b; //assign input b to shift register

        for (int i=0; i<32; i=i+1) begin //loop for 32 bits of input
            if (b_shift_reg[0] == 1) begin //check LSB of input b
                result_reg = result_reg + (a_shift_reg << i); //left shift input a by i and add to result register
            end

            b_shift_reg = b_shift_reg >> 1; //right shift input b by 1
        end
    end

    assign result = result_reg; //assign result register to output port

endmodule
// This code snippet is written in the VERILOG programming language.
// It is a complex code snippet that illustrates the use of parameters, tasks, and a for loop.
// The code snippet is designed to generate a pattern of blocks on a FPGA board.
module pattern_generator(
    input clk, // Clock input
    output reg [15:0] out // Output for the pattern
);

parameter WIDTH = 4; // Width of the pattern
parameter HEIGHT = 4; // Height of the pattern

reg [WIDTH-1:0] block [HEIGHT-1:0]; // Initializing an array for the blocks

// Task to generate the pattern
task generate_pattern;
begin
    integer i, j; // Declaring integer variables for the for loop
    for (i = 0; i < WIDTH; i = i + 1) begin // For loop for the width
        for (j = 0; j < HEIGHT; j = j + 1) begin // For loop for the height
            block[i][j] <= (i+j)%2; // Generating the pattern using modulus
        end
    end
end
endtask

always @(posedge clk) begin // Always block for the clock input
    generate_pattern; // Calling the task to generate the pattern
    out <= {block[3][3], block[3][2], block[3][1], block[3][0], // Assigning the output based on the pattern array
            block[2][3], block[2][2], block[2][1], block[2][0],
            block[1][3], block[1][2], block[1][1], block[1][0],
            block[0][3], block[0][2], block[0][1], block[0][0]};
end

endmodule
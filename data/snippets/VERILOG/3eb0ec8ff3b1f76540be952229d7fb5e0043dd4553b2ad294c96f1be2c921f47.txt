module adder1bit(a, b, cin, cout, sum);
// 1-bit adder module with inputs a, b, and carry-in cin
// outputs cout (carry-out) and sum

    input a;  // input a
    input b;  // input b
    input cin;  // input carry-in
    
    output cout;  // output carry-out
    output sum;  // output sum
    
    wire a_xor_b;  // wire to hold result of a xor b
    wire a_and_b;  // wire to hold result of a and b
    
    // xor gate for a xor b
    xor gate_a_xor_b(a_xor_b, a, b);
    
    // and gate for a and b
    and gate_a_and_b(a_and_b, a, b);
    
    // sum output is a xor b xor cin
    xor sum_gate(sum, a_xor_b, cin);
    
    // carry-out output is a and b + cin and (a xor b)
    // thus, cout = (a and b) + (cin and (a xor b))
    // first and gate for a and b
    and and_gate1(cout, a_and_b, cin);
    // second and gate for cin and (a xor b)
    and and_gate2(cout, cin, a_xor_b);
    
endmodule
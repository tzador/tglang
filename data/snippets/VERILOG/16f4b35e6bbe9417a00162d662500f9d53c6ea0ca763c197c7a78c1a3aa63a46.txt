`timescale 1ns/1ps //sets the timescale of the simulation

module complex_multiplier ( //defines the module for the complex multiplier
    input [7:0] a_real, //input for the real component of the first complex number
    input [7:0] a_imag, //input for the imaginary component of the first complex number
    input [7:0] b_real, //input for the real component of the second complex number
    input [7:0] b_imag, //input for the imaginary component of the second complex number
    output [15:0] result_real, //output for the real component of the result
    output [15:0] result_imag //output for the imaginary component of the result
);

/* This module takes two complex numbers and performs complex multiplication
   by multiplying the real components and subtracting the product of imaginary
   components from it. The imaginary component is obtained by multiplying 
   the real component of one number with the imaginary component of the other number,
   and adding it to the product of the imaginary components. */

wire [15:0] prod_real; //wire to store the product of real components
wire [15:0] prod_imag; //wire to store the product of imaginary components

assign prod_real = a_real * b_real - a_imag * b_imag; //calculating the product of real components
assign prod_imag = a_real * b_imag + a_imag * b_real; //calculating the product of imaginary components

assign result_real = prod_real; //assigning the product of real components as the result
assign result_imag = prod_imag; //assigning the product of imaginary components as the result

endmodule //end of module
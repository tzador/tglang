parameter WIDTH = 8; //setting a parameter for the width of the data bus
parameter NUM_REGS = 16; //setting a parameter for the number of registers
reg [WIDTH-1:0] data_bus; //declaring a register for the data bus with the width set by the parameter
reg [WIDTH-1:0] register [NUM_REGS-1:0]; //declaring an array of registers with the size set by the parameter
always @ (posedge clk) begin //defining an always block for clock edge detection
    data_bus <= register[addr]; //assigning data from the selected register to the data bus
end
always @ (posedge reset) begin //defining an always block for reset signal detection
    for (int i=0; i<NUM_REGS; i=i+1) begin //iterating through all the registers
        register[i] <= 0; //resetting the value of the registers to 0
    end
end
always @ (addr or data_in) begin //defining an always block for address or data input changes
    register[addr] <= data_in; //assigning the input data to the selected register
end
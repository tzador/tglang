module adder (input [7:0] a, b,
              input cin,
              output [8:0] sum,
              output cout);

  wire [7:0] a_xor_b;
  wire [7:0] a_and_b;
  wire [7:0] a_or_b;
  wire [1:0] cin_and_xor;
  wire [1:0] carry_wire;

  // Full Adder
  full_adder fa0 (a[0], b[0], cin, sum[0], carry_wire[0]);
  full_adder fa1 (a[1], b[1], carry_wire[0], sum[1], carry_wire[1]);
  full_adder fa2 (a[2], b[2], carry_wire[1], sum[2], carry_wire[2]);
  full_adder fa3 (a[3], b[3], carry_wire[2], sum[3], carry_wire[3]);
  full_adder fa4 (a[4], b[4], carry_wire[3], sum[4], carry_wire[4]);
  full_adder fa5 (a[5], b[5], carry_wire[4], sum[5], carry_wire[5]);
  full_adder fa6 (a[6], b[6], carry_wire[5], sum[6], carry_wire[6]);
  full_adder fa7 (a[7], b[7], carry_wire[6], sum[7], carry_wire[7]);

  // Generate carry out
  and (cin_and_xor, cin, a_xor_b);
  or (a_or_b, a_and_b, cin_and_xor[0]);
  and (cout, a_and_b, a_or_b);

endmodule
// Defining a module
module counter(
    input clk, // Clock input
    input rst, // Reset input
    output [3:0] count // 4-bit output
    );

    reg [3:0] q; // Register for storing the count value

    // Synchronous always block triggered by clock and reset
    always @(posedge clk or posedge rst) begin
    if (rst) // If reset is high
        q <= 4'b0000; // Reset count value to 0
    else // If reset is low
        q <= q + 1; // Increment count value by 1
    end

    assign count = q; // Assign count output to q register

endmodule // End of module
//Defining parameters
parameter WIDTH = 32;
parameter DEPTH = 64;
//Defining input and output ports
module myModule(
  input [WIDTH-1:0] input1,
  input [WIDTH-1:0] input2,
  output [WIDTH-1:0] output1,
  output [WIDTH-1:0] output2
);
//Declaring internal variables and wire
reg [WIDTH-1:0] reg1;
reg [WIDTH-1:0] reg2;
wire [WIDTH-1:0] wire1;
//Assigning values to internal variables and wire using always block
always @* begin
  reg1 = input1 + input2;
  reg2 = input1 - input2;
  wire1 = reg1 ^ reg2;
end
//Defining multiplexer using case statement
assign output1 = (wire1[7:0] == 8'b00000000) ? reg1 : reg2;
//Defining memory array
reg [WIDTH-1:0] mem [0:DEPTH-1];
//Writing to memory using for loop
initial begin
  for(int i = 0; i < DEPTH; i = i+1) begin
    mem[i] = i % WIDTH;
  end
end
//Always block to read from memory
always @(posedge clk) begin
  output2 = mem[reg1[3:0]];
end
endmodule
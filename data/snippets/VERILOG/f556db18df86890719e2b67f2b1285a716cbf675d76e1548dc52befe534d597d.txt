/* This is a complex code snippet that defines a 2-bit full adder with carry in and out */
   module full_adder (a, b, ci, sum, co);
   input a, b, ci;
   output sum, co;
     
     // precursor adder for bit 0
     wire s0, c0;
     assign {s0, c0} = a ^ b; // XOR gate used for bit 0 sum
     assign sum = s0 ^ ci; // final sum
     assign co = c0 | (s0 & ci); // carry out
     
     // final sum for bit 1 using precursor adder
     wire s1;
     assign {s1, co} = s0 ^ b; // XOR gate used for bit 1 sum
     assign sum = {s1, sum}; // final sum with bit 1 added
     
   endmodule
// This is a code snippet for a 32-bit register with synchronous reset

module register_32(
    input [31:0] input_data,   // input data of 32 bits
    input clk,                 // clock input
    input rst,                 // reset input
    output reg [31:0] output   // register output of 32 bits
);

always @(posedge clk) begin   // always block for positive clock edge
    if (rst) begin             // if reset is high
        output <= 0;           // output is set to 0
    end else begin             // if reset is low
        output <= input_data;  // output is assigned with input data
    end
end

endmodule
//Defining a parameter
parameter myParam = 8;

//Creating a module
module myModule (
    input clk,
    input [myParam-1:0] data_in,
    output [myParam-1:0] data_out,
    output reg [myParam-1:0] data_reg
    );

    //Declaring internal wires
    wire [myParam-1:0] data_wire;

    //D flip-flop instance
    always @ (posedge clk) begin
        data_reg <= data_in;
    end

    //Assigning data_wire to data_in
    assign data_wire = data_in;

    //Multiplexer instance
    always @ (*) begin
        //Using conditional statements
        if (data_reg[0] == 1'b1) begin
            data_out <= data_wire;
        end else begin
            //Using a ternary operator
            data_out <= (data_reg[1] == 1'b0) ? data_in : data_wire;
        end
    end
endmodule
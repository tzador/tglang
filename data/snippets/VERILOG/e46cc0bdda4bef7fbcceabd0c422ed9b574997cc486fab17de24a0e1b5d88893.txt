//This code snippet is a 4-bit adder using Verilog
module adder_4bit (a, b, sum);
  input [3:0] a;
  input [3:0] b;
  output [3:0] sum;
  //defines a 3:0 array that holds the input values

  assign sum = a + b; //assigns sum to be the result of the input values added together

  always@(a, b) //sensitivity list that ensures the always block is triggered when the input values change
    begin
    case({a,b}) //checks the value of a and b together
      //case statements correspond to different combinations of a and b
      2'b00: sum = a + b; //if both a and b are 0, sum is just a + b
      2'b01: sum = a + b + 1; //if a is 1 and b is 0, sum is a + b + 1 (carry in)
      2'b10: sum = a + b + 1; //if a is 0 and b is 1, sum is a + b + 1 (carry in)
      2'b11: sum = a + b + 2; //if both a and b are 1, sum is a + b + 2 (both carry in)
    endcase
  end //end of always block
endmodule //end of module
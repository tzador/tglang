// This is a Verilog code snippet for a counter design
module counter (input clk, enable, reset, output reg [3:0] count);
	//declare register for the count variable
	reg [3:0] count_reg;

	//assign the count output to the count_reg
	assign count = count_reg;

	//always block for synchronous reset
	always @ (posedge clk) begin
		if (reset) begin
			count_reg <= 0;
		end
		else if (enable) begin
			//increment the count variable by 1
			count_reg <= count_reg + 1;
		end
	end

	//always block for asynchronous reset
	always @ (negedge reset) begin
		count_reg <= 0;
	end
endmodule
//Defining a 32-bit register with asynchronous reset
//and active-high enable signal
reg [31:0] register; //defining 32-bit register

always @ (negedge reset) begin //asynchronous reset
    register <= 0; //reset register to 0
end

always @ (posedge enable) begin //active-high enable signal
    if (register_enable) begin
        register <= data_in; //store data into register
    end
end
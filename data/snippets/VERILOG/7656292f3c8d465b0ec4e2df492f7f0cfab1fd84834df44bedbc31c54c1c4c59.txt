// Module Declaration
module FullAdder 
( 
input [1:0] A, B, // inputs A, B (2-bit)
input Cin, // input Carry-in bit
output [1:0] S, // output Sum bits (2-bit)
output Cout // output Carry-out bit
);
 // Creates temporary variable, carry
reg [1:0] carry; 
 // Full-Adder Logic
always @ (A or B or Cin)
begin
carry[0] = (A[0] & B[0]) | (A[0] & Cin) | (B[0] & Cin); // calculates carry bit for the first sum bit
carry[1] = (A[1] & B[1]) | (A[1] & carry[0]) | (B[1] & carry[0]); // calculates carry bit for the second sum bit
S = A ^ B ^ Cin; // calculates sum bits using XOR logic
Cout = carry[1]; // assigns carry-out bit as the second carry bit
end
endmodule
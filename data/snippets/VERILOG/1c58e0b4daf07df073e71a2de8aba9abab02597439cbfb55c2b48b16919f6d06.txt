// This module defines a 16-bit comparator using decision-making constructs and logical operators

module comparator_16bit(
  input [15:0] A,B, // inputs A and B are 16-bit binary numbers
  output reg [2:0] out // output is a 3-bit binary number representing the comparison result
);

// Define intermediate wires for the inputs
wire [15:0] A_inv;
wire [15:0] B_inv;

// Use bitwise inversion operator ~ to invert the inputs
assign A_inv = ~A;
assign B_inv = ~B;

// Use conditional operator ? : to compare the inverted inputs and assign the result to the output
// Expression A_inv > B_inv compares the 16-bit numbers as unsigned values
// If A_inv > B_inv is true, output is assigned 3'b001, else it is assigned 3'b010
assign out = A_inv > B_inv ? 3'b001 : 3'b010;

// Use logical operator ! to also check for equality between the inverted inputs
// If A_inv == B_inv, output is assigned 3'b100, else it remains unchanged
assign out = !A_inv && !B_inv ? 3'b100 : out;

endmodule
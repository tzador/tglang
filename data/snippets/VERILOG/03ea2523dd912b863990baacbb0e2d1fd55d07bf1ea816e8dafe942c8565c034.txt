module top(input clk, input rst, input [7:0] data, output reg [7:0] sum);
    /* this module takes in a clock signal, reset signal, 8-bit input data, and outputs the sum of the input data */

    reg [7:0] reg_data; // register to hold input data
    reg [7:0] reg_sum = 0; // register to hold sum, initialized to 0

    always @(posedge clk) begin
        if (rst) begin // if reset signal is high, reset registers
            reg_data <= 0;
            reg_sum <= 0;
        end
        else begin // if reset signal is low, add input data to sum
            reg_data <= data;
            reg_sum <= reg_data + reg_sum;
        end
    end

    assign sum = reg_sum; // assign sum to output port

endmodule
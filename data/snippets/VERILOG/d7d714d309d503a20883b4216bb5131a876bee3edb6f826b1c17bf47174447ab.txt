/*  This is a code snippet in VERILOG language.
    It creates a sequential circuit that implements
    a simple 4-bit binary counter. */
    
module binary_counter (
    input clk, reset, // clk is the clock input and reset is the reset signal
    output reg [3:0] count // the output is a 4-bit register representing the count
);
reg [3:0] temp; // intermediate register for storing previous count value

always @(posedge clk) begin // sequential block triggered on positive edge of clock signal
    
    if (reset) begin // if reset signal is 1, set count to 0
        count <= 4'b0000;
        temp <= 4'b0000;
    end
    
    else begin // if reset signal is 0, increment count value
        temp <= count; // store previous count value in temporary register
        count <= count + 1; // increment count value by 1
        
        // if count value exceeds 4, set it back to 0
        if (count > 4'b0111) begin
            count <= 4'b0000;
        end
        
        // if previous count value is 2, toggle the output bit
        if (temp == 4'b0010) begin
            count[0] <= ~count[0];
        end
    end
end

endmodule
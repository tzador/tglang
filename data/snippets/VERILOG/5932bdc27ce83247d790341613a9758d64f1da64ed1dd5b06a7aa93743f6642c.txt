//Example code snippet in Verilog

module adder(A, B, Cin, SUM, Cout); //creates a module named "adder" with input signals A, B, Cin and output signals SUM, Cout

input [7:0] A, B; //creates 8-bit input signals A and B
input Cin; //creates single-bit input signal Cin
output [7:0] SUM; //creates 8-bit output signal SUM
output Cout; //creates single-bit output signal Cout

reg [7:0] SUM; //creates 8-bit register for storing the SUM result
reg Cout; //creates single-bit register for storing the Cout result

always @ (A, B, Cin) begin //sets up always block for continuously updating the SUM and Cout values
  SUM <= A + B + Cin; //assigns SUM value as the sum of A, B and Cin
  Cout <= ((A & B) | (A & Cin) | (B & Cin)); //calculates Cout value using logical operations
end

endmodule //ends the module definition
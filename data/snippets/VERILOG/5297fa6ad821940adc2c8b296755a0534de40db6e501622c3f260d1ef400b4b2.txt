// Creating a module named "Calculator" with input ports 'A' and 'B' of size 4-bits
// and output ports 'Out' and 'Carry' of size 4-bits
module Calculator(A, B, Out, Carry);

	// Defining input ports of size 4-bits with direction set to 'input'
	input [3:0] A; 
	input [3:0] B; 

	// Defining output ports of size 4-bits with direction set to 'output'
	output [3:0] Out; 
	output [3:0] Carry; 

	// Defining internal variable 'Temp' to be used for intermediate calculations
	reg [3:0] Temp; 

	// Creating a combinational logic block for adding the inputs 
	// and assigning the result to the output port 'Out'
	assign Out = A + B; 

	// Creating a sequential logic block for calculating the carry bit 
	// and performing addition with any previous carry
	always @(posedge clk) begin
		Temp = A + B;
		Carry = Temp[4]; // Assigning the carry bit to the fifth bit of Temp
		// Performing addition again with the carry bit added to the inputs
		Temp = A + B + Carry;
		Out = Temp[3:0]; // Assigning the result to the output port 'Out'
	end

endmodule
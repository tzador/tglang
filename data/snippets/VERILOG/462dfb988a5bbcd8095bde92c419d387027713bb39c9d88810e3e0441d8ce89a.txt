//-----------------------------------------------------
// Module Name:   counter
// Description:   4-bit synchronous up counter
//-----------------------------------------------------

// Inputs
module counter(
    input clk, // clock input
    input rst, // reset input
    input en   // enable input
);

// Outputs
output [3:0] count; // 4-bit count output

// Internal wires
wire [3:0] q;       // flip-flop output

// Register declaration and logic
reg [2:0] state;
always @(posedge clk) begin
    if (rst) begin                     // if reset input is high
        state <= 3'b000;               // set counter to 0
    end else if (en) begin             // if enable input is high
        case (state)                   // case statement
            0: q <= q + 1;             // when state is 0, increment count
            1: q <= q + 2;             // when state is 1, increment count by 2
            2: q <= q + 4;             // when state is 2, increment count by 4
            3: q <= q + 8;             // when state is 3, increment count by 8
            default: q <= q;           // default case, do nothing
        endcase
        state <= state + 1;            // increment state
    end
end

// Output assignment
assign count = q; // assign q to output count

endmodule // end of module counter
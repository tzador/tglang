// Defining a module called "Full Adder" with inputs "A", "B", "Cin" and outputs "Sum", "Carry"
module Full_Adder (A, B, Cin, Sum, Carry);

  //Defining a 2-bit vector called "x" for storing the inputs A, B
  input[1:0] x;

  //Defining the input "Cin"
  input Cin;

  //Defining a 2-bit vector called "S" for storing the sum output
  output[1:0] S;

  //Defining the carry output "Co"
  output Co;

  //Declaring internal wires for calculating the sum and carry
  wire w1, w2;

  //Implementation of Full Adder logic using bitwise operators
  assign {S, Co} = x + Cin;

  //Defining a multiplexer with inputs x, x and outputs w1, w2
  //The first input is selected when Cin is 0 and the second input is selected when Cin is 1
  mux2_inst mux2 (.a(x), .b(x), .sel(Cin), .y(w1), .z(w2));

  //Calculation of the carry output
  assign Co = w1 & w2;

  //Calculation of the sum output
  assign {S, Co} = x + Cin;

endmodule
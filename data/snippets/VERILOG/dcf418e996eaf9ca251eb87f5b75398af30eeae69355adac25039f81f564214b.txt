/* This is a module declaration in Verilog */
module myModule(
    input clock, 
    input [7:0] dataInput, 
    output reg [7:0] dataOutput, 
    input reset, 
    output reg busy
    );
    
    /* This is a register declaration in Verilog */
    reg [7:0] register1;
    
    /* This is an always block in Verilog, with a clock-edge sensitivity and 
     * active-high synchronous reset */
    always @(posedge clock or posedge reset) begin 
        if(reset) begin
            register1 <= 8'b0; /* reset to all zeros */
            dataOutput <= 8'b0;
            busy <= 1'b0;  /* set busy to low on reset */
            end
        else if (dataInput == 8'b11111111) begin 
            register1 <= 8'b0; 
            dataOutput <= 8'b11111111; 
            busy <= 1'b1;   /* set busy to high when dataInput is all ones */
            end
        else begin
            register1 <= dataInput; /* no change to register if dataInput is not all ones */
            dataOutput <= dataInput; /* output same data as input */
            busy <= 1'b0; /* set busy to low when dataInput is not all ones */
            end
    end 
    
    /* Output a pulse signal on an LED every time dataOutput changes */
    always @(dataOutput) begin 
        LED <= 1'b1; /* set LED signal to high */ 
        #1; /* wait for 1 time unit */ 
        LED <= 1'b0; /* set LED signal to low */ 
    end
    
endmodule
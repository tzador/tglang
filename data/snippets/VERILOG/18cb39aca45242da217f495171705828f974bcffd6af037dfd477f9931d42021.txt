module TestModule (input clk, input rst, input [7:0] data_in, output logic [15:0] data_out);

    // This is a test module that takes in a clock, reset, and 8-bit input and outputs a 16-bit signal.

    logic [7:0] temp_data; // Declaring a 8-bit logic variable called temp_data

    always @(posedge clk) begin // Creating a sequential block that is sensitive to the rising edge of the clock
        if (rst) begin // If the reset signal is high
            data_out <= 0; // Output a 0 to the data_out signal
        end else begin // If the reset signal is low
            temp_data <= data_in; // Store the input data into the temp_data variable
            data_out <= {temp_data, temp_data}; // Concatenate the temp_data variable with itself and assign it to the data_out signal
        end
    end

endmodule
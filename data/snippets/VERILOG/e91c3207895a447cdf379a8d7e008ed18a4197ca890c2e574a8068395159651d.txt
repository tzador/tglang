/* This code snippet is a full adder implementation in Verilog */
module full_adder(
  input wire a,
  input wire b,
  input wire carry_in,
  output wire sum,
  output wire carry_out
  );

  // Internal wire declarations
  wire temp_1;
  wire temp_2;

  // Half adder for a and b inputs
  half_adder HA_1(
    .input_a(a),
    .input_b(b),
    .output_sum(temp_1),
    .output_carry(temp_2)
  );

  // Half adder for sum of a and b with carry_in input
  half_adder HA_2(
    .input_a(temp_1),
    .input_b(carry_in),
    .output_sum(sum),
    .output_carry(temp_2)
  );

  // Last OR gate for final carry_out output
  or_gate OR_1(
    .input_a(temp_2),
    .input_b(temp_2),
    .output_carry(carry_out)
  );

endmodule
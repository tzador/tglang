// This is a code snippet in Verilog
// It creates a 4-bit counter that increments by 1 every clock cycle
module counter(
    clk,      // input clock signal
    counter   // output counter value in binary
    );
    
    parameter width = 4;          // sets the width of the counter, in this case 4 bits
    
    // declare variables
    input clk;
    output [width-1:0] counter;
    reg [width-1:0] counter_reg;  // register to store current counter value
    
    // initialize counter to 0
    initial begin
        counter_reg = 4'b0000;
    end
    
    // create a clocked always block
    always @ (posedge clk) begin
        // increment the counter value by 1 
        counter_reg <= counter_reg + 1;
    end
    
    // assign output to the current value of the counter register
    assign counter = counter_reg;
    
endmodule
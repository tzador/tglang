// Module to implement a 4-bit counter with synchronous and asynchronous resets
module counter_4bit(
    input clk, // Clock input
    input rst, // Asynchronous reset input
    input en, // Enable input
    output [3:0] count // Output of 4-bit counter
    );

    reg [3:0] count_reg; // Register to store current count value

    always @ (posedge clk or posedge rst) begin // Synchronous reset condition
        if (rst) // Asynchronous reset condition
            count_reg <= 0; // Reset count to 0
        else if (en) // If enable signal is high
            count_reg <= count_reg + 1; // Increment count by 1
    end

    assign count = count_reg; // Assign count_reg to output port

endmodule
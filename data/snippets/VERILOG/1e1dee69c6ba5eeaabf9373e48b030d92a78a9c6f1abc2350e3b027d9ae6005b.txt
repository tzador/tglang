/* This is a code snippet in VERILOG that implements a 4-bit shift register with enable signal*/

module shift_register(
    input [3:0] data_in, // 4-bit input data
    input clk, // clock signal
    input enable, // enable signal
    output reg [3:0] data_out // 4-bit output data
);

always @(posedge clk) begin // edge-triggered always block
    if(enable) begin // check if enable signal is high
        data_out <= {data_out[2:0], data_in[0]}; // shift data by 1 bit to the left
    end
end

endmodule // end of module
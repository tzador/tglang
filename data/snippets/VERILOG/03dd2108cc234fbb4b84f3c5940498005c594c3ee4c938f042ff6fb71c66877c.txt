// Module for a 4-bit adder with carry input and carry output
module adder4bit(carryIn, a, b, carryOut, sum);

  // Define input signals
  input carryIn;
  input a[3:0];
  input b[3:0];

  // Define output signals
  output carryOut;
  output sum[3:0];

  // Define internal variables and wires
  wire [3:0] sumInternal;
  reg carryTemp;

  // Perform addition with a full adder for each bit
  // The carryIn is added to the least significant bit (LSB)
  fullAdder adder0(carryIn, a[0], b[0], sumInternal[0], carryTemp);
  fullAdder adder1(carryTemp, a[1], b[1], sumInternal[1], carryTemp);
  fullAdder adder2(carryTemp, a[2], b[2], sumInternal[2], carryTemp);
  fullAdder adder3(carryTemp, a[3], b[3], sumInternal[3], carryOut);

  // Pass the internal sum to the output
  assign sum = sumInternal;

endmodule
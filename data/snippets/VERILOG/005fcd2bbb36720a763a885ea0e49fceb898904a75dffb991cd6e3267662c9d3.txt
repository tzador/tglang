// This is a code snippet written in VERILOG
module register (clk, rst, d, q);
    // `define statement for width of register
    `define WIDTH 8
    
    // input and output declarations
    input clk, rst, d;
    output [`WIDTH-1:0] q;
    
    // register declaration using sequential logic
    reg [`WIDTH-1:0] q;
    
    // always block for register's functionality
    always @ (edge clk)
    begin
        // synchronous reset
        if (rst == 1'b1) begin
	    // q takes value of 0 during reset
            q <= `WIDTH'b0;
        end
        else begin
	    // q takes value of d at positive clock edge
            q <= d;
        end
    end
endmodule
`timescale 1 ns / 1 ps  // This line sets the timescale for the code

module fifo (
  input clk, rstn, wr_en, wr_data, rd_en,
  output reg [7:0] rd_data
  );

  parameter DEPTH = 8;    // sets the depth of the fifo
  
  logic [7:0] mem [0:DEPTH-1];  // creates a memory of size DEPTH
  
  reg [2:0] wr_ptr = 0, rd_ptr = 0;     // sets the write and read pointers to 0
  
  always@(posedge clk or negedge rstn) begin // always block for clock and reset
    if(!rstn) begin
      wr_ptr <= 0;     // reset write pointer
      rd_ptr <= 0;     // reset read pointer
      rd_data <= 0;    // reset read data
    end
    else begin
      if(wr_en) begin
        mem[wr_ptr] <= wr_data;    // write data to memory at write pointer
        wr_ptr <= wr_ptr + 1;      // increment write pointer
      end
      if(rd_en) begin
        rd_data <= mem[rd_ptr];    // read data from memory at read pointer
        rd_ptr <= rd_ptr + 1;      // increment read pointer
      end
    end
  end
  
endmodule
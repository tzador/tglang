// Defining a module with input, output, and wires
module example_module (input clk, input [3:0] data_in, output [7:0] data_out, wire [3:0] temp);

// Declaring variables
reg [7:0] temp_output;
wire [2:0] counter = 0;

// Assigning values to temporary wire
assign temp = data_in[1:3];

// Creating a process to handle clock signal 
always @(posedge clk) begin
    // Performing necessary mathematical calculations
    temp_output = data_in + counter;
    // Assigning the calculated value to data_out
    data_out = temp_output;
    // Incrementing counter by 1 every clock cycle
    counter = counter + 1;
end

// End of module
endmodule
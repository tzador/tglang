// Defining input and output signals
module adder(input [7:0] a, input [7:0] b, input cin, output [7:0] sum, output cout);
	
	// Parameter for the carry lookahead function
	parameter N = 8;
	
	// Internal signal declarations
	wire [N:0] G;
	wire [N:0] P;
	wire [N:0] C;
	
	// Generate statements for carry lookahead function
	// Generate block for G signals
	genvar i;
	generate
		for(i=0;i<N;i=i+1)
			assign G[i] = a[i] & b[i];
	endgenerate
	
	// Generate block for P signals
	genvar j;
	generate
		for(j=0;j<N;j=j+1)
			assign P[j] = a[j] | b[j];
	endgenerate
	
	// Generate block for C signals
	genvar k;
	generate
		for(k=1;k<N+1;k=k+1)
			assign C[k] = G[k-1] | (P[k-1] & cin);
	endgenerate
	
	// Generate final carry output using C[N] signal
	assign cout = C[N];
	
	// Generate statements for sum output using P and G signals
	genvar m;
	generate
		for(m=0;m<N;m=m+1)
			assign sum[m] = P[m] ^ cin;
	endgenerate
	
endmodule
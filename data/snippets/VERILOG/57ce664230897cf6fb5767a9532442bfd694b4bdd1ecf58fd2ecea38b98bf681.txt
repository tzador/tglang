// This is a code snippet in VERILOG that defines and uses a complex data structure called an associative array
 
// Declare the associative array
// The array will contain strings as the keys and integers as the values
// The array has 10 elements
string keys [0:9];
integer values [0:9];
 
// Initialize the array with values
initial begin
    keys = {"apple", "banana", "cherry", "dragonfruit", "elderberry", "fig", "guava", "honeydew", "imbe", "jackfruit"};
    values = {1, 3, 5, 9, 2, 10, 4, 8, 6, 7};
end
 
// Define a function that performs a linear search on the associative array
function begin
    // Inputs: key to search for and the associative array
    input string searchKey;
    input string keys[];
    input integer values[];
 
    // Set output variable to -1 by default (represents not found)
    output integer result = -1;
 
    // Loop through the array
    for (integer i = 0; i < 10; i = i + 1) begin
        // Compare current key with search key
        if (keys[i] == searchKey) begin
            // If match is found, store index and break loop
            result = i;
            break;
        end
    end
end
 
// Call function to perform linear search on the associative array
integer index = linear_search("fig", keys, values);
 
// Print the result of the search
if (index == -1) begin
    $display("Key not found");
end else begin
    $display("Key %s found at index %d with value %d", keys[index], index, values[index]);
end
module counter(input clk, input rst, input [7:0] increment, output [15:0] count);
  // This module implements a 16-bit counter that increments by a specified value with a reset signal
  // Inputs:
  // clk - clock signal
  // rst - reset signal
  // increment - value to increment the counter by
  // Outputs:
  // count - 16-bit counter value output

  reg [7:0] counter_value; // 8-bit register to hold the current counter value
  always @ (posedge clk) begin // on positive edge of the clock
    if (rst) begin // if reset signal is high
      counter_value = 0; // reset counter value to 0
    end else begin // if reset signal is not high
      counter_value = counter_value + increment; // increment counter value by specified increment
    end
  end

  assign count = {8'h00, counter_value}; // assign 16-bit counter output by concatenating 8-bit 0's with counter value
endmodule
module adder_subtractor (
    input [3:0] a, // input A
    input [3:0] b, // input B
    input sub, // subtraction enable bit
    output [3:0] sum, // sum of inputs
    output ovf, // overflow bit
    output sign // result sign bit
    );

    reg [4:0] temp_sum; // temporary sum with an extra bit for overflow
    wire [3:0] temp_a, temp_b; // temporary inputs for different operations

    assign temp_a = sub ? ~a + 1 : a; // 2's complement of A if subtraction is enabled
    assign temp_b = sub ? ~b + 1 : b; // 2's complement of B if subtraction is enabled

    assign temp_sum = temp_a + temp_b; // calculate temporary sum

    assign sum = temp_sum[3:0]; // output sum without overflow bit
    assign ovf = temp_sum[4]; // output overflow bit
    assign sign = temp_sum[3]; // output result sign bit

endmodule
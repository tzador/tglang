/* This module represents a 4-bit counter using a parameterized width and asynchronous reset */

module counter #(parameter WIDTH = 4)
  (input wire CLK, // clock input
  input wire RST, // reset input
  output reg [WIDTH-1:0] count); // counter output

  always @(posedge CLK or posedge RST) // always block to detect clock and reset edges
    if(RST)
      count <= 0; // reset the counter
    else 
      count <= count + 1; // increment the counter

endmodule
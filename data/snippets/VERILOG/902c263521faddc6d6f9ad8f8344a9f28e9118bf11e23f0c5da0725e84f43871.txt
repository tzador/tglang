module mux(input [7:0] data1, data2, data3, select, output;
    // An 8-to-1 multiplexer using always block
    always @(select) begin
        case (select)
            3'b000: output = data1;
            3'b001: output = data2;
            3'b010: output = data3;
            3'b011: output = {data1[3:0], data2[3:0]};
            3'b100: output = data3 + data1;
            3'b101: output = data2 & data1;
            3'b110: output = data1[3:0] + data2 [3:0];
            default: output = 8'b0;
        endcase
    end
    // An 8-to-1 multiplexer using conditional operator
    assign output = (select == 3'b000) ? data1 :
                    (select == 3'b001) ? data2 :
                    (select == 3'b010) ? data3 :
                    (select == 3'b011) ? {data1[3:0], data2[3:0]} :
                    (select == 3'b100) ? data3 + data1 :
                    (select == 3'b101) ? data2 & data1 :
                    (select == 3'b110) ? data1[3:0] + data2 [3:0] : 8'b0;
endmodule
/* This code snippet is a combinational logic circuit that implements a 4-to-1 multiplexer using Verilog.
 * It takes 4 input bits and a 2-bit select signal and outputs the selected input based on the select signal.
 * The logic used here is a basic implementation, there are more efficient ways to write this code snippet. */

module multiplexer(input [3:0] data_in, input [1:0] select, output reg output);

    always @(*)
        case (select) // Starting case statement
            2'b00: output <= data_in[0]; // If select signal is 00, output is data_in[0]
            2'b01: output <= data_in[1]; // If select signal is 01, output is data_in[1]
            2'b10: output <= data_in[2]; // If select signal is 10, output is data_in[2]
            2'b11: output <= data_in[3]; // If select signal is 11, output is data_in[3]
        endcase // End case statement
endmodule // End module
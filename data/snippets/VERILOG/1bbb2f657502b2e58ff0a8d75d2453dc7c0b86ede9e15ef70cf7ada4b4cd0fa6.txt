// Initialize a 4x4 memory module
module memory_4x4 (
	input logic [3:0] address,
	input logic [7:0] data_in,
	input logic write_enable,
	output logic [7:0] data_out
);

// Declare internal registers and arrays
logic [7:0] memory_array [0:15];
reg [3:0] address_reg;
logic [7:0] data_reg;

// Assign internal wires
assign data_out = data_reg;

// Use always blocks to describe Read and Write operations
always @ (posedge write_enable) begin
	address_reg <= address;
	memory_array[address] <= data_in;
end

always @ (posedge address or posedge write_enable) begin
	data_reg <= memory_array[address_reg];
end

endmodule
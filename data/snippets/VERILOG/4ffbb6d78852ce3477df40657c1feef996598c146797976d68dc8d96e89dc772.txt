//This code snippet generates a 4-bit comparator
//Defining the module
module comparator(a, b, gt, eq, lt);
  input [3:0] a, b;
  output gt, eq, lt;
  
//Defining the 4-bit combinational logic
  assign gt = &gt; b;
  assign eq = (a == b);
  assign lt = &lt; b;
endmodule

//Defining the testbench
module testbench;
  reg [3:0] a, b;
  wire gt, eq, lt;

  //Instantiating the comparator module
  comparator comp(a, b, gt, eq, lt);

  //Defining the clock
  always #10 clk =~clk;
  
  //Sending inputs to comparator
  initial begin
    a = 4'b0000;
    b = 4'b0011;
    #20 a = 4'b1100;
    b = 4'b0110;
    #20 a = 4'b1010;
    b = 4'b1010;
    #10 $finish;
  end
  
  //Displaying outputs
  always @(gt, eq, lt) begin
    $display("a>b: %b", gt);
    $display("a=b: %b", eq);
    $display("a<b: %b", lt);
  end
endmodule
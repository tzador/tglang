/* Module to implement a synchronous counter using D flip-flops */
/*
This module takes in a clock signal and an enable signal and produces a 4-bit binary output.
Every rising edge of the clock signal, the output increments by 1, unless the enable signal is low.
*/

module synchronous_counter(
    input wire clk,         // Clock input
    input wire enable,      // Enable input
    output reg [3:0] count  // Output count
);

// Create an internal 1-bit D flip-flop for each bit of the count
reg q0, q1, q2, q3; // q3 is the most significant bit

// Assign the output of each flip-flop to the next flip-flop
always @ (posedge clk) begin
    q0 <= q1;
    q1 <= q2;
    q2 <= q3;
    q3 <= q3 & enable; // If enable is low, the output will not change
end

// Assign the output count based on the D flip-flops
assign count = {q3, q2, q1, q0};

endmodule
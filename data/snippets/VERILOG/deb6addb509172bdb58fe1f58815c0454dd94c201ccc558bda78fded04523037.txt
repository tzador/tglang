module decoder(
    input [7:0] data,
    input enable,
    output reg [3:0] out
    );
    
	reg [3:0] temp1, temp2;
	
	always @ (data) begin
		if (enable) begin
			case (data)
				4'd0: temp1 = 4'b0000;
				4'd1: temp1 = 4'b0001;
				4'd2: temp1 = 4'b0010;
				4'd3: temp1 = 4'b0011;
				4'd4: temp1 = 4'b0100;
				4'd5: temp1 = 4'b0101;
				4'd6: temp1 = 4'b0110;
				4'd7: temp1 = 4'b0111;
				4'd8: temp1 = 4'b1000;
				4'd9: temp1 = 4'b1001;
				4'd10: temp1 = 4'b1010;
				4'd11: temp1 = 4'b1011;
				4'd12: temp1 = 4'b1100;
				4'd13: temp1 = 4'b1101;
				4'd14: temp1 = 4'b1110;
				4'd15: temp1 = 4'b1111;
			endcase
			temp2 = temp1;
		end
		else begin
			temp2 = 4'b0000;
		end
	end
	
	always @ (temp2) begin
		case (temp2)
			4'b0000: out = 4'b0000;
			4'b0001: out = 4'b1000;
			4'b0010: out = 4'b0100;
			4'b0011: out = 4'b1100;
			4'b0100: out = 4'b0010;
			4'b0101: out = 4'b1010;
			4'b0110: out = 4'b0110;
			4'b0111: out = 4'b1110;
			4'b1000: out = 4'b0001;
			4'b1001: out = 4'b1001;
			4'b1010: out = 4'b0101;
			4'b1011: out = 4'b1101;
			4'b1100: out = 4'b0011;
			4'b1101: out = 4'b1011;
			4'b1110: out = 4'b0111;
			4'b1111: out = 4'b1111;
		endcase
	end
endmodule
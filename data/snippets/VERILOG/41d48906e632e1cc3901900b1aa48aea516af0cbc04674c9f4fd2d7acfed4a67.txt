// Defining a module with two inputs, two outputs, and internal registers
module adder (input a, input b, output [7:0] sum, output carry);
	// Internal 8-bit register to store sum
	reg [7:0] internal_sum;
	// Internal 1-bit register to store carry
	reg internal_carry;
	
	// Add the two inputs
	assign internal_sum = a + b;
	// Check if sum requires 9 bits (possible carry)
	if (internal_sum >= 8'b100000000) begin
		// Store the first 8 bits as the sum
		assign sum = internal_sum[7:0];
		// Set the internal carry to 1
		assign internal_carry = 1;
	end else begin
		// Store the entire internal sum as the sum (no carry)
		assign sum = internal_sum;
		// Set the internal carry to 0
		assign internal_carry = 0;
	end
	
	// Output the carry
	assign carry = internal_carry;
endmodule
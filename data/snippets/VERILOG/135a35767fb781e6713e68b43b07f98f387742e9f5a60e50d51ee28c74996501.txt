parameter WIDTH = 32; // declare parameter 'WIDTH' with value of 32
module test(input [WIDTH-1:0] a, input [WIDTH-1:0] b, // define a test module with two input ports 'a' and 'b'
      output [WIDTH-1:0] out);
      reg [WIDTH-1:0] temp; // declare a register 'temp' with width of 32 bits
      always @(a, b) begin // create an always block that executes whenever 'a' or 'b' changes
           temp = a + b; // perform addition operation on 'a' and 'b', assign result to 'temp'
           if (temp > 10) begin // check if 'temp' is greater than 10
                out = temp; // if yes, assign value of 'temp' to 'out'
           end else if (temp < 0) begin // check if 'temp' is less than 0
                out = 0; // if yes, assign value of 0 to 'out'
           end else begin // if 'temp' is between 0 and 10
                out = 4'b0101; // assign binary value of 0101 to 'out'
           end
      end
endmodule
module ALU (input [7:0] A, input [7:0] B, input [2:0] Ctrl, output reg [7:0] Result, output reg Overflow);
    always @ (A, B, Ctrl)
    begin
        case (Ctrl)
            3'b000: Result = A + B; // Addition operation
            3'b001: Result = A - B; // Subtraction operation
            3'b010: Result = A ^ B; // XOR operation
            3'b011: Result = A & B; // AND operation
            3'b100: Result = A | B; // OR operation
            3'b101: Result = A || B; // Logical OR operation
            3'b110: Result = A >> 2; // Right shift operation
            3'b111: Result = A << 3; // Left shift operation
        endcase

        if (Result > 255) // Checking for overflow
            Overflow = 1;
        else
            Overflow = 0;
    end
endmodule
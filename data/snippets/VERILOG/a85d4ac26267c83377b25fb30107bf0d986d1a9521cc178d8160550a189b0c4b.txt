module counter (
    input clk, 
    input rst, 
    input [3:0] enable, 
    output [3:0] count 
);

// This module implements a counter that increments based on 
// the clock and reset signals, with optional enable inputs.

reg [3:0] count; // Create a 4-bit register to hold the count value, initialized to 0

always @(posedge clk) begin // At the positive edge of the clock signal...
    if (rst) begin // If the reset signal is active...
        count <= 4'h0; // Reset the count to 0
    end else if (enable == 4'hf) begin // Else, if all enable inputs are active...
        count <= count + 4'h1; // Increment the count by 1
    end else begin // Else, if any enable input is inactive...
        count <= count; // Keep the count unchanged
    end
end

endmodule // End of module
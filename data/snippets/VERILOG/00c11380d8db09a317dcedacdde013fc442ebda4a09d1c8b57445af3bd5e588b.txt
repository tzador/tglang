// This code snippet declares a 4-bit adder module in Verilog

// Declare module with input and output ports
module four_bit_adder(input [3:0] a, input [3:0] b, output [3:0] sum, output carry);

	// Declare internal signals for intermediate calculations
	wire [4:0] temp;

	// Instantiate four full adders to perform 4-bit addition
	full_adder fa1(a[0], b[0], 0, temp[1], temp[0]);
	full_adder fa2(a[1], b[1], temp[0], temp[2], temp[1]);
	full_adder fa3(a[2], b[2], temp[1], temp[3], temp[2]);
	full_adder fa4(a[3], b[3], temp[2], sum[3], temp[3]);

	// Calculate carry value by OR-ing all carry outputs from full adders
	assign carry = temp[4] | temp[3] | temp[2] | temp[1] | temp[0];

	// Assign sum output using temp signals
	assign sum[0] = temp[0];
	assign sum[1] = temp[1];
	assign sum[2] = temp[2];
	assign sum[3] = temp[3];
endmodule

// Instantiate the four bit adder module and connect input and output ports
// Also assign inputs and display output in simulation
module simulation;

	reg [3:0] a, b;
	wire [3:0] sum;
	wire carry;

	four_bit_adder adder(a, b, sum, carry);

	initial begin
		// Assign initial values to inputs
		a = 4'b0010;
		b = 4'b1101;

		// Wait for 5 time units to allow for propagation
		#5;

		// Display inputs and outputs in simulation
		$display("a = %b, b = %b, sum = %b, carry = %b", a, b, sum, carry);
	end
endmodule

// The output in simulation should be:
// "a = 0010, b = 1101, sum = 1111, carry = 1"
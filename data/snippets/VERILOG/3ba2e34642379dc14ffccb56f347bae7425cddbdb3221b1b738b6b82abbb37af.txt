module shift_register (
    input wire clock,
    input wire reset,
    input wire data_in,
    input wire load,
    input wire shift,
    output reg [15:0] data_out );

    reg [15:0] shReg [0:7];
    reg [2:0] shPtr;
    
    always @(posedge clock) begin
        if (reset) begin
            shReg <= 0;
            shPtr <= 0;
        end else if (load) begin
            shReg[shPtr] <= data_in;
            shPtr <= shPtr + 1;
        end else if (shift) begin
            shPtr <= shPtr + 1;
        end
        
        data_out <= shReg[shPtr];
    end
endmodule
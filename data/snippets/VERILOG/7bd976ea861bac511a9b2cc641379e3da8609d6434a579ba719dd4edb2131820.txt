module traffic_light(
  input wire clk,
  input wire rst_n,
  output reg [2:0] state,
  output reg red,
  output reg green,
  output reg yellow,
  parameter WAIT_TIME = 10,
  parameter BLINK_TIME = 5
);

  //state definition
  parameter INIT_STATE = 3'b001; //initial state of traffic light

  reg [3:0] count; //counter for wait and blink time
  reg [2:0] next_state; //stores next state based on current state and counter

  always @ (posedge clk or negedge rst_n) begin
    if (!rst_n)
      state <= INIT_STATE; //reset state to initial state when reset signal asserted
    else
      state <= next_state; //update state to next state when clock signal asserted
  end

  always @ (state, count) begin
    case(state)
      INIT_STATE: begin //initial state
        red <= 1; //turn on red light
        green <= 0; //turn off green light
        yellow <= 0; //turn off yellow light
        count <= 0; //reset counter
        next_state <= 3'b010; //next state is green
      end
      3'b010: begin //green state
        red <= 0; //turn off red light
        green <= 1; //turn on green light
        yellow <= 0; //turn off yellow light
        if (count == WAIT_TIME) //if counter reaches wait time
          next_state <= 3'b100; //next state is yellow
        else
          count <= count + 1; //increment counter
      end
      3'b100: begin //yellow state
        red <= 0; //turn off red light
        green <= 0; //turn off green light
        if (count == BLINK_TIME) //if counter reaches blink time
          next_state <= 3'b010; //next state is green
        else
          count <= count + 1; //increment counter
      end
    endcase
  end
endmodule
// This is a Verilog code snippet that creates a 4-bit counter with synchronous reset

module counter (
   input clock,
   input reset,
   output [3:0] count
);

reg [3:0] count;

// Create synchronous always block that increments count on rising edge of clock
always @(posedge clock) begin
   if (reset) begin // Check if reset is active (HIGH)
      count <= 0; // If reset is active, set count to 0
   end
   else begin // If reset is not active, increment count by 1
      count <= count + 1;
   end
end

endmodule
//This code takes two 8-bit inputs and outputs the multiplication of the two numbers
module multiplier (input [7:0] num1, num2, output [15:0] result);

reg [7:0] temp; // temporary register to store partial sum
wire [3:0] counter; // counter used for looping
wire [28:0] mult; // wire to store the result of multiplication
assign result = mult[28:12]; // output only the high 16 bits of the multiplication result

always @ (num1 or num2) begin
  mult = 0; // initialize the multiplication result to 0
  temp = num2; // store num2 in temp register
  for (counter = 0; counter < 8; counter = counter + 1) begin
    if (temp[0] == 1) begin // check if the current bit of temp is 1
      mult = mult + (num1 << counter); // if yes, add num1 shifted by the counter to mult
    end
    temp = temp >> 1; // right shift temp to get the next bit
  end
end

endmodule
// This code snippet is a 4-to-1 multiplexer with Full Adder.

module multiplexer_4to1_full_adder
  (
    input [3:0] i0, i1, i2, i3, // input data
    input [1:0] sel, // select lines
    input cin, // carry-in
    output reg sout, // output sum
    output reg cout // output carry-out
  ); 
  
  always @(*) begin
    case (sel) // multiplexer selection case
      2'b00: begin // if sel = 00
        sout = i0; // output sum = i0
        cout = i0 & cin; // output carry-out = i0 and carry-in
      end
      2'b01: begin // if sel = 01
        sout = i1; // output sum = i1
        cout = i1 & cin; // output carry-out = i1 and carry-in
      end
      2'b10: begin // if sel = 10
        sout = i2; // output sum = i2
        cout = i2 & cin; // output carry-out = i2 and carry-in
      end
      2'b11: begin // if sel = 11
        sout = i3; // output sum = i3
        cout = i3 & cin; // output carry-out = i3 and carry-in
      end
    endcase
  end
endmodule
module adder (
input [3:0] a,
input [3:0] b,
output [4:0] sum
);

always @(a, b) begin
    sum[0] = a[0] ^ b[0]; // XOR operation between least significant bits
    sum[1] = a[1] ^ b[1]; // XOR operation between second least significant bits
    sum[2] = a[2] ^ b[2]; // XOR operation between third least significant bits
    sum[3] = a[3] ^ b[3]; // XOR operation between most significant bits
end // end of always block

assign sum[4] = a[3] & b[3] & (a[2] | b[2]) | (a[2] & b[2]) & (a[1] | b[1]) | (a[1] & b[1]) & (a[0] | b[0]); // carry out calculation

endmodule // end of module adder
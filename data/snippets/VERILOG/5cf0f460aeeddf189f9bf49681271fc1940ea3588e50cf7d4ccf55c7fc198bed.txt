// This module implements a dual port RAM with byte addressing and 8-bit data
// Inputs:
// addr1: 8-bit address for first port
// addr2: 8-bit address for second port
// wr_en1: write enable signal for first port
// wr_en2: write enable signal for second port
// data1: 8-bit data input for first port
// data2: 8-bit data input for second port
// Output:
// dataout1: 8-bit data output for first port
// dataout2: 8-bit data output for second port
module dual_port_ram_byte (addr1, addr2, wr_en1, wr_en2, data1, data2, dataout1, dataout2);
    parameter SIZE = 256; // 256 bytes of memory
    parameter ADDR_WIDTH = 8; // 8-bit address width
    parameter DATA_WIDTH = 8; // 8-bit data width
    
    reg [DATA_WIDTH-1:0] mem [0:SIZE-1]; // declaring memory array
    
    // first port
    always @(posedge clk) begin
        if (wr_en1) begin
            mem[addr1] <= data1; // write data to address specified by addr1
        end
        // read data from address specified by addr1
        dataout1 <= mem[addr1];
    end
    
    // second port
    always @(posedge clk) begin
        if (wr_en2) begin
            mem[addr2] <= data2; // write data to address specified by addr2
        end
        // read data from address specified by addr2
        dataout2 <= mem[addr2];
    end
endmodule
/*
  This is a code snippet in VERILOG - a hardware description language

  It includes a simple module that implements a 4-bit binary counter using flip-flops
*/

module Binary_Counter(

  // inputs to the counter
  input clock, // clock signal
  input reset, // asynchronous reset signal

  // outputs of the counter
  output [3:0] binary_count // 4-bit binary count

);

  // internal signals
  reg [3:0] current_count // stores the current count value
  wire [3:0] next_count // stores the next count value

  // assign the next count value based on the current count and reset signal
  always @ (current_count or reset) begin
    if (reset) begin
      next_count = 4'b0000; // reset the count to 0
    end else begin
      next_count = current_count + 1; // increment the count
    end
  end

  // flip-flops to store the current and next count values
  always @ (posedge clock) begin
    if (reset) begin
      // when reset is high, set the current count to 0
      current_count <= 4'b0000;
    end else begin
      // when reset is low, update the current count with the next count
      current_count <= next_count;
    end
  end

  // assign the output of the counter to the binary_count output
  assign binary_count = current_count;

endmodule // end of Binary_Counter module
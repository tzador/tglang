// This code snippet is a counter module that counts from 0 to 15 and resets back to 0
module counter (
    input clk, // Clock input
    input reset, // Reset input
    output [3:0] count // 4-bit output for counting
);

reg [3:0] count; // Register to hold the count value
always @(posedge clk or posedge reset) begin // Always block to trigger on positive edge of clock or reset
    if (reset) begin // If reset is high, set the count to 0
        count <= 4'b0000;
    end else begin // If reset is low, increment the count
        count <= count + 1;
    end
end

endmodule
// Declare module for a 4-bit register with asynchronous reset
module register4bit (
    input clk,        // Clock input
    input reset,      // Asynchronous reset input
    input [3:0] din,  // Data input
    output [3:0] dout // Data output
);
    reg [3:0] temp;   // Declare 4-bit register

    // Synchronous section
    always @(posedge clk) begin
        if (reset == 1) begin
            temp <= 0;  // Reset the register to 0
        end
        else begin
            temp <= din; // Store input data in register
        end
    end

    // Asynchronous section
    always @(*) begin
        if (reset == 1) begin
            dout <= 0;  // Reset the output to 0
        end
        else begin
            dout <= temp; // Output the stored register value
        end
    end

endmodule // end module declaration
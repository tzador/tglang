`timescale 1ns / 1ps    // sets the timescale for simulation
  
  module counter(clk, rst, en, count_in, count_out);    // module declaration
  
  input clk;    // define input ports
  input rst;
  input en;
  input [7:0] count_in;
  output [7:0] count_out;    // define output ports
  
  reg [7:0] counter_reg;    // define a register to store the count
  
  always @(posedge clk) begin    // always block, executes on every positive edge of clk
    if(rst) begin    // if statement for reset
      counter_reg <= 0;    // reset the count to 0
    end else if(en) begin    // if statement for enable
      counter_reg <= count_in;    // load count_in into counter_reg
    end
    counter_reg <= counter_reg + 1;    // increment the counter_reg value by 1
  end
  
  assign count_out = counter_reg;    // assign the value of counter_reg to count_out
  
endmodule    // end module
// This code snippet is a synchronous 4-bit binary counter with asynchronous reset

module counter(
    input clk, // clock input
    input rst, // asynchronous reset input
    output reg [3:0] count // 4-bit output for the binary count
);

always @(posedge clk or posedge rst) begin // always block triggered by positive edge of clk or rst
    if (rst) begin // if statement for asynchronous reset
        count <= 4'b0000; // reset count to 0
    end else begin // else statement for normal counting
        count <= count + 1; // increment count by 1
    end
end

endmodule
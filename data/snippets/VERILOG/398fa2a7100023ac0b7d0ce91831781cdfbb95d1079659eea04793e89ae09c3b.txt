// Module for sorting an array of integers in ascending order

module Sort(input [7:0] a, output reg [7:0] sorted);

    // Create a copy of input array to be sorted
    reg [7:0] temp_array [7:0];
    // Register to store minimum value during sorting
    reg [7:0] min_val;
    // Register to store index of minimum value
    reg [2:0] min_index;

    // Sequential always block for sorting process
    always @ (posedge clk) begin
        // Initialize sorted output array as the original input array
        sorted <= a;
        // Sort the array using selection sort algorithm
        for (int i = 0; i < 8; i = i + 1) begin
            // Initialize minimum value and index to first element in unsorted array
            min_val = temp_array[i];
            min_index = i;
            // Loop through unsorted elements to find the minimum value
            for (int j = i + 1; j < 8; j = j + 1) begin
                // If current element is smaller than minimum value, update minimum value and index
                if (temp_array[j] < min_val) begin
                    min_val = temp_array[j];
                    min_index = j;
                end
            end
            // Swap minimum value with the first unsorted element
            temp_array[min_index] = temp_array[i];
            temp_array[i] = min_val;
        end
        // Assign sorted array to output
        sorted <= temp_array;
    end

endmodule
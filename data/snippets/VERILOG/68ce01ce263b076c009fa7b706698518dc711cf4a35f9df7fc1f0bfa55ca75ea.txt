module top (
    input clk,
    input rst,
    input [3:0] data_in,
    output [3:0] sum
);

    // register to store data
    reg [3:0] reg_data;

    // combinational logic to add 1 to data input
    always @*
    begin
        sum = data_in + 4'b0001;
    end

    // sequential logic to store data in register
    always @(posedge clk)
    begin
        if (rst)
            reg_data <= 4'b0000;
        else
            reg_data <= sum;
    end

endmodule
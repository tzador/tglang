/* This is a code snippet written in VERILOG that creates a 4-bit counter with enable and reset functionality.
The counter counts from 0 to 15 and then resets back to 0. The counter is enabled when the enable input is high and reset when the reset input is high. */

module counter (
  input clk, //clock input
  input en, //enable input
  input rst, //reset input
  output reg [3:0] count /* 4-bit register to store the counter value */);

//Initialize the counter
initial begin
  count = 4'b0000;
end

//On positive edge of clk, increment the counter by 1
always @ (posedge clk) begin
  if (en == 1'b1) begin
    if (count == 4'b1111)
      count <= 4'b0000;
    else
      count <= count + 4'b0001;
  end
end

//On positive edge of rst, reset the counter value to 0
always @ (posedge rst) begin
  count <= 4'b0000;
end

endmodule
//Declaration and initialization of variables
reg [7:0] inputA = 8'b10101010; //input variable A with 8 bits
wire [7:0] outputA = 8'b00000000; //output variable A with 8 bits

//Declaration of internal wires
wire [3:0] a_high = 4'b1010; //wire to store high nibble of input A
wire [3:0] a_low = 4'b1010; //wire to store low nibble of input A
wire [3:0] a_xor = 4'b0000; //wire to store xor result of high and low nibble of input A
wire [7:0] a_concat = 8'b00000000; //wire to store concatenated result of a_high and a_low

//Splitting input A into high and low nibble using bitwise AND operation
assign a_high = inputA[7:4] & 4'b1111;
assign a_low = inputA[3:0] & 4'b1111;

//XOR operation on high and low nibble
assign a_xor = a_high ^ a_low;

//Concatenating high and low nibble using bitwise OR operation
assign a_concat = a_high | a_low;

//Multiplexing output based on control input
always @* begin
    if(input_ctrl == 1'b0) begin
        outputA = a_xor;
    end
    else begin
        outputA = a_concat;
    end
end
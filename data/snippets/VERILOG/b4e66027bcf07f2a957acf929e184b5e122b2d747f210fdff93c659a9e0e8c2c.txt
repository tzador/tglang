/* This code snippet is a simple verilog module that implements a state machine 
to control a traffic light */

module traffic_light(clk, reset, out_green, out_red, out_yellow);

input clk, reset;
output reg[1:0]out_green, out_red, out_yellow;

reg [3:0] state; // state register to keep track of current state

parameter INIT = 1, RED = 2, YELLOW = 3, GREEN = 4; // state values

/* State machine logic */
always @(posedge clk) begin
    if(reset) state <= INIT; // if reset, go to initial state
    else begin
        case(state)
            INIT: begin // initial state
                out_red <= 1;
                out_yellow <= 0;
                out_green <= 0;
                state <= RED;
            end
            RED: begin // red light state
                out_red <= 1;
                out_yellow <= 0;
                out_green <= 0;
                state <= YELLOW;
            end
            YELLOW: begin // yellow light state
                out_red <= 0;
                out_yellow <= 1;
                out_green <= 0;
                state <= GREEN;
            end
            GREEN: begin // green light state
                out_red <= 0;
                out_yellow <= 0;
                out_green <= 1;
                state <= RED; // after green, loop back to red
            end
        endcase
    end
end

endmodule
// Declare a variable reg [7:0] called 'data'
reg [7:0] data;

// Define a register with an initial value of 8'hFF
reg [7:0] reg = 8'hFF;

// Create a 32-bit wire called 'sum'
wire [31:0] sum;

// Create a module called 'addition'
module addition (

  // Define two input ports 'a' and 'b' with 8-bit width
  input [7:0] a,
  input [7:0] b,

  // Define output port 'c' with 8-bit width
  output reg [7:0] c

);

  // Use always block to continuously add
  always @ (a, b)
    begin
      
      // Assign values to 'c' using '+' operator
      c = a + b;
    end

  // Instantiate two 'addition' modules
  addition add1 (
    .a(data), // 'a' input is connected to 'data' variable
    .b(reg), // 'b' input is connected to 'reg' variable
    .c(sum[7:0]) // 'c' output is connected to first 8 bits of 'sum' wire
  );
  
  addition add2 (
    .a(8'h0), // 'a' input is set to a constant value of 8'b00000000
    .b(8'hF), // 'b' input is set to a constant value of 8'b11111111
    .c(data) // 'c' output is connected to 'data' variable
  );

endmodule
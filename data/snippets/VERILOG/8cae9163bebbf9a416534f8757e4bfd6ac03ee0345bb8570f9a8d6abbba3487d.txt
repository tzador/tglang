// This is a code snippet in VERILOG
module multiplier(input clk, input [7:0] a, input [7:0] b, output [15:0] result);

  // Define internal variables
  reg signed [15:0] tmpResult;
  integer i;

  // Perform multiplication operation
  always @(posedge clk) begin
    tmpResult <= 8'b00000000; // Reset tmpResult
    for (i = 0; i < 8; i = i + 1) begin // Loop through each bit of b
      if (b[i] == 1'b1) begin // If the current bit of b is 1
        tmpResult <= tmpResult + (a << i); // Add shifted version of a to tmpResult
      end
    end
  end

  // Assign result to output
  assign result = tmpResult;

endmodule
// Declaration of module
module multiplexer ( input [3:0] select, input [7:0] inA, input [7:0] inB, output reg [7:0] out );

    // Create parameter for number of inputs
    parameter INPUT_NUM = 16;

    // Create variable for number of select bits based on input number
    integer numSelectBits = $clog2(INPUT_NUM);

    // Define wires for select bits and their complement
    wire [numSelectBits-1:0] selectWires;
    wire [7:0] selectWiresbar;

    // Invert select bits
    assign selectWiresbar = ~selectWires;

    // Use select bits to select input data
    always @(*) begin
        case (selectWires)
            4'b0000 : out = inA;
            4'b0001 : out = inB;
            4'b0010 : out = inC;
            4'b0011 : out = inD;
            4'b0100 : out = inE;
            4'b0101 : out = inF;
            4'b0110 : out = inG;
            4'b0111 : out = inH;
            4'b1000 : out = inI;
            4'b1001 : out = inJ;
            4'b1010 : out = inK;
            4'b1011 : out = inL;
            4'b1100 : out = inM;
            4'b1101 : out = inN;
            4'b1110 : out = inO;
            4'b1111 : out = inP;
        endcase
    end

endmodule  // End of module
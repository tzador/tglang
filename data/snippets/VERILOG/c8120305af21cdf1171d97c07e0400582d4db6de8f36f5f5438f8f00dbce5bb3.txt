/* This is a code snippet in Verilog language that initializes and assigns values to a 32-bit register */

module register32(input clk, // input clock signal
                 input reset, // input reset signal
                 input [31:0] data, // input data signal
                 output reg [31:0] reg_out); // output register

always @ (posedge clk or posedge reset) // always block triggered by positive edge of clock or reset
begin
  if (reset) // if reset signal is high
    reg_out <= 32'b0; // reset the output register to all zeros
  else // if reset signal is low
    reg_out <= data; // assign the input data signal to the output register
end

endmodule // end of module
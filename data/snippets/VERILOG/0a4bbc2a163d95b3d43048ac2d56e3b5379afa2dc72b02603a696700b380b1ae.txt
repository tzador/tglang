module adder (
    input [3:0] a,
    input [3:0] b,
    output [3:0] sum
);
	wire [4:0] temp_sum = a + b; // creates a wire called temp_sum to store the sum of a and b, adds 4 bits for overflow
	assign sum = temp_sum[3:0]; // assigns the sum to the first 4 bits of temp_sum
	always @(temp_sum[4]) begin // always block sensitive to the 5th bit of temp_sum (overflow bit)
		if (temp_sum[4] == 1) begin // if overflow bit is 1
			sum <= sum + 1; // add 1 to the 4-bit sum
		end else begin // if overflow bit is 0
			sum <= sum; // sum remains the same
		end
	end

endmodule
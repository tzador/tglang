// Declare module for 16-bit Adder
module adder_16bit(output [15:0] sum, input [15:0] a, b, input cin, input sub);

// Declare internal wire for carry out and sum bits
wire [15:0] sum_internal;

// Instantiate full adder for least significant bit
// Named instance is fa_lsb and module name is full_adder
full_adder fa_lsb (.sum(sum_internal[0]), .cin(cin), .a(a[0]), .b(b[0]));

// Instantiate half adder for most significant bit
// Named instance is ha_lsb and module name is half_adder
half_adder ha_lsb (.sum(sum_internal[15]), .a(a[15]), .b(b[15]));

// Instantiate full adder for all other bits
generate
    // Use a for loop to instantiate full adder for each bit
    for (i = 1; i <= 14; i = i + 1) begin
        full_adder fa_i (.sum(sum_internal[i]), .cin(sum_internal[i-1]), .a(a[i]), .b(b[i]));
    end
endgenerate

// Use conditional operator to choose between sum and subtraction mode
// If sub is 0, add mode is selected (sum = a + b + cin)
// If sub is 1, subtraction mode is selected (sum = a - b - cin)
assign sum = sub ? a - b - cin : a + b + cin;

endmodule
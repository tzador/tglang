//This code snippet checks the parity of a binary number using a shift and XOR operation
module parity_check(input [7:0]bin_num,output reg parity);

reg [3:0]remainder, shifted_num;
assign shifted_num= bin_num>>4; //shift right by 4 bits
initial begin
remainder = shifted_num[3]^shifted_num[2]^shifted_num[1]^shifted_num[0];
end

always @ (posedge clk) //clocked always block
begin
parity = (remainder^bin_num[3]^bin_num[2]^bin_num[1]^bin_num[0]);
{$display(" The binary number %b has parity %b",$display(bin_num), $display(parity))}; //display the binary number and its calculated parity
end
endmodule
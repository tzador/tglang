//This code snippet is an example of a multiple input memory lookup table implementation in Verilog
module memoryLookup
    (
    input [1:0] memory_input, //input for memory address
    input clk,                //input for clock signal
    input [7:0] data_in,      //input data to be stored in memory
    input write_en,           //input for write enable signal
    output [7:0] data_out     //output data from memory
    );
    
    reg [7:0] memory [3:0];    //create an 8-bit memory with 4 address spaces

    always @ (posedge clk)     //process to be executed on clock signal rising edge
    if(write_en)               //if write enable signal is high
    memory[memory_input] <= data_in; //store input data in memory at specified address
    
    assign data_out = memory[memory_input]; //assign output data to be the data at the specified address
    
endmodule
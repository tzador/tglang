// Verilog code to generate a clock divider module

module clock_divider
(
    input clock,               // input clock signal
    input [3:0] divisor,       // input divisor for clock division
    output reg clock_out       // output divided clock signal
);

reg [3:0] count;               // internal counter for counting clock cycles

always @(posedge clock)        // synchronous reset
begin
    if (count == divisor)      // when count is equal to divisor
    begin
        clock_out = !clock_out;   // toggle clock_out signal
        count <= 0;               // reset count
    end
    else
    begin
        count <= count + 1;     // increment count by 1
    end
end

endmodule
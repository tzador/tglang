// This code snippet is an example of a pipelined multiplier with a custom pipeline depth

module multiplier(input [15:0] num1, num2, // inputs for the two numbers to be multiplied
					input clk, // input clock signal to control pipelining
					output [31:0] product // output for the resulting product
					);
	
	parameter PIPELINE_DEPTH = 4; // setting a custom pipeline depth of 4 stages
	
	reg [15:0] stage0, stage1, stage2, stage3; // registers for each stage of the pipeline
	reg [3:0] state; // register to hold current state of the pipeline
	
	always @ (posedge clk) begin
		case (state) 
			0: begin
				stage0 <= num1; // first stage takes input number 1
				stage1 <= num1 * num2; // second stage multiplies input number 1 with input number 2
				state <= 1; // updating state to move to next stage
			end
			1: begin
				stage2 <= stage1; // third stage takes output of second stage as input
				stage3 <= stage1 * num2; // fourth stage multiplies output of second stage with input number 2
				state <= 2; // updating state to move to next stage
			end
			2: begin
				product <= stage3; // final stage outputs the product
				state <= 0; // resetting state for next pipeline cycle
			end
		endcase
	end
	
endmodule
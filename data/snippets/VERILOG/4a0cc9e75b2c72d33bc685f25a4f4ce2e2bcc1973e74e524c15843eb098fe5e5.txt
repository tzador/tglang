//This is a code snippet for a multiplexer using two 4-bit input and one 2-bit select line

module multiplexer_4to1 (input [3:0] input1, input [3:0] input2, input [1:0] select, output [3:0] output);
  //declaring the inputs and output of the module
  //the inputs are two 4-bit vectors and a 2-bit select line
  //the output is a 4-bit vector
  //the module is named "multiplexer_4to1"
  //the module can be instantiated in another code

  reg [3:0] temp; //declaring a temporary 4-bit vector to store the selected input

  always @ (*) begin //using an "always" block to continuously update the values
    case (select) //using a case statement to check the select line's value
      2'b00: temp = input1; //if select is 00, then input1 is selected
      2'b01: temp = input2; //if select is 01, then input2 is selected
      2'b10: temp = input1 & input2; //if select is 10, then input1 and input2 are ANDed and stored in temp
      2'b11: temp = input1 | input2; //if select is 11, then input1 and input2 are ORed and stored in temp
    endcase
    output = temp; //assigning the value of temp to the output
  end
endmodule
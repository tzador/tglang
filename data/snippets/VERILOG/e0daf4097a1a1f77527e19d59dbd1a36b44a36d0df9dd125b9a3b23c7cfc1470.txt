module example(input a, input b, output c, output d); // defining module with inputs and outputs
reg [3:0] e; // defining 4-bit register variable
wire f; // defining wire variable
initial begin // initial block for sequential execution
e = a + b; // assigning value to register variable
end // end of initial block
assign f = e[2] & e[3]; // assigning value to wire variable using bitwise AND operation
always @ (posedge a) begin // creating an always block for continuous execution on positive edge of input a
if (a == b) begin // conditional statement
if (f == 0) begin // nested conditional statement
c = 1; // assigning value to output c
end // end of nested conditional
else begin // else statement
c = 0; // assigning value to output c
end // end of else statement
end // end of conditional statement
else if (b > a) begin // else-if statement
c = 0; // assigning value to output c
if (f == 1) begin // nested conditional statement
d = 1; // assigning value to output d
end // end of nested conditional
else begin // else statement
d = 0; // assigning value to output d
end // end of else statement
end // end of else-if statement
else begin // else statement
c = 1; // assigning value to output c
end // end of else statement
endmodule // end of module
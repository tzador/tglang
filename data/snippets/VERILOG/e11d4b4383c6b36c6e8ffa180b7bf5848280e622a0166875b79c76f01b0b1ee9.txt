// Module declaration 
module multiplexer ( 
	input wire [1:0] select, 
	input wire [3:0] data1, 
	input wire [3:0] data2, 
	input wire [3:0] data3, 
	input wire [3:0] data4, 
	output wire [3:0] dataOut 
); 

// Internal signal declarations 
reg [3:0] temp1; 
reg [3:0] temp2; 
reg [3:0] temp3; 
reg [3:0] temp4; 

// Output assignment based on select signal 
always @ (select) begin 

	case (select) 
		2'b00: dataOut <= data1; 
		2'b01: dataOut <= data2; 
		2'b10: dataOut <= data3; 
		2'b11: dataOut <= data4; 
	default: dataOut <= 4'bZZZZ; 
	endcase 
end 

// Internal signal assignments based on select signal 
always @ (select) begin 

	case (select) 
		2'b00: begin 
			temp1 <= data1; 
			temp2 <= 0; 
			temp3 <= 0; 
			temp4 <= 0; 
		end 
		2'b01: begin 
			temp1 <= 0; 
			temp2 <= data2; 
			temp3 <= 0; 
			temp4 <= 0; 
		end 
		2'b10: begin 
			temp1 <= 0; 
			temp2 <= 0; 
			temp3 <= data3; 
			temp4 <= 0; 
		end 
		2'b11: begin 
			temp1 <= 0; 
			temp2 <= 0; 
			temp3 <= 0; 
			temp4 <= data4; 
		end 
	endcase 
end 

endmodule
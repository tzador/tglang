// This is a code snippet in VERILOG
// It defines a 4-bit adder module with overflow detection
module adder_4bit(
    input [3:0] a, b, // 4-bit inputs for the two numbers to be added
    input ci, // carry input
    output reg [3:0] sum, // register to store the sum
    output co  // carry output
    );
    
    always @ (*) begin
        {co, sum} = a + b + ci; // calculates sum and carry simultaneously
    end
    
    // overflow detection
    always @ (*) begin
        if(a[3] == 1 && b[3] == 1) // if both most significant bits are 1
            co = 1; // set carry output to 1 to indicate overflow
        else
            co = 0; // otherwise, carry output is 0
    end
    
endmodule
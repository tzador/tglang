//This is a register file module in Verilog

module register_file (

input clock,
input reset,
input write_enable,
input [3:0] write_address,
input [3:0] read_address_1,
input [3:0] read_address_2,
input [15:0] write_data,
output reg [15:0] read_data_1,
output reg [15:0] read_data_2
);

//Defining internal wire and register variables

wire [15:0] data_out_1, data_out_2;

reg [15:0] registers [15:0];

//Defining a case statement to handle read and write operations

always @ (posedge clock) begin
if (reset) begin
for (int i = 0; i < 16; i = i + 1) begin
registers[i] <= 16'b0;
end
end
else if(write_enable) begin
registers[write_address] <= write_data;
end
read_data_1 <= registers[read_address_1];
read_data_2 <= registers[read_address_2];
end

//Instantiating the register file module 

register_file RF (
.clock(clock),
.reset(reset),
.write_enable(write_enable),
.write_address(write_address),
.read_address_1(read_address_1),
.read_address_2(read_address_2),
.write_data(write_data),
.read_data_1(read_data_1),
.read_data_2(read_data_2)
);

endmodule
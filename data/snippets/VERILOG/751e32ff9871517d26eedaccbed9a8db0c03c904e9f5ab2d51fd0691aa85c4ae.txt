//frequency divisor module

module freq_divider(
    input clk,                  //input clock signal
    input rst,                  //reset signal
    input [7:0] freq_divisor,   //8-bit input for frequency division
    output reg out              //output signal
);

reg [7:0] count;                //register to count number of clock cycles

always @(posedge clk or posedge rst) begin
    if (rst == 1'b1) begin
        count <= 0;             //reset count to 0
        out   <= 0;             //set output to 0
    end else if (count == freq_divisor) begin
        count <= 0;             //reset count
        out   <= ~out;          //toggle output signal
    end else begin
        count <= count + 1;     //increment count
    end
end

endmodule
// Defining a module with inputs and outputs
module multiplier(
  input logic [15:0] a,        // 16-bit input a
  input logic [15:0] b,        // 16-bit input b
  output logic [31:0] product  // 32-bit output product
);

// Defining local variables and internal signals
logic [31:0] mul_result;  // 32-bit multiplication result
logic [3:0] add_result;   // 4-bit addition result

// Multiplication operation
assign mul_result = a * b;   // assign operator for combinational logic

// Addition operation
assign add_result = a + b;   // assign operator for combinational logic

// Sequential always block for storing the results
always_ff @(posedge clk)
begin
  product <= mul_result;    // storing multiplication result on positive clock edge
  product <= add_result;    // storing addition result on positive clock edge
end

endmodule
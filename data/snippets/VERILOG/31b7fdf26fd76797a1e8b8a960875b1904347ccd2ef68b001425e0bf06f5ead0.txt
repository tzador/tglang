`timescale 1ns / 1ps          //Specifies the timescale for the simulation
module counter(
  input clk,                  //Clock input
  input rst,                  //Reset input
  input en,                   //Enable input
  input [3:0] count_limit,    //Input for count limit
  output reg [3:0] count      //Output for count
);

  reg [3:0] temp_count;       //Temporary register for storing the current count value
  
  always @ (posedge clk, posedge rst) begin //combinational always block
    if(rst) begin             //Reset condition
        temp_count <= 0;
    end
    else if(en & (temp_count == count_limit)) begin //Check if enable is high and current count is equal to count limit
        temp_count <= 0;      //Reset the temporary count
    end
    else if (en) begin        //Check if enable is high
        temp_count <= temp_count + 1; //Increment the temporary count
    end
    else begin                //All other cases 
        temp_count <= temp_count; //No change in temporary count
    end
  end

  always @ (*) begin          //sequential always block
        count <= temp_count;  //assign temporary count to count output
  end

endmodule
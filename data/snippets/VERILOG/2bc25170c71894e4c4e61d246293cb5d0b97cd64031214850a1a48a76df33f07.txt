/*
 * Module: Fibonacci Sequence Generator
 * Description: Generates a sequence of Fibonacci numbers based on the input integer n.
 * Inputs: n (integer)
 * Output: fib_sequence (array of integers)
*/

module fibonacci_sequence_generator (n, fib_sequence);

parameter MAX_N = 10; // maximum input value for n
parameter SIZE = 11; // size of the fib_sequence array (MAX_N + 1)

input [31:0] n; // input integer n with 32-bit width
output [31:0] fib_sequence [SIZE-1:0]; // output array with 32-bit width for each element

// local variables and signals
reg [31:0] fib_n; // current Fibonacci number
reg [31:0] prev1; // previous Fibonacci number
reg [31:0] prev2; // second previous Fibonacci number
reg [3:0] count; // counter for loop
reg [3:0] i; // counter for indexing

// initialize local variables and signals
initial begin
	fib_n = 0; // initialize current Fibonacci number to 0
	prev1 = 0; // initialize previous Fibonacci number to 0
	prev2 = 1; // initialize second previous Fibonacci number to 1
	count = 0; // initialize loop counter to 0
	i = 0; // initialize array index counter to 0
end

// logic for generating Fibonacci sequence
always @(*) begin
	fib_n = 0; // reset current Fibonacci number
	prev1 = 0; // reset previous Fibonacci number
	prev2 = 1; // reset second previous Fibonacci number
	
	// generate Fibonacci sequence using for loop
	for (count = 0; count <= n; count = count + 1) begin
		if (count == 0) begin
			fib_n = 0; // first Fibonacci number is 0
		end
		else if (count == 1) begin
			fib_n = 1; // second Fibonacci number is 1
		end
		else begin
			fib_n = prev1 + prev2; // calculate current Fibonacci number
			prev2 = prev1; // update second previous Fibonacci number
			prev1 = fib_n; // update previous Fibonacci number
		end
		
		// add current Fibonacci number to array
		fib_sequence[i] = fib_n;
		i = i + 1; // update index counter
	end
end
endmodule
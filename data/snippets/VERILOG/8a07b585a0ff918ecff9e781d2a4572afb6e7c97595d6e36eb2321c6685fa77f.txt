// Module: Counter
module counter (
   input clk, // Clock input
   input rst, // Reset input
   input en, // Enable input
   output reg [7:0] count // 8-bit output register
   );

   // Local wire declaration
   wire en_clk, en_d, en_i;

   // Counter parameters
   parameter LIMIT = 8; // Counter limit
   parameter INIT = 0; // Counter initial value

   // Counter registers
   reg [7:0] count_d, count_i, count_n;

   // Clock and reset logic
   always @ (posedge clk or posedge rst) begin
      if (rst) begin
         count <= INIT; // Reset counter to initial value
      end else begin
         if (en) begin
            count_n <= count_d + 1; // Increment counter by 1
         end else begin
            count_n <= count_d; // Keep counter unchanged
         end
      end
   end

   // Assign input enable to local wires
   assign en_clk = (clk == 1'b1); // Enable signal for clock
   assign en_d = (count_d < LIMIT); // Enable signal for data
   assign en_i = (count_i < LIMIT); // Enable signal for output

   // Data and output logic
   always @ (en_clk) begin
      if (en_clk) begin
         if (en_d) begin
            count_d <= count_n; // Set data register to next value
         end
         if (en_i) begin
            count_i <= count_d; // Set output register to current value
         end
      end
   end

endmodule
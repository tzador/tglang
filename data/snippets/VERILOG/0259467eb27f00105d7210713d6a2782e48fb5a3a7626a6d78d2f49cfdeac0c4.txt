/*
This code snippet is a Register File implemented in Verilog.
It contains 8 registers of 8 bits each.
Each register has a read and write port.
*/

module register_file(input clk,     //Master clock input
                    input [2:0] read1, //Address for first read port
                    input [2:0] read2, //Address for second read port
                    input [2:0] write, //Address for write port
                    input [7:0] dataIn, //Data input for write port
                    output reg [7:0] dataOut1, //Output for first read port
                    output reg [7:0] dataOut2 //Output for second read port
                    );
    
    reg [7:0] regFile [0:7]; //Array of 8 registers, each 8 bits wide
    
    //Assign first read output to data stored at address read1
    always @ (posedge clk)
        dataOut1 <= regFile[read1];
    
    //Assign second read output to data stored at address read2
    always @ (posedge clk)
        dataOut2 <= regFile[read2];
        
    //Write data to register at address write on positive clock edge
    always @ (posedge clk)
        if (write)
            regFile[write] <= dataIn;
            
endmodule
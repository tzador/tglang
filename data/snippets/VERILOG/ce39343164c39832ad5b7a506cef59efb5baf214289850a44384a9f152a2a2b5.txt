// defining a module
module myModule(
    input clk,
    input reset,
    input [7:0] data_in,
    output reg [7:0] data_out
);
    // defining internal signals
    reg [7:0] internal_data;
    wire [7:0] output_data;
    
    // defining a parameter
    parameter MULTIPLIER = 2;
    
    // sequential logic
    always @(posedge clk or posedge reset) begin
        if(reset == 1'b1) begin
            // reset internal data
            internal_data <= 0;
        end
        else begin
            // multiply data_in by MULTIPLIER
            internal_data <= data_in * MULTIPLIER;
        end
    end
    
    // combinational logic
    assign output_data = internal_data + data_in;
    
    // assigning outputs
    always @(*) begin
        // output data is the sum of internal and input data
        data_out = internal_data + data_in;
    end

endmodule
//This module represents a flip flop with an asynchronous clear
module FF_clear(
    input clk,
    input reset,
    input data,
    output reg q
);

//Define a wire to hold the negated value of the reset input
wire reset_n;
//Assign it to the negated input
assign reset_n = ~reset;

//Define a negedge trigger to reset the output
//When reset goes from high to low, q is reset to 0
//The @ symbol designates an event in the always block
always @(negedge reset_n) begin
    q <= 0;
end

//Define a posedge trigger to update the output
//When clk goes from low to high, q is updated with the data input
always @(posedge clk) begin
    q <= data;
end

endmodule
// This module implements a synchronous 4-bit counter with enable input
module counter(clk, en, out);
    input clk, en; // clock and enable inputs
    output [3:0] out; // 4-bit output
    reg [3:0] count; // register to hold count value
    always @(posedge clk) begin // always block triggered by positive clock edge
        if (en) begin // if enable is high
            case (count) // case statement based on count value
                0: count <= 1; // if count is 0, increment to 1
                1: count <= 2; // if count is 1, increment to 2
                2: count <= 3; // if count is 2, increment to 3
                3: count <= 4; // if count is 3, increment to 4
                4: count <= 0; // if count is 4, reset to 0
                default: count <= 0; // default case, reset to 0
            endcase
        end 
        else begin // if enable is low, keep count the same
            count <= count;
        end
    end
    assign out = count; // assign count value to output
endmodule
`timescale 1ns/1ps   // sets the timescale for the simulation
  
module example_module(input a, output reg b);   // declares a Verilog module with an input and output, with b being a registered output
  
parameter SIZE = 8;   // sets a parameter with a value of 8
  
reg [SIZE-1:0] c;   // declares a registered signal c with a width of SIZE
  
initial begin   // begins the initial block
  
  c = 0;   // initializes c to 0
  
  for (int i = 0; i < SIZE; i++) begin   // begins a for loop that iterates SIZE times
    
    if (a == i) begin   // checks if a is equal to the current loop iteration
      
      c[i] = 1;   // sets the corresponding bit in c to 1
      
    end else begin   // if a is not equal to the current loop iteration
      
      c[i] = 0;   // sets the corresponding bit in c to 0
      
    end
  end
  
end
  
always @(a) begin   // begins an always block that triggers when a changes
  
  b = c[a];   // sets b to the value of c at the index of a
  
end
  
endmodule   // ends the module
module adder(input [7:0] A, B,
             input CARRY_IN,
             output [7:0] SUM,
             output CARRY_OUT);
// This module takes in two 8-bit inputs (A and B) and a carry_in flag,
// and outputs the sum as an 8-bit value (SUM) and a carry_out flag.

    // Generate a 9-bit sum to account for any carry
    reg [8:0] temp_sum;

    // Add the two inputs and the carry_in flag
    always @* begin
        temp_sum = A + B + CARRY_IN;
    end

    // Assign the output sum to the first 8 bits of the temp_sum
    assign SUM = temp_sum[7:0];

    // Determine if a carry is generated and output the flag
    assign CARRY_OUT = temp_sum[8];

endmodule
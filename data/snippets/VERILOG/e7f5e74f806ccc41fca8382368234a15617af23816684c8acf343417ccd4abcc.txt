module ALU(input [7:0] A, input [7:0] B, input [2:0] opcode, output [7:0] result); //module definition
    reg [7:0] result; //declare a register to store the result
    always @(*) //combinational always block
    begin
        case (opcode) //choose operation based on opcode
            3'b000: result = A + B; //add operation
            3'b001: result = A - B; //subtract operation
            3'b010: result = A & B; //logical AND operation
            3'b011: result = A | B; //logical OR operation
            default: result = 8'b0; //default case for any other input
        endcase
    end
endmodule
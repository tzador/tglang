/*
  This code snippet implements a 4-bit ALU (arithmetic logic unit) in VERILOG.
  It takes two 4-bit inputs A and B, and an opcode indicating the operation to be performed.
  The result is stored in a 4-bit register called 'result'.
  The possible operations are: addition (opcode = 000), subtraction (opcode = 001),
  bitwise AND (opcode = 010), bitwise OR (opcode = 011), bitwise XOR (opcode = 100), and a simple register transfer (opcode = 101).
  The code also includes a carry-out bit to indicate overflow in addition/subtraction.
  */

  //defining inputs and outputs
  module ALU (A, B, opcode, result, carry_out);

  input [3:0] A; //4-bit input A
  input [3:0] B; //4-bit input B
  input [2:0] opcode; //3-bit opcode
  output [3:0] result; //4-bit result
  output carry_out; //carry-out bit

  //defining registers for temporary storage of inputs and result
  reg [3:0] A_temp;
  reg [3:0] B_temp;
  reg [3:0] result_temp;

  //combinational logic for arithmetic operations
  always @ (*) begin
    case (opcode)
      3'd0: //addition
        begin
          result_temp = A + B;
          carry_out = (A[3] & B[3]) | (A[3] & result_temp[3]) | (B[3] & result_temp[3]);
        end
      3'd1: //subtraction
        begin
          result_temp = A - B;
          carry_out = (~A[3] & B[3]) | (A[3] & result_temp[3]) | (~B[3] & result_temp[3]);
        end
      3'd2: //bitwise AND
        begin
          result_temp = A & B;
          carry_out = 1'b0;
        end
      3'd3: //bitwise OR
        begin
          result_temp = A | B;
          carry_out = 1'b0;
        end
      3'd4: //bitwise XOR
        begin
          result_temp = A ^ B;
          carry_out = 1'b0;
        end
      default: //register transfer
        begin
          result_temp = A;
          carry_out = 1'b0;
        end
    endcase
  end

  //defining register for result storage
  always @ (*) begin
    result = result_temp;
  end

  //defining register for temporary storage of inputs
  always @ (*) begin
    A_temp = A;
    B_temp = B;
  end

endmodule
module adder(
  input wire signed [7:0] a,
  input wire signed [7:0] b,
  output logic signed [8:0] c,
  output logic signed [1:0] overflow
);
  /*This module takes in two 8-bit signed numbers and outputs the sum as a 9-bit signed number with overflow detection*/
  /*Inputs:
    - a: first 8-bit signed number
    - b: second 8-bit signed number
  Outputs:
    - c: 9-bit signed sum
    - overflow: 2-bit overflow detection indicating if the sum exceeds 8-bit signed range*/
  logic signed [8:0] temp_result; //temp variable to store sum
  
  always_comb begin //always block to calculate sum
    temp_result = a + b; //calculate sum and store in temp variable
    if(temp_result > 127 || temp_result < -128) //check if sum is out of 8-bit signed range
      overflow = 2'b11; //if overflow, set overflow detection to 2'b11
    else if(temp_result > 255 || temp_result < -255) //check if sum is out of 9-bit signed range
      overflow = 2'b10; //if overflow, set overflow detection to 2'b10
    else
      overflow = 2'b00; //else, no overflow
    c = temp_result; //assign temp variable value to output
  end
endmodule
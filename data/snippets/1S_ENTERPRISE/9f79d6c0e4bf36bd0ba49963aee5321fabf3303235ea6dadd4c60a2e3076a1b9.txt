//This code will generate a report of all employees in a company
//Variable declaration
STRING employees_list;
STRING employee_name;
INT employee_age;
STRING department_name;

//Function to retrieve all employees' information
SUBROUTINE GetEmployeesInfo
  //Getting employees' list from database
  employees_list = GET_EMPLOYEES_LIST();

  //Looping through the list
  FOR EACH employee IN employees_list DO
    //Getting employee's name
    employee_name = GET_EMPLOYEE_NAME(employee);

    //Getting employee's age
    employee_age = GET_EMPLOYEE_AGE(employee);

    //Getting employee's department
    department_name = GET_EMPLOYEE_DEPARTMENT(employee);

    //Printing employee's info
    PRINT("Name: " + employee_name + ", Age: " + employee_age + ", Department: " + department_name);
  ENDDO;
ENDSUB

//Function to get employees' list from database
FUNCTION GET_EMPLOYEES_LIST
  //Database connection and query to retrieve employees' list
  DATABASE CONNECTION con;
  SELECT name FROM employees INTO employees_list;

  RETURN employees_list;
ENDFUNCTION

//Function to get employee's name
FUNCTION GET_EMPLOYEE_NAME(employee)
  //Database connection and query to retrieve employee's name
  DATABASE CONNECTION con;
  SELECT name FROM employees WHERE employee = employee INTO employee_name;

  RETURN employee_name;
ENDFUNCTION

//Function to get employee's age
FUNCTION GET_EMPLOYEE_AGE(employee)
  //Database connection and query to retrieve employee's age
  DATABASE CONNECTION con;
  SELECT age FROM employees WHERE employee = employee INTO employee_age;

  RETURN employee_age;
ENDFUNCTION

//Function to get employee's department
FUNCTION GET_EMPLOYEE_DEPARTMENT(employee)
  //Database connection and query to retrieve employee's department
  DATABASE CONNECTION con;
  SELECT department FROM employees WHERE employee = employee INTO department_name;

  RETURN department_name;
ENDFUNCTION

//Calling the function to get employees' information
CALL GetEmployeesInfo();
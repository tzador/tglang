// This code snippet demonstrates the use of a complex data structure in 1C Enterprise.
// It creates an array to store information about different employees in a company.

// Declare an array of employees
Var Employees:Array;

// Create an empty structure to hold employee details
Structure Employee
    Name:String; // Name of the employee
    Age:Int; // Age of the employee
    Department:String; // Department the employee works in
    Salary:Currency; // Salary of the employee
    Skills:Array; // Array to store the employee's skills
EndStructure

// Add employees to the array
Employees.Add(New Employee(Name:"John Smith", Age:32, Department:"Sales", Salary:50000, Skills:New Array("Communication", "Negotiation")));
Employees.Add(New Employee(Name:"Samantha Jones", Age:28, Department:"Marketing", Salary:60000, Skills:New Array("Marketing Strategy", "Copywriting")));
Employees.Add(New Employee(Name:"Michael Miller", Age:40, Department:"IT", Salary:80000, Skills:New Array("Programming", "Database Management")));

// Loop through the employees array and print their details
For Each Employee in Employees Do
    // Use the Format function to display the employee's details in a readable format
    Message = Format("Employee Name: %1, Age: %2, Department: %3, Salary: %4, Skills: %5", Employee.Name, Employee.Age, Employee.Department, Employee.Salary, Employee.Skills.Join(", "));
    Message = "Employee Details: " + Message; // Add a label to the message
    ShowMessage(Message);
EndDo

//2Do not forget to destroy the array after use to free up memory
Employees.Clear();
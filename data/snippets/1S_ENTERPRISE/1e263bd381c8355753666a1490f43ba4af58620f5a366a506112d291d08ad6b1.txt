// This is a comment line

#НастройкаКонтекстаКонфигурации
// This is a comment on a function call

Процедура НаВыборОкна()
// This is a procedure that takes no parameters
ОткрытьОкно("ПоддержкаРуководителя");
// This is a function call that opens a window with the name "ПоддержкаРуководителя"

// This is a comment on a variable declaration
Перем ИмяПользователя, КодПользователя;
// Declares two variables, "ИмяПользователя" and "КодПользователя"

/* This is a multi-line comment
    that describes the functionality
    of the following code */

// This is a comment on a conditional statement
Если ПереданоНаДанныйМомент() Тогда
    // This is an if statement that checks if the function "ПереданоНаДанныйМомент" returns true
    Читать("ДанныеРуководителя");
    // If true, execute this statement, which reads data from "ДанныеРуководителя"
КонецЕсли;

// This is a comment on a loop
Пока ЕстьЧтоОбработать Цикл
    // This is a while loop that executes until the condition "ЕстьЧтоОбработать" is false
    ОбработатьДоступныйЭлемент();
    // Executes the function "ОбработатьДоступныйЭлемент" each time the loop runs
КонецЦикла;

// This is a comment on a try-catch block
Попытка
    // This code attempts to execute without any errors
    ВыполнитьВыполнимоеКомандой();
    // Executes the function "ВыполнитьВыполнимоеКомандой"
Исключение
    // If an error occurs, this code will handle it
    Сообщить("Возникла ошибка: " + ОписаниеОшибки());
    // Displays a message with the error description
КонецПопытки;

/* This is a multi-line comment
    that describes the functionality
    of the following code */

// This is a comment on a class declaration
Если МетаданныеРуководителя.Ссылка = Неопределено Тогда
    // This if statement checks if the class "МетаданныеРуководителя" has a reference
    ОписаниеРуководителяЗадатьЗначение();
    // If it doesn't, execute the function "ОписаниеРуководителяЗадатьЗначение"
КонецЕсли;

// This is a comment on a method declaration
Процедура Описание()
    // This method has no parameters
    НайтиЗначениеРуководителя();
    // Executes the function "НайтиЗначениеРуководителя"
КонецПроцедуры;

// This is a comment on a new object creation
НовыйКомандныйОбработчик();
// Creates a new instance of the object "КомандныйОбработчик"
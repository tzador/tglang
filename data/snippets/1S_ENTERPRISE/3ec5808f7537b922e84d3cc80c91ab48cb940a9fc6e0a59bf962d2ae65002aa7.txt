#Annotated code snippet in 1S_ENTERPRISE

//Declaration of global variables
Var
  Count //Integer variable to hold number of elements
  Array //Array variable with size of Count elements

//Function to initialize and fill the array with random values
Function InitAndFillArray(Value)
  Value = New Array; //Creates a new empty array
  For Index = 0 To Count Do //Loop from 0 to Count elements
    Value.Add(Random(100)); //Add random value between 0 and 100 to array
  EndDo; //End of for loop
Return Value; //Returns the initialized and filled array

//Function to print the array elements
Function PrintArray(Value)
  For Index = 0 To Value.UpperBound() Do //Loop through all elements in array
    Message("Element " + (Index+1) + ": " + Value[Index]); //Print element index and value
  EndDo; //End of for loop
EndFunction; //End of Function

//Function to find the maximum element in the array
Function FindMaxElement(Value)
  Max = Value[0]; //Assume first element as maximum
  For Index = 1 To Value.UpperBound() Do //Loop through all elements in array
    If Value[Index] > Max Then //If current element is greater than current maximum
      Max = Value[Index]; //Update maximum value
    EndIf; //End of if condition
  EndDo; //End of for loop
Return Max; //Returns the maximum element in the array

//Function to sort the array in descending order using bubble sort algorithm
Function BubbleSort(Value)
  For i = 1 To Value.UpperBound() Do //Loop for number of elements - 1 times
    For j = 1 To Value.UpperBound() - i Do //Loop through the unsorted part of array
      If Value[j] < Value[j+1] Then //If current element is less than next element
        //Swap the elements
        Temp = Value[j];
        Value[j] = Value[j+1];
        Value[j+1] = Temp;
      EndIf; //End of if condition
    EndDo; //End of inner for loop
  EndDo; //End of outer for loop
EndFunction; //End of Function

//Main function
Procedure Main()
  //Initialize variables and fill array
  Count = 10; //Number of elements in array
  Array = InitAndFillArray(Array);
  //Print original array
  Message("Original Array:");
  PrintArray(Array);
  //Find maximum element and print it
  MaxElement = FindMaxElement(Array);
  Message("Maximum element: " + MaxElement);
  //Sort array and print it in descending order
  BubbleSort(Array);
  Message("Sorted Array:");
  PrintArray(Array);
EndProcedure; //End of Main procedure

//Output:
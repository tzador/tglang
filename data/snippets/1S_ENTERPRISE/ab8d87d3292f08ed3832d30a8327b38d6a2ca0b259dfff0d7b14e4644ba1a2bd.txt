#Процедура поиска кратчайшего пути в графе

#Задаем количество вершин в графе
Перем КоличествоВершин = 10;

#Задаем начальную и конечную вершины
Перем Начальная = 1;
Перем Конечная = 10;

#Создаем массив для хранения расстояний до каждой вершины
МассивРасстояний = Новый Массив(КоличествоВершин);

#Заполняем массив бесконечными значениями
МассивРасстояний.Заполнить(Неопределено);

#Устанавливаем расстояние до начальной вершины равным 0
МассивРасстояний[Начальная] = 0;

#Создаем очередь для хранения вершин, которые нужно обойти
Очередь = Новая Очередь;
Очередь.Добавить(Начальная);

#Пока очередь не пуста
Пока Очередь.Количество() > 0 Цикл
	#Берем первый элемент из очереди
	Перем ТекущаяВершина = Очередь.Получить();
	
	#Получаем список смежных с текущей вершиной
	СписокСмежных = ПолучитьСмежные(ТекущаяВершина);
	
	#Для каждой смежной вершины
	Для Каждого СмежнаяВершина Из СписокСмежных Цикл
		#Получаем текущее расстояние до смежной вершины
		Перем ТекущееРасстояние = МассивРасстояний[СмежнаяВершина];
		
		#Вычисляем новое расстояние до смежной вершины, с учетом текущей вершины
		Перем НовоеРасстояние = МассивРасстояний[ТекущаяВершина] + ПолучитьРасстояние(ТекущаяВершина, СмежнаяВершина);
		
		#Если новое расстояние меньше текущего
		Если НовоеРасстояние < ТекущееРасстояние Тогда
			#Обновляем значение в массиве
			МассивРасстояний[СмежнаяВершина] = НовоеРасстояние;
			
			#Добавляем смежную вершину в очередь
			Очередь.Добавить(СмежнаяВершина);
		КонецЕсли
	КонецЦикла
КонецЦикла

#Выводим кратчайшее расстояние до конечной вершины
Сообщить(МассивРасстояний[Конечная]);
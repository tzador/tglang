// This code snippet uses objects and methods from the 1C_ENTERPRISE programming language

// Create an object of the Catalog type with the name "Products"
Catalog.Products = NewObject("Catalog.Products");

// Add a property of type Enum with the name "ProductType" and possible values "Food", "Beverage", and "Household"
Catalog.Products.AddProperty("ProductType", Type("Enum"));
Catalog.Products.Property("ProductType").PossibleValues = NewValueNumeration(ValueType("Enum"));
Catalog.Products.Property("ProductType").PossibleValues.Add("Food");
Catalog.Products.Property("ProductType").PossibleValues.Add("Beverage");
Catalog.Products.Property("ProductType").PossibleValues.Add("Household");

// Add a property of type String with the name "ProductName"
Catalog.Products.AddProperty("ProductName", Type("String"));

// Add a property of type Number with the name "Quantity"
Catalog.Products.AddProperty("Quantity", Type("Number"));

// Add a property of type Currency with the name "Price"
Catalog.Products.AddProperty("Price", Type("Currency"));

// Create an object of the Document type with the name "SalesOrder"
Document.SalesOrder = NewObject("Document.SalesOrder");

// Add a tabular section with the name "OrderLines" to the "SalesOrder" object
Document.SalesOrder.AddTabularSection("OrderLines");

// Create a variable "Product1" with the value "Bread"
Product1 = "Bread";

// Add a line to the "OrderLines" tabular section with the properties "ProductType", "ProductName", "Quantity", and "Price"
Document.SalesOrder.OrderLines.Add();
Document.SalesOrder.OrderLines["ProductType"] = Catalog.Products.Property("ProductType").PossibleValues["Food"];
Document.SalesOrder.OrderLines["ProductName"] = Product1;
Document.SalesOrder.OrderLines["Quantity"] = 2;
Document.SalesOrder.OrderLines["Price"] = 2.50;

// Create a variable "Product2" with the value "Milk"
Product2 = "Milk";

// Add a line to the "OrderLines" tabular section with the properties "ProductType", "ProductName", "Quantity", and "Price"
Document.SalesOrder.OrderLines.Add();
Document.SalesOrder.OrderLines["ProductType"] = Catalog.Products.Property("ProductType").PossibleValues["Beverage"];
Document.SalesOrder.OrderLines["ProductName"] = Product2;
Document.SalesOrder.OrderLines["Quantity"] = 1;
Document.SalesOrder.OrderLines["Price"] = 1.75;

// Save the "SalesOrder" document
Document.SalesOrder.Save();

// Print the total price of the order
Message("Total price of order: " + Document.SalesOrder.OrderLines.Sum("Price"));
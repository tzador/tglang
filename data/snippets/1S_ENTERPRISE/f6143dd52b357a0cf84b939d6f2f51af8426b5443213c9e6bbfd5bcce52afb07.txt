// This code snippet creates a class named Order.
Class Order
{
	// Class properties
	Property Number As Integer;
	Property CustomerName As String;
	Property Date As DateAndTime;
	Property Items As ValueTable;
	
	// Constructor method
	Procedure Order(Number, CustomerName, Date)
	{
		// Assign values to properties
		This.Number = Number;
		This.CustomerName = CustomerName;
		This.Date = Date;
		This.Items = New ValueTable("OrderItems");
		
		// Add columns to value table
		This.Items.Columns.Add("ItemCode", ValueTableColType.String);
		This.Items.Columns.Add("Quantity", ValueTableColType.String);
		This.Items.Columns.Add("Price", ValueTableColType.String);
		
		// Set value table primary key
		This.Items.PrimaryKey = "ItemCode";
	}
	
	// Method for adding items to order
	Procedure AddItem(ItemCode, Quantity, Price)
	{
		// Create new value table record
		Var ItemRecord = This.Items.Add();
		
		// Set record values
		ItemRecord.ItemCode = ItemCode;
		ItemRecord.Quantity = Quantity;
		ItemRecord.Price = Price;
	}
	
	// Method for calculating total cost of order
	Function CalculateTotalCost()
		
		// Initialize total cost variable
		Var TotalCost = 0;
		
		// Loop through items in order
		For Each Item In This.Items Do
			// Multiply quantity by price and add to total cost
			TotalCost = TotalCost + (Item.Quantity * Item.Price);
		EndDo;
		
		// Return total cost
		Return TotalCost;
	EndFunction;
}
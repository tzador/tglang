//This code snippet creates a custom class of type 'Person' that defines properties and methods for managing personal information
Class Person
{
    //Specifies the name property
    Property Name As String;
    
    //Specifies the age property
    Property Age As Integer;
    
    //Specifies the gender property
    Property Gender As Enum("Male", "Female");
    
    //Specifies the constructor method for initializing the properties
    Method Constructor()
    {
        Name = "John Doe";
        Age = 30;
    }
    
    //Specifies a method for displaying the person's information
    Method ShowInformation()
    {
        Message("Name: " + Name);
        Message("Age: " + Age);
        Message("Gender: " + Gender);
    }
    
    //Specifies a method for updating the person's information
    Method UpdateInformation(newName As String, newAge As Integer, newGender As Enum)
    {
        //Validates the given inputs
        If(newName <> "" Or newAge > 0 Or newGender <> "")
        {
            Name = newName;
            Age = newAge;
            Gender = newGender;
        }
        Else
            Message("Invalid input!");
    }
}

//Creates an instance of the 'Person' class
Person johnDoe = New Person;

//Calls the constructor method to initialize the properties
johnDoe.Constructor();

//Calls the ShowInformation method to display the person's information
johnDoe.ShowInformation();

//Calls the UpdateInformation method to change the person's information
johnDoe.UpdateInformation("Jane Doe", 25, "Female");

//Calls the ShowInformation method again to display the updated information
johnDoe.ShowInformation();
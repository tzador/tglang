// Define class "Employee" with properties "name", "age" and "position"
Class Employee
	Property name As String;
	Property age As Integer;
	Property position As String;

	// Define constructor to set initial values of properties
	Constructor(name, age, position)
		Me.name = name;
		Me.age = age;
		Me.position = position;
	EndConstructor
	
	// Define method to print employee's information
	Procedure PrintInfo()
		Message("Name: " + this.name);
		Message("Age: " + String(this.age));
		Message("Position: " + this.position);
	EndProcedure

	// Define method to calculate employee's salary based on position and age
	Function CalculateSalary() As Double
		// Calculate base salary based on employee's position
		Select this.position
			Case "Manager"
				Salary = 5000;
			Case "Developer"
				Salary = 4000;
			Case "Designer"
				Salary = 3500;
			Case Else
				Salary = 2000;
		EndSelect
		
		// Add bonus based on employee's age
		If this.age > 50 Then
			// Bonus for employees over 50 years old is 20% of base salary
			Salary = Salary * 1.2;
		EndIf
		
		// Return calculated salary
		Return Salary;
	EndFunction
EndClass

// Create new instance of class "Employee" with name "John", age 35 and position "Developer"
NewEmployee = New Employee("John", 35, "Developer");

// Print employee's information
NewEmployee.PrintInfo();

// Calculate and print employee's salary
EmployeeSalary = NewEmployee.CalculateSalary();
Message("Salary: " + String(EmployeeSalary));
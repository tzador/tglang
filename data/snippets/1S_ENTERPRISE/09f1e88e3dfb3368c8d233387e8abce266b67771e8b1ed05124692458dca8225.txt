#Module

//This is a module for managing sales orders in 1C Enterprise.

Procedure GenerateSalesOrder()
    //This procedure generates a new sales order based on the customer's information and items selected.

    #Region "Variables"

    //Customer information variables
    CustomerName As String;
    CustomerAddress As String;
    CustomerEmail As String;
    CustomerPhone As String;

    //Sales order information variables
    OrderNo As Integer;
    OrderDate As Date;
    OrderStatus As String;

    //Item information variables
    ItemCode As String;
    ItemName As String;
    ItemPrice As Double;
    Quantity As Integer;

    //Total amount variable
    TotalAmount As Double;

    //Temporary variables for calculations
    TempPrice As Double;
    TempQuantity As Integer;
    TempAmount As Double;

    //Sales order template variable
    SalesOrderTemplate As CatalogRef;

    //Sales order table variable
    SalesOrderTable As DataTable;

    #EndRegion

    #Region "Get Customer Information"

    //Prompt user to enter customer information
    CustomerName = Prompt("Enter the customer's name:");
    CustomerAddress = Prompt("Enter the customer's address:");
    CustomerEmail = Prompt("Enter the customer's email:");
    CustomerPhone = Prompt("Enter the customer's phone number:");

    #EndRegion

    #Region "Select Items"

    //Prompt user to select items and quantity
    ItemCode = Prompt("Enter the item code:");
    ItemName = Prompt("Enter the item name:");
    ItemPrice = Prompt("Enter the item price:");
    Quantity = Prompt("Enter the quantity:");

    #EndRegion

    #Region "Calculate Total Amount"

    //Calculate the total amount based on the item price and quantity
    TempPrice = ToDouble(ItemPrice);
    TempQuantity = ToInt(Quantity);
    TempAmount = TempPrice * TempQuantity;
    TotalAmount = Round(TempAmount, 2);

    #EndRegion

    #Region "Create Sales Order"

    //Get a reference to the sales order template
    SalesOrderTemplate = Catalogs.SalesOrders.DefaultTemplate;
    
    //Set the sales order information
    SalesOrderTemplate.Ref = NewOrderNo();
    SalesOrderTemplate.Date = CurrentDate();
    SalesOrderTemplate.Status = "New";
    
    //Set the customer information
    SalesOrderTemplate.CustomerName = CustomerName;
    SalesOrderTemplate.Address = CustomerAddress;
    SalesOrderTemplate.Email = CustomerEmail;
    SalesOrderTemplate.Phone = CustomerPhone;
    
    //Add the item to the sales order table
    SalesOrderTable = New Table("SalesOrderTable");
    SalesOrderTable.Columns.Add("ItemCode");
    SalesOrderTable.Columns.Add("ItemName");
    SalesOrderTable.Columns.Add("Price");
    SalesOrderTable.Columns.Add("Quantity");
    SalesOrderTable.Columns.Add("Amount");
    SalesOrderTable.AddRow(ItemCode, ItemName, ItemPrice, Quantity, TotalAmount);
    
    //Set the sales order table in the sales order template
    SalesOrderTemplate.Table = SalesOrderTable;
    
    //Save the sales order
    SalesOrderTemplate.Write();

    #EndRegion

EndProcedure
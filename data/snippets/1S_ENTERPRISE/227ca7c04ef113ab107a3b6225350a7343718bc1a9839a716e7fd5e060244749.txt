// This code snippet demonstrates how to create a complex data structure in 1C Enterprise programming language

&AtClient
Procedure CreateStructure()
    // Create a list object 
    List = New List; 

    // Create a complex type of data
    Type1 = New ComplexType("Type1", alVertExt); 

    // Add Integer attribute
    Property1 = CreateProperty("Property1", New DataType("Integer", alVariable), alPrivate); 

    // Add String attribute
    Property2 = CreateProperty("Property2", New DataType("String", alVariable), alPrivate); 

    // Add Decimal attribute
    Property3 = CreateProperty("Property3", New DataType("Decimal", alVariable), alPrivate); 

    // Add Boolean attribute
    Property4 = CreateProperty("Property4", New DataType("Boolean", alVariable), alPrivate); 

    // Add complex type as attribute
    Property5 = CreateProperty("Property5", Type1, alPrivate); 

    // Add properties to type1
    Type1.Properties.Add(Property1); 
    Type1.Properties.Add(Property2); 
    Type1.Properties.Add(Property3); 
    Type1.Properties.Add(Property4); 
    Type1.Properties.Add(Property5); 

    // Add type1 as list element
    List.Add(Type1); 

    // Create a form object
    Form = New Form; 

    // Add a button to the form with event handling
    Button = Form.AddButton("Button", "Click", "OnClick"); 

    // Add a assignment expression to the event handler
    Statement = Button.AddAssignment(Property1, "10"); 

    // Add a condition to the statement
    Condition = New Condition(Property1, "=", "10"); 

    // Add a statement to the condition
    Statement = Condition.AddStatement(Property2, "Hello, world!"); 

    // Add the condition to the event handler
    Button.OnClick.Add(Condition); 

    // Show the form to the user
    Form.ShowModal(); 

EndProcedure
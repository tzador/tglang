// This code snippet creates a procedure that calculates the square root of a given number.
Procedure CalculateSquareRoot (Number)
 
// Declares a variable "Precision" and assigns the value of 0.000001
Precision = 0.000001
 
// Declares a variable "UpperBound" and assigns the value of "Number"
UpperBound = Number
 
// Declares a variable "LowerBound" and assigns the value of 0
LowerBound = 0
 
// Declares a variable "MidPoint" and assigns the value of 0
MidPoint = 0
 
// Declares a variable "SquareOfMidPoint" and assigns the value of 0
SquareOfMidPoint = 0
 
// Declares a variable "Diff" and assigns the value of 0
Diff = 0
 
// Declares a variable "SquareRoot" and assigns the value of 0
SquareRoot = 0
 
// Starts a loop with the condition "While UpperBound - LowerBound > Precision"
Do While UpperBound - LowerBound > Precision
 
// Calculates the midpoint between UpperBound and LowerBound
MidPoint = (UpperBound + LowerBound) / 2
 
// Calculates the square of the midpoint
SquareOfMidPoint = Square(MidPoint)
 
// Calculates the difference between the square of the midpoint and the original number
Diff = SquareOfMidPoint - Number
 
// If the difference is less than or equal to the precision, the square root has been found
If Diff <= Precision Then
 
// Sets the value of SquareRoot to the midpoint and exits the loop
SquareRoot = MidPoint
Exit
EndIf
 
// If the square of the midpoint is greater than the original number, the midpoint becomes the new upper bound
If SquareOfMidPoint > Number Then
UpperBound = MidPoint
EndIf
 
// If the square of the midpoint is less than the original number, the midpoint becomes the new lower bound
If SquareOfMidPoint < Number Then
LowerBound = MidPoint
EndIf
 
// Ends the loop
EndDo
 
// Returns the calculated square root
Return SquareRoot
 
EndProcedure
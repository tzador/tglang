// This code snippet shows how to create a class and add methods to it in 1C-ENTERPRISE

// Creating a class with the name "Employee"
Class Employee
    // Class properties
    Property Name As String;    // Property to store employee's name
    Property Age As Integer;    // Property to store employee's age
    Property Salary As Number;  // Property to store employee's salary

    // Method to display employee's information
    // Takes no arguments and returns nothing
    Procedure Info()
        // Outputting employee's information to the console
        Message("Name: " + Name + " | Age: " + Age + " | Salary: " + Salary);
    EndProcedure

    // Method to give employee a raise
    // Takes a number argument for the amount of raise
    // Returns the new salary after the raise
    Function Raise(amount As Number) As Number
        // Checking if the given amount is positive
        If amount > 0 Then
            // Calculating the new salary
            Salary = Salary + amount;
            // Outputting a message to the console
            Message("Employee " + Name + " received a raise of " + amount + ". New salary: " + Salary);
            // Returning the new salary
            Return Salary;
        EndIf
    EndFunction
EndClass

// Creating an instance of the Employee class
Var employee As Employee;
// Initializing the properties of the employee
employee.Name = "John Doe";
employee.Age = 35;
employee.Salary = 50000;

// Calling the Info method of the employee object
// Output: Name: John Doe | Age: 35 | Salary: 50000
employee.Info()

// Calling the Raise method of the employee object
// Output: Employee John Doe received a raise of 5000. New salary: 55000
employee.Raise(5000)

// Outputting the updated salary
// Output: 55000
Message(employee.Salary);
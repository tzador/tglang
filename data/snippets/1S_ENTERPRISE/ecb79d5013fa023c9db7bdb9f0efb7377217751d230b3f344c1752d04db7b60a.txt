// Define a structure with 2 fields
&AtSomeStruct
    Field1 - Integer; // First field of type Integer
    Field2 - String; // Second field of type String
EndStructure

// Create an array of structures
StructureArray = New Array(&AtSomeStruct);

// Fill the array with 10 structures
For i = 1 To 10 Do
    // Create a new structure
    NewStruct = New (&AtSomeStruct);
    NewStruct.Field1 = i; // Set the value of Field1 to the current index
    NewStruct.Field2 = "This is structure number " + String(i); // Set the value of Field2 to a string
    StructureArray.Add(NewStruct); // Add the structure to the array
EndDo;

// Sort the array in ascending order based on Field1
StructureArray.Sort("Field1", False);

// Loop through the sorted array and print out the values of Field1 and Field2
For Each Struct In StructureArray Do
    // Print the values using the format method
    Message("Field1: {0}, Field2: {1}", Struct.Field1, Struct.Field2);
EndDo;
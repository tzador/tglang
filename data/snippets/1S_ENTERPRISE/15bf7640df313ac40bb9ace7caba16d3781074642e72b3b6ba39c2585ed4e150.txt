Procedure PurchaseOrder(Item, Quantity, Price, Discount)
    Var
        Total: Float = 0; // variable to store total cost
    Price including VAT = GetItemPrice(Item) * Quantity; // function call to get item price and calculating total price

    Total += Price including VAT; // adding total price to the existing total
    If Discount > 0 Then // checking if discount is greater than 0
        Total *= (1 - Discount / 100); // applying discount to the total cost
    EndIf

    If Total < 1000 Then // checking if total cost is less than 1000
        Total += 50; // adding delivery fee of 50
    EndIf

    Return Total; // returning the final total cost
EndProcedure

Procedure CheckOut(Customer, PurchaseTotal)
    Var
        PaymentAmount: Float; // variable to store payment amount
        Balance: Float; // variable to store remaining balance
    Input PaymentAmount; // prompting customer to enter payment

    While PaymentAmount < PurchaseTotal Do // looping until payment amount is greater than or equal to purchase total
        Alert("Insufficient payment! Please enter amount greater than ", PurchaseTotal); // displaying alert message
        Input PaymentAmount; // prompting customer to enter payment
    EndWhile

    Balance = PaymentAmount - PurchaseTotal; // calculating remaining balance
    Alert("Thank you for your purchase, ", Customer, "! Your remaining balance is ", Balance); // displaying thank you message with customer's name and remaining balance
EndProcedure

Var
    Customer: String = "John Smith"; // variable to store customer name
    Item: String; // variable to store item name
    Quantity: Integer; // variable to store quantity of item
    Price: Float; // variable to store item price
    Discount: Float; // variable to store discount percentage
    Total: Float; // variable to store total cost

Input Item, Quantity, Price, Discount; // prompting user to input item details and discount
Total = PurchaseOrder(Item, Quantity, Price, Discount); // calling PurchaseOrder procedure to calculate total cost
CheckOut(Customer, Total); // calling CheckOut procedure to finalize purchase
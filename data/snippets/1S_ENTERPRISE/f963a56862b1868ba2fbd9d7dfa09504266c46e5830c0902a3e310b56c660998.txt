#File search
#`Файл`, [Ф] `Файл`

Файл = Новый Файл("C:\Users\Documents\example.txt"); # creating a new file object

Если Файл.Существует() Тогда # checking if the file exists
    Сообщить("Файл найден!"); # displaying a message if the file exists
Иначе
    Сообщить("Файл не найден!");
КонецЕсли

Файл.Открыть(РежимДоступаФайлаСтандартный.Чтение); # opening the file for reading

Пока Файл.ПрочитатьСтроку() Цикл # reading the file line by line
    ТекущаяСтрока = Файл.ТекущаяСтрока; # saving the current line as a variable
    Если ТекущаяСтрока.Найти("example") <> 0 Тогда # searching for the word 'example' in the line
        Сообщить("Слово example найдено в строке " + Файл.ТекущаяСтрока); 
        # and displaying a message with the line number and content if found
    КонецЕсли
КонецЦикла

Файл.Закрыть(); # closing the file

#`Файл` - тип файловой системы (план детализации)
#[Ф] - предполагаемая приставка для процедуры или функции
#`Файл` - переменная, содержащая объект типа "Файл"
#Новый Файл() - создание нового объекта типа "Файл" с указанием пути к файлу
#Если - оператор условия
#Тогда - ключевое слово для блока кода, который будет выполнен, если условие истино
#Иначе - ключевое слово для блока кода, который будет выполнен, если условие ложно
#Сообщить() - процедура для вывода сообщения на экран
#Пока - оператор цикла, пока условие истино, выполняется блок кода
#ИначеЕсли - ключевое слово для проверки другого условия, если предыдущее условие ложно
#Чтение - режим доступа к файлу для чтения
#ТекущаяСтрока - переменная, содержащая текущую прочитанную строку файла
#Найти() - метод для поиска подстроки в строке, возвращает позицию первого вхождения или 0, если не найдено
#Закрыть() - метод для закрытия файла
#РежимДоступаФайлаСтандартный - тип для определения режима доступа к файлу
#Чтение - режим доступа к файлу для чтения
#КонецЕсли - ключевое слово для завершения блока кода
#КонецЦикла - ключевое слово для завершения блока цикла
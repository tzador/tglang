// This code snippet creates a class in 1C Enterprise with properties, methods, and events.

// Define the class
Class MyExample

	// Properties
	Property Age As Integer;
	Property Name As String;

	// Methods
	Method GetName() As String
		// Return the name property
		Return this.Name;
		
	Method GetAge() As Integer
		// Return the age property
		Return this.Age;
		
	// Events
	Event OnNameChange(newName As String)
		// Update the name property
		this.Name = newName;
		
	Event OnAgeChange(newAge As Integer)
		// Update the age property
		this.Age = newAge;
EndClass

// Create an instance of the class
MyExample ex = New MyExample();

// Set initial property values
ex.Name = "John";
ex.Age = 25;

// Call the methods
ex.GetName(); // Output: John
ex.GetAge(); // Output: 25

// Subscribe to events
EventSource.Subscribe(ex.OnNameChange, OutputName); // OutputName is a callback function
EventSource.Subscribe(ex.OnAgeChange, OutputAge); // OutputAge is a callback function

// Change property values, triggering the events
ex.Name = "Jane"; // OutputName will be called with the new name parameter "Jane"
ex.Age = 30; // OutputAge will be called with the new age parameter 30

// Callback function for the OnNameChange event
Function OutputName(newName As String)
	// Output the new name parameter
	Message("Name has been changed to " + newName); // Output: Name has been changed to Jane
EndFunction

// Callback function for the OnAgeChange event
Function OutputAge(newAge As Integer)
	// Output the new age parameter
	Message("Age has been changed to " + newAge); // Output: Age has been changed to 30
EndFunction
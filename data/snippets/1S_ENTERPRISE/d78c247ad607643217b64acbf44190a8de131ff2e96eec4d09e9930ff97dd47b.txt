//This code snippet creates a complex data processing function in 1C Enterprise programming language

//Defining function with parameters
Function ProcessData(processingType, processingParams)
	
	//Declaring variables for storing data
	Var processedData, tempData, finalData;
	
	//Checking if processingType is valid
	If processingType = "type1" Then
		
		//Processing data according to type1
		tempData = type1_processing(processingParams);
	
	ElseIf processingType = "type2" Then
		
		//Processing data according to type2
		tempData = type2_processing(processingParams);
	
	Else
		
		//Invalid processingType, return error
		processedData.error = "Invalid processing type specified!";
		
		//Terminating function and returning error
		Return processedData.error;
	
	EndIf;
	
	//Looping through processed data
	For Each data In tempData Do
		
		//Adding data to finalData with custom logic
		finalData = finalData + custom_processing(data);
		
	EndDo;
	
	//Returning finalData
	Return finalData;

EndFunction

//Defining function for type1 data processing
Function type1_processing(params)
	
	//Declaring variables for storing data
	Var processedData, tempData;
	
	//Performing calculations on params
	tempData = params * 2;
	
	//Adding processed data to processedData variable
	processedData = "Type1 Processed Data: ";
	
	//Returning processedData and tempData
	Return processedData + tempData;

EndFunction

//Defining function for type2 data processing
Function type2_processing(params)
	
	//Declaring variables for storing data
	Var processedData, tempData;
	
	//Performing calculations on params
	tempData = params / 2;
	
	//Adding processed data to processedData variable
	processedData = "Type2 Processed Data: ";
	
	//Returning processedData and tempData
	Return processedData + tempData;

EndFunction

//Calling the function with appropriate parameters
ProcessData("type1", 10);
// This code snippet is written in 1C_ENTERPRISE, a high-level programming language designed for enterprise resource planning systems.

// We start by declaring a procedure with the name "generateReport".
// This procedure will take in two parameters - "startDate" and "endDate" - to specify the date range for the report.
Procedure generateReport(startDate, endDate)

    // First, we declare a variable "report" to store the report content.
    // Since this is a long and complex report, we will use a text type variable.
    report = New Text;

    // Next, we use the "Query" object to retrieve data from the database based on the given date range.
    // We specify the table "Sales" as the data source and select all columns.
    // We also add two conditions to the query, filtering the data based on the "startDate" and "endDate" parameters.
    query = New Query("SELECT * FROM Sales WHERE date >= &startDate AND date <= &endDate");
    query.SetParameter("startDate", startDate);
    query.SetParameter("endDate", endDate);

    // We then use the "Query.Run()" method to execute the query and retrieve the result.
    result = query.Run();

    // Now, we loop through the result set to retrieve each row of data.
    // The rows are stored in the "recordSet" variable.
    recordSet = New RecordSet(result);
    While recordSet.Next()
        // We retrieve the necessary data from the "Sales" table using the "Get()" method.
        // In this case, we are retrieving the "product name" and "total sales" columns.
        productName = recordSet.Get("productName");
        totalSales = recordSet.Get("totalSales");

        // We then append the retrieved data to our "report" variable.
        // This will create a long string containing all the data we need for our report.
        report = report + "Product: " + productName + " | Total Sales: " + totalSales + Chr(13); // Chr(13) is used to add a new line

    EndDo;

    // Finally, we print the generated report to the console using the "Message" statement.
    Message(report);

EndProcedure

// To run this procedure, we simply call it and provide the necessary start and end date parameters.
generateReport("2020-01-01", "2020-12-31");
:eventListener
// This event listener will trigger when a button is clicked in the user interface
&EventListener(ButtonClick, onButtonClick)
// This is the handler function for the ButtonClick event
|procedure onButtonClick()
&E.CM.MessageBox()
// This command will display a message box on the user's screen
|messageType = 0
|messageText = "Hello World"
// The two lines above set the message type and text for the message box
|result = E.CM.MessageBox.Show(messageType, messageText)
// This line executes the command to show the message box with the given parameters
|endProcedure
// End of the handler function
:endEventListener
// End of the event listener block
:form
// This is the form that will be displayed in the user interface
&Form
|title = "My First Form"
|element = &Button
// This creates a button element in the form
|name = "btnClick"
// This sets the name of the button element
|caption = "Click Me!"
// This sets the caption of the button element
|onclick = onButtonClick
// This sets the onclick event handler for the button element to the previously defined function
|endForm
// End of the form block
:execute
// This is the main execution block of the program
&E.FORMS.MyFirstForm.Open()
// This command opens the form we defined earlier in the program
:variable
// This block defines a variable that will be used in the program
&Variable
|name = "numClicks"
// This sets the name of the variable
|type = "Number"
// This sets the type of the variable to be a number
|value = 0
// This sets the initial value of the variable to be 0
|endVariable
// End of the variable block
:procedure
// This is the main procedure of the program
|procedure main()
|while numClicks < 10 do
// This loops the code inside the curly brackets until numClicks reaches 10
&OUTPUT.WriteLine("Number of clicks: " + numClicks.ToString())
// This command prints the current value of numClicks to the OUTPUT window in the development environment
|numClicks = numClicks + 1
// This line increments the value of numClicks by 1 after each loop
|endWhile
// End of the while loop
:if
// This is an if statement that checks the value of numClicks
|if numClicks = 10 then
&E.CM.MessageBox.Show(0, "Congratulations! You have clicked the button 10 times.")
// If numClicks is equal to 10, this command will show a message box with a congratulatory message
|else
&E.CM.MessageBox.Show(1, "Keep clicking!")
// If numClicks is not equal to 10, this command will show a message box with a reminder to keep clicking
|endIf
// End of the if statement
|endProcedure
// End of the main procedure
:variable
&Variable
|name = "username"
|type = "String"
|value = ""
// This variable will hold the user's input for their username
|endVariable
|procedure getUserName()
|username = &FORMS.InputDialog("Please enter your username:")
|endProcedure
// This procedure uses a built-in form element to prompt the user to input their username and stores it in the 'username' variable
:variable
&Variable
|name = "password"
|type = "String"
|value = ""
// This variable will hold the user's input for their password
|endVariable
|procedure getPassword()
|password = &FORMS.InputDialog("Please enter your password:")
|endProcedure
// This procedure uses a built-in form element to prompt the user to input their password and stores it in the 'password' variable
:procedure
|procedure login()
|getUserName()
|getPassword()
|if username = "admin" and password = "password" then
&E.CM.MessageBox.Show(0, "Login successful!")
|else
&E.CM.MessageBox.Show(1, "Invalid login. Please try again.")
|endIf
// This procedure checks if the username and password inputs match the predefined admins credentials and displays a success or error message based on the result
|endProcedure
// End of the login procedure
// End of the code snippet
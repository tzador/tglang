// Defining a class "Employee" with properties
Class Employee
    Property firstName As String; // Represents the employee's first name
    Property lastName As String; // Represents the employee's last name
    Property age As Integer; // Represents the employee's age
    Property salary As Decimal; // Represents the employee's salary in decimal format
    Property department As String; // Represents the employee's department
    Property position As String; // Represents the employee's position

    // Defining constructor method with parameters
    Procedure Constructor(firstName, lastName, age, salary, department, position)
        // Assigning passed parameters to class properties
        Me.firstName = firstName;
        Me.lastName = lastName;
        Me.age = age;
        Me.salary = salary;
        Me.department = department;
        Me.position = position;
    EndProcedure

    // Defining method to get employee's full name
    Function GetFullName()
        // Combining first name and last name with a space in between
        Return StrCat(Me.firstName, " ", Me.lastName);
    EndFunction

    // Defining method to print employee's information
    Procedure PrintInfo()
        // Printing a formatted output with employee's full name, age, salary, department, and position
        Message(StrFormat("Employee: %1 \n Age: %2 \n Salary: %3 \n Department: %4 \n Position: %5", Me.GetFullName(), Me.age, Me.salary, Me.department, Me.position));
    EndProcedure
EndClass

// Creating an instance of the class "Employee" and passing values to the constructor
Employee1 = New Employee("John", "Doe", 30, 50000, "Sales", "Manager");

// Calling the PrintInfo() method to print the employee's information
Employee1.PrintInfo();
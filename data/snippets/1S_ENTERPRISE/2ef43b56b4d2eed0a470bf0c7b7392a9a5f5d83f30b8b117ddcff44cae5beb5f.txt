// This code snippet is written in 1C:Enterprise language.

#Language 'en'; // Setting the language to English.

// Declaring variables and assigning values
Variable
    NumberVariable = 10; // Declaring a number variable and assigning the value of 10.
    StringVariable = "Hello World"; // Declaring a string variable and assigning the value of "Hello World".
    BooleanVariable = True; // Declaring a boolean variable and assigning the value of True.
EndVariable

// Creating an object with attributes and methods
Object Person
    Attribute
        Name; // The name of the person.
        Age; // The age of the person.
        Gender; // The gender of the person.
    EndAttribute

    Method GetInfo()
    // This method returns the information of the person as a string.
        ReturnValue = "Name: " + Name + ", Age: " + Age + ", Gender: " + Gender; // Combining the attributes into a string and assigning it to ReturnValue variable.
    EndMethod
EndObject

// Creating an array of objects
Array People = New Array(); // Creating an empty array.

// Adding objects to the array
People.Add(New Person(Name = "John", Age = 30, Gender = "Male")); // Creating a new person object and adding it to the array.
People.Add(New Person(Name = "Jane", Age = 25, Gender = "Female")); // Creating a new person object and adding it to the array.

// Looping through the array and printing the information of each person
For Each Person In People Do
    Message(Person.GetInfo()); // Calling the GetInfo method of each object and displaying the information using the Message function.
EndDo

// Checking conditions and executing code based on the result
If (NumberVariable > 0) Then
    Message("Positive number"); // Displaying a message if the number variable is greater than 0.
ElseIf (NumberVariable < 0) Then
    Message("Negative number"); // Displaying a message if the number variable is less than 0.
Else
    Message("Zero"); // Displaying a message if the number variable is equal to 0.
EndIf

// Using a switch statement to execute code based on different cases
Switch StringVariable
    Case "Hello World" // Checking if the string variable is equal to "Hello World".
        Message("The string is equal to Hello World"); // Displaying a message if the condition is met.
    Case "Goodbye World" // Checking if the string variable is equal to "Goodbye World".
        Message("The string is equal to Goodbye World"); // Displaying a message if the condition is met.
    Default // Executed if none of the above cases are met.
        Message("The string is not equal to Hello World or Goodbye World"); // Displaying a message.
EndSwitch

/*
    This is a multi-line comment.
    The following code will show how to use a try-catch statement to handle exceptions.
*/

// Declaring a variable with an incorrect data type to induce an exception
Variable IncorrectVariable = "Not a number"; // Assigning a string value to a variable that should contain a number.

Try
    NumberVariable = Number(IncorrectVariable); // Trying to convert the incorrect variable to a number.
Catch
    Message("An error occurred while converting the variable to a number"); // Displaying a message if an error occurs.
EndTry

/*
    This is the end of the code snippet.
    Thank you for reading!
*/
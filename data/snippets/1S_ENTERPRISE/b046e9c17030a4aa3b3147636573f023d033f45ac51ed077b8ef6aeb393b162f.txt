//This code snippet creates a class named "Person" with basic attributes and methods

Class Person
    //Attributes
    Property FirstName As String; //stores the person's first name
    Property LastName As String; //stores the person's last name
    ReadOnly Property FullName As String; //returns the person's full name
    Hidden Property Age As Integer; //stores the person's age, can only be accessed within the class
    Property Gender As Enumerations.GenderEnum; //stores the person's gender, using an enumeration for options

    //Methods
    Method SetName(first As String, last As String) //set the first and last name of the person
        FirstName = first;
        LastName = last;
    EndMethod

    Method CalculateAge(birthdate As Date) As Integer //calculates and returns the person's age based on their birthdate
        Age = Now.Year - birthdate.Year;

        If birthdate > Now.Date Then
            Age = Age - 1;
        EndIf

        Return Age;
    EndMethod

    Method ChangeGender(newGender As Enumerations.GenderEnum) //updates the person's gender
        Gender = newGender;
    EndMethod

    Method ToString() As String //returns the person's full name and gender in a formatted string
        Return FullName + " is a " + Gender.ToString();
    EndMethod
EndClass
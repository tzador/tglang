// This code snippet is a function that calculates the total number of invoice
// items and returns it

// Function: getTotalInvoiceItems
// Input: invoice - 1C_ENTERPRISE object containing invoice data
// Output: total - integer representing the total number of invoice items
Function getTotalInvoiceItems(invoice)
  // Variable to store total number of items
  total = 0;

  // Loop through each invoice item
  For Each item in invoice.items
    // Increase total by the quantity of the item
    total = total + item.quantity;

    // Check if item has subitems
    If item.subitems.Count > 0 Then
      // Loop through each subitem
      For Each subitem in item.subitems
        // Increase total by the quantity of the subitem
        total = total + subitem.quantity;
      EndFor
    EndIf
  EndFor

  // Return total number of items
  Return total;
EndFunction

// Sample usage
invoice = New Object; // create a new invoice object
invoice.items = New List; // create a new list to store invoice items

// Add some items to the invoice
item1 = New Object; // create a new item object
item1.quantity = 5; // set quantity to 5
invoice.items.Add(item1); // add item1 to the list

item2 = New Object;
item2.quantity = 10;
item2.subitems = New List; // create a new list to store subitems
... // add subitems to item2
invoice.items.Add(item2);

// Calculate total number of invoice items using the function
total = getTotalInvoiceItems(invoice);

// Print the result
Console.WriteLine("Total invoice items: " + total);

// Output:
// Total invoice items: 26
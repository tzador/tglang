#Register Enum "Colors"
//A custom enumeration to represent different colors
Enum Colors
    Red = 0; //assigning a numeric value to the enum value
    Blue = 1;
    Green = 2;
    Yellow = 3;
    Magenta = 4;
    Cyan = 5;
    Black = 6;
    White = 7;
EndEnum

#Register Structure "Product"
//A custom structure to represent a product
Structure Product
    Name //a string field to store the name of the product
        (required = true) //annotation to indicate that this field is required
        (maxLength = 50); //annotation to set the maximum length of the field to 50 characters
    Description //a string field to store the description of the product
        (maxLength = 200);
    Price //a numeric field to store the price of the product
        (required = true)
        (fractionPart = 2) //annotation to specify the number of decimal places allowed for this field
        (maximum = 100000) //annotation to set the maximum value for the field
        (minimum = 0) //annotation to set the minimum value for the field
        (roundingMode = AlwaysUp) //annotation to specify the rounding mode for the field
    Color //a field to store the color of the product
        (type = Colors) //annotation to specify the type of the field as the "Colors" enum
        (allowChoose = true) //annotation to allow the user to select a color for the product
        (availableValues = "Green", "Blue", "Red") //annotation to specify the available values for the field
EndStructure

#Register DocumentType "Order"
//A custom document type to represent an order
DocumentType Order
    DocumentNumber //an automatic field to store the document number
        (autoNumber = true) //annotation to specify that the field should automatically generate a value
    OrderDate //a date field to store the date of the order
        (required = true)
    CustomerName
        (required = true)
        (maxLength = 50);
    ProductsList //a list field to store the products included in the order
        (required = true)
        (type = Product) //annotation to specify the type of the field as the "Product" structure
EndDocumentType

#Code Example
// A sample code snippet to create a new invoice document for an order

Procedure Main()

    //creating a new document of type "Order"
    Document = New Document;
    Document.Kind = "Order"; //setting the document type as "Order"

    //setting the document fields
    Document.OrderDate = CurrentDate();
    Document.CustomerName = "John Smith";

    //creating a new product and adding it to the products list
    NewProduct = New Product;
    NewProduct.Name = "Phone";
    NewProduct.Description = "A smartphone with high-performance features";
    NewProduct.Price = 700.99;
    NewProduct.Color = Colors.Black;
    Document.ProductsList.Add(NewProduct);

    //creating another product and adding it to the products list
    NewProduct = New Product;
    NewProduct.Name = "Laptop";
    NewProduct.Description = "A powerful laptop with long battery life";
    NewProduct.Price = 1500.00;
    NewProduct.Color = Colors.White;
    Document.ProductsList.Add(NewProduct);

    //saving the document
    Document.Write();

EndProcedure
//This code snippet defines a class named 'Employee'
//with properties and behaviors related to employees in a company

Class Employee
	//properties
	Property Name As String; //stores the name of the employee
	Property Age As Integer; //stores the age of the employee
	Property Salary As Money; //stores the salary of the employee
	Property Department As String; //stores the department of the employee
	
	//constructor method
	Procedure Constructor()
		Name = "";
		Age = 0;
		Salary = 0;
		Department = "";
	EndProcedure
	
	//methods
	//calculate yearly salary for an employee with 12 months
	Procedure GetYearlySalary() Returns Money
		Return 12 * Salary;
	EndProcedure
	
	//update the department of an employee
	Procedure UpdateDepartment(NewDepartment As String)
		If StringCompare(Department, NewDepartment) Then
			Department = NewDepartment;
		EndIf
	EndProcedure
	
	//increase salary of an employee by a given percentage
	Procedure IncreaseSalary(Percent As Integer)
		Salary = Salary + (Salary * Percent / 100);
	EndProcedure
EndClass

//create an instance of the Employee class
Employee John;
//set the properties for John
John.Name = "John Smith";
John.Age = 32;
John.Salary = 5000;
John.Department = "Sales";

//print out John's yearly salary
Print("John's yearly salary: " + John.GetYearlySalary());

//change John's department
John.UpdateDepartment("Marketing");

//print out updated department
Print("John's updated department: " + John.Department);

//increase John's salary by 10%
John.IncreaseSalary(10);

//print out updated salary
Print("John's updated salary: " + John.Salary);
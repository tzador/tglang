// This code snippet is a recursive function that checks if a number is prime
// and returns all the prime numbers within a given range.

// Define the function with two parameters - start and end of range
Function PrimeNumbersInRange(start, end)
// Declare an empty array to store the prime numbers
Array primeNumbers = []

// Loop through the range, starting from the start number
For i = start To end Do
    // Initialize a variable to keep track of whether the current number is prime or not
    Boolean isPrime = True
    // Loop through the numbers from 2 to the square root of the current number
    For j = 2 To Sqrt(i) Do
        // check if the current number is divisible by any of the numbers in the loop
        // if it is, then it is not prime
        If i % j = 0 Then
            isPrime = False
            // stop the loop to save computation time
            Break
        EndIf
    EndDo
    // if the current number is prime, add it to the array
    If isPrime Then
        primeNumbers.Add(i)
    EndIf
EndDo

// Call the function with a start and end range and print the result
Print(PrimeNumbersInRange(1, 100))

// Output: Array with prime numbers from 1 to 100: [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]
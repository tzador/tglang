// This code snippet creates a custom report in 1C Enterprise using dynamic data
// and performs calculations to generate a detailed analysis of expenses and revenues

// First, we define a function to retrieve data from our database
Function GetData() Export
    Data = New Structure( "ARReceivablesReportStructure" );
    Data.Add( "Region", New StructureValuesType( Types.String ) );
    Data.Add( "AmountDue", New StructureValuesType( Types.Number ) );
    Data.Add( "AmountPaid", New StructureValuesType( Types.Number ) );
    Data.Add( "Balance", New StructureValuesType( Types.Number ) );

    Query = New Query;
    Query.Text = "SELECT Region, AmountDue, AmountPaid FROM Customers";

    // Execute the query
    Result = Query.Execute();

    // Loop through the results
    While Result.Next() Do
        Data.Region.Add( Result.Region );
        Data.AmountDue.Add( Result.AmountDue );
        Data.AmountPaid.Add( Result.AmountPaid );
        Data.Balance.Add( Result.AmountDue - Result.AmountPaid );
    EndDo;

    Return Data; // Return our data structure
EndFunction;

// Next, we define a function to generate the report
Function GenerateReport() Export
    Data = GetData(); // Retrieve data using our custom function
    
    // Loop through the data and calculate the total amount due and paid for each region
    TotalAmountDue = 0;
    TotalAmountPaid = 0;
    Regions = Data.Region.DistinctValues();
    For Each Region In Regions Do
        AmountDue = 0;
        AmountPaid = 0;
        For I = 0 To Data.Region.Count() Do
            If Region = Data.Region[I] Then
                AmountDue = AmountDue + Data.AmountDue[I];
                AmountPaid = AmountPaid + Data.AmountPaid[I];
            EndIf;
        EndDo;
        
        // Print the data values
        Print( "Region: " + Region );
        Print( "Total Amount Due: " + AmountDue );
        Print( "Total Amount Paid: " + AmountPaid );
        Print( "Balance: " + (AmountDue - AmountPaid) );
        Print( "" );
        
        // Calculate the overall total
        TotalAmountDue = TotalAmountDue + AmountDue;
        TotalAmountPaid = TotalAmountPaid + AmountPaid;
        
    EndDo;
    
    // Print the overall total
    Print( "Total Amount Due: " + TotalAmountDue );
    Print( "Total Amount Paid: " + TotalAmountPaid );
    Print( "Total Balance: " + (TotalAmountDue - TotalAmountPaid) );
EndFunction;

// Finally, we call our GenerateReport function to generate the report
GenerateReport(); // Output will be printed in the system console
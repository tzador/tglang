// This code snippet is a complex and long 1C Enterprise snippet which demonstrates how to create a payroll calculation function

#Если КлиентСодержитПоПоДоговоруПривязкаКДате { // Conditional statement to check if the client has a contract tied to a specific date
    #Если ЗначениеЗаполнено(Клиент.ДатаПоследнегоЗаказаНМА) { // Secondary conditional statement to check if the client has a date for their last order
        ПримерДата = Клиент.ДатаПоследнегоЗаказаНМА; // Assigns the client's last order date to a variable
    }
    #Иначе {
        ПримерДата = Клиент.ДатаНачалаДействияЗаказов; // Assigns the client's contract start date to a variable
    }
}
#Иначе { // If the client does not have a contract tied to a specific date
    ПримерДата = Клиент.ДатаОснования; // Assigns the client's foundation date to a variable
}

Примерставка = Клиент.ПроцентНадбавки / 100; // Assigns the client's percentage increase to a variable
ПредельнаяБазаПоДивиденду = 100000; // Sets the maximum base for dividend calculations

НДФЛ = 1 - 0.13; // Sets the tax rate for personal income tax

// Function for calculating payroll based on client information
Функция РассчитатьЗПНаОсновании(Клиент, Задолженность, СтавкаОтсутствияЗаМесяц)

    // Variables for storing calculations
    Период = Дата(День(ПримерДата), Месяц(ПримерДата), Год(ПримерДата)); // Retrieves the date from the "ПримерДата" variable to use for calculations
    ДатаРасчета = КонецНедели(КонецПоследнегоДня(Период, 1),2); // Calculates the end of the week based on the "Период" variable
    Налог = 0; // Placeholder variable for tax calculation
    БазаПоИспытательномуСроку = 1.5; // Multiplier for probational period
    Счетчик = 0; // Counter variable for while loop

    // Calculates the payroll
    НачалоМесяца = НачалоМесяца(ДатаРасчета); // Retrieves the date for the beginning of the month based on the "ДатаРасчета" variable
    КонецМесяца = КонецМесяца(ДатаРасчета); // Retrieves the date for the end of the month based on the "ДатаРасчета" variable
    Работники = РаботникиСаДаты(НачалоМесяца, КонецМесяца); // Retrieves a list of employees who worked in the given month

    Пока ВРаботниках Цикл { // While loop to calculate payroll for all employees
        ЕжемесячныйНалог = 0; // Placeholder variable for monthly tax calculation
        БазаПоДивиденду = Счетчик + БазаПоИспытательномуСроку; // Calculates the base for dividend calculations in the given month
        БазаПоДивиденду = Мин(ПредельнаяБазаПоДивиденду, БазаПоДивиденду); // Limits the base value to the maximum set value
        УдержаниеДивидендов = Клиент.Дивиденды - (БазаПоДивиденду * Счетчик); // Calculates the difference between the dividend value and the base multiplied by the counter value
        НалогНаОтчисления  = (Работники[ВРаботниках].Оклад * СтавкаОтсутствияЗаМесяц + ПервыеСвободныеКалендарныеПредставлениеКомпании) * (Клиент.СтавкаНаАкционерныйКапитал * УдержаниеДивидендов); // Calculates the tax for contributions based on the employee's salary and the client's dividend rate

        // Adds the calculated taxes to the total
        Налог = Налог + ВРаботникахНалогНаОтчисления + ЕжемесячныйНалог;
        Счетчик = Счетчик + 1; // Increases the counter variable by 1 to move on to the next month
    }

    // Calculates the final payroll based on the client's percentage increase and the calculated taxes
    Зарплата = (Клиент.СтавкаОплаты * Задолженность) * (1 + Примерставка) - Налог;

    Вернуть Зарплату; // Returns the final payroll value

КонецФункции // End of function for calculating payroll based on client information
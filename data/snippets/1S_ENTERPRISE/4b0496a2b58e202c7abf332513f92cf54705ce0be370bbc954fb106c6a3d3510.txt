procedure CreateRandomArray(var RandomArray, LengthOfArray)
// Procedure that generates a random array with a specified length
// Takes in two parameters - RandomArray as the output of the generated array
// and LengthOfArray as the desired length for the generated array
table RandomArray {
  ID,                   // Column for array index
  RandomValue,          // Column for generated random values
  RandomString,         // Column for generated random strings
  RandomBoolean         // Column for generated random booleans
}
var
  Index, TempIndex, i,   // Variables used in the generation loop
  TempRandomValue,       // Variable for temporary random values
  TempRandomString,      // Variable for temporary random strings
  TempRandomBoolean,     // Variable for temporary random booleans
  NumberOfStrings,       // Variable for the number of desired strings
  NumberOfIndexes,       // Variable for the number of desired indexes
  NumberOfBooleans;      // Variable for the number of desired booleans
begin
  // Get the number of desired strings, indexes and booleans based on the length of the array
  NumberOfStrings = LengthOfArray * 0.2;
  NumberOfIndexes = LengthOfArray * 0.5;
  NumberOfBooleans = LengthOfArray * 0.3;

  // Initialize RandomArray table
  RandomArray.Init(LengthOfArray);

  // Loop through the desired number of indexes
  for Index = 1 to NumberOfIndexes do
  begin
    // Generate a random value and assign it to the RandomValue column
    TempRandomValue = RandInt(1, 100);
    RandomArray[TempIndex].RandomValue = TempRandomValue;

    // Generate a random string and assign it to the RandomString column
    TempRandomString = RandString(10);
    RandomArray[TempIndex].RandomString = TempRandomString;

    // Generate a random boolean and assign it to the RandomBoolean column
    TempRandomBoolean = RandBoolean();
    RandomArray[TempIndex].RandomBoolean = TempRandomBoolean;

    // Increment the index for the next iteration
    Inc(TempIndex);
  end;

  // Loop through the desired number of strings
  for i = 1 to NumberOfStrings do
  begin
    // Generate a random string and assign it to the RandomString column
    TempRandomString = RandString(10);
    RandomArray[TempIndex].RandomString = TempRandomString;

    // Increment the index for the next iteration
    Inc(TempIndex);
  end;

  // Loop through the desired number of booleans
  for i = 1 to NumberOfBooleans do
  begin
    // Generate a random boolean and assign it to the RandomBoolean column
    TempRandomBoolean = RandBoolean();
    RandomArray[TempIndex].RandomBoolean = TempRandomBoolean;

    // Increment the index for the next iteration
    Inc(TempIndex);
  end;

  // Output the generated array
  RandomArray.Output();
end.
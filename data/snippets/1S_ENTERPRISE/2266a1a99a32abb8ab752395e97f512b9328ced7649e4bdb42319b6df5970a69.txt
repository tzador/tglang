Процедура СгенерироватьДвиженияИнвентаризации(ТаблицаИнвентаризации, ДокументИнвентаризации)
    // Создаем ссылки на необходимы объекты
    ТаблицаИнвентаризацииНаша = ТаблицаИнвентаризации.Выгрузить();
    ХозОперации = Новый СправочникСсылка.ХозяйственныеОперации;
    ДебитСчет = Новый ПланСчетовСсылка.Хозрасчетный;
    КредитСчет = Новый ПланСчетовСсылка.Хозрасчетный;
    ЕдиницаИзмерения = Новый СправочникСсылка.ЕдиницыИзмерения;
    Количество = 0;
    
    // Цикл по всем записям таблицы инвентаризации
    Для Каждого Строка Из ТаблицаИнвентаризацииНаша Цикл
        // Получаем необходимые данные из таблицы инвентаризации
        ХозОперация = Строка.ХозОперация;
        СчетДо = Строка.СчетДо;
        СчетПосле = Строка.СчетПосле;
        МестоПодсчетаКоличества = Строка.МестоПодсчетаКоличества;
        КоличествоДо = Строка.КоличествоДо;
        КоличествоПосле = Строка.КоличествоПосле;
        
        // Проверяем, есть ли уже такая хозяйственная операция в справочнике
        Если Не ХозОперации.НайтиПоНаименованию(ХозОперация) Тогда
            // Если нет, то создаем новую запись
            ХозОперацияНовая = Новый СправочникСсылка.ХозяйственныеОперации;
            ХозОперацияНовая.Наименование = ХозОперация;
            ХозОперацияНовая.Добавить();
        КонецЕсли;
        
        // Проверяем, есть ли уже такой счет в плане счетов
        Если Не ДебитСчет.НайтиПоКоду(СчетДо) Тогда
            // Если нет, то создаем новый счет
            ДебитСчетНовый = Новый ПланСчетовСсылка.Хозрасчетный;
            ДебитСчетНовый.Код = СчетДо;
            ДебитСчетНовый.Добавить();
        КонецЕсли;
        
        // Проверяем, есть ли уже такой счет в плане счетов
        Если Не КредитСчет.НайтиПоКоду(СчетПосле) Тогда
            // Если нет, то создаем новый счет
            КредитСчетНовый = Новый ПланСчетовСсылка.Хозрасчетный;
            КредитСчетНовый.Код = СчетПосле;
            КредитСчетНовый.Добавить();
        КонецЕсли;
        
        // Проверяем, есть ли уже такая единица измерения в справочнике
        Если Не ЕдиницаИзмерения.НайтиПоКоду(МестоПодсчетаКоличества) Тогда
            // Если нет, то создаем новую запись
            ЕдиницаИзмеренияНовая = Новый СправочникСсылка.ЕдиницыИзмерения;
            ЕдиницаИзмеренияНовая.Код = МестоПодсчетаКоличества;
            ЕдиницаИзмеренияНовая.Добавить();
        КонецЕсли;
        
        // Вычисляем разницу в количестве и записываем движение в регистр накопления
        Количество = КоличествоПосле - КоличествоДо;
        РегистрНакопленияДвиженияИнвентаризации.НоваяЗапись();
        РегистрНакопленияДвиженияИнвентаризации.ХозОперация = ХозОперацияНовая;
        РегистрНакопленияДвиженияИнвентаризации.СчетДебит = ДебитСчетНовый;
        РегистрНакопленияДвиженияИнвентаризации.СчетКредит = КредитСчетНовый;
        РегистрНакопленияДвиженияИнвентаризации.ЕдиницаИзмерения = ЕдиницаИзмеренияНовая;
        РегистрНакопленияДвиженияИнвентаризации.Количество = Количество;
        РегистрНакопленияДвиженияИнвентаризации.Записать();
    КонецЦикла;
    
    // Формируем движения документа инвентаризации
    ДокументИнвентаризации.СформироватьДвижения();
КонецПроцедуры
// This code snippet is written in the programming language 1C_ENTERPRISE

// Declaration of a variable with the name "str"
// The type of the variable is "String"
Dim str As String

// Assigning a value to the variable "str"
str = "Hello world!"

// Output the value of the variable "str" to the console
Debug.Print str

// Declaration of a procedure with the name "Multiply"
Function Multiply(a, b)
  // Declaration of local variable "result" with type "Integer"
  Dim result As Integer

  // Multiplying the two parameters and assigning the result to variable "result"
  result = a * b

  // Returning the result
  Return result
End Function

// Calling the "Multiply" procedure with the values 10 and 5 and assigning the result to variable "product"
Dim product As Integer
product = Multiply(10, 5)

// Output the value of the variable "product" to the console
Debug.Print product

// Declaration of an array variable with the name "numbers"
// The type of the elements in the array is "Integer"
Dim numbers As Integer[]

// Assigning values to the array elements
numbers[0] = 2
numbers[1] = 4
numbers[2] = 6
numbers[3] = 8
numbers[4] = 10

// Looping through the array using a for loop
For Each num In numbers
  // Output each array element to the console
  Debug.Print num
Next

// Declaration of a conditional statement
If product > 50 Then
  // If the product is greater than 50, output "Product is greater than 50" to the console
  Debug.Print "Product is greater than 50"
ElseIf product < 50 Then
  // If the product is less than 50, output "Product is less than 50" to the console
  Debug.Print "Product is less than 50"
Else
  // If the product is equal to 50, output "Product is equal to 50" to the console
  Debug.Print "Product is equal to 50"
End If

// Declaration of a class with the name "Employee"
Class Employee
  // Private properties of the class
  Private name As String
  Private department As String
  Private salary As Integer

  // Constructor for the class with parameters for the properties
  // Assigning the parameter values to the corresponding properties
  Public Sub New(name As String, department As String, salary As Integer)
    Me.name = name
    Me.department = department
    Me.salary = salary
  End Sub

  // Method to calculate the annual bonus based on the salary
  Public Function CalculateBonus()
    // Declaring a local variable for bonus
    Dim bonus As Integer

    // Calculating 5% of the salary and assigning it to the bonus variable
    bonus = salary * 0.05

    // Returning the bonus value
    Return bonus
  End Function
End Class

// Creating an object of class "Employee" with the name "john"
Dim john As New Employee("John", "Marketing", 50000)

// Calling the "CalculateBonus" method for the "john" object and assigning the result to the variable "bonus"
Dim bonus As Integer
bonus = john.CalculateBonus()

// Output the value of the variable "bonus" to the console
Debug.Print bonus

// Declaration of a while loop
While bonus < 5000
  // Incrementing the bonus by 500
  bonus = bonus + 500
End While

// Output the final value of the variable "bonus" to the console
Debug.Print bonus

// Declaration of a comment line
// This is a single line comment
Debug.Print "This line will not be printed as it is commented out"
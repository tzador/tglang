// This code snippet declares a class named 'Employee' which contains properties and methods related to employee information

// Declaring a class named 'Employee' with properties 'name', 'age', 'position'
Class Employee
	// Declaring property 'name' of type String 
	Property Name As String;
	// Declaring property 'age' of type Number 
	Property Age As Number;
	// Declaring property 'position' of type String 
	Property Position As String;
	// Declaring property 'salary' of type Currency 
	Property Salary As Currency;

	// Declaring method 'getInfo' to return employee's information
	Method GetInfo() As String
		// Concatenating employee's name, position, age and salary in a string
		Return "Name: " + Name + ". Position: " + Position + ". Age: " + String(Age) + ". Salary: " + String(Salary) + " USD.";
	EndMethod

	// Declaring method 'promote' to update employee's position and salary
	Method Promote(NewPosition As String, NewSalary As Currency)
		// Updating employee's position and salary
		Position = NewPosition;
		Salary = NewSalary;
		// Printing a confirmation message
		OutMessage("Congratulations! You have been promoted to " + NewPosition + ". Your new salary is " + String(NewSalary) + " USD.");
	EndMethod
EndClass

// Creating an instance of class 'Employee' with name, age, position and salary
Var employee = New Employee();
employee.Name = "John Smith";
employee.Age = 30;
employee.Position = "Manager";
employee.Salary = 5000;

// Printing employee's information using the 'getInfo' method
OutMessage(employee.GetInfo());

// Promoting the employee to a new position and updating their salary using the 'promote' method
employee.Promote("Senior Manager", 7000);

// Printing employee's updated information using the 'getInfo' method
OutMessage(employee.GetInfo());
// This code snippet generates a report of the top selling products for a given time period

// Define variables
Var DateFrom, DateTo, TopProductsLimit; // date range and limit for top products
Var i, j; // loop counters for iterating through data
Var ProductsArr, ProductsArrSorted; // arrays for storing products and sorted products
Var ProductName, ProductID, ProductPrice; // variables for storing product data
Var ProductTotalSales; // variable for calculating total sales for each product
Var Report; // string variable for storing the final report
Var MaxSales; // variable for storing maximum sales of a product

// Set values for variables
DateFrom = '01.01.2020';
DateTo = '31.12.2020';
TopProductsLimit = 10;

// Retrieve product data from database and store in ProductsArr
ProductsArr = Select * from Products where Date >= DateFrom and Date <= DateTo;

// Loop through ProductsArr to calculate total sales for each product
For i = 1 to ProductsArr.Count do
{
    // Get product data from ProductsArr
    ProductName = ProductsArr[i].Name;
    ProductID = ProductsArr[i].ID;
    ProductPrice = ProductsArr[i].Price;

    // Retrieve sales data for the product and calculate total sales
    ProductSalesArr = Select * from Sales where ProductID = ProductID and Date >= DateFrom and Date <= DateTo;
    ProductTotalSales = 0;
    For j = 1 to ProductSalesArr.Count do
    {
        ProductTotalSales = ProductTotalSales + ProductSalesArr[j].Quantity * ProductPrice;
    }

    // Add product data and total sales to ProductsArrSorted
    ProductsArrSorted[i].Name = ProductName;
    ProductsArrSorted[i].TotalSales = ProductTotalSales;
}

// Sort ProductsArrSorted in descending order based on total sales
ProductsArrSorted = Sort(ProductsArrSorted, False, TotalSales);

// Initialize Report string with table headers
Report = "Product Name | Total Sales \n";

// Loop through ProductsArrSorted to add top selling products to the report
MaxSales = 0;
For i = 1 to TopProductsLimit do
{
    // Get product data from ProductsArrSorted
    ProductName = ProductsArrSorted[i].Name;
    ProductTotalSales = ProductsArrSorted[i].TotalSales;

    // Add product data to report
    Report = Report + ProductName + " | " + ProductTotalSales + "\n";

    // Update MaxSales if current product's total sales is greater than previous maximum
    If ProductTotalSales > MaxSales then MaxSales = ProductTotalSales;
}

// Add a horizontal line to separate top selling products from the rest of the table
Report = Report + "------------------ \n";

// Loop through ProductsArrSorted again to add remaining products to the report
For i = TopProductsLimit + 1 to ProductsArrSorted.Count do
{
    // Get product data from ProductsArrSorted
    ProductName = ProductsArrSorted[i].Name;
    ProductTotalSales = ProductsArrSorted[i].TotalSales;

    // Add product data to report if its total sales is equal to the maximum sales
    If ProductTotalSales = MaxSales then Report = Report + ProductName + " | " + ProductTotalSales + "\n";
}

// Print final report
Print(Report);
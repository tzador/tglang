// This code snippet creates a custom object in 1C:Enterprise
//It defines a new class "Employee", with various properties and methods

// Define the "Employee" class
Class Employee
    // Define the properties of the class
    Property FirstName As String // Stores the first name of the employee
    Property LastName As String // Stores the last name of the employee
    Property Age As Integer // Stores the age of the employee
    Property Salary As Currency // Stores the salary of the employee
    Property Department As String // Stores the department the employee belongs to
    Property Position As String // Stores the position of the employee

    // Define the constructor method for the class
    Procedure New(FirstName, LastName, Age, Salary, Department, Position)
        // Assign the given values to the properties
        Me.FirstName = FirstName
        Me.LastName = LastName
        Me.Age = Age
        Me.Salary = Salary
        Me.Department = Department
        Me.Position = Position
    EndProcedure

    // Define a method to calculate the bonus based on the employee's salary
    Method CalculateBonus() As Currency
        // Check if the employee has been with the company for more than 3 years
        If Me.Age > 3 Then
            // Calculate the bonus based on the employee's salary
            Return Me.Salary * 0.05
        Else
            // Otherwise, return 0 as there is no bonus
            Return 0
        EndIf
    EndMethod

    // Define a method to print out the employee's information
    Method PrintInfo()
        // Output the employee's name, age, salary, department, and position
        Message("Employee: " + Me.FirstName + " " + Me.LastName)
        Message("Age: " + Me.Age)
        Message("Salary: " + Me.Salary)
        Message("Department: " + Me.Department)
        Message("Position: " + Me.Position)

        // Call the CalculateBonus method and output the bonus if applicable
        Message("Bonus: " + CalculateBonus())
    EndMethod
EndClass

// Create a new instance of the Employee class and assign values to its properties
Employee = New Employee("John", "Doe", 30, 5000, "Sales", "Manager")

// Call the PrintInfo method for the employee object and output the information
Employee.PrintInfo()

// Expected Output:
// Employee: John Doe
// Age: 30
// Salary: 5000
// Department: Sales
// Position: Manager
// Bonus: 250 (calculated based on 5% of 5000 salary)
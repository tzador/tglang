//Annotation: This code snippet calculates taxes and discounts for a given purchase

Procedure CalculatePurchaseTax(Item:CatalogRef, Price:Number, Quantity:Number) Export
	//Annotation: This procedure calculates the tax amount for a specific item
	Var
		TaxIncludedPrice:Number; //Annotation: The price of the item after tax is included
		TaxRate:Number; //Annotation: The tax rate for the specific item
		TaxAmount:Number; //Annotation: The calculated tax amount for the item
	DiscountRate:Number; //Annotation: The discount rate for the specific item
	DiscountAmount:Number; //Annotation: The calculated discount amount for the item
	Subtotal:Number; //Annotation: The subtotal for the item before tax and discount
EndProcedure

Procedure CalculateSubtotal(Item:CatalogRef, Price:Number, Quantity:Number) Export
	//Annotation: This procedure calculates the subtotal for a specific item
	Var
		TaxIncludedPrice:Number; //Annotation: The price of the item after tax is included
		DiscountAmount:Number; //Annotation: The calculated discount amount for the item
		Subtotal:Number; //Annotation: The subtotal for the item before tax and discount
EndProcedure

Function CalculateTaxRate(Item:CatalogRef) Export
	//Annotation: This function calculates the tax rate for a specific item based on its category
	Var
		TaxRate:Number; //Annotation: The tax rate for the specific item
		TaxCategory:Enum; //Annotation: The category of the item for tax calculations
EndFunction

Function CalculateDiscountRate(Item:CatalogRef) Export
	//Annotation: This function calculates the discount rate for a specific item based on its price
	Var
		DiscountRate:Number; //Annotation: The discount rate for the specific item
EndFunction

Procedure CalculatePurchaseTax(Item:CatalogRef, Price:Number, Quantity:Number) Export
	//Annotation: This procedure calculates the tax amount for a specific item
	Var
		TaxIncludedPrice:Number; //Annotation: The price of the item after tax is included
		TaxRate:Number; //Annotation: The tax rate for the specific item
		TaxAmount:Number; //Annotation: The calculated tax amount for the item
	DiscountRate:Number; //Annotation: The discount rate for the specific item
	DiscountAmount:Number; //Annotation: The calculated discount amount for the item
	Subtotal:Number; //Annotation: The subtotal for the item before tax and discount
Begin
	//Annotation: Call the CalculateTaxRate function to get the tax rate for the item
	TaxRate = CalculateTaxRate(Item); 
	//Annotation: Calculate the Tax Included Price by multiplying the price with the quantity and adding the tax amount
	TaxIncludedPrice = (Price * Quantity) + TaxAmount;
	//Annotation: Call the CalculateDiscountRate function to get the discount rate for the item
	DiscountRate = CalculateDiscountRate(Item);
	//Annotation: Calculate the Discount Amount by multiplying the Tax Included Price with the discount rate
	DiscountAmount = TaxIncludedPrice * DiscountRate;
	//Annotation: Calculate the subtotal by subtracting the Discount Amount from the Tax Included Price
	Subtotal = TaxIncludedPrice - DiscountAmount;
	//Annotation: Print the calculated Tax Amount and Discount Amount for the item
	Out("Item:", CatalogRef.Name, "tax amount calculated as", TaxAmount, "and discount amount calculated as", DiscountAmount);
EndProcedure

Procedure CalculateSubtotal(Item:CatalogRef, Price:Number, Quantity:Number) Export
	//Annotation: This procedure calculates the subtotal for a specific item
	Var
		TaxIncludedPrice:Number; //Annotation: The price of the item after tax is included
		DiscountAmount:Number; //Annotation: The calculated discount amount for the item
		Subtotal:Number; //Annotation: The subtotal for the item before tax and discount
Begin
	//Annotation: Calculate the Tax Included Price by multiplying the price with the quantity 
	TaxIncludedPrice = Price * Quantity;
	//Annotation: Call the CalculateDiscountRate function to get the discount rate for the item
	DiscountRate = CalculateDiscountRate(Item);
	//Annotation: Calculate the Discount Amount by multiplying the Tax Included Price with the discount rate
	DiscountAmount = TaxIncludedPrice * DiscountRate;
	//Annotation: Calculate the subtotal by subtracting the Discount Amount from the Tax Included Price
	Subtotal = TaxIncludedPrice - DiscountAmount;
	//Annotation: Print the calculated Subtotal for the item
	Out("Item:", CatalogRef.Name, "subtotal calculated as", Subtotal);
EndProcedure
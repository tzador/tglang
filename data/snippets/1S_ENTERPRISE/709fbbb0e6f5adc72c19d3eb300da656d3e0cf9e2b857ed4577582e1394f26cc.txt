// This is a function that calculates the factorial of a given number
// Input: n (integer)
// Output: factorial of n
Function Factorial(n)
   // Initialize local variable result to 1
   result = 1;
   
   // Loop through numbers 1 to n
   for i = 1 to n do
   
      // Update result by multiplying with i
      result = result * i;
   
   // Return the final result
   Return result;
EndFunction

// This is a class that represents a person
Class Person
   // Declare class properties
   Property Name; // holds the person's name
   Property Age; // holds the person's age
   Property Gender; // holds the person's gender
   
   // This is a constructor method that sets the initial values for the properties
   Constructor(NewName, NewAge, NewGender)
      Name = NewName;
      Age = NewAge;
      Gender = NewGender;
   EndConstructor
   
   // This is a method that returns the person's name and age as a string
   Method GetNameAndAge()
      Return "Name: " + Name + ", Age: " + Age;
   EndMethod
   
   // This is a method that updates the person's name
   Method SetName(NewName)
      Name = NewName;
   EndMethod
   
   // This is a method that updates the person's age
   Method SetAge(NewAge)
      Age = NewAge;
   EndMethod
EndClass

// This is a procedure that creates a new person object and calls its methods
Procedure CreatePerson()
   // Create a new instance of the Person class with parameters
   NewPerson = New Person("John", 25, "Male");
   
   // Call the GetNameAndAge method and save the result in a variable
   PersonInfo = NewPerson.GetNameAndAge();
   
   // Update the person's name using the SetName method
   NewPerson.SetName("Jane");
   
   // Update the person's age using the SetAge method
   NewPerson.SetAge(30);
   
   // Call the GetNameAndAge method again and save the result in a variable
   UpdatedInfo = NewPerson.GetNameAndAge();
EndProcedure
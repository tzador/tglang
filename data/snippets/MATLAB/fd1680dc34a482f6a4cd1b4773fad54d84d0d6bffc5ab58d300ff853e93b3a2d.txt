%% Initialize variables
x = linspace(0,10,100); % Create a vector with 100 equally spaced points between 0 and 10
y = sin(x); % Calculate the sine of the vector x
z = ones(1,100); % Create a vector of length 100 filled with ones
M = [x;y;z]; % Create a 3x100 matrix by concatenating the vectors x,y,z
a = M(1:2,:); % Assign the first two rows of matrix M to a new variable a

%% Define a function and calculate its integral
% Function f(x) = x^2 + sin(x)
f = @(x) x.^2 + sin(x); % Define f(x) using an anonymous function
int = integral(f,0,10); % Calculate the integral of f(x) from 0 to 10

%% Plot the function and its integral
figure;
plot(x,f(x)); % Plot the function f(x) over the range of x
hold on;
plot(x,int.*ones(1,length(x))); % Plot a horizontal line at the value of the integral
xlabel('x');
ylabel('f(x)');
legend('Function f(x)', 'Integral of f(x)');
title('Plot of Function and its Integral');

%% Perform matrix operations
B = M * a; % Matrix multiplication - creates a 3x3 matrix
C = B' + a; % Matrix transpose and addition - creates a 3x3 matrix
D = C(1:2,2:3); % Subset of matrix C - creates a 2x2 matrix
E = det(D); % Determinant of matrix D - returns a scalar value

%% Conditional statements
if E > 0
    disp('The determinant of matrix D is positive.');
elseif E < 0
    disp('The determinant of matrix D is negative.');
else
    disp('The determinant of matrix D is zero.');
end

%% Looping and vectorization
F = zeros(length(x),1); % Create a vector of length 100 filled with zeros
for i = 1:length(x)
    F(i) = f(x(i)); % Calculate the value of f(x) at each point in the vector x and store it in vector F
end

G = f(x); % Same result as the for loop but using vectorization - faster and more efficient 

%% Save variables to a file
save('variables.mat','B','C','D','E','F','G'); % Save the variables B, C, D, E, F, G to a .mat file called 'variables'
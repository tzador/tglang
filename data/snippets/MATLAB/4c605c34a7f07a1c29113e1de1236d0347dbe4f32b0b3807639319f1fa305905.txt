% Define a symbolic function in MATLAB
syms x y
f = sin(x) + cos(y);

% Create a meshgrid to plot the function in 3D
[X,Y] = meshgrid(-pi:0.1:pi,-pi:0.1:pi);

% Evaluate the function at each point in the meshgrid
Z = eval(subs(f,{x,y},{X,Y}));

% Create a figure and plot the function in 3D
figure;
surf(X,Y,Z);
title('3D plot of sin(x) + cos(y)');
xlabel('x');
ylabel('y');
zlabel('f(x,y)');

% Compute the gradient of the function
gradf = gradient(f,[x,y]);

% Convert the gradient to a function handle to be evaluated later
gradf_func = matlabFunction(gradf,'Vars',{x,y});

% Create a vector of random points within the domain [-pi,pi]x[-pi,pi]
x_vals = linspace(-pi,pi,100);
y_vals = linspace(-pi,pi,100);

% Preallocate matrix to store the gradient values at each point
gradient_values = zeros(length(x_vals),length(y_vals),2);

% Loop through each point and evaluate the gradient function
for i = 1:length(x_vals)
    for j = 1:length(y_vals)
        gradient_values(i,j,:) = gradf_func(x_vals(i),y_vals(j));
    end
end

% Plot the vector field on top of the 3D plot
hold on;
quiver3(X,Y,Z,gradient_values(:,:,1),gradient_values(:,:,2),zeros(size(gradient_values(:,:,1))));
hold off;

% Add a colorbar to show the magnitude of the gradient
colormap jet;
colorbar;

% Add a legend to the plot
legend('Function','Gradient');

% Display the final plot
disp('3D plot of sin(x) + cos(y) with gradient vector field:');
% This code computes the inverse of a square matrix using LU decomposition method
% Input: A (n x n) square matrix
% Output: inv_A, the inverse of A
function inv_A = LU_inv(A)
n = size(A,1); % get size of matrix A
[L,U,P] = lu(A); % perform LU decomposition with partial pivoting
y = zeros(n,1); % initialize y vector
inv_A = zeros(n); % initialize inverse matrix
for i = 1:n % loop through each column in inverse matrix
    y = P(:,i); % set y_i as the i-th column of P
    for j = 1:n % loop through each row in inverse matrix
        % perform forward substitution on y vector
        for k = 1:j-1
            y(j) = y(j) - L(j,k)*y(k);
        end
        % perform backward substitution on inv_A matrix
        for k = n:-1:j+1
            inv_A(j,k) = inv_A(j,k) - U(j,k)*inv_A(k,j);
        end
        inv_A(j,j) = (1/U(j,j))*(y(j)-L(j,j+1:n)*inv_A(j+1:n,j));
    end
end
%% Matrix Inversion Method for Solving Linear Systems

% This function takes in a coefficient matrix A and a vector b as inputs and 
% solves for the unknown vector x through the matrix inversion method.

% Inputs:
% A - coefficient matrix
% b - vector

% Output:
% x - solution vector

function x = matrix_inversion(A, b)
    % Check if A is a square matrix
    [m, n] = size(A);
    if m ~= n
        error('Matrix A must be square');
    end
    % Check if A is invertible
    if det(A) == 0
        error('Matrix A is not invertible');
    end
    % Calculate inverse of A
    A_inv = inv(A);
    % Calculate solution vector
    x = A_inv * b;
end

% Example:

% Define coefficient matrix A
A = [2 1 3; 5 2 1; 1 3 2];
% Define vector b
b = [1; 2; 3];
% Call matrix_inversion function
solution = matrix_inversion(A, b);
% Print solution
disp(solution);

% Output:
%     -0.5
%      1.5
%      0.5
%% Newton's Method for Nonlinear Equation
% Finds the root of a given nonlinear equation using Newton's method
% Input:
%   f: function handle for the nonlinear equation
%   df: function handle for the derivative of f
%   x0: initial guess for the root
%   tol: tolerance for the root approximation
%   max_iter: maximum number of iterations allowed
% Output:
%   x: approximated root of the equation
function x = newton_method(f, df, x0, tol, max_iter)
% Initialize variables
fx0 = f(x0); % Evaluating f at initial guess
iter = 0; % Iteration counter

% Loop until root is found or maximum iterations are reached
while abs(fx0) > tol && iter < max_iter
    dx0 = df(x0); % Evaluating df at initial guess
    if dx0 == 0
        error('Derivative value is zero. Cannot continue.')
    end
    x = x0 - fx0/dx0; % Update x using Newton's method
    fx0 = f(x); % Update the function value
    x0 = x; % Update the initial guess
    iter = iter + 1; % Increase iteration counter
end

% Check if maximum iterations were reached without finding a root
if iter == max_iter && abs(fx0) > tol
    error('Root not found within maximum iterations. Try different initial guess or increase tolerance.')
end
end
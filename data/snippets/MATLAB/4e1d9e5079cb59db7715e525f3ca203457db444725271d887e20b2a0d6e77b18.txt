%% Define parameters
N = 1000; % length of signal
fs = 1000; % sampling frequency
f0 = 50; % fundamental frequency
noise_amp = 0.1; % amplitude of noise
t = (0:N-1)/fs; % time vector

%% Generate signal
signal = sin(2*pi*f0*t) + randn(1, N)*noise_amp;

%% Apply notch filter
[b, a] = iirnotch(50/(fs/2), 0.7); % design filter coefficients
filtered_signal = filter(b, a, signal); % apply filter to signal

%% Plot original and filtered signals
figure;
subplot(2,1,1);
plot(t, signal);
xlabel('Time (sec)');
ylabel('Amplitude');
title('Original Signal');

subplot(2,1,2);
plot(t, filtered_signal);
xlabel('Time (sec)');
ylabel('Amplitude');
title('Filtered Signal');

%% Calculate power spectrum
signal_fft = fft(signal); % calculate FFT of original signal
filtered_fft = fft(filtered_signal); % calculate FFT of filtered signal
freq = (0:N-1)*(fs/N); % frequency vector

%% Plot power spectrum
figure;
subplot(2,1,1);
plot(freq, abs(signal_fft));
xlabel('Frequency (Hz)');
ylabel('Magnitude');
title('Original Signal Power Spectrum');

subplot(2,1,2);
plot(freq, abs(filtered_fft));
xlabel('Frequency (Hz)');
ylabel('Magnitude');
title('Filtered Signal Power Spectrum');
% This code snippet uses the Metropolis-Hastings algorithm to generate a Markov Chain Monte Carlo (MCMC) chain
% for a distribution with a given likelihood function and prior distribution

%% initialization
num_samples = 10000; % number of samples to generate
curr_sample = 0; % current sample index
proposed_sample = 0; % proposed sample
accepted_samples = []; % list to store accepted samples
curr_likelihood = 0; % current likelihood value
proposed_likelihood = 0; % proposed likelihood value
curr_prior = 0; % current prior value
proposed_prior = 0; % proposed prior value

% set starting sample and calculate its likelihood and prior
curr_sample = normrnd(0, 1); % starting sample with normal distribution and mean 0, standard deviation 1
curr_likelihood = log(normpdf(curr_sample, 0, 1)); % calculate current likelihood for the given sample
curr_prior = log(unifpdf(curr_sample, -5, 5)); % calculate current prior for the given sample

%% generate sample using Metropolis-Hastings algorithm
for i = 1:num_samples
    % propose a new sample using a normal distribution with mean as the current sample and standard deviation 0.1
    proposed_sample = normrnd(curr_sample, 0.1);
    
    % calculate the proposed likelihood and prior
    proposed_likelihood = log(normpdf(proposed_sample, 0, 1)); % calculate proposed likelihood for the proposed sample
    proposed_prior = log(unifpdf(proposed_sample, -5, 5)); % calculate proposed prior for the proposed sample
    
    % calculate the acceptance ratio
    acceptance_ratio = min(1, exp(proposed_likelihood + proposed_prior - curr_likelihood - curr_prior));
    
    % generate a random number between 0 and 1
    u = rand();
    
    % if the random number is less than the acceptance ratio, accept the proposed sample
    if u < acceptance_ratio
        curr_sample = proposed_sample; % accept the proposed sample
        curr_likelihood = proposed_likelihood; % update current likelihood with proposed likelihood
        curr_prior = proposed_prior; % update current prior with proposed prior
        accepted_samples = [accepted_samples; curr_sample]; % add accepted sample to the list of accepted samples
    end
    
    % otherwise, reject the proposed sample and keep the current sample as is
end

% plot the accepted samples to visualize the MCMC chain
histogram(accepted_samples); % plot a histogram of the accepted samples
xlabel('Samples'); % label the x-axis
ylabel('Frequency'); % label the y-axis
title('MCMC Chain'); % add a title to the plot
% This code snippet generates a random matrix and performs matrix multiplication
% in parallel using multiple threads

% Initialize variables
A = rand(1000, 1000);  % Generates a random 1000x1000 matrix
B = rand(1000, 1000);  % Generates a random 1000x1000 matrix
num_threads = 4;       % Number of threads to be used for parallel computation

% Set up parallel computation environment
p = gcp('nocreate');           % Check if there is already a parallel pool running
if isempty(p)                  % If no parallel pool is running, create one
    p = parpool(num_threads);  % Create a parallel pool with the specified number of threads
end

% Calculate and time sequential matrix multiplication
tic;                   % Start timer
C_seq = A * B;         % Perform matrix multiplication sequentially
time_seq = toc;        % Get time taken for sequential computation
disp(['Sequential computation took ' num2str(time_seq) ' seconds.']);

% Calculate and time parallel matrix multiplication
tic;                         % Start timer
C_par = A * B;               % Initialize parallel multiplication result
parfor i = 1:num_threads     % Loop over number of threads
    C_par = C_par + (A * B); % Accumulate results from parallel computation
end
time_par = toc;              % Get time taken for parallel computation
disp(['Parallel computation with ' num2str(num_threads) ' threads took ' num2str(time_par) ' seconds.']);

% Clean up parallel pool
delete(gcp);
% This is a code snippet in MATLAB.
% It is a long and complex code that performs image segmentation using k-means clustering.

% Load image and initialize number of clusters
original_image = imread('image.jpg');
num_clusters = 3;

% Convert image to grayscale and reshape into a 2D array
gray_image = rgb2gray(original_image);
image_array = reshape(gray_image, [], 1);

% Normalize the image array
image_array = double(image_array)/255; 

% Initialize centroids randomly from image pixels
centroids = rand(num_clusters, 1);

% Set termination criteria
max_iterations = 10;
epsilon = 0.01;

% Perform k-means clustering
for i = 1:max_iterations
    % Calculate distance between image pixels and centroids
    distances = pdist2(image_array, centroids);
    
    % Assign each pixel to the closest centroid
    [~, cluster_assignments] = min(distances, [], 2);
    
    % Update centroids based on mean of pixel values in each cluster
    for j = 1:num_clusters
        centroids(j, 1) = mean(image_array(cluster_assignments == j));
    end
    
    % Check for convergence
    if i > 1
        % Calculate change in centroids from previous iteration
        delta_centroids = abs(centroids - old_centroids);
        
        % Check if change is below epsilon
        if max(delta_centroids) <= epsilon
            break;
        end
    end
    
    % Store current centroids for next iteration
    old_centroids = centroids;
end

% Reshape cluster assignments back into original image size
segmented_image = reshape(cluster_assignments, size(gray_image));

% Display original and segmented image
subplot(1, 2, 1);
imshow(original_image);
title('Original Image');
subplot(1, 2, 2);
imshow(segmented_image);
title('Segmented Image');
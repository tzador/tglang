% This is a comment
% Import dataset
dataset = csvread('data.csv');

% Preprocess data
X = dataset(:, 1:end-1); % Features
y = dataset(:, end); % Labels

% Split data into training and testing sets (80% train, 20% test)
[trainX, trainY, testX, testY] = splitData(X, y, 0.8);

% Initialize model parameters
theta = zeros(size(trainX, 2) + 1, 1); % Parameters
alpha = 0.01; % Learning rate
iterations = 1000;

% Train model using gradient descent algorithm
[theta, cost_history] = gradientDescent(trainX, trainY, theta, alpha, iterations);

% Make predictions on test set
predictions = predict(testX, theta);

% Evaluate model performance
accuracy = sum(predictions == testY) / length(testY) * 100;

% Print results
fprintf('Model Accuracy: %f%%\n', accuracy);

% Plot cost function over iterations
plot(1:iterations, cost_history);
xlabel('Iterations');
ylabel('Cost');
title('Cost Function for Gradient Descent');
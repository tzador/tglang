%% Setup
clear all; close all; clc;    % Clear all variables, close all figures, and clear command window
fs = 100;                      % Set sampling frequency to 100 Hz
T = 5;                         % Set time duration to 5 seconds
t = 0:1/fs:T;                  % Create a time vector with steps of 1/fs, up to T
f1 = 5;                        % Set signal frequency to 5 Hz
f2 = 15;                       % Set signal frequency to 15 Hz
A1 = 1;                        % Set amplitude of first signal to 1
A2 = 0.5;                      % Set amplitude of second signal to 0.5

%% Generate signals
x1 = A1*cos(2*pi*f1*t);        % Generate first signal with amplitude, frequency, and time vector
x2 = A2*cos(2*pi*f2*t);        % Generate second signal with amplitude, frequency, and time vector

%% Add noise
noise = 0.2*randn(size(t));    % Generate white noise with same size as time vector
x = x1 + x2 + noise;           % Generate final signal with added noise

%% Plot signals
figure                      % Create new figure
hold on                     % Hold figure for multiple plots
plot(t, x1, 'LineWidth', 2) % Plot first signal with line width 2
plot(t, x2, 'LineWidth', 2) % Plot second signal with line width 2
plot(t, x, 'LineWidth', 1)  % Plot final signal with line width 1
legend('x1', 'x2', 'x')     % Add legend for each signal
xlabel('Time (s)')          % Label x-axis
ylabel('Amplitude')         % Label y-axis
title('Mixed signals')      % Add title to figure
grid on                     % Add grid lines to figure
hold off                    % Release figure

%% Calculate and plot power spectral density
N = length(x);              % Get length of signal
xdft = fft(x);              % Compute discrete Fourier transform
xdft = xdft(1:N/2+1);       % Get only the positive frequencies from the DFT
psdx = (1/(fs*N)) * abs(xdft).^2;   % Calculate power spectral density
freq = 0:fs/length(x):fs/2; % Create frequency vector for plotting
figure                      % Create new figure
plot(freq, psdx, 'LineWidth', 2) % Plot power spectral density
grid on                     % Add grid lines to figure
xlabel('Frequency (Hz)')    % Label x-axis
ylabel('Power')             % Label y-axis
title('Power spectral density') % Add title to figure
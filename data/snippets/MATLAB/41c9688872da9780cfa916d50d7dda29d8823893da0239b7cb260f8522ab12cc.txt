%% Solving a system of linear equations using Gauss-Jordan elimination method

% Define the coefficient matrix
A = [2, -1, 3; 
     1, 2, -5;
     4, -3, 1];

% Define the constant vector
B = [10; -3; 8];

% Perform forward elimination to create upper triangular matrix
for i = 1:size(A, 1) % Loop through rows
    for j = i+1:size(A, 2) % Loop through columns
        factor = A(j, i)/A(i, i); % Calculate reduction factor
        A(j, :) = A(j, :) - factor*A(i, :); % Apply reduction to row j
        B(j) = B(j) - factor*B(i); % Apply reduction to constant vector
    end
end

% Perform back substitution to obtain solution
x = zeros(size(B)); % Create vector to store solution
x(end) = B(end)/A(end, end); % Calculate solution for last variable
for i = size(A, 1)-1:-1:1 % Loop backwards through rows
    sum = B(i); % Initialize sum with constant value
    for j = i+1:size(A, 2) % Loop through remaining variables
        sum = sum - A(i, j)*x(j); % Subtract known values from sum
    end
    x(i) = sum/A(i, i); % Calculate solution for current variable
end

% Print solution
disp("The solution of the system is:");
disp(x);
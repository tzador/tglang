%% Least Squares Support Vector Machine
% This code implements a least squares support vector machine using MATLAB's built-in functions
% for solving quadratic programming problems.

% Define training data
X = [1 1; 1 2; -1 1; -2 -1];
y = [-1; -1; 1; 1];
m = size(X, 1);
% Add bias term to training data
X = [ones(m, 1) X];

% Set regularization parameter
lambda = 1;

% Set up quadratic programming problem
H = eye(size(X, 2));
H(1,1) = 0; % ignore regularization term on bias term
f = zeros(size(X, 2), 1);
A = -diag(y)*X;
b = -ones(m, 1);
lb = zeros(size(X, 2), 1);
ub = ones(size(X, 2), 1);

% Solve quadratic programming problem
alpha = quadprog(H, f, A, b, [], [], lb, ub);

% Calculate weights
w = (alpha.*y)'*X;

% Calculate bias term
b = y - w*X';

% Define test data
X_test = [3 4; -1 -3];
m_test = size(X_test, 1);
% Add bias term to test data
X_test = [ones(m_test, 1) X_test];

% Make predictions on test data
y_pred = sign(w*X_test');

% Calculate accuracy on test data
accuracy = sum(y_pred == y)/m_test;
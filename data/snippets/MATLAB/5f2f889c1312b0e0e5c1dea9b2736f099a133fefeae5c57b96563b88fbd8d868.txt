%% This is a program that calculates the inverse of a matrix using Gaussian elimination
function Ainv = gaussianInverse(A)
% Input:
%   A - n by n matrix
% Output:
%   Ainv - inverse of A

if size(A,1) ~= size(A,2) % check if A is a square matrix
    error("Matrix A must be square.");
end

n = size(A,1); % get number of rows/columns
A = [A, eye(n)]; % augment A with identity matrix

% perform forward elimination
for i = 1:n-1
    pivot = A(i,i); % select pivot element
    for j = i+1:n
        factor = A(j,i)/pivot; % compute factor for row operation
        A(j,:) = A(j,:) - factor*A(i,:); % perform row operation
    end
end

% perform back substitution
for i = n:-1:2
    pivot = A(i,i); % select pivot element
    for j = i-1:-1:1
        factor = A(j,i)/pivot; % compute factor for row operation
        A(j,:) = A(j,:) - factor*A(i,:); % perform row operation
    end
end

% normalize the matrix to become the inverse of A
for i = 1:n
    A(i,:) = A(i,:)/A(i,i);
end

Ainv = A(:,n+1:end); % extract the inverse matrix from the augmented matrix
end

% Example usage:
% A = [1 2 3; 0 1 4; 5 6 0];
% Ainv = gaussianInverse(A); % Ainv = [-24, 18, 5; 20, -15, -4; -5, 4, 1]
%% Initialize variables
clear; % clears all previous variables
N = 1000; % sets a variable N to be 1000
x = linspace(-1,1,N); % creates an array of 1000 equally spaced points between -1 and 1

%% Define matrices
A = zeros(N); % creates an N by N matrix filled with 0s
B = rand(N); % creates an N by N matrix filled with random numbers between 0 and 1
C = diag(1:N); % creates a diagonal matrix with values ranging from 1 to N on the diagonal
D = [ones(N/2), zeros(N/2); zeros(N/2), -ones(N/2)]; % creates a block diagonal matrix with ones in the top left and bottom right blocks and -1s in the bottom left and top right blocks

%% Perform matrix operations
E = A + B; % adds matrices A and B element-wise
F = A * B; % multiplies matrices A and B
G = A' * B; % multiplies the transpose of A and B
H = A' * B' + C * D; % performs a combination of matrix multiplication and addition

%% Plot results
figure; % creates a new figure window
subplot(2,2,1); % creates a subplot with 2 rows and 2 columns in the first position
plot(x,E); % plots the array x against the matrix E
title('Element-wise addition'); % adds a title to the plot
subplot(2,2,2); % creates a subplot in the second position
pcolor(A); % creates a pseudocolor plot of matrix A
title('Zero matrix'); % adds a title to the plot
subplot(2,2,3); % creates a subplot in the third position
imagesc(B); % creates an image of matrix B with a color scale
title('Random matrix'); % adds a title to the plot
subplot(2,2,4); % creates a subplot in the fourth position
spy(C); % creates a spy plot of matrix C showing the location of non-zero elements
title('Diagonal matrix'); % adds a title to the plot

%% Save figure
saveas(gcf,'matrix_plots.png'); % saves the current figure as a PNG file
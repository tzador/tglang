% This code snippet performs a matrix multiplications using a recursive algorithm

% Create two random matrices of size 5x5
A = rand(5);
B = rand(5);

% Define a recursive matrix multiplication function
function C = matmul(A, B)

    % Initialize the result matrix C
    C = zeros(size(A));

    % Base case: if A or B is a scalar, perform a scalar multiplication
    if ~isvector(A) && ~isvector(B)
        
        % Calculate the midpoint of the matrix
        mid = size(A, 1) / 2;
        
        % Recursively multiply the four submatrices of A and B
        C11 = matmul(A(1:mid, 1:mid), B(1:mid, 1:mid));
        C12 = matmul(A(1:mid, mid+1:end), B(mid+1:end, 1:mid));
        C21 = matmul(A(mid+1:end, 1:mid), B(1:mid, mid+1:end));
        C22 = matmul(A(mid+1:end, mid+1:end), B(mid+1:end, mid+1:end));
        
        % Combine the four submatrices to get the final result
        C = [C11 C12; C21 C22];
    else
        % Perform a scalar multiplication if A or B is a scalar
        C = A * B;
    end
end

% Call the matmul function on A and B to get the final result
C = matmul(A, B);

% Print the result
disp(C);
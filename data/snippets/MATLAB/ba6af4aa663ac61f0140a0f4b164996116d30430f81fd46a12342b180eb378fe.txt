% This code snippet is an implementation of the forward Euler method for solving 
% a system of differential equations with initial conditions.
% The equations being solved are:
% dy1/dt = -2*x*y1
% dy2/dt = x^2 - y2
% The inputs required are:
% x0: initial value of x
% y0: vector of initial values for y1 and y2
% h: step size
% n: number of steps to take
% The output is a vector of x and a matrix of y1 and y2 values.

% Initializing the inputs and creating necessary variables
x0 = 0;
y0 = [1, 2];
h = 0.1;
n = 10;
x = zeros(1,n+1);
y = zeros(2,n+1);
x(1) = x0;
y(:, 1) = y0;

% Implementing the forward Euler method
for i = 1:n
    x(i+1) = x(i) + h;  % Calculating the next x value
    y(:,i+1) = y(:,i) + h * [(-2*x(i)*y(1,i)); (x(i)^2 - y(2,i))];  % Calculating the next y values using the given equations
end

% Printing the output
fprintf("The vector of x values is: \n");
disp(x);
fprintf("The matrix of y values is: \n");
disp(y);
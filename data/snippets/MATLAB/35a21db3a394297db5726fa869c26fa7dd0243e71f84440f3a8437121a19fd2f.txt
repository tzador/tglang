%% Numerical Differentiation using Forward Differences
function [y_prime] = forwardDifference(x, y)
% This function calculates the numerical derivative of a given function using forward differences method.
%
% Input:
%   x: vector of input values
%   y: vector of output values
%
% Output:
%   y_prime: vector of first derivatives calculated using forward differences method

% Calculating the step size
h = x(2) - x(1);

% Initializing the output vector
y_prime = zeros(1, length(y));

% Looping through the vector of input values
for i = 1:length(y)
    % Checking if the current value is the last value in the vector
    if i == length(y)
        % Applying the formula for forward differences on the last value
        y_prime(i) = (y(i) - y(i-1)) / h;
    else
        % Applying the formula for forward differences on the current value
        y_prime(i) = (y(i+1) - y(i)) / h;
    end
end
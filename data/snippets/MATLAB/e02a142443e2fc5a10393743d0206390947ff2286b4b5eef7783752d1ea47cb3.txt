% This code is a complex expression for finding the roots of a polynomial function using the Newton-Raphson method
% Input the coefficients of the polynomial function
coefficients = input('Enter the coefficients of the polynomial function: ');

% Specify the initial guess for the roots
x_old = input('Enter the initial guess for the roots: ');

% Specify the maximum number of iterations
max_iterations = input('Enter the maximum number of iterations: ');

% Initialize the counter and create an empty array for storing the roots
i = 1;
roots = [];

% Loop through the maximum number of iterations
while i <= max_iterations
    % Calculate the value of the function at the current root
    fx = polyval(coefficients, x_old);
    
    % Calculate the derivative of the function at the current root
    dfx = polyval(polyder(coefficients), x_old);
    
    % Calculate the new root using the Newton-Raphson formula
    x_new = x_old - (fx/dfx);
    
    % Add the new root to the array
    roots = [roots, x_new];
    
    % Update the value of the old root
    x_old = x_new;
    
    % Increase the counter by 1
    i = i + 1;
end

% Display the roots and the number of iterations taken
fprintf('The roots of the polynomial function are: %s\n', mat2str(roots));
fprintf('Number of iterations taken: %d\n', i);
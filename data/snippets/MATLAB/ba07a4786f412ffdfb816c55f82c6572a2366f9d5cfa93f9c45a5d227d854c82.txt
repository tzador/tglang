%% This code snippet uses the nonlinear least squares function lsqnonlin to fit a sum of two
%% sinusoids to a noisy signal
clear; % clear workspace
close all; % close all figures
t = linspace(0, 20*pi, 1000); % create time vector
% define parameters for two sinusoidal signals
A1 = 1; % amplitude for first signal
A2 = 2; % amplitude for second signal
phi1 = pi; % phase shift for first signal
phi2 = pi/2; % phase shift for second signal
f1 = 1; % frequency for first signal
f2 = 2; % frequency for second signal
% create noise signal
noise = 0.5*randn(size(t));
% create sum of two sinusoids signal with added noise
y = A1*sin(2*pi*f1*t + phi1) + A2*sin(2*pi*f2*t + phi2) + noise;
% define function handle for fitting
fun = @(x) x(1)*sin(2*pi*x(3)*t + x(4)) + x(2)*sin(2*pi*x(5)*t + x(6)) - y;
% define initial guess for parameters
x0 = [1, 2, 1, pi, 2, pi/2];
% set options for lsqnonlin function
options = optimoptions('lsqnonlin', 'Display', 'iter');
% call lsqnonlin to fit the parameters to the data
x = lsqnonlin(fun, x0, [], [], options);
% plot original data and fitted signal
figure;
plot(t, y, 'b');
hold on;
plot(t, x(1)*sin(2*pi*x(3)*t + x(4)) + x(2)*sin(2*pi*x(5)*t + x(6)), 'r');
legend('Original Signal', 'Fitted Signal')
xlabel('Time (s)')
ylabel('Amplitude')
title('Nonlinear Least Squares Fit of Sum of Two Sinusoids to Noisy Data')
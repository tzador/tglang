% This is a MATLAB code snippet to implement the naive Bayes classifier.
% The code imports data from a CSV file and trains the classifier on it.
% The classifier is then used to predict the class labels for test data.

% Import csv data with classes in the last column
data = readtable('training_data.csv');

% Separate the class labels from the features
classes = data(:,end);
features = data(:,1:end-1);

% Split data into training and test sets (80-20 split)
[trainInd,testInd] = dividerand(length(data), 0.8, 0.2);
train_data = features(trainInd,:);
train_classes = classes(trainInd,:);
test_data = features(testInd,:);
test_classes = classes(testInd,:);

% Train the naive Bayes classifier
nb_classifier = fitcnb(train_data, train_classes);

% Use the classifier to predict class labels for test data
predicted_classes = predict(nb_classifier, test_data);

% Evaluate the performance of the classifier using confusion matrix
C = confusionmat(table2array(test_classes), predicted_classes);

% Print the results
fprintf('Accuracy: %.2f%%\n', (sum(diag(C))/sum(C(:)))*100);
fprintf('Precision: %.2f\n', C(2,2)/(C(2,2)+C(1,2))); % Precision for positive class (class 2)
fprintf('Recall: %.2f\n', C(2,2)/(C(2,2)+C(2,1))); % Recall for positive class
fprintf('F1-Score: %.2f\n', 2*C(2,2)/(2*C(2,2)+C(1,2)+C(2,1))); % F1-Score for positive class
% This code snippet solves a system of linear equations using the Gauss-Seidel method
% Input the coefficient matrix A and the vector b
A = [2 -1 1; -1 3 -1; 1 -1 2];
b = [7; 10; 5];

% Initialize the solution vector x with random values
x = randi([1,10],3,1);

% Set the maximum number of iterations and the tolerance
max_iter = 100;
tol = 1e-6;

% Initialize the iteration counter
iter = 0;

% Run the Gauss-Seidel method
while iter < max_iter
    % Initialize the temporary solution vector
    x_temp = zeros(size(x));

    % Perform one iteration of the method
    for i = 1:length(x)
        x_temp(i) = (b(i) - A(i,:)*x_temp)/A(i,i);
    end

    % Check for convergence
    if max(abs((x_temp - x)./x_temp)) < tol
        break;
    end

    % Update the solution vector
    x = x_temp;

    % Increment the iteration counter
    iter = iter + 1;
end

% Print the final solution and the number of iterations
fprintf('The solution vector is:');
disp(x);
fprintf('Number of iterations: %d', iter);
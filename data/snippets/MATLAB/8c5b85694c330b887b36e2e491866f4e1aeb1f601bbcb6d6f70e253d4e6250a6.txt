% This code snippet performs k-means clustering on a dataset

% Load data
load('data.mat')

% Define number of clusters
K = 5;

% Initialize cluster centers
rng(0); % set random seed
centers = datasample(data, K, 'Replace', false); % randomly sample data points as initial centers

% Initialize empty containers for cluster assignments and distances
assignments = zeros(1, size(data, 1)); 
distances = zeros(K, size(data, 1));

% Main loop for k-means algorithm
for iter = 1:100 % set maximum number of iterations
    % Assign each datapoint to the closest center
    for i = 1:size(data, 1) % loop through data points
        distances(:, i) = sum((centers - data(i, :)).^2, 2); % calculate distance between data point and each center
        [~, min_idx] = min(distances(:, i)); % find minimum distance and corresponding cluster index
        assignments(i) = min_idx; % assign data point to that cluster
    end
    
    % Update centers
    for j = 1:K % loop through clusters
        centers(j, :) = mean(data(assignments == j, :)); % calculate new center as mean of data points assigned to that cluster
    end
end

% Plot results
figure;
scatter(data(:, 1), data(:, 2), [], assignments); % plot data points with different colors for each cluster
hold on;
scatter(centers(:, 1), centers(:, 2), 100, 'k', 'filled'); % plot cluster centers as black circles
xlabel('Feature 1');
ylabel('Feature 2');
title('K-Means Clustering Results');
legend('Data Points', 'Cluster Centers');
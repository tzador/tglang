%% Multivariate Linear Regression - Gradient Descent
% This code snippet implements gradient descent algorithm to find the
% optimal values for the coefficients in a multivariate linear regression
% model.

% Input Data
X = [1 2 3; 1 3 4; 1 4 5; 1 5 6]; % design matrix
Y = [6; 9; 12; 15]; % target vector

% Initialize Parameters
alpha = 0.01; % learning rate
theta = zeros(size(X, 2), 1); % coefficients vector
num_iters = 1000; % number of iterations

% Gradient Descent Loop
for iter = 1:num_iters
    % Calculate hypothesis (predictor) and error
    h = X * theta;
    error = h - Y;
    
    % Update parameters
    theta = theta - (alpha * X' * error);
end

% Display final parameters
fprintf('Optimal coefficients:\n');
for i = 1:size(theta, 1)
    fprintf('theta%d = %.2f\n', i, theta(i));
end
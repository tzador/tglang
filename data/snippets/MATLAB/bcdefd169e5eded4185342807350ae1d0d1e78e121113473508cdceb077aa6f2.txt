% This code solves a system of linear equations
% using Gaussian elimination method

% Inputs:
% A - coefficient matrix
% b - RHS vector

% Output:
% x - solution vector

% STEP 1: Forward Elimination
n = size(A, 1); % get number of rows in A
for i = 1:n-1 % loop over rows
    [~, p] = max(abs(A(i:n, i))); % find pivot row
    p = p + i - 1; % update pivot row index
    % swap rows if necessary
    if p ~= i
        A([p i],:) = A([i p],:);
        b([p i]) = b([i p]);
    end
    % perform elimination
    for j = i+1:n % loop over rows below pivot
        c = A(j,i)/A(i,i); % calculate elimination coefficient
        A(j,i:n) = A(j,i:n) - c*A(i,i:n); % update row of A
        b(j) = b(j) - c*b(i); % update row of b
    end
end

% STEP 2: Back Substitution
x(n) = b(n)/A(n,n); % calculate last value of solution vector
for i = n-1:-1:1 % loop over rows in reverse
    x(i) = (b(i) - A(i,i+1:n)*x(i+1:n))/A(i,i); % calculate remaining values of solution vector
end

% Output solution vector
x
% Define function for solving nonlinear equations
function y = nonlinear_solve(f,x_init,x_accuracy)
    % Inputs:
    % f: function handle for nonlinear equation
    % x_init: initial guess for solution
    % x_accuracy: desired accuracy for solution
    % Outputs:
    % y: solution to the nonlinear equation
    x_approx = x_init;
    % Initialize x_approx (approximation of solution) with initial guess
    while abs(f(x_approx)) > x_accuracy
        % Loop until solution is within desired accuracy
        f_prime = @(x) (f(x + (0.001*x))) - (f(x))/(0.001*x);
        % Calculate numerical derivative of f at x_approx
        x_approx = x_approx - (f(x_approx)/f_prime(x_approx));
        % Update x_approx using Newton's method
    end
    y = x_approx;
    % Once solution is within desired accuracy, output y as solution
end
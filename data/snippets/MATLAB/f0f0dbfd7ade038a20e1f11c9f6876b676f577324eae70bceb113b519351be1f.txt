%%% Matrix Determinant Calculator %%%
% This code snippet takes a square matrix as input and calculates its determinant using the Gauss-Jordan elimination method.

function determinant = MatrixDet(A) % Declaring a function to calculate determinant with input matrix A.
[n,m] = size(A); % Retrieving the size of the input matrix.
if n~=m % Checking if the input matrix is square.
    disp('Error: Input matrix must be square.'); % Error message if input matrix is not square.
    return; % Exit the function.
end
% Initializing the augmented matrix and its diagonal matrix.
B = [A,eye(n)]; % Augmented matrix with the original matrix and an identity matrix of same size.
d = zeros(1,n); % Diagonal matrix to keep track of the ruling diagonal elements.

% Gaussian Elimination %
for i = 1:n-1 % Loop for each row starting from the first row.
    [~,p] = max(abs(B(i:n,i))); % Finding the row with the largest absolute element in the column under the diagonal element.
    p = p+i-1; % Transforming the row number to the actual row index.
    if B(p,i) == 0 % Checking if the pivot element is zero.
        disp('Error: Matrix is singular.'); % Error message if the matrix is singular.
        return; % Exit the function.
    end
    B([i,p],:) = B([p,i],:); % Interchanging the current row with the largest absolute element row.
    for j = i+1:n % Loop for manipulating the rows below the current row.
        B(j,:) = B(j,:) - (B(j,i)/B(i,i))*B(i,:); % Eliminating the elements below the pivot element.
    end
    d(i) = B(i,i); % Saving the pivot element to the diagonal matrix.
end

% Back Substitution %
if B(n,n) == 0 % Checking if the final pivot element is zero.
    disp('Error: Matrix is singular.'); % Error message if the matrix is singular.
    return; % Exit the function.
end
d(n) = B(n,n); % Saving the final pivot element to the diagonal matrix.
for i = n-1:-1:1 % Loop for each row starting from the last row.
    for j = i+1:n % Loop for manipulating the elements above the diagonal element.
        B(i,j) = B(i,j) - (B(i,n)*B(n,j)/B(n,n)); % Eliminating the elements above the pivot element.
    end
    d(i) = B(i,i); % Saving the pivot element to the diagonal matrix.
end

% Calculation of Determinant %
determinant = prod(d); % Multiply all the diagonal elements to get the determinant of the input matrix.
end % End of function.
%% Generate random data
x = rand(100,1); % Generates a 100 x 1 array of random numbers between 0 and 1
y = rand(100,1); % Generates a second array of random numbers between 0 and 1

%% Fit linear regression model
mdl = fitlm(x,y); % Fits a linear regression model to the data

%% Plot data and regression line
figure % Creates a new figure window
plot(x,y,'b.'); % Plots the data as blue dots
hold on; % Holds the plot for further additions
plot(mdl); % Plots the regression line using the fitted model
xlabel('X'); % Adds a label for the x-axis
ylabel('Y'); % Adds a label for the y-axis
legend('Data','Regression Line'); % Adds a legend to the plot
title('Random Data with Linear Regression Model'); % Adds a title to the plot

%% Generate random noise
e = normrnd(0,0.1,[100,1]); % Generates a 100 x 1 array of normally distributed random numbers with mean 0 and standard deviation of 0.1

%% Add noise to y values
y_noise = y + e; % Adds the noise to the original y values

%% Perform multiple linear regression
X = [ones(100,1), x]; % Creates a design matrix with a column of ones and the x values
coef = X\y_noise; % Fits a multiple linear regression model to the data using the backslash operator
y_pred = coef(1) + coef(2)*x; % Calculates the predicted y values using the fitted model coefficients

%% Plot data and regression line with noise
figure % Creates a new figure window
plot(x,y_noise,'b.'); % Plots the data with added noise as blue dots
hold on; % Holds the plot for further additions
plot(x,y_pred,'r-'); % Plots the regression line with added noise as a red line
xlabel('X'); % Adds a label for the x-axis
ylabel('Y'); % Adds a label for the y-axis
legend('Data with Noise','Multiple Regression Line'); % Adds a legend to the plot
title('Random Data with Added Noise and Multiple Linear Regression Model'); % Adds a title to the plot
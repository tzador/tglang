%% Clears workspace, closes all figures and clears command window
clc; 
clear;
close all;

%% Defines parameters
alpha = 0.8; % Sets value for alpha
beta = 1.2; % Sets value for beta
gamma = 0.5; % Sets value for gamma
iterations = 1000; % Sets number of iterations
error_threshold = 0.01; % Sets error threshold for convergence

%% Initializes variables and arrays
x = rand(1,5); % Randomly initializes x vector
f = zeros(iterations,1); % Initializes cost function array
da = zeros(iterations,1); % Initializes change in alpha array
db = zeros(iterations,1); % Initializes change in beta array
dc = zeros(iterations,1); % Initializes change in gamma array

%% Main loop for gradient descent algorithm
for i = 1:iterations
    % Calculates cost function f(x)
    f(i) = alpha*x(5)^2 + beta*x(4)^2 + gamma*x(3)^2;
    
    % Calculates gradient of cost function
    grad = [2*alpha*x(5); 2*beta*x(4); 2*gamma*x(3)];
    
    % Updates x vector using gradient descent algorithm
    x = x - grad;
    
    % Updates change in parameters
    da(i) = grad(1);
    db(i) = grad(2);
    dc(i) = grad(3);
    
    % Checks for convergence using error threshold
    if norm(grad) < error_threshold
        break;
    end
end

%% Plots cost function and parameter changes
% Creates subplot for cost function
subplot(2,1,1);
plot(1:i, f(1:i), 'r'); 
xlabel('Iterations');
ylabel('Cost Function');
title('Cost Function Convergence');
grid on;

% Creates subplot for parameter changes
subplot(2,1,2);
plot(1:i, da(1:i), 'b', 1:i, db(1:i), 'g', 1:i, dc(1:i), 'm');
xlabel('Iterations');
ylabel('Parameter Change');
title('Parameter Convergence');
legend('Change in alpha', 'Change in beta', 'Change in gamma');
grid on;
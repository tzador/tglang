function Ainv = inverse(A)
    % Function to calculate the inverse of a square matrix
    % Inputs: 
    % - A: square matrix
    % Output:
    % - Ainv: inverse of A

    % Get the size of the matrix
    [m, n] = size(A);

    % Check if the matrix is square
    if m ~= n
        error('Matrix A must be square');
    end

    % Initialize the inverse matrix as a zero matrix of the same size
    Ainv = zeros(m, n);

    % Create an identity matrix of the same size as A
    I = eye(m);

    % Use Gaussian Elimination to find the inverse
    for i = 1:m
        % Divide the current row by the pivot element
        A(i, :) = A(i, :) / A(i, i);
        I(i, :) = I(i, :) / A(i, i);

        % Perform row operations to get zeros in the rest of the column
        for j = 1:m
            % Skip the current row
            if i ~= j
                % Subtract the appropriate multiple of the current row
                % from the current row to get the desired zero
                A(j, :) = A(j, :) - A(i, :) * A(j, i);
                I(j, :) = I(j, :) - A(i, :) * I(j, i);
            end
        end
    end

    % The inverse of A is the right half of the augmented matrix
    Ainv = I;
end
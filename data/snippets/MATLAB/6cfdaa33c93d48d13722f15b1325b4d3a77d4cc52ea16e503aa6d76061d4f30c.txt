% This code snippet generates a Mandelbrot set fractal using MATLAB's built-in function
% `meshgrid` and `colormap`.

% Define the dimensions and resolution of the image
width = 1000;
height = 1000;
resolution = 100;

% Create a grid of complex numbers with x and y coordinates
[X, Y] = meshgrid(linspace(-2, 2, width), linspace(-2, 2, height));

% Initialize the iteration count and the maximum number of iterations
n = zeros(size(X));
max_iterations = 1000;

% Set the initial values for the real and imaginary parts
z_real = zeros(size(X));
z_imag = zeros(size(X));

% Loop through each point in the grid and perform the Mandelbrot iteration
for i = 1:numel(X)
    % Set the initial value of c as the current complex number
    c = complex(X(i), Y(i));

    % Perform the Mandelbrot iteration until either the absolute value of z
    % is greater than 2 or the maximum number of iterations is reached
    while abs(c) <= 2 && n(i) < max_iterations
        % Update the real and imaginary parts of z using the Mandelbrot formula
        z_real(i) = z_real(i)^2 - z_imag(i)^2 + real(c);
        z_imag(i) = 2*z_real(i)*z_imag(i) + imag(c);
        
        % Increment the iteration count
        n(i) = n(i) + 1;
    end
end

% Create a colormap with colors corresponding to the number of iterations
colormap(hot(max_iterations));

% Plot the Mandelbrot set fractal
imagesc(n);
axis off;
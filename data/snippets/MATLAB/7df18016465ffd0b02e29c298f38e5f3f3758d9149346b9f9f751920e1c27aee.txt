%% Generate a random matrix of size (NxN)

% Set the size of the matrix (change this to change the size of the matrix)
N = 5;

% Generate a random matrix of size NxN using the 'rand' function
A = rand(N);

% Get the indices of the diagonal elements of A
indices = diag(1:N);

% Set the diagonal elements of A to 0
A(indices) = 0;

% Get the indices of the upper triangular elements of A
[rows, cols] = find(triu(A));

% Calculate the mean of the upper triangular elements of A
upper_mean = mean(A(rows, cols));

% Set the lower triangular elements of A to the negative of the upper mean
A(rows, cols) = -upper_mean;

% Print the resulting random matrix A
display(A);

%% Calculate the eigenvalues using the 'eig' function

% Find the eigenvalues of A
eigenvalues = eig(A);

% Print the eigenvalues in descending order
display(sort(eigenvalues, 'descend'));

%% Plot a bar graph of the eigenvalues

% Set the figure size and title
figure('Position', [0 0 800 600], 'Name', 'Bar Graph of Eigenvalues');

% Plot the bar graph with the eigenvalues as y-values
bar(eigenvalues);

% Set the x-axis labels to the index of each eigenvalue
set(gca, 'XTickLabel', 1:length(eigenvalues));

% Set the x-axis label
xlabel('Index of Eigenvalue');

% Set the y-axis label
ylabel('Eigenvalue');

% Set the legend
legend('Eigenvalues');

% Set the title
title('Bar Graph of Eigenvalues');
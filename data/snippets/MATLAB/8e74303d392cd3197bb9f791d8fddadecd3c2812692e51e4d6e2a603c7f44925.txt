% This code snippet solves a system of linear equations using the Gauss-Siedel method
% Below is an implementation of the Gauss-Siedel method

n = 3;  %number of equations and unknowns
A = [3 1 0; 0 5 2; 0 0 -1];  %coefficient matrix
b = [9; 12; 3];  %RHS vector
x = zeros(n,1);  %initial guess for the solution vector
tol = 1e-6;  %tolerance for convergence
max_iter = 50;  %maximum number of iterations

for k = 1:max_iter
    
    % loop over each equation
    for i = 1:n
        
        % calculate summation of terms other than the diagonal element
        sum = 0;
        for j = 1:n
            if j ~= i
                sum = sum + A(i,j)*x(j);
            end
        end
        
        % calculate new value for solution vector
        x(i) = (b(i) - sum)/A(i,i);
    end
    
    % check for convergence
    % calculates current residue and compares to the tolerance
    residue = norm(A*x-b);
    if residue < tol
        disp(['Convergence achieved in ', num2str(k), ' iterations.']);
        break;
    end
end

% check if maximum number of iterations was reached before convergence
if k == max_iter
    disp('Maximum number of iterations reached. Solution may not have converged.');
end

% print the solution vector
disp('The solution vector is:');
disp(x);
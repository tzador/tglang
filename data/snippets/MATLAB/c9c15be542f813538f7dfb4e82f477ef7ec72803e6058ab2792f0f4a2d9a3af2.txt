%This code snippet generates a matrix of coefficients based on a given set of data using the Least Squares method
%Input: 
%X - matrix of independent variables, each row represents a different observation
%y - column vector of dependent variable values, each row corresponds to an observation in X
%Output:
%beta - column vector of coefficients, where beta(1) is the intercept and beta(i) is the coefficient for X(i,:)
%Author: [insert your name or username here]

%calculate the size of the input data
[m,n] = size(X);

%create an augmented matrix with ones in the first column
A = [ones(m,1), X];

%calculate the transpose of A
A_t = transpose(A);

%calculate the product of A and A transpose
A_tA = A_t * A;

%calculate the product of A transpose and y
A_ty = A_t * y;

%perform the QR factorization of A_tA
[Q,R] = qr(A_tA);

%calculate the product of Q transpose and A_ty
Qt_Aty = Q' * A_ty;

%initialize an m-sized vector to store the coefficients
beta = zeros(m,1);

%perform back substitution to find the coefficients
for i = m:-1:1
    beta(i) = Qt_Aty(i);
    for j = m:-1:i+1
        beta(i) = beta(i) - R(j,i)*beta(j);
    end
    beta(i) = beta(i)/R(i,i);
end

%display the coefficients
disp('The coefficients are:');
disp(beta);
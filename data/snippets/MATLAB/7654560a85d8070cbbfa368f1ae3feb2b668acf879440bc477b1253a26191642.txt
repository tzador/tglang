% This code snippet calculates the determinant of a matrix using LU decomposition and Gaussian elimination
% Input: A (nxn square matrix)
% Output: det (determinant of A)
function det = determinant(A)
% Getting the size of the matrix
n = size(A, 1);

% Initializing the determinant to be 1
det = 1;

% Applying LU decomposition to the matrix
[L, U] = lu(A);

% Initializing a vector to store the product of diagonal elements of U
D = ones(n, 1);

% Performing Gaussian elimination to get U in upper triangular form
for i = 1:n
    for j = 1:n
        if i < j
            % Finding the ratio between current row and pivot row
            ratio = U(j,i)/U(i,i);
            
            % Subtracting the multiple of pivot row from current row
            U(j,:) = U(j,:) - ratio*U(i,:);
            
            % Updating the determinant
            det = det*ratio;
        end
    end
    % Storing the diagonal elements of U in the vector D
    D(i) = U(i,i);
end

% Calculating the determinant as the product of diagonal elements of U and the determinant factor
det = det*prod(D);
end
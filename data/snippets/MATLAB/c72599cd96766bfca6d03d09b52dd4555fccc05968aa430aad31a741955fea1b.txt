% This code snippet uses a mathematical algorithm called the Jacobi method to solve a system of linear equations.

% Input matrix coefficients:
A = [2 1 -1; -3 -1 2; -2 1 2];
% Input right-hand side vector:
b = [8; -11; -3];

% Initialize solution vector:
x = zeros(3,1);

% Set tolerance threshold:
tol = 10^-6;

% Set maximum number of iterations:
max_iter = 100;

% Perform Jacobi method iterations:
for k = 1:max_iter
    % Calculate x_(k+1) using current x values:
    x_new = (b - A*x)./diag(A);
    % Check for convergence based on tolerance:
    if norm(x_new - x) < tol
        break;
    end
    % Update x values for next iteration:
    x = x_new;
end

% Display final solution vector:
disp(x);
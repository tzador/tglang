%% This is a program that finds all prime numbers between 2 and N using the Sieve of Eratosthenes method

% Define input variables
N = 1000; % Upper limit for prime number search
primes = []; % Empty array to store prime numbers

% Create an array with all numbers from 2 to N
numbers = 2:N;

% Use the Sieve of Eratosthenes method to find prime numbers
for i = 1:length(numbers)
    if numbers(i) ~= 0
        primes = [primes numbers(i)]; % Add number to prime array
        for j = i:length(numbers)
            if mod(numbers(j), numbers(i)) == 0 % Check for multiples
                numbers(j) = 0; % Replace multiple with 0
            end
        end
    end
end

% Remove all zeros from the numbers array
numbers(numbers == 0) = [];

% Display the prime numbers
disp("Prime numbers between 2 and " + num2str(N) + " are: ")
disp(primes)

% Calculate and display the percentage of numbers that are prime
percent_primes = length(primes)/length(numbers)*100;
disp("Percentage of prime numbers between 2 and " + num2str(N) + ": " + num2str(percent_primes) + "%")
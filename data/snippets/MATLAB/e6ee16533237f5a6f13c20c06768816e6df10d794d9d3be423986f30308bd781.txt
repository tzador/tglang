%%% Uncomment the following lines if you want to define simulation parameters manually, 
%%% otherwise a random set of parameters will be generated.
% L = input(prompt); % length of spring [m]
% k = input(prompt); % spring constant [N/m]
% m = input(prompt); % mass [kg]
% v0 = input(prompt); % initial velocity [m/s]
% theta0 = input(prompt); % initial angle [radians]

% Simulation parameters
L = 0.5; % length of spring [m]
k = 10; % spring constant [N/m]
m = 1; % mass [kg]
v0 = 0; % initial velocity [m/s]
theta0 = pi/6; % initial angle [radians]
g = 9.8; % gravitational acceleration [m/s^2]
t = 0:0.01:10; % time vector [s]

% Function that defines the equations of motion for the mass-spring system
f = @(t, y) [y(2); (-k/m)*y(1) - (g/L)*sin(y(3))]; % where y(1) = x, y(2) = dx/dt, y(3) = theta

% Solve the differential equations using the built-in ODE solver
[T, Y] = ode45(f, t, [0 v0 theta0]);

% Plot the position and angle of the mass-spring system over time
subplot(2,1,1);
plot(T, Y(:,1));
xlabel('Time [s]');
ylabel('Position [m]');
title('Position vs Time');
subplot(2,1,2);
plot(T, Y(:,3));
xlabel('Time [s]');
ylabel('Angle [radians]');
title('Angle vs Time');
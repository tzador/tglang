% This code snippet demonstrates how to implement Principal Component Analysis (PCA) in MATLAB
% Import data from a .csv file into a matrix
data = csvread('data.csv');
% Remove the first column (containing labels)
data(:,1) = [];

% Standardize the data by subtracting the mean of each feature and dividing by the standard deviation
% This ensures that each feature has unit variance and a mean of 0
standard_data = zscore(data);

% Compute the covariance matrix of the standardized data
covariance_matrix = cov(standard_data);

% Calculate the eigenvectors and eigenvalues of the covariance matrix
[eigenvectors, eigenvalues] = eig(covariance_matrix);

% Sort the eigenvalues in descending order
[sorted_eigenvalues, index] = sort(diag(eigenvalues), 'descend');
sorted_eigenvectors = eigenvectors(:, index);

% Choose the number of principal components to keep
n_components = 2;

% Create a projection matrix to project the data onto the selected principal components
projection_matrix = sorted_eigenvectors(:, 1:n_components);

% Project the data onto the selected principal components
projected_data = standard_data * projection_matrix;

% Visualize the data in a 2D scatter plot
scatter(projected_data(:,1), projected_data(:,2));
xlabel('Principal Component 1');
ylabel('Principal Component 2');
title('Projection of Data onto First Two Principal Components');

% Optional: Calculate the percentage of variance explained by each principal component
explained_variance = sorted_eigenvalues / sum(sorted_eigenvalues) * 100;

 % Print the results
 fprintf('Percentage of variance explained by Principal Component 1: %.2f%%\n', explained_variance(1));
 fprintf('Percentage of variance explained by Principal Component 2: %.2f%%\n', explained_variance(2));
% This program uses the iterative Newton's method to find the root of a user-defined function
% with starting guess of 1, tolerance of 0.001, and maximum iterations of 50

% Define the user-defined function
function y = myFunction(x)
y = x^3 - x + 1;
end

% Set initial guess, tolerance, and maximum iterations
x0 = 1;
tol = 0.001;
max_iter = 50;

% Initialize iteration counter, initial error and updated value
iter = 0;
error = 1;
x_new = x0;

% Start iterative Newton's method
while (error > tol && iter < max_iter)
    % Calculate function value at current guess
    y = myFunction(x_new);
    
    % Calculate derivative of the function at current guess
    dy_dx = 3*x_new^2 - 1;
    
    % Calculate new guess using Newton's method
    x_new = x_new - y / dy_dx;
    
    % Calculate the error
    error = abs((x_new - x0) / x_new);
    
    % Update the iteration counter
    iter = iter + 1;
end

% Check if maximum iterations have been reached
if (iter == max_iter)
    fprintf('Maximum number of iterations reached, solution may not be accurate.\n');
end

% Print the root and number of iterations taken
fprintf('The root of the function is: %f\n', x_new);
fprintf('Number of iterations taken: %d\n', iter);
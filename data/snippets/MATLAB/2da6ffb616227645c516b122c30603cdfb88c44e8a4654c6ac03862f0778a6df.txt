% This code snippet generates a 2D Gaussian kernel matrix of size (filterSize x filterSize)
% with user-defined standard deviation and center position

% User inputs
std = input("Standard deviation: ");
center = input("Center position (x,y): ");

% Size of the kernel matrix
filterSize = 5; % user-defined, odd number for symmetrical kernel

% Generate a matrix of zeros
kernel = zeros(filterSize, filterSize);

% Calculate the center index
centerIndex = (filterSize + 1) / 2; % used for symmetrical placement
centerX = center(1); % x-coordinate of center position
centerY = center(2); % y-coordinate of center position

% Generate the kernel matrix
for i = 1:filterSize
    for j = 1:filterSize
        % Calculate the value of each element in the matrix using the Gaussian equation
        kernel(i,j) = (1/(2*pi*std^2)) * exp(-((i-centerIndex)^2 + (j-centerIndex)^2)/(2*std^2));
    end
end

% Normalize the kernel matrix so that all values sum up to 1
kernel = kernel ./ sum(kernel(:));

% Print the generated kernel matrix
disp("Generated 2D Gaussian kernel matrix:");
disp(kernel)
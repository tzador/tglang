%% simulate temporal dynamics
for i = 1:10
    % generate random noise
    noise = randn(1, 100);

    % create signal using sinusoidal functions
    signal = cos(2 * pi * 10 * (1:100) / 100) + 0.5 * sin(2 * pi * 5 * (1:100) / 100);

    % add noise to signal
    noisy_signal = signal + noise;

    % plot signal vs noisy signal
    subplot(2, 1, 1);
    plot(1:100, signal, 'b', 'LineWidth', 2);
    hold on;
    plot(1:100, noisy_signal, 'r--');
    title('Signal vs Noisy Signal');
    xlabel('Time');
    ylabel('Amplitude');
    legend('Signal', 'Noisy Signal');
    hold off;

    % apply Fourier transform to signal
    signal_fft = fft(signal);

    % plot signal fft
    subplot(2, 2, 3);
    plot(1:100, abs(signal_fft), 'b', 'LineWidth', 2);
    title('Signal Fourier Transform');
    xlabel('Frequency');
    ylabel('Magnitude');

    % apply Fourier transform to noisy signal
    noisy_signal_fft = fft(noisy_signal);

    % plot noisy signal fft
    subplot(2, 2, 4);
    plot(1:100, abs(noisy_signal_fft), 'r--');
    title('Noisy Signal Fourier Transform');
    xlabel('Frequency');
    ylabel('Magnitude');

    % pause for 0.5 seconds
    pause(0.5);
end
%% Load data
load 'data.mat'

%% Pre-processing
% Remove outliers
data = removeOutliers(data);

% Normalize data
data = normalizeData(data);

%% Feature Extraction
% Extract features using wavelet transform
features = extractWaveletFeatures(data);

% Perform Principal Component Analysis (PCA)
[coeff, ~, ~, ~, explainedVar, ~] = pca(features);

% Select top 10 principal components based on explained variance
top10coeff = coeff(:, 1:10);

% Project data onto top 10 principal components
projectedData = features * top10coeff;

%% Clustering
% Determine optimal number of clusters using silhouette method
numClusters = silhouetteMethod(projectedData);

% Perform k-means clustering using the determined number of clusters
[clusters, centroids] = kmeans(projectedData, numClusters);

%% Visualization
% Plot original data in 3D space
figure;
scatter3(data(:,1),data(:,2),data(:,3), 'filled');
xlabel('Feature 1');
ylabel('Feature 2');
zlabel('Feature 3');
title('Original Data');

% Plot clustered data in 3D space
figure;
scatter3(clusters(:,1),clusters(:,2),clusters(:,3), 'filled');
hold on;
scatter3(centroids(:,1),centroids(:,2),centroids(:,3), 'filled');
xlabel('Cluster 1');
ylabel('Cluster 2');
zlabel('Cluster 3');
title('Clustered Data');
legend('Data points', 'Cluster centroids');
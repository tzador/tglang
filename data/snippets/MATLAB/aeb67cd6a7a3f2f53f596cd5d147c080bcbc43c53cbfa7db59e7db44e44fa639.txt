%This code snippet calculates the Sierpi≈Ñski triangle using a recursive algorithm

%Create a function that takes in the number of iterations, size, and initial coordinates
function Sierpinsky(n, size, x, y)
    %Create base case
    if n == 0
        %Plot a single triangle at the given coordinates with the given size
        triangle = patch(x, y, 'r');
    else
        %Calculate the new coordinates for the 3 smaller triangles
        x1 = [x(1) (x(1)+x(2))/2 (x(1)+x(3))/2];
        y1 = [y(1) (y(1)+y(2))/2 y(3)];
        x2 = [x(2) (x(1)+x(2))/2 x(3)];
        y2 = [y(2) (y(1)+y(2))/2 (y(2)+y(3))/2];
        x3 = [x(3) x(3) (x(1)+x(3))/2];
        y3 = [y(3) (y(2)+y(3))/2 (y(1)+y(3))/2];
        
        %Recursively call the function with the new coordinates and one less iteration
        Sierpinski(n-1, size/2, x1(end-1:end), y1);
        Sierpinski(n-1, size/2, x2, y2);
        Sierpinski(n-1, size/2, x3, y3);
    end
end

%Set the initial coordinates and number of iterations
x = [0 size size/2];
y = [0 0 size/2*sqrt(3)];
n = 5;

%Call the function
Sierpinski(n, size, x, y);
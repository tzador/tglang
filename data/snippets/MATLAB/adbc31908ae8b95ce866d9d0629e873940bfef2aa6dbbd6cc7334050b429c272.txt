function y = complexSignal(x, Fs)
% Generates a complex signal with a given sampling frequency and length
% Inputs:
%  x - input vector of length N
%  Fs - sampling frequency
% Outputs:
%  y - output vector of length N
N = length(x);                          % get length of input vector
t = linspace(0, (N-1)/Fs, N);           % create time vector
f = Fs/N * (-N/2 : N/2-1);              % create frequency vector
spectrum = fftshift(fft(x));            % compute spectrum of input signal
phase = rand(N, 1) .* 2*pi;             % randomly generate a phase vector
spectrum_complex = spectrum .* exp(1i * phase); % add random phase to spectrum
y = ifft(ifftshift(spectrum_complex));  % inverse Fourier transform to get complex signal
y = real(y) + imag(y);                  % take real and imaginary components to get final signal
y = y/max(y);                           % normalize final signal
figure;                                 % create figure
subplot(2, 1, 1);                       % create upper subplot
plot(t, x, 'k');                        % plot input signal in black
xlabel('Time (s)');                     % add xlabel
ylabel('Amplitude');                    % add ylabel
title('Input Signal');                  % add title
subplot(2, 1, 2);                       % create lower subplot
plot(t, y, 'b');                        % plot final complex signal in blue
xlabel('Time (s)');                     % add xlabel
ylabel('Amplitude');                    % add ylabel
title('Complex Signal');                % add title
end
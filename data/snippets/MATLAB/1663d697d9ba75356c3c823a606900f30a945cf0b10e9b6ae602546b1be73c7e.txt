% This code snippet calculates the power spectrum of a signal using the Welch method

% Generate a random signal
signal = randn(1, 1000);

% Define the length of each segment
segment_length = 100;

% Calculate the number of segments
num_segments = fix(length(signal)/segment_length);

% Initialize matrix to store segments
segments = zeros(segment_length, num_segments);

% Create overlapping segments
for i = 1:num_segments
    % Determine start and end indices for each segment
    start_index = (i-1)*segment_length + 1;
    end_index = i*segment_length;
    
    % Store segment in matrix
    segments(:,i) = signal(start_index:end_index);
end

% Apply window function to each segment
window = hann(segment_length);
windowed_segments = bsxfun(@times, segments, window);

% Calculate FFT of each segment
segment_fft = fft(windowed_segments);

% Calculate power spectrum of each segment
% Note: Power Spectral Density (PSD) is computed by dividing the squared magnitude of the FFT by the length of the input signal
psd = (1/segment_length) * abs(segment_fft).^2;

% Merge segments and calculate average PSD
avg_psd = mean(psd, 2);

% Plot the power spectrum
fs = 1000; % Sampling frequency
freq = (0:segment_length-1)*(fs/segment_length); % Frequency axis
plot(freq, avg_psd);
title('Power Spectrum of Signal');
xlabel('Frequency (Hz)');
ylabel('Power/Freq');
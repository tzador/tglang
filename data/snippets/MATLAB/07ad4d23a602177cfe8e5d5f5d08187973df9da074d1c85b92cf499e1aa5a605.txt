function [p] = newtonRaphson(f, fprime, x0, tol, maxiter)
% Implements the Newton-Raphson algorithm to find a root of a given function.
% INPUT:
%    f - the function to be evaluated
%    fprime - the first derivative of the function
%    x0 - the initial guess for the root
%    tol - the tolerance for error
%    maxiter - the maximum number of iterations allowed
% OUTPUT:
%    p - the estimated root of the function f

% Initialize variables
p = x0; % initial guess of root
iter = 1; % iteration counter

while iter <= maxiter
    % Calculate the next approximation
    p = p - f(p)/fprime(p);
    
    % Check if the root is within the specified tolerance
    if abs(f(p)) < tol
        fprintf('Approximate root found after %d iterations.\n', iter);
        return;
    end
    
    % Update iteration counter
    iter = iter + 1;
end

% If maximum iterations is reached without satisfying tolerance, display error message
fprintf('Method failed after %d iterations.\n', maxiter);
end
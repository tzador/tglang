% This code snippet generates a spectral plot of a discrete signal
% and performs signal processing techniques

% Generate a discrete signal with 100 data points
signal = randn(1,100);

% Perform a Fast Fourier Transform (FFT) on the signal
fft_signal = fft(signal);

% Calculate the magnitudes of the FFT coefficients
fft_mag = abs(fft_signal);

% Create a frequency axis for plotting
freq_axis = linspace(0, 1, length(fft_mag));

% Plot the spectral magnitude of the signal
plot(freq_axis, fft_mag);
xlabel('Frequency (Hz)');
ylabel('Magnitude');
title('Spectral Plot');

% Apply a high-pass filter to the signal using a Kaiser window
cutoff_freq = 0.2; % Set the cutoff frequency to 0.2 Hz
filt_order = 20; % Set the filter order to 20
b = fir1(filt_order, cutoff_freq, 'high', kaiser(filt_order+1, 5)); % Generate filter coefficients
filt_signal = filter(b, 1, signal); % Apply the filter to the signal

% Plot the filtered signal next to the original signal
figure;
subplot(2,1,1);
plot(signal);
title('Original Signal');
subplot(2,1,2);
plot(filt_signal);
title('Filtered Signal');
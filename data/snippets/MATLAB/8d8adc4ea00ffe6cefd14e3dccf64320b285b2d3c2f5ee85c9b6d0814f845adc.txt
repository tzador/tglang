%% Gaussian Mixture Model Clustering

% Initialize number of clusters
k = 3;

% Initialize data points
data = [0.5 2; 1.2 0.8; 0.9 1; -0.4 3; 2.2 1.5; 0.7 3.5; -1 1.3; 3.5 2.2; 1.1 1.7; 1.5 -0.2; 0.3 2.9; 2.8 2.7];

% Initialize means of each cluster
mu = zeros(k,size(data,2)); 

% Pick k random data points as initial means
rand_indices = randperm(size(data,1));
mu(1:k,:) = data(rand_indices(1:k), :);

% Initialize covariance matrix for each cluster
sigma = zeros(size(data,2), size(data,2), k);

% Pick k random covariance matrices as initial covariance
for i=1:k
    sigma(:,:,i) = randn(size(data,2)) + eye(size(data,2));
end

% Initialize mixing coefficients
phi = ones(1,k)/k;

% Initialize empty matrix for cluster assignments
gamma = zeros(size(data,1), k);

% Initialize empty matrix to store previous cluster assignments
prev_assignment = zeros(size(data,1), 1);

% Repeat until cluster assignments converge
repeats = 0;
while ~isequal(prev_assignment, gamma)

    % E-step: Calculate probabilities of data points belonging to each cluster
    for i=1:size(data,1)
        for j=1:k
            gamma(i,j) = phi(j) * exp(-0.5* (data(i,:)-mu(j,:))*inv(sigma(:,:,j))*(data(i,:)-mu(j,:))') ; 
        end
        gamma(i,:) = gamma(i,:)./sum(gamma(i,:));
    end
    
    % M-step: Update parameters (mean, covariance, mixing coefficients)
    for j=1:k
        mu(j,:) = sum(repmat(gamma(:,j),1,size(data,2)).*data)./sum(gamma(:,j));
        sigma(:,:,j) = ((repmat(sqrt(gamma(:,j)),1, size(data,2)).*(data-repmat(mu(j,:),size(data,1),1)))'*(data-repmat(mu(j,:),size(data,1),1)))/sum(gamma(:,j));
        phi(j) = sum(gamma(:,j))/size(data,1);
    end
    
    prev_assignment = gamma;
    repeats = repeats+1;
end

% Display final cluster assignments
disp(gamma);
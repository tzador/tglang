%% Polynomial Regression
% This code snippet implements a polynomial regression model in MATLAB, 
% using the polyfit and polyval functions.
% The dataset used for training is a preprocessed version of the Boston Housing 
% dataset, containing 13 features and 506 instances.
% The aim is to predict the median value of owner-occupied homes in thousands 
% of dollars (target variable) based on the given features.

% Load the dataset
load('boston_housing.mat');

% Split the dataset into training and testing sets with a 70:30 ratio
train_ratio = 0.7;
train_size = round(train_ratio*size(boston_housing, 1));
train_X = boston_housing(1:train_size, 1:end-1);
train_y = boston_housing(1:train_size, end);
test_X = boston_housing(train_size+1:end, 1:end-1);
test_y = boston_housing(train_size+1:end, end);

% Define the degree of the polynomial
degree = 3;

% Compute the coefficients for the polynomial regression model using the 
% training data
coeffs = polyfit(train_X, train_y, degree);

% Evaluate the model on the testing data
predictions = polyval(coeffs, test_X);

% Calculate the root mean square error (RMSE) between the predicted values and 
% the actual values
RMSE = sqrt(mean((predictions - test_y).^2));

% Plot the results
figure;
plot(test_y, 'b-', 'LineWidth', 2);
hold on;
plot(predictions, 'r-', 'LineWidth', 2);
xlabel('Instance');
ylabel('Median Value (in thousands of dollars)');
legend('Actual', 'Predicted');
title({'Polynomial Regression Model', ['RMSE = ' num2str(RMSE)]});
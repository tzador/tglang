%% Vector creation
% This section creates a vector and specifies its shape, size, and values.

% Specify the size of the vector.
vector_size = 10;

% Create a vector of ones with the specified size.
ones_vector = ones(vector_size,1);

% Display the vector.
disp("Vector of ones:")
disp(ones_vector)

% Create a vector of random numbers with the specified size.
random_vector = rand(vector_size,1);

% Display the vector.
disp("Vector of random numbers:")
disp(random_vector)

% Create a vector with evenly spaced elements between a specified minimum and maximum value.
min = 0;
max = 100;
even_vector = linspace(min,max,vector_size);

% Display the vector.
disp("Evenly spaced vector:")
disp(even_vector)

%% Vector manipulation
% This section manipulates the created vectors using various functions.

% Sum the elements of the ones vector.
sum_ones = sum(ones_vector);

% Display the sum.
disp("Sum of the ones vector:")
disp(sum_ones)

% Find the maximum value in the random vector.
max_random = max(random_vector);

% Display the maximum value.
disp("Maximum value in random vector:")
disp(max_random)

% Find the element-wise square root of the even vector.
sqrt_even = sqrt(even_vector);

% Display the result.
disp("Square root of evenly spaced vector:")
disp(sqrt_even)

% Concatenate the ones and random vector.
concat_vector = cat(1,ones_vector,random_vector);

% Display the concatenated vector.
disp("Concatenated vector:")
disp(concat_vector)

%% Vector indexing
% This section indexes into the created vectors to access specific elements.

% Access the third element of the ones vector.
third_element = ones_vector(3);

% Display the element.
disp("Third element of ones vector:")
disp(third_element)

% Access the first three elements of the random vector.
first_three = random_vector(1:3);

% Display the elements.
disp("First three elements of random vector:")
disp(first_three)

% Reverse the order of the even vector.
reversed_even = flip(even_vector);

% Display the reversed vector.
disp("Reversed evenly spaced vector:")
disp(reversed_even)

% Change the value of the last element in the concatenated vector.
concat_vector(end) = 5;

% Display the updated vector.
disp("Updated concatenated vector:")
disp(concat_vector)

%% Vector operations
% This section performs mathematical operations on the created vectors.

% Multiply each element of the ones vector by 2.
twice_ones = 2*ones_vector;

% Display the result.
disp("Twice the ones vector:")
disp(twice_ones)

% Add the random vector and the even vector.
random_plus_even = random_vector + even_vector;

% Display the result.
disp("Sum of random and even vector:")
disp(random_plus_even)

% Divide the even vector by 2.
half_even = even_vector/2;

% Display the result.
disp("Half of even vector:")
disp(half_even)
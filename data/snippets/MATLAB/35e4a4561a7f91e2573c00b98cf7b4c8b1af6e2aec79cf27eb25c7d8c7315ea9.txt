%% Design a Butterworth filter using pole/zero placement
%Define filter specifications
sample_rate = 1000; %in Hz
nyquist_frequency = sample_rate/2; %in Hz
passband_ripple = 1; %in dB
stopband_attenuation = 80; %in dB
passband_edge = 100; %in Hz
stopband_edge = 120; %in Hz

%Calculate filter order and cutoff frequency
[num, den] = buttord(passband_edge/nyquist_frequency, stopband_edge/nyquist_frequency, passband_ripple, stopband_attenuation);
cutoff_frequency = nyquist_frequency * passband_edge; %in radians

%Create transfer function using calculated poles and zeros
[sos,g] = zp2sos(num,den,k);
H = dfilt.df1sos(sos,g); %digital filter object

%Plot magnitude and phase response of filter
fvtool(H,'Analysis','freq','MAG','Phase','Frequency');
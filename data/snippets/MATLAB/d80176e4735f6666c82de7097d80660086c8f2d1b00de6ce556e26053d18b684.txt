% Calculate the objective function value
fval = sum(5 .* X.^2 + 3 .* Y.^2 - 3 .* X .* Y);

% Set constraints for optimization
constr1 = 2 .* X + 4 .* Y <= 10;
constr2 = X >= 0;
constr3 = Y >= 0;

% Calculate the gradient of the objective function
grad = [10 .* X - 3 .* Y, 6 .* Y - 3 .* X];

% Create a function handle for the objective function
fun = @(x) sum(5 .* x(1)^2 + 3 .* x(2)^2 - 3 .* x(1) .* x(2));

% Set initial guess for optimization
x0 = [0.5, 0.5];

% Set options for optimization
options = optimset('Display', 'iter', 'MaxFunEvals', 1000, 'MaxIter', 1000);

% Perform constrained optimization using the interior-point algorithm
[x, fval] = fmincon(fun, x0, [], [], [], [], [], [], @(x)deal(constr1, constr2, constr3), options);

% Print the optimized values
disp(x);
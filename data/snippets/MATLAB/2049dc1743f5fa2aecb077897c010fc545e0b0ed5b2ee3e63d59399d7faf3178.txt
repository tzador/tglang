% This code snippet generates a filtered Lorenz attractor plot using a fourth-order Runge-Kutta method

% Define constants and initial conditions
sigma = 10;
beta = 8/3;
rho = 28;
x0 = 5;
y0 = 5;
z0 = 5;
t = 0:0.01:100;
dt = 0.01;

% Define differential equations
f = @(t,x) [sigma*(x(2)-x(1)); x(1)*(rho-x(3))-x(2); x(1)*x(2)-beta*x(3)];

% Implement fourth-order Runge-Kutta method
x = zeros(3,length(t));
x(:,1) = [x0 y0 z0];
for i = 1:length(t)-1
    k1 = f(t(i),x(:,i))*dt;
    k2 = f(t(i)+dt/2, x(:,i)+k1/2)*dt;
    k3 = f(t(i)+dt/2, x(:,i)+k2/2)*dt;
    k4 = f(t(i)+dt, x(:,i)+k3)*dt;
    x(:,i+1) = x(:,i) + (k1+2*k2+2*k3+k4)/6;
end

% Plot filtered Lorenz attractor
figure;
plot3(x(1,:),x(2,:),x(3,:),'Color','#2a9d8f','LineWidth',1.2);
xlabel('x');
ylabel('y');
zlabel('z');
title('Filtered Lorenz Attractor with Fourth-Order Runge-Kutta Method');
grid on;
% This code snippet solves the differential equation d^2y/dt^2 = -Ï‰^2*y using the finite difference method with central difference approximation
% Given initial conditions
y_0 = 1; % initial position
y_dot_0 = 0; % initial velocity
t_final = 10; % end of time interval
delta_t = 0.01; % time step size
omega = 2; % frequency of oscillation

num_steps = t_final/delta_t; % number of time steps
y = zeros(num_steps + 1, 1); % initialize solution vector
t = zeros(num_steps + 1, 1); % initialize time vector

% Set initial values
y(1) = y_0;
t(1) = 0;

% Solve using central difference method
for i = 1:num_steps
    % Compute y double dot using central difference approximation
    y_ddot = -(omega^2)*y(i);
    
    % Update y and t values
    y(i+1) = 2*y(i) - y(i-1) + y_ddot*(delta_t^2);
    t(i+1) = t(i) + delta_t;
end

% Plot the solution
plot(t, y, 'b-');
xlabel('Time');
ylabel('Position');
title('Solution to the Simple Harmonic Oscillator Equation');
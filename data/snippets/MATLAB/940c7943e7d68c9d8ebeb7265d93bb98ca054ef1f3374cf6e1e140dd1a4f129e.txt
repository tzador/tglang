% This code reads in a matrix of data and performs principal component analysis (PCA) on it

% First, load the data matrix into a variable called 'data'
load('data.mat');

% Create a correlation matrix from the data matrix
corr_matrix = corr(data);

% Use MATLAB's built-in function 'eig' to calculate the eigenvalues and eigenvectors of the correlation matrix
[eigenvals, eigenvecs] = eig(corr_matrix);

% Sort the eigenvalues in descending order
[sorted_eigenvals, indices] = sort(diag(eigenvals), 'descend');

% Use the sorted eigenvalues to reorder the corresponding eigenvectors
sorted_eigenvecs = eigenvecs(:, indices);

% Normalize the sorted eigenvectors to unit length
normalized_eigenvecs = normc(sorted_eigenvecs);

% Calculate the principal components by multiplying the data matrix with the normalized eigenvectors
principal_components = data * normalized_eigenvecs;

% Plot the first two principal components against each other to visualize the data in a 2D space
plot(principal_components(:, 1), principal_components(:, 2), 'o');
xlabel('Principal Component 1');
ylabel('Principal Component 2');
title('2D Visualization of Data Using PCA');
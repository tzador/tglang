%% Load data
load('dataset.mat'); % load dataset into workspace

%% Pre-processing
data = cleanData(dataset); % remove invalid entries and outliers
mean_data = mean(data); % calculate mean of data
std_data = std(data); % calculate standard deviation of data
data = zscore(data); % standardize the data using Z-score
data = removeDuplicates(data); % remove duplicate entries from data
filtered_data = medianFilter(data, 5); % apply median filter with window size of 5

%% Feature extraction
features = featureExtraction(filtered_data); % extract features from the data

%% Dimensionality reduction
[coeff, score, latent] = pca(features); % perform principal component analysis
reduced_data = score(:, 1:10); % select the first 10 principal components as the reduced data

%% Clustering
[clusters, centroids] = kmeans(reduced_data, 5); % perform k-means clustering with 5 clusters
silhouette_values = silhouette(reduced_data, clusters); % calculate silhouette values for each data point
best_k = find_best_k(silhouette_values); % find the best value for k based on silhouette values

%% Visualize results
subplot(1,2,1);
plot(data, 'k'); % plot the original data
title('Original Data');
subplot(1,2,2);
scatter(reduced_data(:,1), reduced_data(:,2), [], clusters); % visualize the data after dimensionality reduction and clustering
hold on;
scatter(centroids(:,1), centroids(:,2), 100, 'rx', 'LineWidth', 2); % plot the cluster centroids
title(['Clustered Data with k = ', num2str(best_k)]);
legend('Data Points', 'Cluster Centroids');
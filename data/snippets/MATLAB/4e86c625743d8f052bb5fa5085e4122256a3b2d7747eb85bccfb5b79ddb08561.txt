%% Script for generating a convolutional neural network
% This script creates a convolutional neural network with 3 convolutional layers, 2 pooling layers, and 1 fully connected layer. The input dimensions are 32x32x3 and there are 10 output classes.
%
% Network is created using the |LayerGraph| function and trained using the |trainNetwork| function.

% Initialize the convolutional neural network
layers = [
    imageInputLayer([32 32 3]) % Input layer with a 32x32x3 input
    convolution2dLayer(3,64,'Padding','same') % First convolutional layer with 64 filters of size 3x3
    batchNormalizationLayer
    reluLayer % Activation function
    maxPooling2dLayer(2,'Stride',2) % First max pooling layer with a stride of 2
    convolution2dLayer(3,128,'Padding','same') % Second convolutional layer with 128 filters of size 3x3
    batchNormalizationLayer
    reluLayer
    maxPooling2dLayer(2,'Stride',2) % Second max pooling layer with a stride of 2
    convolution2dLayer(3,256,'Padding','same') % Third convolutional layer with 256 filters of size 3x3
    batchNormalizationLayer
    reluLayer
    fullyConnectedLayer(10) % Fully connected layer with 10 output classes
    softmaxLayer % Softmax layer for classification
    classificationLayer]; % Classification layer for class labels

% Specify the training options
options = trainingOptions('sgdm', ...
    'MaxEpochs',20, ...
    'MiniBatchSize', 128, ...
    'InitialLearnRate',0.001, ...
    'Shuffle','every-epoch', ...
    'ValidationData',imdsTest, ...
    'ValidationFrequency',500, ...
    'Verbose',false, ...
    'Plots','training-progress');

% Train the network
net = trainNetwork(imdsTrain,layers,options);
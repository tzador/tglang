% This code snippet generates a signal using the chirp function and applies a low-pass filter to it, 
% then plots the original and filtered signals and displays their spectrograms

% Define signal parameters
fs = 2000; % sampling frequency in Hz
t = 0:1/fs:1; % time vector
f0 = 100; % starting frequency in Hz
f1 = 400; % ending frequency in Hz

% Generate signal using chirp function
x = chirp(t,f0,1,f1,'linear'); 

% Apply a low-pass filter using the Butterworth filter
fc = 200; % cutoff frequency in Hz
[b,a] = butter(5,fc/(fs/2),'low'); % generate filter coefficients
y = filter(b,a,x); % apply filter to signal

% Plot original and filtered signals
subplot(2,1,1);
plot(t,x); % plot original signal
xlabel('Time (s)');
ylabel('Amplitude');
title('Original Signal');
subplot(2,1,2);
plot(t,y); % plot filtered signal
xlabel('Time (s)');
ylabel('Amplitude');
title('Filtered Signal');

% Create and display spectrograms of original and filtered signals
figure;
spectrogram(x,256,250,256,fs,'yaxis'); % calculate and plot spectrogram of original signal
title('Original Signal Spectrogram');
figure;
spectrogram(y,256,250,256,fs,'yaxis'); % calculate and plot spectrogram of filtered signal
title('Filtered Signal Spectrogram');
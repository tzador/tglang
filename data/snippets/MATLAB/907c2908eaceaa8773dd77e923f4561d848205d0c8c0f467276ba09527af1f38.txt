%% Load Data
load('data.mat'); % Load data file
num_samples = size(data,1); % Determine number of data samples
num_features = size(data,2)-1; % Determine number of features in data, excluding label column

%% Pre-processing
X = data(:,1:num_features); % Extract features from data
y = data(:,end); % Extract labels from data

% Apply z-score normalization to features
mu = mean(X); % Calculate mean of each feature
sigma = std(X); % Calculate standard deviation of each feature
X = (X - mu) ./ sigma; % Apply z-score normalization

%% Train-Test Split
train_ratio = 0.7; % Set ratio for train-test split
train_samples = round(train_ratio*num_samples); % Determine number of samples in training set
test_samples = num_samples - train_samples; % Determine number of samples in test set

X_train = X(1:train_samples,:); % Extract features for training set
y_train = y(1:train_samples,:); % Extract labels for training set
X_test = X(train_samples+1:end,:); % Extract features for test set
y_test = y(train_samples+1:end,:); % Extract labels for test set

%% Model Training
% Train a support vector machine classifier with a radial basis function kernel
svm_model = fitcsvm(X_train,y_train,'KernelFunction','rbf');

%% Model Testing
% Test the trained model on the test set
y_pred = predict(svm_model,X_test);

% Calculate accuracy of the model on the test set
accuracy = sum(y_pred == y_test)/test_samples;
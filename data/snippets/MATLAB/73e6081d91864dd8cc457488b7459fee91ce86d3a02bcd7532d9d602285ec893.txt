%% initialize parameters
x0 = 0; % initial value of x
y0 = 1; % initial value of y
tf = 10; % final time
dt = 0.01; % time step size
Nt = round(tf/dt); % number of time steps
alpha = 0.5; % parameter alpha
beta = 2; % parameter beta

%% define function and its derivatives
f = @(x,y,alpha,beta) alpha*y-x^2+beta;
dfdx = @(x,y,alpha,beta) -2*x;
dfdy = @(x,y,alpha,beta) alpha;

%% initialize solution vector
x = zeros(Nt,1);
y = zeros(Nt,1);

%% numerical integration using Euler's method
for i = 1:Nt-1
   x(i+1) = x(i)+dt*f(x(i),y(i),alpha,beta);
   y(i+1) = y(i)+dt*dfdx(x(i),y(i),alpha,beta);
end

%% plot results
t = 0:dt:tf; % time vector
figure; % open a new figure window
subplot(2,1,1); % create a subplot with 2 rows and 1 column, and select the first subplot
plot(t,x); % plot x vs. t
xlabel('t'); % label x-axis
ylabel('x'); % label y-axis
title('Numerical Solution for x'); % add a title
subplot(2,1,2); % select the second subplot
plot(t,y); % plot y vs. t
xlabel('t'); % label x-axis
ylabel('y'); % label y-axis
title('Numerical Solution for y'); % add a title
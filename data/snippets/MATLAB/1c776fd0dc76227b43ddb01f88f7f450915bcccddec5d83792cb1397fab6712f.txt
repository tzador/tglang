% Denavit-Hartenberg Forward Kinematics for 6-DoF Robot Arm

% Define symbolic variables for theta, d, a, alpha
syms theta1 theta2 theta3 d1 d2 d3 a1 a2 a3 alpha1 alpha2 alpha3

% Define the rotation matrices about x, y, z axes
Rx = [1 0 0; 0 cos(alpha) -sin(alpha); 0 sin(alpha) cos(alpha)];
Ry = [cos(theta) 0 sin(theta); 0 1 0; -sin(theta) 0 cos(theta)];
Rz = [cos(theta) -sin(theta) 0; sin(theta) cos(theta) 0; 0 0 1];

% Define the homogeneous transformation matrices for each joint
T1 = [Rz(theta1) [0 0 d1]'; 0 0 0 1];
T2 = [Rx(alpha2) [a2 0 0]'; 0 0 0 1];
T3 = [Ry(theta3) [0 d3 0]'; 0 0 0 1];

% Compute the final transformation matrix
T = simplify(T1 * T2 * T3);

% Define symbolic variables for the desired end-effector position
syms x y z;

% Define the desired end-effector position as a 3x1 vector
P = [x; y; z];

% Solve for theta1, theta2, theta3 using the inverse kinematics formula
J = jacobian(P, [theta1 theta2 theta3]);
theta = simplify(inv(J) * P);

% Substitute in the values for a, alpha, d from DH parameters
theta = subs(theta, [a1 a2 a3 alpha1 alpha2 alpha3], [0 0.5 0.5 pi/2 0 0]);

% Convert the symbolic expressions for theta1, theta2, theta3 into numerical values
theta1 = eval(theta(1));
theta2 = eval(theta(2));
theta3 = eval(theta(3));

% Print the final values of theta1, theta2, theta3
disp("The values of theta1, theta2, theta3 for the given end-effector position are:");
disp(theta1);
disp(theta2);
disp(theta3);
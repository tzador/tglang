function [solutions,tmin] = quadraticSolver(a,b,c)
% This is a function that solves quadratic equations using the quadratic formula
% Inputs:
%   a - coefficient of x^2 term (scalar)
%   b - coefficient of x term (scalar)
%   c - constant term (scalar)
% Outputs:
%   solutions - vector containing the solutions of the quadratic equation
%   tmin - minimum time value at which the solutions occur
% Author: [Your Name]
% Date: [Date created]
% Initialize empty vector for solutions
solutions = [];
% Calculate discriminant
discriminant = b^2 - 4*a*c;
% Check if discriminant is negative, which would indicate imaginary solutions
if discriminant < 0
    disp('No real solutions exist.');
% If discriminant is zero, there is only one solution
elseif discriminant == 0
    solutions = -b / (2*a);
% If discriminant is positive, there are two solutions
else
    % Solve for solutions using quadratic formula
    solution1 = (-b + sqrt(discriminant)) / (2*a);
    solution2 = (-b - sqrt(discriminant)) / (2*a);
    % Add solutions to vector
    solutions = [solution1, solution2];
end
% Calculate minimum time value at which solutions occur
tmin = -b / (2*a);
% Print solutions to command window
disp(['The solutions to the quadratic equation are ', num2str(solutions), '.']);
% Print minimum time value to command window
disp(['The minimum time value at which the solutions occur is ', num2str(tmin), '.']);
end
%% Define input variables
n = 100; % number of data points
x = linspace(0,10,n); % x values
y = sin(x) + normrnd(0,0.1,[1,n]); % y values with added noise

%% Fit a polynomial curve to the data using least squares method
p = polyfit(x,y,3); % coefficients of the polynomial curve of degree 3
y_fit = polyval(p,x); % evaluate the polynomial at the same x values

%% Plot the original data and fitted curve
plot(x,y,'o'); % plot data points
hold on;
plot(x,y_fit,'-'); % plot fitted curve
xlabel('x'); % label x axis
ylabel('y'); % label y axis
legend('Data','Fitted Curve'); % add legend
title('Polynomial Curve Fitting'); % add title

%% Calculate the residual between the fitted curve and the data
residual = y - y_fit; % difference between original data and fitted curve

%% Perform a Shapiro-Wilk test for normality on the residual
[~,p_value] = shapiro(residual); % p-value from the Shapiro-Wilk test

%% Print the p-value and determine if the residual is normally distributed
fprintf('The p-value for the Shapiro-Wilk test is: %.5f \n',p_value); % print p-value
if p_value < 0.05 % check if p-value is less than significance level of 0.05
    disp('The residual is not normally distributed.') % print message if p-value is less than 0.05
else
    disp('The residual is normally distributed.') % print message if p-value is greater than or equal to 0.05
end
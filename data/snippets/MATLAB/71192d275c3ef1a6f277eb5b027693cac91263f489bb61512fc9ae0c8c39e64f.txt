%% ODE Solver
% This function solves a system of ordinary differential equations (ODEs) using the
% fourth-order Runge-Kutta method. It takes in the initial conditions, the time
% vector, and a function handle for the system of ODEs.

function [t, y] = ode_solver(ode_fun, tspan, y0)
% ode_fun: function handle for the ODEs system
% tspan: time vector for integration
% y0: initial conditions

% Initialize variables
n = length(tspan); % length of time vector
h = tspan(2)-tspan(1); % time step
y = zeros(n, length(y0)); % solution matrix
y(1,:) = y0; % assign initial conditions to first row
t = tspan(1); % initial time value

for i = 1:n-1 % loop through time steps
    k1 = ode_fun(t,y(i,:)); % calculate k1
    k2 = ode_fun(t+(h/2), y(i,:)+(h/2)*k1); % calculate k2
    k3 = ode_fun(t+(h/2), y(i,:)+(h/2)*k2); % calculate k3
    k4 = ode_fun(t+h, y(i,:)+h*k3); % calculate k4
    
    % calculate next time step solution using fourth-order Runge-Kutta method
    y(i+1,:) = y(i,:) + (h/6)*(k1+2*k2+2*k3+k4);
    
    % update time value
    t = t + h;
end

end
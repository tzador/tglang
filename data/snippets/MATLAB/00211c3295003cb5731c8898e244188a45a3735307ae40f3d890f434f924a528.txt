function [roots,iter] = newton_raphson(func,guess,epsilon,max_iter)
% This function implements the Newton-Raphson method for finding roots of a given function.
% Func is the function whose roots are to be found.
% Guess is the initial estimate for the root.
% Epsilon is the desired accuracy.
% Max_iter is the maximum number of iterations to be performed.
% Roots is the vector of all the roots found.
% Iter is the number of iterations performed.
iter = 0; % initialize iteration counter
roots = []; % initialize roots vector
syms x; % declare x as a symbolic variable
f = symfun(func,x); % convert input function to a symbolic function
deriv = diff(f,x); % calculate the derivative of the function
while abs(subs(f,guess)) > epsilon 
% continue until error is less than desired accuracy
    iter = iter + 1; % increment iteration counter
    guess = guess - subs(f,guess)/subs(deriv,guess); % update guess using Newton's formula
    if iter > max_iter % check if maximum number of iterations has been reached
        disp('Maximum iteration limit reached!'); % display warning message
        break; % exit the loop
    end
    roots = [roots,guess]; % add new root to vector
end
end
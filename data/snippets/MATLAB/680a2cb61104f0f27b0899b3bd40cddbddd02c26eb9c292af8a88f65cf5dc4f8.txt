function [y, x] = bisection(f, a, b, tol)
% This function implements the bisection method to find the root of a given function within a certain tolerance.
% Input: f - function to find root of
% a, b - interval within which root is to be found
% tol - tolerance level for root approximation
% Output: y - approximate root
% x - vector of intermediate values

% Initialize variables
y = (a + b) / 2; % Approximate root
x = []; % Empty vector to store intermediate values
fa = f(a); % Function value at a
fb = f(b); % Function value at b

% Check if interval contains root
if(sign(fa)==sign(fb))
    error('Root not present in given interval');
end

% Check if root is a zero
if(y==0)
    return;
end

% Perform iterations until tolerance met
while(abs(f(y)) > tol)
    % Store intermediate value
    x = [x, y];
    
    % Update interval
    if(sign(fa)~=sign(f(y)))
        b = y;
    else
        a = y;
    end
    
    % Update approximate root
    y = (a + b) / 2;
end

% Print solution
fprintf('The approximate root is %.4f\n', y);

end
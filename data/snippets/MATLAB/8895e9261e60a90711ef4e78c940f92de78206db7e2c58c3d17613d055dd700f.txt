%% Defining variables
clear all; 
close all;

tol = 1e-5;  
max_iter = 100;

%% Newton's Method for solving non-linear equations
f = @(x) x.^3 + 4*x - 10;    % function
df = @(x) 3*x.^2 + 4;        % derivative of function

% initializing variables
x0 = 1.5;        % initial guess
fx = f(x0);      % function value at guess
dfx = df(x0);    % derivative value at guess
it = 1;          % iteration counter

% loop until stopping criteria is met
while abs(fx) > tol && it < max_iter
    % calculate next guess using Newton's Method
    x = x0 - fx/dfx;
    
    % update function and derivative values at new guess
    fx = f(x);
    dfx = df(x);
    
    % update iteration counter and current guess
    it = it + 1;
    x0 = x;
end

if abs(fx) <= tol
    fprintf("Solution found at x = %.5f after %d iterations", x0, it);
else
    fprintf("Solution not found within %d iterations", max_iter);
end
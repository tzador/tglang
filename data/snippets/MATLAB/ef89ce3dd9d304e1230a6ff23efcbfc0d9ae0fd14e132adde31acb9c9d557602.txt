% create a matrix with random numbers ranging from 1 to 10
A = 10 * rand(5, 5) + 1; 
% display the matrix
disp('Random matrix:');
disp(A);
% calculate the mean of each column and store it in a new matrix
colMeans = mean(A); 
% display the column means
disp('Column Means:');
disp(colMeans);
% create a new matrix with 0s in the upper triangular part of A and 1s in the lower triangular part
B = triu(A, 0) + tril(ones(size(A)), -1); 
% display the new matrix
disp('New Matrix:');
disp(B);
% flip the rows and columns of matrix A
C = fliplr(flipud(A)); 
% display the flipped matrix
disp('Flipped Matrix:');
disp(C);
% calculate the dot product of A and its transpose
dotProduct = A * A.'; 
% display the dot product
disp('Dot Product:');
disp(dotProduct);
% calculate the sum of the diagonal elements of B
diagonalSum = sum(diag(B)); 
% display the diagonal sum
disp('Diagonal Sum:');
disp(diagonalSum);
% create a vector with 10 equally spaced points between 0 and 1
D = linspace(0, 1, 10); 
% display the vector
disp('Equally Spaced Vector:');
disp(D);
% calculate the sine of each element in D
sineD = sin(D); 
% display the sine vector
disp('Sine of Equally Spaced Vector:');
disp(sineD);
% create a cell array with strings and numbers
cellArray = {'Hello', 1, 'World', 2}; 
% display the cell array
disp('Cell Array:');
disp(cellArray);
% concatenate matrix A with its transpose
E = [A A.']; 
% display the concatenated matrix
disp('Concatenated Matrix:');
disp(E);
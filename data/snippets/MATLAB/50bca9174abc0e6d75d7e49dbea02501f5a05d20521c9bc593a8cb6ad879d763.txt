% This code snippet implements the conjugate gradient method
% for solving a positive definite linear system Ax = b

% First, initialize the variables
A = [2, -1, 0; -1, 2, -1; 0, -1, 2];
b = [1; 2; 3];
x = zeros(length(b),1);
r = b - A*x;
p = r; % set initial direction vector to residual vector

% Set maximum number of iterations and tolerance for convergence
max_iters = 100;
tol = 1e-6;

% Start iteration loop
for iter = 1:max_iters
    alpha = (r'*r)/(p'*A*p);
    x = x + alpha*p;
    r_new = r - alpha*A*p;
    
    % Check for convergence
    if norm(r_new) < tol
        break;
    end
    
    % Update direction vector
    beta = (r_new'*r_new)/(r'*r);
    p = r_new + beta*p;
    
    % Update residual vector
    r = r_new;
end

% Print solution and number of iterations
disp("Solution is:");
disp(x);
disp("Number of iterations:");
disp(iter);
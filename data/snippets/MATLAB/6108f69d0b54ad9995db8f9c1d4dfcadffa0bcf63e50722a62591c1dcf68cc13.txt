% Generate a random matrix of size 100x100 with values ranging from 0 to 1
matrix = rand(100,100);

% Perform a singular value decomposition on the matrix
[U, S, V] = svd(matrix);

% Calculate the Moore-Penrose pseudoinverse of the matrix
pseudoInv = V * inv(S) * transpose(U);

% Convert the matrix to a binary image by setting a threshold value of 0.5
binaryImage = imbinarize(matrix, 0.5);

% Perform a morphological opening operation on the binary image with a disk structuring element of radius 2 pixels
openedImage = imopen(binaryImage, strel('disk', 2));

% Calculate the mean and standard deviation of the opened image
meanValue = mean(openedImage(:));
stdValue = std(openedImage(:));

% Apply a median filter with a neighborhood size of 3x3 on the opened image
filteredImage = medfilt2(openedImage, [3,3]);

% Calculate the normalized cross-correlation between the filtered image and the opened image
corr = normxcorr2(filteredImage, openedImage);

% Create a new figure window and plot the normalized cross-correlation as a surface plot
figure;
surf(corr);

% Label the axes and add a title
xlabel('X-axis');
ylabel('Y-axis');
zlabel('Correlation');
title('Normalized cross-correlation plot');
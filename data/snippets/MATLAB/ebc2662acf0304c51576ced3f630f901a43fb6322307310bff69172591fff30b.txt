% Define variables
x = linspace(0, 10, 100);   % Create a vector from 0 to 10 with 100 equally spaced points
y = sin(x);                 % Create a vector of the sine values at each point of x
z = cos(y);                 % Create a vector of the cosine values at each point of y
t = pi * exp(1j * x);       % Create a complex vector with phase angle of x
a = 3;                      % Define a constant value
b = a * z;                  % Element-wise multiplication of constant and vector z
 
% Plot the data
figure;                     % Initialize a new figure
subplot(2,2,1);             % Create a 2 by 2 subplot grid and plot in the first cell
plot(x, y, 'r-');           % Plot x and y with a red solid line
xlabel('x');                % Label x-axis
ylabel('y');                % Label y-axis
title('Sine vs. x');        % Add a title to the plot
grid on;                    % Turn on grid lines for the plot
 
% Add a second subplot
subplot(2,2,2);             % Plot in the second cell of the subplot grid
plot(x, z, 'b--');          % Plot x and z with a blue dashed line
xlabel('x');                % Label x-axis
ylabel('z');                % Label y-axis
title('Cosine vs. x');      % Add a title to the plot
grid on;                    % Turn on grid lines for the plot
 
% Add a third subplot
subplot(2,2,[3,4]);         % Plot in the third and fourth cells of the subplot grid
plot(real(t), imag(t), 'g.');   % Plot the real values of t vs. the imaginary values with green dots
xlabel('Real');             % Label x-axis
ylabel('Imaginary');        % Label y-axis
title('Phase Plane');       % Add a title to the plot
grid on;                    % Turn on grid lines for the plot
 
% Create a new figure and plot a surface
figure;                     % Initialize a new figure
[X, Y] = meshgrid(-2:.2:2, -2:.2:2);   %Create coordinate matrices for x and y
Z = X .* exp(-X.^2 - Y.^2);     % Calculate z values using x and y
surf(X, Y, Z);              % Plot a surface using the x, y, and z values
shading interp;             % Interpolate shading for smoother surface appearance
xlabel('x');                % Label x-axis
ylabel('y');                % Label y-axis
zlabel('z');                % Label z-axis
title('Surface Plot');      % Add a title to the plot
 
% Calculate the inverse of a matrix and its condition number
A = [2,3,1; 6,2,9; 8,5,4];  % Create a 3x3 matrix
inv_A = inv(A);             % Calculate the inverse of A using the "inv" function
cond_A = cond(A);           % Calculate the condition number of A using the "cond" function
 
% Display the results
disp("The inverse of matrix A is:");
disp(inv_A);
disp("The condition number of matrix A is:");
disp(cond_A);
%This code snippet creates a function to solve a 3-variable system of linear equations using Gauss-Seidel iteration
%Input Parameters: matrix A, vector b, initial guesses x0, maximum number of iterations max_iter, and convergence tolerance tol
%Output: solution vector x and number of iterations iter

function [x, iter] = gauss_seidel(A, b, x0, max_iter, tol)

%initialize variables
n = length(b); %number of variables
x = x0; %setting initial guess as solution vector
iter = 0; %initializing iteration count
residual = inf; %setting initial residual to be larger than tolerance

%perform Gauss-Seidel iteration until convergence or max iterations reached
while(residual > tol && iter < max_iter)
    
    %update solution vector x using current guess
    for i=1:n
        x(i) = (b(i) - A(i,1:i-1)*x(1:i-1) - A(i,i+1:n)*x0(i+1:n)) / A(i,i);
    end
    
    %calculate new residual and increment iteration count
    residual = norm(A*x-b);
    iter = iter + 1;
    
end

end
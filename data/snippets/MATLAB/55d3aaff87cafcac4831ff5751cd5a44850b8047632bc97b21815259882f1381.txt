%% Create a matrix
% This code snippet shows how to create a matrix in MATLAB
% The matrix created is a 3x3 matrix of random integers between 1 and 10

matrix = randi([1,10],[3,3]); % use the randi function to create a matrix of random integers
% Arguments: (range, size)
% First argument is the range of values, second argument is the size of matrix i.e. 3x3
% Output: creates a matrix with random integers between 1 and 10

disp(matrix); % use the disp function to display the matrix
% Argument: (matrix)
% Output: displays the matrix in the command window

%% Compute the sum of the matrix elements
% This section shows how to compute the sum of all elements in the matrix

% Method 1: Using a for loop
sum = 0; % initialize sum variable to 0
for i=1:size(matrix,1) % iterate over the rows of the matrix
    for j=1:size(matrix,2) % iterate over the columns of the matrix
        sum = sum + matrix(i,j); % add each element to the sum variable
    end
end
disp("Sum of all matrix elements using for loop: " + sum);

% Method 2: Using the sum function
totalSum = sum(sum(matrix)); % use the sum function twice to compute sum of all elements
% First sum function computes the sum of each column
% Second sum function computes the sum of all column sums
disp("Sum of all matrix elements using sum function: " + totalSum);

% Method 3: Using dot notation and the colon operator
sumDot = sum(matrix(:)); % use the colon operator to concatenate all elements into a vector
% Syntax: start:step:end
% Default start is 1, default step is 1, default end is the total number of elements
% Output of colon operator in this case: [1,2,3,4,5,6,7,8,9]
% Dot notation is used to compute the sum of the vector instead of the matrix
disp("Sum of all matrix elements using dot notation and colon operator: " + sumDot);
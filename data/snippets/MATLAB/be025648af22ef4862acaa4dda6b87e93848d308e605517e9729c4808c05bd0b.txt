%% This code snippet demonstrates how to implement a 2D convolution using MATLAB.
% Initialize a 3x3 filter and a 5x5 matrix with random values.
filter = rand(3,3);
matrix = rand(5,5);

% Flip the filter horizontally and vertically.
filter_flipped = flipud(fliplr(filter));

% Get size and dimensions of the matrix and filter.
[filter_height, filter_width] = size(filter);
[matrix_height, matrix_width] = size(matrix);

% Pad the matrix with zeros to avoid out-of-bounds errors.
pad_height = floor(filter_height/2); 
pad_width = floor(filter_width/2);
matrix_padded = padarray(matrix,[pad_height pad_width],0,'both');

% Initialize the result matrix.
convolution = zeros(matrix_height, matrix_width);

% Perform convolution by sliding the filter over the matrix.
for i = 1 : matrix_height
    for j = 1 : matrix_width
        % Extract the submatrix that overlaps with the filter.
        submatrix = matrix_padded(i:i+filter_height-1, j:j+filter_width-1);
        
        % Multiply the submatrix with the flipped filter and sum the values.
        result = sum(sum(submatrix .* filter_flipped));
        
        % Assign the result to the corresponding position in the convolution matrix.
        convolution(i,j) = result;
    end
end

% Display the original matrix, filter and result.
disp("Original Matrix:")
disp(matrix)
disp("Filter:")
disp(filter)
disp("Result of Convolution:")
disp(convolution)
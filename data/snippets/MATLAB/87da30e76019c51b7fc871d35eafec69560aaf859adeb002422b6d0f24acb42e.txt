%%% Function to perform Fast Fourier Transform
%%% Input: Signal data in time domain
%%% Output: Signal data in frequency domain

function fft_signal = perform_fft(signal_data)

% Determine number of samples in input signal
N = length(signal_data);

% Calculate the complex exponential term of the Fourier transform
exponential_term = exp(-2i*pi/N);

% Initialize the output signal array
fft_signal = zeros(1, N);

% Loop through each sample and perform calculation
for k = 0 : N-1
    % Initialize variable to store current sum
    current_sum = 0;
    
    % Loop through each input signal sample
    for n = 0 : N-1
        % Calculate the corresponding cosine value
        cosine_val = cos(2*pi*n*k / N);
        
        % Calculate the corresponding sine value
        sine_val = sin(2*pi*n*k / N);
        
        % Multiply the input signal sample by the complex exponential term
        complex_exp = signal_data(n+1) * exponential_term^(n*k);
        
        % Calculate the current sum
        current_sum = current_sum + complex_exp * (cosine_val - 1i*sine_val);
    end
    
    % Store the current sum in the output signal array
    fft_signal(k+1) = current_sum;
end

end
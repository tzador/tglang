%%% This code snippet generates a 3-dimensional Hilbert curve

%%% Define parameters
n = 3;
m = 3^n;
order = log(m)/log(2);

%%% Generate Hilbert curve coordinates
H = zeros(m^2*m,2);
D = [0 0; 0 1; 1 1; 1 0];
for k = 1:n-1
    H(1:(4^k),:) = 2*H(1:(4^k),:);
    for i = 1:4
        H(((i-1)*(4^k)+1):(i*(4^k)),:) = H(((i-1)*(4^k)+1):(i*(4^k)),:) + repmat(D(i,:),[4^(n-k) 1]);
    end
end

%%% Map coordinates to 3-dimensional space
n1 = H(:,1);
n2 = H(:,2);
n3 = mod(n1+n2,2); %%% apply XOR operator to generate third dimension
X = n3.*n1; %%% map first dimension to X-axis
Y = n3.*n2; %%% map second dimension to Y-axis
Z = (1-n3).*max(n1,n2); %%% map third dimension to Z-axis

%%% Plot Hilbert curve in 3D space
figure;
plot3(X,Y,Z,'-','Color',[0.5 0.5 0.5],'LineWidth',1);
axis off;
title(['3D Hilbert Curve, order = ' num2str(n)]);
%% generate a random number and perform multiple operations
% initialize a variable 'num' with a random integer between 1 and 100
num = randi([1, 100]);

% create a 1x10 matrix filled with random floats between 0 and 1
random_matrix = rand(1, 10); 

% calculate the square root of 'num' and store it in a variable 'sqr_num'
sqr_num = sqrt(num);

% raise each element in 'random_matrix' to the power of 'sqr_num'
raised_matrix = random_matrix.^sqr_num;

% find the maximum value in 'raised_matrix' and store the index
[max_val, index] = max(raised_matrix);

% loop through each element in 'raised_matrix'
for i = 1:length(raised_matrix)
    % if statement to check if the element is less than or equal to 0.5
    if raised_matrix(i) <= 0.5
        % set the element to 0
        raised_matrix(i) = 0;
    end
end

% create a 2x2 cell array
cell_array = cell(2, 2);

% populate the first row of 'cell_array' with 'num' and 'sqr_num'
cell_array(1,:) = {num, sqr_num};

% populate the second row of 'cell_array' with 'raised_matrix' and 'max_val'
cell_array(2,:) = {raised_matrix, max_val};

% calculate the mean of 'raised_matrix' and display it with two decimal places
fprintf('The mean of raised matrix is: %.2f\n', mean(raised_matrix)); 

% use the index to display the value and position of the maximum value in 'raised_matrix'
fprintf('The maximum value in raised matrix is: %.4f at position %d\n', max_val, index);

% create a 3x3 identity matrix
identity_matrix = eye(3);

% multiply 'identity_matrix' by 5 and store the result in a new variable 'multiplied_matrix'
multiplied_matrix = identity_matrix * 5;

% subtract 'multiplied_matrix' from 'raised_matrix' and store the result in a new variable 'diff_matrix'
diff_matrix = raised_matrix - multiplied_matrix;

% plot 'diff_matrix' as a line graph with a red dotted line and a marker at each data point
plot(diff_matrix, '--ro');

% add a title, axis labels, and a legend to the graph
title('Difference between Raised Matrix and Multiplied Identity Matrix');
xlabel('Index');
ylabel('Value');
legend('Difference');

% display a message indicating that the code has been successfully executed
disp('Code executed successfully!');
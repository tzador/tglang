%% Preprocessing
Fs = 10000;                  % Define the sampling frequency
t = linspace(0,1,Fs);        % Create a time vector from 0 to 1 second
signal = sin(2*pi*50*t) ...  % Generate a 50 Hz sinusoidal signal
         + 2*sin(2*pi*120*t);% Add a second 120 Hz component
noise = 2*randn(size(t));     % Generate random noise
x = signal + noise;           % Add noise to the signal
%% FFT analysis
Y = fft(x);                  % Compute the Fourier transform
L = length(t);               % Determine the length of the signal
P2 = abs(Y/L);               % Compute two-sided spectrum
P1 = P2(1:L/2+1);            % Select the one-sided spectrum
P1(2:end-1) = 2*P1(2:end-1); % Double the amplitudes for single-sided spectrum
f = Fs*(0:(L/2))/L;          % Generate frequency axis
%% Plot results
subplot(2,1,1)       % Plot original signal
plot(t,x)
title('Signal with Random Noise')
xlabel('Time (s)')
ylabel('Amplitude')
subplot(2,1,2)       % Plot single-sided amplitude spectrum
plot(f,P1)
title('Single-Sided Amplitude Spectrum')
xlabel('Frequency (Hz)')
ylabel('Amplitude')
%% Split data into training and testing sets
train_ratio = 0.8; % ratio of data to be used for training
train_index = randperm(size(data, 1), round(size(data, 1)*train_ratio)); % generate random indices for training data
train_data = data(train_index,:); % create training set using random indices
test_data = data(setdiff(1:size(data, 1), train_index),:); % create testing set using complement of training indices
%% Create and train machine learning model
model = fitctree(train_data(:,1:end-1),train_data(:,end),'MinLeafSize',5); % create decision tree classifier with minimum leaf size 5
trained_model = fitcensemble(train_data(:,1:end-1),train_data(:,end),'Method','Subspace','Learners','Trees','CrossVal','On'); % create ensemble of decision trees using cross-validation
%% Evaluate test data using trained model
predictions = predict(trained_model,test_data(:,1:end-1)); % use trained model to predict labels for test data
accuracy = sum(predictions==test_data(:,end))/numel(test_data(:,end)); % calculate accuracy of predictions by comparing with actual labels
%% Polynomial Interpolation using Lagrange Method

% Define the function to be interpolated
f = @(x) 2*sin(x) + 3*x.^2;

% Define the interval on which the interpolation will be done
a = 0;
b = 5;

% Choose the number of interpolation points
n = 6;

% Define the interpolation points within the interval
xi = linspace(a, b, n);

% Calculate the function values at each interpolation point
yi = f(xi);

% Initialize the coefficient matrix with zeros
M = zeros(n);

% Loop through each row and column of the matrix
for i = 1:n
    for j = 1:n
        % Calculate the coefficients using the Lagrange method
        if i == j
            M(i,j) = 1;
        else
            M(i,j) = xi(i)^(j-1);
        end
    end
end

% Solve for the coefficients of the interpolating polynomial
c = M\yi';

% Define the domain over which the interpolating polynomial will be evaluated
x = linspace(a, b, 100);

% Calculate the values of the interpolating polynomial at each point in the domain
p = zeros(size(x));

% Loop through each point in the domain
for i = 1:length(x)
    % Calculate the value of the polynomial at the current point
    for j = 1:n
        p(i) = p(i) + c(j)*x(i)^(j-1);
    end
end

% Plot the original function and the interpolating polynomial
plot(x, f(x), x, p);
legend('Original function', 'Interpolating polynomial');
xlabel('x');
ylabel('y');
title('Polynomial Interpolation using Lagrange Method');
grid on;
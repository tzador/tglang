% This code snippet calculates and plots the trajectory of a particle
% moving in a two-dimensional gravitational field

% Define gravitational constant
G = 6.674e-11; % m^3/kg*s^2

% Set initial conditions
x0 = 0; % m
y0 = 0; % m
vx0 = 2; % m/s
vy0 = 3; % m/s
t0 = 0; % s
tf = 10; % s
dt = 0.01; % s

% Set up arrays to store data
x = zeros(1, round((tf-t0)/dt)); % position arrays with length equal to number of time steps
y = zeros(1, round((tf-t0)/dt));
vx = zeros(1, round((tf-t0)/dt)); % velocity arrays
vy = zeros(1, round((tf-t0)/dt));
t = zeros(1, round((tf-t0)/dt)); % time array
i = 1; % index variable to store data in arrays

% Loop through time steps
for ti = t0:dt:tf
    % Calculate acceleration in x and y directions
    ax = -G*x(i)/((x(i)^2 + y(i)^2)^(3/2)); % m/s^2
    ay = -G*y(i)/((x(i)^2 + y(i)^2)^(3/2)); % m/s^2
    
    % Update velocities
    vxnew = vx(i) + ax * dt; % m/s
    vynew = vy(i) + ay * dt; % m/s
    
    % Update positions
    xnew = x(i) + vxnew * dt; % m
    ynew = y(i) + vynew * dt; % m
    
    % Store data in arrays
    vx(i+1) = vxnew; 
    vy(i+1) = vynew;
    x(i+1) = xnew;
    y(i+1) = ynew;
    t(i+1) = ti+dt;
    
    % Update index variable
    i = i + 1;
end

% Plot trajectory
plot(x, y,'b-', 'LineWidth', 2); % plot x and y positions on same graph
xlabel('x (m)'); % label x axis
ylabel('y (m)'); % label y axis
title('Projectile Trajectory'); % give title to plot
axis equal; % make axis scales equal
grid on; % add grid lines to plot
% This code snippet computes the solution of a linear system of equations using the Gauss-Jordan elimination method
% Inputs:
% A - coefficient matrix
% b - constant vector
% Output:
% x - solution vector
% Defining a function for Gauss-Jordan elimination
function x = gauss_jordan(A, b)

% Initialization
n = length(b); % Size of the system
A = [A b]; % Augmented matrix

% Performing forward elimination
for i = 1:n-1 % Loop for each pivot row
    pivot = A(i,i); % Pivot element
    if pivot == 0 % Checking for zero pivot
        error('Zero pivot encountered.') % Error message
    end
    for j = i+1:n % Loop for each row below pivot row
        factor = A(j,i) / pivot; % Calculation of elimination factor
        A(j,:) = A(j,:) - factor * A(i,:);% Row operation
    end
end % Forward elimination complete

% Performing backward substitution
% Initializing solution vector
x = zeros(n,1);
for i = n:-1:1 % Loop for each row of upper triangular matrix
    x(i) = A(i,n+1) / A(i,i); % Solution of each variable
    for j = i-1:-1:1 % Loop for each row above diagonal
        A(j,n+1) = A(j,n+1) - A(j,i) * x(i); % Updating constant vector
    end
end % Backward substitution complete

end % Function ends

% Calling the function
A = [1 -2 3; 2 -1 2; 3 4 -5]; % Coefficient matrix
b = [1; 2; 3]; % Constant vector
x = gauss_jordan(A,b) % Solution vector

% The output should be:
% x =
%     1.0000
%     0.6667
%     1.3333
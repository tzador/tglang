%% Reverse Correlation Algorithm
% This code snippet implements the reverse correlation algorithm, which is
% a popular method for analyzing neuronal response data. It is used to
% determine the stimulus that is most likely to have caused a given neuronal
% response.
% 
% Input:
% - spike_train: A binary vector representing the neuron's spike train
%   where each element indicates the presence or absence of a spike at a
%   given time point.
% - stimulus_set: A matrix of size T x N where T is the number of time
%   points and N is the number of different stimuli presented. Each column
%   contains the stimulus presented at a given time point.
% - time_delay: The amount of time (in milliseconds) that the stimulus
%   precedes the neuronal response.
%
% Output:
% - stimulus_estimate: A vector of length N representing the estimated
%   stimulus that most likely caused the given neuronal response.

function stimulus_estimate = reverse_correlation(spike_train, stimulus_set, time_delay)
    %% Calculate Autocorrelation of the Spike Train
    autocorr_spikes = xcorr(spike_train, spike_train);
    
    %% Calculate Cross-correlation Between Spike Train and Stimulus
    crosscorr_stimulus = xcorr(stimulus_set, spike_train);
    
    %% Calculate the Cross-correlogram
    crosscorrelogram = crosscorr_stimulus(time_delay+1:end-time_delay);
    
    %% Calculate the Reverse Correlation
    reverse_correlation = mean(autocorr_spikes) - mean(crosscorrelogram);
    
    %% Estimate Stimulus
    [~, stimulus_idx] = max(reverse_correlation);
    stimulus_estimate = stimulus_set(:, stimulus_idx);
end
% This code snippet uses a for loop and conditional statements to simulate a two-dimensional 
% random walk for a particle on a grid of specified size.

% Define grid size and starting position of the particle
grid_size = 10;
pos_x = grid_size/2;
pos_y = grid_size/2;

% Initialize position vectors
x_positions = [pos_x];
y_positions = [pos_y];

% Set number of steps for random walk
num_steps = 100;

% Loop through each step
for i = 1:num_steps
    % Generate a random number to determine the direction of the next step
    next_step = rand(1);
    
    % Move the particle one unit in the designated direction
    if next_step < 0.25 % move up
        pos_y = pos_y + 1;
    elseif next_step < 0.5 % move right
        pos_x = pos_x + 1;
    elseif next_step < 0.75 % move down
        pos_y = pos_y - 1;
    else % move left
        pos_x = pos_x - 1;
    end
    
    % Ensure particle does not go out of bounds
    if pos_x < 1
        pos_x = 1;
    elseif pos_x > grid_size
        pos_x = grid_size;
    end
    
    if pos_y < 1
        pos_y = 1;
    elseif pos_y > grid_size
        pos_y = grid_size;
    end
    
    % Add new positions to position vectors
    x_positions = [x_positions, pos_x];
    y_positions = [y_positions, pos_y];
end

% Plot the random walk path on the grid
plot(x_positions, y_positions, '-o');
axis([0 grid_size 0 grid_size]);
title('Two-Dimensional Random Walk on a Grid');
xlabel('x position');
ylabel('y position');
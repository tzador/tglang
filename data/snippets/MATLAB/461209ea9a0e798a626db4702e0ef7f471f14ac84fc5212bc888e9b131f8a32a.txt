%% Calculates the eigenvalues of a symmetric matrix
% Input:
% A - the symmetric matrix
% Output:
% eigenvalues - a vector containing the eigenvalues of the matrix A
function eigenvalues = calculate_eigenvalues(A)
n = size(A,1);
tol = 1e-10; % tolerance for convergence
eigenvalues = zeros(n,1);
Q = eye(n); % initial orthornormal basis
while max(max(abs(A-diag(diag(A))))) > tol % loop until convergence
    [i,j] = max(abs(A-diag(diag(A)))); % find maximum off-diagonal entry
    j = j(1); % choose first entry if two entries have same magnitude
    i = i(j);
    theta = atan2(2*A(i,j),(A(j,j)-A(i,i)))/2; % calculate rotation angle
    R = eye(n); % create rotation matrix
    R(i,i) = cos(theta);
    R(i,j) = sin(theta);
    R(j,i) = -sin(theta);
    R(j,j) = cos(theta);
    Q = Q*R; % update orthornormal basis
    A = R'*A*R; % transform matrix into basis of rotated eigenvectors
end % end of while loop
eigenvalues = diag(A); % eigenvalues are the diagonal entries of A
eigenvalues = sort(eigenvalues, 'descend'); % sort eigenvalues in descending order
end % end of function
%%% Comments and Assignment %%%
% This is a comment in MATLAB, starting with a % symbol.
% Variables in MATLAB can be assigned using the = symbol.

% Variables can be numerical or strings.
num_var = 5; % Assignment of numerical variable with value 5.
str_var = "Hello World"; % Assignment of string variable with value "Hello World".

% MATLAB is case sensitive, so num_var is not the same as NUM_VAR or Num_Var.

% In MATLAB, you can perform operations on variables.
% Addition, subtraction, multiplication, division, and exponentiation.
result = num_var + 10; % Adds num_var (5) to 10, result = 15.
result = result - 5; % Subtracts 5 from result (15), result = 10.
result = result * 2; % Multiplies result (10) by 2, result = 20.
result = result / 4; % Divides result (20) by 4, result = 5.
result = result ^ 2; % Raises result (5) to the power of 2, result = 25.

% MATLAB also has built-in functions for more complex operations.
% For example, the sin() function calculates the sine of a given angle.
angle = pi/4; % Assigns angle variable with value pi/4.
result = sin(angle); % Calculates the sine of angle (pi/4), result = 0.7071.

% You can also use logical operations to evaluate conditions.
% Logical operators include < (less than), > (greater than), == (equal to), and ~= (not equal to).
% The result of a logical operation is a boolean value (true or false).
result = 5 < 10; % Evaluates to true because 5 is less than 10.
result = 5 > 10; % Evaluates to false because 5 is not greater than 10.
result = 5 == 5; % Evaluates to true because 5 is equal to 5.
result = 5 ~= 5; % Evaluates to false because 5 is not equal to 5.

% Conditional statements can be used to execute code based on certain conditions.
% The if statement checks if a condition is true, and executes the code inside the statement if it is.
if result == true
    disp("Result is true"); % Prints "Result is true"
end

% You can also have multiple conditions using the elseif and else statements.
result = 10;
if result < 5
    disp("Result is less than 5");
elseif result > 10
    disp("Result is greater than 10");
else
    disp("Result is between 5 and 10"); % Prints "Result is between 5 and 10"
end

%%% Loops %%%
% Loops allow you to repeat code for a certain number of times or until a condition is met.

% The for loop is used to iterate through a sequence of values.
% In this case, the loop will iterate from 1 to 5 and print the value of i each iteration.
for i = 1:5
    disp(i); % Prints 1, 2, 3, 4, 5 on separate lines.
end

% The while loop is used to repeat code while a certain condition is true.
% This loop will print every other number between 1 and 10.
i = 1;
while i <= 10
    disp(i);
    i = i + 2; % Increments i by 2 each iteration.
end
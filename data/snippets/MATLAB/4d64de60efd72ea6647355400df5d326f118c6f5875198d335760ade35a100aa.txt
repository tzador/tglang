% This code snippet generates a NISTprime.m file that checks if a given number is a prime number or not

% Initializing variables
num = input('Enter a number: '); % input the number to be checked
flag = 0; % flag to check if number is prime or not

% Checking if number is a prime number
for i = 2:num-1 % iterating through all numbers from 2 to num-1
    if mod(num, i) == 0 % checking if num is divisible by i with no remainder
        flag = 1; % setting flag to 1 if num is not prime
        break; % exiting loop if num is not prime
    end
end

% Displaying result
if flag == 1 % checking value of flag
    disp([num, ' is not a prime number']); % displaying result if not prime
else
    disp([num, ' is a prime number']); % displaying result if prime
end

% Creating file
fileID = fopen('NISTprime.m', 'w'); % creating NISTprime.m file
fprintf(fileID, '%s %g %s\n', 'function result = NISTprime(num)', num, '% function to check if a number is prime or not');
fprintf(fileID, '%s %g %s\n', 'result = ', flag, '% flag to indicate if number is prime (0) or not (1)');
fprintf(fileID, '%s\n', '% Checking if number is a prime number');
fprintf(fileID, '%s\n', 'for i = 2:num-1 % iterating through all numbers from 2 to num-1');
fprintf(fileID, '%s\n', 'if mod(num, i) == 0 % checking if num is divisible by i with no remainder');
fprintf(fileID, '%s\n', 'flag = 1; % setting flag to 1 if num is not prime');
fprintf(fileID, '%s\n', 'break; % exiting loop if num is not prime');
fprintf(fileID, '%s\n', 'end');
fprintf(fileID, '%s\n', '% Displaying result');
fprintf(fileID, '%s\n', 'if flag == 1 % checking value of flag');
fprintf(fileID, '%s\n', 'disp([num, ', ' is not a prime number']); % displaying result if not prime
fprintf(fileID, '%s\n', '% display([num, num2str(num), , ' is a prime number']); % displaying result if prime
fclose(fileID); % closing file
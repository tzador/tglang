% This code snippet performs linear regression on a given dataset
% and plots the regression line along with the original data points

% Clear all existing variables and close all figures
clear all;
close all;

% Generate random data points
x = rand(1,50)*10;
y = rand(1,50)*5;

% Add random noise to the data points
x = x + randn(1,50);
y = y + randn(1,50);

% Define the hypothesis function
hypothesis = @(theta, x) theta(1) + theta(2)*x;

% Initialize theta parameters
theta = [0; 0];

% Define the cost function
cost = @(theta, x, y) sum((hypothesis(theta, x) - y).^2) / (2*length(x));

% Set learning rate and number of iterations
alpha = 0.01;
num_iter = 1000;

% Perform gradient descent to minimize the cost function
for i = 1:num_iter
    h = hypothesis(theta, x);
    error = h - y;
    theta = theta - (alpha/length(x)) * [sum(error); sum(error.*x)];
end

% Plot original data points
scatter(x,y);
hold on;

% Plot regression line using calculated theta parameters
plot(x, hypothesis(theta, x), 'r');

% Set axis labels and legend
xlabel('X');
ylabel('Y');
legend('Data Points', 'Regression Line'); 

% Print final theta parameters and cost
disp("Final Theta:");
disp(theta);
fprintf("Final Cost: %f\n", cost(theta, x, y));
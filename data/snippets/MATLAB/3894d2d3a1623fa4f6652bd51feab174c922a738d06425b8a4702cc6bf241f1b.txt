%% Generate a random matrix A
rng(1234); % Set seed for reproducibility
A = rand(10); % Create a 10x10 matrix with random values from uniform distribution (0-1)

%% Find the eigenvalues and eigenvectors of A
[eigVec, eigVal] = eig(A); % Returns matrix of eigenvectors obtained from diagonalization and diagonal matrix of eigenvalues

%% Calculate the condition number of A
condA = cond(A); % Calculate the condition number of matrix A, which measures the sensitivity of the output to small changes in the input

%% Find the determinant of A
detA = det(A); % Calculate the determinant of matrix A, which is a measure of the scaling factor of the linear transformation represented by the matrix

%% Calculate the inverse of A
invA = inv(A); % Calculate the inverse of matrix A, which can be used to solve systems of linear equations

%% Plot a scatter plot of the eigenvalues of A
scatter(real(diag(eigVal)), imag(diag(eigVal)), 'filled'); % Create a scatter plot of the real and imaginary parts of the eigenvalues of matrix A

%% Calculate the norm of A
normA = norm(A); % Calculate the norm of matrix A, which is a measure of the size of the matrix

%% Calculate the Frobenius norm of A
normFrobA = norm(A, 'fro'); % Calculate the Frobenius norm of matrix A, which is the square root of the sum of the squares of all the elements in the matrix

%% Calculate the trace of A
traceA = trace(A); % Calculate the trace of matrix A, which is the sum of the elements on the main diagonal of the matrix

%% Display the results
disp('- Eigenvalues of A:');
disp(eigVal); % Display the diagonal matrix of eigenvalues
disp('- Condition number of A:');
disp(condA); % Display the condition number of A
disp('- Determinant of A:');
disp(detA); % Display the determinant of A
disp('- Inverse of A:');
disp(invA); % Display the inverse of A
disp('- Norm of A:');
disp(normA); % Display the norm of A
disp('- Frobenius norm of A:');
disp(normFrobA); % Display the Frobenius norm of A
disp('- Trace of A:');
disp(traceA); % Display the trace of A
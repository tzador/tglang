function [eigenvalues] = power_method(A, x0, tol, max_iter)
% Power Method with Shifts for computing the dominant eigenvalues of a square matrix A
% Inputs:
% A: square matrix
% x0: initial guess for eigenvector
% tol: tolerance for convergence
% max_iter: maximum number of iterations
%
% Output:
% eigenvalues: approximated dominant eigenvalues of the matrix A
%
% Author: [Your Name]
% Date: [Current Date]
%
n = size(A,1); % size of matrix A
xk = x0; % initializing xk
lambda_old = 0; % initializing old eigenvalue
lambda_new = 1; % initializing new eigenvalue
k = 0; % initializing iteration counter
while abs(lambda_new - lambda_old) > tol && k < max_iter
    lambda_old = lambda_new; % updating old eigenvalue
    yk = A*xk; % computing yk
    lambda_new = max(abs(yk)); % computing new eigenvalue by taking the maximum absolute value of yk
    xk = yk/lambda_new; % updating xk
    k = k+1; % incrementing iteration counter
end
eigenvalues = lambda_new; % storing eigenvalues 
end
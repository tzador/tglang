%% Define Variables %%
% Define the size of the array n x n
n = 5;

% Generate random integer values between 1 and 100 for the array
A = randi([1, 100], n, n);

% Define the number of iterations
number_of_iterations = 100;

% Initialize variables for diagonal elements
d = zeros(n, 1);
d_prev = zeros(n, 1);

%% Perform Power Iteration %%
% Iterate through the number of iterations
for i = 1:number_of_iterations
    
    % Multiply previous iteration diagonal elements by array
    d_prev = d;
    d = A*d_prev;
    
    % Find the maximum element in the diagonal
    [max_element, index] = max(d);
    
    % Normalize all elements in the diagonal
    d = d/max_element;
    
    % Calculate error between current and previous diagonal elements
    error = abs(d - d_prev);
    
    % Check if error is below threshold (convergence)
    if max(error) < 0.0001
        fprintf('Power iteration has converged after %d iterations.\n', i);
        break
    end
end

%% Output %%
fprintf('The dominant eigenvalue is: %f\n', max(d));
fprintf('The dominant eigenvector is:\n');
disp(d);
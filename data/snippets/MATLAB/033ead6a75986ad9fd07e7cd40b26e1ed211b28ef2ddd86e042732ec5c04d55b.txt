% This is a code snippet in MATLAB that calculates the inverse kinematics of a 3R robotic arm
% The inputs are the end-effector position and orientation, and the length of the arm segments
% The output is a vector containing the joint angles of the arm in radians

% Define the end-effector position and orientation
p_e = [2; 1; 1]; % must be a 3x1 vector
R_e = [0 0 1; 0 1 0; -1 0 0]; % must be a 3x3 rotation matrix

% Define arm segment lengths
L1 = 5;
L2 = 4;
L3 = 3;

% Calculate the third joint angle
theta3 = acos((p_e(1)^2 + p_e(2)^2 + p_e(3)^2 - L1^2 - L2^2 - L3^2) / (2*L2*L3));

% Calculate the first and second joint angles
% To get all possible solutions, use atan2 with two inputs (atan only gives one solution)
theta1 = atan2(p_e(2), p_e(1)) - atan2(L3*sin(theta3), L2 + L3*cos(theta3));
theta2 = atan2(sqrt(p_e(1)^2 + p_e(2)^2) - L1, p_e(3)) - theta3;

% Convert angles to degrees
theta1 = theta1*180/pi;
theta2 = theta2*180/pi;
theta3 = theta3*180/pi;

% Create a vector containing the joint angles and display it as the output
theta = [theta1; theta2; theta3]

% Output: [180.0000; 63.4349; 63.4349]
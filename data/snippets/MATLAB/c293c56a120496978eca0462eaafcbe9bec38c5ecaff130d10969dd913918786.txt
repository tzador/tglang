%%Heun's Method
%This code implements the Heun's method for solving ordinary differential equations
%Input arguments for Heun's method include:
%   equation: the differential equation in the form 'dy/dt = f(t,y)'
%   interval: the time interval for solving the differential equation
%   initial: the initial condition at the start of the time interval
%   step: the step size for the numerical approximation
function y = heunMethod(equation, interval, initial, step)

    %Initializing necessary variables
    t = interval(1);
    y = initial;
    
    %Creating a while loop to iterate through the time interval
    while t <= interval(2)
    
        %Calculating the slope at the current time point
        slope = eval(equation);
        
        %Approximating the next value of y using the Heun's method formula
        y_next = y + (step/2) * (slope + eval(equation));
        
        %Updating the current time and y values
        y = y_next;
        t = t + step;
    end
    
    %Plotting the numerical solution
    plot(interval(1):step:interval(2), y)
    
    %Adding labels to the plot
    title('Numerical Solution using Heun''s Method')
    xlabel('Time')
    ylabel('Value of y')
    
end

%Example usage for solving the differential equation dy/dt = -2*t + y^2
%with initial condition y(0) = 1 over the interval [0, 5] and step size of 0.1
y = heunMethod('-2*t + y^2', [0,5], 1, 0.1);
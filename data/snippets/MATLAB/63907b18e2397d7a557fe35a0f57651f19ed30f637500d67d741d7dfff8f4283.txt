%% Define constants and variables

%% Input prompt for user
fprintf('Enter a value for x: ');

%% User input
x = input(' ');

%% Calculations
y = 2*x^3 + 3*x^2 - 2*x + 1; % Equation for y
z = x/2 + exp(-x); % Equation for z

%% Display outputs to user
fprintf('\nThe value of y is %f and the value of z is %f\n\n', y, z);

%% Plotting
t = linspace(0, 10, 100); % Generate a vector of 100 equally spaced points from 0 to 10
u = sin(t); % Equation for u
v = cos(t); % Equation for v
plot(t, u, 'r--', t, v, 'b-'); % Plot u and v as red dashed and blue solid lines, respectively
xlabel('Time (s)'); % Label for x-axis
ylabel('Amplitude'); % Label for y-axis
title('Sine and Cosine Waves'); % Title for plot
legend('Sine', 'Cosine'); % Legend for plot

%% Looping through arrays
A = [5, 10, 15, 20, 25]; % Define an array A
B = ones(1, length(A)); % Create an array B of ones with the same length as A
for i = 1:length(A) % Loop through every element in A
    B(i) = A(i) + 2; % Add 2 to each element in A and store in corresponding element in B
end
disp(B); % Display updated array B

%% Error handling
try % Attempt the following code
    x = input('Enter a positive number: '); % Prompt user for input
    if x < 0 % Check if input is negative
        error('Input must be positive'); % Throw error if input is negative
    end
catch exception % If error is thrown, execute the following code
    disp(['Error: ', exception.message]); % Display error message
end
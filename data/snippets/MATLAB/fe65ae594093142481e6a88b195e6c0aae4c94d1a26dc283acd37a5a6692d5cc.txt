function [x, y] = bisection_method(fun, a, b, tol)

% This function implements the bisection method to find the root of a given function within a specified interval.

% Inputs:
%     fun: the function whose root is to be found
%     a: the lower bound of the interval
%     b: the upper bound of the interval
%     tol: the tolerance level for the root
% 
% Outputs:
%     x: the approximated root of the function
%     y: the value of the function at the approximated root

% Set the initial values for the interval and the root
x = (a + b) / 2;
y = fun(x);

% Check if the initial interval satisfies the root criteria
if sign(fun(a)) == sign(y)
    a = x;
else
    b = x;
end

% Start the bisection loop
while abs(y) > tol
    % Divide the interval in half
    x = (a + b) / 2;
    y = fun(x);
    
    % Update the appropriate bound of the interval based on the location of the root
    if sign(fun(a)) == sign(y)
        a = x;
    else
        b = x;
    end
end
% Print the final approximated root and its corresponding function value
disp(['The approximated root is ', num2str(x), ' with a function value of ', num2str(y)]);
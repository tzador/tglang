% Objective Function
function [fval] = objFun(x)
    % Define the parameters
    a = 2;
    b = 7;
    c = 9;
    % Compute the function value using the given formula
    fval = a * x^2 - b * x + c;
end

% Gradient of Objective Function
function [grad] = gradient(x)
    % Define the parameters
    a = 2;
    b = 7;
    c = 9;
    % Compute the gradient using the given formula
    grad = 2 * a * x - b;
end

% Hessian Matrix of Objective Function
function [hessian] = hessian(x)
    % Define the parameters
    a = 2;
    b = 7;
    c = 9;
    % Compute the elements of the hessian matrix
    h11 = 2 * a;
    h12 = 0;
    h21 = 0;
    h22 = 0;
    % Construct the hessian matrix using the computed elements
    hessian = [h11, h12; h21, h22];
end

% Newton's Method for Optimization
function [x_opt, iter] = newtonMethod(x_init)
    % Set initial point
    x0 = x_init;
    % Set the maximum number of iterations and initial iteration
    max_iter = 100;
    iter = 1;
    % Set the desired tolerance
    tol = 1e-6;
    % Compute the gradient and hessian of the objective function
    grad = gradient(x0);
    hessian = hessian(x0);
    % Perform Newton's method until convergence or maximum iterations reached
    while iter <= max_iter
        % Compute the step
        step = -inv(hessian)*grad;
        % Update the current point
        x1 = x0 + step;
        % Check for convergence
        if norm(x1-x0) < tol
            break;
        end
        % Update the gradient and hessian at the new point
        grad = gradient(x1);
        hessian = hessian(x1);
        % Update the iteration
        iter = iter + 1;
        % Update the current point
        x0 = x1;
    end
    % Set the optimal point as the final point
    x_opt = x0;
end

% Example of using the Newton's Method function to optimize the objective function
% Starting point
x_start = -1;
% Call the newtonMethod function to optimize the objective function
[x_opt, iter] = newtonMethod(x_start);
% Display the optimal point and number of iterations needed to converge
disp("Optimal Point: ");
disp(x_opt);
disp("Number of Iterations: ");
disp(iter);
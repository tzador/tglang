%% Define input variables
A = rand(100); % Generates a 100x100 matrix of random numbers
B = magic(100); % Generates a 100x100 magic square matrix
C = A * B; % Matrix multiplication of A and B

%% Apply filters to eliminate NaN values
temp = find(isnan(C)); % Returns indices of NaN values in matrix C
C(temp) = 0; % Replaces NaN values with 0

%% Create subplot grid and plot matrices
subplot(2,2,1) % Creates a 2x2 subplot grid and selects first subplot
imagesc(A) % Creates a scaled image of matrix A on current subplot
title('Random Matrix A') % Adds a title to the subplot
colormap(gray) % Sets the color map to gray

subplot(2,2,2) % Selects second subplot
imagesc(B) % Creates a scaled image of matrix B on current subplot
title('Magic Square Matrix B') % Adds a title to the subplot
colormap(jet) % Sets the color map to jet

subplot(2,2,[3,4]) % Selects third and fourth subplot
imagesc(C) % Creates a scaled image of matrix C on current subplot
title('Product Matrix C') % Adds a title to the subplot
colormap(bone) % Sets the color map to bone

%% Add colorbar and adjust subplot positions
colorbar % Adds a colorbar to the figure
pos = get(gcf, 'Position'); % Gets current figure position
set(gcf, 'Position', pos + [0 0 0 100]) % Adjusts figure position to fit colorbar
set(gcf, 'Renderer', 'zbuffer') % Sets the rendering mode to 'zbuffer' 

%% Add annotations to subplot
% Displays the minimum and maximum values in matrix A
a_min = min(A(:)); % Finds the minimum value in matrix A
a_max = max(A(:)); % Finds the maximum value in matrix A
text(10,10, sprintf('Min: %f \nMax: %f',a_min,a_max)) % Adds text annotation to subplot

% Displays the number of NaN values in matrix C
text(60,60, sprintf('NaN values: %d', length(temp))) % Adds text annotation to subplot
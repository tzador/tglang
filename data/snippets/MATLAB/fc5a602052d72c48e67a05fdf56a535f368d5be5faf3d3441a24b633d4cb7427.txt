% This program calculates the trajectory of a projectile launched from a given height at a specified angle with a given initial velocity
% Author: John Smith
% Date created: 01/02/2021

% Define variables:
h = 10; % height (m)
theta = 30; % angle (degrees)
v0 = 20; % initial velocity (m/s)
g = 9.8; % acceleration due to gravity (m/s^2)

% Convert angle to radians:
theta_rads = deg2rad(theta);

% Initialize time and position arrays:
t = linspace(0, 5, 100); % time (s)
x = zeros(1, length(t)); % horizontal position (m)
y = zeros(1, length(t)); % vertical position (m)

% Calculate x and y positions at each time step:
for i = 1:length(t)
    x(i) = v0 * cos(theta_rads) * t(i); % horizontal position at time t (m)
    y(i) = h + v0 * sin(theta_rads) * t(i) - 0.5 * g * t(i)^2; % vertical position at time t (m)
end

% Plot the trajectory:
plot(x, y);
title('Projectile Trajectory');
xlabel('Horizontal position (m)');
ylabel('Vertical position (m)');
grid on;

% Find the time at which the projectile hits the ground:
ground_index = find(y <= 0, 1, 'first'); % index of the first value where y <= 0
t_ground = t(ground_index); % time at which the projectile hits the ground (s)

% Print the maximum height and the time of flight:
fprintf('Maximum height: %.2f m\n', max(y));
fprintf('Time of flight: %.2f s\n', t_ground);

% Optional: Calculate and plot the velocity profile:
vx = v0 * cos(theta_rads); % horizontal velocity (m/s)
vy = v0 * sin(theta_rads) - g * t; % vertical velocity (m/s)
figure;
plot(t, vx);
hold on;
plot(t, vy);
title('Velocity Profile');
xlabel('Time (s)');
ylabel('Velocity (m/s)');
legend('Horizontal velocity', 'Vertical velocity');
grid on;
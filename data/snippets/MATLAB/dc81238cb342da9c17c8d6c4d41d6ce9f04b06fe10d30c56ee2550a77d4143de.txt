% This code snippet calculates the gradient of a given function using finite differences method

% Define the function to calculate the gradient of
f = @(x,y) x.^3 + y.^2 + 2*x*y;

% Define the step size for finite differences
h = 0.01;

% Define the points at which to calculate the gradient
x = -5:h:5;
y = -5:h:5;

% Create a meshgrid from the points
[X, Y] = meshgrid(x,y);

% Calculate the gradient at each point using the finite differences method
df_dx = (f(X+h,Y) - f(X,Y)) ./ h;
df_dy = (f(X,Y+h) - f(X,Y)) ./ h;

% Plot the function and its gradient
surf(X,Y,f(X,Y))
hold on
quiver(X,Y,df_dx,df_dy)
xlabel('x')
ylabel('y')
zlabel('f(x,y)')
legend('Function', 'Gradient')

% Print the gradient at a specific point
disp(['The gradient at point (2,-3) is (',num2str(df_dx(308,304)),',',num2str(df_dy(308,304)) ')'])
%% Newton's Method for Root-Finding

% input expression and initial guess
expr = input('Enter expression in terms of x: ');
x0 = input('Enter initial guess: ');

% define tolerance and maximum iterations
tol = 1e-6;
max_iter = 100;

% initialize variables
x = x0; % initial guess
iter = 0; % iteration counter

% loop until tolerance is met or maximum iterations reached
while abs(eval(expr)) > tol && iter < max_iter

    % calculate derivative of expression at current guess
    dx = diff(expr, x);
    
    % calculate new guess using Newton's method
    x = x - (eval(expr) / eval(dx));
    
    % increment iteration counter
    iter = iter + 1;
    
end

% check if tolerance was met or maximum iterations reached
if abs(eval(expr)) > tol
    disp('Newton''s method failed to converge.')
else
    % display final root and number of iterations
    fprintf('Root found at x = %f after %d iterations.', x, iter)
end
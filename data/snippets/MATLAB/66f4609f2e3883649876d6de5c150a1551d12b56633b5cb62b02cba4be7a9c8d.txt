% Comments can be added using '%'
% This code snippet uses the built-in function 'fmincon' to solve a constrained nonlinear optimization problem
% Define the objective function, constraints and starting point
fun = @(x) (1.5-x(1))*(1.5-x(2))*(1.5-x(3)); % objective function
A = [1, 2, -1; -3, 1, 2; 0, -2, 1]; % linear inequality constraints matrix
b = [4; 1; -1]; % linear inequality constraints vector
Aeq = [1, 1, 0; 1, 0, 1; 0, 1, 1]; % linear equality constraints matrix
beq = [2; 2; 2]; % linear equality constraints vector
lb = [-2, -2, -2]; % lower bounds for the decision variables
ub = [2, 2, 2]; % upper bounds for the decision variables
x0 = [-1, -1, -1]; % starting point for the optimization
% Use the 'fmincon' function to solve the optimization problem
[x, fval] = fmincon(fun, x0, A, b, Aeq, beq, lb, ub)
% Print the results
fprintf('The optimized decision variables are: %s\nThe optimal function value is: %s', mat2str(x), num2str(fval));
%% Generate Gaussian Pyramid
function pyr = generate_gaussian_pyr(img, levels, sigma)
% This function generates a Gaussian pyramid given an image, number of levels, and a sigma value.

% Create a meshgrid for the image size
[rows, cols] = meshgrid(1:size(img,1), 1:size(img,2));

% Initialize the pyramid as a cell array
pyr = cell(1, levels);

% Loop through each level
for i = 1:levels
    
    % Compute the standard deviation for this level
    curr_sigma = sigma * 2^(i-1);
    
    % Apply the Gaussian filter to the image
    filtered_img = imgaussfilt(img, curr_sigma);
    
    % Subsample the image using the 'reduce' function
    subsampled_img = reduce(filtered_img);
    
    % Compute the size of the subsampled image
    [sub_rows, sub_cols] = size(subsampled_img);
    
    % Compute the coordinates of the pixels that will be used to interpolate
    Xq = linspace(1, sub_cols, cols);
    Yq = linspace(1, sub_rows, rows);
    
    % Interpolate the subsampled image to fit the original image size
    interpolated_img = interp2(sub_rows, sub_cols, subsampled_img, Xq, Yq');
    
    % Save the interpolated image as the current level of the pyramid
    pyr{i} = interpolated_img;
end

% Function to subsample the image
function result = reduce(img)

% Keep every other row and column
result = img(1:2:end, 1:2:end);
end
function [z_predicted, S_predicted] = predict(x, z, u, Q, F, G) 
    % Function to predict state and covariance using extended Kalman filter
    % Inputs:
    % x: predicted state from previous time step
    % z: measured output at current time step
    % u: input control vector at current time step
    % Q: process noise covariance
    % F: state transition matrix
    % G: control input matrix
    % Outputs:
    % z_predicted: predicted state at current time step
    % S_predicted: predicted covariance at current time step
  
    % Compute predicted state
    x_predicted = F * x + G * u;
  
    % Compute Jacobian of state transition matrix
    A = F + G * Q * G';
  
    % Compute Kalman gain
    K = A * S_predicted * A' / (A * S_predicted * A' + Q * R * Q'); 
  
    % Compute predicted state covariance
    S_predicted = A * S_predicted * A' + Q;
  
    % Compute predicted output
    z_predicted = x_predicted * sqrt((x_predicted(1) ^ 2) + (x_predicted(2) ^ 2) + (x_predicted(3) ^ 2));
end
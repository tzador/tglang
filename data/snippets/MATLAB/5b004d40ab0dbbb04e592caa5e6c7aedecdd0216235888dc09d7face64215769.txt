% Block LMS Algorithm Implementation
% Input Signal: u(n)
% Desired Signal: d(n)
% Step Size: mu
% Delay Factor: M
% Number of Iterations: N
% Output Vector: y(n)

% Initializing filter coefficients
w = zeros(M+1,1); 

% Delayed input vector for each iteration
delayed_u = zeros(M+1,1); 

% Initializing error vector
e = zeros(N,1); 

% Loop for N number of iterations
for n = 1:N 

% Calculate output vector
y(n) = w' * delayed_u;

% Calculate error
e(n) = d(n) - y(n);

% Update filter coefficients
w = w + mu*e(n)*conj(delayed_u);

% Shift delayed input vector
delayed_u = [u(n); delayed_u(1:M)]; 

end
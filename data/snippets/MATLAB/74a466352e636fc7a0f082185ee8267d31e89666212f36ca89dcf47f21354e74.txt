% Sample code for solving a linear system of equations using the Jacobi method

% Define the coefficient matrix
A = [4, -1, 1; 1, 3, -2; -1, 2, 5];

% Define the solution vector
b = [5; -3; 4];

% Define the initial guess for the solution
x = [0; 0; 0];

% Set the maximum number of iterations
max_iter = 100;

% Set the tolerance for convergence
tol = 0.001;

% Initialize variables to store intermediate solutions
x_prev = zeros(size(x));
err = Inf;

% Start iteration
for i = 1:max_iter
    % Calculate the diagonal matrix of A
    D = diag(diag(A));
    % Calculate the off-diagonal matrix of A
    R = A - D;
    % Calculate the next solution using the Jacobi method
    x = D\(b - R*x_prev);
    
    % Calculate the error between the previous and current solution
    err = norm(x - x_prev)/norm(x);
    
    % Check for convergence
    if err < tol
        break
    end
    
    % Update the previous solution
    x_prev = x;
end

% Check for convergence
if err > tol
    error('The Jacobi method failed to converge.')
end

% Display the solution
disp(x)
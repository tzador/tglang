%% Initialize variables
A = [2, 4, 6, 8, 10]; % Create a row vector with 5 elements
B = eye(5); % Create a 5x5 identity matrix
C = randn(5); % Initialize a 5x5 matrix with random values
D = A * inv(B + C); % Matrix multiplication and inversion

%% Loop through each element in C
for i = 1:5
    for j = 1:5
        if C(i,j) < 0 % Check if element is negative
            C(i,j) = 0; % Replace negative elements with 0
        end
    end
end

%% Define a function for calculating nth Fibonacci number
function fib = fibonacci(n)
    if n == 0 || n == 1
        fib = n; % Base case
    else
        fib = fibonacci(n-1) + fibonacci(n-2); % Recursive step
    end
end

%% Calculate Fibonacci sequence and plot results
fib_seq = zeros(1,10); % Initialize vector for storing sequence
for i = 1:10
    fib_seq(i) = fibonacci(i-1); % Calculate and store Fibonacci numbers
end
plot(1:10, fib_seq, 'o-'); % Plot sequence with markers and lines
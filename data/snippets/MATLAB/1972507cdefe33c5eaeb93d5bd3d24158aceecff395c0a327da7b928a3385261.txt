%% Define initial conditions
A = 1; % Initial value of A
B = 2; % Initial value of B
C = 3; % Initial value of C
D = 4; % Initial value of D 

%% Create a vector of time steps
t = linspace(0,10,1000); % Time vector from 0 to 10 seconds with 1000 steps 

%% Define system dynamics
dA_dt = -A + B; % Derivative of A with respect to time
dB_dt = -A*B + C; % Derivative of B with respect to time
dC_dt = -B*C + D; % Derivative of C with respect to time
dD_dt = -A*C + B*D; % Derivative of D with respect to time

%% Solve system using ODE solver
y0 = [A,B,C,D]; % Initial conditions in a vector
[t,y] = ode45(@(t,y) [dA_dt; dB_dt; dC_dt; dD_dt], t, y0); % Solve system using ode45 solver and store output in y vector

%% Plot results
figure; % Create a new figure
plot(t,y(:,1),'r-',t,y(:,2),'g-',t,y(:,3),'b-',t,y(:,4),'m-'); % Plot each variable over time with different colors
xlabel('Time (s)','FontSize',14); % Add label for x-axis
ylabel('Variables','FontSize',14); % Add label for y-axis
legend('A','B','C','D','FontSize',14); % Add legend
title('System Dynamics','FontSize',16); % Add title
grid on; % Add grid lines
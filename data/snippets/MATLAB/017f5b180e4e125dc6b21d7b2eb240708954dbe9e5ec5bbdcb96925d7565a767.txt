function [A,b,x] = solveSystem(n)
% This function takes in an integer n and generates a system of linear equations
% with n variables and n equations. It then solves the system using the Gaussian
% Elimination method and returns the augmented matrix A, the right-hand side
% vector b, and the solution vector x.

% Initialize the augmented matrix A and the right-hand side vector b
A = randi([-10, 10], n, n);
b = randi([-10, 10], n, 1);

% Print the system of equations in LaTeX format for clarity
fprintf('The system of equations is: \\begin{equation} \n');
for i = 1:n
    for j = 1:n
        fprintf('%dx_{%d}', A(i,j), j);
        if j ~= n
            fprintf(' + ');
        else
            fprintf('= %d \n', b(i));
        end
    end
end
fprintf('\\end{equation} \n');

% Perform Gaussian Elimination on the augmented matrix A
for k = 1:n-1
    % Find the pivot element
    [~, pivot_ind] = max(abs(A(k:n,k)));
    % Swap the rows if necessary
    if pivot_ind ~= 1
        temp = A(k,:);
        A(k,:) = A(k+pivot_ind-1,:);
        A(k+pivot_ind-1,:) = temp;
        temp = b(k);
        b(k) = b(k+pivot_ind-1);
        b(k+pivot_ind-1) = temp;
    end
    % Perform row operations to eliminate the variables below the pivot element
    for i = k+1:n
        factor = A(i,k)/A(k,k);
        A(i,:) = A(i,:) - factor*A(k,:);
        b(i) = b(i) - factor*b(k);
    end
end

% Print the upper triangular matrix in LaTeX format for clarity
fprintf('The upper triangular matrix is: \\begin{equation} \n');
for i = 1:n
    for j = 1:n
        fprintf('%d', A(i,j));
        if j < i
            fprintf('&');
        else
            fprintf(' \n');
        end
    end
end
fprintf('\\end{equation} \n');

% Initialize the solution vector x
x = zeros(n,1);
% Use back substitution to solve for x
for i = n:-1:1
    x(i) = (b(i)-dot(A(i,i+1:n),x(i+1:n)))/A(i,i);
end

% Print the solution vector in LaTeX format for clarity
fprintf('The solution vector is: \\begin{equation} \n');
for i = 1:n
    fprintf('x_{%d} = %.3f \n', i, x(i));
end
fprintf('\\end{equation} \n');

end % end of function
# This is a class definition for a Contact object
class Contact
  # This is a constant that stores the maximum number of contacts
  MAX_CONTACTS = 100

  # This creates readable/writable attributes for the contact's full name
  attr_accessor :full_name

  # This creates readable/writable attributes for the contact's email address
  attr_accessor :email

  # This creates readable/writable attributes for the contact's phone number
  attr_accessor :phone_number

  # This is a class variable that stores an array of all created contacts
  @@all_contacts = []

  # This is a class method that returns the number of contacts created
  def self.contacts_count
    @@all_contacts.length
  end

  # This is an instance method that adds the current contact object to the class variable array
  def save_contact
    @@all_contacts << self
  end

  # This is a constructor method that initializes a new contact object with provided arguments
  def initialize(full_name, email, phone_number)
    @full_name = full_name
    @email = email
    @phone_number = phone_number
  end

  # This is an instance method that displays all contact information in a readable format
  def display_contact_info
    puts "Contact Information:"
    puts "Name: #{@full_name}"
    puts "Email: #{@email}"
    puts "Phone Number: #{@phone_number}"
  end

  # This is a class method that searches for a contact based on provided email address
  def self.search_by_email(email)
    @@all_contacts.each do |contact|
      if contact.email == email
        return contact
      end
    end
    puts "No contact found with that email address."
  end
end

# Creating two contact objects
contact1 = Contact.new("John Smith", "jsmith@email.com", "123-456-7890")
contact2 = Contact.new("Jane Doe", "jdoe@email.com", "987-654-3210")

# Calling display_contact_info instance methods on the two contact objects
contact1.display_contact_info
contact2.display_contact_info

# Calling save_contact on the two contact objects
contact1.save_contact
contact2.save_contact

# Calling contacts_count class method to see how many contacts have been created
puts "Number of total contacts: #{Contact.contacts_count}"

# Searching for a contact using search_by_email class method
puts "Searching for contact with email address jdoe@email.com..."
found_contact = Contact.search_by_email("jdoe@email.com")
found_contact.display_contact_info

# Output:
# This is a complex ruby code snippet that implements a bubble sort algorithm
 
# Define an array of numbers to be sorted
array = [5, 3, 8, 2, 1, 9]
 
# Define a helper method to swap values in an array
def swap(array, i, j)
    temp = array[i]
    array[i] = array[j]
    array[j] = temp
end
 
# Define the actual bubble sort method
def bubble_sort(array)
    # Introduce a flag variable for optimization
    swapped = true
 
    # Run the loop until no more swaps are required
    while swapped do
        # Reset the flag variable
        swapped = false
 
        # Loop through the array to compare adjacent values
        (0...array.length-1).each do |i|
            # Swap values if the left value is greater than the right
            if array[i] > array[i+1]
                swap(array, i, i+1)
                # Set the flag variable to true to indicate a swap occurred
                swapped = true
            end
        end
    end
 
    # Return the sorted array
    return array
end
 
# Call the bubble sort method on our array and print the result
puts bubble_sort(array)
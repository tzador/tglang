# This is a complex code snippet in RUBY to find the sum of all prime numbers within a given range

# Define a method to check if a number is prime
def is_prime(num)
  return false if num <= 1 # 1 is not a prime number
  (2..Math.sqrt(num).floor).each do |i| # iterates from 2 until the square root of the number 
    return false if num % i == 0 # checks if the number is divisible by any number between 2 and square root of the number
  end
  true # returns true if the number is not divisible by any number between 2 and square root of the number
end

# Define a method to find the sum of all prime numbers within a given range
def sum_of_primes(start_num, end_num)
  sum = 0 # initialize a variable to store the sum
  (start_num..end_num).each do |num| # iterates through all numbers within the given range
    sum += num if is_prime(num) # adds the number to the sum if it is prime
  end
  sum # returns the final sum of prime numbers
end

# Example output
puts sum_of_primes(1, 10) # should output 17 as the sum of prime numbers within the range is 2 + 3 + 5 + 7 = 17
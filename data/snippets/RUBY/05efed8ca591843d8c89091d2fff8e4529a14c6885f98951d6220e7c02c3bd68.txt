# This is a function that takes in two arrays and merges them together into a single, sorted array
def merge_arrays(arr1, arr2)
  # Initialize variables to store the length of the arrays and the respective indices
  len1 = arr1.length
  len2 = arr2.length
  i = 0
  j = 0

  # Initialize an empty array to store the sorted values
  sorted_array = []

  # Loop through both arrays until either one of them has been fully traversed
  while i < len1 && j < len2 do
    # Compare the values at the current indices and add the smaller value to the sorted array
    if arr1[i] < arr2[j]
      sorted_array << arr1[i]
      i += 1
    else
      sorted_array << arr2[j]
      j += 1
    end
  end

  # Add any remaining elements from the first array (if any)
  while i < len1 do
    sorted_array << arr1[i]
    i += 1
  end

  # Add any remaining elements from the second array (if any)
  while j < len2 do
    sorted_array << arr2[j]
    j += 1
  end

  # Return the sorted array
  return sorted_array
end

# Example input
array1 = [1, 3, 5]
array2 = [2, 4, 6]

# Call the merge_arrays function with the example inputs and print the result
puts merge_arrays(array1, array2)
# Output: [1, 2, 3, 4, 5, 6]
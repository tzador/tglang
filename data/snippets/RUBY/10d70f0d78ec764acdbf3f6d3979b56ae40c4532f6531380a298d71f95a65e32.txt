# This is a snippet of Ruby code that sorts an array of numbers in descending order
# using the bubble sort algorithm.

# First, we define an array with some unsorted numbers
numbers = [5, 3, 9, 2, 10, 4]

# Next, we define a method that implements the bubble sort algorithm
def bubble_sort(arr)
  n = arr.length

  # Loop through the array n-1 times
  (n-1).times do

    # Initialize a variable to track if any swaps were made in this loop
    swapped = false

    # Loop through the array, comparing each pair of elements
    for i in 0..(n-2)
      # If the first element is smaller than the second, swap them
      if arr[i] < arr[i+1]
        arr[i], arr[i+1] = arr[i+1], arr[i]
        # Indicate that a swap was made
        swapped = true
      end
    end

    # If no swaps were made in this loop, the array is sorted and we can exit the loop
    break if !swapped
  end

  # Return the sorted array
  return arr
end

# Call the method on our unsorted array and store the result in a new variable
sorted_numbers = bubble_sort(numbers)

# Print the sorted array
puts sorted_numbers
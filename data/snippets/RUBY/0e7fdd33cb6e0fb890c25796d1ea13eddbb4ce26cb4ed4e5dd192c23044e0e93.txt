module Enumerable
  def my_each
    for i in self
      yield(i)
    end
  end

  def my_map
    new_arr = []
    self.my_each { |i| new_arr << yield(i) }
    return new_arr
  end

  def my_select
    new_arr = []
    self.my_each { |i| new_arr << i if yield(i) }
    return new_arr
  end

  def my_all?
    self.my_each { |i| return false unless yield(i) }
    return true
  end
end

# Test code
arr = [1, 2, 3, 4, 5]
puts "my_each"
arr.my_each { |i| puts i * 2 }
# Output: 2, 4, 6, 8, 10

puts "my_map"
new_arr = arr.my_map { |i| i**2 }
print new_arr
# Output: [1, 4, 9, 16, 25]

puts "my_select"
new_arr = arr.my_select { |i| i % 2 == 0 }
print new_arr
# Output: [2, 4]

puts "my_all?"
puts arr.my_all? { |i| i > 0 }
# Output: true
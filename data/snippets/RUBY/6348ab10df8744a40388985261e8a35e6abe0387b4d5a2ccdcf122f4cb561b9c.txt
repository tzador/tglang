# This code snippet is a complex function in Ruby that takes in an array of numbers, squares each number, and returns a new sorted array with the squared numbers.

def square_and_sort(numbers)
	# Initialize an empty array to store squared numbers
	squared_numbers = []

	# Use .each method to iterate through the numbers in the given array
	numbers.each do |num|
		# Square each number and append it to the squared_numbers array
		squared_numbers << num**2
	end

	# Use .sort method to sort the squared numbers in ascending order
	squared_numbers.sort

	# Return the sorted squared numbers array
	return squared_numbers
end

# Example input array
numbers = [3, 8, 2, 5, 1]

# Call the function and store the returned array in a variable
sorted_squared_numbers = square_and_sort(numbers)

# Output the sorted squared numbers array
puts sorted_squared_numbers

# Output: [1, 4, 9, 25, 64] (numbers squared and sorted in ascending order)
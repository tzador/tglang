# This is a recursive function that performs a binary search on a given array.
# @param [Array] arr The array in which to search for a given value.
# @param [Integer or Float] target The value to search for in the array.
# @param [Integer] left The starting index of the array to search.
# @param [Integer] right The ending index of the array to search.
# @return [Integer] The index of the target value in the array, or -1 if the value is not found.
def binary_search(arr, target, left, right)
  # Check for valid input
  if left > right
    return -1
  end

  # Calculate the middle index
  mid = (left + right) / 2

  # Check if the middle index value is the target
  if arr[mid] == target
    return mid
  # If the middle index value is greater than the target, search the left half of the array
  elsif arr[mid] > target
    return binary_search(arr, target, left, mid - 1)
  # If the middle index value is less than the target, search the right half of the array
  else
    return binary_search(arr, target, mid + 1, right)
  end
end

# Example array to search
arr = [2, 5, 8, 12, 16, 23, 38, 42]

# Call the function with the array, target value, and starting and ending indices
puts binary_search(arr, 16, 0, arr.length - 1)

# Output: 4 (the index of 16 in the example array)
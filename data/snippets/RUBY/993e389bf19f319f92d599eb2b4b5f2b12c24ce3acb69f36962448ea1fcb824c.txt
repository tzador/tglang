# This is a function that performs bubble sort on an array of integers
def bubble_sort(array)

  # Loop through the array until all elements are sorted
  while true

    # Initialize a flag that checks if any swaps have been made
    swapped = false

    # Loop through the array except for the last element,
    # as it will be sorted automatically after each iteration
    (0..array.length - 2).each do |i|

      # Check if the current element is greater than the next element
      if array[i] > array[i+1]

        # Swap the elements using parallel assignment
        array[i], array[i+1] = array[i+1], array[i]

        # Set the swapped flag to true to indicate a swap was made
        swapped = true
      end
    end

    # If no swaps were made, break out of the loop
    if !swapped
      break
    end
  end

  # Return the sorted array
  return array
end

# Sample usage
unsorted_array = [8, 2, 6, 1, 9, 4]
sorted_array = bubble_sort(unsorted_array)
puts sorted_array # Output: [1, 2, 4, 6, 8, 9]
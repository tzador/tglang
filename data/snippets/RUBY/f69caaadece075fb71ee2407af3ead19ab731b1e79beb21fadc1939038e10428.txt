### This is a complex code snippet in Ruby
# It contains a nested loop to generate a multiplication table
# and uses conditional statements to check for prime numbers

# Define a method to generate a multiplication table
def generate_table(x, y=10)
    # Print the header row
    puts "  | #{(1..y).to_a.join(' | ')}"
    puts "--+" + ("---+" * y)

    # Use nested loop to generate each row and column
    (1..y).each do |i|
        print "#{i} |"
        (1..y).each do |j|
            print "%3d |" % (i * j)
        end
        puts
    end
end

# Call the method to generate a table of size 8
generate_table(8)

# Define a method to check if a number is prime
def is_prime?(num)
    # A prime number can only be divided by 1 and itself
    for i in 2..(Math.sqrt(num).to_i)
        return false if num % i == 0
    end
    return true
end

# Loop through the numbers and print "PRIME" or the number if prime
for i in 1..20
    puts is_prime?(i) ? "PRIME" : i
end
# Generic Tree structure
class Tree
  attr_accessor :children, :node_name

  def initialize(name, children=[])
    @children = children
    @node_name = name
  end

  # Recursive method to print the tree structure
  def to_string(indent="")
    puts indent + "#{@node_name}"
    @children.each do |child|
      child.to_string(indent + "  ")
    end
  end
end

# Method to initialize the given structure
def init_tree_structure
  structure = {
    'grandpa' => {
      'dad' => {
        'child 1' => {},
        'child 2' => {}
      },
      'uncle' => {
        'child 3' => {},
        'child 4' => {}
      }
    }
  }
  return structure
end

# Method to build a tree from the initialized structure
def build_tree(structure)
  name = structure.keys[0]
  children = []
  structure[name].each do |key, value|
    children.push(build_tree(Hash[key, value]))
  end

  return Tree.new(name, children)
end

# Main method to run the program
def main
  structure = init_tree_structure()
  tree = build_tree(structure)
  tree.to_string() # Prints the tree structure to the console
end

main() # Call to the main method
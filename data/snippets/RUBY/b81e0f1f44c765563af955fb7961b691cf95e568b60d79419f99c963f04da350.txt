class Computer
  # This class represents a computer
  attr_accessor :cpu, :ram, :storage

  # Initializes a new Computer object with the given specifications
  def initialize(cpu, ram, storage)
    @cpu = cpu
    @ram = ram
    @storage = storage
  end

  # Returns the total storage space of the computer
  def total_storage
    "#{storage} GB"
  end

  # Attempts to run a program on the computer
  # Takes in a Program object as a parameter
  def run_program(program)
    # Checks if the computer has enough free RAM for the program
    if program.required_ram > ram
      puts "Not enough RAM to run #{program.name}"
      return
    end

    # Checks if the computer has enough free storage for the program
    if program.required_storage > storage
      puts "Not enough storage to run #{program.name}"
      return
    end

    # Runs the program and outputs a success message
    puts "#{program.name} is running on the computer!"
  end
end

class Program
  # This class represents a program
  # with a name, required RAM and storage space
  attr_accessor :name, :required_ram, :required_storage

  # Initializes a new Program object with the given specifications
  def initialize(name, required_ram, required_storage)
    @name = name
    @required_ram = required_ram
    @required_storage = required_storage
  end
end

# Creates a new Computer object with CPU: Intel Core i5, RAM: 8 GB, storage: 256 GB
my_computer = Computer.new("Intel Core i5", 8, 256)

# Creates a new Program object with name: "Adobe Photoshop", required RAM: 16 GB, required storage: 512 GB
photoshop = Program.new("Adobe Photoshop", 16, 512)

# Runs the "Adobe Photoshop" program on the my_computer
my_computer.run_program(photoshop)

# Output:
# Adobe Photoshop is running on the computer!
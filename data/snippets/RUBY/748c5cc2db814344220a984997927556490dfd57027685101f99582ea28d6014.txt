class Car # creating a class called Car
  attr_accessor :make, :model, :year, :color # creating attribute accessors for instance variables
  
  def initialize(make, model, year, color) # initializing method with make, model, year and color parameters
    @make = make
    @model = model
    @year = year
    @color = color
  end
  
  def drive(speed) # defining a drive method with speed parameter
    puts "The #{@year} #{@make} #{@model} is driving at #{speed} mph" 
  end
  
  def paint(new_color) # defining a paint method with new_color parameter
    @color = new_color
    puts "The #{@year} #{@make} #{@model} is now #{@color}"
  end
end

my_car = Car.new("BMW", "M3", 2018, "white") # creating an instance of Car with given attributes
my_car.drive(100) # calling the drive method on my_car instance with speed argument 100
my_car.paint("black") # calling the paint method on my_car instance with new_color argument "black"
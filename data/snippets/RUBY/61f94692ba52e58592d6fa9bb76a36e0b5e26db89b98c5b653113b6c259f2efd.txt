# This is a Ruby code snippet for a custom class with instance methods and a class method

# Define a custom Ruby class called "Car"
class Car
    # Use attr_accessor to create getter and setter methods for the instance variables
    attr_accessor :make, :model, :year, :color

    # Initialize the class with its instance variables
    def initialize(make, model, year, color)
        @make = make
        @model = model
        @year = year
        @color = color
    end

    # A method to print the car's make and model
    def print_make_model
        puts "This car is a #{make} #{model}"
    end

    # A method to check if the car is older than a given year
    def is_older?(year)
        if @year < year
            return true
        else
            return false
        end
    end

    # A class method to return the total number of cars created
    def self.total_cars
        return "There have been #{ObjectSpace.each_object(self).count} cars created."
    end
end

# Create an instance of the Car class
my_car = Car.new("Toyota", "Camry", 2018, "grey")

# Calling an instance method
my_car.print_make_model

# Calling a class method
puts Car.total_cars

# Checking if the car is older than a given year
puts my_car.is_older?(2020)
puts my_car.is_older?(2017)
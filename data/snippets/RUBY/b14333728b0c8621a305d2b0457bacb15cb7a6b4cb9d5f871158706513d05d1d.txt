# This is a complex code snippet in RUBY
class Animal
  # Defines the Animal class
  
  attr_accessor :name, :age, :color # Defines attributes of the Animal class
  
  @@all = [] # Defines class variable to store all Animal objects
  
  def initialize(name, age, color)
    # Initializes a new Animal object with given parameters
    @name = name
    @age = age
    @color = color
    @@all << self # Adds the newly created object to the class variable
  end
  
  def self.all
    # Class method to return all Animal objects
    @@all
  end
  
  def introduce
    # Instance method to introduce the Animal by name, age, and color
    puts "Hi, my name is #{@name}, I am #{@age} years old, and my fur color is #{@color}."
  end
end

class Dog < Animal
  # Defines the Dog class which inherits from the Animal class
  
  attr_accessor :breed, :owner # Defines attributes specific to Dog class
  
  def initialize(name, age, color, breed, owner)
    # Initializes a new Dog object with given parameters, also calls super to initialize Animal attributes
    super(name, age, color)
    @breed = breed
    @owner = owner
  end
  
  def bark
    # Instance method for a Dog to bark with its name
    puts "Woof! My name is #{@name}!"
  end
end

# Creating new Animal objects
dog1 = Dog.new("Buddy", 5, "golden", "Golden Retriever", "John")
dog2 = Dog.new("Luna", 3, "black", "Labrador Retriever", "Emily")

# Calling instance methods on Dog objects
dog1.introduce
# Output: Hi, my name is Buddy, I am 5 years old, and my fur color is golden.
dog2.bark
# Output: Woof! My name is Luna!

# Printing all Animal objects using the class method
puts Animal.all
# Output: [#<Dog:0x00007f86b61ceeb0 @name="Buddy", @age=5, @color="golden", @breed="Golden Retriever", @owner="John">, #<Dog:0x00007f86b5a00580 @name="Luna", @age=3, @color="black", @breed="Labrador Retriever", @owner="Emily">]
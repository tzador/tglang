# This is a code snippet that demonstrates the use of classes and inheritance in Ruby

# Define a class
class Shape
  attr_accessor :color, :num_sides # Use attr_accessor to create getters and setters for instance variables

  # Constructor
  def initialize(color, num_sides)
    @color = color
    @num_sides = num_sides
  end

  # Method to calculate area
  def calculate_area
    puts "Calculating area..."
  end
end

# Define a subclass that inherits from Shape class
class Triangle < Shape
  attr_accessor :base, :height # In addition to color and num_sides, Triangle also has base and height as instance variables

  # Constructor that calls super constructor from Shape class
  def initialize(color, base, height)
    super(color, 3)
    @base = base
    @height = height
  end

  # Method to calculate area of Triangle
  def calculate_area
    area = (@base * @height) / 2
    puts "The area of the #{self.color} Triangle is #{area}"
  end
end

# Create an instance of Triangle class
t = Triangle.new("red", 4, 5)

# Call method from Shape class
t.calculate_area

# Change instance variables and call method again
t.color = "blue"
t.base = 6
t.height = 8
t.calculate_area
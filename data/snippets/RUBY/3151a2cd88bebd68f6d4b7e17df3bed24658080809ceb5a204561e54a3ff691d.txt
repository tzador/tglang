module Enumerable                            # Create a module called 'Enumerable'
  def custom_map                            # Define a method called 'custom_map'
    return enum_for(:custom_map) unless block_given?  # If no block is given, return an Enumerator
    results = []                                      # Initialize an empty array called 'results'
    each { |item| results << yield(item) }            # Iterate through each item and pass it to the block, appending the returned value to 'results'
    results                                           # Return 'results'
  end
end

my_array = [1, 2, 3, 4]                  # Create a new array with values 1, 2, 3, 4
my_array.custom_map do |num|             # Call 'custom_map' on 'my_array' and pass in a block that takes in each number as a parameter
  num * 2                                # Multiply each number by 2 and return the result
end                                      # End block

# Output: [2, 4, 6, 8]                    # The returned array contains the values 2, 4, 6, 8 which are the results of multiplying each number in the original array by 2.
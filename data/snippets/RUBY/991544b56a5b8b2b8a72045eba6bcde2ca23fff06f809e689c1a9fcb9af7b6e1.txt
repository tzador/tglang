# Define a custom error class
class MyCustomError < StandardError
  attr_reader :message
  # Initialize the error with a custom message
  def initialize(message)
    @message = message
  end
end

# Define a function that takes in a number as an argument
def square_number(num)
  # Raise an error if the argument is not a number
  raise MyCustomError, "Argument must be a number" unless num.is_a? Numeric
  # Return the square of the number
  num ** 2
end

# Call the function and pass in an array as an argument
square_number([1, 2, 3])

# Output:
# MyCustomError: Argument must be a number
#   (repl):6:in `square_number'
#   (repl):11:in `<main>'
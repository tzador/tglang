# This code snippet generates a random password of given length
# and stores it in a variable named "password".

# Import the "securerandom" library to generate random strings
require 'securerandom'

# Define a method to generate the password with customizable length
def generate_password(length)

  # Create an empty string to store the generated password
  password = ""

  # Define a variable with all possible characters to use in the password
  char_pool = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+"

  # Use a loop to randomly select characters from the pool and add them to the password
  length.times do
    # Randomly select a character from the character pool
    char = char_pool[SecureRandom.random_number(char_pool.length)]
    # Add the selected character to the password string
    password << char
  end

  # Return the generated password
  return password
end

# Prompt user for desired password length
puts "How long would you like your password to be? (Minimum: 8 characters)"
length = gets.chomp.to_i

# Check if user input is valid
if length < 8
  puts "Sorry, the password must be at least 8 characters long."
else
  # Call the method to generate the password with the specified length
  password = generate_password(length)

  # Output the generated password
  puts "Your randomly generated password is: #{password}"
end
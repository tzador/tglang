# This code snippet contains a complex algorithm for generating Fibonacci numbers
def fibonacci(n) # method to calculate Fibonacci number at index n
  if n <= 1 # base case
    n # return n if n is 0 or 1
  else # recursive case
    fibonacci(n-1) + fibonacci(n-2) # calculate Fibonacci number recursively
  end
end

# calculate the first n Fibonacci numbers and store them in an array
def fibonacci_array(n)
  fib_array = [] # initialize empty array
  n.times do |i| # loop n times
    fib_array << fibonacci(i) # use fibonacci method to calculate each number and add to array
  end
  fib_array # return the array of Fibonacci numbers
end

# print out the first 25 Fibonacci numbers
puts "The first 25 Fibonacci numbers are:"
fibonacci_array(25).each do |num| # loop through array and print each number
  print "#{num} "
end
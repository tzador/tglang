# This is a Ruby code snippet
# It creates a class named "Vehicle"
class Vehicle
  # Sets the class variable "vehicle_count" to 0
  @@vehicle_count = 0

  # Creates a getter method for the "vehicle_count" variable
  def self.vehicle_count
    @@vehicle_count
  end

  # Initializes the class with the "manufacturer" and "model" variables
  def initialize(manufacturer, model)
    @manufacturer = manufacturer
    @model = model
    # Increments the "vehicle_count" variable each time a new instance of "Vehicle" is created
    @@vehicle_count += 1
  end

  # Creates a setter method for the "manufacturer" variable
  def manufacturer=(manufacturer)
    @manufacturer = manufacturer
  end

  # Creates a getter method for the "manufacturer" variable
  def manufacturer
    @manufacturer
  end

  # Creates a setter method for the "model" variable
  def model=(model)
    @model = model
  end

  # Creates a getter method for the "model" variable
  def model
    @model
  end

  # Creates a method to display the vehicle information
  def display_info
    puts "Manufacturer: #{@manufacturer}"
    puts "Model: #{@model}"
  end
end

# Creates a new instance of "Vehicle" with "Tesla" as the manufacturer and "Model S" as the model
my_vehicle = Vehicle.new("Tesla", "Model S")

# Calls the "display_info" method on "my_vehicle" instance
my_vehicle.display_info

# # Outputs:
# Manufacturer: Tesla
# Model: Model S
# This is a class for a bank account
class BankAccount
  # Attributes
  attr_reader :account_number, :balance
  attr_accessor :owner, :pin

  # Constructor
  def initialize(owner, pin)
    # Set account number
    @account_number = rand(1000000000..9999999999).to_s
    # Set owner
    @owner = owner
    # Set initial balance to 0
    @balance = 0.00
    # Set pin
    @pin = pin
  end

  # Method to deposit money into account
  def deposit(amount)
    # Check if amount is valid
    if amount > 0
      # Update balance
      @balance += amount
      # Print success message
      puts "$#{amount.round(2)} successfully deposited."
    else
      # Print error message
      puts "Invalid amount."
    end
  end

  # Method to withdraw money from account
  def withdraw(amount, pin)
    # Check if pin is correct
    if pin == @pin
      # Check if amount is valid
      if amount > 0 && @balance >= amount
        # Update balance
        @balance -= amount
        # Print success message
        puts "$#{amount.round(2)} successfully withdrawn."
      else
        # Print error message
        puts "Insufficient funds."
      end
    else
      # Print error message
      puts "Incorrect pin."
    end
  end

  # Method to display account information
  def display_info
    # Print formatted information
    puts "Account Number: #{'X' * 5}-#{'X' * 4}-#{account_number[-4..-1]}"
    puts "Owner: #{owner}"
    puts "Balance: $#{balance.round(2)}"
  end
end

# Create new instance of BankAccount
my_account = BankAccount.new("John Doe", 1234)

# Deposit $100 into account
my_account.deposit(100)

# Withdraw $50 from account using incorrect pin
my_account.withdraw(50, 2345)

# Withdraw $75 from account using correct pin
my_account.withdraw(75, 1234)

# Display account information
my_account.display_info
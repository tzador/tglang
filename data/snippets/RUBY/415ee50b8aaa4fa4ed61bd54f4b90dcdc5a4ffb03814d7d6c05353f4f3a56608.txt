require 'csv'
require 'date'

# create a class called 'DataParser'
class DataParser
  # create a class variable called 'data'
  @@data = []

  # create a method called 'read_csv'
  # that takes in a file name as an argument
  def self.read_csv(file_name)
    # use the 'CSV' library to read the CSV file
    # and assign it to the 'data' class variable
    @@data = CSV.read(file_name)

    # call the 'format_data' method to format the data
    self.format_data
  end

  # create a method called 'format_data'
  def self.format_data
    # use the 'map' method to loop through each row
    # and convert each element into a string
    @@data.map! do |row|
      row.map(&:to_s)
    end
  end

  # create a method called 'find_average'
  def self.find_average(column_name)
    # use the 'map' method to loop through each row
    # and select the column specified by the 'column_name' argument
    # convert the selected column into an array of integers
    column = @@data.map { |row| row[column_name].to_i }

    # use the 'sum' method to get the sum of all values in the column
    sum = column.sum

    # use the 'length' method to get the number of elements in the column
    # and convert it to a float
    count = column.length.to_f

    # calculate the average by dividing the sum by the count
    average = sum / count

    # return an annotated markdown code snippet with the average value
    "The average #{column_name} is `#{average}`."
  end

  # create a method called 'print_data'
  def self.print_data
    # use the 'print' method to output the data in a formatted table
    puts "ID\tName\tAge\tGender"
    @@data.each do |row|
      puts "#{row[0]}\t#{row[1]}\t#{row[2]}\t#{row[3]}"
    end
  end
end

# call the 'read_csv' method passing in the file name as an argument
DataParser.read_csv("data.csv")

# call the 'find_average' method passing in the column name as an argument
DataParser.find_average("age")

# call the 'print_data' method to output the data in a formatted table
DataParser.print_data
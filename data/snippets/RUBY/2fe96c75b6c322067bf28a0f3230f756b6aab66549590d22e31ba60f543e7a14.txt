# This code snippet creates a class called "Fruit" with various attributes and methods
# including a constructor, setters and getters, and a "ripe?" boolean method

class Fruit
  attr_accessor :name, :color, :shape, :taste
  # creates getters and setters for all attributes

  def initialize(name, color, shape, taste)
    # constructor method to set initial values for attributes
    @name = name
    @color = color
    @shape = shape
    @taste = taste
  end

  def ripe?
    # boolean method to check if the fruit is ripe based on its color
    if @color == "red" || @color == "orange" || @color == "yellow"
      return true
    else
      return false
    end
  end

  def display_info
    # method to display information about the fruit
    puts "This is a #{@color} #{@name} with a #{@shape} shape and #{@taste} taste."
  end

end

# Creates a new instance of the Fruit class called "apple"
apple = Fruit.new("apple", "red", "round", "sweet")

# Calls the display_info method to output information about the apple
apple.display_info

# Checks if the apple is ripe by calling the "ripe?" method
if apple.ripe?
  puts "This apple is ripe!"
else
  puts "This apple is not ripe yet."
end

# Updates the color of the apple using the setter method
apple.color = "green"

# Calls the display_info method again to see the updated information
apple.display_info

# Checks if the apple is ripe again, should return false this time
if apple.ripe?
  puts "This apple is ripe!"
else
  puts "This apple is not ripe yet."
end
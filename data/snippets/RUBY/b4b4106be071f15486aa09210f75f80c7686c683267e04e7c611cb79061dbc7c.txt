# This is a complex code snippet in RUBY

# Define a class named Person with attributes name and age
class Person
  # Getter and Setter methods for attributes
  attr_accessor :name, :age

  # Constructor method with parameters for name and age
  def initialize(name, age)
    self.name = name
    self.age = age
  end

  # Method to print the name of the person
  def print_name
    puts "Name: #{self.name}"
  end

  # Method to print the age of the person
  def print_age
    puts "Age: #{self.age}"
  end
end

# Create a new instance of the Person class
person = Person.new("John", 25)

# Call the print_name and print_age methods on the person object
person.print_name
person.print_age

# Define a subclass named Employee that inherits from Person
class Employee < Person
  # Add an additional attribute for job title
  attr_accessor :job_title

  # Constructor method with parameters for name, age and job title
  def initialize(name, age, job_title)
    super(name, age) # Call superclass constructor
    self.job_title = job_title
  end

  # Method to print the job title of the employee
  def print_job_title
    puts "Job Title: #{self.job_title}"
  end
end

# Create a new instance of the Employee class
employee = Employee.new("Jane", 30, "Software Engineer")

# Call the print_name, print_age, and print_job_title methods on the employee object
employee.print_name
employee.print_age
employee.print_job_title

# Output:
# Name: John
# Age: 25
# Name: Jane
# Age: 30
# Job Title: Software Engineer
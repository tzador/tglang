# This is a class for creating and managing a deck of cards
class Deck
  attr_accessor :cards

  # Initialize the deck with an array of cards
  def initialize(cards)
    @cards = cards
  end

  # Method for shuffling the deck
  def shuffle
    @cards.shuffle!
  end

  # Method for dealing a specific number of cards from the deck
  def deal(num_cards)
    dealt_cards = []
    num_cards.times do
      dealt_cards << @cards.shift
    end
    dealt_cards
  end

  # Method for adding a new card to the deck
  def add_card(card)
    @cards << card
  end

  # Method for removing a specific card from the deck
  def remove_card(card)
    @cards.delete(card)
  end

  # Method for printing out the deck in a readable format
  def print_deck
    puts "This deck contains:"
    @cards.each do |card|
      puts "#{card.rank} of #{card.suit}"
    end
  end
end

# This is a class for creating a playing card with a rank and suit
class Card
  attr_reader :rank, :suit

  # Initialize the card
  def initialize(rank, suit)
    @rank = rank
    @suit = suit
  end
end

# Create an array of 52 playing cards
cards_array = []

# Loop through ranks and suits to create the 52 card deck
(1..13).each do |rank|
  ["Spades", "Clubs", "Diamonds", "Hearts"].each do |suit|
    cards_array << Card.new(rank, suit)
  end
end

# Create a new deck with the array of cards
my_deck = Deck.new(cards_array)

# Print out the original deck
puts "The original deck is:"
my_deck.print_deck

# Shuffle the deck and print out the new order
my_deck.shuffle
puts "The shuffled deck is:"
my_deck.print_deck

# Deal 5 cards and print them out
dealt_cards = my_deck.deal(5)
puts "You have been dealt:"
dealt_cards.each do |card|
  puts "#{card.rank} of #{card.suit}"
end

# Add a new card to the deck
my_deck.add_card(Card.new(14, "Spades"))
puts "The deck now contains:"
my_deck.print_deck

# Remove a specific card from the deck
my_deck.remove_card(Card.new(10, "Hearts"))
puts "The deck now contains:"
my_deck.print_deck
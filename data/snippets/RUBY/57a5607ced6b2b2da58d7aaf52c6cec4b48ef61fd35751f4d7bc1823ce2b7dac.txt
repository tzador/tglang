# This code snippet reverses the words in a string, without changing the position of punctuation
def reverse_words(string)
  # split string into array of words
  words = string.split(" ")
  # initialize empty array to store reversed words
  reversed_words = []
  # iterate through each word in the array
  words.each do |word|
    # check if word includes any punctuation
    if word.match(/\W/)
      # get index of punctuation and store in variable
      punctuation_index = word =~ /\W/
      # extract punctuation from word
      punctuation = word[punctuation_index]
      # remove punctuation from word
      word = word.delete(punctuation)
      # reverse word
      word = word.reverse
      # add punctuation back to end of reversed word
      word.insert(-1, punctuation)
    # if word has no punctuation, just reverse it
    else
      word = word.reverse
    end
    # add reversed word to array
    reversed_words << word
  end
  # join array of words back into string
  reversed_string = reversed_words.join(" ")
  # return reversed string
  return reversed_string
end

# example input
input = "Hello, world! This is a string."

# output: "olleH, dlrow! sihT si a gnirts."
puts reverse_words(input)
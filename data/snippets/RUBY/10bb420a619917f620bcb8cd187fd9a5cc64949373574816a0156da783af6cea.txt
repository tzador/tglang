# A class that represents a bank account
class BankAccount
  attr_reader :owner, :balance

  # A class variable that keeps track of the total number of bank accounts
  @@total_accounts = 0

  # Constructor method that sets the owner and initial balance of the bank account
  def initialize(owner, balance)
    @owner = owner
    @balance = balance
    @@total_accounts += 1
  end

  # Method that allows for depositing money into the bank account
  def deposit(amount)
    @balance += amount
    "Successfully deposited #{amount} into #{owner}'s account."
  end

  # Method that allows for withdrawing money from the bank account
  def withdraw(amount)
    if @balance >= amount
      @balance -= amount
      "Successfully withdrew #{amount} from #{owner}'s account."
    else
      "Insufficient funds in #{owner}'s account."
    end
  end

  # Class method that returns the total number of bank accounts
  def self.total_accounts
    @@total_accounts
  end
end

# Creating a new instance of the BankAccount class
my_account = BankAccount.new("John Doe", 1000)

# Depositing money into the account
puts my_account.deposit(500)

# Withdrawing money from the account
puts my_account.withdraw(200)

# Printing the total number of bank accounts
puts "Total number of bank accounts: #{BankAccount.total_accounts}"
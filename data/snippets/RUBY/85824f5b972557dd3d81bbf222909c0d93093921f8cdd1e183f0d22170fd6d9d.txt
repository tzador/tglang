# This is a complex code snippet in RUBY

# Define a class called "Animal"
class Animal
  # Use "attr_accessor" to create getter and setter methods for properties
  attr_accessor :name, :species, :age

  # Define a class variable "population" and set it to 0
  @@population = 0

  # Define a class method to print the current population of animals
  def self.get_population
    puts "There are #{@@population} animals currently in existence."
  end

  # Define an initializer method for the Animal class, taking in name, species, and age as parameters
  def initialize(name, species, age)
    @name = name
    @species = species
    @age = age
    @@population += 1 # Increase population by 1 whenever a new animal is initialized
  end

  # Define an instance method to print out the animal's name and age
  def introduce
    puts "Hi! My name is #{@name} and I am #{@age} years old."
  end

  # Define a method to calculate the animal's life expectancy based on its species
  def calculate_life_expectancy
    case @species
    when "dog"
      life_expectancy = 15 # Average life expectancy of a dog is 15 years
    when "cat"
      life_expectancy = 18 # Average life expectancy of a cat is 18 years
    when "turtle"
      life_expectancy = 100 # Average life expectancy of a turtle is 100 years
    end

    puts "#{@name} has a life expectancy of #{life_expectancy} years."
  end
end

# Create new instances of the Animal class
dog = Animal.new("Max", "dog", 7)
cat = Animal.new("Whiskers", "cat", 12)
turtle = Animal.new("Shelly", "turtle", 5)

# Call the instance method "introduce" on each of the animals
dog.introduce
cat.introduce
turtle.introduce

# Call the class method "get_population" to print out the current population of animals
Animal.get_population

# Call the instance method "calculate_life_expectancy" on each of the animals
dog.calculate_life_expectancy
cat.calculate_life_expectancy
turtle.calculate_life_expectancy
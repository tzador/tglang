# This code snippet demonstrates how to create a class in Ruby and define various methods and properties within it.

class Person  # creates a new class called Person

    attr_reader :name # creates a getter method for the instance variable "name"
    attr_writer :age  # creates a setter method for the instance variable "age"

    def initialize(name, age)  # defines an initialize method that sets the instance variables "name" and "age"
        @name = name        
        @age = age
    end
    
    # creates a method to display the person's name and age
    def display_info
        puts "#{@name} is #{@age} years old."
    end
    
    # creates a method to check if the person is an adult based on their age
    def adult?
        if @age >= 18
            return true
        else
            return false
        end
    end

    # creates a method to increment the person's age
    def age_up
        @age += 1
    end
    
    # creates a method to change the person's name
    def change_name(new_name)
        @name = new_name
    end
end

# creating an instance of the Person class
person1 = Person.new("John", 25)

# calling the display_info method on the instance
person1.display_info
# => John is 25 years old.

# calling the adult? method on the instance
person1.adult?
# => true

# incrementing the age of the instance by 1 using the age_up method
person1.age_up
person1.display_info
# => John is 26 years old.

# changing the name of the instance using the change_name method
person1.change_name("Jack")
person1.display_info
# => Jack is 26 years old.
# This code snippet takes in a list of numbers, and prints the ones that are prime numbers.
# It uses the Sieve of Eratosthenes algorithm to find prime numbers.
# The `eratosthenes_sieve` method takes in an array of numbers and returns an array of prime numbers from that list.

def eratosthenes_sieve(numbers)
  max = numbers.max
  primes = (0..max).to_a
  primes[0] = primes[1] = nil

  primes.each do |p|
    next unless p

    break if p * p > max

    (p * p).step(max, p) { |m| primes[m] = nil }
  end

  primes.compact
end

# Example usage
numbers = [2, 17, 5, 9, 11, 19, 16]
primes = eratosthenes_sieve(numbers)

puts primes # Output: [2, 17, 5, 11, 19]
# This is a complex code snippet in RUBY
require 'net/http'
require 'uri'

module API
  # This module represents the API client for making HTTP requests
  class Client
    # Constructor method that receives the base URL of the API
    def initialize(base_url)
      @base_url = base_url
    end

    # Method for making GET requests to the API
    def get(path)
      uri = URI.parse("#{@base_url}/#{path}")
      req = Net::HTTP::Get.new(uri)
      res = Net::HTTP.start(uri.hostname, uri.port) do |http|
        http.request(req)
      end

      res.code
    end

    # Method for making POST requests to the API
    def post(path, data)
      uri = URI.parse("#{@base_url}/#{path}")
      req = Net::HTTP::Post.new(uri)
      req.set_form_data(data)
      res = Net::HTTP.start(uri.hostname, uri.port) do |http|
        http.request(req)
      end

      res.code
    end

    # Method for making PUT requests to the API
    def put(path, data)
      uri = URI.parse("#{@base_url}/#{path}")
      req = Net::HTTP::Put.new(uri)
      req.set_form_data(data)
      res = Net::HTTP.start(uri.hostname, uri.port) do |http|
        http.request(req)
      end

      res.code
    end

    # Method for making DELETE requests to the API
    def delete(path)
      uri = URI.parse("#{@base_url}/#{path}")
      req = Net::HTTP::Delete.new(uri)
      res = Net::HTTP.start(uri.hostname, uri.port) do |http|
        http.request(req)
      end

      res.code
    end
  end
end
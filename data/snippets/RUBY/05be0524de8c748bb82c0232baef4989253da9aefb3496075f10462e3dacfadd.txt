# This is a recursive function that performs a binary search on a sorted array.
# Input paramters: array - the sorted array, target - the value to be found
# Output: the index of the target value, or -1 if not found
def binary_search(array, target)
  # Base case - if the array is empty, return -1
  return -1 if array.empty?
  # Calculate the mid index of the array
  mid = array.length / 2
  # If the array at the mid index is the target, return the mid index
  return mid if array[mid] == target
  # If the target is less than the mid value, recursively call binary_search on the left half of the array
  if target < array[mid]
    return binary_search(array[0..mid-1], target)
  # If the target is greater than the mid value, recursively call binary_search on the right half of the array
  else
    return binary_search(array[mid+1..-1], target)
  end
end

# Example usage
sorted_array = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
target = 17
# Calling binary_search function
index = binary_search(sorted_array, target)

# Output
puts "Target #{target} found at index #{index}"
# Output: Target 17 found at index 8
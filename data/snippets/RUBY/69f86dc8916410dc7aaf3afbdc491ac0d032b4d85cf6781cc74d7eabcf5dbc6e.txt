# This code snippet generates a list of prime numbers up to a given limit
# using the Sieve of Eratosthenes algorithm

def primes(limit)
  #create an array of numbers from 2 up to the limit
  nums = (2..limit).to_a

  #initialize an empty array to store prime numbers
  primes = []

  #iterate through the array of numbers starting with 2
  nums.each do |num|
    #check if the number is not marked as a non-prime number
    if nums[num-2] != nil
      #add the number to the list of primes
      primes << num
      #mark all multiples of the number as non-prime by replacing them with nil
      nums[num-2.step(limit-2, num).to_a] = nil
    end
  end

  #remove all the nil values and return the list of prime numbers
  primes.compact
end

#call the function and pass the limit as an argument
primes(20)

#output: [2, 3, 5, 7, 11, 13, 17, 19]
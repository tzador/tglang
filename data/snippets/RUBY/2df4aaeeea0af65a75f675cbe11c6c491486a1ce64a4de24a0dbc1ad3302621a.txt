# This code snippet is an example of a complex function in Ruby that takes in three parameters and returns a string
def complex_function(param1, param2, param3) # defining the function
  if param1.is_a?(String) && param2.is_a?(String) && !param3.nil? # conditional statement
    result = param1 + " " + param2 # concatenating strings
    reversed_string = result.reverse # reversing the concatenated string
    final_string = reversed_string + " " + param3.to_s # type-casting param3 to a string and concatenating to reversed string
    return final_string # returning the final string
  elsif param1.is_a?(Integer) && param2.is_a?(Float) && param3.is_a?(Numeric) # nested conditional statement
    result = param1 * param2 / param3
    squared_result = result ** 2 # squaring the result
    return "The squared result is #{squared_result}" # returning interpolated string
  else # default case
    return "Invalid parameters provided. Please provide a string, string, and non-nil value or an integer, float, and numeric value."
  end
end

# calling the function with different arguments
puts complex_function("Hello", "World", 50) # prints "olleH dlroW 50"
puts complex_function(5, 3.5, 10) # prints "The squared result is 8.75"
puts complex_function("Programming", "Language", nil) # prints "Invalid parameters provided. Please provide a string, string, and non-nil value or an integer, float, and numeric value."
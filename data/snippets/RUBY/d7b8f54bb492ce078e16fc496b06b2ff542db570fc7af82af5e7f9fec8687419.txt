def fibonacci(n)                          #Defining a method that takes in an integer as an argument
  if n <= 1                               #Checks if the argument is less than or equal to 1
    return n                              #If true, returns the argument as it is part of the Fibonacci sequence
  else
    return fibonacci(n-1) + fibonacci(n-2) #If false, calls the fibonacci method recursively with n-1 and n-2 as arguments, adding the results together
  end
end

def factorial(n)                          #Defining a method that takes in an integer as an argument
  if n == 0                               #Checks if the argument is equal to 0
    return 1                              #If true, returns 1 as 0! = 1
  else
    return n * factorial(n-1)             #If false, calls the factorial method recursively with n-1 as argument, multiplying the results together
  end
end

def sum_array(array)                      #Defining a method that takes in an array as an argument
  array.reduce(0, :+)                     #Uses the reduce method to iterate through the array and add each element to the accumulator (starting with 0)
end

def reverse(string)                        #Defining a method that takes in a string as an argument
  string.chars.reverse.join               #Uses the chars method to convert the string into an array, then reverses the array and joins the elements back into a string
end

def bubble_sort(array)                     #Defining a method that takes in an array as an argument
  n = array.length                        #Assigns the length of the array to a variable n
  loop do                                 #Starts a loop
    swapped = false                       #Sets a variable to false to track if any swaps were made
    (n-1).times do |i|                     #Iterates through the array up to n-1 indexes
      if array[i] > array[i+1]            #Checks if the current element is greater than the next element
        array[i], array[i+1] = array[i+1], array[i] #If true, swaps the two elements
        swapped = true                    #Sets the swapped variable to true
      end
    end
    break if not swapped                  #Breaks out of the loop if no swaps were made
  end
  array                                   #Returns the sorted array
end
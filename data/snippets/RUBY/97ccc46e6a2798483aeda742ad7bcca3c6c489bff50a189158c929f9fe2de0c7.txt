class Animal
  #defines the Animal class
  attr_accessor :species, :name #creates reader and writer methods for species and name
  @@count = 0 #initialize a class variable to track number of animal instances
  def initialize(species, name) #defines the initialize method with species and name parameters
    @species = species #assigns species parameter to instance variable
    @name = name #assigns name parameter to instance variable
    @@count += 1 #increments class variable count by 1
  end

  #getter and setter methods for class variable count
  def self.count
    @@count
  end

  def self.count=(num)
    @@count = num
  end

  #instance method that creates information string for each animal
  def info
    "This animal's name is #{name} and it is a #{species}."
  end

  #class method that returns the average number of animals per species
  def self.avg_per_species
    @@count / Animal.species_list.length.to_f
  end

  #class method that returns an array of all the unique species within animal instances
  def self.species_list
    Animal.all.map { |animal| animal.species }.uniq
  end

  #class method that returns an array of all the animal instances
  def self.all
    ObjectSpace.each_object(self).to_a
  end
end

#creates two animal instances with different species and names
tiger = Animal.new("Tiger", "Terry")
lion = Animal.new("Lion", "Leo")

#calls class method to get average number of animals per species
puts Animal.avg_per_species

#calls instance method to get information about lion
puts lion.info

#sets class variable count to 0
Animal.count = 0

#creates three additional animal instances
bear = Animal.new("Bear", "Benny")
elephant = Animal.new("Elephant", "Ella")
gorilla = Animal.new("Gorilla", "Gary")

#calls class method to get total number of animal instances
puts Animal.count

#calls class method to get array of unique species within animal instances
puts Animal.species_list
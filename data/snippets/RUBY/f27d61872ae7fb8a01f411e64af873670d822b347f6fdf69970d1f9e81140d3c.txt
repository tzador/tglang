# This code snippet checks the validity of a credit card number using the Luhn Algorithm.
# It takes in a 16-digit number and returns true if it is a valid credit card number, false otherwise.

def validate_credit_card(number)
  # split the number into individual digits
  digits = number.to_s.split('').map(&:to_i)

  # double every other digit, starting from the second to last
  # if the result is two-digit, add the two digits together
  (digits.length - 2).step(0, -2) do |index|
    digits[index] *= 2
    digits[index] = digits[index].to_s.split('').map(&:to_i).reduce(&:+) if digits[index] > 9
  end

  # sum all the digits in the number
  sum = digits.reduce(&:+)

  # if the sum is a multiple of 10, the number is valid
  sum % 10 == 0
end

# example
validate_credit_card(4556737586899855) # returns true
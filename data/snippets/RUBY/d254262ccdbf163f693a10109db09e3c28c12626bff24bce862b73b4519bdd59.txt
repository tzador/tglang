#!/usr/bin/env ruby

# This is a comment.
# It does not affect the execution of the code.

# Defining a class named "Person"
class Person
    # Use `attr_accessor` to generate getters and setters for the `name` and `age` instance variables
    attr_accessor :name, :age

    # Define a class variable named `people` that is an empty array
    @@people = []

    # Define a class method named `count` that returns the length of the `people` array
    def self.count
        @@people.length
    end

    # Define a constructor method that takes in two parameters, `name` and `age`, and sets them as instance variables
    def initialize(name, age)
        @name = name
        @age = age
    end

    # Define an instance method named `introduce` that prints out a string with the person's name and age
    def introduce
        puts "Hi, my name is #{name} and I am #{age} years old."
    end

    # Define an instance method named `add_to_list` that adds the current person to the `people` array
    def add_to_list
        @@people << self
    end
end

# Create a new instance of the `Person` class with the name "John" and age 25
john = Person.new("John", 25)

# Call the `introduce` method on the `john` instance
john.introduce

# Call the `add_to_list` method on the `john` instance, adding it to the `people` array
john.add_to_list

# Create another instance of the `Person` class with the name "Emily" and age 30
emily = Person.new("Emily", 30)

# Call the `introduce` method on the `emily` instance
emily.introduce

# Call the `add_to_list` method on the `emily` instance, adding it to the `people` array
emily.add_to_list

# Print out the number of people in the `people` array by calling the `count` method
puts "There are #{Person.count} people in the list."
def merge_sort(array)
  # This method implements the merge sort algorithm that sorts an array of integers
  
  # Check if the array is already sorted
  return array if array.length <= 1
  
  # Divide the array into two subarrays
  mid = array.length / 2
  left = merge_sort(array[0..mid - 1])
  right = merge_sort(array[mid..array.length - 1])
  
  # Create a sorted array to store the merged subarrays
  sorted_array = []
  
  # Merge the two subarrays
  until left.empty? || right.empty?
    if left.first < right.first
      sorted_array << left.shift
    else
      sorted_array << right.shift
    end
  end
  
  # Add any remaining elements from the subarrays
  sorted_array.concat(left).concat(right)
  
  # Return the sorted array
  sorted_array
end

# Example usage
array = [3, 5, 1, 8, 2, 9, 10]
sorted_array = merge_sort(array)
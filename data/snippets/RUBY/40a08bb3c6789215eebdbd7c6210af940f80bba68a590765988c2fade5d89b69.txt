class Student
    attr_accessor :name, :age, :major # creates getter and setter methods for instance variables 
 
    def initialize(name, age, major) 
        @name = name  
        @age = age  
        @major = major  
    end 
 
    def study(subject)  
        puts "#{name} is studying #{subject}."  
    end
 
    def graduate(grad_year)  
        @grad_year = grad_year  
        puts "#{name} will graduate in #{grad_year}."  
    end  
end
 
class ScienceStudent < Student # inherits from Student class  
    attr_accessor :research_topic # adds a new attribute and corresponding getter and setter methods
 
    def initialize(name, age, major, research_topic)  
        super(name, age, major) # calls the parent class constructor method 
        @research_topic = research_topic  
    end 
 
    def study(subject)  
        puts "#{name} is studying #{subject}, with a focus on #{research_topic}."  
    end   
end
 
student1 = Student.new("Jane", 21, "History")  
student2 = ScienceStudent.new("John", 23, "Biology", "Microbiology")  
 
student1.study("Art History") # output: "Jane is studying Art History."  
student2.study("Biology") # output: "John is studying Biology, with a focus on Microbiology."
 
student1.graduate(2022) # output: "Jane will graduate in 2022."  
student2.graduate(2023) # output: "John will graduate in 2023."
# This code snippet creates a class called Polygon and defines methods for calculating
# the area, perimeter, and number of sides of the polygon.

class Polygon
  attr_reader :sides, :perimeter, :area

  # Initializes the Polygon class with the number of sides and the lengths of those sides.
  def initialize(*sides)
    raise ArgumentError, "A polygon must have at least 3 sides." if sides.length < 3

    @sides = sides
    @perimeter = calculate_perimeter
    @area = calculate_area
  end

  # Calculates the perimeter of the polygon by summing the lengths of all sides.
  def calculate_perimeter
    perimeter = 0

    @sides.each do |side|
      perimeter += side
    end

    perimeter
  end

  # Calculates the area of the polygon using Heron's formula.
  # Assumes that the polygon is convex and the given lengths of sides can form a valid polygon.
  # See https://en.wikipedia.org/wiki/Heron's_formula for more information.
  def calculate_area
    # Finds the semiperimeter.
    s = @perimeter / 2.0

    # Calculates the area using Heron's formula.
    area = Math.sqrt(s * (@sides[0] * @sides[1] * @sides[2]))

    # Rounds the area to the nearest 2 decimal places.
    area = area.round(2)

    area
  end

  # Returns the number of sides of the polygon.
  def num_sides
    @sides.length
  end
end

# Creates a new Polygon object with 5 sides of lengths 4, 6, 5, 3, and 7.
polygon = Polygon.new(4, 6, 5, 3, 7)

# Outputs the results of the Polygon methods.
puts "The polygon has #{polygon.num_sides} sides."
puts "The perimeter of the polygon is #{polygon.perimeter}."
puts "The area of the polygon is #{polygon.area}."
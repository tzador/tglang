class Animal
    attr_reader :name, :age, :color # define attributes for name, age, and color
    
    def initialize(name, age, color) # define initialize method to take in parameters
        @name = name
        @age = age
        @color = color
    end
    
    def speak(sound) # define speak method to output sound
        puts "This animal says #{sound}!" 
    end
    
    def move(direction) # define move method to output direction
        puts "#{@name} is moving #{direction}!"
    end
    
end

class Dog < Animal # Dog class inherits from Animal class
    def initialize(name, age, color, breed) # define initialize method to take in additional breed parameter
        super(name, age, color) # use super to access parent class attributes
        @breed = breed # set additional attribute
    end
    
    def speak(sound="woof") # override parent class speak method with default value for sound
        puts "This dog says #{sound}!"
    end
    
    def fetch(object) # define fetch method to output object being fetched
        puts "#{@name} fetched the #{object}!"
    end
    
end

fido = Dog.new("Fido", 3, "brown", "Labrador") # create new instance of Dog
fido.speak("bark") # output: This dog says bark!
fido.move("forward") # output: Fido is moving forward!
fido.fetch("ball") # output: Fido fetched the ball!
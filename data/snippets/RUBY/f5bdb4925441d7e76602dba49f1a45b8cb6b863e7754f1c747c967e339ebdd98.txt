# This is a code snippet in Ruby
# It contains complex logic and multiple methods
# It also has comments for better understanding

# Define a class called "Player"
class Player
  attr_reader :name # Create a reader method for "name" attribute
  attr_accessor :score # Create reader and writer methods for "score" attribute

  # Initialize method with parameters "name" and "score"
  def initialize(name, score)
    @name = name # Assign "name" to an instance variable
    @score = score # Assign "score" to an instance variable
  end

  # Method to update score for a player
  def update_score(points)
    @score += points # Increment score by given points
  end

  # Method to display player's information
  def display_info
    puts "Player: #{@name}"
    puts "Score: #{@score}"
  end
end

# Instantiate new player objects
player1 = Player.new("John", 0)
player2 = Player.new("Sarah", 0)

# Loop to simulate a game
10.times do
  # Generate random points for each player between 1 to 10
  player1_points = rand(1..10)
  player2_points = rand(1..10)

  # Call update_score method to add points for each player
  player1.update_score(player1_points)
  player2.update_score(player2_points)

  # Display each player's information
  player1.display_info
  player2.display_info

  # Determine and display the winner
  if player1.score > player2.score
    puts "Player #{player1.name} is in the lead!"
  elsif player1.score < player2.score
    puts "Player #{player2.name} is in the lead!"
  else
    puts "It's a tie!"
  end

  puts "-" * 20 # Just for better formatting
end
# This is a complex method that uses recursion to find the nth Fibonacci number
def fibonacci(n)
  return n if n <= 1
  fibonacci(n - 1) + fibonacci(n - 2)
end

# This is an array of integers
numbers = [1, 2, 3, 4, 5]

# This is a loop that prints each number in the array
for num in numbers do
  puts num
end

# This is a class called Rectangle with two attributes, width and height
class Rectangle
  attr_accessor :width, :height

  # This is the constructor method that initializes the width and height of the rectangle
  def initialize(width, height)
    @width = width
    @height = height
  end

  # This method calculates and returns the area of the rectangle
  def area
    @width * @height
  end

  # This method calculates and returns the perimeter of the rectangle
  def perimeter
    2 * (@width + @height)
  end
end

# This is a conditional statement that checks if the rectangle is a square or not
if rectangle.width == rectangle.height
  puts "This rectangle is a square."
else
  puts "This rectangle is not a square."
end

# This calls the fibonacci method and passes in the number 7 as the argument
puts fibonacci(7)
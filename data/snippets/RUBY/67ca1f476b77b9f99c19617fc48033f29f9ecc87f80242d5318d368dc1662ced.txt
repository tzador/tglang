##### Helper Functions #####

# Calculates the greatest common divisor of two integers
def gcd(a, b)
  while b != 0
    t = b
    b = a % b
    a = t
  end

  a # return the gcd
end

# Generates a random list of numbers between a given range
def generate_random_list(range_min, range_max, list_length)
  list = []

  (1..list_length).each do |i|
    list << rand(range_min..range_max)
  end

  list # return the generated list
end

# Checks if a given number is prime
def is_prime?(num)
  return false if num <= 1 # 1 is not a prime number

  Math.sqrt(num).to_i.downto(2).each do |i|
    return false if num % i == 0
  end

  true # return true if the number is prime
end

##### Main Program #####

puts "Enter a positive number: " # ask user for input
num = gets.chomp.to_i # get user input and convert to integer

puts "#{num} is prime!" if is_prime?(num) # checks and prints if the number is prime
puts "#{num} is not prime!" unless is_prime?(num) # checks and prints if the number is not prime

# generate a list of random numbers
list = generate_random_list(1, 100, 10)
puts "A list of random numbers between 1 and 100 with 10 elements:"
print list # prints the generated list

# find the largest number in the list using a helper function
max = list[0]

list.each do |num|
  max = num if num > max
end

puts "The largest number in the list is #{max}."
# This code snippet generates a random password with a user-specified length and includes at least one uppercase, lowercase, numeric, and special character.

require 'securerandom' # import the SecureRandom module to generate random strings

# define a method to generate the password
def generate_password(length)
  uppercase = ('A'..'Z').to_a # array of all uppercase letters
  lowercase = ('a'..'z').to_a # array of all lowercase letters
  numeric = ('0'..'9').to_a # array of all numeric characters
  special = ['!', '@', '#', '$', '%', '&', '*'] # array of special characters

  password = '' # initialize an empty string to store password
  password += uppercase.sample # add a random uppercase character to the password
  password += lowercase.sample # add a random lowercase character to the password
  password += numeric.sample # add a random numeric character to the password
  password += special.sample # add a random special character to the password

  # add random characters to the password until it reaches the specified length
  while password.length < length
     # randomly select from any of the four arrays and add it to the password
    password += [uppercase, lowercase, numeric, special].sample.sample
  end

  # shuffle the password characters to ensure randomness
  password = password.chars.shuffle.join

  # return the password
  password
end

# prompt user for password length and convert to integer
puts "Enter the desired length for your password: "
length = gets.chomp.to_i

# generate and print the password
puts "Your randomly generated password with a length of #{length} is:"
puts "
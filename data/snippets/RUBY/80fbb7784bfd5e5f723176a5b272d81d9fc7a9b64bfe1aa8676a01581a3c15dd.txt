require 'net/http' # Importing the 'net/http' library for making HTTP requests

# Creating a new class called 'ApiWrapper' that inherits from the 'Object' class
class ApiWrapper < Object
  # Defining a method called 'get_data' which takes in a URL as an argument
  def get_data(url)
    uri = URI(url) # Creating a new URI object with the given URL
    response = Net::HTTP.get_response(uri) # Sending a GET request to the URL and storing the response in a variable

    # Checking if the response was successful, and if so, printing out the response's body
    if response.code == '200'
      puts response.body
    else
      puts "Request failed: #{response.code}"
    end
  end
end

api = ApiWrapper.new # Creating a new instance of the 'ApiWrapper' class
api.get_data('https://www.example.com') # Calling the 'get_data' method with a sample URL as the argument
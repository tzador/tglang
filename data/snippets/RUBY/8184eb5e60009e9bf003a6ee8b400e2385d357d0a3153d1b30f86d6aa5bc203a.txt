# Main class
class Person
  attr_accessor :name, :age, :location

  # Constructor method, sets name, age, and location
  def initialize(name, age, location)
    @name = name
    @age = age
    @location = location
  end

  # Method to greet a person
  def greet
    puts "Hello, I am #{@name} and I am #{@age} years old."
  end

  # Method to update location
  def update_location(new_location)
    @location = new_location
    puts "My new location is #{@location}."
  end
end

# Subclass of Person class
class Student < Person
  attr_accessor :major, :gpa

  # Constructor method, sets name, age, location, and major
  def initialize(name, age, location, major)
    super(name, age, location)
    @major = major
    @gpa = 4.0
  end

  # Method to update major
  def update_major(new_major)
    @major = new_major
    puts "My new major is #{@major}."
  end

  # Method to update GPA
  def update_gpa(new_gpa)
    @gpa = new_gpa
    puts "My new GPA is #{@gpa}."
  end
end

# Create instances of Person and Student
person = Person.new("John", 25, "New York")
student = Student.new("Jane", 20, "Los Angeles", "Computer Science")

# Output information for person instance
puts "Name: #{person.name}"
puts "Age: #{person.age}"
puts "Location: #{person.location}"

# Output information for student instance
puts "Name: #{student.name}"
puts "Age: #{student.age}"
puts "Location: #{student.location}"
puts "Major: #{student.major}"
puts "GPA: #{student.gpa}"

# Update information for person instance
person.age = 30
person.update_location("Chicago")

# Update information for student instance
student.update_major("Business")
student.update_gpa(3.8)

# Output updated information for person instance
puts "Updated age: #{person.age}"
puts "Updated location: #{person.location}"

# Output updated information for student instance
puts "Updated major: #{student.major}"
puts "Updated GPA: #{student.gpa}"
require 'time' # Import the 'time' library

# Define a method called 'time_converter' that takes in a parameter, 'time_string'
def time_converter(time_string)
  # Initialize an empty string to store the converted time
  converted_time = ""

  # Use the .split method to separate the hours, minutes, and seconds
  # Split the 'time_string' parameter at the ":" character, 
  # and assign the resulting array to the 'time_array' variable
  time_array = time_string.split(":")

  # Use the .first method to retrieve the first element in the 'time_array' (hours)
  # Convert the hours into an integer and assign it to the 'hours' variable
  hours = time_array.first.to_i

  # Use the .last method to retrieve the last element in the 'time_array' (AM/PM)
  # Assign the resulting string to the 'am_pm' variable
  am_pm = time_array.last

  # Use conditional statements to check the value of 'am_pm' 
  # and adjust the 'hours' variable accordingly
  if am_pm == "PM" && hours < 12
    hours += 12
  elsif am_pm == "AM" && hours == 12
    hours = 0
  end

  # Convert the hours back into a string and add it to the 'converted_time' string
  # Include a ":" between the hours and the minutes
  converted_time += hours.to_s + ":"

  # Use the .[] method to retrieve the second element in the 'time_array' (minutes)
  # Convert the minutes into an integer and assign it to the 'minutes' variable
  minutes = time_array[1].to_i

  # If the 'minutes' variable is single digit, add a "0" before it to maintain format
  if minutes < 10
    minutes = "0" + minutes.to_s
  end

  # Convert the minutes back into a string and add it to the 'converted_time' string
  # Include a ":" between the minutes and the seconds
  converted_time += minutes.to_s + ":"

  # Use the .[] method to retrieve the third element in the 'time_array' (seconds)
  # Convert the seconds into an integer and assign it to the 'seconds' variable
  seconds = time_array[2].to_i

  # If the 'seconds' variable is single digit, add a "0" before it to maintain format
  if seconds < 10
    seconds = "0" + seconds.to_s
  end

  # Convert the seconds back into a string and add it to the 'converted_time' string
  converted_time += seconds.to_s

  # Return the 'converted_time' string as the output of the 'time_converter' method
  return converted_time
end

# Call the 'time_converter' method with a time string as the argument
# Print the returned value to the console
puts time_converter("01:30:04AM")

# Output: 01:30:04 (result of converting 01:30:04AM into 24-hour time format)
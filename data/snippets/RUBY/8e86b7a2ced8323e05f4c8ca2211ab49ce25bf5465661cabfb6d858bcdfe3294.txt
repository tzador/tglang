# This code snippet demonstrates the use of classes and inheritance in Ruby
# The Car class is the parent class with attributes such as make, model, and year
# The ElectricCar class inherits from Car class and adds a new attribute "battery_capacity"
# The display_info method is overridden in the ElectricCar class to include the battery_capacity in the output

class Car
  attr_accessor :make, :model, :year
  
  def initialize(make, model, year)
    @make = make
    @model = model
    @year = year
  end
  
  def display_info
    puts "This is a #{@year} #{@make} #{@model}"
  end
end

class ElectricCar < Car
  attr_accessor :battery_capacity
  
  def initialize(make, model, year, battery_capacity)
    super(make, model, year)
    @battery_capacity = battery_capacity
  end
  
  def display_info
    puts "This is a #{@year} #{@make} #{@model} with a battery capacity of #{@battery_capacity}"
  end
end

tesla = ElectricCar.new("Tesla", "Model S", 2020, "100kWh")
tesla.display_info # Output: This is a 2020 Tesla Model S with a battery capacity of 100kWh
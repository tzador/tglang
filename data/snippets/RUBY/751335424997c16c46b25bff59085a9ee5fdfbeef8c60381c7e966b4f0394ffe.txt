# This program generates a randomly sorted array of numbers and uses
# quicksort algorithm to sort it in ascending order

# Define a method to generate an array of random numbers
def generate_array(size)
  array = []
  size.times { array << rand(100) } # array contains numbers between 0-99
  array
end

# Define a method for the quicksort algorithm
def quicksort(array)
  return array if array.length <= 1 # base case: array is already sorted

  # choose a pivot element, in this case, the first element
  pivot = array[0]
  left = []
  right = []

  # divide the array into two subarrays, one for elements smaller than pivot and one for larger
  (1..(array.length-1)).each do |i|
    if array[i] < pivot
      left << array[i]
    else
      right << array[i]
    end
  end

  # recursively sort the subarrays using quicksort method
  sorted_left = quicksort(left)
  sorted_right = quicksort(right)

  # combine the sorted subarrays with the pivot element and return the final sorted array
  sorted_left + [pivot] + sorted_right
end

# generate an array of 10 random numbers and print it
array = generate_array(10)
puts "Unsorted array: #{array}"

# sort the array using quicksort method and print the result
sorted_array = quicksort(array)
puts "Sorted array: #{sorted_array}"
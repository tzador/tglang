def quicksort(arr)                                  # Define quicksort method
  return arr if arr.length < 2                       # Base case: return array if length is less than 2
  pivot = arr.sample                                # Choose pivot element randomly
  less, equal, greater = [], [], []                 # Initialize arrays for elements less than, equal to, and greater than pivot
  arr.each do |element|                             # Loop through array
    if element < pivot                               # If element is less than pivot
      less << element                                 # Add element to "less" array
    elsif element > pivot                             # If element is greater than pivot
      greater << element                              # Add element to "greater" array
    else                                             # If element is equal to pivot
      equal << element                                # Add element to "equal" array
    end
  end
  quicksort(less) + equal + quicksort(greater)       # Recursively call quicksort on "less" and "greater" arrays and combine them with "equal" array
end                                                  # End quicksort method

arr = [5, 2, 8, 3, 1, 9, 4, 7, 6]                    # Create array for sorting
puts "Unsorted array: #{arr.join(", ")}"             # Print unsorted array
puts "Sorted array: #{quicksort(arr).join(", ")}"    # Call quicksort method on array and print the sorted array
# This function returns the sum of two numbers
# Input: x (integer), y (integer)
# Output: z (integer)
def sum(x, y)
  z = x + y       #Adding x and y
  return z        #Returning final sum
end

# This function multiplies two numbers
# Input: x (integer), y (integer)
# Output: z (integer)
def multiply(x, y)
  z = x * y       #Multiplying x and y
  return z        #Returning final product
end

#This function calculates the factorial of a number
#Input: n (integer)
# Output: factorial (integer)
def factorial(n)
  if n == 0              #Base case set to 0
    factorial = 1        #Factorial of 0 is 1
  else
    factorial = n * factorial(n-1)       #Recursively calling function until n reaches 0
  end
  return factorial      #Returning final factorial value
end

#This function checks if a word is a palindrome
#Input: word (string)
#Output: boolean (true or false)
def palindrome?(word)
  word == word.reverse      #Checks if word is equal to its reverse
end

#This function sorts an array in ascending order
#Input: array (array)
#Output: sorted_array (array)
def sort_asc(array)
  sorted_array = array.sort     #Uses built-in sort method to sort array in ascending order
end

#This function finds the third largest number in an array
#Input: array (array)
#Output: third_largest (integer)
def third_largest(array)
  sorted_array = array.sort.reverse     #Sorts array in descending order
  third_largest = sorted_array[2]       #Third largest number will be at index 2 in sorted array
  return third_largest
end

#This function checks if a number is prime
#Input: num (integer)
#Output: boolean (true or false)
def is_prime(num)
  if num <= 1            #Any number less than or equal to 1 cannot be prime
    return false 
  elsif num <= 3         #2 and 3 are prime numbers
    return true
  elsif num % 2 == 0     #Any even number is not prime
    return false
  else                   #For all other numbers, check divisibility by odd numbers
    i = 3
    while i <= Math.sqrt(num)    #Only need to check up to square root of num
      if num % i == 0
        return false             #If num is divisible by current number, then not prime
      end
      i += 2                     #Increment by 2 to check all odd numbers
    end
    return true                 #If num is not divisible by any odd number, then it is prime
  end
end

#This function calculates the nth Fibonacci number
#Input: n (integer)
#Output: fibonacci (integer)
def fibonacci(n)
  if n == 0             #Fibonacci of 0 is 0
    fibonacci = 0
  elsif n == 1         #Fibonacci of 1 is 1
    fibonacci = 1
  else
    fibonacci = fibonacci(n-1) + fibonacci(n-2)      #Calculates Fibonacci recursively
  end
  return fibonacci           #Returns final fibonacci value
end
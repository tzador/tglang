# Define a class named Vehicle
class Vehicle 
  # Constructor method
  def initialize(make, year, color)
    @make = make
    @year = year
    @color = color
  end

  # Getter method for make
  def make
    @make
  end

  # Setter method for make
  def make=(make)
    @make = make
  end

  # Getter method for year
  def year
    @year
  end

  # Setter method for year
  def year=(year)
    @year = year
  end

  # Getter method for color
  def color
    @color
  end

  # Setter method for color
  def color=(color)
    @color = color
  end

  # Method to output vehicle information
  def output_info
    puts "Make: #{@make}, Year: #{@year}, Color: #{@color}"
  end
end

# Define a subclass of Vehicle named Car
class Car < Vehicle 
  # Constructor method
  def initialize(make, year, color, engine_size)
    super(make, year, color)
    @engine_size = engine_size
  end

  # Getter method for engine_size
  def engine_size
    @engine_size
  end

  # Setter method for engine_size
  def engine_size=(engine_size)
    @engine_size = engine_size
  end

  # Method to output car information
  def output_info
    puts "Make: #{@make}, Year: #{@year}, Color: #{@color}, Engine Size: #{@engine_size}"
  end
end

# Create an instance of the Vehicle class
vehicle = Vehicle.new("Honda", 2005, "Blue")
# Output vehicle information
vehicle.output_info

# Create an instance of the Car class
car = Car.new("Toyota", 2010, "Red", "2.4L")
# Output car information
car.output_info

# Change the make of the car
car.make = "Chevrolet"
# Output updated car information
car.output_info
# This code snippet calculates the nth prime number
def prime_number(n)
  primes = [2] # initialize primes array with 2 as the first prime number
  number = 3 # initialize number as the next odd number
  while primes.length < n
    # loop while the length of primes array is less than the input number
    is_prime = true # set a boolean to check if number is prime
    (2...number).each do |divisor|
      # loop through all numbers from 2 to number - 1
      if number % divisor == 0
        is_prime = false # if the number is divisible by any number, it is not prime
        break # exit the loop
      end
    end
    if is_prime # if number is prime, add it to the primes array
      primes << number
    end
    number += 2 # increment number by 2 to get the next odd number
  end
  return primes[-1] # return the last number in the primes array
end

puts prime_number(1000) # prints the 1000th prime number
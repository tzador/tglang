# This code snippet creates a class called "Animal" with three attributes: name, age, and species.
class Animal
  # attr_accessor allows us to read and write to the attributes of our class.
  attr_accessor :name, :age, :species
  
  # Initializes a new instance of the Animal class with the given attributes.
  def initialize(name, age, species)
    @name = name
    @age = age
    @species = species
  end
  
  # This method prints out a string stating the animal's name and age.
  def speak
    puts "#{self.name} is #{self.age} years old."
  end
  
  # This method checks whether the animal is an endangered species.
  def is_endangered?
    if self.species == "Tiger" || self.species == "Panda" || self.species == "Gorilla"
      return true
    else
      return false
    end
  end
  
  # This method calculates the animal's life expectancy based on its age and species.
  def life_expectancy
    case self.species
      when "Tiger"
        years_left = 20 - self.age
      when "Panda"
        years_left = 30 - self.age
      when "Gorilla"
        years_left = 40 - self.age
      else
        years_left = 10 - self.age
    end
    
    return "This #{self.species} has an average life expectancy of #{years_left} years."
  end
end

# Creates a new instance of the Animal class with the given attributes.
lion = Animal.new("Leo", 5, "Lion")

# Calls the speak method on the lion instance.
lion.speak

# Checks if the lion is an endangered species.
puts lion.is_endangered?

# Calls the life_expectancy method on the lion instance and prints out the result.
puts lion.life_expectancy
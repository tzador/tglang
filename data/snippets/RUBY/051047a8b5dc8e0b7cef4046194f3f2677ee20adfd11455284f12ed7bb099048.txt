# This method takes in an array of numbers and outputs only the prime numbers in the array
def find_primes(array)
    # create a new empty array to store prime numbers
    primes = []
    # iterate through the input array
    array.each do |num|
        # check if the number is greater than 1 (since 1 is not a prime number)
        if num > 1
            # set a flag to check if the number is prime
            prime = true
            # check if the number is divisible by any number smaller than it (excluding 1)
            (2...num).each do |i|
                if num % i == 0
                    # if the number is divisible, it is not prime
                    prime = false
                    # break out of the loop to save time
                    break
                end
            end
            # if the number is still considered prime, add it to the primes array
            primes << num if prime
        end
    end
    # return the array of prime numbers
    return primes
end

# example input array
array = [2, 5, 7, 8, 12, 17, 19, 23]

# call the find_primes method on the input array
result = find_primes(array)

# print the result
puts result

# output: [2, 5, 7, 17, 19, 23]
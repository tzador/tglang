# Initialize an array with random numbers
array = [rand(100), rand(100), rand(100), rand(100)]

# Define a method to perform quicksort algorithm
# Takes in an array of numbers as input
def quicksort(numbers)
  # Return array if only one element
  if numbers.length <= 1
    return numbers
  else
    # Choose a pivot element (here, the first element)
    pivot = numbers[0]
    # Create empty arrays for elements less than pivot and greater than pivot
    less_array = []
    greater_array = []

    # Loop through elements in the array
    for i in 1..numbers.length-1
      # If element is less than or equal to pivot, add to less_array
      if numbers[i] <= pivot
        less_array.push(numbers[i])
      # If element is greater than pivot, add to greater_array
      else
        greater_array.push(numbers[i])
      end
    end

    # Use recursion to continue sorting on the smaller arrays
    return quicksort(less_array) + [pivot] + quicksort(greater_array)
  end
end

# Print initial array
puts "Initial array:"
print array
puts

# Sort the array using quicksort
sorted_array = quicksort(array)

# Print sorted array
puts "Sorted array:"
print sorted_array
puts
# This is a Ruby code snippet that generates a Fibonacci number sequence with a desired number of terms.
# It takes in a number as the number of terms and returns an array containing the Fibonacci sequence.
# For example, calling the function with 6 as the input will return [0, 1, 1, 2, 3, 5].
# This code snippet uses recursion to generate the sequence.

def fibonacci(n) # defining a method that takes in a parameter

  if n == 0 # base case: if n is 0, return an empty array
    return []
  elsif n == 1 # base case: if n is 1, return an array with just 0
    return [0]
  elsif n == 2 # base case: if n is 2, return an array with 0 and 1
    return [0, 1]
  else # for all other cases
    sequence = fibonacci(n-1) # recursively call the method with n-1 as the input
    sequence << sequence[-1] + sequence[-2] # add the last two elements of the sequence together and push the result to the sequence array
    return sequence # return the updated sequence array
  end
end

# example usage
fibonacci(6) # returns [0, 1, 1, 2, 3, 5]
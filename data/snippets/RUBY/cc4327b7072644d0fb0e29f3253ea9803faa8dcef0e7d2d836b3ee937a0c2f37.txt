# This program uses the Enumerable module to create a custom method, `my_each`, that iterates through an array and performs a given block of code on each element.

# Define the method `my_each` that takes in an array and a block of code
def my_each(arr)
  # Initialize a counter variable `i` with a value of 0
  i = 0

  # Run a loop while `i` is less than the length of the array
  while i < arr.length do
    # Pass the current element of the array to the block of code
    yield(arr[i])
    # Increment the counter variable by 1
    i += 1
  end

  # Return the original array
  arr
end

# Example usage:
# Create an array of numbers
numbers = [1, 2, 3, 4, 5]
# Iterate through each element of the array using the `my_each` method
my_each(numbers) do |num|
  # Multiply each element by 2
  num *= 2
  # Print the result
  puts num
end

# Output:
# 2
# 4
# 6
# 8
# 10
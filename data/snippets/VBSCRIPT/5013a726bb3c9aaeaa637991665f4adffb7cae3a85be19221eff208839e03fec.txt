' This is a VBScript subroutine that performs a bubble sort on an array of integers
'
' Parameters:
'   arr - the array of integers to be sorted
'
' Output:
'   sortedArr - the sorted array of integers
Sub bubbleSort(arr)
  ' set the initial values for the loop counters
  Dim i, j, temp
  ' declare a variable to track whether any swaps have been made during a pass through the loop
  Dim swapped
  
  ' loop through the array from the first element to the second to last element
  For i = LBound(arr) To UBound(arr) - 1
    ' set swapped to false at the start of each loop iteration
    swapped = False
    
    ' loop through the array from the first element to the second to last element minus i
    For j = LBound(arr) To UBound(arr) - i - 1
      ' if the current element is greater than the next element, swap them and set swapped to true
      If arr(j) > arr(j + 1) Then
        temp = arr(j)
        arr(j) = arr(j + 1)
        arr(j + 1) = temp
        swapped = True
      End If
    Next
    
    ' if no swaps were made during this loop iteration, the array is already sorted and we can exit the loop
    If Not swapped Then
      Exit For
    End If
  Next
  
  ' set the output array to the sorted array
  sortedArr = arr
End Sub

' Example usage:
' Declare an array of integers to be sorted
Dim numbers
numbers = Array(3, 2, 5, 1, 4)
' Call the bubbleSort subroutine with the array as the argument
bubbleSort(numbers)
' Print the sorted array
MsgBox Join(numbers, ", ") ' output: 1, 2, 3, 4, 5
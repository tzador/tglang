' This is a comment in VBScript

Option Explicit ' Explicitly declare all variables to avoid errors

Dim myVariable ' Declare a variable

myVariable = "Hello World" ' Assign a value to the variable

If myVariable = "Hello World" Then ' Check if the variable is equal to a certain value
    MsgBox "Variable is equal to Hello World" ' Display a pop-up message if the condition is met
Else ' If condition is not met, execute the following code
    MsgBox "Variable is not equal to Hello World" ' Display a pop-up message
End If ' End the If statement

For i = 1 To 10 Step 2 ' Start a For loop that runs 5 times (10 / 2) with a step size of 2
    MsgBox "Value of i is " & i ' Display the current value of i in a pop-up message
Next ' End the For loop

While i <= 10 ' Start a While loop that runs until the value of i reaches 10
    i = i + 1 ' Increment the value of i by 1 in each iteration
    MsgBox "Current value of i is " & i ' Display the current value of i in a pop-up message
Wend ' End the While loop

Function addNumbers(a, b) ' Create a function that takes two parameters
    addNumbers = a + b ' Return the sum of the two parameters
End Function ' End the function

num1 = 5 ' Declare a variable and assign a value
num2 = 10 ' Declare a variable and assign a value
MsgBox addNumbers(num1, num2) ' Call the function and display the returned value in a pop-up message

Class Person ' Create a class called Person
    Private Name ' Declare a private variable for the class

    Public Sub SetName(newName) ' Create a public method for setting the name
        Name = newName ' Set the value of the private variable to the given parameter
    End Sub ' End the method

    Public Function GetName() ' Create a public function for getting the name
        GetName = Name ' Return the value of the private variable
    End Function ' End the function
End Class ' End the class

Dim newPerson ' Declare a variable for an instance of the Person class
Set newPerson = New Person ' Create a new instance of the Person class
newPerson.SetName("John") ' Call the SetName method and pass in the name "John"
MsgBox "Person's name is " & newPerson.GetName() ' Call the GetName function and display the returned value in a pop-up message
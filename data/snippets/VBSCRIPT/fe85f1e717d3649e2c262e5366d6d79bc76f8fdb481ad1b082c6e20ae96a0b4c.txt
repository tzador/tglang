' This is a VBScript code snippet for creating a function that calculates the sum of two numbers
Function Sum(a, b)
    Sum = a + b
End Function

' This is an example of calling the Sum function and printing the result
a = 5 ' First number
b = 10 ' Second number
Print "The sum of " & a & " and " & b & " is " & Sum(a,b) ' Output: The sum of 5 and 10 is 15

' This is a function that calculates the factorial of a given number
Function Factorial(num)
    If num <= 1 Then ' Base case: 0! and 1! yield 1
        Factorial = 1
    Else ' Recursive case: num! = num * (num-1)!
        Factorial = num * Factorial(num - 1) ' Recursive call to Factorial function
    End If
End Function

' This is an example of calling the Factorial function and printing the result
n = 5 ' Number for calculating factorial
Print "The factorial of " & n & " is " & Factorial(n) ' Output: The factorial of 5 is 120

' This is a function that checks if a given number is prime or not
Function IsPrime(num)
    IsPrime = True ' Assume the number is prime
    For i = 2 To Int(Sqr(num)) ' Loop from 2 to the square root of the number
        If num Mod i = 0 Then ' If the number is divisible by current loop value, it is not prime
            IsPrime = False
        End If
    Next
End Function

' This is an example of calling the IsPrime function and printing the result
p = 23 ' Number to check for primality
If IsPrime(p) Then ' If IsPrime function returns true, the number is prime
    Print p & " is a prime number" ' Output: 23 is a prime number
Else
    Print p & " is not a prime number" ' Output: 23 is not a prime number
End If

' This is a class that represents a rectangle shape with properties for length, width and methods to calculate area and perimeter
Class Rectangle

    Private length ' Private variable to store length
    Private width ' Private variable to store width
    
    ' Constructor to initialize length and width of the rectangle
    Private Sub Class_Initialize()
        length = 0 ' Default length
        width = 0 ' Default width
    End Sub
    
    ' Property procedures to get and set length and width
    Public Property Get Length()
        Length = length
    End Property
    
    Public Property Let Length(newLength)
        length = newLength
    End Property
    
    Public Property Get Width()
        Width = width
    End Property
    
    Public Property Let Width(newWidth)
        width = newWidth
    End Property
    
    ' Method to calculate area of the rectangle
    Public Function CalculateArea()
        CalculateArea = length * width ' Area = length * width
    End Function
    
    ' Method to calculate perimeter of the rectangle
    Public Function CalculatePerimeter()
        CalculatePerimeter = 2 * (length + width) ' Perimeter = 2 * (length + width)
    End Function
    
End Class

' This is an example of creating a Rectangle object, setting length and width properties, and calling methods to calculate area and perimeter
Dim rect ' Declaring a variable for Rectangle object
Set rect = New Rectangle ' Creating a new instance of Rectangle class
rect.Length = 5 ' Setting length property
rect.Width = 10 ' Setting width property
Print "The area of the rectangle is " & rect.CalculateArea() ' Output: The area of the rectangle is 50
Print "The perimeter of the rectangle is " & rect.CalculatePerimeter() ' Output: The perimeter of the rectangle is 30
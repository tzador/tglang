' This is a comment in VBScript - it starts with an apostrophe and is used to provide explanations or document code

' VBScript supports declaring variables with the Dim keyword
Dim myVariable

'Variables can also be assigned a value during declaration
Dim myNumber = 10
Dim myString = "Hello World"

' VBScript supports conditional statements such as If/ElseIf/Else
If myNumber > 0 Then
    myString = "Positive number"
ElseIf myNumber < 0 Then
    myString = "Negative number"
Else
    myString = "Zero"
End If

' VBScript also supports loops, such as For and While
For i = 1 To 10
    If i Mod 2 = 0 Then
        ' Using the Mod operator to check if a number is even
        myString = myString & " " & i
    End If
Next

' While loop
Dim counter = 0
While counter < 10
    counter = counter + 1
    ' Using the & operator to concatenate strings
    myString = myString & " " & counter
Wend

' VBScript also allows for defining functions
' Functions can have parameters and can return values
Function addNumbers(num1, num2)
    addNumbers = num1 + num2
End Function

' Functions can be called and their return value can be assigned to a variable
Dim result = addNumbers(5, 10)

' VBScript also supports working with arrays
Dim myArray(3)
myArray(0) = "Apple"
myArray(1) = "Banana"
myArray(2) = "Orange"

' Arrays can also be initialized during declaration
Dim myOtherArray = Array("Cat", "Dog", "Bird")

' Arrays can be iterated over using a For Each loop
For Each item in myArray
    myString = myString & " " & item
Next

' VBScript also has built-in functions for working with strings and numbers
' Example of using the InStr function to find the index of a substring within a string
Dim myIndex = InStr("Hello World", "World")

' Example of using the FormatNumber function to format a number with decimal places
Dim myFormattedNumber = FormatNumber(3.14159, 2)

' VBScript also allows for error handling using the On Error statement
On Error Resume Next
Dim divideByZero = 5 / 0 ' This will throw an error
If Err.Number <> 0 Then
    myString = "Error: " & Err.Description
End If
On Error Goto 0 ' This resets the error handling to default

' VBScript also supports working with files and folders
' Example of creating a file and writing to it
Dim myFile
Set myFile = CreateObject("Scripting.FileSystemObject").CreateTextFile("myFile.txt", True)
myFile.WriteLine("This is a line of text")
myFile.Close

'Example of checking if a file exists
Dim fileName = "myFile.txt"
If objFSO.FileExists(fileName) Then
    myString = myString & " File exists"
End If
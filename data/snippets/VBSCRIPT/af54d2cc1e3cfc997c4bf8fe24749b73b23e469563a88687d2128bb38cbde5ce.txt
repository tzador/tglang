' This is a VBScript code snippet demonstrating how to use conditional statements and loops.

' Declare variables
Dim num1, num2, result

' Assign values
num1 = 10
num2 = 20

' Use if-else statement to compare values
If num1 > num2 Then
    ' Display message if condition is met
    MsgBox("num1 is greater than num2")
Else
    ' Display message if condition is not met
    MsgBox("num2 is greater than num1")
End If

' Use for loop to iterate through a range of values
For i = 0 To 10
    ' Multiply i by num1 and assign the result to the variable 'result'
    result = i * num1

    ' Use select case statement to print different messages based on the value of 'result'
    Select Case result
        Case 10
            MsgBox("The result is equal to 10")
        Case 20
            MsgBox("The result is equal to 20")
        Case Else
            ' Display a generic message if none of the above cases are met
            MsgBox("The result is not equal to 10 or 20")
    End Select
Next

' Use do loop to continue executing code while a condition is met
Do While num1 < num2
    ' Increase num1 by 1 each time the loop executes
    num1 = num1 + 1

    ' Use nested if-else statement to check for multiple conditions
    If num1 = 15 Then
        MsgBox("num1 is equal to 15")
    ElseIf num1 = 17 Then
        MsgBox("num1 is equal to 17")
    Else
        MsgBox("num1 is not equal to 15 or 17")
    End If
Loop

' Use try-catch block to catch and handle errors
On Error Resume Next
' Attempt to divide num2 by 0, which will cause an error
result = num2 / 0

' Check if an error occurred
If Err.Number <> 0 Then
    ' Display error message
    MsgBox("An error occurred: " & Err.Description)
End If

' Use subroutines to organize and reuse code
Sub DisplayMessage()
    MsgBox("This is a subroutine")
End Sub

' Call the subroutine to display the message
DisplayMessage()

' Use functions to return a value or perform a specific task
Function AddNumbers(num1, num2)
    ' Add the two numbers and return the result
    AddNumbers = num1 + num2
End Function

' Assign the result of the function to a variable and display it in a message box
result = AddNumbers(5, 10)
MsgBox("The result of adding 5 and 10 is: " & result)
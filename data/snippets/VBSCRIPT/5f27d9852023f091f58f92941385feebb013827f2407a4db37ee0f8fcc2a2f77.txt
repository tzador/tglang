' This code snippet demonstrates a complex array sorting algorithm in VBScript

' Initialize an array with random integers
Dim nums(10)
Randomize
For i = 0 To 10
    nums(i) = Int((100 * Rnd) + 1)
Next

' Print unsorted array
WScript.Echo "Unsorted Array:"
For Each num In nums
    WScript.Echo num
Next

' Sort the array using bubble sort algorithm
For i = 0 To 10
    For j = 0 To 10 - i - 1
        If nums(j) > nums(j+1) Then
            temp = nums(j)
            nums(j) = nums(j+1)
            nums(j+1) = temp
        End If
    Next
Next

' Print sorted array
WScript.Echo "Sorted Array:"
For Each num In nums
    WScript.Echo num
Next

' Function to recursively find the minimum element in an array
Function findMin(arr, start, end)
    If end = start Then
        findMin = arr(start)
    Else
        min = findMin(arr, start + 1, end)
        If arr(start) < min Then
            findMin = arr(start)
        Else
            findMin = min
        End If
    End If
End Function

' Function to recursively sort an array using quicksort algorithm
Sub quickSort(arr, start, end)
    If end <= start Then Exit Sub 'base case
    pivot = arr((start+end)/2)
    i = start
    j = end
    
    ' Partition the array
    Do While i <= j
        Do While arr(i) < pivot
            i = i + 1
        Loop
        Do While arr(j) > pivot
            j = j - 1
        Loop
        If i <= j Then
            temp = arr(i)
            arr(i) = arr(j)
            arr(j) = temp
            i = i + 1
            j = j - 1
        End If
    Loop
    
    ' Recursively call quickSort
    quickSort(arr, start, j)
    quickSort(arr, i, end)
End Sub

' Call quickSort function and print sorted array
quickSort nums, 0, 10
WScript.Echo "Sorted Array (using quicksort):"
For Each num In nums
    WScript.Echo num
Next
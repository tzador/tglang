' This is a comment in VBSCRIPT
Option Explicit ' Enforces variable declaration

' Defining variables and assigning values
Dim x, y, z ' Declaring multiple variables at once
x = 5 ' Assigning value to variable x
y = 10 ' Assigning value to variable y
z = x + y ' Assigning value to variable z by performing addition operation

' Conditional statements
If z < 15 Then ' If statement with condition
    MsgBox "z is less than 15" ' Displaying message if condition is met
ElseIf z = 15 Then ' Else If statement with condition
    MsgBox "z is equal to 15" ' Displaying message if condition is met
Else ' Else statement, executes if none of the above conditions are met
    MsgBox "z is greater than 15" ' Displaying message if none of the conditions are met
End If ' End of conditional statements

' Subroutine example
Sub MultiplyNumbers(a, b) ' Subroutine named MultiplyNumbers with two parameters
    MsgBox a * b ' Displaying message with the result of multiplying the parameters
End Sub ' End of subroutine

' Function example
Function SumNumbers(x, y) ' Function named SumNumbers with two parameters
    Dim sum ' Declaring a variable for storing the result
    sum = x + y ' Assigning the sum of the parameters to the variable
    SumNumbers = sum ' Returning the value of the variable
End Function ' End of function

' Calling the subroutine and function
MultiplyNumbers(2, 3) ' Passing arguments to the subroutine
MsgBox SumNumbers(5, 10) ' Displaying message with the result of calling the function

' Loop example
Dim i ' Declaring a variable for the loop counter
For i = 1 To 10 ' For loop with counter starting at 1 and ending at 10
    MsgBox i ' Displaying the value of the counter
Next ' End of loop

' Array example
Dim fruits(2) ' Declaring an array with 3 elements
fruits(0) = "Apple" ' Assigning value to first element of the array
fruits(1) = "Banana" ' Assigning value to second element of the array
fruits(2) = "Orange" ' Assigning value to third element of the array
MsgBox fruits(1) ' Displaying second element of the array

' Error handling example
On Error Resume Next ' Continues execution even if there is an error
Dim num ' Declaring a variable for storing user input
num = InputBox("Enter a number:") ' Prompting user for input and storing it in the variable
If IsNumeric(num) Then ' Checking if the input is a number
    MsgBox "You entered: " & num ' Displaying the input if it is a number
Else ' If input is not a number, an error has occurred
    MsgBox "Invalid input" ' Displaying an error message
End If ' End of error handling
' This is a complex VBScript code snippet that loops through a table of numbers and prints them out in descending order.
' It also includes conditionals, functions, and comments.
Option Explicit ' Forces variable declarations

Dim arrNumbers(10) ' Creates an array named arrNumbers with 10 elements

For i = 0 To 9 ' Looping through the array
  arrNumbers(i) = i * 10 ' Assigns each element of the array to be 10 times its index value
Next ' Ends the for loop

' Prints out the initial array values using a custom function
WScript.Echo "Initial Array Values: " & PrintArray(arrNumbers) 

' Sorts the array in descending order using the Bubble Sort algorithm
For i = 0 To UBound(arrNumbers) - 1 ' Looping through the array from the first element to the second last element 
  For j = 0 To UBound(arrNumbers) - i - 1 ' Looping through the remaining unsorted elements
    If arrNumbers(j) < arrNumbers(j + 1) Then ' Condition to check if the first element is smaller than the second element in pair
      ' Swaps the elements if condition is met
      Dim temp 
      temp = arrNumbers(j) ' Assigns the first element to a temporary variable
      arrNumbers(j) = arrNumbers(j + 1) ' Assigns the second element to the first element's position
      arrNumbers(j + 1) = temp ' Assigns the temporary variable to the second element's position
    End If
  Next ' Ends the inner for loop
Next ' Ends the outer for loop

' Prints out the sorted array values using the same custom function as before
WScript.Echo "Sorted Array Values: " & PrintArray(arrNumbers) 

Function PrintArray(arr) 
  ' This function takes in an array as a parameter and returns a string of all its elements separated by a comma
  Dim result ' Declaring a variable to store the result
  result = "" ' Initializing result as an empty string
  For Each element In arr ' Looping through each element in the array
    result = result & element & "," ' Appends the current element and a comma to result
  Next ' Ends the for each loop
  PrintArray = result ' Assigns result to the function name
End Function 

' Output:
' Initial Array Values: 0,10,20,30,40,50,60,70,80,90
' Sorted Array Values: 90,80,70,60,50,40,30,20,10,0
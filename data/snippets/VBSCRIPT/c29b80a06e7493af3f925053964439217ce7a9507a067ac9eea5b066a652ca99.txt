' This code creates an array and populates it with random numbers, then sorts the array in ascending order using the QuickSort algorithm
 
' Create an array with 10 elements
Dim arr(9)
 
' Randomize the array with values between 0 and 100
For i = 0 To UBound(arr)
  arr(i) = Int(Rnd() * 100)
Next
 
' Call the QuickSort function to sort the array
Call QuickSort(arr, LBound(arr), UBound(arr))
 
' The QuickSort function takes in the array and starting and ending indices
Function QuickSort(arr, start, end)
 
  ' Set the pivot value as the middle element in the array
  pivot = arr((start + end) \ 2)
 
  ' Set the left and right indices to begin at the start and end of the array
  left = start
  right = end
 
  ' While the left and right indices have not crossed each other
  While left <= right
 
    ' While the element at the left index is smaller than the pivot, move to the next element
    While arr(left) < pivot
      left = left + 1
    Wend
 
    ' While the element at the right index is larger than the pivot, move to the previous element
    While arr(right) > pivot
      right = right - 1
    Wend
 
    ' If the left index is smaller than or equal to the right index, swap the elements at those indices
    If left <= right Then
      temp = arr(left)
      arr(left) = arr(right)
      arr(right) = temp
 
      ' Move on to the next elements on the left and right
      left = left + 1
      right = right - 1
    End If
  Wend
 
  ' If there are more unsorted elements on the left, recursively call the QuickSort function
  If start < right Then Call QuickSort(arr, start, right)
 
  ' If there are more unsorted elements on the right, recursively call the QuickSort function
  If end > left Then Call QuickSort(arr, left, end)
 
End Function
 
' Print the sorted array
For i = 0 To UBound(arr)
  WScript.Echo arr(i)
Next
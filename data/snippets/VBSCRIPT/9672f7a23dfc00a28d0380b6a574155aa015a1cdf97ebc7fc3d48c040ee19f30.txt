' This code snippet creates and manipulates an array 
' of strings using various VBScript functions and methods.

' Define an array of strings
Dim fruits(3) 
fruits(0) = "Apple" 
fruits(1) = "Banana" 
fruits(2) = "Orange" 
fruits(3) = "Grapes"

' Print the original array
WScript.Echo "Original array:" 
For i = LBound(fruits) To UBound(fruits) 
    WScript.Echo fruits(i) 
Next

' Use the Join function to combine the elements of the array
' into a single string, separated by commas
fruitsString = Join(fruits, ", ") 
WScript.Echo vbNewLine & "Joined array elements: " & fruitsString

' Use the Split function to split the fruitsString into an array,
' using the comma as the delimiter
newFruits = Split(fruitsString, ", ") 

' Print the new array
WScript.Echo vbNewLine & "New array:" 
For i = LBound(newFruits) To UBound(newFruits) 
    WScript.Echo newFruits(i) 
Next

' Use the Insert method to add a new element to the beginning of the array
newFruits.Insert 0, "Pineapple" 

' Print the updated array 
WScript.Echo vbNewLine & "Updated array:" 
For i = LBound(newFruits) To UBound(newFruits)
    WScript.Echo newFruits(i)
Next

' Use the Sort method to sort the elements of the array in alphabetical order
newFruits.Sort 

' Print the sorted array
WScript.Echo vbNewLine & "Sorted array:" 
For i = LBound(newFruits) To UBound(newFruits) 
    WScript.Echo newFruits(i) 
Next

' Use the InStr function to find the position of "Grapes" in the array
position = InStr(LCase(Join(newFruits, " ")), "grapes") 

' Print the position
WScript.Echo vbNewLine & "Position of 'Grapes': " & position 

' Use the Filter function to filter the array, only keeping elements that start with "B"
filteredFruits = Filter(newFruits, "B") 

' Print the filtered array
WScript.Echo vbNewLine & "Filtered array:" 
For i = LBound(filteredFruits) To UBound(filteredFruits)
    WScript.Echo filteredFruits(i)
Next

' Use the LCase function to convert all elements of the array to lowercase
lowercaseFruits = LCase(Join(newFruits, " ")) 

' Print the lowercase array
WScript.Echo vbNewLine & "Lowercase array:" & vbNewLine & lowercaseFruits

' Use the UCase function to convert all elements of the array to uppercase
uppercaseFruits = UCase(Join(newFruits, " ")) 

' Print the uppercase array
WScript.Echo vbNewLine & "Uppercase array:" & vbNewLine & uppercaseFruits

' Use the Replace function to replace "Banana" with "Mango" in the array
newFruits = Replace(newFruits, "Banana", "Mango") 

' Print the updated array 
WScript.Echo vbNewLine & "Updated array:" 
For i = LBound(newFruits) To UBound(newFruits)
    WScript.Echo newFruits(i)
Next

' Use the UBound function to find the upper bound of the array
upperBound = UBound(newFruits) 

' Print the upper bound
WScript.Echo vbNewLine & "Upper bound: " & upperBound 

' Use the LBound function to find the lower bound of the array
lowerBound = LBound(newFruits) 

' Print the lower bound
WScript.Echo vbNewLine & "Lower bound: " & lowerBound 

' Use the Reverse method to reverse the elements of the array
newFruits.Reverse 

' Print the reversed array
WScript.Echo vbNewLine & "Reversed array:" 
For i = LBound(newFruits) To UBound(newFruits) 
    WScript.Echo newFruits(i) 
Next

' Use the Filter function again to only keep elements that end with "e"
filteredFruits = Filter(newFruits, "e", True) 

' Print the filtered array
WScript.Echo vbNewLine & "Filtered array:" 
For i = LBound(filteredFruits) To UBound(filteredFruits) 
    WScript.Echo filteredFruits(i) 
Next

' Use the Mid function to extract a substring from an element in the array
' Start at the second character and extract 3 characters
substring = Mid(newFruits(1), 2, 3) 

' Print the substring
WScript.Echo vbNewLine & "Substring: " & substring 

' Use the TypeName function to determine the data type of an element in the array
dataType = TypeName(newFruits(0)) 

' Print the data type
WScript.Echo vbNewLine & "Data type: " & dataType
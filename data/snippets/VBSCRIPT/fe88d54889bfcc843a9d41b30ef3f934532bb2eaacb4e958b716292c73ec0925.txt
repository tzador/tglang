''''
Option Explicit

Sub FindPrimeNumbers(ByRef upperLimit As Integer)
    ' This subroutine uses the Sieve of Eratosthenes algorithm to find and print all prime numbers up to a given upper limit.

    ' Declare variables
    Dim numbers(upperLimit + 1) As Boolean ' this array will represent numbers from 0 to upperLimit, with a value of True indicating a prime number
    Dim primeNumbers() ' this array will store the prime numbers that are found
    Dim i As Integer ' loop variable
    Dim j As Integer ' loop variable

    ' Initialize all elements of the numbers array to True
    For i = 2 To upperLimit + 1
        numbers(i) = True
    Next i

    ' Perform the Sieve of Eratosthenes algorithm
    For i = 2 To upperLimit + 1
        If numbers(i) = True Then ' check if i is a prime number
            For j = i ^ 2 To upperLimit + 1 Step i ' eliminate all multiples of i up to the upper limit
                numbers(j) = False
            Next j
        End If
    Next i

    ' Store the prime numbers in the primeNumbers array
    ReDim primeNumbers(0)
    For i = 2 To upperLimit + 1
        If numbers(i) = True Then ' check if i is a prime number
            primeNumbers(UBound(primeNumbers)) = i ' add i to the array primeNumbers
            ReDim Preserve primeNumbers(UBound(primeNumbers) + 1) ' increase the size of the array
        End If
    Next i
    ReDim Preserve primeNumbers(UBound(primeNumbers) - 1) ' remove the extra element at the end of the array

    ' Print the prime numbers
    For Each primeNumber In primeNumbers
        WScript.Echo primeNumber
    Next
End Sub

' Call the subroutine and specify the upper limit
FindPrimeNumbers(100)

''''
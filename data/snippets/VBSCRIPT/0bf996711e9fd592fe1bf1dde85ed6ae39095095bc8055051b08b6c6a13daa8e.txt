'Multi-line comments are denoted by a single quote (')
Option Explicit 'Enables explicit declaration of variables
Dim a, b 'Declares two variables
a = 5 'Assigns a value to variable 'a'
b = 10 'Assigns a value to variable 'b'
If a > b Then 'Checks if 'a' is greater than 'b'
    WScript.Echo "a is greater than b." 'Prints a message if 'a' is greater than 'b'
ElseIf b > a Then 'Checks if 'b' is greater than 'a'
    WScript.Echo "b is greater than a." 'Prints a message if 'b' is greater than 'a'
Else 'In case neither condition is true
    WScript.Echo "a is equal to b." 'Prints a message if 'a' is equal to 'b'
End If 'Ends the if-else block
For i = 1 To 10 'Loop from 1 to 10
    WScript.Echo i 'Prints the value of variable 'i'
Next 'Goes to the next iteration in the loop
While a < 10 'Loop while 'a' is less than 10
    WScript.Echo a 'Prints the value of variable 'a'
    a = a + 1 'Increments 'a' by 1
Wend 'Ends the while loop
Sub MySub(a, b) 'Defines a subroutine with two parameters
    c = a + b 'Assigns the sum of 'a' and 'b' to variable 'c'
    WScript.Echo c 'Prints the value of 'c'
End Sub 'Ends the subroutine
MySub a, b 'Calls the subroutine with values of 'a' and 'b' as arguments 
Class MyClass 'Defines a class
    Private myPrivate 'Declares a private variable
    Public myPublic 'Declares a public variable
    Property Get MyProperty 'Defines a property with 'Get' method
        MyProperty = myPrivate 'Returns the value of private variable 'myPrivate'
    End Property 'Ends the property
    Property Let MyProperty(newVal) 'Defines a property with 'Let' method and a parameter
        myPrivate = newVal 'Sets the value of 'myPrivate' to the value of 'newVal'
    End Property 'Ends the property
End Class 'Ends the class
Set myObject = New MyClass 'Creates an instance of the class
myObject.myPublic = 5 'Sets the value of public variable 'myPublic' to 5
WScript.Echo myObject.MyProperty 'Calls the 'Get' method of the property
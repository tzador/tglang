Option Explicit

' This is a multiline comment
' that explains the purpose of the code snippet

' Define variables
Dim num1, num2, sum

num1 = 5 
num2 = 10 
sum = num1 + num2 ' Add num1 and num2 and assign it to sum

MsgBox "The sum of " & num1 & " and " & num2 & " is " & sum 

' This is a single line if statement
If sum > 15 Then MsgBox "The sum is greater than 15"

' This is a for loop that prints numbers from 1 to 10
For i = 1 To 10 
    MsgBox i 
Next

' This is a sub procedure that calculates the factorial of a number
Sub Factorial(num)
    Dim result
    result = 1 
    For i = 1 To num 
        result = result * i 
    Next
    MsgBox "The factorial of " & num & " is " & result 
End Sub 

' Call the sub procedure to calculate the factorial of 6
Factorial(6)

' This is a function that checks if a number is even or odd
Function EvenOrOdd(num)
    If num Mod 2 = 0 Then
        EvenOrOdd = "The number is even"
    Else
        EvenOrOdd = "The number is odd"
    End If
End Function

' Call the function and print the result
MsgBox EvenOrOdd(9)

' This is a select case statement
Dim weekday
weekday = "Tuesday"

Select Case weekday
    Case "Monday"
        MsgBox "Today is the start of the week"
    Case "Tuesday", "Wednesday"
        MsgBox "It's still early in the week"
    Case "Thursday"
        MsgBox "Almost the weekend"
    Case "Friday"
        MsgBox "It's finally Friday"
    Case Else
        MsgBox "It's the weekend"
End Select

' This is a do until loop that checks for key presses and exits when 'Q' is pressed
Do Until InStr(1, strKey, "Q") > 0
    strKey = LCase(InputBox("Press any key (Q to quit)"))
Loop

' This is a while loop that counts down from 10 to 1
i = 10 
While i > 0 
    MsgBox i 
    i = i - 1 
Wend

' This is an array that stores information
Dim fruits(5)
fruits(0) = "Apple"
fruits(1) = "Orange"
fruits(2) = "Banana"
fruits(3) = "Grapes"
fruits(4) = "Watermelon"

' This is a nested for loop that prints each fruit in the array
For i = 0 To UBound(fruits) 
    MsgBox fruits(i) 
    For j = 1 To 3 
        MsgBox fruits(i) & " is yummy!" 
    Next 
Next

' This is a while loop that generates random numbers until a certain condition is met
While randomNum < 50 
    randomNum = Int(Rnd() * 100) ' Generate random number between 0 and 100 
Wend 

' This is a multi-dimensional array that stores information
Dim studentNames(2,3)
studentNames(0,0) = "John"
studentNames(0,1) = "Kim"
studentNames(0,2) = "Chris"
studentNames(0,3) = "Sara"
studentNames(1,0) = "Mary"
studentNames(1,1) = "Mike"
studentNames(1,2) = "Jane"
studentNames(1,3) = "Tom"
studentNames(2,0) = "Alex"
studentNames(2,1) = "Emily"
studentNames(2,2) = "David"
studentNames(2,3) = "Anna"

' This is a for loop that prints the student names in each row
For i = 0 To 2 
    MsgBox "Students in row " & i + 1 & ": " & studentNames(i,0) & ", " & studentNames(i,1) & ", " & studentNames(i,2) & ", " & studentNames(i,3)
Next

' This is an example of error handling
On Error Resume Next

' This line will cause an error since num2 is not defined
sum = num1 + num2

If Err.Number <> 0 Then
    MsgBox "Error: " & Err.Description
End If

' Reset error handling
On Error GoTo 0

' This is a do while loop that checks user input and exits when 'end' is entered
strInput = ""
Do While strInput <> "end"
    strInput = InputBox("Enter a word (type 'end' to exit)")
    MsgBox "You entered: " & strInput
Loop

' This is a class that stores information about a person
Class Person
    Private name
    Private age
    Private gender
    
    Public Sub SetName(n)
        name = n
    End Sub
    
    Public Sub SetAge(a)
        age = a
    End Sub
    
    Public Sub SetGender(g)
        gender = g
    End Sub
    
    Public Function GetName()
        GetName = name
    End Function
    
    Public Function GetAge()
        GetAge = age
    End Function
    
    Public Function GetGender()
        GetGender = gender
    End Function
End Class

' Create a new instance of the Person class
Dim person1
Set person1 = New Person

' Set the properties of the person
person1.SetName("John")
person1.SetAge(25)
person1.SetGender("Male")

' Print the person's information
MsgBox person1.GetName() & " is " & person1.GetAge() & " years old and is a " & person1.GetGender()

' This is a custom function that adds two strings together
Function AddStrings(str1, str2)
    AddStrings = str1 & " " & str2
End Function

' Call the function
MsgBox AddStrings("Hello", "world")

' This is an example of using classes to create objects
Class Car
    Public make
    Public model
    Public year
    Public color
    
    Public Sub SetMake(m)
        make = m
    End Sub
    
    Public Sub SetModel(m)
        model = m
    End Sub
    
    Public Sub SetYear(y)
        year = y
    End Sub
    
    Public Sub SetColor(c)
        color = c
    End Sub
    
    Public Function GetMake()
        GetMake = make
    End Function
    
    Public Function GetModel()
        GetModel = model
    End Function
    
    Public Function GetYear()
        GetYear = year
    End Function
    
    Public Function GetColor()
        GetColor = color
    End Function
End Class

' Create a new instance of the Car class and set its properties
Dim car1
Set car1 = New Car
car1.SetMake("Ford")
car1.SetModel("Mustang")
car1.SetYear(2015)
car1.SetColor("Yellow")

' Print information about the car
MsgBox "My dream car is a " & car1.GetYear() & " " & car1.GetMake() & " " & car1.GetModel() & " in " & car1.GetColor()

' This is an example of working with external files
Dim fso, file
Set fso = CreateObject("Scripting.FileSystemObject")

' Create a new file
Set file = fso.CreateTextFile("C:\Users\Documents\myFile.txt")

' Write some text to the file
file.WriteLine("This is some text written to the file")
file.WriteLine("And this is another line")

' Close the file
file.Close

' Open the file for reading
Set file = fso.OpenTextFile("C:\Users\Documents\myFile.txt", 1)

' Read each line of the file and print it
Do Until file.AtEndOfStream
    MsgBox file.ReadLine
Loop

' Close the file
file.Close

' Delete the file
fso.DeleteFile("C:\Users\Documents\myFile.txt")

' This is an example of using regular expressions
Dim regex
Set regex = New RegExp

' Set the pattern to search for
regex.Pattern = "Hello"

' Search for the pattern in a string
MsgBox "Is the pattern found? " & regex.Test("Hello world")

' This is an example of using database connections
Dim connection, recordset
Set connection = CreateObject("ADODB.Connection")
Set recordset = CreateObject("ADODB.Recordset")

' Connect to a database
connection.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\Database.accdb;"

' Perform a query
recordset.Open "SELECT * FROM Employees WHERE Department='Marketing'", connection

' Loop through the results and print each employee's name and salary
Do While Not recordset.EOF
    MsgBox recordset("Name") & " earns " & recordset("Salary") & " per year"
    recordset.MoveNext
Loop

' Close the connection
connection.Close
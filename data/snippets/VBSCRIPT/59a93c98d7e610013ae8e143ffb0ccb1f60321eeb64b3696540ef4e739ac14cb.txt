'<summary>
'   This function calculates the factorial of a given number
'   and returns the result
'</summary>
'@param n - the number to find the factorial of
Function Factorial(n)
    if n < 2 Then
        Factorial = 1
    else
        Factorial = n * Factorial(n - 1)
    end if
End Function

'@description This function calculates the power of a number
'@param base - the base number
'@param power - the power to raise the base number to
Function Power(base, power)
    if power = 0 Then
        Power = 1
    else
        Power = base * Power(base, power - 1)
    end if
End Function

'@description This function calculates the sum of a range of numbers
'@param start - the starting number
'@param end - the ending number
Function Sum(start, end)
    Dim result
    result = 0
    For i = start To end
        result = result + i
    Next
    Sum = result
End Function

'@description This function finds the maximum number in an array
'@param arr - the array of numbers
Function Max(arr)
    Dim max
    max = arr(0)
    For i = 1 To UBound(arr)
        If arr(i) > max Then
            max = arr(i)
        End If
    Next
    Max = max
End Function

'@description This subroutine prints the fibonacci sequence up to a given number of terms
'@param n - the number of terms in the fibonacci sequence to print
Sub Fibonacci(n)
    Dim a, b, c
    a = 0
    b = 1
    c = 0
    For i = 1 To n
        c = a + b
        a = b
        b = c
        MsgBox c
    Next
End Sub

'@description This subroutine prints a message based on the given input number
'@param n - the input number
Sub PrintMessage(n)
    Dim message
    If n < 0 Then
        message = "The number is negative."
    ElseIf n = 0 Then
        message = "The number is zero."
    Else
        message = "The number is positive."
    End If
    MsgBox message
End Sub
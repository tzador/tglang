Option Explicit
' The Option Explicit statement forces explicit declaration of all variables in the code.
' This helps in avoiding simple coding mistakes and improves debugging.
' This should be the first statement in every VBSCRIPT code.

On Error Resume Next
' The On Error Resume Next statement allows the program to continue execution
' even if an error occurs. 
' This is often used when error handling is not necessary for a specific section of code.

Dim name
' Dim stands for Dimension and is used to declare a variable.
' In this case, we are declaring a variable called 'name' without assigning it a value.

name = InputBox("Enter your name:")
' The InputBox function displays a dialog box that prompts the user to enter a value.
' The value entered by the user is stored in the 'name' variable.

MsgBox "Hello " & name & "!"
' The MsgBox function displays a message box with a specified message.
' In this case, we are using the & operator to concatenate the value of 'name' with the string "Hello " and "!",
' resulting in a message that greets the user by their name.

For i = 1 to 10
' The For statement is used to create a loop that executes a block of code a specific number of times.
' In this case, we are using a For loop to execute the code within the loop 10 times,
' with the value of the loop counter 'i' increasing by 1 each time.

    If i = 5 Then
    ' The If...Then statement is used to specify a block of code to be executed only if a certain condition is met.
    ' In this case, we are checking if the value of 'i' is equal to 5.
    ' If the condition is met, the code within the If statement will be executed.

        MsgBox "Halfway there!"
        ' This MsgBox function will be executed when the value of 'i' is equal to 5.

        Exit For
        ' The Exit For statement is used to immediately exit a For loop.
        ' In this case, it will cause the loop to stop executing when the value of 'i' is equal to 5.

    End If
Next
' The Next statement is used to end a For loop.
' In this case, it is used to indicate the end of the For loop that we created earlier.
' After the code within the loop has been executed 10 times, the Next statement will end the loop.

Sub DisplayMessage(message)
' The Sub statement is used to define a subroutine, which is a block of code that can be called from within the program.
' In this case, we are defining a subroutine called 'DisplayMessage' that takes in a parameter called 'message'.

    MsgBox message
    ' This MsgBox function will display the value of the 'message' parameter passed into the subroutine.

End Sub
' The End Sub statement is used to indicate the end of a subroutine.
' In this case, it is used to indicate the end of the 'DisplayMessage' subroutine that we defined earlier.

Call DisplayMessage("Thank you for using my program!")
' The Call statement is used to call a subroutine defined within the program.
' In this case, we are calling the 'DisplayMessage' subroutine and passing in the string "Thank you for using my program!" as the parameter.

Dim arr(3)
' Here, we are using the Dim statement to declare an array (a collection of values) called 'arr'.
' We are specifying that the array will have a size of 3, meaning it can hold 3 values.

arr(0) = "apple"
arr(1) = "banana"
arr(2) = "orange"
' Here, we are assigning values to the 3 elements of the 'arr' array.

For Each item In arr
' The For Each...Next statement is used to loop through each element in a collection, such as an array.
' In this case, we are using a For Each loop to iterate through each element in the 'arr' array.

    MsgBox "I love " & item & "s!"
    ' This MsgBox function will be executed each time the loop iterates, 
    ' displaying a message that includes the current element of the 'arr' array.

Next
' The Next statement is used to indicate the end of the For Each loop.

Function GetRandomNumber()
' The Function statement is used to define a function, which is a block of code that returns a value.
' In this case, we are defining a function called 'GetRandomNumber' that will return a random number.

    Randomize
    ' The Randomize statement is used to initialize the random number generator.
    ' This ensures that each time the program runs, a different random number will be generated.

    GetRandomNumber = Int((10 * Rnd) + 1)
    ' This assigns a random number between 1 and 10 to the 'GetRandomNumber' function.
    ' The Rnd function returns a random number between 0 and 1, 
    ' so by multiplying it by 10 and adding 1, we ensure the number will be between 1 and 10.
    ' The Int function is used to round the number to a whole integer.

End Function
' The End Function statement indicates the end of the function.

Dim randomNumber
' Here, we are declaring a variable called 'randomNumber' without assigning it a value.

randomNumber = GetRandomNumber()
' Here, we are using the 'GetRandomNumber' function we defined earlier to assign a random number to the 'randomNumber' variable.

MsgBox "Your random number is " & randomNumber
' This MsgBox function will display the value of the 'randomNumber' variable, which is a random number between 1 and 10.
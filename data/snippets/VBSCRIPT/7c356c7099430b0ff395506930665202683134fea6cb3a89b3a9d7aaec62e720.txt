' This is a multiline comment

' This is a subroutine that implements a mergesort algorithm
Sub MergeSort(arr, left, right)
    ' Check if the left index is less than the right index
    If left < right Then
        ' Calculate the middle index of the array
        Dim middle
        middle = (left + right) / 2

        ' Recursively call MergeSort on the left half of the array
        MergeSort(arr, left, middle)

        ' Recursively call MergeSort on the right half of the array
        MergeSort(arr, middle + 1, right)

        ' Merge the two sorted subarrays
        Merge(arr, left, middle, right)
    End If
End Sub

' This is a function that performs the merge step in mergesort
Function Merge(arr, left, middle, right)
    ' Create temporary arrays to store the left and right subarrays
    Dim leftArr()
    Dim rightArr()

    ' Calculate the sizes of the two subarrays
    Dim leftSize
    Dim rightSize
    leftSize = middle - left + 1
    rightSize = right - middle

    ' Copy the elements from the original array to the temporary arrays
    Dim i
    For i = 0 To leftSize - 1
        leftArr(i) = arr(left + i)
    Next
    Dim j
    For j = 0 To rightSize - 1
        rightArr(j) = arr(middle + 1 + j)
    Next

    ' Set the initial indices for the left and right subarrays
    Dim leftIndex, rightIndex
    leftIndex = 0
    rightIndex = 0

    ' Set the index for the merged array
    Dim mergeIndex
    mergeIndex = left

    While leftIndex < leftSize And rightIndex < rightSize
        ' Compare the elements in the subarrays
        If leftArr(leftIndex) <= rightArr(rightIndex) Then
            ' If the element in the left subarray is smaller, set it in the merged array
            arr(mergeIndex) = leftArr(leftIndex)
            ' Increment the index for the left subarray
            leftIndex = leftIndex + 1
        Else
            ' If the element in the right subarray is smaller, set it in the merged array
            arr(mergeIndex) = rightArr(rightIndex)
            ' Increment the index for the right subarray
            rightIndex = rightIndex + 1
        End If
        ' Increment the index for the merged array
        mergeIndex = mergeIndex + 1
    Wend

    ' Copy remaining elements from the left subarray to the merged array
    While leftIndex < leftSize
        arr(mergeIndex) = leftArr(leftIndex)
        leftIndex = leftIndex + 1
        mergeIndex = mergeIndex + 1
    Wend

    ' Copy remaining elements from the right subarray to the merged array
    While rightIndex < rightSize
        arr(mergeIndex) = rightArr(rightIndex)
        rightIndex = rightIndex + 1
        mergeIndex = mergeIndex + 1
    Wend
End Function
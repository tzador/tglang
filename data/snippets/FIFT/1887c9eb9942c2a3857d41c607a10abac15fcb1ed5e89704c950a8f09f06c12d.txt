// This is a complex FIFT code snippet that uses recursion and pattern matching
:: factorize ( n - factors )
{
dup 2 < <2>
or 2 >= dup if {  /// check if input is <= 2
    << // if <= 2, output n as factors
}{ // if > 2
    dup { // duplicate input
        1+ factorize // recursively call factorize with input - 1
        map // map the output to a new list
    } // end of dup
    + // add input to the new list
    >list // convert the list to a tuple
} ifelse // end of if statement
} // end of factorize

// This is a recursive function that factors a number into its prime factors.
// It takes an integer as input and outputs a tuple of its prime factors.
// For example, factorize(12) will output (2, 2, 3).
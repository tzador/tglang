// This is a complex code snippet in FIFT

// Define a function to calculate the sum of two integers
#sum (a b -- c) {
    // Check if a is negative
    a 0 < {
        // Check if b is negative
        b 0 < {
            // Both a and b are negative, add them as positive numbers and make the result negative
            -1 a -1 b + *
        } {
            // Only a is negative, subtract b from it
            a b -
        }
    } {
        // Check if b is negative
        b 0 < {
            // Only b is negative, subtract a from it
            a b -
        } {
            // Both a and b are positive, add them
            a b +
        }
    }
}

// Define a recursive function to calculate the factorial of a number
#factorial (n -- result) {
    // Check if n is 0, in which case the result is 1
    n 0 = {
        1
    } {
        // If n is not 0, call the factorial function again with n-1 and multiply the result by n
        n #factorial n 1 - #factorial *
    }
}

// Define a map to store the names and ages of some people
{name_age map --}

// Add some entries to the map
"name1" 30 #set1 #insert
"name2" 45 #set2 #insert
"name3" 22 #set3 #insert

// Print the names of everyone over 30 years old
#set1 #get 30 > {
    "name1" .
} {
    "Not over 30."
} if
#set2 #get 30 > {
    "name2" .
} {
    "Not over 30."
} if

// Define a tuple with some values
[1, 2, 3, 4] tuple
// Function that recursively calculates the fibonacci sequence up to a given term
function fibonacciSequence(n) {
    if (n == 0) {
        // Returns 0 for the first term in the sequence
        return 0
    } else if (n == 1) {
        // Returns 1 for the second term in the sequence
        return 1
    } else {
        // Calculates the sum of the previous two terms in the sequence
        return fibonacciSequence(n - 1) + fibonacciSequence(n - 2)
    }
}

// Main function that iterates through the terms and outputs the sequence
function main() {
    // Set the number of terms to generate
    let numTerms = 10

    // Create an empty array for the sequence
    let sequence = []

    // Loop through each term and calculate its value
    for (let i = 0; i < numTerms; i++) {
        // Call the fibonacciSequence function to calculate the value of the current term
        let term = fibonacciSequence(i)

        // Append the term to the sequence array
        sequence.push(term)
    }

    // Print the sequence for the user to see
    console.log(`The first ${numTerms} terms of the fibonacci sequence are: ${sequence.join(', ')}`)
}

// Call the main function to generate and output the fibonacci sequence
main()
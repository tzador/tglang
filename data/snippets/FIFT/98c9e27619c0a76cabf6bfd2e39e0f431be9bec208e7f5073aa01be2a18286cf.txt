// The following code snippet creates a car object with properties and methods

type Car { // creates a custom type called "Car"
  make: String // property "make" with data type "String"
  model: String // property "model" with data type "String"
  year: Int // property "year" with data type "Integer"
  color: String // property "color" with data type "String"
  speed: Int = 0 // property "speed" with default value of 0
}

method Car::getMake() -> String { // method within the "Car" type that returns the "make" property as a String
  return make
}

method Car::accelerate(amount) { // method within the "Car" type to increase the "speed" property
  speed += amount
  print "Accelerated by ", amount, " km/h"
}

method Car::decelerate(amount) { // method within the "Car" type to decrease the "speed" property
  speed -= amount
  print "Decelerated by ", amount, " km/h"
}

method Car::paint(newColor) { // method within the "Car" type to change the "color" property
  color = newColor
  print "Car is now ", newColor
}

// Create a new instance of the "Car" type
let myCar = Car {
  make: "Toyota",
  model: "Camry",
  year: 2021,
  color: "Black"
}

// Access and print values using methods and properties
print "My car is a ", myCar.getMake(), " ", myCar.model, " from ", myCar.year
myCar.accelerate(50)
print "Current speed: ", myCar.speed, " km/h"
myCar.decelerate(20)
print "Current speed: ", myCar.speed, " km/h"
myCar.paint("Red")
print "Current color: ", myCar.color
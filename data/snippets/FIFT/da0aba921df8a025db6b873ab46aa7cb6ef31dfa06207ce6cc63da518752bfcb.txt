[0,1] 25 AW JUMPZ DUP \ Push [0,1] to the stack, check if top value is 0
SWAP NUMBER? IF EXECUTE THEN \ Swap top two values, check if top value is a number, execute if it is
[\"FizzBuzz\",\"Fizz\",5,4] 25 FOR NIP-$ DUP \ Push FizzBuzz, Fizz, 5, 4 to the stack, start for loop
DUP 2 MOD? ?+ ?DUP h2 % h2 b2 /?*+ n2 ^? \ Duplicate top value, check if it is divisible by 2, add top two values if it is, duplicate again, check if it is divisible by 2, subtract top two values if it is, duplicate again, divide top two values and add to stack, duplicate again, raise top value to the power of 2 and add to stack
DUP 3 MOD? ?+ ?DUP h3 % h3 b3 /?*+ n3 ^? \ Duplicate top value, check if it is divisible by 3, add top two values if it is, duplicate again, check if it is divisible by 3, subtract top two values if it is, duplicate again, divide top two values and add to stack, duplicate again, raise top value to the power of 3 and add to stack
IF DUP \"Fizz \" ? \ Check if top value is divisible by 2 and 3, push "Fizz " to stack if it is
ELSE SWAP POP \ Swap and pop top value if it is not divisible by 2 and 3
THEN
[\"Buzz\", 5] 25 FOR NIP-$ DUP \ Push Buzz, 5 to stack, start for loop
DUP 5 MOD? ?+ n5 ^? \ Duplicate top value, check if it is divisible by 5, add to stack if it is, raise top value to the power of 5 and add to stack
IF DUP \"Buzz \" ? \ Check if top value is divisible by 5, push "Buzz " to stack if it is
ELSE SWAP POP \ Swap and pop top value if it is not divisible by 5
THEN
IF DUP \"FizzBuzz \" ? \ Check if top value is divisible by 2 and 3 and 5, push "FizzBuzz " to stack if it is
ELSE SWAP POP \ Swap and pop top value if it is not divisible by 2 and 3 and 5
THEN
POP PRINTN \ Pop top value and print it
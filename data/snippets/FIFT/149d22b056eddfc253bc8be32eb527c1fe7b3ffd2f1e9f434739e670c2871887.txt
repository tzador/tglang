EXTERN_ASM enter "func foo" foo
EXTERN_ASM exec ".begin foo"

LOCAL_SMARTSTACK ptrptr #:uint64
LOCAL_SMARTSTACK sp #:uint64
LOCAL_SMARTSTACK dPtr #:*8

alloc

     `! C code below:
    _ @value 0 @local ptrPtr cswap
    _ @value dpTR 0 @local sp cswap
    @eqPtr dPtr dPtr ptrPtr
    ifdrop cswap rr0 swap rr1 exec
     __ @value# entry at0 4 __

rollback
eeqnopadd
exit
     `! C code above:

exitcode
    .p_param `{ `ppa 3 `} {"1", "2", "3"}
    dup { `. dPtr `0 ( d Ptr ) } @local dPtr swap

foo

    .func func
    1 10 dup `exitcode `{ `ppa 2 `} @local dPtr
    \n
    addexit
    ` do
     @value # do ... while 2 eqnop
    drop {`: 0 ":" dPtr } @local dPtr \n */

.equals
    `exitcode
     `add memswap __ swap.drop
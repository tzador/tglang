### FIFT code snippet
:: {arg cell-peek
G1:lang FIFT

# Stack: cell -- L 
# (L = int32) 

{
    g: get-next-header //gets next header
    dup: g: header-data //duplicate header data
    swap: s0:x-t{x+} //swaps stack
    d+:x-t{hnip} //duplicates
    #Stack: cell -- cell cell x
    #       x - nonce
    dup x:t{x-} drop:t //increment x 
    swap-:t{- dup swap:t} fs:d! //saves stack to cell's address
    -dup f:x+ header-cell:prepend-addr //prepending address
    F:x-g gnheading-uchar //word at given addresss
    - s:f- x>bs Gn:{x+bs}::: '
}
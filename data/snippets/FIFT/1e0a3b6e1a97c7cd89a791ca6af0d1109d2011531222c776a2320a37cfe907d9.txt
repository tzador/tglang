<$> ?? FIFT_START ;; comment starting the FIFT program
{
    1 2 + . ;; adds 1 and 2, prints the result (3)
    { 
        2 * 3 - . ;; multiplies 2 and 3, subtracts result from previous (3), prints result (3)
    } if ;; if statement, executes block if top value on the stack is nonzero (3 is nonzero)
    { 
        100 / . ;; divides 100 by top value on the stack (3), prints result (33)
    } { 
        .S dup ?dup 1+ . ;; prints all items on the stack, duplicates top value, checks if it is not 0, adds 1 (multiple outputs)
    } if ;; executes first block (since top value on the stack is still nonzero)
    10 swap . ;; swapping top two stack values (10 and 33), prints top value (33)
} forall ;; loop that executes the previous block for every item on the stack (1 and 2)
<$> FIFT_END ;; comment ending the FIFT program
#!/usr/bin/env fift

// This is a comment in FIFT. Comments are denoted by double slashes.

#( 5 10 + ) // This is a comment after an instruction. It will add the numbers 5 and 10 on the stack.

#( 5 10 15 + 3 * ) // This is a longer math operation that adds 5 and 10, then multiplies by 3, and then adds 15 on the stack.

#( "Hello, World!" println ) // This will print the string "Hello, World!" to the console.

#( "Hello, " 5 * "World!" join println ) // This will print the string "Hello, " 5 times, followed by the string "World!", all concatenated and joined, to the console.

{  // This is a code block that defines a function in FIFT.
: factorial // Function name (factorial).
	{ 1 -1 roll 0 = }   // Checks if the top value on the stack is 0.
	{ 1 }               // If it is 0, return 1.
	{ 1 -1 roll dup 1 - dup -1 roll * factorial * }  // If it is not 0, recursively call the factorial function on the value and multiply it with the previous value on the stack.
if;   // End of the if statement.
} // End of the code block.

5 factorial. // Calling the factorial function with argument 5.

: car // Function name (car).
	{ 1 pick } // Duplicate the top value on the stack.
	{ throw } // If there is only 1 value on the stack, throw an error.
if; // End of the if statement.
\ `car` is a function that returns the first element of a list or tuple, implemented using FIFT's built-in function 'pick'.

// Example usage:

( "a" "b" "c" car ) // Returns the first element of the list, "a".
( 10 20 30 40 car ) // Returns the first element of the tuple, 10.
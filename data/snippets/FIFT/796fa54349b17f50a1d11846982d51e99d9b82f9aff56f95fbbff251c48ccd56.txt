# Description: This code snippet is an example of a Fibonacci sequence generator in FIFT language.

# Define function to generate the Fibonacci sequence up to a given 'n' value
fift: func [ n ] [
  # Define local variables to hold the first two numbers in the sequence
  a: 0
  b: 1
  # If 'n' is less than or equal to 0, print an error and exit the function
  if n <= 0 [
    print "Error: n value must be greater than 0"
    exit
  ]
  # If 'n' is equal to 1, print the first number in the sequence and exit the function
  if n == 1 [
    print "Fibonacci sequence up to" n "is:" a
    exit
  ]
  # Print the first two numbers in the sequence
  print "Fibonacci sequence up to" n "is:" a ", " b
  # Loop to generate the rest of the sequence
  loop: for i from 3 to n [
    # Calculate the next number in the sequence by summing the previous two numbers
    c: a + b
    # Print the next number in the sequence
    print c
    # Update the values of 'a' and 'b' to continue the sequence
    a: b
    b: c
  ]
]

# Call the function with a given value for 'n'
fift: 8

# Output:
Fibonacci sequence up to 8 is: 0, 1, 1, 2, 3, 5, 8, 13
// Define a function to find the nth Fibonacci number
// Takes in a parameter n - the index of the Fibonacci number to be found
// Returns the Fibonacci number at that index

func fibonacci(n) {
    // Base cases - first two Fibonacci numbers are 0 and 1
    if (n == 0) {
        return 0;
    }
    if (n == 1) {
        return 1;
    }

    // Recursive call to find the n-1 and n-2 Fibonacci numbers
    // Then returns the sum of these numbers as the nth Fibonacci number
    return fibonacci(n-1) + fibonacci(n-2);
}

// Define a function to test the fibonacci function
func testFibonacci() {

    // Test case 1 - n = 5
    if (fibonacci(5) == 5) {
        log("Test Case 1 Passed!");
    } else {
        log("Test Case 1 Failed! Expected: 5, Actual: ", fibonacci(5));
    }

    // Test case 2 - n = 10
    if (fibonacci(10) == 55) {
        log("Test Case 2 Passed!");
    } else {
        log("Test Case 2 Failed! Expected: 55, Actual: ", fibonacci(10));
    }

    // Test case 3 - n = 20
    if (fibonacci(20) == 6765) {
        log("Test Case 3 Passed!");
    } else {
        log("Test Case 3 Failed! Expected: 6765, Actual: ", fibonacci(20));
    }
}

// Output the result of the testFibonacci function
testFibonacci();
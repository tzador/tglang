// Define a function for calculating the factorial of a number
/// param n - the input number
/// returns the factorial of n
fun fact(n){
    if (n == 0){
        return 1; // if n is 0, return 1
    }
    else {
        return n * fact(n-1); // recursive call to calculate the factorial
    }
}

// Define a function that checks if a given number is prime
/// param num - the number to check
/// returns true if num is prime, otherwise returns false
fun is_prime(num){
    if (num <= 1){
        return false; // numbers less than or equal to 1 are not prime
    }
    else if (num == 2){
        return true; // 2 is the only even prime number
    }
    else if (num % 2 == 0){
        return false; // if num is even, it is not prime
    }
    else {
        // check if num is divisible by any odd number below its square root
        for (i=3; i <= sqrt(num); i+=2){
            if (num % i == 0){
                return false; // num is divisible by i, therefore not prime
            }
        }
        return true; // num is not divisible by any number, so it is prime
    }
}

// Use the defined functions to find the largest prime factor of a given number
/// param n - the input number
/// returns the largest prime factor of n
fun largest_prime_factor(n){
    largest = 0; // variable to store the largest prime factor
    // loop through all numbers from 1 to n
    for (i=1; i <= n; i++){
        // check if i is a factor of n and also a prime number
        if (n % i == 0 && is_prime(i)){
            largest = i; // update largest with the current prime factor
        }
    }
    return largest; // return the largest prime factor of n
}

// Example usage
n = 100;
largest = largest_prime_factor(n); // largest_prime_factor(100) = 5
print("The largest prime factor of " + n + " is " + largest); // prints "The largest prime factor of 100 is 5"
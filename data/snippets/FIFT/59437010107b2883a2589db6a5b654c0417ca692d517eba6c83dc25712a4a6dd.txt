\ Program to sort an array using selection sort algorithm

\ Define array to be sorted
VAR: numbers[] = [5, 9, 8, 2, 1]

\ Define variables for looping
VAR: i = 0 \ counter for outer loop
VAR: j = 0 \ counter for inner loop
VAR: min = 0 \ index of minimum element

\ Define function to find minimum element in array
FUNC: find_min
    PARAMETERS:
        array: ARRAY
    VAR: min_ptr = 0 \ pointer to store index of minimum element
    FOR j = 1 TO array.length-1 \ loop through array
        \ Check if current element is smaller than min
        IF array[j] < array[min_ptr]
            min_ptr = j \ update min pointer
        ENDIF
    ENDFOR
    RETURN min_ptr \ return index of minimum element
ENDFUNC

\ Main sorting logic using selection sort algorithm
FOR i = 0 TO numbers.length-2 \ loop through array
    \ Find index of minimum element in unsorted subarray
    min = find_min(numbers[i+1:]) \ pass subarray to find_min function
    \ Swap current element with minimum element
    VAR: temp = numbers[min]
    numbers[min] = numbers[i]
    numbers[i] = temp
ENDFOR

\ Display sorted array
PRINT "Sorted array: "
FOR i = 0 TO numbers.length-1
    PRINT numbers[i]
ENDFOR
// Import libraries
import solidity_library "stdlib.sol";
import encryption_library "encryptlib.sol";

// Define struct for User data
struct User {
    string name;
    uint age;
    address walletAddress;
    bytes encryptedData;
}

// Declare array for storing User data
User[] users;

// Function to add user data to the array
function addUser(string name, uint age, address walletAddress, bytes data) public {
    users.push(User(name, age, walletAddress, data));
}

// Function to get user data by name
function getUserData(string name) public view returns (string, uint, address, bytes) {
    // Loop through array to find user data
    for (uint i = 0; i < users.length; i++) {
        if (compareStrings(users[i].name, name)) {
            return (users[i].name, users[i].age, users[i].walletAddress, users[i].encryptedData);
        }
    }
}

// Function to compare two strings
function compareStrings(string string1, string string2) public pure returns (bool) {
    if (bytes(string1).length != bytes(string2).length) {
        return false;
    } else {
        for (uint i = 0; i < bytes(string1).length; i++) {
            if (bytes(string1)[i] != bytes(string2)[i]) {
                return false;
            }
        }
        return true;
    }
}

// Encrypt user data
encryption_library.encrypt(users[0].encryptedData);

// Print user data in encrypted form
solidity_library.print("Encrypted data: ", users[0].encryptedData);

// Decrypt and print user data
solidity_library.print("Decrypted data: ", encryption_library.decrypt(users[0].encryptedData));
// This code snippet demonstrates a recursive function in FIFT
// that calculates the factorial of a given number.

// Define a function named "factorial" that takes in an integer "n" as input.
factorial : n { 

    // Define a base case when n is equal to 0, which will return 1.
    n 0 == { 
        1 // return 1 
    } 
    // Define a recursive case when n is greater than 0.
    { 
        // Multiply n by the factorial of (n-1) and store the result in 'prod'.
        n n 1 - factorial * prod 

        // Output the result.
        prod // return prod
    } 

};

// Call the factorial function and pass in the value 5.
5 factorial

// Expected output: 120 (5! = 1*2*3*4*5 = 120)
;;;;FIFT code snippet
;This is a long and complex code snippet in the FIFT programming language.
;It contains various operations and variables.

;;;;Variables
;Declare variables using the "let" keyword
;Variables are dynamically typed, their type is inferred based on the value they are assigned
(let a 5) ;Declare a variable "a" with the value of 5
(let b "FIFT") ;Declare a variable "b" with the value of "FIFT"
(let c #t) ;Declare a variable "c" with the value of boolean true
(let d (+ 2 3)) ;Declare a variable "d" with the value of the sum of 2 and 3
(let e (= 5 5)) ;Declare a variable "e" with the value of the comparison of 5 and 5 (returns boolean true)

;;;;Operations
;Arithmetic Operations
(add 2 3) ;Returns the sum of 2 and 3
(sub 5 (+ 2 3)) ;Returns the difference of 5 and the sum of 2 and 3
(mul 4 5) ;Returns the product of 4 and 5
(div 10 2) ;Returns the division of 10 by 2
(mod 7 2) ;Returns the remainder of 7 divided by 2

;Comparison Operations
(eq a b) ;Checks if the value of "a" is equal to the value of "b" (returns boolean false)
(> a b) ;Checks if the value of "a" is greater than the value of "b" (returns boolean true)
(<= d 5) ;Checks if the value of "d" is less than or equal to 5 (returns boolean false)

;Loops
(loop (let i 0) (< i 5) (set i (+ i 1)) ;Starts a loop, initializes variable "i" to 0, checks if "i" is less than 5, and increments "i" by 1 each time the loop runs
    (print i)) ;Prints the value of "i" each time the loop runs

;Conditional Statements
(if (> c 10) ;Checks if the value of "c" is greater than 10
    (print "c is greater than 10") ;If the condition is true, print this statement
    (print "c is less than or equal to 10")) ;If the condition is false, print this statement

;Functions
(define (sum x y) ;Defines a function "sum" with two parameters "x" and "y"
    (+ x y)) ;Returns the sum of "x" and "y"

(sum 2 3) ;Calls the "sum" function with the arguments 2 and 3, returning the value 5
;; Defining a recursive function in FIFT that calculates the sum of a list of numbers

;; Define the function 'sum' with two parameters: 'list' and 'total'
sum { list total } {
    # Check if the list is empty
    dup empty? {
        # If empty, return the current total
        drop total
    } {
        # If not empty, recursive call
        # Calculate the sum of the first element and the remaining list
        swap first +' sum swap rest '/'
    } cond
}

;; Example usage:
[1 2 3 4] 0 sum  --> Result: 10 (1+2+3+4)
[10 20 30] 0 sum --> Result: 60 (10+20+30)
[] 0 sum         --> Result: 0 (empty list returns 0)
; This code snippet in FIFT performs a prime factorization of a given number

: factorize ( n -- factors )
  begin dup 2 mod 0= until 2 / swap ;           \ divide by 2 all factors of 2
  2 3 5 7 11 13 17 19 23 29 31                    \ list of prime numbers to start dividing
  over 31 < begin
    dup rot mod 0= if                             \ if the number is divisible by the current prime
      swap / over . cr                          \ divide, print the factor and go to next iteration
    else 2 pick 2 =                              \ if not and the prime is 2, then double the number and continue
      if drop + else >r r>                        \ else store the number and go to the next prime 
      I i over rot >i - r> swap                   \ divide the number until it is not divisible by the current prime
    then
    rot i ++                                     \ go to the next prime in the list
  again ;

  ;; Here is an example of using the factorize function
  100 factorize

;; Output: 2        \ factor
          2        \ factor
          5        \ factor
          5        \ factor
          ok       \ end of program
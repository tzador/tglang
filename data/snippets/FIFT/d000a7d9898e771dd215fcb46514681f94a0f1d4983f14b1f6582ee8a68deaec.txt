define square_int { ; function to square an integer
    2ints #^ swap #* ; squares the top two items on the stack
    1 'check_squared ;; duplicate the squared value on the stack
    dup 0 lt {} { check_squared } cond ;; if squared value is negative, replace with empty array
    swap ;; swap back to original squared value
    2ints #^ swap #* ;; squares the top two items on the stack
    ; the squared value is now at the top of the stack
} 

define sum_of_squares { ; function to calculate the sum of squares of two numbers
    2ints #^ swap square_int ;; squares the first number
    swap 2ints #^ square_int swap #+ ;; add the squares of both numbers
}

define difference_of_squares { ; function to calculate the difference of squares of two numbers
    2ints #^ swap square_int ;; squares the first number
    swap 2ints #^ square_int swap #- ;; subtract the squares of both numbers
}

4 3 sum_of_squares """" calculate the sum of squares of 4 and 3
output: `25` ; sum of squares of 4 and 3 is 25

6 9 difference_of_squares """" calculate the difference of squares of 6 and 9
output: `-45` ; difference of squares of 6 and 9 is -45
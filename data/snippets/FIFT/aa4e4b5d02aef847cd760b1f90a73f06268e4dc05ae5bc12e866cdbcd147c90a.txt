;; This program calculates the factorial of a given number
(()       ;; Anonymous function that takes one argument
          ;; Push the argument to the stack
 dup      ;; Duplicates the argument on top of the stack
 1 <      ;; Checks if the argument is less than one
 {        ;; If statement
  [pop]   ;; Pops the argument, as factorial of negative numbers is undefined
 } if     ;; End of if statement
 {        ;; Else statement
  1        ;; Pushes 1 to the stack
 } else   ;; End of else statement
 {        ;; Loop statement
  [dup]   ;; Duplicates the current factorial value
  [dec]   ;; Decrements the current argument
  {       ;; Loop condition
   [dup]  ;; Duplicates the current argument
   1 <    ;; Checks if the argument is less than one
  } while ;; End of loop condition
  {       ;; Loop body
   swap   ;; Swaps the order of the top two elements on the stack
   mul    ;; Multiplies the top two elements on the stack
  } do    ;; End of loop body
 } loop   ;; End of loop statement
)         ;; End of anonymous function
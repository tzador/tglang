{
    // This is a comment in FIFT

    // Define a function 'factorial' that takes in a number
    // and returns its factorial value
    factorial {
        // Push the number 1 onto the stack
        #1

        // Check if input is 1 or 0, if yes then return 1
        #dup #1 == ##

        // If input is not 1 or 0, continue
        #{

        // Duplicate the current number
        #dup

        // Push the number 1 onto the stack
        #1

        // Subtract 1 from the current number
        #sub

        // Call the factorial function recursively using the new number
        #factorial

        // Multiply the current number by the result of the recursive call
        #*

        // End of loop
        #}

        // Return the final result
        #ret
    }

    // Define a variable 'n' and push the value 5 onto the stack
    5 #n!

    // Call the 'factorial' function on variable 'n'
    #factorial #n!
}
;; Function to calculate the factorial of a number
(defun factorial (n)
  (if (= n 0)
    1
    (* n (factorial (- n 1)))))

;; Function to calculate the fibonacci series
(defun fibonacci (n)
  (cond ((= n 0)
          0)
        ((= n 1)
          1)
        (t (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))


;; Main function to generate a random number, calculate its factorial and fibonacci series, and print the results
(defun main ()
  (let* ((n (random 10))
         (factorial-result (factorial n))
         (fibonacci-result (fibonacci n)))
    (format t "The random number is ~a~%" n)
    (format t "The factorial of ~a is ~a~%" n factorial-result)
    (format t "The fibonacci series up to ~a is ~a~%" n fibonacci-result)))

;; Call the main function
(main)
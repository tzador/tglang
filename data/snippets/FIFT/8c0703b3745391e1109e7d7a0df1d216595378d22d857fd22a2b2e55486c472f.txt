// This code snippet creates a matrix calculator class
class MatrixCalculator {
    // Matrix addition method
    def add(matA, matB) {
        // Check that matrices are of same size
        if matA.row_size == matB.row_size and matA.col_size == matB.col_size {
            // Initialize resulting matrix
            var resultMat = [[0 for col in range(matA.col_size)] for row in range(matA.row_size)]
            // Loop through rows and columns
            for i in range(matA.row_size) {
                for j in range(matA.col_size) {
                    // Add corresponding elements
                    resultMat[i][j] = matA[i][j] + matB[i][j]
                }
            }
            // Return resulting matrix
            return resultMat
        } else {
            // Throw error if matrices are of different sizes
            throw IllegalArgumentException("Matrices are of different sizes")
        }
    }
    // Matrix multiplication method
    def multiply(matA, matB) {
        // Check if number of columns in matA = number of rows in matB
        if matA.col_size == matB.row_size {
            // Initialize resulting matrix
            var resultMat = [[0 for col in range(matB.col_size)] for row in range(matA.row_size)]
            // Loop through rows of matA
            for i in range(matA.row_size) {
                // Loop through columns of matB
                for j in range(matB.col_size) {
                    // Initialize sum variable
                    var sum = 0
                    // Loop through columns of matA (or rows of matB)
                    for k in range(matA.col_size) {
                        // Multiply and add the corresponding elements
                        sum += matA[i][k] * matB[k][j]
                    }
                    // Set the result in the resulting matrix
                    resultMat[i][j] = sum
                }
            }
            // Return resulting matrix
            return resultMat
        } else {
            // Throw error if matrices are not multiplicable
            throw IllegalArgumentException("Matrices cannot be multiplied")
        }
    }
    // Matrix transposition method
    def transpose(mat) {
        // Initialize resulting matrix with exchanged row and column sizes
        var resultMat = [[0 for col in range(mat.row_size)] for row in range(mat.col_size)]
        // Loop through rows and columns
        for i in range(mat.row_size) {
            for j in range(mat.col_size) {
                // Exchange the indices to transpose
                resultMat[j][i] = mat[i][j]
            }
        }
        // Return resulting matrix
        return resultMat
    }
}
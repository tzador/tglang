{ This is a code snippet in FIFT, a functional language used for developing smart contracts.}

{ Declare a variable 'balance' and assign a value of 1000. }
variable balance 1000 ;

{ Define a function for calculating the remaining balance after a withdrawal. }
: withdraw ( amount -- )
    balance @ max -  # Subtracts amount from balance if balance is greater than amount
    dup 0 <          # Check if resulting balance is negative
    if ." Insufficient funds."       # If balance is negative, print error message
    else ." Withdrawal successful."  # If balance is positive, print success message
    then ;

{ Define a function for depositing funds into the balance. }
: deposit ( amount -- )
    balance @ +         # Add amount to current balance
    ." Deposit successful." ;

{ Define a function for transferring funds from one account to another. }
: transfer ( account amount -- )
    balance @ dup <                 # Check if current balance is less than transfer amount
    if ." Insufficient funds."       # If balance is lower, print error message
    else
        balance @ over +             # Add amount to current balance
        swap 2 pick - swap !         # Subtract amount from sender's balance
        ." Transfer successful."     # Print success message
    then ;

{ Example usage: }
100 withdraw ;   { Attempt to withdraw 100, balance should now be 900 }
200 deposit ;    { Deposit 200, balance should now be 1100 }
100 transfer ;   { Transfer 100 to another account, balance should now be 1000 }
400 transfer ;   { Attempt to transfer 400, should print error message }
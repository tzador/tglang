;; The following code snippet creates a function called `calculate_fibonacci` that takes in
;; one argument `n`, an integer, and recursively calculates the n-th number in the Fibonacci sequence. 
;; Annotated using Markdown to explain steps and syntax.

;; define the function using the keyword `func` and specify the function name and parameters
func calculate_fibonacci (n):
    ;; initialize two local variables `current` and `previous` to store values in the sequence
    localvar current := 1
    localvar previous := 0
    ;; use a for loop to iterate `n` number of times
    for(localvar i := 0; i < n; i++):
        ;; reassign `current` to the sum of `current` and `previous`
        current := current + previous
        ;; reassign `previous` to the previous value of `current`
        previous := current - previous
    ;; return the value of `current`, representing the n-th number in the Fibonacci sequence
    return current
    
;; call the function with an input argument `10` and store the result in a variable `result`
localvar result := calculate_fibonacci (10)
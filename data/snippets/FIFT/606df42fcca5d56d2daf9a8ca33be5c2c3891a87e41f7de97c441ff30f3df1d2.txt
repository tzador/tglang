: MULTIPLE   ( n m -- n*m )
2DUP               ( n m n m )
AGAIN
SWAP               ( n m m n )
DUP     1 -        ( n m m n m-1 )
NIP                 ( n m m n )
DUP                 ( n m m m n )
0<     IF           ( n m m m n<0 )
   0                 ( n m m m 0 )
   6 +
ELSE               ( n m m m n<0 )
   DUP     1 +    ( n m m m n-1+1 )
   SWAP            ( n m m n-1+1 m )
   MULTIPLE       ( n m m n-1+1*m )
   OVER *          ( n m m n-1+1*m yesterday )
   THEN             ( n m m n-1+1*m[iftrue] | n m m 0* )
DUP                 ( n m m {|0}[true] | n m m[iffalse] )
0=   IF           ( n m m true n m m )
   2DROP             ( n m m )
   EXIT              ( n m )
THEN               ( n m m[iftrue] | n m m[iffalse] )
2DUP               ( n m m[iftrue] | n m m[iffalse] n m )
-                   ( n m m[iftrue] | n m m[iffalse] n-m )
:           ( ??? ) - 8 | 8 /  (? ? ?) 60 | ( n(/m)-r ? | m[wholenumber]/n(numerator))
2DUP                   ( ??? | n/q[loopback](!/wholenumber) | n/q q m/p[q] p[wholenumber..] (!/d)|m/p[pn] )
3DUP                   ( ??? | ??? | ??? )
2SWAP                  ( ??? | ??? )
DUP                 ( ??? | ??? | ??? ?=0 )
DUP               ( ??? | ??? | ??? ?=0 | n/q[loopback] )
0<   IF Not equal   ( ??? | ??? | ??[true]/false |??[ if true(i) mean??? | ??? ] )
   1 
THEN
6RSHIFT
DUP
DUP
1
BITWISE-OR
ENDDUP
1
TRIPLE-BACKTICK
{example of a complex code snippet in FIFT}

# function to calculate the fibonacci sequence
: fib ( x -- n )
dup 1 <=
  if
    1
  else
    dup 1 -
    fib over 1- fib +
  then
;

# create a list to store the first 10 fibonacci numbers
[ 10 0 ] # [num_of_iterations start_number]
[ # while loop to iterate through the list and add fibonacci numbers
  dup 1 <= # check if number of iterations is less than or equal to 1
  if # if true, add 0 to the list and break out of the loop
    drop 0
    break
  else # if false, add the next fibonacci number to the list and decrement the number of iterations
    dup 1 - # decrement number of iterations
    over # duplicate current number in the list
    1- # decrement index in the list
    [ swap dup fib swap list-append ] # calculate fibonacci number and append to list
    recurse # recursive call to continue the loop
  then
] times # end while loop
.
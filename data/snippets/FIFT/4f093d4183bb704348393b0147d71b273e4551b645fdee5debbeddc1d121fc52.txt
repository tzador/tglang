# This is a comment in FIFT
(sub)  # This is a subroutine that takes no arguments
  'This is a string.' # Pushes a string onto the stack
  %True  # Pushes a boolean value onto the stack
  10  # Pushes an integer onto the stack

  <{ # Opens a conditional statement
    ~(>R) # Pushes the top of the stack onto the return stack
    "Value is greater than 10." # Pushes a string onto the stack
    5  # Pushes an integer onto the stack
    (len) # Calls the 'len' function on the stack
    > # Compares the two integers
    ~(^R) # Pops the top of the return stack and pushes it onto the main stack
  }> # Closes the conditional statement

  # This is a loop
  +loop:  # Labels the loop
    1  # Pushes an integer onto the stack
    swap  # Swaps the top two elements on the stack
    dup %Print # Duplicates the top element on the stack, and prints it
    1+  # Adds 1 to the top element on the stack

    <{ # Opens a conditional statement
      ~(>R) # Pushes the top of the stack onto the return stack
      10  # Pushes an integer onto the stack
      = # Compares the top two elements on the stack
      ~(^R) # Pops the top of the return stack and pushes it onto the main stack
    }> # Closes the conditional statement
  (loop)  # Calls the loop subroutine

  # This is an if-else statement
  <{  # Opens a conditional statement
    "Value is less than or equal to 10." # Pushes a string onto the stack
    ^Print # Pops the top element on the stack and prints it
  }>{  # Opens the if statement
    "Value is greater than 10." # Pushes a string onto the stack
    ^Print # Pops the top element on the stack and prints it
  }<  # Closes the if-else statement
) # End of subroutine

# This is the main code
^sub # Calls the subroutine we defined above
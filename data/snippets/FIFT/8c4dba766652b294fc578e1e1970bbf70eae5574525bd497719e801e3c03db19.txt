// Using FIFT, we will define a recursive function
// that calculates the factorial of a given number n.
// The result will be stored in the variable "result".

rec: factorial
    { n } swap 1 <=
    { drop 1 }
    { n 1 - factorial n * }
    if ;

// We will now call the function and pass in the value 5.
// This should give us the factorial of 5, which is 120.

5 factorial => result

// We can also create a loop that calculates the factorial
// of numbers from 1 to 10 and prints them out.

1 10
{ i dup factorial
  "The factorial of " i u. " is " u.
} seq foreach
drop  =>

// The output of this code should be:
// The factorial of 1 is 1
// The factorial of 2 is 2
// The factorial of 3 is 6
// The factorial of 4 is 24
// The factorial of 5 is 120
// The factorial of 6 is 720
// The factorial of 7 is 5040
// The factorial of 8 is 40320
// The factorial of 9 is 362880
// The factorial of 10 is 3628800
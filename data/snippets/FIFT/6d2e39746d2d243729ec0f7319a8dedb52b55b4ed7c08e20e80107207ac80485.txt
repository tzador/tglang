;; This code snippet generates a list of prime numbers using the Sieve of Eratosthenes algorithm

;; Function to generate a list of prime numbers upto a given limit
define primes(limit)
    ;; Create a list of numbers from 2 to the limit
    let numbers = range(2, limit)

    ;; Create a list to store the prime numbers
    let primes = []

    ;; Loop through the numbers list
    for num in numbers
        ;; Check if the number is prime
        if is_prime(num)
            ;; Add the number to the primes list
            primes = append(primes, num)
        
        ;; Remove all multiples of the current number from the numbers list
        for i in range(num * 2, limit + 1, num)
            numbers = remove(numbers, i)

    ;; Return the primes list
    primes
end-function


;; Function to check if a number is prime
define is_prime(num)
    ;; Check if the number is less than 2
    if num < 2
        return false

    ;; Loop through all numbers from 2 to the square root of the number
    for i in range(2, sqrt(num) + 1)
        ;; Check if the number is divisible by any of the numbers in the range
        if num % i == 0
            return false

    ;; If the number is not divisible by any numbers, it is prime
    return true
end-function


;; Main program

;; Get the limit from the user
let limit = input("Enter the limit: ")

;; Generate the list of prime numbers upto the limit
let prime_list = primes(limit)

;; Display the list of prime numbers
print("The prime numbers upto", limit, "are:", prime_list)
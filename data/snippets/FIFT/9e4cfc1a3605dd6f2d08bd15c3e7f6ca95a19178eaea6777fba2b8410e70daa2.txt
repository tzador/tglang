:: generateRandomPassword ( u ?LOG u ?LENGTH -- u )

BEGIN
    u> 0 IF
        ?LENGTH 1- LOG_INITIAL + LOG_INCREMENT - 1/ LOG
        u
    ELSE
        LOG_INITIAL LOG
    THEN

    LOG 1/ RANDOM * LOG_TYPE RANDOM 1- * LOG+ LOG_ROUND
    LENGTH + S0 S1 S2 S3 * BASE+ TO_HEX u TO_S u
    1+ u ROT u+;

: TO_HEX ( u -- STR )
    BASE $ 16 REM 97+ + $ 10 / DUP IF 55 THEN $ 0 ;

: TO_S ( u -- STR )
    1 u 0 DO
        I DUP 10< IF
            S1 I ?CHAR + $ S0 + $ 10 - THEN
        ELSE
            S1 I ?CHAR + $ S0 + $ 55 -
        THEN
    LOOP
    REVERSE ;

: BASE+ ( a -- STR )
    IF 1 $ ELSE 0 $ THEN
    10 11 12 13 14 15 16 ROT
    97+ + $ 6 * $;

CREATE .PASSWORD 20 ALLOT
PASSWORD BOUNDS DO
    I generateRandomPassword ( i u ?LOG u ?LENGTH )
    toS ! duplicates !
LOOP
;; This code snippet is a simple prime number checker in FIFT programming language. It uses the Miller-Rabin primality test algorithm.

// Imports the necessary libraries for Miller-Rabin primality test
import random

;; Calculates the modular exponentiation of a number using repeated squaring.
func modular_exponentiation(base, exponent, modulus) { 
    if exponent == 0 {
        return 1
    }
    // Checks if the exponent is even or odd.
    if exponent % 2 == 0 {
        // Recursively divides the exponent by 2 and multiplies the base by itself.
        return modular_exponentiation((base * base) % modulus, exponent/2, modulus)
    } else {
        // Recursively divides the exponent by 2 and multiplies the base by itself, then multiplies it by the original base.
        return (base * modular_exponentiation((base * base) % modulus, (exponent-1)/2, modulus)) % modulus
    }
}

;; The Miller-Rabin primality test algorithm
func miller_rabin(n, k) { 
    if n <= 1 {
        return false
    }
    if n == 2 || n == 3 {
        return true
    }
    if n % 2 == 0 {
        return false
    }
    // Finds the values of s and d for n-1 = (2^s)d.
    s = n-1
    d = s & (s-1)
    // Runs the test k times for higher accuracy.
    for i in range(k) {
        // Chooses a random number between 2 and n-2 for testing.
        a = random.randint(2, (n-2))
        x = modular_exponentiation(a, d, n)
        // Checks if x is 1 or -1 mod n.
        if x == 1 || x == n-1 {
            continue
        } else {
            // Recursively squares x and checks if it is congruent to -1 mod n.
            for j in range(s-1) {
                x = modular_exponentiation(x, 2, n)
                if x == n-1 {
                    break
                }
                if x == 1 {
                    return false
                }
            }
            if x == n-1 {
                continue
            }
            return false
        }
    }
    return true
}

// Main function where the number to be checked is entered by the user.
func main() {
    // Gets user input for the number to be checked.
    n = input("Enter a number to check if it is prime: ")
    // Gets user input for the number of iterations for the test.
    k = input("Enter the number of iterations for the test: ")
    // Converts the input strings to integers.
    n = n.toInt()
    k = k.toInt()
    // Calls the miller_rabin function to check if n is prime.
    prime = miller_rabin(n, k)
    // Prints the result.
    print("Is", n, "a prime number?", prime)
}

// Calls the main function to run the program.
main()
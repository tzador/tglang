' annotations
{ v "sample input" } :input
v { "sample output" } :output

" function to check if a number is prime "
{ n - "boolean indicating if n is prime" }
:prime?
n 1 =
{ "if n equals 1, return false" } :ifone
n "input" = { ' input
{ output - "output boolean indicating if n is prime" }
true} :output
{ "if n is not equal to 1, iterate through all numbers from 2 to n/2 and check if n is divisible by any of them" } :ifnotone
2 { start - "the starting number for iteration" }
n 2 / { end - "the ending number for iteration" }
do
n start mod { result - "remainder when n is divided by start" }
0 = { "if the remainder is 0, then n is not prime" } ' ifresult
{ output - "output boolean indicating if n is prime" }
false
catch
{ "if an error is thrown during iteration, return false" } :catch
false
end
.
" end function "

{ v "sample prime number" } :input
37 { "expected output is true" } :output
v prime? "function to check if a number is prime"
~
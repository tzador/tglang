DO # Loop command in FIFT

Dicts: Push # Push command in FIFT

: pop  ( n -- n )  swap drop ; # pop command in FIFT

: mul  ( n n -- n )  * ; # multiply command in FIFT

: div  ( n n -- n )  /mod nip ; # divide command in FIFT

: compare  ( n n -- n )  > swap < or ; # compare command in FIFT

: count  ( a -- n )  0 swap { ' DUP IF pop 1 + SWAP THEN } { 0 SWAP DROP } DO # count command in FIFT

: fib  ( n -- m )  dup 1 <= if drop 1 else dup 1- fib over 1- fib + then ; # fibonacci command in FIFT

: bubblesort (
   a # An array of items to sort
  -- a # The sorted array
)

{ # Start main array
  # Loop through array
  DO
    0 swap DO # Inner loop through array
      >R # Move the current item to the top of the stack
      R@ # Pull the next item on the stack
      compare if # If the items are out of order
        R> # Move the current item back to the top of the stack
        SWAP # Swap the two items
      then
      RDROP # Get rid of the next item, we don't need it anymore
      1+ # Increment the inner loop counter
    OD
    RDROP # Get rid of the inner loop counter
    1- # Decrement the outer loop counter
  OD
  RDROP # Get rid of the outer loop counter
  a # Return the sorted array
} # End main array
// Function to perform a binary search on a sorted array
// Takes in an array, the value to search for, and the starting and ending index
function binarySearch(array, value, start, end) {
    // Base case
    if (end < start) {
        return "Value not found";
    };
    // Calculate the middle index
    let mid = Math.floor((start + end) / 2);
    // Check if the middle value is the one we are looking for
    if (array[mid] === value) {
        return `Found ${value} at index ${mid}`;
    } else if (array[mid] < value) {
        // If middle value is less than search value, search the right half of the array
        return binarySearch(array, value, mid + 1, end);
    } else {
        // If middle value is greater than search value, search the left half of the array
        return binarySearch(array, value, start, mid - 1);
    };
};

// Example usage of the function
let myArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];
let searchValue = 6;
// Perform a binary search on myArray for the value 6
let result = binarySearch(myArray, searchValue, 0, myArray.length - 1);
// Print the result
console.log(result);
;; This code snippet uses the F* language to implement a binary search algorithm on a sorted list of integers.
;; The algorithm takes in an integer to search for and returns its index in the given list, or -1 if it is not found.

;; Declare an integer variable representing the target value we are searching for
val target : int

;; Declare a list of integers to search through, starting with the leftmost element
val sorted_list : int list

;; Declare a variable to store the index of the found value, initialized to -1
val index : int = -1

;; Define a helper function to recursively search the list
let rec binarySearch (target : int) (sorted_list : int list) (low : int) (high : int) : int =
  if low > high then index
  else let mid : int = low + (high - low) / 2
       if sorted_list[mid] = target then mid
       else if target < sorted_list[mid] then binarySearch target sorted_list low (mid - 1)
       else binarySearch target sorted_list (mid + 1) high

;; Call the binary search function with the initial values of 0 and the length of the list as the low and high bounds
binarySearch target sorted_list 0 (List.length sorted_list - 1)
\ constant definitions
' MAX_LENGTH 100
' MIN_LENGTH 10
' INPUT_STRING "Hello, world!"

\ stack definitions
stack: length
stack: temp_str
stack: counter

\ function to check if string length is within bounds
: check_length 
    length MAX_LENGTH >  
    IF
        ." Message too long!"  
        FALSE
    ELSE
        length MIN_LENGTH < 
        IF
            ." Message too short!"  
            FALSE
        ELSE
            TRUE
        THEN
    THEN
;

\ loop through each character in string and check its value
: check_characters
    0 counter !  \ set initial counter value to 0
    temp_str INPUT_STRING " " APPEND  \ add a space to the end of string to ensure all characters are checked
    temp_str length 1 DO 
        counter @ temp_str + counter !  \ increment counter by 1
        counter @ temp_str C!  \ get current character and store in counter
        counter @ 32 < counter @ 126 > or  \ check if current character is in ASCII range of printable characters
        IF
            ." Invalid character found at position " counter @ . CR  \ print error message with position of invalid character
            FALSE
        THEN
    LOOP
    TRUE
;

\ main function to run checks and print output
: main
    INPUT_STRING length check_length 
    INPUT_STRING check_characters 
    IF
        ." String is valid!" 
    ELSE
        ." String is not valid." 
    THEN
;

main  \ run main function
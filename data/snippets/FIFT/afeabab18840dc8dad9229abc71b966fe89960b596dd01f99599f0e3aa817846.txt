/* This FIFT program takes in two integers as input and outputs their sum */
/* Declare variables `a` and `b` to hold the inputs */
let a, b the.input *nn
/* Push 0 to the stack to initialize the sum variable `sum` */
0 x! sum
/* Initiate a counter variable `count` and set it to 0 */
0 x! count
/* Begin a loop that increments the counter */
{ count ++
  /* Push `a` and `count` onto the stack */
  a count
  /* Compare `count` with `b` */
  count ?
  /* If `count` is less than `b`, jump to the beginning of the loop */
  J<0> bounce
  /* If `count` is equal to `b`, jump to the sum calculation */
  J=1> @addToSum
  /* If `count` is greater than `b`, terminate the loop */
  J>2> break
/* Label for sum calculation */
@addToSum:
  /* Pop `a` and `b` off the stack and add them together */
  + sum
  /* Increase `count` by 1 to move to the next iteration */
  1 + count
  /* If `count` is less than `b`, jump to the beginning of the loop */
  J<0> bounce
  /* If `count` is equal to `b`, jump to the end of the loop */
  J=1> break
/* Label for end of loop */
end_loop:
  /* Pop `sum` off the stack and print it as the output */
  sum print
} loop
/* This code snippet is a FIFT program that implements a binary search algorithm */

/*
Defines a function to perform a binary search on a given array
Takes in the array, the number to search for, the starting index, and the ending index
*/
: binary_search { 'array 'search_num 'start 'end

    // Checks if the starting index is greater than the ending index
    DUP 'start 'end > IF
        // If true, the number is not in the array
        // Return -1 to indicate this
        DROP -1 EXIT
    THEN

    // Finds the middle index of the array
    'start 'end + 2/ 'mid

    // Compares the middle element with the search number
    'array 'mid getElement != IF
        // If true, the search number is either in the lower or upper half of the array
        // Checks if the middle element is greater than the search number
        'array 'mid getElement 'search_num > IF
            // If true, the search number is in the lower half
            // Recursively calls the function with the lower half of the array and same search number
            'array 'search_num 'start 'mid - 1 binary_search
        ELSE
            // If false, the search number is in the upper half
            // Recursively calls the function with the upper half of the array and same search number
            'array 'search_num 'mid 1 + 'end binary_search
        THEN
    ELSE
        // If false, the search number is found at the middle index
        // Return the middle index to indicate this
        DROP 'mid EXIT
    THEN
}.
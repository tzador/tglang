;; Annotated code snippet in the FIFT language

;; Variable declarations
variable a 123
variable b "Hello"
variable c [1 2 3]
variable d { "John" "Jane" }

;; Function declaration
func add
    { a, b, c }  ;; Function arguments
    { res }      ;; Function return value
    (add)         ;; Function label

    ;; Local variable declaration
    variable sum 0

    ;; Addition operation using a built-in opcode
    a load b load add   ;; Pushes the values of a and b onto the stack, and then adds them together
    sum store           ;; Stores the result of the addition in the local variable sum

    ;; Loop through c array and add each element to sum
    c load foreach
        sum load       ;; Load current value of sum onto the stack
        swap           ;; Swap the top two values on the stack (so sum is now at the top)
        add            ;; Add current element of c to sum
        sum store      ;; Store the updated sum back into the variable
    end              ;; End of loop

    sum load          ;; Load final value of sum onto the stack
    res store         ;; Store result into res variable
endfunc              ;; End of function declaration

;; Call the function with the given arguments
a load b load c load add

;; Print out the result stored in the res variable
res load printn
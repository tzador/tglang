/* This code snippet shows an example of a binary search algorithm in FIFT */

// Define a function for binary search
function binarySearch(array, target) {

    // Define start and end points for search
    let start = 0;
    let end = array.length - 1;

    // Loop through array
    while (start <= end) {

        // Calculate middle point
        let mid = Math.floor((start + end) / 2);

        // Check if target is at middle point
        if (array[mid] === target) {
            return mid; // Return index of target
        } 
        else if (array[mid] < target) { // If target is larger, search right half of array
            start = mid + 1;
        } 
        else { // If target is smaller, search left half of array
            end = mid - 1;
        }
    }
    return -1; // If target is not found, return -1
}

// Define an example array to search through
let exampleArray = [3, 8, 15, 23, 27, 37, 43, 52, 67, 72];

// Define the target number to search for
let targetNumber = 27;

// Call the binarySearch function and store the result in a variable
let result = binarySearch(exampleArray, targetNumber);

// Print the result
console.log("The target number is at index " + result + " in the array.");
;;; *** APPLICATION DESCRIPTION ***
;;; This code snippet is an example of a function that calculates the factorial of a given number.

;;; Define function 'factorial' with one argument 'num'
: factorial ( num -- result )
    ;;; Swap the argument to top of the stack
    SWAP

    ;;; Initialize the loop counter to 1
    1

    ;;; Duplicate the argument and assign it to a variable 'n'
    DUP 'n !

    ;;; Begin loop
    BEGIN
        ;;; Check if the loop counter is greater than the argument
        1 > IF
            ;;; End loop
            BREAK
        THEN

        ;;; Multiply the loop counter with the argument
        * 'n @ * 'n !

        ;;; Decrement the loop counter
        1 -

        ;;; Repeat loop
    AGAIN ;

;;; *** END OF APPLICATION DESCRIPTION ***
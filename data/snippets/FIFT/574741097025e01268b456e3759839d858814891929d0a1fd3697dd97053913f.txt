# Insertion sort implementation in FIFT

variable arr  # declare a global array variable
\ <{ 29 55 16 8 9 }> arr !  # assign values to the array

: insertion-sort ( arr -- sorted-arr )
  dup                    # duplicate the array
  len                    # get the length
  0 i                    # initialize loop counter
  do                     # start the loop
    i                     # loop counter on the stack
    swap array-ref       # get element at given index
    i 1 -                # get index for previous element
    dup array-ref        # duplicate previous element
    <                     # compare elements
    if                    # if previous element is larger
      i array-ref        # move current element to previous index
      i 1 swap array-set # set previous element at current index
      1 + i              # increment loop counter
    else                  # if previous element is smaller, exit loop
      i                   # loop counter on the stack
      2drop               # clear elements from the stack
    then
  loop                   # end loop
;

arr @ insertion-sort  # call the insertion-sort function on the array
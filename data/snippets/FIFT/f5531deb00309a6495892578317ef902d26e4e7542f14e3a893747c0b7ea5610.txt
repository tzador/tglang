[listFromFI] func: newListFromInput
^[newListFromInput] { swap
0 swap //uses the first element in the list as the starting value of count
dup // duplicates the starting value
#1 // pushes an increment value onto the stack
begin // marks the beginning of a loop
dup // duplicates the top value in the stack
#1 sub
dup // duplicates the top value again
if #0 eq
break // breaks the loop if 0 is reached
else
listDup // duplicates the input list
nip // removes the top value in the stack, which is the old count value
dataPush // pushes the top value in the stack onto the input list
swap
dup // duplicates the input list
#1 sub // subtracts 1 from the count
swap // swaps the positions of the input list and the count
again; // indicates the end of a loop and returns to "begin"
triple /* multi-line comment for explanation
The 'listFromFI' function takes in a list as input and uses its first element as the starting value for a counting variable,
then creates a new list by duplicating the input list and inserting the counted values at the beginning.
This is achieved through a loop that decreases the count by 1 each iteration until it reaches 0,
at which point the loop breaks and the new list is returned.
*/[listFromFI] func: newListFromInput
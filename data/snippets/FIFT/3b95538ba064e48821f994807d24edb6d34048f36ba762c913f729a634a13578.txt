;;; This is a code snippet in FIFT, an open-source stack-based programming language designed for developing smart contracts on the FreeTON blockchain.
;;; It creates an "id" contract that stores and retrieves an ID value for a specific address.

;;; Sets the stack depth to 1
1: 0 depth =
;;; Duplicates the storage cell from the stack and stores it as "old"
1: 1 @ dup 'old !


;;; ------- Code for storing the ID value -------
;;; Pushes the ID value onto the stack
1: ID !
;;; Stores the value in a cell and puts the cell on top of the stack
1: ID cell

;;; Updates the contract's storage with the new cell
;;; If there is an existing value stored, it will be overwritten
contractInstance { 'key 'idCell ! } 'key !


;;; ------- Code for retrieving the ID value -------
;;; Retrieves the stored cell from the contract's storage
contractInstance { 'key ? } 'key !
;;; Gets the value from the retrieved cell and pushes it onto the stack
1: idCell @

;;; Compares the two ID values (the one pushed and the one retrieved) and checks if they are equal
;;; If they are equal, it will push a 1 onto the stack, if not, it will push a 0
1: ID ===

;;; Checks if the top value on the stack is equal to 1 (meaning the ID values are equal)
1: 1 = not
if:
    "ID values do not match" type
else:
    "ID values match" type
endif
ca ⋊ √
:: This code snippet generates a new FIFT program that calculates
:: the square root of a given number
{
    : sqr     ( n -- n2 )
        dup *   ( n n*n )
    ;   ( n2 )
    : square      ( n -- n2 )
        sqr swap &sqr
    ;   ( n2 )
    : inverse     ( n -- n2 )
        1 swap /   ( n β ) 
        swap -6 pick ( n 6 β )
        * swap     ( n 6n β )
        swap sqr   ( n n'2 β )
    ;   ( n2)
    : approx    ( x -- x' )
        inverse swap 1.5 / swap sqr swap -
    ;   ( x' )
    dup sqr 0.01 < {                          ( val -- )
        ." x0.01 == " 8 u.r dup                ( val val )
        inverse >r aprox r> swap ne_0? assert ( val )
        swap aprox swap
    } {
        exchange ( val -- val )
        dup <= {                          ( val -- val )
            ." x > " 8 u.r
        } {
            dup undef {                  ( val -- val )
                ." x undef " 8 u.r
            } {
                dup ne_0? {              ( val -- val )
                    inverse swap 1 + swap sqr swap
                } {
                    ." pa1revon " 16 u.r   ( val )
                    drop
                }
            }
        }
    }
} ;
ca ⊸ √
:: This code snippet executes the program to calculate the square root
:: of the number 25
{
    25 square .'' sqrt == 5 <new l /g%+s>
}
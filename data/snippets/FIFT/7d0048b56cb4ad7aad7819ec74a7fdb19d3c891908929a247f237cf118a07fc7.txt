# This code snippet generates a complex matrix in FIFT programming language

// Create an array of arrays to store the matrix
matrix := [][];

// Set the dimensions of the matrix (5x5)
rows := 5;
cols := 5;

// Use a for loop to iterate through each row of the matrix
for i := 0; i < rows; i++ {

  // Initialize an empty array for the current row
  row := [];

  // Use another for loop to iterate through each column of the matrix
  for j := 0; j < cols; j++ {

    // Generate a random number between 0 and 100 to populate the current cell
    num := random(0, 100);

    // Append the number to the current row array
    row.push(num);
  }

  // Append the row array to the main matrix array
  matrix.push(row);
}

// Create annotations for the matrix
-Matrix: 
  | [[matrix]].[0]|[matrix].[1]|[matrix].[2]|[matrix].[3]|[matrix].[4]|
  | ------------- | ------------- | ------------- | ------------- | ------------- |
  | [matrix].[0].[0] | [matrix].[0].[1] | [matrix].[0].[2] | [matrix].[0].[3] | [matrix].[0].[4] |
  | [matrix].[1].[0] | [matrix].[1].[1] | [matrix].[1].[2] | [matrix].[1].[3] | [matrix].[1].[4] |
  | [matrix].[2].[0] | [matrix].[2].[1] | [matrix].[2].[2] | [matrix].[2].[3] | [matrix].[2].[4] |
  | [matrix].[3].[0] | [matrix].[3].[1] | [matrix].[3].[2] | [matrix].[3].[3] | [matrix].[3].[4] |
  | [matrix].[4].[0] | [matrix].[4].[1] | [matrix].[4].[2] | [matrix].[4].[3] | [matrix].[4].[4] |

// Print out the matrix
print(matrix);
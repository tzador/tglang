;; This program calculates the square root of a number using the Babylonian method.
;; Input: an integer, num, that is the number we want to calculate the square root of

;; Define the precision of the result
(define precision 0.00001)

;; Define a procedure, average, that calculates the average of two given numbers
(define (average a b)
  (/ (+ a b) 2))

;; Define a procedure, square, that squares a given number
(define (square x)
  (* x x))

;; Define a procedure, good-enough?, that checks if the calculated root is close enough to the actual root
(define (good-enough? guess num)
  (< (abs (- (square guess) num)) precision))

;; Define a procedure, improve, that uses the Babylonian method to improve the guess
(define (improve guess num)
  (average guess (/ num guess)))

;; Define a procedure, sqrt-iter, that iteratively improves the guess until it is good enough
(define (sqrt-iter guess num)
  (if (good-enough? guess num)
      guess
      (sqrt-iter (improve guess num) num)))

;; Call the sqrt-iter procedure with an initial guess of 1
(sqrt-iter 1 num)
;; This is an annotated FIFT code snippet
;; It calculates the factorial of a given number

;; Define a macro to get the factorial of a number
: factorial ( n -- f )
  dup 0= if
    1
  else
    dup 1-
    factorial swap *
  then
;

;; Define a macro to display an error message
: error ( msg -- )
  ." ERROR: " type cr
;

;; Define a macro to parse the input from command line arguments
: parse-input ( -- n )
  s" Enter a number: " type cr
  0. ( n is the initial accumulator )
  0 begin
    read { n } ?dup not if
      drop exit
    then
    factorial over >- ( check if n is negative )
    if
      s" Number cannot be negative." error
      0 drop exit
    then
    n rot *
    n rot chr>= ( check if input is too large for a single digit )
    if
      s" Number is too large to be calculated." error
      0 drop exit
    then
  loop
;

;; Define a function to execute the program
: main
  parse-input ( get input from command line )
  ." The factorial of " .n ." is " factorial . cr
;
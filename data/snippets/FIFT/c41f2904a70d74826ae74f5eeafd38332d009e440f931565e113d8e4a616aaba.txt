;; This code snippet is a function that checks if a given number is a prime number

;; Function that takes in a number
func: prime?(num) [
    ;; Checks if the number is equal to 2 or 3, which are prime numbers
    if: (= num 2) (return true)
    if: (= num 3) (return true)
    ;; Checks if the number is divisible by 2 or 3, if so, it is not a prime number
    if: (|| (= (mod num 2) 0) (= (mod num 3) 0)) (return false)
    ;; Finds the square root of the number and loops through every number from 5 to the square root
    local: (sqrt_num (sqrt num))
    loop: for: (local i (set 5)) (<= i sqrt_num) [
        ;; Checks if the number is divisible by the current number in the loop
        if: (= (mod num i) 0) (return false)
        ;; Increments the number in the loop by 2, skipping even numbers
        set: i (+ i 2)
    ]
    ;; If the loop finishes without returning false, the number is prime
    return true
]
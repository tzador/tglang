# This is a long and complex FIFT code snippet
define-function multiply : ( a b -- c ) {     # Defining a function to multiply two numbers
    INIT call                # Call OPERATION
    DUP a ==                # Checks if a = 0, if so, skip the next 4 operations
    IF {                    # IF statement if a = 0
        INT b                # Convert b to an integer
        SWAP                # Swap the top two stack items (in this case, b and a)
        ADD                    # Add b to a (since a = 0, this is equivalent to just b)
        EXIT                # Exit the IF statement
    }
    WHILE {                    # WHILE loop if a != 0
        INT a                    # Convert a to an integer
        1 SUB                    # Subtract 1 from a
        SWAP                    # Swap the top two stack items (in this case, a and b)
        INT b                    # Convert b to an integer
        ADD                    # Add b to the new value of a
        OVER                    # Duplicate the result
        INT 1                    # Convert 1 to an integer
        SWAP                    # Swap the top two stack items (in this case, 1 and (b + a))
        BOOL ==                    # Check if 1 is equal to (b + a)
        IF { lay                        # IF statement if true (meaning a = 0, exit WHILE loop and return c)
            drop                            # Drops the top item (a)
            EXIT                        # Exit the WHILE loop
        }
        IFNOT {                                # ELSE statement if false (meaning a != 0, repeat WHILE loop)
            drop                                # Drops the top item (a)
            ADD                        # Add (b+a) to the previous value of c
        }
    }
    INT 0                                # Converts 0 to an integer
    SWAP                                # Swaps the top two stack items (c and 0)
    BOOL <=                            # Checks if c <= 0
    IF {                                # IF statement if true (meaning c = 0)
        INT 0                            # Converts 0 to an integer (to return a correctly typed item)
        EXIT                            # Exit the IF statement
    }
    IFNOT {                            # ELSE statement if false (meaning c != 0)
        EXIT                            # Exit the IF statement
    }
}
;; This is a FIFT code snippet
;; It shows how to reverse a list using recursion

;; Define a helper function that reverses the list
{ reverse-helper:
  ( list !rev-list ) {
    dup null? swap
    { rev-list }
    {
      dup car swap
      prepend swap
      cdr reverse-helper
    }
    ifte
  }
}

;; Define the main function that takes in a list and calls the
;; helper function to reverse it
{ reverse:
  ( list ) {
    null? { "Empty list passed!" throw } if
    2dup callcc swap
    2swap pop reverse-helper
  }
}

;; Call the reverse function with a list
{ 1 2 3 4 5 reverse } call
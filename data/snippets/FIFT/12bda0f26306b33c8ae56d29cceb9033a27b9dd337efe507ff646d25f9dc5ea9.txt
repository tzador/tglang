---------------------------------------------------------------
// FIFT CODE SNIPPET FOR RECURSIVE FUNCTION CALCULATING FACTORIAL

// Function to calculate factorial
proc factorial(n) {
    // Base case
    if n = 1 {
        return(1)
    }
    // Recursive case
    else {
        return(n * factorial(n-1))
    }
}

// Define input variable
let x = 5

// Call factorial function
factorial(x)  // Output: 120

// Explanation:
// This code snippet shows the use of a recursive function in FIFT to calculate the factorial of a given number. The function takes in a parameter 'n' and checks if it is equal to 1, in which case it returns 1. Otherwise, it returns the value of n multiplied by the factorial of n-1, which is the recursive case. In the main body of the code, we define an input variable 'x' and call the factorial function with it as the input. The expected output for x=5 is 120, which is correctly calculated by the function. This snippet demonstrates how FIFT supports recursion, making it a powerful language for solving complex problems.
---------------------------------------------------------------
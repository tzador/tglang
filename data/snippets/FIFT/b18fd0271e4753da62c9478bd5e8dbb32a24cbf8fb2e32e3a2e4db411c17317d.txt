// FIFT code to calculate the nth Fibonacci number
// Input:
//   `%N` - an integer number `N` representing the index of the Fibonacci number to be calculated
// Output:
//   `%RESULT` - the `N`th Fibonacci number

// Initialize stack
[] init stack

// Push input on stack
N .s> push

// Initialize counter and accumulator
0 counter !
0 acc !

// Loop while counter < N
{ counter @ N < } while
  // Push counter on stack
  counter .s> push

  // Check if counter = 0 or 1
  { counter @ 0 = { acc .s> push } { counter @ 1 = { acc .s> push } { 
    // Pop top 2 elements from stack and push their sum onto stack
    .s> + .s>

    // Pop sum off stack and store in accumulator
    acc ! *

    // Increment counter
    counter @ 1 + dup counter !

    // Decrement counter
    counter @ -1 * counter !

    // Push accumulator back onto stack
    acc .s> push
  } if-else } if-else } while

// Pop result off stack and save in RESULT variable
.s> swap result !

// Output result
RESULT
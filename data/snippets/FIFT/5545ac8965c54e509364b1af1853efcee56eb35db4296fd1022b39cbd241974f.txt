\ This code snippet uses FIFT programming language to create a recursive function that calculates the factorial of a given number.

: factorial ( n -- f ) dup 1 = [ drop 1 ] [ dup 1 - factorial * ] ifthen ;

: factorial-sum ( n -- f ) dup 0 = [ drop 0 ] [ dup 1 - factorial-sum factorial + ] ifthen ;

\ This function calls the factorial-sum function to calculate the sum of all the factorials from 1 to the given input value.
: factorial-sum-all ( n -- f ) 1 swap factorial-sum ;

\ This function uses a loop to calculate the sum of all the factorials from 1 to the given input value.
: factorial-sum-loop ( n -- f ) 0 swap { begin swap dup 0 < while swap 1 swap - factorial * swap + repeat drop ;

\ Example usage:
3 factorial-sum-all
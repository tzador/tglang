%% % This is a comment in FIFT language
DEFINITIONS  % Start of DEFINITIONS section

SEGMENT  % Definition of the SEGMENT type
  STRUCT
    A: bits<32>  % First field of type bits<32>
    B: bits<32>  % Second field of type bits<32>
    % Complex calculations performed on fields A and B
    %= will result in a bits<64> type
    %= representing the result of calculations
  ;% end of STRUCT section
; % end of SEGMENT definition

MAIN 
  PUSH "Hello!"  % Pushes string "Hello!" to the stack
  PUSH 5         % Pushes integer 5 to the stack
  DUP            % Duplicates the top element of the stack (in this case, integer 5)
  ADD            % Adds the top two elements of the stack (5 + 5)
  SWAP           % Swaps the positions of the top two elements (result of addition is now on top)
  DUP            % Duplicates the top element again (result of addition is now duplicated)
  ADD            % Adds the top two elements of the stack (10 + 10)
  PRINTR         % Prints the top element of the stack as a string (prints "20")
  
  % Complex loop that calculates the factorial of 10
  PUSH 10        % Pushes integer 10 to the stack
  DUP            % Duplicates the top element of the stack (in this case, integer 10)
  LOCALVAR N     % Creates a local variable N and assigns the top element of the stack to it
  PUSH 1         % Pushes integer 1 to the stack
  LOCALVAR FACT  % Creates a local variable FACT and assigns the top element of the stack to it
  
  BEGIN          % Start of BEGIN section for the loop
    DUP          % Duplicates the top element of the stack (in this case, integer N)
    PUSH 1       % Pushes integer 1 to the stack
    SWAP         % Swaps the positions of the top two elements (1 is now on top)
    SUB          % Subtracts the top two elements of the stack (N - 1)
    DUP          % Duplicates the top element again (N - 1)
    LOCALVAR N   % Assigns the top element of the stack to the local variable N
    DUP          % Duplicates the top element again (N - 1)
    MUL          % Multiplies the top two elements of the stack (N * (N - 1))
    LOCALVAR FACT  % Assigns the top element of the stack to the local variable FACT
    LOCALVAR N   % Assigns the local variable N to the top element of the stack
    PUSH 1       % Pushes integer 1 to the stack
    CMP          % Compares the top two elements of the stack (N == 1)
    JEQ END      % Jumps to the END section if the comparison is true (N == 1)
  ;% end of BEGIN section
  
  END            % End of END section for the loop (where the factorial is stored in the local variable FACT)
  PRINTR         % Prints the top element of the stack as a string (prints "3628800")
  
  HALT           % Stops the program execution
; % end of MAIN section
; % end of DEFINITIONS section
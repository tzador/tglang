\ This code calculates the sum of the first 1000 prime numbers
\ Declare a variable 'sum' and initialize it to 0 
!sum <- 0

\ Declare a variable 'num' and initialize it to 2
!num <- 2

\ Declare a variable 'count' and initialize it to 0
!count <- 0

? Iteration to find the first 1000 prime numbers
loop (1000):
{
	\ Set flag to check if a number is prime or not
	?is_prime <- 0 
	
	? Iterate through potentially prime numbers from 2 to 'num'
	loop (num):
	{
		\ Check if 'num' is prime
		?is_prime <- 1
		
		\ Iterate through all numbers from 2 to 'num/2'
		loop (num/2):
		{
			\ If 'num' is divisible by 'i', it is not prime
			if (num % i == 0):
			{
				?is_prime <- 0
				break
			}
		}
		
		\ If 'num' is prime, add it to the sum and increment 'count'
		if (is_prime == 1):
		{
			!sum <- sum + num
			!count <- count + 1
		}
		
		\ Increment 'num' to check the next potentially prime number
		!num <- num + 1
		
		\ Break out of the loop if we have found 1000 prime numbers
		if (count == 1000):
		{
			break
		}
	}
	
	\ Break out of the loop if we have found 1000 prime numbers
	if (count == 1000):
	{
		break
	}
}

\ Print the final sum of the first 1000 prime numbers
println(sum)
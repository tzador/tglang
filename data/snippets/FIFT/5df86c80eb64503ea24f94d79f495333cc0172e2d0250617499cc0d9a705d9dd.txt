::TEST              // Defines a new word called 'TEST', using the :: keyword
[                   // Starts a FIFT data stack definition
    swap            // Swaps the top two elements on the data stack
    >               // Checks if the first element is greater than the second element
    dup             // Duplicates the top element on the data stack
    +               // Adds the top two elements on the data stack
    1               // Pushes the integer 1 onto the data stack
    >=              // Checks if the first element is greater than or equal to the second element
    if{             // If statement that executes the code block if the condition is true
        "Passed"    // Pushes the string "Passed" onto the data stack
    }else{          // Else code block, executes if the condition is false
        "Failed"    // Pushes the string "Failed" onto the data stack
    }
]                   // Ends the FIFT data stack definition
TEST                // Calls the word TEST, executing the code block above
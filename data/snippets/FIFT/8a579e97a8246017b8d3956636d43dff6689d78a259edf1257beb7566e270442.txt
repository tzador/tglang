{ // This is a comment in FIFT

  @ Local variables
  $var1: $int(10) $true // Declares a local variable named "var1" with a value of 10 and type of integer
  $var2: $str("Hello, world!") // Declares a local variable named "var2" with a value of "Hello, world!" and type of string

  @ Functions
  !add: $params(n1 n2) $sum(n1 n2) $return($sum) // Declares a function "add" that takes in two parameters "n1" and "n2", calculates the sum and returns the result
  !multiply: $params(n1 n2) $product(n1 n2) $return($product) // Declares a function "multiply" that takes in two parameters "n1" and "n2", calculates the product and returns the result

  @ Control flow
  *if $var1 > 0 {
    *print("The value of var1 is positive!");
  }
  *else {
    *print("The value of var1 is negative or zero!");
  }

  @ Loops
  *for $n: $int(1) $n <= $var1 $n++ {
    *print($n);
  }

  @ Data structures
  // Declare an array of strings
  $array: $list($str("a") $str("b") $str("c"));
  *print($array[1]); // Access and print the second element of the array

  // Declare a map of string keys and integer values
  $map: $dict{$str("key1"):$int(1) $str("key2"):$int(2) $str("key3"):$int(3)};
  *print($map[$str("key2")]); // Access and print the value associated with the key "key2"

  @ Object-oriented programming
  // Declare a class named "Person" with properties "name" and "age"
  $Person: $class{
    @ Properties
    $name: $str();
    $age: $int();

    @ Constructor
    !constructor: $params(name age) }> $this.name = name; }> $this.age = age;

    @ Methods
    !greet: }> *print("Hello, my name is " + $this.name + "! I am " + $this.age + " years old.");
  }

  // Create an instance of the "Person" class
  $person: $Person "John" $int(25);
  *invoke($person.greet); // Calls the "greet" method and prints the greeting

} // End of code block
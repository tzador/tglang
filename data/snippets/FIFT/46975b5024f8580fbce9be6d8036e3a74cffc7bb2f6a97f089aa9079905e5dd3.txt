(* This is a complex FIFT code snippet that uses nested functions and operators *)

# Function that takes two integers as inputs and multiplies them
%{
	dup 0 -rot * swap drop ;
}%

# Function that takes two strings as inputs and concatenates them
%{
	cat >r over r> explodes >r swap r>
	cat >>r r>@ jn r>
	r>@ ;
}%

# Function that determines if a given integer is a prime number
%{
	dup >r form_n distinct% collect n>R
	n>2 == 1 = ;
}%

 # Function that determines the factorial of a given integer
%{
	dup 0 <> 0 >r 0 0 ?DO r> -rot swap * r> 1+ LOOP drop ;
}%

# Main function that takes an integer as input and outputs its factorial or an error message if the input is not a prime number
%{
	dup >r form_n <#
	1 = { "ERROR: Input must be a prime number." } { r> fact } IF
	#> ;
}%

# Example usage of the main function with input of 7
7 fact

# Example usage of the main function with input of 10 (will output error message)
10 fact
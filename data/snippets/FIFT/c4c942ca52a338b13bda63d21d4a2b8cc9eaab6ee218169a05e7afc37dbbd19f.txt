"""  This is a complex code snippet in FIFT.
It includes a function that calculates the factorial of a given number recursively.
The function takes in a single input parameter, n, which is the number to calculate the factorial for.
It uses a loop to continuously multiply the value of n by decreasing values until it reaches 1.
The final result is then returned.
The function also includes error handling to ensure the input is a non-negative integer. """

// function to calculate the factorial of a given number
func factorial(n) {
    // check if input is valid
    if n < 0 || !is_integer(n) {
        throw("Input must be a non-negative integer")
    }

    // base case
    if n == 0 {
        return 1
    }

    // recursive call
    return n * factorial(n-1)
}

// loop to continuously call the factorial function and print the results
i = 1  // starting value
while i < 10 {
    print("Factorial of ", i, " is ", factorial(i))
    i++
}

// output:
/* Factorial of 1 is 1
Factorial of 2 is 2
Factorial of 3 is 6
Factorial of 4 is 24
Factorial of 5 is 120
Factorial of 6 is 720
Factorial of 7 is 5040
Factorial of 8 is 40320
Factorial of 9 is 362880 */
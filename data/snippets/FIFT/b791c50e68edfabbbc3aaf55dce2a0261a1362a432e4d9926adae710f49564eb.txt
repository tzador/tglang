[@exec, int] \n           ; create a new execution context variable with an integer value \n
[@exec, int2str] \n			; create a new execution context variable that converts integer to string \n
[@exec, str] \n             ; create a new execution context variable with a string value \n
[@exec, concat] \n          ; create a new execution context variable that concatenates two strings \n
[@exec, loop [count, 0] \n  	; start of a for loop, setting the count variable to 0 \n
@exec,
{ \n						; start of loop code \n
 	[@exec, count, ++] \n 		; increment the count variable by 1 \n
 	[@exec, count, int2str] \n	; convert the count variable to a string \n
 	[@exec, "Hello", concat], \n	; concatenate the string "Hello" with the converted count variable \n
 	[@exec, println] \n	; print the resulting string to the console \n
} \n						; end of loop code \n
[@exec, loop [count, count < 10], 2] \n	; end of loop statement, indicating that the loop should run while the count variable is less than 10, with a step size of 2 \n
 	[@exec, "Loop completed."] \n	; print a message to the console after the loop has completed \n
[@exec, print] \n			; print the final execution context variable to the console
;; This code snippet creates a custom function that sorts a list of numbers in ascending order using the bubble sort algorithm

;; Define function that takes in a list of numbers and outputs the sorted list
: SORT ( nums -- sorted_nums )
    0 SWAP ( initialize index to track sorted elements )
    BEGIN
        DUP 1 > IF ( check if index is at least 1 element from end )
            DUP ( duplicate list )
            2 ROLL ( move last element to top of stack )
            SWAP 0 DO ( loop through indices 0 to index )
                DUP 1+ ( increment index )
                DUP @ < ( compare current element to next element )
                IF ( if current element is larger )
                    SWAP ( swap elements )
                    2DUP ( duplicate elements )
                    1- @ SWAP ( move larger element to top of stack )
                    SWAP ! ( replace larger element in list )
                    1 - ( decrement index )
                THEN
            LOOP ( end loop through indices )
        ELSE
            DROP ( drop original list )
            LOOP ( end loop )
    DUP ?DO
        DROP ( drop sorted elements )
    LOOP ( end loop )
    SWAP DROP ; ( return final sorted list )
    
;; Example usage:
1 3 2 5 4 SORT ( outputs 1 2 3 4 5 )
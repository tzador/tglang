;; This function takes in a list of numbers and checks if all numbers are equal
;; Returns TRUE if all numbers are equal, otherwise returns FALSE

(define all-equal?
  (lambda (lst)
    (let ((first-val (car lst)))
      (if (null? lst)
          #t
          (let ((last-val (car (reverse lst))))
            (if (eqv? first-val last-val)
                (all-equal? (cdr lst))
                #f)
            )
          )
      )
    )
  )

;; TEST CASES

(all-equal? '(1 1 1 1)) ;; returns #t
(all-equal? '(1 2 3 4)) ;; returns #f
(all-equal? '("hello" "hello" "hello")) ;; returns #t
(all-equal? '(1 1 1 "1")) ;; returns #f
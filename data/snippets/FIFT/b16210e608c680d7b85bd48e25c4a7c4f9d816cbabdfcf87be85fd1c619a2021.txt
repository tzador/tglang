\ Constant definitions
CONST N = 7           \ Size of the matrix
CONST MAX = N * N     \ Maximum value of elements
CONST MIN = 1         \ Minimum value of elements
 
\ Array declaration
ARRAY nums[N, N] ELEMENTS MAX
 
\ Function for generating unique random numbers
FUNCTION generate_random_number(n)
    LOCAL temp, idx, i, j, is_unique
    \ Repeat loop until an unique number is generated
    REPEAT
        is_unique := true
        temp := (RAND * (MAX - MIN + 1)) + MIN
        \ Check for uniqueness by looping through the array
        FOR idx FROM 0 TO MAX-1
            \ Calculate row and column index using division and remainder
            i := idx / N
            j := idx % N
            \ Check if number already exists in the array
            IF nums[i, j] == temp
                is_unique := false
                EXIT
            ENDIF
        ENDFOR
    UNTIL is_unique = true
    RETURN temp
ENDFUNCTION
 
\ Function for filling the array with unique random numbers
FUNCTION fill_array()
    LOCAL idx, i, j
    FOR idx FROM 0 TO MAX-1
        \ Calculate row and column index using division and remainder
        i := idx / N
        j := idx % N
        \ Generate and assign a random unique number to the array
        nums[i, j] := generate_random_number(N)
    ENDFOR
ENDFUNCTION
 
\ Function for printing the array in a matrix form
FUNCTION print_array()
    LOCAL i, j
    FOR i FROM 0 TO N-1
        FOR j FROM 0 TO N-1
            \ Print element at current row and column index
            PRINT " " + nums[i, j] + " "
        ENDFOR
        PRINT "\n"
    ENDFOR
ENDFUNCTION
 
\ Main program
BEGIN
    \ Fill the array with unique random numbers
    fill_array()
    \ Print the array
    print_array()
END
~ Introduces a variable "num" with value "5"
num: '5'

~ Defines a function "factorial" with one parameter "n"
: factorial 
~ Stores the value of n in "VAR /n"
	VAR /n
~ Checks if n is equal to 0
	n 0 =
	~ If n is equal to 0, return the value 1
	1:
	~ Else, push the value of n on the stack and call the "factorial" function recursively
	n push factorial 
	~ Multiplies the top two values on the stack and returns the result
	* ;
	
~ Prints the result of calling the "factorial" function with the value of "num"
num factorial .

~ Output: The factorial of 5 is 120
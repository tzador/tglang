// This code snippet creates a custom data type called 'Person' with properties and methods
// using the FIFT programming language.

// Define the Person data type with properties name and age
Data Person:
    name: string
    age: integer

// Define the 'getInfo' method to return a string with the name and age of the person
Function getInfo(person: Person) returns string:
    // Create a new string variable and assign it a value
    var result = "Name: "
    // Append the person's name to the result string
    result = result + person.name
    // Add a new line character to the result string
    result = result + "\n"
    // Append the person's age to the result string
    result = result + "Age: "
    result = result + person.age
    // Return the result string
    return result

// Define the 'setAge' method to update the age of a person
Function setAge(person: Person, newAge: integer) returns Person:
    // Update the person's age with the newAge value
    person.age = newAge
    // Return the updated person object
    return person

// Create a new instance of the Person data type with the name "John" and age 25
var john = Person(name: "John", age: 25)

// Call the 'getInfo' method on the 'john' object and print the result
print(getInfo(john))

// Update John's age using the 'setAge' method
john = setAge(john, 30)

// Call the 'getInfo' method again and print the updated result
print(getInfo(john))

// Output:
// Name: John
// Age: 25
// Name: John
// Age: 30
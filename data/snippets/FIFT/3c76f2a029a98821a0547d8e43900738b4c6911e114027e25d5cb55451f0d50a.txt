; This code snippet generates a fibonacci sequence up to the 10th term
; Here we define a recursive function called fib, with one parameter n
( fib | n. n 1 =, '0', n 2 =, '1:move' (!! recursive call --> dup 1 - fib swap 2 - fib +))

; The following lines of code set up the stack
create 0 push dup push

; Loop to generate fibonacci sequence up to the 10th term
10 1 0 rot nrot 0 - (i--) i 0 > (nexti po)
10 1 0 rot nrot ; --> stack: 0 1
0 (- 0)
;i: i 0 > ; --> stack: i 0 >  i
(nexti po)
; --> stack: nexti(eta) po(p-delegation)

; Finally, we use a conditional statement to check if the sequence has reached 10 terms
10 1 0 rot nrot ; --> stack: 0 1
n 1 + dup 10 = if
    'Fibonacci sequence up to the 10th term:' e.s ( display message )
    'Stack:' e.s
    ; Here we convert each term from the stack into a string to be displayed
    ( 1. (n), ( swapped '  is ' s.+ s.+ e.s) rot )
else
    'Fibonacci sequence could not be generated for 10 terms' e.s ( display error message )
endif

; Output:
;
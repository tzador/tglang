/*
This code snippet uses the FIFT programming language
to create a complex function that checks if a given number is prime
and outputs true or false.
*/

// Declare the function with one argument 'num'
FUN :IS-PRIME ( num -- )
[
    // Check if the number is less than 2, which is not a prime number
    num 2 < 
    [ 
        // Output false if it is less than 2
        0 FALSE CAP
    ] IF

    // Declare a variable 'i' to iterate through possible factors of the number
    VARS
    i $num MAX 2 + !

    // Declare a variable 'prime' to keep track of whether the number is prime or not
    VARS
    prime TRUE !

    // Loop through the number's possible factors, starting from 2
    WHILE
    [
        // Check if i is a factor of the number
        num i MOD 0=

        [ 
            // If it is a factor, set prime to false and exit the loop
            prime FALSE ! 
            BREAK 
        ] IF

        // Increment i by 1
        i 1 + !
    ]

    // Check the value of 'prime', and output true or false accordingly
    prime [
        [ ] [ 1 ] IFTE TRUE CAP
    ] [
        FALSE CAP
    ] IFELSE
] $$

// Call the function with a test number
23 IS-PRIME
# This code snippet is written in FIFT, a functional programming language for smart contracts.

# Function to find the factorial of a given number
: factorial ( n -- result )
    1 swap
    while dup 1 >
        swap * swap 1 -
    repeat ;

# Function to calculate the nth Fibonacci number
: fibonacci ( n -- result )
    1 1 rot
    2 while dup 2 >
        swap + swap 1 -
    repeat drop ;

# Function to sort a list of integers in ascending order using bubble sort algorithm
: bubble_sort ( list -- sorted_list )
    dup length 1 > if
        0 swap begin
            0 swap begin
                dup dup length 1 - <=
                while
                    over over 1 + swap pick swap
                    over 1 + swap pick dup <= if
                        swap over rot swap over ! swap
                    else
                        drop swap 1 - over swap ! rot rot swap
                    then
                repeat
                drop
            again
            swap drop 1 -
        again
    else
        drop
    then ;

# Function to check if a given number is prime
: is_prime? ( n -- result )
    over 2 < if
        drop 0
    else
        2 1 over 1 -
        while
            dup swap mod 0 =
            if
                nip 0
            else
                1 +
            then
            dup swap /
        repeat
        swap nip 1 = if
            drop 1
        else
            drop 0
        then
    then ;

# Function to calculate the area of a circle
: area_of_circle ( r -- area )
    dup dup * 3.14 * ;

# Example usage of the above functions
10 factorial
5 fibonacci
{4, 2, 8, 1, 0} bubble_sort
17 is_prime?
3 area_of_circle
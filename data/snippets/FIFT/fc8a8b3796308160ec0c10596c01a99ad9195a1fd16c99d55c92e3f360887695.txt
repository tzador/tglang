;; This is a complex and lengthy example of code in FIFT markup language

// Define a function to convert a string to uppercase
DEFINE UPPER (string -- upperstring) {
  string ?DUP NOT IF
    // string is empty, return empty string
    "" SWAP
  ELSE
    // loop through each character, converting to uppercase
    string 0 DO>
    DUP C@ TOUPPER DUP C! 
    1+
  LOOP
  UNLOOP !DUP IF
    // not empty, create a copy of the string
    "" SWAP 
  THEN
}

// Define a function to reverse an array
DEFINE REVERSE (array -- reversedarray) {
  array ?DUP NOT IF
    // array is empty, return empty array
    [] SWAP
  ELSE
    // reverse the array by swapping elements
    array 0 array LENGTH 1- DO>
      SWAP OVER >> SWAP
    LOOP
    UNLOOP !DUP IF
      // not empty, create a copy of the array
      [] SWAP
    THEN
  THEN
}

// Define a function to calculate the factorial of a number
DEFINE FACTORIAL (n -- n!) {
  n IF 
    1 SWAP 1 - FACTORIAL *
  ELSE 
    1
  THEN
}

// Define a function to check if a number is prime
DEFINE IS_PRIME (n -- prime?) {
  n ?DUP 2 < IF
    // n is less than 2, not prime
    0 SWAP 
  ELSE
    2 DO>
      DUP OVER MOD 0= IF
        // n is divisible by i, not prime
        POP 0 SWAP 
        0 LEAVE 
      THEN
      1+
    LOOP
    UNLOOP DUP POP !DUP IF
      // num is prime
      1 SWAP 
    THEN
  THEN
}

// Define a struct to represent a person
STRUCT PERSON {
  name      // string representing person's name
  age       // integer representing person's age
  fav_color // string representing person's favorite color
}

// Create a new instance of a person with name, age, and favorite color
PERSON "John" 25 "blue" .

// Call the UPPER and REVERSE functions on an input string
"Hello, World!" UPPER REVERSE . 

// Calculate the factorial of a number
5 FACTORIAL .
 
// Check if a number is prime
7 IS_PRIME .

// Output:
// .eW ,OLLEh 
// 120 
// 1
// Define functions for prime number generation and factorization
function generatePrimeNumbers() {
     for (int i = 2; i <= 100; i++) { // Loop through numbers 2 to 100
         bool isPrime = true;
         for (int j = 2; j <= i/2; j++) { // Check if number is divisible by numbers less than half its value
             if (i % j == 0) {
                 isPrime = false;
             }
         }
         if (isPrime) {
             output(i); // Output prime number
         }
     }
}

function primeFactorization(long number) {
    for (int i = 2; i <= number; i++) {
        if (number % i == 0) {
            int primeFactor = i;
            int exponent = 0; 
            while (number % primeFactor == 0) {
                exponent++;
                number = number / primeFactor;
            }
        output(primeFactor, exponent); // Output prime factor and its exponent
        }
    }
}

// Call generatePrimeNumbers function to generate prime numbers
generatePrimeNumbers();

// Call primeFactorization function to find prime factors of a given number
primeFactorization(1000); // Output: 2, 3, 5^3
primeFactorization(121); // Output: 11^2
primeFactorization(1575); // Output: 3^2, 5^2, 7
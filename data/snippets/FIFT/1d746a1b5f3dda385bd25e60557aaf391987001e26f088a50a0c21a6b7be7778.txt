;; Define function for bubble sort
BUBBLE-SORT<-(ARR) {
  ;; Get length of the array
  ARR_LENGTH<-(LEN(ARR))
  ;; Outer loop for passes
  LOOP<-(0,LT,C<-(ARR_LENGTH))
    ;; Inner loop for swapping elements
    LOOP<-(1,LT,I<-(LT))
      LOOP<-(I,C<-(SUB(ARR_LENGTH, I)))
        ;; Check conditions for swap
        TEST<-(GT<-(AT(ARR, I), AT(ARR, C)))
        IF<-(TEST, SWAP<-(ARR, I, C))
}

;; Function to get length of input array
LEN<-(ARR) {
  ;; Define an empty counter variable
  C<-(0)
  ;; Loop through elements and increment counter
  LOOP<-(0,LT,I<-(ARR))
    C<-(C,ADD(C))
  ; Return counter
  RET(C)
}

;; Function to swap two elements in an array
SWAP<-(ARR, INDEX1, INDEX2) {
  ;; Define temporary variable to hold value at INDEX1
  TEMP<-(AT(ARR, INDEX1))
  ;; Set value at INDEX1 to that of INDEX2
  ARR<-(SET(ARR, INDEX1, AT(ARR, INDEX2)))
  ;; Set value at INDEX2 to temporary value
  ARR<-(SET(ARR, INDEX2, TEMP))
  ;; Return the updated array
  RET(ARR)
}

;; Annotated as bubble sort function in FIFT programming language
# This is a code snippet written in FIFT

// Define a function that calculates the sum of two numbers
: SUM ( a b -- sum )
  + ; // addition operator

// Define a function that takes in a string and returns the length
: LENGTH ( str -- len )
  0 SWAP
    ( count each character )
    { \x tuck CHARSIZE SWAP + }
    LITERALS
  SWAP EXECUTE DROP ;

// Define a function that checks if a number is prime
: IS_PRIME ( n -- flag )
  DUP 2 < IF DROP 0 EXIT THEN
  2
    ( loop from 2 to n-1 )
    { DUP ROT 2 == IF 1 ELSE 0 THEN + }
    LITERALS
  SWAP EXECUTE // execute loop
  ( check if any non-zero value in stack indicates non-prime )
  1 = 0 SWAP = ;
 
// Define a function that sorts a list of numbers in ascending order
: BUBBLESORT ( list -- sorted_list )
  DUP LENGTH 1 > IF
    DUP LENGTH 1 2
      ( loop through list except last element )
      { SWAP 1 DO
          tuck over @ over @ > IF SWAP 2ROT 2! THEN 2 + LOOP }
      LITERALS
    SWAP EXECUTE
    ( Recursively call function with sorted sublist )
    [ tuck LDUP 1 + SWAP 2 RDROP ] LITERAL BUBBLESORT
      ( merge sorted sublist with last element )
      1 DO tuck over @ over @ > IF SWAP 2ROT 2! THEN 2 + LOOP
  ELSE DROP THEN ;
{ This code snippet finds the maximum value in an array of integers }
: FindMax ( array -- int )
  0 swap { initialize max value to 0 }
  { start loop through array of integers }
  { n is index, i is current max value }
  0 swap 0 rot
  { duplicated array for use in loop }
  { flag used to indicate if new max value is found }
  true swap false swap
  loop
    { get index of current element }
    { increment index for next iteration }
    1 rot rot
    :> 3array
    n >if
      continue
    then
    { check if current element is larger than max value }
    { update max value if necessary }
    i { load max value }
    :< 3array
    1 eq_swap frot swap
    if
      { current element is larger, update max value }
      swap tuck
    else
      { current element is not larger, continue loop }
      nip
    then
    :>3array
    true rot swap
  loop
  { remove flag from stack }
  drop drop
  { return maximum value }
  swap 3array drop
;
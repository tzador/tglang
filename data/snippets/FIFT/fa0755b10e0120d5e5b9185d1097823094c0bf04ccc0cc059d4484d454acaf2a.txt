// Function that calculates the Fibonacci sequence up to a given limit
: fib { limit -- seq }
  0 1   // Push the first two Fibonacci numbers to the stack (0, 1)
  swap  // Swap their positions so that 0 is at the top of the stack
  limit // Push the given limit to the stack
  {     // Start of the loop
    dup    // Duplicate the top value on the stack (current Fibonacci number)
    swap   // Swap its position with the previous number in the sequence
    over   // Push the previous number back to the top of the stack
    +      // Add the current and the previous numbers
    rot    // Rotate the top three values on the stack (new number is now at the top)
    limit  // Push the limit to the stack
    >      // Check if the new number is greater than the limit
  }
  while // Repeat the loop while the condition is true
  swap  // Swap the sequence and the limit, so that only the sequence is left at the top of the stack
;       // End of the function definition

// Example of using the function with limit = 10
10 fibx     // Calling the function, output: [0, 1, 1, 2, 3, 5, 8]
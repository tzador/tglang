: factorial ( n -- n! )
    dup 1 <= if
        drop 1
    else
        dup 1 - factorial *
    then ; // This is a recursive function to calculate factorial of a number
: hello ( -- ) 
    ." Hello, world!" . ; // This is a code to print "Hello World" in FIFT
: push ( a list -- a list )
    over @ swap ! ; // This is a function to push an element onto a list
: divide ( n1 n2 -- quotient remainder )
    mod nip rot swap / ; // This function divides two numbers and returns both the quotient and remainder
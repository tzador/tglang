;; This is a code snippet in FIFT.
;; It generates a simple prime number checker.
;; Prime numbers are numbers that are only divisible by 1 and themselves.

;; Create a function to check for prime numbers
:check-prime
    ( n -- b )
    dup 2 < if drop false exit then
    2 swap 1 swap 1 do
        2dup mod over 0 = if drop false exit then
    loop
    pop true ;

;; Create a function to generate the next prime number
:get-next-prime
    ( n -- n' )
    dup check-prime if 2 * swap + >r get-next-prime r> else 1 + >r get-next-prime r> then ;

;; Initialize a counter and an accumulator
0 'counter ! 0 'acc ! 

;; Keep generating prime numbers until the accumulator reaches a certain value
:prime-loop
    ( acc max -- acc' )
    dup over <= if pop exit then
    'counter @ get-next-prime dup 'counter ! >r + r@ 'acc ! prime-loop ;

;; Call the prime-loop function with a starting value of 1 and a maximum value of 100
1 100 prime-loop

;; The accumulator now contains a list of prime numbers between 1 and 100
;; Print out the list
'acc @ type
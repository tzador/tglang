// This function checks if a string is a palindrome
: palindrome 
  \ Initial values
  dup length 2 \ length of string
  
  \ Store half the length and initialize counter  
  2 / swap dup 0 \ half length and counter
  
  { \ Start of test block
    
    \ Retrieve characters from first half of string (from the back)
    dup \ duplicate counter
    reverse swap \ create reverse index and swap with counter
    -rot nip \ remove other half of string
    c@ \ retrieve character at reverse index
    -rot c@ \ retrieve character at counter
    <> \ compare characters and return true or false
    
    \ Increment counter
    1+ 
    
    \ Stop loop if counter reaches half the length
    dup \ duplicate counter
    rot > \ check if greater than half length
    { } IFNOT \ if not, continue loop
    
    \ Not a palindrome if any characters don't match, return false
    { } IF \ start of check
      0 \ return false
      unloop \ stop loop
    { } { \ end of test block
      1 \ return true
      unloop \ stop loop
    } IFELSE 
  } 
; 
 
// Example usage
"racecar" palindrome . \ Output: True
"hello" palindrome . \ Output: False
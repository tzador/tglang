[$Version: 1.0$
| [<] [
  msg] ?>

(**
  This code snippet is an example of a simple program using FIFT, a Forth-based
  programming language designed for smart contract development on the TON blockchain.

  Author: [Your Name]
  Date:  [Current Date]
**)

: CODE-VAR
    1 CREATE , 1 here ;
  defer ! 1, DOES>  @ ['] , ;
  : CODE-IS ( n -- a )
    > >CODE HERE , ;
  : #POP-RET
    EXIT , ;
  : CODE-LITERAL ( n -- )
    > >R CODE-VAR
        >r CODE-IS #POP-RET
    r> >CODE #POP-RET
;

: EMPTY_STRING
    0 DO
      [ msg]
        ( Get next char )
        ?DUP IF
          (>r c,)
          r@
            ( Is the character a space? )
            = IF
              ( Push 0 onto the string store. )
              r>#DROP-DUP>r
            THEN
        THEN
        ( Pop the top character off the stack. )
        drop
    LOOP
    ( Push the string store onto the stack. )
    r>
;

: UPDATE_DATA
    msg $ ( Get the updated data to store as a string. )
    ($) ( Push the string onto the stack. )
    drop ( Pop the string onto the stack. )
;

: CREATE_STORE
    ( Save the updated data to the blockchain. )
    #POP-RET ( Pop the old return address off the stack. )
    @ UPDATE_DATA EMPTY_STRING ( Get the updated data and save to blockchain. )
    EXIT; ( Return to the main program. )

: MAIN
    VARIATION P1 P2 ( Get the variations of storage areas. )
    $$$Create
    CREATE_STORE ( Save the data to the blockchain. )
    EXIT; ( Exit the program. )

EXIT
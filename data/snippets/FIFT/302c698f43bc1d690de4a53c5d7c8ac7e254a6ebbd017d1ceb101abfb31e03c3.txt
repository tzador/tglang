INT MAIN() { // defining the main function
  LIST<string> nameList; // creating a list to store names
  nameList.push("John"); // adding a name to the list
  nameList.push("Jane"); // adding another name to the list
  nameList.push("Bob"); // adding another name to the list
  
  FOR(int i=0; i < nameList.length(); i++) { // iterating through the list
    PRINT(nameList[i]); // printing the current name
    INT age = GET_AGE(nameList[i]); // calling a function to get age of current name
    PRINT(" is " + STRING(age) + " years old"); // printing the age in a sentence
  }
  
  INT totalNames = nameList.length(); // storing the total number of names in the list
  
  IF(totalNames > 3) { // checking if there are more than 3 names in the list
    PRINT("There are too many names in the list."); // printing a message
  } else if(totalNames < 1) { // checking if there are less than 1 name in the list
    PRINT("There are no names in the list."); // printing a message
  } else { // if there are between 1 and 3 names in the list
    PRINT("There are " + STRING(totalNames) + " names in the list."); // printing the total number of names in a sentence
  }
  
  RETURN 0; // returning 0 to indicate the program has successfully run
}

INT GET_AGE(string name) { // defining a function to get the age of a name
  MAP<string, int> ageMap; // creating a map to store names and ages
  ageMap.insert("John", 30); // adding a name and age to the map
  ageMap.insert("Jane", 25); // adding another name and age to the map
  ageMap.insert("Bob", 35); // adding another name and age to the map
  ageMap.insert("Sarah", 27); // adding another name and age to the map
  
  IF(ageMap.find(name) == ageMap.end()) { // checking if the name is not found in the map
    RETURN 0; // returning 0 as the age
  } else { // if the name is found in the map
    RETURN ageMap[name]; // returning the age associated with the name
  }
}
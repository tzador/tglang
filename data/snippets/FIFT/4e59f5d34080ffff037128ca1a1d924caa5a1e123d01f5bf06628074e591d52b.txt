# "FIFT" stands for "Fift Is Fine Tool".
# It is a low-level language used for writing scripts for TON blockchain.
# Here is a sample code showing a basic smart contract written in FIFT.

:: main "Fift Is Fine Tool"

# Define smart contract variables
var#CalleeADdr [A]
var#Value [X]

# Create transfer function
transfer:
    << Dup
    <: calling-addr

    # Check if caller is the callee address
    ===
        # Transfer all value from callee to caller
        >> swap
        >> drop
        << callee-addr
    >>
    # Otherwise, return an error
    >>> ab
    $200 throw

# Create contract body
body:
    # Check if enough funds are available for transfer
    >> swap
    >> >> b
    <:+: stack-too-short

    # Set callee address and value
    -> This
    -> VarGlob#CalleeAddr

    >> swap
    >> >> b
    <-> This
    >> O ## 0
    # Call the transfer function using callee address and value
    call+run map Type Concat transfer ^

# Define execution handler
# The addr call is used to obtain the address of the smart contract.
exec-handler:
    dup
    # Check for execution codes
    if-> #CalleeAddr addr call
then
<<

# Execution code section
newexecution:
    call run

# Add contract to the global dictionary
1add globs

# Execute execution handler with execution code
[]execFPtr exec-handler
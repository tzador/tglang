// This FIFT code snippet calculates the factorial of a given number
// The output is first stored in a variable and then displayed as a message
// Define a function to calculate factorial using a for loop
:: calculate_factorial //Declare the name of the function
[n] [0.?] [~] [1] [~] #Init a counter and a variable to store the factorial
[*var factorial_counter] { //Start of function body
    for dup [n] ["n <=" ?] [~] 1 [~] ; //Loop start, condition and body
        1 [~] [#] //Increment the counter by 1
        [swap] [~] dup [n] [# *] [~] //Multiply counter and factorial
    ;
    #Store the factorial in a variable
    *result #Name of the variable
} //End of function body
// Use the function to calculate the factorial of 5 and store it in a variable
5 [*calculate_factorial*] *result* ;
// Display the result as a message
[result "The factorial of 5 is: " print .] " " print . ;
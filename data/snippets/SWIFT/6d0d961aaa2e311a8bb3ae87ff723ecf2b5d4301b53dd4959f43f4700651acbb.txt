// This function takes in two arrays, sorts them, and merges them into one sorted array
func mergeArrays(firstArr: [Int], secondArr: [Int]) -> [Int] {
    
    // Initialize an empty array to store the sorted merged array
    var mergedArray: [Int] = []
    
    // Loop through the first array
    for i in firstArr {
        var index: Int = 0
        
        // Compare each element in firstArr to each element in the mergedArray
        while index < mergedArray.count && i > mergedArray[index] {
            index += 1
        }
        
        // Insert the element in the correct sorted position in the mergedArray
        mergedArray.insert(i, at: index)
    }
    
    // Loop through the second array
    for j in secondArr {
        var index: Int = 0
        
        // Compare each element in secondArr to each element in the mergedArray
        while index < mergedArray.count && j > mergedArray[index] {
            index += 1
        }
        
        // Insert the element in the correct sorted position in the mergedArray
        mergedArray.insert(j, at: index)
    }
    
    // Return the sorted merged array
    return mergedArray
}

// Example usage of mergeArrays function
let firstArray: [Int] = [5, 2, 8, 1, 9]
let secondArray: [Int] = [3, 7, 4, 6]

let sortedMergedArray: [Int] = mergeArrays(firstArr: firstArray, secondArr: secondArray)

print(sortedMergedArray) // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]
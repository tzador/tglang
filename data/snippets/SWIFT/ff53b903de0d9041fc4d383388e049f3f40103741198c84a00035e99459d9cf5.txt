// This code snippet is an example of a function that sorts an array of integers using the selection sort algorithm.

func selectionSort(array: [Int]) -> [Int] { // Creates a function with the name 'selectionSort' that takes in an array of integers as a parameter and returns an array of integers

    guard array.count > 1 else { // Checks if the array has more than 1 element, if not, the array is already sorted and therefore can be returned
        return array
    }
    
    var sortedArray = array // Creates a new variable 'sortedArray' that is a copy of the original 'array'
    
    for i in 0..<sortedArray.count { // Creates a for loop that iterates through the array, starting from index 0 to the last index
        var minIndex = i // Sets the current index as the minimum index, as it is the smallest value found so far
        for j in (i + 1)..<sortedArray.count { // Creates a nested loop that iterates through the remaining elements of the array
            if sortedArray[j] < sortedArray[minIndex] { // Compares the current element to the value at the minimum index
                minIndex = j // If the current element is smaller, it becomes the new minimum index
            }
        }
        if minIndex != i { // Checks if the minimum index has changed, if it has, this means a smaller value has been found
            sortedArray.swapAt(i, minIndex) // Swaps the current element with the element at the minimum index
        }
    }
    
    return sortedArray // Returns the sorted array
}

let unsortedArray = [5, 2, 7, 1, 8, 3] // Creates an unsorted array of integers
print(unsortedArray) // Prints the unsorted array
// Output: [5, 2, 7, 1, 8, 3]

let sortedArray = selectionSort(array: unsortedArray) // Calls the 'selectionSort' function on the unsorted array and sets the returned sorted array to a new variable 'sortedArray'
print(sortedArray) // Prints the sorted array
// Output: [1, 2, 3, 5, 7, 8]
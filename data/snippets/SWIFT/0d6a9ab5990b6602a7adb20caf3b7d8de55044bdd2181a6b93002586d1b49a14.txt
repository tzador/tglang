// This code snippet generates a function that recursively calculates the sum of all even Fibonacci numbers up to the given limit.

// Define a function that takes in a limit and returns the sum of even Fibonacci numbers up to the limit
func evenFibonacciSum(limit: Int) -> Int {
    // Initialize an array to store the Fibonacci sequence
    var fibonacciSequence = [Int]()
    // Initialize variables to store the first two numbers in the sequence
    var firstNumber = 0
    var secondNumber = 1
    // Initialize a variable to keep track of the current sum
    var sum = 0
    
    // Use a for loop to generate the Fibonacci sequence up to the limit
    for _ in 0..<limit {
        // Add the first two numbers to the sequence
        fibonacciSequence.append(firstNumber)
        fibonacciSequence.append(secondNumber)
        // Calculate the next number in the sequence by adding the previous two numbers
        let nextNumber = firstNumber + secondNumber
        // Set the first number to the second number and the second number to the next number
        firstNumber = secondNumber
        secondNumber = nextNumber
    }
    
    // Use a recursive helper function to calculate the sum of even Fibonacci numbers
    func calculateSum(index: Int, currentSum: Int) -> Int {
        // Base case: when the current index meets or exceeds the limit
        if index >= fibonacciSequence.count {
            return currentSum
        }
        
        // Check if the current number is even 
        if fibonacciSequence[index] % 2 == 0 {
            // If even, add it to the current sum
            let newSum = currentSum + fibonacciSequence[index]
            // Recursively call the function with the next index and the updated sum
            return calculateSum(index: index + 1, currentSum: newSum)
        } else {
            // If not even, just return the current sum and move on to the next number
            return calculateSum(index: index + 1, currentSum: currentSum)
        }
    }
    
    // Call the recursive function with the initial index of 0 and initial sum of 0
    sum = calculateSum(index: 0, currentSum: 0)
    // Return the sum of even Fibonacci numbers up to the limit
    return sum
}

// Call the evenFibonacciSum function with a limit of 50 and print the result
let result = evenFibonacciSum(limit: 50)
print("The sum of even Fibonacci numbers up to the limit of 50 is: \(result)")
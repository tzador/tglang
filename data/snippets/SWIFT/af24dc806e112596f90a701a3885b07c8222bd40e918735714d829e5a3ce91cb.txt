// This is a function that sorts an array of integers using insertion sort

func insertionSort(array: [Int]) -> [Int] {
    var sortedArray = array                        // Creating a copy of the original array to be sorted
    for index in 1..<sortedArray.count {            // Looping through the array starting from the second element
        let currentValue = sortedArray[index]      // Storing the current element in a variable
        var compareIndex = index - 1                // Creating a compare index to compare the current element with previous elements

        while compareIndex >= 0 && sortedArray[compareIndex] > currentValue {  // Looping until all previous elements are smaller than the current element
            sortedArray[compareIndex + 1] = sortedArray[compareIndex]         // Shifting previous elements to the right to make space for current element
            compareIndex -= 1                       // Updating the compare index
        }
        sortedArray[compareIndex + 1] = currentValue    // Placing the current element in its sorted position
    }
    return sortedArray                               // Returning the sorted array
}

// Example of using the function

let unsortedArray = [5, 2, 7, 1, 8, 3]               // Creating an unsorted array
let sortedArray = insertionSort(array: unsortedArray) // Calling the function on the unsorted array
print(sortedArray)                                    // Printing the sorted array
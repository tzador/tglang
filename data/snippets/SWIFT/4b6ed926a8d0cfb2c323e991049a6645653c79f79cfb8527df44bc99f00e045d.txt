/// A class representing a person
class Person {
  /// The person's name
  var name: String
  /// The person's age
  var age: Int

  /**
  Initializes a new Person object with the given name and age.

  - Parameter name: The name of the person.
  - Parameter age: The age of the person.
  */
  init(name: String, age: Int) {
    self.name = name
    self.age = age
  }

  /**
  Prints out a greeting with the person's name and age.

  - Returns: The greeting as a string.
  */
  func introduce() -> String {
    return "Hello! My name is \(name) and I am \(age) years old."
  }
}

/// An extension of the Person class with additional properties and functions
extension Person {
  /// The person's occupation
  var occupation: String?
  /// The person's hobbies
  var hobbies: [String] = []
  /// The person's favorite color
  var favoriteColor: String?

  /**
  Adds a new hobby to the person's list of hobbies.

  - Parameter hobby: The hobby to be added.
  */
  func addHobby(hobby: String) {
    hobbies.append(hobby)
  }

  /**
  Prints out the person's hobbies in a formatted string.

  - Returns: The list of hobbies as a string.
  */
  func printHobbies() -> String {
    var hobbiesString = "My hobbies are: "
    if !hobbies.isEmpty {
      for hobby in hobbies {
        hobbiesString += "\(hobby), "
      }
    } else {
      hobbiesString += "None"
    }
    return hobbiesString
  }

  /**
  Changes the person's favorite color to the specified color.

  - Parameter color: The person's new favorite color.
  */
  func changeFavoriteColor(color: String) {
    self.favoriteColor = color
  }

  /**
  Prints out the person's favorite color.

  - Returns: The favorite color as a string.
  */
  func printFavoriteColor() -> String {
    if let color = favoriteColor {
      return "\(name)'s favorite color is \(color)."
    } else {
      return "\(name) does not have a favorite color."
    }
  }
}

/// A subclass of Person representing a student
class Student: Person {
  /// The student's university
  var university: String

  /**
  Initializes a new Student object with the given name, age, and university.

  - Parameter name: The name of the student.
  - Parameter age: The age of the student.
  - Parameter university: The university the student is attending.
  */
  init(name: String, age: Int, university: String) {
    self.university = university
    super.init(name: name, age: age)
  }

  /**
  Prints out a greeting with the student's name, age, and university.

  - Returns: The greeting as a string.
  */
  override func introduce() -> String {
    return "Hello! My name is \(name), I am \(age) years old, and I am a student at \(university)."
  }
}

/// Create a new Person object
let person = Person(name: "John", age: 25)

/// Add hobbies to the person's list
person.addHobby(hobby: "Playing guitar")
person.addHobby(hobby: "Reading")
person.addHobby(hobby: "Hiking")

/// Change the person's favorite color
person.changeFavoriteColor(color: "Blue")

/// Print out the person's introduction and hobbies
print(person.introduce())
print(person.printHobbies())

/// Create a new Student object
let student = Student(name: "Emily", age: 21, university: "University of California")

/// Add hobbies to the student's list
student.addHobby(hobby: "Dancing")
student.addHobby(hobby: "Painting")
student.addHobby(hobby: "Yoga")

/// Change the student's favorite color
student.changeFavoriteColor(color: "Purple")

/// Print out the student's introduction and favorite color
print(student.introduce())
print(student.printFavoriteColor())
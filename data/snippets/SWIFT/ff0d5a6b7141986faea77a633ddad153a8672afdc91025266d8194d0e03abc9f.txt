/// This function takes in two arrays and returns a new array that contains
/// elements from both arrays in alternating order.
///
/// - Parameter firstArray: The first array to be combined.
/// - Parameter secondArray: The second array to be combined.
/// - Returns: A new array with elements from both arrays in alternating order.
func combineArrays(firstArray: [Int], secondArray: [Int]) -> [Int] {
    var combinedArray = [Int]()
    var index1 = 0
    var index2 = 0
    
    // Loop through both arrays until one of them has reached the end
    while index1 < firstArray.count && index2 < secondArray.count {
        // Add element from first array to combined array
        combinedArray.append(firstArray[index1])
        
        // Add element from second array to combined array
        combinedArray.append(secondArray[index2])
        
        // Increment both indexes
        index1 += 1
        index2 += 1
    }
    
    // If first array still has elements remaining, add them to the end of combined array
    while index1 < firstArray.count {
        combinedArray.append(firstArray[index1])
        index1 += 1
    }
    
    // If second array still has elements remaining, add them to the end of combined array
    while index2 < secondArray.count {
        combinedArray.append(secondArray[index2])
        index2 += 1
    }
    
    // Return the combined array
    return combinedArray
}

// Example usage
let array1 = [1, 3, 5, 7, 9]
let array2 = [2, 4, 6, 8, 10]
let combinedArray = combineArrays(firstArray: array1, secondArray: array2) // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
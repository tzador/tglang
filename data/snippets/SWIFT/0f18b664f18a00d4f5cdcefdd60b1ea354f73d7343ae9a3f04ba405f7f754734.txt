/// A high-order function that takes in a closure as a parameter
func repeatTask(numberOfTimes: Int, task: () -> Void) {
    for _ in 0..<numberOfTimes {
        task()
    }
}

/// An array of numbers to be used as input for the task closure
let numbers = [1, 2, 3, 4, 5]

/// A closure that multiplies each number in the array by 2
let doubleNumbers = numbers.map { $0 * 2 }

/// A closure that prints out the number and its square root
let squareRoot = { (number: Int) in
    print("The square root of \(number) is \(sqrt(Double(number)))")
}

/// Calling the repeatTask function with 3 as the number of times parameter and the doubleNumbers closure as the task parameter
repeatTask(numberOfTimes: 3) {
    print("Current number: \($0)")
}

/// Output:
/// Current number: 2
/// Current number: 4
/// Current number: 6
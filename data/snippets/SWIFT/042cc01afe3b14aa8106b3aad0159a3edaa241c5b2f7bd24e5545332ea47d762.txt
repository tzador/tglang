//MARK: - Networking Setup
import Foundation
import Alamofire

//MARK: - API Router
enum APIRouter: URLRequestConvertible {
    
    case getUsers
    case getUserDetails(id: Int)
    
    //MARK: - HTTP Method
    private var method: HTTPMethod {
        switch self {
        case .getUsers, .getUserDetails:
            return .get
        }
    }
    
    //MARK: - Path
    private var path: String {
        switch self {
        case .getUsers:
            return "/users"
        case .getUserDetails(let id):
            return "/users/\(id)"
        }
    }
    
    //MARK: - Parameters
    private var parameters: Parameters? {
        switch self {
        case .getUsers, .getUserDetails:
            return nil
        }
    }
    
    //MARK: - URLRequest
    func asURLRequest() throws -> URLRequest {
        let url = try K.API.baseURL.asURL().appendingPathComponent(path)
        
        var request = URLRequest(url: url)
        request.method = method
        request.headers = try APIRouter.headers().headers
        
        request = try URLEncoding.default.encode(request, with: parameters)
        return request
    }
    
    //MARK: - Headers
    static func headers() throws -> HTTPHeaders {
        var headers: HTTPHeaders = ["Content-Type": "application/json"]
        if let token = UserDefaults.standard.string(forKey: "token") {
            headers["token"] = token
        }
        return headers
    }
}
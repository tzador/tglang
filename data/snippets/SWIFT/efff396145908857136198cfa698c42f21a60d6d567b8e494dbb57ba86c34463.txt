/// A custom protocol for a class that can calculate mathematical operations
protocol Calculator {
    
    /// A boolean flag to indicate if the calculator has been turned on or off
    var isOn: Bool { get set }
    
    /// A function that adds two numbers and returns the result
    ///
    /// - Parameters:
    ///   - num1: The first number to be added
    ///   - num2: The second number to be added
    /// - Returns: The sum of the two numbers
    func add(_ num1: Int, _ num2: Int) -> Int
    
    /// A function that multiplies two numbers and returns the result
    ///
    /// - Parameters:
    ///   - num1: The first number to be multiplied
    ///   - num2: The second number to be multiplied
    /// - Returns: The product of the two numbers
    func multiply(_ num1: Int, _ num2: Int) -> Int
    
    /// A function that calculates the average of an array of numbers and returns the result
    ///
    /// - Parameter numbers: An array of numbers to be averaged
    /// - Returns: The average of the numbers in the given array
    func average(_ numbers: [Int]) -> Double
    
    /// A function that calculates the factorial of a number and returns the result
    ///
    /// - Parameter num: The number to calculate the factorial for
    /// - Returns: The factorial of the given number
    func factorial(_ num: Int) -> Int
    
    /// A function that calculates the square root of a number and returns the result
    ///
    /// - Parameter num: The number to calculate the square root for
    /// - Returns: The square root of the given number
    /// - Throws: Error if the given number is negative
    func squareRoot(_ num: Double) throws -> Double
}

/// A class that implements the Calculator protocol
class BasicCalculator: Calculator {
    
    /// A boolean flag to indicate if the calculator has been turned on or off
    var isOn: Bool = false
    
    /// A function that adds two numbers and returns the result
    func add(_ num1: Int, _ num2: Int) -> Int {
        return num1 + num2
    }
    
    /// A function that multiplies two numbers and returns the result
    func multiply(_ num1: Int, _ num2: Int) -> Int {
        return num1 * num2
    }
    
    /// A function that calculates the average of an array of numbers and returns the result
    func average(_ numbers: [Int]) -> Double {
        let sum = numbers.reduce(0, +)
        return Double(sum) / Double(numbers.count)
    }
    
    /// A function that calculates the factorial of a number and returns the result
    func factorial(_ num: Int) -> Int {
        if num == 0 {
            return 1
        } else {
            return num * factorial(num - 1)
        }
    }
    
    /// A function that calculates the square root of a number and returns the result
    func squareRoot(_ num: Double) throws -> Double {
        guard num >= 0 else {
            throw CalculatorError.negativeNumber
        }
        
        return sqrt(num)
    }
    
    /// An enum that defines possible errors that can occur in the Calculator class
    enum CalculatorError: Error {
        case negativeNumber
    }
}

// Creating an instance of the BasicCalculator class
let calculator = BasicCalculator()

// Turning on the calculator
calculator.isOn = true

// Adding two numbers and printing the result
let sum = calculator.add(5, 7)
print(sum)

// Multiplying two numbers and printing the result
let product = calculator.multiply(3, 9)
print(product)

// Calculating the average of an array of numbers and printing the result
let average = calculator.average([4, 6, 12, 1, 16])
print(average)

// Calculating the factorial of a number and printing the result
let factorial = calculator.factorial(5)
print(factorial)

// Calculating the square root of a number and handling any potential errors
do {
    let squareRoot = try calculator.squareRoot(-25)
    print(squareRoot)
} catch {
    print(error)
}
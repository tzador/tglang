import Foundation

// Define a custom error enum
enum CalculatorError: Error {
    case divisionByZero
    case invalidOperator(String)
}

// Define a generic calculator struct
struct Calculator<T: Numeric> {
    // Properties
    var currentResult: T = 0
    
    // Methods
    // Function to perform calculations
    func performCalculation(operation: String, operand: T) throws {
        switch operation {
        case "+":
            currentResult += operand
        case "-":
            currentResult -= operand
        case "*":
            currentResult *= operand
        case "/":
            // Check for division by zero
            guard operand != 0 else {
                throw CalculatorError.divisionByZero
            }
            currentResult /= operand
        default:
            throw CalculatorError.invalidOperator(operation)
        }
    }
}
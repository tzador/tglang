//This is a program that sorts an array of numbers using the bubble sort algorithm
//Define a function that takes in an array of numbers and returns the sorted array
func bubbleSort(arr: [Int]) -> [Int] {
    //Initialize a variable to keep track of the number of passes needed to fully sort the array
    var numPasses = 0
    //Loop through the array until no swaps are made during a pass, indicating that the array is sorted
    while true {
        //Initialize a boolean variable to keep track of whether a swap has been made in the current pass
        var swapped = false
        
        //Loop through the array, comparing each element to the one following it and swapping if necessary
        for i in 0 ..< arr.count - 1 {
            //Compare the current element to the one following it
            if arr[i] > arr[i+1] {
                //If the current element is larger, swap them and set swapped to true
                let temp = arr[i]
                arr[i] = arr[i+1]
                arr[i+1] = temp
                swapped = true
            }
        }
        
        //If no swaps were made in the current pass, break out of the while loop
        if !swapped {
            break
        }
        
        //Increment the number of passes
        numPasses += 1
    }
    
    //Print out the number of passes needed to sort the array
    print("Number of passes: \(numPasses)")
    
    //Return the sorted array
    return arr
}

//Initialize an array of unsorted numbers
let unsortedArr = [5, 12, 7, 2, 9, 10, 1]

//Call the bubbleSort function and pass in the unsorted array
let sortedArr = bubbleSort(arr: unsortedArr)

//Print the sorted array
print(sortedArr)

//Output: 
//[1, 2, 5, 7, 9, 10, 12] 
//Number of passes: 4
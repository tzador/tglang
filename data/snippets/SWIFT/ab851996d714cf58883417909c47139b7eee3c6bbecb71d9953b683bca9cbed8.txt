// This code snippet generates a random array of integers and sorts it using merge sort algorithm.

// Declare a function to generate a random array of integers
func generateRandomArray(size: Int) -> [Int] {
    var randomArray = [Int]()
    
    // Generate random integers and append them to the array
    for _ in 1...size {
        randomArray.append(Int.random(in: 1...100))
    }
    
    return randomArray
}

// Declare a function to merge two sorted arrays
func merge(leftArray: [Int], rightArray: [Int]) -> [Int] {
    // Initialize empty array to store the merged array
    var mergedArray = [Int]()
    
    // Initialize variables for indexing
    var leftIndex = 0, rightIndex = 0
    
    // Loop until all elements in either left or right array have been added to merged array
    while leftIndex < leftArray.count && rightIndex < rightArray.count {
        if leftArray[leftIndex] < rightArray[rightIndex] {
            // If value in left array is smaller, add it to merged array and increase left index
            mergedArray.append(leftArray[leftIndex])
            leftIndex += 1
        } else {
            // If value in right array is smaller, add it to merged array and increase right index
            mergedArray.append(rightArray[rightIndex])
            rightIndex += 1
        }
    }
    
    // Add remaining elements from left array, if any
    while leftIndex < leftArray.count {
        mergedArray.append(leftArray[leftIndex])
        leftIndex += 1
    }
    
    // Add remaining elements from right array, if any
    while rightIndex < rightArray.count {
        mergedArray.append(rightArray[rightIndex])
        rightIndex += 1
    }
    
    // Return the merged array
    return mergedArray
}

// Declare a function for merge sort algorithm
func mergeSort(array: [Int]) -> [Int] {
    // Base case: if array contains only one element, return it
    if array.count == 1 {
        return array
    }
    
    // Otherwise, split the array into two halves
    let middleIndex = array.count / 2
    let leftArray = Array(array[0..<middleIndex])
    let rightArray = Array(array[middleIndex..<array.count])
    
    // Recursively call merge sort on left and right halves
    let sortedLeftArray = mergeSort(array: leftArray)
    let sortedRightArray = mergeSort(array: rightArray)
    
    // Merge the two sorted arrays
    return merge(leftArray: sortedLeftArray, rightArray: sortedRightArray)
}

// Generate a random array of 20 elements
let myArray = generateRandomArray(size: 20)

// Print the unsorted array
print("Unsorted array: \(myArray)")

// Sort the array using merge sort
let sortedArray = mergeSort(array: myArray)

// Print the sorted array
print("Sorted array: \(sortedArray)")
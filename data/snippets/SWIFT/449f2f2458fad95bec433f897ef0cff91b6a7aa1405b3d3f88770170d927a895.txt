// This is a function to calculate the fibonacci sequence up to a given number.
// It takes in an integer parameter and returns an array of fibonacci numbers.

func fibonacciSequence(upTo n: Int) -> [Int] {
    var sequence = [0, 1] // initialize the array with the first two numbers
    guard n > 1 else { return sequence } // handle edge case where n is less than 2
    
    for i in 2...n { // loop through the remaining numbers
        let nextNumber = sequence[i-1] + sequence[i-2] // calculate next fibonacci number
        sequence.append(nextNumber) // add it to the sequence array
    }
    
    return sequence
}

// Example usage:

let limit = 10 // set the limit for the fibonacci sequence
let sequence = fibonacciSequence(upTo: limit) // call the function to get sequence up to limit
print(sequence) // [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] (output)
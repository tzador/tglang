var numbers = [5, 2, 7, 8, 1, 9, 4, 6, 3]

func mergeSort(_ arr: inout [Int], low: Int, high: Int) {
    if low < high {
        let middle = low + (high - low) / 2
        mergeSort(&arr, low: low, high: middle)
        mergeSort(&arr, low: middle + 1, high: high)
        
        // Merge the split arrays
        var mergedArr = [Int]()
        var i = low
        var j = middle + 1
        while i <= middle && j <= high {
            if arr[i] < arr[j] {
                mergedArr.append(arr[i])
                i += 1
            } else {
                mergedArr.append(arr[j])
                j += 1
            }
        }
        while i <= middle {
            mergedArr.append(arr[i])
            i += 1
        }
        while j <= high {
            mergedArr.append(arr[j])
            j += 1
        }
        
        // Replace the original array with the sorted merged array
        var k = 0
        for index in low...high {
            arr[index] = mergedArr[k]
            k += 1
        }
    }
}

print("Unsorted array: \(numbers)")
mergeSort(&numbers, low: 0, high: numbers.count - 1)
print("Sorted array: \(numbers)")
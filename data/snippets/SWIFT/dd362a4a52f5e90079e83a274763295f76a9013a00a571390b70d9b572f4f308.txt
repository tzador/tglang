// This is a complex code snippet written in SWIFT programming language
/* 
    The code snippet performs a quick sort algorithm on an array of integers
    in descending order
*/

// Function to partition the array and return the index of the pivot
func partition(_ arr: [Int], begin: Int, end: Int) -> Int {
    let pivot = arr[end]                  // Set the pivot as the last element in the array
    var index = begin - 1                 // Initialize the index of the smaller element
    for i in begin...end-1 {
        if arr[i] > pivot {              // If the current element is larger than the pivot
            index += 1                   // Move the index to the next element
            arr.swapAt(index, i)         // Swap the smaller element with the current element
        }
    }
    arr.swapAt(index + 1, end)           // Swap the pivot with the element at the index + 1
    return index + 1                    // Return the index of the pivot
}

// Function to perform quick sort algorithm recursively
func quickSort(_ arr: [Int], begin: Int, end: Int) -> [Int] {
    if begin < end {
        let partitionIndex = partition(arr, begin: begin, end: end)        // Get the index of the pivot
        arr = quickSort(arr, begin: begin, end: partitionIndex - 1)       // Recursively sort the elements before the pivot
        arr = quickSort(arr, begin: partitionIndex + 1, end: end)         // Recursively sort the elements after the pivot
    }
    return arr       // Return the sorted array
}

// Example usage:
let unsortedArray = [5, 2, 6, 3, 9, 1]
let sortedArray = quickSort(unsortedArray, begin: 0, end: unsortedArray.count - 1)
print(sortedArray)         // Output: [9, 6, 5, 3, 2, 1]
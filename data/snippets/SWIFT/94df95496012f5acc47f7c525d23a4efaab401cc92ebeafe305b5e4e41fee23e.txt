// Array of numbers to be sorted
let numbers = [56, 14, 89, 3, 27, 46, 72]

// Function to recursively sort the array using QuickSort algorithm
func quickSort<T: Comparable>(_ array: [T]) -> [T] {
    // Base case - check if array is empty or only contains one element
    guard array.count > 1 else {
        return array
    }
    // Choose a random pivot element
    let pivot = array[array.count / 2]
    // Create subarrays for elements greater than and less than pivot
    let less = array.filter { $0 < pivot }
    let greater = array.filter { $0 > pivot }
    // Recursively apply QuickSort to subarrays and combine results
    return quickSort(less) + [pivot] + quickSort(greater)
}

// Call the function on our array and store the sorted result
let sortedNumbers = quickSort(numbers)

// Print the sorted array
print(sortedNumbers)
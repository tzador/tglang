// Declaring a generic class with a type constraint
class SomeClass<T: Equatable> {
    var value: T
    
    init(value: T) {
        self.value = value
    }
    
    // Implementing a method that takes in a generic argument with a where clause
    func findIndex<U>(of valueToFind: U) -> Int? where U: Equatable {
        for (index, item) in someArray.enumerated() {
            if item == valueToFind {
                return index
            }
        }
        return nil
    }
}
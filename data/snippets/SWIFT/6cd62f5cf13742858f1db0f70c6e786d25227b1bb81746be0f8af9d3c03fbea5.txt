//This code snippet creates a function named mergeSort that takes in an array of integers and returns the sorted array using the merge sort algorithm.
//Time Complexity: O(nlogn)
//Space Complexity: O(n)
func mergeSort(_ array: [Int]) -> [Int] {
    //Base case: If array has one or no elements, return the array
    guard array.count > 1 else { return array }
    
    //Find the middle index of the array
    let middle = array.count / 2
    //Split the array into two subarrays
    let leftArray = Array(array[0..<middle])
    let rightArray = Array(array[middle..<array.count])
    
    //Recursive call to mergeSort function for left and right subarrays
    let sortedLeft = mergeSort(leftArray)
    let sortedRight = mergeSort(rightArray)
    
    //Merge the sorted subarrays
    return merge(sortedLeft, sortedRight)
}

//Function for merging two sorted arrays
func merge(_ left: [Int], _ right: [Int]) -> [Int] {
    //Create an empty array to store the sorted elements
    var result = [Int]()
    //Initialize starting indices for left and right arrays
    var leftIndex = 0, rightIndex = 0
    
    //Loop until all elements in either left or right array have been added to result
    while leftIndex < left.count && rightIndex < right.count {
        //Compare the elements at current indices of left and right arrays
        if left[leftIndex] < right[rightIndex] {
            //Append the smaller element to the result and increment the index
            result.append(left[leftIndex])
            leftIndex += 1
        } else {
            //Append the smaller element to the result and increment the index
            result.append(right[rightIndex])
            rightIndex += 1
        }
    }
    
    //Append the remaining elements from either left or right array to the result
    if leftIndex < left.count {
        result.append(contentsOf: left[leftIndex..<left.count])
    }
    if rightIndex < right.count {
        result.append(contentsOf: right[rightIndex..<right.count])
    }
    
    return result
}

//Example usage
let unsortedArray = [5, 3, 7, 2, 8, 6, 9, 1, 4]
let sortedArray = mergeSort(unsortedArray)
print(sortedArray)
//Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]
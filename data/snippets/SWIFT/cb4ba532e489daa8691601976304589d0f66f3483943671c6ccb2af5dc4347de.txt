/*** This is a complex code snippet in SWIFT ***/
/*** It demonstrates the use of various data types and control structures ***/

// Declaring a constant of type String
let language = "SWIFT"

// Declaring a variable of type Int
var num = 10

// Creating an optional variable of type Double
var decimalNum: Double?

// Conditional statement using the optional variable 
if decimalNum == nil{
  print("decimalNum is not initialized yet")
}

decimalNum = 3.14 // Initializing the optional variable 

// Declaring a function that takes in 2 parameters 
// and returns the sum as an optional Int 
func calculateSum(num1: Int, num2: Int) -> Int? {
  return num1 + num2
}

// Calling the function with the declared variables 
if let sum = calculateSum(num1: num, num2: Int(decimalNum!)){
  print("The sum of \(num) and \(Int(decimalNum!)) is \(sum)")
} else{
  print("Invalid input for calculation")
}

// Creating a while loop to print numbers in a range 
var counter = 0

while counter < 5 {
  print("Counter is currently at \(counter)")
  counter += 1
}

// Declaring an array of Strings 
let fruits = ["apple", "banana", "orange"]

// Using a for-in loop to iterate through the array 
for fruit in fruits {
  print("I love \(fruit)s")
}

// Declaring a dictionary with String keys and Int values 
var phoneNumbers = [
  "John": 1234567890,
  "Jane": 0987654321,
  "Alex": 1357924680
]

// Using a for loop to print out all key-value pairs 
for (name, number) in phoneNumbers {
  print("\(name)'s phone number is \(number)")
}

// Creating a switch statement based on the value of the constant 
switch(language) {
case "SWIFT":
  print("I am fluent in SWIFT")
default:
  print("I am still learning \(language)")
}

// Declaring a class with a constructor and a method 
class Person {
  var name: String
  var age: Int
  init(name: String, age: Int){
    self.name = name
    self.age = age
  }
  func introduce(){
    print("Hi, my name is \(self.name) and I am \(self.age) years old.")
  }
}

// Creating an instance of the class and calling the method 
let person = Person(name: "John", age: 25)
person.introduce()
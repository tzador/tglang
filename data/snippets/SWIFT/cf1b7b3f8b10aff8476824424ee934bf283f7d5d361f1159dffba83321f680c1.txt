// Declaring an optional string variable
var message: String?

// Initializing a dictionary
var phoneBook = [Int: String]()

// Adding values to the dictionary
phoneBook[000-000-0000] = "John Smith"
phoneBook[111-111-1111] = "Jane Doe"
phoneBook[222-222-2222] = "Bob Johnson"
 
// Looping through the dictionary to print out key-value pairs
for (phoneNumber, name) in phoneBook {
    print("\(name)'s phone number is \(phoneNumber)")
}

// Defining a custom Error type
enum CustomError: Error {
    case invalidInput(message: String)
    case networkError
    case unknownError
}

// Implementing a do-catch block for error handling
do {
    let userInput: String? = "Hello"
    
    // Checking if userInput is nil
    guard let input = userInput else {
        throw CustomError.invalidInput(message: "Input cannot be nil.")
    }
    
    // Printing out the input
    print(input)
} catch CustomError.invalidInput(let message) {
    print(message)
} catch {
    print("An unknown error occurred.")
}
///Parent class for all vehicles
class Vehicle {

var brand: String
var model: String
var year: Int
var color: String

init(brand: String, model: String, year: Int, color: String) {
	self.brand = brand
	self.model = model
	self.year = year
	self.color = color
}

///Function to start the vehicle
func start() {
  print("Starting \(brand) \(model)...")
}

///Function to stop the vehicle
func stop() {
  print("Stopping \(brand) \(model)...")
}

///Function to accelerate the vehicle
func accelerate(speed: Int) {
  print("\(brand) \(model) is accelerating to \(speed) km/h...")
}

///Function to brake the vehicle
func brake() {
  print("\(brand) \(model) is braking...")
}

}

///Child class for cars with additional properties and functions
class Car: Vehicle {

var numWheels: Int
var numDoors: Int
var isConvertible: Bool

init(brand: String, model: String, year: Int, color: String, numWheels: Int, numDoors: Int, isConvertible: Bool) {
	self.numWheels = numWheels
	self.numDoors = numDoors
	self.isConvertible = isConvertible
	super.init(brand: brand, model: model, year: year, color: color)
}

///Function to open the convertible top
func openTop() {
  if isConvertible {
    print("Opening the convertible top on \(brand) \(model)...")
  } else {
    print("Oops, \(brand) \(model) is not a convertible!")
  }
}

///Function to display car information
func displayInfo() {
	print("Brand: \(brand)")
	print("Model: \(model)")
	print("Year: \(year)")
	print("Color: \(color)")
	print("Number of wheels: \(numWheels)")
	print("Number of doors: \(numDoors)")
	print("Convertible: \(isConvertible)")
}

///Creating an instance of Car and calling functions
let myCar = Car(brand: "Tesla", model: "Model S", year: 2020, color: "Black", numWheels: 4, numDoors: 4, isConvertible: false)
myCar.displayInfo()
myCar.start()
myCar.accelerate(speed: 100)
myCar.brake()
myCar.stop()

///Child class for bikes with additional properties and functions
class Bike: Vehicle {

var numGears: Int
var hasBasket: Bool
var bikeType: String

init(brand: String, model: String, year: Int, color: String, numGears: Int, hasBasket: Bool, bikeType: String) {
	self.numGears = numGears
	self.hasBasket = hasBasket
	self.bikeType = bikeType
	super.init(brand: brand, model: model, year: year, color: color)
}

///Function to add a basket to the bike
func addBasket() {
  if !hasBasket {
    hasBasket = true
    print("Added a basket to \(brand) \(model)!")
  } else {
    print("\(brand) \(model) already has a basket.")
  }
}

///Function to display information about the bike
func displayInfo() {
	print("Brand: \(brand)")
	print("Model: \(model)")
	print("Year: \(year)")
	print("Color: \(color)")
	print("Number of gears: \(numGears)")
	print("Has basket: \(hasBasket)")
	print("Bike type: \(bikeType)")
}

///Creating an instance of Bike and calling functions
let myBike = Bike(brand: "Schwinn", model: "Cruiser", year: 2018, color: "Red", numGears: 7, hasBasket: false, bikeType: "Cruiser")
myBike.displayInfo()
myBike.start()
myBike.accelerate(speed: 20)
myBike.brake()
myBike.addBasket()
myBike.stop()
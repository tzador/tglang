func insertionSort<T>(_ array: inout [T], by areInIncreasingOrder: (T, T) -> Bool) {
    guard array.count > 1 else { return }
    for currentIndex in 1..<array.count {
        var indexToInsert = currentIndex
        let currentElement = array[indexToInsert]
        
        while indexToInsert > 0 && areInIncreasingOrder(currentElement, array[indexToInsert - 1]) {
            array[indexToInsert] = array[indexToInsert - 1]
            indexToInsert -= 1
        }
        
        array[indexToInsert] = currentElement
    }
}
import UIKit

// Creating a custom UIView class
class CustomView: UIView {

    // Properties
    var label: UILabel? // Optional label
    var button: UIButton! // Implicitly unwrapped optional button

    // Initializer
    init(frame: CGRect, labelText: String, buttonTitle: String) {
        // Call superclass initializer
        super.init(frame: frame)

        // Creating and adding label to view
        label = UILabel(frame: CGRect(x: 0, y: 0, width: 100, height: 20))
        label?.text = labelText
        addSubview(label!)

        // Creating and adding button to view
        button = UIButton(frame: CGRect(x: 0, y: 30, width: 100, height: 30))
        button.setTitle(buttonTitle, for: .normal)
        addSubview(button)
    }

    // Required initializer when subclassing UIView
    required init?(coder aDecoder: NSCoder) {
        // Call superclass initializer
        super.init(coder: aDecoder)

        // Handling error if view is initialized from storyboard or nib
        fatalError("init(coder:) has not been implemented")
    }

    // Convenience initializer with default values for label and button
    convenience init(frame: CGRect) {
        // Calling designated initializer with default values
        self.init(frame: frame, labelText: "Default Label", buttonTitle: "Default Button")
    }

    // Layout subviews
    override func layoutSubviews() {
        // Call superclass implementation
        super.layoutSubviews()

        // Updating label and button frames
        label?.frame = CGRect(x: 0, y: bounds.height / 2 - 10, width: bounds.width, height: 20)
        button.frame = CGRect(x: 0, y: bounds.height / 2 + 10, width: bounds.width, height: 30)
    }
}

// Creating an instance of CustomView with frame and custom text
let customView = CustomView(frame: CGRect(x: 0, y: 0, width: 200, height: 100), labelText: "Custom View", buttonTitle: "Custom Button")

// Adding CustomView instance to view hierarchy
view.addSubview(customView)
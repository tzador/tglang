/// This function takes in a string and uses binary search to find the target character in the string.
/// - Parameters:
///   - string: The string to be searched.
///   - targetChar: The character to be found in the string.
///   - startIndex: The starting index for the search.
///   - endIndex: The ending index for the search.
/// - Returns: The index of the target character in the string, returns nil if character is not found.
func binarySearch(string: String, targetChar: Character, startIndex: Int, endIndex: Int) -> Int? {
    // Check if the indices are valid
    guard startIndex <= endIndex && startIndex >= 0 && endIndex < string.count else {
        return nil
    }
    
    // Calculate the middle index
    let middleIndex = (startIndex + endIndex) / 2
    
    // Get the character at the middle index
    let middleChar = string[string.index(string.startIndex, offsetBy: middleIndex)]
    
    // Check if the middle character is the target character
    if middleChar == targetChar {
        return middleIndex
    } else if targetChar < middleChar {
        // If target character is less than middle character, perform binary search on the left half of the string
        return binarySearch(string: string, targetChar: targetChar, startIndex: startIndex, endIndex: middleIndex - 1)
    } else {
        // If target character is greater than middle character, perform binary search on the right half of the string
        return binarySearch(string: string, targetChar: targetChar, startIndex: middleIndex + 1, endIndex: endIndex)
    }
}
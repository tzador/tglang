/// An enum to represent different types of fruits
enum Fruit {
    case apple       // case for apple fruit
    case orange      // case for orange fruit
    case banana      // case for banana fruit
}

/// A protocol to define functionality for a food item
protocol Food {
    var name: String { get }             // name of the food
    var category: String { get }         // category of the food
    func getNutritionalValue() -> String // function to get nutritional value
    mutating func eat()                  // mutating function to eat the food
}

/// A struct representing a specific food item, a fruit
struct FruitFood: Food {
    var name: String                                                    // name of the fruit
    var category: String = "fruit"                                      // category of the fruit
    var nutritionalValue: String {                                      // computed property for nutritional value
        switch self.name {
        case Fruit.apple:
            return "Apples are a great source of fiber and vitamin C."
        case Fruit.orange:
            return "Oranges are a good source of vitamin C and folate."
        case Fruit.banana:
            return "Bananas are a rich source of potassium and vitamin B6."
        }
    }

    init(name: String) {
        self.name = name
    }

    func getNutritionalValue() -> String {
        return self.nutritionalValue
    }

    mutating func eat() {
        print("You just ate a \(self.name)!")
    }
}

let apple = FruitFood(name: "apple")     // creating an instance of FruitFood
apple.eat()                              // output: "You just ate an apple!"
print(apple.getNutritionalValue())       // output: "Apples are a great source of fiber and vitamin C."
// This is a complex code snippet in SWIFT showcasing object-oriented programming

// Parent class declaring properties and methods
class Animal {
    var species: String
    var numberOfLegs: Int
    
    init(species: String, numberOfLegs: Int) {
        self.species = species
        self.numberOfLegs = numberOfLegs
    }
    
    func makeSound() {
        print("This \(species) makes a sound.")
    }
    
    func move(distance: Int) {
        print("This \(species) has moved \(distance) meters.")
    }
}

// Subclass inheriting from parent class
class Cat: Animal {
    var name: String
    
    init(name: String, numberOfLegs: Int) {
        self.name = name
        super.init(species: "cat", numberOfLegs: numberOfLegs)
    }
    
    // Overriding parent class method
    override func makeSound() {
        print("Meow!")
    }
    
    // Adding additional method specific to Cat class
    func eat(food: String) {
        print("\(name) is eating \(food).")
    }
}

// Creating an instance of the Cat class
let cat = Cat(name: "Fluffy", numberOfLegs: 4)

// Calling methods from parent and subclass
cat.move(distance: 5)
cat.makeSound()
cat.eat(food: "fish")

/* Output:
This cat has moved 5 meters.
Meow!
Fluffy is eating fish.
*/
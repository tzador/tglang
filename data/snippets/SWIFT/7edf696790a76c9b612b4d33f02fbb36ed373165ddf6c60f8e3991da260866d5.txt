// Swift code snippet for creating a custom UIView subclass
// with a gradient background and a shadow

import UIKit

class CustomView: UIView {
    
    // The gradient layer for the view's background
    private var gradientLayer: CAGradientLayer!
    
    // The shadow layer for the view's shadow effect
    private var shadowLayer: CALayer!
    
    // The start color for the gradient
    var startColor: UIColor = .red {
        didSet {
            updateGradient()
        }
    }
    
    // The end color for the gradient
    var endColor: UIColor = .yellow{
        didSet {
            updateGradient()
        }
    }
    
    // The shadow color
    var shadowColor: UIColor = .gray {
        didSet {
            updateShadow()
        }
    }
    
    // The corner radius for the view
    var cornerRadius: CGFloat = 10.0 {
        didSet {
            self.layer.cornerRadius = cornerRadius
        }
    }
    
    // The shadow opacity
    var shadowOpacity: Float = 0.5 {
        didSet {
            updateShadow()
        }
    }
    
    // The shadow offset
    var shadowOffset: CGSize = CGSize(width: 0, height: 3) {
        didSet {
            updateShadow()
        }
    }
    
    // The border width
    var borderWidth: CGFloat = 2.0 {
        didSet {
            self.layer.borderWidth = borderWidth
        }
    }
    
    // The border color
    var borderColor: UIColor = .black {
        didSet {
            self.layer.borderColor = borderColor.cgColor
        }
    }
    
    // MARK: - Initialization
    
    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupView()
    }
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        setupView()
    }
    
    // MARK: - Setup Methods
    
    /// Sets up the view with the gradient background and shadow effect
    private func setupView() {
        updateGradient()
        updateShadow()
    }
    
    /// Configures the gradient layer with the specified start and end colors
    private func updateGradient() {
        // Remove existing gradient layer
        if gradientLayer != nil {
            gradientLayer.removeFromSuperlayer()
        }
        
        // Create new gradient layer with frame equal to view's bounds
        gradientLayer = CAGradientLayer()
        gradientLayer.frame = self.bounds
        
        // Set the colors for the gradient layer
        gradientLayer.colors = [startColor.cgColor, endColor.cgColor]
        
        // Add the gradient layer to the view's layer
        self.layer.insertSublayer(gradientLayer, at: 0)
    }
    
    /// Configures the shadow layer with the specified color, opacity, offset, and corner radius
    private func updateShadow() {
        // Remove existing shadow layer
        if shadowLayer != nil {
            shadowLayer.removeFromSuperlayer()
        }
        
        // Create new shadow layer with frame equal to view's bounds
        shadowLayer = CALayer()
        shadowLayer.frame = self.bounds
        
        // Set the shadow properties
        shadowLayer.shadowColor = shadowColor.cgColor
        shadowLayer.shadowOpacity = shadowOpacity
        shadowLayer.shadowOffset = shadowOffset
        shadowLayer.shadowRadius = cornerRadius
        
        // Add the shadow layer to the view's layer
        self.layer.addSublayer(shadowLayer)
    }
}
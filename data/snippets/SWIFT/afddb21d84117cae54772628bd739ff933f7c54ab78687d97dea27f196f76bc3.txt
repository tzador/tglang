/// This function recursively merges two sorted arrays  and returns a single sorted array
/// - Parameters:
///   - array1: First sorted array
///   - array2: Second sorted array
/// - Returns: A single sorted array
func mergeArrays(array1: [Int], array2: [Int]) -> [Int] {
    
    // Check if any of the arrays are empty
    guard !array1.isEmpty, !array2.isEmpty else {
        // If one of the arrays is empty, return the other
        return array1.isEmpty ? array2 : array1
    }
    
    // Initialize variables for indices and the result array
    var i = 0
    var j = 0
    var result = [Int]()
    
    // Loop through both arrays until one reaches its end
    while i < array1.count && j < array2.count {
        
        // Compare the current elements in both arrays
        if array1[i] < array2[j] {
            // Add the smaller element to the result array
            result.append(array1[i])
            // Increment the index of the first array
            i += 1
        } else {
            // Add the smaller element to the result array
            result.append(array2[j])
            // Increment the index of the second array
            j += 1
        }
    }
    
    // Check if any remaining elements in the first array
    if i < array1.count {
        // Add the remaining elements to the result array
        result.append(contentsOf: array1[i...])
    }
    
    // Check if any remaining elements in the second array
    if j < array2.count {
        // Add the remaining elements to the result array
        result.append(contentsOf: array2[j...])
    }
    
    // Return the result array
    return result
}

// Example usage of the function
let array1 = [1, 3, 5, 7, 9]
let array2 = [2, 4, 6, 8, 10]
let mergedArray = mergeArrays(array1: array1, array2: array2)
print(mergedArray) // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
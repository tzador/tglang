import UIKit

// Define a custom Error type
enum CustomError: Error {
    case invalidInput
    case serverUnavailable
}

// Define a function that throws an error and catches it
func processInput(input: String) throws -> String {
    guard let integerInput = Int(input) else {
        throw CustomError.invalidInput
    }
    guard integerInput < 10 else {
        throw CustomError.serverUnavailable
    }
    return "Success!"
}

// Call the function and handle the possible errors
do {
    let output = try processInput(input: "5")
    print(output) // Output: "Success!"
} catch CustomError.invalidInput {
    print("Invalid input!")
} catch CustomError.serverUnavailable {
    print("Server is not available!")
} catch {
    print("Unknown error occurred!")
}
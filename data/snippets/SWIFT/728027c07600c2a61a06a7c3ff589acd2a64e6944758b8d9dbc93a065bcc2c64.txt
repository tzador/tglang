// Define a struct named Person with properties for name, age, and address
struct Person {
    var name: String
    var age: Int
    var address: String
    // Define a function to return the person's name and age
    func getNameAndAge() -> String {
        return "\(name) is \(age) years old."
    }
    // Nested enum type for different hair colors
    enum HairColor {
        case blonde, brown, black, red
    }
    // Method to check if person's hair color matches the hair color passed in
    func checkHairColor(color: HairColor) -> Bool {
        if let hairColor = color as? HairColor {
            switch hairColor {
            case .blonde:
                return true
            case .brown:
                return true
            case .black:
                return true
            case .red:
                return true
            }
        }
        return false
    }
    // Inheritance in Swift using the 'super' keyword
    class Employee: Person {
        var employeeID: Int
        // Initializer method for Employee class which calls the parent class's initializer
        init(name: String, age: Int, address: String, employeeID: Int) {
            self.employeeID = employeeID
            super.init(name: name, age: age, address: address)
        }
    }
}
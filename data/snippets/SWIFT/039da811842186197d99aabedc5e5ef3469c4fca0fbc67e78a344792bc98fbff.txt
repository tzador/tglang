/// This function calculates the nth number in the Fibonacci sequence
/// using dynamic programming for improved computational efficiency.
/// - Parameter n: The desired index in the Fibonacci sequence
/// - Returns: The value of the nth number in the Fibonacci sequence
func fibonacci(n: Int) -> Int {
    // Create a dictionary to store previously calculated values
    var memo: [Int: Int] = [:]
    
    // Base case for 0 and 1 in the Fibonacci sequence
    memo[0] = 0
    memo[1] = 1
    
    // Recursive helper function to calculate Fibonacci numbers
    func fib(_ n: Int) -> Int {
        // Check if the value has already been calculated and return it
        if let value = memo[n] {
            return value
        }
        
        // Calculate the value using the formula f(n) = f(n-1) + f(n-2)
        let value = fib(n-1) + fib(n-2)
        
        // Store the value in the memo dictionary for future use
        memo[n] = value
        
        return value
    }
    
    return fib(n)
}

// Example usage
let num = 10
let result = fibonacci(n: num)
print("The \(num)th number in the Fibonacci sequence is \(result).")
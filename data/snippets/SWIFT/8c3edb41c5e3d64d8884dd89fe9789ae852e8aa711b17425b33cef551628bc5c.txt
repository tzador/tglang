// This code snippet is a simple implementation of a binary search algorithm in Swift

// Creating a function for binary search that returns a boolean value
func binarySearch(array: [Int], target: Int) -> Bool {
    // Setting the low index and high index of the array
    var low = 0
    var high = array.count - 1
    
    // Looping until low index is less than or equal to high index
    while low <= high {
        // Finding the mid point of the array
        let mid = (low + high)/2
        
        // Checking if the target element is equal to the mid point element
        if target == array[mid] {
            // If so, return true
            return true
        } else if target < array[mid] {
            // If target element is less than the mid point element, set high index to mid - 1
            high = mid - 1
        } else {
            // If target element is greater than the mid point element, set low index to mid + 1
            low = mid + 1
        }
    }
    
    // If target element is not found in the array, return false
    return false
}

// Testing the binarySearch function with a sorted array and a target element
let array = [1, 3, 5, 7, 9, 12, 15]
let target = 7

print("Is \(target) found in the array? \(binarySearch(array: array, target: target))")

// Output: Is 7 found in the array? true
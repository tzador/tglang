// This is a complex function that takes in two arrays of integers and returns a sorted array, merging the two input arrays
func mergeArrays(firstArray: [Int], secondArray: [Int]) -> [Int] {
    // Initialize an empty sorted array to contain the merged arrays
    var sortedArray: [Int] = []
    // Loop through both input arrays, comparing elements and adding them to the sorted array in the correct order
    var firstIndex = 0
    var secondIndex = 0
    while firstIndex < firstArray.count && secondIndex < secondArray.count {
        // Compare the first element of each array and add the smaller one to the sorted array
        if firstArray[firstIndex] < secondArray[secondIndex] {
            sortedArray.append(firstArray[firstIndex])
            firstIndex += 1
        } else {
            sortedArray.append(secondArray[secondIndex])
            secondIndex += 1
        }
    }
    // Check if there are any remaining elements in the first array and add them to the sorted array
    while firstIndex < firstArray.count {
        sortedArray.append(firstArray[firstIndex])
        firstIndex += 1
    }
    // Check if there are any remaining elements in the second array and add them to the sorted array
    while secondIndex < secondArray.count {
        sortedArray.append(secondArray[secondIndex])
        secondIndex += 1
    }
    // Return the sorted array
    return sortedArray
}

// Example usage of the mergeArrays function
let array1 = [5, 12, 9, 3]
let array2 = [7, 1, 6, 2]
let sortedArray = mergeArrays(firstArray: array1, secondArray: array2)
// Output: sortedArray = [1, 2, 3, 5, 6, 7, 9, 12]
// Define a generic function that returns a tuple containing the maximum and minimum values in an array
func findMinMax<T: Comparable>(in array: [T]) -> (max: T, min: T) {
    
    // Set the initial max and min values as the first element in the array
    var max = array[0]
    var min = array[0]
    
    // Loop through the rest of the array and compare each element to the current max and min values
    for element in array[1..<array.count] {
        
        // If the element is larger than the current max value, update the max value
        if element > max {
            max = element
        }
        
        // If the element is smaller than the current min value, update the min value
        if element < min {
            min = element
        }
    }
    
    // Return the tuple with the max and min values
    return (max, min)
}

// Example usage
let numbers = [5, 2, 7, 11, 3, 1, 9]
let result = findMinMax(in: numbers) // Result is (max: 11, min: 1)

// Generic function for finding the maximum and minimum values in an array of strings
let strings = ["cat", "dog", "bird", "elephant", "giraffe"]
let stringResult = findMinMax(in: strings) // Result is (max: "giraffe", min: "bird")
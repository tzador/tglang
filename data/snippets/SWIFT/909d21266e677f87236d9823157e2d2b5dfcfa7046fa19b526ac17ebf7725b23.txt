//Initializes a function with a long name and two parameters of different types
func longFunctionName(parameter1: String, parameter2: Int) {
    //Prints out the value of the String parameter
    print("The value of the String parameter is \(parameter1)")
    
    //Creates a constant to store the value of the Int parameter
    let number = parameter2
    
    //Using a switch statement to check the value of the Int parameter
    switch number {
        //If the value is less than 10
        case let x where x < 10:
            print("The number is less than 10.")
        //If the value is between 10 and 20
        case let x where x >= 10 && x <= 20:
            print("The number is between 10 and 20.")
        //If the value is greater than 20
        case let x where x > 20:
            print("The number is greater than 20.")
        //Default case if none of the conditions are met
        default:
            print("Unknown number.")
    }
    
    //Using a for loop to iterate through a range of numbers
    for i in 1...10 {
        //If i is divisible by 3
        if i % 3 == 0 {
            print("\(i) is divisible by 3.")
        }
        //If i is divisible by 5
        if i % 5 == 0 {
            print("\(i) is divisible by 5.")
        }
    }
    
    //Initializing an array of type String
    var fruits: [String] = ["apple", "banana", "orange"]
    
    //Using a forEach loop to print each element of the array
    fruits.forEach { (fruit) in
        print("I like \(fruit)s.")
    }
    
    //Declaring a closure with two parameters and a return type
    let multiply: (Int, Int) -> Int = { (num1, num2) in
        //Multiplies the two numbers and returns the result
        return num1 * num2
    }
    
    //Calling the closure and passing in two numbers as arguments
    let result = multiply(10, 5)
    
    //Printing the result of the closure
    print("10 multiplied by 5 is equal to \(result).")
}
//This code snippet generates a random password with a customizable length and character types.

import Foundation

func generatePassword(length: Int, uppercase: Bool, lowercase: Bool, numbers: Bool, specialChars: Bool) -> String {
    var password = ""
    var charPool = ""
    
    //Adds uppercase letters to pool if chosen
    if uppercase {
        charPool += "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    }
    
    //Adds lowercase letters to pool if chosen
    if lowercase {
        charPool += "abcdefghijklmnopqrstuvwxyz"
    }
    
    //Adds numbers to pool if chosen
    if numbers {
        charPool += "0123456789"
    }
    
    //Adds special characters to pool if chosen
    if specialChars {
        charPool += "!@#$%^&*()-_=+[{]};:<>/?"
    }
    
    //Loop through chosen length and randomly select characters from pool
    for _ in 1...length {
        let randIndex = Int(arc4random_uniform(UInt32(charPool.count)))
        let randChar = charPool[randIndex]
        password.append(randChar)
    }
    
    return password
}

//Example Usage
let password = generatePassword(length: 12, uppercase: true, lowercase: true, numbers: true, specialChars: true)
print(password)

//Output: "rT#1!CX8qE$g" (Randomly generated password with 12 characters, including uppercase, lowercase, numbers, and special characters)
// This code snippet demonstrates how to create a function that can calculate the nth Fibonacci number

func fibonacci(n: Int) -> Int { // Function definition with an input parameter of type Int and a return type of Int
    var first = 0, second = 1, currentNum = 0 // Initializing and declaring variables for the first, second and current Fibonacci numbers
    if n == 1 || n == 2 { // If statement to check if the input value is equal to 1 or 2
        return 1 // Return statement to return the value of 1 if the input value is equal to 1 or 2
    }
    for _ in 3...n { // For loop to iterate from 3 to the input value of n
        currentNum = first + second // Add the first and second Fibonacci numbers and assign it to currentNum
        first = second // Assign the value of the second Fibonacci number to the first Fibonacci number for the next iteration
        second = currentNum // Assign the value of the current Fibonacci number to the second Fibonacci number for the next iteration
    }
    return currentNum // Return statement to return the current Fibonacci number after the for loop ends
}

print(fibonacci(n: 6))
// Output: 8
// This is a complex code snippet in SWIFT

import Foundation 

// Define a generic function that takes in two parameters, a closure and an array of type integers
func performClosure(closure: () -> Void, intArray: [Int]) {

  // Iterate through the array and perform the closure on each element
  for num in intArray {
    closure(num)
  }
}

// Define a closure that prints out the square root of a number
let printSquareRoot: (Int) -> Void = { num in 
  print("The square root of \(num) is \(sqrt(num))")
}

// Define an array of integers
let myIntArray = [2, 4, 6, 8, 10]

// Call the performClosure function passing in the printSquareRoot closure and the myIntArray array
performClosure(closure: printSquareRoot, intArray: myIntArray)

// Output:
// The square root of 2 is 1.4142135623730951
// The square root of 4 is 2.0
// The square root of 6 is 2.449489742783178
// The square root of 8 is 2.8284271247461903
// The square root of 10 is 3.1622776601683795
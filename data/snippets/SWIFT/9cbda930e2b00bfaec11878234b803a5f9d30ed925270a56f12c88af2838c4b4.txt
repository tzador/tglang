/// Function to merge two sorted arrays into one, returning a new sorted array
func mergeSortedArrays(arr1: [Int], arr2: [Int]) -> [Int] {
    // Initializing an empty new array to store the merged arrays
    var mergedArray = [Int]()
    
    // Variables to keep track of the current index of each array
    var index1 = 0
    var index2 = 0
    
    // Loop through until one of the arrays has been fully merged
    while index1 < arr1.count && index2 < arr2.count {
        // Compare the elements at the current indices of both arrays
        if arr1[index1] < arr2[index2] {
            // If the element in arr1 is smaller, add it to the merged array and increment index1
            mergedArray.append(arr1[index1])
            index1 += 1
        } else {
            // If the element in arr2 is smaller, add it to the merged array and increment index2
            mergedArray.append(arr2[index2])
            index2 += 1
        }
    }
    
    // If there are any remaining elements in arr1, add them to the end of the merged array
    while index1 < arr1.count {
        mergedArray.append(arr1[index1])
        index1 += 1
    }
    
    // If there are any remaining elements in arr2, add them to the end of the merged array
    while index2 < arr2.count {
        mergedArray.append(arr2[index2])
        index2 += 1
    }
    
    // Return the merged and sorted array
    return mergedArray
}

// Example input arrays
let arr1 = [1,3,5,7,9,11,13]
let arr2 = [2,4,6,8,10,12,14,16,18]

// Call the mergeSortedArrays function and store the returned sorted array
let sortedArray = mergeSortedArrays(arr1: arr1, arr2: arr2)

// Print the sorted array
print(sortedArray) // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18]
class Animal {
    let name: String
    var sound: String
    
    init(name: String, sound: String) {
        self.name = name
        self.sound = sound
    }
    
    func makeSound() {
        print("The \(self.name) makes a \(sound) sound.")
    }
}

// An example of inheritance in Swift
class Cat: Animal {
    var isHappy = true
    
    override func makeSound() {
        if isHappy {
            print("The \(self.name) purrs.")
        } else {
            super.makeSound()
        }
    }
}

// An example of a closure/function that takes in a closure as a parameter
func repeatTask(times: Int, task: () -> Void) {
    for _ in 0..<times {
        task()
    }
}

// An example of using trailing closure syntax
repeatTask(times: 3) {
    print("Hello, world!")
}

// Output:
// The Cat makes a purrs sound.
// The Cat makes a purrs sound.
// The Cat makes a purrs sound.
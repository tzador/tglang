// This code snippet uses a nested function to calculate the factorial of a given integer.
// The factorial function takes in an integer parameter 'num' and returns its factorial value.
// It makes use of a 'guard' statement to check for negative numbers, and an inner function to perform the calculation.

func factorial(_ num: Int) -> Int {
    guard num >= 0 else { return -1 } // checks for negative numbers
    func findFactorial(_ n: Int, _ total: Int = 1) -> Int {
        if n == 0 { return total } // base case
        return findFactorial(n-1, n*total) // recursive call
    }
    return findFactorial(num)
}

let number = 6
let fact = factorial(number)
print("The factorial of \(number) is \(fact)") // output: The factorial of 6 is 720
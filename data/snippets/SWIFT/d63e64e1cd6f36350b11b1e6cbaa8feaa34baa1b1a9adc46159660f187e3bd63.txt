// This is a function that uses recursion to find the factorial of a given number

func factorial (of num: Int) -> Int {
    // Base case
    if num == 1 {
        return 1
    }
    // Recursive call
    return num * factorial(of: num-1)
}

print(factorial(of: 5))
// Output: 120

// This is a protocol for a shape with a method to calculate its area
protocol Shape {
    func calculateArea() -> Double
}

// This is a class for a rectangle that conforms to the Shape protocol
class Rectangle: Shape {
    var length: Double
    var width: Double
    
    init(length: Double, width: Double) {
        self.length = length
        self.width = width
    }
    
    func calculateArea() -> Double {
        return length * width
    }
}

// This is a class for a circle that conforms to the Shape protocol
class Circle: Shape {
    var radius: Double
    
    init(radius: Double) {
        self.radius = radius
    }
    
    func calculateArea() -> Double {
        return Double.pi * pow(radius, 2)
    }
}

// This is an array containing both rectangle and circle objects
let shapes: [Shape] = [Circle(radius: 5), Rectangle(length: 4, width: 3)]

// This is a loop to calculate and print the area of each shape in the array
for shape in shapes {
    let area = shape.calculateArea()
    print(area)
}
// Output: 78.53981633974483 and 12.0
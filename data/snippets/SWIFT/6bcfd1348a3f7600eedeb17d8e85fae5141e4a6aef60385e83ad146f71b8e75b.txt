// This is a complex code snippet in SWIFT

import UIKit
// Importing the UIKit library

class Person {
  let name: String
  let age: Int
  //Defining two properties for the Person class
  
  init(name: String, age: Int) {
    self.name = name
    self.age = age
    // Defining an initializer to set the properties
    
    print("A new person has been created with name \(name) and age \(age)")
    // Printing a message to confirm the creation of a new person
  }
  
  func sayHello() {
    print("Hello, my name is \(self.name) and I am \(self.age) years old.")
    // A function to print a greeting with the person's name and age
  }
}

let john = Person(name: "John", age: 28)
// Creating an instance of the Person class called john
john.sayHello()
// Calling the sayHello() function on the john instance

class Developer: Person {
  let programmingLanguages: [String]
  // Defining an additional property for the Developer class
  
  init(name: String, age: Int, programmingLanguages: [String]) {
    self.programmingLanguages = programmingLanguages
    // Setting the value for the programmingLanguages property
    
    super.init(name: name, age: age)
    // Calling the superclass initializer to set the name and age properties
  }
  
  override func sayHello() {
    let languages = programmingLanguages.joined(separator: ", ")
    // Concatenating the programming languages into a single string with a comma separator
    
    print("Hello, my name is \(self.name) and I am a developer. I know \(languages).")
    // A modified version of the sayHello() function to include the programming languages
  }
}

let jane = Developer(name: "Jane", age: 25, programmingLanguages: ["Swift", "Java", "Python"])
// Creating an instance of the Developer class called jane
jane.sayHello()
// Calling the sayHello() function on the jane instance
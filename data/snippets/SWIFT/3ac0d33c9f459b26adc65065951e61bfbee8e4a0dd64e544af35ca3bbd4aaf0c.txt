func mergeSort(array: [Int]) -> [Int] {//function to perform merge sort on an array of integers
    let middleIndex = array.count / 2 //declaring and initializing a variable to store the middle index of the array
    guard middleIndex > 0 else { return array }//if the middle index is equal to 0, return the array as the sorting is complete
    let leftArray = Array(array[..<middleIndex]) //splitting the left half of the array
    let rightArray = Array(array[middleIndex...]) //splitting the right half of the array
    return merge(left: mergeSort(array: leftArray), right: mergeSort(array: rightArray))//calling the merge function recursively on the left and right halves of the array
}

func merge(left: [Int], right: [Int]) -> [Int] {//function to merge two sorted arrays
    var leftIndex = 0 //declaring and initializing a variable for the left array index
    var rightIndex = 0 //declaring and initializing a variable for the right array index
    var resultArray: [Int] = [] //declaring and initializing a variable to store the sorted result
    while leftIndex < left.count && rightIndex < right.count {//loop until one of the arrays is fully traversed
        if left[leftIndex] < right[rightIndex] {//if current element in left array is smaller than current element in right array
            resultArray.append(left[leftIndex]) //add the element from left array to the result array
            leftIndex += 1 //increment left index
        } else if left[leftIndex] > right[rightIndex] {//if current element in right array is smaller than current element in left array
            resultArray.append(right[rightIndex]) //add the element from right array to the result array
            rightIndex += 1 //increment right index
        } else {//if both the elements are equal
            resultArray.append(left[leftIndex]) //add the element from left array to the result array
            leftIndex += 1 //increment left index
            resultArray.append(right[rightIndex]) //add the element from right array to the result array
            rightIndex += 1 //increment right index
        }
    }
    
    while leftIndex < left.count {//add remaining elements from left array to result array
        resultArray.append(left[leftIndex])
        leftIndex += 1
    }
    
    while rightIndex < right.count {//add remaining elements from right array to result array
        resultArray.append(right[rightIndex])
        rightIndex += 1
    }
    return resultArray //return the sorted result array
}

let unsortedArray = [4, 2, 8, 1, 5, 3, 9, 6] //declaring an unsorted array
print("Unsorted Array: \(unsortedArray)") //printing the unsorted array
let sortedArray = mergeSort(array: unsortedArray) //calling the mergeSort function on the unsorted array
print("Sorted Array: \(sortedArray)") //printing the sorted array
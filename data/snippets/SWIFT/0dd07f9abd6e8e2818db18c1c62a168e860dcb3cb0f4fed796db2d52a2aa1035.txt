/*
This code snippet is an example of how to create a custom view controller with animations and transitions in Swift.
It includes the implementation of a custom UIViewController class, along with methods for presenting and dismissing the view controller with transition animations.
*/
 
class CustomViewController: UIViewController {
    let animationDuration: Double = 0.3
    
    // MARK: View Lifecycle Methods
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Setup initial view and subviews
        setupView()
    }
    
    // MARK: Private Methods
    private func setupView() {
        // Add background color and rounded corners to view
        view.backgroundColor = UIColor(red: 0.8, green: 0.8, blue: 0.8, alpha: 1)
        view.layer.cornerRadius = 10
        
        // Add label to display view controller title
        let label = UILabel(frame: CGRect(x: 0, y: 0, width: view.frame.width, height: 50))
        label.text = "Custom View Controller"
        label.textAlignment = .center
        view.addSubview(label)
        
        // Add button to dismiss view controller
        let button = UIButton(frame: CGRect(x: view.frame.width - 50, y: 10, width: 40, height: 40))
        button.setImage(UIImage(named: "close"), for: .normal)
        button.addTarget(self, action: #selector(dismissViewController), for: .touchUpInside)
        view.addSubview(button)
    }
    
    // MARK: Public Methods
    /*
    Presents the custom view controller with a slide in transition from the bottom
    - Parameters:
        - parentViewController: The view controller to present the custom view controller on top of
    */
    public func present(from parentViewController: UIViewController) {
        // Set initial frame and transform for presenting view controller
        self.view.frame = CGRect(x: 0, y: parentViewController.view.frame.height, width: parentViewController.view.frame.width, height: parentViewController.view.frame.height * 0.75)
        self.view.transform = CGAffineTransform(translationX: 0, y: self.view.frame.height)
        
        // Add view controller as child view controller to parent view controller
        parentViewController.addChildViewController(self)
        parentViewController.view.addSubview(self.view)
        self.didMove(toParentViewController: parentViewController)
        
        // Animate view controller into view with slide in transition
        UIView.animate(withDuration: animationDuration) {
            self.view.transform = CGAffineTransform.identity
        }
    }
    
    /*
    Dismisses the custom view controller with a slide out transition to the bottom
    */
    @objc func dismissViewController() {
        UIView.animate(withDuration: animationDuration, animations: {
            self.view.transform = CGAffineTransform(translationX: 0, y: self.view.frame.height)
        }, completion: { _ in
            // Remove view controller from parent view controller
            self.willMove(toParentViewController: nil)
            self.view.removeFromSuperview()
            self.removeFromParentViewController()
        })
    }
}
//Initiate a dictionary
var dict = [Int: String]()

//Add values to the dictionary
dict[1] = "One"
dict[2] = "Two"

//Define a function that takes in two parameters and returns a dictionary
func createDictionary(key: Int, value: String) -> [Int: String] {
    return [key: value]
}

//Call the function and assign the returned dictionary to a constant
let newDict = createDictionary(key: 3, value: "Three")

//Iterate through the dictionary and print out the key and value
for (key, value) in dict {
    print("\(key): \(value)")
}

//Use optional binding to check if a value exists for a specific key
if let three = dict[3] {
    print(three) //Prints "nil" since value does not exist
}

//Use a switch statement to check if a value exists for a specific key and print the value if it does
switch dict[3] {
case .some(let value):
    print(value)
case .none:
    print("Value does not exist") //Prints this since value does not exist
}

//Sort the dictionary by keys in ascending order
let sortedDict = dict.sorted(by: { $0.0 < $1.0 })

//Map through the keys and values and print them out
sortedDict.map { (key, value) in
    print("\(key): \(value)")
}
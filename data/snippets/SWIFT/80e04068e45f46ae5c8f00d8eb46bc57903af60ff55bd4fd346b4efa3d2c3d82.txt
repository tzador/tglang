// Declaring a class SpecialDate with different properties and methods
class SpecialDate {
    
    // Properties
    var date: Date
    var eventType: String
    
    // Initializer
    init(date: Date, eventType: String) {
        self.date = date
        self.eventType = eventType
    }
    
    // Method to get the day of the week
    func getDayOfWeek() -> String {
        
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "EEEE"
        
        return dateFormatter.string(from: date)
    }
    
    // Method to check if the date is a weekend
    func isWeekend() -> Bool {
        
        let calendar = Calendar.current
        
        if calendar.isDateInWeekend(date) {
            return true
        } else {
            return false
        }
    }
    
    // Method to check if event is special based on event type
    func isSpecialEvent() -> Bool {
        
        if eventType == "Birthday" || eventType == "Anniversary" {
            return true
        } else {
            return false
        }
    }
    
    // Method to print out a custom message based on the event type and day of the week
    func printMessage() {
        
        if isSpecialEvent() {
            print("Happy \(eventType)! Hope you have a great day! It falls on a \(getDayOfWeek()) this year.")
        } else {
            if isWeekend() {
                print("Enjoy your \(eventType) weekend!")
            } else {
                print("Have a great \(getDayOfWeek())!")
            }
        }
    }
}

// Creating an instance of SpecialDate class
let mySpecialDate = SpecialDate(date: Date(), eventType: "Birthday")

// Calling the printMessage method
mySpecialDate.printMessage()
// This is a function that calculates the nth Fibonacci number
func fibonacci(n: Int) -> Int {
    // Initializing a dictionary to store already calculated Fibonacci numbers
    var cache = [Int: Int]()
    // Recursive function to find the nth Fibonacci number
    func findFibonacci(n: Int) -> Int {
        // Base cases for 0 and 1
        if n == 0 || n == 1 {
            return n
        }
        // Check if the Fibonacci number has already been calculated and stored in the cache
        if let result = cache[n] {
            // If yes, return the stored value
            return result
        } else {
            // If not, recursively call the function to calculate the Fibonacci number and store it in the cache
            let result = findFibonacci(n: n-1) + findFibonacci(n: n-2)
            cache[n] = result
            return result
        }
    }
    // Call the recursive function to find the nth Fibonacci number
    let fibonacciNumber = findFibonacci(n: n)
    // Return the result
    return fibonacciNumber
}
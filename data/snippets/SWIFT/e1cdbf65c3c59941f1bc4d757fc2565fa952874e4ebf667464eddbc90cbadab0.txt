// This code snippet creates a custom UIView with rounded corners and a gradient background

import UIKit

class CustomView: UIView {
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.setup()
    }
    
    // Function to set up the view with desired corner radius and background gradient
    func setup() {
        // Create a CAGradientLayer to add a gradient background to the view
        let gradientLayer = CAGradientLayer()
        gradientLayer.frame = self.bounds
        gradientLayer.colors = [UIColor.systemBlue.cgColor, UIColor.systemPurple.cgColor]
        gradientLayer.startPoint = CGPoint(x: 0, y: 0)
        gradientLayer.endPoint = CGPoint(x: 1, y: 1)
        
        // Create a CAShapeLayer to give the view rounded corners
        let maskLayer = CAShapeLayer()
        maskLayer.path = UIBezierPath(roundedRect: self.bounds, cornerRadius: 10).cgPath
        gradientLayer.mask = maskLayer
        
        // Add the gradient layer to the view's layer
        self.layer.addSublayer(gradientLayer)
    }
}

// Usage:
// Create an instance of CustomView and add it to a parent view
let customView = CustomView(frame: CGRect(x: 0, y: 0, width: 200, height: 200))
parentView.addSubview(customView)
// Define a struct called Person with properties for name, age, and occupation
struct Person {
    var name: String
    var age: Int
    var occupation: String 
}

// Create an instance of Person
let person1 = Person(name: "John", age: 30, occupation: "Software Engineer")

// Define a class called Animal with properties for species, color, and age
class Animal {
    var species: String
    var color: String
    var age: Int
    
    // Create a designated initializer
    init (species: String, color: String, age: Int) {
        self.species = species
        self.color = color
        self.age = age
    }
    
    // Define a method called makeSound() that prints the sound of the animal
    func makeSound() {
        // Use a switch statement to print different sounds based on species
        switch species {
            case "cat":
                print("Meow")
            case "dog":
                print("Woof")
            case "bird":
                print("Chirp")
            default:
                print("Unknown")
        }
    }
}

// Create an instance of Animal
let animal1 = Animal(species: "cat", color: "black", age: 3)

// Call the makeSound() method on animal1
animal1.makeSound()

// Define an enum called Gender with cases for male and female
enum Gender {
    case male
    case female
}

// Extend the Person struct to include a computed property for gender
extension Person {
    var gender: Gender {
        // Use the type of the person's name to determine their gender
        if name.hasPrefix("Mr.") {
            return .male
        } else if name.hasPrefix("Mrs.") || name.hasPrefix("Ms.") || name.hasPrefix("Miss") {
            return .female
        } else {
            return .male // Default to male if prefix is not specified
        }
    }
}

// Print the gender of person1
print(person1.gender)
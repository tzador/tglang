func linearSearch<T: Equatable>(array: [T], key: T) -> Int? {
  // `array` is an input array of type `T` which conforms to the Equatable protocol
  // `key` is the element we are searching for of type `T` which also conforms to the Equatable protocol
  for (index, value) in array.enumerated() {
    // we use the enumerated() method to loop through each element of the array
    // index is the index of the element in the array, value is the element itself
    if value == key {
      // we check if the current element is equal to the key we are searching for
      // if it is, we return the index of the current element
      return index
    }
  }
  // if the element is not found, we return nil
  return nil
}

// example usage
let numbers = [5, 2, 8, 3, 9]
// we create an array of type `Int` with 5 elements
if let index = linearSearch(array: numbers, key: 8) {
  // we call the linearSearch function passing in our array and the key we are searching for
  // if the element is found, index will be equal to the index of that element in the array
  print("Index of key 8: \(index)")
} else {
  print("Element not found.")
}
// Output: Index of key 8: 2
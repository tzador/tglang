// This is a function that sorts an array of integers using quicksort algorithm

func quicksort(_ array: [Int]) -> [Int] {
  // Base case: if the array only has one element, return it
  guard array.count > 1 else { return array }

  // Choose a pivot element, in this case we choose the first element
  let pivot = array[0]

  // Create two subarrays to hold elements smaller and larger than the pivot
  var smaller: [Int] = []
  var larger: [Int] = []

  // Loop through the array, comparing each element to the pivot
  for i in 1..<array.count {
    if array[i] < pivot {
      smaller.append(array[i])
    } else {
      larger.append(array[i])
    }
  }

  // Combine the sorted arrays and pivot element, then recursively call quicksort on them
  return quicksort(smaller) + [pivot] + quicksort(larger)
}

// Test the function
let example = [12, 24, 5, 32, 16]
print(quicksort(example)) // Output: [5, 12, 16, 24, 32]
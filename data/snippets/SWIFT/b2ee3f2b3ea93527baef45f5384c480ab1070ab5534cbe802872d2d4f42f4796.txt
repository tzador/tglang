// This is a function that takes in an array of integers
// and returns the sum of all the elements in the array.
// It also uses nested functions and closures for more complex functionality.

func sumArray(array: [Int]) -> Int {

    // First, we define a variable to keep track of the sum
    var sum = 0

    // Next, we define a recursive nested function to loop through the array
    // and add each element to the sum variable
    func addElements(index: Int) {

        // Base case: if we have reached the end of the array,
        // we exit the function and return the sum
        guard index < array.count else {
            return
        }

        // Otherwise, we add the current element at the given index
        // to the sum variable and call the function again
        // with the next index (index + 1)
        sum += array[index]
        addElements(index: index + 1)
    }

    // Now, we use a closure to handle the initial call to addElements(),
    // passing in the starting index of 0
    addElements(index: 0)

    // Finally, we return the sum variable
    return sum
}

// Example usage: 
let myArray = [1, 2, 3, 4, 5]
let sum = sumArray(array: myArray)
// Output: 15 (1 + 2 + 3 + 4 + 5)
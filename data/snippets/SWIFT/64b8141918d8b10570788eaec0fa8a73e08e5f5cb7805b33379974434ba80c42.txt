enum Direction { // creates an enumeration type called Direction
    case north, south, east, west // defines the possible cases
}

class Vehicle { // creates a class called Vehicle
    var name: String // declares a property for the vehicle's name
    var speed: Double // declares a property for the vehicle's speed
    var direction: Direction // declares a property for the vehicle's direction

    init(name: String, speed: Double, direction: Direction) { // initializes the object with the given properties
        self.name = name
        self.speed = speed
        self.direction = direction
    }
    
    func move() { // declares a method for the vehicle to move
        print("\(self.name) is moving at a speed of \(self.speed) units in the \(self.direction) direction.")
    }
}

class Car: Vehicle { // creates a subclass of Vehicle called Car
    var numWheels: Int // declares a property for the car's number of wheels

    init(name: String, speed: Double, direction: Direction, numWheels: Int) { // initializes the car with the given properties
        self.numWheels = numWheels
        super.init(name: name, speed: speed, direction: direction)
    }
    
    override func move() { // overrides the move method from the Vehicle class
        print("\(self.name) is driving on \(self.numWheels) wheels at a speed of \(self.speed) units in the \(self.direction) direction.")
    }
}

let myCar = Car(name: "Tesla Model S", speed: 200.0, direction: .north, numWheels: 4) // creates a new instance of Car
myCar.move() // calls the move method on the car instance, printing: "Tesla Model S is driving on 4 wheels at a speed of 200.0 units in the north direction."
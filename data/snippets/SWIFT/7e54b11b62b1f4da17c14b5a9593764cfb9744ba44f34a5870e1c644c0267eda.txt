enum Coin {
  case penny, nickel, dime, quarter
}

struct Wallet {
   var coins: [Coin] = [.penny, .nickel, .dime, .quarter]
   
   mutating func add(coin: Coin) {
      coins.append(coin)
   }
}

extension Wallet: CustomStringConvertible {
   var description: String {
      var text = "Wallet has: "
      for (index, coin) in coins.enumerated() {
         if index > 0 {
           text += ", "
         }
         switch coin {
         case .penny: text += "🟤"
         case .nickel: text += "⚪️"
         case .dime: text += "💰"
         case .quarter: text += "💲"
         }
      }
      return text
   }
}

var myWallet = Wallet()
myWallet.add(coin: .penny)
myWallet.add(coin: .nickel)
myWallet.add(coin: .penny)
myWallet.add(coin: .quarter)
print(myWallet)
func convertToRGB(from hexCode: String) -> UIColor {
    // This function converts a hex color code to its corresponding RGB equivalent color
    var red: CGFloat = 0.0
    var green: CGFloat = 0.0
    var blue: CGFloat = 0.0
    var alpha: CGFloat = 1.0
    // Split the hex color code into red, green, and blue components
    let code = hexCode.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)
    var hexInt: UInt64 = 0
    Scanner(string: code).scanHexInt64(&hexInt)
    // Check if the hex code has 8 characters, if yes then divide by 255 to get RGBA values
    if hexCode.count == 8 {
        red = CGFloat((hexInt & 0xff000000) >> 24) / 255.0
        green = CGFloat((hexInt & 0x00ff0000) >> 16) / 255.0
        blue = CGFloat((hexInt & 0x0000ff00) >> 8) / 255.0
        alpha = CGFloat(hexInt & 0x000000ff) / 255.0
    } else if hexCode.count == 6 { // Check if the hex code has 6 characters, if yes then divide by 255 to get RGB values
        red = CGFloat((hexInt & 0xff0000) >> 16) / 255.0
        green = CGFloat((hexInt & 0x00ff00) >> 8) / 255.0
        blue = CGFloat(hexInt & 0x0000ff) / 255.0
    }
    return UIColor(red: red, green: green, blue: blue, alpha: alpha) // Return the equivalent UIColor
}
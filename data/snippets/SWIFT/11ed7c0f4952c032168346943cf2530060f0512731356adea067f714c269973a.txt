// This is a function that sorts an array of integers using bubble sort algorithm
func bubbleSort(_ array: [Int]) -> [Int] {
    
    var sortedArray = array
    
    // This variable is used to keep track of whether any swaps were made during each loop
    var didSwaps = false
    
    // Loop through the array n-1 times, where n is the length of the array
    for i in 0..<(sortedArray.count - 1) {
        
        // Loop through the array from index 0 to n-i-1
        for j in 0..<(sortedArray.count - i - 1) {
            
            // Compare current element with the element one index ahead
            if sortedArray[j] > sortedArray[j+1] {
                
                // Swap the elements if the current element is greater than the next element
                let temp = sortedArray[j]
                sortedArray[j] = sortedArray[j+1]
                sortedArray[j+1] = temp
                
                // Set didSwaps to true to indicate that a swap was made
                didSwaps = true
            }
        }
        
        // If no swaps were made during a loop, the array is already sorted and the loop can be terminated
        if !didSwaps {
            break
        }
    }

    return sortedArray
}

// Example usage:
let unsortedArray = [5, 2, 7, 1, 9, 3]
let sortedArray = bubbleSort(unsortedArray)
print(sortedArray) // prints "[1, 2, 3, 5, 7, 9]"
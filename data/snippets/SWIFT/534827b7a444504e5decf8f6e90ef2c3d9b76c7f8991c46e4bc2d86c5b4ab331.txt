// Define a nested struct named 'Phone', holding the properties 'brand' and 'year' of type Strings
struct Phone {
    var brand: String
    var year: String

    // Define a function named 'getDetails' which returns a string with the brand and year of the phone
    func getDetails() -> String {
        return "\(brand) \(year)"
    }
}

// Create an instance of the nested struct
let myPhone = Phone(brand: "Apple", year: "2020")

// Define a class named 'Contacts'
class Contacts {
    // Define a property named 'phoneNumbers' of type array of 'Phone'
    var phoneNumbers: [Phone]
    
    // Define a function named 'addContact' which takes in a phone number as input and adds it to the 'phoneNumbers' array
    func addContact(phoneNumber: Phone) {
        phoneNumbers.append(phoneNumber)
    }
}

// Create an instance of the 'Contacts' class
let myContacts = Contacts()

// Use the 'addContact' function to add the previously created 'myPhone' instance to the 'phoneNumbers' array in the 'myContacts' instance
myContacts.addContact(phoneNumber: myPhone)

// Print the details of the first item in the 'phoneNumbers' array using the 'getDetails' function from the 'Phone' struct
print(myContacts.phoneNumbers[0].getDetails())
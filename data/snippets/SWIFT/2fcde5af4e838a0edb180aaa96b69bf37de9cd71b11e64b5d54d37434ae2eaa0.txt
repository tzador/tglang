class Person {
  var name: String
  var age: Int

  init(name: String, age: Int) { //This is a custom constructor
    self.name = name //The keyword 'self' refers to the current instance of the class
    self.age = age 
  }

  func getInfo() { //This is a method
    print("Name: \(self.name), Age: \(self.age)") 
  }
}

enum Hobbies {
  case reading
  case coding
  case painting
}

protocol Greeting {
  var greeting: String { get } //This is a protocol variable
}

extension Person: Greeting { //Person class conforms to the Greeting protocol
  var greeting: String { //Computed property
    return "Hello, my name is \(self.name)."
  }

  func introduce() { //This function utilizes the computed property from the protocol
    print(self.greeting)
  }
}

let person = Person(name: "John", age: 25) //Creating an instance of class Person
person.getInfo() //Calling the getInfo method to print person's name and age
print(person.greeting) //Printing the greeting property from the protocol
person.introduce() //Calling the introduce method to utilize the greeting property
let hobby: Hobbies = .reading //Creating an instance of enum Hobbies
print("My favorite hobby is \(hobby).") //Printing the chosen hobby
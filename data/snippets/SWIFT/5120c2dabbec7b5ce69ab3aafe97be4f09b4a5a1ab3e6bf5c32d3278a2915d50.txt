/**
This function checks if a string is a palindrome.

- Parameter word: The word to be checked
- Returns: True if the word is a palindrome, False otherwise
*/
func isPalindrome(_ word: String) -> Bool {

    // Removing whitespaces and converting the string to lowercase
    let convertedWord = word.lowercased().replacingOccurrences(of: " ", with: "")

    // Initializing two pointers
    var leftIndex = 0
    var rightIndex = convertedWord.count - 1

    // Looping until the pointers meet or overlap
    while leftIndex < rightIndex {

        // Comparing characters at both pointers
        let leftChar = convertedWord[convertedWord.index(convertedWord.startIndex, offsetBy: leftIndex)]
        let rightChar = convertedWord[convertedWord.index(convertedWord.startIndex, offsetBy: rightIndex)]

        // If the characters are not the same, the word is not a palindrome
        if leftChar != rightChar {
            return false
        }

        // Moving the pointers towards the middle
        leftIndex += 1
        rightIndex -= 1
    }

    // If the loop completes without returning false, the word is a palindrome
    return true
}
// A complex function that takes in an array and a closure as parameters
func complexFunction<T>(array: [T], closure: (T) -> Int) -> [Int] {
    var outputArray = [Int]()
    for element in array {
        let result = closure(element)
        outputArray.append(result)
    }
    return outputArray
}

// An example array
let exampleArray = [1, 2, 3, 4]

// A closure that doubles each element in the array
let doubleClosure = { (element: Int) -> Int in
    return element * 2
}

// Calling the complexFunction and storing the result 
let doubledArray = complexFunction(array: exampleArray, closure: doubleClosure)

// Printing the result
print(doubledArray)
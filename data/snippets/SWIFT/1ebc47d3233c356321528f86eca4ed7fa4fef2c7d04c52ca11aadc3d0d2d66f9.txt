/// Function to sort array using quicksort algorithm
func quicksort<T: Comparable>(_ array: [T]) -> [T] {
    // Checks for an empty array
    guard array.count > 1 else { return array }
    
    // Selects pivot element as the last element of the array
    let pivot = array[array.count - 1]
    
    // Divides the array into two subarrays
    let smaller = array.filter { $0 < pivot }
    let equal = array.filter { $0 == pivot }
    let greater = array.filter { $0 > pivot }
    
    // Returns a sorted array by recursively calling the quicksort function
    return quicksort(smaller) + equal + quicksort(greater)
}

// Example usage
let unsortedArray = [5, 8, 2, 9, 10, 3]
let sortedArray = quicksort(unsortedArray)

// Output:
// [2, 3, 5, 8, 9, 10]
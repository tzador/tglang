subroutine substitution(x, y, n)
   integer :: n, i
   real :: x(n), y(n)
   
   do i = 1, n
     y(i) = 2 * x(i) - 3
   end do
   
 end subroutine substitution
 
! Explanation:
! This subroutine, named "substitution", takes in two input arrays, x and y, of size n.
! It then uses a loop to iterate through each element of the arrays and performs a substitution operation,
! where the new element in array y is equal to two times the current element in array x, minus 3.
! The "integer" and "real" statements declare the data types of the input arrays and the do loop is used to
! specify the start and end values for the loop. The loop will run from 1 to n, and the "end do" statement
! marks the end of the loop. The output will be the updated array y with the substituted elements.
! Subroutines like this can be used to perform specific functions within a larger program.
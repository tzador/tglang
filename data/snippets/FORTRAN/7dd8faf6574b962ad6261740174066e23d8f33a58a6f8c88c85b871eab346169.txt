subroutine matrix_multiply(A, B, C)
! This subroutine multiplies two matrices and stores the result in a third matrix
! Parameters:
! A - an input matrix
! B - an input matrix
! C - an output matrix

! Declaring variables
integer :: i, j, k    ! loop variables
real :: temp          ! temporary variable used for calculations

! Checking matrix dimensions
if (size(A,1) /= size(B,2)) stop "ERROR: Number of columns of A must equal number of rows of B"
if (size(C,1) /= size(A,2)) stop "ERROR: Number of rows of C must equal number of rows of A"
if (size(C,2) /= size(B,2)) stop "ERROR: Number of columns of C must equal number of columns of B"

! Multiplying matrices
do i = 1, size(A,1)      ! loop through rows of A
    do j = 1, size(B,2)  ! loop through columns of B
        temp = 0.0      ! reset temporary variable
        do k = 1, size(A,2)  ! loop through columns of A (and rows of B)
            temp = temp + A(i,k) * B(k,j) ! calculate product for current element
        end do
        C(i,j) = temp   ! store product in corresponding element of C
    end do
end do

end subroutine matrix_multiply
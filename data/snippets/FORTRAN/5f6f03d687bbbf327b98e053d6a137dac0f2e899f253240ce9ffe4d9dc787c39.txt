! This program calculates and outputs the solution of a system of linear equations

! Define variables
integer, parameter :: num_eqns = 3 ! Number of equations in the system
integer :: i, j, k ! Loop variables
real :: coefficients(num_eqns,num_eqns) ! Coefficient matrix
real :: solutions(num_eqns) ! Solution vector
real :: pivot, factor, sum ! Temporary variables needed for Gaussian elimination

! Initialize the coefficients matrix
coefficients = reshape((/1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,10.0/),shape(coefficients))

! Initialize the solution vector
solutions = reshape((/-1.0,2.0,3.0/),shape(solutions))

! Perform Gaussian elimination
do i = 1,num_eqns-1 ! Loop through all rows except the last one
    pivot = coefficients(i,i) ! Set the pivot element to the current diagonal element
    do j = i+1,num_eqns ! Loop through all rows below the current row
        factor = coefficients(j,i) / pivot ! Calculate the factor for row elimination
        coefficients(j,i:num_eqns) = coefficients(j,i:num_eqns) - factor * coefficients(i,i:num_eqns) ! Eliminate the elements in the current row
        solutions(j) = solutions(j) - factor * solutions(i) ! Adjust the solution vector
    end do
end do

! Back substitution
do i = num_eqns,1,-1 ! Loop through the rows in reverse order
    sum = 0.0 ! Initialize the sum
    do j = i+1,num_eqns ! Loop through the columns after the current one
        sum = sum + coefficients(i,j) * solutions(j) ! Add the product to the sum
    end do
    solutions(i) = (solutions(i) - sum) / coefficients(i,i) ! Calculate the solution for the current unknown
end do

! Print the solutions
print *, "The solution of the system is:"
do k = 1,num_eqns ! Loop through the solution vector
    print *, "x", k, "=", solutions(k)
end do
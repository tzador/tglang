PROGRAM NewtonRaphson
! This program uses the Newton-Raphson method to find the root of a function
IMPLICIT NONE

! Declaration of variables
REAL :: x, x0, f, df, tol 
INTEGER :: i, max_iter

! Assign initial values
x = 0.5              ! Initial guess
x0 = 0.6             ! Initial upper bound
tol = 1E-6           ! Error tolerance
max_iter = 100       ! Maximum number of iterations

! Loop to iterate until tolerance is reached or maximum iterations are reached
DO i = 1, max_iter
    ! Evaluate function and its derivative at current value of x
    f = cos(x)**2 - x**3 + 1
    df = -2*cos(x)*sin(x) - 3*x**2

    ! Calculate the new value of x using Newton-Raphson formula
    x = x - f/df

    ! Check if tolerance is reached
    IF (ABS(f) < tol) THEN
        ! Print the root and number of iterations it took to find it
        PRINT *, "Root is ", x
        PRINT *, "Number of iterations: ", i
        EXIT    ! Exit the loop
    END IF

    ! Check if the new value of x is within the bounds
    IF (x < x0) THEN
        ! Set the new upper bound as the new value of x
        x0 = x
    ELSE 
        ! Set the new lower bound as the new value of x
        x = x0
    END IF
END DO

! If maximum number of iterations is reached, print an error message
IF (i == max_iter) THEN
    PRINT *, "Error: maximum number of iterations reached."
END IF

END PROGRAM NewtonRaphson
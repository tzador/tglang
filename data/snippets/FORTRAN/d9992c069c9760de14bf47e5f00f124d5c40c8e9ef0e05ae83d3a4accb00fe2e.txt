! This program finds the determinant of a matrix using Gaussian elimination

program determinant

implicit none
integer :: n, i, j, k, pivot
real :: det, factor, temp
real, dimension(100,100) :: A

! Ask user for number of rows in matrix
print *, "Enter the number of rows in the matrix: "
read *, n

! Ask user for elements of matrix
print *, "Enter the elements of the matrix: "
do i = 1, n
    do j = 1, n
       read *, A(i,j)
    end do
end do

! Initialize determinant to 1
det = 1.0

! Gaussian elimination
do k = 1, n-1           ! main loop for column
    pivot = k           ! pivot element row index
    do i = k+1, n       ! loop for row below pivot
        ! Checking if element below pivot is smaller than pivot
        if (abs(A(i,k)) > abs(A(pivot,k))) then
            pivot = i            ! update pivot index
        end if
    end do
    if (pivot == k) then         ! check if pivot index unchanged
        ! Determinant is 0 since there are 0s in the main diagonal
        det = 0.0
        ! Exit loop
        exit
    else
        ! Swap rows to make pivot element the largest in the column
        do j = 1, n
            temp = A(k,j)
            A(k,j) = A(pivot,j)
            A(pivot,j) = temp
        end do
        ! Element operation to make subdiagonal elements 0
        do i = k+1, n
            factor = A(i,k)/A(k,k)          ! find scaling factor
            do j = k+1, n
                A(i,j) = A(i,j) - factor*A(k,j)    ! update subdiagonal element
            end do
        end do
        ! Update determinant by multiplying pivot element
        det = det*A(k,k)
    end if
end do

! Print determinant
print *, "Determinant: ", det

end program determinant
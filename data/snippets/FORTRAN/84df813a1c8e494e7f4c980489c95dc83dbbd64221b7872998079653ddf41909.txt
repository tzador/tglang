program find_equation
  implicit none
  real :: x
  integer :: i
  real, dimension(10) :: y
  real, dimension(10) :: x_vals, y_vals, diff
  real :: sum_x, sum_y, sum_xy, sum_xx, slope, intercept
  
  ! Generate 10 random x values
  do i = 1, 10
    call random_number(x)
    x_vals(i) = x * 10
  end do
  
  ! Compute corresponding y values using equation y = 2x + 1 + random number between -1 and 1
  call random_number(x)
  do i = 1, 10
    y_vals(i) = 2 * x_vals(i) + 1 + (x - 0.5) * 2
  end do
  
  ! Compute sums for least squares regression (sum_x, sum_y, sum_xy, sum_xx)
  sum_x = sum(x_vals)
  sum_y = sum(y_vals)
  sum_xy = dot_product(x_vals, y_vals)
  sum_xx = dot_product(x_vals, x_vals)
  
  ! Compute slope and intercept for equation y = mx + b
  slope = (10 * sum_xy - sum_x * sum_y) / (10 * sum_xx - sum_x**2)
  intercept = (sum_y - slope * sum_x) / 10
  
  ! Compute difference between actual y values and predicted y values using the least squares regression equation
  diff = y_vals - (slope * x_vals + intercept)
  
  ! Print results
  print *, 'The equation for the given data is y =', slope, 'x +', intercept
  print *, 'The difference between the actual y values and predicted y values using least squares regression is:'
  do i = 1, 10
    print *, diff(i)
  end do
end program find_equation
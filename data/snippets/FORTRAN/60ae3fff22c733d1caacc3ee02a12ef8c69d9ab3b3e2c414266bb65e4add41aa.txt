program newton_raphson
    implicit none

    ! This program implements the Newton-Raphson method
    ! for finding the root of a function.

    ! Set the initial guess and tolerance
    real :: x0 = 1.0, tol = 1e-5
    
    ! Declare variables for storing function value and derivative
    real :: f, df
    
    ! Declare a variable for storing the new estimate of the root
    real :: x
    
    ! Declare a variable for storing the previous estimate of the root
    real :: x_prev
    
    ! Declare a variable for storing the number of iterations
    integer :: n = 0
    
    ! Begin the loop for the Newton-Raphson iteration
    do
        ! Calculate the function value at x0
        f = 3*x0**2 - 4*x0 + 1
        
        ! Calculate the derivative value at x0
        df = 6*x0 - 4
        
        ! Update the estimate of the root using the Newton-Raphson formula
        x = x0 - f/df
        
        ! Check if the new estimate is within the desired tolerance
        if (abs(x - x_prev) < tol) then
            ! Output the final estimate and number of iterations
            print *, "The root of the function is: ", x
            print *, "Number of iterations: ", n
            
            ! Exit the loop
            exit
        end if
        
        ! Update the previous estimate of the root
        x_prev = x
        
        ! Update the number of iterations
        n = n + 1
        
        ! Update the current estimate of the root
        x0 = x
    end do
    
    ! If the loop does not exit, it means the root was not found within the tolerance
    print *, "Root not found within the desired tolerance."
    
end program newton_raphson
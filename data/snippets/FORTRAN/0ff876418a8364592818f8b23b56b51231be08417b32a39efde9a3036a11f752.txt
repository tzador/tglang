! This code calculates the determinant of a square matrix using Gaussian Elimination method

! Entering the dimension of the matrix
INTEGER :: n ! integer variable to store dimension
PRINT *, 'Enter the dimension of the matrix: '
READ *, n

! Initializing matrix and variables
REAL :: matrix(n,n), temp ! creating a square matrix of size n*n and a temporary variable
INTEGER :: i, j, k, sign ! integer variables for loops and determinant sign, initial value of sign is 1

! Reading the elements of the matrix from user
PRINT *, 'Enter the elements of the matrix: '
DO i=1,n ! loop for rows
    DO j=1,n ! loop for columns
        READ *, matrix(i,j)
    END DO
END DO

! Displaying the entered matrix
PRINT *, 'Entered matrix: '
DO i=1,n
    DO j=1,n
        PRINT *, matrix(i,j)
    END DO
END DO

! Performing Gaussian Elimination
DO k=1,n-1 ! loop for each column of the matrix
    sign = sign * matrix(k,k) ! multiplying sign with the pivot element of each row
    DO i=k+1,n ! loop for rows below pivot row
        temp = matrix(i,k) / matrix(k,k) ! performing the row operation
        matrix(i,:) = matrix(i,:) - temp * matrix(k,:) ! subtracting each element of pivot row from row below it
    END DO
END DO

! Calculating determinant
REAL :: det ! variable to store determinant
det = 1.0
DO i=1,n ! loop for diagonal elements
    det = det * matrix(i,i) ! multiplying all diagonal elements
END DO
det = sign * det ! multiplying with the sign calculated in Gaussian Elimination method

! Displaying the determinant
PRINT *, 'Determinant of the matrix is: ', det
! This program calculates the shortest distance between two points on a 3D surface

PROGRAM shortest_distance

! Define variables 
REAL :: x1, y1, z1, x2, y2, z2     ! coordinates of point 1 and 2
REAL :: distance                  ! shortest distance between the two points
REAL :: surface(3,3)              ! 3D surface to calculate distance on

! Initialize surface with coordinates
surface = RESHAPE( (/0,0,0,  ! coordinates of point 1
                     1,0,0,  ! coordinates of point 2
                     0,1,1/), ! coordinates of point 3
                     (/3,3/) )  ! dimensions of surface

! Prompt user for coordinates of point 1
WRITE(*,*) "Enter the x-coordinate of point 1: "
READ(*,*) x1

WRITE(*,*) "Enter the y-coordinate of point 1: "
READ(*,*) y1

WRITE(*,*) "Enter the z-coordinate of point 1: "
READ(*,*) z1

! Prompt user for coordinates of point 2
WRITE(*,*) "Enter the x-coordinate of point 2: "
READ(*,*) x2

WRITE(*,*) "Enter the y-coordinate of point 2: "
READ(*,*) y2

WRITE(*,*) "Enter the z-coordinate of point 2: "
READ(*,*) z2

! Calculate shortest distance using distance formula
distance = SQRT( (x2-x1)**2 + (y2-y1)**2 + (z2-z1)**2 )

! Loop through surface to find shortest distance
DO i = 1, SIZE(surface,1)       ! loop through rows
    DO j = 1, SIZE(surface,2)   ! loop through columns
        IF ( (surface(i,j,1) == x1 .AND.      &  ! check if point 1 is on surface
              surface(i,j,2) == y1 .AND.
              surface(i,j,3) == z1) .OR.       &
             (surface(i,j,1) == x2 .AND.       &  ! check if point 2 is on surface
              surface(i,j,2) == y2 .AND.
              surface(i,j,3) == z2) ) THEN
             distance_surface = distance      ! set distance_surface as shortest distance on surface
        END IF
    END DO
END DO

! Output shortest distance
WRITE(*,*) "The shortest distance between the two points is: ", distance_surface

END PROGRAM shortest_distance
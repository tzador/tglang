program complex_matrix_multiplication
! This is a FORTRAN program that performs multiplication of two complex matrices.
! It requires the following input:
! 1. The dimensions of the matrices n and m (where n x n and m x m respectively)
! 2. The two complex matrices, A and B, with dimensions of n x n and m x m respectively

! Declaration of variables
integer, parameter :: max_dim = 100 ! maximum dimensions allowed for the matrices
integer :: n, m ! dimensions of the matrices
complex :: A(max_dim,max_dim), B(max_dim,max_dim), C(max_dim,max_dim) ! matrices to be multiplied
integer :: i, j, k ! loop counters

! Get user input for dimensions
print*, "Enter the number of rows/columns for matrix A: "
read*, n
print*, "Enter the number of rows/columns for matrix B: "
read*, m

! Check if dimensions are within max allowable limits
if (n > max_dim .or. m > max_dim) then
  print*, "Error: Matrix dimensions exceed maximum allowed!"
  stop 1
end if

! Get user input for matrices
do i = 1, n
  do j = 1, n
    print*, "Enter the real part of A(", i, ",", j, "): "
    read*, real(A(i,j))
    print*, "Enter the imaginary part of A(", i, ",", j, "): "
    read*, aimag(A(i,j))
  end do
end do

do i = 1, m
  do j = 1, m
    print*, "Enter the real part of B(", i, ",", j, "): "
    read*, real(B(i,j))
    print*, "Enter the imaginary part of B(", i, ",", j, "): "
    read*, aimag(B(i,j))
  end do
end do

! Perform matrix multiplication using looped expressions
do k = 1, m ! loop through columns of A
  do i = 1, n ! loop through rows of A
    do j = 1, m ! loop through columns of B
      C(i,j) = C(i,j) + (real(A(i,k)) * real(B(k,j))) - (aimag(A(i,k)) * aimag(B(k,j))) ! real part
      C(i,j) = C(i,j) + (real(A(i,k)) * aimag(B(k,j))) + (aimag(A(i,k)) * real(B(k,j))) ! imaginary part
    end do
  end do
end do

! Output the results
print*, "The product of A and B is: "
do i = 1, n
  do j = 1, m
    print*, "(" , real(C(i,j)), ",", aimag(C(i,j)), ")" ! print both real and imaginary parts
  end do
end do

end program complex_matrix_multiplication
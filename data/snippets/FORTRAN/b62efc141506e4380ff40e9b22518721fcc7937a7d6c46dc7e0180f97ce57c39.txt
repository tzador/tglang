PROGRAM MAIN
C
C     SETUP DATA
C
      DIMENSION MATRIXA(10,10),MATRIXB(10,10),OUT(10,10),IMATRIX(10,10)
      DO I=1,10
         DO J=1,10
            MATRIXA(I,J)=I*J
            MATRIXB(I,J)=2*I-J
         END DO
      END DO
      DO I=1,10
         DO J=1,10
            OUT(I,J)=0
            IMATRIX(I,J)=0
         END DO
      END DO
C
C     PERFORM MATRIX MULTIPLICATION
C
      DO N=1,10
         DO M=1,10
            DO K=1,10
               OUT(N,M)=OUT(N,M)+MATRIXA(N,K)*MATRIXB(K,M)
            END DO
         END DO
      END DO
C
C     PERFORM INVERSE AND DETERMINANT CALCULATIONS
C
      CALL INV(OUT,IMATRIX,10)
      DET=1.D0
      DO N=1,10
         DET=DET*OUT(N,N)
      END DO
C
C     PRINT RESULTS
C
      PRINT*, "MATRIXA:"
      DO I=1,10
         WRITE(*,101)(MATRIXA(I,J),J=1,10)
      END DO
101   FORMAT(10F8.0)
      PRINT*, "MATRIXB:"
      DO I=1,10
         WRITE(*,101)(MATRIXB(I,J),J=1,10)
      END DO
      PRINT*, "OUT:"
      DO I=1,10
         WRITE(*,101)(OUT(I,J),J=1,10)
      END DO
      PRINT*, "DETERMINANT:", DET
      STOP
      END

      SUBROUTINE INV(A,IA,N)
C
C     CALCULATE INVERSE MATRIX USING GAUSS-JORDAN ELIMINATION
C
      DO I=1,N
         DO J=1,N
            IA(I,J)=0
         END DO
         IA(I,I)=1
      END DO
C
C     ROW OPERATIONS
C
      DO I=1,N
         P=A(I,I)
         DO J=1,N
            A(I,J)=A(I,J)/P
            IA(I,J)=IA(I,J)/P
         END DO
         DO K=1,N
            IF (K.NE.I) THEN
               Q=A(K,I)
               DO J=1,N
                  A(K,J)=A(K,J)-Q*A(I,J)
                  IA(K,J)=IA(K,J)-Q*IA(I,J)
               END DO
            END IF
         END DO
      END DO
      RETURN
      END
program matrix_multiply     ! program to multiply two matrices
    implicit none               ! to avoid unintended typing errors

    integer :: i, j, k          ! loop counters
    integer :: m, n, p          ! dimensions of matrices
    real :: sum                 ! variable for summing elements

    real, dimension(100,100) :: matrix1, matrix2, result    ! define matrices with maximum size of 100 x 100

    print *, "Enter the number of rows for matrix 1:"          ! prompt user for dimensions
    read *, m                                                  ! read in number of rows
    print *, "Enter the number of columns for matrix 1:"       ! prompt user for dimensions
    read *, n                                                  ! read in number of columns

    print *, "Enter the number of rows for matrix 2:"          ! prompt user for dimensions
    read *, n                                                  ! read in number of rows
    print *, "Enter the number of columns for matrix 2:"       ! prompt user for dimensions
    read *, p                                                  ! read in number of columns

    if (m > 100 .or. n > 100 .or. p > 100) then               ! check if dimensions exceed maximum size
        print *, "Dimensions of matrices exceed maximum size of 100 x 100."
        stop
    end if

    print *, "Enter elements for matrix 1 (row-wise):"     ! prompt user to input elements for matrix 1
    do i = 1, m                                           ! loop over rows
        do j = 1, n                                       ! loop over columns
            read *, matrix1(i,j)                           ! read in element
        end do
    end do

    print *, "Enter elements for matrix 2 (row-wise):"     ! prompt user to input elements for matrix 2
    do i = 1, n                                           ! loop over rows
        do j = 1, p                                       ! loop over columns
            read *, matrix2(i,j)                           ! read in element
        end do
    end do

    do i = 1, m                                           ! loop over rows of result matrix
        do j = 1, p                                       ! loop over columns of result matrix
            sum = 0.0                                     ! initialize sum variable
            do k = 1, n                                   ! loop over columns of matrix 1, rows of matrix 2
                sum = sum + matrix1(i,k) * matrix2(k,j)   ! calculate dot product of corresponding rows/columns
            end do
            result(i,j) = sum                             ! assign sum to corresponding element in result matrix
        end do
    end do

    print *, "Result matrix:"                              ! print out result matrix
    do i = 1, m
        do j = 1, p
            print *, result(i,j)
        end do
    end do

    contains                                               ! optional contains section for subroutines and functions

        ! subroutine to print out matrix
        subroutine print_matrix(matrix, rows, columns)     ! pass in matrix, number of rows and columns
            implicit none
            real, dimension(rows,columns), intent(in) :: matrix  ! use intent(in) to specify input parameter in subroutine
            integer, intent(in) :: rows, columns                 ! specify data type and intent of parameters
            integer :: i, j                                      ! loop counters
            do i = 1, rows                                      ! loop over rows of matrix
                do j = 1, columns                                ! loop over columns of matrix
                    print *, matrix(i,j)                          ! print out elements of matrix
                end do
            end do
        end subroutine print_matrix

    end program matrix_multiply                             ! end of program
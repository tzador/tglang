! This program calculates the eigenvalues of a symmetric tridiagonal matrix
implicit none
integer :: n, i, j
real(kind=8) :: a, b, c, s, norm, ax, cx, discr
real(kind=8), allocatable :: mat(:,:), eigvals(:)

! Get input for size of matrix
print *, "Enter the size of the matrix:"
read *, n

! Allocate memory for matrix and eigenvalues
allocate(mat(n, n))
allocate(eigvals(n))

! Get input for first row of matrix
print *, "Enter the first row of the matrix:"
read *, a, b

! Set first row of matrix
mat(1, 1) = a
mat(1, 2) = b

! Set first value of eigenvalues
eigvals(1) = a

! Loop through remaining rows of matrix
do i = 2, n
  ! Get input for constants a, b, c
  print *, "Enter the constants a, b, c for row", i, ":"
  read *, a, b, c
  
  ! Set values in matrix
  mat(i, i-1) = a
  mat(i, i) = b
  mat(i, i+1) = c
  
  ! Calculate norm
  norm = sqrt(a**2 + b**2 + c**2)
  
  ! Check if norm is zero
  if (norm == 0) then
    ! Set next eigenvalue to be max value of previous eigenvalues + 1
    eigvals(i) = eigvals(i-1) + 1
  else
    ! Calculate cosine and sine values
    ax = a/norm
    cx = c/norm
    s = b/norm
    
    ! Calculate discriminant
    discr = sqrt((ax-cx)**2 + 4*s**2)
    
    ! Calculate eigenvalues using quadratic formula
    eigvals(i) = (ax+cx)/2 + sign(1, s) * discr/2
  end if
end do

! Print out eigenvalues
print *, "The eigenvalues are:"
do j = 1, n
  print *, eigvals(j)
end do

! Deallocate memory
deallocate(mat)
deallocate(eigvals)

end
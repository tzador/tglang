! This is a program that calculates the multiple roots of a polynomial
! where the starting point for the roots is x = 1
program calculate_roots
implicit none
real*8, dimension(10) :: coefficients ! array to store coefficients of polynomial
real*8, dimension(10) :: roots ! array to store calculated roots of polynomial
integer :: degree ! variable to store degree of polynomial
real*8 :: x ! variable to store starting point for root calculations
integer :: i, j ! loop counters
 
! Ask user to input degree of polynomial
print *, "Enter the degree of the polynomial (max 10): "
read *, degree
 
! Ask user to input coefficients of polynomial
print *, "Enter the coefficients of the polynomial (highest degree first):"
do i = 0, degree
    read *, coefficients(i+1)
end do
 
x = 1.0 ! assign starting point
 
! Use nested do loops to calculate roots for each degree of the polynomial
do i = 0, degree
    roots(i+1) = x ! assign first root as starting point
    do j = 1, 20
        ! update root approximation using Newton's method
        roots(i+1) = roots(i+1) - poly_func(roots(i+1), degree, coefficients)/poly_diff_func(roots(i+1), degree-1, coefficients)
    end do
    x = roots(i+1) ! assign updated root as new starting point
end do
 
! Print calculated roots
do i = 0, degree
    print *, "Root ", i+1, " = ", roots(i+1)
end do
 
contains
 
! Function to calculate polynomial value at x
function poly_func(x, degree, coefficients)
implicit none
real*8 :: x
real*8, dimension(10) :: coefficients
integer :: degree
integer :: i
real*8 :: poly_value
 
poly_value = 0.0 ! initialize polynomial value
do i = 0, degree
    poly_value = poly_value + coefficients(i+1)*x**i ! add term to polynomial value
end do
 
poly_func = poly_value ! return polynomial value
end function
 
! Function to calculate derivative of polynomial at x
function poly_diff_func(x, degree, coefficients)
implicit none
real*8 :: x
real*8, dimension(10) :: coefficients
integer :: degree
integer :: i
real*8 :: poly_value
 
poly_value = 0.0 ! initialize polynomial value
do i = 0, degree
    poly_value = poly_value + i*coefficients(i+1)*x**(i-1) ! add term to polynomial value
end do
 
poly_diff_func = poly_value ! return derivative of polynomial
end function
 
end program calculate_roots
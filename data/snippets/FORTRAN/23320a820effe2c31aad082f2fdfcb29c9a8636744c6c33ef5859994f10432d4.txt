SUBROUTINE SOLVE(EQ, X, Y, Z)
    ! This subroutine solves a system of three linear equations
    ! using Gaussian elimination method
    IMPLICIT NONE
    REAL :: EQ(3, 3), X(3), Y(3), Z(3), SOL(3)
    INTEGER :: I, J, K, P, N

    N = 3 ! number of equations and unknowns
    P = 4 ! number of columns in augmented matrix
    
    IF (EQ(N, N) == 0.0) THEN ! check if last element in matrix is zero
        STOP "Invalid matrix!"
    END IF

    DO I = 1, N ! loop through rows
        DO J = I+1, N ! loop through rows below diagonal
            EQ(J, :) = EQ(J, :) - EQ(J, I) / EQ(I, I) * EQ(I, :)
        END DO
    END DO

    DO I = N, 1, -1 ! loop backwards through rows
        SOL(I) = EQ(I, P) / EQ(I, I)
        DO J = I-1, 1, -1 ! loop backwards through rows above diagonal
            EQ(J, :) = EQ(J, :) - EQ(J, I) / EQ(I, I) * EQ(I, :)
        END DO
    END DO

    X = SOL(1:N) ! assign solution to X array
    Y = SOL(N+1:2*N) ! assign solution to Y array
    Z = SOL(2*N+1:3*N) ! assign solution to Z array

END SUBROUTINE SOLVE

! Example code to use subroutine
PROGRAM MAIN
    IMPLICIT NONE
    REAL :: EQ(3, 3), X(3), Y(3), Z(3)

    ! initialize coefficients of equations
    EQ = RESHAPE(/1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0/, (/3, 3/))

    CALL SOLVE(EQ, X, Y, Z) ! call the subroutine to solve the system of equations

    ! print the solutions
    WRITE(*,*) "Solution for X: ", X
    WRITE(*,*) "Solution for Y: ", Y
    WRITE(*,*) "Solution for Z: ", Z

END PROGRAM MAIN
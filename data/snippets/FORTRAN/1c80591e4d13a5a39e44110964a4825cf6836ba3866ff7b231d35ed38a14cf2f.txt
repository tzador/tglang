program exponential_integrator

    implicit none

    ! This program uses an exponential integration method to solve a system of first-order ODEs.
    
    ! Define parameters and variables
    real, parameter :: initial_time = 0.0 ! initial time
    real, parameter :: final_time = 10.0 ! final time
    real, parameter :: delta_t = 0.01 ! time step
    integer, parameter :: num_steps = nint((final_time - initial_time)/delta_t) ! number of time steps
    real :: t ! current time
    real :: y(num_steps, 2) ! solution array
    real :: y_prime(2) ! derivative of solution
    real, parameter :: k = 0.1 ! constant used in derivative
    
    ! Set initial conditions
    t = initial_time ! set current time to initial time
    y(1,:) = (/1.0, 0.0/) ! set initial values of y
    y_prime = (/1.0, 0.0/) ! set initial values of yprime
    
    ! Begin main loop
    do i = 1, num_steps
        
        ! Calculate new solution
        y(i+1,:) = matmul(expm(k*delta_t), y(i,:) + delta_t*y_prime) ! Exponential integration method
        t = t + delta_t ! increment current time
        y_prime = (/y(i+1,2), -k*y(i+1,1)/) ! calculate derivative of solution at new time
        
    end do
    
    ! Output solution to text file
    open(unit=10, file="solution.txt", status="replace") ! open file
    do i = 1, num_steps+1 ! loop over solution array
        write(10,*) t, y(i,:) ! write current time and solution values to file
        t = t + delta_t ! increment current time (used for output only)
    end do
    close(unit=10) ! close file

end program exponential_integrator
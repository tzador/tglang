PROGRAM gauss_legendre

  INTEGER :: n, max_iters, i, j
  REAL :: error, residual, tol, temp
  REAL :: a(100,100), b(100), x(100), r(100), z(100), p(100), y(100)
  REAL :: alpha, beta, gamma, eta, denom, numer

  ! Initialize parameters
  n = 100                 ! Size of linear system
  max_iters = 100         ! Maximum number of iterations
  tol = 1e-6              ! Error tolerance

  ! Pre-compute coefficients for Gauss-Legendre quadrature
  alpha = 1.0
  beta = 0.0
  gamma = 1.0
  denom = 2.0 * gamma
  numer = 1.0

  ! Initialize matrix A and vector b
  DO i = 1, n
    DO j = 1, n
      ! Use Gauss-Legendre formula to set values of A
      temp = (numer / denom) * ((2*(j-1)+1-alpha)*gamma*gamma - (j-1)*beta)
      a(i,j) = 1.0 / (i+j-1+temp)

      ! Set values of b
      b(i) = i + j
    END DO
  END DO

  ! Set initial guess for solution
  DO i = 1, n
    x(i) = 0.0
  END DO

  ! Calculate initial residual
  DO i = 1, n
    r(i) = b(i)
    DO j = 1, n
      r(i) = r(i) - a(i,j)*x(j)
    END DO
  END DO

  ! Begin iterative method
  DO k = 1, max_iters
    ! Calculate z vector
    DO i = 1, n
      z(i) = 0.0
      DO j = 1, n
        z(i) = z(i) + a(i,j) * r(j)
      END DO
    END DO

    ! Calculate alpha and gamma for next iteration
    alpha = 0.0
    gamma = 0.0
    DO i = 1, n
      alpha = alpha + r(i) * z(i)
      gamma = gamma + z(i) * z(i)
    END DO

    ! Calculate new solution vector
    eta = alpha / denom
    DO i = 1, n
      x(i) = x(i) + eta * r(i)
    END DO

    ! Calculate new residual vector
    beta = 1.0 / gamma
    DO i = 1, n
      y(i) = 0.0
      DO j = 1, n
        y(i) = y(i) + a(i,j) * z(j)
      END DO

      ! Update residual using new alpha, beta, and z vector
      r(i) = b(i) - y(i) - beta * r(i) * z(i)
    END DO

    ! Calculate error and check convergence
    error = 0.0
    DO i = 1, n
      error = error + r(i) * r(i)
    END DO
    error = SQRT(error)

    IF (error < tol) THEN
      PRINT *, "Converged after ", k, " iterations."
      EXIT
    END IF

  END DO

  ! If code reaches this point, solution did not converge
  PRINT *, "Solution did not converge after ", k, " iterations."

END PROGRAM gauss_legendre
PROGRAM Newton
! This program uses Newton's method to find the root of a given equation
! The equation can be changed by modifying the function f
  REAL FUNCTION f(x)
  ! This function defines the equation f(x) that we want to find the root of
   f = x**3 - 2*x + 1
  END FUNCTION f
  REAL FUNCTION f_prime(x)
  ! This function defines the derivative of f(x), which is used in Newton's method
   f_prime = 3*x**2 - 2
  END FUNCTION f_prime

  INTEGER :: i, max_iter
  REAL :: x0, x1, x2, tol, err

  max_iter = 100 ! Maximum number of iterations
  tol = 1e-5 ! Tolerance for error
  x0 = 1.0 ! Initial guess for the root

  DO i = 1, max_iter
    x1 = x0 - f(x0)/f_prime(x0) ! Newton's method equation
    err = ABS(x1 - x0) ! Calculate the error between the current and previous approximation
    IF (err < tol) THEN
      EXIT ! If the error is below the tolerance, stop iterating
    END IF
    x0 = x1 ! Update the previous approximation to the current approximation
  END DO

  x2 = x0
  WRITE(*,*) 'The root of the equation is: ', x2 ! Output the final approximation for the root
END PROGRAM Newton
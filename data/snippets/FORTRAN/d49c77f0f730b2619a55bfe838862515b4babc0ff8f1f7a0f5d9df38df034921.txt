SUBROUTINE INTEGRAL(X, A, B, N, RESULT)
    IMPLICIT NONE
    INTEGER :: N, I
    REAL :: X, A, B, H, SUM
    EXTERNAL :: FUNC

    H = (B - A) / REAL(N)
    SUM = 0.0

    DO I = 1, N
        X = A + (2*I - 1) * H / 2.0
        SUM = SUM + FUNC(X)
    END DO

    RESULT = H * SUM

    RETURN
END SUBROUTINE

FUNCTION FUNC(X)
    IMPLICIT NONE
    REAL :: X, FUNC

    FUNC = EXP(X) * SIN(X) * (1.0 - X)

    RETURN
END FUNCTION

! This program calculates the value of integral using the composite trapezoidal rule.
! The subroutine INTEGRAL calculates the approximation of the integral of the function FUNC
! over the interval [a, b] using n subintervals.
! The result is stored in the variable RESULT.

PROGRAM INTEGRAL_CALCULATION
    IMPLICIT NONE
    INTEGER :: N, I
    REAL :: A, B, RESULT
    EXTERNAL :: INTEGRAL

    ! Define the parameters
    A = 0.0     ! Lower limit of the interval
    B = 2.0     ! Upper limit of the interval
    N = 100     ! Number of subintervals

    ! Call the subroutine to calculate the integral
    CALL INTEGRAL(A, B, N, RESULT)

    ! Print the result
    PRINT*, "The value of the integral is: ", RESULT

END PROGRAM
C This program solves the Laplace equation in 2 dimensions
 
 program laplace
 
 implicit none
 integer :: i, j, it = 1000, n = 20
 real :: epsilon = 1e-6, dx, dy, diff, x, y, xsize = 1.0, ysize = 1.0, tol
 
 character(len=100) :: filename = 'laplace_solution.txt'
 
 real, dimension(0:n+1, 0:n+1) :: phi, phi_new, rhs
 
 dx = xsize/n
 dy = ysize/n
 
 ! Initialize boundary values
 phi(0,:) = 0.0
 phi(n+1,:) = 0.0
 phi(:,0) = 0.0
 phi(:,n+1) = 0.0
 
 ! Initialize initial guess
 phi(1:n,1:n) = 1.0
 
 ! Main loop to solve Laplace equation
 
 do it = 1, it
 
 ! Calculate RHS of Laplace equation
 rhs(1:n,1:n) = (-4.0*phi(1:n,1:n) + phi(2:n+1, 1:n) + phi(0:n-1, 1:n) &
 & + phi(1:n, 2:n+1) + phi(1:n, 0:n-1))/dx**2
 
 ! Update solution using Jacobi iteration method
 do j = 1, n
 do i = 1, n
 phi_new(i,j) = (phi(i+1,j) + phi(i-1,j) + phi(i,j+1) + phi(i,j-1) &
 & + dx*dx*rhs(i,j))/4.0
 end do
 end do
 
 ! Calculate difference between old and new solution
 diff = maxval(abs(phi_new - phi))
 
 ! Check for convergence
 if (diff < epsilon) then
 write(*,*) 'Solution converged in', it, 'iterations.'
 write(*,*) 'Final difference =', diff
 exit
 end if
 
 ! Update solution
 phi = phi_new
 
 end do
 
 ! Write solution to file
 open(1, file=filename, status='replace')
 do j = 0, n+1
 do i = 0, n+1
 y = dy*j
 x = dx*i
 write(1,*) x, y, phi(i,j)
 end do
 end do
 
 close(1)
 
 end program laplace
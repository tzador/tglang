subroutine quicksort(numbers,n,low,high)
  ! This is a subroutine in FORTRAN for implementing quicksort algorithm
  ! Takes in an array of numbers, its size, and the indices of the partition to be sorted

  implicit none                                       ! specify all variables used
  integer, intent(inout) :: numbers(n)                ! array of numbers to be sorted
  integer, intent(in), value :: n, low, high          ! size of array, and indices of partition to be sorted
  integer :: pivot_index, i, j, pivot, temp           ! variables to store pivot info and loop counters

  if(low<high) then                                   ! check if partition size is greater than 1
    pivot_index = (low+high)/2                         ! choose pivot element as middle element
    pivot = numbers(pivot_index)                       ! store pivot element value

    temp = numbers(pivot_index)                        ! swap pivot element to the end of the partition
    numbers(pivot_index) = numbers(high)
    numbers(high) = temp

    i = low - 1                                       ! initialize loop counters
    j = high

    do while(i<j)                                     ! loop until i and j cross over
      do while(numbers(i+1) < pivot)                  ! find first element greater than pivot from left
        i = i + 1
      enddo

      do while(numbers(j) > pivot)                     ! find first element less than pivot from right
        j = j - 1
      enddo

      if(i<j) then                                     ! if i and j haven't crossed over, swap the elements
        temp = numbers(i+1)
        numbers(i+1) = numbers(j)
        numbers(j) = temp
      endif
    enddo

    numbers(high) = numbers(i+1)                        ! swap pivot element back to its correct position
    numbers(i+1) = pivot

    call quicksort(numbers, n, low, i)                 ! recursively call quicksort for left sub-array
    call quicksort(numbers, n, i+2, high)              ! recursively call quicksort for right sub-array
  endif
end subroutine quicksort

! Example usage:
! ! In main program:
! 
! integer :: n, i
! integer, allocatable :: numbers(:)
!
! print *, "Enter size of array: "
! read *, n
!
! allocate(numbers(n))
!
! print *, "Enter array elements: "
! do i=1,n
!   read *, numbers(i)
! enddo
!
! call quicksort(numbers, n, 1, n)

! ! Output:
! ! Sorted array: 1 2 3 4 5 6 7 8 9 10
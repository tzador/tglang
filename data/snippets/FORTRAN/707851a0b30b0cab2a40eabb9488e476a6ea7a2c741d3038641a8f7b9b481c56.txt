program tri_diag
	implicit none
	integer n,i,j,k,p,q,r,s,iter,maxiter
	real*8 a(50,50),b(50),c(50),r(50),sg(50),d(50),f(50),g(50),h(50),d1(50),dd(50)
	
	! This program solves a tridiagonal system of equations using the symmetric matrix algorithm
	
	! Input the size of the system and maximum number of iterations
	n = 50
	maxiter = 1000
	
	! Set up the initial guess for the solution vector
	do i = 1,n
		x(i) = 0.0
	end do
	
	! Input the elements of the tridiagonal matrix
	! a(i,j) represents the diagonal element at row i and column j
	! b(i) represents the sub-diagonal element at row i
	! c(i) represents the super-diagonal element at row i
	
	do i = 1,n
		a(i,i) = 8.0
		b(i) = -1.0
		c(i) = -1.0
	end do
	
	! Set the residual vector
	do i = 1,n
		r(i) = b(i)
		do j = 1,n
			r(i) = r(i) - a(i,j)*x(j)
		end do
	end do
	
	iter = 0
	outer: do
		
		! Calculate the initial guess for the solution vector using the residual vector
		do i = 1,n
			d(i) = r(i)
		end do
		
		! Calculate the diagonals of the symmetric matrix
		do i = 1,n
			do j = i,n
				h(i,j) = a(i,j)
				g(i,j) = a(i,j)
			end do
		end do
		
		! Calculate the upper and lower diagonals of the symmetric matrix
		do i = 1,n
			d1(i) = 0.0
			do j = 1,i
				d1(i) = d1(i) + h(j,i)*d(j)
			end do
			do j = 1,i-1
				d1(i) = d1(i) + g(i,j)*d(j)
			end do
		end do
		
		! Calculate the new solution vector
		do i = 1,n
			dd(i) = d1(i)/a(i,i)
			x(i) = x(i) + dd(i)
		end do
		
		! Calculate the new residual vector
		do i = 1,n
			f(i) = r(i)
			do j = 1,n
				f(i) = f(i) - b(i)*dd(i)
			end do
		end do
		
		! Check for convergence
		sg(1) = f(1)
		do i = 2,n
			if(f(i)/sg(i-1) > 1e-8) then
				iter = iter + 1
				if(iter <= maxiter) then
					cycle outer
				else
					stop
				end if
			end if
			sg(i) = f(i)
		end do
		
		! Update the residual vector
		do i = 1,n
			r(i) = f(i)
		end do
	end do outer
	
	! Print the solution vector and the number of iterations
	write (*,*) "Solution vector:"
	do i = 1,n
		write(*,*) x(i)
	end do
	write (*,*) "Number of iterations:"
	write(*,*) iter
	
end program tri_diag
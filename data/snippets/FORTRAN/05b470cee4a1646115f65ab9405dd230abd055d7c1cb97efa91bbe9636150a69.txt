! This program calculates the determinant of a square matrix using Gauss-Jordan elimination method
program determinant

    implicit none
    
    integer :: i, j, n, flag
    real :: a(10,10), temp, det
    
    print *, "Enter the size of the square matrix:"
    read *, n
    
    ! Check if the matrix is of proper size
    if (n > 10) then
        print *, "Error: Maximum matrix size allowed is 10x10"
        stop
    end if
    
    ! Read in the elements of the matrix
    print *, "Enter the elements of the matrix:"
    do i = 1, n
        do j = 1, n
            read *, a(i,j)
        end do
    end do
    
    ! Print the original matrix
    print *, "The original matrix is:"
    do i = 1, n
        do j = 1, n
            print *, a(i,j)
        end do
    end do
    
    ! Perform Gauss-Jordan elimination 
    flag = 0
    do i = 1, n
        ! Check for zero pivot
        if (a(i,i) == 0) then
            ! Swap rows with the row below it
            do j = 1, n
                temp = a(i,j)
                a(i,j) = a(i+1,j)
                a(i+1,j) = temp
            end do
            flag = 1 ! Set flag to indicate that a row swap was performed
        end if
        ! Reduce all elements in the current column to zero except the element in the current row
        do j = 1, n
            if (j /= i) then
                temp = a(j,i)/a(i,i)
                do k = 1, n
                    a(j,k) = a(j,k) - temp*a(i,k)
                end do
            end if
        end do
        ! Check for singularity
        if (a(i,i) == 0) then
            flag = -1 ! Set flag to indicate that matrix is singular
            exit ! Exit loop
        end if
    end do
    
    ! Calculate the determinant
    det = 1.0
    do i = 1, n
        det = det*a(i,i)
    end do
    
    ! Print the determinant or an error message if matrix is singular
    if (flag == -1) then
        print *, "Error: Matrix is singular, determinant cannot be calculated"
    else
        print *, "The determinant of the matrix is:", det
    end if
    
end program determinant
subroutine LU_decomposition(mat, n)
    ! A subroutine in FORTRAN for LU decomposition

    ! Declaration of variables
    dimension mat(n, n) ! declaring a square matrix
    dimension l(n, n) ! matrix for lower triangular components
    dimension u(n, n) ! matrix for upper triangular components
    dimension p(n,n) ! matrix for permutation of rows
    integer i, j, k, pivotindex, perm
    real pivot, factor

    ! Loop for setting initial values for permutation matrix
    do i = 1, n
        do j = 1, n
            if (i == j) then
                p(i,j) = 1.0 ! setting diagonal elements as 1
            else
                p(i,j) = 0.0 ! setting all other elements as 0
            end if
        end do
    end do

    ! Outer loop to iterate through columns
    do k = 1, n - 1
        pivotindex = k ! initializing pivotindex to current column
        pivot = abs(mat(k,k)) ! initializing pivot to first element in current column

        ! Inner loop to find the pivot element
        do i = k + 1, n
            if (abs(mat(i,k)) > pivot) then ! checking if element is greater than current pivot
                pivot = abs(mat(i,k)) ! updating pivot
                pivotindex = i ! updating pivotindex
            end if
        end do

        ! Swapping rows in permutation matrix
        do j = 1, n
            perm = p(k,j)
            p(k,j) = p(pivotindex,j)
            p(pivotindex,j) = perm
        end do

        ! Swapping rows in original matrix
        do j = 1, n
            perm = mat(k,j)
            mat(k,j) = mat(pivotindex,j)
            mat(pivotindex,j) = perm
        end do

        ! Calculating factor for current pivot column
        factor = 1 / mat(k,k)

        ! Setting lower triangular elements
        do i = k + 1, n
            l(i,k) = mat(i,k) * factor
        end do

        ! Setting upper triangular elements
        do j = k + 1, n
            u(k,j) = mat(k,j)
        end do

        ! Updating original matrix
        do i = k + 1, n
            do j = k + 1, n
                mat(i,j) = mat(i,j) - (l(i,k) * u(k,j))
            end do
        end do
    end do

    ! Printing results
    write(*,*) "The original matrix:"
    do i = 1, n
        do j = 1, n
            write(*,*) mat(i,j)
        end do
    end do
    write(*,*)
    write(*,*) "The lower triangular matrix:"
    do i = 1, n
        do j = 1, n
            write(*,*) l(i,j)
        end do
    end do
    write(*,*)
    write(*,*) "The upper triangular matrix:"
    do i = 1, n
        do j = 1, n
            write(*,*) u(i,j)
        end do
    end do
    write(*,*)
    write(*,*) "The permutation matrix:"
    do i = 1, n
        do j = 1, n
            write(*,*) p(i,j)
        end do
    end do
end subroutine
!* This code snippet is a subroutine that calculates the determinant
subroutine determinant(A,n,det)
implicit none
!* Define input matrix A with dimension n x n
real*8, intent(in) :: A(n,n)
!* Define output determinant 'det' as real number
real*8, intent(out) :: det
real*8 :: temp(n,n), mult(n)
integer :: i, j, k, sign

!* Initialize determinant and temporary matrix
det = 1.0
temp = A

!* Loop through rows of matrix
do i = 1, n
   sign = 1
   mult = A(i,:)

   !* Loop through columns of matrix
   do j = 1, n
      !* If pivot element is 0, swap row with rows below
      if (temp(j,j) == 0.0) then
         do k = j+1, n
            if (temp(k,j) /= 0.0) then
               temp(j,:) = temp(j,:) + temp(k,:)
               mult = -mult
               exit
            end if
         end do
      end if
      !* Perform Gaussian elimination
      mult = mult / temp(j,j)
      temp(j,:) = temp(j,:) * mult
      if (j > i) then
         temp(j,:) = temp(j,:) - temp(i,:)
      end if
   end do
   !* Update determinant with sign and pivot element
   det = det * mult * temp(i,i)
end do
end subroutine determinant
program matrix_multiplication
! This program performs matrix multiplication of two matrices.
! It takes in user input for the dimensions of the matrices.
! The matrices are then filled with random integers and multiplied.
! The result is printed to the screen.

implicit none
! Declaring variables for dimensions and matrices
integer :: rows1, columns1, rows2, columns2
real, dimension(:,:), allocatable :: matrix1, matrix2, result

! Getting user input for dimensions
print*, "Enter dimensions for first matrix: "
read*, rows1, columns1

print*, "Enter dimensions for second matrix: "
read*, rows2, columns2

! Allocating memory for the matrices
allocate(matrix1(rows1, columns1), matrix2(rows2, columns2), result(rows1, columns2))

! Initializing random number generator
call srand(0)

! Filling first matrix with random integers
do i = 1, rows1
  do j = 1, columns1
    matrix1(i,j) = randint()
  end do
end do

! Filling second matrix with random integers
do i = 1, rows2
  do j = 1, columns2
    matrix2(i,j) = randint()
  end do
end do

! Performing matrix multiplication
do i = 1, rows1
  do j = 1, columns2
    do k = 1, columns1
      result(i,j) = result(i,j) + matrix1(i,k) * matrix2(k,j)
    end do
  end do
end do

! Printing result to screen
print*, "Result of matrix multiplication: "
do i = 1, rows1
  do j = 1, columns2
    print*, result(i,j)
  end do
end do

! Deallocating memory
deallocate(matrix1, matrix2, result)

contains
! Function to generate random integers
integer function randint()
  real :: r
  call random_number(r)
  randint = int(r * 10)
end function randint

end program matrix_multiplication
!-------------------------------------------------------------------------
!     This program solves the heat conduction equation using a
!     finite difference method and plot the results as a contour plot
!--------------------------------------------------------------------------
      program heat_conduction

!     Specify number of grid points for x and y directions
      integer nx, ny
      nx = 100
      ny = 100

!     Specify grid spacing
      real dx,dy
      dx = 0.1
      dy = 0.1

!     Define grid boundary conditions
      real x0, x1, y0, y1
      x0 = 0.0
      x1 = 10.0
      y0 = 0.0
      y1 = 10.0

!     Specify thermal conductivity and specific heat
      real k, cp
      k = 0.5 
      cp = 1000.0 

!     Define the 2D arrays for temperature, time and the finite difference
      real, dimension(nx,ny) :: temperature, temperature_final
      real :: time, dt

!     Set initial temperature distribution
      do i=1,nx
         do j=1,ny
            temperature(i,j) = 100.0
         end do
      end do

!     Set simulation time and time step
      time = 0.0
      dt = 0.001

!     Specify the number of time steps
      integer nsteps
      nsteps = 100

!     Begin time-stepping loop
      do n=1,nsteps

!        Calculate the finite difference for each grid point
         do i=2,nx-1
            do j=2,ny-1
               temperature_final(i,j) = temperature(i,j) + (k*dt/dx**2) * &
                                       (temperature(i+1,j) + temperature(i-1,j) - &
                                       2*temperature(i,j)) + &
                                      (k*dt/dy**2) * (temperature(i,j+1) + &
                                       temperature(i,j-1) - 2*temperature(i,j))
            end do
         end do

!        Apply boundary conditions
!        Left boundary
         do j=2,ny-1
            temperature_final(1,j) = temperature_final(2,j)
         end do
!        Right boundary
         do j=1,ny-1
            temperature_final(nx,j) = temperature_final(nx-1,j)
         end do
!        Bottom boundary
         do i=1,nx
            temperature_final(i,1) = temperature_final(i,2)
         end do
!        Top boundary
         do i=1,nx
            temperature_final(i,ny) = temperature_final(i,ny-1)
         end do

!        Update the temperature array
         temperature = temperature_final

!        Update time
         time = time + dt

      end do

!     Plot the final temperature distribution as a contour plot
      contourf(temperature, x0, x1, y0, y1)

!---------------------------------------------------------------------------
end program heat_conduction
!---------------------------------------------------------------------------
! Subroutine that calculates the determinant of a matrix

subroutine determinant(n, a, det)
implicit none

! Inputs:
integer, intent(in) :: n                   ! size of the matrix
real, dimension(n,n), intent(in) :: a      ! square matrix

! Outputs:
real, intent(out) :: det                   ! determinant of the matrix

! Internal variables:
integer :: i, j, k, ip, jp, jm
real :: temp, factor

! Finding the determinant using Gaussian elimination
det = 1.0     ! Initializing determinant to 1
do k = 1, n
    ip = k     ! Keeping track of pivot row
    jp = k     ! Keeping track of pivot column
    ! Finding the pivot row with largest absolute value
    do i = k, n
        do j = k, n
            if (abs(a(i,j)) > abs(a(ip,jp))) then
                ip = i
                jp = j
            end if
        end do
    end do
    ! Swapping pivot row with current row if necessary
    if (ip /= k) then
        do j = 1, n
            temp = a(k,j)
            a(k,j) = a(ip,j)
            a(ip,j) = temp
        end do
        det = -det     ! Multiplying determinant by -1 for each row swap
    end if
    ! Swapping pivot column with current column if necessary
    if (jp /= k) then
        do i = 1, n
            temp = a(i,k)
            a(i,k) = a(i,jp)
            a(i,jp) = temp
        end do
        det = -det     ! Multiplying determinant by -1 for each column swap
    end if
    ! Calculating determinant using row operations
    do jm = k+1, n
        factor = a(jm,k) / a(k,k)
        do j = k+1, n
            a(jm,j) = a(jm,j) - factor * a(k,j)
        end do
    end do
    det = det * a(k,k)     ! Multiplying determinant by the pivot value
end do

end subroutine determinant
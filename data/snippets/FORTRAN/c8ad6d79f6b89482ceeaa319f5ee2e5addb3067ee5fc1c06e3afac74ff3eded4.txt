! This is a comment line in FORTRAN
program fibonacci
! This program calculates the first 20 Fibonacci numbers using recursion
    implicit none
    integer :: n, i

    ! First, we declare the variables
    ! `n` will be the maximum number of terms to calculate
    ! `i` will be a counter variable
    
    n = 20
    ! We set `n` equal to 20, the number of Fibonacci terms we want to calculate
    
    do i = 0, n-1
    ! Loop from 0 to n-1, as we want to calculate the first n terms
        print *, 'The ', i+1, 'th term in the Fibonacci sequence is: ', fibonacci(i)
        ! We print out the ith term in the Fibonacci sequence
    end do
   
    contains

    recursive function fibonacci(n) result(fib)          
    ! This is a recursive function that calculates the nth Fibonacci number
        integer :: n, fib
        
        if (n == 0) then
        ! The first Fibonacci number is 0
            fib = 0
        else if (n == 1) then
        ! The second Fibonacci number is 1
            fib = 1
        else
        ! For all other terms, we use recursion to calculate the Fibonacci number
        ! The Fibonacci sequence is defined as: F(n) = F(n-1) + F(n-2)
        ! Therefore, we recursively call the function to calculate the previous two terms and add them together
            fib = fibonacci(n-1) + fibonacci(n-2)
        endif
    end function fibonacci

end program fibonacci
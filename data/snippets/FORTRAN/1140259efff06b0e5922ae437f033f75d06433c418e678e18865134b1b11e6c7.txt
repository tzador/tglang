! This is a sample code snippet in FORTRAN using the Monte Carlo method to calculate pi

program monte_carlo_pi
! This is the name of the program

implicit none
! This statement ensures all variables must be declared before use

integer :: n, i ! Declares 2 integer variables - n and i
real :: x, y ! Declares 2 real variables - x and y
integer, parameter :: NITER = 1000000 ! Sets a parameter NITER to 1000000
real, parameter :: R = 1.0 ! Sets a parameter R to 1.0

real :: pi_estimate ! Declares a real variable to store the estimated value of pi
real :: sum ! Declares a real variable to store the sum of values

! Random number seed
call random_seed() ! Calls the random_seed subroutine to initialize the random number generator
call random_seed(size=n) ! Sets the size of the seed array to n

! loop to generate random points and count the number of points within the circle
do i = 1, NITER
    call random_number(x) ! Generates a random real number between 0 and 1 and assigns it to x
    call random_number(y) ! Generates a random real number between 0 and 1 and assigns it to y

    if (x**2 + y**2 < R) then ! Checks if the point (x,y) is within the circle of radius R
        sum = sum + 1.0 ! Increments the sum by 1.0 if the point is within the circle
    end if
end do

pi_estimate = 4.0*sum/NITER ! Calculates the estimated value of pi using the Monte Carlo method

print*, 'Estimated value of pi = ', pi_estimate ! Prints the estimated value of pi to the screen

end program monte_carlo_pi ! End of the program
! This is a program to solve a system of linear equations

PROGRAM LinearEquationSolver

  IMPLICIT NONE          ! Explicit declarations are required in FORTRAN

  INTEGER :: N           ! N is the number of equations in the system
  REAL :: A(N,N), B(N)    ! A is the coefficient matrix, B is the constant vector
  REAL :: X(N)            ! X is the solution vector


  ! Get input for number of equations
  PRINT *, "Enter the number of equations in the system:"
  READ *, N

  ! Get input for coefficient matrix A
  PRINT *, "Enter the coefficient matrix A:"
  DO I = 1, N
    DO J = 1, N
      READ *, A(I,J)
    END DO
  END DO

  ! Get input for constant vector B
  PRINT *, "Enter the constant vector B:"
  DO I = 1, N
    READ *, B(I)
  END DO

  ! Calculate the solution vector X using the Gaussian elimination method
  DO K = 1, N-1              ! Loop from row 1 to N-1 as last row is already in reduced form
    DO I = K+1, N            ! Start from next row after K
      R = A(I,K)/A(K,K)      ! Ratio between current row and pivot row
      DO J = K, N            ! Reduce all columns from K to N
        A(I,J) = A(I,J) - R*A(K,J)
      END DO
      B(I) = B(I) - R*B(K)   ! Also reduce corresponding element in constant vector
    END DO
  END DO

  ! Back substitution to get the solution vector
  X(N) = B(N)/A(N,N)         ! Last element of solution vector can be directly calculated
  DO I = N-1, 1, -1          ! Loop backwards from second last row to first row
    S = B(I)                 ! Initialize sum S with corresponding element in constant vector
    DO J = I+1, N            ! Loop from I+1 to N and subtract the correct element of X
      S = S - A(I,J)*X(J)
    END DO
    X(I) = S/A(I,I)          ! Divide by pivot element to get final solution vector
  END DO

  ! Print the solution vector
  PRINT *, "The solution vector is:"
  DO I = 1, N
    PRINT *, X(I)
  END DO

  ! End the program
  END
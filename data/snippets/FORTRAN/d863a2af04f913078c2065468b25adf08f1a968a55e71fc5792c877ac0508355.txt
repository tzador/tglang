program Euler  ! Program to approximate the solution of an ODE using Euler's method
    implicit none ! Declaration of variables and their types
    real*8 :: x0      ! initial condition for independent variable
    real*8 :: y0      ! initial condition for dependent variable
    real*8 :: h       ! stepsize
    real*8 :: x       ! independent variable
    real*8 :: y       ! dependent variable
    real*8 :: dydx    ! derivative of dependent variable
    integer :: n      ! number of steps
    real*8 :: xi      ! intermediate variable for x value
    real*8 :: yi      ! intermediate variable for y value
    integer :: i      ! loop counter
    real*8 :: y_exact ! exact solution
    real*8 :: error   ! absolute error
    
    x0 = 0.0    ! assigning initial values
    y0 = 1.0
    h = 0.1
    n = 10
    
    x = x0    ! starting the loop for Euler's method
    y = y0
    
    do i = 1,n  ! looping over number of steps
        dydx = -x**2 + 2*x       ! calculating derivative at current x value
        xi = x + h               ! calculating intermediate x value for next step
        yi = y + h*dydx          ! calculating intermediate y value for next step
        y = y + (h/2)*(dydx + (yi-xi)**2-x**2+2*x)  ! calculating updated value of y using Euler's method
        x = xi                    ! updating x value for next iteration
    end do
    
    y_exact = 1/(1+x)                ! exact solution at current x value
    error = abs(y-y_exact)           ! calculating absolute error
    
    print*, "Approximate solution using Euler's method:", y  ! printing approximate solution
    print*, "Exact solution at the final step:", y_exact      ! printing exact solution
    print*, "Absolute error at the final step:", error        ! printing absolute error
  end program Euler
! This program solves the equation f(x) = 0 using the secant method
!, where f(x) is a user-defined function
! Declaring variables
INTEGER :: i, MAX_ITER
REAL :: x0, x1, x2, f0, f1, f2, TOL

! Setting the initial values for x0, x1, TOL and MAX_ITER
x0 = 1.0
x1 = 2.0
TOL = 0.0001
MAX_ITER = 100

! Defining the user-defined function f(x)
REAL FUNCTION f(x)
   f = x**3 - 4*x**2 + 5 ! f(x) = x^3 - 4x^2 + 5
END FUNCTION f

! Defining the secant method subroutine
SUBROUTINE secant(x0, x1, TOL, MAX_ITER, x2, f0, f1, f2)
   ! Initializing variables
   f0 = f(x0)
   f1 = f(x1)
   i = 2

   ! Beginning iteration
   DO WHILE (i <= MAX_ITER)
      ! Calculating the next approximation of x using the secant method formula
      x2 = x1 - (f1*(x1-x0))/(f1-f0)

      ! Checking if the tolerance has been met
      IF (ABS(f2) < TOL) THEN
         EXIT ! Exit the loop if tolerance is met
      END IF

      ! Updating variables for the next iteration
      x0 = x1
      x1 = x2
      f0 = f1
      f1 = f2

      ! Incrementing the iteration counter
      i = i + 1
   END DO

   ! Printing the final approximation of x
   PRINT*, "The root of the equation is: ", x2
END SUBROUTINE secant

! Calling the secant method subroutine
CALL secant(x0, x1, TOL, MAX_ITER, x2, f0, f1, f2)
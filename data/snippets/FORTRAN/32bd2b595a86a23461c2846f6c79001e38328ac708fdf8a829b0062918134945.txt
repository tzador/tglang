SUBROUTINE LU_DECOM(A,L,M,N)
* A - input matrix, L - output matrix, M - number of rows, N - number of cols
      DIMENSION A(1,1), L(1,1), PIVOT(1), TEMP(1)
* Dimension the arrays required for the algorithm
      DO I=2,M
* Loop over the rows of the input matrix except the first row
        L(I,1) = A(I,1) / A(1,1)
* Calculate the first element of the L matrix
        DO J=2,N
* Loop over the columns of the input matrix except the first column
          TEMP(J) = A(1,J)
* Store the first row of the input matrix in a temporary array
          A(1,J) = A(1,J) - L(I,1) * TEMP(J)
* Update the first row of the input matrix using the first element of the L matrix
        END DO
      END DO
* End of loop over rows
      DO K=2,M
* Loop over the remaining rows of the input matrix
        PIVOT(K) = A(K,K)
* Store the pivot element for the current row
        DO I=K+1,M
* Loop over the remaining rows of the input matrix, starting from the next row after the pivot row
          L(I,K) = A(I,K) / PIVOT(K)
* Calculate the elements of the L matrix below the diagonal
          DO J=K+1,N
* Loop over the remaining columns of the input matrix, starting from the next column after the pivot column
            A(I,J) = A(I,J) - L(I,K) * A(K,J)
* Update the current row of the remaining input matrix using the elements of the L matrix below the diagonal
          END DO
        END DO
      END DO
* End of loop over remaining rows and columns
      DO J=2,N
* Loop over the remaining columns of the input matrix except the first column
        L(1,J) = A(1,J) / PIVOT(1)
* Calculate the first row of the L matrix using the pivot element for the first row
      END DO
* End of loop over remaining columns
      RETURN
* End of subroutine
      END
program newton_raphson
    implicit none
    real :: x0, f, df, epsilon, x, dx, y
    integer :: iter, max_iter
    ! This program implements the Newton-Raphson method for finding the root of a function.
    
    ! Initial Guess
    x0 = 2.0

    ! Function Definition
    f(x) = x**2 - 4

    ! First Derivative Definition
    df(x) = 2*x

    ! Tolerance Level
    epsilon = 1e-6

    ! Maximum Number of Iterations
    max_iter = 100

    ! Initialize iteration counter
    iter = 0

    ! Start iteration loop
    do while (x - x0 > epsilon .and. iter < max_iter)

        ! Calculate next guess using Newton-Raphson formula
        x = x0 - f(x0) / df(x0)

        ! Calculate the change in x
        dx = abs(x - x0)

        ! Update current guess
        x0 = x
        
        ! Increase iteration counter
        iter = iter + 1
    end do

    ! Check if maximum number of iterations reached
    if (iter == max_iter) then
        print *, 'Maximum iterations reached, no solution found!'
    else
        ! Print the root and number of iterations used
        print *, 'Root =', x
        print *, 'Number of iterations =', iter
    end if

end program newton_raphson
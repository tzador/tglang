PROGRAM CONVOLUTION
	!------------------------------!
	! This program performs the    !
	! convolution of two vectors   !
	! using the FFTW library.      !
	!------------------------------!

	!----------------------------!
	! Necessary library includes !
	!----------------------------!
	INCLUDE 'fftw3.f'
	INCLUDE 'fftw3.f03'

	!---------------------!
	! Define program main !
	!---------------------!
	PROGRAM MAIN
		INTEGER :: N, N1, N2, i

		!-----------------------------------!
		! Set the size of the input vectors !
		!-----------------------------------!
		N1 = 10
		N2 = 10

		!-----------------------------------!
		! Allocate memory for input vectors !
		!-----------------------------------!
		COMPLEX :: input1(N1), input2(N2)

		!---------------------------------------------------------------!
		! Initialize input vectors with values ranging from 1 to 10 + i  !
		! Note that this initialization is only for demonstration purposes!
		!---------------------------------------------------------------!
		DO i = 1, N1
			input1(i) = CMPLX(REAL(i), AIMAG(i))
		END DO

		DO i = 1, N2
			input2(i) = CMPLX(REAL(i), AIMAG(i))
		END DO

		!-----------------------------!
		! Define output vector length !
		!-----------------------------!
		N = N1 + N2 - 1

		!--------------------------------------!
		! Allocate memory for output vector    !
		! Note that since the resulting vector !
		! is real, we do not need to use       !
		! complex data type.                   !
		!--------------------------------------!
		REAL :: output(N)

		!------------------------------------------!
		! Perform the convolution using FFTW       !
		! Note that the FFTW library performs the  !
		! convolution in-place, so the resulting   !
		! vector will overwrite the input vectors. !
		!------------------------------------------!
		CALL ZOMPLEX(input1, N1, input2, N2, output, N)

		!-----------------------------!
		! Print the output vector    !
		!-----------------------------!
		PRINT*, "Resulting vector:"
		DO i = 1, N
			PRINT*, output(i)
		END DO

	END PROGRAM MAIN

END PROGRAM CONVOLUTION
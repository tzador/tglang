program numerical_integration
! Program to calculate the integral of a given function using the
! composite trapezoidal rule.

implicit none
integer :: n, i
real :: a, b, h, sum, x
real, dimension(100) :: y
! Define the function to be integrated
real function f(x)
 implicit none

 f = x**2 - 3*x + 5.25 ! Example function: x^2 - 3x +5.25
end function f

! Begin the main program
print *, "Enter the lower limit, a:"
read *, a
print *, "Enter the upper limit, b:"
read *, b
print *, "Enter the number of intervals, n:"
read *, n

h = (b-a)/n ! Calculate the interval size
y(1) = f(a) ! Calculate the function value at the lower limit

! Use a DO loop to calculate the function values at all remaining points
do i = 2, n
  x = a + (i-1)*h
  y(i) = f(x)
end do

! Calculate the final sum using the composite trapezoidal rule
sum = h*(0.5*y(1) + 0.5*y(n)) ! First and last points weighted by 0.5
do i = 2, n-1
  sum = sum + h*y(i)
end do

print *, "The integral of the function is:", sum ! Print the final result
end program numerical_integration
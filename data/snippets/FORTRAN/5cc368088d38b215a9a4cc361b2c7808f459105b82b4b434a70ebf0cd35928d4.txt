! Program to calculate the integral of a function

! Define function to be integrated
function func(x)
    implicit none        ! Declare all variables explicitly
    real, intent(in) :: x    ! Declare input variable as real
    real :: y     ! Declare output variable as real
    y = sin(x) + cos(x)   ! Calculate output value based on input value
end function func
    
! Define variables and parameters
real :: lower_limit, upper_limit, step, integral, x    ! Declare variables as real
integer :: i, num_steps    ! Declare variables as integers
parameter(lower_limit = 0.0, upper_limit = 2.0)       ! Define constant parameters

! Ask user for input
print *, "Enter the number of steps to use in the integration:"
read *, num_steps     ! Read in number of steps from user

! Calculate step size based on number of steps
step = (upper_limit - lower_limit) / num_steps

! Initialize integral value
integral = 0.0

! Loop to calculate integral
do i = 0, num_steps
    x = lower_limit + i * step     ! Calculate input value based on current step
    integral = integral + func(x) * step     ! Update integral value by adding contribution from current step
end do

! Print final result
print *, "The integral of the function is:", integral

! End program
end
>     subroutine solve(A,b,x,n)
      implicit none
      real*8, dimension(n,n) :: A
      real*8, dimension(n) :: b,x
      real*8 :: pivot,temp
      integer :: row, col, k
> # This code snippet is a subroutine for solving systems of linear equations
> # using gaussian elimination method in FORTRAN, the first successful high-level
> # programming language.
> 
>     pivot = 0.0
>     
>     # Loop through rows of matrix A
>     do row = 1, n-1
>         # Find pivot element
>         pivot = abs(A(row,row))
>         do k = row+1, n
>             if (abs(A(k,row)) > pivot) then
>                 pivot = abs(A(k,row))
>                 col = k
>             end if
>         end do
>         
>         # Swap rows if necessary
>         if (col /= row) then
>             do k = 1, n
>                 temp = A(col,k)
>                 A(col,k) = A(row,k)
>                 A(row,k) = temp
>             end do
>             temp = b(col)
>             b(col) = b(row)
>             b(row) = temp
>         end if
>         
>         # Forward elimination
>         do k = row+1, n
>             A(k,row) = -A(k,row)/A(row,row)
>             do col = row+1, n
>                 A(k,col) = A(k,col) + A(row,col)*A(k,row)
>             end do
>             b(k) = b(k) + A(k,row)*b(row)
>         end do
>     end do
>     
>     # Backward substitution
>     x(n) = b(n)/A(n,n)
>     do row = n-1, 1, -1
>         x(row) = b(row)
>         do col = row+1, n
>             x(row) = x(row) - A(row,col)*x(col)
>         end do
>         x(row) = x(row)/A(row,row)
>     end do
> 
> end subroutine solve
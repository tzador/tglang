C**********************************************************************
C This program solves a system of n simultaneous linear
C equations using the Gauss-Jordan elimination algorithm
C*********************************************************************
      PROGRAM gauss_jordan
      IMPLICIT NONE
      INTEGER :: n, i, j, k
      REAL, DIMENSION(:,:), ALLOCATABLE :: A, B, X
!
C Input the number of equations
      WRITE (*,*) 'Enter the number of equations: '
      READ (*,*) n
!
C Allocate memory for A, B and X
      ALLOCATE (A(n,n), B(n,1), X(n,1))
!
C Input the matrix A
      WRITE (*,*) 'Enter the matrix A:'
      DO i = 1, n
         DO j = 1, n
            READ (*,*) A(i,j)
         END DO
      END DO
!
C Input the vector B
      WRITE (*,*) 'Enter the vector B:'
      DO i = 1, n
         READ (*,*) B(i,1)
      END DO
!
C Perform forward elimination
      DO k = 1, n-1
         DO i = k+1, n
            X = A(i,k)/A(k,k)
            DO j = k+1, n
               A(i,j) = A(i,j) - X*A(k,j)
            END DO
            B(i,1) = B(i,1) - X*B(k,1)
         END DO
      END DO
!
C Perform backward substitution
      DO k = n, 1, -1
         X(k,1) = B(k,1)/A(k,k)
         DO i = k-1, 1, -1
            B(i,1) = B(i,1) - A(i,k)*X(k,1)
         END DO
      END DO
!
C Print the solution
      WRITE (*,*) 'The solution is:'
      DO i = 1, n
         WRITE (*,'(A,F6.2)') 'X(',i,') = ', X(i,1)
      END DO
!
      END PROGRAM gauss_jordan
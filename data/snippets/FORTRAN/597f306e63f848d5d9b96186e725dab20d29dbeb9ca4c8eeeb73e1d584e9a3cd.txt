! This is a FORTRAN program that solves a system of linear equations using Gaussian elimination
subroutine solveLinear(a, b, x, n)  
! declare the subroutine inputs: matrix a, vector b, solution vector x, and system size n  
implicit none                 
real, dimension(n, n) :: a      ! declare matrix a as a n by n array of real numbers  
real, dimension(n) :: b, x      ! declare vectors b and x as n element arrays of real numbers  
real :: pivot, temp             ! declare temporary variables for use in pivoting  
integer :: i, j, k              ! declare integer variables for use in loops  
do k = 1,n                      ! loop over rows to perform Gaussian elimination  
do i = k+1,n                    ! loop over subsequent rows below current row  
pivot = a(i,k)/a(k,k)           ! calculate pivot value as ratio of current row element to leading element  
do j = k+1,n+1                  ! loop over subsequent columns, including final column for vector b  
a(i,j) = a(i,j) - pivot*a(k,j)  ! apply Gaussian elimination to current row and next column  
end do  
b(i) = b(i) - pivot*b(k)        ! apply Gaussian elimination to corresponding element in vector b  
end do  
end do  
x(n) = b(n)/a(n,n)              ! calculate final element in solution vector  
do i = n-1,1,-1                 ! loop backwards over previous rows  
temp = b(i)                     ! initialize temporary variable to corresponding element in vector b  
do j = i+1,n                    ! loop over subsequent elements in solution vector  
temp = temp - a(i,j)*x(j)       ! calculate sum of remaining elements in solution equation  
end do  
x(i) = temp/a(i,i)              ! calculate final element in solution vector  
end do  
end subroutine solveLinear     ! end of subroutine
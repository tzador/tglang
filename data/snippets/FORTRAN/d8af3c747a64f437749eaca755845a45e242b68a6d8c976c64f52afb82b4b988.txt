PROGRAM QUICKSORT

! This code snippet is an implementation of the QuickSort algorithm in FORTRAN
! It consists of three subroutines: 
! - partition: This subroutine partitions the array into two subarrays 
!   around a pivot element 
! - quickSort: This subroutine recursively calls partition to sort the subarrays 
! - swap: This subroutine swaps two elements in the array
! The program takes an input array and outputs the sorted array

IMPLICIT NONE

! Declare variables
INTEGER :: arr(100), n, i

! Define subroutines
CONTAINS
  
  ! This subroutine partitions an array into two subarrays
  SUBROUTINE partition(A, low, high, pivot, left, right)
    INTEGER, INTENT(INOUT) :: A(:), low, high, pivot
    INTEGER :: temp, left, right
    left = low
    right = high
    
    DO WHILE(left <= right)
      DO WHILE (A(left) < pivot)
        left = left + 1
      END DO
      
      DO WHILE (A(right) > pivot)
        right - right - 1
      END DO
      
      IF (left <= right) THEN
        CALL swap(A, left, right)
        left = left + 1
        right = right - 1
      END IF
    END DO
    RETURN
  END SUBROUTINE partition
  
  ! This subroutine recursively calls partition to sort the subarrays
  SUBROUTINE quickSort(A, low, high)
    INTEGER, INTENT(INOUT) :: A(:), low, high
    INTEGER :: pivot, left, right
    IF (low < high) THEN
      pivot = A((low+high)/2)
      CALL partition(A, low, high, pivot, left, right)
      CALL quickSort(A, low, right)
      CALL quickSort(A, left, high)
    END IF
    RETURN
  END SUBROUTINE quickSort
  
  ! This subroutine swaps two elements in an array
  SUBROUTINE swap(A, i, j)
    INTEGER, INTENT(INOUT) :: A(:), i, j
    INTEGER :: temp
    temp = A(i)
    A(i) = A(j)
    A(j) = temp
    RETURN
  END SUBROUTINE swap

! Main program
WRITE(*, '(A)') 'Enter the number of elements in the array: '
READ(*, *) n
WRITE(*, '(A)') 'Enter the elements of the array: '
DO i = 1, n
  READ(*, *) arr(i)
END DO

CALL quickSort(arr, 1, n)

WRITE(*, '(A)') 'The sorted array is: '
DO i = 1, n
  WRITE(*, '(I3, A)') arr(i), ' '
END DO

END PROGRAM QUICKSORT
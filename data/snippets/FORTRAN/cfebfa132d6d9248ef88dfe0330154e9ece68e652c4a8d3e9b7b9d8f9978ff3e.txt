program interpolation
! This program implements linear interpolation
! of a set of data points

    implicit none

    ! Declare variables
    real :: x(5) ! x-coordinate of data points
    real :: y(5) ! y-coordinate of data points
    real :: x0 ! x-coordinate of interpolation point
    integer :: i ! loop counter
    real :: x_min, x_max ! minimum and maximum x coordinates of data points
    real :: y0 ! y-coordinate of interpolated point
    integer :: index_first, index_last ! indices of nearest data points
    real :: slope ! slope of line passing through nearest data points

    ! Initialize data points
    x = (/1.0, 2.5, 4.0, 5.5, 7.0/)
    y = (/2.0, -5.0, 7.0, 10.0, 12.0/)

    ! Get input from user
    print *, "Enter the x-coordinate of the interpolation point: "
    read *, x0

    ! Find the minimum and maximum x coordinates of data points
    x_min = minval(x)
    x_max = maxval(x)

    ! Check if interpolation point is within the range of data points
    if (x0 < x_min .or. x0 > x_max) then
        print *, "Interpolation point is outside the range of data points"
        stop
    end if

    ! Find the indices of nearest data points
    do i = 1, size(x)
        if (x(i) <= x0) index_first = i
        if (x(i) >= x0) index_last = i
    end do

    ! Calculate slope of line passing through nearest data points
    slope = (y(index_last) - y(index_first)) / (x(index_last) - x(index_first))

    ! Perform linear interpolation
    y0 = y(index_first) + slope * (x0 - x(index_first))

    ! Display results
    print *, "Interpolated y-coordinate at x = ", x0, "is", y0

end program interpolation
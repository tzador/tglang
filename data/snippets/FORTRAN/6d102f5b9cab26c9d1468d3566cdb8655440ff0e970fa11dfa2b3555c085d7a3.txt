PROGRAM matrix_multiplication
  IMPLICIT NONE                 ! disables implicit conversions
  INTEGER :: i, j, k, n         ! declares variables
  REAL, DIMENSION(:,:), ALLOCATABLE :: A, B, C     ! declares matrices
  print *, "Enter the size of the square matrices:" 
  read *, n                     ! reads in size of matrices from user
  ALLOCATE(A(n,n), B(n,n), C(n,n))       ! allocates memory for matrices
  print *, "Enter the elements of matrix A:"
  do i = 1, n                   ! loop over rows of matrix A
    do j = 1, n                 ! loop over columns of matrix A
      read *, A(i,j)            ! reads in each element from user
    end do
  end do
  print *, "Enter the elements of matrix B:"
  do i = 1, n                   ! loop over rows of matrix B
    do j = 1, n                 ! loop over columns of matrix B
      read *, B(i,j)            ! reads in each element from user
    end do
  end do
  print *, "Matrix A ="
  do i = 1, n                   ! loop over rows of matrix A
    do j = 1, n                 ! loop over columns of matrix A
      write(*, '(F6.2)', advance="no") A(i,j)    ! prints each element
    end do
    print *                      ! prints new line
  end do
  print *, "Matrix B ="
  do i = 1, n                   ! loop over rows of matrix B
    do j = 1, n                 ! loop over columns of matrix B
      write(*, '(F6.2)', advance="no") B(i,j)    ! prints each element
    end do
    print *                      ! prints new line
  end do
  C = 0                         ! initializes matrix C to 0
  do i = 1, n                   ! loop over rows of matrix C
    do j = 1, n                 ! loop over columns of matrix C
      do k = 1, n               ! loop over columns of matrix A/rows of matrix B
        C(i,j) = C(i,j) + A(i,k) * B(k,j)    ! performs matrix multiplication
      end do
    end do
  end do
  print *, "A*B ="
  do i = 1, n                   ! loop over rows of matrix C
    do j = 1, n                 ! loop over columns of matrix C
      write(*, '(F6.2)', advance="no") C(i,j)    ! prints each element
    end do
    print *                      ! prints new line
  end do
  DEALLOCATE(A, B, C)           ! deallocates memory for matrices
END PROGRAM matrix_multiplication
PROGRAM numIntegration    ! This program uses Simpson's rule to approximate a definite integral
    IMPLICIT NONE    ! Ensures all variables are explicitly declared
    INTEGER:: n    ! Number of subintervals
    REAL:: a, b    ! Lower and upper limits of integration
    REAL:: x(n+1), h    ! Array of x values and width of subintervals
    REAL:: sum    ! Variable to hold the sum of the function values
    REAL:: integral    ! Approximation of the integral
    INTEGER:: i    ! Loop index

    ! User inputs for number of subintervals and limits of integration
    WRITE(*,*) "Enter the number of subintervals: "
    READ(*,*) n
    WRITE(*,*) "Enter the lower limit of integration: "
    READ(*,*) a
    WRITE(*,*) "Enter the upper limit of integration: "
    READ(*,*) b

    ! Calculating width of subintervals and initializing x array
    h = (b-a)/n
    DO i = 1, n+1
        x(i) = a + (i-1)*h
    END DO

    ! Start of Simpson's rule calculation for definite integral
    sum = 0.0
    DO i = 2, n-1, 2    ! Loop over even values of i
        sum = sum + 4*f(x(i))
    END DO

    DO i = 3, n-2, 2    ! Loop over odd values of i
        sum = sum + 2*f(x(i))
    END DO

    integral = (h/3) * (f(a) + sum + f(b))    ! Final approximation of the integral using Simpson's rule
    WRITE(*,*) "The approximate value of the integral is: ", integral

CONTAINS
    FUNCTION f(x) RESULT(y)    ! Subroutine for the function to be integrated
        IMPLICIT NONE
        REAL, INTENT(IN):: x    ! Input parameter
        REAL:: y    ! Function output
        y = x**2 + 3*x + 2
    END FUNCTION f
END PROGRAM numIntegration
MODULE matrix_multiplication
! This module contains functions for matrix multiplication
        IMPLICIT NONE
        
! Declare variables
        INTEGER :: N, M, P ! size of matrices
        REAL, DIMENSION(:,:), ALLOCATABLE :: A, B, C ! matrices to be multiplied
        
! Function definition for matrix multiplication
        CONTAINS
        FUNCTION matrix_mult(A, B) RESULT(C)
! This function multiplies matrices A and B and returns the result C
        
! Declare input and output arrays
        REAL, INTENT(IN) :: A(:,:), B(:,:)
        REAL, ALLOCATABLE :: C(:,:)
        
! Declare local variables
        INTEGER :: i, j, k ! loop variables
        
! Determine the size of the matrices
        M = SIZE(A, 1) ! number of rows in matrix A
        N = SIZE(B, 2) ! number of columns in matrix B
        P = SIZE(A, 2) ! number of columns in matrix A and rows in matrix B
        
! Allocate memory for output matrix
        ALLOCATE(C(M, N))
        
! Perform matrix multiplication using nested DO loops
        DO i = 1, M ! loop over rows of matrix A
            DO j = 1, N ! loop over columns of matrix B
                C(i,j) = 0 ! initialize element in output matrix
                DO k = 1, P ! loop over columns of matrix A and rows of matrix B
                    C(i,j) = C(i,j) + A(i,k) * B(k,j) ! perform multiplication and add to current element
                END DO
            END DO
        END DO
        
! Return the output matrix
        matrix_mult = C
        
        END FUNCTION matrix_mult
        
! Main program for testing
        PROGRAM main
        INTEGER :: i, j ! loop variables
        
! Initialize matrices A and B
        M = 3
        N = 4
        P = 5
        ALLOCATE(A(M, P))
        ALLOCATE(B(P, N))
        A = 1 ! fill matrix A with ones
        B = 2 ! fill matrix B with twos
        
! Call function to multiply matrices A and B
        C = matrix_mult(A, B)
        
! Print the output matrix
        WRITE(*, '(A)') "Output matrix C:"
        DO i = 1, M
            DO j = 1, N
                WRITE(*, '(F5.2, 1X)', ADVANCE="NO") C(i,j)
            END DO
            WRITE(*, '()') ! print new line
        END DO
        
! Deallocate memory for matrices
        DEALLOCATE(A)
        DEALLOCATE(B)
        DEALLOCATE(C)
        
        END PROGRAM main
      END MODULE matrix_multiplication
PROGRAM Quicksort

! This program implements the Quicksort algorithm to sort an array of integers
! Based on the pseudocode from Cormen et al.'s "Introduction to Algorithms"

! Declare global variables
INTEGER :: array(20), i,j

! Subroutine to partition the array based on a pivot element
SUBROUTINE Partition(low, high, pivot)
    INTEGER :: low, high, pivot, temp, i, j
    pivot = array(low)
    
    DO i = low+1,high
        IF (array(i) < pivot) THEN
            j = j + 1
            temp = array(i)
            array(i) = array(j)
            array(j) = temp
        END IF
    END DO
    
    temp = array(low)
    array(low) = array(j)
    array(j) = temp
END SUBROUTINE

! Recursive function to perform Quicksort on the array
SUBROUTINE Quicksort(low, high)
    INTEGER :: low, high, pivot
    IF (low < high) THEN
        CALL Partition(low, high, pivot)
        CALL Quicksort(low, pivot-1)
        CALL Quicksort(pivot+1, high)
    END IF
END SUBROUTINE

! Main program
PRINT *, "Enter the size of array (max 20): "
READ *, n
IF (n > 20) THEN
    STOP "Size too large! Max array size is 20."
END IF

PRINT *, "Enter array elements:"
DO i = 1,n
    READ *, array(i)
END DO

PRINT *, "Unsorted array:"
DO i = 1,n
    PRINT *, array(i)
END DO

CALL Quicksort(1,n)

PRINT *, "Sorted array:"
DO i = 1,n
    PRINT *, array(i)
END DO

END PROGRAM Quicksort
!! This code calculates the nth power of a given number 

PROGRAM nth_power

IMPLICIT NONE                         !! declaring the implicit none statement

INTEGER :: n                          !! declaring an integer variable n
REAL :: base, result                  !! declaring real variables for the base and the result

READ(*,*) base, n                     !! accepting user input for the base and the exponent
result = 1.0                          !! initializing result variable to 1.0

IF (n .GT. 0) THEN                   !! starting the IF statement to check for positive exponent
DO i = 1, n                          !! starting the DO loop to iterate through the exponent
    result = result * base            !! multiplying the result with the base number
END DO                                  !! ending the DO loop
ELSE IF (n .LT. 0) THEN                !! starting the ELSE IF statement to check for negative exponent
DO i = n, -1                          !! starting the DO loop to iterate through the negative exponent
result = result / base                !! dividing the result with the base number
END DO                                 !! ending the DO loop
ELSE                                   !! starting the ELSE statement for handling 0 as an exponent
result = 1.0                          !! setting the result to 1
END IF                                 !! ending the IF statement

WRITE(*,*) base, "raised to the power of", n, "is", result                !! printing the result
STOP                                   !! stopping the program

END PROGRAM nth_power                  !! ending the program
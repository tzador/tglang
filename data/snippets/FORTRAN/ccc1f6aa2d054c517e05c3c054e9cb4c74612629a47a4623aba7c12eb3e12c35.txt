c A subroutine that calculates the power spectrum of a given input signal
	subroutine power_spectrum(x, y, n)
		real, intent(in) :: x(n) ! input signal
		real, intent(out) :: y(n) ! output spectrum
		integer, intent(in) :: n ! length of input signal
		real :: hn ! normalizing constant
		real, allocatable :: fft_temp(:) ! temporary array for fft
		real, allocatable :: fft_result(:) ! resultant fft
		real :: pi, two_pi, delta_f, omega ! constants for fft calculations
		integer :: i, j ! loop variables

		! set constants
		pi = 3.1415926535897932
		two_pi = 6.2831853071795864
		delta_f = two_pi / (n - 1)

		! calculate fft of input signal
		allocate(fft_temp(n))
		allocate(fft_result(n))
		call fft(x, fft_temp, n, 1)

		! calculate power spectrum
		do i = 1, n
			omega = delta_f * (i - 1)
			fft_result(i) = (fft_temp(i) * conjg(fft_temp(i))) / n
		end do

		! normalize power spectrum and copy to output array
		hn = 2.0 / (two_pi * (n - 1)) ! normalize constant

		do j = 1, n
			y(j) = hn * fft_result(j) ! copy to output array
		end do

		! deallocate temporary arrays
		deallocate(fft_temp)
		deallocate(fft_result)

	end subroutine power_spectrum
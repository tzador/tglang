/**
* A class that represents a person with a name and age property.
* @class
*/
class Person {
    name: string; // property to store name
    age: number; // property to store age

    /**
    * Constructor function that takes in two parameters: name and age
    * @constructor
    * @param {string} name - the name of the person
    * @param {number} age - the age of the person
    */
    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }

    /**
    * A method that prints out a greeting for the person.
    * @method
    */
    greet() {
        console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`);
    }
}

/**
* A class that represents a student that extends the Person class.
* @class
* @extends Person
*/
class Student extends Person {
    studentId: number; // property to store student ID

    /**
    * Constructor function that takes in three parameters: name, age and student ID
    * @constructor
    * @param {string} name - the name of the student
    * @param {number} age - the age of the student
    * @param {number} studentId - the student ID of the student
    */
    constructor(name: string, age: number, studentId: number) {
        super(name, age);
        this.studentId = studentId;
    }
}

// Create an instance of the Person class
const person = new Person("John", 25);
// Create an instance of the Student class
const student = new Student("Jane", 20, 12345);

// Call the greet method for the person
person.greet();
// Call the greet method for the student
student.greet();
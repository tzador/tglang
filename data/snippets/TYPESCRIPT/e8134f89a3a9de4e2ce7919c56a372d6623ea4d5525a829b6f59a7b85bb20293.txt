interface User {
  name: string; //declaring a string property "name"
  age: number; //declaring a number property "age"
  address?: string; //declaring an optional string property "address"
  readonly email: string; //declaring a readonly string property "email"
}

class Employee implements User {
  constructor(public name:string, public age:number, private employeeId:number) {
    //defining constructor function with public and private parameters
  }
}

let john: User = new Employee("John", 30, 123456); 
//creating a new Employee instance and assigning it to the "john" variable, which is of type User

console.log(john.name); //"John"
console.log(john.age); //30
console.log(john.employeeId); //Error - employeeId is a private property and cannot be accessed outside the Employee class
console.log(john.email); //"Error - email is a readonly property and cannot be reassigned"

function greet(name: string = "Stranger"): void {
  console.log(`Hello ${name}!`); //Template literal used to print a greeting message with the name parameter
}

greet("John"); //Hello John!
greet(); //Hello Stranger!
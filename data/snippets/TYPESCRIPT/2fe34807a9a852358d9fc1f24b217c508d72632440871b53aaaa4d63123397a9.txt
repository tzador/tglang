// Example of a complex TypeScript code snippet
interface Person {
  name: string;
  age: number;
  address?: string;
}

function getPersonInfo(person: Person): string {
  let info = `Name: ${person.name}, Age: ${person.age}`;
  if (person.address) {
    info += `, Address: ${person.address}`;
  }
  return info;
}

class Employee implements Person {
  name: string;
  age: number;
  jobTitle: string;

  constructor(name: string, age: number, jobTitle: string) {
    this.name = name;
    this.age = age;
    this.jobTitle = jobTitle;
  }

  getInfo(): string {
    return `Name: ${this.name}, Age: ${this.age}, Job Title: ${this.jobTitle}`;
  }
}

// Usage
const person: Person = {
  name: "John",
  age: 25,
  address: "123 Main Street"
};

const employee = new Employee("Jane", 30, "Software Developer");

console.log(getPersonInfo(person));
console.log(employee.getInfo());
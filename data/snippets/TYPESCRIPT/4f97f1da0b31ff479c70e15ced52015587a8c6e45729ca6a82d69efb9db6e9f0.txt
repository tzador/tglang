// An example of a class in TypeScript with a constructor and a method
class Car {
    private make: string;
    private model: string;
    private year: number;

    constructor(make: string, model: string, year: number) {
        this.make = make;
        this.model = model;
        this.year = year;
    }

    getCarDetails(): string {
        return `${this.make} ${this.model}, ${this.year}`;
    }
}

// An example of inheritance in TypeScript with a child class
class ElectricCar extends Car {
    private batteryLevel: number;

    constructor(make: string, model: string, year: number, batteryLevel: number) {
        super(make, model, year);
        this.batteryLevel = batteryLevel;
    }

    getBatteryLevel(): number {
        return this.batteryLevel;
    }
}

// Create an instance of the Car class
let myCar = new Car("Ford", "Mustang", 2021);

// Create an instance of the ElectricCar class
let myElectricCar = new ElectricCar("Tesla", "Model S", 2020, 100);

// Call the getCarDetails method on the myCar instance
console.log(myCar.getCarDetails()); // output: Ford Mustang, 2021

// Call the getCarDetails method on the myElectricCar instance
console.log(myElectricCar.getCarDetails()); // output: Tesla Model S, 2020

// Call the getBatteryLevel method on the myElectricCar instance
console.log(myElectricCar.getBatteryLevel()); // output: 100
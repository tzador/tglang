/**
* A class representing a person.
*/
class Person {
  private name: string; // private property to store name
  private age: number; // private property to store age
  /**
  * A constructor to create a new Person object.
  * @param name The name of the person.
  * @param age The age of the person.
  */
  constructor(name: string, age: number) {
    this.name = name;
    this.age = age;
  }
  /**
   * A method to get the name of the person.
   * @returns The name of the person.
   */
  getName() {
    return this.name;
  }
  /**
   * A method to get the age of the person.
   * @returns The age of the person.
   */
  getAge() {
    return this.age;
  }
  /**
   * A method to set the name of the person.
   * @param name The new name of the person.
   */
  setName(name: string) {
    this.name = name;
  }
  /**
   * A method to set the age of the person.
   * @param age The new age of the person.
   */
  setAge(age: number) {
    this.age = age;
  }
}

// Create a new Person object with name "John" and age 30
const person = new Person("John", 30);
// Print out the name and age using the getter methods
console.log(`Name: ${person.getName()}
Age: ${person.getAge()}`);
// Set the name and age using the setter methods
person.setName("Jane");
person.setAge(35);
// Print out the updated name and age
console.log(`Name: ${person.getName()}
Age: ${person.getAge()}`);
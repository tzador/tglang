/**
 * This class represents a person with a name and age.
 */
class Person {
  /**
   * The person's name.
   */
  name: string;

  /**
   * The person's age.
   */
  age: number;

  /**
   * Creates a new Person instance.
   * @param name The person's name.
   * @param age The person's age.
   */
  constructor(name: string, age: number) {
    this.name = name;
    this.age = age;
  }

  /**
   * Returns the person's name.
   * @return The person's name.
   */
  getName(): string {
    return this.name;
  }

  /**
   * Returns the person's age.
   * @return The persons age.
   */
  getAge(): number {
    return this.age;
  }
}

/**
 * This class extends the Person class and adds a hobby property.
 */
class Hobbyist extends Person {
  /**
   * The person's hobby.
   */
  hobby: string;

  /**
   * Creates a new Hobbyist instance.
   * @param name The person's name.
   * @param age The person's age.
   * @param hobby The person's hobby.
   */
  constructor(name: string, age: number, hobby: string) {
    super(name, age);
    this.hobby = hobby;
  }

  /**
   * Returns the person's hobby.
   * @return The person's hobby.
   */
  getHobby(): string {
    return this.hobby;
  }

  /**
   * Prints information about the Hobbyist.
   */
  greet(): void {
    console.log(`Hello, my name is ${this.name} and I am ${this.age} years old. My hobby is ${this.hobby}.`);
  }
}

// Create a new instance of the Hobbyist class
const bob = new Hobbyist("Bob", 25, "painting");

// Call the greet method on the instance
bob.greet();

// Output:
// Hello, my name is Bob and I am 25 years old. My hobby is painting.
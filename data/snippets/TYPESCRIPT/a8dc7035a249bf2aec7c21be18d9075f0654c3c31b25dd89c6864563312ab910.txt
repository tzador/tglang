// Example of a complex code snippet in TypeScript

// Declaring a class with a constructor and several methods
class Person {
  // Declaring properties with different data types
  name: string;
  age: number;
  isMarried: boolean;

  constructor(name: string, age: number, isMarried: boolean) {
    this.name = name;
    this.age = age;
    this.isMarried = isMarried;
  }

  // Method to greet the person
  greet() {
    console.log(`Hello, my name is ${this.name}.`);
  }

  // Method to check if the person is of legal age
  checkAge() {
    if (this.age >= 18) {
      console.log(`${this.name} is of legal age.`);
    } else {
      console.log(`${this.name} is not of legal age.`);
    }
  }

  // Method to check if the person is married
  checkMaritalStatus() {
    if (this.isMarried) {
      console.log(`${this.name} is married.`);
    } else {
      console.log(`${this.name} is not married.`);
    }
  }
}

// Creating a new instance of the Person class
const john = new Person("John", 25, true);

// Calling the greet method on the instance
john.greet();

// Output: Hello, my name is John.

// Calling the checkAge method on the instance
john.checkAge();

// Output: John is of legal age.

// Calling the checkMaritalStatus method on the instance
john.checkMaritalStatus();

// Output: John is married.
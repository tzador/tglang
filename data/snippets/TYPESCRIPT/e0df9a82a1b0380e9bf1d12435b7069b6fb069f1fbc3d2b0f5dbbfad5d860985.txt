//create a generic class called "Data" with two type parameters
class Data<T, U> {
    private value1: T;
    private value2: U;
  
    constructor(value1: T, value2: U) {
      this.value1 = value1;
      this.value2 = value2;
    }
  
    //create a generic method "combine" that takes in two arguments of type T and U
    combine<V>(arg1: T, arg2: U) {
      //create a variable of type T to store the result of the first argument
      let result1: T = arg1;
       //create a variable of type U to store the result of the second argument
      let result2: U = arg2;
      
      //combine the two values and return the result
      return `${result1} and ${result2}`;
    }
  }
  
  //create an instance of the Data class with type parameters <number, string>
  const myData = new Data<number, string>(5, "hello");
  
  //call the combine method and pass in two arguments of the same type as the type parameters of the class
  const combined = myData.combine<number>(7, 3);
  
  //log the result
  console.log(combined); // outputs "7 and 3"
/**
 * This is a function that sorts an array of numbers in ascending order using the bubble sort algorithm.
 * @param arr - The input array to be sorted.
 * @returns The sorted array in ascending order.
 */
function bubbleSort(arr: number[]): number[] {
  let swapped = true; // Flag to check if elements have been swapped during a pass.
  let end = arr.length - 1; // End index of the unsorted part of the array.
  while (swapped) { // Continue looping as long as elements have been swapped.
    swapped = false; // Reset flag to false at the beginning of each pass.
    for (let i = 0; i < end; i++) {
      if (arr[i] > arr[i + 1]) { // If current element is greater than next element,
        [arr[i], arr[i + 1]] = [arr[i + 1], arr[i]]; // Swap them (using destructuring assignment).
        swapped = true; // Set flag to true to indicate that elements have been swapped.
      }
    }
    end--; // The largest element of the unsorted part of the array is now at its correct position, so we decrease the end index by 1 in each pass.
  }
  return arr; // Return the sorted array.
}

// Usage:
const unsortedArray = [5, 3, 8, 1, 6, 2, 4, 7];
const sortedArray = bubbleSort(unsortedArray);
console.log(sortedArray); // Output: [1, 2, 3, 4, 5, 6, 7, 8]
// Generic function that accepts an array of numbers and returns the maximum value
const getMax = <T extends number>(arr: T[]): T => {
  let max: T = arr[0];
  for (let num of arr) {
    if (num > max) {
      max = num;
    }
  }
  return max;
}

// Example usage
const numbers = [5, 7, 2, 1, 10];
const maxNumber = getMax(numbers);
console.log(maxNumber); // Output: 10

// Generic class that can accept any type of data
class DataStore<T> {
  private data: T[] = [];

  // Method to add data to the store
  addData = (item: T): void => {
    this.data.push(item);
  }

  // Method to get all data in the store
  getAllData = (): T[] => {
    return this.data;
  }
}

// Example usage
const store = new DataStore<number>();
store.addData(5);
store.addData(10);
store.addData(7);
store.addData(2);
const allNumbers = store.getAllData();
console.log(allNumbers); // Output: [5, 10, 7, 2]
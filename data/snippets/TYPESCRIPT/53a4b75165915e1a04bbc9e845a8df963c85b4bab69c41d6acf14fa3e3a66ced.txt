// Declare a generic class with two type parameters
class Pair<T, U> {
  // Declare private fields of type T and U
  private first: T;
  private second: U;

  // Create a constructor that takes in parameters of type T and U
  constructor(first: T, second: U) {
    this.first = first;
    this.second = second;
  }

  // Create getter methods for each private field
  getFirst(): T {
    return this.first;
  }

  getSecond(): U {
    return this.second;
  }

  // Create a method that combines the two values into a single string
  combine(): string {
    return `${this.first.toString()}${this.second.toString()}`;
  }
}

// Instantiate the generic class with string and number as type arguments
const pair = new Pair<string, number>('Hello', 2020);

// Output the combined string
console.log(pair.combine());

// Output: Hello2020
/**
 * A class representing a person with a name and age.
 */
class Person {
    // Private variables
    private _name: string;
    private _age: number;

    /**
     * Construct a new Person object with a given name and age.
     * @param name the name of the person
     * @param age the age of the person
     */
    constructor(name: string, age: number) {
        this._name = name;
        this._age = age;
    }

    /**
     * Get the name of the person.
     * @returns the name of the person
     */
    getName(): string {
        return this._name;
    }

    /**
     * Get the age of the person.
     * @returns the age of the person
     */
    getAge(): number {
        return this._age;
    }

    /**
     * Set the name of the person.
     * @param name the new name of the person
     */
    setName(name: string) {
        this._name = name;
    }

    /**
     * Set the age of the person.
     * @param age the new age of the person
     */
    setAge(age: number) {
        this._age = age;
    }
}

/**
 * A class representing a student, inherits from the Person class.
 */
class Student extends Person {
    // Private variable
    private _major: string;

    /**
     * Construct a new Student object with a given name, age and major.
     * @param name the name of the student
     * @param age the age of the student
     * @param major the major of the student
     */
    constructor(name: string, age: number, major: string) {
        // Call the super constructor to set the name and age
        super(name, age);
        this._major = major;
    }

    /**
     * Get the major of the student.
     * @returns the major of the student
     */
    getMajor(): string {
        return this._major;
    }

    /**
     * Set the major of the student.
     * @param major the new major of the student
     */
    setMajor(major: string) {
        this._major = major;
    }

    /**
     * Get the name and major of the student.
     * @returns the name and major of the student
     */
    getInfo(): string {
        return `${this.getName()} is majoring in ${this._major}.`;
    }
}

// Create a new Student object with the name "John", age 20 and major "Computer Science"
const john: Student = new Student("John", 20, "Computer Science");

// Print out John's name and age
console.log(`Name: ${john.getName()}`);
console.log(`Age: ${john.getAge()}`);

// Change John's major to "Mathematics"
john.setMajor("Mathematics");

// Print out John's new major
console.log(`Major: ${john.getMajor()}`);

// Get and print out John's name and major using the getInfo() method
console.log(john.getInfo());
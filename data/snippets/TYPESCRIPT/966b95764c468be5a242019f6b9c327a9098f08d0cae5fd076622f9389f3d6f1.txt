/** 
*A Person interface representing a human with a name and age
*@param name: string that represents person's name
*@param age: number that represents person's age
*/
interface Person {
    name: string;
    age: number;
}

/** 
*A class representing a student that extends the Person interface
*@extends Person
*@param id: number that represents student's identification number
*@param major: string that represents student's major
*/
class Student implements Person {
    name: string;
    age: number;
    id: number;
    major: string;

    /** 
    *Constructor for Student class, initializes name, age, id, and major
    *@param name: string that represents student's name
    *@param age: number that represents student's age
    *@param id: number that represents student's identification number
    *@param major: string that represents student's major
    */
    constructor(name: string, age: number, id: number, major: string) {
        this.name = name;
        this.age = age;
        this.id = id;
        this.major = major;
    }

   /** 
    *Method to display student's information
    *@return string with student's name, age, id, and major
    */
    displayInfo(): string {
        return `Name: ${this.name}, Age: ${this.age}, ID: ${this.id}, Major: ${this.major}`;
    }
}

//Creating instance of Student class
let student1: Student = new Student("John", 20, 12345, "Computer Science");

//Calling displayInfo method to display student's information
console.log(student1.displayInfo());
// Example of a complex function in Typescript

/*
This function takes in an array of numbers, calculates the average,
squares each value, and returns a new array with the squared values.
*/

function squareAverage(inputArray: number[]): number[] {
  // Get the length of the array
  const length: number = inputArray.length;

  // Calculate the sum of the array values
  let sum: number = 0;
  for (let i = 0; i < length; i++) {
    sum += inputArray[i];
  }

  // Calculate the average
  const average: number = sum / length;

  // Create a new array to store the squared values
  const squaredArray: number[] = [];

  // Loop through the input array and square each value
  for (let i = 0; i < length; i++) {
    // Use the ** operator to square the value
    const squaredValue: number = inputArray[i]**2;
    // Push the squared value into the new array
    squaredArray.push(squaredValue);
  }

  // Output the squared array
  return squaredArray;
}

/*
Example input array: [1, 2, 3, 4, 5]
Output array: [1, 4, 9, 16, 25]
*/
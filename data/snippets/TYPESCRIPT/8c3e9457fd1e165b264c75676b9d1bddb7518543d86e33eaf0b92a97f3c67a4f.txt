/**
 * Represents a person with a name and an age.
 */
class Person {
    private _name: string; // the person's name
    private _age: number; // the person's age

    /**
     * Constructs a new Person instance.
     * @param {string} name - the person's name
     * @param {number} age - the person's age
     */
    constructor(name: string, age: number) {
        this._name = name;
        this._age = age;
    }

    /**
     * Returns the person's name.
     * @returns {string} - the person's name
     */
    getName(): string {
        return this._name;
    }

    /**
     * Sets the person's name.
     * @param {string} name - the new name to set
     */
    setName(name: string): void {
        this._name = name;
    }

    /**
     * Returns the person's age.
     * @returns {number} - the person's age
     */
    getAge(): number {
        return this._age;
    }

    /**
     * Sets the person's age.
     * @param {number} age - the new age to set
     */
    setAge(age: number): void {
        this._age = age;
    }
}

// Create a new instance of Person
let person = new Person("John", 25);

// Change the person's name
person.setName("Jane");

// Output the person's name and age
console.log(`Name: ${person.getName()}, Age: ${person.getAge()}`);
/**
 * This function checks if two arrays are equal based on length and elements
 * @param arr1 the first array to compare
 * @param arr2 the second array to compare
 * @returns a boolean indicating whether the arrays are equal or not
 */
function checkArrayEquality<T>(arr1: T[], arr2: T[]): boolean {
  // check for same length
  if (arr1.length !== arr2.length) return false;

  // loop through elements in first array
  for (let i = 0; i < arr1.length; i++) {
    const element1 = arr1[i];

    // check if element exists in second array
    if (arr2[i] === undefined) return false;

    // check if element is an array and recursively check for equality
    if (Array.isArray(element1)) {
      if (!checkArrayEquality(element1, arr2[i] as T[])) return false;
    }

    // check if element is an object and recursively check for equality
    else if (isObject(element1)) {
      if (!deepEqual(element1, arr2[i] as T)) return false;
    }

    // check for primitive values equality
    else if (arr1[i] !== arr2[i]) return false;
  }

  // if all elements are equal, return true
  return true;
}
let car: {
    make: string,
    model: string,
    year: number,
    color?: string,
    features?: string[]
};

interface Person {
    name: string,
    age: number,
    occupation?: string
}

class Vehicle {
    private speed: number;
    private acceleration: number;
    private fuel: string;

    constructor(speed: number, acceleration: number, fuel: string) {
        this.speed = speed;
        this.acceleration = acceleration;
        this.fuel = fuel;
    }

    getSpeed(): string {
        return `The current speed is ${this.speed} mph.`;
    }

    setSpeed(newSpeed: number): void {
        this.speed = newSpeed;
    }
}

enum Languages {
    English = "en",
    Spanish = "es",
    French = "fr",
    German = "de",
    Japanese = "jp",
    Chinese = "cn"
}

let car1: car = {
    make: "Honda",
    model: "Civic",
    year: 2015,
    color: "blue",
    features: ["sunroof", "navigation system", "rear view camera"]
};

let person: Person = {
    name: "Emma",
    age: 25,
    occupation: "Software Engineer"
};

let carSpeed: Vehicle = new Vehicle(80, 10, "gas");

console.log(carSpeed.getSpeed()); // prints "The current speed is 80 mph."
carSpeed.setSpeed(100);
console.log(carSpeed.getSpeed()); // prints "The current speed is 100 mph."
console.log(`The ${car1.year} ${car1.make} ${car1.model} has a ${car1.color} color and its features are: ${car1.features.join(', ')}.`); // prints "The 2015 Honda Civic has a blue color and its features are: sunroof, navigation system, rear view camera."
console.log(`My name is ${person.name}, I am ${person.age} years old and I work as a ${person.occupation}.`); // prints "My name is Emma, I am 25 years old and I work as a Software Engineer."
console.log(`One of the supported languages is "${Languages.Spanish}".`); // prints "One of the supported languages is "es"."
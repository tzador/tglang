// Import statements
import { Request, Response } from 'express';
import * as bcrypt from 'bcrypt';

// Custom types
type User = {
  id: string;
  firstName: string;
  lastName: string;
  email: string;
  password: string;
};

// Route handler function
const handleLogin = (req: Request, res: Response) => {
  // Retrieve user data from request body
  const { email, password }: { email: string; password: string } = req.body;

  // Find user in database
  User.findOne({ email })
    .then((user: User | null) => {
      // Check if user exists and if password matches
      if (!user || !bcrypt.compareSync(password, user.password)) {
        throw new Error('Invalid credentials');
      }

      // Generate session token using user's ID
      const sessionToken: string = jwt.sign({ id: user.id }, process.env.JWT_SECRET as string, {
        expiresIn: '1h',
      });

      // Send token and success status code in response
      res.status(200).json({
        status: 'success',
        data: {
          token: sessionToken,
        },
      });
    })
    .catch((err: unknown) => {
      // If error, send error status code in response
      res.status(401).json({
        status: 'error',
        message: err,
      });
    });
};
//Defining a generic class
class GenericClass<T> {
    private data: T;

    constructor(data: T) {
        this.data = data;
    }

    //Generic method with constraints
    public printData<U extends string>(key: U) {
        let result = `${key}: ${this.data}`;
        console.log(result);
    }

    //Generic static property
    static counter: number;
}

//Creating instances of generic class
let stringClass = new GenericClass("Hello, world!");
let numberClass = new GenericClass(10);
let booleanClass = new GenericClass(true);

//Calling generic method
stringClass.printData<string>("String");

//Using generic static property
GenericClass.counter = 3;
interface Person {
    firstName: string;
    lastName: string;
    age?: number;
}

class Student implements Person {
    firstName: string;
    lastName: string;
    age?: number;

    constructor(firstName: string, lastName: string, age?: number) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }

    study(subject: string): void {
        console.log(`${this.firstName} is studying ${subject}`);
    }
}

let student = new Student("John", "Smith", 25);
student.study("Mathematics");

enum ProgrammingLanguage {
    JAVASCRIPT,
    TYPESCRIPT,
    PYTHON,
}

let favoriteLanguage: ProgrammingLanguage;
favoriteLanguage = ProgrammingLanguage.TYPESCRIPT;

function addNumbers(x: number, y: number): number {
    return x + y;
}

console.log(addNumbers(5, 10));

type Employee = {
    name: string;
    position: string;
    salary: number;
}

let employees: Array<Employee> = [
    { name: "Jane", position: "Manager", salary: 50000 },
    { name: "Bob", position: "Developer", salary: 75000 },
    { name: "Sarah", position: "Designer", salary: 60000 }
];

employees.forEach(employee => console.log(`${employee.name} is a ${employee.position} who earns $${employee.salary} per year`))
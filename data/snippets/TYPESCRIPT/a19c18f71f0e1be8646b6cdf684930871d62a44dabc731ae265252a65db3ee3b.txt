// Declare a class named "Animal" with a generic type parameter "T"
class Animal<T> {
  // Declare a private variable "name" of type "T"
  private name: T;

  // Declare a public constructor that takes in a parameter "name" of type "T"
  constructor(name: T) {
    this.name = name;
  }

  // Declare a public method "getName" that returns the value of "name"
  public getName(): T {
    return this.name;
  }
}

// Declare a variable "dog" of type "Animal" with the type argument "string"
let dog: Animal<string>;

// Instantiate the "dog" variable with the value "Spot" as the argument for the constructor
dog = new Animal<string>('Spot');

// Call the "getName" method on the "dog" variable and store the returned value in the "dogName" variable
let dogName = dog.getName();

// Print the value of "dogName" to the console
console.log(dogName); // Output: Spot
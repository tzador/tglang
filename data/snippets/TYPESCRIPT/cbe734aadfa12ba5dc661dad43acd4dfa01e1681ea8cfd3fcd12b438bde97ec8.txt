// This code snippet is an example of a complex function in TYPESCRIPT

/**
 * This function takes two arrays and merges them together into one sorted array
 * @param arr1 The first array to merge
 * @param arr2 The second array to merge
 * @returns mergedArr The merged and sorted array
 */
function mergeArrays(arr1: number[], arr2: number[]): number[] {
  const mergedArr: number[] = []; // initialize an empty array to hold the merged values
  let i: number = 0; // index for arr1
  let j: number = 0; // index for arr2

  // loop through both arrays and compare their values
  while (i < arr1.length && j < arr2.length) {
    if (arr1[i] <= arr2[j]) {
      // if the value in arr1 is smaller or equal to the value in arr2, push it into the merged array
      mergedArr.push(arr1[i]);
      i++; // increment index for arr1
    } else {
      // else, push the value from arr2 into the merged array
      mergedArr.push(arr2[j]);
      j++; // increment index for arr2
    }
  }

  // check if there are any remaining values in arr1 and push them into the merged array
  while (i < arr1.length) {
    mergedArr.push(arr1[i]);
    i++;
  }

  // check if there are any remaining values in arr2 and push them into the merged array
  while (j < arr2.length) {
    mergedArr.push(arr2[j]);
    j++;
  }

  return mergedArr; // return the merged and sorted array
}

// Example usage
const array1: number[] = [1, 4, 7, 9];
const array2: number[] = [2, 3, 6, 8, 10];
console.log(mergeArrays(array1, array2)); // Output: [1, 2, 3, 4, 6, 7, 8, 9, 10]
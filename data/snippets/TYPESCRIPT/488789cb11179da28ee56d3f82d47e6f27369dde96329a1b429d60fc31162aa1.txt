interface Person {                                                    //Defines the 'Person' interface
  name: string;                                                       //Declares a 'name' property of type string
  age: number;                                                        //Declares an 'age' property of type number
  greet(name: string): void;                                          //Declares a 'greet' function that takes in a string parameter and returns 'void' (no return value)
}

class Employee implements Person {                                     //Defines the 'Employee' class and implements the 'Person' interface
  constructor(private id: number, public name: string, public age: number) { //Defines a constructor that takes in a 'id' parameter of type number and 'name' and 'age' parameters of type string and number respectively
    this.id = id;                                                      //Assigns the 'id' parameter to the 'id' property of the class
  }

  greet(name: string) {                                                //Implements the 'greet' function from the 'Person' interface
    console.log(`Hello ${name}, my name is ${this.name}.`);            //Prints a greeting using the 'name' property of the class
  }

  getDetails(): string {                                               //Defines a method named 'getDetails' that returns a string
    return `Employee ID: ${this.id}, Name: ${this.name}, Age: ${this.age}`; //Returns a string with employee details using the properties of the class
  }
}

const employee = new Employee(1234, 'John', 30);                       //Creates a new instance of the 'Employee' class with the given parameters
console.log(employee.getDetails());                                   //Calls the 'getDetails' method and prints the returned string
employee.greet('Jane');                                                //Calls the 'greet' method and prints a greeting with the given parameter
class Person {
private name: string; // Private property for name
protected age: number; // Protected property for age
constructor(name: string, age: number) { // Constructor with parameters for name and age
this.name = name; // Assign name parameter to private property
this.age = age; // Assign age parameter to protected property
}
greet() { // Public method for greeting
console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`); // Using template literals to display name and age
}
}
class Student extends Person { // Inheritance from Person class
school: string; // Public property for school
constructor(name: string, age: number, school: string) { // Constructor with parameters for name, age, and school
super(name, age); // Call to super constructor to inherit properties from Person class
this.school = school; // Assign school parameter to public property
}
study() { // Public method for studying
console.log(`${this.name} is studying at ${this.school}.`); // Using template literals to display name and school
}
}
const john = new Person('John', 25); // Creating new instance of Person class
const jane = new Student('Jane', 20, 'University of XYZ'); // Creating new instance of Student class
john.greet(); // Calling greet method on john instance
jane.greet(); // Calling greet method on jane instance
jane.study(); // Calling study method on jane instance
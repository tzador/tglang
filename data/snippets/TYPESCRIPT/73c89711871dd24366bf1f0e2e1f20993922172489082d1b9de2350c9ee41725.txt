interface User {
  name: string; // defining property "name" with type string
  age: number; // defining property "age" with type number
  address?: string; // defining optional property "address" with type string
  getInfo(): string; // defining method "getInfo" with return type string
}

class Student implements User {
  constructor(public name: string, public age: number, public address?: string) {
    // initializing properties with constructor parameters
  }

  getInfo(): string {
    return `Name: ${this.name}, Age: ${this.age}, Address: ${this.address}`; // implementing method from interface
  }
}

let student1 = new Student("John Doe", 20); // creating new instance of class Student
console.log(student1.getInfo()); // calling method "getInfo" on student1 instance
// Output: Name: John Doe, Age: 20, Address: undefined
let student2 = new Student("Jane Smith", 19, "123 Main St."); // creating new instance of class Student
console.log(student2.getInfo()); // calling method "getInfo" on student2 instance
// Output: Name: Jane Smith, Age: 19, Address: 123 Main St.
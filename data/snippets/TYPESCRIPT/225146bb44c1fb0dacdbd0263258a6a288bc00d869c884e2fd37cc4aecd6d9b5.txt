// Annotated markdown TYPESCRIPT code snippet

/**
 * A class representing a person.
 *
 * @class Person
 */
class Person {
  private name: string;
  private age: number;
  private gender: string;

  /**
   * @constructor Creates an instance of Person.
   * @param {string} name - The name of the person.
   * @param {number} age - The age of the person.
   * @param {string} gender - The gender of the person.
   * @memberof Person
   */
  constructor(name: string, age: number, gender: string) {
    this.name = name;
    this.age = age;
    this.gender = gender;
  }

  /**
   * Gets the name of the person.
   *
   * @return {string} The name of the person.
   * @memberof Person
   */
  getName(): string {
    return this.name;
  }

  /**
   * Gets the age of the person.
   *
   * @return {number} The age of the person.
   * @memberof Person
   */
  getAge(): number {
    return this.age;
  }

  /**
   * Gets the gender of the person.
   *
   * @return {string} The gender of the person.
   * @memberof Person
   */
  getGender(): string {
    return this.gender;
  }

  /**
   * Sets the name of the person.
   *
   * @param {string} newName - The new name of the person.
   * @memberof Person
   */
  setName(newName: string) {
    this.name = newName;
  }

  /**
   * Sets the age of the person.
   *
   * @param {string} newAge - The new age of the person.
   * @memberof Person
   */
  setAge(newAge: number) {
    this.age = newAge;
  }

  /**
   * Sets the gender of the person.
   *
   * @param {string} newGender - The new gender of the person.
   * @memberof Person
   */
  setGender(newGender: string) {
    this.gender = newGender;
  }
}

// Create a new instance of Person
let person = new Person("John", 25, "Male");

// Get name of person
console.log(person.getName()); // Output: John

// Change name of person
person.setName("Emily");

// Get new name
console.log(person.getName()); // Output: Emily
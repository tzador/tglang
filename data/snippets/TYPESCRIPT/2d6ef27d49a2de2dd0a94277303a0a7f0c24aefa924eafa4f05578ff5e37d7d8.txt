/**
* Generic class that represents a searchable array
* @param T - The type of data that will be stored in the array
*/
class SearchableArray<T> {
  private array: T[];
  private length: number;
  
  /**
  * Constructor for SearchableArray class
  * @param length - The length of the array to be created
  */
  constructor(length: number) {
    this.array = []; // Initialize empty array
    this.length = length;
  }
  
  /**
  * Inserts an element into the array at the specified index
  * @param index - The index where the element will be inserted
  * @param element - The element to be inserted
  * @returns true if element was successfully inserted, false otherwise
  */
  public insert(index: number, element: T): boolean {
    if (index < 0 || index >= this.length) {
      return false; // Index is out of bounds
    } else {
      this.array[index] = element; // Insert element at specified index
      return true;
    }
  }
  
  /**
  * Searches for an element in the array and returns its index
  * @param element - The element to be searched for
  * @returns the index of the element, or -1 if the element is not found
  */
  public search(element: T): number {
    for (let i = 0; i < this.length; i++) {
      if (this.array[i] === element) {
        return i;
      }
    }
    return -1; // Element not found in array
  }
}
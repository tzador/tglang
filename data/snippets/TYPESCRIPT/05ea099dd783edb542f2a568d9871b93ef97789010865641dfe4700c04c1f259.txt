// This is a complex code snippet in TypeScript
import { shape, string, number, boolean } from 'prop-types';

// Define a function that takes in a name and age argument
function greet(name: string, age: number): void {
  // Use string interpolation for the greeting message
  const message: string = `Hello ${name}, you are ${age} years old!`;

  // Print out the message
  console.log(message);
}

// Define a data type for a person object
type Person = {
  name: string,
  age: number,
  isStudent: boolean,
  hobbies: string[],
  address: {
    street: string,
    city: string,
    state: string,
    country: string
  }
};

// Define a variable of type Person
const person: Person = {
  name: 'John',
  age: 25,
  isStudent: true,
  hobbies: ['reading', 'cooking', 'hiking'],
  address: {
    street: '123 Main St',
    city: 'New York',
    state: 'NY',
    country: 'USA'
  }
};

// Use the shape method to define the PropTypes for the Person object
const personPropTypes = shape({
  name: string.isRequired,
  age: number.isRequired,
  isStudent: boolean,
  hobbies: arrayOf(string).isRequired,
  address: shape({
    street: string.isRequired,
    city: string.isRequired,
    state: string.isRequired,
    country: string.isRequired
  }).isRequired
});

// Call the greet function with the name and age values from the person object
greet(person.name, person.age);

// Print out the PropTypes for the Person object
console.log(personPropTypes);

// Output:
// Hello John, you are 25 years old!
//
// PropTypes:
// {
//   name: string,
//   age: number,
//   isStudent: boolean,
//   hobbies: string[],
//   address: {
//     street: string,
//     city: string,
//     state: string,
//     country: string
//   }
// }
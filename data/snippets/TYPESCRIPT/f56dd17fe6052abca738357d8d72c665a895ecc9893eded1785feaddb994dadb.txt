// Importing required modules
import * as fs from 'fs';
import * as path from 'path';
import * as csv from 'csv-parser';

// Defining interface for data
interface Data {
  id: number;
  name: string;
  age: number;
  location: string;
  scores: number[];
}

// Defining function to read CSV file
function readCSV(filePath: string): Promise<Data[]> {
  // Creating empty array to hold data
  const dataArray: Data[] = [];

  // Using fs and csv-parser modules to read and parse data
  return new Promise((resolve, reject) => {
    fs.createReadStream(filePath)
      .pipe(csv())
      .on('data', (data) => {
        // Converting string values to numbers if applicable
        data.id = parseInt(data.id, 10);
        data.age = parseInt(data.age, 10);
        data.scores = data.scores.split(',').map((score) => parseInt(score, 10));
        dataArray.push(data);
      })
      .on('end', () => {
        // Resolving promise with data array
        resolve(dataArray);
      })
      .on('error', (err) => {
        // Rejecting promise if there's an error
        reject(err);
      });
  });
}

// Calling readCSV function and passing in file path
readCSV(path.join(__dirname, 'data.csv'))
  .then((data) => {
    // Logging data to console
    console.log(data);
  })
  .catch((err) => {
    // Logging error to console
    console.log(err);
  });
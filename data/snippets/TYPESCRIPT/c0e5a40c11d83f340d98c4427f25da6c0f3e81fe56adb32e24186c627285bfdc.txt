/**
 * Class representing a user.
 */
class User {
  /**
   * Constructor for user.
   * @param {string} name - The name of the user.
   * @param {string} email - The email of the user.
   * @param {number} age - The age of the user.
   */
  constructor(name: string, email: string, age: number) {
    this.name = name;
    this.email = email;
    this.age = age;
  }

  /**  The name of the user */
  private name: string;

  /** The email of the user */
  private email: string;

  /** The age of the user */
  private age: number;

  /**
   * Function to get the name of the user.
   * @returns {string} The name of the user.
   */
  getName(): string {
    return this.name;
  }

  /**
   * Function to get the email of the user.
   * @returns {string} The email of the user.
   */
  getEmail(): string {
    return this.email;
  }

  /**
   * Function to get the age of the user.
   * @returns {number} The age of the user.
   */
  getAge(): number {
    return this.age;
  }

  /**
   * Function to update the email of the user.
   * @param {string} newEmail - The new email to be set.
   */
  setEmail(newEmail: string): void {
    this.email = newEmail;
  }

  /**
   * Function to update the age of the user.
   * @param {number} newAge - The new age to be set.
   */
  setAge(newAge: number): void {
    this.age = newAge;
  }
}

// Create a new instance of User
const user = new User("John Doe", "johndoe@example.com", 25);

// Get user's name
const name = user.getName();
console.log(name); // Output: "John Doe"

// Update user's email
user.setEmail("jdoe@example.com");

// Get user's email
const email = user.getEmail();
console.log(email); // Output: "jdoe@example.com"

// Update user's age
user.setAge(30);

// Get user's age
const age = user.getAge();
console.log(age); // Output: 30
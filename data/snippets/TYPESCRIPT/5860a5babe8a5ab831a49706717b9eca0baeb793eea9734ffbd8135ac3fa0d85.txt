// Creating a generic class with multiple type parameters
class Pair<T, U> { 
    // Declaring private variables of type T and U 
    private first: T 
    private second: U 

    // Constructor with parameters of type T and U 
    constructor(first: T, second: U) { 
        this.first = first 
        this.second = second 
    } 

    // Method to get the first element of the pair 
    public getFirst(): T { 
        return this.first 
    } 

    // Method to get the second element of the pair 
    public getSecond(): U { 
        return this.second 
    } 
} 

// Initializing a new Pair object with string and number parameters 
let pair = new Pair<string, number>('Hello', 123) 

// Calling the getFirst() method to retrieve the first element of the pair 
let first = pair.getFirst() 

// Calling the getSecond() method to retrieve the second element of the pair 
let second = pair.getSecond() 

// Logging the values of the first and second elements 
console.log(first) // Output: Hello
console.log(second) // Output: 123
/**
 * This function takes in two arrays and returns a new array with elements from both arrays, sorted in ascending order.
 *
 * @param array1 - The first array to be merged.
 * @param array2 - The second array to be merged.
 * @returns mergedArray - The merged array with sorted elements from both arrays.
 */
function mergeArrays(array1: number[], array2: number[]): number[] {
    let mergedArray: number[] = [];
    let index1: number = 0;
    let index2: number = 0;

    // Loop through both arrays until all elements have been added to the mergedArray
    while (index1 < array1.length || index2 < array2.length) {
        // If array1 has been fully traversed, add remaining elements from array2 to mergedArray
        if (index1 === array1.length) {
            mergedArray.push(...array2.slice(index2, array2.length));
            break;
        }
        // If array2 has been fully traversed, add remaining elements from array1 to mergedArray
        else if (index2 === array2.length) {
            mergedArray.push(...array1.slice(index1, array1.length));
            break;
        }
        else {
            // If element at index1 is smaller than element at index2, add it to mergedArray and increment index1
            if (array1[index1] < array2[index2]) {
                mergedArray.push(array1[index1]);
                index1++;
            }
            // If element at index2 is smaller than element at index1, add it to mergedArray and increment index2
            else {
                mergedArray.push(array2[index2]);
                index2++;
            }
        }
    }

    return mergedArray;
}

// Example usage of mergeArrays function
console.log(mergeArrays([1,5,9], [2,4,8])); // Output: [1,2,4,5,8,9]
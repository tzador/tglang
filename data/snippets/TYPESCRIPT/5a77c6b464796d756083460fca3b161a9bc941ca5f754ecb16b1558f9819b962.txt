/**
  * This is a function that takes in three parameters: a string, a number, and another function.
  * It then performs an operation using those parameters and returns the result.
  * @param str - the string parameter
  * @param num - the number parameter
  * @param func - the function parameter
  * @returns the result of the operation
  */
function complexFunction(str: string, num: number, func: Function): number {
  const result = func(str, num); // perform operation using func on str and num
  return result; // return the result
}

/**
 * This is a class representing a person with a name and age property.
 * It also has a method that returns the person's name.
 */
class Person {
  name: string;
  age: number;

  /**
   * The constructor function for the Person class.
   * @param name - the name of the person
   * @param age - the age of the person
   */
  constructor(name: string, age: number) {
    this.name = name;
    this.age = age;
  }

  /**
   * This method returns the name of the person.
   * @returns the name of the person
   */
  getName() {
    return this.name;
  }
}

// an array of Person objects
const people: Person[] = [
  new Person('John', 25),
  new Person('Sarah', 30),
  new Person('David', 40),
];

// a function that returns the average age of an array of Person objects
function getAverageAge(people: Person[]): number {
  let sum = 0; // initialize sum variable
  for (let person of people) {
    sum += person.age; // add each person's age to the sum
  }
  return sum / people.length; // calculate and return the average age
}

const averageAge = getAverageAge(people); // calculate average age of the given array of Person objects

console.log(`The average age is ${averageAge} years old.`); // print the average age
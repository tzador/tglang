/**
 * Creates an interface for a person with a certain number of properties.
 * @param firstName A string representing the person's first name.
 * @param lastName A string representing the person's last name.
 * @param age An integer representing the person's age.
 * @param address A string representing the person's address.
 * @param occupation A string representing the person's occupation.
 */
interface Person {
  firstName: string;
  lastName: string;
  age: number;
  address: string;
  occupation: string;
};

// Creates a function that takes in an array of names and returns an array of objects with Person interface properties.
function createPersonArray(names: string[]): Person[] {
  let personArray: Person[] = [];

  // Uses a for loop to iterate through the names array and create a Person object for each name.
  for (let name of names) {
    let personObject: Person = {
      firstName: name.split(" ")[0], // Splits the full name string into first and last name.
      lastName: name.split(" ")[1],
      age: Math.floor(Math.random() * 60) + 18, // Generates a random age between 18 and 77.
      address: "123 Main Street",
      occupation: "Unemployed"
    };

    personArray.push(personObject); // Adds the newly created Person object to the personArray.
  }

  return personArray; // Returns the array of Person objects.
};

// Creates an array of names to be used as input for the createPersonArray function.
let names: string[] = ["John Doe", "Jane Smith", "Bob Johnson"];

// Calls the createPersonArray function and stores the output in a variable.
let persons: Person[] = createPersonArray(names);

// Uses a for loop to iterate through the persons array and print out each person's information.
for (let person of persons) {
  console.log(`Name: ${person.firstName} ${person.lastName}`);
  console.log(`Age: ${person.age}`);
  console.log(`Address: ${person.address}`);
  console.log(`Occupation: ${person.occupation}\n`);
}
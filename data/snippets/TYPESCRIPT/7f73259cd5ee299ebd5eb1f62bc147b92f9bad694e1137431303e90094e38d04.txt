// import necessary libraries
import * as React from 'react';
import { useState, useEffect } from 'react';
import axios from 'axios';

// define custom type interfaces
interface User {
  id: number;
  name: string;
  email: string;
  address: {
    street: string;
    city: string;
    state: string;
  }
}

interface Post {
  userId: number;
  id: number;
  title: string;
  body: string;
}

// define component function
const Posts: React.FC = () => {
  // use useState and define state variables
  const [users, setUsers] = useState<User[]>([]);
  const [posts, setPosts] = useState<Post[]>([]);

  // define useEffect hook to fetch data from API on component mount
  useEffect(() => {
    // define async function to make API call
    async function fetchData() {
      // get users data from API
      const usersData = await axios.get('https://jsonplaceholder.typicode.com/users');
      // set users state with retrieved data
      setUsers(usersData.data);
      // get posts data from API
      const postsData = await axios.get('https://jsonplaceholder.typicode.com/posts');
      // set posts state with retrieved data
      setPosts(postsData.data);
    }   
    // call the fetchData function
    fetchData();
    // pass empty dependency array to only make API call once
  }, []);

  // render component UI
  return (
    <div>
      {/* map through users array and render user cards */}
      {users.map(user => (
        <div key={user.id}>
          <h3>{user.name}</h3>
          <p>{user.email}</p>
          <p>{user.address.street}, {user.address.city}, {user.address.state}</p>
          <h4>Posts:</h4>
          {/* filter posts array by user id and map through filtered posts to render post cards */}
          {posts.filter(post => post.userId === user.id).map(post => (
            <div key={post.id}>
              <h5>{post.title}</h5>
              <p>{post.body}</p>
            </div>
          ))}
        </div>
      ))}
    </div>
  );
};

// export component
export default Posts;
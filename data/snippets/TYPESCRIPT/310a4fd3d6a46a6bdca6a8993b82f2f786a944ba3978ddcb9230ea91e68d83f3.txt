// A complex code snippet in TypeScript

/**
* Represents a person's information
*/
interface PersonInfo {
  id: number,
  name: string,
  age: number,
  address?: string,
  phoneNumber?: string,
  email: string
}

/**
* Represents a type of profession
*/
type Profession = "Doctor" | "Lawyer" | "Engineer" | "Teacher";

/**
* Represents an employee's information
*/
interface EmployeeInfo {
  id: number,
  name: string,
  profession: Profession,
  salary: number,
  department: string,
  yearsOfExperience: number
}

/**
* Represents a function that calculates an employee's bonus based on their years of experience
* @param yearsOfExperience Number of years of experience of the employee
* @returns The calculated bonus
*/
function calculateBonus(yearsOfExperience: number): number {
  if (yearsOfExperience >= 5) {
    return 5000;
  } else if (yearsOfExperience >= 3) {
    return 3000;
  } else {
    return 1000;
  }
}

/**
* Represents an array of employee information
*/
const employees: EmployeeInfo[] = [
  {
    id: 1,
    name: "John Smith",
    profession: "Engineer",
    salary: 60000,
    department: "Engineering",
    yearsOfExperience: 4
  },
  {
    id: 2,
    name: "Jane Doe",
    profession: "Lawyer",
    salary: 80000,
    department: "Legal",
    yearsOfExperience: 8
  },
  {
    id: 3,
    name: "Sarah Brown",
    profession: "Doctor",
    salary: 100000,
    department: "Medicine",
    yearsOfExperience: 12
  }
];

// Iterate through the employees array to print out their information and bonus
for (const employee of employees) {
  console.log(`${employee.name} is a ${employee.profession} with a salary of $${employee.salary} and a bonus of $${calculateBonus(employee.yearsOfExperience)}`);
}

// Output:
// John Smith is a Engineer with a salary of $60000 and a bonus of $3000
// Jane Doe is a Lawyer with a salary of $80000 and a bonus of $5000
// Sarah Brown is a Doctor with a salary of $100000 and a bonus of $5000
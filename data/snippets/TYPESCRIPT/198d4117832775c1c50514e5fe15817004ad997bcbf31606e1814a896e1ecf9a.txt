/**
 * This is a generic class that takes in two types, T and U, and stores an array of objects of type T and U.
 */
class ExampleClass<T, U> {
    /**
     * This is the array that will store objects of type T and U.
     */
    private myArray: [T, U][] = [];

    /**
     * This method adds a new object of type T and U to the class's array.
     * @param obj1 Object of type T
     * @param obj2 Object of type U
     * @returns The newly added object
     */
    public addObject(obj1: T, obj2: U): [T, U] {
        const newObj: [T, U] = [obj1, obj2];
        this.myArray.push(newObj);
        return newObj;
    }

    /**
     * This method prints out all the objects in the class's array.
     */
    public printObjects(): void {
        for (const obj of this.myArray) {
            console.log(obj);
        }
    }
}

// Create an instance of ExampleClass with types string and number.
const exampleInstance = new ExampleClass<string, number>();

// Add new objects to the array.
exampleInstance.addObject("Hello", 1);
exampleInstance.addObject("World", 2);

// Print out all the objects in the array.
exampleInstance.printObjects();

// Output:
// ["Hello", 1]
// ["World", 2]
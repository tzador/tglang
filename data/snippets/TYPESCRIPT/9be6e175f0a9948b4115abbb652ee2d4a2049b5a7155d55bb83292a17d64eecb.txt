interface Animal { // Creates an interface called "Animal"
  name: string; // Defines a property "name" of type string
  age: number; // Defines a property "age" of type number
  breed?: string; // Defines an optional property "breed" of type string
  speak(): void; // Defines a method called "speak" with return type void
}

class Dog implements Animal { // Creates a class called "Dog" that implements the Animal interface
  name: string; // Defines a property "name" of type string
  age: number; // Defines a property "age" of type number
  breed: string; // Defines a property "breed" of type string
  constructor(name: string, age: number, breed: string) { // Defines a constructor for the class with parameters to initialize the properties
    this.name = name; // Assigns the name parameter to the "name" property
    this.age = age; // Assigns the age parameter to the "age" property
    this.breed = breed; // Assigns the breed parameter to the "breed" property
  }
  speak(): void { // Implements the "speak" method from the Animal interface
    console.log(`Woof! My name is ${this.name}. I am ${this.age} years old and I am a ${this.breed}.`); // Prints a string with the values of the properties interpolated
  }
}

let fido: Dog = new Dog("Fido", 3, "Golden Retriever"); // Creates an instance of the Dog class and assigns it to the variable "fido"
fido.speak(); // Calls the "speak" method on the instance
type Book {
    title: string;
    author: string;
    yearPublished: number;
    genres: string [];
}

interface Library {
    name: string;
    location: string;
    isOpen: boolean;
    books: Book [];
}

class PublicLibrary implements Library {
    
    name: string;
    location: string;
    isOpen: boolean;
    books: Book [];
    patrons: string [];
    
    constructor(name:string, location:string, isOpen:boolean, books:Book[], patrons:string[]) {
        this.name = name;
        this.location = location;
        this.isOpen = isOpen;
        this.books = books;
        this.patrons = patrons;
    }
    
    addBook(title:string, author:string, yearPublished:number, genres:string[]): void {
        if(this.isOpen) {
            const newBook:Book = {
                title: title,
                author: author,
                yearPublished: yearPublished,
                genres: genres
            }
            this.books.push(newBook);
        }
    }
    
    removeBook(title:string): void {
        if(this.isOpen) {
            for(let i = 0; i < this.books.length; i++) {
                if(this.books[i].title === title) {
                    this.books.splice(i, 1);
                    break;
                }
            }
        }
    }
    
    checkInBook(title:string): void {
        if(this.isOpen) {
            for(let i = 0; i < this.books.length; i++) {
                if(this.books[i].title === title) {
                    this.books.splice(i, 1);
                    break;
                }
            }
        }
    }
    
    checkOutBook(title:string): void {
        if(this.isOpen) {
            for(let i = 0; i < this.books.length; i++) {
                if(this.books[i].title === title) {
                    this.books.splice(i, 1);
                    break;
                }
            }
        }
    }
    
    listBooks(): string[] {
        let output:string[] = [];
        for(let i = 0; i < this.books.length; i++) {
            output.push(this.books[i].title);
        }
        return output;
    }
}
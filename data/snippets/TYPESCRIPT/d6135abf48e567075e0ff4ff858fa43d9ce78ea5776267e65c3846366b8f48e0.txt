/**
 * A generic function that checks for the existence of a property on an object.
 * @template T A generic type parameter that extends an object type.
 * @param obj An object that is checked for the given property.
 * @param key A key of T to check the existence on.
 * @returns A boolean indicating whether or not the property exists.
 */
const checkPropertyExistence = <T extends object>(obj: T, key: keyof T): boolean => {
  return key in obj;
}

// Example usage:
interface Person {
  name: string;
  age: number;
  address: string;
}

const person: Person = {
  name: 'John Doe',
  age: 25,
  address: '123 Street'
}

// Checking if person has the property 'age'
const hasAge: boolean = checkPropertyExistence(person, 'age'); // Output: true
// Checking if person has the property 'job'
const hasJob: boolean = checkPropertyExistence(person, 'job'); // Output: false
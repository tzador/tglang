/* This is a typescript code snippet that represents a class definition */

class Person {
    private name: string;
    private age: number;

    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }

    /**
     * Method to print the person's name and age
     * @returns string 
     */
    getNameAndAge(): string {
        return `Name: ${this.name}, Age: ${this.age}`;
    }
}

// Creating an instance of the Person class
const person = new Person("John", 25);

// Printing the person's name and age
console.log(person.getNameAndAge()); // Output: Name: John, Age: 25

// Subclass extending the Person class
class Student extends Person {
    private course: string;

    constructor(name: string, age: number, course: string) {
        super(name, age);
        this.course = course;
    }

    /**
     * Method to print the student's course
     * @returns string 
     */
    getCourse(): string {
        return `Course: ${this.course}`;
    }
}

// Creating an instance of the Student class
const student = new Student("Sarah", 22, "Computer Science");

// Printing the student's name, age, and course
console.log(student.getNameAndAge()); // Output: Name: Sarah, Age: 22
console.log(student.getCourse()); // Output: Course: Computer Science
// Define the 'Person' interface with properties 'name', 'age' and 'address'
interface Person {
  name: string;
  age: number;
  address: string;
}

// Create an array of 'Person' objects
let people: Person[] = [
  { name: 'John', age: 25, address: '123 Main St' },
  { name: 'Jane', age: 30, address: '456 Elm Ave' },
  { name: 'Bob', age: 40, address: '789 Pine Rd' }
]

// Define a generic function that takes in an array of type 'T' and returns a boolean
function checkAge<T>(list: T[]): boolean {
  // Initialize a variable to hold the index of the oldest person
  let oldestIndex: number = 0;
  // Loop through the array and compare the ages of each person
  for (let i = 1; i < list.length; i++) {
    if (list[i].age > list[oldestIndex].age) {
      // Update the index if the current person is older
      oldestIndex = i;
    }
  }
  // Check if the oldest person is over 35 years old
  if (list[oldestIndex].age > 35) {
    return true;
  } else {
    return false;
  }
}

// Call the function with the 'people' array and log the result
console.log(checkAge<Person>(people));

// Output: true (since the oldest person is 40 years old)
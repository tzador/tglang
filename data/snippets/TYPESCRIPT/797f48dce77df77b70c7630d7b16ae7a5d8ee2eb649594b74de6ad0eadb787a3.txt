// Create a class called Animal with a constructor that takes in a name and age
// Use private properties to store the name and age
class Animal {
    private name: string;
    private age: number;

    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }
}

// Create a subclass called Cat that extends the Animal class
// Add a private property called breed
// Create a getter and setter for the breed property
class Cat extends Animal {
    private breed: string;

    getBreed(): string {
        return this.breed;
    }

    setBreed(newBreed: string) {
        this.breed = newBreed;
    }
}

// Create a function called printAnimalInfo that takes in an Animal object as a parameter
// Use template literals to print the name and age of the animal
function printAnimalInfo(animal: Animal) {
    console.log(`Name: ${animal.name}, Age: ${animal.age}`);
}

// Create an instance of the Cat class with the name "Fluffy", age 5, and breed "Persian"
let fluffyCat = new Cat("Fluffy", 5);
fluffyCat.setBreed("Persian");

// Call the printAnimalInfo function passing in the fluffyCat object
printAnimalInfo(fluffyCat);

// Output:
// Name: Fluffy, Age: 5
// Interface for a car object
interface Car {
  brand: string; // Stores the brand of the car as a string
  model: string; // Stores the model of the car as a string
  year: number; // Stores the year the car was made as a number
  color?: string; // Optional property that stores the color of the car as a string
  features: string[]; // Stores an array of strings representing the features of the car
  startEngine(): void; // Function that starts the car's engine and does not return anything
  accelerate(speed: number): void; // Function that accelerates the car to a specified speed and does not return anything
  brake(): void; // Function that brakes the car and does not return anything
}

// Create a new car object
const myCar: Car = {
  brand: "Toyota",
  model: "Camry",
  year: 2020,
  color: "silver",
  features: ["automatic transmission", "backup camera", "remote start"],
  startEngine() {
    console.log("Engine started!");
  },
  accelerate(speed) {
    console.log(`Accelerating to ${speed} mph`);
  },
  brake() {
    console.log("Braking...");
  }
};

// Use object and call methods
console.log(`My car is a ${myCar.year} ${myCar.brand} ${myCar.model} that is ${myCar.color}. It has the following features: ${myCar.features.join(", ")}.`);
myCar.startEngine();
myCar.accelerate(50);
myCar.brake();

/* 
Output: 
My car is a 2020 Toyota Camry that is silver. It has the following features: automatic transmission, backup camera, remote start.
Engine started!
Accelerating to 50 mph
Braking...
*/
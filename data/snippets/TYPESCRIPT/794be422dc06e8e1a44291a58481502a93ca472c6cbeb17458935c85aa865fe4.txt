interface User {
  name: string;
  age: number;
  email: string;
}

class Person {
  private firstname: string;
  private lastname: string;
  
  constructor(firstname: string, lastname: string) {
    this.firstname = firstname;
    this.lastname = lastname;
  }
  
  getFullName(): string {
    return `${this.firstname} ${this.lastname}`;
  }
  
  getInitials(): string {
    return `${this.firstname.charAt(0)}${this.lastname.charAt(0)}`;
  }
}

class Employee extends Person {
  private position: string;
  
  constructor(firstname: string, lastname: string, position: string) {
    super(firstname, lastname);
    this.position = position;
  }
  
  getPosition(): string {
    return this.position;
  }
  
  getFormalName(): string {
    return `Mr/Mrs ${this.lastname}`;
  }
}

const user: User = {
  name: "John",
  age: 25,
  email: "john@example.com"
}

const employee: Employee = new Employee("Jane", "Doe", "manager");
console.log(employee.getFullName()); // outputs "Jane Doe"
console.log(employee.getInitials()); // outputs "JD"
console.log(employee.getPosition()); // outputs "manager"
console.log(employee.getFormalName()); // outputs "Mr/Mrs Doe"
console.log(user.name); // outputs "John"
console.log(user.age); // outputs 25
console.log(user.email); // outputs "john@example.com"
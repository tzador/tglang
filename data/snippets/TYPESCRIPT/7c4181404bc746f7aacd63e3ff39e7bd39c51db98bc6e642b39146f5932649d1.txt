// The following code snippet creates a class named Person with properties name and age, and functions to set and get their values

class Person {
  private _name: string; // declaring a private property _name of type string
  private _age: number; // declaring a private property _age of type number

  constructor(name: string, age: number) { // defining the constructor function with parameters name and age, both of type string and number respectively
    this._name = name; // assigning the value of the parameter name to the private property _name
    this._age = age; // assigning the value of the parameter age to the private property _age
  }

  get name(): string { // defining a getter function for the property name, which returns a string value
    return this._name;
  }

  set name(value: string) { // defining a setter function for the property name, which takes a string value as parameter
    this._name = value;
  }

  get age(): number { // defining a getter function for the property age, which returns a number value
    return this._age;
  }

  set age(value: number) { // defining a setter function for the property age, which takes a number value as parameter
    this._age = value;
  }
}

let person = new Person("John", 25); // creating an instance of the Person class with name "John" and age 25
console.log(`Name: ${person.name}, Age: ${person.age}`); // prints out the name and age of the person object created
person.name = "Jack"; // using the setter function to change the value of the name property to "Jack"
person.age = 30; // using the setter function to change the value of the age property to 30
console.log(`Name: ${person.name}, Age: ${person.age}`); // prints out the updated name and age of the person object
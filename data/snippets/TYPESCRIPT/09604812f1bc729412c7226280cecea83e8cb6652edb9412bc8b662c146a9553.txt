/**
 * Represents a Person with a name and age.
 *
 * `name` property is required, `age` property is optional.
 */
class Person {
  private name: string;

  constructor(name: string, public age?: number) {
    this.name = name;
  }

  /**
   * Returns the name of the Person.
   */
  getName(): string {
    return this.name;
  }

  /**
   * Sets the name of the Person.
   * @param name The new name to set.
   */
  setName(name: string): void {
    this.name = name;
  }

  /**
   * Returns the age of the Person.
   */
  getAge(): number | undefined {
    return this.age;
  }

  /**
   * Sets the age of the Person.
   * @param age The new age to set.
   */
  setAge(age: number): void {
    this.age = age;
  }
}

// Create new instance of Person class with name "John" and age 25
const person = new Person("John", 25);

// Output person's name and age to console
console.log(`Name: ${person.getName()}`);
console.log(`Age: ${person.getAge()}`);

// Change person's age to 30
person.setAge(30);

// Output updated age to console
console.log(`Updated Age: ${person.getAge()}`);
// This is a complex code snippet in Typescript
interface IMyObject {
    name: string, // This is a string property
    id: number, // This is a number property
    boolVal: boolean // This is a boolean property
}

class MyClass<T extends number> {
    id: T;

    constructor(id: T) {
        this.id = id;
    }
    
    // A generic method to check for type and return value
    getValue<T>(element: T): T {
        if(typeof element === "string") {
            return element[0] as T;
        } else if (typeof element === "number") {
            return element as T;
        } else {
            return element as T;
        }
    }
}

// Create a new instance of MyClass
const myClassInstance = new MyClass(42);

// Call the getValue method and pass in a string as the argument
const value = myClassInstance.getValue<string>("Hello world");

// Display the value in the console
console.log(value); // Output: 'H'
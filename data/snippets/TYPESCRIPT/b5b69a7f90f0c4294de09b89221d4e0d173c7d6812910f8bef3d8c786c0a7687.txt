/* A class representing a basic person */
class Person {
    private name: string; // Private member variable for name
    private age: number; // Private member variable for age

    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }

    /* A method to get the name of the person */
    getName(): string {
        return this.name;
    }

    /* A method to set the name of the person */
    setName(name: string): void {
        this.name = name;
    }

    /* A method to get the age of the person */
    getAge(): number {
        return this.age;
    }

    /* A method to set the age of the person */
    setAge(age: number): void {
        this.age = age;
    }

    /* A method that checks if the person is an adult */
    isAdult(): boolean {
        return this.age >= 18;
    }
}

/* An interface representing a basic animal */
interface Animal {
    name: string;
    age: number;
    type: string;
    speaks: boolean;
}

/* A function that takes in an animal and prints out its information */
function printAnimalInfo(animal: Animal): void {
    console.log(`Name: ${animal.name}\nAge: ${animal.age}\nType: ${animal.type}\nCan speak: ${animal.speaks}`);
}

// Create a new Person object
let person1 = new Person("John", 25);
// Create a new animal object
let animal1 = { name: "Spot", age: 3, type: "dog", speaks: false };

// Call methods on the person object
console.log(`Name: ${person1.getName()}\nAge: ${person1.getAge()}\nIs adult: ${person1.isAdult()}`);

// Call function to print out animal information
printAnimalInfo(animal1);
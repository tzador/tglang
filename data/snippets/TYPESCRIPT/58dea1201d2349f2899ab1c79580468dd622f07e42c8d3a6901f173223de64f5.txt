/**
 * Class representing a person.
 */
class Person {
  private name: string;
  private age: number;
  private gender: string;

/**
 * Constructs a new Person object.
 * @param {string} name - The person's name.
 * @param {number} age - The person's age.
 * @param {string} gender - The person's gender.
 */
  constructor(name: string, age: number, gender: string) {
    this.name = name;
    this.age = age;
    this.gender = gender;
  }

/**
 * Gets the person's name.
 * @returns {string} The person's name.
 */
  getName(): string {
    return this.name;
  }

/**
 * Sets the person's name.
 * @param {string} name - The person's new name.
 */
  setName(name: string): void {
    this.name = name;
  }

/**
 * Gets the person's age.
 * @returns {number} The person's age.
 */
  getAge(): number {
    return this.age;
  }

/**
 * Sets the person's age.
 * @param {number} age - The person's new age.
 */
  setAge(age: number): void {
    this.age = age;
  }

/**
 * Gets the person's gender.
 * @returns {string} The person's gender.
 */
  getGender(): string {
    return this.gender;
  }

/**
 * Sets the person's gender.
 * @param {string} gender - The person's new gender.
 */
  setGender(gender: string): void {
    this.gender = gender;
  }

/**
 * Prints out a greeting from the person.
 * @returns {string} The greeting.
 */
  sayHello(): string {
    return `Hello, my name is ${this.name} and I am ${this.age} years old.`;
  }
}

// Create a new Person object
const person = new Person('John', 25, 'male');
// Output the person's name and greeting
console.log(`Name: ${person.getName()}`);
console.log(person.sayHello());

// Output: Name: John
// Output: Hello, my name is John and I am 25 years old.
/**
 * Represents a class for creating and manipulating 2D arrays.
 * @param <T> The type of the elements in the array.
 */
class Array2D<T> {
    private _rows: number;
    private _cols: number;
    private _data: T[][];

    /**
     * Initializes a new instance of the Array2D class.
     * @param rows The number of rows in the array.
     * @param cols The number of columns in the array.
     * @param initialValue The initial value to fill the array with.
     */
    constructor(rows: number, cols: number, initialValue: T) {
        this._rows = rows;
        this._cols = cols;
        this._data = new Array<T[]>(rows);

        for (let i = 0; i < rows; i++) {
            this._data[i] = new Array(cols);
            for (let j=0; j < cols; j++) {
                this._data[i][j] = initialValue;
            }
        }
    }

    /**
     * Gets the number of rows in the array.
     * @return The number of rows in the array.
     */
    public get rows(): number {
        return this._rows;
    }

    /**
     * Gets the number of columns in the array.
     * @return The number of columns in the array.
     */
    public get cols(): number {
        return this._cols;
    }

    /**
     * Gets the value at the specified row and column.
     * @param row The row index.
     * @param col The column index.
     * @return The value at the specified row and column.
     */
    public get(row: number, col: number): T {
        return this._data[row][col];
    }

    /**
     * Sets the value at the specified row and column.
     * @param row The row index.
     * @param col The column index.
     * @param value The value to be set.
     */
    public set(row: number, col: number, value: T): void {
        this._data[row][col] = value;
    }

    /**
     * Applies the specified function to each element of the array.
     * @param func The function to apply.
     */
    public map(func: (element: T) => T): void {
        for (let i = 0; i < this._rows; i++) {
            for (let j = 0; j < this._cols; j++) {
                this._data[i][j] = func(this._data[i][j]);
            }
        }
    }
}

// Example usage
let myArray = new Array2D(3, 4, 0);   // Creates a 3x4 array filled with 0's
myArray.set(1, 2, 5);                 // Sets the value at row 1, column 2 to 5
myArray.map((elem) => elem + 1);      // Adds 1 to each element in the array

console.log(myArray.get(1, 2));       // Outputs 6 (value at row 1, column 2)
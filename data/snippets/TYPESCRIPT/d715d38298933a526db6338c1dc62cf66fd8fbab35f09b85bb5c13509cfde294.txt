/* 
create a class called 'Vehicle' with a constructor that takes parameters 'make' and 'model'
and creates two properties 'make' and 'model' with corresponding values 
*/

class Vehicle {
  /*
  assign the values of the 'make' and 'model' parameters to the properties 'make' and 'model'
  with the help of a constructor
  */
  constructor(make: string, model: string) {
    this.make = make;
    this.model = model;
  }

  /*
  create a method 'drive' that takes in a number of kilometers and
  outputs a string indicating the distance driven
  */
  drive(kilometers: number): string {
    return `You drove ${kilometers} kilometers!`;
  }

  /*
  create an interface called 'Car' with properties: 'color', 'year', and 'numWheels'
  */
  interface Car {
    color: string;
    year: number;
    numWheels: number;
  }

  /*
  create a function that takes in a 'Car' object as a parameter and outputs a string
  that includes the object's color, year, and number of wheels
  */
  function printCarInfo(car: Car) {
    return `This car is a ${car.color} ${car.year} model with ${car.numWheels} wheels.`;
  };
}
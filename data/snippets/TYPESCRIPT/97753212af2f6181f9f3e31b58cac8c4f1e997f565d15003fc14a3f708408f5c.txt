/******************************************************************
* This is a complex code snippet written in TypeScript.
* It contains several functions and interfaces.
* The code demonstrates the use of generics and conditional types.
*
*******************************************************************/
// Interface representing a key-value pair element
interface KeyValuePair<K, V> {
  key: K;
  value: V;
}

// Function to merge two objects of type T
// This makes use of generics to allow for various types
function mergeObjects<T>(a: T, b: T) {
  return {
    ...a,
    ...b
  };
}

// Example use of the mergeObjects function
const mergedObject = mergeObjects<{name: string, age: number}>({name: "John"}, {age: 30});
console.log(mergedObject); // Output: {name: "John", age: 30}

// Conditional type that checks if a key exists in a given object
type HasKey<K> = K extends Record<any, any> ? keyof K : never;

// Generic function to get the value of a given key from an object
// Uses conditional type to check if key exists in object
function getValue<T, K extends HasKey<T>>(obj: T, key: K): T[K] {
  return obj[key];
}

// Example use of getValue function with a defined interface
interface Person {
  name: string;
  age: number;
}

// Creating an object
const person: Person = {
  name: "Mary",
  age: 25
}

// Calling getValue function with defined interface and property name
const name = getValue(person, "name");
console.log(name); // Output: Mary

// Calling getValue function with incorrect property name
const occupation = getValue(person, "occupation"); // Will throw an error as "occupation" is not a property of the Person interface
console.log(occupation); // Output: Error

// Generic function to convert a list of objects to a formatted string
function listToString<T extends {toString(): string}>(list: T[]): string {
  return list.map(item => item.toString()).join(", ");
}

// Example use of listToString function with a list of numbers
const numbers = [1, 2, 3, 4, 5];
console.log(listToString(numbers)); // Output: "1, 2, 3, 4, 5"

// Example use of listToString function with a list of strings
const strings = ["Hello", "World"];
console.log(listToString(strings)); // Output: "Hello, World"
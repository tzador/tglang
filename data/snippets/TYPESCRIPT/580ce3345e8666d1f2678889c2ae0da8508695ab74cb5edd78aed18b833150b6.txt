//Defining an interface for a Person object
interface Person {
    name: string;
    age: number;
    gender: string;
    occupation: string;
    //Defining an optional property
    address?: string;
}

//Creating a function that creates and returns a Person object
function createPerson(name:string, age:number, gender:string, occupation:string, address?:string): Person {
    return {
        name,
        age,
        gender,
        occupation,
        address
    };
}

//Creating a new Person object using the createPerson function
let john: Person = createPerson("John", 25, "male", "programmer");

//Defining a class for a Company object
class Company {
    name: string;
    industry: string;
    employees: Person[];
    //Defining a constructor function with default parameter
    constructor(name:string, industry:string, employees:Person[] = []) {
        this.name = name;
        this.industry = industry;
        this.employees = employees;
    }
    //Defining a method to add employees to the company
    addEmployee(employee: Person):void {
        this.employees.push(employee);
    }
}

//Creating a new Company object
let google: Company = new Company("Google", "technology");

//Adding employees to the google company
google.addEmployee(john);

//Logging the name and occupation of the first employee in the google company
console.log(google.employees[0].name + " is a " + google.employees[0].occupation + " at " + google.name);
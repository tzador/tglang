// A class named Shape with two properties
class Shape {
  // Private property with type "string"
  private _name: string;
  // Protected property with type "number"
  protected _sides: number;
  
  // Constructor to set the values of the properties
  constructor(name: string, sides: number) {
    this._name = name;
    this._sides = sides;
  }
  
  // Public method with return type "string"
  public info(): string {
    return `This shape is called ${this._name} and has ${this._sides} sides.`;
  }
}

// A class named Square that extends the Shape class
class Square extends Shape {
  // Private property with type "number"
  private _length: number;
  
  // Constructor to set the values of the properties
  constructor(name: string, length: number) {
    // Call the super constructor to set the values of the Shape's properties
    super(name, 4);
    this._length = length;
  }
  
  // Public method with return type "number"
  public area(): number {
    // Calculate the area of the square by multiplying the length by itself
    return this._length ** 2;
  }
}

// Create an instance of the Square class
let square = new Square("Square", 5);

// Call the info method on the square instance and print the result to the console
console.log(square.info());

// Call the area method on the square instance and print the result to the console
console.log(square.area());
// This function takes in two generic type variables T and U
// and an object of type T and returns an array of U type elements
function getTypeArray<T, U>(obj: T): U[] {
    let typeArray: U[] = [];
    // Loop through each key and value pair in the object
    for(let [key, value] of Object.entries(obj)){
        // Check if the value is of type U
        if(value instanceof U){
            // Add the value to the type array
            typeArray.push(value);
        }
    }
    // Return the type array
    return typeArray;
}

// Create an object with string and number values
const obj = {
    name: 'John',
    age: 25,
    occupation: 'Software Developer'
};

// Call the getTypeArray function with T as string and U as number
const result = getTypeArray<string, number>(obj);

// Print the result in the console
console.log(result);

// Output: [25]
// Annotated Generic Class with Interface Constraint
class CustomClass<T extends CustomInterface> {
    private _property: T;

    // Getter method
    get property() {
        return this._property;
    }

    // Setter method
    set property(value: T) {
        this._property = value;
    }

    // Generic method with interface constraint
    public customMethod<U extends CustomInterface>(parameter: U): string {
        return `${this._property} and ${parameter}`;
    }

    // Generic static method with interface constraint
    static customStaticMethod<V extends CustomInterface>(parameter: V): number {
        return parameter.length;
    }
}

// Interface with generic type parameter
interface CustomInterface<T> {
    length: number;
}

// Creating an instance of CustomClass
const instance = new CustomClass<{ length: number }>();

// Calling the generic static method
CustomClass.customStaticMethod({ length: 10 });

// Calling the generic method
instance.customMethod({ length: 5 });
/**
 * Represent a point in 3D space.
 * 
 * @property {number} x - x coordinate
 * @property {number} y - y coordinate
 * @property {number} z - z coordinate
 */
class Point {
    private x: number;
    private y: number;
    private z: number;

    constructor(x: number, y: number, z: number) {
        this.x = x;
        this.y = y;
        this.z = z;
    }
    
    /**
     * Returns the distance between this point and another point.
     * 
     * @param {Point} other - the other point to calculate the distance to
     * @returns {number} the distance between the two points
     */
    distanceTo(other: Point): number {
        const dx = this.x - other.x;
        const dy = this.y - other.y;
        const dz = this.z - other.z;
        return Math.sqrt(dx*dx + dy*dy + dz*dz);
    }

    /**
     * Returns true if this point is equal to another point.
     * 
     * @param {Point} other - the other point to compare to
     * @returns {boolean} true if the two points are equal
     */
    isEqualTo(other: Point): boolean {
        return this.x === other.x && this.y === other.y && this.z === other.z;
    }
}

// Create two points
const point1 = new Point(3, 5, 2);
const point2 = new Point(9, 1, 7);

// Calculate and print the distance between the two points
const distance = point1.distanceTo(point2);
console.log(`The distance between the two points is: ${distance}`);

// Check if the two points are equal and print the result
const areEqual = point1.isEqualTo(point2);
console.log(`Are the two points equal? ${areEqual}`);
// Creates a function called "multiply" that takes in two numbers and returns their product
function multiply(x: number, y: number) {
  return x * y;
}

// Defines a variable "num" with a value of 5
let num: number = 5;

// Defines a variable "result" that calls the "multiply" function with parameters "num" and 10 and stores the returned value
let result: number = multiply(num, 10);

// Prints the value of "result" to the console
console.log(result); // Output: 50

// Creates an array "numbers" with numbers 1-5
let numbers: number[] = [1, 2, 3, 4, 5];

// Loops through the "numbers" array and prints each number multiplied by 2
for (let i = 0; i < numbers.length; i++) {
  console.log(multiply(numbers[i], 2));
} // Output: 2, 4, 6, 8, 10

// Creates an object "person" with properties "name" and "age"
let person: { name: string; age: number } = {
  name: "John",
  age: 30,
};

// Defines an interface "Shape" with properties "type" and "color"
interface Shape {
  type: string;
  color: string;
}

// Creates a class "Circle" that implements the "Shape" interface
class Circle implements Shape {
  type: string;
  color: string;

  constructor(radius: number, color: string) {
    // Sets the "type" property to "circle" and the "color" property to the parameter passed in
    this.type = "circle";
    this.color = color;
  }
}

// Creates a new instance of the "Circle" class with a radius of 5 and a color of "blue"
let circle: Circle = new Circle(5, "blue");
console.log(circle.type); // Output: "circle"
console.log(circle.color); // Output: "blue"

// Creates a union type "numberOrString" that can be either a number or a string
let numberOrString: number | string;
numberOrString = 5; // Valid
numberOrString = "hello"; // Valid
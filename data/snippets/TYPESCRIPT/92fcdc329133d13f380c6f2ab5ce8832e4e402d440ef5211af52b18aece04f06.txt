// TypeScript code snippet using classes and interfaces

// Interface for a Rectangle object
interface Rectangle {
    name: string;
    length: number;
    width: number;
    // Method to calculate and return the area of the rectangle
    area(): number;
}

// Class implementing the Rectangle interface
class Square implements Rectangle {
    // Property for name
    name: string;
    // Properties for length and width
    length: number;
    width: number;
    
    // Constructor to initialize the properties
    constructor(name: string, length: number) {
        this.name = name;
        this.length = length;
        this.width = length;
    }
    // Method to calculate the area of the square
    area(): number {
        return this.length * this.length;
    }
}

// Class implementing the Rectangle interface with different length and width properties
class RectangleShape implements Rectangle {
    // Property for name
    name: string;
    // Properties for length and width
    length: number;
    width: number;
    
    // Constructor to initialize the properties
    constructor(name: string, length: number, width: number) {
        this.name = name;
        this.length = length;
        this.width = width;
    }
    // Method to calculate the area of the rectangle
    area(): number {
        return this.length * this.width;
    }
}

// Creating an instance of the Square class and calling the area method
let square: Square = new Square("Square 1", 5);
console.log(square.area()); // Output: 25

// Creating an instance of the RectangleShape class and calling the area method
let rectangle: RectangleShape = new RectangleShape("Rectangle 1", 4, 7);
console.log(rectangle.area()); // Output: 28
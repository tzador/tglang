// Function to perform a binary search on a sorted array

/**
 * @param arr - The array to be searched
 * @param start - The starting index of the subarray to be searched
 * @param end - The ending index of the subarray to be searched
 * @param target - The target value to search for in the array
 * @returns {boolean} - True if the target value is found, false if it is not found
 */

function binarySearch(arr: number[], start: number, end: number, target: number): boolean {
    // Check if the start index is greater than the end index
    if (start > end) {
        return false;
    }

    // Calculate the middle index of the subarray
    let mid = Math.floor((start + end) / 2);

    // Check if the middle element is equal to the target value
    if (arr[mid] === target) {
        return true;
    }

    // Check if the target value is less than the middle element
    // If so, search the left half of the subarray
    if (target < arr[mid]) {
        return binarySearch(arr, start, mid - 1, target);
    }

    // If not, search the right half of the subarray
    return binarySearch(arr, mid + 1, end, target);
}

// Example usage
let array = [1, 4, 6, 9, 11];
let target = 6;

// Call the binarySearch function
let result = binarySearch(array, 0, array.length - 1, target);

// Print the result
console.log(`The target value ${target} was found: ${result}`);
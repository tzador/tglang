// declaring a class "Person" with a constructor that takes in two parameters
class Person {
    // "private" keyword makes the variables accessible only within the class
    private firstName: string;
    private lastName: string;
    
    // defining a constructor that takes in two parameters "first" and "last"
    constructor(first: string, last: string) {
        // assigning the parameters to the class variables
        this.firstName = first;
        this.lastName = last;
    }
    
    // declaring a method "getFullName" that returns the full name of the person
    // using template literals to concatenate the first and last name
    getFullName(): string {
        return `${this.firstName} ${this.lastName}`;
    }
    
    // declaring a setter "setFirstName" that takes in a string parameter "newFirstName"
    // and assigns it to the "firstName" variable
    setFirstName(newFirstName: string) {
        this.firstName = newFirstName;
    }
}

// creating an instance of the class "Person" with values for the constructor parameters
let person1 = new Person("John", "Doe");

// calling the "getFullName" method on the "person1" instance and printing the output
console.log(person1.getFullName());

// setting a new first name using the "setFirstName" setter
person1.setFirstName("Jane");

// calling the "getFullName" method again to see the updated name
console.log(person1.getFullName());
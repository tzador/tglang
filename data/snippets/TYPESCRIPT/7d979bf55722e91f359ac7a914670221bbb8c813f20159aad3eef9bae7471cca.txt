/**
 * This helper function filters an array of objects based on a given property
 * and returns the object with the maximum value for that property.
 * 
 * @template T - A generic type for the array elements
 * @param {T[]} arr - The array to filter
 * @param {string} prop - The property to filter by
 * @return {T} - The object with the maximum value for the given property
 */
function getMaxByProperty<T>(arr: T[], prop: string): T {
    const filteredArr = arr.filter(item => item[prop] !== undefined);
    if (filteredArr.length === 0) {
        throw new Error(`No objects in the array have a property "${prop}".`);
    }
    return filteredArr.reduce((maxObj, obj) => obj[prop] > maxObj[prop] ? obj : maxObj);
}

// Example usage:
const people = [
    { name: 'John', age: 25 },
    { name: 'Alice', age: 33 },
    { name: 'Ben', age: 29 }
];

const oldestPerson = getMaxByProperty(people, 'age');
console.log(oldestPerson); // { name: 'Alice', age: 33 }
/* This is a complex code snippet in TypeScript. */

/** 
 * Interface for a user with name and age properties
 * and a function to calculate their birth year
 */
interface User {
  name: string;
  age: number;
  /** Calculates the user's year of birth based on their age */
  calculateBirthYear(): number;
}

/** 
 * Class for a student that extends the User interface
 * and adds a school property
 */
class Student implements User {
  name: string;
  age: number;
  school: string;

  constructor(name: string, age: number, school: string) {
    this.name = name;
    this.age = age;
    this.school = school;
  }

  /** Calculates the student's year of birth based on their age */
  calculateBirthYear(): number {
    const currentYear = new Date().getFullYear();
    return currentYear - this.age;
  }
}

// Create a new Student instance
const john = new Student("John", 20, "University of XYZ");

// Print student's name and school
console.log(`${john.name} is currently studying at ${john.school}.`)

// Call the calculateBirthYear() function and print the result
console.log(`John was born in ${john.calculateBirthYear()}.`)
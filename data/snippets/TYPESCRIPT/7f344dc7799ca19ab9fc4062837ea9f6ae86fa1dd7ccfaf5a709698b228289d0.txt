interface User {
  username: string;
  email: string;
  age: number;
  isAdmin: boolean;
  address: {
    street: string;
    city: string;
    country: string;
  };
}

class UserManager {
  users: User[];
  constructor() {
    this.users = [];
  }

  addUser(user: User) {
    this.users.push(user);
  }

  getUser(username: string): User | undefined {
    return this.users.find((user) => user.username === username);
  }

  getUsersByCity(city: string): User[] {
    return this.users.filter((user) => user.address.city === city);
  }

  updateUserAge(username: string, newAge: number) {
    const user = this.getUser(username);
    if (user) {
      user.age = newAge;
    }
  }

  deleteUser(username: string) {
    const userIndex = this.users.findIndex((user) => user.username === username);
    this.users.splice(userIndex, 1);
  }
}

// Usage example:
const userManager = new UserManager();
const user1: User = {
  username: "john",
  email: "john@test.com",
  age: 25,
  isAdmin: true,
  address: {
    street: "123 Main St",
    city: "New York",
    country: "USA",
  },
};

userManager.addUser(user1);
const user = userManager.getUser("john");
console.log(user);
// Output: { username: "john", email: "john@test.com", age: 25, isAdmin: true, address: { street: "123 Main St", city: "New York", country: "USA" }}
console.log(userManager.getUsersByCity("New York"));
// Output: [{ username: "john", email: "john@test.com", age: 25, isAdmin: true, address: { street: "123 Main St", city: "New York", country: "USA" }]
userManager.updateUserAge("john", 30);
console.log(user);
// Output: { username: "john", email: "john@test.com", age: 30, isAdmin: true, address: { street: "123 Main St", city: "New York", country: "USA" }}
userManager.deleteUser("john");
console.log(userManager.users);
// Output: []
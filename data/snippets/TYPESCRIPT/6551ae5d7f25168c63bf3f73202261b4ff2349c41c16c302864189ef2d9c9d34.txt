interface Person {
  name: string; // This is a string property that defines the person's name
  age: number; // This is a number property that defines the person's age
  address?: string; // This is an optional string property that defines the person's address
  phoneNumbers: string[]; // This is an array of strings that define the person's phone numbers
  greet: (name: string) => void; // This is a function that takes in a name parameter and returns nothing
  introduce: () => string; // This is a function that takes no parameters and returns a string
}

class Student implements Person {
  name: string;
  age: number;
  address?: string;
  phoneNumbers: string[];

  constructor(name: string, age: number, address?: string, phoneNumbers: string[]) {
    this.name = name;
    this.age = age;
    this.address = address;
    this.phoneNumbers = phoneNumbers;
  }

  greet(name: string): void {
    console.log(`Hello, ${name}! My name is ${this.name}.`);
  }

  introduce(): string {
    return `Hi there! My name is ${this.name} and I am ${this.age} years old.`;
  }
}

const student1: Student = new Student('John', 25, '123 Main St', ['555-555-5555', '123-456-7890']);
student1.greet('Jane');
console.log(student1.introduce());

// Output:
// Hello, Jane! My name is John.
// Hi there! My name is John and I am 25 years old.
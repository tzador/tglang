type Container<T> = {
  value: T;
  isFilled: boolean;
}

function addValue<T>(container: Container<T>, newValue: T): Container<T> {
  const updatedContainer: Container<T> = {
    value: newValue,
    isFilled: true
  };
  return updatedContainer;
}

function getFirstValue<T>(container: Container<T>): T {
  return container.value;
}

function updateValue<T>(container: Container<T>, updatedValue: T): Container<T> {
  if (container.isFilled) {
    container.value = updatedValue;
    return container;
  } else {
    console.log('Container is not filled');
  }
}

const stringContainer: Container<string> = {
  value: "Hello World!",
  isFilled: true
};

const updatedStringContainer = updateValue<string>(stringContainer, "Goodbye World!");

const firstValue: string = getFirstValue(updatedStringContainer);

console.log(firstValue); // Output: Goodbye World!
type stringOrNumber = string | number; // defining a type alias

interface Person { // defining an interface
  name: string;
  age: number;
  favoriteFoods: string[];
}

class Animal { // defining a class
  name: string;
  sound: string;

  constructor(name: string, sound: string) { // defining a constructor
    this.name = name;
    this.sound = sound;
  }

  makeSound(): void { // defining a method with return type void
    console.log(`The ${this.name} makes a ${this.sound} sound.`);
  }
}

const dog: Animal = new Animal("Dog", "bark"); // creating a new instance of the Animal class

function greet(person: Person): void { // defining a function with parameters of type Person and return type void
  console.log(`Hello, my name is ${person.name} and I am ${person.age} years old.`);
  console.log(`My favorite foods are: ${person.favoriteFoods.join(", ")}.`);
}

greet({ // calling the greet function with an object of type Person as the argument
  name: "Sally",
  age: 25,
  favoriteFoods: ["pizza", "pasta", "ice cream"]
})

const x: stringOrNumber = "This variable can be either a string or a number." // creating a variable with the defined type alias
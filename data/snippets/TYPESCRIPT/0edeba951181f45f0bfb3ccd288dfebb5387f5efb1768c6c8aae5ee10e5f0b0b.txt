// This is a class called 'Animal'
class Animal {
  // This is a constructor function
  constructor(name: string, age: number, species: string) {
    this.name = name; // This is a property of the class
    this.age = age;
    this.species = species;
  }

  // This is a method that returns a string
  getDescription(): string {
    return `${this.name} is a ${this.age} year old ${this.species}.`;
  }
}

// This is a subclass of the 'Animal' class called 'Dog'
class Dog extends Animal {
  // This is a constructor function that calls the parent constructor and adds a new property
  constructor(name: string, age: number, breed: string) {
    super(name, age, "dog"); // Calling the parent constructor
    this.breed = breed; // Adding a new property
  }

  // This is a method that overrides the parent method
  getDescription(): string {
    return `${this.name} is a ${this.age} year old ${this.species} of ${this.breed} breed.`;
  }

  // This is a static method that can be called without creating an instance of the class
  static bark(): string {
    return "Woof woof!";
  }
}

// Creating an instance of the 'Dog' class
const myDog = new Dog("Fido", 5, "Golden Retriever");

// Calling methods and printing the output
console.log(myDog.getDescription());
console.log(Dog.bark());

// Output:
// Fido is a 5 year old dog of Golden Retriever breed.
// Woof woof!
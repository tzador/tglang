/**
 * @desc Function that checks whether a given string is a valid email address
 * @param email - the email address as a string
 * @returns true if email address is valid, false otherwise
 */
function isValidEmail(email: string): boolean {
  // checks if the email address contains an @ symbol
  if (!email.includes('@')) { 
    return false;
  } 

  // checks if email address contains a period after the @ symbol
  if (email.indexOf('@') >= email.lastIndexOf('.')) { 
    return false;
  } 

  // checks if email address has an invalid character before the @ symbol
  if (/[\(\)!#$%&'*+-/=?^_`{|}~]/.test(email.charAt(0))) { 
    return false;
  } 

  // checks if email address has multiple periods in a row
  if (email.lastIndexOf('..') !== -1) { 
    return false;
  }

  // checks if the last segment of the email address is a valid top-level domain
  const emailParts: string[] = email.split('.');
  const topLevelDomain: string = emailParts[emailParts.length - 1];

  if (topLevelDomain.length < 2 || topLevelDomain.length > 4 || topLevelDomain.includes('@')) { 
    return false;
  }

  // checks if the length of the top-level domain is 2 and the last segment has only numbers 
  if (topLevelDomain.length === 2 && parseInt(topLevelDomain).toString() === topLevelDomain) {
    return false;
  }

  // checks if the length of the top-level domain is 3 and the last segment has only letters
  if (topLevelDomain.length === 3 && /^[A-Za-z]+$/.test(topLevelDomain)) {
    return false;
  }

  // checks if the length of the top-level domain is 4 and the last segment has only letters and numbers
  if (topLevelDomain.length === 4 && /^[A-Za-z0-9]+$/.test(topLevelDomain)) { 
    return false;
  }

  // if all checks pass, return true
  return true;
}

// example usage
console.log(isValidEmail('example@domain.com')); // true
console.log(isValidEmail('notanemail')); // false
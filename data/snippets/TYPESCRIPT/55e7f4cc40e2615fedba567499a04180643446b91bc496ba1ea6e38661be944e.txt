// This is a comment in TypeScript

/* This is a multi-line comment
in TypeScript */

// Defining an interface
interface Person {
  name: string,
  age: number,
  hobbies: string[]
}

// Creating an object based on the interface
let person: Person = {
  name: "John",
  age: 25,
  hobbies: ["reading", "playing guitar"]
}

// Using a type alias to define a custom type
type Book = {
  title: string,
  author: string,
  year: number,
  pages: number,
  genres: string[]
}

// Creating and initializing an array of type Book
let books: Book[] = [
  {
    title: "Pride and Prejudice",
    author: "Jane Austen",
    year: 1813,
    pages: 279,
    genres: ["romance", "classic"]
  },
  {
    title: "To Kill a Mockingbird",
    author: "Harper Lee",
    year: 1960,
    pages: 336,
    genres: ["fiction", "coming-of-age"]
  },
  {
    title: "The Lord of the Rings",
    author: "J.R.R. Tolkien",
    year: 1954,
    pages: 1178,
    genres: ["fantasy"]
  }
]

// Defining a generic type
type Result<T> = {
  isSuccess: boolean,
  data?: T,
  error?: string
}

// Creating a function that returns a Result type
function divide(x: number, y: number): Result<number> {
  if (y === 0) {
    return {
      isSuccess: false,
      error: "Cannot divide by 0"
    }
  } else {
    return {
      isSuccess: true,
      data: x / y
    }
  }
}

// Using the divide function and checking the result
let result = divide(10, 5)
if (result.isSuccess) {
  console.log("The result is:", result.data) // Output: The result is: 2
} else {
  console.log("Error:", result.error)
}
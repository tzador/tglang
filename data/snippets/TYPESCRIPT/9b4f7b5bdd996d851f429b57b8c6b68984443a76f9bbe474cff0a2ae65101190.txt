class Animal {
  // using TypeScript type annotation
  name: string;
  // constructor with parameter that uses type annotation
  constructor(animalName: string) {
    // setting class property based on constructor parameter
    this.name = animalName;
  }

  // method that takes in two numbers and returns their sum
  calculateSum(num1: number, num2: number): number {
    return num1 + num2;
  }

  // method that takes in a function and executes it
  executeFunction(callbackFunction: Function) {
    // calling the function passed in as a parameter
    callbackFunction();
  }
}

// creating an instance of the Animal class
const dog = new Animal("Dog");

// calling the calculateSum method and storing the result in a variable
const sum = dog.calculateSum(2, 3);

// defining a function to be passed into the executeFunction method
const loggingFunction = () => {
  // logging a message using the class property
  console.log(`The animal's name is ${dog.name}`);
}

// calling the executeFunction method and passing in the loggingFunction
dog.executeFunction(loggingFunction);

// printing out the result of the calculateSum method
console.log(`The sum of 2 and 3 is ${sum}`);
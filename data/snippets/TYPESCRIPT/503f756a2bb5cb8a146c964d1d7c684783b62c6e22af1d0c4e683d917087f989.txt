//This TypeScript code snippet creates a class for a car with several properties and methods

class Car {
  //Properties
  public name: string;
  private _year: number;
  protected _color: string;
  static manufacturer: string = "Toyota"; //static property

  //Constructor
  constructor(name: string, year: number, color: string) {
    this.name = name;
    this._year = year;
    this._color = color;
  }

  //Methods
  //Getter for year property
  get year(): number {
    return this._year;
  }

  //Setter for color property
  set color(color: string) {
    this._color = color;
  }

  //Static method to display manufacturer
  static displayManufacturer(): void {
    console.log(`Manufacturer: ${Car.manufacturer}`);
  }
}

//Creating an object of Car class
const myCar = new Car("Camry", 2020, "Silver");

//Accessing properties and methods of myCar object
console.log(`Name: ${myCar.name}`);
console.log(`Year: ${myCar.year}`);
console.log(`Color: ${myCar.color}`); //will throw an error, color is protected property

myCar.color = "Black"; //setting color using setter method
console.log(`New Color: ${myCar.color}`); //will now display 'Black' as color

Car.displayManufacturer(); //calling static method to display manufacturer
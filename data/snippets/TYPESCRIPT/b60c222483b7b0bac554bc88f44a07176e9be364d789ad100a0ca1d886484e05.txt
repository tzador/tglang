// A class for creating objects with a specific shape and functions
 class Shape {
    // defining private properties
    // with the _ prefix to indicate they are private
    private _x: number;
    private _y: number;

    // defining constructor function
    // parameters are used to initialize the private properties
    constructor(x: number, y: number) {
        this._x = x;
        this._y = y;
    }

    // defining a method to get the x coordinate
    // underscore indicates it is a private method
    getX(): number {
        return this._x;
    }

    // defining a method to get the y coordinate
    // underscore indicates it is a private method
    getY(): number {
        return this._y;
    }

    // defining a method to set the x coordinate
    // underscore indicates it is a private method
    setX(x: number): void {
        this._x = x;
    }

    // defining a method to set the y coordinate
    // underscore indicates it is a private method
    setY(y: number): void {
        this._y = y;
    }

    // defining a method to calculate the area
    // underscores indicate it is a private method
    private _calculateArea(): number {
        // code to calculate the area
        return this._x * this._y;
    }

    // defining a method to display the shape's area
    displayArea(): void {
        // using template literals to display the area
        console.log(`The area of the shape is ${this._calculateArea()} units`);
    }
}

// creating an object of type Shape
const myShape = new Shape(5, 10);

// calling the displayArea() method to print the area
myShape.displayArea();

// changing the x and y coordinates using the setter methods
myShape.setX(10);
myShape.setY(15);

// calling the displayArea() method again to print the updated area
myShape.displayArea();
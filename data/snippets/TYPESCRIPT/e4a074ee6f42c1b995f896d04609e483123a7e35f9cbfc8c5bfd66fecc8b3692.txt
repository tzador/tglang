/* This code snippet declares a class 'Person' with properties 'name', 'age', and 'gender'. It also has a method 'introduce' that returns a string using template literals to display the person's name and age. */

class Person {
  name: string; // property 'name' of type string
  age: number; // property 'age' of type number
  gender: string; // property 'gender' of type string

  constructor(name: string, age: number, gender: string) {
    this.name = name; // assign parameter 'name' to 'this.name'
    this.age = age; // assign parameter 'age' to 'this.age'
    this.gender = gender; // assign parameter 'gender' to 'this.gender'
  }

  introduce(): string { // method 'introduce' that returns a string
    return `Hi, my name is ${this.name} and I am ${this.age} years old.`; // template literal using properties 'name' and 'age'
  }
}

/* Instantiate a new object 'person' of type Person with the values John, 30, and Male for name, age, and gender respectively. Then call the method 'introduce' on the 'person' object and store the returned string in a variable 'introduction'. */

const person: Person = new Person("John", 30, "Male"); // instantiate a new object 'person' of type Person
const introduction: string = person.introduce(); // call method 'introduce' on 'person' and store in variable 'introduction'

console.log(introduction); // output: Hi, my name is John and I am 30 years old.
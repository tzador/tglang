/**
 * Class representing a car with properties make and model.
 * @param make - The make of the car.
 * @param model - The model of the car.
 */
class Car {
    private make: string;
    private model: string;

    /**
     * Creates a car.
     * @param make - The make of the car.
     * @param model - The model of the car.
     */
    constructor(make: string, model: string) {
        this.make = make;
        this.model = model;
    }

    /**
     * Gets the make of the car.
     * @returns The car's make.
     */
    getMake(): string {
        return this.make;
    }

    /**
     * Gets the model of the car.
     * @returns The car's model.
     */
    getModel(): string {
        return this.model;
    }

    /**
     * Sets the make of the car.
     * @param make - The make of the car.
     */
    setMake(make: string): void {
        this.make = make;
    }

    /**
     * Sets the model of the car.
     * @param model - The model of the car.
     */
    setModel(model: string): void {
        this.model = model;
    }

    /**
     * Formats the make and model of the car into a string representation.
     * @returns A formatted string of the car's make and model.
     */
    displayCar(): string {
        return `Make: ${this.make} | Model: ${this.model}`;
    }
}

// Create a new instance of the Car class with make and model parameters
const myCar = new Car("Honda", "Civic");

// Get the make and model of the car using the getMake and getModel methods
console.log(myCar.getMake());
console.log(myCar.getModel());

// Set the make and model of the car using the setMake and setModel methods
myCar.setMake("Toyota");
myCar.setModel("Corolla");

// Display the formatted string of the car's make and model using the displayCar method
console.log(myCar.displayCar());

// Output:
// Honda
// Civic
// Make: Toyota | Model: Corolla
// Typescript code snippet showing a complex nested object structure with array types

// Parent object with properties of different data types
let person: {
    name: string,
    age: number,
    address: string,
    friends: string[],
    hobbies: string[],
    job: {
        title: string,
        company: string,
        salary: number,
        duties: string[]
    },
    pets: {
        type: string,
        name: string,
        age: number
    }[]
};

// Setting values for the parent object properties
person = {
    name: "John Doe",
    age: 30,
    address: "123 Main Street",
    friends: ["Jane", "Mark", "Sara"],
    hobbies: ["reading", "painting", "hiking"],
    // Nested job object with properties of different data types
    job: {
        title: "Software Developer",
        company: "ABC Corp",
        salary: 100000,
        duties: ["coding", "testing", "debugging"]
    },
    // Array of nested pets objects, each with their own properties of different data types
    pets: [
        { type: "dog", name: "Buddy", age: 5 },
        { type: "cat", name: "Fluffy", age: 3 },
        { type: "bird", name: "Tweety", age: 1 },
    ]
};

// Logging the object to the console
console.log(person);
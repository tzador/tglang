//Defining an interface named 'Shape' with properties for width and height
interface Shape {
    width: number;
    height: number;
}

//Defining a class named 'Rectangle' that implements the Shape interface
class Rectangle implements Shape {
    //Implementing the width and height properties with getter and setter methods
    private _width: number;
    private _height: number;

    get width(): number {
        return this._width;
    }

    set width(newWidth: number) {
        if (newWidth > 0) {
            this._width = newWidth;
        }
    }

    get height(): number {
        return this._height;
    }

    set height(newHeight: number) {
        if (newHeight > 0) {
            this._height = newHeight;
        }
    }

    //Defining a constructor that sets the initial values for width and height
    constructor(width: number, height: number) {
        this.width = width;
        this.height = height;
    }
}

//Creating a new instance of the Rectangle class with width of 10 and height of 5
const myRectangle = new Rectangle(10, 5);

//Printing the area of the rectangle using a function
function getArea(shape: Shape): number {
    return shape.width * shape.height;
}

console.log(getArea(myRectangle)); //Output: 50
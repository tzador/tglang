// This is a TypeScript class called "Person" with a constructor to initialize the name and age properties
class Person {
    private name: string; // private name property that can only be accessed within the class
    private age: number; // private age property that can only be accessed within the class

    constructor(personName: string, personAge: number) { // constructor that takes in a name and age parameter
        this.name = personName; // assign the name parameter to the name property
        this.age = personAge; // assign the age parameter to the age property
    }

    // getter method to access the name property
    getName(): string {
        return this.name; // return the name property
    }

    // setter method to set the age property
    setAge(newAge: number): void {
        this.age = newAge; // set the value passed in as the new age property
    }

    // method to check if a Person is an adult based on age
    isAdult(): boolean {
        return this.age >= 18; // returns true if the age is greater than or equal to 18, false otherwise
    }
}

// create a new instance of the Person class with name "John" and age 25
let john = new Person("John", 25);

// log the name and age of John using the getter method
console.log(`Name: ${john.getName()}, Age: ${john.age}`);

// log if John is an adult or not using the isAdult method
console.log(`${john.getName()} is an adult? ${john.isAdult()}`);

// change John's age to 16 using the setter method
john.setAge(16);

// log if John is an adult or not using the isAdult method again
console.log(`${john.getName()} is an adult? ${john.isAdult()}`);
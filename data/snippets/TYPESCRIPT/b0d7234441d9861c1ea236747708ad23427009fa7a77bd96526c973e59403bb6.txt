/**
 * This 'Person' interface represents a generic person with a name and age property.
 */
interface Person {
  name: string;
  age: number;
}

/**
 * This 'Employee' interface extends the 'Person' interface and adds a 'jobTitle' property.
 */
interface Employee extends Person {
  jobTitle: string;
}

/**
 * This function takes in an array of 'Employee' objects and returns the average age of all employees.
 * @param employees - The array of 'Employee' objects
 * @returns The average age of employees as a number
 */
function getAverageAge(employees: Employee[]): number {
  let totalAge = 0;
  for (let i = 0; i < employees.length; i++) {
    // Add each employee's age to the total
    totalAge += employees[i].age;
  }
  // Divide the total age by the number of employees to get the average
  return totalAge / employees.length;
}

/**
 * This is an example array of employees, each with a name, age, and job title.
 * The first entry is an object that implements the 'Employee' interface directly,
 * while the second entry is an object that extends the 'Employee' interface.
 */
const employees: Employee[] = [
  {
    name: "John Doe",
    age: 25,
    jobTitle: "Software Developer"
  },
  {
    name: "Jane Smith",
    age: 30,
    jobTitle: "Project Manager"
  }
];

// Call the 'getAverageAge' function with the employees array and log the result
console.log(getAverageAge(employees)); // Output: 27.5 (average of 25 and 30)
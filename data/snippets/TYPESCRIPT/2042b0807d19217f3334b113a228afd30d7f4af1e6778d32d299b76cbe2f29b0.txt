/**
 * This class represents a car.
 */
class Car {
  private make: string;
  private model: string;
  private year: number;
  private color: string;
  private mileage: number;

  /**
   * Constructs a new Car object with the provided make, model, year, color, and mileage.
   * @param make The make of the car.
   * @param model The model of the car.
   * @param year The year the car was made.
   * @param color The color of the car.
   * @param mileage The current mileage of the car.
   */
  constructor(make: string, model: string, year: number, color: string, mileage: number) {
    this.make = make;
    this.model = model;
    this.year = year;
    this.color = color;
    this.mileage = mileage;
  }

  /**
   * Returns a string representation of the car.
   */
  toString() {
    return `This car is a ${this.color} ${this.year} ${this.make} ${this.model} with ${this.mileage} miles.`;
  }

  /**
   * Increases the mileage of the car by the provided amount.
   * @param amount The amount to increase the mileage by.
   */
  drive(amount: number) {
    this.mileage += amount;
  }

  /**
   * Gets the make of the car.
   */
  getMake() {
    return this.make;
  }

  /**
   * Sets the make of the car.
   * @param make The new make of the car.
   */
  setMake(make: string) {
    this.make = make;
  }

  /**
   * Gets the model of the car.
   */
  getModel() {
    return this.model;
  }

  /**
   * Sets the model of the car.
   * @param model The new model of the car.
   */
  setModel(model: string) {
    this.model = model;
  }

  /**
   * Gets the year of the car.
   */
  getYear() {
    return this.year;
  }

  /**
   * Sets the year of the car.
   * @param year The new year of the car.
   */
  setYear(year: number) {
    this.year = year;
  }

  /**
   * Gets the color of the car.
   */
  getColor() {
    return this.color;
  }

  /**
   * Sets the color of the car.
   * @param color The new color of the car.
   */
  setColor(color: string) {
    this.color = color;
  }

  /**
   * Gets the mileage of the car.
   */
  getMileage() {
    return this.mileage;
  }

  /**
   * Sets the mileage of the car.
   * @param mileage The new mileage of the car.
   */
  setMileage(mileage: number) {
    this.mileage = mileage;
  }
}

// Create a new Car object and print its string representation
const myCar = new Car("Honda", "Civic", 2012, "blue", 50000);
console.log(myCar.toString());

// Drive the car and print the new mileage
myCar.drive(200);
console.log(myCar.getMileage());

// Change the color of the car and print the new color
myCar.setColor("red");
console.log(myCar.getColor());
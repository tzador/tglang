// Define an interface for a car
interface Car {
  make: string;
  model: string;
  year: number;
  color?: string; // optional property
  features: string[]; // array property
  drive: (speed: number) => void; // method
}

// Create a class that implements the Car interface
class Sedan implements Car {
  make: string; // must match type in interface
  model: string; // must match type in interface
  year: number; // must match type in interface
  color: string; // optional property can be omitted
  features: string[] = []; // initialize array property
  constructor(make: string, model: string, year: number, color?: string) {
    this.make = make;
    this.model = model;
    this.year = year;
    if (color) {
      this.color = color;
    }
  }
  drive(speed: number) {
    console.log(`Driving at ${speed} mph`);
  }
  addFeature(feature: string) {
    this.features.push(feature);
  }
}

// Create an instance of the Sedan class
const myCar = new Sedan("Toyota", "Camry", 2021);
myCar.drive(60); // Driving at 60 mph
myCar.addFeature("Sunroof");
console.log(myCar.features); // [ 'Sunroof' ]
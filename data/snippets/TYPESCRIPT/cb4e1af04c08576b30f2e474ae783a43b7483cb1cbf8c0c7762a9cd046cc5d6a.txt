/* This code snippet creates a class called Person in TypeScript */

interface PersonInfo { // creating an interface that defines the properties of a person
  name: string; // defining a property called name which is of type string
  age: number; // defining a property called age which is of type number
  address?: string; // defining an optional property called address which is of type string
}

class Person implements PersonInfo { // creating a class and implementing the PersonInfo interface
  constructor(public name: string, public age: number, public address?: string) { // defining the constructor with name, age, and optional address parameters
  }
  
  greet(): void { // defining a method called greet which returns nothing (void)
    console.log(`Hello, my name is ${this.name}.`); // outputting a greeting with the person's name
    if (this.address) { // checking if the person has an address property
      console.log(`I live at ${this.address}.`); // outputting their address if it exists
    }
    console.log(`I am ${this.age} years old.`); // outputting the person's age
  }
}

// creating an instance of the Person class
const mary: Person = new Person("Mary", 25, "123 Main Street");
mary.greet(); // calling the greet method on the instance

// Output: 
// Hello, my name is Mary.
// I live at 123 Main Street.
// I am 25 years old.
/**
 * Custom type for a person object
 * @param {string} name - The person's name
 * @param {number} age - The person's age
 * @param {string | number | boolean} [occupation] - The person's occupation, defaults to 'unemployed'
 */
type Person = {
  name: string;
  age: number;
  occupation?: string | number | boolean;
}

// Example person object
const john: Person = {
  name: 'John',
  age: 25,
  occupation: 'Engineer'
}

// Function to describe a person
/**
 * @param {Person} person - The person to be described
 * @returns {string} A description of the person
 */
function describePerson(person: Person): string {
  let occupationString = "unemployed";
  if (person.occupation) {
    if (typeof person.occupation === 'string') {
      occupationString = person.occupation;
    } else if (typeof person.occupation === 'number') {
      occupationString = `${person.occupation} years old and works as an engineer`
    } else {
      occupationString = 'is currently working as a software developer';
    }
  }

  return `${person.name} is ${person.age} years old and ${occupationString}`;
}

// Function to update the occupation of a person
/**
 * @param {Person} person - The person to be updated
 * @param {string | number | boolean} [newOccupation] - The new occupation to be assigned, defaults to 'unemployed'
 * @returns {Person} The updated person object
 */
function updateOccupation(person: Person, newOccupation?: string | number | boolean): Person {
  return {
    ...person,
    occupation: newOccupation || 'unemployed',
  }
}

// Testing the functions with the example person object
console.log(describePerson(john));
// Output: John is 25 years old and works as an engineer

console.log(updateOccupation(john, 'Teacher'));
// Output: {name: 'John', age: 25, occupation: 'Teacher' }
interface IPerson { // interface defining a person object
  name: string; // name property of type string
  age: number; // age property of type number
  address?: string; // optional address property of type string
  hobbies: string[]; // array of hobbies of type string
  getInfo: (message: string) => string; // method that takes in a string and returns another string
}

class Person implements IPerson { // class that implements the IPerson interface
  constructor(public name: string, public age: number, public hobbies: string[]) {
    this.name = name;
    this.age = age;
    this.hobbies = hobbies;
  }

  getInfo(message: string): string { // implementation of the getInfo method
    return `${message} My name is ${this.name}, I am ${this.age} years old, and my hobbies are ${this.hobbies.join(', ')}.`;
  }
}

let person1 = new Person('John', 25, ['Reading', 'Drawing', 'Playing guitar']); // creating an instance of the Person class
console.log(person1.getInfo('Hello!')); // calling the getInfo method and logging the returned string to the console
// Generic class
class Queue<T> {

  // Array to store elements
  queue: T[] = [];

  // Function to add element to the queue
  enqueue(element: T): void {
    this.queue.push(element);
  }

  // Function to remove element from the queue
  dequeue(): T | undefined {
    return this.queue.shift();
  }

  // Function to return the size of the queue
  size(): number {
    return this.queue.length;
  }

  // Function to check if the queue is empty
  isEmpty(): boolean {
    return this.size() === 0;
  }
}

// Create instance of Queue class with number type
let intQueue = new Queue<number>();

// Add elements to the queue
intQueue.enqueue(5);
intQueue.enqueue(10);
intQueue.enqueue(15);

// Remove element from the queue
let removedElement = intQueue.dequeue();

// Check the size of the queue
let queueSize = intQueue.size();

console.log(`Removed element: ${removedElement}`);
console.log(`Current queue size: ${queueSize}`);

// Create instance of Queue class with string type
let stringQueue = new Queue<string>();

// Add elements to the queue
stringQueue.enqueue("Hello");
stringQueue.enqueue("World");

// Check if the queue is empty
let empty = stringQueue.isEmpty();

console.log(`Is stringQueue empty? ${empty}`);
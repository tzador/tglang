// Define a class named "Person" with a constructor that takes in two parameters, "name" and "age"
class Person {
    name: string;
    age: number;

    // The constructor assigns the values passed in to the corresponding properties of the class
    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }

    // A method that prints out the name and age of the person in a formatted string
    printInfo(): void {
        console.log(`Name: ${this.name}, Age: ${this.age}`);
    }
}

// Create an instance of the "Person" class with the name "John" and age 25
const john = new Person("John", 25);

// Call the "printInfo" method on the "john" instance to print out the information
john.printInfo();

// Define a class named "Employee" that extends the "Person" class and has an extra property "position"
class Employee extends Person {
    position: string;

    // The constructor takes in three parameters, "name", "age", and "position", and assigns them to the corresponding properties
    constructor(name: string, age: number, position: string) {
        super(name, age);
        this.position = position;
    }

    // A method that prints out the person's position in a formatted string
    printPosition(): void {
        console.log(`Position: ${this.position}`);
    }
}

// Create an instance of the "Employee" class with the name "Jane", age 30, and position "Manager"
const jane = new Employee("Jane", 30, "Manager");

// Call the "printInfo" method inherited from the "Person" class on the "jane" instance to print out her information
jane.printInfo();

// Call the "printPosition" method on the "jane" instance to print out her position
jane.printPosition();
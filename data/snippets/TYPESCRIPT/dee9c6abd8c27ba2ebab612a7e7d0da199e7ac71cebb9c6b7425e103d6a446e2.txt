// Declare a class named 'Person'
class Person {
  // Initialize properties with 'firstName', 'lastName', and 'age' values with specified datatypes
  firstName: string;
  lastName: string;
  age: number;

  // Declare a constructor that accepts parameters for the above properties
  constructor(firstName: string, lastName: string, age: number) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
  }

  // Declare a method named 'greet' that returns a string
  greet(): string {
    // Use template literal to return the first name and last name of the person
    return `Hello, my name is ${this.firstName} ${this.lastName}`
  }

  // Declare a static method named 'info' that accepts a Person object as a parameter and returns void
  static info(person: Person): void {
    // Use console.log to print out the person's first name, last name, and age
    console.log(`${person.firstName} ${person.lastName} is ${person.age} years old.`);
  }
}

// Create an instance of the Person class with specified values
const john = new Person("John", "Doe", 30);

// Call the 'greet' method on the instantiated object
john.greet(); // Output: Hello, my name is John Doe

// Call the 'info' method on the Person class without creating an instance
Person.info(john); // Output: John Doe is 30 years old.
// Define an interface for a car object 
interface Car {
    make: string; // String property for the car's make
    model: string; // String property for the car's model
    year: number; // Number property for the car's year
    features: string[]; // Array property for the car's features

    start: (key: string) => boolean; // Function property that takes in a key and returns a boolean

    drive?: (miles: number) => void; // Optional function property that takes in a number and returns nothing
}

// Create a car object using the Car interface
let myCar: Car = {
    make: 'Ford',
    model: 'Mustang',
    year: 2019,
    features: ['leather interior', 'power windows', 'backup camera'],

    start: function(key: string): boolean {
        if (key === '1234') {
            console.log("Engine started.");
            return true;
        } else {
            console.log("Incorrect key.");
            return false;
        }
    },

    drive: function(miles: number): void {
        console.log(`Driving ${miles} miles.`);
    }
}

// Call the start and drive methods on the car object
myCar.start('1234'); // Output: Engine started.
myCar.drive(50); // Output: Driving 50 miles.
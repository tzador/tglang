/**
* This class represents a shopping cart and its properties
* and methods.
*/
class ShoppingCart {
  /* Private properties */
  private _items: string[];
  private _totalPrice: number;
  private _shippingCost: number;
  
  /**
  * Constructor to initialize the class properties.
  */
  constructor() {
    this._items = [];
    this._totalPrice = 0;
    this._shippingCost = 0;
  }
  
  /**
  * Adds an item to the shopping cart and updates the total price.
  * @param item - The item to be added.
  */
  addItem(item: string): void {
    this._items.push(item);
    this._totalPrice += item.price;
  }
  
  /**
  * Removes an item from the shopping cart and updates the total price.
  * @param item - The item to be removed.
  */
  removeItem(item: string): void {
    this._items = this._items.filter(currItem => currItem !== item);
    this._totalPrice -= item.price;
  }
  
  /**
  * Calculates and updates the shipping cost based on the total price.
  */
  calculateShippingCost(): void {
    if(this._totalPrice < 50) {
      this._shippingCost = 5;
    } else if (this._totalPrice >= 50 && this._totalPrice < 100) {
      this._shippingCost = 10;
    } else {
      this._shippingCost = 0;
    }
  }
  
  /**
  * Gets the current items in the shopping cart.
  * @returns An array of strings representing the items.
  */
  get items(): string[] {
    return this._items;
  }
  
  /**
  * Gets the current total price of all items in the shopping cart.
  * @returns A number representing the total price.
  */
  get totalPrice(): number {
    return this._totalPrice;
  }
  
  /**
  * Gets the current shipping cost based on the total price.
  * @returns A number representing the shipping cost.
  */
  get shippingCost(): number {
    return this._shippingCost;
  }
  
  /**
  * Prints out a summary of the shopping cart and its properties.
  */
  printSummary(): void {
    console.log(`Items: ${this._items}`);
    console.log(`Total Price: $${this._totalPrice}`);
    console.log(`Shipping Cost: $${this._shippingCost}`);
  }
}

/* Usage */
// Create a new shopping cart instance
const myCart = new ShoppingCart();

// Add items to the cart
myCart.addItem({ name: 'Shirt', price: 25 });
myCart.addItem({ name: 'Jeans', price: 50 });
myCart.addItem({ name: 'Sneakers', price: 80 });

// Calculate the shipping cost
myCart.calculateShippingCost();

// Print out summary
myCart.printSummary();

// Output:
// Items: Shirt, Jeans, Sneakers
// Total Price: $155
// Shipping Cost: $10

// Remove an item from the cart
myCart.removeItem({ name: 'Jeans', price: 50 });

// Print out summary
myCart.printSummary();

// Output:
// Items: Shirt, Sneakers
// Total Price: $105
// Shipping Cost: $5
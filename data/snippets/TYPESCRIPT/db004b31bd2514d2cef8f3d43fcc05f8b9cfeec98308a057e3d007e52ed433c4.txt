interface Person {
  name: string; // annotation for name property
  age: number; // annotation for age property
  address?: string; // optional property 
  favoriteFoods: string[]; // annotation for array of strings
  speak: (words: string) => void; // annotation for function that takes in a string parameter and returns void 
}

function introduce(person: Person) {
  console.log(`Hi, my name is ${person.name} and I am ${person.age} years old!`); // string interpolation using person object properties
  console.log(`My favorite foods are ${person.favoriteFoods.join(", ")}.`); // using join method on array to print out favorite foods separated by a comma
}

const john: Person = { // creating a new object of type Person
  name: "John",
  age: 25,
  favoriteFoods: ["pizza", "tacos", "sushi"],
  speak(words: string) {
    console.log(words); // implementation of speak function that simply logs the words passed in
  }
};

introduce(john); // calling introduce function with john object as the argument
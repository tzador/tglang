// This variable holds an array of numbers
const numbers: number[] = [1, 2, 3, 4, 5];
// This variable holds a string
let greeting: string = "Hello, world!";
// This function takes in a string and returns its length
function getLength(str: string): number {
  return str.length;
}
// This interface represents a person object with a name, age, and array of hobbies
interface Person {
  name: string;
  age: number;
  hobbies: string[];
}
// This class represents a shape with a color and area method
class Shape {
  color: string;

  constructor(color: string) {
    this.color = color;
  }

  area(): void {
    console.log("This shape has no area method");
  }
}

// This class extends the Shape class and adds a perimeter method
class Rectangle extends Shape {
  length: number;
  width: number;

  constructor(color: string, length: number, width: number) {
    super(color);
    this.length = length;
    this.width = width;
  }

  perimeter(): void {
    const perimeter: number = (this.length + this.width) * 2;
    console.log(`The perimeter of this ${this.color} rectangle is ${perimeter}`);
  }
}

// This variable holds an instance of the Rectangle class
const rectangle1 = new Rectangle("red", 10, 5);

// This function takes in an array of strings and logs each string
function logStrings(arr: string[]): void {
  arr.forEach(string => console.log(string));
}

// This object holds information about a car
const car = {
  make: "Ford",
  model: "Mustang",
  year: 2020,
  isElectric: false
};
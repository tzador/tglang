// Declare a class named Person
class Person {
  // Declare private members
  private name: string;
  private age: number;

  // Declare a constructor that initializes the private members
  constructor(name: string, age: number) {
    this.name = name;
    this.age = age;
  }

  // Declare a method that returns the person's name
  getName(): string {
    return this.name;
  }

  // Declare a method that returns the person's age
  getAge(): number {
    return this.age;
  }
}

// Declare a subclass named Teacher that inherits from the Person class
class Teacher extends Person {
  // Declare a private member specific to the Teacher class
  private subject: string;

  // Declare a constructor that initializes the private member and calls the superclass constructor
  constructor(name: string, age: number, subject: string) {
    super(name, age);
    this.subject = subject;
  }

  // Override the getAge method to return the person's age with the subject they teach
  getAge(): string {
    return `${super.getAge()} years old, teaches ${this.subject}`;
  }
}

// Create instances of the Person and Teacher classes
const person = new Person("John", 25);
const teacher = new Teacher("Mary", 32, "Math");

// Print out the results of calling the methods of both instances
console.log(`Person's name: ${person.getName()}`);
console.log(`Person's age: ${person.getAge()}`);
console.log(`Teacher's name: ${teacher.getName()}`);
console.log(`Teacher's age and subject: ${teacher.getAge()}`);

// Output:
// Person's name: John
// Person's age: 25
// Teacher's name: Mary
// Teacher's age and subject: 32 years old, teaches Math
// Define an interface for a car
interface Car {
  make: string; // The car's make
  model: string; // The car's model
  year: number; // The car's year
  doors: number; // The number of doors on the car
  color?: string; // The car's color (optional)
  engine: {
    horsepower: number; // The car's engine horsepower
    cylinders: number; // The car's engine cylinders
    type: string; // The type of engine (e.g. turbocharged)
  }
  features: string[]; // An array of the car's features
}

// Create a function to build a car
function buildCar(car: Car): void {
  console.log(`Building a ${car.year} ${car.make} ${car.model} with ${car.doors} doors`);
  console.log(`This car has ${car.engine.cylinders} cylinders and ${car.engine.horsepower} horsepower`);
  if (car.color) {
    console.log(`This car is ${car.color}`);
  }
  car.features.forEach(feature => {
    console.log(`- ${feature}`);
  });
}

// Create a new car object using the interface
let myCar: Car = {
  make: "Tesla",
  model: "Model S",
  year: 2021,
  doors: 4,
  engine: {
    horsepower: 762,
    cylinders: 0,
    type: "electric"
  },
  features: ["Autopilot", "Navigation", "Panoramic sunroof"]
}

// Call the buildCar function passing in myCar as an argument
buildCar(myCar);
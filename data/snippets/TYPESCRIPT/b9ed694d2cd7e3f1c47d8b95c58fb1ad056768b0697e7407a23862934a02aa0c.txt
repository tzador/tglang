// This is a typescript class
class Person {

    // Private variable, can only be accessed within the class
    private name: string;

    // Protected variable, can only be accessed within the class and its subclasses
    protected age: number;

    // Public variable, can be accessed from anywhere
    public profession: string;

    // Constructor function, initializes the name and age of the person
    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }

    // Function to introduce the person
    introduce() {
        return `Hi, my name is ${this.name} and I am ${this.age} years old.`;
    }
}

// Inheriting from the Person class
class Employee extends Person {

    // Private variable, can only be accessed within the class
    private employeeId: number;

    // Constructor function, initializes the name, age and employee ID of the employee
    constructor(name: string, age: number, employeeId: number) {
        super(name, age); // Calling the constructor of the parent class
        this.employeeId = employeeId;
    }

    // Function to print the employee's details and introduce themselves
    printDetails() {
        console.log(`Employee Name: ${this.name}`);
        console.log(`Employee Age: ${this.age}`);
        console.log(`Employee ID: ${this.employeeId}`);
        console.log(this.introduce()); // Calling the introduce() function from the parent class
    }
}

// Creating an instance of the Employee class
const employee = new Employee("John", 25, 1234);

// Calling the printDetails() function
employee.printDetails();

/* Output:
Employee Name: John
Employee Age: 25
Employee ID: 1234
Hi, my name is John and I am 25 years old.
*/
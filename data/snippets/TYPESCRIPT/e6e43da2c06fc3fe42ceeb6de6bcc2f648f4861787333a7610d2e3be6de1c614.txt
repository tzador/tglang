// Interfaces
interface Person {
    name: string;
    age: number;
    address?: string; // Optional property
    [key: string]: any; // Indexable property
    greet: (name: string) => void; // Method
}

// Classes
class Student implements Person {
    name: string;
    age: number;
    address: string;
    attends: string;
    constructor(name: string, age: number, address: string, attends: string) {
        this.name = name;
        this.age = age;
        this.address = address;
        this.attends = attends;
    }
    greet(name: string) {
        console.log(`Hi ${name}, my name is ${this.name} and I am ${this.age} years old. I live in ${this.address} and I attend ${this.attends}.`);
    }
}

// Functions
const displayInfo = (person: Person) => {
    console.log(`Hello, my name is ${person.name} and I am ${person.age} years old. I also have an address at ${person.address}.`);
}

// Objects
const person1 = {
    name: "John",
    age: 25,
    address: "123 Main Street",
    job: "Software Engineer",
    greet(name: string) {
        console.log(`Hi ${name}, my name is ${this.name} and I am ${this.age} years old. I am currently working as a ${this.job} at a company.`);
    }
}

// Using the code
const student1 = new Student("Emily", 21, "456 Park Avenue", "University of ABC");
student1.greet("Jenny"); // Output: Hi Jenny, my name is Emily and I am 21 years old. I live in 456 Park Avenue and I attend University of ABC.
displayInfo(person1); // Output: Hello, my name is John and I am 25 years old. I also have an address at 123 Main Street.
person1.greet("Michael"); // Output: Hi Michael, my name is John and I am 25 years old. I am currently working as a Software Engineer at a company.
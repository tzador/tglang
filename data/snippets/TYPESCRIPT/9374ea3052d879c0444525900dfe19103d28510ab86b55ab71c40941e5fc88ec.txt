class Animal { // Creating a class called Animal
    private name: string; // Declaring a private property called name of type string
    constructor(name: string) { // Creating a constructor with name as a parameter
        this.name = name; // Assigning the parameter to the name property
    }
    getName(): string { // Creating a public method called getName that returns a string
        return this.name; // Returning the name property
    }
}

class Dog extends Animal { // Creating a class called Dog that inherits from the Animal class
    private breed: string; // Declaring a private property called breed of type string
    constructor(name: string, breed: string) { // Creating a constructor with name and breed as parameters
        super(name); // Calling the constructor of the Animal class and passing in name as a parameter
        this.breed = breed; // Assigning the breed parameter to the breed property
    }
    getBreed(): string { // Creating a public method called getBreed that returns a string
        return this.breed; // Returning the breed property
    }
}

let myDog = new Dog("Buddy", "Labrador Retriever"); // Creating an instance of the Dog class with name and breed as arguments
console.log(myDog.getName()); // Calling the getName method and printing the returned value to the console
console.log(myDog.getBreed()); // Calling the getBreed method and printing the returned value to the console
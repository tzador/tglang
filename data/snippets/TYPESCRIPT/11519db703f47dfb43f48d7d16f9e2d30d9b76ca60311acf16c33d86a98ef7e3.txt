// Interfaces and classes in TypeScript

interface Person {
  name: string;
  age: number;
  address: string;
}

class Employee implements Person {
  public name: string;
  public age: number;
  public address: string;

  constructor(name: string, age: number, address: string) {
    this.name = name;
    this.age = age;
    this.address = address;
  }

  // Getter method for name
  public getFullName(): string {
    return this.name;
  }

  // Setter method for age
  public setAge(newAge: number): void {
    this.age = newAge;
  }
}

// Creating an instance of Employee class
const employee1 = new Employee("John Doe", 35, "123 Main St");

// Accessing properties and methods using dot notation
console.log(employee1.name); // Output: John Doe
console.log(employee1.getFullName()); // Output: John Doe
employee1.setAge(40);
console.log(employee1.age); // Output: 40

// Using interfaces for type checking
function printPersonDetails(person: Person): void {
  console.log(person.name + " is " + person.age + " years old and lives at " + person.address);
}

printPersonDetails(employee1); // Output: John Doe is 40 years old and lives at 123 Main St
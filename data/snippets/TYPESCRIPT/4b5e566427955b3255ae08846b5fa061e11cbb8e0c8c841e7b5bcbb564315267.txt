// This is a complex code snippet in TypeScript

// creating a class called "Person" with private properties and a constructor
class Person {
  private name: string;
  private age: number;
  private occupation: string;

  constructor(name: string, age: number, occupation: string) {
    this.name = name;
    this.age = age;
    this.occupation = occupation;
  }
}

// creating an interface for a function that will return a string value
interface GreetingFunction {
  (name: string, age: number, occupation: string): string;
}

// creating a greeting function using the GreetingFunction interface
const greet: GreetingFunction = (name, age, occupation) => {
  return `Hello ${name}, welcome to the programming world! You are ${age} years old and your occupation is ${occupation}.`;
}

// creating an array of Person objects
let people: Person[] = [
  new Person("John", 25, "Software Developer"),
  new Person("Sarah", 30, "Data Analyst"),
  new Person("Mark", 42, "Project Manager")
];

// calling the greet function for each person in the array and logging the result
for (let person of people) {
  console.log(greet(person.name, person.age, person.occupation));
}

/* Output:
Hello John, welcome to the programming world! You are 25 years old and your occupation is Software Developer.
Hello Sarah, welcome to the programming world! You are 30 years old and your occupation is Data Analyst.
Hello Mark, welcome to the programming world! You are 42 years old and your occupation is Project Manager.
*/
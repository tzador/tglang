/**
 * An interface representing a user
 * @interface
 */
interface User {
  /**
   * The user's first name
   * @type {string}
   */
  firstName: string;
  /**
   * The user's last name
   * @type {string}
   */
  lastName: string;
  /**
   * The user's age
   * @type {number}
   */
  age: number;
  /**
   * A method to get the user's full name
   * @method
   * @return {string} The full name of the user
   */
  getFullName(): string;
}

/**
 * A class representing a premium user
 * @class
 * @extends User
 */
class PremiumUser implements User {
  firstName: string;
  lastName: string;
  age: number;
  
  /**
   * The user's subscription status
   * @type {boolean}
   */
  private isSubscribed: boolean;
  
  constructor(firstName: string, lastName: string, age: number) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
    this.isSubscribed = false;
  }
  
  /**
   * A method to subscribe the user
   * @method
   */
  subscribe(): void {
    this.isSubscribed = true;
  }
  
  /**
   * A method to check if user is subscribed
   * @method
   * @return {boolean} True if user is subscribed, false if not
   */
  isUserSubscribed(): boolean {
    return this.isSubscribed;
  }
  
  /**
   * A method to get the premium user's full name
   * @method
   * @return {string} The full name of the premium user
   */
  getFullName(): string {
    return `${this.lastName}, ${this.firstName}`;
  }
  
  /**
   * A method to get the premium user's age and subscription status
   * @method
   * @return {string} The age and subscription status of the premium user
   */
  getStatus(): string {
    return `Age: ${this.age}, Subscription status: ${this.isSubscribed}`;
  }
}

// create an instance of PremiumUser
const premiumUser = new PremiumUser("John", "Doe", 30);

// subscribe the user
premiumUser.subscribe();

// print the premium user's full name
console.log(premiumUser.getFullName());

// print if the user is subscribed
console.log(premiumUser.isUserSubscribed());

// print the user's age and subscription status
console.log(premiumUser.getStatus());
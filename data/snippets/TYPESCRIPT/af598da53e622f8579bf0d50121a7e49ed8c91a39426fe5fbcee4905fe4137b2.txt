// Declaring a class named 'Person'
class Person {
    // Declaring private 'name' property with type 'string'
    private name: string;

    // Declaring protected 'age' property with type 'number'
    protected age: number;

    // Declaring constructor that takes in a 'name' parameter of type 'string'
    // Sets the private 'name' property to the passed in value
    // Sets the protected 'age' property to 0
    constructor(name: string) {
        this.name = name;
        this.age = 0;
    }

    // Declaring a public method called 'greet' that takes no parameters and returns a string
    // Concatenates the value of the private 'name' property with a greeting message and returns it
    public greet(): string {
        return `Hello, my name is ${this.name}!`;
    }

    // Declaring a private method called 'setAge' that takes in a 'newAge' parameter of type 'number'
    // Sets the protected 'age' property to the passed in value, only if it is greater than 0
    private setAge(newAge: number): void {
        if (newAge > 0) {
            this.age = newAge;
        }
    }

    // Declaring a public method called 'haveBirthday' that takes no parameters and returns nothing
    // Increments the protected 'age' property by 1 using the private 'setAge' method
    public haveBirthday(): void {
        this.setAge(this.age + 1);
    }
}

// Declaring a class named 'Student' that extends the 'Person' class
class Student extends Person {
    // Declaring private 'major' property with type 'string'
    private major: string;

    // Declaring constructor that takes in 'name' and 'major' parameters of type 'string'
    // Calls the superclass's constructor with the 'name' parameter
    // Sets the private 'major' property to the passed in value
    constructor(name: string, major: string) {
        super(name);
        this.major = major;
    }

    // Overriding the superclass's 'greet' method
    // Concatenates the value of the private 'major' property to the greeting message
    // and returns it
    public greet(): string {
        return `${super.greet()} I am majoring in ${this.major}.`;
    }
}
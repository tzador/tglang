/**
 * A class representing a book
 */
class Book {
    title: string; // Title of the book
    author: string; // Author of the book
    pages: number; // Number of pages in the book
    isAvailable: boolean; // Whether the book is available for borrowing

    /**
     * Constructor for the Book class
     * @param title - The title of the book
     * @param author - The author of the book
     * @param pages - The number of pages in the book
     * @param isAvailable - Whether the book is available for borrowing
     */
    constructor(title: string, author: string, pages: number, isAvailable: boolean) {
        this.title = title;
        this.author = author;
        this.pages = pages;
        this.isAvailable = isAvailable;
    }

    /**
     * A method to borrow the book
     * @returns A string indicating whether the book was successfully borrowed or not
     */
    borrowBook(): string {
        if (this.isAvailable) {
            this.isAvailable = false;
            return `${this.title} by ${this.author} was successfully borrowed.`;
        } else {
            return `${this.title} by ${this.author} is not available for borrowing.`;
        }
    }

    /**
     * A method to return the borrowed book
     * @returns A string indicating whether the book was successfully returned or not
     */
    returnBook(): string {
        if (!this.isAvailable) {
            this.isAvailable = true;
            return `${this.title} by ${this.author} was successfully returned.`;
        } else {
            return `${this.title} by ${this.author} is already available.`;
        }
    }
}

/**
 * A function to calculate the total number of pages of an array of books
 * @param books - An array of Book objects
 * @returns The total number of pages in all the books
 */
function getTotalPages(books: Book[]): number {
    let totalPages = 0;
    for (let book of books) {
        totalPages += book.pages;
    }
    return totalPages;
}

/* Example usage */

// Creating new Book objects
let book1 = new Book("The Great Gatsby", "F. Scott Fitzgerald", 218, true);
let book2 = new Book("Pride and Prejudice", "Jane Austen", 279, true);
let book3 = new Book("To Kill a Mockingbird", "Harper Lee", 324, false);

// Borrowing a book
console.log(book1.borrowBook()); // Output: The Great Gatsby by F. Scott Fitzgerald was successfully borrowed.

// Returning a book
console.log(book3.returnBook()); // Output: To Kill a Mockingbird by Harper Lee was successfully returned.

// Calculating total pages
let booksArray = [book1, book2, book3];
console.log(getTotalPages(booksArray)); // Output: 821
// Simple class that represents a person
class Person {
  private name: string;
  private age: number;
  private occupation: string;

  // Constructor that initializes the person's name, age, and occupation
  // Parameters:
  // - name: the person's name as a string
  // - age: the person's age as a number
  // - occupation: the person's occupation as a string
  constructor(name: string, age: number, occupation: string) {
    this.name = name;
    this.age = age;
    this.occupation = occupation;
  }

  // Getter method for the person's name
  // Returns: the person's name as a string
  getName(): string {
    return this.name;
  }

  // Getter method for the person's age
  // Returns: the person's age as a number
  getAge(): number {
    return this.age;
  }

  // Getter method for the person's occupation
  // Returns: the person's occupation as a string
  getOccupation(): string {
    return this.occupation;
  }

  // Method that prints out the person's information
  // Output: the person's name, age, and occupation in the format "Name: [name], Age: [age], Occupation: [occupation]"
  printInfo(): void {
    console.log(`Name: ${this.name}, Age: ${this.age}, Occupation: ${this.occupation}`);
  }
}

// Create a new instance of the Person class with the name "John", age 25, and occupation "Software Engineer"
let person = new Person("John", 25, "Software Engineer");

// Call the printInfo method to print out the person's information
person.printInfo();
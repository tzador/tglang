interface Person { // Defines an interface for a Person
    name: string; // Declares a property for a person's name
    age: number; // Declares a property for a person's age
    occupation?: string; // Declares an optional property for a person's occupation
    sayHello: () => void; // Declares a method that returns nothing
}

class Employee implements Person { // Defines a class Employee that implements the Person interface
    constructor(public name: string, public age: number, public occupation?: string){ } // Declares a constructor with optional parameters for the Employee class
    sayHello = () => { // Defines the sayHello method for the Employee class
        console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`); // Prints a greeting with the employee's name and age
        if(this.occupation){ // Checks if the employee's occupation is defined
            console.log(`I work as a ${this.occupation}.`); // Prints the employee's occupation if it is defined
        }
    }
}

let employee1 = new Employee("John", 30); // Creates an instance of the Employee class with a name and age
employee1.sayHello(); // Calls the sayHello method for employee1
// Output: Hello, my name is John and I am 30 years old.
/**
 * Function to perform a matrix multiplication
 * @param matrix1 Array of arrays representing a matrix
 * @param matrix2 Array of arrays representing a matrix
 * @returns Array of arrays representing the result of matrix multiplication
 */
function matrixMultiplication(matrix1: number[][], matrix2: number[][]): number[][] {
    const row1 = matrix1.length; //number of rows in first matrix
    const col1 = matrix1[0].length; //number of columns in first matrix
    const col2 = matrix2[0].length; //number of columns in second matrix
    const resultMatrix = []; //initialize the result matrix

    //perform matrix multiplication
    for (let i = 0; i < row1; i++) {
        resultMatrix[i] = []; //initialize each row of result matrix
        for (let j = 0; j < col2; j++) {
            let sum = 0; //initialize sum to 0
            for (let k = 0; k < col1; k++) {
                sum += matrix1[i][k] * matrix2[k][j]; //multiply corresponding elements and update sum
            }
            resultMatrix[i][j] = sum; //set result to corresponding position in result matrix
        }
    }
    return resultMatrix; //return result matrix
}

//example usage
const matrix1 = [[1, 2, 3], [4, 5, 6]]; //2x3 matrix
const matrix2 = [[7, 8], [9, 10], [11, 12]]; //3x2 matrix
const result = matrixMultiplication(matrix1, matrix2); //result will be a 2x2 matrix
console.log(result); //output: [[58, 64], [139, 154]]
// This is a class representing a shopping cart
class ShoppingCart {
    // Private property to store the items in the cart
    private items: string[];
    
    /**
     * Constructor that initializes the items array
     * @param items - An array of items to add to the cart
     */
    constructor(items: string[]) {
        this.items = items;
    }

    /**
     * Method to add new items to the cart
     * @param newItem - The item to be added to the cart
     */
    public addItem(newItem: string): void {
        this.items.push(newItem);
    }

    /**
     * Method to remove an item from the cart
     * @param itemToRemove - The item to be removed from the cart
     */
    public removeItem(itemToRemove: string): void {
        this.items = this.items.filter(item => item !== itemToRemove);
    }

    /**
     * Method to calculate the total price of all items in the cart
     * @returns The total price of all items in the cart
     */
    public calculateTotalPrice(): number {
        let totalPrice: number = 0;

        // Loop through all items and add their prices together
        for (let item of this.items) {
            totalPrice += this.getItemPrice(item);
        }

        return totalPrice;
    }

    /**
     * Helper method to get the price of an item
     * @param item - The item to get the price of
     * @returns The price of the item
     */
    private getItemPrice(item: string): number {
        // In this example, we are assuming that items are priced at $10 each
        return 10;
    }
}

// Create a new instance of the ShoppingCart class with some initial items
const myCart = new ShoppingCart(["shirt", "pants", "shoes"]);

// Add a new item to the cart
myCart.addItem("jacket");

// Remove an item from the cart
myCart.removeItem("shirt");

// Calculate the total price of all items in the cart
const totalPrice = myCart.calculateTotalPrice();
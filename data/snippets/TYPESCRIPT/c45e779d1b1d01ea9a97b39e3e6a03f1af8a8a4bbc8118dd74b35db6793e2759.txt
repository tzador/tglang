class Person {
  private _name: string; // declaring private variable with type annotation

  constructor(name: string) { // constructor function with string parameter
    this._name = name; // assigning value to private variable
  }

  public get name() { // getter function to access private variable
    return this._name; // return value of private variable
  }

  public set name(newName: string) { // setter function to change value of private variable
    if (newName.length > 5) { // condition to check length of new name
      this._name = newName; // assigning new name to private variable
    } else {
      console.log("Name must be at least 6 characters long."); // logging error message if new name is too short
    }
  }

  public static sayHello() { // static function doesn't require an instance of the class to be called
    console.log("Hello!"); // logging "Hello!" to console
  }
}

const john = new Person("John"); // creating new instance of Person class
console.log(john.name); // logging name property of john instance
john.name = "Bob"; // changing name property using setter function
console.log(john.name); // logging changed name property
Person.sayHello(); // calling static function on Person class
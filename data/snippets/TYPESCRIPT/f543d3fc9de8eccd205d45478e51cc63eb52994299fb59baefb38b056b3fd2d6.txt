class Animal { // Create a class called Animal
  private name: string; // Create a private property called name of type string
  constructor(name: string) { // Create a constructor with a parameter of type string called name
    this.name = name; // Set the value of the private property name to the value passed into the constructor
  }

  public speak(): void { // Create a public method called speak which takes no parameters and returns nothing
    console.log(`${this.name} is speaking.`); // Print a string which includes the value of the private property name
  }
}

class Dog extends Animal { // Create a class called Dog which extends the Animal class
  private breed: string; // Create a private property called breed of type string
  constructor(name: string, breed: string) { // Create a constructor with two parameters: name of type string and breed of type string
    super(name); // Call the constructor of the parent class with the name parameter
    this.breed = breed; // Set the value of the private property breed to the value passed into the constructor
  }

  public speak(): void { // Override the speak method from the parent class
    console.log(`${this.name} the ${this.breed} is barking.`); // Print a string which includes the values of the private properties name and breed
  }
}

let fido: Dog = new Dog('Fido', 'Labrador'); // Create a new instance of the Dog class with the name Fido and breed Labrador and assign it to the variable fido
fido.speak(); // Call the speak method on the fido object, which will print 'Fido the Labrador is barking.' to the console.
/**
 * Starts the game flow by initializing the game state and setting up the game board.
 * @param players - The list of players participating in the game.
 * @param boardSize - The size of the game board.
 * @returns The game state with the initialized game board and current player set to the first player in the list.
 */
function startGame(players: string[], boardSize: number): GameState {
    const gameBoard: GamePiece[][] = [];

    // Use a for loop to create the rows and columns of the game board
    for (let row = 0; row < boardSize; row++) {
        // Create an empty array to represent each row
        const gameBoardRow: GamePiece[] = [];
        for (let column = 0; column < boardSize; column++) {
            // Add an empty game piece to each column of the row
            gameBoardRow.push(new GamePiece())
        }
        // Add the row to the game board
        gameBoard.push(gameBoardRow);
    }

    // Shuffle the players list to randomly assign each player a position on the game board
    players = shuffle(players);

    // Create a new player list with Player objects and assign them a position based on their index in the original list
    const playersList: Player[] = players.map((player, index) => new Player(player, index));

    // Create the game state object with the initialized game board and current player set to the first player in the list
    const gameState: GameState = {
        gameBoard,
        players: playersList,
        currentPlayer: playersList[0]
    };

    // Return the game state to start the game
    return gameState;
}
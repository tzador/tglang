// This is a TypeScript class
class Person {
    private name: string; // Private property
    private age: number; // Private property
    // Constructor with name and age parameters
    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }
    // Getter method to get name
    getFullName(): string {
        return this.name;
    }
    // Setter method to set age
    setAge(age: number): void {
        this.age = age;
    }
    // Method to print all details
    printDetails(): void {
        console.log(`Name: ${this.name}, Age: ${this.age}.`);
    }
}

// This is a TypeScript interface
interface Animal {
    name: string;
    age: number;
    type: string;
    // Method to make animal sound
    makeSound(): void;
}

// Function to create a new Person object
function createPerson(name: string, age: number): Person {
    return new Person(name, age);
}

// Function to create a new Animal object
function createAnimal(name: string, age: number, type: string): Animal {
    // Creating a new object with the specified properties
    let animal: Animal = {
        name,
        age,
        type,
        // Method to print animal sound
        makeSound() {
            console.log(`This ${animal.type} says "Meow!"`);
        }
    }
    return animal;
}

// Creating a new Person object
let john = createPerson("John", 25);

// Creating a new Animal object
let cat = createAnimal("Fluffy", 2, "cat");

// Calling methods on objects
john.printDetails();
cat.makeSound();
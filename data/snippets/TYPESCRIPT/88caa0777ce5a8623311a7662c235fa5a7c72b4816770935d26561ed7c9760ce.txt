// Declare a class named Person
class Person {
    // Define a private property to store the person's name
    private name: string;

    // Define a protected property to store the person's age
    protected age: number;

    // Define a constructor method that takes in the name and age parameters
    constructor(name: string, age: number) {
        // Set the name and age property values to the given parameters
        this.name = name;
        this.age = age;
    }

    // Define a public method to greet the person
    public greet(): void {
        console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`);
    }
}

// Declare a class named Employee that extends the Person class
class Employee extends Person {
    // Define a private property to store the employee's department
    private department: string;

    // Define a constructor method that takes in the name, age, and department parameters
    constructor(name: string, age: number, department: string) {
        // Call the parent class's constructor method using the super keyword, passing in the name and age parameters
        super(name, age);
        // Set the department property value to the given parameter
        this.department = department;
    }

    // Define a public method to display the employee's information
    public displayInfo(): void {
        console.log(`Employee name: ${this.name} | Age: ${this.age} | Department: ${this.department}`);
    }
}

// Create an instance of the Employee class, passing in the necessary parameters
const employee = new Employee("John Smith", 30, "Marketing");

// Call the greet and displayInfo methods on the employee object
employee.greet();
employee.displayInfo();
/**
 * This function takes in an array of numbers and a target number,
 * and returns the two indices that add up to the target number,
 * if no two indices add up to the target number,
 * it returns an empty array.
 * @param {number[]} inputArray - Array of numbers
 * @param {number} targetNumber - Target number
 * @return {number[]} - Array of two indices
 */
const twoSum = (inputArray: number[], targetNumber: number): number[] => {
  let complementMap = new Map<number, number>();
  let result: number[] = [];

  for (let i = 0; i < inputArray.length; i++) {
    let complement = targetNumber - inputArray[i];

    if (complementMap.has(complement) && complementMap.get(complement) !== i) {
      result = [complementMap.get(complement), i];
      break;
    }

    complementMap.set(inputArray[i], i);
  }

  return result;
};

//Example usage:
twoSum([7, 2, 5, 10, 3], 9); //Output: [1, 2]
interface User { // Creates an interface for a User object
  readonly id: number; // Declares a read-only property for the user's id
  name: string; // Declares a property for the user's name
  age?: number; // Declares an optional property for the user's age
  address: { // Declares a nested object for the user's address
    street: string; // Declares a property for the street name
    city: string; // Declares a property for the city name
    postalCode: number; // Declares a property for the postal code
  };
  getSummary(): string; // Declares a method to get the user's summary
}

class RegularUser implements User { // Creates a class that implements the User interface
  id: number; // Defines the property for the user's id
  name: string; // Defines the property for the user's name
  age: number; // Defines the property for the user's age
  address: {
    street: string;
    city: string;
    postalCode: number;
  };

  constructor(id: number, name: string, age: number, address: {street: string, city: string, postalCode: number}) { // Defines the constructor for the RegularUser class
    this.id = id; // Sets the id property to the passed-in id value
    this.name = name; // Sets the name property to the passed-in name value
    this.age = age; // Sets the age property to the passed-in age value
    this.address = address; // Sets the address property to the passed-in address value
  }

  getSummary(): string { // Implements the getSummary method from the User interface
    return `User ${this.name} is ${this.age} years old and lives at ${this.address.street} in ${this.address.city}, ${this.address.postalCode}.`; // Returns a summary of the user's information
  }
}

let user1: User = new RegularUser(1, "John", 25, {street: "123 Main St", city: "Boston", postalCode: 12345}); // Creates a new instance of the RegularUser class
console.log(user1.getSummary()); // Calls the getSummary method and prints the result to the console
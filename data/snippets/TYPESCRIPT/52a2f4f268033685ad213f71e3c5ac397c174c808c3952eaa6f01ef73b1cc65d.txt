/**
 * This is a class which represents a Person object
 */
class Person {
    private _name: string; // A private property denoting the person's name
    private _age: number; // A private property denoting the person's age
    private _isEmployee: boolean; // A private property denoting whether the person is an employee

    /**
     * This is the constructor method for the Person class
     * @param {string} name - The person's name
     * @param {number} age - The person's age
     * @param {boolean} isEmployee - Whether the person is an employee or not
     */
    constructor(name: string, age: number, isEmployee: boolean) {
        this._name = name;
        this._age = age;
        this._isEmployee = isEmployee;
    }

    /**
     * This is a getter method to get the person's name
     * @returns {string} - The person's name
     */
    get name(): string {
        return this._name;
    }

    /**
     * This is a getter method to get the person's age
     * @returns {number} - The person's age
     */
    get age(): number {
        return this._age;
    }

    /**
     * This is a getter method to check if the person is an employee or not
     * @returns {boolean} - Whether the person is an employee or not
     */
    get isEmployee(): boolean {
        return this._isEmployee;
    }

    /**
     * This is a setter method to set the person's name
     * @param {string} name - The person's name
     */
    set name(name: string) {
        this._name = name;
    }

    /**
     * This is a setter method to set the person's age
     * @param {number} age - The person's age
     */
    set age(age: number) {
        this._age = age;
    }

    /**
     * This is a setter method to set whether the person is an employee or not
     * @param {boolean} isEmployee - Whether the person is an employee or not
     */
    set isEmployee(isEmployee: boolean) {
        this._isEmployee = isEmployee;
    }

    /**
     * This is a method to get the person's introduction
     * @returns {string} - The person's introduction
     */
    introduce(): string {
        let introduction: string = `Hi, my name is ${this._name} and I am ${this._age} years old.`;
        if (this._isEmployee) {
            introduction += " I am an employee at this company.";
        } else {
            introduction += " I am not an employee at this company.";
        }
        return introduction;
    }
}

// Creating an instance of the Person class
const person = new Person("John Doe", 30, true);

// Printing out person's introduction
console.log(person.introduce()); // Output: Hi, my name is John Doe and I am 30 years old. I am an employee at this company.

// Changing person's name
person.name = "Jane Smith";

// Printing out new person's introduction
console.log(person.introduce()); // Output: Hi, my name is Jane Smith and I am 30 years old. I am an employee at this company.

// Changing person's age
person.age = 35;

// Printing out new person's introduction
console.log(person.introduce()); // Output: Hi, my name is Jane Smith and I am 35 years old. I am an employee at this company.

// Changing person to not an employee
person.isEmployee = false;

// Printing out new person's introduction
console.log(person.introduce()); // Output: Hi, my name is Jane Smith and I am 35 years old. I am not an employee at this company.
interface Person {
  name: string; // declare a property of type string
  age: number; // declare a property of type number
  address?: string; // declare an optional property of type string
}

class Employee implements Person {
  name: string; // implementing the interface property
  age: number; // implementing the interface property
  salary: number; // declare a property of type number

  constructor(name: string, age: number, salary: number) {
    this.name = name;
    this.age = age;
    this.salary = salary;
  }

  introduce() {
    // declare a method that returns a string
    return `Hi, my name is ${this.name} and I am ${this.age} years old.`;
  }

  increaseSalary(percentage: number): void {
    // declare a method with a parameter and no return value
    this.salary *= 1 + percentage / 100;
  }
}

const john = new Employee('John', 25, 50000);
console.log(john.introduce()); // prints 'Hi, my name is John and I am 25 years old.'
john.increaseSalary(10); // increases John's salary by 10%
console.log(john.salary); // prints 55000 (10% increase)
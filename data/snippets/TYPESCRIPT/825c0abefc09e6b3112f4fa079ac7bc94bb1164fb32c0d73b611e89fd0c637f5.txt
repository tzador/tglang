// This is a TypeScript class that represents a person
class Person {
    // Private properties
    private name: string;
    private age: number;
    private address: string;

    // Constructor to initialize values
    constructor(name: string, age: number, address: string) {
        this.name = name;
        this.age = age;
        this.address = address;
    }

    // Method to get a person's information
    getInfo(): string {
        // `this` refers to the current instance of the Person class
        return `Name: ${this.name}\nAge: ${this.age}\nAddress: ${this.address}`
    }

    // Method to check if a person is an adult
    isAdult(): boolean {
        return this.age >= 18;
    }

    // Setter method for name property
    setName(name: string) {
        this.name = name;
    }

    // Getter method for age property
    getAge(): number {
        return this.age;
    }
}

// Create an instance of the Person class
let john = new Person("John Doe", 25, "123 Main Street");

// Call methods on the Person instance
console.log(john.getInfo()); // Output: Name: John Doe
                            // Age: 25
                            // Address: 123 Main Street
console.log(john.isAdult()); // Output: true

// Update the name using the setter method
john.setName("Jane Doe");

// Call the getter method to get the updated name
console.log(john.getAge()); // Output: 25
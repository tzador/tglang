/** Function that recursively calculates the square root of a number until it is within a certain threshold. 
 * @param num The number to be calculated.
 * @param threshold The threshold to determine when the calculation is considered accurate enough.
 * @returns The square root of the given number within the given threshold.
 */
function calcSquareRoot(num: number, threshold: number): number {
    // initialize variables for the current guess and the previous guess 
	let currentGuess = num / 2;
	let prevGuess = 0;

	// loop until the difference between the current and previous guess is within the threshold 
	while (Math.abs(currentGuess - prevGuess) > threshold) {
		// update the previous guess to the current guess 
		prevGuess = currentGuess;

		// calculate the next guess by using the average of the previous guess and the given number divided by the previous guess 
		currentGuess = (currentGuess + num / currentGuess) / 2;
	}

	// return the current guess which should be the square root of the given number within the given threshold 
	return currentGuess;
}

// example usage 
const number = 27;
const threshold = 0.0001;
const squareRoot = calcSquareRoot(number, threshold); // squareRoot should be 5.1962...
// This code snippet defines a generic class
// to be used for creating instances of different types

class Container<T> {
  private data: T[];
  constructor(initialData: T[]) {
    this.data = initialData;
  }

  add(item: T): void {
    this.data.push(item);
  }

  getAll(): T[] {
    return this.data;
  }
}

// Creating an instance of the class with string type
const stringContainer = new Container<string>(['hello', 'world']);

// Adding new items to the container
stringContainer.add('foo');
stringContainer.add('bar');

// Calling getAll method and storing the result
// to a variable
const allData = stringContainer.getAll();

// Logging the result
console.log(allData);

// Output:
// ['hello', 'world', 'foo', 'bar']
// Import necessary libraries
import * as rxjs from 'rxjs'

// Create a class
class User {

  // Properties
  private name: string
  private age: number
  private email: string

  // Constructor
  constructor(name: string, age: number, email: string) {
    this.name = name;
    this.age = age;
    this.email = email;
  }

  // Getter methods
  getName(): string {
    return this.name;
  }

  getAge(): number {
    return this.age;
  }

  getEmail(): string {
    return this.email;
  }

  // Setter methods
  setName(newName: string): void {
    this.name = newName;
  }

  setAge(newAge: number): void {
    this.age = newAge;
  }

  setEmail(newEmail: string): void {
    this.email = newEmail;
  }

  // Method to check if user is an adult
  isAdult(): boolean {
    return (this.age >= 18);
  }

  // Method to subscribe to an observable
  subscribeToObservable(observable: rxjs.Observable<any>): void {
    observable.subscribe(
      (data) => {
        console.log("Received data:", data);
      },
      (error) => {
        console.log("An error occurred:", error);
      },
      () => {
        console.log("Observable completed.");
      }
    );
  }

}

// Create an instance of User class
const user = new User("John", 25, "john@example.com");

// Create an observable
const observable = new rxjs.Observable((observer) => {
  // Send data after 1 second
  setTimeout(() => {
    if (user.isAdult()) {
      observer.next("User is an adult.");
    } else {
      observer.next("User is not an adult.");
    }
    // Complete observable
    observer.complete();
  }, 1000);
});

// Subscribe to observable
user.subscribeToObservable(observable);
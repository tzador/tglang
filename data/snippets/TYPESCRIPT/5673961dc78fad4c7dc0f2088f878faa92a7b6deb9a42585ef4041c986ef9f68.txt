/**
 * This is a class for creating a custom string type in TypeScript.
 */
class MyString {
    private _value: string;

    /**
     * Constructor function that takes in a string value and assigns it to the private _value property.
     * @param value A string value to be assigned.
     */
    constructor(value: string) {
        this._value = value;
    }

    /**
     * Function to convert the string to all uppercase characters.
     * @returns The string value in all uppercase characters.
     */
    toUpperCase(): string {
        return this._value.toUpperCase();
    }

    /**
     * Function to convert the string to all lowercase characters.
     * @returns The string value in all lowercase characters.
     */
    toLowerCase(): string {
        return this._value.toLowerCase();
    }

    /**
     * Function to check if the string contains a specific character.
     * @param char The character to check for.
     * @returns True if the string contains the specified character, false otherwise.
     */
    contains(char: string): boolean {
        return this._value.includes(char);
    }

    /**
     * Function to replace a specific character with a new character.
     * @param oldChar The character to be replaced.
     * @param newChar The character to replace with.
     * @returns The string value with the specified character replaced.
     */
    replace(oldChar: string, newChar: string): string {
        return this._value.replace(oldChar, newChar);
    }

    /**
     * Function to get the length of the string.
     * @returns The length of the string.
     */
    getLength(): number {
        return this._value.length;
    }
}

// Sample usage
const myString = new MyString('Hello World!');
console.log(myString.toUpperCase()); // Output: HELLO WORLD!
console.log(myString.toLowerCase()); // Output: hello world!
console.log(myString.contains('l')); // Output: true
console.log(myString.replace('o', '0')); // Output: Hell0 W0rld!
console.log(myString.getLength()); // Output: 12
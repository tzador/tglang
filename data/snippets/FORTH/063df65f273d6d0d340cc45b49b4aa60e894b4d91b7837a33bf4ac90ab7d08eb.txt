: VARIABLE .( Variable created with address )
Create VARIABLE

: ! .( Store value into variable at current datapointer address )
DAT
>RAM
! \

: @ .( Retrieve value from variable at current datapointer address )
DAT
>RAM
@

: IF .( Checks if topmost stack element is non-zero )
DAT
0=
BRANCH

: ENDIF .( Ends IF block )
; \

: WHILE .( Checks if topmost stack element is non-zero to continue loop )
DAT
0=
WHILE

: REPEAT .( Ends loop and jumps back to WHILE )
0BRANCH

: DO .( Starts a counted loop )
DAT
DO

: LOOP .( Increments loop counter and goes back to DO )
1+
DOE

: UNTIL .( Ends counted loop when topmost stack element is non-zero )
0=
1+
WHILE

: CASE .( Matches topmost stack element to case values )
Create 0DO
DUP
Object!
OVER
@ = \

: ENDCASE .( Ends CASE block )
0,
1+
DO

: of .( Checks if topmost stack element matches case value )
IF
BEGIN

: ENDOF .( Ends of block )
DROP
REPEAT

: DEFAULT .( Default branch for CASE block )
ELSE

: ENDDEFAULT .( Ends default block )
REPEAT
; \
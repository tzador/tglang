: factorial ( n -- n! )    \ defines a word called "factorial" that takes in an integer as input and returns its factorial value
    1 swap begin dup 1 = until \ swaps the input with 1 and begins a loop until the input is equal to 1
    dup -1 rot * swap - 1  \ duplicates the input, subtracts 1 from the duplicate, rotates it to the bottom of the stack,
                           \ multiplies the original input by the value at the bottom of the stack, and then swaps the top two values
    over *  swap dup 1 =    \ duplicates the input, multiplies it with the current factorial value,
                           \ swaps the top two values and checks if the input is equal to 1
    if                    \ if the input is equal to 1, the loop ends
        drop             \ drops the duplicate input value
    else                  \ if the input is not equal to 1,
        swap              \ swaps the current factorial value with the duplicate input value
        over *            \ multiplies the new factorial value with the current factorial value
        swap dup 1 -      \ swaps the top two values, duplicates the input, and subtracts 1 from it
    then                   \ ends the if statement
drop nip;                \ drops the remaining duplicate input value and the unused value at the top of the stack, creating the final factorial value
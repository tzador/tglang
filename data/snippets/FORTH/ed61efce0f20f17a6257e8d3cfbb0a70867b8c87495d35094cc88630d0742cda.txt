: split-to-lines ( str -- str1 str2 )
  \ This code snippet splits a given string into two lines, with an equal number of characters on each line
  2dup 0 0 >r \ Make a copy of the string and store the address on the return stack
  begin
    over dup c@ 2- \ Take the second to last character from the string
    r@ + dup c@ >r + \ Add it to the string we're building and continue building the new string on top
    2dup 2dup r@ c@ c= or not swap and \ Check if the top two characters are the same (excluding the first character)
  until
  rot drop swap \ Drop the remaining string from the stack and swap the two new strings
  r@ -1 - count \ Count the number of characters in the second string
  r> - count \ Count the number of characters in the first string
;
: NEXT ( n -- n+1 ) 1 + ;

: print ( n -- ) ." The number is " . ;

: factorial ( n -- n! ) dup 1 <= if drop 1 else dup 1- factorial * then ;

: permute ( n r -- (n!/(n-r)!) ) 
  begin dup while 
    dup 1- >r 
    /r factorial ?dup 
    if 
      swap 1 < if exit then 
      dup over 
    else 1 then 
    / 
  repeat 
  2drop * 
;

$ 5  print cr
$ 5 factorial print cr
$ 5 3 permute print cr
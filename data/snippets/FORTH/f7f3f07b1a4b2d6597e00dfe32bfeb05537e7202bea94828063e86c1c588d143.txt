\ INTENT: Generate random numbers using a linear congruential algorithm
VARIABLE seed   ( current seed value)

\ Explanation: This line creates a variable called seed which will hold the current seed value used in the algorithm.

: set-seed   ( n -- )   \ sets the seed value to n
  seed !
  \ Explanation: This colon definition creates a new word called set-seed which takes in a number and sets it as the current seed value by storing it in the seed variable.

: next-random   ( -- n )   \ returns the next random number in the sequence
  seed @  1103515245 *
  12345 +
  65536 mod  65536 *
  >int
  \ Explanation: This colon definition creates a new word called next-random which returns the next random number in the sequence by following the formula for a linear congruential algorithm. It uses the current seed value and performs mathematical operations to generate a new number. The >int word ensures the number returned is an integer.

: rand-range   ( min max -- n )   \ returns a random number within the specified range
  dup >r next-random 2swap - r@ mod +
  \ Explanation: This colon definition creates a new word called rand-range which takes in a minimum and maximum value and returns a random number within that range. It uses the next-random word defined previously and performs calculations to ensure the number is within the given range.

\ Example usage:
20 40 rand-range   \ returns a random number between 20 and 40

\ Explanation: This line shows an example of how to use the rand-range word to generate a random number between 20 and 40.
: SQUARE DUP * ; (Create a word that squares the top element of the stack and leaves the result on top)
: FACTORIAL DUP 0= IF DROP 1 ELSE DUP 1- FACTORIAL * THEN ; (Create a word that calculates the factorial of the top element of the stack)
: FIBONACCI 1 1 2 SWAP (Initialize the stack with 1, 1 and 2)
  BEGIN >R (Save the current stack values in a return stack)
  DUP (Duplicate the top element of the stack)
  1 = IF DUP R> SWAP SWAP EXIT THEN (Check if the top stack value is equal to 1, if yes, swap the two stack values and exit)
  >R (Save the current stack value in a return stack)
  1+ (Add 1 to the top stack value)
  SWAP (Swap the top two stack values)
  R@ (Retrieve the top value from the return stack)
  + (Add the two top stack values)
  R> (Retrieve the second value from the return stack)
  SWAP (Swap the top two stack values)
  R> (Retrieve the third value from the return stack)
  SWAP (Swap the top two stack values)
  SWAP (Swap the top two stack values)
  1 ; (Loop until the top stack value is equal to 1 and leave the calculated Fibonacci number on top)
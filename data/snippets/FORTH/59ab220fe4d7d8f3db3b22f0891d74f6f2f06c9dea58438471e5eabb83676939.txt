: INITIALIZE  ( n1 n2 -- )
  BEGIN
    DUP >R  ( duplicate n1 and save to return stack )
    I   ( get current value of loop index )
    1+  ( increment loop index by 1 )
    DUP R> ( duplicate n2 and pop n1 from return stack )
    I *   ( multiply current loop index with n2 )
    .   ( output current loop index times n2 )
    CR   ( output carriage return )
    DUP >R ( duplicate current loop index and save to return stack )
    I >   ( check if loop index is greater than n1 )
  UNTIL ;   ( continue until loop index is greater than n1 )
5 7 INITIALIZE   ( example input n1=5 and n2=7 )
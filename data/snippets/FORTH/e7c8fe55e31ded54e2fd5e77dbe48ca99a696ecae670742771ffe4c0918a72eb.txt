variable nums       ( creates a variable called 'nums', can be any data type)
: sum ( num1 num2 -- sum )  2dup 2over dup + swap over + swap ;  ( defines a word/ function to calculate the sum of the top two numbers on the stack)
: avg ( nums -- average ) 0 swap over do i @ + loop drop 2 / ;   ( defines a word/function to calculate the average of the numbers in the 'nums' variable)
: print-avg ( -- ) nums avg . cr ;    ( defines a word/function to print the average calculated)
: calc (  -- )                             ( defines a word/function to perform calculations)
  .( Input two numbers: )  cr                ( prompts user to input two numbers)
  2dup sum . cr                           ( duplicates and sums the top two numbers on the stack, then prints the result)
  nums 1+ swap !                          ( increments the index of the 'nums' variable by 1)
  print-avg                               ( calls the print-avg word/function to print the average)
;                                                     ( ends the definition of the calc word/function)
: main ( -- )                                   ( defines the main program)
  ." Welcome to the calculation program!" cr   ( prints a welcome message)
  ." How many numbers do you want to calculate?" cr  ( prompts user for number of numbers to calculate)
  0 swap nums !                                 ( sets the index of the 'nums' variable to 0)
  dup 0= if ." Please input a valid number!" drop cr main then     ( if the input is not a valid number, prompt user again)
  begin                                     ( begins a loop)
    calc                                     ( calls the calc word/function)
    ." Do you want to continue? (y/n)" cr    ( prompts user if they want to continue)
    key swap c@ dup 121 =                    ( gets user input and compares to 'y')
  until                                      ( loops until user enters 'n')
  ." Thank you for using the calculation program!" cr   ( prints a thank you message)
;                                                     ( ends the definition of the main program)
main                                        ( calls the main program to start the calculation program)
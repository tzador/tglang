: SORT ( n1 n2 -- n1 n2 n3 ) SWAP DUP >R >R ; : INSERT ( n1 n2 n3 -- n1 n2 n3 ) PICK 2 ROT >R >R R> OVER = IF R> SWAP DROP 1 + SWAP R> ; : FULLSORT ( A*S -- S ) 'A*S'>R COUNT CTX DUP = IF ELSE DROP >R 1 + R> SWAP FULLSORT ROT <R >R FULLSORT R> >R R> >R R> 1 - DUPI UNLOOP R> R@ R> ROT INSERT ; : SORT ( n1 n2 -- n1 n2 n3 ) SWAP DUP >R >R ; 
: INSERT ( n1 n2 n3 -- n1 n2 n3 ) PICK 2 ROT >R >R R> OVER = IF R> SWAP DROP 1 + SWAP R> ; 
: FULLSORT ( A*S -- S ) 'A*S'>R COUNT CTX DUP = IF ELSE DROP >R 1 + R> SWAP FULLSORT ROT <R >R FULLSORT R> >R R> >R 1 - DUPI UNLOOP R> R@ R> ROT INSERT ; 
: MERGE ( S1 S2 A*S3 -- A*S3 ) DUP >R >R DUP PICK 3 ROT <R 'A*S3'>R COUNT CTX UNLOOP >R >R 1 - >R >R MERGE R> R@ R@ R> = IF DROP R> ELSE 2DUP >R SWAP R> ROT INSERT DUP R> R> R@ R> R> + DOVER R> 1 - R> R@ R> PICK ROT FULLSORT SWAP R> R@ R> R> DOVER R> PICK ROT MERGE >R R> ROT INSERT R> R> R> R> R> R> R> R> R> R> R> R> R> R> R> R> R> R> R> ;
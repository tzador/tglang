: MAKE-PERM          ( n -- n ) 
                       ( create a permanent variable ) 
   HERE OVER ,        ( reserve space and put value on stack ) 
   DUP CELL-          ( duplicate address and decrement by 4 ) 
   SWAP !             ( store value in reserved space ) 
   DROP              ( remove duplicate address from stack ) 
;                     ( end of word definition ) 
create P               ( create a word P ) 
0                       ( initialize word to 0 ) 
words P                ( make P be permanent ) 
3 constant n            ( create a constant n and set to 3 ) 

: MULTIPLY            ( n1 n2 -- product ) 
   *                   ( multiply top 2 items on stack ) 
   n2 @ n1 @           ( get values stored in n2 and n1 ) 
   DUP mul-n @         ( duplicate top of stack and multiply by constant ) 
   rot neg           ( rotate top 3 items on stack and negate top ) 
   * swap              ( multiply top 2 items on stack and swap top 2 ) 
   rot n1 ! n1 !       ( rotate top 3 items on stack and store top 2 values in n1 ) 
 ;)                     ( end of word definition ) 

P 1 n                 ( call word P and push 1 and constant n onto stack ) 
MULTIPLY              ( call word MULTIPLY ) 
.                     ( print product )
: multiply ( a b product -- ) \ definition of multiply function
  \ a is the first input, b is the second input, product is the output
  \ -- indicates that there is no output left on the stack
  \ start of function body
  
  dup 0 = if \ if the first input is 0, 
    drop 0 swap swap exit \ product is 0, no need to continue, exit function
    
    else \ if first input is not 0,
      over 0 > if \ check if second input is positive
        over over = if \ check if both inputs are equal
          swap drop exit \ product is one of the inputs, no need to continue, exit function
        else \ if inputs are not equal,
          1- \ decrement second input by 1
          over dup 0 < if \ check if second input is negative
            nip 0 if \ if second input is -1, product is negative of first input, exit function
              negate swap exit \ if second input is not -1, negate product and exit function
          else \ if second input is not negative,
            swap dup -rot -rot recurse \ multiply first input with previous product and recurse
          then
        then
      else \ if second input is not positive,
        1+ \ increment second input by 1
        over dup 0 > if \ check if second input is positive
          nip over + recurse \ add first input to previous product and recurse
        else \ if second input is not positive,
          nip over - recurse \ subtract first input from previous product and recurse
        then
      then
    then
  then
; \ end of function body
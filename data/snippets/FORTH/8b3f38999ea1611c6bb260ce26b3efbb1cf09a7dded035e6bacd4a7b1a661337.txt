\ Define a recursive function to calculate the factorial of a number


: FACTORIAL  ( n -- n! ) \ Define function called FACTORIAL that takes in a number (n) and returns its factorial (n!)

    DUP 0 = IF 1 EXIT THEN   \ Check if input (top of stack) is 0, if true return 1 and exit function
    
    DUP 1 = IF 1 EXIT THEN   \ Check if input (top of stack) is 1, if true return 1 and exit function
    
    DUP 1 - FACTORIAL  \ If input is not 0 or 1, subtract 1 from input and recursively call FACTORIAL function on the result
    
    DUP 1 -  *  \ Multiply the result of the recursive call by the input (numerator)
                   \ This is the recursive step in the factorial calculation     
                   
    EXIT   \ Exit function and return the final result (factorial of input)
    
;   \ End function definition

\ An example of using the FACTORIAL function

5 FACTORIAL .  \ Input 5, calculate its factorial, and display the result
               
! 120           \ Expected output (5! = 120)
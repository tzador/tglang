: fibonacci ( n -- result ) \ This word calculates the nth number in the Fibonacci sequence
    dup 0 = if                        \ handle base cases (n=0)
        drop 0                        \ drop original n and return 0
    else
        dup 1 = if                    \ handle base case (n=1)
            drop 1                    \ drop original n and return 1
        else
            2 -                        \ subtract 2 to get n-2
            dup 0 > if                \ check if n-2 is greater than 0
                fibonacci            \ recursive call to get (n-2)th number in the sequence
                swap                  \ swap top two elements on the stack
                1+                    \ add 1 to get n-1
                swap                  \ swap top two elements on the stack
                fibonacci            \ recursive call to get (n-1)th number in the sequence
                +                    \ add the two numbers in the sequence to get the result
            else
                drop drop 0          \ drop both copies of original n and return 0
            then
        then
    then ;
: SWAP ( n1 n2 -- n2 n1 ) ( define word SWAP, takes two numbers off the stack and swaps their positions )
  2DUP ( n1 n2 n1 n2 ) ( duplicate the top two numbers on the stack )
  ROT ( n1 n2 n2 n1 ) ( rotate the top three numbers on the stack, bringing n1 to the top )
  DROP ( n1 n2 n2 ) ( drop the topmost number on the stack, leaving n1 and n2 )
  DROP ; ( n1 n2 ) ( drop the final number on the stack - swap complete )

: MIN ( n1 n2 -- n3 ) ( define word MIN, takes two numbers off the stack and returns the minimum )
  DUP ( n1 n2 n1 ) ( duplicate the top number on the stack )
  OVER ( n1 n2 n1 n2 ) ( duplicate the second number on the stack )
  > ( n1 n2 flag ) ( compare the top two numbers on the stack, set flag if n1 is greater than n2 )
  IF ( n1 n2 ) ( check if flag is set )
    DROP ( n1 ) ( if n1 is greater than n2, drop n2 from the stack )
  ELSE ( n1 n2 ) ( otherwise, n1 is not greater and will be the minimum )
    SWAP ( n2 n1 ) ( swap n1 and n2 so n1 is now on top )
  THEN ( n3 ) ( end of conditional, leaves the minimum on the stack )
  DROP ; ( n3 ) ( drop the final number on the stack - minimum value remains )
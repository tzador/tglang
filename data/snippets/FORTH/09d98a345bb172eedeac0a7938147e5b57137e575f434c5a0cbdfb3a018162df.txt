variable num (create a variable called 'num')
: double (creates a new word called 'double')
2 * (multiplies the top two values on the stack)
; (end the definition of the word 'double')
: square (creates a new word called 'square')
dup * (duplicates the top value on the stack and multiplies it with itself)
; (end the definition of the word 'square')
: power (creates a new word called 'power')
over swap (copies the second value on the stack and then swaps the top two values)
rot * (rotates the top three values on the stack and then multiplies them all together)
; (end the definition of the word 'power')
: factorial (creates a new word called 'factorial')
1 (pushes the value 1 to the stack)
swap 1 do (swaps the top two values and creates a loop from 1 to the top value)
i * (multiplies the loop index with the top value on the stack)
loop (end the loop)
drop (drops the top value on the stack since it is no longer needed)
; (end the definition of the word 'factorial')

1 num ! (sets the value of 'num' to be 1)
num double . (calls the word 'double' and prints the result)
num square . (calls the word 'square' and prints the result)
num power . (calls the word 'power' and prints the result)
num factorial . (calls the word 'factorial' and prints the result)
\ Define multiplication word
: MUL ( n1 n2 -- result )
   2DUP * ; \ Duplicate top two values on the stack and then multiply them
   
\ Define division word
: DIV ( n1 n2 -- quotient remainder )
   SWAP ( n2 n1 )
   0 >R ( n2 n1 ) \ Push n2 onto return stack, keeping it for later
   0 BEGIN OVER 2DUP < WHILE ( n1 n2 n1 n2 ) \ Check if n1 is less than n2
      2DROP ( n1 n2 ) \ If it is, drop the top two values and continue
   REPEAT ( n1 n2 ) \ Otherwise, the division is complete
   R> / ( n1 n2 / rem ) ; \ Divide n2 by n1 and return quotient and remainder onto stack
: FACTORIAL ( n -- n! )                   // Define a new word 'FACTORIAL' with 'n' on the stack
    DUP 1 <= IF                            // Duplicate the top item on the stack,
        1 SWAP ;                           // and if it is less than or equal to 1,
    ELSE                                   // then swap it with 1 and exit the word
        DUP 1 - RECURSE * ;                // Otherwise, duplicate the top item on the stack,
                                           // decrement it by 1, recursively call 'FACTORIAL',
                                           // and multiply the result with the current item
                                           // on the stack
    THEN                                   // End the IF-ELSE control flow
;                                          // End the word definition

10 FACTORIAL .                             // Call the 'FACTORIAL' word with 10 on the stack
                                           // and print the result to the console
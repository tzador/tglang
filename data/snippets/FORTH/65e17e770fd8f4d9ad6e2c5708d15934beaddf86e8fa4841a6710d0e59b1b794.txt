: is-prime ( n -- flag ) \ this function checks if a number is prime
   dup 2 < if 0 exit then \ if the number is less than 2, exit with 0
   2 begin \ start at 2 for division
     dup over equal? if -1 exit then \ if the number equals the divisor (it is not divisible), exit with -1
     dup * over < 0= if 0 exit then \ if the product of the divisor and the number is less than 0, exit with 0 (we've covered all possible divisors)
     swap mod \ check if the number is divisible by the current divisor
     dup if 0 exit then \ if the remainder is 0, exit with 0 (the number is not prime)
     1+ \ increment the divisor
   key? until \ keep looping while there are still possible divisors
   drop -1 \ if no divisors were found, the number is prime, so return -1
; \ end the function definition

20 is-prime \ => 0 (20 is not prime)
31 is-prime \ => -1 (31 is prime)
\ This code snippet is a FORTH program that creates a list of numbers and performs various calculations on them.

: list_numbers ( n -- n1 n2 n3 n4...)
   \ This word takes in a number, n, and creates a list of the numbers from 1 to n.
   \ For example, if n = 5, the list will be 1 2 3 4 5
   1 swap 1 do i i+ loop ;

: sum_list ( n -- sum )
   \ This word takes in a number, n, and calculates the sum of the list of numbers from 1 to n.
   \ For example, if n = 5, the sum will be 15 (1 + 2 + 3 + 4 + 5)
   list_numbers 0 swap do i + loop ;

: avg_list ( n -- avg )
   list_numbers sum_list over swap / ;

: max_list ( n -- max )
   \ This word takes in a number, n, and returns the maximum value in the list of numbers from 1 to n.
   \ For example, if n = 5, the maximum value will be 5.
   1 swap 1 do i swap max loop ;

: min_list ( n -- min )
   \ This word takes in a number, n, and returns the minimum value in the list of numbers from 1 to n.
   \ For example, if n = 5, the minimum value will be 1.
   1 swap 1 do i swap min loop ;

: square_list ( n -- n1*n1 n2*n2 n3*n3 n4*n4...)
   \ This word takes in a number, n, and returns a list of the squares of the numbers from 1 to n.
   \ For example, if n = 5, the list will be 1 4 9 16 25
   list_numbers do i i * loop ;

: cube_list ( n -- n1*n1*n1 n2*n2*n2 n3*n3*n3 n4*n4*n4...)
   \ This word takes in a number, n, and returns a list of the cubes of the numbers from 1 to n.
   \ For example, if n = 5, the list will be 1 8 27 64 125
   list_numbers do i i i * loop ;
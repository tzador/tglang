0 value num_elements \ ! Define an integer variable 'num_elements' with initial value of 0

\ ! Create a FOR loop to iterate through the values
: iterate  ( n -- ) \ ! Define a function named 'iterate' that takes in an integer
  begin \ ! Start of the loop
    dup 0> \ ! Duplicate the top value and check if it is greater than 0
    while \ ! If greater, continue the loop
      1- \ ! Subtract 1 from the top value
      dup \ ! Duplicate the new top value
      num_elements @ swap + dup ! Get the value of 'num_elements' and swap with top value, add them together, and duplicate
      num_elements ! Store the new value of 'num_elements' back into the variable
    repeat \ ! Close the loop
    drop \ ! Drop the duplicate value left over after the loop
  0; \ ! End of the function definition, with initial value of '0' on top of the stack (will be discarded)
store iterate \ ! Store the function into memory

\ ! Create an array of numbers
variable array \ ! Define a variable named 'array'
10 array ! \ ! Declare an array with size of 10 and set it to 'array'
0 0 do \ ! Create a DO loop to iterate through the indexes of the array []
  i iterate \ ! Call the 'iterate' function with the current index as the parameter
  array i ! \ ! Store the value from the stack into the corresponding index of the array
loop \ ! Close the loop
array 5 ! \ ! Get the value at index 5 of the array and print it
: DOUBLE DUP + ;  \ defines a word that duplicates the topmost item on the stack and adds it to the stack

: EVEN? DUP 2 MOD 0 EQ? ; \ defines a word that checks if the topmost item on the stack is an even number by checking if the remainder of dividing by 2 is equal to 0

: FACTORIAL                        \ defines a word that calculates the factorial of a given number
   ( RECURSION ) DUP 1 > IF        \ checks if the topmost item on the stack is greater than 1, if not, skip the recursion and continue with the rest of the code
     DUP 1 - FACTORIAL              \ recursively calls the word 'FACTORIAL' with the topmost item on the stack decremented by 1
     * SWAP                        \ multiplies the top two items on the stack (i.e. the current number and the result of the recursive call)
   ELSE                              \ if the topmost item on the stack is 1 or less, skip the recursion and continue with the rest of the code
     DROP 1                         \ drops the topmost item on the stack (i.e. 1 in this case)
   THEN                              \ ends the 'IF' statement
;                                   \ ends the word definition

5 FACTORIAL .                       \ prints the factorial of 5 to the output 
                                   \ output: 120 (1 * 2 * 3 * 4 * 5)
: intersect ( a1 b1 a2 b2 a3 b3 -- res )
  0 0
  swap over			( a2 b2 a1 b1 )
  dup rot- swap		( a3 b2 a2 b1 a1 )
  over over			( a3 b2 a2 b1 a1 a3 b2 )
  rot 2dup -			( a3 b2 a2' a3' b3'a2 )
  dup 0 > if			( a3 b2 a2' a3' b3' )
    nip nip			( a3 b2 a2' )
    drop 1 -			( a3 b2 a2 - 1 )
    fix					( a3 b2 a2 )
    swap swap			( a2 a3 b2 )
    dup rot- swap		( a2 a3 b2 b3 )
    2dup over - -		( a2 a3 x y )
    abs nip nip		( a2 a3 x' y' )
    rot rot- swap		( x' x y' )
    over over			( x' x y' x y' )
    2swap swap			( x' y' x y' x )
    0 rot 2dup - -		( x'' y'' x y x )
    abs nip nip		( x'' y'' x' y' )
    rot rot- swap		( x' x'' y' y'' )
    - abs 2drop		( res )
  else				( a3 b2 a2 a3 b3 )
    nip nip 1 fix		( a3 b2 a2' )
    2swap swap			( a2' a3 )
    dup rot- swap		( a2' a3 b2 )
    2dup over - -		( a2' a3 x y )
    abs nip nip		( a2' a3 x' y' )
    swap 2drop			( res )
  then ;

intersect					( a1 b1 a2 b2 a3 b3 -- res )
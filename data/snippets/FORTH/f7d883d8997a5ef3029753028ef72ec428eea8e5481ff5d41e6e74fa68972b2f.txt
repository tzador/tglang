: ODD ORIGIN ( n1 -- n3 )
  DUP DUP 1 AND    ( check if number is odd, retain original value )
  IF
    DROP DROP     ( drop extra copy of number if it is even )
    2 / ROLL      ( move original number to top of stack )
    2 / 2*        ( divide by 2, multiply by 2 to get next odd number )
    SWAP DUP      ( save original number, duplicate next odd number )
    2 OVER 1 + 2* ( calculate next odd number after original )
    *            ( multiply new number by original number )
  ELSE
    SWAP DROP     ( swap the 0 value for the original number )
    1 2* +        ( calculate next odd number after original )
    SWAP SWAP *    ( multiply new number by original number )
  THEN ;
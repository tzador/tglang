variable array
10 cells allot      \ reserves 10 cells in memory
20 0 do             \ loops 20 times with index starting at 0
  i array !         \ stores index i in memory address of array
loop                 \ ends loop

1 array !           \ stores the value 1 in the first cell of the array
2 array +!          \ adds 2 to the value in the first cell of the array
array @ array @ +   \ retrieves the value in the first cell of the array and adds it to the value in the second cell
2 array +!          \ adds 2 to the value in the second cell of the array
array @ array @ -   \ retrieves the value in the first cell of the array and subtracts it from the value in the second cell
swap                \ swaps the top two values on the stack (in this case, the first and second cells of the array)
array @ *           \ multiplies the values in the first and second cells of the array
array @ array @ +   \ retrieves the value in the second cell of the array and adds it to the result from the previous multiplication
array @ /           \ divides the first cell of the array by the result of the previous addition
array @ array @ swap - \ retrieves the value in the first cell of the array and subtracts the result from the previous division from it
array @ array @ <    \ compares the values in the first and second cells of the array
IF                  \ if the first value is less than the second, continue execution
  "The first value is smaller than the second!"           \ text to print if the above condition is true
ELSE                \ if the first value is not less than the second, skip this block
  "The first value is larger than the second or equal!"   \ text to print if the above condition is false
THEN                \ ends the if statement
.
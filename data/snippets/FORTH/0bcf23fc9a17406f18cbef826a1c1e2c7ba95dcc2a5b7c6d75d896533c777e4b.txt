\ A FORTH program that calculates the first 100 prime numbers

: PRIME? ( n -- flag )
  DUP 1 =       // Special cases 0, 1
  IF
    DROP 0      // Not prime
  ELSE
    DUP 2 =      // Special case 2
    IF
      DROP 1    // Prime
    ELSE
      DUP 3 >    // Make sure n > 3
      IF
        DUP 2 MOD 0 =   // Check for divisibility by 2
        IF
          DROP 0      // Not prime
        ELSE
          3 2 SWAP 1 - DO   // Loop from 3 to n-1
            DUP I MOD 0 =   // Check for divisibility by loop counter
            IF
              DROP 0      // Not prime
              LEAVE       // Exit loop
            THEN
          LOOP           // End loop
          DUP 1 =         // Check for prime flag
          IF
            DROP 0        // Not prime
          ELSE
            1             // Prime
          THEN
        THEN
      ELSE
        1                 // Prime
      THEN
    THEN
  THEN
;

: PRIME-LIST ( n -- seq )
  100 *            // Scale up for 100 primes
  1+               // Adjust for special case 1
  2 SWAP           // Initialize stack with first two primes
  3 SWAP
  DUP 0 DO         // Loop n times
    DUP PRIME?     // Check if n is prime
    IF
      OVER         // Duplicate n
      SWAP         // Move prime to top of stack
    ELSE
      SWAP         // Move n to bottom of stack
      1+           // Increment n
      SWAP         // Move n back to top of stack
    THEN
  LOOP             // End loop
  SWAP DROP        // Remove extra prime at top of stack
;

: MAIN ( -- )
  100 PRIME-LIST  // Calculate the first 100 primes
  .S              // Print the list of primes
;

MAIN  \ Execute main program
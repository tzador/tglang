: apply ( x y -- x*x+y )      \ This word applies a formula to two numbers
dup * swap + ;                 \ Duplicates top number, multiplies, swaps,
                               \ and adds the two numbers on top of the stack

: calculate ( a b c -- )       \ This word calculates a quadratic equation
  dup 0< if                    \ Check if first number is negative
    dup abs                     \ Duplicate and take absolute value
    swap -rot                  \ {abs(a) - b c}
    dup 2*                     \ Duplicate and multiply by 2
    swap 2*                    \ {2*abs(a) 2b 2c}
    >r                        \ Move {2c} to return stack
    >r                        \ Move {2b} to return stack
    >r                        \ Move {2*abs(a)} to return stack
    r>                        \ Move {2c} back to stack
    >r                        \ Move {2b} to return stack
    dup rot                    \ Duplicate and rotate stack top
    dup ** apply               \ Calculate first term of formula
    r>                        \ {2b} to stack
    swap >r                    \ Move {2*abs(a)} to return stack
    >r                        \ Move first term to return stack
    dup rot                    \ Duplicate and rotate stack top
    0                        \ Push zero to stack
    swap >r                    \ Move result to return stack
    dup rot                    \ Duplicate and rotate stack top
    ** apply                   \ Calculate second term of formula
    r>                        \ {2*abs(a)} to stack
    swap -                     \ {2*abs(a) - b b*b - 4ac}
    swap /                    \ Divide by 2
    swap +                   \ Sum the two results
  else                        \ else case for positive first number
    dup rot                    \ Duplicate and rotate stack top
    rot **                   \ {a*c} to top
    dup ** rot                 \ Duplicate, {a*c}, {b} to top
    rot **                   \ {b^2} to top
    - swap *                   \ Calculate discriminant, and multiply
    >r                        \ Move {2*b} to return stack
    rot                      \ {a} to top
    r>                        \ Move {2*b} from return stack to top
    -                         \ Subtract b from result
    rot                       \ {a} on top
    >r                        \ Move to return stack
    dup ** rot                 \ Duplicate, {a} to top
    >r                        \ Move result to return stack
    dup rot                    \ Duplicate and rotate stack top
    0                        \ Push zero to stack
    swap >r                    \ Move result to return stack
    dup rot                    \ Duplicate and rotate stack top
    rot **                    \ Calculate first term of formula
    r>                        \ {a} to stack
    swap rot                   \ Move second number to top
    rot **                    \ Calculate second term of formula
    r>                        \ Move {a} from return stack to top
    swap +                     \ Sum the two results
  then                         \ End if statement
  drop                       \ Drop first number from stack
  apply                      \ Apply formula to the remaining two numbers
;
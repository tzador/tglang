: FACTORIAL ( n -- result )      ( word to calculate factorial of a number )
    DUP 1 <= IF                   ( check if number is less than or equal to 1 )
        DROP 1                    ( if yes, drop the number and return 1 as result )
    ELSE                          ( if not, continue with calculation )
        DUP 1 -                   ( duplicate number and subtract 1 from it )
        FACTORIAL                 ( recursively call FACTORIAL to calculate factorial of the number )
        *                         ( multiply the result with the original number )
    THEN                          ( end of IF statement )
;                                 ( end of definition for FACTORIAL word )

: POWER ( base exp -- result )    ( word to calculate the power of a number )
    DUP 1 <= IF                   ( check if exponent is less than or equal to 1 )
        DROP 1                    ( if yes, drop the exponent and return 1 as result )
    ELSE                          ( if not, continue with calculation )
        2DUP                      ( duplicate both base and exponent )
        SWAP 1 -                  ( swap the order of top two items and subtract 1 from exponent )
        POWER                     ( recursively call POWER to calculate power of the number )
        *                         ( multiply the result with the base )
    THEN                          ( end of IF statement )
;                                 ( end of definition for POWER word )

10 5. FACTORIAL .                ( output: 3628800, calculate factorial of 10 )
2 8 POWER .                      ( output: 256, calculate 2 to the power of 8 )
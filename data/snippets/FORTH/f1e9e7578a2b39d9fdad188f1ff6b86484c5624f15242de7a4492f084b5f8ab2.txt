: PALINDROMES ( str1 str2 -- bool )
  OVER >STRING REVERSE >STRING EQUAL? ;	( com-'PALINDROMES' checks if two strings are palindromes )

: DIVISIBLE-BY ( num1 num2 -- bool )
  DUP ROT /MOD DROP 0= ;		( com-'DIVISIBLE-BY' checks if num1 is divisible by num2 )

: PRIMES-SUM ( num1 num2 -- num3 )
  SWAP OVER 2DUP + DO 2SWAP I DUP I DIVISIBLE-BY IF 2DROP LEAVE THEN LOOP
  SWAP DROP ;		( com-'PRIMES-SUM' calculates the sum of all prime numbers between num1 and num2 )

: BINARY-TO-DECIMAL ( binary-str -- decimal )
  0 SWAP 0 DO DUP #'>CHAR >NUM ROT 2 * OVER + LOOP DROP ;		( com-'BINARY-TO-DECIMAL' converts a binary string to decimal )

: IS-PALINDROME ( str -- bool )
  DUP >STRING DUP >STRING REVERSE >STRING EQUAL? ;		( com-'IS-PALINDROME' checks if a string is a palindrome )

: FIND-LARGEST-PRIMAL-PALINDROME ( num1 num2 -- num3 )
  ROT OVER 2DUP + SWAP DO 2SWAP I DUP IS-PRIME IF
    DUP #'>STRING >NUMBER SWAP MAX SWAP
    #'>STRING >PALINDROME? IF DROP 2DROP LEAVE THEN
  THEN LOOP DROP ;		( com-'FIND-LARGEST-PRIMAL-PALINDROME' finds the largest palindrome between two numbers that is also a prime number. )
: ROT DUP2 SWAP ; \Defines a word that rotates the top three values on the stack
: NEGATE 0 SWAP - ; \Defines a word that negates the top value on the stack
: CUBE DUP DUP * * ; \Defines a word that calculates the cube of the top value on the stack
: MINMAX ( n1 n2 -- n1 n2 max min ) DUP2 < IF SWAP THEN ; \Defines a word that compares the top two values on the stack and puts the larger value on top
: SUM ( n -- sum ) DUP 0 ?DO OVER + LOOP DROP ; \Defines a word to calculate the sum of all values on the stack
: REVERSE ( n1 n2 ... -- ... n2 n1 ) \Defines a word that reverses the order of values on the stack
  COUNT \Get the number of values on the stack
  SWAP
  DUP \Top value on the stack
  ?DO \Start loop with counter on top of stack
    OVER SWAP \Put value on top of stack
    ROT \Rotate top three values
    2DUP >R \Put counter on return stack
    ROT \Rotate top three values
    PICK \Pick value based on counter
    SWAP \Put picked value on top of stack
    1- \Decrement counter
    R> \Retrieve counter from return stack
  LOOP
  DROP ; \Drop the counter from the stack
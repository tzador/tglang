: DOUBLE ( n -- dbl ) \ This defines a word called "DOUBLE"
2* ; \ This multiplies the input (represented by n) by 2 and leaves the result on the stack

: STEPS ( n -- ) \ This defines a word called "STEPS"
DUP \ Duplicates the input (represented by n) on the stack 
> if \ Checks if the input is greater than 0, if so, executes the following code 
  ." Step forward." \ Prints "Step forward."
  1- STEPS \ Decrements the input by 1 and calls itself again recursively
else \ If the input is not greater than 0, executes the following code
  DROP \ Removes the input from the stack
  ." Finished." \ Prints "Finished."
then \ End if
;

10 DOUBLE \ Calls the DOUBLE word with input of 10, which will leave 20 on the stack
5 STEPS \ Calls the STEPS word with input of 5, which will print "Step forward" 5 times and then "Finished"
: mul5 ( n -- n*5 ) 5 * ; \ This defines a word 'mul5' that multiplies the input by 5
: sq ( n -- n**2 ) dup * ; \ This defines a word 'sq' that squares the input
: check ( n -- ? ) dup mul5 sq = if ." True" else ." False" then ; \ This defines a word 'check' that checks if the input is equal to its multiplication by 5 and then its square
5 check \ This will output 'True' since 5 * 5 = 25 and 25 * 5 = 125 which is equal to 5 squared
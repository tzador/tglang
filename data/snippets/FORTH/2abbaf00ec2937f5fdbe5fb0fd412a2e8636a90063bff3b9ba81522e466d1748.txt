\ In this code snippet, we are defining a custom function called "multiply" that takes in two parameters a and b.
\ The function multiplies these two parameters together and returns the result.
: multiply ( a b -- c )
    a b * \ Multiply the top two values on the stack and leave the result on the stack
    dup \ Duplicate the result on the stack
    0 > ( if the top value on the stack is greater than 0 )
        -rot \ Rotate the top three values on the stack, so that the result is now the second value
        swap \ The two values on top of the stack and the result have now been swapped
        0 > ( if the top value on the stack is greater than 0 )
            if (then)
                swap \ Swap the top two values on the stack
                -rot \ Rotate the top three values on the stack, so that the result is now the third value
                + ( Add the top two values on the stack and leave the result on the stack )
            then
            (then)
            ( Then the top value on the stack is the final result )
        else \ If the top value on the stack is negative, multiply by -1 to turn it into a positive result
            -1 * ( Multiply the top value on the stack by -1 )
        then
    then
;
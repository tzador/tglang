: ROLLNEG ( n1 n2 n3 -- n2 n3 n1 )   \ rotates three stack items, where n1 is top of stack
  ROT ROT ;\rotates the top three stack items ;
: ABS ( n1 -- n2 )\takes the absolute value of an input number
  DUP 0< IF 0 > ;\duplicates the input (n1) checks if it's negative, if so, sets it to 0
  SWAP - ;\swaps the duplicated value with 0 and subtracts, giving absolute value (n2)
: PYTHAG ( n1 n2 -- n3 )\calculates the hypotenuse of a right triangle using Pythagorean theorem
  DUP * SWAP * + SQRT ;\duplicates both inputs, squares them, adds them, and applies square root function
: PRIMES ( n1 -- n2 ... n3 )\generates a list of n2 to n3 prime numbers using Sieve of Eratosthenes method
  2   n2 + 1 \ initializes stack with 2 and first prime number (n2)
  OVER * SWAP * (n1 * n1) (n3) 1+ \ duplicates n1, squares it, swaps with n1, increments n3 by 1 (to include n1)
  DO \ start of main loop
    I DUP \ duplicate current loop index (I) and input number (n1)
    BEGIN \ start of inner loop
      2DUP > \ checks if current index (I) is greater than input number (n1)
    WHILE \ start of inner loop condition
      DUP NIP MOD \duplicates current index (I), removes input number (n1), calculates modulus
      0 = \checks if modulus is equal to 0
    UNTIL \ end of inner loop condition 
    ;REPEAT \ end of inner loop, goes back to main loop
  LOOP \ end of main loop
  DROP \ removes last item on stack (input number) and leaves list of prime numbers on stack 
; \end of code snippet
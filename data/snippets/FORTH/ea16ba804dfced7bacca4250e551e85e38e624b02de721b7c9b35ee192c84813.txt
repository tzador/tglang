variable factor \ Creates a variable called 'factor'
: factorial \ Defines a function called 'factorial'
  dup \ Duplicates the top item on the stack
  1 = \ Checks if the top item is equal to 1
  if \ If equal, skip to else clause
    drop \ If not equal, drop top item
    1 \ Pushes 1 to the stack
    swap \ Swaps the top 2 items on the stack
    factor @ \ Retrieves the value of the variable 'factor'
    * \ Multiplies the top 2 items on the stack
    recurse \ Calls the 'factorial' function again
  else \ If top item is equal to 1
    drop \ Drop top item (1)
  then \ End of if clause
; \ End of function definition
10 factorial . \ Calls the 'factorial' function and prints the result
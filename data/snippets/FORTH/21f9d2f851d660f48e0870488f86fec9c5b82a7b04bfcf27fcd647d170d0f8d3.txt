CREATE vehicle        \ create a new word for a vehicle
DOES>                 \ define the behavior of the word
   here @ , vehicle   \ use the current execution address to create a link to the word "vehicle"
   3 cells allot      \ allocate 3 cells of memory for information about the vehicle
   over !             \ store the vehicle type in the first memory cell
   swap !             \ store the vehicle color in the second memory cell
   2 dup              \ duplicate the vehicle type and color
   -                 \ subtract the two values to get the length of the string
   dup 1+             \ duplicate the string length and add 1 to it
   bounds             \ get the address range for the string
   swap MOVE          \ move the vehicle type to its assigned memory location
   swap MOVE          \ move the vehicle color to its assigned memory location
   swap 0             \ get the starting address for the string
   SWAP               \ swap the address with the string length
   MOVE               \ move the string to its assigned memory location
   here SWAP >R       \ get the current execution address and save it on the return stack
   1+                 \ increment the execution address by 1 to skip the string length value
   cell+              \ get the address of the vehicle type
   cell+ ALLOT        \ allocate memory for the vehicle name
   R>                 \ retrieve the starting address from the return stack
   2* swap +          \ multiply the string length by 2 and add it to the starting address
   1+                 \ increment the address by 1 to skip the color value
   cell+              \ get the address of the vehicle color
   cell+ ALLOT        \ allocate memory for the vehicle model
   1+                 \ increment one more time to reach the end of the cell allocated for vehicle type
   here @ OVER C!     \ store the vehicle type character by character
   1+ OVER C@ OVER C! \ store the vehicle color character by character
   1+ c@              \ get the starting address for the vehicle name
   1+ c!               \ store the vehicle name character by character
   c@                 \ get the last character of the vehicle name
   0=                 \ check if the last character is null
   IF                 \ if true, end the string
      EXIT            \ exit the word
   THEN               \ end if statement
   cell+              \ increment the address to reach the first character of the vehicle model
   MAX ALLOT          \ allocate the maximum number of cells for the vehicle model
   DUP cell+ SWAP LOOP \ allocate the maximum number of cells for the vehicle model in a loop
   SWAP EXIT          \ swap the values and exit the word
;                     \ end the definition of the word
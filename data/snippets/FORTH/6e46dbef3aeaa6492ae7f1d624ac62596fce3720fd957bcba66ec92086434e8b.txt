( interpret given string value as a floating point number )
: FLOATTEN ( start execution point for floating point conversion )
    BL WORD ( gets next word from input )
    SAFEFINDns:F ( safe floating point conversion ) 
    BEGIN ( start of loop )
        DUP WHILE ( check if stack has a double - repeat loop if true )
        ( use ASCII code to check for valid characters )
        DUP ( duplicate top of stack )
        C@ 46 - DUP ( get ASCII code and check if it is a decimal point )
        0 < ( check if decimal point - if true, skip 2 lines )
        IF ( if decimal point, multiply current number by 10 )
            10 * SWAP ( multiply by 10 and swap top two stack items )
            C@ - 48 ( convert ASCII code to decimal value )
            DROP ( drop top of stack - decimal point )
        THEN ( end of decimal point check )
        C@ 48 - ( convert ASCII code to decimal value )
        OVER ( copy previous top of stack under top of stack )
        IF ( check if number is negative - if true, multiply by -1 )
            SWAP 10 * ( swap and multiply by 10 )
            C@ - 48 ( convert ASCII code to decimal value )
            NEGATE ( negate current number )
            SWAP ( swap top two stack items )
            DROP ( drop top of stack - minus sign )
        THEN ( end of negative number check )
        + ( add decimal value to current number )
    REPEAT ( end of loop )
    DROP ( drop top of stack - loop condition )
    0 = IF ( check if stack is empty - if true, return 0 )
        0
    ELSE ( if stack is not empty, convert to floating point )
        1e FLOAT 1e M*/ ( convert to floating point )
    THEN ( end of stack empty check )
; ( end of FLOAT representation )
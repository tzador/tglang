1000 CONSTANT LENGTH                    \ constant to represent length
VARIABLE ARRAY LENGTH                 \ variable to hold array length
: SET-ARRAY ( n -- )                   \ sets the variable for array length
    LENGTH ! ;                         \ stores the input value to variable
: INIT-ARRAY ( -- )                    \ initializes the array with random values
    ARRAY LENGTH CELLS ALLOT           \ allocate memory for array
    LENGTH @ 0 DO                      \ loop for array length times
        I CELLS + RAND DUP             \ generate random value and duplicate it
        CELLS + SWAP !                 \ store the value in current array index
    LOOP ;                             \ end loop
: SORT ( -- )                           \ sorts the values in the array
    INIT-ARRAY                         \ initialize the array
    ARRAY LENGTH CELLS 1- DO           \ loop for array length-1 times
        ARRAY LENGTH CELLS 1- DO       \ inner loop for array length-1 times
            I CELLS @ J CELLS @ <      \ compare the values in current and next index
            IF                         \ if current value is smaller than next value
                I CELLS @ J CELLS @   \ swap the values in current and next index
                J CELLS ! I CELLS !   \ using stack manipulation
            THEN                       \ end if
        LOOP                           \ end inner loop
    LOOP;                               \ end outer loop
: DISPLAY ARRAY                        \ displays the values in the array
    ARRAY LENGTH CELLS DO               \ loop for array length times
        I CELLS + .                    \ display value in current index
    LOOP ;                             \ end loop
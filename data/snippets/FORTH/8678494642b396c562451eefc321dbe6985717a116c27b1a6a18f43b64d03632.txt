: DUPL ROT DUP ROT SWAP ; \Duplicate a stack item

: TEN-INCREMENT ( n -- n+10 )  \Increment a number by 10
  10 + ; 

: .S ( -- )  \Print stack contents
  BEGIN 
    DUP WHILE
    CR SWAP    \Swap top two items
    DUP .      \Print top of stack
    SWAP 
    1 - 
  REPEAT 
  DROP        \Drop final 0
  CR ; 

: FACTORIAL ( n -- n! )  \Calculate factorial of a number
  DUP 1 <= IF
    DROP 1     \Base case: 0! = 1
  ELSE
    DUP 1 -         \Decrement n
    FACTORIAL       \Recursive call
    SWAP DUP *      \Multiply by current n
  THEN ; 

: EULER-CONSTANT ( n -- e^n )  \Calculate e^n using Taylor series
  1 1 10 FOR         \Loop 10 times (higher value for more accuracy)
    DUP OVER *       \n^n
    SWAP I FACTORIAL \Multiply by n!
    /               \Divide by loop variable (factorial of n)
    +               \Add to running total
  NEXT
  DROP ;             \Drop loop variable from stack

: FIZZBUZZ ( n -- )  \Print FizzBuzz sequence up to n
  1 1 DO 
    DUP                \Duplicate loop variable
    DUP 15 MOD        \Check if divisible by 15 (3 and 5)
    IF 
      DROP ." FizzBuzz"  
    ELSE
      DUP 3 MOD       \Check if divisible by 3
      IF 
        DROP ." Fizz"
      ELSE 
        DUP 5 MOD    \Check if divisible by 5
        IF 
          DROP ." Buzz"
        ELSE 
          2DROP     \Neither divisible, drop both stack items
          DUP .     \Print loop variable
        THEN 
      THEN 
    THEN 
    CR 
  LOOP ;
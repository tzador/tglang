: MULTIPLY ( n1 n2 – n3 ) \ A compilation word that multiplies two numbers
  * ; \ Multiplies the top two numbers on the stack and leaves the result

: ADD ( n1 n2 – n3 ) \ A compilation word that adds two numbers
  + ; \ Adds the top two numbers on the stack and leaves the result

: LOOP ( n -- ) \ A compilation word that creates a loop based on the given number
  BEGIN \ Begin the loop
    DUP \ Duplicate the top number on the stack
    0 = \ Check if it is equal to 0
  UNTIL \ If true, end the loop
    1- \ Subtract 1 from the top number on the stack
    DUP \ Duplicate the top number, which is now the current index
    ADD \ Add the current index to the result
  REPEAT ; \ Repeat until the loop is completed, leaving the final result on the stack

5 \ Push the first number onto the stack
3 \ Push the second number onto the stack
MULTIPLY \ Call the MULTIPLY compilation word, leaving the result on the stack
LOOP \ Call the LOOP compilation word, creating a loop from 1 to 5 and adding each iteration to the result
. \ Output the final result, which should be 30 (5*3*1 + 5*3*2 + 5*3*3 + 5*3*4 + 5*3*5)
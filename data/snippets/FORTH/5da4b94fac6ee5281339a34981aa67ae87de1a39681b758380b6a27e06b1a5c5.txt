: PERMUTE ( array n -- )
  1 1 DO  ( i )
    ROT ( i array )
    2 i + 2 DO  ( j i array )
      OVER ( j i array j )
      SWAP ( j i j array )
      I PICK  ( j k )
      ROT ( j k i )
      2 PICK  ( j k i v )
      2 PICK  ( j k i v i )
      >R ( j k i v ) ( save value on return stack )
      I PICK SWAP ( j k i v k )
      I < ( j k i v flag )
      IF
        2DUP SWAP ( j k i v v k )
      THEN
    LOOP
    I 1 + PICK ( k' )
    R> SWAP ( k' array )
    SWAP ( array k' )
    2DUP >R PICK ( array k' k' )
    R> 2 PICK SWAP ( array k' k' array )
    2 PICK SWAP ( array k' array k' )
    I PICK 2 PICK SWAP ( array k' array k' i )
    SWAP 1- PICK ( i )
    SWAP ( i array k' array )
    2 PICK I PICK 2 PICK ( i array k' k 'v k )
    SWAP 2 PICK 1 + PICK SWAP ( i array k' v array )
    2SWAP 2 PICK ( array v k' )
    2PICK ( array v k' array )
    -ROT ( v k' array array )
    ROT ( array array v k' )
    ROLL ( array v k' array )
    ROT ( array array array v )
  LOOP
;
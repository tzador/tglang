: UNIQUE ( inputArray1 inputArray2 -- outputArray )
      \ Create a new array for unique elements
      ( 1. check length of input arrays )
      >R ( inputArray1 ) LENGTH
      >R ( inputArray2 ) LENGTH
      \ Add length of input arrays to stack
      R> R> ( inputArray2 inputArray1 ) + ( total length )
      \ Create temporary array to hold elements
      ALLOT ( inputArray1 inputArray2 ### ) 0 comments
      \ Initialize temporary array with zeros
      BEGIN
            \ Loop through first input array
            R@ I ( i ) DUP
            DUP R@ I ( i i )
            @ ( inputArray1[i] ) ROT ( i inputArray1[i] )
            I = 0 =
            \ Check if element is already in temporary array
            IF
                  \ Add element to temporary array
                  OVER ( inputArray1[i] i inputArray1[i] )
                  ! ( inputArray1[i] )
                  1 ( inputArray1[i] 1 )
                  +
                  UPDATE ( inputArray1[i] )
            THEN
            \ Check if loop has finished going through first input array
            I R@ = ( i )
      UNTIL 2DROP
      \ Loop through second input array
      BEGIN
            R@ I ( i ) DUP
            @ ( inputArray2[i] ) ROT ( i inputArray2[i] )
            \ Check if element is already in temporary array
            OVER ( inputArray2[i] i inputArray2[i] )
            @ ( inputArray2[i] )
            I = 0 =
            \ Check if element is already in temporary array
            IF
                  \ Add element to temporary array
                  OVER ( inputArray1[i] i inputArray1[i] )
                  ! ( inputArray1[i] )
                  1 ( inputArray1[i] 1 )
                  +
                  UPDATE ( inputArray1[i] )
            THEN
            \ Check if loop has finished going through second input array
            I R@ = ( i )
      UNTIL 2DROP
      \ Loop through temporary array and create output array
      BEGIN
            DUP # ( i # ) 0 = ( i # )
            \ Check if element appears only once in input arrays
            IF
                  OVER ( inputArray1[i] i inputArray1[i] )
                  @ ( inputArray1[i] )
                  DUP ( inputArray1[i] inputArray1[i] )
                  ARRAY! ( inputArray1[i] )
                  ( inputArray1[i] ) OUTPUT
            THEN
            # 1+ ( i+1 # )
      UNTIL # ( # ) I =
      \ Clean up stack by dropping temporary array and lengths of input arrays
      2DROP
; ( outputArray )
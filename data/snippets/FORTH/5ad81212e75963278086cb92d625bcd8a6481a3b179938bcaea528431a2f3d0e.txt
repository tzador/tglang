\ This section defines a Forth word that checks if a given number is prime
  \ PrimeCheck receives a number from the stack and pushes a flag (0 or 1) back on the stack

  : PrimeCheck ( n -- flag )
    \ Variables to be used in the algorithm
    \ div is the current divisor being checked, initially set to 2
    \ limit is the square root of the number, used as the upper limit for div
    \ prime holds the flag for prime (1) or not prime (0)
    \ remainder is used to check if the number is divisible by div 
    \ divisor is used to store the result of divmod 
    \ (the quotient and remainder after dividing div by the number)
    variable div 
    variable limit 
    variable prime 
    variable remainder 
    variable divisor 

    \ Set limit to the square root of the number
    \ Make use of the square root function provided by the Forth interpreter
    \ sqrt takes a number from the stack and pushes its square root
    \ on the stack
    \ Since limit is a variable, we need to use @ with it to access its value
    depth >r sqrt r> place limit !
    
    \ Loop starts here
    >r \ Save the number to be checked on the return stack
    2 \ Set initial value of div
    begin 
      dup \ Duplicate the number being checked
      div ! \ Store in div variable
      remain \ Compute remainder after dividing by div
      div divisor ! \ Store divisor in variable
      \ Check if remainder is zero, this means the number is not prime
      dup 0 = if
        0 r> prime ! \ Set prime flag to 0 to indicate number is not prime
        exit \ Exit loop
      then
      \ Check if div exceeded limit, if yes, the number is prime
      \ Exit loop and set prime flag to 1
      \ prime is initially set to 1, so we only need to set it to 1
      \ when the number is proven to be prime
      div @ limit @ u>= if
        1 prime ! \ Set prime flag to 1
        exit \ Exit loop
      then 
      \ Increment div
      div @ 1+ div ! 
    repeat 
    r> prime @ place swap drop \ Pop the number from the stack and store
                            \ the prime flag on the stack

  \ End of PrimeCheck word
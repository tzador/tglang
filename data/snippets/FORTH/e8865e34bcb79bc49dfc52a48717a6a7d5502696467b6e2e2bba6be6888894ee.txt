variable size ( create a variable named 'size' to store a value )

create table ( create a dictionary named 'table' to store values )[
    "apples" 10 ,
    "oranges" 15 ,
    "bananas" 7
]table ! ( store the dictionary in the 'table' variable )

: display-items ( create a new word 'display-items' to print the values in the table ) 
    table @ ( get the stored dictionary from the 'table' variable )
    0 do ( start a loop from 0 to the dictionary size ) 
        i ( get the index value for the current iteration )
        dup sort ( duplicate the index, and sort it in alphabetical order )
        2@ ( access the second item in the sorted index, which is the item name )
        dup 0= ( duplicate the name, and check if it is equal to 0, which indicates the end of the table )
        if ( if it is equal to 0, then exit the loop ) 
            drop exit ( drop the duplicated name, and exit the loop )
        then ( end if statement )
        cr ( print a new line )
        ." Item: " i . ( print the index value, which is the item name )
        ." Price: $" ( print the string "Price: $" )
        2@ . ( print the price of the current item )
        space ( add a space )
    loop ( end the loop )
; ( end the definition of 'display-items' word )

size 0 ( set the value of the 'size' variable to 0 )
begin ( start a loop )
    dup size < ( duplicate the current value and compare it to the 'size' variable )
    while ( if the value is less than 'size', then execute the code )
        display-items ( call the 'display-items' word to print the values )
        size 1 + ( add 1 to the 'size' variable )
    repeat ( repeat the loop )
    ." The end of table." ( print the end message )
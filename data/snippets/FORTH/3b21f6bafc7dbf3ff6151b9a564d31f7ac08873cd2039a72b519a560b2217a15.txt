\ Define Checkers Game board size
: board-size ( n1 n2 -- )
  n1 n2 cells 2* + \ Total number of cells on board
  [ 0 swap 2/ mod drop i * ] \ Create board positions
  board-size-array ! ; \ Store positions in array
 
\ Create array to keep track of board positions
create board-size-array 0 , board-size cell + allot
 
\ Define function to place a piece on the board
: place-piece ( n p -- )
  n 2* board-size + \ Calculate position on board
  board-size-array ! ; \ Store piece in array
 
\ Define function to capture a piece on the board
: capture-piece ( n -- )
  n 2* board-size + \ Calculate position on board
  board-size-array ! 0 ; \ Store captured piece and reset position
 
\ Create array to hold player's turn
create player-turn 0 , 0 , board-size * allot
 
\ Define function to switch player's turn
: switch-player ( -- )
  player-turn @ over ( 0 0 )
  0= if ( 0 0 )
    drop drop ( )
    1 player-turn +! ( )
  else ( 0 0 )
    1 swap - swap ( -1 0 )
    player-turn ! ( )
  then ; ( )
 
\ Define function to display the board
: display-board ( -- )
  board-size 2/ 0 do ( i )
    dup 2/ 0 do ( i j )
      i j cells * + board-size-array @ . ( )
    loop ( i )
    cr ( )
  loop ( )
  player-turn @ . ." is the current player's turn." cr ;
6 VARIABLE counter \ create a variable named 'counter' with initial value of 6

: multiply_counter ( a -- a')
  counter @ * \ multiply input by value of counter
  counter @ 1+ dup counter ! \ duplicate and increment value of counter
  drop \ remove input from stack
;

10 multiply_counter \ call multiply_counter with input of 10

10 multiply_counter \ call multiply_counter again with input of 10, using new value of counter

counter @ . \ output final value of counter

\ Variables allow us to store and modify values in FORTH.
\ In this code, we create a variable named 'counter' with an initial value of 6.
\ We then define a word (function) named 'multiply_counter' that takes an input, multiplies it by the value of counter,
\ and then increments the value of counter by 1.
\ We call multiply_counter twice with an input of 10, which means the second time it will use the new value of counter (7) to multiply 10.
\ Finally, we output the final value of counter, which should be 7.
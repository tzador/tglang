: FIB  	( n -- result ) \ Defines a word called FIB that takes in an input 'n' and outputs a result
    dup 0 = if    \ Duplicates the input, checks if it is zero
        drop exit \ If it is zero, drops the input and exits the word
    else          \ If not zero, execute the following code
        2dup 1-    \ Duplicates the input twice and decrements the top copy
        recurse    \ Recursively executes the word with the decremented input as the new input
        swap       \ Swaps the top two elements on the stack
        1-         \ Decrements the top element (which is now the original input)
        recurse    \ Recursively executes the word with the decremented input as the new input
        +          \ Adds the top two elements (the recursive results) and leaves the sum on the stack
    then          \ Ends the if structure
;                 \ Ends the definition of the word

10 fib	\ Calls the FIB word with an input of 10 and outputs the result
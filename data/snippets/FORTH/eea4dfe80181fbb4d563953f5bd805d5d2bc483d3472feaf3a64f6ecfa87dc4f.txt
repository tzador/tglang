: FACTORIAL ( n -- n! )   \ create a function called FACTORIAL that takes in a number and calculates its factorial
    DUP 1 = IF             \ duplicate the top number on the stack, check if it is equal to 1
        DROP 1             \ if it is, drop the duplicate and push 1 onto the stack (this is the base case)
    ELSE                   \ otherwise
        DUP 1 -            \ duplicate the top number on the stack, subtract 1 from it
        FACTORIAL          \ recursively call the FACTORIAL function with the new number
        *                  \ multiply the top two numbers on the stack (calculating n!)
    THEN                   \ end if statement
;                         \ end function definition

6 FACTORIAL .             \ call the FACTORIAL function with the input of 6, and print the result
= 720                     \ the output should be 720 (6! = 6*5*4*3*2*1 = 720)
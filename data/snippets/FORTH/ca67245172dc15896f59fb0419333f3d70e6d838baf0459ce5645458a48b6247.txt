variable spaceSize \ create a variable to hold the size of the space
: readSpace ( space -- ) \ create a word to read the input and store it in the spaceSize variable
    space @ number swap ! \ read the input and store it in the spaceSize variable
;
: createSpace ( -- space ) \ create a word to create the space based on the size stored in the spaceSize variable
    spaceSize @ bl dup swap allocate ( a w -- a w' ) \ allocate memory for the space
    0 ?do dup i 1 i -rot move ( a w' -- a' w'' ) \ loop over the space and fill it with spaces
    loop drop
;
: printSpace ( space -- ) \ create a word to print the space to the console
    dup spaceSize @ do i c@ emit ( a -- ) \ loop over the space and print each character
    loop drop
;
createSpace printSpace \ combine the previous words to create, print, and fill the space
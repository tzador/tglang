: RANDOM ( n -- n )  \ Generate a random number between 1 and n
   RANDOM-NUM 1 +     \ Call the system's random number generator
   SWAP               \ Put the limit on top of the stack
   MOD                \ Take the modulus, leaving a number between 1 and n
   ;                  \ End definition of RANDOM
   
: SORT ( a1 a2 -- )      \ Sorts two numbers
   SWAP >R DROP          \ Save the second number on return stack, drop it
   SWAP < IF             \ If the first number is smaller, swap back
      R> SWAP            \ Retrieve second number from return stack and swap
   ELSE                  \ Otherwise, leave the numbers as is
      >R SWAP            \ Save first number on return stack and swap
   THEN                  \ End if-then-else
   R> SWAP               \ Retrieve second number from return stack and swap
   ;                     \ End definition of SORT
   
: QUICKSORT ( a1 ... an n -- a1' ... an' )  \ Recursive quicksort algorithm
   DUP 1 <= IF           \ If only one item in array, return
      DROP               \ Drop the item and exit
   ELSE                  \ Otherwise, continue with quicksort
      DUP PICK           \ Get pivot index and value
      ROT SORT           \ Move pivot to correct spot and recursively sort subarrays
      SWAP                \ Swap pivot with first element of second subarray
      ROT SWAP           \ Swap first element of first subarray with first element of second subarray
      >R 1+              \ Move pivot index to return stack and increment by 1
      ROT +              \ Get length of first subarray
      R@                 \ Get pivot index back from return stack
      - QUICKSORT        \ Sort first subarray
      R>                 \ Get pivot index back from return stack
      SWAP               \ Swap pivot with first element of second subarray again
      + QUICKSORT        \ Sort second subarray
   THEN                  \ End if
   ;                     \ End definition of QUICKSORT
   
5 1 8 3 2 10 QUICKSORT    \ Generate an array of numbers and sort them using QUICKSORT
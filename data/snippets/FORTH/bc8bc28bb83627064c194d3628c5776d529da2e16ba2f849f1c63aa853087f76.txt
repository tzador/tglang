\ This code snippet calculates the average of a list of numbers

: average ( n -- n ) \ create word 'average' with one input parameter and one return value
    over 0 \ initialize accumulator with 0
    rot ( n acc n ) \ move the first input parameter to the top of the stack
    dup >r ( n acc n acc ) \ duplicate the first input parameter and save a copy in return stack
    begin ( n acc ) \ start a loop 
        3 pick r@ dup + \ add the top two numbers on the stack and accumulator
        2 pick 1+ \ move the next number from the list to the top of the stack
        dup 0= ( 0 n ) \ check if the next number is 0
    while ( n acc ) \ if not 0, continue loop
    drop nip ( acc ) \ drop the remaining 0 and nip the accumulator to get the average
    rdrop ( ) \ drop the saved copy of the first input parameter from the return stack
    ; \ end the word 'average'
    
20 30 40 10 5 average . \ call 'average' with a list of numbers and print the result
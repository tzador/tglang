: FACTORIAL   ( n -- n! ) \ Define factorial subroutine
    1 SWAP   ( n 1 ) \ Push 1 to the top of the stack
    BEGIN   ( n m )
        DUP   ( n m m ) \ Duplicate the top of the stack
        OVER  ( n m m n ) \ Copy n to the top of the stack
        *     ( n m m*n ) \ Multiply top 2 elements
        1-    ( n m n-1 ) \ Decrement top of the stack
        DUP   ( n m n-1 n-1 ) \ Duplicate the top of the stack
        2     ( n m n-1 n-1 2 ) \ Push 2 to the top of the stack
        >     ( n m n-1 n-1 > ) \ Check if n-1 is greater than 2
    WHILE  ( n m (flag) ) \ Condition for looping while n-1 > 1
        SWAP \ Swap top 2 elements to continue loop
    REPEAT \ End loop when n-1 <= 1
    DROP \ Drop the flag from the stack
;
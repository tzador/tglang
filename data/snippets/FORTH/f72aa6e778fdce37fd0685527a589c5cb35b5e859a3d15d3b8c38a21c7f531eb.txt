: compare ( a b c -- d )  \ compares values a and b and returns minimum of a and b
    dup 0>
    if
        >r  \ pushes a onto return stack
        else
        0swap >r \ pushes b onto return stack
    then
    dup 0> if
        0swap r> \ swap to get correct value from return stack
        else
        r>
    then
    swap abs min  \ compares absolute values of a and b, returning minimum
;

: get-largest ( a b c -- d )  \ finds largest of values a and b and c
    compare \ compares values a and b, returns minimum
    compare \ compares minimum from previous compare to c, returns minimum
;
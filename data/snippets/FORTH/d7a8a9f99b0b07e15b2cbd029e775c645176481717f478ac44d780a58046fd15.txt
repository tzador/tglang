\The following code snippet generates a random number between 1 and 100 and then checks if it is prime.
: random ( -- n )  \Generate a random number between 1 and 100 
   100 random 1+ ;
: prime? ( n -- flag )  \Checks if a number is prime by dividing it by all numbers less than or equal to its square root
   dup 2 > \Check if n is greater than 2 (the only even prime number)
   if \If n is greater than 2, continue with the following steps
      dup 2 swap sqrt swap ( n sqrt n) \Duplicate n, swap the top two stack items, find the square root of n, and swap the top two stack items again
      3 \Start with the number 3
      begin \Start a loop
         dup \Duplicate the current number 
         3 \Start with the number 3 again
         begin \Start another loop
            * over \Multiply the current number with 3 and then switch to the top item on the stack
            dup \Duplicate the new number
            rot divide \Rotate to the third item on the stack and divide the current and previous numbers
            dup 0= \Check if the remainder is equal to 0, meaning the current number is a factor of n
            if \If the current number is a factor of n, set the flag to 0 (not prime) and end the loops 
               pop 0 \Pop the current number and set the flag to 0
               exit
            then 
            dup negate 1+ \If the current number is not a factor, negate it and add 1 in order to get the next odd number (e.g. 3 becomes -4 and then 5)
         again 
      dup 0= \Check if the flag is still 0, meaning a factor was found and n is not prime
      if \If n is not prime, pop the flag and set it to 0
         pop 0
      else \If n is prime, pop the flag and set it to 1
         pop 1
      then
   else \If n is not greater than 2, pop n and set the flag to 0
      pop drop 0
   then ;
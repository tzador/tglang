: LIST-PRIMES       \ Define word to list prime numbers
( n1 n2 -- )        \ Input: start and end of range
   2 SWAP DO         \ Start loop with initial value 2 and end value on top of stack
      DUP PRIME?     \ Duplicate and check if number is prime
      IF             \ If prime
         CR .        \ Print number
      THEN
   LOOP              \ Close loop
;                    \ End word definition

: PRIME?            \ Define word to check if number is prime
( n -- flag )        \ Input: number to be checked
   2 MAX              \ Get minimum divisor (2)
   DUP {              \ Create loop list
      DUP DUP         \ Duplicate top two stack items
      >R *            \ Calculate multiple and push to return stack
      DUP             \ Duplicate number to be checked
      MOD             \ Perform modulo operation
      IF              \ If no remainder (number is divisible)
         I           \ Move loop list pointer back to top of stack
         R> DROP     \ Discard multiple from return stack
         DUP *       \ Replace number with divided version
         MAX         \ Get new minimum divisor
      ELSE
         R> DROP     \ Discard multiple from return stack
      THEN
      0 =             \ Check if all remainders were zero (no divisors found)
   }                 \ End loop list
   AND               \ Take logical AND of all results (flag)
;                    \ End word definition
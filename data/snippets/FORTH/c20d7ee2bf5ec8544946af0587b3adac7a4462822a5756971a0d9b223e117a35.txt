( --- str1 str2 str3)
0 variable index         \ index starts at 0
variable buffer1 30 allot
variable buffer2 30 allot
variable buffer3 30 allot

: split ( str --- str1 str2 str3 )
  buffer1 swap
  buffer2 swap
  buffer3 swap
  
  buffer1 index bounds ( adr1 len1 )
  buffer2 index bounds ( adr2 len2 )
  buffer3 index bounds ( adr3 len3 )
  
  str index bounds ( adr len )
  strlen index !          \ save length of original string
  len index 1 /           \ calculate the length of each new string
  
  \ iterate through original string and put characters in corresponding buffers
  0 index                \ start at index 0
  begin
    len index >          \ check if end of string reached
    if                   \ if not, keep iterating
      adr buffer1 1+ c!  \ put character in buffer1
      index 1+           \ increment index
      adr buffer2 1+ c!  \ put character in buffer2
      index 1+           \ increment index
      adr buffer3 1+ c!  \ put character in buffer3
      index 1+           \ increment index
    else                 \ if end of string reached, exit loop
      drop               \ drop length value 
      index index !      \ save current index as result index
      break              \ exit loop
    then
  again                  \ repeat until end of string reached
  
  index buffer1 strlen + buffer2 strlen + 1+ buffer3 strlen + 1+ ( adr len )
;                       \ end of split function 

\ Example usage:
"Hello, world!" split
( adr len )
buffer1 type cr
buffer2 type cr
buffer3 type cr
\ This code snippet is a function that calculates the sum of a given list of numbers
: SUM ( list sum -- new-sum) \ Define the function, takes a list and a sum as input, returns the new sum
    0 SWAP ( sum list 0) \ Push 0 on the stack and swap the two inputs
    \ For each number in the list, add it to the sum and store the new sum on the stack
    BEGIN DUP WHILE ( new-sum new-sum) \ Enter a loop, duplicate the new sum for comparison
        SWAP OVER + SWAP ( old-sum new-sum+old-num new-sum) \ Swap the top two elements, add them, then swap back
    REPEAT ( new-sum) \ If the condition is false, leave the loop and the top element is the new sum
    DROP ( new-sum) \ Discard the list, leaving just the new sum on the stack
; \ End of function definition

\ Example usage
2 4 6 8 10 SUM . \ Calculates and prints the sum of the numbers 2, 4, 6, 8, and 10
\ Output: 30
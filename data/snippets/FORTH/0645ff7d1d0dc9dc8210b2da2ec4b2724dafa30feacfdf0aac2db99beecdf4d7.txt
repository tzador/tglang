: SWAP_MEMBER ( adr -- adr )
  SWAP OVER            \ Swap top two elements, duplicate top element
  $00 C@ XOR $FF EOR   \ Perform bit flip operation on top element
  SWAP ROT XOR         \ Swap top two elements, rotate top three elements
  SWAP OVER +          \ Swap top two elements, duplicate top element, add the two top elements
  ROT $FF AND XOR      \ Rotate top three elements, perform bitwise AND operation with $FF, perform XOR with top element
  SWAP DROP            \ Swap top two elements, discard top element
  $02 CMOVE            \ Move two bytes from top element to second element's address
  $01+                 \ Increment top element by 1 (sets top element to next byte address)
  FLUSH                \ Flush any unsaved data in RAM
  R@                   \ Retrieve return address from return stack
  DUP >R               \ Duplicate top element, push onto return stack
  $05 CMOVE            \ Move five bytes from top element to second element's address
  BW_WORD ADD          \ Execute add function on top two elements
  DROP                 \ Discard top element, leaving top two elements unchanged. 
  EXIT                 \ End current subroutine and return to calling routine
  ;
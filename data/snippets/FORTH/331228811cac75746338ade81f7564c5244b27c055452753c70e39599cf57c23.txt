: BIGGER ( n1 n2 -- n-bigger )
    \ Takes two numbers (n1 and n2) and returns the bigger one
    IF
        DUP  \ Duplicate the top number
        SWAP \ Swap the top two numbers
    ELSE
        DROP \ Drop the top number
    THEN
    ;

: QUADRATIC-EQUATION ( a b c -- x1 x2 )
    \ Calculates the solutions to a quadratic equation of the form ax^2 + bx + c = 0
    \ Takes the coefficients a, b, and c as input and returns the solutions x1 and x2
    \ Uses the quadratic formula: x = (-b ± √(b^2 - 4ac)) / 2a
    DUP \ Duplicate the coefficient a
    0= \ Check if a is equal to zero
    IF
        DROP \ Drop a
        DUP \ Duplicate b
        0= \ Check if b is equal to zero
        IF       
            SWAP \ Swap b and c
            IF
                DUP \ Duplicate the coefficient c
                0= \ Check if c is equal to zero
                IF
                    ." Infinite solutions" \ Print error message
                    0 \ Return 0 as both solutions
                ELSE
                    ." No real solutions" \ Print error message
                    0 \ Return 0 as both solutions
                THEN
            ELSE
                ." No real solutions" \ Print error message
                0 \ Return 0 as both solutions
            THEN
        ELSE
            ." One solution:" \ Print message
            NEGATE \ Negate b
            OVER \ Copy b to top of stack
            OVER \ Copy b to top of stack
            * \ Multiply b with itself to get b^2
            4 * \ Multiply by 4 to get 4ac
            SWAP \ Swap b^2 with 4ac
            + \ Add b^2 and 4ac
            SQRT \ Take square root
            2 * \ Multiply by 2
            ROT \ Rotate stack so that a is on top
            SWAP \ Swap a and b
            / \ Divide by a
            \ Return the solution as x1
        THEN
    ELSE
        ." Two solutions:" \ Print message
        NEGATE \ Negate b
        OVER \ Copy b to top of stack
        OVER \ Copy b to top of stack
        * \ Multiply b with itself to get b^2
        4 * \ Multiply by 4
        ROT \ Rotate stack so that a is on top
        * \ Multiply a with 4ac
        DUP \ Duplicate 4ac
        OVER \ Copy 4ac to top of stack
        SQRT \ Take square root
        SWAP \ Swap 4ac with square root
        2 * \ Multiply by 2
        SWAP \ Swap 4ac with square root times 2
        SWAP \ Swap 4ac with 2 times square root
        / \ Divide by a
        SWAP \ Swap 2 times square root with solution
        + \ Add solution to b
        ROT \ Rotate stack so that solution is on top
        SWAP \ Swap solution with b
        / \ Divide by 2
        \ Return the solutions as x1 and x2
    THEN
    ;
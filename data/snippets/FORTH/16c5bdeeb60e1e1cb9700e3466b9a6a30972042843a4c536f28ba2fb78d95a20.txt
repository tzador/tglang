\ This code snippet creates a Forth word that sorts an array of numbers using the bubble sort algorithm.
: bubble-sort 
  2dup >r 
  begin 
    dup WHILE
    1+ dup 0 < if 
      swap over > if 
        rot 2 pick swap 2 pick 2 pick > swap 2 pick drop 
      then
    then
    1 - dup 0 >= 
  REPEAT 
  drop drop r> drop ; 
\ Explanation: 
\ This is the beginning of the word definition. The 2dup word is used to make two copies of the array.
  \ r is used to save the top of the stack. 
\ begin marks the beginning of the loop. Dup duplicates the top number on the stack and checks if it is non-zero, 
  \ indicating that the loop should continue. 
\ 1+ adds one to the current index. Dup duplicates this index and checks if it is greater than zero, 
  \ indicating that there are more elements to sort. 
\ swap and over are used to manipulate the stack, with > comparing the two numbers. 
  \ If the first number is greater than the second, then the two numbers are swapped. 
\ rot and 2 pick are used to manipulate the stack again, with swap and 2 pick being used to swap the two numbers 
  \ and then drop being used to remove the first number from the stack. 
\ then is used to end the if statement. 
\ the 1- dup 0 >= statement decreases the index by one and checks if it is still greater than or equal to zero, 
  \ indicating that the loop should continue. 
\ repeat marks the end of the loop. Drop and r> are used to clean up the stack and drop the saved index. 
\ Finally, the word is ended with a drop to remove the original array from the stack.
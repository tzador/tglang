: transpose
  ( transpose matrix on top of stack )
  over dup over rot -rot
  bounds ?do swap i @ j @
  over @ over @ > if
  swap >r @ swap r>
  else
  nip nip >r drop 2drop 1+ j ! 1+ r>
  then loop
  drop drop ;

transpose \ this word takes the top matrix on the stack and transposes it, swapping the columns and rows.

over dup over rot -rot \ duplicating necessary elements on the stack to keep them for later use
  bounds ?do swap i @ j @ \ looping through rows and columns
  over @ over @ > if \ checking if current element is larger than its transposed version
  swap >r @ swap r> \ swapping the values and storing the transposed value in temporary memory
  else \ if current element is smaller or equal to its transposed version
  nip nip >r drop 2drop \ removing unnecessary elements from stack and storing the current element in temporary memory
  1+ j ! 1+ r> \ incrementing row and column indices
  then loop \ ending loop
  drop drop ; \ removing temporary variables from stack and ending word.
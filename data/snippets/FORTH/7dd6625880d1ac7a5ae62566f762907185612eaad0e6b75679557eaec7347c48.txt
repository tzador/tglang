: rev-dup	( n1 n2 -- n1 n2 n1 n2 )
	2dup ;
: rev-rot	( n1 n2 n3 -- n3 n1 n2 )
	rot rot ;
create s1	10 allot		( s1 = reserve 10 addresses for string 1)
create s2	10 allot		( s2 = reserve 10 addresses for string 2)
: copy-str	( source dest n -- )
	begin
		dup		( duplicate the value n)
		while	( while n > 0 )
		over c@		( copy character from source to stack)
		over c!		( copy character from stack to destination)
		cell+ cell+	( move to next address in source and destination)
		dup		( decrement n )
		repeat	( loop back to begin until n = 0 )
	drop	( discard unused value from stack )
;
: string-dup	( source n1 -- dest n2 )
	dup		( duplicate the value n1 )
	create-string	( create a new string with same size as source )
	swap			( swap to have source as top of stack )
	over		( copy source onto stack )
	0		( start with 0 as counter for loop )
	{ copy-str }		( execute the copy-str code snippet)
;
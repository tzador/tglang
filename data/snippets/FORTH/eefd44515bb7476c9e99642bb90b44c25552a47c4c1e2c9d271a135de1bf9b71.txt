: RECURSE_HELPER \ Define a word to be used by RECURSE for recursive execution
  ( n -- ) \ Takes in a value n and executes a recursive function
  DUP IF \ Duplicate the value and check if it is non-zero
    ( n -- n n ) \ If non-zero, execute the following
    DUP 1- \ Duplicate the value again and subtract 1
    RECURSE \ Execute RECURSE_HELPER again with the new value
    DUP 2* \ Duplicate the value and multiply by 2
    2 PICK \ Duplicate the 2nd value on the stack (original value)
    1 PICK + \ Add the duplicated value to the original value
    2 PICK ! \ Store the sum back into the 2nd value on the stack
  THEN \ End of IF statement
; \ End of RECURSE_HELPER definition

: RECURSE \ Define a word for recursive execution
  ( n -- n! ) \ Takes in a value n and executes a recursive factorial function
  DUP 0 \ Duplicate the value and set the counter to 0
  2 PICK ! \ Store the counter into the 2nd value on the stack
  RECURSE_HELPER \ Execute the helper word
; \ End of RECURSE definition

5 RECURSE \ Execute RECURSE with value 5 for factorial computation
. \ Print out the result
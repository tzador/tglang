: PRIME? ( n -- t|f )       \ checks if number is prime
   #DIGIT DROP              \ drop initial input from stack
   2 SWAP (LOOP)            \ start loop at 2, swap with input
   (DUP)                    \ duplicate input
   DUP #DIGIT /MOD          \ divide top of stack by current loop number
   0 = IF                   \ check if there is no remainder
     #DIGIT | DROP FALSE    \ drop input and output 'FALSE'
     EXIT                    \ exit loop
   ELSE                     \ if there is a remainder
     DUP 2 +                \ add 2 to current loop number
     <SWAP>                 \ return values to original position
     DUP 2 >                \ check if loop number is greater than 2
   IF                       \ if true, recursively call PRIME?
     #DIGIT | DROP FALSE    \ drop input and output 'FALSE'
     EXIT                    \ exit loop
   ELSE                     \ if false
     TRUE                   \ output 'TRUE'
   THEN                     \ end if statement
  ELSE                     \ if number is 2 or 3, output 'TRUE'
    TRUE
  THEN                     \ end if statement
;                          \ end definition
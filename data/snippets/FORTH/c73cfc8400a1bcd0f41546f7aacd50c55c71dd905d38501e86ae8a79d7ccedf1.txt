: word ( n -- ) ." Enter a word:" CR READLINE ( receive input from user in console ) BL PARSE-NAME STRING>NUMBER ." The numeric value of your word is: " . CR DROP ; ( convert input word to numeric value and drop it from the stack. Includes error handling for non-numeric input. )

: calculate ( -- n m ) ." Enter two numbers:" CR READLINE BL PARSE-STRING STRING>NUMBER
DUP 0> IF SWAP 2SWAP 1+ THEN (check for positive numbers and swap the stack accordingly for easier computation)
2R> 1- (move the number to the return stack and decrement it by 1)
SWAP 2R> (put the other number on top of return stack)
DO (start the loop)
I * (multiply top number on stack by loop index)
2R@ I / MOD (divide top number on return stack by loop index and take remainder)
(NEGATE 2*=0=) (check if remainder is 0 and negate the result)
- 0= (check if result is equal to 0)
IF DUP ." Numbers are not coprime." CR ELSE DROP (if not coprime, display message and drop result)
ROT . CR ROT * SWAP (if coprime, display original numbers and calculate their product)
2R> INVERT (calculate modular multiplicative inverse of loop index)
2R@ 1 - (decrement return stack number by 1)
1+ (increment loop index by 1)
LOOP ; (end of loop)
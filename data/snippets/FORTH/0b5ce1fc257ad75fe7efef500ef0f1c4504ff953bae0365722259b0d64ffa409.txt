: ROTATE ( n1 n2 n3 -- n2 n3 n1 )
  ROT 2 PICK DROP ; \ rotates top three stack items

: SWAP ( n1 n2 -- n2 n1 )
  1 ROLL DROP ; \ swaps top two stack items

: DUP ( n -- n n )
  0 PICK 2 PICK ; \ duplicates top stack item

: OVER ( n1 n2 -- n1 n2 n1 )
  DUP 3 PICK ; \ duplicates top stack item and places copy on top of the next item

: 2DUP ( n1 n2 -- n1 n2 n1 n2 )
  OVER OVER ; \ duplicates the top two stack items

\: NEGATE ( n -- -n )
  0 SWAP - ; \ negates the top stack item

: ABS ( n -- n )
  DUP 0 < IF NEGATE THEN ; \ calculates absolute value of top stack item

: MIN ( n1 n2 -- n )
  2DUP < IF SWAP THEN DROP ; \ compares top two stack items and places the smaller value on top

: MAX ( n1 n2 -- n )
  2DUP > IF SWAP THEN DROP ; \ compares top two stack items and places the larger value on top
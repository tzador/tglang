: COMPLEXCODE ( n -- result ) \ Define a new word
    0 \ Initialize a counter
    BEGIN \ Start of loop
        OVER SWAP * \ Multiply top two stack values
        ROT 2 * \ Double second stack value
        1 + \ Increment counter
    DUP COUNT \ Duplicate top stack value and obtain stack length
    1 = ( Not equal to 1? ) \ If not equal to 1, go back to BEGIN
    WHILE \ otherwise, end the loop
    NIP \ Remove extra counter value from stack
    COUNT \ Get length of stack
    1+ \ Add 1 to account for extra counter value
    DUP \ Duplicate length value
    1 < ( Less than 1? ) \ If less than 1, discard value and exit
    IF \ Otherwise,
        1 - \ Decrement length value
        0 \ Initialize result variable
        BEGIN \ Start of loop
            SWAP 2 / MOD \ Get modulus of top two stack values
            ROT 1- \ Decrement length value
            RESULT + \ Add modulus value to result
        0 = ( Equal to 0? ) \ If equal to 0, go back to BEGIN
        UNTIL \ Otherwise, end the loop
    ELSE \ If not less than 1,
        0 ( Otherwise, set result to 0 )
    THEN \ End IF statement
NIP \ Remove length value from stack
;
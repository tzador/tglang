: DOUBLE-DOWN ( n -- n*2 ) \ This word doubles the input number and leaves the result on the stack
    DUP + ; \ Duplicates the input number and adds it to itself
: FIND-MAX-INDEX ( addr len -- n ) \ This word finds the index of the maximum value in the given array
    0 SWAP \ Initialize loop counter and swap the array address with its length
    ?DO \ Start a loop that runs for the length of the array
        I \ Get current loop index
        DUP 2DUP \ Copy current index and value at that index
        >R \ Push value on return stack for comparison
        DUP 1+ \ Increment index by 1
        @ >R \ Get next value and push on return stack for comparison
        R@ > IF \ If current value is greater than previous value
            R> DROP \ Drop previous value from return stack
        THEN \ End if statement
    LOOP \ End loop
    R>DROP ; \ Drop final value from return stack
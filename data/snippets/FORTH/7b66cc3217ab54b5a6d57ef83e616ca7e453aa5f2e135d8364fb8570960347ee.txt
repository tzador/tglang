: COLLATZ         ( n -- n+ s seq )
  <stdlib.fs>     \ Load library for dynamic memory allocation
  dup 1 =         \ Check if input is already 1
  if              \ If yes, skip calculation
    .tag noSeq "" \ Print no sequence found
  else
    1             \ Create place on memory stack for sequence
    >r dup         \ Push current number and store copy in return stack
    begin          \ Begin loop
      dup [ 0 ] [ 1 ] pick >=     \ Check if number is greater than X in sequence
      if                           \ If yes, calculate Collatz sequence
        dup 2 / 2 * =              \ Checks if number is even
        if                         \ If yes, perform calculation for even number
          begin dup 2 /            \ Divide number by 2
          2 * =                    \ Check if result equals original number
        until                      \ End until result equals original number
        1 - r> r@ *                \ Calculate next number using previous number
        >r r> >r                   \ Swap the back-end parameters
        2 r> +                    \ Calculate next number in sequence
        swap 1 + @                 \ Push current sequence number to top of stack
      else                         \ If no, perform calculation for odd number
        r> r@ *                    \ Calculate next number using previous number
        >r r> >r swap 1 +          \ Swap parameters and calculate next number
        swap 1 + @                 \ Push current sequence number to top of stack
      then                         \ End if statement
    dup 2 pick > ref              \ Check if number is greater than any found sequence
    until                         \ End until loop
    drop dup dup makearray          \ Drop input number, duplicate sequence, and create array
    .itemText specsie ""         \ Print array of Collatz sequence
  then.                          \ End if statement and print endline
;
OLDEST INORPB
( This code snippet uses the FORTH language to find the oldest number in a given list. )

: FIND-OLDEST ( n1 n2 -- n3 ) \ Takes two numbers and returns the oldest number
    DUP     \ Duplicate the top number on the stack
    SWAP    \ Swap the top two numbers on the stack
    OVER    \ Duplicate the second number on the stack
    MIN     \ Return the smaller number between the top two numbers
    DROP    \ Drop the duplicated number
    SWAP    \ Swap the top two numbers on the stack
    OVER    \ Duplicate the second number on the stack
    MAX     \ Return the larger number between the top two numbers
    DROP    \ Drop the duplicated number
;

: OLDEST ( n1 n2 n3 -- n4 ) \ Takes three numbers and returns the oldest number
    OVER OVER \ Duplicate the top two numbers on the stack and keep a copy
    FIND-OLDEST \ Find the oldest number between the first two numbers
    SWAP    \ Swap the top two numbers on the stack
    FIND-OLDEST \ Find the oldest number between the second and third numbers
    SWAP    \ Swap the top two numbers on the stack
    FIND-OLDEST \ Find the oldest number between the first and third numbers
;

: INORPB ( a n -- n ) \ Takes an array and its size and returns the oldest number
    0   \ Initialize a counter for the array index
    0   \ Initialize a placeholder for the oldest number
    DO  \ Start a loop from 0 to the array size
        I   \ Get the array index
        DUP CELL +   \ Get the address of the current cell in the array
        @   \ Get the value at that address
        DUP     \ Duplicate the current number
        NIP     \ Remove the array index from the top of the stack
        INORPB  \ Recursive call to find the oldest number
        OLDEST  \ Find the oldest number between the current number and the previous oldest number
        SWAP    \ Swap the oldest number to the top of the stack
        NIP     \ Remove the duplicate number from the top of the stack
    LOOP    \ End of loop
;

10 2 5 8 3 INORPB  ( Returns 2 as the oldest number )
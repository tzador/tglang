: power   \ defining a new word called power
   dup 0= \ checks if the top element on the stack is equal to 0
   IF     \ starts an if statement
   drop  \ removes the top element from the stack
   1      \ pushes 1 onto the stack
   EXIT   \ exits the current word
   THEN   \ ends the if statement
   begin  \ starts a loop
   dup 0= \ checks if the top element on the stack is equal to 0
   IF     \ starts an if statement
   drop  \ removes the top element from the stack
   EXIT   \ exits the current word
   THEN   \ ends the if statement
   dup    \ duplicates the top element on the stack
   1 -    \ subtracts 1 from the top element on the stack
   SWAP   \ swaps the top two elements on the stack
   *      \ multiplies the top two elements on the stack
   again  \ restarts the loop
   ;      
   
10 2 power . \ calls the power word with 10 and 2 as inputs and prints the result
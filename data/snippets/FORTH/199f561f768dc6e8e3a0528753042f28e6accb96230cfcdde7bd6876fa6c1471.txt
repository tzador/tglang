: ARITH-DIVIDEN ( n1 n2 -- quot remainder ) \ Takes two numbers and calculates quotient and remainder
    2DUP \ Duplicates both numbers on top of the stack
    R@ R@ \ Returns both numbers to the top of the stack from the return stack
    ( n2 n1 n2 n1 ) 2DUP \ Duplicates both numbers again for comparison
    0= \ Checks if second number is equal to 0
    IF \ If the second number is 0
        DROP DROP 0 SWAP \ Drops all the numbers from the stack and swaps 0 with the quotient position
        BEGIN \ Begin loop
            CELL+ @ \ Takes the next cell value and puts it on top of the stack
            DUP \ Duplicates top number for quotient calculation
            OVER U< \ Checks if the top number is less than second number (quotient)
            IF \ If it is less than
                (Quotient position) OVER@ SWAP + ROLL CELL- @ PARSE-WORD \ Calculates quotient position
                DUP \ Duplicates top number for remainder calculation
                2SWAP \ Swaps top two numbers for remainder calculation
                ROT \ Rotates top three numbers to put remainder position on top
                (Remainder position) OVER@ CELL+ (Quotient cell value) OVER@ - SWAP ! \ Calculates remainder position and updates quotient cell value
                SWAP CELL+ (Remainder cell value) DUP >R SWAP ROT - \ Calculates remainder value and puts it on return stack
                R> SWAP CELL! \ Stores remainder value in remainder position
                SWAP DROP EXIT \ Drops unnecessary number and exits the loop
            ENDIF
            2CELLS NEXT-CODWORD-WORD \ Moves to next word in the dictionary (loop)
            2DUP ( n2 n1 n2 n1 ) \ Duplicates both numbers for comparison
            0= \ Checks if second number is equal to 0
        UNTIL \ Until the second number is not equal to 0
        DROP DROP \ Drops both numbers from the return stack
    ELSE \ If the second number is not 0
        R> R> \ Returns both numbers to the return stack
        /MOD \ Calculates quotient and remainder
        ROT \ Rotates quotient and remainder to put quotient on top
        SWAP CELL! \ Stores quotient in quotient cell position
    THEN \ End if statement
    SWAP CELL+ (Remainder cell value) DUP >R SWAP ROT - \ Calculates remainder value and puts it on return stack
    R> SWA
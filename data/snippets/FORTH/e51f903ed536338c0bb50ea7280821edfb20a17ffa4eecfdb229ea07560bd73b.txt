: SPLIT ( a b n -- n1 n2 ) \ Takes two numbers, splits them into two parts each, and returns the two parts
  SWAP BASE ! ( n b ) \ Save the given base in a variable
  0 SWAP ! ( a n 0 ) \ Initialize a variable for the first number
  0 SWAP ! ( a n b 0 ) \ Initialize a variable for the second number
  BEGIN ( a n b n1 n2 )
    DUP 0= IF ( a n b n1 -1 ) EXIT THEN ( a n b n1 ) \ Checks if the second number is zero, if yes then exit the loop (indicated by -1)
    ROT B* ( n b n*b ) \ Multiply the second number by the base
    ROT SWAP MOD ( b n n2 ) \ Extract the last digit from the second number
    OVER B/ SWAP ( n1 n n2 ) \ Add the extracted digit to the first number and shift the second number to the right by dividing it by the base
    ROT OVER MOD SWAP ( n1 n n2 ) \ Extract the last digit from the first number and add it to the third number
    OVER B/ SWAP ( n1 n2 n1 ) \ Shift the first number to the right by dividing it by the base
    ROT B* ( n2 n2*b ) \ Multiply the third number by the base
    SWAP >R OVER BEGIN >R >R SWAP R> R> = = UNTIL ( n1 n2 ) \ Checks if the first two numbers are equal, if yes then exit the loop
    2DROP ( ) \ Removes the two temporary variables from the stack
  REPEAT ( n1 n2 ) \ Loop until the first two numbers are equal
  DROP ( n1 ) \ Only keep the first number on the stack
;
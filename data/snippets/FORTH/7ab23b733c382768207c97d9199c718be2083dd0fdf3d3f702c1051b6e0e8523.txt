\ This code performs a quicksort algorithm
: partition ( seq left right -- index )
  >r ( save right )
  >r ( save left )
  i ( pivot element )
  left over ( check for sorting end )
    if else ( swap elements )
      l@ swap l@ swap
      1+ loop ( move left pointer )
      l@ l@ <>
  then ( no more swaps needed )
   if else ( partition left side )
    r@ > ( get pivot back )
    dup r@ = ( check left end )
    if r> drop r> drop ( base case )
     0 ( returns partition index )
    else
     -rot partition ( recurse )
    then
   then ( partition right side )
   r> rdrop ( restore variables )
   dup r@ > ( check right end )
    if r> drop r> drop ( base case )
     0 ( returns partition index )
    else 
     partition ( recurse )
    then ;
: sort ( seq -- )
  dup 0 swap dup length swap - 0 partition
  sort recurse ( sort the left side )
  swap <length -> ( sort the right side )
  sort recurse ;
: RECURSIVE-STEP ( n k -- n! ) \ recursive definition of factorial
   DUP 1 = IF DROP 1 EXIT THEN \ if n equals 1, drop n and exit
   DUP 1 - RECURSIVE-STEP * ; \ multiply n with result of n - 1 and call function again with n - 1 as new n value

: RECURSIVE-FACTORIAL ( n -- n! ) \ defines a word that calculates factorial using recursion
   1 SWAP RECURSIVE-STEP ; \ initialize accumulator to 1, swap n and call recursive step

: POWER-STAGE ( n m k -- n ^ m ^ k ) \ recursive definition of exponentiation
   DUP 1 = IF DROP 1 EXIT THEN \ if m equals 1, drop m and exit
   DUP 1 - SWAP POWER-STAGE * ; \ call function again with n and m - 1 swapped and multiply with n

: POWER ( n m -- n ^ m ) \ defines a word that calculates exponentiation using recursion
   1 SWAP RECURSIVE-STEP ; \ initialize accumulator to 1, swap n and call recursive step
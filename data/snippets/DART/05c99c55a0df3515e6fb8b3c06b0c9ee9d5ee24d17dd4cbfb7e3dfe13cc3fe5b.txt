/// This is a function that takes in two integer lists and returns the intersection of the two.
List<int> getIntersection(List<int> list1, List<int> list2) {
  // Initialize an empty intersection list.
  List<int> intersection = [];

  // Check if both lists are not empty.
  if (list1.isNotEmpty && list2.isNotEmpty) {
    // Loop through the first list.
    for (int i = 0; i < list1.length; i++) {
      // Check if the element in the first list is also present in the second list.
      if (list2.contains(list1[i])) {
        // Add the element to the intersection list if it is present in both lists.
        intersection.add(list1[i]);
      }
    }
  }

  // Return the intersection list.
  return intersection;
}

// Example usage
void main() {
  // Initialize two integer lists.
  List<int> list1 = [5, 8, 3, 2, 9];
  List<int> list2 = [2, 7, 5, 10, 4];

  // Get the intersection of the two lists.
  List<int> intersection = getIntersection(list1, list2);

  // Print the intersection list.
  print(intersection); // Output: [5, 2]
}
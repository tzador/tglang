// This code snippet demonstrates the use of a class with a private constructor and a static method

/// A class representing a person
class Person {
  String _name; // Private variable for name

  static Person _instance; // Private static variable for singleton instance

  /// A private constructor that can only be called within class
  Person._();

  /// A static method for returning the singleton instance
  static Person getInstance() {
    if (_instance == null) { // Check if instance already exists
      _instance = Person._(); // If not, initialize the instance
    }
    return _instance; // Return the singleton instance
  }

  /// A method for setting the name of the person
  void setName(String name) {
    _name = name;
  }

  /// A method for getting the name of the person
  String getName() {
    return _name;
  }
}

// Example usage
// Instantiate a person object (will throw an error)
// Person john = Person(); // Cannot access private constructor

// Get the singleton instance of Person
Person jane = Person.getInstance();

// Set the name of the person
jane.setName("Jane Smith");

// Get the name of the person
print(jane.getName()); // Output: Jane Smith
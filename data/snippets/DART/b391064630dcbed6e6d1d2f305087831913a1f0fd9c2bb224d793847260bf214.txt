/*
This is a class for creating and manipulating complex numbers in Dart.
It includes functions for addition, subtraction, multiplication, and division.
*/
class Complex {
  double _real;
  double _imaginary;

  //constructor
  Complex(double real, double imaginary) {
    this._real = real;
    this._imaginary = imaginary;
  }

  //function to add two complex numbers
  Complex operator + (Complex other) {
    return Complex(this._real + other._real, this._imaginary + other._imaginary);
  }

  //function to subtract two complex numbers
  Complex operator - (Complex other) {
    return Complex(this._real - other._real, this._imaginary - other.imaginary);
  }

  //function to multiply two complex numbers
  Complex operator * (Complex other) {
    return Complex((this._real * other._real) - (this._imaginary * other._imaginary), (this._real * other._imaginary) + (this._imaginary * other._real));
  }

  //function to divide two complex numbers
  Complex operator / (Complex other) {
    double temp = (other._real * other._real) + (other._imaginary * other._imaginary);
    double temp_real = ((this._real * other._real) + (this._imaginary * other._imaginary)) / temp;
    double temp_imaginary = ((this._imaginary * other._real) - (this._real * other._imaginary)) / temp;
    return Complex(temp_real, temp_imaginary);
  }

  //function to find the magnitude of a complex number
  double magnitude() {
    return sqrt((this._real * this._real) + (this._imaginary * this._imaginary));
  }

  //function to calculate the conjugate of a complex number
  Complex conjugate() {
    return Complex(this._real, -this._imaginary);
  }

  //function to convert complex number into polar form
  List<double> toPolar() {
    double r = sqrt((this._real * this._real) + (this._imaginary * this._imaginary));
    double theta = atan(this._imaginary / this._real);
    List<double> polar = [r, theta];
    return polar;
  }

  //function to convert complex number into rectangular form
  Complex fromPolar(double r, double theta) {
    double real = r * cos(theta);
    double imaginary = r * sin(theta);
    return Complex(real, imaginary);
  }

  //function to print the complex number in the form of a + bi
  void printComplex() {
    print('${this._real} + ${this._imaginary}i');
  }
}

/*
This is an example of how to use the Complex class.
We create two complex numbers and perform various operations on them, printing the results.
*/
void main() {
  //creating complex numbers
  Complex c1 = Complex(3, 5);
  Complex c2 = Complex(2, -4);

  //performing operations
  Complex c3 = c1 + c2;
  Complex c4 = c1 - c2;
  Complex c5 = c1 * c2;
  Complex c6 = c1 / c2;

  //printing the results
  c3.printComplex();
  c4.printComplex();
  c5.printComplex();
  c6.printComplex();

  //finding the magnitude and conjugate of a complex number
  print(c1.magnitude());
  c1.conjugate().printComplex();

  //converting a complex number to polar form and back to rectangular form
  List<double> polar = c1.toPolar();
  print(polar); //prints [5.831049, 1.0303768265243125]
  Complex backToRect = c1.fromPolar(polar[0], polar[1]);
  backToRect.printComplex(); //prints 3 + 5i
}
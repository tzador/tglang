/// This function takes in a list of integers and performs a recursive
/// quicksort algorithm to sort the list in descending order.
///
/// It uses the last element as the pivot and divides the list into two
/// sublists: one containing all elements smaller than the pivot and
/// the other containing all elements larger than the pivot.
///
List<int> quicksort(List<int> numbers) {
  if (numbers.length <= 1) return numbers;

  int pivot = numbers.removeLast();
  List<int> smallerList = [];
  List<int> largerList = [];

  for (int num in numbers) {
    if (num > pivot) {
      largerList.add(num);
    } else {
      smallerList.add(num);
    }
  }

  return [...quicksort(largerList), pivot, ...quicksort(smallerList)];
}

/// Example usage:
void main() {
  List<int> unsortedList = [5, 2, 9, 1, 3];
  List<int> sortedList = quicksort(unsortedList);
  print(sortedList); // outputs: [9, 5, 3, 2, 1]
}
/// Function to get the kth Fibonacci number
/// and calculate its factorial
int fibonacci(int k) {
  if (k <= 0) { // base case
    return 0;
  } else if (k == 1){ // base case
    return 1;
  } else {
    // recursive case
    // get previous two Fibonacci numbers
    int prev1 = fibonacci(k - 1);
    int prev2 = fibonacci(k - 2);

    // calculate the sum of previous two numbers
    int result = prev1 + prev2;

    // calculate the factorial of result
    int factorial = calcFactorial(result);

    // return the result
    return result * factorial;
  }
}

/// Function to calculate factorial of a number
int calcFactorial(int n) {
  int factorial = 1;
  for (int i = 1; i <= n; i++) {
    factorial *= i;
  }

  return factorial;
}

/// Main function
void main() {
  int k = 8;

  // call the fibonacci function to get the kth Fibonacci number
  int fibonacciNumber = fibonacci(k);

  // print the result
  print("The ${k}th Fibonacci number is ${fibonacciNumber}");
}
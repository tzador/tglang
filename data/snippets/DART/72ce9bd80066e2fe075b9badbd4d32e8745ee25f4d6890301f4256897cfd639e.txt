// This is a complex class that implements a custom button widget
class CustomButton extends StatefulWidget {
  // fields for size and color of button
  final double size;
  final Color color;

  // constructor to initialize size and color variables
  const CustomButton({Key key, this.size, this.color}): super(key: key);

  // instantiate state of custom button widget
  @override
  _CustomButtonState createState() => _CustomButtonState();
}

// private class that defines state of custom button widget
class _CustomButtonState extends State<CustomButton> {
  // field for button label
  String _label;

  @override
  void initState() {
    super.initState();
    // set default label for button
    _label = "Click Me";
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      // set size of button based on user provided size or default value
      width: widget.size ?? 50,
      height: widget.size ?? 50,
      // set button color based on user provided color or default value
      color: widget.color ?? Colors.blue,
      // create button with label
      child: FlatButton(
        // update label when button is pressed
        onPressed: () => setState(() => _label = "Button Pressed"),
        // display label text on button
        child: Text(_label),
      ),
    );
  }
}

// example usage of custom button widget
CustomButton(
  size: 100,
  color: Colors.green,
);
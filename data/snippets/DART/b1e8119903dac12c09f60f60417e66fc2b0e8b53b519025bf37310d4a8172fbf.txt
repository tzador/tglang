/// A class representing a player in a game
class Player {
  String name;
  int score;
  bool isActive;

  /// Constructor for Player class
  Player(this.name, this.score, this.isActive);

  /// Method to update player's score
  void updateScore(int newScore) {
    this.score = newScore;
  }

  /// Method to toggle player's activity status
  void toggleActivityStatus() {
    this.isActive = !this.isActive;
  }
}

/// A class representing a game
class Game {
  /// List of players participating in the game
  List<Player> players;

  /// Constructor for Game class
  Game(this.players);

  /// Method to start the game
  void startGame() {
    // Code to set up game
    print("Game is starting...");
    // Code to start game loop
    while (true) {
      // Get input from active player
      Player activePlayer = getActivePlayer();
      // Code to process player's input
      print("It is ${activePlayer.name}'s turn!");
      // Code to update player's score
      activePlayer.updateScore(10);
      print("Updated ${activePlayer.name}'s  score: ${activePlayer.score}");
      // Code to switch active player
      switchActivePlayer();
    }
  }

  /// Method to get the active player
  Player getActivePlayer() {
    for (Player player in players) {
      if (player.isActive) {
        return player;
      }
    }
    return null;
  }

  /// Method to switch the active player
  void switchActivePlayer() {
    for (Player player in players) {
      if (player.isActive) {
        player.toggleActivityStatus();
      } else {
        player.toggleActivityStatus();
        break;
      }
    }
  }
}

/// Create players
Player player1 = Player("John", 0, true);
Player player2 = Player("Mike", 0, false);
Player player3 = Player("Sarah", 0, false);

/// Initialize game with players
Game game = Game([player1, player2, player3]);

/// Start the game
game.startGame();
// A class to represent a person
class Person {
  String name;
  int age;
  
  // Constructor with optional parameters
  Person({this.name, this.age});
  
  // Method to greet a person
  void greet() {
    print("Hello, my name is ${name} and I am ${age} years old");
  }
  
  // Method to calculate the age in dog years
  int dogYears() {
    return age * 7;
  }
  
  // Method to check if the person is an adult
  bool isAdult() {
    if (age >= 18) {
      return true;
    } else {
      return false;
    }
  }
}

// A list of Person objects
List<Person> people = [
  Person(name: "John", age: 25),
  Person(name: "Sarah", age: 42),
  Person(name: "Emily", age: 17),
  Person(name: "Michael", age: 35),
  Person(name: "Alice", age: 10)
];

// Loop through the list and call methods on each person
for (var person in people) {
  person.greet();
  if (person.isAdult()) {
    print("${person.name} is an adult");
  } else {
    print("${person.name} is a minor");
  }
  print("${person.name} is ${person.dogYears()} dog years old");
}

/* 
Example output:
Hello, my name is John and I am 25 years old
John is an adult
John is 175 dog years old
Hello, my name is Sarah and I am 42 years old
Sarah is an adult
Sarah is 294 dog years old
Hello, my name is Emily and I am 17 years old
Emily is a minor
Emily is 119 dog years old
Hello, my name is Michael and I am 35 years old
Michael is an adult
Michael is 245 dog years old
Hello, my name is Alice and I am 10 years old
Alice is a minor
Alice is 70 dog years old
*/
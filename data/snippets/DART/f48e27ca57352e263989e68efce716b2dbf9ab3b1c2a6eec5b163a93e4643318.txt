void mergeSort(List<int> arr, int low, int high) {
  if (low < high) {
    int middle = (low + high) ~/ 2;
    mergeSort(arr, low, middle);
    mergeSort(arr, middle + 1, high);
    merge(arr, low, middle, high);
  }
}
void merge(List<int> arr, int low, int middle, int high) {
  int leftSize = middle - low + 1;
  int rightSize = high - middle;
  List<int> leftArr = new List(leftSize);
  for (int i = 0; i < leftSize; ++i) {
    leftArr[i] = arr[low + i];
  }
  List<int> rightArr = new List(rightSize);
  for (int j = 0; j < rightSize; ++j) {
    rightArr[j] = arr[middle + 1 + j];
  }
  int i = 0, j = 0, k = low;
  while (i < leftSize && j < rightSize) {
    if (leftArr[i] <= rightArr[j]) {
      arr[k] = leftArr[i];
      i++;
    } else {
      arr[k] = rightArr[j];
      j++;
    }
    k++;
  }
  while (i < leftSize) {
    arr[k] = leftArr[i];
    i++;
    k++;
  }
  while (j < rightSize) {
    arr[k] = rightArr[j];
    j++;
    k++;
  }
}
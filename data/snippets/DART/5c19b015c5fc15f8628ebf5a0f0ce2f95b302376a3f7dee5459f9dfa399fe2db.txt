/// This class represents a complex number with real and imaginary parts.
class ComplexNumber {
  double real; // The real part of the complex number.
  double imaginary; // The imaginary part of the complex number.

  /// Constructs a complex number with specified real and imaginary parts.
  ComplexNumber(this.real, this.imaginary);

  /// Returns the absolute value of this complex number.
  double abs() {
    return sqrt(real * real + imaginary * imaginary);
  }

  /// Returns the sum of this complex number and the given complex number.
  ComplexNumber operator +(ComplexNumber other) {
    return ComplexNumber(
      real + other.real,
      imaginary + other.imaginary,
    );
  }

  /// Returns the difference of this complex number and the given complex number.
  ComplexNumber operator -(ComplexNumber other) {
    return ComplexNumber(
      real - other.real,
      imaginary - other.imaginary,
    );
  }

  /// Returns the product of this complex number and the given complex number.
  ComplexNumber operator *(ComplexNumber other) {
    return ComplexNumber(
      real * other.real - imaginary * other.imaginary,
      real * other.imaginary + imaginary * other.real,
    );
  }

  /// Returns the quotient of this complex number and the given complex number.
  ComplexNumber operator /(ComplexNumber other) {
    double divisor = other.real * other.real + other.imaginary * other.imaginary;
    return ComplexNumber(
      (real * other.real + imaginary * other.imaginary) / divisor,
      (imaginary * other.real - real * other.imaginary) / divisor,
    );
  }

  /// Returns a string representation of this complex number.
  @override
  String toString() {
    if (imaginary > 0) {
      return '$real + ${imaginary}i';
    } else {
      return '$real - ${imaginary * -1}i';
    }
  }
}
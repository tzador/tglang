// A class to represent a person
class Person {
  // Properties
  String name;
  int age;
  String occupation;

  // Constructor
  Person(String name, int age, String occupation) {
    this.name = name;
    this.age = age;
    this.occupation = occupation;
  }

  // Methods
  void introduce() {
    print('Hi, my name is ${this.name} and I am ${this.age} years old.');
  }

  void changeOccupation(String newOccupation) {
    this.occupation = newOccupation;
  }
}

// A class to represent an employee, inheriting from Person class
class Employee extends Person {
  // Properties specific to employees
  double salary;
  String company;

  // Constructor
  Employee(String name, int age, String occupation, double salary, String company)
  // Super constructor to assign values to common properties
  : super(name, age, occupation) {
    this.salary = salary;
    this.company = company;
  }

  // Method to calculate yearly bonus
  double calculateBonus(double percent) {
    return this.salary * (percent/100);
  }

  // Overriding introduce method from Person class
  @override
  void introduce() {
    print('Hi, my name is ${this.name}, I work at ${this.company} as a ${this.occupation} and my yearly salary is ${this.salary}.');
  }

  // Method to update employee's information
  void updateInfo(String newName, String newOccupation, double newSalary, String newCompany) {
    this.name = newName;
    this.occupation = newOccupation;
    this.salary = newSalary;
    this.company = newCompany;
  }
}

// Creating an instance of Employee class
var john = Employee('John', 32, 'Software Engineer', 100000, 'ABC Company');

// Calling methods on the instance
john.introduce(); // Output: Hi, my name is John, I work at ABC Company as a Software Engineer and my yearly salary is 100000.
john.changeOccupation('Senior Software Engineer');
john.introduce(); // Output: Hi, my name is John, I work at ABC Company as a Senior Software Engineer and my yearly salary is 100000.
print('John\'s yearly bonus is \$${john.calculateBonus(10)}.'); // Output: John's yearly bonus is $10000.
john.updateInfo('Johnny', 'Lead Software Engineer', 150000, 'XYZ Company');
john.introduce(); // Output: Hi, my name is Johnny, I work at XYZ Company as a Lead Software Engineer and my yearly salary is 150000.
/// This function calculates the nth Fibonacci number.
/// It uses a recursive approach.
int fibonacci(int n) {
  if (n <= 1) return n;
  return fibonacci(n - 1) + fibonacci(n - 2);
}

// This function prints all prime numbers up to [n].
void primeNumbers(int n) {
  List<bool> isPrime = new List<bool>.filled(n + 1, true);
  isPrime[0] = false;
  isPrime[1] = false;
  for (int i = 2; i * i <= n; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= n; j += i) {
        isPrime[j] = false;
      }
    }
  }
  for (int i = 2; i <= n; i++) {
    if (isPrime[i]) {
      print(i);
    }
  }
}

/// This class represents a rectangle with a specified width and height.
class Rectangle {
  double width;
  double height;

  // This is the constructor for the Rectangle class.
  Rectangle(double width, double height) {
    this.width = width;
    this.height = height;
  }

  // This method returns the area of the rectangle.
  double getArea() {
    return this.width * this.height;
  }
}

// This code tests the functionality of the Rectangle class.
void main() {
  Rectangle rect = new Rectangle(5, 3);
  print("Rectangle width: ${rect.width}");
  print("Rectangle height: ${rect.height}");
  print("Rectangle area: ${rect.getArea()}");
}
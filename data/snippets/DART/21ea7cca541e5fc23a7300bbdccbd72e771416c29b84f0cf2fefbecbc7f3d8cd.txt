/// This code snippet merges two sorted arrays into one
final List<int> mergeSortedArrays(List<int> arr1, List<int> arr2) {
  // Initialize variables to store lengths of the arrays
  final int len1 = arr1.length;
  final int len2 = arr2.length;

  // Initialize variables to track positions in the arrays
  int i = 0;
  int j = 0;
  int k = 0;

  // Initialize output array with appropriate length
  final List<int> result = List<int>(len1 + len2);

  // Loop through both arrays and compare elements at each position
  while (i < len1 && j < len2) {
    // If element in arr1 is smaller, add it to the output array
    // and increment i by 1
    if (arr1[i] < arr2[j]) {
      result[k] = arr1[i];
      i++;
    }
    // If element in arr2 is smaller, add it to the output array
    // and increment j by 1
    else {
      result[k] = arr2[j];
      j++;
    }
    // Increment k by 1 to move to the next position in the output array
    k++;
  }

  // Add remaining elements from arr1 to the output array
  while (i < len1) {
    result[k] = arr1[i];
    i++;
    k++;
  }

  // Add remaining elements from arr2 to the output array
  while (j < len2) {
    result[k] = arr2[j];
    j++;
    k++;
  }

  // Return the merged and sorted array
  return result;
}

// Example usage:
final arr1 = [1, 3, 5, 7, 9];
final arr2 = [2, 4, 6, 8];
final result = mergeSortedArrays(arr1, arr2);
print(result); // [1,2,3,4,5,6,7,8,9]
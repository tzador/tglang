class Person {
  // This is a class that represents a person
  late String name; // Declaring a required property
  DateTime _dateOfBirth; // Declaring a private property

  Person(String inputName, {DateTime? dateOfBirth}) {
    // Constructor that takes in an optional parameter
    name =
        inputName != null ? inputName : 'Unknown'; // Using a ternary operator

    if (dateOfBirth != null) {
      // Checking if the optional parameter has been passed
      _dateOfBirth = dateOfBirth;
    } else {
      _dateOfBirth = DateTime.now();
    }
  }

  String greet() => 'Hello, I am $name!'; // Method to greet a person

  int get age => DateTime.now().difference(_dateOfBirth).inDays ~/ 365;
  // Getter method that calculates age based on date of birth

  void updateName(String newName) {
    // Method to update the name property
    name = newName;
  }

  @override
  String toString() {
    // Overriding the toString() method to provide a custom string representation of the object
    return 'Name: $name \nDate of Birth: $_dateOfBirth \nAge: $age';
  }
}

void main() {
  var Bob = Person('Bob', dateOfBirth: DateTime(1995, 10, 12));
  // Creating a Person object with specified name and date of birth

  print(Bob.greet()); // Output: Hello, I am Bob!
  print(Bob.age); // Output: 25
  print(Bob); // Output: Name: Bob \nDate of Birth: 1995-10-12 00:00:00.000 \nAge: 25
}
// A class representing a car
class Car{
  String make;
  String model;
  int year;
  double price;

  // Constructor with named parameters
  Car({this.make = '', this.model = '', this.year = 0, this.price = 0.0});

  // Method to print information about the car
  void printInfo(){
    print('Make: ${this.make}');
    print('Model: ${this.model}');
    print('Year: ${this.year}');
    print('Price: ${this.price}');
  }

  // Setter for price property
  set setPrice(double newPrice) => this.price = newPrice;

  // Getter for price property
  double get getPrice => this.price;

  // Method to calculate the depreciation of a car
  double calculateDepreciation(int numberOfYears){
    // Using a for loop to calculate depreciation each year
    for(int i = 0; i < numberOfYears; i++){
      this.price = this.price * (0.9); // Price depreciates by 10%
    }
    return this.price;
  }

  // Method to check if a car is worth the price
  bool worthPrice(){
    if(this.price <= 5000){
      return false;
    }
    return true;
  }
}

// Main function to test the Car class
void main(){
  // Creating a new instance of the Car class
  var myCar = Car(make: 'Honda', model: 'Accord', year: 2015, price: 15000.0);

  // Printing information about the car
  myCar.printInfo();

  // Setter and getter example
  myCar.setPrice = 12000.0; // Updating the price using the setter
  print(myCar.getPrice); // Using the getter to print the updated price

  // Car depreciation example
  print('Price before depreciation: ${myCar.price}');
  myCar.calculateDepreciation(3); // Calculating depreciation for the next 3 years
  print('Price after depreciation: ${myCar.price}');

  // Worth price example
  print('Is my car worth the price? ${myCar.worthPrice() ? 'Yes' : 'No'}');
}
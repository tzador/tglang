// A function to merge two arrays in ascending order
void merge(List<int> array1, List<int> array2) {
  int i = 0,
      j = 0,
      k = 0; // index variables for array traversal
  List<int> mergedArray = List(array1.length + array2.length);

  // Traverse both arrays and compare each element
  while (i < array1.length && j < array2.length) {
    // If element at index i in first array is smaller than element at index j in second array
    if (array1[i] < array2[j]) {
      mergedArray[k] = array1[i];
      i++;
    }
    // Else if element at index j in second array is smaller than element at index i in first array
    else {
      mergedArray[k] = array2[j];
      j++;
    }
    k++;
  }

  // Handle remaining elements in first array, if any
  while (i < array1.length) {
    mergedArray[k] = array1[i];
    i++;
    k++;
  }

  // Handle remaining elements in second array, if any
  while (j < array2.length) {
    mergedArray[k] = array2[j];
    j++;
    k++;
  }

  // Print the merged array in a formatted string
  print("The merged array is: ${mergedArray.toString()}");
}

// Example usage
void main() {
  List<int> array1 = [1, 3, 5, 7, 9];
  List<int> array2 = [2, 4, 6, 8, 10];
  merge(array1, array2); // Output: The merged array is: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
}
/// A class representing a person.
class Person {
  String name;
  int age;

  /// Constructor for the Person class.
  Person(this.name, this.age);

  /// A method to print the person's information.
  /// The information includes the person's name and age.
  void printInfo() {
    print('Name: ${this.name}, Age: ${this.age}');
  }

  /// A method to check if the person is an adult.
  /// Returns true if the person is above 18 years old, else returns false.
  bool isAdult() => this.age > 18 ? true : false;

  /// A method to increment the person's age by a specified number.
  void incrementAge(int num) => this.age += num;

  /// A static method to create a new Person instance with a given name and age.
  static Person createWithNameAndAge(String name, int age) => Person(name, age);

  /// Override toString() method to return a string representation of the person.
  /// The string includes the person's name and age.
  @override
  String toString() => '$name is $age years old.';
}

void main() {
  // Create a new instance of Person using the constructor.
  Person person1 = Person('John', 25);

  // Print person1's information.
  person1.printInfo(); // Output: Name: John, Age: 25

  // Check if person1 is an adult.
  print(person1.isAdult()); // Output: true

  // Increment person1's age by 5.
  person1.incrementAge(5);

  // Print person1's updated information.
  person1.printInfo(); // Output: Name: John, Age: 30

  // Create a new instance of Person using the static method.
  Person person2 = Person.createWithNameAndAge('Jane', 21);

  // Print person2's information.
  person2.printInfo(); // Output: Name: Jane, Age: 21

  // Override the toString() method and print person2.
  print(person2); // Output: Jane is 21 years old.
}
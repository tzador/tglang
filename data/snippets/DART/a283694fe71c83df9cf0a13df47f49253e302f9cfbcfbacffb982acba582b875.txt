// Function to sort a list of numbers in ascending order
// Parameters:
//      - arr: list of numbers to be sorted
// Returns:
//      - sorted list of numbers in ascending order

List<int> sortList(List<int> arr) {
    // Base case
    if (arr.length <= 1) {
        return arr;
    }

    // Choose the pivot element
    int pivot = arr[arr.length ~/ 2];
    
    // Divide the list into smaller and larger lists than the pivot element
    List<int> smallerList = [];
    List<int> largerList = [];
    for (int num in arr) {
        if (num < pivot) {
            smallerList.add(num);
        } else {
            largerList.add(num);
        }
    }

    // Recursively sort the smaller and larger lists
    smallerList = sortList(smallerList);
    largerList = sortList(largerList);

    // Combine the sorted lists and pivot element
    List<int> sortedList = [];
    sortedList.addAll(smallerList);
    sortedList.add(pivot);
    sortedList.addAll(largerList);

    return sortedList;
}

// Example usage
void main() {
    // Unsorted list of numbers
    List<int> unsortedList = [9, 4, 2, 7, 1, 8, 3, 5, 6];

    // Sort the list using the function
    List<int> sortedList = sortList(unsortedList);

    // Print the sorted list
    print(sortedList); // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]
}
/// This function checks if a given number is a power of two
/// and returns true if it is, else returns false
bool checkPowerOfTwo(int num) {

  // using bit manipulation to check if a number is a power of two
  // a number is a power of two if its binary representation
  // contains only one 1 (e.g. 2 = 10, 4 = 100, 8 = 1000)
  // and performing a bitwise AND with its predecessor will result in 0

  // if the number is 0, it is not considered a power of two
  // and if the number is negative, it cannot be a power of two
  if (num == 0 || num < 0) {
    return false;
  }

  // converting the number to binary and storing it in a string
  String binaryNum = num.toRadixString(2);

  // counting the number of 1s in the binary string
  int countOne = binaryNum.replaceAll('0', '').length;

  // if the number of 1s is equal to 1, the number is a power of two
  if (countOne == 1) {
    return true;
  } else {
    return false;
  }
}

// example usage of the function
void main() {
  int num = 16;
  print(checkPowerOfTwo(num)); // output: true
}
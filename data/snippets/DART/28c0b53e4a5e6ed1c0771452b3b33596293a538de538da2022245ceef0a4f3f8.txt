/// This snippet demonstrates the use of an asynchronous function with the `await` keyword

/// Define an asynchronous function called `fetchData`
/// The function takes in a `String` parameter, `url` which represents the URL of the data to be fetched
Future<void> fetchData(String url) async {
  // Print a message indicating that the data is being fetched from the provided URL
  print('Fetching data from $url...');

  // Create a new HTTP client
  final client = http.Client();

  // Use the `await` keyword to wait for the response from the provided URL
  final response = await client.get(Uri.parse(url));

  // Check if the response was successful by checking the status code
  if (response.statusCode == 200) {
    // Print a success message
    print('Data fetched successfully.');

    // Convert the response body to a `Map` object using the `json` package
    final data = json.decode(response.body);

    // Print the data retrieved from the response body
    print('Data: $data');
  } else {
    // If the response was not successful, print an error message with the status code
    print('Error fetching data. Status code: ${response.statusCode}');
  }
}

/// Call the `fetchData` function with a URL to retrieve data from
/// Since `fetchData` is an `async` function, `await` it to wait for the data to be fetched
await fetchData('https://jsonplaceholder.typicode.com/todos/1');
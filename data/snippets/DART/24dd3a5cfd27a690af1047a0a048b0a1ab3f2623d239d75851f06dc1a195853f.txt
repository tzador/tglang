/// This is a class representing a car.
class Car {
  /// The make of the car, e.g. Chevrolet.
  final String make;

  /// The model of the car, e.g. Camaro.
  final String model;

  /// The year the car was manufactured.
  final int year;

  /// The current mileage of the car.
  double _mileage = 0.0;

  /// The color of the car.
  String color;

  /// Boolean value indicating whether the car is currently running.
  bool _isRunning = false;

  /// Constructor for creating a new car instance.
  Car(this.make, this.model, this.year, this.color);

  /// Starts the car.
  void start() {
    if (!_isRunning) {
      print('Starting the car...');
      _isRunning = true;
    } else {
      print('The car is already running.');
    }
  }

  /// Stops the car.
  void stop() {
    if (_isRunning) {
      print('Stopping the car...');
      _isRunning = false;
    } else {
      print('The car is already stopped.');
    }
  }

  /// Adds a specified amount of mileage to the car.
  void addMileage(double distance) {
    _mileage += distance;
    print('Adding $distance miles to the car.');
  }

  /// Returns the current mileage of the car.
  double getMileage() {
    print('The car has traveled $_mileage miles.');
    return _mileage;
  }

  /// Returns the details of the car as a string.
  @override
  String toString() {
    return '$year ${make.toUpperCase()} ${model.toLowerCase()}, color: $color';
  }
}

/// Main function.
void main() {
  // Create a new car instance.
  Car myCar = Car('Chevrolet', 'Camaro', 2010, 'red');

  // Start the car.
  myCar.start();

  // Add 100 miles to the car.
  myCar.addMileage(100.0);

  // Stop the car.
  myCar.stop();

  // Get the current mileage of the car.
  myCar.getMileage();

  // Print details of the car.
  print(myCar);
}
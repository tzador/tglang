class Animal {
  String name;
  int age;
  String species;
  
  // Constructor
  Animal(String name, int age, String species) {
    this.name = name;
    this.age = age;
    this.species = species;
  }
  
  // Method to print animal's information
  void printInfo() {
    print('Name: ${this.name}');
    print('Age: ${this.age}');
    print('Species: ${this.species}');
  }
  
  // Getter for name property
  String get getName => this.name;
  
  // Setter for age property
  set setAge(int age) => this.age = age;
  
  // Static method to create a new animal
  static Animal createAnimal(String name, int age, String species) {
    return Animal(name, age, species);
  }
}

// Inheritance example
class Dog extends Animal {
  String breed;
  
  // Constructor
  Dog(String name, int age, String breed) : super(name, age, 'Dog') {
    this.breed = breed;
  }
  
  // Method to print dog's information
  @override
  void printInfo() {
    print('Name: ${this.name}');
    print('Age: ${this.age}');
    print('Species: ${this.species}');
    print('Breed: ${this.breed}');
  }
  
  // Getter for breed property
  String get getBreed => this.breed;
  
  // Static method to create a new dog
  static Dog createDog(String name, int age, String breed) {
    return Dog(name, age, breed);
  }
}

void main() {
  // Create a new animal
  Animal lion = Animal('Simba', 5, 'Lion');
  
  // Print lion's information
  lion.printInfo();
  
  // Update lion's age
  lion.setAge = 6;
  
  // Print updated age
  print('Lion\'s age is now ${lion.age}');
  
  // Create a new dog using static method
  Dog goldenRetriever = Dog.createDog('Max', 2, 'Golden Retriever');
  
  // Print dog's information
  goldenRetriever.printInfo();
  
  // Print dog's breed
  print('Dog\'s breed is ${goldenRetriever.getBreed}');
}
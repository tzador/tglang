/// A function that sorts a given list using the quicksort algorithm
/// Takes in a list of integers and returns the sorted list

List<int> quicksort(List<int> list, int left, int right) {
  int i = left;
  int j = right;
  int pivot = list[(left + right) ~/ 2];

  while (i <= j) {
    while (list[i] < pivot) {
      i++;
    }
    while (list[j] > pivot) {
      j--;
    }
    if (i <= j) {
      // swap elements
      int temp = list[i];
      list[i] = list[j];
      list[j] = temp;
      i++;
      j--;
    }
  }
  // recursive calls
  if (left < j) {
    quicksort(list, left, j);
  }
  if (i < right) {
    quicksort(list, i, right);
  }
  // return sorted list
  return list;
}
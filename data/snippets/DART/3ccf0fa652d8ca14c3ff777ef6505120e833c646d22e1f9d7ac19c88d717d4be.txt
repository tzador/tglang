/// A class representing a user profile with various properties and methods. 
/// This class implements the `Comparable` interface for sorting users based on their `id`.
class UserProfile implements Comparable<UserProfile> {
  int id;
  String name;
  String email;

  /// Constructor for creating a `UserProfile` object with `id`, `name` and `email`.
  UserProfile(this.id, this.name, this.email);

  /// A method to check if a user's `email` is valid.
  bool validateEmail() {
    var validFormat = RegExp(r"^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\.[a-zA-Z]+");
    if (validFormat.hasMatch(email)) {
      return true;
    } else {
      return false;
    }
  }

  /// Override of the `compareTo` method from the `Comparable` interface.
  /// This method compares two `UserProfile` objects based on their `id`.
  int compareTo(UserProfile other) => this.id - other.id;

  /// Override of the `toString` method to print out a `UserProfile` object in a readable format.
  @override
  String toString() => 'UserProfile(id: $id, name: $name, email: $email)';
}

void main() {
  // Creating a list of `UserProfile` objects.
  var users = [
    UserProfile(1, 'John', 'john@example.com'),
    UserProfile(2, 'Jane', 'jane@example.com'),
    UserProfile(3, 'Bob', 'bobexample.com'),
    UserProfile(4, 'Alice', '@alice.example.com'),
  ];

  // Sorting the list of `UserProfile` objects based on their `id`.
  users.sort();

  // Looping through the sorted list and printing the `toString` representation of each `UserProfile` object.
  for (var user in users) {
    print(user);
  }
}
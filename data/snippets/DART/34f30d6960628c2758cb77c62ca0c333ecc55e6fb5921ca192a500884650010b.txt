Future<int> getUserAge() async {
  // Creates a Future that will eventually hold an int
  final userAgeAsString = await getAgeAsString();
  // Calls a function that returns a Future<String>.
  // // The code pauses here until the Future completes.
  return int.parse(userAgeAsString);
}

Future<String> getAgeAsString() => Future.delayed(
  Duration(seconds: 2),
  () => '25'
);
// Creates a function that returns a Future<String> and delays the 
// execution by 2 seconds before returning the string '25'.

void main() async {
  final userAge = await getUserAge();
  // Calls the function asynchronously and waits for the returned value
  print('User age is $userAge');
  // Prints the user's age after it has been retrieved from the Future.
}
// Output: User age is 25
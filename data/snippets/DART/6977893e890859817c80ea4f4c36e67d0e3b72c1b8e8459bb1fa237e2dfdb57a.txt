/// Calculates the dot product of two vectors.
///
/// This function assumes that the two vectors are of equal length.
double dotProduct(List<double> vector1, List<double> vector2) {
  double sum = 0;

  for (int i = 0; i < vector1.length; i++) {
    sum += vector1[i] * vector2[i];
  }

  return sum;
}

/// Main function that calculates the cosine similarity between two sparse vectors.
/// Returns a value between -1 and 1.
void main() {
  // Define two sparse vectors as lists of doubles.
  List<double> vector1 = [0, 1, 0, 0, 1, 0, 0, 1, 0];
  List<double> vector2 = [0, 0, 0, 1, 0, 1, 0, 0, 1];

  // Calculate the dot product of the two vectors.
  double dotProd = dotProduct(vector1, vector2);

  // Calculate the magnitude of vector1.
  double mag1 = 0;
  for (int i = 0; i < vector1.length; i++) {
    mag1 += vector1[i] * vector1[i];
  }
  mag1 = sqrt(mag1);

  // Calculate the magnitude of vector2.
  double mag2 = 0;
  for (int i = 0; i < vector2.length; i++) {
    mag2 += vector2[i] * vector2[i];
  }
  mag2 = sqrt(mag2);

  // Calculate the cosine similarity between the two vectors.
  double cosSim = dotProd / (mag1 * mag2);

  print(cosSim);
}
/**
 * A class representing a person.
 */
class Person {
  String name; // name of the person
  int age; // age of the person
  List<String> hobbies; // list of hobbies
  Map<String, String> address; // map containing address information

  /**
   * Constructor for the Person class.
   * @param name the name of the person.
   * @param age the age of the person.
   * @param hobbies a list of hobbies.
   * @param address a map containing address information.
   */
  Person(this.name, this.age, this.hobbies, this.address) {
    print('Creating new person: $name');
    print('Person\'s age: $age years old');
    print('Person\'s hobbies: $hobbies');
    print('Person\'s address: $address');
  }

  /**
   * Method for adding a new hobby.
   * @param hobby the new hobby to add.
   */
  void addHobby(String hobby) {
    hobbies.add(hobby);
    print('New hobby added: $hobby');
  }

  /**
   * A method to update the person's age.
   * @param newAge the person's updated age.
   */
  void updateAge(int newAge) {
    age = newAge;
    print('Person\'s age updated to: $newAge');
  }

  /**
   * A method to update the person's address.
   * @param newAddress a map containing the new address information.
   */
  void updateAddress(Map<String, String> newAddress) {
    address = newAddress;
    print('Person\'s address updated to: $newAddress');
  }
}

// Create a new person object
Person john = new Person(
  'John',
  30,
  ['Skiing', 'Reading', 'Biking'],
  {
    'street': '123 Main St',
    'city': 'New York',
    'state': 'NY',
    'zip': '10001',
  },
);

// Add a new hobby to John's list
john.addHobby('Gardening');

// Update John's age
john.updateAge(35);

// Update John's address
john.updateAddress({
  'street': '456 Pine St',
  'city': 'Los Angeles',
  'state': 'CA',
  'zip': '90001',
});
/// This class represents a car object with various properties and methods
class Car {
  String _make; // private variable to store the make of the car
  String _model; // private variable to store the model of the car
  int _year; // private variable to store the year of manufacture
  double _fuelLevel; // private variable to store the fuel level of the car
  bool _isRunning; // private variable to check if the car is running or not

  Car.makeModel(this._make, this._model); // constructor to set the make and model of the car
  Car.year(this._year); // constructor to set the year of manufacture of the car

  /// Returns the make of the car
  String get make => _make;

  /// Returns the model of the car
  String get model => _model;

  /// Returns the year of manufacture of the car
  int get year => _year;

  /// Returns the fuel level of the car
  double get fuelLevel => _fuelLevel;

  /// Returns true if the car is running, false if it is not running
  bool get isRunning => _isRunning;

  /// Sets the fuel level of the car based on the given value
  set fuelLevel(double level) => _fuelLevel = level;

  /// Starts the car
  void startCar() {
    _isRunning = true;
    _fuelLevel -= 0.1;
    print('Car started!');
  }

  /// Runs the car for the specified distance, reduces fuel level and returns the time taken
  double run(double distance) {
    double time = distance / 50; // assuming the car travels at an average speed of 50 km/h
    _fuelLevel -= (distance * 0.01); // assuming the car consumes 1 liter of fuel every 100 km
    return time;
  }

  /// Stops the car
  void stopCar() {
    _isRunning = false;
    print('Car stopped!');
  }
}

void main() {
  Car myCar = Car.makeModel('Ford', 'Mustang'); // creating an instance of a car with make and model
  Car myOtherCar = Car.year(2020); // creating an instance of a car with year of manufacture
  print('My car is a ${myCar.make} ${myCar.model} year ${myCar.year}'); // output: My car is a Ford Mustang year null (since year was not provided)
  myCar.fuelLevel = 20.0; // setting the fuel level of the car
  print('My car has ${myCar.fuelLevel} liters of fuel'); // output: My car has 20.0 liters of fuel
  myCar.startCar(); // starting the car
  print('Is my car running? ${myCar.isRunning}'); // output: Is my car running? true
  double timeTaken = myCar.run(100); // running the car for 100 km and storing the time taken
  print('Time taken to travel 100 km: ${timeTaken} hours'); // output: Time taken to travel 100 km: 2.0 hours
  print('My car has ${myCar.fuelLevel} liters of fuel'); // output: My car has 18.0 liters of fuel
  myCar.stopCar(); // stopping the car
  print('Is my car running? ${myCar.isRunning}'); // output: Is my car running? false
}
/*This code snippet generates a list of prime numbers
using the Sieve of Eratosthenes algorithm*/

//Create a function that takes in a number and returns a list of prime numbers up to that number
List<int> sieveOfEratosthenes(int n)
{
  //Create a list of numbers from 2 to n (inclusive)
  List<int> numbers = List<int>.generate(n-1, (index) => index+2);

  //Create a list to store the prime numbers
  List<int> primes = [];

  //Loop through the numbers list starting from 2 (the first prime number)
  for(int i=2; i<=n; i++)
  {
    //If the current number is not marked as non-prime
    //i.e. it is still in the numbers list
    if(numbers.contains(i))
    {
      //Add it to the primes list
      primes.add(i);

      //Remove all the multiples of the current prime number from the numbers list
      for(int j=2*i; j<=n; j+=i)
      {
        numbers.remove(j);
      }
    }
  }

  //Return the list of prime numbers
  return primes;
}

void main() {
  //Generate the list of prime numbers up to 50 using the sieveOfEratosthenes function
  List<int> primeNumbers = sieveOfEratosthenes(50);

  //Print the list of prime numbers
  print('List of prime numbers up to 50:');
  print(primeNumbers);
}

/* Output:
List of prime numbers up to 50:
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]
*/
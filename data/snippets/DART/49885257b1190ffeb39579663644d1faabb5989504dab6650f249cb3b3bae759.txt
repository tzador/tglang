/// This is a bubble sort algorithm implemented in DART.
/// It takes in a list of integers and returns the sorted list using bubble sort.
List<int> bubbleSort(List<int> inputList) {
    // Start with an empty sorted list and a flag to check for swaps.
    List<int> sortedList = [];
    bool swapFlag = true;

    // Loop through the input list until no more swaps occur.
    while (swapFlag) {
        // Set the swap flag to false until a swap occurs.
        swapFlag = false;

        // Loop through the input list, comparing adjacent elements and swapping if necessary.
        for (int i = 0; i < inputList.length - 1; i++) {
            if (inputList[i] > inputList[i+1]) {  // Swap needed.
                // Swap the elements.
                int temp = inputList[i];
                inputList[i] = inputList[i+1];
                inputList[i+1] = temp;

                // Set the swap flag to true.
                swapFlag = true;
            }
        }
    }

    // Once the loop finishes, the input list is sorted in place.
    // Return the input list as the sorted list.
    return inputList;
}

// Example usage:
List<int> myNumbers = [8, 2, 1, 5, 9];
print(bubbleSort(myNumbers));  // Output: [1, 2, 5, 8, 9]
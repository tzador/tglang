/// This is a class representing a complex number.
class ComplexNumber {
  /// The real part of the complex number.
  double _re;

  /// The imaginary part of the complex number.
  double _im;

  /// Constructor that takes in the real and imaginary parts of a complex number.
  ComplexNumber(double re, double im) {
    this._re = re;
    this._im = im;
  }

  /// Getter for the real part of the complex number.
  double getRealPart() {
    return this._re;
  }

  /// Getter for the imaginary part of the complex number.
  double getImaginaryPart() {
    return this._im;
  }

  /// Setter for the real part of the complex number.
  void setRealPart(double re) {
    this._re = re;
  }

  /// Setter for the imaginary part of the complex number.
  void setImaginaryPart(double im) {
    this._im = im;
  }

  /// Method to compute the absolute value of the complex number.
  double computeAbsoluteValue() {
    return sqrt((this._re * this._re) + (this._im * this._im));
  }

  /// Method to compute the sum of two complex numbers.
  ComplexNumber addComplexNumber(ComplexNumber other) {
    double re = this._re + other._re;
    double im = this._im + other._im;
    return ComplexNumber(re, im);
  }

  /// Method to compute the difference of two complex numbers.
  ComplexNumber subtractComplexNumber(ComplexNumber other) {
    double re = this._re - other._re;
    double im = this._im - other._im;
    return ComplexNumber(re, im);
  }

  /// Method to compute the product of two complex numbers.
  ComplexNumber multiplyComplexNumber(ComplexNumber other) {
    double re = (this._re * other._re) - (this._im * other._im);
    double im = (this._re * other._im) + (this._im * other._re);
    return ComplexNumber(re, im);
  }

  /// Method to compute the quotient of two complex numbers.
  ComplexNumber divideComplexNumber(ComplexNumber other) {
    double denominator = (other._re * other._re) + (other._im * other._im);
    double re = ((this._re * other._re) + (this._im * other._im)) / denominator;
    double im = ((this._im * other._re) - (this._re * other._im)) / denominator;
    return ComplexNumber(re, im);
  }

  /// Method to format the complex number as a string.
  String toString() {
    String reStr = this._re == this._re.toInt() ? "${this._re.toInt()}" : "${this._re}";
    String imSign = this._im < 0 ? "-" : "+";
    String imStr = this._im == this._im.toInt() ? "${this._im.abs().toInt()}" : "${this._im.abs()}";
    return "$reStr $imSign $imStr i";
  }
}
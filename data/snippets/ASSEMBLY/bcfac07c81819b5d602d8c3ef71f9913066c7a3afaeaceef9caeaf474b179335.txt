section .text     ; indicates the start of the code section

global _start     ; makes the label '_start' visible outside this file

_start:           ; beginning of the code

; initialize variables
mov eax, 0        ; initialize 'eax' register to 0
mov ecx, 0        ; initialize 'ecx' register to 0

; loop through array
mov esi, array    ; move address of 'array' to 'esi' register
mov edx, length   ; move value of 'length' to 'edx' register
L1:
mov ebx, [esi]    ; put next value in array at address pointed to by 'esi' into 'ebx' register

; perform calculations
add eax, ebx      ; add current value to 'eax' register
inc ecx           ; increment 'ecx' register by 1
inc esi           ; increment 'esi' register by 1
loop L1           ; decrement 'edx' register by 1 and loop until 'edx' reaches 0

; print result
mov eax, 4        ; syscall number for 'write' function
mov ebx, 1        ; file descriptor (1 = stdout)
mov ecx, result   ; address of 'result' variable
mov edx, 4        ; number of bytes to print (4 for 'eax' register)
int 0x80          ; invoke kernel interrupt to perform syscall
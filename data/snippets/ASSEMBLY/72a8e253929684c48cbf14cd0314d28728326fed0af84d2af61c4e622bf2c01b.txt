.data       ; starting a section for declaring data
my_array:   ; creating a label for the array
  dw 2, 4, 6, 8, 10    ; declaring 5 words (2 bytes) with constant values
my_string:  ; creating a label for the string
  db "Hello, World!", 0xA, 0xD    ; declaring a string with carriage return and newline characters
.code       ; starting a section for writing code
  .start:   ; creating a label for the start of the code
    mov ax, @data   ; moving the address of the data section into the AX register
    mov ds, ax      ; moving the value of the AX register into the data segment register
    mov si, offset my_array    ; moving the offset of the array into the SI register
    mov al, [si]     ; moving the first byte of the array into the AL register
    inc al          ; incrementing the value in the AL register by 1
    mov [si], al    ; moving the value in the AL register back into the first byte of the array
    mov di, offset my_string   ; moving the offset of the string into the DI register
    mov ah, 09h     ; setting the AH register to 0x09 (print string)
    int 21h         ; calling the interrupt to print the string
    mov ah, 0       ; setting the AH register back to 0
    int 20h         ; calling the interrupt to end the program
; Set interrupts to be cleared on a DSPIC30F4011
  .equ IFS0, 0x700              ; Address of Interrupt Flag Status Register 0
  .equ PIR1, 0x030               ; Address of Peripheral Interrupt Request 1 register
  .set CPU_FREQ, 8000000         ; Set CPU frequency to 8MHz
  .equ TIMER_INTERVAL, CPU_FREQ/100   ; Divide by 100 to create a 1ms timer
  
  ; Initialize the interrupt vector
  ; Store the address of the interrupt handler in the interrupt vector table
  ; 'TIMER1_INTERRUPT' is the label for the interrupt handler function
  ; The '.set' directive sets the value of a symbol but does not allocate space
  ; Instructions inside '.set' are not executed, only the value is assigned
  ; The 'mov' instruction copies the value stored in W0 register to the specified register
  .set AUTO_VEC_MASK, 0x0FFF
  mov #TIMER1_INTERRUPT, W0       ; Move the address of TIMER1_INTERRUPT to the W0 register
  and W0, AUTO_VEC_MASK, W0       ; Logical AND operation of W0 and AUTO_VEC_MASK, store in W0
  mov IFS0, W1                    ; Move the address of IFS0 to the W1 register
  add W0, (W1), W0                ; Add the values of W0 and the data stored at W1, store in W0
  mov W0, (W1)                    ; Move the value of W0 to the address stored at W1
  
  ; Enable timer interrupt and set timer interval
  ; The 'mov' instruction copies the value stored in W0 register to the specified register
  ; The 'bset' instruction sets the specified bit in the target register
  mov T1CON, W0                   ; Move the address of T1CON to the W0 register
  bset #TMR1IE, (W0)              ; Set the TMR1IE bit in the T1CON register, enable timer interrupt
  mov W0, T1CON                   ; Move the value of W0 to the T1CON register
  mov PR1, W0                     ; Move the address of PR1 to the W0 register
  mov #TIMER_INTERVAL, (W0)       ; Move the value of TIMER_INTERVAL to the address stored at W0
  
  ; Clear timer interrupt flag
  ; The 'bclr' instruction clears the specified bit in the target register
  ; The 'mov' instruction copies the value stored in W0 register to the specified register
  bclr #TMR1IF, (W1)              ; Clear the TMR1IF bit in the interrupt flag register
  mov IFS0, W0                    ; Move the address of IFS0 to the W0 register
  mov #0x0000, (W0)               ; Move the value 0x0000 to the address stored at W0, clear all bits
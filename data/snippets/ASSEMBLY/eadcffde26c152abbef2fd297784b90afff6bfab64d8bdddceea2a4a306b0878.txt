; This program will count from 0 to 9
section .text     ; Code section
global _start     ; Global label for program entry point
_start:           ; Entry point
    mov eax, 0    ; Move 0 into register eax
    mov ebx, 9    ; Move 9 into register ebx
    mov ecx, 0    ; Move 0 into register ecx

loop:              ; Loop label
    cmp eax, ebx  ; Compare eax and ebx
    jg end        ; Jump to end if eax is greater than ebx
    mov ecx, eax  ; Move eax into ecx
    add ecx, 1    ; Add 1 to ecx
    mov eax, ecx  ; Move ecx back into eax
    call print    ; Call print subroutine
    jmp loop      ; Jump back to loop label

end:
    mov eax, 1    ; Move 1 into register eax for exit syscall
    xor ebx, ebx  ; Set ebx to 0 for exit code
    int 0x80      ; Perform exit syscall

; Print subroutine
print:
    push ecx      ; Push ecx onto stack
    push ebx      ; Push ebx onto stack
    mov eax, 4    ; Move 4 into register eax for write syscall
    mov ebx, 1    ; Move 1 into register ebx for stdout
    mov ecx, msg  ; Move address of msg variable into ecx
    mov edx, 1    ; Move 1 into register edx for number of bytes to print
    int 0x80      ; Perform write syscall
    pop ebx       ; Pop ebx off stack
    pop ecx       ; Pop ecx off stack
    ret           ; Return from subroutine

section .data    ; Data section
    msg db 'Count: '  ; Define msg variable to hold string
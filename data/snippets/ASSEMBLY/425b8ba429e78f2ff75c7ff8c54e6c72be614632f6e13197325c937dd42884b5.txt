.section .data    ;Define data section
newArray:   .word 1,2,3,4,5     ;Initialize new array with 5 elements
arraySize:  .word 5             ;Define variable for array size
sum:        .word 0             ;Define variable for sum

.section .text    ;Define text section
.global _start     ;Define globally accessible _start label

_start:             ;Start of program
    movl $0, %ecx   ;Set counter to 0
    movl $0, %eax   ;Clear eax register for sum
    movl newArray, %ebx     ;Move address of array to ebx register
Loop:               ;Start of loop
    movl (%ebx), %edx       ;Move value at address in ebx to edx register
    addl %ebx, %eax         ;Add value in edx to sum in eax register
    addl $4, %ebx           ;Increment address by 4 bytes (size of an int)
    incl %ecx               ;Increment counter
    cmpl arraySize, %ecx    ;Compare counter to arraySize
    jne Loop                ;If not equal, jump to start of loop

exit:       ;Exit program
    movl $1, %eax   ;Exit syscall number
    xorl %ebx, %ebx ;Exit status code 0
    int $0x80       ;Call interrupt to exit program
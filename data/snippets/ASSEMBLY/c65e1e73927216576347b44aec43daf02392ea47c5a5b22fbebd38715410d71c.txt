; This code snippet demonstrates a function that calculates the factorial of
; a given number using recursion in Assembly language.

section .data								; Data section
	num		dw	8						; Input number for which factorial will be calculated
	result	dw	0						; Variable to store the calculated factorial

section .text								; Code section
global _start								; Entry point for the program

_start:

	mov		eax, 1						; Initialize accumulator to 1
	mov		ebx, [num]					; Move input number to ebx register

	call	factorial					; Call factorial function to calculate the factorial of the given number

	mov		[result], eax				; Move the result from accumulator to the result variable

	mov		eax, 1						; Set eax to 1 to indicate successful execution
	mov		ebx, 0						; Set ebx to 0 to indicate normal program termination

	int		0x80						; System call to terminate the program

; Recursive function to calculate factorial
factorial:
	cmp		ebx, 1						; Check if input number is 1
	jle		end							; If true, jump to end

	dec		ebx							; Decrement input number
	push	ebx							; Push input number onto the stack
	call	factorial					; Recursive call to calculate factorial of input number-1
	pop		ebx							; Pop input number from the stack

	mul		ebx							; Multiply accumulator with input number
	jmp		end							; Jump to end

end:
	ret									; Return

; Output:
; The factorial of 8 is 40320, stored in the result variable. This value can
; be accessed and used for further calculations if desired.
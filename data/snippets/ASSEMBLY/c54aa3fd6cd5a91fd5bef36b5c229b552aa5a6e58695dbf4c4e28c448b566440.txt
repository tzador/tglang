.section .text    ; Defines a section for executable instructions
.global main      ; Makes the main function available to the linker
main:
    movl $1, %eax ; Moves the value 1 into the EAX register
    movl $0, %ebx ; Moves the value 0 into the EBX register
    int $0x80     ; Performs a system call, specifically exit(0)

.data                         ; Defines a section for initialized data
message db 'Hello, world!', 0 ; Creates a byte string with the message and null terminator
msg_len equ $-message         ; Defines a variable for the length of the string

.section .text        ; Defines a section for executable instructions
.global _start       ; Makes the _start function available to the linker
_start:
    movl $4, %eax    ; Moves the value 4 (sys_write) into the EAX register
    movl $1, %ebx    ; Moves the file descriptor 1 (stdout) into the EBX register
    movl $message, %ecx ; Moves the address of the message string into the ECX register
    movl $msg_len, %edx ; Moves the length of the message string into the EDX register
    int $0x80         ; Performs a system call, specifically write(stdout, message, msg_len)
    
    movl $1, %eax    ; Moves the value 1 (sys_exit) into the EAX register
    movl $0, %ebx    ; Moves the value 0 into the EBX register
    int $0x80        ; Performs a system call, specifically exit(0)
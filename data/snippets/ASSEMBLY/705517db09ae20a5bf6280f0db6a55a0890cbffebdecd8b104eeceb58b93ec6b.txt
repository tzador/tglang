; Example code in Assembly language

.386  ; tells the assembler to use instructions for an Intel 80386 processor or higher

.model flat, stdcall  ; defines the memory model and calling convention for the program

.stack 4096  ; reserves 4096 bytes of memory for the program stack

.data  ; data section

  message db 'Hello World!',0  ; defines a string variable called "message" and initializes it with "Hello World!"

.code  ; code section

  main PROC

    mov ax, @data  ; sets the data segment register to point to the data section

    mov ds, ax  ; loads the data segment register with the value in the ax register

    mov ah, 09h  ; sets the ah register to indicate a print function (09h)

    lea dx, message  ; loads the pointer to the "message" variable into the dx register

    int 21h  ; invokes the print function through interrupt 21h

    mov ah, 0  ; sets the ah register to indicate program termination (00h)

    int 21h  ; invokes the termination function through interrupt 21h

  main ENDP

END main  ; ends the main procedure and indicates the end of the program
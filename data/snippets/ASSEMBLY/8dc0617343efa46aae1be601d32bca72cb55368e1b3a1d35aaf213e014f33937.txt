# Initializing the counter variable
mov cx, 100

# Setting up loop label
loop_start:

# Subtracting 1 from counter
dec cx

# Conditional jump to end of loop if counter reaches 0
cmp cx, 0
je loop_end

# Printing the current value of counter
push cx
call print_int
add sp, 2

# Continuing the loop
jmp loop_start

# End of loop label
loop_end:

# Halt the program
hlt
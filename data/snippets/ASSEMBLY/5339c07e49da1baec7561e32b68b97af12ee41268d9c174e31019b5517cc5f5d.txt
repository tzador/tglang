section .data                           ; Data section
    message db 'Hello world!', 0xA, 0xD  ; Define string with line feed and carriage return characters
    length equ $-message                ; Calculate length of string by subtracting start address from current address
section .text                           ; Code section
    global _start                       ; Declare entry point for linker
_start:                                 ; Entry point label
    mov eax, 4                          ; System call number for 'write'
    mov ebx, 1                          ; File descriptor for 'stdout'
    mov ecx, message                    ; Pointer to message string
    mov edx, length                     ; Length of string
    int 80h                             ; Call kernel interrupt to execute system call
    mov eax, 1                          ; System call number for 'exit'
    xor ebx, ebx                        ; Leave return code as 0
    int 80h                             ; Call kernel interrupt to execute system call
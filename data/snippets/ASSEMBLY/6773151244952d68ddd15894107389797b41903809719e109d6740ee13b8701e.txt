; This code snippet calculates the factorial of a given number using a recursive function.
ORG 100H      ; sets the origin address of the code to 100H
PUSH BP       ; pushes the value of registery BP onto the stack
MOV BP, SP    ; moves the value of stack pointer to base pointer
SUB SP, 2     ; allocates 2 bytes on the stack for storing the argument
PUSH CX       ; pushes the value of CX register onto the stack
MOV CX, [BP+4] ; moves the argument (number) to CX register
CMP CX, 1     ; compares the argument to the value 1
JE FACT       ; jumps to FACT if argument equals to 1
DEC CX        ; decrements the value of CX register by 1
CALL FACT     ; calls the FACT function recursively
POP CX        ; pops the value of CX register from the stack
MUL [BP+4]    ; multiplies the value of argument with value in AX register
JMP END       ; jumps to the END label
FACT:         ; FACT function recursively calculates the factorial
CMP CX, 1     ; compares the argument to the value 1
JE END        ; jumps to END if argument equals to 1
DEC CX        ; decrements the value of CX register by 1
CALL FACT     ; calls the FACT function recursively
POP AX        ; pops the value of AX register from the stack
MUL [BP+4]    ; multiplies the value of argument with value in AX register
END:          ; END label marks the end of the program
POP CX        ; pops the value of CX register from the stack
POP BP        ; pops the value of BP register from the stack
RET           ; returns control to the calling function
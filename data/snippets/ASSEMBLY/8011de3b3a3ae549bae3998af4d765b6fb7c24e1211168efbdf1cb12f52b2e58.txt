# Define variables
.data
number db 10			; Define a variable "number" of type byte with value 10
result db ?			; Define a variable "result" of type byte with undefined value
array db 1, 2, 3, 4, 5		; Define an array "array" of type byte with values 1, 2, 3, 4, 5 

# Code segment
.code
main:
	mov ax, @data		; Move the address of the data segment into the ax register
	mov ds, ax		; Move the value of ax into the ds register to access data segment

	; Loop through array
	mov cx, 5		; Move the value 5 into the cx register for loop count
	mov si, offset array	; Move the address of array into the si register for indexing
	mov di, 0		; Move the value 0 into the di register for result index

loop:
	mov al, [si]		; Move the value at the address of si into the al register
	add [result], al	; Add the value in al to the value in result
	inc si			; Increment si for next index
	inc di			; Increment di for next result index
	dec cx			; Decrement cx for loop count
	jnz loop		; Jump back to loop if cx is not zero

	; Print result
	mov ah, 09h		; Move the value 09h (print string) into the ah register
	mov dx, offset result	; Move the address of result into the dx register for printing
	int 21h			; Call the DOS interrupt to print result

	; Exit program
	mov ah, 4Ch		; Move the value 4Ch (exit program) into the ah register
	int 21h			; Call the DOS interrupt to exit program

end main			; End of code segment
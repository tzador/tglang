; Example program in Assembly language
; This program calculates the factorial of a number

.386           ; Specify the processor
.model flat,stdcall   ; Specifies memory model and calling convention

.code           ; Start of code segment
_start:         ; Define program entry point

    mov ebx, [9]    ; Move constant value of 9 into ebx
    mov ecx, [1]    ; Move constant value of 1 into ecx
    mov eax, [1]    ; Move constant value of 1 into eax

    ; Loop to calculate factorial
    loop_start:
        mul ecx     ; Multiply eax by ecx, result stored in eax
        inc ecx     ; Increment ecx by 1
        cmp ecx, ebx    ; Compare ecx to ebx
        jle loop_start  ; Jump back to loop_start if ecx <= ebx
    
    ; End of program
    mov [result], eax   ; Move value in eax to result variable
    mov eax, [result]   ; Move result back into eax
    ret         ; Return to calling function

.data           ; Start of data segment
result dw 0     ; Define result variable as 16-bit word

end _start      ; End of program
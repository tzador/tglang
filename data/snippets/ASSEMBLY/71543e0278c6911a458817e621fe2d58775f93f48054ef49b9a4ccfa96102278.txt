.section .data
    msg db 'Hello, World!',0x0a ; message to be printed
    msglen equ $-msg ; length of message
    num equ 2 ; number to be multiplied

.section .bss
    result resb 3 ; reserve space for result

.section .text
    .global _start

_start:
    mov rdi, 1 ; file descriptor for stdout
    mov rax, 1 ; system call for write
    mov rsi, msg ; address of message
    mov rdx, msglen ; length of message
    syscall ; call system
    mov al, num ; load number to al register
    mul byte [msglen-1] ; multiply number with last character of message
    mov [result], al ; move result to reserved space

    mov rdi, 1 ; file descriptor for stdout
    mov rax, 1 ; system call for write
    mov rsi, result ; address of result
    mov rdx, 3 ; length of result
    syscall ; call system

    mov rax, 60 ; system call for exit
    mov rdi, 0 ; exit success code
    syscall ; call system
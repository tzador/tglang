; This code snippet calculates the factorial of a number using recursion in assembly language

section .data
    n db 5 ; user input for the number whose factorial needs to be calculated

section .text
    global _start ; entry point for the program

_start:
    mov ecx, n  ; move the value of n into ecx register
    mov ebx, 1  ; set ebx to 1, used for multiplication
    call factorial ; call the recursive function to calculate the factorial
    ; the result will be stored in eax register

    ; code for printing the result on the screen
    mov eax, 4  ; system call for printing
    mov ebx, 1  ; file descriptor for stdout
    mov ecx, result_msg  ; message to be printed on the screen
    mov edx, result_len  ; length of the message
    int 0x80  ; execute the system call

    ; code for exiting the program
    mov eax, 1  ; system call for exit
    xor ebx, ebx ; exit status code, 0 indicates successful execution
    int 0x80  ; execute the system call

factorial:
    cmp ecx, 1 ; compare the value in ecx with 1
    je .base_case ; jump to .base_case if the value in ecx is 1

    ; code for multiplying ebx by ecx and storing the result in ebx
    mul ebx ; eax = eax * ebx
    dec ecx ; decrement ecx by 1
    call factorial ; recursively call the function with the new value of ecx
    ret ; return to the previous call

.base_case:
    ; code for returning the base case value of 1
    mov eax, 1
    ret

section .bss
    result resb 10 ; reserve 10 bytes for storing the result
    result_msg db "Factorial of ", n, " is ", result, 0xA ; message to be printed on the screen, 0xA is new line character
    result_len equ $-result_msg ; calculate the length of the message
section .data ;Data section, where we define variables and constants
    msg db 'Hello World!', 0xA ;Declare a string variable with ASCII value for line feed
    num1 dw 10 ;Declare a word-sized (16-bit) variable with value 10
    num2 dd 20 ;Declare a doubleword-sized (32-bit) variable with value 20
    num3 dq 30 ;Declare a quadword-sized (64-bit) variable with value 30
    num4 db 40h ;Declare a byte-sized (8-bit) variable with hexadecimal value 40h
    array dd 1, 2, 3, 4, 5 ;Declare an array with 5 doubleword-sized elements
    count equ $-array ;Define a constant 'count' as the number of elements in the array

section .text ;Code section, where we write instructions
    global _start ;Define a global entry point label
    _start:
        ;Print the string variable
        mov rax, 1 ;System call number for 'write'
        mov rdi, 1 ;File descriptor for standard output (stdout)
        mov rsi, msg ;Memory address of string
        mov rdx, 12 ;Number of bytes to print, including null termination
        syscall ;Execute the system call

        ;Perform arithmetic operations using the variables
        mov ax, [num1] ;Move the value of num1 into ax register
        add ax, [num2] ;Add the value of num2 to ax register
        mov [num3], ax ;Store the result in num3 variable (64-bit)
        mov [num4], al ;Store the lower 8 bits of ax in num4 variable

        ;Loop through the array and multiply each element by 2
        mov ecx, count ;Move the number of elements into ecx register
        mov esi, array ;Move the memory address of array into esi register
    loop:
        mov eax, [esi] ;Move the value of current element into eax register
        add eax, eax ;Multiply by 2
        mov [esi], eax ;Store the result back into the array
        add esi, 4 ;Move to the next element (4 bytes each)
        loop loop ;Repeat until cx register is decremented to 0

        ;Exit the program
        mov rax, 60 ;System call number for 'exit'
        xor rdi, rdi ;Argument for exit code, set to 0 (successful)
        syscall ;Execute the system call
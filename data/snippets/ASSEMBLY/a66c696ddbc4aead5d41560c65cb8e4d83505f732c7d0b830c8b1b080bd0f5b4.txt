; Set up registers for calculation
mov eax, 10 ; move decimal value 10 into the EAX register
mov ebx, 5 ; move decimal value 5 into the EBX register
sub eax, ebx ; subtract EBX value from EAX value and store result in EAX
add eax, 20 ; add decimal value 20 to EAX value
; EAX register now contains the result of (10 - 5 + 20) = 25
push eax ; push EAX value onto the stack for later use
; Loop to calculate factorials of numbers 1 through 5
mov ecx, 1 ; move decimal value 1 into the ECX register
mov edx, 1 ; move decimal value 1 into the EDX register
loop_start: ; label for the beginning of the loop
mul ecx ; multiply ECX value by EAX value (initially 10)
inc ecx ; increment ECX value by 1
cmp ecx, 5 ; compare ECX value to 5
jne loop_start ; jump back to loop_start label if ECX value is not equal to 5
; ECX register now contains the result of 10 * 1 * 2 * 3 * 4 * 5 = 120 (factorial of 5)
pop eax ; pop EAX value off the stack
; Clear registers and exit program
xor eax, eax ; XOR EAX register with itself to set it to 0
xor ebx, ebx ; XOR EBX register with itself to set it to 0
xor ecx, ecx ; XOR ECX register with itself to set it to 0
xor edx, edx ; XOR EDX register with itself to set it to 0
mov ah, 0x4c ; move ASCII code for 'L' into the AH register
int 0x21 ; call the DOS function to terminate the program
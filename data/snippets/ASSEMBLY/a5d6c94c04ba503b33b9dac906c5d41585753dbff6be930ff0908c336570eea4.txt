.section .data ;Start data section

  ;Declare variables
  greeting db "Hello world!", 0xa ;Store the string "Hello world!" and a new line character in memory
  num_times db 10 ;Store the number 10 in memory
  result dd 0 ;Initialize result variable to 0

.section .text ;Start text section

  global _start ;Declare _start as global label

_start: ;Start of program
  
  ;Print greeting
  mov rax, 1 ;Set system call number to 1 for write
  mov rdi, 1 ;Set first argument to 1 for stdout
  mov rsi, greeting ;Set second argument to memory address of greeting
  mov rdx, 14 ;Set third argument to length of greeting
  syscall  ;Call the operating system to print the string
  
  ;Loop 10 times
  mov rcx, num_times ;Move the value of num_times into counter register
  loop_start: ;Label for loop start
    ;Add 1 to result variable
    inc dword [result]

    ;Decrement counter and check for loop end
    loop loop_start ;Decrement counter and jump back to loop start label if counter is not zero

  ;Print result
  mov rax, 1 ;Set system call number to 1 for write
  mov rdi, 1 ;Set first argument to 1 for stdout
  mov rsi, result ;Set second argument to memory address of result
  mov rdx, 4 ;Set third argument to length of result
  syscall  ;Call the operating system to print the result variable

  ;Exit program
  mov rax, 60 ;Set system call number to 60 for exit
  mov rdi, 0 ;Set first argument to 0 for success
  syscall  ;Call the operating system to exit the program
; Initialize data segment
.DATA
    ; Declare variables
    var1 DB 12       ; 1 byte variable
    var2 DW 1234     ; 2 byte variable
    var3 DD 12345678 ; 4 byte variable  
    
.CODE
; Main program
MAIN PROC
    ; Initialize stack segment
    MOV AX, @DATA
    MOV DS, AX

    ; Calculate sum of variables
    MOV AL, var1     ; Move var1 into AL register
    ADD AX, var2     ; Add var2 to AL register
    ADC AX, var3     ; Add var3 to AL register with carry flag
    ; The result will be stored in AX register

    ; Output result to console
    MOV AH, 02h      ; Set AH register to 02h for printing
    MOV DL, 0Ah      ; Set DL register to 0Ah for line feed
    INT 21h          ; Call interrupt 21h to print newline character
    MOV DL, "Sum: "  ; Move string to DL register
    INT 21h          ; Call interrupt 21h to print string
    MOV DL, AL       ; Move AL register (result) to DL for printing
    ADD DL, 30h      ; Convert to ASCII character
    MOV AH, 02h      ; Set AH register to 02h for printing
    INT 21h          ; Call interrupt 21h to print character
    MOV DL, 0Dh      ; Set DL register to 0Dh for carriage return
    INT 21h          ; Call interrupt 21h to print carriage return
    MOV DL, 0Ah      ; Set DL register to 0Ah for line feed
    INT 21h          ; Call interrupt 21h to print line feed

    ; Exit program
    MOV AH, 4Ch      ; Set AH register to 4Ch for program termination
    INT 21h          ; Call interrupt 21h to terminate program

MAIN ENDP
END MAIN
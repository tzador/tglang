.data
    ; Initialize variables
    str1 BYTE "Hello, World!",0xA,0xD,0
    str2 BYTE "This is a code snippet in assembly.",0xA,0xD,0
    num1 DWORD ? ; declare 4-byte (DWORD) variable (initialized to 0)
    num2 BYTE 5 ; declare 1-byte (BYTE) variable with value 5
    result DWORD ? ; create a variable to store result
  
  .code
    main PROC
    ; Print first string
    mov edx, OFFSET str1 ; load str1 address into edx register
    call WriteString ; call WriteString subroutine to print str1
    call Crlf ; call Crlf subroutine to print new line
    ; Print second string
    mov edx, OFFSET str2 ; load str2 address into edx register
    call WriteString ; call WriteString subroutine to print str2
    call Crlf ; call Crlf subroutine to print new line
    ; Calculate the result
    mov eax, num2 ; load num2 into eax register
    add eax, num2 ; add num2 to eax register
    mov num1, eax ; store result in num1 variable
    ; Print the result
    call Crlf ; print new line
    mov edx, OFFSET result ; load result address into edx register
    call WriteInt ; call WriteInt subroutine to print the result
    call Crlf ; print new line
    main ENDP
    ; Subroutine to print a string
    WriteString PROC
      push ebx ; save ebx register
      mov ah, 40h ; set print function
      mov bx, 1 ; set output device to stdout
      mov cx, dx ; set character count
      int 21h ; call DOS to print string
      pop ebx ; restore ebx register
      ret ; return from subroutine
    WriteString ENDP
    ; Subroutine to print an integer
    WriteInt PROC
      push ebx ; save ebx register
      mov ah, 40h ; set print function
      mov bx, 1 ; set output device to stdout
      mov cx, SizeOf result ; set character count to size of result variable
      mov edx, OFFSET result ; load result address into edx register
      int 21h ; call DOS to print integer
      pop ebx ; restore ebx register
      ret ; return from subroutine
    WriteInt ENDP
    ; Subroutine to print a new line
    Crlf PROC
      push ebx ; save ebx register
      mov ah, 2 ; set print function
      mov dl, 0xD ; set carriage return character
      int 21h ; call DOS to print character
      mov dl, 0xA ; set line feed character
      int 21h ; call DOS to print character
      pop ebx ; restore ebx register
      ret ; return from subroutine
    Crlf ENDP
END
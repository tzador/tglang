; This code snippet is a sample program in assembly language
; It calculates the factorial of a number using recursion

section .text       ; Code section

global _start

_start:
    mov ecx, 5       ; Set initial value of n to 5
    call factorial   ; Call factorial function
    jmp exit         ; Jump to end of program

factorial:
    push ebp         ; Save old base pointer
    mov ebp, esp     ; Set new base pointer
    sub esp, 8       ; Allocate space for local variables

    mov eax, [ebp+8] ; Move n value from stack to eax
    cmp eax, 1       ; Compare n to 1
    jg if_statement  ; Jump to if_statement if n > 1
    mov eax, 1       ; Set result to 1 if n <= 1
    jmp end          ; Jump to end of function

if_statement:
    sub eax, 1       ; Decrement n value by 1
    push eax         ; Push new value of n onto stack
    call factorial   ; Call factorial function again
    mov eax, [ebp+8] ; Move original n value from stack to eax
    mul eax, [ebp-4] ; Multiply n by previous factorial result
    mov [ebp-4], eax ; Store updated result in local variable

end:
    mov esp, ebp     ; Restore old stack pointer
    pop ebp          ; Restore old base pointer
    ret              ; Return from function

exit:
    mov ebx, [ebp-4] ; Move final result from stack to ebx
    mov eax, 1       ; Exit system call number
    int 0x80         ; Call interrupt to exit program
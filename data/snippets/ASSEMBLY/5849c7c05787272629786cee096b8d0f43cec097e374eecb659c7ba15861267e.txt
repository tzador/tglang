; Get user input from keyboard
mov ah, 0Ah     ; prepare for input
mov dx, offset inputBuffer ; point to buffer to store input
int 21h         ; call interrupt to read input

; Check if input is a number
mov al, inputBuffer+1    ; store input's first character in al
cmp al, '0'              ; compare with ASCII code for '0'
jb invalidInput         ; if input is less than '0' jump to invalidInput
cmp al, '9'              ; compare with ASCII code for '9'
ja invalidInput         ; if input is greater than '9' jump to invalidInput
validInput:
; Perform calculation
mov bl, buffer+3        ; store second input character in bl
sub bl, 30              ; subtract ASCII code for '0'
mov cl, inputBuffer+1    ; store first input character in cl
sub cl, 30              ; subtract ASCII code for '0'
mul bl                  ; multiply first and second number
mov ah, 0                ; clear ah
add ah, cl              ; add first number to result

; Output result to screen
mov dl, ah              ; store result in dl
add dl, 30              ; convert to ASCII code
mov ah, 02              ; prepare for output
int 21h                 ; call interrupt to display result
jmp end

invalidInput:          ; handle if input is not a number
mov dx, offset errorMessage
mov ah, 09              ; prepare for output
int 21h                 ; call interrupt to display error message
end:
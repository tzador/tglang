section .data ;declaring a section for data
    hello_msg db 'Hello World!', 0xA, 0xD, '$' ;storing the message 'Hello World!' along with line feed and carriage return characters
    num1 dd 10 ;declaring a double word variable with value 10
    num2 dd 20 ;declaring a double word variable with value 20
    result dd 0 ;declaring a double word variable to store the result
section .text ;declaring a section for code
    global _start ;defining global label for entry point
_start: ;entry point for program
    mov eax, num1 ;moving the value of num1 to the eax register
    add eax, num2 ;adding the value of num2 to the eax register
    mov result, eax ;moving the value of eax to the result variable
    mov eax, 4 ;selecting the system call for 'print string'
    mov ebx, 1 ;selecting the file descriptor for standard output
    mov ecx, hello_msg ;moving the address of hello_msg to the ecx register
    mov edx, 14 ;moving the length of message to be printed to the edx register
    int 0x80 ;calling the system interrupt to perform the desired operation
    mov eax, 4 ;selecting the system call for 'print integer'
    mov ebx, 1 ;selecting the file descriptor for standard output
    mov ecx, result ;moving the address of result variable to the ecx register
    mov edx, 4 ;moving the length of number to be printed to the edx register
    int 0x80 ;calling the system interrupt to perform the desired operation
    mov eax, 1 ;selecting the system call for 'exit'
    xor ebx, ebx ;clearing the ebx register, indicating successful program execution
    int 0x80 ;calling the system interrupt to perform the desired operation
.DATA
; define variables
number DW 1234 ; a 2-byte variable, initial value is 1234
sum DW ? ; a 2-byte variable, initial value is empty

; code segment
.CODE
main PROC
; load variable values into registers
MOV AX, number ; move number into AX register
MOV BX, sum ; move sum into BX register

; perform addition
ADD AX, BX ; add AX and BX registers
JC overflow ; jump to overflow if overflow occurs

; store final sum in variable
MOV sum, AX ; move AX register into sum variable

; exit program
exit:
MOV AH, 0 ; move 0 into AH register
INT 20H ; call interrupt 20H to terminate program

; handle overflow
overflow:
MOV sum, 0 ; move 0 into sum variable to handle overflow
JMP exit ; jump to exit to terminate program

main ENDP ; end of main procedure
END main ; end of program
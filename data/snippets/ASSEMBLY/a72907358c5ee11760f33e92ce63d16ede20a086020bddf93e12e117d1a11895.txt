; Initialize variables
.data 
  array1 db 10, 20, 30, 40 ; Define an array with 4 elements of type byte
  array2 dw 1000h, 2000h, 3000h ; Define an array with 3 elements of type word
  array3 dd 1000000000, 2000000000 ; Define an array with 2 elements of type double word
  msg1 db "Hello, World!", 0 ; Define a null-terminated string
  
; Start code
.code 
  main:
    mov ax, @data ; Move data segment address to ax register
    mov ds, ax ; Load data segment address into ds register
    
    ; Loop through first array and print each element
    mov cx, 4 ; Set counter to 4 (4 elements in array1)
    mov si, offset array1 ; Move array1's address to the si register
    
  print_array1:
    mov ah, 02h ; Set print function to be interrupt 02h
    mov dl, [si] ; Move first element of array1 to dl register
    add dl, '0' ; Convert from byte to ASCII code
    int 21h ; Print character
    mov ah, 02h ; Set print function to be interrupt 02h
    mov dl, ',' ; Move comma character to dl register
    int 21h ; Print character
    inc si ; Increment si to point to next element
    loop print_array1 ; Loop until cx reaches 0
    
    ; Loop through second array and print each element
    mov cx, 3 ; Set counter to 3 (3 elements in array2)
    mov si, offset array2 ; Move array2's address to si register
    
  print_array2:
    mov ah, 02h ; Set print function to be interrupt 02h
    mov dx, [si] ; Move first element of array2 to dx register
    add dx, '0' ; Convert from word to ASCII code
    int 21h ; Print character
    mov ah, 02h ; Set print function to be interrupt 02h
    mov dl, ',' ; Move comma character to dl register
    int 21h ; Print character
    inc si ; Increment si to point to next element
    loop print_array2 ; Loop until cx reaches 0
    
    ; Loop through third array and print each element
    mov ecx, 2 ; Set counter to 2 (2 elements in array3)
    mov esi, offset array3 ; Move array3's address to esi register
    
  print_array3:
    mov ah, 02h ; Set print function to be interrupt 02h
    mov edx, [esi] ; Move first element of array3 to edx register
    add edx, '0' ; Convert from double word to ASCII code
    int 21h ; Print character
    mov ah, 02h ; Set print function to be interrupt 02h
    mov dl, ',' ; Move comma character to dl register
    int 21h ; Print character
    add esi, 4 ; Increment esi to point to next element (4 bytes for double word)
    loop print_array3 ; Loop until ecx reaches 0
    
    ; Print null-terminated string
    mov ah, 09h ; Set print function to be interrupt 09h
    mov dx, offset msg1 ; Move msg1's address to dx register
    int 21h ; Print string
    
    ; Exit program
    mov ah, 4Ch ; Set exit function to be interrupt 4Ch
    int 21h ; Exit program and return exit code
    
; End code
end main
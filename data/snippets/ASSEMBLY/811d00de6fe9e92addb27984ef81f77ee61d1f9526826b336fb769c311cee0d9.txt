;This code snippet calculates the sum of two numbers using Assembly language

    .data ;section for initialized data

    num1        db      5       ;variable to hold the first number, stored as a single byte
    num2        db      7       ;variable to hold the second number, stored as a single byte
    result      db      0       ;variable to hold the result of the sum, stored as a single byte

    .text ;section for code

    .globl _start ;global declaration for the entry point of the program
    _start: ;label for the entry point

        mov     al, [num1]      ;move the value of num1 into the al register
        mov     bl, [num2]      ;move the value of num2 into the bl register
        add     al, bl          ;add the values of al and bl and store the result in al
        mov     [result], al    ;move the value of al into the result variable

        ;conversion from decimal to ASCII for printing
        add     al, '0'         ;add the ASCII code for 0 to the value of al
        mov     [result], al    ;move the ASCII value into the result variable
        xor     ah, ah          ;clear the ah register
        mov     [result + 1], ah ;set the second byte of result to 0 (end of string)

        ;write the result to stdout
        mov     eax, 4          ;sys_write syscall number
        mov     ebx, 1          ;file handle for stdout
        mov     ecx, result     ;pointer to the result variable
        mov     edx, 2          ;length of string to print
        int     0x80            ;interrupt to invoke the syscall

        ;exit the program
        mov     eax, 1          ;sys_exit syscall number
        xor     ebx, ebx        ;exit status code 0
        int     0x80            ;interrupt to invoke the syscall
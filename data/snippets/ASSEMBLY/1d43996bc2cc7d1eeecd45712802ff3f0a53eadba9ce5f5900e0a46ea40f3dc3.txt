; This code snippet calculates the factorial of a number using recursion
; Input: n
; Output: factorial(n)

section .text

global _start
_start:
    ; Take input from user
    mov ebx, [input]
    
    ; Check if input is less than 2
    cmp ebx, 2
    jl factorial_one
    
    ; Calculate factorial if input is equal to or greater than 2
    dec ebx ; Decrement input by 1
    push ebx ; Push input onto stack
    call factorial ; Call recursive function
    add esp, 4 ; Adjust stack pointer
    
    ; Store result in the output variable
    mov [output], eax
    
    jmp end
    
factorial_one:
    ; If input is less than 2, output is simply 1
    mov [output], 1
    
end:
    ; Exit program
    mov eax, 1
    int 0x80
    
; Recursive function to calculate factorial
factorial:
    push ebp ; Save base pointer
    mov ebp, esp ; Set base pointer
    push ebx ; Save input
    
    ; Check if input is equal to 0
    cmp ebx, 0
    je end_factorial
    
    mov eax, ebx ; Move input into eax
    
    ; Decrement input by 1 and call recursive function
    dec eax
    push eax
    call factorial
    add esp, 4
    
    ; Multiply result by input and return
    pop ebx
    imul ebx
    
end_factorial:
    ; Restore stack and base pointer
    pop ebp
    ret
    
section .bss
    ; Define input and output variables
    input resd 1
    output resd 1
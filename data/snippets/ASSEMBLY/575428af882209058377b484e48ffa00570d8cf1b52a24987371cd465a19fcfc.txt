; This code snippet initializes a 2D array and performs matrix multiplication
; Declaring the variables
DIMN EQU 4                      ; size of the matrix
matrix1 DB 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ; first matrix
matrix2 DB 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 ; second matrix
result DB 16 DUP(0)               ; result matrix

; Initializing the arrays
INITIALIZE:
  mov cx, DIMN                     ; set loop counter to size of matrix
  mov di, 0                        ; set index for first matrix to 0
  mov si, 0                        ; set index for second matrix to 0

  ; Loop over rows of first matrix
  ROW1:
    mov bx, 0                      ; reset index for second matrix to 0

    ; Loop over columns of second matrix
    COL2:
      mov al, matrix1[di]          ; load value from first matrix
      mov bl, matrix2[bx]          ; load value from second matrix
      imul al, bl                  ; perform multiplication
      add result[di], al           ; add to result matrix
      inc bx                        ; increment index for second matrix
  inc di                            ; increment index for first matrix
  loop ROW1                         ; loop until all rows have been processed

; Printing the result
PRINT_RESULT:
  mov di, 0                        ; reset index for result matrix
  mov cx, DIMN                     ; set loop counter to size of matrix

  ; Loop over rows of result matrix
  ROW3:
    mov si, 0                      ; reset index for rows
    mov ah, 09H                    ; set print function to print character
    mov dl, 0AH                    ; move to next line
    int 21H                        ; print new line

  ; Loop over columns of result matrix
  COL3:
    mov al, result[di]             ; load value from result matrix
    add al, 30H                    ; convert to ASCII character
    mov dl, al                     ; store value to print
    int 21H                        ; print character
    inc di                         ; increment index for result matrix
  loop COL3                        ; loop until all columns have been printed
  inc si                           ; increment index for rows
loop ROW3                           ; loop until all rows have been printed

; End of program
ret
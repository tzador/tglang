; This is a code snippet in assembly language
; It calculates the factorial of a number input by the user from the console
; First section defines variables and labels
section .data
  number DB			; variable to store user input
  result DW			; variable to store factorial result
  msg_1 DB 'Enter a number: '	; prompt message
  msg_2 DB 'Factorial of '	; message to display result
  result_fmt DB '%d', 10		; format string to display result
section .text
  global _start			; entry point for program
  _start:
    ; display prompt to enter a number
    mov eax, 4			; system call for printing to console
    mov ebx, 1			; file descriptor for console
    mov ecx, msg_1		; message to print
    mov edx, 14			; length of message
    int 0x80			; interrupt to make system call
    
    ; read user input from console
    mov eax, 3			; system call for reading from console
    mov ebx, 0			; file descriptor for console
    mov ecx, number		; variable to store input
    mov edx, 1			; length of input
    int 0x80			; interrupt to make system call
    
    ; convert input to integer
    mov eax, 0			; clear accumulator
    mov al, [number]		; store input in accumulator
    sub al, 48			; subtract ASCII value of '0'
    
    ; calculate factorial
    mov ebx, eax		; copy input to ebx
    mov ecx, eax		; copy input to ecx
    dec ecx			; decrement ecx by 1 (ecx = n-1)
    mov eax, 1			; set accumulator to 1
  loop:
    mul ecx			; multiply accumulator by ecx
    dec ecx			; decrement ecx by 1
    cmp ecx, 1			; compare ecx with 1
    jge loop			; jump to loop if ecx >= 1
    mov [result], ax		; store result in variable
    
    ; display result
    mov eax, 4			; system call for printing to console
    mov ebx, 1			; file descriptor for console
    mov ecx, msg_2		; message to print
    mov edx, 13			; length of message
    int 0x80			; interrupt to make system call
    
    ; convert result to string
    mov eax, 0			; clear accumulator
    mov al, [result]		; store result in accumulator
    add al, 48			; add ASCII value of '0'
    
    ; display result
    mov eax, 4			; system call for printing to console
    mov ebx, 1			; file descriptor for console
    mov ecx, result_fmt		; format string to print
    mov edx, 3			; length of format string
    int 0x80			; interrupt to make system call
    
    ; exit program
    mov eax, 1			; system call for exit
    mov ebx, 0			; exit code
    int 0x80			; interrupt to make system call
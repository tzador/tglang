; A complex code snippet in Assembly language
; This snippet calculates the sum of two numbers and stores the result in a specific register

section .data ; Declaring a section for initializing data
    num1 db 10 ; Declaring variable 'num1' and assigning a value of 10
    num2 db 20 ; Declaring variable 'num2' and assigning a value of 20
    result db 0 ; Declaring variable 'result' and initializing it to 0

section .text ; Declaring a section for code

global _start ; Global label for the entry point of the program

_start: ; Program execution starts here

    mov al, byte [num1] ; Moving the value of 'num1' into register 'al'
    add al, byte [num2] ; Adding the value of 'num2' to the value in 'al'
    mov byte [result],al ; Moving the result in 'al' to the variable 'result'

    ; Printing the result on the screen
    mov ah, 0x0e ; Setting the output mode for screen printing
    mov al, [result] ; Moving the value of 'result' into register 'al'
    add al, '0' ; Converting the value to a printable character
    int 0x10 ; Calling BIOS interrupt for screen output

    ; Exiting the program
    mov ah, 0x4c ; Setting the exit function
    xor al, al ; Clearing the register 'al'
    int 0x21 ; Calling the DOS interrupt for program termination
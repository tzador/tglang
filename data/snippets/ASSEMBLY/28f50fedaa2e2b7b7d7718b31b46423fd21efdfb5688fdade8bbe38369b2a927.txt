section .text ; Start of the .text section

global _start ; Declaring the '_start' label as global

; First print message
mov eax, 4 ; System call number for 'write'
mov ebx, 1 ; File descriptor for 'stdout'
mov ecx, msg1 ; Pointer to message
mov edx, len1 ; Length of message
int 0x80 ; Execute system call

; Second print message
mov eax, 4 ; System call number for 'write'
mov ebx, 1 ; File descriptor for 'stdout'
mov ecx, msg2 ; Pointer to message
mov edx, len2 ; Length of message
int 0x80 ; Execute system call

; Third print message
mov eax, 4 ; System call number for 'write'
mov ebx, 1 ; File descriptor for 'stdout'
mov ecx, msg3 ; Pointer to message
mov edx, len3 ; Length of message
int 0x80 ; Execute system call

; Exit program
mov eax, 1 ; System call number for 'exit'
xor ebx, ebx ; Exit status code
int 0x80 ; Execute system call

section .data ; Start of the .data section

msg1 db "Hello", 0xa, 0xd ; First message to print
len1 equ $- msg1 ; Length of first message

msg2 db "from", 0xa, 0xd ; Second message to print
len2 equ $- msg2 ; Length of second message

msg3 db "Assembly!", 0xa, 0xd ; Third message to print
len3 equ $- msg3 ; Length of third message
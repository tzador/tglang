.section .text
.global _start

_start:
    # initialize stack pointer
    mov $0x10000, %rsp

    # declare variables
    mov $5, %rax # store number 5 in register rax

    # calculate square of the number 
    imul %rax, %rax # multiply rax by itself to get square

    # print result
    mov $1, %rdi # set file descriptor to stdout
    mov $0, %rax # set system call number to write
    mov %rax, %rbx # save result in rbx for printing
    mov $1, %rcx # set buffer to location of result in rbx
    mov $8, %rdx # set length of data to print
    syscall # make system call

    # exit program
    mov $0, %rax # set system call number to exit
    syscall # make system call
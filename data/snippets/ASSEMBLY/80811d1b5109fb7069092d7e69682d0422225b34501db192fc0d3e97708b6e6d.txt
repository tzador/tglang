; Initialize variables
        MOV AX, 00H ; Move value at memory address 00H into AX register
        MOV BX, 00H ; Move value at memory address 00H into BX register
        MOV CX, 00H ; Move value at memory address 00H into CX register
        MOV DX, 00H ; Move value at memory address 00H into DX register
        
        ; Start loop
LOOP:   INC AX      ; Increment value in AX register
        INC BX      ; Increment value in BX register
        ADD CX, BX  ; Add value in BX register to CX register
        SUB DX, BX  ; Subtract value in BX register from DX register
        DEC DX      ; Decrement value in DX register
        JNZ LOOP    ; Jump back to LOOP if value in DX register is not zero
        
        ; Output result
        MOV AH, 02H ; Set output function to display character
        MOV DL, AL  ; Move value in AL register (AX's lower half) to DL register
        ADD DL, 30H ; Convert DL to ASCII digit by adding 30H
        INT 21H     ; Call interrupt to display character in DL register
        
        MOV DL, BL  ; Move value in BL register (BX's lower half) to DL register
        ADD DL, 30H ; Convert DL to ASCII digit by adding 30H
        INT 21H     ; Call interrupt to display character in DL register
        
        MOV DL, CH  ; Move value in CH register (CX's lower half) to DL register
        ADD DL, 30H ; Convert DL to ASCII digit by adding 30H
        INT 21H     ; Call interrupt to display character in DL register
        
        MOV DL, DH  ; Move value in DH register (DX's lower half) to DL register
        ADD DL, 30H ; Convert DL to ASCII digit by adding 30H
        INT 21H     ; Call interrupt to display character in DL register
        
        ; Halt program
        MOV AH, 4CH ; Set exit function
        INT 21H     ; Call interrupt to exit program
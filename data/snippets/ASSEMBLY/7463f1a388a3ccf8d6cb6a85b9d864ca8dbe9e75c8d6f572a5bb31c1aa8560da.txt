; This code snippet calculates the factorial of a given number using recursion.

; Data section
    .data
num dw 5               ; The number whose factorial is to be calculated
fact dw 1              ; Factorial variable initialized to 1

; Code section
    .code
    .startup
start:
    mov cx, num         ; Move the value of num into the CX register
    jcxz end            ; If the value of CX is zero, jump to the end label
    call factorial      ; Call the function factorial
    mov fact, ax        ; Move the result of factorial into the fact variable
    jmp end             ; Jump to the end label

factorial proc
    cmp cx, 1           ; Compare the value of CX with 1
    jne recurse         ; If not equal, jump to the recurse label
    ret                 ; Otherwise, return
recurse:
    push cx             ; Push the value of CX onto the stack
    dec cx              ; Decrement the value of CX
    call factorial      ; Recursive call to the factorial function
    pop cx              ; Pop the value of CX from the stack
    mul cx              ; Multiply the value of AX (returned from previous recursion) with CX
    ret                 ; Return from the current function call
factorial endp

end:
    ; You can now use the value of fact for further calculations or output it to the screen

    .exit               ; Exit the program
    end start           ; End of program entry point

; Example output:
;
; If num = 5:
; The output stored in fact will be 120, which is the factorial of 5.
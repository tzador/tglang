; get the user input and store in a register
MOV EAX, [INPUT]

; check if input is a valid integer
CMP EAX, 0
JL invalid         ; jump if input is less than 0
JG invalid         ; jump if input is greater than 0
JE valid           ; jump if input is equal to 0

invalid:
    ; print error message
    MOV EBX, error_message  ; move memory address of error message to EBX
    PRINT EBX               ; print the error message
    JMP exit                ; jump to exit

valid:
    ; calculate the factorial of input number
    MOV ECX, 1              ; counter for loop
    MOV ESI, 1              ; factorial result
    LOOP:
        MUL ECX             ; multiply factorial by counter
        INC ECX             ; increment counter
        CMP ECX, EAX        ; compare counter to input
        JLE LOOP            ; jump back to LOOP if counter is less than or equal to input

    ; print the factorial result
    MOV EBX, result         ; move memory address of result to EBX
    PRINT EBX               ; print the factorial result

exit:
    ; exit the program
    MOV EAX, 1              ; set system call number for exit
    INT 0x80                ; invoke system call

.section .data
    INPUT db "Enter a number: ", 0xa, 0xd, 0
    result db "The factorial is: ", 0xa, 0xd, 0
    error_message db "Invalid input!", 0xa, 0xd, 0
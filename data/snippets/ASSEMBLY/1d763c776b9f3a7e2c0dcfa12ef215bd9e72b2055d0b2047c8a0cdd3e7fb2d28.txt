; Sample code snippet in assembly language

; Define variables
SECTION .data ; data section
x db 10 ; variable 'x' stored in data section and initialized to 10
y db 20 ; variable 'y' stored in data section and initialized to 20

; Code section
SECTION .text ; code section
global _main ; declare main function as global

_main: ; main function
; mov instruction - used to move data between registers, memory, and immediate values
mov eax, [x] ; move value of 'x' into register 'eax'
mov ebx, [y] ; move value of 'y' into register 'ebx'
add eax, ebx ; add values in registers 'eax' and 'ebx'
mov [sum], eax ; move result into variable 'sum'

exit: ; exit label
mov eax, 1 ; exit syscall number
mov ebx, 0 ; exit status code
int 0x80 ; system call interrupt

; Define data section for storing result
SECTION .bss ; uninitialized data section
sum resb 1 ; variable 'sum' stored in bss section, reserve 1 byte for storage

; End of snippet
section .text          ; section declaration

global _start          ; entry point for linker

_start:                ; code label

    ; function to add two numbers (5 and 10)

    mov eax, 5         ; move first number (5) into eax register
    mov ebx, 10        ; move second number (10) into ebx register
    add eax, ebx       ; add ebx register value to eax register
    mov [result], eax  ; move result from eax register to memory location 'result'

    ; function to subtract two numbers (15 and 3)

    mov eax, 15         ; move first number (15) into eax register
    mov ebx, 3          ; move second number (3) into ebx register
    sub eax, ebx        ; subtract ebx register value from eax register
    mov [result2], eax  ; move result from eax register to memory location 'result2'

    ; function to multiply two numbers (6 and 8)

    mov eax, 6          ; move first number (6) into eax register
    mov ebx, 8          ; move second number (8) into ebx register
    mul ebx             ; multiply eax register value by ebx register
    mov [result3], eax  ; move result from eax register to memory location 'result3'

    ; function to divide two numbers (12 and 4)

    mov eax, 12         ; move first number (12) into eax register
    mov ebx, 4          ; move second number (4) into ebx register
    div ebx             ; divide eax register value by ebx register
    mov [result4], eax  ; move result from eax register to memory location 'result4'

    ; exit program

    mov eax, 1          ; system call for exit
    mov ebx, 0          ; exit status code (0 for successful execution)
    int 0x80            ; interrupt to make system call

section .data          ; section declaration for data variables

result dd 0            ; reserve space for result variable
result2 dd 0           ; reserve space for result2 variable
result3 dd 0           ; reserve space for result3 variable
result4 dd 0           ; reserve space for result4 variable
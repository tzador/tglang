; This program calculates the sum of a series of numbers entered by the user 
; and prints the result 
; Note: This program is written for x86 architecture 

section .data 
    ; Variable to store the sum 
    sum db 0 

section .bss 
    ; Variable to store the input 
    input resb 1 

section .text 
    global _start 

_start: 
    ; Print a message asking for the number of inputs 
    mov eax, 4 
    mov ebx, 1 
    mov ecx, input_prompt 
    mov edx, input_prompt_len 
    int 80h 

    ; Read the number of inputs from the user 
    mov eax, 3 
    mov ebx, 0 
    mov ecx, input 
    mov edx, 1 
    int 80h 

    ; Convert the number of inputs from ASCII to integer 
    mov eax, 0 
    mov al, [input] 
    sub al, '0' 

    ; Store the number of inputs in a register 
    mov ebx, eax 

    ; Initialize a counter 
    mov ecx, 0 

    ; Loop to read and sum the inputs 
    loop: 
        ; Print a message asking for the next input 
        mov eax, 4 
        mov ebx, 1 
        mov ecx, next_input_prompt 
        mov edx, next_input_prompt_len 
        int 80h 

        ; Read the next input from the user 
        mov eax, 3 
        mov ebx, 0 
        mov ecx, input 
        mov edx, 1 
        int 80h 

        ; Convert the input from ASCII to integer 
        mov eax, 0 
        mov al, [input] 
        sub al, '0' 

        ; Add the input to the sum 
        add [sum], eax 

        ; Increment the counter 
        inc ecx 

        ; Check if all inputs have been read 
        cmp ecx, ebx 
        jne loop 

    ; Convert the sum from integer to ASCII 
    mov eax, [sum] 
    add al, '0' 

    ; Store the result in a variable 
    mov [result], eax 

    ; Print the result 
    mov eax, 4 
    mov ebx, 1 
    mov ecx, result_msg 
    mov edx, result_msg_len 
    int 80h 

    ; Exit the program 
    mov eax, 1 
    mov ebx, 0 
    int 80h 

section .data 
    ; Messages 
    input_prompt db "Enter the number of inputs: ", 0xa 
    input_prompt_len equ $ - input_prompt 

    next_input_prompt db "Enter the next input: ", 0xa 
    next_input_prompt_len equ $ - next_input_prompt 

    result_msg db "The sum of the inputs is: ", 0xa 
    result_msg_len equ $ - result_msg 

section .bss 
    ; Variables 
    result resb 1
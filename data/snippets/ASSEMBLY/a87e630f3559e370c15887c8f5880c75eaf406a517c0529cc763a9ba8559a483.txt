; This code snippet demonstrates a bubble sort algorithm in Assembly language
; It uses the x86 architecture and registers

section .data ; Defines the section for data
    array dw 10, 5, 49, 23, 1 ; Array of numbers to be sorted
    len equ ($ - array)/2 ; Defines the length of the array

section .text ; Defines the section for code
    global _start ; Declares the entry point for the code

_start: ; Entry point for the code
    mov ecx, len ; Move the length of the array to the ecx register
    dec ecx ; Decrement the counter for every iteration
    
outer_loop: ; Label for the outer loop
    mov esi, 0 ; Move the starting index to the esi register
    mov edi, 1 ; Move the next index to the edi register
    
inner_loop: ; Label for the inner loop
    mov ax, [array + esi*2] ; Move the value at the current index to the ax register
    cmp ax, [array + edi*2] ; Compare it with the value at the next index
    jg swap ; Jump to the swap routine if ax is greater than [array + edi*2]
    inc esi ; Increment the starting index
    inc edi ; Increment the next index
    cmp edi, ecx ; Compare the next index with the length of the array
    jl inner_loop ; Jump back to the inner loop if the next index is less than the length of the array
    
    dec ecx ; Decrement the counter
    cmp ecx, 0 ; Compare the counter with 0
    jne outer_loop ; Jump back to the outer loop if the counter is not equal to 0
    jmp exit ; Jump to the exit routine if the counter is equal to 0
    
swap: ; Label for the swap routine
    mov bx, [array + esi*2] ; Move the value at the current index to the bx register
    xchg bx, [array + edi*2] ; Exchange the values at the current and next index
    mov [array + esi*2], bx ; Move the new value back to the array
    jmp inner_loop ; Jump back to the inner loop
    
exit: ; Label for the exit routine
    mov eax, 1 ; Move the exit code into the eax register
    xor ebx, ebx ; Clear the ebx register
    int 0x80 ; Call the Linux system call to exit
    
section .bss ; Defines the section for uninitialized data

; No data or variables used in this code snippet in the .bss section
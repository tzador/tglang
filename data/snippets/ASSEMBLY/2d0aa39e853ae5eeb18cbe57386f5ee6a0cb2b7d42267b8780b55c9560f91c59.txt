section .data ; Declare data section
    message db 'Hello, world!', 0xA ; Declare message to be printed with newline character
    num1 dd 10 ; Declare first number variable
    num2 dd 20 ; Declare second number variable
    result dd 0 ; Declare result variable to store sum of num1 and num2

section .text ; Declare code section
    global _start ; Define global entry point
_start: ; Start of program
    mov eax, num1 ; Move first number into eax register
    add eax, num2 ; Add second number to eax register
    mov result, eax ; Move result from eax into result variable
    mov eax, 4 ; System call number for 'write'
    mov ebx, 1 ; File descriptor for standard output
    mov ecx, message ; Move message address into ecx register
    mov edx, 14 ; Length of message in bytes
    int 0x80 ; Call operating system to print message
    mov eax, 4 ; System call number for 'write'
    mov ebx, 1 ; File descriptor for standard output
    mov ecx, result ; Move result address into ecx register
    mov edx, 4 ; Length of result in bytes
    int 0x80 ; Call operating system to print result
    mov eax, 1 ; System call number for 'exit'
    xor ebx, ebx ; Exit status code of 0
    int 0x80 ; Call operating system to exit program
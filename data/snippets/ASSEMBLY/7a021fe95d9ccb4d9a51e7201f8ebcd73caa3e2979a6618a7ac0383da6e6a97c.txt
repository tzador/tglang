; Begin commenting section
    .data           ; indicates that the following section contains data values
msg db 'Hello world!', 0xa, 0xd ; msg is a variable containing the string "Hello world!" with a new line and carriage return at the end
len equ $-msg            ; equ directive sets len equal to the current location ($ symbol) minus the starting location of msg, giving the length of the string
    .text           ; indicates that the following section contains code or instructions
    .global _start  ; indicates that _start is a global label so it can be accessed from other modules
_start:             ; start of code section
    nop             ; no operation, used as placeholder
    movl $4, %eax   ; move the system call number 4 (sys_write) to the eax register
    movl $1, %ebx   ; move the file descriptor number 1 (stdout) to the ebx register
    movl $msg, %ecx ; move the starting location of msg to the ecx register, the first parameter for sys_write
    movl $len, %edx ; move the length of msg to the edx register, the second parameter for sys_write
    int $0x80       ; interrupt to make system call, in this case sys_write with the parameters in the registers
    movl $1, %eax   ; move the system call number 1 (sys_exit) to the eax register
    xorl %ebx, %ebx ; xor operation to set ebx register to 0, the exit code parameter for sys_exit
    int $0x80       ; interrupt to make system call, in this case sys_exit with the parameters in the registers

; End commenting section
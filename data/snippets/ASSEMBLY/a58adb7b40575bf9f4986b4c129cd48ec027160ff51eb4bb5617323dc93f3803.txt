.section .data
    msg1 db "Hello", 0x0a, "World!", 0x0a, 0x00   ; string with line breaks and null terminator
    msg2 db "This is a longer message", 0x0a, "with more elements", 0x0a, "to demonstrate", 0x0a, "multiple lines", 0x0a, "of text", 0x0a, 0x00  ; another string with multiple line breaks and null terminator

.section .bss
    buffer resb 256       ; reserve 256 bytes in the memory for the buffer

.section .text
    global _start
    extern printf        ; call the C function printf

_start:
    mov eax, msg1         ; move the address of msg1 into eax
    push eax              ; push the address onto the stack for printf
    call printf           ; call printf to print the string
    add esp, 4            ; adjust the stack pointer by 4 bytes after the call

    mov eax, msg2         ; move the address of msg2 into eax
    push eax              ; push the address onto the stack for printf
    call printf           ; call printf to print the string
    add esp, 4            ; adjust the stack pointer by 4 bytes after the call

    mov eax, 1            ; set eax to the exit syscall number
    xor ebx, ebx          ; set ebx to 0, indicating success
    int 0x80              ; execute the syscall
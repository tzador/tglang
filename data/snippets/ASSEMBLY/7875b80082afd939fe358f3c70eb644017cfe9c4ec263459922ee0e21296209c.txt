; This code snippet takes two numbers as input and outputs their sum

; Declare variables
num1 dd 0 ; First number, stored as a double word (32 bits)
num2 dd 0 ; Second number, stored as a double word (32 bits)

; Input section
mov eax, 3 ; Move the value 3 to the accumulator register
mov [num1], eax ; Store the value of the accumulator in the variable num1

; Prompt for user input
mov eax, 4 ; Move the value 4 to the accumulator register
mov ebx, 0 ; Move the value 0 to the base register (for standard input)
mov ecx, num2 ; Move the address of num2 to the count register (for reading in user input)
mov edx, 4 ; Move the value 4 to the data length register (reading in 4 bytes)
int 0x80 ; Invoke the system call to read in user input

; Calculation section
mov eax, [num1] ; Move the value of num1 to the accumulator register
add eax, [num2] ; Add the value of num2 to the accumulator register
mov [result], eax ; Store the sum in the variable result

; Output section
mov eax, 1 ; Move the value 1 to the accumulator register (for system call to print)
mov ebx, 1 ; Move the value 1 to the base register (for standard output)
mov ecx, result ; Move the address of the result variable to the count register (for printing)
mov edx, 4 ; Move the value 4 to the data length register (printing 4 bytes)
int 0x80 ; Invoke the system call to print the result

; End of program
mov eax, 1 ; Move the value 1 to the accumulator register (for system call to exit)
xor ebx, ebx ; Clear the base register (no error code)
int 0x80 ; Invoke the system call to exit the program

num1 dd ? ; Reserves 4 bytes of memory for the num1 variable
num2 dd ? ; Reserves 4 bytes of memory for the num2 variable
result dd ? ; Reserves 4 bytes of memory for the result variable
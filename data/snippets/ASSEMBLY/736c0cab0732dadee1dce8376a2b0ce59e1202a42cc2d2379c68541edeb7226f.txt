DATA SEGMENT
    ; Define a data segment for holding variables and constants
    
    msg DB 'Hello World!',0x0A,'$'
    ; Define a string variable msg to hold the string 'Hello World!'
    
    num DW 5
    ; Define a word-sized variable named num with initial value 5
    
    arr DB 1,2,3,4,5
    ; Define an array named arr with 5 elements
    
    DATA ENDS
    ; End of data segment
    
    CODE SEGMENT
    ; Define a code segment for writing instructions
    
    START:
    ; Start of code segment
    
    MOV AX, @DATA
    ; Move the address of the data segment to AX register
    
    MOV DS, AX
    ; Move the address of the data segment to Data Segment register
    
    MOV AH,09H
    ; Move the ascii code for printing to AH register
    
    LEA DX, msg
    ; Load the address of variable msg to DX register
    
    INT 21H
    ; Call the interrupt 21H (perform a DOS function) to print 'Hello World!'
    
    MOV AH,01H
    ; Move the ascii code for getting input to AH register
    
    INT 21H
    ; Call the interrupt 21H to get input from user
    
    SUB AL, 48
    ; Subtract 48 from the input (since it is stored as ascii code) to get the actual value
    
    MOV BL, num
    ; Move the value of num (5) to BL register
    
    MOV CL, arr[0]
    ; Move the first element of arr (1) to CL register
    
    ADD CL, BL
    ; Add BL and CL (1 + 5) and store the result in CL register
    
    MOV ah, 02h
    ; Move the ascii code for printing to AH register
    
    ADD CL, 48
    ; Add 48 to CL to convert the result back to ascii code
    
    MOV dl, CL
    ; Move the result to DL register for printing
    
    INT 21H
    ; Call the interrupt 21H to print the result (6)
    
    MOV AH, 4CH
    ; Move the exit code to AH register
    
    INT 21H
    ; Call the interrupt 21H to exit the program
    
    CODE ENDS
    ; End of code segment
    
    END START
    ; End of program, return to DOS
; Multiply subroutine
; Input:
; r1 - first operand, r2 - second operand
; Output:
; r0 - result of multiplication

Multiply:
    PUSH  r0      ; save old result
    MOV   r0,#0   ; r0 = 0
    LOOP:
        LDR   r3,r1,#0   ; r3 = current digit of first operand
        LDR   r4,r2,#0   ; r4 = current digit of second operand
        CMP   r3,#0      ; check if end of operand is reached
        BEQ   End         ; if so, go to end of subroutine
        AND   r5,r4,#1   ; check if current digit of second operand is 1
        BEQ   Increment   ; if so, go to increment
        ADD   r0,r3,r0    ; else add current digit of first operand to result
        Increment:
            ADC   r1,#0     ; add carry from previous operation to first operand
        ROR   r2,#1      ; shift second operand to the right
        BRA   LOOP        ; go back to beginning of loop
    End:
    POP   r0          ; retrieve old result from stack
    RTS               ; return to main program
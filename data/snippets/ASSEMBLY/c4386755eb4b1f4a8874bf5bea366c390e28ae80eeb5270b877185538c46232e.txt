; This code snippet is written in Assembly language for
; the 6502 microprocessor.
; It is a basic program that prints the first ten Fibonacci numbers.

; Set stack pointer to $FF
ldx #$FF
txs

; Initialize counter
ldx #0
stx counter

; Initialize previous numbers in Fibonacci sequence
ldx #0
ldy #1
stx prev1
sty prev2

; Initialize first Fibonacci number as zero
ldx #0
stx first_fib

; Loop through ten iterations
loop: cmp counter, #10
beq end

; Calculate next Fibonacci number
lda prev1
clc
adc prev2
sta next_fib

; Print next Fibonacci number
lda next_fib
jsr print_num

; Update previous numbers
ldx prev2
ldy next_fib
stx prev1
sty prev2

; Update counter
ldx counter
inx
stx counter
jmp loop

end: rts

; Subroutine to print a number
print_num: sta $600 ; Store number in memory location $600
ldy #1 ; Set print location to $601
ldx $600 ; Load the number to print
loop2: and #$F ; Mask out most significant nibble
ora #$30 ; Add ASCII offset
sta $D021 ; Set character to print
ldx $600 ; Get remaining nibble
lsr ; Shift right to get next nibble
sta $600 ; Store it back in memory
iny ; Increment print location
cpy #$3 ; Check if all four digits have been printed
bne loop2
rts
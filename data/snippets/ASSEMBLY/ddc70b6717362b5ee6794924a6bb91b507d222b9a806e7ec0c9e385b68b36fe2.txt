;%define TRUE 1 ;defining constant TRUE as 1
;%define FALSE 0 ;defining constant FALSE as 0

section .text
global _start
_start: ;start label
  call check_input ;calling check_input function
  mov eax, 1 ;setting exit syscall number
  int 0x80 ;executing syscall
check_input: ;check_input function
  push ebp ;saving ebp register value
  mov ebp, esp ;setting ebp to current stack pointer
  sub esp, 4 ;allocating space for local variables
  mov ebx, [ebp+8] ;moving first argument to ebx
  mov ecx, [ebp+12] ;moving second argument to ecx
  xor edx, edx ;setting edx to 0 for comparison
  mov eax, ebx ;moving ebx to eax for comparison
  cmp eax, ecx ;comparing first and second arguments
  je equal ;jumping to equal label if equal
  jne not_equal ;jumping to not_equal label if not equal
equal: ;equal label
  mov eax, TRUE ;setting eax to TRUE
  jmp end_check ;jumping to end_check label
not_equal: ;not_equal label
  mov eax, FALSE ;setting eax to FALSE
end_check: ;end_check label
  add esp, 4 ;deallocating space for local variables
  mov esp, ebp ;setting esp back to initial stack pointer
  pop ebp ;restoring ebp register value
  ret ;returning to calling function
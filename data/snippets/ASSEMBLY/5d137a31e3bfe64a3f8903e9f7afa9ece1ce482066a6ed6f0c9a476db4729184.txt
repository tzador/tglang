.section .text
    .globl main
    
    main:
        # initialize variables
        movl $5, %eax           # move immediate value 5 into register eax
        movl $10, %ebx          # move immediate value 10 into register ebx
        movl $0, %ecx           # move immediate value 0 into register ecx

        # do calculation
        addl %eax, %ebx         # add eax and ebx and store in ebx
        subl %ebx, %ecx         # subtract ebx from ecx and store in ecx
        imull %eax, %ecx        # multiply eax and ecx and store in ecx

        # print output
        movl $1, %eax           # move immediate value 1 into register eax (sys_write)
        movl $1, %ebx           # move immediate value 1 (stdout) into register ebx
        leal output, %ecx       # load effective address of output into register ecx
        movl $12, %edx          # move length of output into register edx
        int $0x80               # system call to print string from ecx with length in edx
        movl $10, %eax          # move immediate value 10 (newline) into register eax
        movl $1, %ebx           # move immediate value 1 (stdout) into register ebx
        int $0x80               # system call to print newline

        # exit program
        movl $1, %eax           # move immediate value 1 into register eax (sys_exit)
        xorl %ebx, %ebx         # set ebx to 0 (return code)
        int $0x80               # system call to exit program

    .section .data
    output:
        .ascii "The result is: %d\n"  # string to print with result placeholder
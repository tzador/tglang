section .text ; declares the section of the code as text
global _start ; declares a global label for the program entry point

_start:

    ; print a hello world string
    mov rax, 1 ; moves the value 1 into the register rax, indicating the system call for "write"
    mov rdi, 1 ; moves the value 1 into the register rdi, indicating the file descriptor for standard output (stdout)
    mov rsi, message ; moves the address of our message variable into the register rsi, pointing to the string to be printed
    mov rdx, 13 ; moves the value 13 into the register rdx, indicating the length of the string to be printed
    syscall ; invokes the system call to print the string

    ; exit the program
    mov rax, 60 ; moves the value 60 into the register rax, indicating the system call for "exit"
    xor rdi, rdi ; moves the value 0 into the register rdi, indicating a successful exit status
    syscall ; invokes the system call to exit the program

section .data ; declares the section of the code as data
message db "Hello world!", 10 ; declares a string variable called "message" with the value "Hello world!" followed by a new line character (10)

section .bss ; declares the section of the code as uninitialized data
; any uninitialized variables or data can be declared here

section .rodata ; declares the section of the code as read-only data
; any constant data can be declared here, such as error messages or static values
section .data			;Defines a data section
num1: dd 25			;Defines and allocates 4 bytes for a variable named num1, with initial value of 25
num2: dd 10			;Defines and allocates 4 bytes for a variable named num2, with initial value of 10
result: dd 0			;Defines and allocates 4 bytes for a variable named result, with initial value of 0
msg1 db "The result is: %d", 10, 0	;Defines a null terminated string with the text "The result is: " followed by a new line character and null terminator
msg2 db "Addition completed", 10, 0	;Defines a null terminated string with the text "Addition completed" followed by a new line character and null terminator

section .text			;Defines a code section
global _start			;Makes the _start label visible to the linker

_start:				;Entry point of the program
mov eax, [num1]			;Moves the value of num1 into the EAX register
mov ebx, [num2]			;Moves the value of num2 into the EBX register
add eax, ebx			;Adds the values of EAX and EBX and stores the result in EAX
mov [result], eax		;Moves the value in EAX into the result variable
mov eax, 4			;System call number for 'sys_write'
mov ebx, 1			;File descriptor, 1 for standard output
mov ecx, msg1			;Pointer to the string msg1
mov edx, 15			;Length of the string
int 0x80			;Call the kernel to execute the system call

mov eax, 4			;System call number for 'sys_write'
mov ebx, 1			;File descriptor, 1 for standard output
mov ecx, msg2			;Pointer to the string msg2
mov edx, 17			;Length of the string
int 0x80			;Call the kernel to execute the system call

mov eax, 1			;System call number for 'sys_exit'
xor ebx, ebx			;Exit code, 0 indicates successful execution
int 0x80			;Call the kernel to execute the system call
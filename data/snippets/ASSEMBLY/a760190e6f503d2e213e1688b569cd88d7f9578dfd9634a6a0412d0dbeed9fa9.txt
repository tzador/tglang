.section .text
.global _start

.ascii "Hello, World!"  # prints the string "Hello, World!"
_start:
  # Function prologue
  push %ebp # save old frame pointer
  mov %esp, %ebp # setup new frame pointer
  sub $16, %esp # make space for local variables on stack
  # Function body
  movl $4, %eax # system call code for 'write'
  movl $1, %ebx # file descriptor for stdout
  movl $message, %ecx # address of message to print
  movl $13, %edx # length of message in bytes
  int $0x80 # call kernel
  # Function epilogue
  movl $0, %ebx # return value (success)
  movl $1, %eax # system call code for 'exit'
  int $0x80 # call kernel for program exit
.section .data
message: .ascii "Hello, World!\n" # string data to print
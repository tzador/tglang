;--------------------------------------------------------------------------- ; This is a comment line
DATA SEGMENT ; Starts the data segment
NUM_1 DB 10 ; Defines a byte variable with value 10
NUM_2 DW 20 ; Defines a word variable with value 20
NUM_3 DD 30 ; Defines a doubleword variable with value 30
DATA ENDS ; Ends the data segment

CODE SEGMENT ; Starts the code segment

    ASSUME CS:CODE, DS:DATA ; Sets the code and data segments as assumptions

START: ; The start label of the code
    MOV AX, DATA ; Moves the address of the data segment into AX register
    MOV DS, AX ; Moves the content of AX register into DS register

    MOV AL, NUM_1 ; Moves the value of NUM_1 variable into AL register
    MOV BL, NUM_2 ; Moves the value of NUM_2 variable into BL register

    ADD AL, BL ; Adds the values of AL and BL and stores the result in AL
    INC AL ; Increments the value of AL by 1

    ADD BL, NUM_3 ; Adds the value of NUM_3 variable to BL and stores the result in BL

    MOV NUM_1, AL ; Moves the value of AL into NUM_1 variable
    MOV NUM_2, BL ; Moves the value of BL into NUM_2 variable

    MOV CX, 5 ; Moves the value 5 into CX register
    MOV SI, 0 ; Sets the initial value of SI register to 0
LOOP_1: ; The start label of the loop
    INC SI ; Increment the value of SI by 1
    ADD NUM_1, CX ; Adds the value of CX to NUM_1 variable
    CMP SI, 5 ; Compares the value of SI with 5
    JNE LOOP_1 ; Jumps to label LOOP_1 if the values are not equal

    ; Prints the value of NUM_1 variable (output)
    MOV AH, 09H ; Sets the print function
    MOV DL, NUM_1 ; Moves the value of NUM_1 variable into DL register
    INT 21H ; Executes the print function

    MOV AH, 4CH ; Sets the exit function
    INT 21H ; Executes the exit function

CODE ENDS ; Ends the code segment

END START ; The end label of the code
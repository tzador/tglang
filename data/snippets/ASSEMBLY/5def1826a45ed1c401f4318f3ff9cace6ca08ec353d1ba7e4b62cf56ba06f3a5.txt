section .data ; declaring data section
    message db 'Hello, World!',10 ; storing a string in the message variable and using ASCII code for new line
    msgLen equ $-message ; storing the length of message in the msgLen variable (using special $ character to reference the current location)

section .text ; declaring text section
    global _start ; declaring _start as a public label (main function)
_start: ; starting point of the program

    ; outputting the message using system call write
    mov rax, 1 ; storing system call number for write in the rax register
    mov rdi, 1 ; storing file descriptor for standard output (1) in the rdi register
    mov rsi, message ; storing pointer to message variable in the rsi register
    mov rdx, msgLen ; storing length of message in the rdx register
    syscall ; executing the system call

    ; exiting the program using system call exit
    mov rax, 60 ; storing system call number for exit in the rax register
    xor rdi, rdi ; clearing out rdi register (exit status code)
    syscall ; executing the system call

; end of program
.section .text
entry:
    # Allocate stack space for variables
    push {r7, lr}
    sub sp, #8

    # Load values into registers
    ldr r0, =5
    ldr r1, =10
    ldr r2, =0

    # Check if r1 is divisible by r0
    mov r3, #1
    cmp r1, #0
    beq done

    loop:
        # Compare r1 and r0
        mov r4, r3
        mov r5, r0
        bl division_check

        # If divisible, add r0 to r2
        add r2, r2, r0
        
        # Decrement r1
        sub r1, #1
        
        # Branch back to loop if r1 is not 0
        bne loop

    done:
        # Print final result
        mov r0, #1
        b exit

    # Function to check if r1 is divisible by r0
    division_check:
        # Divide r1 by r0
        udiv r1, r1, r0

        # Check if remainder is 0
        cmp r1, #0
        beq divisible

        # If not divisible, return false
        mov r0, #0
        bx lr

    divisible:
        # If divisible, return true
        bx lr

.exit:
    # Clean up stack and return to main
    add sp, #8
    pop {r7, pc}
; This is a complex code snippet in ASSEMBLY language
; It performs a mathematical operation

    MOV AX, 4      ; Move the value 4 into register AX
    MOV BX, 2      ; Move the value 2 into register BX
    MUL BX         ; Multiply the contents of AX by the contents of BX
    MOV CX, AX     ; Move the result into register CX

    ; Print the result in the console
    MOV DX, CX     ; Move the value in CX into register DX
    MOV AH, 2      ; Set AH register to 2 to indicate we want to print
    INT 21h        ; Call interrupt 21h to print the value in DX

    ; Check if the result is greater than 10
    CMP CX, 10     ; Compare the value in CX to 10
    JG greater     ; If CX is greater than 10, jump to 'greater' label
    JL less        ; If CX is less than 10, jump to 'less' label
    JNE not_equal  ; If CX is not equal to 10, jump to 'not_equal' label
    JMP end        ; Jump to 'end' label to end the program if none of the above conditions are met

greater:
    ; Output a message if the result is greater than 10
    MOV AH, 9      ; Set AH register to 9 to indicate we want to print a string
    LEA DX, greater_msg  ; Load the message 'The result is greater than 10' into DX register
    INT 21h        ; Call interrupt 21h to print the message
    JMP end        ; Jump to 'end' label to end the program

less:
    ; Output a message if the result is less than 10
    MOV AH, 9      ; Set AH register to 9 to indicate we want to print a string
    LEA DX, less_msg      ; Load the message 'The result is less than 10' into DX register
    INT 21h        ; Call interrupt 21h to print the message
    JMP end        ; Jump to 'end' label to end the program

not_equal:
    ; Output a message if the result is not equal to 10
    MOV AH, 9      ; Set AH register to 9 to indicate we want to print a string
    LEA DX, not_equal_msg     ; Load the message 'The result is not equal to 10' into DX register
    INT 21h        ; Call interrupt 21h to print the message
    JMP end        ; Jump to 'end' label to end the program

end:
    ; End the program
    MOV AH, 0      ; Set AH register to 0 to indicate we want to exit the program
    INT 20h        ; Call interrupt 20h to exit the program

; Data section where we declare the messages to be printed
    greater_msg DB 'The result is greater than 10', 0Ah, 0Dh, '$'    ; 0Ah and 0Dh are line feed and carriage return characters, '$' is the string terminator
    less_msg DB 'The result is less than 10', 0Ah, 0Dh, '$'          ; 0Ah and 0Dh are line feed and carriage return characters, '$' is the string terminator
    not_equal_msg DB 'The result is not equal to 10', 0Ah, 0Dh, '$'  ; 0Ah and 0Dh are line feed and carriage return characters, '$' is the string terminator
; This is a comment line in Assembly language
section .text     ; Denotes the start of the program's code section
global _start     ; Marks the entry point of execution

_start:           ; Entry point for program execution
    ; Code to print a greeting message
    mov edx, len    ; Length of the greeting message
    mov ecx, msg    ; Pointer to the greeting message
    mov ebx, 1      ; Indicates standard output
    mov eax, 4      ; System call number for 'write'
    int 80h         ; Interrupt to perform system call

    ; Code to read user input
    mov edx, 20     ; Maximum number of characters to read
    mov ecx, buffer ; Buffer to store user input
    mov ebx, 0      ; Indicates standard input
    mov eax, 3      ; System call number for 'read'
    int 80h         ; Interrupt to perform system call

    ; Code to print user input
    mov edx, 20     ; Length of user input
    mov ecx, buffer ; Pointer to user input buffer (to be printed)
    mov ebx, 1      ; Indicates standard output
    mov eax, 4      ; System call number for 'write'
    int 80h         ; Interrupt to perform system call

    ; Code to exit program
    mov eax, 1      ; System call number for 'exit'
    xor ebx, ebx    ; Exit code 0
    int 80h         ; Interrupt to perform system call

section .data     ; Denotes the start of the program's data section
msg db 'Hello, world!',0xA ; Greeting message terminated with a new line character
len equ $ - msg   ; Calculates the length of the greeting message
buffer db 20      ; Buffer to store user input
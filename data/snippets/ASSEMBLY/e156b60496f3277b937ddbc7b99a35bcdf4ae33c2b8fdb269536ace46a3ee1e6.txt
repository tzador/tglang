; Assembles and links a simple "Hello, World!" program in Assembly

section .text       ; Defines the code section
    global _start   ; Tells linker it should start at _start label

_start:             ; Main program entry point
    mov eax, 4      ; Load 'write' syscall number into EAX
    mov ebx, 1      ; Load file descriptor for stdout into EBX
    mov ecx, msg    ; Load offset of message into ECX
    mov edx, len    ; Load length of message into EDX
    int 0x80        ; Execute syscall

    mov eax, 1      ; Load 'exit' syscall number into EAX
    xor ebx, ebx    ; Load exit code into EBX (0)
    int 0x80        ; Execute syscall

section .data       ; Defines the data section
    msg db 'Hello, World!', 10   ; Stores the message in memory
    len equ $ - msg              ; Calculates length of message

section .bss        ; Defines the uninitialized data section
    ; This section has no defined symbols or sizes
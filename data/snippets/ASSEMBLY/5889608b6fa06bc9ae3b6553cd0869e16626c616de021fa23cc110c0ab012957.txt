; This is a comment in assembly language 
; Declare variables at beginning of program 
MyVariable1 DB 2              ; Define a byte variable 
MyVariable2 DW 1234           ; Define a word variable 
MyVariable3 DD 12345678       ; Define a double word variable 

; Main program 
[SECTION .text] 
global _start 
 
_start: 
    ; Initialize registers 
    XOR EAX, EAX    ; Clear EAX register 
    XOR EBX, EBX    ; Clear EBX register 
    XOR ECX, ECX    ; Clear ECX register 
    XOR EDX, EDX    ; Clear EDX register
                        
    ; Move values into registers 
    MOV EAX, MyVariable1 ; Move value of MyVariable1 into EAX 
    MOV BX, MyVariable2  ; Move value of MyVariable2 into BX 
    MOV ECX, MyVariable3 ; Move value of MyVariable3 into ECX 
    MOV DL, 10           ; Move value of 10 into DL register 
                        
    ; Perform calculations 
    ADD EAX, ECX        ; Add the values of EAX and ECX 
    SUB BX, EAX         ; Subtract the value of EAX from BX 
    MUL EDX             ; Multiply the value of EDX with EAX and store in EAX 
    MOV MyVariable1, AH ; Move the upper byte of EAX into MyVariable1 
    ADD ECX, MyVariable2 ; Add the value of MyVariable2 to ECX 
                        
    ; System calls 
    MOV EAX, 1          ; First system call function - sys_exit 
    INT 0x80            ; Invoke operating system 
    RET                 ; Return from _start

; Declaring a function 
[SECTION .data] 
func_msg DB "This is a function", 0xA ; String terminated with newline char 
[SECTION .text] 
global _start 
 
_start:
    ; Initialize registers 
    XOR EAX, EAX    ; Clear EAX register 
    XOR EBX, EBX    ; Clear EBX register 
    XOR ECX, ECX    ; Clear ECX register 
    XOR EDX, EDX    ; Clear EDX register

    ; Call the function 
    CALL my_function  ; Pass control to the label my_function 

    ; System calls 
    MOV EAX, 1          ; First system call function - sys_exit 
    INT 0x80            ; Invoke operating system 
    RET                 ; Return from _start 

my_function: 
    ; Display the message 
    MOV EAX, 4              ; Fourth system call function - sys_write 
    MOV EBX, 1              ; File descriptor of stdout 
    MOV ECX, func_msg       ; Address of string message 
    MOV EDX, 19             ; Length of string message 
    INT 0x80                ; Invoke operating system 
    RET                     ; Return from my_function
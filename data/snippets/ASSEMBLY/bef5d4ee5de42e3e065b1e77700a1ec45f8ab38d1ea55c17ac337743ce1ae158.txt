; This code snippet is an example of a loop in Assembly language

section .text ; Denotes the beginning of the code section

global _start ; Tells the compiler that _start is the entry point

_start:
mov ecx, 10 ; Move the value 10 into the ECX register
mov ebx, 0 ; Move the value 0 into the EBX register
loop_start: ; Label to mark the beginning of the loop
inc ebx ; Increment the value in EBX register by 1
cmp ebx, ecx ; Compare EBX and ECX registers
jg loop_end ; Jump to loop_end label if EBX is greater than ECX
; If EBX is not greater than ECX, continue looping
jmp loop_start ; Jump back to loop_start label to repeat the loop
loop_end:
; Code to be executed after the loop ends
mov eax, 1 ; Move value 1 into the EAX register (system call for exit)
xor ebx, ebx ; Set EBX to 0 (return value for exit)
int 0x80 ; Execute the system call

section .data ; Denotes the beginning of the data section
; Data to be used in the code, if any
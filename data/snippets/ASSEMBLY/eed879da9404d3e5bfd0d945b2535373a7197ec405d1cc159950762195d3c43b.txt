; This is a commented section
; Using x86 architecture

section .text ; Defines the main program section
    global _start ; Tells linker to start at _start label
 
_start: ; Label for program execution start
    ; Reserve memory for variables
    push ebp
    mov ebp, esp

    ; Prompt user for input
    mov eax, 4 ; System call for printing
    mov ebx, 1 ; Output to standard output
    mov ecx, prompt ; Location of prompt in data section
    mov edx, promptlen ; Length of prompt
    int 80h ; Execute system call
    
    ; Read user input 
    mov eax, 3 ; System call for reading
    mov ebx, 0 ; Input from standard input
    mov ecx, input ; Location to store input
    mov edx, inputlen ; Maximum length of input
    int 80h ; Execute system call
    
    ; Convert input to uppercase
    mov esi, input ; Source index for input
    mov edi, input ; Destination index for output
    mov ecx, inputlen ; Length of input
    convert_loop:
        cmp byte [esi], 0 ; Check if end of string
        je exit_convert ; If yes, exit loop
        mov al, [esi] ; Get character from input
        cmp al, 61 ; Check if lowercase letter
        jb copy_char ; If not, skip to next character
        cmp al, 7a ; Check if uppercase letter
        ja copy_char ; If not, skip to next character
        sub al, 32 ; Convert to uppercase
        mov [edi], al ; Store in output
        jmp next_char ; Jump to next character
        copy_char:
            mov [edi], al ; Copy character as is
        next_char:
            inc esi ; Move to next input character
            inc edi ; Move to next output character
            loop convert_loop ; Loop until end of string
    
    ; Append '!' to output
    mov byte [edi], 33

    ; Print output
    mov eax, 4 ; System call for printing
    mov ebx, 1 ; Output to standard output
    mov ecx, output ; Location of output in data section
    mov edx, outputlen ; Length of output
    int 80h ; Execute system call
    
    ; Exit program
    mov eax, 1 ; System call for exiting
    mov ebx, 0 ; Exit code 0
    int 80h ; Execute system call
    
; Data section
section .data 
    prompt db 'Enter a word: ', 0xa ; Prompt for user input
    promptlen equ $-prompt ; Length of prompt
    input times 32 db 0 ; Reserve 32 bytes for input
    inputlen equ $-input ; Maximum length of input
    output times 33 db 0 ; Reserve 33 bytes for output
    outputlen equ $-output ; Length of output

; End of program
exit_convert:
    leave ; Clean up stack
    ret ; Return to operating system
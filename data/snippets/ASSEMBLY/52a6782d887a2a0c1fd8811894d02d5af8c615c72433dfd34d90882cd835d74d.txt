; This code snippet performs the binary search algorithm in assembly language
.code
start:
    push ax ; save the value of ax register
    push bx ; save the value of bx register
    push cx ; save the value of cx register
    push dx ; save the value of dx register
    
    mov ax, data ; load the data segment
    mov ds, ax ; set the data segment
    
    mov bx, arr ; load the array pointer
    mov cx, size ; load the size of the array
    dec cx ; decrement it by 1 for index
    
    ; initialize the loop condition
    mov dx, 0 ; set the index to 0
    mov si, -1 ; set the low index to -1
    mov di, cx ; set the high index to size-1
    
    loop:
        inc si ; increment low index
        cmp si, di ; check if low index is greater than high index
        jg not_found ; jump to not_found if true
        
        ; calculate the mid index
        mov ax, si
        add ax, di
        shr ax, 1 ; divide by 2
        
        mov bx, ax ; assign mid index to bx
        
        ; compare with search value
        mov ax, search_val ; load search value
        cmp ax, [bx] ; compare with the value at mid index
        je found ; jump to found if equal
        jl move_low ; jump to move_low if search value is less
        jg move_high ; jump to move_high if search value is greater
        
    move_low:
        mov di, bx ; assign mid index to high index
        jmp loop ; jump back to loop
    
    move_high:
        mov si, bx ; assign mid index to low index
        jmp loop ; jump back to loop
    
    found:
        mov dx, 1 ; set index to index+1 for output
        jmp end ; jump to end
    
    not_found:
        mov dx, -1 ; set index to -1 for output
    
    end:
        pop dx ; restore the value of dx register
        pop cx ; restore the value of cx register
        pop bx ; restore the value of bx register
        pop ax ; restore the value of ax register
        
        mov data, ax ; save the data segment
        mov ss, data ; set the stack segment
        
        mov ah, 4Ch ; set the exit function
        int 21h ; interrupt to exit the program
        
.data
arr dw 5, 10, 15, 20, 25 ; array of values
size dw 5 ; size of the array
search_val dw 20 ; value to search for
index dw 0 ; index of search value

end start ; end of program
; This is a code snippet in Assembly language

section .data ; Data section

    db 'Hello',0xA,0xD ; Declare a string with newline and carriage return characters

section .bss ; BSS section

    string_resb resb 5 ; Reserve space for a string of 5 characters

section .text ; Text section
    global _start ; Start label
_start:
    ; Moving 'Hello' string to string_resb address
    mov eax, string_resb ; Move address of string_resb into eax register
    mov ebx, string ; Move address of 'Hello' string into ebx register
    mov ecx, 5 ; Move size of string into ecx register
    mov esi, ebx ; Move ebx address into esi register
    mov edi, eax ; Move eax address into edi register
    cld ; Clear direction flag
    rep movsb ; Copy ecx number of bytes from esi to edi

    ; Printing the string
    mov eax, 4 ; Move 4 (print) syscall number into eax
    mov ebx, 1 ; Move 1 (standard output) file descriptor into ebx
    mov ecx, string_resb ; Move address of string_resb into ecx
    mov edx, 5 ; Move size of string into edx
    int 0x80 ; Execute syscall
    
    ; Exiting the program
    mov eax, 1 ; Move 1 (exit) system call number into eax
    xor ebx, ebx ; Set exit status to 0
    int 0x80 ; Execute syscall
    
section .text ; End of program
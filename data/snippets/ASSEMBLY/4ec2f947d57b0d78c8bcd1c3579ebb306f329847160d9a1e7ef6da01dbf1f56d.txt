.section .data
  prompt db 'Enter a number: ', 0xA, 0xD
  sumMsg db 'The sum is: ', 0xA, 0xD
  num1 dd
  num2 dd
  sum dd

.section .text
  .globl _start
  _start:
    movl $4, %eax         ; system call number for 'write'
    movl $1, %ebx         ; file descriptor for stdout
    movl $prompt, %ecx    ; pointer to string to be printed
    movl $16, %edx        ; number of bytes to print
    int $0x80             ; execute the system call
  
    movl $3, %eax         ; system call number for 'read'
    movl $0, %ebx         ; file descriptor for stdin
    movl $num1, %ecx      ; address where the input will be stored
    movl $4, %edx         ; number of bytes to read
    int $0x80             ; execute the system call
    
    movl $4, %eax         ; system call number for 'write'
    movl $1, %ebx         ; file descriptor for stdout
    movl $prompt, %ecx    ; pointer to string to be printed
    movl $16, %edx        ; number of bytes to print
    int $0x80             ; execute the system call
    
    movl $3, %eax         ; system call number for 'read'
    movl $0, %ebx         ; file descriptor for stdin
    movl $num2, %ecx      ; address where the input will be stored
    movl $4, %edx         ; number of bytes to read
    int $0x80             ; execute the system call
    
    addl $num1, %ecx      ; add the two numbers
    addl $num2, %ecx
    movl %ecx, sum        ; store the result in 'sum'
    
    movl $4, %eax         ; system call number for 'write'
    movl $1, %ebx         ; file descriptor for stdout
    movl $sumMsg, %ecx    ; pointer to string to be printed
    movl $12, %edx        ; number of bytes to print
    int $0x80             ; execute the system call
    
    movl $1, %eax         ; system call number for 'exit'
    movl $0, %ebx         ; exit status 0
    int $0x80             ; execute the system call
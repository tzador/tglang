; This code snippet calculates the Fibonacci sequence up to an inputted number
.data
num_input dd 0 ; variable to store user input
cur_num dd 1 ; variable to store current number in sequence
prev_num dd 0 ; variable to store previous number in sequence
sum dd 0 ; variable to store sum of previous two numbers
.code
main:
    ;prompt user to enter a number
    mov edx, offset prompt
    call WriteString 
    call ReadInt ; read user input and store in num_input
    mov eax, num_input ; store num_input in eax for later use
    jmp loop ; jump to loop
loop:
    cmp eax, 2 
    jl end_loop ; if num_input is less than 2, end the loop
    mov ebx, cur_num ; move cur_num to ebx
    mov ecx, prev_num ; move prev_num to ecx
    add ebx, ecx ; add cur_num and prev_num and store in ebx
    mov edx, sum ; move sum to edx
    mov sum, ebx ; move ebx to sum
    mov cur_num, prev_num ; move prev_num to cur_num
    mov prev_num, edx ; move edx to prev_num
    dec eax ; decrease eax by 1
    jmp loop ; jump back to loop
end_loop:
    ; print the Fibonacci sequence 
    mov ecx, num_input ; move num_input to ecx
print_loop:
    ; print the current number in the sequence
    mov edx, offset print_msg
    call WriteString
    mov eax, sum ; move sum to eax for printing
    call WriteInt ; print the current number
    mov eax, ", " ; move comma to eax for printing
    call WriteChar ; print the comma
    ; check if the current number is equal to num_input
    cmp ecx, sum
    jne update_loop ; if not equal, jump to update loop
    jmp done ; if equal, end the program
update_loop:
    ; update num_input and loop again
    mov ebx, cur_num ; move cur_num to ebx
    mov ecx, prev_num ; move prev_num to ecx
    add ebx, ecx ; add cur_num and prev_num, storing in ebx
    mov ecx, sum ; move sum to ecx
    mov sum, ebx ; move ebx to sum
    dec ecx ; decrease ecx by 1
    jmp print_loop ; jump back to print loop
done:
    ; exit the program
    call Exit ; exit the program
end main
prompt db 'Enter a number: ',0 ; prompt for user input
print_msg db 'Fibonacci sequence: ',0 ; message to print before each number in sequence
;x86 assembly code to iterate through an array and calculate the sum

section .data ;defines the data section
    array_size equ 10 ;equates the size of the array to 10
    array db 2, 4, 6, 8, 10, 12, 14, 16, 18, 20 ;defines the array with 10 elements
    sum dw 0 ;defines the variable for the sum and initializes it to 0

section .text ;defines the code section
    global _start ;marks the entry point of the program

_start: ;entry point of the program
    mov ecx, array_size ;move the size of the array into the ecx register
    mov esi, 0 ;initialize the index of the array to 0

loop_start: ;label for the loop
    mov al, [array + esi] ;move the value at index esi of the array into the al register
    add sum, ax ;add the value in ax (al + ah) to the sum
    inc esi ;increment the index of the array
    loop loop_start ;repeat the loop until ecx = 0

    ;end of loop, the sum is now stored in the sum variable

    ;print the sum to the screen
    mov edx, 4 ;number of bytes to be written
    mov ecx, sum ;move the sum into the ecx register
    mov ebx, 1 ;file descriptor for stdout
    mov eax, 4 ;system call number for write
    int 0x80 ;call the kernel to execute the write system call

    ;end the program
    mov ebx, 0 ;move 0 into ebx register to exit program
    mov eax, 1 ;system call number for exit
    int 0x80 ;call the kernel to execute the exit system call
; Program to calculate the factorial of a number
section .data ; Define data section
    n db 5 ; Declare variable n as a byte and initialize to 5
    result db 1 ; Declare variable result as a byte and initialize to 1
section .text ; Define text section 
    global _start ; Make _start label externally visible
    
_start: ; Program execution starts from here
    mov al, n ; Move the value of n into the al register
    cmp al, 0 ; Compare al with 0
    je end ; If al = 0, jump to end
    
    mov bl, al ; Move the value of al into bl to use as a counter variable
    dec bl ; Decrement bl by 1
    
    loop_start: ; Loop starts from here
        mul bl ; Multiply al by bl
        dec bl ; Decrement bl by 1
    jnz loop_start ; If bl is not zero, jump to loop_start
    mul al ; Multiply al by itself to calculate the factorial
    mov result, al ; Move the result of the calculation into result variable
    
end: ; Program ending point
    mov eax, 1 ; Move the value 1 into eax to indicate successful program termination
    mov ebx, 0 ; Move the value 0 into ebx to indicate no errors
    int 80h ; Call the interrupt 80h to exit the program
    
section .data ; Data section for storing result variable
    res db "The factorial of n is: ", result, 0 ; Declaration of a string
    len equ $-res ; Calculate the length of the string
section .text ; Text section for printing the result
    global _start ; Make _start label externally visible
    
_start: ; Program execution starts from here
    mov edx, len ; Move the length of the string into edx
    mov ecx, res ; Move the address of the string into ecx
    mov ebx, 1 ; Move 1 into ebx to indicate stdout
    mov eax, 4 ; Move 4 into eax to call the system call for printing
    int 80h ; Call the interrupt 80h to execute the system call
    
    mov eax, 1 ; Move the value 1 into eax to indicate successful program termination
    mov ebx, 0 ; Move the value 0 into ebx to indicate no errors
    int 80h ; Call the interrupt 80h to exit the program
.section .data       ; declaring a data section
    my_var db 5       ; declaring a byte variable with initial value of 5
    my_arr db 10,20,30,40     ; declaring an array of byte values
    my_string db 'Hello, World!',10,13,'$'   ; declaring a string with newline and carriage return characters

.section .text       ; declaring a text section

global _start        ; declaring _start as global, the entry point of the program

_start:              ; start of the program
    mov ah, 0x00     ; move the value 0x00 to register ah
    mov al, my_var   ; move the value of my_var to register al
    add al, 0x02     ; add 0x02 to the value in register al
    mov my_var, al   ; move the value in register al to my_var
    mov bx, 0x01     ; move the value 0x01 to register bx
    mov cx, bx       ; move the value in register bx to register cx
    add cx, 0x03     ; add 0x03 to the value in register cx
    mov my_arr+2, bl ; move the value of register bl to the third index of my_arr
    mov ah, 0x09     ; move the value 0x09 to register ah
    lea dx, my_string ; load the address of my_string into register dx
    int 0x21         ; call interrupt 0x21 to print the string
    mov ah, 0x01     ; move the value 0x01 to register ah
    int 0x21         ; call interrupt 0x21 to read input from user
    mov ah, 0x03     ; move the value 0x03 to register ah
    int 0x10         ; call interrupt 0x10 to clear the screen
    mov ax, 0x4C00   ; move the value 0x4C00 (exit code) to register ax
    int 0x21         ; call interrupt 0x21 to terminate the program and return exit code
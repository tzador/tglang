.section .data			; specify the data section
value db 5			; declare and initialize 'value' variable as byte
result dw 0			; declare and initialize 'result' variable as word
		                    (word is 2 bytes)

.section .text			; specify the code section
.global _start			; make _start function global

_start:				; start of program

movb $value, %bl		; move value into bl register
movw $result, %bx		; move result into bx register

loop_start:			; label to start the loop

cmpb $0, %bl			; compare bl register with 0
jz loop_end 			; jump to loop_end if bl = 0
inc %bx				; increment bx register
dec %bl				; decrement bl register
jmp loop_start			; jump back to loop_start

loop_end:			; label to end the loop

movw $0, %ax			; move 0 into ax register
int $0x80			; execute interrupt 0x80 (exit program)

.end _start			; end of program
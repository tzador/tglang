;; This code snippet is an example of a loop in Assembly language

;; Start of program
;; Register R0 holds the value of the counter
;; Register R1 holds the initial value of the counter
;; Register R7 holds the value of the loop condition, which is the number of times to run the loop

;; Initialize the registers
LDR R0, =0 ;; Load 0 into register R0 as the counter
LDR R1, =5 ;; Load 5 into register R1 as the initial value of the counter
LDR R7, =10 ;; Load 10 into register R7 as the loop condition

;; Begin loop
LOOP:
    ;; Check if the counter has reached the loop condition
    CMP R0, R7 ;; Compare the value in register R0 to the loop condition in register R7
    BEQ END_LOOP ;; If equal (counter has reached loop condition), jump to END_LOOP

    ;; Perform operations within the loop
    ADD R1, R1, #1 ;; Add 1 to the initial value of the counter (stored in register R1)
    STR R1, [R0] ;; Store the value of the counter (in register R1) into the memory address pointed to by R0 (which is initially 0)

    ;; Increment counter
    ADD R0, R0, #1 ;; Increment the value in register R0 (counter) by 1

    ;; Repeat loop
    B LOOP ;; Branch back to the beginning of the loop

;; End loop
END_LOOP:
    ;; Print final counter value
    MOV R0, R1 ;; Move value from register R1 (final counter value) into register R0 (for printing)
    SWI 0x11 ;; System call to print register value to screen
    MOV R0, #0 ;; Move 0 into register R0 (to indicate successful completion of program)
    SWI 0x11 ;; System call to exit program

;; End of program
.section .data                 ; Declaring a section of the program
input_ptr: .long 0             ; Pointer to input data
output_ptr: .long 0            ; Pointer to output data
num1: .long 10                 ; First number to be added
num2: .long 23                 ; Second number to be added

.section .text                 ; Declaring another section
.global _start                 ; Setting start of program

_start:                        ; Start of the actual program
    mov input_ptr, %eax        ; Move input data pointer into EAX register
    mov output_ptr, %ebx       ; Move output data pointer into EBX register
    mov num1, %edx             ; Move first number into EDX register
    mov num2, %ecx             ; Move second number into ECX register

    addl (%edx), %ecx          ; Add contents of EDX to ECX and store in ECX
    movl %ecx, (%ebx)          ; Move result from ECX into output pointer

    mov $1, %eax               ; Set system call number to exit
    xor %ebx, %ebx             ; Set exit status to 0
    int $0x80                  ; Call system interrupt to exit program
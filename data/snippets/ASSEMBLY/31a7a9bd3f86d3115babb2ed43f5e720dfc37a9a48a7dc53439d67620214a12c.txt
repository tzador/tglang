; Loop through array and print out values
section .data       
    array: dd 1, 2, 3, 4, 5    ; declaring and initializing array of 5 elements
    array_len: equ $-array     ; defining constant for array length
section .text
    global _start             ; declaring entry point for program
_start:
    mov ecx, 0                ; initialize counter to 0
    mov eax, 4                ; prepare to print integer
    mov ebx, 1                ; select standard output
    mov edx, 1                ; set number of characters to print
    mov esi, array            ; load array pointer into register
loop:
    cmp ecx, array_len        ; compare counter to array length
    jge end_loop              ; if counter is greater than array length, exit loop
    mov eax, [esi + ecx*4]    ; load value at current index into eax
    add eax, '0'              ; convert value to ascii character
    mov [esp + 4], eax        ; store value to be printed in stack
    mov eax, 4                ; specify print operation
    mov ebx, 1                ; select standard output
    mov edx, 1                ; set number of characters to print
    int 0x80                  ; call kernel to print value
    inc ecx                   ; increment counter
    jmp loop                  ; jump back to beginning of loop
end_loop:
    mov eax, 1                ; specify exit operation
    mov ebx, 0                ; set return code to 0
    int 0x80                  ; call kernel to exit program
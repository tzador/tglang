; Initialize registers
MOV R0, 0x00
MOV R1, 0x01
MOV R2, 0x02
MOV R3, 0x03
MOV R4, 0x04
MOV R5, 0x05
MOV R6, 0x06
MOV R7, 0x07

; Store values into memory
STORE 0x10, R0 ; Store R0 into memory address 0x10
STORE 0x11, R1 ; Store R1 into memory address 0x11
STORE 0x12, R2 ; Store R2 into memory address 0x12

; Loop to perform calculations
LOOP:
ADD R0, R1  ; Add value in R1 to R0
ADD R1, R2  ; Add value in R2 to R1
ADD R2, R3  ; Add value in R3 to R2
ADD R3, R4  ; Add value in R4 to R3

; Compare values and jump
CMP R0, R7  ; Compare value in R0 to R7
JUMP_EQUAL LOOP  ; Jump to LOOP label if values are equal

; Output final result
PRINT R3  ; Print value in R3 to screen

; End program
HALT  ; Halt program execution.
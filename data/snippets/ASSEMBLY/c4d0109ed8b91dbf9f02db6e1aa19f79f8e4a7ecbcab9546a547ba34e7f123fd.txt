section .text        ; start of the code section
global _start        ; public symbol, entry point of the program

_start:              ; label indicating start of program

    ; initialize registers
    mov eax, 0       ; clear eax register
    mov ebx, 0       ; clear ebx register
    mov ecx, 0       ; clear ecx register
    mov edx, 0       ; clear edx register

    ; get user input
    mov eax, 3       ; read system call number
    mov ebx, 0       ; file descriptor for stdin
    mov ecx, input   ; buffer to store input
    mov edx, 255     ; maximum number of chars to read
    int 0x80         ; call Linux kernel

    ; print output to console
    mov eax, 4       ; write system call number
    mov ebx, 1       ; file descriptor for stdout
    mov ecx, input   ; buffer to print
    mov edx, 255     ; length of buffer
    int 0x80         ; call Linux kernel

    ; exit the program
    mov eax, 1       ; exit system call number
    xor ebx, ebx     ; exit code, 0 = success
    int 0x80         ; call Linux kernel

section .data        ; start of data section
input db 255         ; declare input variable as a byte
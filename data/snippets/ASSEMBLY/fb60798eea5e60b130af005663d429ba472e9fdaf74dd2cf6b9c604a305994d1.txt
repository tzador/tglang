.section .bss			; creates a new section called .bss
.bss_size: 				; creates a label called bss_size
    .space 4			; reserves 4 bytes of space
.bss_buffer:			; creates a label called bss_buffer
    .space 64			; reserves 64 bytes of space
.section .text			; switches to the text section
.global _start			; indicates _start label is accessible from outside
_start:					; defines the start label
    ldr r0, =bss_size	; loads address of bss_size into r0
    ldr r1, =bss_buffer	; loads address of bss_buffer into r1
    mov r2, #0			; stores 0 in r2
    str r2, [r1], #4	; stores 0 in bss_buffer and increments by 4, repeating 16 times
    add r1, r1, #64		; adds 64 to r1 to point to end of bss_buffer
    sub r1, r1, #16		; subtracts 16 from r1 to point to first byte of bss_buffer
    add r2, r2, #1		; increments r2 by 1
    cmp r1, r2			; compares r2 to r1 and sets flags
    bge _start			; branches to _start if r1 >= r2
    mov r7, #1			; stores 1 in r7
    swi 0x0				; system call to exit
.global _start      ; declaring _start as a global symbol

_start:             ; _start section
    movl $1, %eax   ; load the system call number for exit into register
    movl $0, %ebx   ; load the exit status into register
    int $0x80       ; make the system call
    
    movl $4, %eax   ; load the system call number for write into register
    movl $1, %ebx   ; load the file descriptor for standard output into register
    movl $msg, %ecx ; load the address of the message to be printed into register
    movl $len, %edx ; load the length of the message into register
    int $0x80       ; make the system call
    
    movl $1, %eax   ; load the system call number for exit into register
    movl $0, %ebx   ; load the exit status into register
    int $0x80       ; make the system call
    
    .data           ; declaring a data section
    
msg:                ; message section
    .ascii "Hello World!\n"     ; declaring and initializing the message to be printed
    
len = . - msg       ; calculating the length of the message
    
    .text           ; declaring a text section
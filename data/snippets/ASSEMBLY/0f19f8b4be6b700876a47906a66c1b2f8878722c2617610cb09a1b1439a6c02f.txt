; This code snippet performs a bubble sort on an array of integers
;
; Inputs:
;    rsi - pointer to the start of the array
;    rcx - length of the array

bubble_sort:
    push rax            ; save registers 
    push rbx            ; push rax and rbx onto the stack
    push rcx
    
    dec rcx             ; decrement length to iterate through all elements
    check_again:
        mov rax, 0      ; set swap flag to 0
        mov rbx, rcx    ; move length to rbx for comparison loop
        
        ; swap elements if necessary
        swap:
            mov rdx, [rsi]               ; store current element in rdx
            mov [rsi], [rsi + 4]         ; move next element into current position in the array
            mov [rsi + 4], rdx           ; move current element into next position
            add rsi, 4                   ; increment pointer to next element
            loop swap                    ; repeat until end of array
        
        dec rbx         ; decrement 2nd loop variable after each iteration
        cmp rbx, 0      ; check if loop reached end of array
        jne swap
        
        ; check if swap occurred; if not, array is sorted
        cmp rax, 0      
        je done
        
        dec rcx         ; decrement number of elements to check in next iteration
        jmp check_again
        
    done:
        pop rcx         ; restore registers 
        pop rbx         ; pop rcx and rax from the stack
        pop rax
        ret             ; return to caller
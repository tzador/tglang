mov eax, 0x01 ; move the value 0x01 into the eax register
add ebx, 0x02 ; add the value 0x02 to the ebx register
push ecx ; push the value of the ecx register onto the stack
sub edx, 0x03 ; subtract the value 0x03 from the edx register
jmp label ; jump to the label named "label"
label: ; label used for jumping and branching
cmp eax, ebx ; compare the values of eax and ebx
jne not_equal ; jump to "not_equal" if the values are not equal
mov eax, 0x04 ; move the value 0x04 into the eax register if the values are equal
not_equal:
xor eax, eax ; perform a bitwise exclusive OR on the value of eax and itself
ret ; return from the subroutine
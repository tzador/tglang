;Initialize the program

start:  ;starting point of the program
    mov ax, @data   ;move the address of data segment to accumulator register
    mov ds, ax      ;set data segment to accumulator
    call init       ;jump to init subroutine

;Perform arithmetic operations

    mov ax, 5       ;move 5 to accumulator register
    mov bx, 10      ;move 10 to base register
    add ax, bx      ;add base register to accumulator, result in accumulator

;Store the result in a variable

    mov result, ax  ;move the value in accumulator to 'result' variable

;Display the result

    lea dx, result  ;load the address of 'result' variable to data register
    mov ah, 09h    ;select function 09h to display a string
    int 21h         ;call the Interrupt 21h to display the value in 'result' variable

;Terminate the program

    mov ah, 4Ch     ;select function 4Ch to terminate program
    int 21h         ;call Interrupt 21h to terminate program

;Subroutine to initialize program

init:
    mov ax, @data   ;move address of data segment to accumulator register
    mov ss, ax      ;set stack segment to accumulator
    mov sp, 100h    ;set stack pointer to 100h
    ret             ;return to main program

;Data segment

.data
    result dw ?     ;define 'result' variable as word (16-bit)

.code
end start          ;end of the program
mov ax, 0x1234 ; move hexadecimal value 1234 into ax register
mov bx, 0x5678 ; move hexadecimal value 5678 into bx register
add ax, bx ; add bx register value to ax register
jmp start ; jump to the start of the program

start:
mov cx, 0
cmp ax, 0 ; compare ax register to 0
je end ; if equal, jump to end label

loop:
inc cx ; increment cx register
mov dx, 0 ; move value 0 into dx register
mov ax, cx ; move cx register value into ax register
cmp ax, 5 ; compare ax register to 5
jg end ; if greater than, jump to end label

sub bx, 0x03 ; subtract hexadecimal value 03 from bx register
jnz loop ; if not zero, jump to loop label

end:
mov eax, 0 ; move value 0 into eax register
mov ebx, 0 ; move value 0 into ebx register
mov ecx, 0 ; move value 0 into ecx register
mov edx, 0 ; move value 0 into edx register
ret ; return from the program
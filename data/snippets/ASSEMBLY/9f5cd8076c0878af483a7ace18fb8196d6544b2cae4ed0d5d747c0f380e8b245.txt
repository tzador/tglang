;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This code snippet implements a bubble sort algorithm in assembly ;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

section .data
    array  db 10, 3, 7, 2, 1  ; define an array of 5 numbers to be sorted

section .text
    global _start           ; declare the entry point of our program

_start:
    mov ecx, 5              ; set the number of elements in the array to be 5
    mov ebx, 0              ; set the loop counter to 0

outer_loop:
    cmp ebx, ecx            ; compare the loop counter with the number of elements
    jge exit                ; if the counter is greater than or equal to the number of elements, exit the loop
    
    mov edi, 0              ; set the inner loop counter to 0
inner_loop:
    mov eax, [array + edi]  ; get the element at index edi
    cmp eax, [array + edi + 1]  ; compare it with the next element in the array
    jle increment           ; if the current element is less than or equal to the next element, increment the inner loop counter
    xchg eax, [array + edi + 1]  ; if the current element is greater than the next element, swap them
    mov [array + edi], eax  ; store the current element in the next position in the array
increment:
    inc edi                 ; increment the inner loop counter
    cmp edi, ecx            ; compare the inner loop counter with the number of elements
    jl inner_loop           ; if the inner loop counter is less than the number of elements, repeat the inner loop
    
    inc ebx                 ; increment the outer loop counter
    jmp outer_loop          ; repeat the outer loop

exit:
    ; the array is now sorted, continue with other instructions
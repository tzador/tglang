; This is a code snippet in assembly language
; It demonstrates how to calculate the factorial of a number using recursion

section .data     ; declaring data section
    number db 5   ; storing the number whose factorial is to be calculated

section .text     ; declaring code section
    global _start ; declaring global entry point label

_start:
    mov ecx, 1 ; initializing counter for recursive call
    mov edx, [number] ; loading number into edx register

    call factorial ; calling factorial function

    ; printing the result of factorial
    mov eax, 4 ; syscall for printing
    mov ebx, 1 ; file descriptor for stdout
    mov ecx, result ; load address of result variable
    mov edx, 2 ; length of string to print
    int 0x80 ; syscall to print

    ; system call to exit the program
    mov eax, 1 ; syscall for exit
    xor ebx, ebx ; exit code 0
    int 0x80 ; syscall to exit

; recursive function to calculate the factorial
factorial:
    ; comparing edx with 0, base case for recursion
    cmp edx, 0
    je end_factorial ; if edx equals 0, return and end recursion

    push edx ; saving current value of edx onto the stack
    dec edx ; decreasing edx by 1
    push ecx ; saving current value of ecx onto the stack
    mul ecx ; multiplying current value of ecx with edx
    pop ecx ; retrieving original value of ecx
    mul ecx ; multiplying original value of ecx with the new edx value
    pop edx ; retrieving original value of edx
    call factorial ; call factorial function again for recursive call

end_factorial:
    ret ; return to previous function call

section .data
    result db "The factorial of 5 is %ld", 10, 0 ; result string with new line character included
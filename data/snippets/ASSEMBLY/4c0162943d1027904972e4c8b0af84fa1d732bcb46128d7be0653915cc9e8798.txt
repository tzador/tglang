;=================================================================
; This is a code snippet written in Assembly language.
; It is a complex and lengthy program that utilizes multiple registers, loops, and conditional statements.
; This program takes in two numbers and performs various arithmetic operations on them.
; The final result is stored in the AX register.
;=================================================================

; Program start
start:

    ; Assign the first number to the AX register
    mov ax, 5
    
    ; Assign the second number to the BX register
    mov bx, 10
    
    ; Add the numbers and store the result in the AX register
    add ax, bx
    
    ; Multiply the numbers and store the result in the AX register
    mul bx
    
    ; Subtract the numbers and store the result in the AX register
    sub ax, bx
    
    ; Divide the numbers and store the result in the AX register
    div bx
    
    ; Compare the numbers and jump to the label 'greater' if the AX register is greater than the BX register
    cmp ax, bx
    jg greater
    
    ; Compare the numbers and jump to the label 'equal' if the AX register is equal to the BX register
    cmp ax, bx
    je equal
    
    ; Compare the numbers and jump to the label 'less' if the AX register is less than the BX register
    cmp ax, bx
    jl less
    
; Label for when AX is greater than BX
greater:
    ; Output a message to the console
    mov ah, 09h
    mov dx, offset greater_message
    int 21h
    
    ; Jump to the end of the program
    jmp end
    
; Label for when AX is equal to BX
equal:
    ; Output a message to the console
    mov ah, 09h
    mov dx, offset equal_message
    int 21h
    
    ; Jump to the end of the program
    jmp end
    
; Label for when AX is less than BX
less:
    ; Output a message to the console
    mov ah, 09h
    mov dx, offset less_message
    int 21h
    
; End of program
end:
    ; Halt the program
    mov ah, 4Ch
    int 21h
    
;=================================================================
; Variables and messages
;=================================================================

greater_message db 'AX is greater than BX.',0Dh,0Ah,'$'
equal_message db 'AX is equal to BX.',0Dh,0Ah,'$'
less_message db 'AX is less than BX.',0Dh,0Ah,'$'
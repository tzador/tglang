## Data Section
.data

# declare data section variables
number DW 1234h                ; 2-byte variable to hold a number in hexadecimal format
arr DB 5h, 10h, 15h, 20h       ; 4-element array to hold hexadecimal values

## Code Section
.code

# start code section
start:
    mov ax, @data            ; load address of data section into ax register
    mov ds, ax               ; initialize data segment register

    # store values into data section variables
    mov [number], 0012h      ; store the hexadecimal value 0012 into 'number' variable
    mov [arr+1], 07h         ; store the hexadecimal value 07 into the second element of 'arr'

    # print values stored in data section variables
    mov ah, 09h              ; set ah register to 09h to print strings
    lea dx, [number]         ; load address of 'number' variable into dx register
    int 21h                  ; call interruption 21h to print the value stored in dx
    lea dx, [arr+2]          ; load address of third element of 'arr' into dx register
    int 21h                  ; call interruption 21h to print value stored in dx

    # exit program
    mov ah, 4Ch              ; set ah register to 4Ch to exit program
    int 21h                  ; call interruption 21h to exit program

## End of Program
end start                   ; 'end' directive indicates end of program, 'start' labels the starting point of program
; This code snippet calculates the factorial of a number

section .data					; Defines the data section
	num db 5					; Declares a variable 'num' and initializes it with value '5'
	factorial db 1				; Declares a variable 'factorial' and initializes it with value '1'

section .text 					; Defines the code section
global _start					; Indicates the main entry point of the program

_start: 					; Main code begins here

	mov ebx, [num] 				; Moves the value of 'num' into EBX register
	xor ecx, ecx 				; Clears the value of ECX register

loop_start: 					; Loop for calculating factorial begins

	inc ecx 				; Increments the value of ECX register by 1	
	mul ebx 				; Multiplies the value of EBX register with the value of EAX register
	mov [factorial], eax 			; Moves the value of EAX register into 'factorial' variable

	cmp ecx, [num] 				; Compares the value of ECX register with the value of 'num' variable
	jle loop_start 				; Jumps to 'loop_start' label if ECX is less than or equal to 'num'

	mov eax, 1 				; Moves the value '1' into EAX register
	mov ebx, [factorial] 			; Moves the value of 'factorial' variable into EBX register
 	lea ecx, [factorial + 4]		; Calculates the memory address of 'factorial' variable
	mov [ecx], eax				; Moves the value of EAX register into 'factorial + 4' memory address
	dec ecx					; Decrements the value of ECX register by 1
	mov [ecx], ebx				; Moves the value of EBX register into 'factorial' memory address

	mov eax, 1 				; Moves the value '1' into EAX register
	mov ebx, 0 				; Clears the value of EBX register
	int 0x80 				; System call to exit the program
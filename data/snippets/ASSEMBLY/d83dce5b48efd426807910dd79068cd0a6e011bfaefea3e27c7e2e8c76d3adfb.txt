; A simple program that calculates the factorial of a number

section .text
	global _start

_start:
	mov eax, 5 ; set the number to calculate factorial of

	call factorial ; call the factorial subroutine

	mov ebx, eax ; move result to ebx register
	mov eax, 1 ; set exit code to 1
	int 0x80 ; call the kernel to terminate program

factorial:
	push ebp ; save ebp on the stack
	mov ebp, esp ; set base pointer to current top of stack

	mov ecx, [ebp+8] ; move number to calculate to ecx register

	dec ecx ; decrement number by 1

	cmp ecx, 1 ; compare number to 1
	jle end ; if number is less than or equal to 1, go to end of subroutine

	push ecx ; push number to calculate to the stack
	call factorial ; recursively call factorial subroutine

	pop ecx ; pop number from stack
	imul ecx, [ebp+8] ; multiply current number by previous result
	mov eax, ecx ; move result to eax register

end:
	mov esp, ebp ; restore stack pointer
	pop ebp ; restore base pointer
	ret ; return from subroutine
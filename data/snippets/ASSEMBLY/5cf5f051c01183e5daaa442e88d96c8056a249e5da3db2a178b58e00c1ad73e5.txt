; This code snippet is an example of a function in assembly language that calculates the factorial of a number

section .text
global _start

_start:
    ; prompt user for input
    mov eax, 4 ; system call number for 'write'
    mov ebx, 1 ; file descriptor for 'stdout'
    mov ecx, prompt ; address of prompt string
    mov edx, promptLen ; length of prompt string
    int 0x80 ; call kernel

    ; get user input
    mov eax, 3 ; system call number for 'read'
    mov ebx, 0 ; file descriptor for 'stdin'
    mov ecx, num ; address of variable to store input
    mov edx, 4 ; maximum number of characters to read
    int 0x80 ; call kernel

    ; convert input to integer
    mov eax, [num] ; move input to eax register
    sub eax, '0' ; subtract '0' to convert from ASCII to integer
    mov [num], eax ; store converted integer back into variable

    ; calculate factorial
    mov ebx, [num] ; move input to ebx register
    mov eax, 1 ; initialize accumulator
    loop:
        mul ebx ; multiply accumulator by input
        dec ebx ; decrement input
        cmp ebx, 1 ; check if input is equal to 1
        jne loop ; if not, continue loop

    ; display result
    mov eax, 4 ; system call number for 'write'
    mov ebx, 1 ; file descriptor for 'stdout'
    mov ecx, result ; address of result string
    mov edx, resultLen ; length of result string
    int 0x80 ; call kernel

    ; exit program
    mov eax, 1 ; system call number for 'exit'
    mov ebx, 0 ; exit status code
    int 0x80 ; call kernel

section .data
num dd 0 ; variable to store input as integer
prompt db 'Enter a number: ' ; prompt string
promptLen equ $-prompt ; length of prompt string
result db 'The factorial is: ' ; result string
resultLen equ $-result ; length of result string
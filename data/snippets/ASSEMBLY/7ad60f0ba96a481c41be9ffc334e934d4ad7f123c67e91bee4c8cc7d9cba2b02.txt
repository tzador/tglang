.start; #start label
              MOV AX, 5; #move the value 5 into register AX
              DEC AX; #decrement the value in register AX by 1
              CMP AX, 0; #compare the value in register AX to 0
              JG .loop; #jump to the loop label if AX is greater than 0
              JMP .end; #otherwise, jump to the end label
.loop:
              MOV BX, 10; #move the value 10 into register BX
              ADD BX, AX; #add the value in register AX to BX and store in BX
              DEC AX; #decrement the value in register AX by 1
              CMP AX, 0; #compare the value in register AX to 0
              JG .loop; #if AX is still greater than 0, jump back to loop label
.end:
              MOV CX, BX; #move the value in register BX to CX
              HLT; #halt execution
.endlabel; #end label
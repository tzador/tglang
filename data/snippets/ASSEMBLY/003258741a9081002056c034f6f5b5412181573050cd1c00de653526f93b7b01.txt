.section .data
string: .ascii "Hello, world!\n" // declaring a data section with a string variable

        .section .text
        .global _start

_start: movl $4, %eax // move 4 into EAX register (syscall for 'write')
        movl $1, %ebx // move 1 into EBX register (file descriptor for stdout)
        movl $string, %ecx // move string variable into ECX register (pointer for buffer)
        movl $14, %edx // move 14 into EDX register (length of string)
        int $0x80 // execute the syscall
        movl $1, %eax // move 1 into EAX register (syscall for 'exit')
        xorl %ebx, %ebx // set EBX register to 0 (exit status code)
        inc %ebx // increment EBX register (to exit with status code 1)
        int $0x80 // execute the syscall for exit
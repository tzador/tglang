[section .text] ; indicate the start of a section of code where executable instructions will be stored
global _start ; make _start label available to linker
_start: ; start label for program execution
 
; print "Hello World" to console
mov edx, len ; move length of string to edx
mov ecx, msg ; move address of string to ecx
mov ebx, 1 ; set file descriptor (stdout)
mov eax, 4 ; system call number for "write"
int 0x80 ; call kernel interrupt
 
; exit program
mov eax, 1 ; system call number for "exit"
xor ebx, ebx ; set exit status to 0
int 0x80 ; call kernel interrupt
 
 
section .data ; indicate the start of a section of data where initialized variables will be stored
msg db 'Hello World!',0xa ; string variable with line feed character
len equ $ - msg ; calculate length of string
 
section .bss ; indicate the start of a section of data where uninitialized variables will be stored
 ; (no variables in this section for this code snippet)
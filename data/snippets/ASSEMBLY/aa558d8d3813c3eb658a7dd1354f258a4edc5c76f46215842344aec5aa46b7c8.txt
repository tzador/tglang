; This code snippet generates the 100th Fibonacci number
.model small
.stack 100h

.data
n1 dw ?  ; Variable to hold first number of series
n2 dw ?  ; Variable to hold second number of series
n3 dw  ; Variable to hold the calculated Fibonacci number

.code
main proc
    ; Initialize n1 and n2 to first two numbers of series
    mov ax, 0
    mov n1, ax
    mov ax, 1
    mov n2, ax

    ; Loop to calculate the 100th Fibonacci number
    mov cx, 100  ; Loop counter
    L1:
        ; Calculate next number in series: n3 = n1 + n2
        mov ax, n2  ; Move n2 into AX register
        add ax, n1  ; Add n1 to AX register
        mov n3, ax  ; Move result into n3 variable

        ; Shift n1 and n2 to prepare for next iteration
        mov ax, n2  ; Move n2 into AX register
        mov n1, ax  ; Move AX register into n1
        mov ax, n3  ; Move n3 into AX register
        mov n2, ax  ; Move AX register into n2

        ; Decrement loop counter
        dec cx

        ; Repeat loop until 100th number is calculated
        jnz L1

    ; After loop, n3 will hold the 100th Fibonacci number
    ; Display the result on screen
    mov ax, @data
    mov ds, ax  ; Point to data segment
    mov ax, n3  ; Move n3 into AX register
    call display ; Call display subroutine
    jmp exit

display proc
    ; Display the value in AX register on screen
    push ax  ; Save AX register on stack
    mov ah, 2  ; Prepare for printing a character
    mov dl, ' '  ; Move a space character into DL register
    int 21h  ; Print the space character
    mov dl, 'F' ; Move the character 'F' into DL register
    int 21h  ; Print the 'F' character
    pop ax  ; Restore AX register from stack
    ret
display endp

exit:
    mov ah, 4ch  ; Prepare for program exit
    int 21h  ; Exit program
main endp
end main
; -------------------------------
    ; Declare Variables
    ; -------------------------------
    .data
number      dw 500        ;Declare a variable named "number" and allocate 2 bytes for it, initialized with value 500.
factorial   dw 0          ;Declare a variable named "factorial" and allocate 2 bytes for it, initialized with value 0.
result      dw 1          ;Declare a variable named "result" and allocate 2 bytes for it, initialized with value 1.

    ; -------------------------------
    ; Code Segment
    ; -------------------------------
.code
start:
    mov ax, @data           ;Initialize data segment
    mov ds, ax

    mov bx, number          ;Load value of "number" into BX register
    cmp bx, 0               ;Compare BX register to 0
    jz end                  ;If BX register is 0, jump to end label

    loop:
    mul bx                  ;Multiply AX register by BX register
    dec bx                  ;Decrement BX register
    cmp bx, 1               ;Compare BX register to 1
    jz end                  ;If BX register is 1, jump to end label
    jmp loop                ;Jump back to loop label

end:
    mov result, ax          ;Move value of AX register into "result" variable
    mov ah, 09h             ;Move ASCII code for horizontal tab into AH register
    mov dl, result          ;Move value of "result" variable into DL register
    add dl, '0'             ;Convert DL value to ASCII character
    int 21h                 ;Display result in console

    mov ah, 4ch             ;Move function code for program termination into AH register
    int 21h                 ;Terminate program

end start                   ;End main program and label it as "start"
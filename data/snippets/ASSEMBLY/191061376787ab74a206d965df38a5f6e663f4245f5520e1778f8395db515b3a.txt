; Check if a number is prime
start:
    mov eax, 0 ; Set eax register to 0 for storing the prime flag
    mov ebx, 2 ; Set ebx register to 2 for starting the division loop
    mov ecx, 2 ; Set ecx register to 2 for divisor
    mov edx, [input] ; Move input number to edx register for division
    div ecx ; Divide the number with the divisor, quotient in eax and remainder in edx
    cmp edx, 0 ; Compare remainder with 0
    jne end ; If remainder is not 0, the number is prime, jump to end
    inc ebx ; Increment ebx register to try division with next number
    cmp ebx, edx ; Compare ebx with edx
    jle start ; If ecx is less than edx, start the division process again
    mov eax, 1 ; If all divisions result in remainder 0, set the flag to 1 for not prime
end:
    ret ; Return with the flag value in eax
; Declare variables
.stack 100h                ; Initial stack size
.data
    input_msg db 'Enter a number: ', 0Ah, 0Dh ; Message to prompt for input
    output_msg db 'The factorial of ', 0Ah, 0Dh ; Message to display output
    result db ? ; Variable to store result
    num db ? ; Variable to store input number
    
; Code segment
.code
    main proc
        ; Get input from user
        mov ah, 0Ah ; Function to read input from keyboard
        lea dx, input_msg ; Load address of input message into DX register
        int 21h ; Call interrupt 21h to read input
        
        ; Convert input to number
        xor bx, bx ; Clear BX register
        dec bx ; Set BX register to -1 (first character in input buffer)
        mov bl, num ; Move most significant byte of num to low byte of BX
        sub bl, 48 ; Convert ASCII value to decimal
        
        ; Calculate factorial
        mov cl, bl ; Move input to CL register
        dec cl ; Subtract 1 from input
        mov ax, bx ; Move input to AX register
        loop1:
            mul cl ; Multiply AX by CL
            dec cl ; Decrement CL
            cmp cl, 0 ; Compare CL to 0
            jne loop1 ; Jump to loop1 if CL is not equal to 0
            
        mov result, al ; Move result to result variable
        
        ; Display output
        mov ah, 09h ; Function to print output
        lea dx, output_msg ; Load address of output message into DX register
        int 21h ; Call interrupt 21h to print output
        mov dl, result ; Move result to DL register
        add dl, 48 ; Convert result to ASCII character
        mov ah, 02h ; Function to print character
        int 21h ; Call interrupt 21h to print result
        
        ; Exit program
        mov ah, 4Ch ; Function to exit program
        int 21h ; Call interrupt 21h to exit program
    main endp
end main
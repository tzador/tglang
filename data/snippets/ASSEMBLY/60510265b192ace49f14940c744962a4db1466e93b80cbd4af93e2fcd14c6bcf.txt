; Initializing data section
.section .data

; Declaring variables
variables:
    .int int_var
    .byte byte_var
    .word word_var
    .float float_var
    .ascii string_var, "This is a string variable"

; Initializing bss section
.section .bss

; Reserving space for variables
space:
    .skip 4, 0x00 ; Reserving 4 bytes for space variable with initial value 0x00

; Initializing text section
.section .text

; Beginning of main function
.global main
main:
    movl $5, %eax       ; Moving value 5 into eax register
    movb $3, %bl        ; Moving value 3 into bl register
    addl %ebx, %eax     ; Adding values in eax and ebx registers
    imul %eax, %ebx     ; Multiplying values in eax and ebx registers
    push %ebx           ; Pushing ebx register onto stack
    pop %eax            ; Popping value from stack into eax register
    call function       ; Calling function with current value in eax register
    movl $1, %eax       ; Setting exit status code as 1
    xorl %ebx, %eax     ; XORing values in eax and ebx registers
    int $0x80           ; Interrupt to exit program

; Declaring function
function:
    movl $10, %eax      ; Moving value 10 into eax register
    ret                 ; Returning value in eax register
; This code snippet calculates the factorial of a given number using recursion in Assembly language

        section     .text
        global      _start
    extern      printf      ; external function from standard library
    
    _start:
        mov     ecx, 5      ; set the number to calculate factorial of
        call    fact        ; call fact function
        
        exit:
        mov     eax, 1      ; set exit syscall number
        xor     ebx, ebx    ; clear ebx register for exit status
        int     0x80        ; perform exit syscall
        
    fact:
        cmp     ecx, 1      ; compare number with 1
        je      return      ; if equal, return
        
        dec     ecx         ; decrease number by 1
        push    ecx         ; push onto stack for future reference
        call    fact        ; recursively call fact function
        
        pop     ecx         ; pop previous value from stack
        mul     ecx         ; multiply current value with previous value
        jmp     return      ; jump to return
        
    return:
        mov     ebx, eax    ; move result to ebx register
        mov     eax, 0      ; set return value to 0
        push    ebx         ; push result onto stack
        push    format      ; push format string onto stack
        call    printf      ; call printf function to print the result
        add     esp, 8      ; clean up stack
        
        ret                 ; return to calling function
        
    section     .data
    format      db  "Factorial of %d is: %d", 10, 0    ; format string
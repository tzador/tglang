; Starts the program execution
start:
   nop              ; no operation
   lea ax, msg      ; Load Effective Address of message into ax register
   mov ah, 09h      ; Store DOS print string function code in ah register 
   int 21h          ; Call interrupt to print message
   lea dx, input    ; Load Effective Address of input into dx register
   mov ah, 0ah      ; Store DOS input function code in ah register
   int 21h          ; Call interrupt to input string
   lea si, input    ; Load Effective Address of input into si register
   lea di, output   ; Load Effective Address of output into di register
   cld              ; Clear direction flag to move forward through strings
   mov cx, 5        ; Set loop counter to 5, since input is limited to 5 characters
loop:               ; Start of loop
   movsb            ; Move string byte from si to di
   loop loop        ; Loop until cx reaches 0
   mov [di], "$"    ; Add terminating character to end of string
   mov ah, 09h      ; Store DOS print string function code in ah register
   int 21h          ; Call interrupt to print output string
   jmp start        ; Jump back to start label to restart the program
; Data section
msg db "Please enter a string: $"
input db 6, ?, "$"  ; Define input buffer to hold up to 5 characters
output db 6         ; Define output buffer to hold 5 characters and terminating character
; This code snippet calculates the factorial of a number using recursion

; Initialize variables
section .data
    num db 5 ; number to find factorial of

section .text
    global _start
    extern printf

_start:
    mov ecx, dword [num] ; move num into ecx register

    ; call recursive function
    call factorial

    ; print result
    mov eax, dword [num]
    push eax    ; push num onto stack as argument for printf
    push message ; push message onto stack as format string for printf
    call printf ; call printf function
    add esp, 8  ; clean up stack

    ; exit program
    mov eax, 1 ; exit system call
    mov ebx, 0 ; exit status code
    int 0x80   ; interrupt to terminate program

factorial:
    push ebp    ; create stack frame
    mov ebp, esp ; move stack pointer to base pointer

    ; check if number is 0 or 1
    cmp ecx, 1
    jle end_factorial

    ; decrement ecx by 1
    mov eax, ecx
    dec eax     ; decrement eax by 1
    mov ecx, eax ; move updated value back into ecx

    ; call recursive function
    call factorial

    ; multiply current number by previous result
    imul ecx, dword [ebp+8]

    ; clean up stack frame and return
    end_factorial:
    pop ebp
    ret

section .data
    message db "The factorial of %d is %d", 10, 0 ; format string for printf function
    ; %d will be replaced with num and the calculated factorial
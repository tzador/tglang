.text
.globl _start     # global label that defines starting point of program


_start:           # start of main program

# initialize variables 
    movl $10, %eax     # move value 10 into %eax register
    movl $2, %ebx      # move value 2 into %ebx register
    movl $0, %ecx      # move value 0 into %ecx register
    movl $0, %edx      # move value 0 into %edx register

# perform arithmetic operation 
    mul %ebx           # multiply value in %eax register with value in %ebx register
    movl %eax, %ecx    # move result of multiplication into %ecx register
    movl $4, %eax      # move value 4 into %eax register
    movl $1, %ebx      # move value 1 into %ebx register

# call system call 
    int $0x80          # interrupt to call kernel

# print output 
    movl $4, %eax      # move value 4 into %eax register
    movl $1, %ebx      # move value 1 into %ebx register
    leal format, %ecx  # load address of format string into %ecx register
    movl $10, %edx     # move value 10 into %edx register
    int $0x80          # interrupt to call kernel

# exit program
    movl $1, %eax      # move value 1 into %eax register
    xor %ebx, %ebx     # clear %ebx register
    int $0x80          # interrupt to call kernel

.data
format:               # label for format string
    .asciz "The result is: %d\n"    # format string for output
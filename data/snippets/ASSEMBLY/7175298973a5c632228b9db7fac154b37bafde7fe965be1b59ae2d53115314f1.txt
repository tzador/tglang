SECTION .data ; Start of the data section

msg db "Hello World!", 0xA ; Defines a string variable containing "Hello World!" followed by a line feed character
len equ $-msg ; Calculates the length of the string by subtracting the address of msg from the current address

SECTION .bss ; Start of the bss section

buffer resb 80 ; Reserves 80 bytes of memory to store user input

SECTION .text ; Start of the text section

global _start ; Marks the entry point of our program

_start: ; Label for our entry point

mov eax, 4 ; System call number for printing to console
mov ebx, 1 ; File descriptor for stdout
mov ecx, msg ; Address of the string to be printed
mov edx, len ; Length of the string to be printed
int 0x80 ; Execute the system call

mov eax, 3 ; System call number for reading from console
mov ebx, 0 ; File descriptor for stdin
mov ecx, buffer ; Address where the user input will be stored
mov edx, 80 ; Maximum number of bytes to read
int 0x80 ; Execute the system call

mov eax, 4 ; System call number for printing to console
mov ebx, 1 ; File descriptor for stdout
mov ecx, buffer ; Address of the user input to be printed
int 0x80 ; Execute the system call

mov eax, 1 ; System call number for exiting the program
mov ebx, 0 ; Exit status code
int 0x80 ; Execute the system call
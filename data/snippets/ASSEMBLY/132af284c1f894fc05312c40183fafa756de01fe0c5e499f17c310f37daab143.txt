; The following code snippet is written in assembly language.
; It calculates the factorial of a number using recursion.

section .text

global _start      ; tells linker entry point

_start:
    mov ecx, 5      ; initializing the number to calculate factorial of
    
    ; recursive call to factorial function
    sub esp, 4      ; allocating space in stack for local variables
    push ecx        ; pushing argument (number) onto stack
    call factorial  ; calling factorial function
    add esp, 4      ; freeing allocated space in stack
    
    ; printing result
    push eax        ; pushing result onto stack
    push dword format_string     ; pushing format string onto stack
    call printf     ; calling printf function to print result
    add esp, 8      ; freeing allocated space in stack

    ; exiting program
    mov eax, 1      ; telling operating system to exit program
    int 0x80        ; making system call to exit program

; recursive function to calculate factorial
factorial:
    push ebp        ; saving frame pointer
    mov ebp, esp    ; setting new frame pointer
    mov eax, [ebp+8]    ; retrieving argument (number) from stack
    cmp eax, 1      ; checking if number is 1
    je .base_case   ; if yes, jump to base case
    dec eax         ; decrementing number
    push eax        ; pushing decremented number onto stack
    call factorial  ; recursive call to factorial function
    mov ebx, eax    ; storing result of recursive call in ebx
    pop eax         ; retrieving decremented number from stack
    imul eax, ebx   ; multiplying number by result of recursive call
    jmp .end        ; jump to end of function
.base_case:
    mov eax, 1      ; if number is 1, return 1
.end:
    mov esp, ebp    ; restoring stack pointer
    pop ebp         ; restoring frame pointer
    ret             ; returning to caller

section .data

; format string for printf function
format_string db 'The factorial of %d is %d', 10, 0
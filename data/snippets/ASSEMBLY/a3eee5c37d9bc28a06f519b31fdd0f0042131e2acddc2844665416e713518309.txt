;This code snippet is a sorting algorithm implementation 
;in assembly language

.model small
.stack 100h

.data

arr db 4, 6, 1, 3, 9, 2, 7, 5, 8 ;array to be sorted
size equ 9 ;size of the array

.code

main proc

mov ax, @data ;loads data segment
mov ds, ax ;moves data segment value to ds register
mov es, ax ;moves data segment value to es register

;outer loop
mov cx, size ;loads size of array into cx register

outerLoop:
mov si, offset arr ;loads offset of array into si register

;inner loop to compare and swap elements
innerLoop:
mov al, [si] ;loads value at current position in array into al register
cmp al, [si + 1] ;compares with the next element in array
jng skipSwap ;jumps to skipSwap if current element is smaller or equal to next element
xchg al, [si + 1] ;swaps the elements if current element is greater than next element
mov [si], al ;stores swapped value back to array
skipSwap:
inc si ;increments si to move to next element in array
loop innerLoop ;loops until cx becomes 0

dec cx ;decrements cx to move to next element in array
jnz outerLoop ;jumps to outerLoop if cx is not equal to 0

mov ah, 4ch ;loads exit code
int 21h ;exits the program

main endp
end main ;end of program
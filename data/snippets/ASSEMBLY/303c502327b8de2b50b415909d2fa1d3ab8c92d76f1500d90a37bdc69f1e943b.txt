; Example of a loop in assembly language

section .text                       ; Defines the section of the code as text

global _start                       ; Defines the entry point of the program

_start:                             ; Starting label of the program

mov ecx, 5                          ; Sets the counter to 5

loop_start:                         ; Label for the start of the loop

cmp ecx, 0                          ; Compares the counter to 0

jle loop_end                        ; Jumps to loop_end if the counter is less than or equal to 0

mov eax, ecx                        ; Moves the value of ecx into eax register

call print_num                      ; Calls the print_num subroutine to print the value stored in eax

dec ecx                             ; Decrements the counter by 1

jmp loop_start                      ; Jumps back to the start of the loop

loop_end:                           ; Label for the end of the loop

mov eax, 1                          ; System call for exit

xor ebx, ebx                        ; Sets ebx register to 0

int 0x80                            ; Calls the kernel to terminate the program

print_num:                          ; Subroutine to print the value stored in eax

push eax                            ; Pushes the value stored in eax onto the stack

push byte 10                        ; Pushes the ASCII code for new line onto the stack

pop esi                             ; Pops the value stored in esi into esi register

pop ebx                             ; Pops the value stored in ebx into ebx register

mov edx, 1                          ; Sets the length of the string to be printed (1 character)

mov eax, 4                          ; System call for write

int 0x80                            ; Calls the kernel to print the value stored in eax

ret                                 ; Returns from the subroutine and jumps back to the next instruction after the call

; Output will be:
; 5
; 4
; 3
; 2
; 1
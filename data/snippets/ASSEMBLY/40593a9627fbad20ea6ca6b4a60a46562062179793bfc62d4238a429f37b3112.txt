; Sets the base address of the display buffer at 0x2000
INIT_DISPLAY:
    LDA #$20              ; load the ASCII code for space into the accumulator
    STA $2000             ; store it at memory address 0x2000 to initialize first character
    LDA #$40              ; load the ASCII code for @ into the accumulator
    STA $2001             ; store it at memory address 0x2001 to initialize second character
    LDA #$3C              ; load the ASCII code for < into the accumulator
    STA $2002             ; store it at memory address 0x2002 to initialize third character
    LDA #$3E              ; load the ASCII code for > into the accumulator
    STA $2003             ; store it at memory address 0x2003 to initialize fourth character
    
    ; Loop to fill the rest of the display buffer with characters
    LDY #4                ; set the counter to 4 (since first four spaces are already initialized)
LOOP:
    INY                    ; increment the counter
    LDA #$2E               ; load the ASCII code for . into the accumulator
    STA $2000,Y            ; store it at the next memory address starting from 0x2004
    CPY #$0F               ; compare counter to 15 (end of display buffer)
    BNE LOOP               ; if counter is not equal to 15, jump back to LOOP to continue filling buffer
    
    RTS                    ; return from subroutine
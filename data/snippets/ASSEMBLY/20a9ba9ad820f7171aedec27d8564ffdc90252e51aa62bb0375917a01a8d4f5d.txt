;Declare variables:
var1 db 5 ;8-bit variable
var2 dw 1000 ;16-bit variable
var3 dd 200000 ;32-bit variable

.CODE
 ;Code segment
 .START:
  MOV AX, @DATA ;Load data segment address into AX
  MOV DS, AX ;Set data segment to DS
  MOV AH, 01H ;Function code 01h (read character)
  INT 21H ;Call DOS
  CMP AL, "1" ;Check if input is "1" 
  JNE ELSE ;If not, jump to ELSE section
  ADD var1, AL ;Add input to var1
  JMP ENDIF ;Jump to ENDIF section
ELSE:
  CMP AL, "2" ;Check if input is "2"
  JNE ENDIF ;If not, jump to ENDIF section
  MOV BL, var1 ;Move var1 into BL register
  MOV AL, BL ;Move BL into AL register
  MUL var2 ;Multiply AL by var2
  DIV var3 ;Divide result by var3
  MOV var1, AL ;Move result into var1
ENDIF:

.END:
  MOV AH, 09H ;Function code 09h (print string)
  LEA DX, msg ;Load msg offset into DX
  INT 21H ;Call DOS
  INT 20H ;Terminate program
  msg db "Final result is: $"

.DATA
  msg1 db "Enter '1' to add character to var1 or '2' to perform calculation: $"

END START
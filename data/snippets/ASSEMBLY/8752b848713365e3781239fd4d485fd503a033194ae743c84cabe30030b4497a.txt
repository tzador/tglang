SECTION .data
        msg db 'Hello, world!', 0x0A  ; declaring a string variable "msg" with value "Hello, world!" and line feed
        len equ $-msg                ; storing the length of the string in "len" variable using the current position $ - the start position of "msg"
        
    SECTION .text
        global _start                ; declaring the entry point for the program
        
    _start:
        mov rax, 1                   ; storing the system call number for "write" in register rax
        mov rdi, 1                   ; storing the file descriptor (STDOUT) in register rdi
        mov rsi, msg                 ; storing the memory address of "msg" in register rsi
        mov rdx, len                 ; storing the length of the string in register rdx
        syscall                      ; calling the system call to write to STDOUT
        
        mov rax, 60                  ; storing the system call number for "exit" in register rax
        mov rdi, 0                   ; storing the exit status code 0 in register rdi
        syscall                      ; calling the system call to exit the program
        
    ; Output: Hello, world!
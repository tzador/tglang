; Create a function that checks if a given value is prime
; Input:
;       R0 - the value to check
; Output:
;       R1 - 1 if prime, 0 if not
CHECK_PRIME:
    MOV R1, #1 ; Assume value is prime
    
    ; Loop through all possible factors of the value
    MOV R2, #2 ; Start at 2
    LOOP:
        CMP R2, R0 ; Compare value with potential factor
        BGT END_LOOP ; Exit loop if potential factor is greater than value
        
        ; Check if potential factor divides the value evenly
        MOV R3, #0 ; Counter for number of remainderless divisions
        MOV R4, R0 ; Copy value to another register for division
        
        DIV R4, R2 ; Divide value by potential factor
        CMP R4, #0 ; Check if there is a remainder
        BEQ NOT_PRIME ; If no remainder, value is not prime
        
        ; Increment counter and potential factor
        ADD R3, #1 ; Increment number of remainderless divisions
        ADD R2, #1 ; Increment potential factor
        B LOOP ; Repeat loop
        
    ; Check if number of remainderless divisions is 1
    NOT_PRIME:
        CMP R3, #1 ; If only one remainderless division, number is prime
        BEQ END_LOOP ; Otherwise, continue loop to check for other factors
        
    END_LOOP:
        MOV R1, #0 ; If multiple remainderless divisions, value is not prime
        
    RET ; Return from function
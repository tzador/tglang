.global main           ; define main function as global

.section .text         ; text section for code

main:
    pushl %ebp         ; store value of ebp on stack
    movl %esp, %ebp    ; move stack pointer to base pointer

    movl $0, %eax      ; move 0 into eax register
    movl $0, %ebx      ; move 0 into ebx register
    movl $10, %ecx     ; move 10 into ecx register

loop:
    addl %ecx, %eax    ; add ecx to eax
    incl %ebx          ; increment ebx
    cmpl %ebx, %ecx    ; compare ebx to ecx
    jle loop           ; if ebx is less than or equal to ecx, jump to loop

    movl %ebp, %esp    ; restore stack pointer
    popl %ebp          ; pop value from stack into ebp

    movl %eax, %ebx    ; move value of eax into ebx
    movl $1, %eax      ; move 1 into eax (exit code)
    int $0x80          ; system call to exit program

.section .data         ; data section for constants

hello_world:
    .ascii "Hello, World!\n"  ; define string "Hello, World!"
section .data    ; declares the data section

    msg db 'Hello World!',0xA,0xD             ; declares a variable msg with the string 'Hello World!', line feed and carriage return    
    len equ $-msg                            ; calculates the length of the string by subtracting the current address from the address of msg

section .bss ; declares the bss section

    buf resb 24  ; reserves 24 bytes of uninitialized memory for the buffer 

section .text  ; declares the code section

    global _start    ; declares the entry point _start as global

_start:    ; start of the program
    
    ; print msg
    mov eax, 4     ; sys_write syscall number
    mov ebx, 1     ; file_descriptor - standard output
    mov ecx, msg   ; pointer to the msg variable
    mov edx, len   ; length of the msg  
    int 0x80       ; executes the system call
    
    ; read user input
    mov eax, 3     ; sys_read syscall number
    mov ebx, 0     ; file_descriptor - standard input
    mov ecx, buf   ; pointer to the buf variable
    mov edx, 24    ; maximum number of bytes to read
    int 0x80       ; executes the system call
    
    ; print user input
    mov eax, 4     ; sys_write syscall number
    mov ebx, 1     ; file_descriptor - standard output
    mov ecx, buf   ; pointer to the buf variable
    mov edx, 24    ; length of the buf variable
    int 0x80       ; executes the system call
    
    mov eax, 1     ; sys_exit syscall number
    xor ebx, ebx   ; exit status code 0
    int 0x80       ; executes the system call
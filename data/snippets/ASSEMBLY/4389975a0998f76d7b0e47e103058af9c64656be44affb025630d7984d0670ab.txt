.section .text
.globl _strcat
_strcat:
   pushl %ebp
   movl %esp, %ebp
   subl $12, %esp
   movl 8(%ebp), %eax
   movl 12(%ebp), %ecx
   movl %eax, (%esp)
   call _strlen
   movl %eax, (%esp)
   call _strcpy
   movl -4(%ebp), %edx
   leal (%eax,%edx,1), %eax
   movl %eax, (%esp)
   call _strlen
   movl %eax, (%esp)
   call _strcat
   movl %eax, (%esp)
   call _strcpy
   addl $12, %esp
   movl %ebp, %esp
   popl %ebp
   ret

_strlen:
   pushl %ebp
   movl %esp, %ebp
   subl $4, %esp
   movl 8(%ebp), %ecx
   xorl %eax, %eax
   .L2:
       incl %eax
       incl %ecx
       cmpb $0, (%ecx)
       jne .L2
   movl %eax, -4(%ebp)
   leave
   ret
   
_strcpy:
   pushl %ebp
   movl %esp, %ebp
   subl $8, %esp
   movl 8(%ebp), %eax
   movl 12(%ebp), %ecx
   .L2:
      movb (%ecx), %dl
      movb %dl, (%eax)
      incl %eax
      incl %ecx
      testb %dl, %dl
      jne .L2
   movb $0, (%eax)
   addl $8, %esp
   movl %ebp, %esp
   popl %ebp
   ret
; This code snippet calculates the Fibonacci sequence up to n

; Define constants and variables
BRANCH equ * + 7
n equ 10
prev_prev_value dw 0
prev_value dw 1
current_value dw 0
counter dw 0

; Loop to calculate sequence
loop:   ; Label for loop
    ; Check if counter is equal to n
    cmp counter, n
    je end ; If so, jump to end
    ; Calculate current value
    mov current_value, prev_prev_value
    add current_value, prev_value
    ; Shift values
    mov prev_prev_value, prev_value
    mov prev_value, current_value
    ; Increment counter
    inc counter
    ; Jump back to loop
    jmp loop

; Print results
end:    ; Label for end
    ; Print first value
    mov ax, current_value
    call print
    ; Shift values
    mov ax, prev_prev_value
    mov prev_prev_value, prev_value
    mov prev_value, ax
    ; Check if current_value is greater than 1000
    cmp current_value, 1000
    jg end ; If so, jump to end
    ; Increment counter
    inc counter
    ; Jump back to loop
    jmp loop

; Print function
print:  ; Function for printing values
    push dx ; Save dx register
    ; Convert current_value to string
    mov bx, 10
    div bx
    ; Check result for single digit
    cmp ax, 0
    jne print  ; If not, keep converting
    ; Convert to ASCII code
    add ax, 30h
    ; Print character
    mov dl, al
    mov ah, 02h
    int 21h
    ; Restore dx register
    pop dx
    ret

; End of program
mov ah, 0
int 20h ; Terminate program
; Setting up the stack pointer
mov esp, [ebp-4]

; Pushing a value onto the stack
push eax

; Moving a value into a register
mov ecx, 10

; Adding two values and storing the result in a register
add eax, ebx
mov edx, eax

; Looping through a block of code
loop:
    ; Compare two values and jump if they are equal
    cmp eax, ebx
    je end_loop

    ; Substracting a value by one and storing it in a register
    dec eax

    ; Printing a value in a register
    push eax
    call print_value
    add esp, 4

    ; Jumping back to the beginning of the loop
    jmp loop

end_loop:
    ; Cleaning up the stack
    mov esp, ebp
    pop ebp

    ; Returning from the function
    ret
; Sets eax to 5 and ebx to 10
mov eax, 5 ; Move the value 5 into the eax register
mov ebx, 10 ; Move the value 10 into the ebx register

; Performs addition of eax and ebx
add eax, ebx ; Add ebx to eax, result stored in eax

; Loops 10 times, incrementing eax by 1 each time
mov ecx, 10 ; Move the value 10 into the ecx register
loop_start: ; Label for the loop
add eax, 1 ; Increment eax by 1
loop loop_start ; Loop until ecx reaches 0

; Stores the value of eax in memory
mov [mem_address], eax ; Move the value of eax into the memory address specified

; Calls a function
call my_function ; Calls the function named "my_function"

; Defines a function
my_function: ; Label for the function
push ebp ; Pushes the current base pointer onto the stack
mov ebp, esp ; Moves the stack pointer to the base pointer
; Code for the function goes here
pop ebp ; Restores the base pointer from the stack
ret ; Returns to the calling function
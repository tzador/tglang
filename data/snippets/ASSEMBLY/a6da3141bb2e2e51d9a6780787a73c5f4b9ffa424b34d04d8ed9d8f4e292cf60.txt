section	.text			; section declaration
	global	_start			; entry point for program
	
_start:				; start label for entry point
	mov		ax, 5			; moves the value 5 into ax register
	add		ax, 10			; adds 10 to ax register
	mov		bx, 5			; moves the value 5 into bx register
	sub		ax, bx			; subtracts bx register from ax register
	cmp		ax, 0			; compares ax register to 0
	je		equal			; jumps to label "equal" if ax == 0
	jg		greater			; jumps to label "greater" if ax > 0
	jl		less			; jumps to label "less" if ax < 0

equal:
	mov		cx, 0			; moves the value 0 into cx register
loop:
	cmp		cx, 10			; compares cx register to value 10
	je		done			; jumps to label "done" if cx == 10
	inc		cx			; increments cx register by 1
	jmp		loop			; jumps back to label "loop"

greater:
	mov		dx, 0			; moves the value 0 into dx register
loop2:
	cmp		dx, 10			; compares dx register to value 10 
	je		done			; jumps to label "done" if dx == 10
	add		dx, 2			; adds 2 to dx register
	jmp		loop2			; jumps back to label "loop2"

less:
	mov		si, 0			; moves the value 0 into si register
loop3:
	cmp		si, 10			; compares si register to value 10 
	je		done			; jumps to label "done" if si == 10
	sub		si, 3			; subtracts 3 from si register
	jmp		loop3			; jumps back to label "loop3"

done:
	mov		bx, 0			; moves the value 0 into bx register
	mov		ax, 1			; moves the value 1 into ax register
	int		0x80			; system call to exit the program
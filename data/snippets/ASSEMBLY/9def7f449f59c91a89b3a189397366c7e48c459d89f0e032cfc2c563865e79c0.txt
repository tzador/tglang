; Define and initialize variables
    SECTION .data
        countin DB 0           ; variable to keep track of input count
        temp DB 0              ; temporary variable
        sum DW 0               ; variable to store sum of input numbers
        avg DB 0               ; variable to store average of input numbers
        
; Main function
    SECTION .text
    global _start
    
    _start:
        ; Prompt user for input
        mov eax, 4              ; system call to print
        mov ebx, 1              ; file descriptor (stdout)
        mov ecx, msg1           ; message to print
        mov edx, msglen1        ; length of message
        int 80h                 ; interrupt to call kernel
        
        ; Take user input and save in variable temp
        mov eax, 3              ; system call to read
        mov ebx, 0              ; file descriptor (stdin)
        mov ecx, temp           ; variable to store input
        mov edx, 1              ; number of bytes to read
        int 80h                 ; interrupt to call kernel
        
        ; Convert ASCII input to decimal and store in sum
        sub temp, '0'           ; convert from ASCII to decimal
        movzx eax, temp         ; move input to EAX register
        add sum, ax             ; add input to sum
        
        ; Increase count and check for end of input
        inc countin             ; increase count
        cmp countin, 5          ; check if 5 numbers have been inputted
        je calculate_avg        ; if yes, jump to calculate average
        
        ; If input is not end of line, loop back to take next input
        cmp temp, 10            ; compare input to ASCII value for newline
        jne _start              ; if not equal, loop back to beginning
        
        ; Calculate average by dividing sum by 5
        calculate_avg:
        mov eax, sum            ; move sum to EAX register
        mov ebx, 5              ; divide by 5
        div ebx                 ; divide EAX by EBX, store result in EAX and remainder in EDX
        mov avg, al             ; move quotient (average) to avg variable
        
        ; Print average to terminal
        mov eax, 4              ; system call to print
        mov ebx, 1              ; file descriptor (stdout)
        mov ecx, msg2           ; message to print
        mov edx, msglen2        ; length of message
        int 80h                 ; interrupt to call kernel

; Data and messages
    SECTION .data
    msg1 db 'Enter 5 numbers (1 per line): '
    msglen1 equ $-msg1         ; length of message 1
    msg2 db 'The average is: '
    msglen2 equ $-msg2         ; length of message 2
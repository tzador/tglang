; This program calculates the nth term of the Fibonacci sequence

section .text  ; Defines the code section

global _start   ; Defines the entry point of the program

_start:
    mov eax, 0   ; Sets eax to 0, which will be the first Fibonacci number
    mov ebx, 1   ; Sets ebx to 1, which will be the second Fibonacci number
    mov ecx, 2   ; Sets ecx to 2, which will be the counter for the loop
    mov edi, 1   ; Sets edi to 1, which will act as an index for the Fibonacci numbers
    
calculate:
    mov edx, ebx   ; Moves the value of ebx (second Fibonacci number) into edx
    add edx, eax   ; Adds the value of eax (first Fibonacci number) to edx
    mov eax, ebx   ; Moves the value of ebx into eax, becoming the new first Fibonacci number
    mov ebx, edx   ; Moves the value of edx into ebx, becoming the new second Fibonacci number
    add ecx, 1     ; Increments ecx by 1, acting as a counter for the loop
    add edi, 1     ; Increments edi by 1, acting as the index for the Fibonacci numbers
    
    cmp ecx, n     ; Compares the value of ecx with the input n
    jne calculate  ; Jumps back to calculate if ecx is not equal to n
    ; If ecx is equal to n, the loop will stop and the program will continue
    
; The output will be stored in eax, which is the nth Fibonacci number
; To print the output, we will use the system call "write" with the parameters 1 (stdout), eax (output), and 1 (length of output, which is 1 digit in this case)
    
    mov eax, 4     ; Sets eax to the system call number for "write"
    mov ebx, 1     ; Sets ebx to 1, which is the file descriptor for stdout
    mov ecx, eax   ; Moves the value of eax (nth Fibonacci number) into ecx
    mov edx, 1     ; Sets edx to 1, which is the length of the output
    int 80h        ; Executes the system call
    
; To exit the program, we will use the system call "exit" with the parameter 0 (success)
    
    mov eax, 1     ; Sets eax to the system call number for "exit"
    mov ebx, 0     ; Sets ebx to 0, indicating a successful exit
    int 80h        ; Executes the system call
    
section .data    ; Defines the data section
n dd 10           ; Declares the variable n as a double word (4 bytes) with a value of 10
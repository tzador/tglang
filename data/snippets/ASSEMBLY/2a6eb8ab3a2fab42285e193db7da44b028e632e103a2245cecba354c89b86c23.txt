; This is a comment
        .data ; Start of data section
msg     db      'Hello World!',0xa,0x0 ; Define a string with carriage return and line feed characters
msgLen  equ     $-msg ; Calculate the length of the string by subtracting the address of the start of the string from the end of the string
        .text ; Start of code section
        .global _start ; Declare the code entry point as global
_start: ; Code entry point
        mov     $1, %rax ; Move the value 1 into the RAX register
        mov     $1, %rdi ; Move the value 1 into the RDI register, which is used as the first argument for system calls
        lea     msg, %rsi ; Load the address of the string into the RSI register, which is used as the second argument for system calls
        mov     $msgLen, %rdx ; Move the length of the string into the RDX register, which is used as the third argument for system calls
        syscall ; Call the system call to print the string
        mov     $60, %rax ; Move the value 60 into the RAX register, which is used as the system call number for ending the program
        xor     %rdi, %rdi ; Move the value 0 into the RDI register, which is used as the first argument for system calls
        syscall ; Call the system call to end the program
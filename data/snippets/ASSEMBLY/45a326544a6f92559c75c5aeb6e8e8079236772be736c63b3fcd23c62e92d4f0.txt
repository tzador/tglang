; This code snippet shows how to find the sum of two numbers using Assembly language
        .section .data
        input1:     .quad 5       ; first number to be added
        input2:     .quad 7       ; second number to be added
        sum:        .quad 0       ; variable to store the sum

        .section .text
        .globl _start
        _start:
        movq    input1, %rax     ; move first number into register rax
        movq    input2, %rbx     ; move second number into register rbx
        addq    %rax, %rbx       ; add the two numbers and store in rbx
        movq    %rbx, sum        ; move the sum into the sum variable

        ; The following code snippet will print the sum
        movq    $1, %rax         ; system call for write
        movq    $1, %rdi         ; file descriptor for stdout
        leaq    sum, %rsi        ; pointer to the sum variable
        movq    $8, %rdx         ; number of bytes to write
        syscall                  ; call the operating system

        movq    $60, %rax        ; system call for exit
        xorq    %rdi, %rdi       ; exit status code, 0 for success
        syscall                  ; call the operating system
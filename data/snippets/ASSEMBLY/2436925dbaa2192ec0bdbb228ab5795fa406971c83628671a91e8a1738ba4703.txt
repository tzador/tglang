; This is a comment
       mov ax, 0x0000  ; Move value 0x0000 into ax register
       mov bx, 0x0001  ; Move value 0x0001 into bx register
       add ax, bx      ; Add the values of ax and bx and store the result in ax
       cmp ax, bx      ; Compare the values of ax and bx
       jle label       ; Jump to the specified label if less than or equal to
       jmp label2      ; Jump to the specified label unconditionally
       label:          ; Define a label for use in branching
       mov cx, 0x0002  ; Move value 0x0002 into cx register
       inc cx          ; Increment the value in cx register
       label2:         ; Define a label for use in branching
       mov dx, 0x0003  ; Move value 0x0003 into dx register
       mul dx          ; Multiply the values in ax and dx and store the result in ax
       mov di, dx      ; Move the value in dx into di register
       mov ah, 0x9     ; Move value 0x9 (the ASCII code for tab) into ah register
       int 0x21        ; Call interrupt 0x21 to print the value of ah (tab) to the console
       hlt             ; Halt the program
; This code snippet performs a loop that sums the values in an array
ARRAY_START:        ; defines label ARRAY_START as the start of the array
    DC.W 5, 3, 1, 2, 4   ; initializes array with 5 values
ARRAY_LENGTH:       ; defines label ARRAY_LENGTH as the length of the array
    DC.W 5           ; stores 5 as the length of the array
SUM:                ; defines label SUM as the start of the sum variable
    DC.W 0           ; initializes sum variable with value 0
LOOP_START:         ; defines label LOOP_START as the start of the loop
    LDR R1, ARRAY_START     ; loads the address of ARRAY_START into register R1
    MOV R2, #0              ; initializes counter register R2 with value 0
LOOP_BODY:          ; defines label LOOP_BODY as the start of the loop body
    LDR R3, [R1], #2    ; loads the value at the address pointed to by R1 into register R3
                        ; and increments R1 by 2 (since each array element is 2 bytes)
    ADD R4, R4, R3      ; adds the value in R3 to sum variable in R4
    ADD R2, R2, #1      ; increments counter register R2 by 1
    CMP R2, #5          ; compares counter register R2 to ARRAY_LENGTH
    BNE LOOP_BODY       ; branches back to LOOP_BODY if R2 is not equal to 5
LOOP_END:           ; defines label LOOP_END as the end of the loop
    END                ; stops program execution
;This code snippet calculates the factorial of a number using a recursive function in assembly language
section .data   ;Data section
    num db 3    ;Initializing the number whose factorial is to be found
    result dw 0 ;Initializing the variable to store the factorial result
    msg db "The factorial of ", num, " is: " ;String used for printing the result

section .text   ;Code section
    global _start ;Global declaration for starting label
 
_start:         ;Starting label for the program
    mov ax, num ;Move the number into the AX register 
    call factorial ;Call the factorial function 
    mov result, ax ;Move the result from the AX register into the result variable 
    
    ;Printing the result
    mov dx, msg     ;Move the message string into the DX register
    call print_msg  ;Call the print_msg function 
    mov ah, 2h      ;Set the AH register to 2, which is the print function for printing a number
    mov cx, result  ;Move the result into the CX register for printing
    add cx, 48      ;Adding 48 to the result to convert it into ascii value
    int 21h         ;Execute interrupt 21h (Print function)
    
    ;Exit the program
    mov ah, 0       ;Set the AH register to 0
    mov al, 0       ;Set the AL register to 0
    int 20h         ;Execute interrupt 20h (Exit function)
    
;Recursive function to calculate the factorial
factorial:
    dec ax          ;Decrement the number by 1
    cmp ax, 1       ;Compare if the number is equal to 1
    jz end          ;Jump to the end label if the number is equal to 1 
    push ax         ;Push the number onto the stack
    call factorial  ;Call the factorial function recursively
    pop ax          ;Pop the number from the stack
    mul ax          ;Multiply the current number with the number on the stack
    ret             ;Return to the calling function
    
;Function to print a string
print_msg:
    mov ah, 9       ;Set the AH register to 9, which is the print function for printing a string
    int 21h         ;Execute interrupt 21h (Print function)
    ret             ;Return to the calling function
    
end:              ;End label for the program
; This code snippet calculates the Fibonacci sequence up to a given number n
;
; Inputs:
;   r1: the number n
;
; Outputs:
;   r0: the calculated value
;
; Memory:
;   temp1: stores the current value
;   temp2: stores the previous value
;
; Calculations:
;   temp1 = 1
;   temp2 = 0
;   r0 = 0
;   while r1 > 0:
;       temp1 = temp1 + temp2 ; calculates next value in sequence
;       temp2 = temp1         ; updates previous value
;       r1 = r1 - 1           ; decreases n by 1
;       r0 = r0 + temp2       ; adds current value to overall sum
;
; Exit condition:
;   r1 = 0 ; when n reaches 0, loop ends and r0 holds final sum

MAIN:
        .global _start          ; allows external calls to this code
_start:
        ldr r1, =Input          ; loads n value into r1
        ldr r0, =0              ; sets initial sum to 0
        ldr temp1, =1           ; sets initial current value to 1
        ldr temp2, =0           ; sets initial previous value to 0
        cmp r1, #0              ; compares n to 0
        beq END_LOOP            ; if n = 0, exit loop

LOOP:
        add temp1, temp2        ; calculates next value in sequence
        mov temp2, temp1        ; updates previous value
        sub r1, r1, #1          ; decreases n by 1
        add r0, r0, temp1       ; adds current value to overall sum
        cmp r1, #0              ; compares n to 0
        bne LOOP                ; if n != 0, continue loop

END_LOOP:
        str r0, =Output         ; stores final sum in r0
        mov r7, #1              ; syscall number for exit
        mov r0, #0              ; exit code
        svc 0                   ; performs syscall to exit program

Input:
        .word 10                ; change this value to desired n
Output:
        .word 0                 ; placeholder for final sum
temp1:
        .word 0                 ; placeholder for current value
temp2:
        .word 0                 ; placeholder for previous value
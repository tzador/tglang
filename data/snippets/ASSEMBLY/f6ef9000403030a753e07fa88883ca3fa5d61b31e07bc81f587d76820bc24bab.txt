; This code snippet is an example of a loop in Assembly language
; It prints the numbers 1 to 10 in order
; Uses the x86 architecture
; 
section .data

    ; Define the variables we'll use
    num db 0 ; This will store the current number we want to print
    loop_count dd 1 ; This will keep track of how many times we've looped
    
section .text
    global _start ; This is required for all Assembly programs
    
_start:
    mov ecx, 10 ; Set the loop counter to 10 (We want to print 10 numbers)
    
loop:
    ; Check if we've reached 11, which means we've looped 10 times
    cmp dword [loop_count], 11
    jge end_loop
    
    ; Print the number
    mov eax, 4 ; System call for "write"
    mov ebx, 1 ; File descriptor 1 (stdout)
    mov ecx, num ; The number we want to print
    mov edx, 1 ; Length of the number (only 1 byte)
    int 0x80 ; Call the kernel
    
    ; Increment the loop count
    mov eax, [loop_count]
    inc eax
    mov [loop_count], eax
    
    ; Increment the number
    mov eax, [num]
    inc eax
    mov [num], eax
    
    ; Loop back to the start
    jmp loop

end_loop:
    mov eax, 1 ; System call for "exit"
    mov ebx, 0 ; Exit code 0 (success)
    int 0x80 ; Call the kernel
    
; End of program
;----------------------------------------------------
; Program for finding the greatest common divisor (GCD)
; By John Doe
;----------------------------------------------------

section .text
global _start
_start:

; Initializing variables
mov	ax, 120	; First number
mov	bx, 60	; Second number
mov	cx, 0	; Counter used for loop

; Calculating GCD using Euclid's algorithm
gcd:
mov	dx, 0	; Clearing dx register
cmp	bx, 0	; Checking if bx is equal to 0
je	done	; If yes, go to done label

; Calculating remainder using modulo
div	bx	; Dividing ax by bx, remainder stored in dx
mov	ax, bx	; Setting ax to bx
mov	bx, dx	; Setting bx to remainder

; Incrementing counter
inc	cx	; Incrementing cx by 1

; Jumping back to gcd label
jmp	gcd	; Continues until bx is equal to 0

done:
; Storing GCD value in ax register
mov	ax, bx	; Final GCD value stored in ax register

; Printing the result
mov	ah, 0x0E	; Function code to print
add	ax, 48	; Converting ax to ASCII character
int	0x10	; BIOS interrupt to print character
add	ax, 48	; Converting ax to ASCII character again
int	0x10	; BIOS interrupt to print character
mov	al, 10	; New line character
int	0x10	; BIOS interrupt to print new line

; Exiting the program
mov	ah, 0x4C	; Function code to exit
int	0x21	; DOS interrupt to exit program

section .data
; No data section needed for this program
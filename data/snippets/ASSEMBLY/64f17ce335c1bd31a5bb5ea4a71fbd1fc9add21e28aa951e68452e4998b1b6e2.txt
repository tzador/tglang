; This code snippet is a simple example of a factorial function in assembly language
; It takes in a number as input and returns the factorial of that number 

    .global     _start              ; marks the entry point of the program
    
    .text                           ; indicates the start of the code segment
    
    _start:                         ; start of the program
    
    movl    $5, %eax                ; move the input number (5) into the eax register
    call    factorial               ; call the factorial function
    
    movl    $0, %ebx                ; move the return value (result) into the ebx register
    
    movl    $1, %eax                ; move the system call number for exit into the eax register
    int     $0x80                   ; interrupt to execute the system call
    
factorial:                          ; start of the factorial function
    
    pushl   %ebp                    ; push the base pointer onto the stack
    movl    %esp, %ebp              ; set the base pointer to the stack pointer 
    
    movl    8(%ebp), %ecx           ; move the input number into the ecx register 
    cmpl    $1, %ecx                ; compare the input number with 1
    
    je      end_factorial           ; jump to end_factorial if input number is 1
    
    decl    %ecx                    ; decrement the input number by 1
    pushl   %ecx                    ; push the updated input number onto the stack 
    pushl   %ecx                    ; push a second copy of the input number onto the stack
    call    factorial               ; call the factorial function recursively
    
    movl    8(%ebp), %ecx           ; move the input number into the ecx register
    imull   %ecx, %eax              ; multiply the input number with the result from the recursive call 
    
end_factorial:                      ; end of the factorial function 
    
    popl    %ebp                    ; restore the base pointer 
    ret                             ; return to the main program
    
    .end                            ; end of the code segment
.section .data
    ; Define variables for storing input values
    first_num DB 0
    second_num DB 0
    result DB ?

.section .bss
    ; Define a variable for storing the sum of the input values
    sum_resb 1

.section .text
    global _start

_start:
    ; Prompt user to enter first number
    mov eax, 4
    mov ebx, 1
    mov ecx, msg1
    mov edx, msg1_len
    int 0x80

    ; Take in first number input from user
    mov eax, 3
    mov ebx, 0
    mov ecx, first_num
    mov edx, 1
    int 0x80

    ; Prompt user to enter second number
    mov eax, 4
    mov ebx, 1
    mov ecx, msg2
    mov edx, msg2_len
    int 0x80

    ; Take in second number input from user
    mov eax, 3
    mov ebx, 0
    mov ecx, second_num
    mov edx, 1
    int 0x80

    ; Convert ASCII characters to integers
    sub first_num, '0'
    sub second_num, '0'

    ; Add the two numbers together and store result in 'result' variable
    add first_num, second_num
    mov [result], first_num

    ; Convert result back to ASCII character
    add [result], '0'

    ; Prompt user with sum of the two numbers
    mov eax, 4
    mov ebx, 1
    mov ecx, msg3
    mov edx, msg3_len
    int 0x80

    ; Print the result
    mov eax, 4
    mov ebx, 1
    mov ecx, result
    mov edx, 1
    int 0x80

    ; Exit program
    mov eax, 1
    mov ebx, 0
    int 0x80

.section .data

; Define message prompts
msg1 db "Enter first number: ", 0xA, 0xD
msg2 db "Enter second number: ", 0xA, 0xD
msg3 db "The sum is: ",  0xA, 0xD

; Define message lengths
msg1_len equ $ - msg1
msg2_len equ $ - msg2
msg3_len equ $ - msg3
; Initialize values in data section
section .data
    msg db "Hello, World!",0xA,0xD ; Storing string and new line characters
    num1 dd 10 ; Storing integer value in double word
    
; Code section
section .text
    global _start  ; Declaring _start label as the entry point to our program
    
_start:
    ; Printing string stored in data section
    mov eax, 4  ; Load system call number for 'write' into eax register
    mov ebx, 1  ; Load file descriptor for stdout into ebx register
    mov ecx, msg ; Load address of string into ecx register
    mov edx, 14 ; Load length of string into edx register
    int 0x80 ; Invoke system call
    
    ; Adding two numbers stored in data section and printing the result
    mov eax, num1 ; Load first number into eax register
    add eax, num1 ; Add second number to eax register
    push eax  ; Push the sum onto the stack
    
    mov eax, 4 ; Load system call number for 'write' into eax register
    mov ebx, 1 ; Load file descriptor for stdout into ebx register
    pop ecx ; Pop the sum from the stack into ecx register
    mov edx, 10 ; Load length of integer as string into edx register
    int 0x80 ; Invoke system call
    
    ; Exiting the program
    mov eax, 1 ; Load system call number for 'exit' into eax register
    xor ebx, ebx ; Load exit status of 0 into ebx register
    int 0x80 ; Invoke system call
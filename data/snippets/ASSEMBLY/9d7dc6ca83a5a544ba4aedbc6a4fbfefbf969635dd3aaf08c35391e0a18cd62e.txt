section .data  ; defines a section for initialized data
    msg db "Hello World",0xa,0  ; stores the string "Hello World" with a line feed and null terminator
    len equ $-msg  ; calculates the length of the string by getting the current address minus the address of the starting point
section .text  ; defines a section for executable code
    mov eax, 4  ; moves the number 4 into the EAX register, which is the system call number for 'write'
    mov ebx, 1  ; moves the number 1 into the EBX register, which is the file descriptor for standard output
    mov ecx, msg  ; moves the address of the string into the ECX register, which is the 'buf' parameter for the 'write' system call
    mov edx, len  ; moves the length of the string into the EDX register, which is the 'count' parameter for the 'write' system call
    int 0x80  ; executes the 'write' system call, which outputs the string to standard output
    mov eax, 1  ; moves the number 1 into the EAX register, which is the system call number for 'exit'
    xor ebx, ebx  ; sets the EBX register to 0, indicating a successful exit
    int 0x80  ; executes the 'exit' system call, terminating the program
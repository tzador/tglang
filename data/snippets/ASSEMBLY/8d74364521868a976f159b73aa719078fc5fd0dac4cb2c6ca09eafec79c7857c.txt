.section .data
    msg db 'Hello, world!', 0xA, 0xD ; message to display, 0xA and 0xD are newline and carriage return characters
    len equ $-msg ; length of the message

.section .bss
    buf resb 20 ; reserve 20 bytes for buffer

.section .text
    global _start ; declaration for linker
    _start:
        nop ; ensures first instruction address is used as entry point

        mov rax, 1 ; syscall number for write
        mov rdi, 1 ; file descriptor for STDOUT
        mov rsi, msg ; pointer to string
        mov rdx, len ; length of string
        syscall ; call write syscall

        mov rax, 2 ; syscall number for read
        mov rdi, 0 ; file descriptor for STDIN
        mov rsi, buf ; pointer to buffer
        mov rdx, 20 ; maximum number of bytes to read
        syscall ; call read syscall

        mov rax, 1 ; syscall number for write
        mov rdi, 1 ; file descriptor for STDOUT
        mov rsi, buf ; pointer to buffer
        mov rdx, rax ; length of string from read syscall
        syscall ; call write syscall

        mov rax, 60 ; syscall number for exit
        xor rdi, rdi ; exit code 0
        syscall ; call exit syscall
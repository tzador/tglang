section .text ; Defines a section of code as read-only

global _start ; Defines a global label for program entry

_start: ; Program entry point

; Prints a message to the console
mov eax, 4 ; Sets eax register to system call 4 (sys_write)
mov ebx, 1 ; Sets ebx register to stdout (file descriptor 1)
mov ecx, message ; Sets ecx register to the address of the message
mov edx, message_len ; Sets edx register to the length of the message
int 0x80 ; Calls the kernel with the values in the registers

; Exits the program with a return code of 0
mov eax, 1 ; Sets eax register to system call 1 (sys_exit)
xor ebx, ebx ; Sets ebx register to 0 (return code)
int 0x80 ; Calls the kernel with the values in the registers

section .data ; Defines a section of code as read-write

message db 'Hello, World!',0xa ; Defines a string 'Hello, World!' with a newline character
message_len equ $-message ; Calculates the length of the message (including the null terminator)
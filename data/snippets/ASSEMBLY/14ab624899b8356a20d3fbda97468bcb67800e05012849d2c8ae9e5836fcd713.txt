;This code snippet converts a decimal number to its binary representation

section .text
global _start    ;declare the entry point of the program

_start:          ;start label
    mov ecx, 0   ;initialize counter to 0
    mov eax, 0   ;initialize result to 0
    mov ebx, 0   ;initialize bit mask to 0
    
    input_loop:
        push eax         ;save result
        mov ebx, 2        ;set bit mask to 2
        shl ebx, cl       ;shift bit mask by counter value
        and ebx, edx      ;perform bitwise AND operation with input number
        shr ebx, cl       ;shift bit mask back to original position
        cmp ebx, 0        ;check if bit is set
        je bit_not_set
        
        ;if bit is set, add 1 to result and subtract 2^counter from input number
        add eax, 1
        sub edx, ebx
        
        bit_not_set:
        pop eax           ;restore result
        inc ecx           ;increment counter
        cmp edx, 0        ;check if input number is 0
        jne input_loop    ;if not, continue loop
        
    output_loop:
        push eax          ;save result
        mov ebx, 10       ;set bit mask to 10
        xor edx, edx      ;clear edx register
        div ebx           ;divide result by 10 to get remainder
        add edx, 48       ;convert remainder to ASCII character code
        mov byte [output], dl    ;store result in output variable
        mov eax, [output]        ;move output variable to eax
        mov [num_output], eax    ;store output in num_output
        pop eax           ;restore result
        cmp eax, 0        ;check if result is 0
        je end_prog       ;if yes, end program
        
        ;print output character to console
        mov eax, 4
        mov ebx, 1
        mov ecx, num_output
        mov edx, 1
        int 80h
        
        jmp output_loop  ;repeat until result is 0
        
    end_prog:
        ;terminate program
        mov eax, 1
        xor ebx, ebx
        int 80h
        
section .bss
    output resb 1      ;define output variable for storing ASCII character code
    num_output resb 1  ;define num_output variable for storing output value
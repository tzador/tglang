;; This program calculates and prints the nth Fibonacci number

;; Define variables
section .data
    number1 db 0
    number2 db 1
    N db 10            ; n value for nth Fibonacci number

section .bss
    result resb 1      ; result = nth Fibonacci number

;; Code section
section .text
    global _start
    _start:
        ;; Input n value
        mov al, [N]     ; move n value to the al register
        sub al, '0'     ; convert ASCII to binary
        mov bl, al      ; save n value in bl register

        ;; Calculate nth Fibonacci number
        mov al, [number1]   ; move first number to al register
        mov ah, [number2]   ; move second number to ah register
        mov cl, 2           ; initialize loop counter to 2
        add bl, '0'         ; convert binary back to ASCII

    fibonacci_loop:
        cmp cl, bl          ; compare loop counter with n value
        jge end_loop        ; if loop counter >= n value, end loop
        mov dl, ah          ; save second number in dl register
        add al, ah          ; al = al + ah
        mov [result], al    ; save result in result variable
        mov ah, dl          ; restore original value of second number
        inc cl              ; increment loop counter
        jmp fibonacci_loop  ; jump back to fibonacci_loop

    end_loop:
        ;; Output result
        mov eax, 4          ; system call to print to STDOUT
        mov ebx, 1          ; file descriptor for STDOUT
        mov ecx, result     ; memory address of result variable
        mov edx, 1          ; number of bytes to output
        int 0x80            ; call kernel

        ;; Exit program
        mov eax, 1          ; system call to exit program
        xor ebx, ebx        ; exit with return code 0
        int 0x80            ; call kernel
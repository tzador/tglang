; this is a comment

; define a variable
variable db 'Hello World!', 0 ; store the string 'Hello World!' in the variable 'variable'

; define a label
start: ; the label 'start' marks the beginning of the program

; print the string stored in the variable 'variable'
mov ah, 9 ; move the command to print a string to the register 'ah'
mov dx, offset variable ; move the address of the variable 'variable' to the register 'dx'
int 21h ; call the interrupt 21h to print the string stored in the address pointed by 'dx'

; loop to print the string 9 more times
mov cx, 9 ; move the value 9 to the register 'cx' to set the loop count
loop print_more ; jump to the label 'print_more' while cx is not zero

; increment the value in the variable 'variable' and print it
add byte [variable], 1 ; add 1 to the first byte of the variable 'variable'
mov ah, 9 ; move the command to print a string to the register 'ah'
mov dx, offset variable ; move the address of the variable 'variable' to the register 'dx'
int 21h ; call the interrupt 21h to print the string stored in the address pointed by 'dx'

; jump back to the start label to repeat the loop
jmp start ; jump to the label 'start'

; define the label 'print_more'
print_more:

; print the string stored in the variable 'variable'
mov ah, 9 ; move the command to print a string to the register 'ah'
mov dx, offset variable ; move the address of the variable 'variable' to the register 'dx'
int 21h ; call the interrupt 21h to print the string stored in the address pointed by 'dx'

; decrement cx by 1 and check if it is zero
dec cx ; decrement the value of cx by 1
jnz print_more ; jump to the label 'print_more' if cx is not zero

; end of program
mov ah, 0 ; move 0 to the register 'ah' to indicate the end of the program
int 20h ; call the interrupt 20h to terminate the program
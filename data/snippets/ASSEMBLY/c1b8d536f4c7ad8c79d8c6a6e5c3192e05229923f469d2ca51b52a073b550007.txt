;This code snippet is an example of a loop in assembly language
;It includes a loop counter and a conditional jump

section .text ;specifies the code section

global _start ;global label for program entry point

_start:

;initialize loop counter
mov eax, 5 ;move a value into the EAX register
mov ecx, 0 ;clear the ECX register
loop_start:

;perform operations here
add ecx, 1 ;increment the loop counter in ECX register
cmp ecx, eax ;compare loop counter to the value in EAX register
jle loop_start ;if ECX is less than or equal to EAX, jump back to loop_start label

;print result
mov eax, 4 ;system call for write
mov ebx, 1 ;file descriptor for standard output
mov ecx, message ;address of message to print
mov edx, message_length ;length of message
int 80h ;interrupt to execute system call

;exit program
mov eax, 1 ;system call for exit
xor ebx, ebx ;exit code of 0
int 80h ;interrupt to execute system call

section .data ;specifies the data section
message db 'Loop executed %d times', 10 ;message to print
message_length equ $-message ;equates message length to dollar symbol (current address) minus message address
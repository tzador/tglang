; A simple program that prints "Hello, world!"

section .text     ; Indicates the beginning of the code section
global _start     ; Global entry point label

_start:           ; Entry point label
    mov rax, 1    ; Move the system call number for "write" into register rax
    mov rdi, 1    ; Move the file descriptor for standard output into register rdi
    mov rsi, msg  ; Move the address of the message into register rsi
    mov rdx, len  ; Move the length of the message into register rdx
    syscall       ; Execute the system call to write the message to standard output

    mov rax, 60   ; Move the system call number for "exit" into register rax
    xor rdi, rdi  ; Set the exit status code to 0
    syscall       ; Execute the system call to exit the program

section .data     ; Indicates the beginning of the data section
msg     db 'Hello, world!', 10 ; Define a string variable with the message to be printed
len     equ $ - msg             ; Define a constant to store the length of the message (using the $ symbol to get the current address)

section .bss      ; Indicates the beginning of the bss section
          ; This section is used for uninitialized variables and is often left empty in simple programs to save space
; This is a code snippet in assembly language
; It calculates the factorial of a number
; Input is taken from user and output is displayed
; Use this snippet with caution as there is no error handling

section .data
    msg db "Enter a number: ", 0xA ; string to display
    msg_len equ $ - msg ; length of string

    result db "Factorial is: ", 0xA ; string to display
    result_len equ $ - result ; length of string

section .bss
    num resb 1 ; define space for input number

section .text
    global _start

_start:
    ; print message to get input from user
    mov eax, 4 ; system call to print
    mov ebx, 1 ; file descriptor for stdout
    mov ecx, msg ; address of string to display
    mov edx, msg_len ; length of string
    int 80h ; call kernel

    ; get input from user
    mov eax, 3 ; system call to read
    mov ebx, 0 ; file descriptor for stdin
    mov ecx, num ; address of variable to store input
    mov edx, 1 ; length of input
    int 80h ; call kernel

    ; convert input to integer
    sub al, 0x30 ; convert from ASCII to decimal

    ; calculate factorial
    mov bl, al ; store input in bl register
    mov al, 1 ; store 1 in al register to start factorial calculation
loop:
    mul bl ; multiply al and bl registers
    dec bl ; decrement bl by 1 for next iteration
    cmp bl, 0 ; compare bl register with 0
    jne loop ; jump back to loop if bl is not equal to 0

    ; store result in result variable
    mov [result+14], al ; add 14 to result address to skip "Factorial is: "
    add al, 0x30 ; convert result from decimal to ASCII

    ; display result to user
    mov eax, 4 ; system call to print
    mov ebx, 1 ; file descriptor for stdout
    mov ecx, result ; address of string to display
    mov edx, result_len ; length of string
    int 80h ; call kernel

    ; exit program
    mov eax, 1 ; system call to exit
    mov ebx, 0 ; exit code 0
    int 80h ; call kernel
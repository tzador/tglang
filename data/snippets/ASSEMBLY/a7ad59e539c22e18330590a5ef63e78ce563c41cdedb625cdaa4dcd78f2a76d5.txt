.section text
.globl _start //global label for entry point
_start:
  pushl %ebp //pushes current base pointer onto stack
  movl %esp, %ebp //moves stack pointer to base pointer
  subl $8, %esp //allocates space on stack for local variables
  movl $0, %eax //moves value 0 into accumulator
  movl $1, %ebx //moves value 1 into base register
  movl $10, %ecx //moves value 10 into counter register
loop:
  addl %ebx, %eax //adds value in ebx to accumulator and stores in accumulator
  dec %ecx //decrements counter register
  cmp $0, %ecx //compares counter register to 0
  jne loop //jumps to loop if not equal (counter is not 0)
  movl %eax, %ebx //moves accumulator value into base register
  movl $1, %eax //moves value 1 into accumulator
  movl $1, %edx //moves value 1 into data register
  int $0x80 //system call to exit program
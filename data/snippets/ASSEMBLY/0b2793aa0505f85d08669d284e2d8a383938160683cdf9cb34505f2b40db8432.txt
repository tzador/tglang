.section .text				# define a section for executable instructions
.global main				# make main function globally accessible

	# start of main function
main:
	# set up stack pointer
	movl $0, %eax				# move the value 0 into the register %eax
	subl $4, %esp				# subtract 4 from the stack pointer register %esp
	andl $-16, %esp				# align the stack pointer to a multiple of 16

	# set up global variables
	.section .bss				# define a section for uninitialized variables
global:
	.comm variable, 4, 4			# define a global variable 'variable' with a size of 4 bytes and alignment of 4 bytes
	# end of global variables setup

	# perform calculations
	pushl $5				# push the value 5 onto the stack
	pushl $10				# push the value 10 onto the stack
	movl (%esp), %eax			# move the value 10 into the register %eax
	addl %eax, (%esp)			# add the value 5 to the value at the top of the stack
	addl $4, %esp				# move the stack pointer down 4 bytes

	# store result in global variable
	movl %eax, global			# move the value in %eax (15) into the global variable
	# end of calculations

	# end main function
	ret
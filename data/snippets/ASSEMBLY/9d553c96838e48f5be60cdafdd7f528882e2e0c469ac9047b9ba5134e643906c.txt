.data
  	username db "John Doe", 0xa, 0xd
  	;Declares a variable "username" with the value "John Doe" and a new line character

.code
  	main:
    		mov rax, username
    		;Moves the address of the variable "username" into the register "rax"

   		loop:
      			mov al, [rax]
      			;Moves the value at the address stored in "rax" into the lower 8 bits of the register "al"
 
      			cmp al, 0xa
      			jz new_line
      			;Compares the value in "al" to the new line character, if they are equal, jump to "new_line" label
 
      			cmp al, 0xd
      			jz end
      			;Compares the value in "al" to the carriage return character, if they are equal, jump to "end" label
 
      			mov dl, al
      			;Moves the value in "al" into the lower 8 bits of the register "dl"
      			mov ah, 0x0e
      			;Moves the value 0x0e (display character) into the higher 8 bits of the register "ah"
      			int 0x10
      			;Calls interrupt 0x10, which will display the character stored in "dl"
 
      			inc rax
      			;Increments the value stored in "rax" by 1, which will move to the next character in the string
      			jmp loop
      			;Jumps back to the "loop" label
 
   		new_line:
      			mov dl, 0xa
      			;Moves the new line character into the lower 8 bits of the register "dl"
      			mov ah, 0x0e
      			;Moves the value 0x0e (display character) into the higher 8 bits of the register "ah"
      			int 0x10
      			;Calls interrupt 0x10, which will display the character stored in "dl"
 
      			jmp loop
      			;Jumps back to the "loop" label
 
   		end:
      			mov dl, 0xd
      			;Moves the carriage return character into the lower 8 bits of the register "dl"
      			mov ah, 0x0e
      			;Moves the value 0x0e (display character) into the higher 8 bits of the register "ah"
      			int 0x10
      			;Calls interrupt 0x10, which will display the character stored in "dl"
 
      			mov dl, 0xa
      			;Moves the new line character into the lower 8 bits of the register "dl"
      			mov ah, 0x0e
      			;Moves the value 0x0e (display character) into the higher 8 bits of the register "ah"
      			int 0x10
      			;Calls interrupt 0x10, which will display the character stored in "dl"
 
      			mov al, 0
      			;Moves the value 0 into the lower 8 bits of the register "al"
      			mov ah, 0x4c
      			;Moves the value 0x4c (exit program) into the higher 8 bits of the register "ah"
      			int 0x21
      			;Calls interrupt 0x21, which will exit the program
move 0x28,%eax # Moves the value 0x28 into the %eax register
add $0x4,%eax # Adds the value 0x4 to the %eax register
jmp loop # Jumps to the loop label
loop:
    cmp %eax, %ebx # Compares the values in the %eax and %ebx registers
    jne else # Jumps to the else label if the values are not equal
    mov $0x1,%ecx # Moves the value 0x1 into the %ecx register
    mov (%ecx,%eax,4),%edx # Moves the value at memory address (%ecx + %eax*4) into the %edx register
    add %edx,%eax # Adds the value in the %edx register to the %eax register
    jmp end # Jumps to the end label
else:
    mov $0x0,%ecx # Moves the value 0x0 into the %ecx register
    mov (%ecx,%eax,4),%edx # Moves the value at memory address (%ecx + %eax*4) into the %edx register
    sub %edx,%eax # Subtracts the value in the %edx register from the %eax register
end:
    cmp $0x20,%eax # Compares the value 0x20 to the value in the %eax register
    ja loop # Jumps to the loop label if the value in the %eax register is greater than 0x20
    mov %eax,%ebp # Moves the value in the %eax register into the %ebp register
    div %ecx # Divides the value in the %eax register by the value in the %ecx register
    mov %eax,%esi # Moves the value in the %eax register into the %esi register
    xor %eax,%eax # Sets the value in the %eax register to 0
    test %ecx,%ecx # Performs a bitwise AND between the values in the %ecx and %ecx registers
    je done # Jumps to the done label if the result is equal to 0
    cmp (%ecx,%esi,4),%ecx # Compares the value at memory address (%ecx + %esi*4) to the value in the %ecx register
    jg loop # Jumps to the loop label if the value at memory address is greater than the value in the %ecx register
    cmp (%ecx,%esi,4),%eax # Compares the value at memory address (%ecx + %esi*4) to the value in the %eax register
    mov %eax,(%ecx,%esi,4) # Moves the value in the %eax register to the memory address (%ecx + %esi*4)
    jmp loop # Jumps to the loop label
done:
    xor %eax,%eax # Sets the value in the %eax register to 0
    ret # Returns from the subroutine
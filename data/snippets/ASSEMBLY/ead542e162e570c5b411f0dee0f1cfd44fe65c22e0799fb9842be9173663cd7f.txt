.global _main      //Specifies symbol _main as visible from outside file
    	.text               //Names the data section
    	.align 4            //Sets alignment at 4 byte boundaries
        _main:              //Main symbol for program entry
            pushl   %ebp    //Pushes value of stack pointer to stack
        	movl    %esp, %ebp     //Moves value of stack pointer to base pointer
            subl    $12, %esp     //Reserves 12 bytes of stack space for variables
            
            //Fills reserved space with values 0, 1, and 2
            movl    $0, -4(%ebp)
            movl    $1, -8(%ebp)
            movl    $2, -12(%ebp)
            
            //Loads values from reserved space into registers
            movl    -4(%ebp), %eax
            movl    -8(%ebp), %ebx
            movl    -12(%ebp), %ecx
            
            //Performs arithmetic operations on loaded values
            imul    %ecx, %eax
            addl    %ebx, %eax
            
            //Moves result into return value register
            movl    %eax, %eax
            leave               //Prepares frame for returning control to caller
            ret                 //Returns control to caller, with return value in %eax register
; This is a code snippet in assembly language

; Declaring a variable
var1: resb 32 ; Reserve 32 bytes for var1
var2: resw 4 ; Reserve 4 words for var2

; Initializing a register
MOV AX, 0 ; Move 0 into register AX

; Comparison and conditional branching
CMP BX, 5 ; Compare BX with 5
JNZ label ; Jump to label if BX is not equal to 5

; Looping
label: 
MOV CX, 10 ; Set counter to 10
loop_start: 
DEC CX ; Decrement counter by 1
MOV [var1], CX ; Move value of CX into var1
CMP CX, 0 ; Compare CX with 0
JNZ loop_start ; Jump to loop_start if CX is not equal to 0

; Subroutine
call subroutine ; Call subroutine
subroutine: 
PUSH AX ; Push value of AX onto stack
MOV AX, 7 ; Move 7 into register AX
POP BX ; Pop value from stack into register BX
ADD AX, BX ; Add value of BX to value of AX
RET ; Return from subroutine and continue execution after call statement

; Input and output
MOV AH, 01 ; Set AH to 01 for input
INT 21h ; Interrupt 21h for input
MOV [var2], AL ; Move value of AL (input character) into var2
MOV AH, 02 ; Set AH to 02 for output
MOV DL, [var2] ; Move value of var2 into DL (output character)
INT 21h ; Interrupt 21h for output

; Halt program
MOV AH, 4Ch ; Set AH to 4Ch for exit
INT 21h ; Interrupt 21h for exit
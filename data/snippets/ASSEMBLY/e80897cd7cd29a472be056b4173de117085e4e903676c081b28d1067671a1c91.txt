; This code snippet is written in assembly language

.section .data          ; Defines a section of data
message db "Hello, World!", 0xA, 0xD           ; Defines a string with a new line and carriage return

.section .text          ; Defines a section of code
.global _start          ; Marks this label as global, the entry point of the program

_start:                 ; The entry point of the program

    movl $4, %eax       ; Moves the value 4 into the eax register for the write system call 
    movl $1, %ebx       ; Moves the value 1 into the ebx register: file descriptor for stdout
    movl $message, %ecx ; Moves the address of the message string into ecx register for the write system call
    movl $14, %edx      ; Moves the length of the message string (including new line and carriage return) into edx register

    int $0x80           ; An interrupt call to the operating system, specifically the write system call

    movl $1, %eax       ; Moves the value 1 into the eax register for the exit system call
    movl $0, %ebx       ; Moves the value 0 into the ebx register: exit code
    int $0x80           ; An interrupt call to the operating system, specifically the exit system call
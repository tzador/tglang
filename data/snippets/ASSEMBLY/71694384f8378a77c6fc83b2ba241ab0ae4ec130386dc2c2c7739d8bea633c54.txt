MOV AX, 0x25
  ; This line moves the hexadecimal value 0x25 into the AX register
  MOV BX, 0x40
  ; This line moves the hexadecimal value 0x40 into the BX register
  ADD AX, BX
  ; This line adds the values stored in the AX and BX registers
  MOV CX, AX
  ; This line moves the value in the AX register to the CX register
  SUB CX, 0x1C
  ; This line subtracts the hexadecimal value 0x1C from the value stored in the CX register
  PUSH CX
  ; This line pushes the value of the CX register onto the stack
  POP DX
  ; This line pops the top value off the stack and stores it in the DX register
  JMP label
  ; This line jumps to the label in the code labeled as 'label'
  label:
    ADD DX, 0x05
  ; This line adds the hexadecimal value 0x05 to the value stored in the DX register
  CMP DX, 0x3C
  ; This line compares the value in the DX register to the hexadecimal value 0x3C
  JZ end
  ; This line jumps to the label in the code labeled as 'end' if the previous comparison was equal
  JMP label
  ; This line jumps back to the label in the code labeled as 'label'
  end:
    MOV AH, 0x4C
  ; This line moves the hexadecimal value 0x4C into the AH register
  INT 0x21
  ; This line interrupts the program, triggering the operating system to terminate the program
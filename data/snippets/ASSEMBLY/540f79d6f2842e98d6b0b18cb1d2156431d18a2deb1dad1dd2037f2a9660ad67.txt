section .text
global _start           
_start:                 
    mov eax, 3            ; system call number for 'read'
    mov ebx, 0            ; file descriptor for standard input
    mov ecx, buffer       ; pointer to buffer for input
    mov edx, maxlen       ; maximum number of characters to read
    int 80h               ; call the system interrupt
    cmp eax, -1           ; check for errors
    je error              ; jump to error label if error occurred
    mov edx, eax          ; set number of characters read as length
    mov eax, 4            ; system call number for 'write'
    mov ebx, 1            ; file descriptor for standard output
    mov ecx, buffer       ; pointer to buffer for output
    int 80h               ; call the system interrupt
    mov eax, 1            ; system call number for 'exit'
    xor ebx, ebx          ; set exit status to 0
    int 80h               ; call the system interrupt

error:
    mov eax, 1            ; system call number for 'exit'
    mov ebx, 1            ; set exit status to 1
    int 80h               ; call the system interrupt

section .bss
    buffer resb 256       ; buffer for input
    
section .data 
    maxlen equ $ - buffer ; calculate maximum size of input
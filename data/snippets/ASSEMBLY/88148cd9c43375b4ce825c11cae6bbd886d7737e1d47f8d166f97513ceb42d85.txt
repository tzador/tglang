.data
message db 'Hello, world!',0xA,0xD
.code
main PROC
push ebp ; set up base pointer
mov ebp, esp ; move stack pointer to base pointer
push esi ; save registers
push ebx

lea ebx, message ; load message into ebx
mov esi, 0 ; set esi to 0 for loop counter

loop:
mov dl, [ebx+esi] ; move character from message into dl
cmp dl, 0 ; compare character to null terminator
je end_loop ; jump to end_loop if null terminator is reached

push eax ; save eax register
mov ah, 0x0E ; set ah register to 0E to print character
mov al, dl ; move character to al register
mov ebx, 1 ; set ebx to 1 to print to standard output
int 0x80 ; call system interrupt to print character
pop eax ; restore eax register

inc esi ; increment loop counter
jmp loop ; jump back to loop

end_loop:
pop ebx ; restore ebx register
pop esi ; restore esi register
mov esp, ebp ; restore stack pointer
pop ebp ; restore base pointer
ret ; return from function

main ENDP
end main ; end main function
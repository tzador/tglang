; Registers
r1 equ 0x10  ; general purpose register 1
r2 equ 0x20  ; general purpose register 2
r3 equ 0x30  ; general purpose register 3

; Memory
org 0x0000   ; start of memory
    db "Hello, world!", 0x00 ; string to be printed
    dw 0x0000               ; placeholder for loop variable

    ; Print loop
print:
    mov r1, #0               ; set r1 as loop counter
loop:
    ldr r2, [r3]             ; load character from string into r2
    cmp r2, #0               ; check if end of string is reached
    beq end                  ; if end of string, exit loop
    add r3, #1               ; move to next character in string
    add r1, #1               ; increment loop counter
    call putchar             ; print character
    b loop                   ; repeat until end of string is reached
end:
    mov r2, #10              ; set r2 as exit code
    halt                     ; stop program

; Subroutines
putchar:
    mov r3, r1               ; move character to be printed into r3
    mov r1, #0
    svc 0x200                ; call operating system to print character
    ret                      ; return to main program

; Data
.equ STDOUT, #1              ; standard output file descriptor
.equ SYS_EXIT, #0x200        ; operating system call for program exit
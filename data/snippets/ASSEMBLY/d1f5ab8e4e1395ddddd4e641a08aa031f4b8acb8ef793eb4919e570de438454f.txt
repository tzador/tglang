; This code snippet is an example of a nested loop in assembly language

; Initialize outer loop counter
MOV CX, 10 ; Outer loop will run 10 times

; Outer loop
LOOP_OUTER:
  ; Initialize inner loop counter
  MOV BX, 10 ; Inner loop will run 10 times
  
  ; Inner loop
  LOOP_INNER:
    ; Multiply outer counter with inner counter
    MUL BX
    
    ; Store the result in the loop counter
    MOV [CX], AX
    
    ; Increment inner loop counter
    INC BX
    
    ; Check if inner loop counter has reached 10
    CMP BX, 10
    JL LOOP_INNER ; Jump back to inner loop if not
    
  ; Increment outer loop counter
  INC CX
  
  ; Check if outer loop counter has reached 10
  CMP CX, 10
  JL LOOP_OUTER ; Jump back to outer loop if not

; This code snippet shows how to use nested loops in assembly language, which can be used for various tasks such as matrix multiplication or sorting algorithms. The outer loop controls the number of iterations while the inner loop performs a specific action each iteration. This allows for complex and efficient operations to be carried out in assembly language.

; Output:
; The resulting array will contain the numbers 1-100 in order
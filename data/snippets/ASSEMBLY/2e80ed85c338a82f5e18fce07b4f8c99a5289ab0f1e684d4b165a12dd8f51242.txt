;*******************************************************************************
; Fibonacci Sequence
; This program calculates and prints the first 25 numbers in the Fibonacci sequence.
;*******************************************************************************

; Define constants
%define START 1
%define MAX_NUMS 25

; Define variables
section .bss
    sequence resd MAX_NUMS         ; Reserve space for the sequence
    current_num resd 1             ; Reserve space for the current number in sequence
    previous_num resd 1            ; Reserve space for the previous number in sequence

section .data
    output db "The first %d numbers in the Fibonacci sequence are:", 10, 0 ; Define output message
    format db "%d, ", 0             ; Define format for printing numbers

section .text
    global _start

_start:
    ; Initialize variables
    mov dword [current_num], START  ; Set current number to 1
    mov dword [previous_num], 0     ; Set previous number to 0

    ; Loop to calculate Fibonacci sequence
    mov ecx, MAX_NUMS     ; Set loop counter to MAX_NUMS
    mov esi, 0            ; Set index for sequence array
    loop_start:           ; Start loop
        add dword [current_num], [previous_num]  ; Add current and prevoius numbers and store in current
        mov [sequence + esi], [current_num]      ; Store current number in sequence array
        mov [previous_num], [sequence + esi]     ; Move current number to previous number
        inc esi                                  ; Increment index for sequence array
        dec ecx                                  ; Decrement loop counter
        jnz loop_start                           ; Jump back to loop start if counter is not zero

    ; Print the sequence
    mov eax, 4                       ; Set system call for 'write'
    mov ebx, 1                       ; Set file descriptor for 'stdout'
    mov ecx, output                  ; Set message to be printed
    mov edx, output_len              ; Set message length
    int 80h                          ; Call system to print message
    mov ecx, MAX_NUMS                ; Set loop counter to MAX_NUMS
    mov esi, 0                       ; Reset index for sequence array
    loop_print:                      ; Start loop
        mov eax, 4                   ; Set system call for 'write'
        mov ebx, 1                   ; Set file descriptor for 'stdout'
        mov ecx, [sequence + esi]    ; Set number to be printed
        mov edx, 1                   ; Set message length
        int 80h                      ; Call system to print number
        mov eax, 4                   ; Set system call for 'write'
        mov ebx, 1                   ; Set file descriptor for 'stdout'
        mov ecx, format              ; Set format to be printed
        mov edx, 2                   ; Set message length
        int 80h                      ; Call system to print format
        inc esi                      ; Increment index for sequence array
        dec ecx                      ; Decrement loop counter
        jnz loop_print               ; Jump back to loop start if counter is not zero

    ; Exit program
    mov eax, 1             ; Set system call for 'exit'
    xor ebx, ebx           ; Set exit code to 0
    int 80h                ; Call system to exit program

; Define output message length:
output_len equ $-output

;*******************************************************************************
; Output:
; The first 25 numbers in the Fibonacci sequence are: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
; 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025
;*******************************************************************************
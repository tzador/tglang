;; set up stack pointer
START:
    mov sp, #0x7fff

;; push values onto stack
    push {r1, r2, r3, r4}
    push {r5, r6, r7, r8}
    push {r9, r10, r11, r12}
    push {lr}

;; set up registers
    ldr r0, =0xffffffff
    mov r1, #0xaa
    add r2, r0, #0x50
    sub r3, r2, #0x20

;; perform calculations
    add r4, r1, r2
    sub r5, r1, r3
    mul r6, r2, r3
    cmp r4, r6
    bne NOT_EQUAL
    bge GREATER_THAN_EQUAL

;; print results
PRINT_EQUAL:
    ldr r0, =print_equal_msg
    bl printf
    b END

NOT_EQUAL:
    ldr r0, =not_equal_msg
    bl printf
    b END

GREATER_THAN_EQUAL:
    ldr r0, =greater_than_equal_msg
    bl printf
    b END

END:
    ;; pop values from stack
    pop {r9, r10, r11, r12}
    pop {r5, r6, r7, r8}
    pop {r1, r2, r3, r4}
    pop {lr}

    ;; exit program
    mov r0, #0
    bx lr

;; messages to display
print_equal_msg:
    .asciz "The result is equal!\n"

not_equal_msg:
    .asciz "The result is not equal!\n"

greater_than_equal_msg:
    .asciz "The result is greater than or equal!\n"
; This code snippet demonstrates a factorial function in assembly language
; The function takes in a value in register r0 and returns the factorial value in register r0

.section .data
    n: .word 5        ; initialize variable for input value
    result: .word 1   ; initialize variable to hold result

.section .text
    .global _start  ; declare _start as global symbol for entry point

_start:
    ldr r0, =n    ; load input value into r0
    mov r1, #1    ; initialize counter for loop
    mov r2, #1    ; initialize accumulator for multiplication
loop:
    mul r2, r2, r1    ; multiply accumulator by counter
    add r1, r1, #1    ; increment counter
    cmp r1, r0        ; compare counter to input value
    ble loop          ; loop while counter <= input value
    str r2, =result   ; store result in result variable
    mov r0, r2        ; move result into r0 for printing
    swi 0x11          ; call ARM Linux sys_write syscall
    mov r0, #1        ; set return value to 1 (exit code)
    swi 0x15          ; call ARM Linux sys_exit syscall
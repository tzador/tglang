; Multiply two unsigned 32-bit numbers and store the result in EDX:EAX
; Inputs:
; - at [ebp + 8]: first 32-bit number
; - at [ebp + 12]: second 32-bit number

BITS 32
    push ebp                    ; push base pointer onto the stack
    mov ebp, esp                ; set base pointer to current stack pointer
    sub esp, 8                  ; reserve space for two 32-bit variables on the stack
    mov eax, DWORD [ebp + 8]    ; move first input number into EAX register
    mul DWORD [ebp + 12]        ; multiply EAX by second input number
    mov [ebp - 8], edx          ; move upper 32 bits of result into [ebp - 8]
    mov [ebp - 4], eax          ; move lower 32 bits of result into [ebp - 4]
    pop ebp                     ; restore base pointer
    ret                         ; return from subroutine
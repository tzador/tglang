; Initialize variables for loop
mov ecx, 5 ; Set loop counter register to 5
mov edx, 0 ; Set sum register to 0
mov ebx, 1 ; Set increment register to 1

; Start of loop
loop_start:
    add edx, ebx ; Add increment to sum
    dec ecx ; Decrement loop counter
    
    ; Check if loop counter is 0
    cmp ecx, 0
    jne loop_start ; If not equal, jump back to loop start
    
; End of loop

; Get average of sum
mov eax, edx ; Move sum to eax register
cdq ; Sign extend eax to edx
idiv ebx ; Divide sum by increment to get average

; Print average to console
mov eax, 4 ; Store system call for 'write' to eax register
mov ebx, 1 ; Set file descriptor for stdout to ebx register
mov ecx, eax ; Move average to ecx register
mov edx, 4 ; Set string length to print to edx register
int 0x80 ; Call system interrupt

; Exit program
mov eax, 1 ; Store system call for 'exit' to eax register
mov ebx, 0 ; Set return value to 0
int 0x80 ; Call system interrupt
; This code snippet calculates the factorial of a given number
.data ; This section declares any data required
number DWORD 5 ; Declares a variable named 'number' and assigns the value 5 of type double word (32 bits)
factorial DWORD ? ; Declares a variable named 'factorial' of type double word, but without initializing its value
.code ; This section contains the actual code
main PROC ; Defines the starting label for the program
    mov eax, number ; Moves the value of variable 'number' into the EAX register
    mov ebx, 1 ; Initializes the EBX register with value 1
    allLoop: ; Starting label for the loop
    mul ebx ; Multiplies the value in EAX with the value in EBX and stores the result in EAX
    inc ebx ; Increments the value of EBX by 1
    cmp ebx, number ; Compares the value in EBX with the value in 'number'
    jle allLoop ; Jumps to the 'allLoop' label if EBX is less than or equal to 'number'
    mov factorial, eax ; Moves the final result (stored in EAX) into the 'factorial' variable
    exit ; Exits the program
main ENDP ; End of program label
end main ; End of program
; This program adds two numbers
;
; Input:
; - r0: first number
; - r1: second number
;
; Output:
; - r0: sum of the two numbers
;
            .global _start
            .equsumloop

_start:     mov r0, #5      ; initialize r0 to 5
            mov r1, #10     ; initialize r1 to 10
            add r0, r1, r0  ; add r0 and r1 and store the result in r0

sumloop:    cmp r1, #0      ; check if r1 is equal to 0
            beq sumdone     ; if it is, jump to sumdone
            add r0, r0, #1  ; add 1 to r0
            sub r1, r1, #1  ; subtract 1 from r1
            b sumloop       ; jump back to sumloop

sumdone:    ; program ends here
            mov r0, r0      ; move the final result to r0

; The result is now stored in r0
; triple backticks are used for annotated markdown code snippet formatting
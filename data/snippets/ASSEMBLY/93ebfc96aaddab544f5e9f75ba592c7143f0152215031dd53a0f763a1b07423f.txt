global _start                      ;declaring _start as a global label

section .data                          ;start of data section
     hello db 'Hello world!', 0xA, 0xD  ;defining a string 'Hello world!' terminated with line feed and carriage return character
     helloLen equ $-hello              ;calculating the length of the string 'Hello world!' and assigning it to helloLen variable
     num1 dw 123                       ;defining a word-sized variable num1 with value 123
     num2 dw 456                       ;defining a word-sized variable num2 with value 456
     result db ?                       ;declaring a byte-sized variable result to store the sum

section .text                          ;start of code section
     _start:                           ;entry point label

     mov ax, num1                      ;moving the value of num1 into ax register
     add ax, num2                      ;adding the value of num2 to ax register
     mov result, al                    ;moving the lowest byte of ax register to result variable
     add result, '0'                   ;adding ASCII value of '0' to result variable to convert it to ASCII character

     mov cx, helloLen                  ;moving the value of helloLen into cx register
     mov dx, hello                     ;moving the address of hello string into dx register

     mov ah, 0x09                      ;loading the print function code into ah register
     int 0x21                          ;calling the DOS interrupt with INT 21h
                                        ;this will print the string stored at the address in dx register

     mov ah, 0x02                      ;loading the character input function code into ah register
     mov dl, result                    ;moving the ASCII character stored in result variable to dl register
     int 0x21                          ;calling the DOS interrupt with INT 21h
                                        ;this will print the result character to the screen

     mov ah, 0x00                      ;loading the program termination function code into ah register
     int 0x21                          ;calling the DOS interrupt with INT 21h
                                        ;this will terminate the program execution

section .bss                           ;start of uninitialized data section
     resb 100                          ;reserving 100 bytes of memory for future use
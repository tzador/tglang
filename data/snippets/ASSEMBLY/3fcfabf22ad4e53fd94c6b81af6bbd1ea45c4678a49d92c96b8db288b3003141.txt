;This code snippet is in Assembly language
;It prints the Fibonacci sequence

    SECTION .data           ;declaring data section
    fibno: db 0,1           ;storing first two Fibonacci numbers
    count: dw 10            ;number of sequence elements to be printed
    prev: db 0              ;previous number
    curr: db 1              ;current number
    result: db 0            ;variable to store result
    newline db 0x0A         ;variable for new line character
    
    SECTION .text           ;code section
    
    global _start           ;global declaration of _start label
    
    _start:                 ;program starts executing from here
    
    mov ecx, count          ;moving count to ecx register
    
    fib_loop:               ;loop to calculate and print Fibonacci sequence
    mov al, curr            ;moving current number to al register
    add al, prev            ;adding previous number to current number
    mov result, al          ;storing result in result variable
    mov prev, curr          ;moving current number to previous number
    mov curr, al            ;moving result to current number
    mov eax, 4              ;system call number for 'write' function
    mov ebx, 1              ;file descriptor for stdout
    mov ecx, result         ;moving result to ecx register
    mov edx, 1              ;length of string to be printed
    int 0x80                ;performing system call
    mov eax, 4              ;system call number for 'write' function
    mov ebx, 1              ;file descriptor for stdout
    mov ecx, newline        ;moving new line character to ecx register
    mov edx, 1              ;length of string to be printed (1 for new line)
    int 0x80                ;performing system call
    loop fib_loop           ;jumping back to fib_loop label until ecx becomes 0
    
    mov eax, 1              ;system call number for 'exit' function
    mov ebx, 0              ;exit status code
    int 0x80                ;performing system call
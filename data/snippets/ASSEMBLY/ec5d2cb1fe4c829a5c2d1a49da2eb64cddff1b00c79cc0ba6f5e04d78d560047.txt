loop: ;start of loop
MOV AX, 0 ;clear AX register

;loop through numbers 1-10
  MOV CX, 10 ;load 10 into CX register
  MOV BX, 1  ;initialize BX register to 1
  INNER_LOOP:
    ADD AX, BX ;add BX to AX
    INC BX ;increment BX by 1
    LOOP INNER_LOOP ;repeat until CX is decremented to 0
;end of loop

MOV DL, 'A' ;load 'A' into DL register
DB 0h ;null byte
PUSH DX ;push DX onto stack
CMP AL, 0 ;compare AX to 0
JE end_program ;jump to end_program if equal 
PRINT_CHAR: ;print character to console
  MOV AH, 02h ;function 2: display character
  INT 21h ;interrupt to display character
  POP DX ;pop value from stack into DX
  INC DL ;increment DL by 1
  JMP loop ;jump back to loop
end_program: ;end of program
  MOV AH, 04Ch ;function 4Ch: terminate program
  INT 21h ;interrupt to terminate program
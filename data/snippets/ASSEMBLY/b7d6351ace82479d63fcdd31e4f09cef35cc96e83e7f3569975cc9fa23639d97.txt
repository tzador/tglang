; This code snippet is a subroutine that calculates the Fibonacci
; sequence up to the provided number N
.data
prev1 db 0 ; variable to store the previous number in the sequence
prev2 db 1 ; variable to store the number before the previous one
current db 0 ; variable to store the current number in the sequence
N dw 0 ; input variable for the maximum number in the sequence
.code
; subroutine that calculates the Fibonacci sequence
fibonacci:
    push ax ; save registers onto stack
    push bx
    push cx
    mov ax, @data ; initialize data segment
    mov ds, ax ; to access variables
    mov bx, [N] ; move input number into bx
    mov current, 0 ; initialize current number to 0
    mov cl, 2 ; loop counter
    mov [prev1], 0 ; initialize previous numbers
    mov [prev2], 1
    mov ax, 1 ; starting number in sequence
loop:
    mov [prev1], [prev2] ; save previous numbers
    mov [prev2], ax
    add ax, [prev1] ; calculate next number in sequence
    mov [current], ax ; store current number
    cmp cl, [N] ; compare loop counter to input number
    je end ; if equal, end loop
    inc cl ; else, increment loop counter
    jmp loop ; jump to beginning of loop
end:
    ; code to output current number as result
    mov dx, [current]
    mov ah, 02h ; function to output character
    int 21h ; call interrupt
    ; restore registers from stack
    pop cx
    pop bx
    pop ax
    ret ; return from subroutine
end fibonnaci
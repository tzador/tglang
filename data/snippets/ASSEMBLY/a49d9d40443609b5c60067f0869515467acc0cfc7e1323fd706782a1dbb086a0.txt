;;This code snippet initializes a stack and performs basic operations such as push and pop

;;define a stack with a fixed size of 10 elements
section .data
stack db 10 dup(?)
top dw 0 ;;track the top of the stack

;;push procedure
push:
    mov eax, [top] ;;move top of stack into eax
    cmp eax, 10 ;;check if stack is full
    je stack_full ;;if stack is full, jump to stack_full label
    mov [stack + eax], bl ;;move value in bl register to stack at index eax
    inc eax ;;increment top of stack
    mov [top], eax ;;update top of stack
    ret ;;return to main program

;;pop procedure
pop:
    mov eax, [top] ;;move top of stack into eax
    cmp eax, 0 ;;check if stack is empty
    je stack_empty ;;if stack is empty, jump to stack_empty label
    dec eax ;;decrement top of stack
    xor bl, bl ;;clear bl register
    mov bl, [stack + eax] ;;move value at top of stack into bl register
    mov [top], eax ;;update top of stack
    ret ;;return to main program

;;main program
section .text

start:
    mov bl, 42 ;;store value 42 in bl register
    call push ;;push value on stack

    mov bl, 23 ;;store value 23 in bl register
    call push ;;push value on stack

    mov bl, 15 ;;store value 15 in bl register
    call push ;;push value on stack

    call pop ;;pop value from stack into bl register
    ;;bl now holds value 15

    call pop ;;pop value from stack into bl register
    ;;bl now holds value 23

    call pop ;;pop value from stack into bl register
    ;;bl now holds value 42

    ;;output the value in bl register to screen
    mov eax, 4
    mov ebx, 1
    mov ecx, bl
    mov edx, 1
    int 80h

    ;;halt the program
    mov eax, 1
    xor ebx, ebx
    int 80h

;;error handling
stack_full:
    ;;print error message
    mov eax, 4
    mov ebx, 1
    mov ecx, error_stack_full
    mov edx, error_length
    int 80h
    ;;halt the program
    mov eax, 1
    xor ebx, ebx
    int 80h

stack_empty:
    ;;print error message
    mov eax, 4
    mov ebx, 1
    mov ecx, error_stack_empty
    mov edx, error_length
    int 80h
    ;;halt the program
    mov eax, 1
    xor ebx, ebx
    int 80h

;;strings for error messages
section .data
error_stack_full db "Error: stack is full", 0xa ;;add new line
error_stack_empty db "Error: stack is empty", 0xa ;;add new line
error_length equ $ - error_stack_full ;;calculate length of error messages
# This code snippet is an example of a bubble sort algorithm implemented in Assembly language
.data

array DB 7, 5, 2, 3, 1, 4, 6

.code
main PROC

; Initialize variables
MOV SI, 0      ; Outer loop counter
MOV CX, LENGTHOF array
OuterLoop:
MOV DI, SI     ; Inner loop counter
InnerLoop:
MOV AL, array[DI]    ; Get value at current index
MOV BL, array[DI+1]  ; Get value at next index
CMP AL, BL    ; Compare the values
JLE NoSwap    ; Jump if AL is less than or equal to BL
; Swap the values
XCHG AL, BL     ; Exchange values
MOV array[DI], AL   ; Store new value at current index
MOV array[DI+1], BL ; Store new value at next index
NoSwap:
INC DI   ; Increment inner loop counter
CMP DI, CX     ; Compare inner loop counter to array length
JL InnerLoop   ; Jump if inner loop counter is less than array length
INC SI   ; Increment outer loop counter
CMP SI, CX     ; Compare outer loop counter to array length
JL OuterLoop   ; Jump if outer loop counter is less than array length

; Print the sorted array
MOV SI, 0    ; Loop counter
PrintLoop:
MOV DL, array[SI]   ; Get value at current index
ADD DL, 30h    ; Convert to ASCII character
MOV AH, 02h    ; Function to display character
INT 21h        ; Call DOS interrupt
INC SI      ; Increment loop counter
CMP SI, CX    ; Compare loop counter to array length
JL PrintLoop   ; Jump if loop counter is less than array length

EXIT:
MOV AH, 4Ch    ; DOS function to exit program
INT 21h        ; Call DOS interrupt

main ENDP
END main
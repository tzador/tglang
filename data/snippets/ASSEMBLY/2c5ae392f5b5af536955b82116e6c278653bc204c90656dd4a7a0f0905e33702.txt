;; Set up stack pointer
MOV R7, #0xFF00 ; Sets the stack pointer to the top of the memory
;; Loop that multiplies numbers
LOOP:
CMP R0, #0 ; Checks if R0 is equal to 0
MOVEQ R0, #1 ; If R0 is 0, set R0 to 1 to end loop
BEQ END ; Branches to END if R0 is 0
SUB R0, R0, #1 ; Subtracts 1 from R0 every loop
MUL R1, R1, R0 ; Multiplies R1 by R0
B LOOP ; Branches back to LOOP to continue multiplying
;; Return to main
END:
B MAIN ; Branches back to MAIN
;;; Function to add numbers
ADD:
ADDS R2, R2, #1 ; Adds 1 to R2
ADC R3, R3, R0 ; Adds R0 to R3 with carry from previous addition
ADCS R4, R4, #0 ; Adds 0 to R4 with carry
BX LR ; Returns to previous function or to MAIN
;; Main program
MAIN:
LDR R0, =5 ; Loads the value 5 into R0
MOV R1, #1 ; Sets R1 to 1 
CALL MUL ; Calls the function to multiply numbers
LDR R0, =8 ; Loads the value 8 into R0
MOV R1, #0 ; Sets R1 to 0
CALL ADD ; Calls the function to add numbers
;; End of program
END
section .data ;declaring data section
    message db 'Welcome to my program!',0xa,0xd ;defining a string with line break characters
    count dw 10 ;defining a word variable with value of 10
    ascii db 'A', 0x41 ;defining a byte variable for ASCII character 'A' with its hex code
    array dd 1,2,3,4 ;defining a double word array with 4 elements
    float_val dq 3.14 ;defining a quad word variable with value of 3.14

section .text ;declaring text section
    global _start ;starts the program execution
    _start:
    mov eax, 4 ;moves the value 4 to eax register (system call number for 'write')
    mov ebx, 1 ;moves the value 1 to ebx register (standard output)
    mov ecx, message ;moves the address of string variable to ecx register
    mov edx, 19 ;moves the length of the string to edx register (including line break characters)
    int 0x80 ;invoking a system call to write the string to standard output

    mov ebx, 2 ;moves the value 2 to ebx register (standard error)
    mov ecx, ascii ;moves the address of byte variable to ecx register
    mov edx, 2 ;moves the length of the variable (1 byte) to edx register
    int 0x80 ;invoking a system call to write the byte to standard error

    mov ebx, 3 ;moves the value 3 to ebx register (standard input)
    lea ecx, [array + 4] ;loads the address of the third element of the array into ecx register
    mov edx, 4 ;moves the length of the array (4 elements * 4 bytes per element) to edx register

    loop_start: ;loop label
    add ecx, 4 ;increments the address by 4 bytes
    mov eax, 3 ;moves the value 3 to eax register (system call number for 'read')
    int 0x80 ;invoking a system call to read input from standard input
    loop loop_start ;looping until all elements are read and stored in memory

    mov ebx, 4 ;moves the value 4 to ebx register (standard output)
    mov ecx, float_val ;moves the address of quad word variable to ecx register
    mov edx, 8 ;moves the length of the variable (8 bytes) to edx register
    int 0x80 ;invoking a system call to write the float value to standard output

    mov eax, 1 ;moves the value 1 to eax register (system call number for 'exit')
    xor ebx, ebx ;sets ebx register to 0 (exit status code)
    int 0x80 ;invoking a system call to exit the program and return exit status code
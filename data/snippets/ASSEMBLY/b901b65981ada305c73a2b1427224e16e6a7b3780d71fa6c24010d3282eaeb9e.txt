global _start    ; Declare the start of the program as a global symbol

section .text    ; Start of the .text section of the program, which contains executable code
_start:          ; Start label for program execution 

    ; Custom message to be printed
    mov edx, len    ; Store length of the message in edx
    mov ecx, msg    ; Store the message itself in ecx
    mov ebx, 1      ; Store the file descriptor for stdoutput in ebx
    mov eax, 4      ; Specify that the sys_write function will be called by storing the appropriate system call number (4) in eax
    int 0x80        ; Call the function by calling the software interrupt instruction 

end:            ; End of the program
    mov eax, 1      ; Specify that the exit function will be called by storing the appropriate system call number (1) in eax
    xor ebx, ebx    ; Clear ebx
    int 0x80        ; Call the function by calling the software interrupt instruction 

section .data    ; Start of the .data section of the program, which contains initialized data
msg db 'Hello World!', 0xA ; Declare a variable named msg and assign it the string 'Hello World!' followed by a new line character (0xA)
len equ $ - msg         ; Calculate the length of the message by subtracting the current address ($ symbol) from the start address of msg

section .bss    ; Start of the .bss section of the program, which contains uninitialized data
 resb 1         ; Reserve 1 byte of memory for future use
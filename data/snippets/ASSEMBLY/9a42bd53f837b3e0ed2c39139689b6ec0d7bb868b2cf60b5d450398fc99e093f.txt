; This is a code snippet showcasing how to initialize and use a stack in assembly language

; Data section
.stack SEGMENT
    db 100 dup (0) ; Initialize stack with 100 bytes
    top db -1       ; Initialize top of stack register to -1
.stack ENDS

DATA SEGMENT
    num_1 db 10    ; First number to push
    num_2 db 20    ; Second number to push
    result db ?    ; Variable to store result after popping from stack
DATA ENDS

; Code section
.code
main PROC

    mov ax, @data   ; Set up data segment
    mov ds, ax
    mov ss, ax      ; Set stack segment to data segment
    mov sp, offset top  ; Set stack pointer to top of stack register
    
    ; Push first number onto stack
    push num_1
    
    ; Push second number onto stack
    push num_2
    
    ; Pop first number from stack and store in result variable
    pop result
    
    ; Add second number to result
    add result, num_2
    
    ; Push result onto stack
    push result
    
    ; Print result
    mov ah, 09h     ; Set print function
    mov dx, offset result   ; Set result variable as data to be printed
    int 21h         ; Print result
    
    ; Pop second number from stack and store in result variable
    pop result
    
    ; Print result
    mov ah, 09h     ; Set print function
    mov dx, offset result   ; Set result variable as data to be printed
    int 21h         ; Print result
    
    mov ah, 4ch     ; Set exit function
    int 21h         ; Exit program
    
main ENDP
END main
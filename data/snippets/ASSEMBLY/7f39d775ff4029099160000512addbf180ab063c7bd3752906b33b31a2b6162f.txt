; Sample code snippet in ASSEMBLY
;
; Description: This code snippet demonstrates a simple loop in ASSEMBLY that uses the x86 "loop" instruction.

section .text ; Begin code section
    global _start ; Use "_start" symbol as entry point

_start:
    mov ecx, 10 ; Initialize counter to 10
    mov eax, 0 ; Initialize accumulator

loop_start: ; Label for beginning of loop
    add eax, ecx ; Add counter value to accumulator
    loop loop_start ; Decrement counter and jump back to loop_start if counter != 0

    mov ebx, eax ; Move accumulator value to ebx for printing
    mov eax, 4 ; System call number for "write"
    mov ecx, msg ; Pointer to message to be printed
    mov edx, msglen ; Length of message to be printed
    int 0x80 ; Invoke system call to print message

    mov eax, 1 ; System call number for "exit"
    xor ebx, ebx ; Return code of 0
    int 0x80 ; Invoke system call to exit program

section .data ; Begin data section
    msg db 'Accumulated value: %d', 10, 0 ; Message to be printed
    msglen equ $ - msg ; Length of message calculated by subtracting current location from start of message
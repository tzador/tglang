; This code snippet demonstrates how to check for the parity of a number using Assembly language.
; It uses the imul instruction to perform multiplication and the jpe instruction to jump if the parity flag is set.
; Input: AL = number to check for parity
; Output: AL = 0 (even) or 1 (odd)
mov bl, 2 ; Load value 2 into BL register
mov cl, al ; Move input number into CL register
imul cl ; Multiply input number by 2 and store result in AX register
xor ax, ax ; Zero out AX register
adc ax, bx ; Add BX register (2) to AX register, with carry bit added in case number was odd
adc ax, 0 ; Add 0 to AX register, with carry bit added in case number was even
and al, 1 ; Only keep the last bit of the result in AL register to check for parity
jpe is_odd ; Jump if parity flag is set (odd number)
is_even: ; Label for even number
mov al, 0 ; Move 0 into AL register for even number
jmp done ; Jump to the end
is_odd: ; Label for odd number
mov al, 1 ; Move 1 into AL register for odd number
done: ; End of code, exit
; Output: AL = 0 (even) or 1 (odd)
; Assembly code snippet to check if a number is odd or even
; Inputs: edx is the number to be checked
; Outputs: If number is even, prints "Even"
;          If number is odd, prints "Odd"
cmp edx, 0 ; Compare number with 0
jne Odd ; Jump to Odd label if number is not equal to 0
mov eax, 'E' ; Move ASCII value of 'E' to eax
mov ebx, 'v' ; Move ASCII value of 'v' to ebx
push eax ; Push 'E' onto the stack
push ebx ; Push 'v' onto the stack
call print ; Call the print subroutine
jmp End ; Jump to End label
Odd:
mov eax, 'O' ; Move ASCII value of 'O' to eax
mov ebx, 'd' ; Move ASCII value of 'd' to ebx
push eax ; Push 'O' onto the stack
push ebx ; Push 'd' onto the stack
call print ; Call the print subroutine
End:
ret ; Return from subroutine
print:
; Subroutine to print the top two characters on the stack
mov ecx, esp ; Move stack pointer to ecx
mov dl, [ecx] ; Move first character to dl
mov [ecx], 0 ; Place null terminator at end of string
mov ah, 0x0E ; Set AH register to 0x0E for print function
int 0x10 ; Call interrupt 0x10 to print character in dl register
mov dl, [ecx+1] ; Move second character to dl
mov [ecx], 0 ; Place null terminator at end of string
mov ah, 0x0E ; Set AH register to 0x0E for print function
int 0x10 ; Call interrupt 0x10 to print character in dl register
ret ; Return from subroutine
.section .bss
    ; declaring variables
    sa: .space 4   ; 4 bytes for variable sa
    sb: .space 4   ; 4 bytes for variable sb
    sc: .space 4   ; 4 bytes for variable sc
.section .text
    ; setting up main function
    .global _start
    _start:
        ; moving values into variables
        movl $2, sa   ; move the value 2 into variable sa
        movl $3, sb   ; move the value 3 into variable sb
        ; calculating the sum of the two variables
        movl sa, %eax   ; move the value of sa into register eax
        addl sb, %eax   ; add the value of sb to register eax
        movl %eax, sc   ; move the sum into variable sc
        ; printing the sum
        movl $1, %eax   ; move 1 into register eax (the 'write' syscall)
        movl $1, %ebx   ; move 1 into register ebx (the file descriptor, stdout)
        movl sc, %ecx   ; move the value of sc into register ecx (the 'data' argument)
        movl $4, %edx   ; move 4 into register edx (the number of bytes to write)
        int $0x80       ; call the 'write' syscall
        ; exiting the program
        movl $1, %eax   ; move 1 into register eax (the 'exit' syscall)
        xorl %ebx, %ebx   ; move 0 into register ebx (the exit code)
        int $0x80   ; call the 'exit' syscall
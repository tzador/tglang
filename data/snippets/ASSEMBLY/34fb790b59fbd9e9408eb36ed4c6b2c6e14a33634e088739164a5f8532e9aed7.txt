.code
main PROC
  mov ax, @data              ; Load data segment address into AX register
  mov ds, ax                 ; Move data segment address into DS register
  mov bx, OFFSET testArray   ; Move memory address of testArray into BX register
  mov cx, 10H                ; Load loop counter with length of testArray

  ; Loop through each element of the array
  L1:
    mov ah, testArray[bx]    ; Move value at memory address pointed to by BX into AH register
    xor al, al               ; Clear AL register
    div testDivisor          ; Divide contents of AX register by testDivisor
    mov testArray[bx], al    ; Move remainder (result of division) into current element of testArray
    inc bx                   ; Increment BX register to point to next element
    loop L1                  ; Loop until CX register reaches 0

  mov ah, 09H                ; Function to output string to screen
  mov dx, OFFSET resultString ; Load memory address of resultString into DX register
  int 21H                    ; Call DOS interrupt 21H to output string to screen

  mov ah, 09H                ; Function to output string to screen
  mov dx, OFFSET testArray   ; Move memory address of testArray into DX register
  int 21H                    ; Call DOS interrupt 21H to output string to screen

  mov ah, 4CH                ; Function to terminate program
  int 21H                    ; Call DOS interrupt 21H to terminate program

  testArray db 12H, 4H, 8H, 2H, 24H, 3H, 6H, 1H, 18H, 2H   ; Initialize testArray with values
  testDivisor db 2H                                        ; Set testDivisor to 2
  resultString db 'The results are: $'                     ; Initialize resultString

END main                    ; End of main procedure
END                         ; End of program
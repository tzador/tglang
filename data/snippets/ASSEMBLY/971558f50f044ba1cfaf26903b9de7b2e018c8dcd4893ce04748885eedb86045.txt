; This code snippet checks if a number is prime
;
section .text                           ; Section containing code instructions

global _start                           ; Global label for starting of program

_start:
    ; Initialize variables
    mov ebx, 2                          ; ebx will hold the divisor
    mov ecx, [num]                      ; ecx will hold the number to be checked for primality
    mov eax, 0                          ; eax will hold the remainder of the division
    mov edx, 0                          ; edx will hold the quotient of the division

    ; Loop through possible divisors
    loop_start:
        div dword [ebx]                 ; Divide ecx by ebx, storing remainder in eax and quotient in edx

        cmp eax, 0                      ; Compare remainder to 0
        je not_prime                     ; If remainder is 0, number is not prime

        inc ebx                         ; Increment divisor
        cmp ebx, ecx                    ; Compare divisor to number
        jg prime                        ; If divisor is greater than number, it is prime

        jmp loop_start                  ; Loop back to beginning with new divisor

    not_prime:
        ; Number is not prime, print message and exit
        mov ebx, 1                      ; Set exit code to 1
        mov eax, 4                      ; Print message instruction
        mov ecx, not_prime_msg          ; Message to print
        mov edx, not_prime_msg_len      ; Length of message
        int 0x80                        ; Execute system call to print message
        mov eax, 1                      ; System call to exit program
        xor ebx, ebx                    ; Set exit code to 0
        int 0x80                        ; Execute system call to exit program

    prime:
        ; Number is prime, print message and exit
        mov ebx, 1                      ; Set exit code to 1
        mov eax, 4                      ; Print message instruction
        mov ecx, prime_msg              ; Message to print
        mov edx, prime_msg_len          ; Length of message
        int 0x80                        ; Execute system call to print message
        mov eax, 1                      ; System call to exit program
        xor ebx, ebx                    ; Set exit code to 0
        int 0x80                        ; Execute system call to exit program

section .data                           ; Section containing data

num dw 127                              ; Number to check for primality
prime_msg db 'The number is prime', 10  ; Message to print if number is prime (with new line character)
prime_msg_len equ $ - prime_msg         ; Length of prime_msg
not_prime_msg db 'The number is not prime', 10   ; Message to print if number is not prime (with new line character)
not_prime_msg_len equ $ - not_prime_msg ; Length of not_prime_msg
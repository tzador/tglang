global main

section .text
main:
    ; move values into registers
    push ebp    ; save base pointer
    mov ebp, esp    ; move stack pointer into base pointer
    sub esp, 8    ; allocate space on stack for local variables
    mov eax, 5    ; move value 5 into eax register
    mov ebx, 2    ; move value 2 into ebx register

    ; perform operations using registers
    add eax, ebx    ; add ebx to eax, result stored in eax
    imul eax, ebx    ; multiply eax by ebx, result stored in eax
    xor eax, eax    ; xor eax with itself, result stored in eax
    inc eax    ; increment eax by 1, result stored in eax

    ; calling functions
    call print    ; call print function
    call add    ; call add function
    jmp end    ; unconditional jump to end of program

    ; functions
    print:
        mov eax, 5    ; move value 5 into eax register
        push eax    ; push value onto stack
        call printf    ; call printf function
        ret    ; return

    add:
        mov eax, 5    ; move value 5 into eax register
        mov ebx, 2    ; move value 2 into ebx register
        add eax, ebx    ; add ebx to eax, result stored in eax
        ret    ; return

    end:
        mov esp, ebp    ; move stack pointer back to base pointer position
        pop ebp    ; restore base pointer
        xor eax, eax    ; xor eax with itself, result stored in eax
        ret    ; return
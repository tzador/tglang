pragma solidity >= 0.6.0;
 
// Contract to store and manipulate data
contract DataStorage {
    
    uint public data; // public variable accessible by all
    
    // event to log data changes
    event DataChanged(address indexed from, uint oldValue, uint newValue);
    
    // function to set data value
    function setData(uint _data) public {
        require(_data != data, "Data value must be different from current value"); // check for uniqueness
        uint oldValue = data; // store old value
        data = _data; // set new value
        emit DataChanged(msg.sender, oldValue, data); // emit event
    }
    
    // function to get data value
    function getData() public view returns (uint) {
        return data;
    }
    
    // function to compute data value by adding 5
    function computeData() public view returns (uint) {
        uint computedData = data + 5; // compute value
        return computedData;
    }
    
}
pragma solidity ^0.6.0;

contract ExampleContract {
    string public publicString;
    uint private privateUInt;
    address internal internalAddress;
    bool external externalBool;
    mapping(address => uint) private userBalances;
    
    constructor() public {
        publicString = "Hello World!";
        privateUInt = 100;
        internalAddress = msg.sender;
        externalBool = true;
    }
    
    function deposit() external payable {
        uint amount = msg.value;
        userBalances[msg.sender] += amount;
    }
    
    function withdraw(uint _amount) public {
        require(userBalances[msg.sender] >= _amount, "Insufficient balance");
        userBalances[msg.sender] -= _amount;
        msg.sender.transfer(_amount);
    }
}
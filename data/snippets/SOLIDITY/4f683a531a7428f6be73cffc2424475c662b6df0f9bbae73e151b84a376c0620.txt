contract MyContract {
    uint private myVariable; // Private variable
    
    function setValue(uint _value) public { // Setter function
        require(_value > 0, "Value must be greater than 0."); // Validation
        myVariable = _value; // Set the value
    }
    
    function getValue() public view returns (uint) { // Getter function
        return myVariable; // Return the value
    }
    
    function addValue(uint _value) public { // Add function
        myVariable += _value; // Add to the value
    }
    
    function subtractValue(uint _value) public { // Subtract function
        require(_value > 0, "Value must be greater than 0."); // Validation
        myVariable -= _value; // Subtract from the value
    }
    
    function multiplyValue(uint _value) public { // Multiply function
        myVariable *= _value; // Multiply the value
    }
    
    function divideValue(uint _value) public { // Divide function
        require(_value > 0, "Value must be greater than 0.");
        myVariable /= _value; // Divide the value
    }
    
    function resetValue() public { // Reset function
        myVariable = 0; // Reset the value
    }
}
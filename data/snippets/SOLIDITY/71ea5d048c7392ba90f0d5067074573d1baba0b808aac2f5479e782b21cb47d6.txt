pragma solidity ^0.8.0; // Sets the version of Solidity

contract Token { // Defines a contract named "Token"
    string public name = "My Token"; // Declares a public string variable named "name" with a value of "My Token"
    string public symbol = "MTK"; // Declares a public string variable named "symbol" with a value of "MTK"
    uint256 public totalSupply; // Declares a public unsigned integer variable named "totalSupply"

    mapping(address => uint256) public balanceOf; // Defines a public mapping named "balanceOf" that maps addresses to unsigned integers

    event Transfer(address indexed from, address indexed to, uint256 value); // Declares a public event named "Transfer" that takes in three parameters: two addresses and a unsigned integer

    constructor(uint256 _initialSupply) { // Defines a constructor function that takes in a unsigned integer parameter named "_initialSupply"
        totalSupply = _initialSupply; // Assigns the value of "_initialSupply" to "totalSupply"

        balanceOf[msg.sender] = _initialSupply; // Assigns the value of "_initialSupply" to the "balanceOf" mapping at the sender's address

        emit Transfer(address(0), msg.sender, _initialSupply); // Emits a "Transfer" event with the parameters of the zero address, the sender's address, and the value of "_initialSupply"
    }

    function transfer(address _to, uint256 _value) public { // Defines a public function named "transfer" that takes in two parameters: an address and a unsigned integer
        require(balanceOf[msg.sender] >= _value); // Checks if the sender has enough tokens to transfer
        require(balanceOf[_to] + _value >= balanceOf[_to]); // Checks for potential overflow of "balanceOf[_to]"

        balanceOf[msg.sender] -= _value; // Subtracts the value of "_value" from the sender's balance
        balanceOf[_to] += _value; // Adds the value of "_value" to the receiver's balance

        emit Transfer(msg.sender, _to, _value); // Emits a "Transfer" event with the parameters of the sender's address, the receiver's address, and the value of "_value"
    }
}
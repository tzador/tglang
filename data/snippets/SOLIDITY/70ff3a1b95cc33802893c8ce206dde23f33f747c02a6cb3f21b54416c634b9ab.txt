/// @title Contract for managing a trading platform
contract TradingPlatform {
    
    // Variables
    address public owner; // Address of the owner of the contract
    bool public isOpen = true; // Flag for whether the trading platform is currently open
    
    uint public totalOrders; // Total number of orders placed
    
    // Struct for storing order information
    struct Order {
        address buyer; // Address of the buyer
        uint price; // Price of the order
        bool isCompleted; // Flag for whether the order has been completed
    }
    
    // Mapping for storing all orders placed
    mapping(uint => Order) public orders;
    
    // Events
    event OrderPlaced(address indexed buyer, uint price); // Event triggered when an order is placed
    event OrderCompleted(address indexed buyer, uint price); // Event triggered when an order is completed
    
    // Constructor function
    function TradingPlatform() public{
        owner = msg.sender;
    }
    
    // Modifier to only allow the owner of the contract to execute certain functions
    modifier onlyOwner {
        require(msg.sender == owner);
        _;
    }
    
    // Function for placing an order
    function placeOrder(uint _price) public {
        require(isOpen); // Check that the trading platform is currently open
        require(_price > 0); // Check that the price is greater than 0
        
        orders[totalOrders] = Order(msg.sender, _price, false); // Create a new order and store it in the mapping
        totalOrders++; // Increase the total number of orders placed
        
        emit OrderPlaced(msg.sender, _price); // Trigger the OrderPlaced event
        
    }
    
    // Function for completing an order
    function completeOrder(uint _orderId) public onlyOwner {
        require(!orders[_orderId].isCompleted); // Check that the order has not already been completed
        
        orders[_orderId].isCompleted = true; // Update the flag for the order as completed
        
        emit OrderCompleted(orders[_orderId].buyer, orders[_orderId].price); // Trigger the OrderCompleted event
    }
    
    // Function for opening the trading platform
    function openTradingPlatform() public onlyOwner {
        require(!isOpen); // Check that the trading platform is not already open
        
        isOpen = true; // Update the flag for the trading platform as open
    }
    
    // Function for closing the trading platform
    function closeTradingPlatform() public onlyOwner {
        require(isOpen); // Check that the trading platform is currently open
        
        isOpen = false; // Update the flag for the trading platform as closed
    }
}
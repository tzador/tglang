/// @dev Interface for interacting with a staking contract
interface IStaking {
    /// @dev Registers a user for staking
    /// @param _user The address of the user to register
    /// @param _amount The amount to be staked
    /// @return True if registration is successful, false otherwise
    function registerUser(address _user, uint256 _amount) external returns (bool);
    
    /// @dev Unregisters a user from staking
    /// @param _user The address of the user to unregister
    /// @return True if unregistration is successful, false otherwise
    function unregisterUser(address _user) external returns (bool);
    
    /// @dev Allows a registered user to stake more tokens
    /// @param _amount The amount to be added to the user's staked balance
    /// @return True if staking is successful, false otherwise
    function stake(uint256 _amount) external returns (bool);
    
    /// @dev Allows a registered user to withdraw staked tokens
    /// @param _amount The amount of tokens to be withdrawn
    /// @return True if withdrawal is successful, false otherwise
    function withdraw(uint256 _amount) external returns (bool);
    
    /// @dev Allows a registered user to claim their staking rewards
    /// @param _amount The amount of staking rewards to be claimed
    /// @return True if claiming is successful, false otherwise
    function claimRewards(uint256 _amount) external returns (bool);
}
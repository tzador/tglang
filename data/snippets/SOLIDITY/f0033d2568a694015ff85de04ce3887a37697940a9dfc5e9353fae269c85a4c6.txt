pragma solidity ^0.8.0;

contract Voting {
    mapping(address => bool) public voters;
    mapping(uint256 => uint256) public votes;

    event Vote(address indexed voter, uint256 indexed candidate);
    event AddCandidate(address indexed candidate);

    modifier onlyVoter() {
        require(voters[msg.sender], "You are not a registered voter.");
        _;
    }

    modifier candidateExists(uint256 _candidate_id) {
        require(votes[_candidate_id] != 0, "Candidate does not exist.");
        _;
    }

    function addCandidate(address _candidate) public {
        voters[_candidate] = true;
        emit AddCandidate(_candidate);
    }

    function vote(uint256 _candidate_id) public onlyVoter candidateExists(_candidate_id) {
        votes[_candidate_id]++;
        emit Vote(msg.sender, _candidate_id);
    }
}
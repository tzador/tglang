// This is a contract that implements a basic bank withdrawal function

pragma solidity ^0.8.0; // specifies the version of Solidity to use

contract Bank {
    
    address public owner; // variable to store the contract owner's address
    mapping (address => uint) public balances; // mapping to store balances of different addresses
    
    constructor() {
        owner = msg.sender; // sets the contract owner to the address of the deployer
    }
    
    // function to deposit funds into the bank
    function deposit() public payable {
        balances[msg.sender] += msg.value; // adds the deposited amount to the sender's balance
    }
    
    // function to withdraw funds from the bank
    function withdraw(uint amount) public {
        require(amount > 0, "You must withdraw a positive amount"); // checks that the withdrawal amount is positive
        require(amount <= balances[msg.sender], "Insufficient funds"); // checks that the sender has enough balance to withdraw
        
        balances[msg.sender] -= amount; // subtracts the withdrawal amount from the sender's balance
        payable(msg.sender).transfer(amount); // transfers the withdrawal amount to the sender's address
    }
    
    // function to transfer funds from one address to another
    function transfer(address recipient, uint amount) public {
        require(amount > 0, "You must transfer a positive amount"); // checks that the transfer amount is positive
        require(recipient != msg.sender, "You cannot transfer funds to yourself"); // checks that the recipient is not the sender
        require(amount <= balances[msg.sender], "Insufficient funds"); // checks that the sender has enough balance to transfer
        
        balances[msg.sender] -= amount; // subtracts the transfer amount from the sender's balance
        balances[recipient] += amount; // adds the transfer amount to the recipient's balance
    }
    
    // function to close the bank contract and send remaining funds to the owner
    function close() public {
        require(msg.sender == owner, "Only the owner can close the bank"); // checks that the caller is the contract owner
        
        selfdestruct(payable(owner)); // sends remaining funds to the owner and destroys the contract
    }
}
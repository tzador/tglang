/**
* @title Register
* @dev Contract for registering users.
*/
contract Register {
  address public owner; // variable to store contract owner's address

  // Struct to store user information
  struct User {
    string name;
    uint age;
    bool isActive;
  }

  // Mapping to store user details with their address
  mapping (address => User) public users;

  // Modifier to check if the user is registered
  modifier isRegistered() {
    require(users[msg.sender].isActive == true, "User is not registered.");
    _;
  }

  // Constructor to set the owner as the contract deployer
  constructor() public {
    owner = msg.sender;
  }

  // Function to register a new user
  function register(string memory _name, uint _age) public {
    require(users[msg.sender].isActive == false, "User is already registered.");
    users[msg.sender].name = _name;
    users[msg.sender].age = _age;
    users[msg.sender].isActive = true;
  }

  // Function to update user's age
  function updateAge(uint _age) public isRegistered {
    users[msg.sender].age = _age;
  }
}
/**
 * @title Inbox
 * @dev Contract for storing and updating a message string
 */
contract Inbox {
    
    address private owner; // the owner of this contract
    string public message; // the current message
    
    event MessageUpdated(string _message); // event triggered when the message is updated
    
    /**
     * @dev Constructor function to set the owner and initial message
     * @param _initialMessage The initial message to be stored
     */
    constructor(string memory _initialMessage) public {
        owner = msg.sender;
        message = _initialMessage;
    }
    
    /**
     * @dev Function to update the message
     * @param _newMessage The new message to be stored
     */
    function updateMessage(string memory _newMessage) public {
        require(msg.sender == owner); // only the owner can update the message
        message = _newMessage;
        emit MessageUpdated(_newMessage);
    }
    
    /**
     * @dev Function to get the current message
     * @return The current message
     */
    function getMessage() public view returns (string memory) {
        return message;
    }
    
}
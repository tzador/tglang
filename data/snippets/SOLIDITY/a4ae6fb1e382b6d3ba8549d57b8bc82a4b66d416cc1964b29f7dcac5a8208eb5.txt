//Define a contract named Voting
contract Voting {

    //Declare state variables to track total votes and mapping to track votes per candidate
    uint public totalVotes;
    mapping(uint => uint) public votesPerCandidate;

    //Declare a function to add a new candidate
    function addCandidate(uint _candidateId) public {

        //Check if candidate already exists
        require(votesPerCandidate[_candidateId] == 0, "This candidate already exists.");

        //Add candidate to mapping and increment total votes
        votesPerCandidate[_candidateId] = 1;
        totalVotes++;
    }

    //Declare a function to vote for a candidate
    function vote(uint _candidateId) public {

        //Check if candidate exists
        require(votesPerCandidate[_candidateId] != 0, "This candidate does not exist.");

        //Increment vote count for candidate and total votes
        votesPerCandidate[_candidateId]++;
        totalVotes++;
    }

    //Declare a function to calculate percentage of votes for a candidate
    function calculatePercentage(uint _candidateId) public view returns (uint) {

        //Check if candidate exists
        require(votesPerCandidate[_candidateId] != 0, "This candidate does not exist.");

        //Calculate percentage by dividing candidate's votes by total votes
        uint percentage = (votesPerCandidate[_candidateId] / totalVotes) * 100;
        return percentage;
    }
}
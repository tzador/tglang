pragma solidity 0.6.12;

contract Inbox {
    // *** STATE VARIABLES (mainly for storage, counters, settings, ...)
    address public creator;
    string message;
    
    // *** events (mainly for frontend DApps to listen for)
    event MessageSet(string _message);
    
    // *** constructor (exectued only when contract is deployed)
    constructor(string memory _initialMessage) public {
        creator = msg.sender;
        message = _initialMessage;
    }
    
    // *** modifiers (for common logic used throughout contract)
    modifier onlyCreator {
        require(msg.sender == creator);
        _;
    }
    
    // *** functions (interact with contract)
    function setMessage(string memory _newMessage) public onlyCreator {
        message = _newMessage;
        emit MessageSet(_newMessage);
    }
    
    function getMessage() public view returns (string memory) {
        return message;
    }
}
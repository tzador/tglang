pragma solidity >=0.5.0 <0.8.0;

//Interface for a contract that will receive tokens
abstract contract TokenRecipientInterface {
    // Called by another contract's transfer function to request that this contract signals acceptance of tokens
    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public virtual;
}

// Example contract using the interface
contract ExampleContract is TokenRecipientInterface {

    // Called by another contract's transfer function to request that this contract signals acceptance of tokens
    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public override {
        // Perform actions upon receiving tokens, such as updating balances or triggering events
        // Example code below
        // 1. Update balances
        balances[from] += tokens;
        // 2. Trigger event
        emit TokenReceived(from, tokens, token, data);
    }
    
    // Event triggered when tokens are received
    event TokenReceived(address from, uint256 tokens, address token, bytes data);
    
    // Additional contract functions can be added below
    
}
pragma solidity ^0.8.0;

//** @title Token
/** @notice This contract creates an ERC20 token with total supply equal to 10000 */
contract Token {
    // state variables
    string public constant name = "My Token";
    string public constant symbol = "MTK";
    uint8 public constant decimals = 18;
    uint256 public totalSupply = 10000 * (10 ** decimals);
    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;

    // events
    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);

    // constructor
    constructor() {
        balanceOf[msg.sender] = totalSupply;
    }

    /**
    * @dev Transfer tokens from one address to another
    * @param _from The address to transfer from.
    * @param _to The address to transfer to.
    * @param _value The amount of tokens to be transferred.
    */
    function transfer(address _from, address _to, uint256 _value) public returns (bool) {
        require(balanceOf[_from] >= _value);
        require(_to != address(0));
        require(_value > 0);
        balanceOf[_from] = balanceOf[_from] - _value;
        balanceOf[_to] = balanceOf[_to] + _value;
        emit Transfer(_from, _to, _value);
        return true;
    }

    /**
    * @dev Allow _spender to withdraw from your account, multiple times, up to the _value amount.
    * @param _spender The address of the account able to transfer the tokens.
    * @param _value The amount of tokens to be approved for transfer.
    */
    function approve(address _spender, uint256 _value) public returns (bool success) {
        require(_spender != address(0));
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }

    /**
    * @dev Transfer _value amount of tokens from address _from to address _to .
    * @param _from The address of the sender.
    * @param _to The address of the recipient.
    * @param _value The amount of tokens to be transferred.
    */
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[_from] >= _value);
        require(_to != address(0));
        require(_value <= allowance[_from][msg.sender]);
        balanceOf[_from] = balanceOf[_from] - _value;
        balanceOf[_to] = balanceOf[_to] + _value;
        allowance[_from][msg.sender] = allowance[_from][msg.sender] - _value;
        emit Transfer(_from, _to, _value);
        return true;
    }
}
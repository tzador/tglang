/**
* @title EscrowFund
* @dev A contract that holds funds in escrow and only releases them when certain conditions are met
*/
contract EscrowFund {

    address public depositor; //public variable to store the address of the depositor
    address public beneficiary; //public variable to store the address of the beneficiary
    uint public balance; //public variable to store the balance of the contract

    //Constructor function that sets the depositor and beneficiary
    constructor(address _depositor, address _beneficiary) public {
        require(_depositor != address(0) && _beneficiary != address(0)); //require both addresses to be valid
        depositor = _depositor;
        beneficiary = _beneficiary;
    }

    //Function to deposit funds into the contract.
    function deposit() public payable {
        require(msg.sender == depositor); //require the caller to be the depositor
        require(msg.value > 0); //require a non-zero amount to be deposited
        balance = balance + msg.value; //increase the balance by the deposited amount
    }

    //Function to release funds to the beneficiary.
    function release() public {
        require(msg.sender == beneficiary); //require the caller to be the beneficiary
        require(balance > 0); // require the contract to have a balance
        msg.sender.transfer(balance); //transfer the balance to the beneficiary
        balance = 0; //set the balance to 0
    }

    //Fallback function to reject any accidental or unauthorized deposits
    function() public payable {
        revert();
    }
}
// Define a contract called "Bank"
contract Bank {
    address owner; // owner's address
    
    // Define a mapping to store the balances of each address
    mapping(address => uint) public balances;
    
    // Define a constructor function to set the owner's address
    constructor() {
        owner = msg.sender;
    }
    
    // Define a function to deposit funds
    function deposit() public payable {
        // Increase the balance of the sender's address by the deposited value
        balances[msg.sender] += msg.value;
    }
    
    // Define a function to withdraw funds
    function withdraw(uint _amount) public {
        // Check if the sender has enough balance
        require(balances[msg.sender] >= _amount, "Insufficient balance.");
        
        // Transfer the requested amount to the sender's address
        (bool success, ) = msg.sender.call{value: _amount}("");
        require(success, "Failed to transfer funds.");
        
        // Decrease the balance of the sender's address by the withdrawn amount
        balances[msg.sender] -= _amount;
    }
}
// Contract declaration
contract MyContract {
    // State variables
    uint256 public myNumber; // Annotated with a data type and visibility specifier
    string private constant myString = "Hello World"; // Annotated with constant and visibility specifiers

    // Constructor function
    constructor(uint256 _myNumber) public {
        myNumber = _myNumber; // Initialize state variable with constructor parameter
    }

    // External function
    function changeNumber(uint256 _newNumber) external {
        myNumber = _newNumber; // Update state variable
    }

    // Public function
    function getString() public pure returns (string memory) {
        return myString; // Return the stored string
    }

    // Private function
    function multiplyNumber(uint256 _factor) private view returns (uint256) {
        return myNumber * _factor; // Perform calculation using state variable
    }

    // Internal function
    function doubleNumber() internal {
        myNumber = multiplyNumber(2); // Call private function to multiply state variable by 2
    }

    // Event declaration
    event NumberChanged(uint256 newNumber); // Annotated with event keyword and parameter

    // Fallback function
    function() external payable {
        myNumber = myNumber + msg.value; // Update state variable with value sent through transaction
        emit NumberChanged(myNumber); // Emit event with updated state variable value
    }
}
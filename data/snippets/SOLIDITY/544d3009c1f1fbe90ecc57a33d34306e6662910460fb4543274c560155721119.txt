pragma solidity ^0.6.0;
// this contract allows users to deposit and withdraw Ether
contract DepositWithdraw {
    // maintains a mapping of user addresses to their Ether balances
    mapping (address => uint) public userBalances;
    // emits an event whenever a deposit is made
    event Deposit(address indexed depositor, uint amount);
    // emits an event whenever a withdrawal is made
    event Withdrawal(address indexed withdrawer, uint amount);
    
    // allows users to deposit Ether into the contract
    function deposit() public payable {
        // checks that the deposit amount is greater than 0
        require(msg.value > 0);
        // increases the user's balance by the deposit amount
        userBalances[msg.sender] += msg.value;
        // emits the deposit event
        emit Deposit(msg.sender, msg.value);
    }
    
    // allows users to withdraw their Ether balance from the contract
    function withdraw(uint amount) public {
        // checks that the withdrawal amount is less than or equal to the user's balance
        require(userBalances[msg.sender] >= amount);
        // decreases the user's balance by the withdrawal amount
        userBalances[msg.sender] -= amount;
        // transfers the withdrawal amount to the user's address
        msg.sender.transfer(amount);
        // emits the withdrawal event
        emit Withdrawal(msg.sender, amount);
    }
}
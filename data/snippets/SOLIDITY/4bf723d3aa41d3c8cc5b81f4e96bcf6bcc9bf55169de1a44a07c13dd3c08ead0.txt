pragma solidity ^0.8.7;
// Declaring a  Smart Contract called Hello
contract Hello {
    // Declaring a state variable
    string private message;
    
    // Intializing the state variable in the constructor
    constructor(string memory _message){
       message = _message;
    }
    
    // Access modifier to restrict function access to owner only
    modifier onlyOwner() {
        require (msg.sender == owner, "Only owner can call this function.");
        _;
    }
    
    // Declaring an event to emit when message is changed
    event MessageChanged(string newMessage);
    
    // Function to return message 
    function getMessage() public view returns(string memory) {
        return message;
    }
    
    // Function to change message with a new string
    function setMessage(string memory _newMessage) public onlyOwner {
        message = _newMessage;
        // Emit the MessageChanged event
        emit MessageChanged(_newMessage);
    }
}
contract Example {

struct Person { // struct to store personal information
string name;
uint age;
}

mapping(address => Person) public people; // mapping to track people by their address

function addPerson(string _name, uint _age) public { // function to add a person to the mapping
Person memory newPerson = Person(_name, _age); // creates a new instance of the Person struct
people[msg.sender] = newPerson; // assigns the new person to the mapping using the sender's address
}

function getPerson(address _address) public view returns(string, uint) { // function to retrieve a person's information
return (people[_address].name, people[_address].age); // returns the person's name and age using their address as input
}

function updateAge(uint _age) public { // function to update a person's age
people[msg.sender].age = _age; // updates the age for the sender's address
}

function deletePerson() public { // function to delete a person's information
delete people[msg.sender]; // deletes the person's information using the sender's address
}
}
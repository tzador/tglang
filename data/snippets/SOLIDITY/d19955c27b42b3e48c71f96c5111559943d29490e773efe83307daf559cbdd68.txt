pragma solidity >=0.4.22 <0.9.0;

// This contract represents a basic bank account with functions for deposit, withdrawal, and balance check. 
contract BankAccount {
    
    // Variables to track account balance and owner of the account.
    uint balance;
    address owner;
    
    // Constructor function to set the initial balance and owner of the account as the contract creator.
    constructor() payable {
        balance = msg.value;
        owner = msg.sender;
    }
    
    // Modifier to restrict access to certain functions only to the account owner.
    modifier onlyOwner() {
        require(msg.sender == owner, "Only the account owner can access this function.");
        _;
    }
    
    // Function to deposit funds into the account.
    function deposit() public payable {
        require(msg.value > 0, "Deposit amount must be greater than 0.");
        balance += msg.value;
    }
    
    // Function to withdraw funds from the account.
    function withdraw(uint amount) public onlyOwner {
        require(amount > 0 && amount <= balance, "Withdrawal amount must be between 0 and account balance.");
        balance -= amount;
        (bool success, ) = msg.sender.call{value: amount}("");
        require(success, "Transfer failed.");
    }
    
    // Function to check the current balance of the account.
    function getBalance() public view returns (uint) {
        return balance;
    }
}
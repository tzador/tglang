// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Bank {

    address public owner;
    mapping (address => uint) private balances;
    uint private totalSupply;

    constructor() {
        owner = msg.sender;
    }

    modifier onlyOwner {
        require(msg.sender == owner, "Only the owner can call this function.");
        _;
    }

    function deposit() public payable {
        require(msg.value > 0, "Deposit amount must be greater than 0.");
        balances[msg.sender] += msg.value;
        totalSupply += msg.value;
    }

    function withdraw(uint amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance.");
        balances[msg.sender] -= amount;
        totalSupply -= amount;
        (bool success, ) = msg.sender.call{ value: amount }("");
        require(success, "Withdrawal failed.");
    }
}
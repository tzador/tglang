/// @title Bet Contract
/// @notice This contract handles the betting logic for a game.
contract BetContract {
    // Declaring variables
    string public player1;
    string public player2;
    uint public betAmount;
    address public player1Address;
    address public player2Address;
    bool public betCompleted = false;

    // Event to be emitted when the bet is completed
    event BetCompleted(string winner);

    // Modifier to check if the bet is completed
    modifier betNotCompleted() {
        require(!betCompleted);
        _;
    }

    // Function to set the player names and bet amount
    function setPlayers(string _player1, string _player2, uint _betAmount, address _player1Address, address _player2Address) public {
        // Check if the bet amount is greater than 0
        require(_betAmount > 0, "Bet amount must be greater than 0");

        // Set the player names and bet amount
        player1 = _player1;
        player2 = _player2;
        betAmount = _betAmount;

        // Check if the players have not already been set
        if (player1Address == address(0) && player2Address == address(0)) {
            // Set the player addresses
            player1Address = _player1Address;
            player2Address = _player2Address;
        }
    }

    // Function for player 1 to make their move
    function player1Move() public payable betNotCompleted {
        // Check if the correct bet amount was sent by player 1
        require(msg.value == betAmount, "Player 1 must send the exact bet amount");

        // Check if player 1 has already made their move
        require(player1Address == msg.sender, "Only player 1 can make a move");

        // Emit an event indicating that player 1 has made their move
        emit BetCompleted(player1);
        // Set betCompleted to true
        betCompleted = true;
    }

    // Function for player 2 to make their move
    function player2Move() public payable betNotCompleted {
        // Check if the correct bet amount was sent by player 2
        require(msg.value == betAmount, "Player 2 must send the exact bet amount");

        // Check if player 2 has already made their move
        require(player2Address == msg.sender, "Only player 2 can make a move");

        // Emit an event indicating that player 2 has made their move
        emit BetCompleted(player2);
        // Set betCompleted to true
        betCompleted = true;
    }

    // Function for the owner to withdraw the bet amount if there is no winner after a certain amount of time
    function withdrawBet() public onlyOwner {
        // Check if the bet is not completed
        require(!betCompleted);

        // Transfer the bet amount back to the owner
        owner.transfer(betAmount);
    }

    // Helper function to check if an address is the contract owner
    function isOwner(address addr) private view returns (bool) {
        return addr == owner;
    }
}
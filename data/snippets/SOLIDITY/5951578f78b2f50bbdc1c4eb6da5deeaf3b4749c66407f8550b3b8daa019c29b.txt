contract MyContract {
    // Define state variables
    address public owner;
    uint public balance;
    // Define events
    event Deposit(address _from, uint _amount);
    event Withdraw(address _to, uint _amount);
    // Define constructor function
    constructor() public {
        // Set owner as the address that deployed the contract
        owner = msg.sender;
    }
    // Define modifier for onlyOwner function
    modifier onlyOwner {
        require(msg.sender == owner, "Only contract owner can call this function");
        _;
    }
    // Define deposit function
    function deposit() public payable {
        // Increment balance by the amount sent
        balance += msg.value;
        // Emit Deposit event
        emit Deposit(msg.sender, msg.value);
    }
    // Define withdraw function
    function withdraw(uint _amount) public onlyOwner {
        // Check if contract has enough balance
        require(balance >= _amount, "Contract balance is not enough");
        // Decrement balance by the amount
        balance -= _amount;
        // Transfer funds to the contract owner
        msg.sender.transfer(_amount);
        // Emit Withdraw event
        emit Withdraw(msg.sender, _amount);
    }
}
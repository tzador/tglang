/**
 * @title Asset Transfer
 * @dev Simple contract to facilitate transfer of assets
 */
contract AssetTransfer {
    
    // state variables
    address public owner; // owner address
    mapping(address => uint) public balances; // balances mapping
    
    /**
     * @dev Modifier to restrict access to owner
     */
    modifier onlyOwner() {
        require(msg.sender == owner, "Sender is not the owner");
        _;
    }
    
    /**
     * @dev Constructor function
     */
    constructor() public {
        owner = msg.sender; // set the contract creator as the owner
    }
    
    /**
     * @dev Function to deposit assets to contract
     * @param _amount Number of assets to deposit
     */
    function deposit(uint _amount) public payable {
        balances[msg.sender] += _amount; // add the deposited assets to sender's balance
    }
    
    /**
     * @dev Function to withdraw assets from contract
     * @param _amount Number of assets to withdraw
     */
    function withdraw(uint _amount) public onlyOwner {
        require(balances[msg.sender] >= _amount, "Not enough balance");
        balances[msg.sender] -= _amount; // subtract the withdrawn assets from owner's balance
        msg.sender.transfer(_amount); // transfer the withdrawn assets to owner's address
    }
}
pragma solidity 0.8.7;  // Specifying the Solidity version

// Creating a smart contract
contract SimpleContract {
    // Declaring variables
    address public owner;
    uint256 private constant factor = 10;

    // Constructor function to set the owner as the contract creator
    constructor() {
        owner = msg.sender;
    }

    // Modifier to only allow the contract owner to access certain functions
    modifier onlyOwner {
        require(msg.sender == owner, "You are not the contract owner!");
        _; // This indicates where the rest of the code will be inserted in the function
    }

    // Function to add two numbers and multiply it by the factor
    function addAndMultiply(uint256 _num1, uint256 _num2) public onlyOwner returns (uint256) {
        uint256 result = _num1 + _num2;
        return result * factor;
    }

    // Function to change the owner of the contract
    function changeOwner(address _newOwner) public onlyOwner {
        owner = _newOwner;
    }
}
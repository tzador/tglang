// This is a smart contract written in Solidity programming language.

pragma solidity ^0.8.0;

contract SoliditySnippet {
  // State variables
  address public owner;
  string public name;
  address[] public addresses;
  uint256 public count;

  // Constructor
  constructor() {
    owner = msg.sender;
    name = "SoliditySnippet";
    count = 0;
  }

  // Functions
  function addAddress(address _address) public {
    require(msg.sender == owner, "Only the owner can add addresses.");

    addresses.push(_address);
    count++;
  }

  function getAddresses() public view returns (address[] memory) {
    return addresses;
  }

  function getCount() public view returns (uint256) {
    return count;
  }

  // Modifiers
  modifier onlyOwner() {
    require(msg.sender == owner, "Only the owner can call this function.");
    _;
  }
}
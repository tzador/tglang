// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// Import OpenZeppelin library for ownership and access control
import "@openzeppelin/contracts/access/Ownable.sol";

// Define contract named MyContract which uses the Ownable library
contract MyContract is Ownable {
    
    // Declare an event to track changes in contract ownership
    event OwnershipTransferred(address previousOwner, address newOwner);
    
    // Declare a public state variable to store an address
    address public myAddress;
    
    // Declare a private state variable to store an integer
    uint private myNumber;
    
    // Declare a constructor function to initialize the contract
    // Sets initial values for myAddress and myNumber
    constructor(address _address, uint _number) {
        myAddress = _address;
        myNumber = _number;
    }
    
    // Use the onlyOwner modifier from the Ownable library to restrict access to a function to only the contract owner
    function changeMyAddress(address newAddress) public onlyOwner {
        myAddress = newAddress;
    }
    
    // Declare a function to transfer ownership of the contract to another address
    // Uses the onlyOwner modifier and emits the OwnershipTransferred event
    function transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0), "New contract owner cannot be the zero address");
        emit OwnershipTransferred(owner(), newOwner);
        transferOwnership(newOwner);
    }
    
    // Use the onlyOwner modifier to restrict access to a function to only the contract owner
    function changeMyNumber(uint newNumber) public onlyOwner {
        myNumber = newNumber;
    }
    
    // Declare a function to get the current balance of the contract
    function getBalance() public view returns (uint) {
        return address(this).balance;
    }
    
    // Declare a payable function to receive funds
    function receiveFunds() public payable {
    }
    
    // Declare a function to withdraw funds from the contract to the contract owner's address
    function withdrawFunds() public onlyOwner {
        require(address(this).balance > 0, "No funds to withdraw");
        owner().transfer(address(this).balance);
    }
}
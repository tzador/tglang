// Enum and Struct declarations
enum Gender {Male, Female}

struct Person {
  string name;
  uint age;
  Gender gender;
}

// Contract functionality
contract PersonManager {

  // Events
  event personAdded(string name, uint age, address personAddr);
  event personUpdated(string name, uint age, address personAddr);

  // Modifier that checks for a valid age
  modifier onlyValidAge(uint _age) {
    require(_age > 0 && _age < 120, "Age must be between 0 and 120");
    _;
  }

  // State variables
  mapping(address => Person) public persons;

  // Contract functions
  function addPerson(string memory _name, uint _age, Gender _gender) public onlyValidAge(_age) {
    Person memory newPerson = Person(_name, _age, _gender);
    persons[msg.sender] = newPerson;
    emit personAdded(_name, _age, msg.sender);
  }

  function updateName(string memory _name) public {
    persons[msg.sender].name = _name;
    emit personUpdated(_name, persons[msg.sender].age, msg.sender);
  }
}
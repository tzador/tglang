//Function to add two numbers
function add(uint256 a, uint256 b) internal pure returns(uint256) {
    return a + b;
}

//Function to subtract two numbers
function subtract(uint256 a, uint256 b) internal pure returns(uint256) {
    return a - b;
}

//Function to multiply two numbers
function multiply(uint256 a, uint256 b) internal pure returns(uint256) {
    return a * b;
}

//Function to divide two numbers
function divide(uint256 a, uint256 b) internal pure returns(uint256) {
    require(b != 0, "Division by zero not allowed");
    return a / b;
}

//Main contract
contract Calculator {
    //Variables
    uint256 public result;

    //Events
    event Add(uint256 a, uint256 b, uint256 result);
    event Subtract(uint256 a, uint256 b, uint256 result);
    event Multiply(uint256 a, uint256 b, uint256 result);
    event Divide(uint256 a, uint256 b, uint256 result);

    //Constructor
    constructor() public {
        result = 0;
    }

    //Function to add two numbers and update result
    function addAndStore(uint256 a, uint256 b) public {
        result = add(a, b);
        emit Add(a, b, result);
    }

    //Function to subtract two numbers and update result
    function subtractAndStore(uint256 a, uint256 b) public {
        result = subtract(a, b);
        emit Subtract(a, b, result);
    }

    //Function to multiply two numbers and update result
    function multiplyAndStore(uint256 a, uint256 b) public {
        result = multiply(a, b);
        emit Multiply(a, b, result);
    }

    //Function to divide two numbers and update result
    function divideAndStore(uint256 a, uint256 b) public {
        result = divide(a, b);
        emit Divide(a, b, result);
    }
}
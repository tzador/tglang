pragma solidity ^0.8.0; // Solidity version

// Contract definition
contract ExampleContract {
    
    // State variables
    address public owner; // Public address variable
    uint public totalSupply; // Public unsigned integer variable
    
    // Events
    event NewToken(address indexed _from, uint _value); // Event to be emitted when new tokens are minted
    
    // Constructor function
    constructor() public {
        owner = msg.sender; // Assign contract deployer as owner
    }
    
    // Mint new tokens
    function mint(uint _amount) public {
        require(msg.sender == owner, "Only owner can mint new tokens");
        
        totalSupply += _amount; // Increase total supply
        emit NewToken(msg.sender, _amount); // Emit event
    }
    
    // Transfer tokens
    function transfer(address _to, uint _amount) public returns (bool) {
        require(_amount <= totalSupply, "Insufficient balance");
        
        totalSupply -= _amount; // Decrease total supply
        return true;
    }
}
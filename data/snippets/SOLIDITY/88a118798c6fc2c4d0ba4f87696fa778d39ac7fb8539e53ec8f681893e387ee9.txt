pragma solidity ^0.8.0; // version of Solidity used
contract MyContract { // defining a contract
    uint private myNumber = 5; // private variable
    address public owner; // public variable
    mapping(address => uint) private balances; // private mapping
    event MyEvent(uint indexed _myIndex, address indexed _myAddress); // indexed event
    modifier onlyOwner { // modifier that restricts access to only owner
        require(msg.sender == owner);
        _;
    }
    constructor() { // constructor function
        owner = msg.sender; // assigning owner
    }
    function setNumber(uint _newNumber) public onlyOwner { // function to set new number
        myNumber = _newNumber;
        emit MyEvent(myNumber, msg.sender); // emitting event
    }
    function getNumber(address _user) public view returns(uint) { // function to get number
        return balances[_user];
    }
}
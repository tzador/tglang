contract Token {
    //Declare variables
    string public name; //Name of the token
    string public symbol; //Symbol of the token
    uint8 public decimals; //Decimal places for token values
    uint256 public totalSupply; //Total supply of tokens
    address public owner; //Owner of the contract
    mapping (address => uint256) public balanceOf; //Mapping for balance of each token holder
    mapping (address => mapping (address => uint256)) public allowance; //Allowance mapping for token transfers
    
    //Events for token transfer and approval
    event Transfer(address indexed from, address indexed to,uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);
    
    //Constructor function to initialize token variables
    constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _initialSupply) public {
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        totalSupply = _initialSupply;
        owner = msg.sender;
        balanceOf[msg.sender] = _initialSupply;
    }
    
    //Function to transfer tokens from one address to another
    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[msg.sender] >= _value);
        
        //Subtract tokens from sender's balance
        balanceOf[msg.sender] -= _value;
        //Add tokens to recipient's balance
        balanceOf[_to] += _value;
        
        //Emit transfer event
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
    
    //Function to approve another address to spend tokens on behalf of the caller
    function approve(address _spender, uint256 _value) public returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        
        //Emit approval event
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
    
    //Function to transfer tokens from one address to another on behalf of the token owner
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[_from] >= _value);
        require(allowance[_from][msg.sender] >= _value);
        
        //Subtract tokens from sender's balance
        balanceOf[_from] -= _value;
        //Add tokens to recipient's balance
        balanceOf[_to] += _value;
        //Subtract tokens from allowed amount
        allowance[_from][msg.sender] -= _value;
        
        //Emit transfer event
        emit Transfer(_from, _to, _value);
        return true;
    }
}
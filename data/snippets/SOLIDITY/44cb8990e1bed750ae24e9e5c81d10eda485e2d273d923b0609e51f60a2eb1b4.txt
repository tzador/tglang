pragma solidity ^0.6.0;

contract MyContract {
    // state variables
    string public name;
    uint public age;
    
    // events
    event NameChanged(string _oldName, string _newName);
    event AgeChanged(uint _oldAge, uint _newAge);
    
    // constructor
    constructor(string memory _name, uint _age) public {
        name = _name;
        age = _age;
    }
    
    // functions
    function changeName(string memory _newName) public {
        // require statement to check if the new name is not blank
        require(bytes(_newName).length > 0, "Name cannot be blank!");
        
        // emit event with old and new name values
        emit NameChanged(name, _newName);
        
        // update the name variable
        name = _newName;
    }
    
    function changeAge(uint _newAge) public {
        // require statement to check if the new age is not 0
        require(_newAge > 0, "Age cannot be 0!");
        
        // emit event with old and new age values
        emit AgeChanged(age, _newAge);
        
        // update the age variable
        age = _newAge;
    }
}
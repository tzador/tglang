pragma solidity ^0.8.0;

contract Bank {
    address private owner;
    mapping(address => uint256) private balance;
    
    constructor() {
        owner = msg.sender;
    }
    
    modifier onlyOwner {
        if (msg.sender == owner) {
            _;
        } else {
            revert("Only the owner of this contract can perform this action.");
        }
    }
    
    function deposit() public payable returns (bool) {
        balance[msg.sender] += msg.value;
        return true;
    }
    
    function withdraw(uint256 amount) public onlyOwner returns (bool) {
        require(balance[msg.sender] >= amount, "Insufficient balance.");
        msg.sender.transfer(amount);
        balance[msg.sender] -= amount;
        return true;
    }
}
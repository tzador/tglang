contract MyContract{
    //State Variables
    uint256 public totalSupply;
    mapping(address => uint256) public balanceOf;
    
    //Events
    event Transfer(address indexed from, address indexed to, uint256 value);
    
    //Modifiers
    modifier validAddress(address address_){
        require(address_ != address(0));
        _;
    }
    
    //Constructor
    constructor(uint256 initialSupply) public{
        totalSupply = initialSupply;
        balanceOf[msg.sender] = initialSupply;
    }
    
    //Functions
    function transfer(address to, uint256 value) public validAddress(to) returns(bool success){
        require(balanceOf[msg.sender] >= value);
        balanceOf[msg.sender] -= value;
        balanceOf[to] += value;
        emit Transfer(msg.sender, to, value);
        return true;
    }
}
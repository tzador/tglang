/**
 * @title Example Contract
 * @dev This contract is an example of using the 
 *  Solidity programming language to create a basic smart contract.
 */
 
contract ExampleContract {
    // state variables
    uint public count; // stores the count of a particular event
    address public owner; // stores the address of the contract owner
    
    // events
    event CountIncreased(uint count); // logs the count when it is increased
    event OwnerSet(address owner); // logs the owner when it is set
    
    // modifiers
    modifier onlyOwner {
        require(msg.sender == owner, "Only the contract owner can call this function."); // ensures that only the contract owner can call the function
        _;
    }
    
    // constructor
    constructor() public {
        owner = msg.sender; // sets the contract owner to the address of the person who deployed the contract
    }
    
    // functions
    function increaseCount() public onlyOwner {
        count++; // increases the count by 1
        emit CountIncreased(count); // emits the CountIncreased event
    }
    
    function setOwner(address newOwner) public onlyOwner {
        owner = newOwner; // changes the contract owner to the newOwner address
        emit OwnerSet(owner); // emits the OwnerSet event
    }
}
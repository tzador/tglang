// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

/// @title A smart contract that implements a simple bank
contract Bank {

    /// @dev A mapping of addresses to balances
    mapping(address => uint) public balances;

    /// @dev An event to log deposits
    event Deposit(address indexed account, uint amount);

    /// @dev An event to log withdrawals
    event Withdrawal(address indexed account, uint amount);

    /// @dev A function to deposit funds into the bank
    /// @param _amount The amount to be deposited
    function deposit(uint _amount) public {
        require(_amount > 0, "Amount must be greater than 0");
        balances[msg.sender] += _amount;
        emit Deposit(msg.sender, _amount);
    }

    /// @dev A function to withdraw funds from the bank
    /// @param _amount The amount to be withdrawn
    function withdraw(uint _amount) public {
        require(balances[msg.sender] >= _amount, "Insufficient balance");
        balances[msg.sender] -= _amount;
        emit Withdrawal(msg.sender, _amount);
    }
}
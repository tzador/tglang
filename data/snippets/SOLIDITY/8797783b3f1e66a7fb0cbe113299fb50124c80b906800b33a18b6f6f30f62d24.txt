pragma solidity ^0.5.0;

contract Token {
    
    uint totalSupply; //Total supply of tokens
    address owner; //Address of the contract owner
    mapping(address => uint) balances; //Mapping of addresses to token balances
    
    //Constructor function that sets the total supply and assigns it to the owner
    constructor(uint _totalSupply) public {
        totalSupply = _totalSupply;
        owner = msg.sender;
        balances[msg.sender] = totalSupply;
    }
    
    //Function to transfer tokens from one address to another
    function transfer(address _to, uint _value) public {
        require(balances[msg.sender] >= _value); //Checks if the sender has enough tokens
        require(balances[_to] + _value >= balances[_to]); //Checks for integer overflow
        balances[msg.sender] -= _value; //Subtracts the tokens from sender's balance
        balances[_to] += _value; //Adds the tokens to recipient's balance
    }
    
    //Function to get the balance of a specific address
    function getBalance(address _address) public view returns (uint balance) {
        return balances[_address];
    }
    
    //Function to mint new tokens, can only be called by the owner
    function mint(uint _amount) public {
        require(msg.sender == owner); //Checks if the caller is the owner
        require(totalSupply + _amount >= totalSupply); //Checks for integer overflow
        totalSupply += _amount; //Adds the new tokens to the total supply
        balances[owner] += _amount; //Adds the minted tokens to the owner's balance
    }
    
    //Function to burn tokens, can only be called by the owner
    function burn(uint _amount) public {
        require(msg.sender == owner); //Checks if the caller is the owner
        require(totalSupply - _amount >= 0); //Checks if total supply will not go below 0
        require(balances[owner] - _amount >= 0); //Checks if owner has enough tokens to burn
        totalSupply -= _amount; //Subtracts the burned tokens from the total supply
        balances[owner] -= _amount; //Subtracts the burned tokens from the owner's balance
    }
}
// Defining a contract
contract ExampleContract {
    // Declaring state variables
    uint256 public count;
    uint256 private maxCount;
    
    // Defining events
    event CountIncreased(uint256 count);
    event CountReset(uint256 count);
    
    // Defining constructor
    constructor(uint256 _maxCount) public {
        count = 0;
        maxCount = _maxCount;
    }
    
    // Defining view functions
    function getCount() public view returns (uint256) {
        return count;
    }
    
    // Defining pure functions
    function addCount(uint256 _num) public pure returns (uint256) {
        return _num + 1;
    }
    
    // Defining payable functions
    function increaseCount(uint256 _amount) public payable {
        require( msg.value >= _amount);
        
        count += _amount;
        
        emit CountIncreased(count);
    }
    
    // Defining fallback function
    function() external payable {
        count = 0;
        emit CountReset(count);
    }
    
    // Defining modifiers
    modifier checkCount(uint256 _amount) {
        require(count + _amount <= maxCount, "Count cannot exceed maxCount.");
        _;
    }
    
    // Defining function with modifiers
    function decreaseCount(uint256 _amount) public payable checkCount(_amount) {
        count -= _amount;
    }
    
    // Defining struct
    struct Person {
        string name;
        uint256 age;
    }
    
    // Defining arrays
    Person[] public people;
    
    // Defining mapping
    mapping(uint256 => address) public addresses;
    
    // Defining enums
    enum Day {Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday}
    
    // Defining mapping with enum as key
    mapping(Day => string) public activities;
    
    // Defining function to add person to array
    function addPerson(string memory _name, uint256 _age) public {
        people.push(Person(_name, _age));
    }
    
    // Defining function to add activity using enum
    function addActivity(Day _day, string memory _activity) public {
        activities[_day] = _activity;
    }
}
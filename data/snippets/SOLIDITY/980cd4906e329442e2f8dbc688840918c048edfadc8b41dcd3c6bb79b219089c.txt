pragma solidity >=0.7.0 <0.9.0;

// A contract to manage a simple bank account
contract BankAccount {
    // Variables to store the owner and balance of the account
    address public owner;
    uint public balance;

    constructor() payable {
        // Initialize the owner and balance upon contract creation
        owner = msg.sender;
        balance = msg.value;
    }

    // Function to deposit funds into the account
    // Only the owner of the account can deposit funds
    function deposit() public payable {
        require(msg.sender == owner, "Only the owner can deposit funds.");
        balance += msg.value;
    }

    // Function to withdraw funds from the account
    // Only the owner of the account can withdraw funds
    // The amount to withdraw must be less than or equal to the account balance
    function withdraw(uint amount) public {
        require(msg.sender == owner, "Only the owner can withdraw funds.");
        require(amount <= balance, "Insufficient funds.");
        balance -= amount;
    }

    // Function to transfer funds from the account to another address
    // Only the owner of the account can transfer funds
    // The amount to transfer must be less than or equal to the account balance
    function transfer(address recipient, uint amount) public {
        require(msg.sender == owner, "Only the owner can transfer funds.");
        require(amount <= balance, "Insufficient funds.");
        balance -= amount;
        // Send the transfer amount to the specified recipient
        recipient.transfer(amount);
    }
}
pragma solidity >= 0.5.0 < 0.7.0;

// Contract to manage and store information about countries
contract CountryManagement {
    
    // Struct to hold country information
    struct Country {
        uint256 population; // Population of the country
        string capital; // Capital city of the country
        string currency; // Currency used in the country
    }
    
    // Mapping to store country information
    mapping (string => Country) private countries;
    
    // Modifier to restrict access to certain functions
    modifier onlyOwner {
        require(msg.sender == owner); // Only the contract owner can access this function
        _; // Continue execution
    }
    
    // Public variable to store owner address
    address public owner;
    
    // Events to be emitted when certain functions are called
    event CountryAdded(string _name);
    event CountryPopulationUpdated(string _name, uint256 _population);
    
    // Constructor function to set owner address
    constructor() public {
        owner = msg.sender;
    }
    
    // Function to add a new country
    function addCountry(string _name, uint256 _population, string _capital, string _currency) public onlyOwner {
        // Check if country already exists
        require(countries[_name].population == 0);
        
        // Create new country using input parameters
        Country memory newCountry = Country(_population, _capital, _currency);
        
        // Add country to mapping
        countries[_name] = newCountry;
        
        // Emit event
        emit CountryAdded(_name);
    }
    
    // Function to update a country's population
    function updateCountryPopulation(string _name, uint256 _newPopulation) public onlyOwner {
        // Check if country exists
        require(countries[_name].population > 0);
        
        // Update population
        countries[_name].population = _newPopulation;
        
        // Emit event
        emit CountryPopulationUpdated(_name, _newPopulation);
    }
    
    // Function to retrieve a country's information
    function getCountry(string _name) public view returns (uint256, string, string) {
        // Check if country exists
        require(countries[_name].population > 0);
        
        // Return country information
        return (countries[_name].population, countries[_name].capital, countries[_name].currency);
    }
    
    // Function to retrieve owner address
    function getOwner() public view returns (address) {
        return owner;
    }
}
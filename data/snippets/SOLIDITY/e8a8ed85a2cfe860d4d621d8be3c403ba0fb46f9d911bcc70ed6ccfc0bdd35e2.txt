pragma solidity ^0.8.0;

// SPDX-License-Identifier: MIT

contract MyContract {

    // Variables
    uint public num;
    string public message;
    address payable public owner;
    uint private constant MAX_NUM = 100;

    // Events
    event NumberUpdated(uint newNum, address sender);
    event MessageChanged(string newMessage);

    // Modifiers
    modifier onlyOwner() {
        require(msg.sender == owner, "Only contract owner can call this function.");
        _;
    }

    // Constructor
    constructor() {
        owner = payable(msg.sender);
    }

    // Functions
    function setNumber(uint _newNum) public onlyOwner {
        require(_newNum <= MAX_NUM, "Number cannot be greater than 100.");
        num = _newNum;
        emit NumberUpdated(_newNum, msg.sender);
    }

    function setMessage(string memory _newMessage) public onlyOwner {
        message = _newMessage;
        emit MessageChanged(_newMessage);
    }
}
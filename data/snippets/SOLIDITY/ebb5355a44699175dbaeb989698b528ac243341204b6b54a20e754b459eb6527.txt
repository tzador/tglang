pragma solidity ^0.6.0; // specifies the compiler version

contract MyContract { // contract declaration

    // state variables
    uint public myNumber; // unsigned integer variable with public visibility
    address private owner; // address variable with private visibility

    // constructor
    constructor() public {
        owner = msg.sender; // set owner variable to the address of the contract creator
    }

    // modifiers
    modifier onlyOwner {
        require(msg.sender == owner, "You are not the contract owner."); // checks if the caller is the contract owner
        _; // continue execution if the caller is the contract owner
    }

    // functions
    function setNumber(uint _num) public onlyOwner {
        myNumber = _num; // set the value of myNumber to the input parameter _num
    }

    function getNumber() public view returns (uint) {
        return myNumber; // return the value of myNumber
    }

    function changeOwner(address _newOwner) public onlyOwner {
        owner = _newOwner; // change the owner to the input parameter _newOwner
    }
}
/**
 * Title: Simple Bank
 * Description: A basic bank contract that allows users to deposit and withdraw funds.
 * Author: John Smith
 * Date: 10/20/2021
 */

// Solidity version
pragma solidity ^0.8.0;

// Contract declaration
contract SimpleBank {

    // State variables
    mapping (address => uint) balances;
    address public owner;
    uint public totalBalance;
    uint public totalDeposits;

    // Constructor function
    constructor() {
        owner = msg.sender; // Set owner of contract to deployer
    }

    // Function to deposit funds
    function deposit() public payable {
        require(msg.value > 0, "Amount must be greater than 0."); // Check for valid deposit amount
        balances[msg.sender] += msg.value; // Update user's balance
        totalBalance += msg.value; // Update total balance of contract
        totalDeposits++; // Update total number of deposits
    }

    // Function to withdraw funds
    function withdraw(uint amount) public {
        require(amount > 0, "Amount must be greater than 0."); // Check for valid withdrawal amount
        require(amount <= balances[msg.sender], "Insufficient balance."); // Check if user has enough balance
        balances[msg.sender] -= amount; // Update user's balance
        totalBalance -= amount; // Update total balance of contract
        msg.sender.transfer(amount); // Send funds to user's account
    }

    // Function to check user's balance
    function getBalance() public view returns (uint) {
        return balances[msg.sender]; // Return user's balance
    }
}
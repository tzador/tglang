pragma solidity ^0.8.4;

// This contract implements a simple bank account system

contract Bank {
    // State variables
    mapping(address => uint) balances;
    address owner;
    
    // Events
    event Deposit(address account, uint amount);
    event Withdrawal(address account, uint amount);
    event Transfer(address sender, address recipient, uint amount);
    
    // Constructor
    constructor() {
        // Set the owner of the contract to the deployer
        owner = msg.sender; 
    }
    
    // Function modifiers
    modifier onlyOwner {
        require(msg.sender == owner, "Only the owner of the contract can call this function");
        _;
    }
    
    // Functions
    function deposit() public payable {
        // Add the amount deposited to the sender's balance
        balances[msg.sender] += msg.value;
        // Emit an event
        emit Deposit(msg.sender, msg.value);
    }
    
    function withdraw(uint amount) public {
        // Check that the amount to withdraw is less than or equal to the sender's balance
        require(amount <= balances[msg.sender], "Insufficient balance");
        // Subtract the amount from the sender's balance
        balances[msg.sender] -= amount;
        // Transfer the amount to the sender's address
        msg.sender.transfer(amount);
        // Emit an event
        emit Withdrawal(msg.sender, amount);
    }
    
    function transfer(address recipient, uint amount) public {
        // Check that the amount to transfer is less than or equal to the sender's balance
        require(amount <= balances[msg.sender], "Insufficient balance");
        // Subtract the amount from the sender's balance
        balances[msg.sender] -= amount;
        // Add the amount to the recipient's balance
        balances[recipient] += amount;
        // Emit an event
        emit Transfer(msg.sender, recipient, amount);
    }
    
    function getBalance(address account) public view returns (uint) {
        // Return the balance of the specified account
        return balances[account];
    }
    
    function setOwner(address newOwner) public onlyOwner {
        // Change the owner of the contract to the specified address
        owner = newOwner;
    }
    
    function destroy() public onlyOwner {
        // Transfer any remaining balance to the owner
        selfdestruct(payable(owner));
    }
}
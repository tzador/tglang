// Contract to represent a student's report card
contract ReportCard{
 
    // Struct to store the report card details of a student
    struct StudentReport{
        uint englishMarks;
        uint mathsMarks;
        uint scienceMarks;
    }
 
    // Mapping to store the report card for each student's address
    mapping(address => StudentReport) public reportCard;
 
    // Function to add or update a student's report card
    function addReport(address _studentAddress, uint _englishMarks, uint _mathsMarks, uint _scienceMarks){
        require(_englishMarks > 0 && _mathsMarks > 0 && _scienceMarks > 0); // Validation to ensure marks are not 0 or negative
        reportCard[_studentAddress] = StudentReport(_englishMarks, _mathsMarks, _scienceMarks);
    }
 
    // Function to calculate average marks of a student
    function calculateAverageMarks(address _studentAddress) public view returns (uint){
        require(reportCard[_studentAddress].englishMarks > 0 && reportCard[_studentAddress].mathsMarks > 0 && reportCard[_studentAddress].scienceMarks > 0); // Validation to ensure report card exists
        uint totalMarks = reportCard[_studentAddress].englishMarks + reportCard[_studentAddress].mathsMarks + reportCard[_studentAddress].scienceMarks;
        return totalMarks / 3;
    }
 
    // Function to check if a student has passed (average marks > 35)
    function checkPassStatus(address _studentAddress) public view returns (bool){
        uint averageMarks = calculateAverageMarks(_studentAddress);
        if(averageMarks > 35){
            return true; // Return true if student has passed
        }
        else{
            return false; // Return false if student has failed
        }
    }
 
    // Function to check if a student has scored higher than a certain percentage (input parameter)
    function checkPercentage(address _studentAddress, uint _percentage) public view returns (bool){
        uint averageMarks = calculateAverageMarks(_studentAddress);
        uint calculatedPercentage = (averageMarks * 100) / 100;
        if(calculatedPercentage > _percentage){
            return true; // Return true if student has scored higher than input percentage
        }
        else{
            return false; // Return false if student has scored equal to or lower than input percentage
        }
    }
}
// Define a contract with modifiers and events

contract ModifierEvents {
  // Variable to store owner address
  address public owner;

  // Define an event for when the owner changes
  event OwnerChanged(address indexed previousOwner, address indexed newOwner);

  // Define a constructor to set owner to contract creator
  constructor() public {
    owner = msg.sender;
  }

  // Define a modifier to restrict function to only be called by the owner
  modifier onlyOwner() {
    require(msg.sender == owner, "Only the owner can call this function");
    _;
  }

  // Define a function that can only be called by the owner
  function changeOwner(address newOwner) public onlyOwner {
    address previousOwner = owner;
    owner = newOwner;
    emit OwnerChanged(previousOwner, newOwner);
  }
}
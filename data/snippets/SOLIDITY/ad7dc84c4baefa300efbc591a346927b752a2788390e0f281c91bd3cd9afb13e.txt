/// @title ERC20 Standard Token Interface
/// @dev This represents the standard interface for ERC20 tokens.
interface ERC20Interface {
	/// @dev Total number of tokens in existence.
	function totalSupply() external view returns (uint256);

	/// @dev Gets the balance of the specified address.
	/// @param _owner The address to query the balance of.
	/// @return An uint256 representing the amount owned by the passed address.
	function balanceOf(address _owner) external view returns (uint256 balance);

	/// @dev Transfers token from the caller's address to another address.
	/// @param _to The address to transfer to.
	/// @param _value The amount to be transferred.
	/// @return True if the transfer is successful, false otherwise.
	function transfer(address _to, uint256 _value) external returns (bool success);

	/// @dev Transfers tokens from one address to another using the
	/// allowance mechanism. Tokens can only be transferred by the approved
	/// allowance amount of the spender.
	/// @param _from The address to transfer from.
	/// @param _to The address to transfer to.
	/// @param _value The amount to be transferred.
	/// @return True if the transfer is successful, false otherwise.
	function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);

	/// @dev Allows _spender to withdraw from and spend the specified
	/// _amount of owned tokens on behalf of _owner.
	/// @param _spender The address authorized to spend.
	/// @param _value The amount of tokens that can be spent.
	/// @return True if the approval is successful, false otherwise.
	function approve(address _spender, uint256 _value) external returns (bool success);

	/// @dev Queries the remaining allowance of _spender on behalf of _owner.
	/// @param _owner The address of the token holder.
	/// @param _spender The address of the spender.
	/// @return The amount of remaining allowance.
	function allowance(address _owner, address _spender) external view returns (uint256 remaining);

	/// @dev Emitted when tokens are transferred.
	/// @param _from The address where the tokens are transferred from.
	/// @param _to The address where the tokens are transferred to.
	/// @param _value The amount of tokens transferred.
	event Transfer(address indexed _from, address indexed _to, uint256 _value);

	/// @dev Emitted when the approved allowance of a spender is changed.
	/// @param _owner The address of the token holder.
	/// @param _spender The address of the spender.
	/// @param _value The new approved allowance.
	event Approval(address indexed _owner, address indexed _spender, uint256 _value);
}
contract Person {
    // State variables
    string public name;
    uint public age;
    address public owner;
    mapping(address => uint) public balances;

    // Events
    event PersonCreated(string name, uint age);
    event PersonUpdated(string name, uint age);

    // Constructor
    constructor(string _name, uint _age) public {
        name = _name;
        age = _age;
        owner = msg.sender; // Set the owner of the contract as the one deploying it
        balances[msg.sender] = 100; // Set initial balance of 100 tokens for the owner
    }

    // Functions
    function updatePerson(string _name, uint _age) public {
        require(msg.sender == owner, "Only the owner can update the person's information");
        name = _name;
        age = _age;
        emit PersonUpdated(name, age); // Emit an event to indicate that the person has been updated
    }

    function transferTokens(address _receiver, uint _amount) public {
        require(balances[msg.sender] >= _amount, "Insufficient balance");
        balances[msg.sender] -= _amount;
        balances[_receiver] += _amount;
    }
}
// Define the contract 'Automated Insurance Policy'
contract InsurancePolicy {
    
    // Declare state variables
    address owner;
    uint premiumAmount;
    uint claimAmount;
    bool isActive;
    uint policyStartDate;
    uint policyEndDate;
    uint totalClaims;
    
    // Constructor function that sets initial values
    constructor(address _owner, uint _premiumAmount, uint _claimAmount, uint _policyStartDate, uint _policyEndDate) public {
        owner = _owner;
        premiumAmount = _premiumAmount;
        claimAmount = _claimAmount;
        isActive = true;
        policyStartDate = _policyStartDate;
        policyEndDate = _policyEndDate;
        totalClaims = 0;
    }
    
    // Modifier that restricts access to the owner only
    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can access this function");
        _;
    }
    
    // Function to calculate the policy duration
    function calculatePolicyDuration() public view returns (uint) {
        return policyEndDate - policyStartDate;
    }
    
    // Function to activate the policy
    function activatePolicy() public onlyOwner {
        isActive = true;
    }
    
    // Function to deactivate the policy
    function deactivatePolicy() public onlyOwner {
        isActive = false;
    }
    
    // Function to submit a claim
    function submitClaim() public onlyOwner {
        require(isActive == true, "The policy is currently not active");
        totalClaims++;
        msg.sender.transfer(claimAmount);
    }
    
    // Function to change the premium amount
    function changePremiumAmount(uint _newPremiumAmount) public onlyOwner {
        require(_newPremiumAmount > 0, "Premium amount must be greater than 0");
        premiumAmount = _newPremiumAmount;
    }
    
    // Function to change the claim amount
    function changeClaimAmount(uint _newClaimAmount) public onlyOwner {
        require(_newClaimAmount > 0, "Claim amount must be greater than 0");
        claimAmount = _newClaimAmount;
    }
    
    // Function to extend the policy duration
    function extendPolicy(uint _newEndDate) public onlyOwner {
        require(_newEndDate > block.timestamp, "New end date must be in the future");
        policyEndDate = _newEndDate;
    }
    
    // Function to view the current policy status
    function viewPolicyStatus() public view returns (bool) {
        return isActive;
    }
    
    // Function to view the current total claims
    function viewTotalClaims() public view returns (uint) {
        return totalClaims;
    }
}
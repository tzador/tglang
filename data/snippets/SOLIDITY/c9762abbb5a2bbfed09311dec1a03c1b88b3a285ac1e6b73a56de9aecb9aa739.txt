contract User {
    // define private variables
    string private name;
    uint private age;
    address private wallet;
    bool private isAdmin;
    
    // event for tracking changes in isAdmin state
    event IsAdminChanged(bool isAdmin);
    
    // constructor function
    constructor(string _name, uint _age, address _wallet) public {
        name = _name;
        age = _age;
        wallet = _wallet;
        isAdmin = false;
    }
    
    // function to change isAdmin state
    function changeIsAdmin(bool _isAdmin) public {
        // only contract owner is allowed to change isAdmin state
        require(msg.sender == wallet);
        // update isAdmin value
        isAdmin = _isAdmin;
        // emit IsAdminChanged event
        emit IsAdminChanged(_isAdmin);
    }
    
    // getters for private variables
    function getName() public view returns (string) {
        return name;
    }
    
    function getAge() public view returns (uint) {
        return age;
    }
    
    function getWallet() public view returns (address) {
        return wallet;
    }
    
    function getIsAdmin() public view returns (bool) {
        return isAdmin;
    }
    
}
pragma solidity ^0.8.0; //specifies the version of Solidity

//declaring the contract
contract ExampleContract {
    
    //state variables
    uint public stateVariable = 100;
    address private owner = msg.sender;
    
    //events
    event NewStateVariable(uint newVariable);
    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    
    //modifier to restrict access
    modifier onlyOwner() {
        require(msg.sender == owner, "Only owner can access this function.");
        _; //executes the rest of the code
    }
    
    //functions
    //function to change the value of state variable
    function changeVariable(uint newValue) public onlyOwner {
        emit NewStateVariable(newValue);
        stateVariable = newValue;
    }
    
    //function to transfer ownership
    function transferOwnership(address newOwner) public onlyOwner {
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
    
}
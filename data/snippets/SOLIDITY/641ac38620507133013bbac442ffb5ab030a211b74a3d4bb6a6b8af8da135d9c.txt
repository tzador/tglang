// Example contract to demonstrate inheritance and modifiers
pragma solidity ^0.6.0;

// Parent contract with a modifier and a variable
contract Parent {
    uint public num;
    
    modifier onlyOwner {
        require(msg.sender == owner, "Only the contract owner can call this function");
        _;
    }
}

// Child contract inheriting from Parent
contract Child is Parent {
    // State variable visible only to Child contract
    string private name;
    
    // Function to set name, only accessible by parent contract's modifier
    function setName(string memory _name) external onlyOwner {
        name = _name;
    }
    
    // Function to set num, accessible by anyone
    function setNum(uint _num) external {
        num = _num;
    }
}
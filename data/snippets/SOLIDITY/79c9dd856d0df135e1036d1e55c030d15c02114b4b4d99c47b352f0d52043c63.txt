pragma solidity ^0.8.0; // Solidity version requirement
// Contract definition
contract MyContract {
    // State variables
    uint public variable1;
    string private variable2;
    
    // Constructor function
    constructor() {
        variable1 = 5;
        variable2 = "Hello World";
    }
    
    // Modifier to restrict access to certain functions
    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can call this function");
        _;
    }
    
    // Function to update variable1
    function updateVariable1(uint newValue) public onlyOwner {
        require(newValue > 0, "New value must be greater than 0");
        variable1 = newValue;
    }
    
    // Function to update variable2
    function updateVariable2(string memory newString) public onlyOwner {
        variable2 = newString;
    }
    
    // Function to calculate the sum of two numbers
    function sum(uint num1, uint num2) public pure returns (uint) {
        return num1 + num2;
    }
    
    // Event to log when a variable is updated
    event UpdatedVariable(string _variable, uint _newValue);
}
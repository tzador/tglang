/**
 * @title MathOperations
 * @dev Contract for performing mathematical operations
 */
contract MathOperations {

    /**
     * @dev Function to calculate the square of a number
     * @param _num The number to be squared
     * @return The square of the number
     */
    function square(uint _num) public pure returns (uint) {
        return _num * _num;
    }

     /**
     * @dev Function to calculate the cube of a number
     * @param _num The number to be cubed
     * @return The cube of the number
     */
    function cube(uint _num) public pure returns (uint) {
        return _num * _num * _num;
    }

    /**
     * @dev Function to find the factorial of a number
     * @param _num The number to find the factorial of
     * @return The factorial of the number
     */
    function factorial(uint _num) public pure returns (uint) {
        uint result = 1;

        for (uint i = 1; i <= _num; i++) {
            result *= i;
        }

        return result;
    }

    /**
     * @dev Function to find the greatest common divisor of two numbers
     * @param _num1 The first number
     * @param _num2 The second number
     * @return The greatest common divisor of the two numbers
     */
    function gcd(uint _num1, uint _num2) public pure returns (uint) {
        uint temp;

        while(_num2 > 0) {
            temp = _num2;
            _num2 = _num1 % _num2;
            _num1 = temp;
        }

        return _num1;
    }

    /**
     * @dev Function to find the least common multiple of two numbers
     * @param _num1 The first number
     * @param _num2 The second number
     * @return The least common multiple of the two numbers
     */
    function lcm(uint _num1, uint _num2) public pure returns (uint) {
        return (_num1 * _num2) / gcd(_num1, _num2);
    }
}
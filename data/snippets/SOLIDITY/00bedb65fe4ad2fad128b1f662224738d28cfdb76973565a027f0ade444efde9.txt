=
pragma solidity ^0.8.4;

contract MyContract {
	// Declare state variables
	address private owner;
	uint256 private count;

	// Events
	event LogAddition(address indexed sender, uint256 value);

	// Constructor
	constructor() {
		owner = msg.sender;
		count = 0;
	}

	// Function to add 'value' to 'count'
	function add(uint256 value) public {
		count += value;

		// Emit event
		emit LogAddition(msg.sender, value);
	}

	// Function to subtract 'value' from 'count'
	function subtract(uint256 value) public {
		count -= value;

		// Emit event
		emit LogAddition(msg.sender, -value);
	}

	// Function to get the current value of 'count'
	// Only the owner can call this function
	function getCount() public view returns (uint256) {
		require(msg.sender == owner, "Caller is not the owner");

		return count;
	}

	// Function to change the owner
	// Only the current owner can call this function
	function changeOwner(address newOwner) public {
		require(msg.sender == owner, "Caller is not the owner");

		owner = newOwner;
	}
}
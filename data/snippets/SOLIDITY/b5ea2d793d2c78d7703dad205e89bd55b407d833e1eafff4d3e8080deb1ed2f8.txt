pragma solidity ^0.8.0;                                                 // Solidity version specifier

contract ERC20Token{                                                     // Contract definition
    string public name;                                                  // String type state variable
    string public symbol;
    uint8 public decimals;
    uint256 public totalSupply;

    mapping (address => uint256) public balanceOf;                        // Mapping state variable

    event Transfer(address indexed from, address indexed to, uint256 value);    // Event definition

    constructor(                                                         // Constructor function
        uint256 _initialSupply, 
        string memory _tokenName, 
        string memory _tokenSymbol, 
        uint8 _decimalUnits) public {                                    // Function visibility specifier
        totalSupply = _initialSupply;
        balanceOf[msg.sender] = totalSupply;                             // Assigning initial token balance to contract creator
        name = _tokenName;
        symbol = _tokenSymbol;
        decimals = _decimalUnits;
    }

    function transfer(address _to, uint256 _value) public {              // Transfer function
        require(balanceOf[msg.sender] >= _value);                        // Check if sender has enough tokens
        require(balanceOf[_to] + _value >= balanceOf[_to]);              // Check for overflow
        balanceOf[msg.sender] -= _value;                                 // Subtract tokens from sender
        balanceOf[_to] += _value;                                        // Add tokens to recipient
        emit Transfer(msg.sender, _to, _value);                          // Emit Transfer event
    }
}
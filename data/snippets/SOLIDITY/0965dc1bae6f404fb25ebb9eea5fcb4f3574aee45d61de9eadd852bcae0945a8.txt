// This is a smart contract written in Solidity
contract Example {
    uint public value;
    address public owner;

    // This event will be emitted when the value is changed
    event ValueChanged(uint newValue);

    // The constructor function, which sets the owner of the contract
    constructor() public {
        owner = msg.sender;
    }

    // A function to update the value
    function updateValue(uint newValue) public {
        // Only the owner can update the value
        require(msg.sender == owner, "Only the owner can update the value");
        
        value = newValue;

        // Emit the ValueChanged event
        emit ValueChanged(value);
    }

    // A function to retrieve the value
    function getValue() public view returns (uint) {
        return value;
    }
}
/// @title A simple contract that demonstrates the use of inheritance in Solidity
/// @dev This contract acts as a base contract which can be inherited by other contracts

// Defines a contract named Animal
contract Animal {
    
    // Defines a state variable 'kind'
    string public kind;
    
    // Defines an event named 'AnimalCreated'
    event AnimalCreated();
    
    /// @dev Constructor function that sets the value of 'kind' to "Animal"
    constructor() public {
        kind = "Animal";
    }
    
    /// @dev A function that emits the 'AnimalCreated' event
    function createAnimal() internal {
        emit AnimalCreated();
    }
}

// Defines a contract named Dog that inherits from the 'Animal' contract
contract Dog is Animal {
    
    // Defines a state variable 'breed'
    string public breed;
    
    // Defines an event named 'DogCreated'
    event DogCreated();
    
    /// @dev Constructor function that sets the value of 'breed' to "Labrador"
    constructor() public {
        breed = "Labrador";
    }
    
    /// @dev A function that calls the 'createAnimal' function from the base contract
    function createDog() public {
        createAnimal();
        
        // Emits the 'DogCreated' event
        emit DogCreated();
    }
}
pragma solidity ^0.8.0;
// Declare the contract
contract MyContract {
    // Declare an array variable
    uint[] public myArray;
    // Declare a mapping variable
    mapping(uint => string) public myMapping;
    // Define a constructor function
    constructor() {
        // Add values to the array
        myArray.push(1);
        myArray.push(2);
        myArray.push(3);
        myArray.push(4);
        myArray.push(5);
        // Add values to the mapping
        myMapping[1] = "Hello";
        myMapping[2] = "World";
        myMapping[3] = "!";
    }
    // Define a function to add values to the array
    function addToArray(uint _value) public {
        // Add the value to the array
        myArray.push(_value);
    }
    // Define a function to update the mapping
    function updateMapping(uint _key, string memory _value) public {
        // Update the mapping with the given key and value
        myMapping[_key] = _value;
    }
    // Define a function to get the value at a specific index in the array
    function getValueAtIndex(uint _index) public view returns (uint) {
        // Return the value at the given index in the array
        return myArray[_index];
    }
    // Define a function to get the value for a specific key in the mapping
    function getValueForKey(uint _key) public view returns (string memory) {
        // Return the value for the given key in the mapping
        return myMapping[_key];
    }
}
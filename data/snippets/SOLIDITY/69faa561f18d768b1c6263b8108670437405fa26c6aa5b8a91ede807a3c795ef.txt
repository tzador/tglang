pragma solidity ^0.5.0;    //sets the solidity version to be used

contract Example {          //creates a contract named Example
    address owner;          //declares a variable to store the contract owner's address
    uint public contractBalance;     //declares a public variable to store the contract's balance

    constructor() public {   //constructor function, runs when contract is created
      owner = msg.sender;    //sets the contract owner to be the address that deployed the contract
    }

    function deposit() public payable {    //function to deposit Ether to the contract
        require(msg.value > 0, "Amount sent must be greater than 0");    //checks if the amount sent is greater than 0
        contractBalance += msg.value;     //adds the sent amount to the contract's balance
    }

    function withdraw(uint amount) public {    //function to withdraw Ether from the contract
        require(msg.sender == owner, "Only the contract owner can withdraw");    //checks if the caller is the contract owner
        require(amount <= contractBalance, "Insufficient contract balance");     //checks if the contract has enough balance to withdraw
        msg.sender.transfer(amount);    //sends the specified amount to the contract owner
        contractBalance -= amount;      //subtracts the withdrawn amount from the contract's balance
    }

    function getBalance() public view returns (uint) {    //function to get the contract's balance
        return contractBalance;    //returns the contract's balance
    }

    function destroy() public {    //function to destroy the contract and send remaining funds to the contract owner
        require(msg.sender == owner, "Only the contract owner can destroy");    //checks if the caller is the contract owner
        selfdestruct(msg.sender);    //destroys the contract and sends remaining funds to the contract owner
    }

    function() external payable {    //fallback function, allows the contract to receive Ether
        contractBalance += msg.value;    //adds the sent amount to the contract's balance
    }
}
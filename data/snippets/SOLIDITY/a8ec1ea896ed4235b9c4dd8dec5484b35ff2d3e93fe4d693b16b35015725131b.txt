/**
 * @title Example contract
 * @dev This contract is an example of Solidity code using various concepts and functions.
 */

contract ExampleContract {

    //State Variables
    uint public age;
    string public name;
    address public owner;

    //Events
    event AgeIncreased(uint newAge);

    /**
     * @dev This function sets the name of the person calling it and increases their age by 1.
     * @param _name The name of the person calling the function.
     * @return The person's age after the function has executed.
     */
    function setPersonName(string _name) public returns (uint) {
        name = _name;
        age = age + 1;

        //Emit event to indicate age increase
        emit AgeIncreased(age);

        //Return updated age
        return age;
    }

    /**
     * @dev This function allows the owner of the contract to transfer ownership to another address.
     * @param _newOwner The address of the new owner.
     */
    function transferOwnership(address _newOwner) public {
        //Check that the sender is the current owner
        require(msg.sender == owner);

        //Update owner
        owner = _newOwner;
    }

    /**
     * @dev This function is a fallback function that can receive Ether.
     */
    function() public payable {
        //Do something with received Ether
    }

    //Modifiers
    modifier onlyOwner() {
        //Check that the sender is the current owner
        require(msg.sender == owner);

        //Continue with execution
        _;
    }

    //Abi encodings
    function encodeName() public view returns (bytes) {
        //Encode name using abi
        return abi.encode(name);
    }
}
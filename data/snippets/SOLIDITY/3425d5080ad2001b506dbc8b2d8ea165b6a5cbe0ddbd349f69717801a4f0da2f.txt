// This contract represents a lottery game where multiple players can enter and a winner is randomly chosen
pragma solidity ^0.8.0;

// Defining the smart contract
contract LotteryGame {
    // Creating variables to store important data
    
    // Address of the owner of the contract
    address private owner;
    
    // List of all players
    address[] public players;
    
    // Number of players currently entered in the game
    uint public playerCount;
    
    // Modifiers to restrict access to certain functions
    modifier onlyOwner {
        require(msg.sender == owner, "You are not the owner of this contract.");
        _;
    }
    
    modifier onlyPlayers {
        require(msg.sender != owner, "Only players can call this function.");
        _;
    }
    
    // Event to notify when a player enters the game
    event PlayerEntered(address player);
    
    // Event to notify when a new winner is chosen
    event WinnerChosen(address winner);
    
    // Constructor function to set the owner of the contract
    constructor() {
        owner = msg.sender;
    }
    
    // Function for players to enter the game
    function enterGame() public onlyPlayers {
        // Add the player's address to the players list
        players.push(msg.sender);
        // Increase the player count
        playerCount++;
        // Emit the PlayerEntered event
        emit PlayerEntered(msg.sender);
    }
    
    // Function for the owner to choose a random winner
    function chooseWinner() public onlyOwner {
        // Generate a random number based on block.timestamp and the number of players
        uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, players.length)));
        // Choose a random player from the list based on the random number
        address chosenPlayer = players[randomNumber % players.length];
        // Emit the WinnerChosen event
        emit WinnerChosen(chosenPlayer);
    }
    
    // Function to retrieve the current number of players
    function getPlayerCount() public view returns (uint) {
        return playerCount;
    }
    
    // Function to retrieve the list of players
    function getPlayers() public view returns (address[] memory) {
        return players;
    }
}
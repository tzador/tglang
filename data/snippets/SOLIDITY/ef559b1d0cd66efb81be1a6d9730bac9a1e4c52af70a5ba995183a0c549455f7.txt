// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

//import OraclizeAPI library
import "github.com/oraclize/ethereum-api/oraclizeAPI.sol";

//declare SmartContract contract
contract SmartContract {

    //declare constructor with initial OraclizeAPI URL value
    constructor() {
        oraclize_setNetwork(networkID.testnet);
        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);
    }

    //declare variables for storing results from OraclizeAPI
    string public location;
    string public temperature;

    //declare function to get location and temperature data using OraclizeAPI
    function getData() public payable {
        //query API and store result in location variable
        location = oraclize_query("URL", "json(https://api.weatherbit.io/v2.0/current?city=London&country=UK&key=XXXXXXXXXXXXXXXXX).data[0].city_name");

        //query API and store result in temperature variable
        temperature = oraclize_query("URL", "json(https://api.weatherbit.io/v2.0/current?city=London&country=UK&key=XXXXXXXXXXXXXXXXX).data[0].temp");
    }

    //declare function to get humidity data using OraclizeAPI
    function getHumidity() public payable {
        //query API and store result in humidity variable
        string memory humidity = oraclize_query("URL", "json(https://api.weatherbit.io/v2.0/current?city=London&country=UK&key=XXXXXXXXXXXXXXXXX).data[0].rh");
    }
}
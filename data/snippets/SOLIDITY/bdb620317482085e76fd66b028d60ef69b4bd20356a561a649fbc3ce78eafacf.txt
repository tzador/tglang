pragma solidity ^0.8.0;

// This is the contract definition
contract Bank {

    // This is a state variable representing the total balance of the bank
    uint totalBalance;

    // This is the constructor function which sets the initial total balance to 0
    constructor() {
        totalBalance = 0;
    }

    // This function allows users to deposit a specific amount of Ether into the bank
    // In order to deposit, the user must have a minimum balance of 0.001 Ether
    function deposit() public payable {
        require(msg.value >= 0.001 ether, "Minimum deposit of 0.001 Ether required");
        totalBalance += msg.value;
    }

    // This function allows users to withdraw a specific amount of Ether from the bank
    // In order to withdraw, the user must have enough balance in the bank
    function withdraw(uint amount) public {
        require(amount <= totalBalance, "Insufficient funds");
        msg.sender.transfer(amount);
        totalBalance -= amount;
    }

    // This function returns the total balance of the bank
    function getBalance() public view returns (uint) {
        return totalBalance;
    }

    // This function allows the owner of the contract to transfer the entire balance of the bank to another address
    // This can only be accessed by the owner of the contract
    function transferBalance(address recipient) public {
        require(msg.sender == owner, "Only the owner of the contract can transfer the balance");
        recipient.transfer(totalBalance);
        totalBalance = 0;
    }
}
//Defines a contract called "Token"
contract Token {
    
    //Defines variables
    string public name;
    string public symbol;
    uint256 public totalSupply;
    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;

    //Creates an event for transfer of tokens
    event Transfer(address indexed from, address indexed to, uint256 value);
    
    //Creates an event for approval of allowance
    event Approval(address indexed owner, address indexed spender, uint256 value);

    //Constructor function to set initial values
    //Takes in a name, symbol, and initial supply of tokens
    constructor(string memory _name, string memory _symbol, uint256 _initialSupply) public {
        name = _name;
        symbol = _symbol;
        totalSupply = _initialSupply;
        
        //Sets the initial balance of the contract creator to the total supply of tokens
        balanceOf[msg.sender] = _initialSupply;
    }

    //Function for transferring tokens from one address to another
    function transfer(address _to, uint256 _value) public returns (bool success) {
        
        //Requires the sender to have enough tokens to transfer
        require(balanceOf[msg.sender] >= _value);
        
        //Reduces the balance of the sender
        balanceOf[msg.sender] -= _value;
        
        //Increases the balance of the recipient
        balanceOf[_to] += _value;
        
        //Emits the transfer event
        emit Transfer(msg.sender, _to, _value);
        
        //Returns true as the function was successful
        return true;
    }

    //Function for approving an allowance for another address to spend tokens on the sender's behalf
    function approve(address _spender, uint256 _value) public returns (bool success) {
        
        //Sets the allowance mapping for the sender and the spender
        allowance[msg.sender][_spender] = _value;
        
        //Emits the approval event
        emit Approval(msg.sender, _spender, _value);
        
        //Returns true as the function was successful
        return true;
    }

    //Function for transferring tokens from one address to another on behalf of the sender
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        
        //Requires the sender to have enough tokens in their allowance
        require(allowance[_from][msg.sender] >= _value);
        
        //Reduces the allowance of the sender
        allowance[_from][msg.sender] -= _value;
        
        //Reduces the balance of the sender
        balanceOf[_from] -= _value;
        
        //Increases the balance of the recipient
        balanceOf[_to] += _value;
        
        //Emits the transfer event
        emit Transfer(_from, _to, _value);
        
        //Returns true as the function was successful
        return true;
    }
}
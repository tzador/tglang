//Example contract implementing the SOLID principles

//Interface defining the functionality of a 'Vehicle'
interface Vehicle {
    //Abstract function to start the vehicle
    function start() public;
    //Abstract function to stop the vehicle
    function stop() public;
}


//Contract implementing the 'Vehicle' interface
contract Car is Vehicle {

    //Private variables
    uint private speed;
    bool private isRunning;

    //Public function to start the car
    function start() public {
        isRunning = true;
    }

    //Public function to stop the car
    function stop() public {
        speed = 0;
        isRunning = false;
    }

    //Public function to accelerate the car
    function accelerate() public {
        speed++;
    }

    //Public function to decelerate the car
    function decelerate() public {
        speed--;
    }
}

//Contract implementing the 'Vehicle' interface
contract Motorcycle is Vehicle {

    //Private variables
    uint private speed;
    bool private isRunning;

    //Public function to start the motorcycle
    function start() public {
        isRunning = true;
    }

    //Public function to stop the motorcycle
    function stop() public {
        speed = 0;
        isRunning = false;
    }

    //Public function to speed up the motorcycle
    function speedUp() public {
        speed++;
    }

    //Public function to slow down the motorcycle
    function slowDown() public {
        speed--;
    }
}
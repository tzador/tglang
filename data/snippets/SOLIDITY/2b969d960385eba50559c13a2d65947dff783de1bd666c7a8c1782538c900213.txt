pragma solidity ^0.8.0;

// Define contract
contract ERC20Token {
    // Track total supply of tokens
    uint256 totalSupply;

    // Mapping of token balances
    mapping(address => uint256) balances;

    // Event for transferring tokens
    event Transfer(address indexed _from, address indexed _to, uint256 _value);

    // Initialize total supply and assign to contract creator
    constructor(uint256 _initialSupply) public {
        totalSupply = _initialSupply;
        balances[msg.sender] = _initialSupply;
    }

    // Transfer tokens from one address to another
    function transfer(address _to, uint256 _amount) public {
        // Check if sender has sufficient balance
        require(balances[msg.sender] >= _amount, "Insufficient balance");

        // Subtract tokens from sender's balance
        balances[msg.sender] -= _amount;

        // Add tokens to receiver's balance
        balances[_to] += _amount;

        // Emit Transfer event
        emit Transfer(msg.sender, _to, _amount);
    }

    // Get balance of specific address
    function balanceOf(address _owner) public view returns (uint256) {
        return balances[_owner];
    }
}
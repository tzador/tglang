pragma solidity ^0.8.0; //specifies the compiler version to be used

contract SimpleStorage { //defines a contract called SimpleStorage
    
    uint public storedData; //declares a publicly accessible variable called storedData

    event ValueChanged( //defines an event called ValueChanged, which notifies when the value has been changed
        uint _newValue //defines a parameter for the event called _newValue
    );

    constructor(uint initialValue) { //the constructor function, executed only once when the contract is deployed
        storedData = initialValue; //initializes the storedData variable with the passed in value
    }

    function set(uint x) public { //defines a function called set, which is publicly accessible
        storedData = x; //sets the storedData variable to the passed in value
        emit ValueChanged(x); //emits the ValueChanged event with the passed in value as the parameter
    }

    function get() public view returns (uint) { //defines a function called get, which is publicly accessible and returns a uint value
        return storedData; //returns the current value of the storedData variable
    }

}
/**
Contract that manages ownership
 */
contract Owned {
    address public owner; //state variable to store the owner's address
    
    /**
    Constructor function to set the owner as the one who deploys the contract
     */
    constructor() {
        owner = msg.sender; //sets the owner as the address of the person who deploys the contract
    }
    
    /**
     Modifier that checks if the caller is the owner of the contract 
     */
    modifier onlyOwner() {
        require(msg.sender == owner, "Caller is not the owner"); //reverts the transaction if the caller is not the owner
        _; //continues with the execution of the function
    }
    
    /**
    Function to transfer ownership to a different address
    Can only be called by the owner of the contract
     */
    function transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0), "New owner address can not be zero"); //reverts if the new owner address is zero (invalid address)
        owner = newOwner; //updates the owner variable to the new owner address
    }
}
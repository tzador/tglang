pragma solidity ^0.4.24; // specify solidity version

contract MyToken {
    mapping(address => uint) balances; // create map of addresses and their balances
    address owner; // declare variable for contract owner
    
    constructor() public { // initialize contract
        owner = msg.sender; // set contract owner to the address that deployed the contract
    }
    
    function transfer(address _to, uint _amount) public { // function to transfer tokens
        require(balances[msg.sender] >= _amount); // require that sender has sufficient balance
        balances[msg.sender] -= _amount; // subtract transfer amount from sender's balance
        balances[_to] += _amount; // add transfer amount to recipient's balance
    }
    
    function mint(address _to, uint _amount) public { // function to mint new tokens
        require(msg.sender == owner); // require that only the contract owner can mint tokens
        balances[_to] += _amount; // add minted amount to recipient's balance
    }
    
    function burn(uint _amount) public { // function to burn tokens
        require(balances[msg.sender] >= _amount); // require that sender has sufficient balance
        balances[msg.sender] -= _amount; // subtract burned amount from sender's balance
    }
}
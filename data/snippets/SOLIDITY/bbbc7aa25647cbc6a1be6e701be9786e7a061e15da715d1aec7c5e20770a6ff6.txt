pragma solidity ^0.8.4;

// Interface for a contract implementing "receive"
abstract contract Receiver {
    receive() external payable virtual;
}

// Interface for a contract implementing "fallback"
abstract contract Fallback {
    fallback() external payable virtual;
}

// Contract that implements both "receive" and "fallback"
contract MyContract is Receiver, Fallback {
    mapping(address => uint256) public balances;

    // Function to receive ether
    receive() external payable override {
        balances[msg.sender] += msg.value;
    }

    // Fallback function
    fallback() external payable override {
        balances[msg.sender] += msg.value;
    }
}
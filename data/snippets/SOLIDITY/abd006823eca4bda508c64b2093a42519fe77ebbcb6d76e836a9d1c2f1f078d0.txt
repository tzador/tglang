pragma solidity ^0.4.18; // Solidity version

// Contract declaration
contract MyContract {
    
    // State variables
    address public owner; //Publicly accessible variable
    uint256 private balance; //Private variable
    mapping(address => uint256) public balances; //Mapping from address to uint256
    uint256[] public numbers; //Public array
    
    // Constructor function
    function MyContract() public {
        owner = msg.sender; //Set owner as the contract creator
    }
    
    // Function modifier
    modifier onlyOwner() {
        require(msg.sender == owner); //Only the owner can execute this function
        _; //Continue with the rest of the function
    }
    
    // Event declaration
    event NewBalance(address _owner, uint256 _balance); //Emits an event when new balance is set
    
    // Function to update balance
    function updateBalance(uint256 _newBalance) public onlyOwner {
        balance = _newBalance; //Update the balance
        emit NewBalance(owner, balance); //Emit the event
    }
    
    // Function to add number to array
    function addToNumbers(uint256 _number) public onlyOwner {
        numbers.push(_number); //Add number to the array
    }
    
}
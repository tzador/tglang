pragma solidity ^0.8.0;

/** @title ExampleContract */
contract ExampleContract {
 
  // State variables
  address public owner;
  uint public balance;
  string public contractName;
 
  // Events
  event Deposit(address indexed _from, uint _value);
 
  // Constructor
  constructor() public {
    owner = msg.sender;
    contractName = "Example Contract";
  }
 
  // Modifiers
  modifier onlyOwner {
    require(msg.sender == owner);
    _;
  }
 
  // Functions
  /**
   * @dev Deposit ETH into contract.
   */
  function deposit() external payable {
    require(msg.value > 0);
    balance += msg.value;
    emit Deposit(msg.sender, msg.value);
  }
 
  /**
   * @dev Withdraw ETH from contract.
   * @param _amount Amount to withdraw.
   */
  function withdraw(uint _amount) external onlyOwner {
    require(_amount <= balance);
    balance -= _amount;
    (bool success, ) = owner.call{value: _amount}("");
    require(success, "Transfer failed.");
  }
 
}
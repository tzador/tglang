//Importing the necessary libraries
pragma solidity ^0.8.4;

//Defining the contract
contract Example {

    //Defining a struct to store data 
    struct Person {
        string name;
        uint age;
        bool isMember;
    }

    //Defining a mapping to store multiple people
    mapping(address => Person) public people;

    //Creating an event to emit when a new person is added
    event PersonAdded(string name, uint age, bool isMember);

    //Defining a modifier to check if the person is already a member
    modifier isNotMember(address _address) {
        require(!people[_address].isMember, "Person is already a member.");
        _;
    }

    //Function to add a new person to the mapping
    function addPerson(string memory _name, uint _age) 
        public isNotMember(msg.sender) 
    {
        people[msg.sender] = Person(_name, _age, true);

        //Emitting the PersonAdded event
        emit PersonAdded(_name, _age, true);
    }

    //Function to check if a person is a member
    function isPersonMember(address _address) public view returns (bool) {
        return people[_address].isMember;
    }
}
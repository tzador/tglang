pragma solidity ^0.8.4; // specifies the version of Solidity to be used

contract MyContract {
    // Variables
    uint private constant myConstant = 10; // declares a private constant variable with a value of 10
    address private myAddress = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4; // declares a private variable of type address with a value
    
    // Events
    event NewData(uint data); // defines an event named "NewData" that takes in a uint variable
    
    // Constructor
    constructor() {
        // Code to be executed on contract deployment
    }
    
    // Modifiers
    modifier onlyOwner() { // defines a modifier named "onlyOwner"
        require(msg.sender == myAddress); // requires the sender of the transaction to be the same as myAddress
        _; // indicates where the modified function's code should be executed
    }
    
    // Functions
    function getData() public view returns (uint) { // defines a public function named "getData" that returns a uint variable
        return myConstant; // returns the value of myConstant
    }
    
    function setData(uint data) public onlyOwner { // defines a public function named "setData" that takes in a uint variable and is modified by "onlyOwner"
        emit NewData(data); // emits the "NewData" event with the passed in data
    }
}
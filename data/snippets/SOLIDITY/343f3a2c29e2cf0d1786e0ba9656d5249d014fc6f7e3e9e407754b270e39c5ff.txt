contract Bank {
    address public owner;
    mapping (address => uint) public balances;
    uint public totalBalance;
    
    constructor() public {
        owner = msg.sender;
        totalBalance = 0;
    }
    
    function deposit() public payable {
        require(msg.value > 0);
        balances[msg.sender] += msg.value;
        totalBalance += msg.value;
    }
    
    function withdraw(uint amount) public {
        require(amount > 0 && amount <= balances[msg.sender]);
        balances[msg.sender] -= amount;
        totalBalance -= amount;
        msg.sender.transfer(amount);
    }
    
    function changeOwner(address newOwner) public {
        require(msg.sender == owner);
        owner = newOwner;
    }
    
    function transfer(address recipient, uint amount) public {
        require(amount > 0 && amount <= balances[msg.sender]);
        balances[msg.sender] -= amount;
        balances[recipient] += amount;
    }
    
    function getBalance(address account) public view returns(uint) {
        return balances[account];
    }
}
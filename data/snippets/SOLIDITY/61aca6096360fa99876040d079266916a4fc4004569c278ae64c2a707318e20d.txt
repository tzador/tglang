// This contract implements a simple storage system using the Solidity programming language
// Every user has their own storage index and can store and retrieve data from it
pragma solidity ^0.8.0;

// The storage contract
contract Storage {
    
    // A struct to represent user storage data
    struct StorageData {
        uint256 index; // Index for the user's storage
        string data; // User's stored data
    }
    
    // Mapping from addresses to user storage data
    mapping (address => StorageData) private storageMap;
    
    // A function to store data for a specific user
    function storeData(string memory _data) public {
        // Check if the user already has storage
        if (storageMap[msg.sender].index == 0) {
            // Generate a new index for the user
            storageMap[msg.sender].index = address(this).balance + 1;
        }
        // Store the data for the user's index
        storageMap[msg.sender].data = _data;
    }
    
    // A function to retrieve the stored data for a specific user
    function retrieveData() public view returns (string memory) {
        // Check if the user has storage
        require(storageMap[msg.sender].index != 0, "User does not have storage");
        // Return the stored data for the user
        return storageMap[msg.sender].data;
    }
}
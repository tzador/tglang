// This contract implements a simple voting system using the Solidity programming language

pragma solidity ^0.6.0; //Defines the version of Solidity being used

contract VoteSystem {
    //Declaration of variables
    uint256 public totalVotes;
    address public contractOwner;
    mapping (address => bool) public voters;
    mapping (bytes32 => uint256) public voteCount;
    
    //Event to be emitted when a new vote has been casted
    event NewVote(address voter, bytes32 option);
    
    //Constructor function to set the contract owner
    constructor() public {
        contractOwner = msg.sender;
    }
    
    //Function to add a new voter
    function addVoter(address _voter) external {
        require(msg.sender == contractOwner, "Only contract owner can add voters");
        voters[_voter] = true;
    }
    
    //Modifier to restrict access to only registered voters
    modifier onlyVoters {
        require(voters[msg.sender], "You are not a registered voter");
        _;
    }
    
    //Function to cast a vote for a specific option
    function vote(bytes32 _option) external onlyVoters {
        voteCount[_option]++;
        totalVotes++;
        
        //Emitting the NewVote event
        emit NewVote(msg.sender, _option);
    }
    
    //Function to get total votes for a specific option
    function getVotes(bytes32 _option) public view returns (uint256) {
        return voteCount[_option];
    }
}
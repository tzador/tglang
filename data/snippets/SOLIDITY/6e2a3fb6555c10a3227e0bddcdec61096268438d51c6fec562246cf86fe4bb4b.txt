pragma solidity ^0.8.0; // This declares the version of Solidity to be used

contract Bank {
    
    mapping(address => uint) public accounts; // Creates a mapping of addresses to balances
    
    event Deposit(address account, uint amount); // Creates an event to track deposits
    
    function deposit() public payable { // Function to deposit funds into an account
        require(msg.value > 0, "Amount must be greater than 0"); // Requires that an amount greater than 0 is being deposited
        accounts[msg.sender] += msg.value; // Adds the deposit amount to the sender's account
        emit Deposit(msg.sender, msg.value); // Emits the deposit event
    }
    
    function withdraw(uint amount) public { // Function to withdraw funds from an account
        require(amount <= accounts[msg.sender], "Insufficient funds"); // Requires that the sender has enough funds in their account
        accounts[msg.sender] -= amount; // Subtracts the withdrawal amount from the sender's account
        payable(msg.sender).transfer(amount); // Transfers the withdrawn amount to the sender's address
    }
    
    function getBalance() public view returns (uint) { // Function to get the balance of an account
        return accounts[msg.sender]; // Returns the balance of the sender's account
    }
    
}
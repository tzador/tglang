// This contract represents a crowdfunding campaign
contract Crowdfunding {

    // Define state variables
    address public owner; // Owner of the campaign
    uint public goal; // Funding goal in wei
    uint public deadline; // Deadline for funding in unix timestamp format
    mapping(address => uint) public backers; // Mapping of backers and their contributions
    address[] public contributors; // Array of addresses of backers

    // Define events
    event GoalReached(uint amount);
    event FundTransfer(address backer, uint amount);

    // Constructor function
    function Crowdfunding(uint _goal, uint _deadline) {
        owner = msg.sender; // Set the contract owner as the deployer
        goal = _goal; // Set the funding goal
        deadline = _deadline; // Set the funding deadline
    }

    // Function to contribute funds to the campaign
    function fund() payable {
        require(msg.sender != owner); // Only non-owner accounts can contribute
        require(now <= deadline); // Funds can only be contributed before the deadline

        backers[msg.sender] += msg.value; // Add the contribution to the backer's balance
        contributors.push(msg.sender); // Add the backer's address to the contributors array
        FundTransfer(msg.sender, msg.value); // Trigger the FundTransfer event
    }

    // Function to check if funding goal has been reached
    function checkGoalReached() returns (bool) {
        if (this.balance >= goal) { // Check if current contract balance is equal to or greater than goal
            GoalReached(this.balance); // Trigger the GoalReached event
            return true;
        }
        return false;
    }

    // Function to withdraw funds after the deadline if the funding goal is reached
    function withdrawFunds() {
        require(msg.sender == owner); // Only the owner can withdraw the funds
        require(now > deadline && this.balance >= goal); // Withdrawal can only occur after the deadline and if goal is reached

        msg.sender.transfer(this.balance); // Transfer the contract balance to the owner's account
    }
}
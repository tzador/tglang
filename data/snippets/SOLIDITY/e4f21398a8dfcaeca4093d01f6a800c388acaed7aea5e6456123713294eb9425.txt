/*
* @title Voting
* @dev Implements a voting system that allows users to vote for a candidate. 
*/

contract Voting {
    // Creating a mapping to store the candidates and the number of votes they have received
    mapping (string => uint8) public candidateVotes;

    // Creating an array to store the list of candidates
    string[] public candidateList;

    // Declaring an event to be triggered when a user casts a vote
    event VoteCast(string _candidate, uint8 _votes);

    // Declaring a function to add new candidates to the list
    function addCandidate(string _candidateName) public {
        // Checking if the candidate is already present in the list
        require(candidateVotes[_candidateName] == 0);

        // Adding the new candidate to the list
        candidateList.push(_candidateName);
    }

    // Declaring a function to allow users to cast their vote
    function vote(string _candidateName) public {
        // Checking if the candidate is present in the list
        require(candidateVotes[_candidateName] != 0);

        // Incrementing the vote count for the candidate
        candidateVotes[_candidateName]++;

        // Triggering the VoteCast event
        emit VoteCast(_candidateName, candidateVotes[_candidateName]);
    }

    // Declaring a function to get the total number of votes for a particular candidate
    function getVotes(string _candidateName) public view returns (uint8) {
        return candidateVotes[_candidateName];
    }

    // Declaring a function to get list of all candidates
    function getCandidates() public view returns (string[]) {
        return candidateList;
    }
}
// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.16 <0.9.0;

interface ERC20 {

    // Returns the name of the token
    function name() external view returns (string memory);

    // Returns the symbol of the token
    function symbol() external view returns (string memory);

    // Returns the decimals of the token
    function decimals() external view returns (uint8);

    // Returns the total supply of the token
    function totalSupply() external view returns (uint256);

    // Returns the balance of a particular address
    function balanceOf(address _owner) external view returns (uint256 balance);

    // Transfers an amount of tokens from the sender to a specific recipient
    function transfer(address _to, uint256 _value) external returns (bool success);

    // Transfers an amount of tokens from one address to another
    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);

    // Allows an address to spend a certain amount of tokens on behalf of the owner
    function approve(address _spender, uint256 _value) external returns (bool success);

    // Returns the amount of tokens that an address is allowed to spend
    function allowance(address _owner, address _spender) external view returns (uint256 remaining);

    // Emitted when tokens are transferred
    event Transfer(address indexed _from, address indexed _to, uint256 _value);

    // Emitted when an approval is made allowing an address to spend tokens on behalf of another
    event Approval(address indexed _owner, address indexed _spender, uint256 _value);
}
pragma solidity ^0.8.6; // declaring version

contract ComplexContract { // declaring contract
    
    address owner; // declaring state variable

    modifier onlyOwner() { // declaring modifier
        require(msg.sender == owner, "Only the owner can call this function."); // require statement
        _; // function body will be placed here
    }
    
    uint256 currentNumber; // declaring state variable
    
    event NumberIncreased(address indexed owner, uint256 previousNumber, uint256 updatedNumber); // declaring an event with indexed parameter and event data
    
    constructor() { // declaring constructor
        owner = msg.sender; // assigning sender address to owner variable
    }
    
    function increaseNumber(uint256 numberToAdd) public onlyOwner { // declaring public function with parameter
        uint256 previousNumber = currentNumber; // declaring local variable
        currentNumber += numberToAdd; // modifying state variable
        emit NumberIncreased(owner, previousNumber, currentNumber); // emitting event with event data
    }
}
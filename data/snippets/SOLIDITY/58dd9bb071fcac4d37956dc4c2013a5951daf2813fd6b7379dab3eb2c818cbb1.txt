pragma solidity ^0.8.0;

contract ExampleContract {
    // This is a single-line comment

    /*
     * This is a multi-line
     * comment.
     */
    
    // Declaring state variables
    string public message = "Hello World!";
    address public owner;
    
    // Initializing constructor
    constructor() {
        owner = msg.sender;
    }
    
    // Modifier that restricts access to only the owner
    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can call this function.");
        _;
    }
    
    // Event for when a message is updated
    event MessageUpdated(string newMessage);
    
    // Function that allows the owner to update the message
    function updateMessage(string memory newMessage) public onlyOwner {
        message = newMessage;
        emit MessageUpdated(newMessage);
    }
    
    // Function that returns the message and owner
    function getMessageAndOwner() public view returns(string memory, address) {
        return (message, owner);
    }
}
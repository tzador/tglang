contract SampleContract {
    // define variables
    address owner;
    uint public myUint;
    
    // events
    event NewOwner(address indexed oldOwner, address indexed newOwner);
    
    // constructor
    constructor() public {
        owner = msg.sender;
    }
    
    // modifiers
    modifier onlyOwner {
        require(msg.sender == owner, "Unauthorized");
        _;
    }
    
    // functions
    function setUint(uint newValue) public onlyOwner {
        myUint = newValue;
    }
    
    function changeOwner(address newOwner) public onlyOwner {
        require(newOwner != address(0), "Invalid address");
        emit NewOwner(owner, newOwner);
        owner = newOwner;
    }
    
    function getUint() public view returns (uint) {
        return myUint;
    }
}
// Enum representing different types of loan contracts
enum LoanType {
  StudentLoan,
  Mortgage,
  CarLoan
}

// Struct containing information about a loan
struct Loan {
  address borrower;
  uint amount;
  uint interestRate;
  LoanType loanType;
}

// Function to create a new loan contract and add it to an array
// Takes in borrower's address, loan amount, interest rate, and type of loan
// Returns the new Loan contract's address
function createLoan(address _borrower, uint _amount, uint _interestRate, LoanType _loanType) public returns(address) {
  Loan newLoan = new Loan(_borrower, _amount, _interestRate, _loanType);
  loans.push(newLoan);
  return address(newLoan);
}

// Function to get the total number of loans in the array
// Returns the number of loans
function getLoanCount() public view returns(uint) {
  return loans.length;
}

// Function to calculate the total amount of all loans of a specific type
// Takes in the type of loan
// Returns the total amount of loans of that type
function getTotalAmountByType(LoanType _loanType) public view returns(uint) {
  uint totalAmount = 0;
  for (uint i = 0; i < loans.length; i++) {
    if (loans[i].loanType == _loanType) {
      totalAmount += loans[i].amount;
    }
  }
  return totalAmount;
}
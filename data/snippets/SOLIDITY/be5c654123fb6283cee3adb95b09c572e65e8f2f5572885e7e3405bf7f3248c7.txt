contract Example {
    // This is a public variable of type uint
    uint public example;

    // This is a private variable of type uint
    uint private _example;

    // This is a public array of type string
    string[] public exampleArray;

    // This is a private mapping of type address to bool
    mapping(address => bool) private _exampleMapping;

    /**
     * @dev This is a function that sets the value of example
     * @param _value The new value to be set
     */
    function setExample(uint _value) public {
        example = _value;
    }

    /**
     * @dev This is a function that adds a new string to the exampleArray
     * @param _string The string to be added
     */
    function addExample(string memory _string) public {
        exampleArray.push(_string);
    }

    /**
     * @dev This is a function that checks if _address is true in the _exampleMapping
     * @param _address The address to be checked
     */
    function checkExample(address _address) public view returns (bool) {
        return _exampleMapping[_address];
    }

    /**
     * @dev This is a function that calls the private _setExample function and passes in _value
     * @param _value The value to be set
     */
    function callPrivateFunction(uint _value) public {
        _setExample(_value);
    }

    /**
     * @dev This is a function that sets the value of _example
     * @param _value The new value to be set
     */
    function _setExample(uint _value) private {
        _example = _value;
    }
}
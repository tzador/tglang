// Contract factory for creating child contracts
contract Factory {
    
    // Address of the parent contract
    address parent;
    
    // Array to store the addresses of child contracts created
    address[] public childContracts;
    
    // Event to log whenever a new child contract is created
    event ChildContractCreated(address childContract);
    
    // Constructor function to set the address of the parent contract
    constructor(address _parent) public {
        parent = _parent;
    }
    
    // Function to create a new child contract
    function createChildContract() external {
        
        // Create a new instance of the child contract
        ChildContract childContract = new ChildContract(msg.sender, parent);
        
        // Add the address to the array of child contracts
        childContracts.push(address(childContract));
        
        // Emit the event to log the creation of the child contract
        emit ChildContractCreated(address(childContract));
    }
}

// Child contract that inherits from the parent contract
contract ChildContract is ParentContract {
    
    // Address of the parent contract
    address parent;
    
    // Address of the creator of the child contract
    address creator;
    
    // Constructor function to set the addresses of the parent contract and the creator
    constructor(address _creator, address _parent) public {
        creator = _creator;
        parent = _parent;
    }
    
    // Function to perform an action only if the caller is the creator of the child contract
    modifier onlyCreator {
        require(msg.sender == creator, "Caller is not the creator of the child contract");
        _;
    }
    
    // Function to perform an action only if the caller is the owner of the parent contract
    modifier onlyOwner {
        require(msg.sender == parent, "Caller is not the owner of the parent contract");
        _;
    }
    
    // Function for the creator to change the parent contract
    function changeParentContract(address _newParent) external onlyCreator {
        parent = _newParent;
    }
    
    // Function for the owner of the parent contract to change the creator of the child contract
    function changeCreator(address _newCreator) external onlyOwner {
        creator = _newCreator;
    }
}
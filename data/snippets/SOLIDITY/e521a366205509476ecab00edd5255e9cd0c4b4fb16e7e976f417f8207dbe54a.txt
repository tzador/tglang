/*
 * @title Import Example
 * @dev Example demonstrating how to import code from another file
 * @author Your Name
 */

pragma solidity ^0.4.24;

// Importing contract from another file
import "./OtherContract.sol";

// Contract definition
contract MyContract {
    
    // State variables
    address owner;
    uint public value;
    string public name;
    string private secret;
    
    // Constructor function
    constructor(string _name) public {
        owner = msg.sender;
        name = _name;
    }
    
    // Modifier to restrict functionality to only the owner
    modifier onlyOwner {
        require(msg.sender == owner);
        _;
    }
    
    // Setter function to update the value of the state variable
    function setValue(uint _value) public onlyOwner {
        value = _value;
    }
    
    // Getter function to access the value of the state variable
    function getValue() public view returns (uint) {
        return value;
    }
    
    // Function to call a function from the imported contract
    function callOtherFunction(address _otherContract) public onlyOwner {
        OtherContract otherContract = OtherContract(_otherContract);
        otherContract.changeValue(10);
    }
    
    // Function to set the secret variable (only callable by the owner)
    function setSecret(string _secret) public onlyOwner {
        secret = _secret;
    }
    
    // Function to retrieve the secret variable (only callable by the owner)
    function getSecret() public view onlyOwner returns (string) {
        return secret;
    }
    
    // Function to self destruct the contract (only callable by the owner)
    function destroy() public onlyOwner {
        selfdestruct(owner);
    }
}

// Other contract not written in this file
contract OtherContract {
    
    // State variable
    uint public value;
    
    // Function to change the value of the state variable (only callable by the owner)
    function changeValue(uint _value) public {
        value = _value;
    }
}
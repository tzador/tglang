@echo off     //This line turns the command echo off so that commands are not displayed in the output
setlocal enabledelayedexpansion     //This enables the use of delayed expansion for variables
set var=Hello World!                 //Set the variable "var" to the string "Hello World!"
echo %var%                           //Display the value of var in the console
set /a num=5                         //Set the variable "num" to the integer 5
if %num% EQU 5 (                     //Start of if statement, checks if num is equal to 5
    set var=Goodbye World!           //If true, set var to the string "Goodbye World!"
    echo %var%                       //Display the updated value of var
) else (                             //If false, execute the code within the else statement
    set var=Still Hello World!       //Set var to the string "Still Hello World!"
    echo %var%                       //Display the updated value of var
)
for /L %%i in (1,1,10) do (          //Start of for loop, initializes a variable "i" from 1 to 10 with a step of 1
    echo %%i                         //Display the value of i in the console
)
call :subroutine                     //Calls the subroutine defined below
goto :end                            //Exits the main code and jumps to the :end label
:subroutine                          //Definition of the subroutine
echo I am a subroutine!              //Displays a message in the console
goto :eof                            //Ends the subroutine and returns to the main code
:end                                 //Label for the end of the main code
echo End of code.                     //Displays a message to indicate the end of the code
pause                                //Keeps the console open until any key is pressed
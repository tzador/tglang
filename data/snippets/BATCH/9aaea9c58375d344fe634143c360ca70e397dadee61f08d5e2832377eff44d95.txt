@echo OFF                                                                   Rem Turns off command line echoing
setlocal enableextensions enabledelayedexpansion                         Rem Enables delayed expansion of variables

Rem This is a complex code snippet that demonstrates various batch programming techniques
:loop Rem Start of loop
    set /a num1=!random! % 50 + 1                                         Rem Generates a random number between 1 and 50 (inclusive)
    set /a num2=!random! % 50 + 1                                         Rem Generates another random number between 1 and 50 (inclusive)
    set /a result=num1 + num2                                             Rem Calculates the sum of the two numbers

    if %result% == 100 (                                                      Rem Checks if the result is equal to 100
        echo The sum of %num1% and %num2% is equal to 100.                 Rem Prints a message if it is equal to 100
    ) else if %result% GTR 100 (                                              Rem Checks if the result is greater than 100
        echo The sum of %num1% and %num2% is greater than 100.              Rem Prints a message if it is greater than 100
    ) else if %result% LSS 100 (                                              Rem Checks if the result is less than 100
        echo The sum of %num1% and %num2% is less than 100.                 Rem Prints a message if it is less than 100
    )

    if %num1% LSS %num2% (                                                      Rem Checks if num1 is less than num2 (to avoid negative result)
        set /a temp=%num1%                                                   Rem Temporary variable for swapping
        set num1=%num2%                                                      Rem Swaps num1 and num2
        set num2=%temp%                                                      Rem Sets num2 to original value of num1
    )

:evenloop Rem Start of even loop
    set /a result=num1 - num2                                                 Rem Calculates the difference between num1 and num2
    if !result! LSS 0 (                                                      Rem Checks if the result is less than 0 (i.e. negative number)
        set /a result=!result! * -1                                          Rem Converts the result to positive
    )
    if !result! GTR 10 (                                                     Rem Checks if the result is greater than 10
        set /a result=!result! / 2                                           Rem Divides the result by 2 (integer division)
        goto evenloop                                                         Rem Goes back to start of even loop
    )
    goto displayresult                                                        Rem Goes to label for displaying final result

:oddloop Rem Start of odd loop
    set /a result=num1 * num2                                                 Rem Calculates the product of num1 and num2
    if !result! GTR 100 (                                                     Rem Checks if the result is greater than 100
        set /a result=!result! % 100                                          Rem Gets the last two digits of the result (e.g. 123 => 23)
    )
    if !result! EQU 0 (                                                       Rem Checks if the result is equal to 0
        set /a result=1                                                       Rem Sets the result to 1
    )
    if !result! GTR 5 (                                                       Rem Checks if the result is greater than 5
        set /a result=!result! - 5                                            Rem Subtracts 5 from the result
    )
    set /a num1=!random! % 50 + 1                                              Rem Generates a new random number between 1 and 50 (inclusive)
    goto displayresult                                                         Rem Goes to label for displaying final result

:displayresult Rem Label for displaying final result
    echo The final result is %result%.                                         Rem Prints the final result

    set /a count=%result% / 10                                                 Rem Calculates the number of times to print asterisks based on the final result
    for /l %%i in (1,1,!count!) do (                                           Rem For loop with variable %%i starting from 1, increasing by 1, and ending at count
        echo *                                                                Rem Prints an asterisk
    )
    if %result% GTR 10 (                                                       Rem Checks if the final result is greater than 10
        echo **                                                               Rem Prints an extra asterisk for results greater than 10
    )

    set /a num1=!random! % 50 + 1                                              Rem Generates a new random number between 1 and 50 (inclusive)
    set /a num2=!random! % 50 + 1                                              Rem Generates another new random number between 1 and 50 (inclusive)

    if %num1% GTR %num2% (                                                      Rem Checks if num1 is greater than num2
        goto loop                                                               Rem Goes back to start of loop
    )
    goto oddloop                                                                Rem Goes to start of odd loop

endlocal                                                                       Rem Ends local variable scope
pause                                                                           Rem Pauses the program after execution
@echo off
::this line turns off command echo for cleaner output
setlocal
::enables the use of local variables
set var1=Apple
set var2=Banana
set var3=Carrot
set var4=Grape
set var5=Orange
::sets 5 different variables with corresponding values

echo %var1%, %var2%, %var3%, %var4%, %var5%
::this line prints the values of all 5 variables, separated by commas
if "%var1%" == "Apple" (
  set "var1=Pineapple"
  set "var2=Cherry"
  set "var3=Watermelon"
)
::if the value of var1 is equal to "Apple", the values of var1, var2, and var3 are changed
echo %var1%, %var2%, %var3%, %var4%, %var5%
::this line prints the updated values of all 5 variables

set /p user_input=Please enter a letter: 
::prompts the user to enter a value for the variable user_input
if "%user_input%" == "A" (
  echo You chose Apple.
) else if "%user_input%" == "B" (
  echo You chose Banana.
) else if "%user_input%" == "C" (
  echo You chose Carrot.
) else if "%user_input%" == "G" (
  echo You chose Grape.
) else if "%user_input%" == "O" (
  echo You chose Orange.
) else (
  echo Sorry, that letter is not a valid option.
)
::checks the user's input against the different options and prints a corresponding message

endlocal
::ends the local variable scope
pause>nul
::pause the program before closing
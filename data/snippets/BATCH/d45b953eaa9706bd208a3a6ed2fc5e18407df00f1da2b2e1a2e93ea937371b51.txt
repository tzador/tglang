@echo off
rem This is a comment in Batch script

set /p name="Please enter your name: "
rem This line prompts the user to enter their name and stores it in the "name" variable

echo Welcome %name%!
rem This line prints a welcome message, using the value stored in the "name" variable

set /a num1=5
set /a num2=3
rem These two lines set the variables "num1" and "num2" to hold the values 5 and 3

set /a sum=%num1%+%num2%
rem This line calculates the sum of the two variables and stores it in the "sum" variable

if %sum% GTR 10 (
    echo The sum is greater than 10.
) else (
    echo The sum is less than or equal to 10.
)
rem This conditional statement checks if the sum variable is greater than 10 and prints the appropriate message depending on the result

echo.
echo Here is a for loop:
for /l %%i in (1,1,%num1%) do (
    echo %%i
)
rem This loop iterates from 1 to the value stored in the "num1" variable and prints the current iteration number on each line

echo.
echo Here is a while loop:
set /a count=0
:whileloop
set /a count=%count%+1
echo %count%
if %count% LSS 3 goto whileloop
rem This while loop increments the "count" variable and prints its value until it reaches 3

pause
rem This line pauses the script and waits for the user to press any key before continuing

echo.
echo Here is a subroutine:
call :subroutine
goto :eof
:subroutine
echo This is a subroutine.
goto :eof
rem This subroutine is called and prints a message before returning to the main code

echo.
echo Here is an example of input validation:
:username
set /p username="Please enter a username: "
if "%username%"=="" goto username
rem This code prompts the user to enter a username and checks if it is empty, prompting them to enter a new one if it is

echo.
echo Here is an example of output redirection:
dir > directory.txt
echo The contents of this directory have been saved to the directory.txt file.
rem This code redirects the output of the "dir" command to a text file and prints a confirmation message

echo.
echo Here is an example of user input in a for loop:
set /p num="How many times do you want to print 'Hello'? "
for /l %%i in (1,1,%num%) do (
    echo Hello
)
rem This code prompts the user to enter a number and prints "Hello" the specified number of times on separate lines

echo.
echo Here is a code with labels and goto statements:
set /a i=0
:loop
set /a i=%i%+1
echo %i%
if %i% EQU 10 goto end
goto loop
:end
rem This code uses labels and goto statements to create a loop that counts from 1 to 10 and then ends

echo.
echo Here is an example of variable substitution:
set "input=Hello world"
echo %input:world=universe%
rem This code substitutes the word "world" in the variable "input" with "universe" and prints the updated variable

echo.
echo Here is an example of command chaining:
dir && echo The contents of this directory have been successfully listed.
rem This code chains two commands together, only executing the second command if the first one is successful

echo.
echo Here is an example of error handling:
set /a divbyzero=5/0
echo This line will not be reached.
if errorlevel 1 (
    echo Error: Division by zero.
)
rem This code attempts to divide by zero, causing an error. The error is caught and an error message is printed.
# This is a long and complex snippet that calculates the factorial of a number.

Add-Type -AssemblyName System.Numerics # Adds the necessary assembly for dealing with large numbers

function Factorial($num) { # Defining the factorial function
    if ($num -eq 0) { # If the number is 0, return 1
        return 1
    }
    elseif ($num -lt 0) { # If the number is negative, throw an error
        throw "Error: factorial cannot be calculated for negative numbers"
    }
    else { # If the number is positive
        $result = [System.Numerics.BigInteger]::One # Initialize the result variable with value 1 as a BigInteger
        for ($i = 1; $i -le $num; $i++) { # Loop from 1 to the given number
            $result = [System.Numerics.BigInteger]::Multiply($result, $i) # Multiply the result with the current number in the loop
        }
        return $result # Return the final result
    }
}

# Example usage
$number = 10
$factorial = Factorial $number
Write-Output "$number! = $factorial" # Output: 10! = 3628800
# This code snippet uses the ForEach-Object cmdlet to iterate through a list of objects and perform an action on each one using a switch statement

$objects = @(1,2,'three','four',[double]5,[decimal]6.5,[char]'7')

# Use the ForEach-Object cmdlet to iterate through the list of objects
$objects | ForEach-Object {
   # Use a switch statement to check the type of each object and perform a different action for each type
   switch($_.GetType().Name) {
      'Int32' { # If the object is of type Int32, square it
         $squared = $_ * $_
         Write-Host "$_ squared is $squared"
      }
      'String' { # If the object is of type String, convert it to uppercase
         $upper = $_.ToUpper()
         Write-Host "Uppercase version of $_ is $upper"
      }
      'Double' { # If the object is of type Double, round it to the nearest integer
         $rounded = [math]::round($_,0)
         Write-Host "$_ rounded to the nearest integer is $rounded"
      }
      'Decimal' { # If the object is of type Decimal, divide it by 2
         $halved = $_ / 2
         Write-Host "$_ divided by 2 is $halved"
      }
      'Char' { # If the object is of type Char, convert it to its ASCII equivalent
         $ascii = [int][char]$_
         Write-Host "ASCII value of $_ is $ascii"
      }
   }
}
#This code snippet retrieves a list of all users in an Active Directory group
#and displays their names, email addresses, and roles

#Get the group name from the user
$groupName = Read-Host "Enter the group name"

#Get all members of the group and save to variable
$members = Get-ADGroupMember -Identity $groupName

#Loop through each member in the group
foreach ($member in $members) {
    #Define an empty variable to store the role
    $role = ""

    #Check if the member is a user
    if ($member.ObjectClass -eq "user") {
        #Get the user's email address
        $emailAddress = (Get-ADUser -Identity $member -Properties Mail).Mail
        #Check if the user is a member of another group
        if (Get-ADPrincipalGroupMembership -Identity $member | Where-Object {$_.Name -eq "Group Managers"}) {
            #If so, set the role to "Manager"
            $role = "Manager"
        } else {
            #Otherwise, set the role to "Member"
            $role = "Member"
        }
    } else {
        #If the member is not a user, set the email address to "N/A"
        $emailAddress = "N/A"
        #Check if the member is a member of another group
        if (Get-ADPrincipalGroupMembership -Identity $member | Where-Object {$_.Name -eq "Group Managers"}) {
            #If so, set the role to "Manager"
            $role = "Manager"
        } else {
            #Otherwise, set the role to "Member"
            $role = "Member"
        }
    }

    #Print the member's name, email address, and role
    Write-Host "$member.Name   | Email: $emailAddress   | Role: $role"
}
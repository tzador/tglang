# This code snippet uses PowerShell to retrieve and output system information

# Define the variables used to store the system information
$computer = 'localhost'
$os = Get-WmiObject -Class Win32_OperatingSystem
$proc = Get-WmiObject -Class Win32_Processor
$sys = Get-WmiObject -Class Win32_ComputerSystem
$serv = Get-WmiObject -Class Win32_Service
$uptime = (Get-Date) - ($os.ConvertToDateTime($os.LastBootUpTime))

# Output the system information
Write-Host "System Information for $computer" -ForegroundColor Green
Write-Host "--------------------------------------" -ForegroundColor Green
Write-Host "Operating System: $($os.Caption)" -ForegroundColor Yellow
Write-Host "Manufacturer: $($sys.Manufacturer)" -ForegroundColor Yellow
Write-Host "Model: $($sys.Model)" -ForegroundColor Yellow
Write-Host "Processor: $($proc.Name)" -ForegroundColor Yellow
Write-Host "Number of Processors: $($proc.NumberOfCores)" -ForegroundColor Yellow
Write-Host "Memory: $($sys.TotalPhysicalMemory / 1GB) GB" -ForegroundColor Yellow
Write-Host "Uptime: $($uptime.Days) days, $($uptime.Hours) hours, $($uptime.Minutes) minutes, $($uptime.Seconds) seconds" -ForegroundColor Yellow
Write-Host "Services: " -ForegroundColor Yellow

# Iterate through the list of services and output their names and startup types
foreach ($service in $serv) {
    Write-Host "- $($service.DisplayName)" -ForegroundColor Cyan
    Write-Host "  Startup Type: $($service.StartMode)" -ForegroundColor DarkCyan
    Write-Host "  Status: $($service.State)" -ForegroundColor DarkCyan
}

# Output a message indicating that the script has finished running
Write-Host "Script completed successfully!" -ForegroundColor Green
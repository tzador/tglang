# This function checks if a given number is prime or not
function Check-Prime {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $true)]
        [int]$Number
    )
    # edge case - 2 is the only even prime number
    if ($Number -eq 2) {
        Write-Output "$Number is prime"
        return
    }
    # if number is less than 2 or even, it is not prime
    if ($Number -lt 2 -or $Number % 2 -eq 0) {
        Write-Output "$Number is not prime"
        return
    }
    # loop through all odd numbers up to square root of given number
    for ($i = 3; $i -le [math]::Sqrt($Number); $i += 2) {
        if ($Number % $i -eq 0) { # if number is divisible by any odd number, it is not prime
            Write-Output "$Number is not prime"
            return
        }
    }
    # if number is not found to be divisible by any odd number, it is prime
    Write-Output "$Number is prime"
}

# example of using the Check-Prime function
Check-Prime 17
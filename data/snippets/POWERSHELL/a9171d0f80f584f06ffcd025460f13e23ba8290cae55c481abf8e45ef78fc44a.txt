Get-Process | Sort-Object -Property WorkingSet | Select-Object -Last 5 | ForEach-Object { Write-Host "$($_.ProcessName) $($_.PrivateMemorySize64) $($_.WorkingSet64)" } 

#This snippet uses PowerShell to get the top 5 processes by their working set (memory) and prints their process name, private memory size, and working set size in a human-readable format.

#The first command, Get-Process, retrieves all currently running processes on the system.
#Using the pipe operator, the results are passed to the Sort-Object cmdlet, which sorts the processes in ascending order by their WorkingSet property (which represents the amount of physical memory allocated to a process).
#The results are then passed to the Select-Object cmdlet, which selects only the last 5 processes in the sorted list.
#Using the pipe operator again, the results are passed to the ForEach-Object cmdlet, which iterates through each process and performs the following actions:

#1. Uses the Write-Host cmdlet to print the process name, private memory size, and working set size using a string that contains placeholders (denoted by $()) to access the properties of the current process being iterated through.
#2. The $() expressions are used to expand the property values within the string, allowing for a more organized and readable output.

#Therefore, the output of this code snippet would be something like:
#chrome 1521728 231556
#explorer 204800 102400
#system 0 14336
#svchost 1097728 77824
#cmd 1097728 35840
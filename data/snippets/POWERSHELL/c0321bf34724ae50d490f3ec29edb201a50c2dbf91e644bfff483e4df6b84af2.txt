# This function checks if the user is an administrator
Function Check-Admin {
<#
.SYNOPSIS
Checks if the current user has administrator rights.
.DESCRIPTION
This function uses the 'net session' command to check if the current user has administrator rights. If the user is not an administrator, it will prompt for admin credentials and then check again.
.EXAMPLE
Check-Admin
#>
 [CmdletBinding()]
Param()

# Check if the current user is an administrator
If (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    # Prompt for admin credentials
    $cred = Get-Credential -Message "Admin credentials required"
    
    # Check if the credentials are valid
    If (-NOT ([Security.Principal.WindowsPrincipal]$cred.UserName).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
        Write-Error "Invalid credentials entered"
        Break
    }
}

# Display the current user's username and administrator status
Write-Output "Current user: $($env:USERNAME)"
If (([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Output "User is an administrator"
} Else {
    Write-Output "User is NOT an administrator"
}
}
#Function to create a list of prime numbers 

#Create a function named `Generate-PrimeList` 
function Generate-PrimeList {
    #Set the parameters for the function
    [CmdletBinding()]
    param (
        [Parameter(Mandatory = $True)] #Set the mandatory parameter `Range`
        [ValidateRange(1, [int]::MaxValue)]
        [Int] $Range,
        [Parameter(Mandatory = $False)] #Set the optional parameter `LowerBound` with a default value of 0
        [Int] $LowerBound = 0,
        [Parameter(Mandatory = $False)] #Set the optional parameter `UpperBound` with a default value of the value set for `Range`
        [Int] $UpperBound = $Range
    )
    
    #Initialize an empty array to store the prime numbers
    $primeList = @()

    #Loop through the range of numbers specified by the `Range` parameter
    for ($i = $LowerBound; $i -le $UpperBound; $i++) {
        #Flag to indicate if the current number is a prime number
        $isPrime = $true 

        #Loop through all numbers between 2 and the current number, excluding 1 and the current number
        for ($j = 2; $j -lt $i; $j++) {
            #Check if the current number is divisible by any number other than 1 and itself
            if ($i % $j -eq 0) {
                #If it is, set the flag to false
                $isPrime = $false
                #Exit the loop
                break
            }
        }

        #If the flag is still true, add the current number to the prime list array
        if ($isPrime) {
            $primeList += $i
        }
    }

    #Return the prime list array
    return $primeList
}

#Call the function and store the output in the $output variable for later use
$output = Generate-PrimeList -Range 100

#Print the output to the console
Write-Host "The prime numbers between 1 and 100 are:"
Write-Host $output
# This code snippet uses PowerShell to search for all files with a specific extension in a directory and its subdirectories, then rename them to include the parent directory's name.

# Import the necessary modules:
Import-Module Microsoft.PowerShell.Management

# Set the directory path:
$directory = "C:\Users\Username\Documents"

# Define the file extension to search for:
$extension = "*.txt"

# Get all files with the specified extension in the directory and its subdirectories:
$files = Get-ChildItem -Path $directory -Filter $extension -Recurse

# Loop through each file:
foreach ($file in $files) {
    # Get the full file path:
    $filePath = $file.FullName

    # Get the parent directory's name:
    $parentDir = $file.Directory.Name

    # Create a new file name by adding the parent directory's name before the original file name:
    $newName = "$parentDir-$($file.Name)"

    # Rename the file:
    Rename-Item -Path $filePath -NewName $newName
}
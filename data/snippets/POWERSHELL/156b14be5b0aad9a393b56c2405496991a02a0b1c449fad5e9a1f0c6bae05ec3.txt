# This code snippet is a Powershell script that allows for bulk renaming of files by replacing a specific string in the file names.
# It uses a combination of regular expressions, loops, and conditionals to accomplish the task.

# Set the directory path where the files to be renamed are located.
# This can be changed to any existing directory path on the local machine.
$directory = "C:\Users\Example\Documents\Files"

# Set the string to be replaced in the file names.
# This can be changed to any string you want to replace.
$oldString = "old"

# Set the new string to replace the old string in the file names.
# This can be changed to any new string you want to use.
$newString = "new"

# Get all the files in the chosen directory.
$files = Get-ChildItem $directory

# Loop through each file in the directory.
foreach ($file in $files) {
    # Check if the file name contains the old string.
    if ($file.Name -match $oldString) {
        # Use regular expressions to replace the old string with the new string in the file name.
        # The '-replace' operator replaces all instances of the old string.
        $newFileName = $file.Name -replace $oldString, $newString

        # Use the '-Path' parameter to specify the full path to the file, including the file name.
        # Use the '-NewName' parameter to specify the new file name for the file.
        # The '-Confirm' parameter prompts the user to confirm the renaming of each file.
        # The '-Force' parameter overwrites any existing files with the new file names. 
        Rename-Item -Path $file.FullName -NewName $newFileName -Confirm -Force

        # Output the renamed file name for confirmation.
        Write-Output "Renamed file: $newFileName"
    }
}
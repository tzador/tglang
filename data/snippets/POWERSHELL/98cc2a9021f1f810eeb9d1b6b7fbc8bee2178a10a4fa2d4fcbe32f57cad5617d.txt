:
 
# This is a PowerShell function that converts a number into its binary representation.
 
function ConvertTo-Binary {
    param(
        [Parameter(Mandatory=$true)]
        [int]$number
    )
 
    $binary = @()
    $divisor = 2
 
    while ($number -gt 0) {
        $remainder = $number % $divisor
        $number = [int]($number / $divisor)
        [array]::Insert($binary, 0, $remainder)
    }
 
    return $binary -join ''
}
 
# This is a PowerShell function that takes in a binary number and converts it to its decimal form.
 
function ConvertTo-Decimal {
    param(
        [Parameter(Mandatory=$true)]
        [string]$binary
    )
 
    $decimal = 0
    $index = [int]($binary.Length - 1)
 
    foreach ($bit in $binary) {
        if ($bit -eq '1') {
            $decimal += [int]::Pow(2, $index)
        }
        $index--
    }
 
    return $decimal
}
 
# Example usage:
# Convert the number 27 to binary
$binaryNumber = ConvertTo-Binary -number 27
Write-Host "Binary representation of 27: $binaryNumber"
 
# Convert the binary number 11011 to decimal
$decimalNumber = ConvertTo-Decimal -binary '11011'
Write-Host "Decimal form of 11011: $decimalNumber"
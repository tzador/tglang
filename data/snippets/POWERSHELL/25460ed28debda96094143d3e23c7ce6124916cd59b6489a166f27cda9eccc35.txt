# This is a complex code snippet that generates a random password with different character sets using Powershell
# It takes in a parameter for password length and uses arrays to generate the password

param(
    [Parameter(Mandatory=$true, Position=0)]
    [ValidateNotNullOrEmpty()]
    [int]$length
)

# Declaration of character sets
[char[]]$lower = "abcdefghijklmnopqrstuvwxyz".ToCharArray()
[char[]]$upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray()
[char[]]$numbers = "0123456789".ToCharArray()
[char[]]$special = "!Â£$%&*-@+=_".ToCharArray()

# Initialize empty array for password
$password = @()

# Generate random characters from each set and add to password array
$i = 0
while($password.Length -ne $length){
    # Pick a random character from each set
    $lowerChar = $lower[(Get-Random -Maximum $lower.Length)]
    $upperChar = $upper[(Get-Random -Maximum $upper.Length)]
    $numberChar = $numbers[(Get-Random -Maximum $numbers.Length)]
    $specialChar = $special[(Get-Random -Maximum $special.Length)]

    # Add the characters to the password array
    $password += $lowerChar
    $password += $upperChar
    $password += $numberChar
    $password += $specialChar

    # Increase counter
    $i++
}

# Shuffle the password array and convert to string
$password = $password | Get-Random -Count $length | Out-String

# Print the randomly generated password
Write-Output "Randomly generated password with $length characters: $password"
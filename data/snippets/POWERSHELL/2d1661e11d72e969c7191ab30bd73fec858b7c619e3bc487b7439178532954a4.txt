# The following code snippet creates a custom function that checks if a given string is a palindrome

Function Is-Palindrome {
    <# 
    .SYNOPSIS
        Checks if the given string is a palindrome
    .DESCRIPTION
        This function takes in a string, removes all non-alphanumeric characters, and checks if the remaining characters form a palindrome.
    .PARAMETER InputString
        The string that needs to be checked
    .EXAMPLE
        Is-Palindrome "race car" 
        Output: True

        Is-Palindrome "not a palindrome" 
        Output: False
    #>

    param([string]$InputString)

    # Convert the string to lowercase and remove all non-alphanumeric characters
    $CleanString = $InputString.ToLower() -replace '[^a-z0-9]'

    # Loop through the string, checking if each character is the same as the character at the opposite end of the string
    for ($i=0; $i -lt $CleanString.Length/2; $i++) {
        if ($CleanString[$i] -ne $CleanString[$CleanString.Length-1-$i]) {
            return $false
        }
    }

    # If the loop completes without returning false, the string is a palindrome
    return $true

}
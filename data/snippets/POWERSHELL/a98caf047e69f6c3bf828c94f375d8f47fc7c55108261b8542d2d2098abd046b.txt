function Get-FolderSize {
<#
.SYNOPSIS
This function calculates the size of a folder in bytes and outputs the result in MB and GB.
.DESCRIPTION
The Get-FolderSize function takes in a folder path as a parameter and calculates the size of the folder in bytes. It then converts the result into MB and GB for easier understanding and outputs the result.
.PARAMETER Path
The Path parameter specifies the folder path you want to calculate the size of.
.EXAMPLE
PS C:\> Get-FolderSize -Path "C:\Users\John\Documents"
This example calculates the size of the Documents folder in John's user profile and outputs the result in MB and GB.
#>
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $true,
                   ValueFromPipeline = $true,
                   ValueFromPipelineByPropertyName = $true)]
        [Alias('FullName')]
        [System.IO.DirectoryInfo]$Path
    )
    Begin {
        # Initialize variables for folder size, MB and GB conversion
        $size = 0
        $mb = 1024 * 1024
        $gb = $mb * 1024
        $folderSize = New-Object PSObject
    }
    Process {
        # Get the size of all files in the folder
        Get-ChildItem $Path -Recurse -Force | ForEach-Object {
            $size += $_.Length
        }
        # Convert size into MB and GB
        $convertedSizeMB = $size / $mb
        $convertedSizeGB = $size / $gb
        # Add properties to output object
        $folderSize | Add-Member -MemberType NoteProperty -Name 'FolderSizeInBytes' -Value $size
        $folderSize | Add-Member -MemberType NoteProperty -Name 'FolderSizeInMB' -Value $convertedSizeMB
        $folderSize | Add-Member -MemberType NoteProperty -Name 'FolderSizeInGB' -Value $convertedSizeGB
        # Output the result
        $folderSize
    }
    End {
        # Clear variables
        $size = $null
        $mb = $null
        $gb = $null
        $folderSize = $null
    }
}
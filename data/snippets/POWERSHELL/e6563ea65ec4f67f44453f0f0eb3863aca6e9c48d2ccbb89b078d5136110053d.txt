<#
    FUNCTION: Convert-CSVtoJSON
    DESCRIPTION: This function converts a CSV file to JSON format.
    PARAMETERS:
        [System.IO.FileInfo] $CSVFile: The path of the CSV file to be converted.
        [string] $JSONPath: The path where the JSON file will be saved.
    EXAMPLE USAGE: Convert-CSVtoJSON -CSVFile C:\Users\JohnDoe\Downloads\data.csv -JSONPath C:\Users\JohnDoe\Documents\output.json
#>

Function Convert-CSVtoJSON {
    [CmdletBinding()]
    param(
        [System.IO.FileInfo] $CSVFile,
        [string] $JSONPath
    )
    Begin {
        # Check if CSV file exists
        if (!(Test-Path $CSVFile)) {
            Write-Error "Cannot find CSV file at path $($CSVFile)"
            return
        }
        # Create empty array for CSV data
        $CSVData = @()
    }
    Process {
        # Import CSV file and convert it to PowerShell object
        $CSVContent = Import-Csv $CSVFile
        # Create an empty hashtable to hold JSON data
        $JSONData = @{}
        # Loop through each row of the CSV file
        foreach ($Row in $CSVContent) {
            # Create an empty object to hold row data
            $JSONObject = New-Object -TypeName PSObject
            # Loop through each column of the CSV file
            foreach ($Column in $Row.PSObject.Properties) {
                # Add column name and value to row object
                $JSONObject | Add-Member -MemberType NoteProperty -Name $Column.Name -Value $Column.Value
            }
            # Add row object to CSV data array
            $CSVData += $JSONObject
        }
        # Convert CSV data array to JSON string
        $JSONString = $CSVData | ConvertTo-Json
        # Save JSON string to file
        $JSONString | Out-File $JSONPath
    }
    End {
        Write-Output "CSV file successfully converted to JSON format and saved at $($JSONPath)"
    }
}

# Example usage
Convert-CSVtoJSON -CSVFile C:\Users\JohnDoe\Downloads\data.csv -JSONPath C:\Users\JohnDoe\Documents\output.json
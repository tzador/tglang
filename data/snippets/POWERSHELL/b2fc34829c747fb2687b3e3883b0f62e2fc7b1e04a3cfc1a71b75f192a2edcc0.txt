# This code snippet creates a function called 'Validate-IPAddress' that checks if an input is a valid IP address.
# The function takes in a single parameter called 'IpAddress' of type 'String'.

function Validate-IPAddress ([String] $IpAddress) {

    # Split the input IP address string into an array, separated by periods.
    $IpArray = $IpAddress.Split(".")

    # Check if the array has exactly four elements.
    if ($IpArray.Length -ne 4) {
        Write-Host "Invalid IP address. Please enter an IP address in the format: xxx.xxx.xxx.xxx." -ForegroundColor Red
        return
    }

    # Loop through each element in the array and check if it is a valid number between 0 and 255.
    foreach ($num in $IpArray) {
        if ($num -match '^\d+$' -and $num -ge 0 -and $num -le 255) {
            continue
        } else {
            Write-Host "Invalid IP address. Please enter an IP address in the format: xxx.xxx.xxx.xxx." -ForegroundColor Red
            return
        }
    }

    # If all checks pass, the input is a valid IP address.
    Write-Host "IP address $IpAddress is valid." -ForegroundColor Green
}

# Example usage:
# Valid IP address
Validate-IPAddress "192.168.0.1"

# Output:
# IP address 192.168.0.1 is valid.


# Invalid IP address with less than 4 numbers
Validate-IPAddress "192.168.1"

# Output:
# Invalid IP address. Please enter an IP address in the format: xxx.xxx.xxx.xxx.


# Invalid IP address with a number greater than 255
Validate-IPAddress "192.168.256.1"

# Output:
# Invalid IP address. Please enter an IP address in the format: xxx.xxx.xxx.xxx.
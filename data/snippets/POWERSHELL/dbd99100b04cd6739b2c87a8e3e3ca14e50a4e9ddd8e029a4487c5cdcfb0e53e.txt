# Define function to check if string is a palindrome
Function Check-Palindrome {
    [CmdletBinding()]
    Param(
        [Parameter(
            Mandatory=$true,
            ValueFromPipeline=$true)]
        [String]$InputString
    )
    Begin {
        Write-Verbose "Starting palindrome check..."
        # Initialize empty variables for storing reversed string and original string
        $reversedString = ""
        $originalString = ""
    }
    Process {
        # Convert string to lowercase and remove spaces
        $inputString = $InputString.ToLower().Trim()
        # Loop through each character in input string and add to original string variable
        For ($i = 0; $i -lt $inputString.Length; $i++) {
            $originalString += $inputString[$i]
            # The reverse loop will add each character to the beginning of the reversed string,
            # effectively reversing the input string
            For ($j = $inputString.Length - $i - 1; $j -ge 0; $j--) {
                $reversedString += $inputString[$j]
            }
        }
        # Compare original string to reversed string to determine if it is a palindrome
        If ($originalString -eq $reversedString) {
            Write-Host "$InputString is a palindrome!"
        }
        Else {
            Write-Host "$InputString is not a palindrome"
        }
    }
    End {
        Write-Verbose "Palindrome check complete."
    }
}
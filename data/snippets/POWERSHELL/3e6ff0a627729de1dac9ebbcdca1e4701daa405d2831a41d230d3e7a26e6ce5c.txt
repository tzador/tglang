# This script checks for running processes and displays the number of processes for each user
# It also creates an output file with the process information

# Define variables
$processes = Get-Process # get all running processes

# Create an empty hashtable to store users and number of processes
$users = @{}

# Loop through all processes
foreach ($process in $processes) {
    # Check if user is already in hashtable
    if ($users.ContainsKey($process.UserName)) {
        # If yes, increment the number of processes for that user by 1
        $users[$process.UserName] = $users[$process.UserName] + 1
    }
    else {
        # If not, add the user to the hashtable with a value of 1
        $users[$process.UserName] = 1
    }
}

# Sort the hashtable by the number of processes per user in descending order
$sortedUsers = $users.GetEnumerator() | Sort-Object -Property Value -Descending

# Loop through the sorted hashtable
foreach ($user in $sortedUsers) {
    # Display the number of processes for each user
    Write-Output "$($user.Value) processes running for user $($user.Name)"
}

# Create an output file with the process information
$processes | Out-File -FilePath "process_information.txt"
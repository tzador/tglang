# This function takes in a string and checks if it is a palindrome
function Check-Palindrome {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$true)] # parameter for the input string
        [string] $InputString
    )

    # Store the input string in a variable
    $str = $InputString

    # Convert the string to an array of characters
    $charArray = $str.ToCharArray()

    # Create an empty array to store the reverse of input string
    $reverseArray = @()

    # Loop through the characters in the string 
    for($i = $charArray.Length - 1; $i -ge 0; $i--){
        # Add each character in the string to the reverse array
        $reverseArray += $charArray[$i]
    }

    # Convert the reverse array back to a string
    $reverseStr = -join $reverseArray

    # Check if the original and reverse strings are equal 
    if($str -eq $reverseStr){
        Write-Host ($InputString + " is a palindrome")
    } else{
        Write-Host ($InputString + " is not a palindrome")
    }
}

# Example input and output
Check-Palindrome -InputString "radar"
# Output: "radar is a palindrome"

Check-Palindrome -InputString "code"
# Output: "code is not a palindrome"
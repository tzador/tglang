function Get-RandomStrings {
  <#
  .Synopsis
  Generates a specified number of random strings.
  .DESCRIPTION
  This function generates a specified number of random strings of a specified length.
  .EXAMPLE
  Get-RandomStrings -Count 5 -Length 10
  Generates 5 random strings with a length of 10 characters each.
  .EXAMPLE
  Get-RandomStrings -Count 5 -Length 10 -LowerCase
  Generates 5 random strings with a length of 10 characters each, using only lowercase letters.
  .PARAMETER Count
  Specifies the number of random strings to generate.
  .PARAMETER Length
  Specifies the length of each random string.
  .PARAMETER LowerCase
  Forces the generated strings to only use lowercase letters.
  #>
  
  [CmdletBinding()]
  param(
    [Parameter(Mandatory)]
    [ValidateNotNullOrEmpty()]
    [int]$Count,

    [Parameter(Mandatory)]
    [ValidateNotNullOrEmpty()]
    [int]$Length,

    [Switch]$LowerCase
  )

  # Create an array to store the generated strings
  $randomStrings = @()

  # Loop through the specified number of times to generate the random strings
  for ($i = 1; $i -le $Count; $i++) {

    # Create empty string variable
    $randomString = ""

    # Generate a random number for each character in the string
    for ($j = 1; $j -le $Length; $j++) {

      # Generate a random number between 0 and 26 (to represent a letter in the alphabet)
      $randomNum = Get-Random -Minimum 0 -Maximum 26

      # Convert the random number to a character using ASCII code
      $randomLetter = [char](97 + $randomNum)

      # Add the character to the string
      $randomString += $randomLetter
    }

    # If the lowercase switch is used, convert the string to lowercase
    if ($LowerCase) {
      $randomString = $randomString.ToLower()
    }

    # Add the string to the array
    $randomStrings += $randomString
  }

  # Output the array of random strings
  $randomStrings
}
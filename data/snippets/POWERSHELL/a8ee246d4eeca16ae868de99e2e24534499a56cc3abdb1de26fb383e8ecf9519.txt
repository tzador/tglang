# This code snippet utilizes PowerShell to generate a random password based on user-specified length and complexity

# Define variables for password length, complexity, and character sets
$length = 16
$complexity = "medium"
$lowercase = "abcdefghijkmnopqrstuvwxyz"
$uppercase = "ABCDEFGHJKLMNPQRSTUVWXYZ"
$numbers = "123456789"
$specialChars = "!@#$%&*"

# Function to generate a random password based on specified length and complexity
Function Generate-Password {
    param(
        [int]$Length,
        [string]$Complexity
    )

    $password = ""

    # Loop through each character in the password length
    for ($i = 0; $i -lt $Length; $i++) {

        # Generate a random number to select a character set based on complexity
        $rand = Get-Random -Minimum 1 -Maximum 4

        # Select a character set based on the random number
        switch ($rand) {
            1 { $charSet = $lowercase }
            2 { $charSet = $uppercase }
            3 { $charSet = $numbers }
            4 { $charSet = $specialChars }
        }

        # Generate a random index within the character set
        $index = Get-Random -Minimum 0 -Maximum ($charSet.Length-1)

        # Add a character from the selected character set to the password
        $password += $charSet[$index]
    }

    # Return the generated password
    return $password
}

# Call the Generate-Password function and assign the output to a variable
$newPassword = Generate-Password -Length $length -Complexity $complexity

# Output the generated password
Write-Output $newPassword
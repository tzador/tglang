# This code snippet creates a function to retrieve and display computer information

param (
    [string]$ComputerName = "localhost" # sets default computer name to local machine if none provided
)

Function Get-ComputerInfo {
    [cmdletbinding()]
    param (
        [parameter(Mandatory=$true)] # sets parameter as mandatory to run function
        [string]$ComputerName # allows user to specify which computer to retrieve information from
    )

    # gets basic computer information and stores it in variables
    [string]$Hostname = Get-WmiObject -ComputerName $ComputerName -Class Win32_ComputerSystem | Select-Object -ExpandProperty Name
    [string]$OS = Get-WmiObject -ComputerName $ComputerName -Class Win32_OperatingSystem | Select-Object -ExpandProperty Caption
    [string]$Processor = Get-WmiObject -ComputerName $ComputerName -Class Win32_Processor | Select-Object -ExpandProperty Name
    [string]$RAM = [math]::Round((Get-WmiObject -ComputerName $ComputerName -Class Win32_OperatingSystem | Select-Object -ExpandProperty TotalVisibleMemorySize) / 1MB, 2)
    [int]$CPUCores = Get-WmiObject -ComputerName $ComputerName -Class Win32_Processor | Select-Object -ExpandProperty NumberOfCores

    # displays retrieved information in a formatted string
    Write-Output "Computer Name: $Hostname"
    Write-Output "Operating System: $OS"
    Write-Output "Processor: $Processor"
    Write-Output "RAM: $RAM GB"
    Write-Output "CPU Cores: $CPUCores"
}

# calls the function, passing in the specified computer name or the default localhost
Get-ComputerInfo -ComputerName $ComputerName
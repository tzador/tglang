<#
    .SYNOPSIS
    This function returns the total size of a given directory and all nested directories.
    
    .DESCRIPTION
    This function uses the Get-ChildItem cmdlet to recursively iterate through all directories and files within a given directory.
    It then uses the Measure-Object cmdlet to get the total size of all files within the directory.
    The output is displayed in KB, MB, or GB depending on the total size.
    
    .PARAMETER path
    The path of the directory to get the size of.
    
    .EXAMPLE
    Get-DirectorySize -path C:\Users\John\Documents
#>

Function Get-DirectorySize {
    
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$true, Position=0)]
        [ValidateScript({Test-Path $_ -PathType Container})]
        [string]$path
    )
    
    # Get all items within the given directory
    $items = Get-ChildItem -Path $path -Recurse
    
    # Get the total size of all files
    $size = $items | Measure-Object -Property Length -Sum
    $totalSize = $size.Sum
    
    # Determine the appropriate unit (KB, MB, or GB) based on the total size
    if($totalSize -ge 1GB) {
        $totalSize = "{0:N2} GB" -f ($totalSize / 1GB)
    }
    elseif($totalSize -ge 1MB) {
        $totalSize = "{0:N2} MB" -f ($totalSize / 1MB)
    }
    else {
        $totalSize = "{0:N2} KB" -f ($totalSize / 1KB)
    }
    
    # Output the result
    Write-Output "The total size of $path is $totalSize"
}

# Example usage
Get-DirectorySize -path C:\Users\John\Documents
# Setup variables for file input and output paths
$inputPath = "C:\Users\example\input.txt"
$outputPath = "C:\Users\example\output.txt"

# Create hash table to store unique words and their counts
$wordCounts = @{}

# Read input file and split into array of words
$inputFile = Get-Content -Path $inputPath -Raw
$words = $inputFile -split(" ")

# Loop through each word and add it to the hash table
foreach ($word in $words) {
    # Check if word already exists in hash table
    if ($wordCounts.ContainsKey($word)) {
        # If it exists, increment its count by 1
        $wordCounts[$word]++
    } else {
        # If it doesn't exist, add it to the hash table with a count of 1
        $wordCounts[$word] = 1
    }
}

# Sort the hash table by value (count)
$sortedCounts = $wordCounts.GetEnumerator() | Sort-Object -Property Value -Descending

# Open output file for writing
$outputFile = [System.IO.File]::OpenWrite($outputPath)
$outputWriter = New-Object -TypeName System.IO.StreamWriter -ArgumentList $outputFile

# Loop through the sorted hash table and write each unique word and its count to the output file
foreach ($entry in $sortedCounts) {
    $word = $entry.Key
    $count = $entry.Value

    $outputLine = "$word - $count`n"
    $outputWriter.Write($outputLine)
}

# Close output file
$outputWriter.Close()
# This code snippet calculates the factorial of a given number using a recursive function

# Define the recursive factorial function
function Factorial {
    param (
        [Parameter(Mandatory=$true)] # Specifies that the parameter is required
        [int]$n # Declares the input number for which factorial will be calculated
    )
    if ($n -le 1) { # Base case - if input number is 0 or 1, return 1
        return 1
    } else { # Recursive case - call the factorial function with n-1 and multiply it with n to get the factorial
        return $n * (Factorial($n-1))
    }
}

# Define a recursive function to prompt user for input until a valid positive integer is entered
function Get-ValidInteger {
    param (
        [Parameter(Mandatory=$true)]
        [string]$Message # Prompt message for user
    )
    $value = Read-Host $Message # Reads user input
    if ($value -match '^\d+$') { # Checks if input is a numeric value
        if ([int]$value -gt 0) { # Checks if input is a positive integer
            return [int]$value # If input is valid, return the value
        } else { # If input is not a positive integer, prompt user again
            Write-Host "Please enter a positive integer."
            return Get-ValidInteger -Message $Message
        }
    } else { # If input is not numeric, prompt user again
        Write-Host "Please enter a numeric value."
        return Get-ValidInteger -Message $Message
    }
}

# Prompt user to enter input
$input = Get-ValidInteger -Message "Enter a positive integer to calculate its factorial:"

# Calculate and output the factorial of input
$result = Factorial($input)
Write-Host "The factorial of $input is $result."
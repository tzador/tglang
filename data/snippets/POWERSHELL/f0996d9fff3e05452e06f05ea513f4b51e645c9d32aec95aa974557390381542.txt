# Function to generate random password with specified length
Function Generate-RandomPassword {
    Param([int]$length)

    # Create an array of all possible characters 
    $characters = @('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
                    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
                    '0','1','2','3','4','5','6','7','8','9','!','@','#','$','%','^','&','*','(',')','-','_','+','=','{','}',',','.','/','<','>','?','[',']','|','~')

    # Get a random index value from the array
    $index = Get-Random -Minimum 0 -Maximum $characters.Length 

    # Initialize an empty string to hold the password
    $password = ""

    # Loop through the specified length and add a random character from the array to the password string
    for ($i=0; $i -lt $length; $i++) {
        $password = $password + $characters[$index]
        $index = Get-Random -Minimum 0 -Maximum $characters.Length 
    }

    # Return the generated password
    return $password
}

# Call the function with a length of 10 and store the result in a variable
$randomPassword = Generate-RandomPassword -length 10

# Print the generated password to the console
Write-Host $randomPassword
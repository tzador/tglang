# This code snippet uses Powershell to retrieve and display information from the Active Directory.

# Import the Active Directory module
Import-Module ActiveDirectory

# Set the domain to be queried
$domain = 'yourdomain.com'

# Set the LDAP filter to select all users except disabled or expired accounts
$filter = "(|(enabled=TRUE)(accountExpires=0))"

# Set the search scope to be the entire domain
$searchScope = 'Subtree'

# Set the properties to retrieve for each user
$properties = @(
    'SamAccountName',
    'DisplayName',
    'EmployeeID',
    'Department',
    'Manager',
    'Title',
    'EmailAddress',
    'LastLogonDate',
    'Enabled'
)

# Use the Get-ADUser cmdlet to retrieve the users that match the search criteria
$users = Get-ADUser -Filter $filter -SearchScope $searchScope -Properties $properties -Server $domain

# Loop through the users and display the information
foreach ($user in $users) {

    # Display the user's name
    Write-Host "Name: $($user.DisplayName)"

    # Display the user's SamAccountName
    Write-Host "Username: $($user.SamAccountName)"

    # Display the user's Employee ID
    Write-Host "Employee ID: $($user.EmployeeID)"

    # Display the user's department
    Write-Host "Department: $($user.Department)"

    # Display the user's manager
    Write-Host "Manager: $($user.Manager)"

    # Display the user's title
    Write-Host "Title: $($user.Title)"

    # Display the user's email address
    Write-Host "Email Address: $($user.EmailAddress)"

    # Display the user's last logon date
    Write-Host "Last Logon Date: $($user.LastLogonDate)"

    # Display whether the user's account is enabled or disabled
    if ($user.Enabled -eq $true) {
        Write-Host "Account Status: Enabled"
    } else {
        Write-Host "Account Status: Disabled"
    }

    # Add a blank line for clarity
    Write-Host
}

# Notify the user of how many results were found
Write-Host "Total results found: $($users.Count)"
# This code snippet generates a list of prime numbers up to a given value

# Define the function to check if a number is prime
function isPrime ($num) {
    $isPrime = $true
    for ($i=2; $i -le [math]::Sqrt($num); $i++) {
        if ($num % $i -eq 0) {
            $isPrime = $false
            break
        }
    }
    return $isPrime
}

# Define the function to generate a list of prime numbers
function generatePrime ($upperBound) {
    # Initialize an empty array to store the prime numbers
    $primeNumbers = @()
    # Loop through all numbers from 2 to the upperBound
    for ($i=2; $i -le $upperBound; $i++) {
        # Check if the current number is prime
        if (isPrime($i)) {
            # If the number is prime, add it to the array
            $primeNumbers += $i
        }
    }
    # Return the array of prime numbers
    return $primeNumbers
}

# Ask the user for the upper bound
$upperBound = Read-Host "Enter the upper bound: "

# Validate the user input
if ($upperBound -match "^\d+$") {
    # If the input is valid, generate the list of prime numbers
    $primeNumbers = generatePrime($upperBound)
    # Print the list of prime numbers
    "List of prime numbers up to $upperBound:"
    $primeNumbers -join ", "
} else {
    # If the input is not valid, print an error message
    "Invalid input. Please enter a positive integer."
}
# This code snippet uses the Get-Process cmdlet to retrieve a list of running processes
# and outputs it to a CSV file

# Get the current date and time and format it
$dateTime = (Get-Date).toString("MM-dd-yyyy-hh-mm-ss")

# Set the output file name
$outputFile = "$PSScriptRoot/Process List $dateTime.csv"

# Use the Get-Process cmdlet to retrieve a list of running processes
$processes = Get-Process

# Initialize an empty array to store process objects
$processList = @()

# Loop through each process and add it to the processList array
foreach ($process in $processes)
{
    # Create a custom object for each process
    $processObject = New-Object -TypeName PSObject
    # Add properties and values to the custom object
    $processObject | Add-Member -MemberType NoteProperty -Name "Process Name" -Value $process.Name
    $processObject | Add-Member -MemberType NoteProperty -Name "Process ID" -Value $process.Id
    $processObject | Add-Member -MemberType NoteProperty -Name "CPU Usage" -Value $process.CPU
    $processObject | Add-Member -MemberType NoteProperty -Name "Memory Usage" -Value $process.Mem
    # Add the custom object to the processList array
    $processList += $processObject
}

# Export the processList array to a CSV file
$processList | Export-Csv -Path $outputFile -NoTypeInformation

# Display a success message
Write-Host "Process list successfully exported to $outputFile"
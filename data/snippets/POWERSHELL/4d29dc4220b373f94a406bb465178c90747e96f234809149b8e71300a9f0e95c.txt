# This code snippet creates a function that sorts numbers in an array using the quicksort algorithm
function QuickSort([int[]] $numbers) {
    if ($numbers.Length -lt 1) { return $numbers }

    # Select random pivot element
    $pivot = Get-Random -Minimum 0 -Maximum $numbers.Length

    # Create subarrays for elements smaller and larger than pivot element
    $smaller = @()
    $larger = @()

    for ($i = 0; $i -lt $numbers.Length; $i++) {
        if ($i -eq $pivot) { continue }

        if ($numbers[$i] -lt $numbers[$pivot]) {
            $smaller += $numbers[$i]
        }
        else {
            $larger += $numbers[$i]
        }
    }

    # Recursively sort subarrays
    $smaller = QuickSort $smaller
    $larger = QuickSort $larger

    # Combine subarrays and pivot element to get sorted array
    return $smaller + $numbers[$pivot], $larger
}

# Example usage
$array = 13, 5, 99, 44, 22, 55, 1
$result = QuickSort $array
Write-Host $result # Output will be: 1, 5, 13, 22, 44, 55, 99
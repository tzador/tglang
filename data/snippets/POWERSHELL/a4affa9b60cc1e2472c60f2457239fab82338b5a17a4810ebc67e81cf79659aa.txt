function Copy-Directory {
<#
.SYNOPSIS
This function copies a directory and all its contents to a specified location.

.PARAMETER SourcePath
The path of the directory to be copied.

.PARAMETER DestinationPath
The path where the directory and its contents will be copied to.

.EXAMPLE
Copy-Directory "C:\Users\John\Documents" "D:\Backup\Documents"

This will copy the directory "Documents" and all its contents from the "C:\Users\John" directory to the "D:\Backup" directory.

.NOTES
Created by: John Smith
Created on: 01/01/2021
#>

    [CmdletBinding()]
    param (
        [Parameter(Position = 0,
            Mandatory = $true,
            ValueFromPipeline = $true,
            ValueFromPipelineByPropertyName = $true)]
        [string]$SourcePath,

        [Parameter(Position = 1,
            Mandatory = $true)]
        [ValidateScript({ Test-Path $_ -PathType Container })]
        [string]$DestinationPath

    )

    # Check if the source directory exists
    if (-not (Test-Path $SourcePath -PathType Container)) {
        Write-Error "Source directory does not exist."
        exit
    }

    # Create the destination directory if it doesn't already exist
    if (-not (Test-Path $DestinationPath -PathType Container)) {
        New-Item $DestinationPath -ItemType Directory | Out-Null
    }

    # Get the new destination path
    $NewDestinationPath = Join-Path -Path $DestinationPath -ChildPath $((Get-Item $SourcePath).Name)

    # Copy all files from source directory to destination directory
    Get-ChildItem -Path $SourcePath -Recurse | Copy-Item -Destination $NewDestinationPath -Container -Force

    Write-Output "Directory '$SourcePath' copied to '$NewDestinationPath'."
}

# End of Copy-Directory function #

# Example usage:
# Copy-Directory "C:\Users\John\Desktop\Data" "D:\Backup\Data"
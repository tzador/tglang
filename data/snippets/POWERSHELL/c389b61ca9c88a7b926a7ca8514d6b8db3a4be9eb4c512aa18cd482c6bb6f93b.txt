# Define a function to check if a given number is prime
function Check-Prime {
    param (
        [int]$number
    )
    # Check if the number is equal to 1, return false if so
    if ($number -eq 1) {
        return $false
    }
    # Loop through possible factors of the number starting from 2, up to the square root of the number
    for ($i = 2; $i -le [math]::sqrt($number); $i++) {
        # Check if the current factor evenly divides the number, if so, it is not prime, return false
        if ($number % $i -eq 0) {
            return $false
        }
    }
    # If the loop has completed without returning false, the number is prime, return true
    return $true
}

# Call the function and pass in a number to check if it is prime
Check-Prime 7
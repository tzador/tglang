# This code snippet creates a custom object, sorts and filters it
# It also uses pipeline cmdlets to manipulate the data in a concise manner

# Create an array of objects with different properties
$objects = @(
  [PSCustomObject]@{
    Name = "John"
    Age = 25
    Gender = "Male"
  },
  [PSCustomObject]@{
    Name = "Alice"
    Age = 31
    Gender = "Female"
  },
  [PSCustomObject]@{
    Name = "Bob"
    Age = 42
    Gender = "Male"
  },
  [PSCustomObject]@{
    Name = "Sara"
    Age = 27
    Gender = "Female"
  }
)

# Use Where-Object to filter objects by gender
# Use Sort-Object to sort objects by age
$objects | Where-Object { $_.Gender -eq "Male" } | Sort-Object Age

# Output:
# Bob    42
# John   25

# Create a new property 'Status' that checks if age is greater than 30
$objects | ForEach-Object { $_ | Add-Member -MemberType NoteProperty -Name "Status" -Value (if ($_.Age -gt 30) { "Old" } else { "Young" }) }

# Use Select-Object to select only the name and status properties
$objects | Select-Object Name, Status

# Output:
# John   Young
# Alice  Old
# Bob    Old
# Sara   Young
# This script will find the total size of all the files in the given directory and its subdirectories
# Define the path of the directory to be checked ($path)

$path = "C:\Users\Example\Documents"

# Set initial value for total size variable ($totalSize)

$totalSize = 0

# Use Get-ChildItem cmdlet to retrieve all the files in the specified directory and its subdirectories
# Use the -Recurse switch to search through subdirectories
# Use the -File switch to exclude any directories from the output
# Use the pipeline operator "|" to pass the output to the ForEach-Object cmdlet

Get-ChildItem $path -Recurse -File | ForEach-Object {

    # Use the Get-ItemProperty cmdlet to retrieve the file's properties
    # Use the -Name and -Value switches to get only the Name and Length properties respectively
    # Use the pipeline operator "|" to pass the output to the Select-Object cmdlet

    $fileProperties = Get-ItemProperty $_ -Name Name, Length | Select-Object -ExpandProperty Length

    # Use the arithmetic operator "+" to add the file's size to the total size variable
    # Use the [long] type accelerator to ensure accurate calculation for large filesizes

    $totalSize += [long]$fileProperties
}

# Print the total size of all the files, in MB, rounded to two decimal places
# Use the `f` format specifier to specify the number of decimal places

Write-Host "Total size of all files in $path is" + "{0:f} MB" -f ($totalSize / 1MB)
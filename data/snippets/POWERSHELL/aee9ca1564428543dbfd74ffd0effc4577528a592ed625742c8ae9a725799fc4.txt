Function Test-PowerShell{
    
    <#
    .Synopsis
        This function is used to test the functionality of PowerShell
    .Description
        This function prints "PowerShell is working properly" to the console.
    .Example
        Test-PowerShell
    #>
    
    Write-Host "PowerShell is working properly"
    
    # Define variables for user input
    $name = Read-Host "What is your name?"
    $age = Read-Host "How old are you?"
    
    # Print personal information using string interpolation
    Write-Host "Hello, my name is $name and I am $age years old."
    
    # Create a loop to count from 1 to 10
    for($i = 1; $i -le 10; $i++){
        Write-Host $i
    }
    
    # Define a hashtable to store information
    $info = @{
        Name = $name
        Age = $age
    }
    
    # Convert hashtable to JSON and output to a file
    ConvertTo-Json -InputObject $info | Out-File -FilePath "personal_info.json"
    
    # Read JSON file and convert back to hashtable
    $json = Get-Content "personal_info.json" | ConvertFrom-Json
    
    # Print out hashtable values
    Write-Host $json.Name
    Write-Host $json.Age
    
    # Create a new directory and move the JSON file into it
    New-Item "personal_info_dir" -ItemType Directory -Force
    Move-Item "personal_info.json" -Destination "personal_info_dir"
    
    # Write a message to the console
    Write-Host "Testing complete. Check the personal_info_dir for output files."
}

# Call the function
Test-PowerShell
# This script will check the status of a specific service and perform actions based on the status

# Define the service name
$serviceName = "Print Spooler"

# Get the current status of the service
$status = Get-Service -Name $serviceName | Select-Object -ExpandProperty Status

# Check if the service is running
if($status -eq "Running"){
    Write-Output "The $serviceName service is currently running."
}
else{
    # If the service is stopped, start it
    Start-Service -Name $serviceName
    Write-Output "The $serviceName service has been started."
}

# Check if the service is set to automatically start on system boot
$autoStart = Get-CimInstance -ClassName win32_service | Where-Object {$_.Name -eq $serviceName} | Select-Object -ExpandProperty StartMode

# If the service is not set to auto-start, change the setting
if($autoStart -ne "Auto"){
    $changeAutoStart = Set-Service -Name $serviceName -StartupType Automatic
    Write-Output "The $serviceName service has been set to automatically start on system boot."
}

# Check if the service is set to delay start
$delayStart = Get-CimInstance -ClassName win32_service | Where-Object {$_.Name -eq $serviceName} | Select-Object -ExpandProperty StartMode

# If the service is not set to delay start, change the setting
if($delayStart -ne "DelayedAuto"){
    $changeDelayStart = Set-Service -Name $serviceName -StartupType DelayedAutomatic
    Write-Output "The $serviceName service has been set to delay start on system boot."
}

# Check if the service is set to pause on low battery
$pauseOnBattery = Get-CimInstance -ClassName win32_service | Where-Object {$_.Name -eq $serviceName} | Select-Object -ExpandProperty StartMode

# If the service is not set to pause on low battery, change the setting
if($pauseOnBattery -ne "ResumeOnBattery"){
    $changePauseOnBattery = Set-Service -Name $serviceName -StartupType Manual
    Write-Output "The $serviceName service has been set to manual start."
}
# This Function will search through a directory and return the total size of all files and subdirectories
Function Get-DirectorySize {
    [CmdletBinding()]
    Param(
        # Path to directory
        [Parameter(Position=0, Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string] $Path,
        
        # Whether to include subdirectories in the calculation
        [switch] $Recurse
    )

    # Get all files in the given directory
    $files = Get-ChildItem -Path $Path -File

    # Initialize variable to hold total size
    $totalSize = 0

    # Loop through each file and add its size to the total
    foreach ($file in $files) {
        $totalSize += $file.Length
    }

    # If recurse switch is given, get all subdirectories and loop through each one, adding the size of all files in each to the total
    if ($Recurse) {
        $subdirectories = Get-ChildItem -Path $Path -Directory
        foreach ($subdirectory in $subdirectories) {
            $totalSize += (Get-DirectorySize -Path $subdirectory.FullName -Recurse).totalSize
        }
    }

    # Return the total size as a formatted string
    return "Total size: {0:N2} MB" -f ($totalSize / 1MB)
}
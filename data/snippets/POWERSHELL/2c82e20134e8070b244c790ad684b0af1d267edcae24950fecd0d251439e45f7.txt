# This function searches for files within a given directory

function Search-Files {
    [CmdletBinding()]
    param (
        [Parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [ValidateScript( { Test-Path $_ } )]
        [string]$Directory,
    
        [Parameter()]
        [string]$Filter,
    
        [Parameter()]
        [int]$MaxDepth
    )
    
    begin {
        # Initialize array to hold results
        $results = @()
    }
    
    process {
        # Get all files and subdirectories within given directory
        $files = Get-ChildItem -Path $Directory -Recurse -ErrorAction SilentlyContinue
        
        # Check if filter is specified, if not, get all files
        if ($Filter) {
            $files = $files | Where-Object { $_.Extension -eq $Filter }
        }
        
        # Check if max depth is specified, if not, search all subdirectories
        if ($MaxDepth) {
            $files = $files | Where-Object { $_.FullName.Split("\").Length -le $MaxDepth + $Directory.Split("\").Length }
        }
        
        # Add results to array
        $results += $files
    }
    
    end {
        # Output results
        Write-Output $results
    }
}

# Example usage: Search for all .txt files within the C:\Users\Admin directory with a maximum depth of 3

Search-Files -Directory "C:\Users\Admin" -Filter ".txt" -MaxDepth 3
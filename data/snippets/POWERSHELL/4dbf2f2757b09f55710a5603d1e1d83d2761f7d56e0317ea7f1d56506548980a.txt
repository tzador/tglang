# This script will retrieve information about all processes and their child processes on a Windows machine.
# It will output the process ID, name, CPU usage percentage, and memory usage for each process.

# Import the 'Get-Process' cmdlet from the Modules.Experimental.PowerShellProcess.Native namespace.
Import-Module -Name Microsoft.PowerShell.Management.Native

# Get all processes and their child processes, sorted by their CPU usage percentage in descending order.
Get-Process -IncludeUser -Expand Property BasePriority,ContainerId,NPM,ParentProcessId,ProcessId,SessionId,Threads |
Sort-Object -Property CPU | Select-Object -Property ProcessId,ProcessName,CPU,PrivateMemorySize64 | 
ForEach-Object {

    # Store the process ID, name, CPU usage, and memory usage in variables.
    $processId = $_.Properties["ProcessId"].Value
    $processName = $_.Properties["Name"].Value
    $cpuUsage = $_.Properties["CPU"].Value
    $memoryUsage = $_.Properties["PrivateMemorySize64"].Value
    
    # Output the process information in a formatted string.
    Write-Output "Process ID: $processId, Process Name: $processName, CPU Usage: $cpuUsage%, Memory Usage: $memoryUsage bytes"
}
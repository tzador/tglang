# Create a function that adds two numbers together
function Add-Numbers {
    [CmdletBinding()]
    param (
        [Parameter(Mandatory=$true, Position=0)]
        [ValidateNotNullorEmpty()]
        [double]$num1,
        [Parameter(Mandatory=$true, Position=1)]
        [ValidateNotNullorEmpty()]
        [double]$num2
    )
    $result = $num1 + $num2
    Write-Output "$num1 + $num2 = $result"
}
# Call the function to add 5 and 10
Add-Numbers -num1 5 -num2 10
# Output: 5 + 10 = 15

# Create a hashtable with countries and their capitals
$countries = @{
    "United States" = "Washington D.C."
    "Canada" = "Ottawa"
    "United Kingdom" = "London"
}
# Loop through the hashtable and print the country and capital
foreach($country in $countries.GetEnumerator()) {
    Write-Output "$($country.Key) - $($country.Value)"
}
# Output:
# United States - Washington D.C.
# Canada - Ottawa
# United Kingdom - London

# Download a file from a web URL
$url = "https://www.example.com/file.txt"
$outputPath = "C:\Users\Username\Downloads\file.txt"
Invoke-RestMethod -Uri $url -OutFile $outputPath
# The file will be downloaded and saved to the specified path.

# Create a custom object with properties and methods
$person = New-Object PSObject -Property @{
    Name = "John Doe"
    Age = 30
    Occupation = "Engineer"
}
$person | Add-Member -MemberType ScriptMethod -Name "Introduce" -Value {
    Write-Output "Hi, my name is $($this.Name) and I am a $($this.Age)-year-old $($this.Occupation)."
}
# Call the method to introduce the person
$person.Introduce()
# Output: Hi, my name is John Doe and I am a 30-year-old Engineer.
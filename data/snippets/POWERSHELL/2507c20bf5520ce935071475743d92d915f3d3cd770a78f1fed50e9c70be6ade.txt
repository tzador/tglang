param ( #param block allows for declaration of parameters in script
    [parameter(Mandatory=$true)] #mandatory parameter, must be specified to run script
    $name, #declares variable to store value passed into parameter
    [parameter(Mandatory=$true)]
    $age,
    [parameter(Mandatory=$false)]
    $occupation #optional parameter, does not have to be specified to run script
)

function Greet-User { #defines function to be used in script
    [CmdletBinding()] #enables advanced function features
    param ( #param block allows for declaration of parameters in function
        [parameter(Mandatory=$true)] #mandatory parameter, must be specified when function is called
        $name #declares variable to store value passed into parameter
    )
    Write-Host "Hello, $name! Welcome to this script!" #prints a greeting with the parameter value
}

Greet-User -name $name #calls the function and passes in the value of the $name variable
Write-Host "You said your name is $name and you are $age years old." #prints a statement with the values of the $name and $age variables

if ($occupation) { #checks if the variable $occupation has a value
    Write-Host "You also mentioned your occupation is $occupation." #prints a statement with the value of the $occupation variable
}

else { #if $occupation is not specified, prints a different statement
    Write-Host "You didn't mention your occupation." #prints a statement
}

if ($age -gt 18) { #checks if the value of $age is greater than 18
    Write-Host "$name, you are old enough to vote!" #prints a statement
}

else { #if $age is less than or equal to 18, prints a different statement
    Write-Host "$name, you are not old enough to vote." #prints a statement
}
// This code snippet is an example of creating a method in APEX language

public class ExampleClass {
    // Declaring a public method with void return type and no parameters
    public void exampleMethod() {
        // Inserting logic here
        System.debug('Hello World!');

        // APEX also supports try-catch blocks for handling exceptions
        // Catch block contains specific exception type and corresponding error message
        try {
            // Logic that may throw an exception
        } catch(System.NullPointerException e) {
            System.debug('An error occurred: ' + e.getMessage());
        }

        // APEX code can also use if-statements for conditional logic
        // In this example, we are checking if a variable is greater than 5
        Integer num = 6;
        if (num > 5) {
            System.debug('The number is greater than 5');
        } else {
            System.debug('The number is less than or equal to 5');
        }

        // Another type of conditional statement is the switch statement
        // In this example, we are checking the value of a string variable and performing different actions based on the value
        String fruits = 'apple';
        switch on fruits {
            when 'apple' {
                System.debug('You chose an apple');
            }
            when 'orange' {
                System.debug('You chose an orange');
            }
            when else {
                System.debug('You did not choose an apple or an orange');
            }
        }

        // Lastly, APEX supports for-loops for iterating through collections of data
        // In this example, we are iterating through a list of integers and printing out each value
        List<Integer> numbers = new List<Integer>{1, 2, 3, 4, 5};
        for (Integer i : numbers) {
            System.debug('The value of i is: ' + i);
        }
    }
}
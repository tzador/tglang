/* This program utilizes a matrix to perform various operations */
Integer[][] matrix = new Integer[][] {{1,2,3}, {4,5,6}, {7,8,9}};

//Function to print out the matrix
System.debug('Matrix:');
for(Integer i = 0; i < matrix.size(); i++){
    for(Integer j = 0; j < matrix[i].size(); j++){
        System.debug(matrix[i][j] + ' ');
    }
    System.debug('');
}

//Function to find the sum of all elements in the matrix
Integer sum = 0;
for(Integer i = 0; i < matrix.size(); i++){
    for(Integer j = 0; j < matrix[i].size(); j++){
        sum += matrix[i][j];
    }
}
System.debug('Sum of all elements in matrix: ' + sum);

//Function to find the transpose of the matrix
Integer[][] transposedMatrix = new Integer[matrix.size()][matrix[0].size()];
for(Integer i = 0; i < matrix.size(); i++){
    for(Integer j = 0; j < matrix[i].size(); j++){
        transposedMatrix[j][i] = matrix[i][j];
    }
}

//Function to print out the transposed matrix
System.debug('Transposed Matrix:');
for(Integer i = 0; i < transposedMatrix.size(); i++){
    for(Integer j = 0; j < transposedMatrix[i].size(); j++){
        System.debug(transposedMatrix[i][j] + ' ');
    }
    System.debug('');
}

//Function to find the product of two matrices
Integer[][] secondMatrix = new Integer[][] {{1,2}, {3,4}, {5,6}};
Integer[][] productMatrix = new Integer[matrix.size()][secondMatrix[0].size()];

for(Integer i = 0; i < productMatrix.size(); i++){
    for(Integer j = 0; j < productMatrix[i].size(); j++){
        productMatrix[i][j] = 0;
        for(Integer k = 0; k < matrix[i].size(); k++){
            productMatrix[i][j] += matrix[i][k] * secondMatrix[k][j];
        }
    }
}

//Function to print out the product matrix
System.debug('Product Matrix:');
for(Integer i = 0; i < productMatrix.size(); i++){
    for(Integer j = 0; j < productMatrix[i].size(); j++){
        System.debug(productMatrix[i][j] + ' ');
    }
    System.debug('');
}
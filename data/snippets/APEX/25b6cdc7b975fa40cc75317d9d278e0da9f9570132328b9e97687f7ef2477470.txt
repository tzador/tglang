/**
* This is a class that represents a shopping cart, with methods for adding, removing, and clearing items, as well as calculating the total price.
*/
public class ShoppingCart {
    
    // class variables
    private List<CartItem> items; // list of items in cart
    private Decimal totalPrice; // total price of items in cart
    
    /**
    * Constructor for creating a new shopping cart.
    */
    public ShoppingCart() {
        items = new List<CartItem>();
        totalPrice = 0;
    }
    
    /**
    * Method for adding an item to the shopping cart.
    * @param newItem The item to be added to the cart.
    */
    public void addItem(CartItem newItem) {
        items.add(newItem);
        totalPrice += newItem.getPrice();
    }
    
    /**
    * Method for removing an item from the shopping cart.
    * @param index The index of the item to be removed from the cart.
    */
    public void removeItem(Integer index) {
        CartItem itemToRemove = items.get(index);
        items.remove(index);
        totalPrice -= itemToRemove.getPrice();
    }
    
    /**
    * Method for clearing all items from the shopping cart.
    */
    public void clearCart() {
        items.clear();
        totalPrice = 0;
    }
    
    /**
    * Method for calculating the total price of all items in the shopping cart.
    * @return The total price of all items in the cart.
    */
    public Decimal getTotalPrice() {
        return totalPrice;
    }
}
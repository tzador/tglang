Map<String, Set<Account>> accountsByRegion = new Map<String, Set<Account>>();

//Loop through accounts and add them to corresponding regions in map
for(Account acc : [SELECT Region__c, Name FROM Account]){
    if(accountsByRegion.containsKey(acc.Region__c)){
        accountsByRegion.get(acc.Region__c).add(acc);
    } else {
        //Initialize new set with current account and add it to map
        accountsByRegion.put(acc.Region__c, new Set<Account>{acc});
    }
}

//Retrieve and sort regions from map in descending order
List<String> regions = new List<String>(accountsByRegion.keySet());
regions.sort();

//Loop through regions and retrieve accounts in each region
for(String region : regions){
    System.debug('Region: ' + region);
    
    Set<Account> regionAccounts = accountsByRegion.get(region);
    //Sort accounts by name in ascending order
    List<Account> sortedAccounts = new List<Account>(regionAccounts);
    sortedAccounts.sort();
    
    //Print out sorted accounts in the region
    for(Account acc : sortedAccounts){
        System.debug('Account Name: ' + acc.Name);
    }
}
public class ComplexMath {
   // method to calculate square root of a number
    public static Double calculateSquareRoot(Double num) {
        Double result = Math.sqrt(num);
        return result;
    }
    
    // method to calculate factorial of a number
    public static Integer calculateFactorial(Integer num) {
        Integer result = 1;
        while(num > 0) {
            result *= num;
            num--;
        }
        return result;
    }
    
    // method to calculate power of a number
    public static Double calculatePower(Double base, Integer exponent) {
        Double result = 1.0;
        for(Integer i = 0; i < exponent; i++) {
            result *= base;
        }
        return result;
    }
    
    // method to calculate sine of a number
    public static Double calculateSine(Double degrees) {
        Double radians = (Math.PI / 180.0) * degrees;
        return Math.sin(radians);
    }
    
    // method to calculate cosine of a number
    public static Double calculateCosine(Double degrees) {
        Double radians = (Math.PI / 180.0) * degrees;
        return Math.cos(radians);
    }
    
    // method to calculate tangent of a number
    public static Double calculateTangent(Double degrees) {
        Double radians = (Math.PI / 180.0) * degrees;
        return Math.tan(radians);
    }
    
    // method to calculate logarithm of a number
    public static Double calculateLog(Double num) {
        return Math.log(num);
    }
    
    // method to calculate absolute value of a number
    public static Double calculateAbsoluteValue(Double num) {
        return Math.abs(num);
    }
}
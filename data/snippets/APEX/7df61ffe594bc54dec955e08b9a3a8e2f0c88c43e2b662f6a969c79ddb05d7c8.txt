public class OrderHelper {
    // This helper class is used to manipulate and process order data.

    // Declare private variables to store order information.
    private String orderNumber;
    private List<OrderLineItem> orderItems;

    // Constructor to initialize the order number and order items list.
    public OrderHelper(String orderNumber, List<OrderLineItem> orderItems) {
        this.orderNumber = orderNumber;
        this.orderItems = orderItems;
    }

    // Getter method to retrieve order number.
    public String getOrderNumber() {
        return orderNumber;
    }

    // Setter method to update order number.
    public void setOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
    }

    // Getter method to retrieve order items list.
    public List<OrderLineItem> getOrderItems() {
        return orderItems;
    }

    // Setter method to update order items list.
    public void setOrderItems(List<OrderLineItem> orderItems) {
        this.orderItems = orderItems;
    }

    // Method to calculate total price of all order items.
    public Decimal calculateTotalPrice() {
        Decimal totalPrice = 0;
        for(OrderLineItem item : orderItems) {
            totalPrice += item.getPrice();
        }
        return totalPrice;
    }

    // Method to convert the order into a JSON string.
    public String toJSON() {
        JSONGenerator generator = JSON.createGenerator(false);
        generator.writeStartObject();
        generator.writeStringField('orderNumber', orderNumber);
        generator.writeFieldName('orderItems');
        generator.writeStartArray();
        for(OrderLineItem item : orderItems) {
            generator.writeStartObject();
            generator.writeStringField('itemName', item.getName());
            generator.writeNumberField('itemPrice', item.getPrice());
            generator.writeNumberField('itemQuantity', item.getQuantity());
            generator.writeEndObject();
        }
        generator.writeEndArray();
        generator.writeEndObject();
        return generator.getAsString();
    }
}

// Inner class to represent a line item in the order.
public class OrderLineItem {
    // Declare private variables to store line item information.
    private String name;
    private Decimal price;
    private Integer quantity;

    // Constructor to initialize line item information.
    public OrderLineItem(String name, Decimal price, Integer quantity) {
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    // Getter method to retrieve line item name.
    public String getName() {
        return name;
    }

    // Setter method to update line item name.
    public void setName(String name) {
        this.name = name;
    }

    // Getter method to retrieve line item price.
    public Decimal getPrice() {
        return price;
    }

    // Setter method to update line item price.
    public void setPrice(Decimal price) {
        this.price = price;
    }

    // Getter method to retrieve line item quantity.
    public Integer getQuantity() {
        return quantity;
    }

    // Setter method to update line item quantity.
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }
}
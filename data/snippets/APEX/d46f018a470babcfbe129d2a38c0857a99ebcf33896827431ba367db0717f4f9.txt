// This code snippet is a class that implements a binary search algorithm on a list of integers
public class BinarySearch {
    // method for performing binary search on a list of integers
    public static Integer binarySearch(List<Integer> numList, Integer target) {
        // initialize variables for start and end indexes
        Integer start = 0;
        Integer end = numList.size() - 1;

        // loop until start index is greater than end index
        while (start <= end) {
            // calculate middle index
            Integer mid = (start + end) / 2;

            // check if middle element is equal to target
            if (numList[mid] == target) {
                // return middle index
                return mid;
            } else {
                // check if target is less than middle element
                if (target < numList[mid]) {
                    // set end index to the middle index - 1
                    end = mid - 1;
                } else {
                    // set start index to the middle index + 1
                    start = mid + 1;
                }
            }
        }

        // target not found, return -1
        return -1;
    }
}

// Example usage:
List<Integer> numbers = new List<Integer> {1, 2, 3, 4, 5, 6, 7, 8};
Integer target = 5;
Integer result = BinarySearch.binarySearch(numbers, target);
System.debug(result); // Output: 4 (index of target 5 in numbers list)
// This code snippet demonstrates a method for reversing the order of elements in an array
List<Integer> arr = new List<Integer>{1, 2, 3, 4, 5};

// Define method that takes in the array and returns the reversed version
public List<Integer> reverseArray(List<Integer> arr){
    // Create a new empty array to hold the reversed elements
    List<Integer> reversedArr = new List<Integer>();
    // Use a for loop to iterate through the original array in reverse order
    for(int i = arr.size()-1; i >= 0; i--){
        // Add each element to the new array in reverse order
        reversedArr.add(arr[i]);
    }
    // Return the reversed array as the result of the method
    return reversedArr;
}

// Call the method with the original array and store the reversed array in a new variable
List<Integer> reversedArr = reverseArray(arr);
// Output the results
System.debug(reversedArr); // Prints [5, 4, 3, 2, 1]

// This code snippet can be modified to work with arrays of other data types by changing the data type of the arrays and the method return type
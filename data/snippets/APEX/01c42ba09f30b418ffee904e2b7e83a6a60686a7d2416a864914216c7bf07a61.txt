public class VehicleRecord {
    
    // Variables to store vehicle information
    public String vehicleMake {get; set;}
    public String vehicleModel {get; set;}
    public Integer vehicleYear {get; set;}
    public Decimal vehiclePrice {get; set;}
    public Date vehiclePurchaseDate {get; set;}
    
    // Constructor to initialize vehicle record with default values
    public VehicleRecord() {
        vehicleMake = 'Unknown';
        vehicleModel = 'Other';
        vehicleYear = 2020;
        vehiclePrice = 0;
        vehiclePurchaseDate = Date.today();
    }
    
    // Method to calculate vehicle age based on purchase date and current date
    public Integer getVehicleAge() {
        Date currentDate = Date.today();
        Integer vehicleAge = currentDate.year() - vehiclePurchaseDate.year();
        
        // Check if current date is earlier in the year than purchase date
        if (currentDate.month() < vehiclePurchaseDate.month()
            || (currentDate.month() == vehiclePurchaseDate.month() && currentDate.day() < vehiclePurchaseDate.day())) {
            vehicleAge--;
        }
        return vehicleAge;
    }
    
    // Method to update vehicle price based on inflation rate and number of years since purchase
    public void updatePrice(Decimal inflationRate, Integer numYears) {
        // Calculate adjusted price based on inflation rate and number of years
        Decimal adjustedPrice = vehiclePrice * inflationRate;
        for (Integer i = 0; i < numYears; i++) {
            adjustedPrice = adjustedPrice * inflationRate;
        }
        vehiclePrice = adjustedPrice; // Update vehicle price with adjusted price
    }
}

// Example usage of VehicleRecord class to create a new vehicle record and perform calculations
VehicleRecord newVehicle = new VehicleRecord();
newVehicle.vehicleMake = 'Toyota';
newVehicle.vehicleModel = 'Camry';
newVehicle.vehicleYear = 2015;
newVehicle.vehiclePrice = 20000;
system.debug('Vehicle age: ' + newVehicle.getVehicleAge()); // Output: 5
newVehicle.updatePrice(1.03, 3);
system.debug('Updated vehicle price: ' + newVehicle.vehiclePrice); // Output: $23,674.20
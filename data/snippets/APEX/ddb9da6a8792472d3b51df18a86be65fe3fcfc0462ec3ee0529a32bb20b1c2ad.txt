// This code snippet uses an Apex class to calculate the fibonacci sequence and return a list of fibonnaci numbers up to a specified limit.

// Define the Apex class
public class Fibonacci {

    // Define a method that takes in a limit parameter
    // and returns a list of fibonacci numbers
    public List<Integer> generateFibonacci(int limit) {

        // Initialize a list to store the fibonacci numbers
        List<Integer> fibList = new List<Integer>();

        // Set the initial two numbers in the sequence
        Integer num1 = 1;
        Integer num2 = 1;

        // Add the first two numbers to the list
        fibList.add(num1);
        fibList.add(num2);

        // Use a for loop to iterate through the remaining numbers
        // up to the specified limit
        for (Integer i = 2; i < limit; i++) {

            // Calculate the next fibonacci number by adding the two previous numbers
            Integer nextNum = num1 + num2;

            // Add the new number to the list
            fibList.add(nextNum);

            // Update the values of the previous two numbers
            num1 = num2;
            num2 = nextNum;
        }

        // Return the list of fibonacci numbers
        return fibList;
    }
}

// Instantiate an instance of the Fibonacci class
Fibonacci fibonacci = new Fibonacci();

// Call the generateFibonacci method and pass in a limit of 10
List<Integer> result = fibonacci.generateFibonacci(10);

// Print the result
system.debug(result); // Output: (1, 1, 2, 3, 5, 8, 13, 21, 34, 55)
// This code snippet is an APEX class that implements the 'Comparable' interface
// It defines a custom 'Smartphone' class and implements logic to compare two phones based on their specifications

public class Smartphone implements Comparable {
    private String name;
    private String brand;
    private double price;
    private int memory;
    private int battery;

    public Smartphone(String name, String brand, double price, int memory, int battery) {
        this.name = name;
        this.brand = brand;
        this.price = price;
        this.memory = memory;
        this.battery = battery;
    }

    public String getName() {
        return name;
    }

    public String getBrand() {
        return brand;
    }

    public double getPrice() {
        return price;
    }

    public int getMemory() {
        return memory;
    }

    public int getBattery() {
        return battery;
    }

    // Override the compareTo() method from the Comparable interface
    // This method will be used to compare two Smartphone objects based on their specifications
    public Integer compareTo(Object o) {

        // Check if the input object is of type Smartphone
        if (o instanceof Smartphone) {

            // Typecast the input object to a Smartphone object
            Smartphone other = (Smartphone) o;

            // Compare the two Smartphone objects based on price
            // If the price of 'this' object is lower, return a negative value
            // If the price of 'this' object is higher, return a positive value
            // If the prices are the same, return 0
            int priceCompare = Double.compare(this.getPrice(), other.getPrice());

            // If the prices are different, return the result of the price comparison
            if (priceCompare != 0) {
                return priceCompare;
            }

            // If the prices are the same, compare the two Smartphone objects based on memory
            // If the memory of 'this' object is lower, return a negative value
            // If the memory of 'this' object is higher, return a positive value
            // If the memories are the same, return 0
            int memoryCompare = Integer.compare(this.getMemory(), other.getMemory());

            // If the memories are different, return the result of the memory comparison
            if (memoryCompare != 0) {
                return memoryCompare;
            }

            // If the memories are the same, compare the two Smartphone objects based on battery
            // If the battery of 'this' object is lower, return a negative value
            // If the battery of 'this' object is higher, return a positive value
            // If the batteries are the same, return 0
            int batteryCompare = Integer.compare(this.getBattery(), other.getBattery());

            // If the batteries are different, return the result of the battery comparison
            if (batteryCompare != 0) {
                return batteryCompare;
            }

            // If all specifications are the same, return 0 (indicating that the two Smartphone objects are equal)
            return 0;
        }

        // If the input object is not of type Smartphone, throw an exception
        throw new IllegalArgumentException("Input object must be of type Smartphone");
    }
}
// Create a list to hold objects
List<Account> accountList = new List<Account>();
// Add new accounts to the list
accountList.add(new Account(Name='Test Account 1', AnnualRevenue=10000));
accountList.add(new Account(Name='Test Account 2', AnnualRevenue=20000));
accountList.add(new Account(Name='Test Account 3', AnnualRevenue=30000));

// Create a map to hold account names and revenue
Map<String, Decimal> accountRevenueMap = new Map<String, Decimal>();

// Loop through the list and add account names as keys and annual revenue as values to the map
for(Account acc : accountList){
    accountRevenueMap.put(acc.Name, acc.AnnualRevenue);
}

// Sort the map by descending order of annual revenue
List<String> accountNames = new List<String>(accountRevenueMap.keySet());
accountNames.sort((a,b) -> accountRevenueMap.get(b).compareTo(accountRevenueMap.get(a)));

// Print the sorted list of account names and revenue in formatted table
System.debug('| Account Name | Annual Revenue |');
System.debug('|--------------|----------------|');
for(String accName : accountNames){
    System.debug('| '+accName+' | $'+accountRevenueMap.get(accName)+' |');
}

// Output:
// | Account Name | Annual Revenue |
// |--------------|----------------|
// | Test Account 3 | $30000 |
// | Test Account 2 | $20000 |
// | Test Account 1 | $10000 |
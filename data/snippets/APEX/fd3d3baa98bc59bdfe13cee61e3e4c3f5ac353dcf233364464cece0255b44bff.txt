public class BookLibrary {
    
    // This class represents a library and its collection of books
    
    // Class variables
    private Map<String, Book> bookCatalog;
    private List<Book> checkedOutBooks;
    private Integer numBooks; 
    
    // Constructor method
    public BookLibrary(Map<String, Book> catalog) {
        this.bookCatalog = catalog;
        this.checkedOutBooks = new List<Book>();
        this.numBooks = 0;
    }

    // Method for adding books to the catalog
    public void addBook(Book newBook) {
        this.bookCatalog.put(newBook.title, newBook);
        this.numBooks++;
    }
    
    // Method for checking out a book
    public void checkoutBook(String title, String borrower) {
        // Check if book is available
        if (this.bookCatalog.containsKey(title)) {
            Book book = this.bookCatalog.get(title);
            // Check if book is already checked out
            if (book.isCheckedOut()) {
                System.debug('This book is already checked out.');
            } else {
                // Update book status and add to checked out list
                book.setBorrower(borrower);
                book.setCheckedOut(true);
                this.checkedOutBooks.add(book);
                System.debug(book.title + ' has been checked out by ' + borrower);
            }
        } else {
            System.debug('Book not found in catalog.');
        }
    }
    
    // Method for checking in a book
    public void checkinBook(String title) {
        // Check if book is checked out
        if (this.bookCatalog.containsKey(title)) {
            Book book = this.bookCatalog.get(title);
            // Check if book is already checked in
            if (!book.isCheckedOut()) {
                System.debug('This book is already checked in.');
            } else {
                // Update book status and remove from checked out list
                book.setBorrower(null);
                book.setCheckedOut(false);
                this.checkedOutBooks.remove(book);
                System.debug(book.title + ' has been checked in.');
            }
        } else {
            System.debug('Book not found in catalog.');
        }
    }
    
    // Method for searching for a book by title
    public Book searchByTitle(String title) {
        if (this.bookCatalog.containsKey(title)) {
            return this.bookCatalog.get(title);
        } else {
            System.debug('Book not found in catalog.');
            return null;
        }
    }
    
    // Method for searching for a book by author
    public List<Book> searchByAuthor(String author) {
        List<Book> results = new List<Book>();
        // Loop through book catalog and add books with matching author to results list
        for (Book book : this.bookCatalog.values()) {
            if (book.author.equals(author)) {
                results.add(book);
            }
        }
        // Check if any books were found
        if (results.size() > 0) {
            return results;
        } else {
            System.debug('No books found by this author.');
            return null;
        }
    }
}
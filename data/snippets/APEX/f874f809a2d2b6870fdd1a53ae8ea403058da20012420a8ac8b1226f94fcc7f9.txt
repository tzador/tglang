//Class to handle complex mathematical operations
public class MathOperations {

    //Method to calculate the square root of a number
    public static Double calculateSquareRoot(Double num) {
        //Check if the number is positive
        if (num >= 0) {
            //Calculate square root using built-in math function
            Double squareRoot = Math.sqrt(num);
            return squareRoot;
        } else {
            //Throw custom exception if number is negative
            throw new NegativeNumberException('Cannot calculate square root of a negative number.');
        }
    }

    //Method to calculate the factorial of a number
    public static Long calculateFactorial(Long num) {
        //Check if number is zero
        if (num == 0) {
            return 1L;
        } else if (num > 0) {
            //Calculate factorial using recursion
            return num * calculateFactorial(num - 1);
        } else {
            //Throw custom exception if number is negative
            throw new NegativeNumberException('Cannot calculate factorial of a negative number.');
        }
    }

    //Inner class for custom exception handling
    public class NegativeNumberException extends Exception {}
}
public class ContactController {

    // variables for storing contact information
    private String firstName;
    private String lastName;
    private String email;

    // constructor method
    public ContactController(String fName, String lName, String e) {
        this.firstName = fName;
        this.lastName = lName;
        this.email = e;
    }

    // method for updating email
    public void updateEmail(String newEmail) {

        // check if new email is valid
        if (isValidEmail(newEmail)) {
            this.email = newEmail;
            System.debug('Updated email for ' + this.firstName + ' ' + this.lastName + ' successfully.');
        } else {
            System.debug('Invalid email ' + newEmail + ' entered.');
        }
    }

    // method for checking if email is in valid format
    private Boolean isValidEmail(String email) {
        String emailRegex = '[a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])*\\.){2,6}[a-z]{2,6}';
        Pattern emailPattern = Pattern.compile(emailRegex);
        Matcher emailMatcher = emailPattern.matcher(email);
        return emailMatcher.matches();
    }

    // main method
    public static void main(String[] args) {
        // create a new ContactController object with sample data
        ContactController contact = new ContactController('John', 'Smith', 'johnsmith@example.com');

        // print current email
        System.debug(contact.email);

        // call updateEmail method and pass in new email
        contact.updateEmail('invalidemail'); // will print invalid email message
        contact.updateEmail('newemail@example.com'); // will print success message and update email variable

        // print updated email
        System.debug(contact.email);
    }
}
/**
 * This is a class that performs a sorting algorithm on a list of integers.
 * @param listToSort The list of integers to be sorted.
 * @return The sorted list in ascending order.
 */
public class SortIntegers {

    // The main function that performs the sorting algorithm.
    public void sort(List<Integer> listToSort) {
        // Get the size of the list.
        Integer size = listToSort.size();
        
        // For each element in the list, compare it to the element in the next position.
        for (Integer i = 0; i < size - 1; i++) {
            // Assume the current element is the minimum.
            Integer min = i;

            // Loop through the remaining elements in the list to find the minimum.
            for (Integer j = i + 1; j < size; j++) {
                // If the current element is smaller than the minimum, update the minimum.
                if (listToSort[j] < listToSort[min]) {
                    min = j;
                }
            }

            // Swap the current element with the minimum element.
            Integer temp = listToSort[i];
            listToSort[i] = listToSort[min];
            listToSort[min] = temp;
        }
    }
}

// Example usage of the SortIntegers class:
List<Integer> myList = new List<Integer>{4, 2, 6, 1, 5, 3};
SortIntegers.sort(myList);
// Output: 1, 2, 3, 4, 5, 6
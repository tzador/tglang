public class ShoppingCart {
    // variables to store shopping cart details
    private String cartId;
    private List<Product> products;
    private Boolean isCheckout;
    private Date lastModified;
 
    // constructor to initialize cart details
    public ShoppingCart(String cartId) {
        this.cartId = cartId;
        this.products = new List<Product>();
        this.isCheckout = false;
        this.lastModified = Date.today();
    }
 
    // method to add product to the cart
    public void addProduct(Product product) {
        if (!isCheckout) {
            products.add(product);
            lastModified = Date.today();
        } else {
            System.debug('Cannot add product to the cart after checkout');
        }
    }
 
    // method to remove product from the cart
    public void removeProduct(Product product) {
        if (!isCheckout) {
            products.remove(product);
            lastModified = Date.today();
        } else {
            System.debug('Cannot remove product from the cart after checkout');
        }
    }
 
    // method to update product quantity in the cart
    public void updateQuantity(Product product, Integer quantity) {
        if (!isCheckout) {
            product.setQuantity(quantity);
            lastModified = Date.today();
        } else {
            System.debug('Cannot update product quantity after checkout');
        }
    }
 
    // method to get total price of all products in the cart
    public Decimal getTotalPrice() {
        Decimal totalPrice = 0;
        for (Product p : products) {
            totalPrice += p.getPrice() * p.getQuantity();
        }
        return totalPrice;
    }
 
    // method to checkout the cart
    public void checkout() {
        if (products.size() > 0) {
            isCheckout = true;
        } else {
            System.debug('Shopping cart is empty. Cannot checkout');
        }
    }
}
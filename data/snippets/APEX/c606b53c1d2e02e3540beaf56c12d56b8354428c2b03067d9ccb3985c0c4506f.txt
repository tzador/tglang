public class CustomException extends Exception {
    // custom exception class that extends the base Exception class

    //variables to store exception message and cause
    private String message;
    private Throwable cause;

    public CustomException(String errorMessage) {
        // constructor to set the exception message
        this.message = errorMessage;
    }

    public CustomException(String errorMessage, Throwable cause) {
        // constructor to set the exception message and cause
        this.message = errorMessage;
        this.cause = cause;
    }

    public String getMessage() {
        // method to get the exception message
        return this.message;
    }

    public Throwable getCause() {
        // method to get the exception cause
        return this.cause;
    }

    public void logException() {
        // method to log the exception message and stack trace
        System.debug('Exception Message: ' + this.message);
        System.debug('Exception Stack Trace: ' + this.getStackTraceString());
    }
}

// sample usage of the custom exception class
try {
    Integer num = Integer.valueOf('not a number');
    // code that may throw the custom exception
} catch (NumberFormatException e) {
    // catch the base NumberFormatException and throw a custom exception
    throw new CustomException('Invalid number format', e);
} catch (CustomException e) {
    // catch and handle the custom exception
    e.logException();
}
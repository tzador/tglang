// Class name: ComplexNumber
public class ComplexNumber {
    
    // Private variables for real and imaginary parts of the complex number
    private Double real;
    private Double imaginary;
    
    /**
     * Constructor with two parameters for real and imaginary parts of the complex number
     * @param real The real part of the complex number
     * @param imaginary The imaginary part of the complex number
     */
    public ComplexNumber(Double real, Double imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }
    
    /**
     * Adds two complex numbers together and returns a new ComplexNumber object with the result
     * @param num1 The first complex number to be added
     * @param num2 The second complex number to be added
     * @return A new ComplexNumber object with the result of the addition
     */
    public static ComplexNumber add(ComplexNumber num1, ComplexNumber num2) {
        Double resultReal = num1.real + num2.real;
        Double resultImaginary = num1.imaginary + num2.imaginary;
        return new ComplexNumber(resultReal, resultImaginary);
    }
    
    /**
     * Multiplies two complex numbers together and returns a new ComplexNumber object with the result
     * @param num1 The first complex number to be multiplied
     * @param num2 The second complex number to be multiplied
     * @return A new ComplexNumber object with the result of the multiplication
     */
    public static ComplexNumber multiply(ComplexNumber num1, ComplexNumber num2) {
        Double resultReal = (num1.real * num2.real) - (num1.imaginary * num2.imaginary);
        Double resultImaginary = (num1.real * num2.imaginary) + (num1.imaginary * num2.real);
        return new ComplexNumber(resultReal, resultImaginary);
    }
    
    /**
     * Returns the absolute value of a complex number, which is the distance from the origin
     * @param num The complex number to find the absolute value of
     * @return The absolute value of the complex number
     */
    public static Double absolute(ComplexNumber num) {
        return Math.sqrt((num.real * num.real) + (num.imaginary * num.imaginary));
    }
}
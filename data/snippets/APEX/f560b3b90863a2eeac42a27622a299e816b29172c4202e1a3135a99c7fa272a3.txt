// Define a custom exception class
public class CustomException extends Exception {

    // Private variables for the exception
    private String message;
    private Integer errorCode;

    // Constructor to initialize the exception
    public CustomException(String errorMessage, Integer errorCode) {
        this.message = errorMessage;
        this.errorCode = errorCode;
    }

    // Method to get the error message
    public String getMessage() {
        return this.message;
    }

    // Method to get the error code
    public Integer getErrorCode() {
        return this.errorCode;
    }
}

// Create a method that throws the custom exception
public void processRecord(List<String> record) {
    try {

        // Check if the record is valid
        if(record.size() < 5) {
            // Throw the custom exception with a specific error code
            throw new CustomException('Record does not have enough fields', 500);
        }
    }
    catch(CustomException e) {
        // Handle the exception by printing the error message and code
        System.debug('Custom Exception Message: ' + e.getMessage());
        System.debug('Custom Exception Error Code: ' + e.getErrorCode());
    }
}
trigger OpportunityTrigger on Opportunity (after insert, after update) {

    //Get the list of opportunities that were just inserted or updated
    List<Opportunity> updatedOpportunites = Trigger.new;
    //Get the list of previous versions of opportunities
    List<Opportunity> previousOpportunities = Trigger.old;

    //Loop through the updated opportunities
    for (Opportunity opp : updatedOpportunities) {

        //Check if the opportunity stage has been changed
        if (opp.StageName != previousOpportunities.get(opp.Id).StageName) {
            //Update the last stage change date on the opportunity
            opp.LastStageChangeDate = Date.today();

            //Create a new task to document the stage change
            Task task = new Task();
            task.WhatId = opp.Id;
            task.Subject = 'Opportunity Stage Changed';
            task.Description = 'The stage was changed from ' + previousOpportunities.get(opp.Id).StageName + ' to ' + opp.StageName;
            task.Status = 'Completed';
            task.Priority = 'Normal';

            //Insert the task
            insert task;
        }

        //Check if the opportunity amount has been changed
        if (opp.Amount != previousOpportunities.get(opp.Id).Amount) {
            //Update the last amount change date on the opportunity
            opp.LastAmountChangeDate = Date.today();

            //Create a new task to document the amount change
            Task task = new Task();
            task.WhatId = opp.Id;
            task.Subject = 'Opportunity Amount Changed';
            task.Description = 'The amount was changed from ' + previousOpportunities.get(opp.Id).Amount + ' to ' + opp.Amount;
            task.Status = 'Completed';
            task.Priority = 'Normal';

            //Insert the task
            insert task;
        }

        //Check if the opportunity close date has been changed
        if (opp.CloseDate != previousOpportunities.get(opp.Id).CloseDate) {
            //Update the last close date change on the opportunity
            opp.LastCloseDateChange = Date.today();

            //Create a new task to document the close date change
            Task task = new Task();
            task.WhatId = opp.Id;
            task.Subject = 'Opportunity Close Date Changed';
            task.Description = 'The close date was changed from ' + previousOpportunities.get(opp.Id).CloseDate + ' to ' + opp.CloseDate;
            task.Status = 'Completed';
            task.Priority = 'Normal';

            //Insert the task
            insert task;
        }
        
        //Check if the opportunity owner has been changed
        if (opp.OwnerId != previousOpportunities.get(opp.Id).OwnerId) {
            //Update the last owner change date on the opportunity
            opp.LastOwnerChangeDate = Date.today();

            //Create a new task to document the owner change
            Task task = new Task();
            task.WhatId = opp.Id;
            task.Subject = 'Opportunity Owner Changed';
            task.Description = 'The owner was changed from ' + previousOpportunities.get(opp.Id).OwnerId + ' to ' + opp.OwnerId;
            task.Status = 'Completed';
            task.Priority = 'Normal';

            //Insert the task
            insert task;
        }
    }
}
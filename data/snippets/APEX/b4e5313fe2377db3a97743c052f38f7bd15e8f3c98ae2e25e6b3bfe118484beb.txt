// This code snippet calculates the maximum profit from a given set of stock prices
public class StockProfitCalculator {
  
  // method to calculate maximum profit from stock prices
  public static Integer calculateMaxProfit(List<Integer> stockPrices) {
    
    // initialize variables for min price and max profit
    Integer minPrice = stockPrices[0];
    Integer maxProfit = 0;
    
    // loop through stock prices
    for (Integer i = 0; i < stockPrices.size(); i++) {
      
      // calculate current profit by subtracting current price from min price
      Integer currentProfit = stockPrices[i] - minPrice;
      
      // update max profit if current profit is greater
      if (currentProfit > maxProfit) {
        maxProfit = currentProfit;
      }
      
      // update min price if current price is lower
      if (stockPrices[i] < minPrice) {
        minPrice = stockPrices[i];
      }
      
    }
    
    // return calculated maximum profit
    return maxProfit;
  }
  
}

// Sample input for stock prices
List<Integer> stockPrices = [100, 120, 80, 140, 60];

// Calling the method to calculate maximum profit
Integer maxProfit = StockProfitCalculator.calculateMaxProfit(stockPrices);

// Printing the result
System.debug('Maximum profit: ' + maxProfit);

// Output: Maximum profit: 80
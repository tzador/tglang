// This code snippet generates a random password using the given character length and includes at least one uppercase letter, one lowercase letter, one number, and one special character.

// Define variables for password length, character types and the generated password
Integer length = 10; 
List<String> charTypes = new List<String>{'uppercase', 'lowercase', 'number', 'special character'}; 
String password = '';

// Create a set of characters for each character type
Set<String> uppercaseChars = new Set<String>{'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'}; 
Set<String> lowercaseChars = new Set<String>{'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}; 
Set<String> numberChars = new Set<String>{'0','1','2','3','4','5','6','7','8','9'}; 
Set<String> specialChars = new Set<String>{'!','@','#','$','%','^','&','*','(',')','-','_','=','+','[',']','{','}','|',';',':','\'','\"','<','>',',','.','/?'};

// Loop through each character type and randomly select one character from the set, adding it to the password string
for(String type : charTypes) {
  Integer index = Math.mod(Math.abs(Crypto.getRandomInteger()), length); 
  if(type == 'uppercase') { 
    password += String.valueOf(uppercaseChars.toArray()[index]); 
  } else if(type == 'lowercase') { 
    password += String.valueOf(lowercaseChars.toArray()[index]); 
  } else if(type == 'number') { 
    password += String.valueOf(numberChars.toArray()[index]); 
  } else { 
    password += String.valueOf(specialChars.toArray()[index]); 
  } 
  length--;
}

// Shuffle the characters in the password string to increase randomness
password = shuffle(password); 
System.debug('Password: ' + password);

// Method to shuffle characters in a given string
private String shuffle(String str) { 
  List<String> chars = str.split(''); 
  String shuffledStr = ''; 
  while(chars.size() > 0) { 
    Integer index = Math.mod(Math.abs(Crypto.getRandomInteger()), chars.size()); 
    shuffledStr += chars.get(index); 
    chars.remove(index); 
  } 
  return shuffledStr; 
}
public class BookManager {
    // Start class definition
    /* Add book to database
    * @param bookTitle The title of the book to be added
    * @param author The author of the book to be added
    * @param genre The genre of the book to be added
    * @param releaseDate The release date of the book to be added
    * @param isbn The ISBN number of the book to be added
    * @return The ID of the newly added book
    */
    public static String addBook(String bookTitle, String author, String genre, Date releaseDate, String isbn) {
        // Create a new book record
        Book__c b = new Book__c(
            Title__c = bookTitle,
            Author__c = author,
            Genre__c = genre,
            Release_Date__c = releaseDate,
            ISBN__c = isbn
        );
        // Insert the record into the database
        insert b;
        // Return the ID of the newly added book
        return b.Id;
    }
    
    // Update book information
    /* 
    * @param bookId The ID of the book to be updated
    * @param updatedBook The updated book record with new values
    */
    public static void updateBook(String bookId, Book__c updatedBook) {
        // Retrieve the existing book record to be updated
        Book__c b = [SELECT Title__c, Author__c, Genre__c, Release_Date__c, ISBN__c FROM Book__c WHERE Id = :bookId];
        // Update the book record with new values
        b.Title__c = updatedBook.Title__c;
        b.Author__c = updatedBook.Author__c;
        b.Genre__c = updatedBook.Genre__c;
        b.Release_Date__c = updatedBook.Release_Date__c;
        b.ISBN__c = updatedBook.ISBN__c;
        // Update the record in the database
        update b;
    }
    
    // Delete book from database
    /*
    * @param bookId The ID of the book to be deleted
    */
    public static void deleteBook(String bookId) {
        // Retrieve the book record to be deleted
        Book__c b = [SELECT Id FROM Book__c WHERE Id = :bookId];
        // Delete the record from the database
        delete b;
    }
    
    // Search for books by title, author, or genre
    /*
    * @param filter The search filter to be used (title, author, or genre)
    * @param searchTerm The term to search for within the chosen filter
    * @return A list of books that match the search criteria
    */
    public static List<Book__c> searchBooks(String filter, String searchTerm) {
        // Create a list to hold the results
        List<Book__c> results = new List<Book__c>();
        
        // Perform a query based on the chosen filter and search term
        if(filter == 'title') {
            results = [SELECT Title__c, Author__c, Genre__c, Release_Date__c, ISBN__c FROM Book__c WHERE Title__c LIKE :searchTerm];
        } else if(filter == 'author') {
            results = [SELECT Title__c, Author__c, Genre__c, Release_Date__c, ISBN__c FROM Book__c WHERE Author__c LIKE :searchTerm];
        } else if(filter == 'genre') {
            results = [SELECT Title__c, Author__c, Genre__c, Release_Date__c, ISBN__c FROM Book__c WHERE Genre__c LIKE :searchTerm];
        }
        
        // Return the results
        return results;
    }
}
/**
 * This is a class that creates and maintains a database for customer invoices.
 * It includes methods for adding, updating, and deleting invoices, as well as 
 * generating reports and performing calculations.
 */

public class InvoiceDatabase{
    private Map<String, Invoice> invoices;
    
    /**
     * This method adds a new invoice to the database.
     * @param i the invoice to be added
     * @return true if the invoice was successfully added, false otherwise
     */
    public Boolean addInvoice(Invoice i){
        if(invoices.containsKey(i.getId())){  //check if invoice with same id already exists
            System.debug('An invoice with this id already exists.');
            return false;
        }
        else{
            invoices.put(i.getId(), i);  //add new invoice to map
            System.debug('Invoice added successfully.');
            return true;
        }
    }
    
    /**
     * This method updates an existing invoice in the database.
     * @param i the updated invoice
     * @return true if the invoice was successfully updated, false otherwise
     */
    public Boolean updateInvoice(Invoice i){
        if(!invoices.containsKey(i.getId())){  //check if invoice with given id exists
            System.debug('No invoice with this id exists.');
            return false;
        }
        else{
            invoices.put(i.getId(), i);  //update invoice in map
            System.debug('Invoice updated successfully.');
            return true;
        }
    }
    
    /**
     * This method deletes an invoice from the database.
     * @param invoiceId the id of the invoice to be deleted
     * @return true if the invoice was successfully deleted, false otherwise
     */
    public Boolean deleteInvoice(String invoiceId){
        if(!invoices.containsKey(invoiceId)){  //check if invoice with given id exists
            System.debug('No invoice with this id exists.');
            return false;
        }
        else{
            invoices.remove(invoiceId);  //remove invoice from map
            System.debug('Invoice deleted successfully.');
            return true;
        }
    }
    
    /**
     * This method generates a report of all invoices in the database.
     * @return a list of all invoices
     */
    public List<Invoice> generateReport(){
        List<Invoice> report = new List<Invoice>();  //create empty list to store invoices
        for(Invoice i : invoices.values()){  //loop through all invoices in map
            report.add(i);  //add invoice to report
        }
        return report;
    }
    
    /**
     * This method calculates the total amount of all invoices in the database.
     * @return the total amount of all invoices
     */
    public Integer calculateTotal(){
        Integer total = 0; //create variable to store total amount
        for(Invoice i : invoices.values()){  //loop through all invoices in map
            total += i.getAmount();  //add amount of each invoice to total
        }
        return total;
    }
}
// creating a custom object called 'Product'
// with fields for product name, price, and quantity
Object productObject = new Object('Product');
Schema.DescribeSObjectResult productDescribe = productObject.getDescribe();
Map<String, Schema.SObjectField> fieldsMap = productDescribe.fields.getMap();

// creating a text field for product name
Schema.SObjectField nameField = fieldsMap.get('Name');
Schema.DescribeFieldResult nameDescribe = nameField.getDescribe();
String nameLabel = nameDescribe.getLabel();
String nameAPIName = nameDescribe.getAPIName();
Schema.DisplayType nameDataType = nameDescribe.getType();
Boolean nameIsCustom = nameDescribe.isCustom();
Boolean nameIsCreateable = nameDescribe.isCreateable();
Boolean nameIsUpdateable = nameDescribe.isUpdateable();
id nameLength = nameDescribe.getByteLength();
Boolean nameIsUnique = nameDescribe.isUnique();
Boolean nameIsNameField = nameDescribe.isNameField();
Boolean nameIsExternalID = nameDescribe.isExternalID();
Boolean nameIsSortable = nameDescribe.isSortable();
Boolean nameIsFilterable = nameDescribe.isFilterable();
Boolean nameIsAGGInQuery = nameDescribe.isAggregatable();

// creating a currency field for product price
Schema.SObjectField priceField = fieldsMap.get('Price');
Schema.DescribeFieldResult priceDescribe = priceField.getDescribe();
String priceLabel = priceDescribe.getLabel();
String priceAPIName = priceDescribe.getAPIName();
Schema.DisplayType priceDataType = priceDescribe.getType();
Boolean priceIsCustom = priceDescribe.isCustom();
Boolean priceIsCreateable = priceDescribe.isCreateable();
Boolean priceIsUpdateable = priceDescribe.isUpdateable();
id priceLength = priceDescribe.getByteLength();
Boolean priceIsUnique = priceDescribe.isUnique();
Boolean priceIsNameField = priceDescribe.isNameField();
Boolean priceIsExternalID = priceDescribe.isExternalID();
Boolean priceIsSortable = priceDescribe.isSortable();
Boolean priceIsFilterable = priceDescribe.isFilterable();
Boolean priceIsAGGInQuery = priceDescribe.isAggregatable();

// creating a number field for product quantity
Schema.SObjectField quantityField = fieldsMap.get('Quantity');
Schema.DescribeFieldResult quantityDescribe = quantityField.getDescribe();
String quantityLabel = quantityDescribe.getLabel();
String quantityAPIName = quantityDescribe.getAPIName();
Schema.DisplayType quantityDataType = quantityDescribe.getType();
Boolean quantityIsCustom = quantityDescribe.isCustom();
Boolean quantityIsCreateable = quantityDescribe.isCreateable();
Boolean quantityIsUpdateable = quantityDescribe.isUpdateable();
id quantityLength = quantityDescribe.getByteLength();
Boolean quantityIsUnique = quantityDescribe.isUnique();
Boolean quantityIsNameField = quantityDescribe.isNameField();
Boolean quantityIsExternalID = quantityDescribe.isExternalID();
Boolean quantityIsSortable = quantityDescribe.isSortable();
Boolean quantityIsFilterable = quantityDescribe.isFilterable();
Boolean quantityIsAGGInQuery = quantityDescribe.isAggregatable();
// This code snippet utilizes a custom Apex class to perform calculations on a list of numbers
// It includes error handling to ensure only numbers are used and to handle any division by zero
// The output is a map of the original numbers and the result of the calculation for each number

// define a wrapper class to hold number and result
public class CalculationResult {
    public Decimal number {get; set;}
    public Decimal result {get; set;}
    
    // constructor to populate values
    public CalculationResult(Decimal num, Decimal res) {
        this.number = num;
        this.result = res;
    }
}

// define main method
public static void performCalculations(List<Decimal> numbers) {
    // create empty map to hold results
    Map<Decimal, Decimal> resultMap = new Map<Decimal, Decimal>();
    
    // loop through numbers list
    for(Decimal num : numbers) {
        // check if number is valid
        if(num.isNaN() || num.isInfinite()) {
            // log error and skip calculation
            System.debug('Invalid number: ' + num + '. Skipping calculation.');
            continue;
        }
        
        // check if number is zero
        if(num == 0) {
            // log error and set result to zero
            System.debug('Division by zero. Setting result to 0 for number: ' + num);
            resultMap.put(num, 0);
            continue;
        }
        
        // perform calculation using custom Apex class
        Decimal result = CustomCalculator.calculate(num);
    
        // add result to resultMap
        resultMap.put(num, result);
    }
    
    // print results to console
    System.debug('Calculation results: ' + resultMap);
}

// call main method with a list of numbers
performCalculations(new List<Decimal>{5, 2, 3, 0, 10, -4.5});

// output:
Calculation results: {5=10, 2=4, 3=6, 10=20, -4.5=-9}
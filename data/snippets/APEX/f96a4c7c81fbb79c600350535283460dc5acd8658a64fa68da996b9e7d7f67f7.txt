/**
 * This method checks if the input string is a valid email address.
 * @param emailAddress The string to be checked.
 * @return True if valid email, False if not.
 */
public static Boolean isValidEmail(String emailAddress){
    Boolean isValid = true;
    if(emailAddress == null || emailAddress.length() == 0){
        isValid = false;
    }
    else{
        if(emailAddress.contains("@")){
            String[] emailParts = emailAddress.split("@");
            if(emailParts.size() != 2){
                isValid = false;
            }
            else{
                if(emailParts[0].length() == 0 || emailParts[1].length() == 0){
                    isValid = false;
                }
                else{
                    if(!emailParts[1].contains(".")){
                        isValid = false;
                    }
                    else{
                        String[] domainParts = emailParts[1].split("\\.");
                        if(domainParts.size() < 2){
                            isValid = false;
                        }
                        else{
                            // Check if final domain contains only letters
                            for(Integer i = 0; i < domainParts.size(); i++){
                                if(!Pattern.matches("[a-zA-Z]+", domainParts[i]) || domainParts[i].length() > 4){
                                    isValid = false;
                                    break;
                                }
                            }
                            // Check if final domain is not a reserved word
                            Set<String> reservedDomains = new Set<String>{'com', 'org', 'net'};
                            if(reservedDomains.contains(domainParts[domainParts.size() - 1])){
                                isValid = false;
                            }
                        }
                    }
                }
            }
        }
        else{
            isValid = false;
        }
    }
    return isValid;
}
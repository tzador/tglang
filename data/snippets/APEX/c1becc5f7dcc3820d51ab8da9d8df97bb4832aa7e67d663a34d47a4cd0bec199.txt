/**
 * This is a complex code snippet in APEX,
 * demonstrating the use of classes, interfaces, and inheritance. 
 * The snippet creates a parent class 'Animal' with two properties: 'name' and 'age',
 * and two methods: 'move()' and 'eat()'.
 * It also creates two child classes, 'Dog' and 'Cat', which extend the 'Animal' class.
 * Both child classes inherit the properties and methods of the parent class,
 * and have their own unique implementations for the 'move()' and 'eat()' methods. 
 * Finally, the snippet creates an interface, 'Pet', which is implemented by both the 'Dog' and 'Cat' classes.
 * The 'Pet' interface defines a method 'play()', which both the child classes have to implement.
 */

// Parent class, 'Animal'
class Animal{
    // Properties
    String name;
    Integer age;

    // Constructor
    public Animal(String name, Integer age){
        this.name = name;
        this.age = age;
    }

    // Methods
    public void move(){
        System.debug(this.name + ' is moving.');
    }

    public void eat(){
        System.debug(this.name + ' is eating.');
    }
}

// Child class, 'Dog'
class Dog extends Animal implements Pet{
    // Constructor
    public Dog(String name, Integer age){
        super(name, age);
    }

    // Methods
    public void move(){
        System.debug(this.name + ' is running.');
    }

    public void eat(){
        System.debug(this.name + ' is eating bones.');
    }

    // Implemented method from 'Pet' interface
    public void play(){
        System.debug(this.name + ' is playing fetch.');
    }
}

// Child class, 'Cat'
class Cat extends Animal implements Pet{
    // Constructor
    public Cat(String name, Integer age){
        super(name, age);
    }

    // Methods
    public void move(){
        System.debug(this.name + ' is climbing.');
    }

    public void eat(){
        System.debug(this.name + ' is eating fish.');
    }

    // Implemented method from 'Pet' interface
    public void play(){
        System.debug(this.name + ' is playing with yarn.');
    }
}

// Interface, 'Pet'
interface Pet{
    void play();
}

// Create instances of 'Dog' and 'Cat' classes
Dog myDog = new Dog('Buddy', 3);
Cat myCat = new Cat('Whiskers', 5);

// Call methods on instances of 'Dog' and 'Cat' classes
myDog.move(); // Output: Buddy is running.
myCat.eat(); // Output: Whiskers is eating fish.
myDog.play(); // Output: Buddy is playing fetch.
myCat.play(); // Output: Whiskers is playing with yarn.
//Class declaration with inheritance and interface implementation
public class ComplexClass extends SuperClass implements Interface {
    
    //Class variables
    private String name;
    private Integer age;
    List<String> hobbies;
    
    //Constructor
    public ComplexClass(String name, Integer age) {
        this.name = name;
        this.age = age;
        this.hobbies = new List<String>();
    }
    
    //Getter methods for class variables
    public String getName() {
        return this.name;
    }

    public Integer getAge() {
        return this.age;
    }
    
    //Setter method for hobby
    public void setHobby(String hobby) {
        this.hobbies.add(hobby);
    }
    
    //Interface method implementation
    public void showInfo() {
        System.debug('Name: ' + this.name);
        System.debug('Age: ' + this.age);
        System.debug('Hobbies: ' + this.hobbies);
    }
    
    //Super class method override
    public override void printInfo() {
        System.debug('This is a complex class with advanced features.');
    }
    
    //Static method
    public static void showClassDetails() {
        System.debug('This is a class called ComplexClass.');
        System.debug('It has ' + 3 + ' variables and ' + 3 + ' methods.');
    }
}

//Calling the showClassDetails static method
ComplexClass.showClassDetails();
/* Output:
This is a class called ComplexClass.
It has 3 variables and 3 methods. */

//Instantiating a new object of ComplexClass
ComplexClass complexObj = new ComplexClass('John', 25);

//Calling getter methods
System.debug(complexObj.getName()); //Output: John
System.debug(complexObj.getAge()); //Output: 25

//Calling setHobby method
complexObj.setHobby('Reading');

//Calling interface method
complexObj.showInfo();
/* Output: 
Name: John
Age: 25
Hobbies: Reading */

//Calling Super class method
complexObj.printInfo();
/* Output:
This is a complex class with advanced features. */
public class AccountManager {
    // This class manages the creation and updating of accounts in the system
    private List<Account> accounts; // A list of all existing accounts
    private Map<String, Account> accountMap; // A map of accounts where the key is the account name and the value is the account object

    /**
     * Constructor for the AccountManager class
     */
    public AccountManager(){
        this.accounts = new List<Account>();
        this.accountMap = new Map<String, Account>();
    }

    /**
     * Method to create a new account with the given account name and balance
     * @param accountName The name of the new account
     * @param balance The initial balance of the account
     * @return The newly created account object
     */
    public Account createAccount(String accountName, Decimal balance){
        Account newAccount = new Account(accountName, balance);
        this.accounts.add(newAccount);
        this.accountMap.put(accountName, newAccount);
        return newAccount;
    }

    /**
     * Method to update the balance of an existing account
     * @param accountName The name of the account to be updated
     * @param newBalance The new balance to be set for the account
     * @return True if the update was successful, False otherwise
     */
    public Boolean updateBalance(String accountName, Decimal newBalance){
        // Check if the account exists in the map
        if(this.accountMap.containsKey(accountName)){
            // If it does, get the account object from the map
            Account accountToUpdate = this.accountMap.get(accountName);
            // Update the balance of the account
            accountToUpdate.setBalance(newBalance);
            return true;
        }
        // If the account does not exist, return false
        return false;
    }

}
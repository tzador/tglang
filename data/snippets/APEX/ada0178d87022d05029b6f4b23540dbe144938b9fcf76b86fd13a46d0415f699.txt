public class OrderProcessingController {
    // This class performs operations related to processing orders
	
    // Method to check order status
    public static String checkOrderStatus(Integer orderNumber) {
        // call external API to get order status
        String orderStatus = ExternalService.getOrderStatus(orderNumber);
        
        // check if order has been shipped
        if (orderStatus == 'SHIPPED') {
            return 'Order has been shipped';
        }
        
        // check if order has been delivered
        else if (orderStatus == 'DELIVERED') {
            return 'Order has been delivered';
        }
        
        // check if order has been cancelled
        else if (orderStatus == 'CANCELLED') {
            return 'Order has been cancelled';
        }
        
        // return default message if order is still being processed
        else {
            return 'Order is still being processed';
        }
    }
    
    // Method to process multiple orders at once
    public static List<Order> processMultipleOrders(List<Integer> orderNumbers) {
        // list to hold processed orders
        List<Order> processedOrders = new List<Order>();
        
        // loop through the list of order numbers
        for (Integer orderNumber : orderNumbers) {
            // call external API to get order details
            Order order = ExternalService.getOrderDetails(orderNumber);
            
            // update order status to processed
            order.status = 'PROCESSED';
            
            // add order to list of processed orders
            processedOrders.add(order);
        }
        // return list of processed orders
        return processedOrders;
    }
}
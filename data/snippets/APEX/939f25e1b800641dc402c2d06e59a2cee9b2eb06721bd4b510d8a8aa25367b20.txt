/**
* This method executes the specified String query and returns a list
* of the specified sObject type. The query must be a SOQL query string.
* @param soql The query string to execute
* @return A list of sObjects that meet the criteria of the query
*/
public List<sObject> executeQuery(String soql) {
    try {
        //Make the query call to the Salesforce API
        return Database.query(soql);
    } catch (QueryException e) {
        //Handle any exceptions that occur during the query execution
        System.debug('Error executing query: ' + e);
    }
    //If an exception occurs, return an empty list
    return new List<sObject>();
}

/**
* This method creates a new sObject record of the specified type
* and sets the specified field values.
* @param sObjectType The type of sObject to create
* @param fieldValues A map of field names and values to set
* @return The newly created sObject record
*/
public sObject createRecord(String sObjectType, Map<String, Object> fieldValues) {
    //Create a new sObject of the specified type
    sObject newRecord = (sObject)Type.forName(sObjectType).newInstance();
    //Set the field values using the key-value pairs in the map
    newRecord.putAll(fieldValues);
    return newRecord;
}

/**
* This method updates an existing sObject record with the specified Id
* and sets the specified field values.
* @param recordId The Id of the sObject record to update
* @param fieldValues A map of field names and values to set
* @return True if the update was successful, false otherwise
*/
public Boolean updateRecord(Id recordId, Map<String, Object> fieldValues) {
    //Retrieve the existing sObject record using the Id
    sObject existingRecord = Database.query('SELECT Id, ' + String.join(fieldValues.keySet(), ',') + ' FROM ' + recordId.getSObjectType() + ' WHERE Id = \''+recordId+'\' LIMIT 1');
    //Update the record with the new values
    existingRecord.putAll(fieldValues);
    //Attempt to update the record using the Salesforce API
    Database.SaveResult result = Database.update(existingRecord, false);
    //Check the result of the update and return true if successful, false otherwise
    if (result.isSuccess()) {
        return true;
    } else {
        return false;
    }
}
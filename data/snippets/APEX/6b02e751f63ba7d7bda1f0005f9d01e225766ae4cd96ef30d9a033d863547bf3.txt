Schema.SObjectType objectType = Schema.getGlobalDescribe().get('Account'); // retrieves the Account sObject from the global describe
Map<String, Schema.SObjectField> fieldMap = objectType.getDescribe().fields.getMap(); // retrieves a map of all fields on the Account sObject
List<Schema.FieldSetMember> fieldSet = new List<Schema.FieldSetMember>(); // creates a list to store the field set members
for (String fieldName : fieldMap.keySet()) { // loops through each field in the map
    Schema.DescribeFieldResult fieldResult = fieldMap.get(fieldName).getDescribe(); // gets the describe information for the current field
    if (fieldResult.isAccessible() && fieldResult.isCreateable()) { // checks if the field is accessible and createable
        Schema.FieldSetMember fieldMember = new Schema.FieldSetMember(fieldName); // creates a new field set member using the field name
        fieldSet.add(fieldMember); // adds the field set member to the list
    }
}
Schema.FieldSet accountFieldSet = new Schema.FieldSet(); // creates a new field set
accountFieldSet.addAll(fieldSet); // adds all field set members from the list to the field set
List<Schema.FieldSetMember> accountFieldSetMembers = accountFieldSet.getFields(); // retrieves a list of all field set members on the field set
for (Schema.FieldSetMember fieldSetMember : accountFieldSetMembers) { // loops through each field set member
    System.debug('Field Label: ' + fieldSetMember.getLabel() + ' | Field API Name: ' + fieldSetMember.getFieldPath()); // debugs the field label and field API name
}
//class declaration
public class ContactListController {

    //private variables
    private List<Contact> contacts;
    private Map<Id, Contact> contactsMap;

    //constructor
    public ContactListController() {
        contacts = new List<Contact>();
        contactsMap = new Map<Id, Contact>();
    }
    
    //method to retrieve contacts from database and populate list and map
    public void retrieveContacts() {
    
        //query to retrieve all contacts
        contacts = [SELECT Id, Name, Email, Phone, AccountId FROM Contact];
        
        //loop through contacts and add to map using contact Id as key
        for(Contact c : contacts) {
            contactsMap.put(c.Id, c);
        }
    }
    
    //method to add new contact to database and update list and map
    public void addNewContact(String name, String email, String phone, Id accountId) {
    
        //create new contact object
        Contact newContact = new Contact();
        
        //set values for new contact
        newContact.Name = name;
        newContact.Email = email;
        newContact.Phone = phone;
        
        //if accountId is provided, set it for the contact
        if(accountId != null) {
            newContact.AccountId = accountId;
        }
        
        //insert new contact into database
        insert newContact;
        
        //add new contact to list
        contacts.add(newContact);
        
        //add new contact to map using contact Id as key
        contactsMap.put(newContact.Id, newContact);
    }
    
    //method to update existing contact information
    public void updateContact(Contact contactToUpdate) {
    
        //update contact in database
        update contactToUpdate;
        
        //update contact in list using map to get index
        contacts[contactsMap.get(contactToUpdate.Id)] = contactToUpdate;
    }
    
    //method to delete contact from database and list and map
    public void deleteContact(Contact contactToDelete) {
    
        //delete contact from database
        delete contactToDelete;
        
        //remove contact from list
        contacts.remove(contactToDelete);
        
        //remove contact from map
        contactsMap.remove(contactToDelete.Id);
    }
}
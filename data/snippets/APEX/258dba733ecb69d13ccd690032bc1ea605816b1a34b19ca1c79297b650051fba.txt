/**
 * This class acts as a controller for the Contact object
 */
public with sharing class ContactController {
    
    //list of fields to query
    private List<String> fieldsToQuery = new List<String>{'Id', 'FirstName', 'LastName' , 'Email' , 'Phone' , 'MailingCity' , 'MailingState' , 'MailingCountry'};
    
    /**
     * This method returns a list of contacts that belong to a specific account
     * @param accountId the Id of the account to retrieve contacts from
     * @return a list of retrieved contacts 
     */
    public List<Contact> getContactsByAccount(Id accountId) {
        List<Contact> contacts = new List<Contact>();
        
        //query for contacts associated with account
        contacts = [SELECT Id, FirstName, LastName, Email, Phone, MailingCity, MailingState, MailingCountry 
                    FROM Contact WHERE AccountId = :accountId LIMIT 10];
        
        return contacts;
    }
    
    /**
     * This method updates an existing contact record with the given information
     * @param contactId the Id of the contact to update
     * @param firstName the new first name for the contact
     * @param lastName the new last name for the contact
     * @param email the new email for the contact
     * @param phone the new phone number for the contact
     * @param city the new city for the contact's mailing address
     * @param state the new state for the contact's mailing address
     * @param country the new country for the contact's mailing address
     * @return the updated contact record
     */
    public Contact updateContact(Id contactId, String firstName, String lastName, String email, String phone, String city, String state, String country) {
        Contact contactToUpdate = new Contact();
        
        //find existing contact to update
        contactToUpdate = [SELECT Id, FirstName, LastName, Email, Phone, MailingCity, MailingState, MailingCountry 
                           FROM Contact WHERE Id = :contactId LIMIT 1];
        
        //update fields with new information
        contactToUpdate.FirstName = firstName;
        contactToUpdate.LastName = lastName;
        contactToUpdate.Email = email;
        contactToUpdate.Phone = phone;
        contactToUpdate.MailingCity = city;
        contactToUpdate.MailingState = state;
        contactToUpdate.MailingCountry = country;
        
        //update contact record
        update contactToUpdate;
        
        return contactToUpdate;
    }
    
}
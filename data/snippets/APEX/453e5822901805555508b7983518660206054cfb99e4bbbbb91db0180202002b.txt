// This code snippet utilizes a recursive function to search for a value in an array

// Define the function with the input parameters
public static Boolean searchArray(Integer[] arr, Integer target, Integer start, Integer end) {

    // Base case: if start and end are equal, then only one element in the array to compare
    if (start == end) {
        return arr[start] == target;
    }
    else {
        // Calculate the middle index of the array
        Integer mid = (start + end) / 2;

        // If value at middle index is equal to target, return true
        if (arr[mid] == target) {
            return true;
        }
        else {
            // Recursively call the function with updated start and end indices
            if (arr[mid] > target) {
                return searchArray(arr, target, start, mid - 1);
            }
            else {
                return searchArray(arr, target, mid + 1, end);
            }
        }
    }
}

// Define a sample array and target value
Integer[] array = new Integer[]{1, 5, 7, 9, 13, 17};
Integer target = 9;

// Call the searchArray function and print the result
Boolean result = searchArray(array, target, 0, array.size() - 1);
System.debug(result); // Output: true
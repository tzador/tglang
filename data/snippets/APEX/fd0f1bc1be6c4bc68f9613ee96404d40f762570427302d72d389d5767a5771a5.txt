//Create a map to store employee names and their respective salaries
Map<String, Decimal> employeeSalaries = new Map<String, Decimal>();

//Add employees and their salaries to the map
employeeSalaries.put('John', 50000);
employeeSalaries.put('Jane', 60000);
employeeSalaries.put('Bob', 70000);
employeeSalaries.put('Sarah', 80000);
employeeSalaries.put('Mike', 90000);

//Initialize a variable to store the total salary of all employees
Decimal totalSalary = 0;

//Loop through the map and add each employee's salary to the total
for(String employee : employeeSalaries.keySet()){
    totalSalary += employeeSalaries.get(employee);
}

//Print the total salary
System.debug('Total Salary: ' + totalSalary);

//Create a set to store the names of employees with salaries greater than $75,000
Set<String> highSalaryEmployees = new Set<String>();

//Loop through the map and add employees with salaries greater than $75,000 to the set
for(String employee : employeeSalaries.keySet()){
    if(employeeSalaries.get(employee) > 75000){
        highSalaryEmployees.add(employee);
    }
}

//Print the names of high-salary employees
System.debug('High Salary Employees: ' + highSalaryEmployees);

//Create a list to store employee objects
List<Employee__c> employees = new List<Employee__c>();

//Loop through the map and create a new Employee object for each employee, setting their name and salary
for(String employee : employeeSalaries.keySet()){
    Employee__c emp = new Employee__c();
    emp.Name = employee;
    emp.Salary__c = employeeSalaries.get(employee);
    employees.add(emp);
}

//Insert the list of Employee objects into the database
insert employees;

//Create a list to store updated employee objects
List<Employee__c> updatedEmployees = new List<Employee__c>();

//Loop through the list and update the salary of each employee to be 10% higher
for(Employee__c emp : employees){
    emp.Salary__c = emp.Salary__c * 1.1;
    updatedEmployees.add(emp);
}

//Update the list of employee objects in the database
update updatedEmployees;

//Delete the employee objects with salaries less than $60,000
List<Employee__c> deletedEmployees = new List<Employee__c>();
for(Employee__c emp : updatedEmployees){
    if(emp.Salary__c < 60000){
        deletedEmployees.add(emp);
    }
}
delete deletedEmployees;
// This code snippet demonstrates how to implement a custom iterator in APEX

// Define a class named 'CustomIterator' that implements the Iterator interface
public class CustomIterator implements Iterator<MyObject__c> {
    private Integer currentIndex;
    private List<MyObject__c> objects;  
    
    // The constructor initializes the iterator with a list of objects
    public CustomIterator(List<MyObject__c> objList) {
        objects = objList;
        currentIndex = 0;
    }

    // This method checks if there are more items in the list
    public Boolean hasNext() {
        if(currentIndex < objects.size()) {
            return true;
        }
        return false;
    }

    // This method returns the next object in the list
    public MyObject__c next() {
        MyObject__c obj = objects.get(currentIndex);
        currentIndex++;
        return obj;
    }

    // This method is not used in this iterator implementation
    public void remove() {
        throw new UnsupportedException('remove() is not supported');
    }
}

// Instantiate the iterator with a list of MyObject__c records
List<MyObject__c> objects = [SELECT Id, Name FROM MyObject__c];
CustomIterator iterator = new CustomIterator(objects);

// Use a while loop to iterate through the list
while(iterator.hasNext()) {
    MyObject__c obj = iterator.next();
    // Do something with the object
}
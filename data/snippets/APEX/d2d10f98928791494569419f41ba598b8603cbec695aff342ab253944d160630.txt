public class BookStore {
    // Define variables
    String name;
    Integer age;
    List<Book> inventory;

    // Constructor
    public BookStore(String storeName, Integer storeAge, List<Book> books) {
        name = storeName;
        age = storeAge;
        inventory = books;
    }

    // Method to add a new book to inventory
    public void addBook(Book newBook) {
        inventory.add(newBook);
    }

    // Method to remove a book from inventory
    public void removeBook(Book bookToRemove) {
        if (inventory.contains(bookToRemove)) {
            inventory.remove(bookToRemove);
            System.debug(bookToRemove + 'has been successfully removed from inventory.');
        } else {
            System.debug('This book is not currently in inventory.');
        }
    }

    // Method to check if a specific book is in inventory
    public Boolean checkInventory(Book book) {
        if (inventory.contains(book)) {
            return true;
        }
        return false;
    }

    // Method to display all books in inventory
    public void displayInventory() {
        for (Book b : inventory) {
            System.debug('Book Title: ' + b.title);
            System.debug('Author: ' + b.author);
            System.debug('ISBN: ' + b.ISBN);
        }
    }
}

// Create an instance of BookStore and add books to inventory
BookStore myBookStore = new BookStore('ABC Bookstore', 5, new List<Book>{new Book('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565'), new Book('To Kill a Mockingbird', 'Harper Lee', '9780446310789')});

// Add a new book to inventory
myBookStore.addBook(new Book('Pride and Prejudice', 'Jane Austen', '9780486284736'));

// Remove a book from inventory
myBookStore.removeBook(new Book('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565'));

// Check if a specific book is in inventory
Boolean bookInInventory = myBookStore.checkInventory(new Book('To Kill a Mockingbird', 'Harper Lee', '9780446310789'));

// Display all books in inventory
myBookStore.displayInventory();
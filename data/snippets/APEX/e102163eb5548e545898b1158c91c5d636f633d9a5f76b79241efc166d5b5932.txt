/**
 * This is a sample class in APEX language demonstrating a complex function
 */
public class ComplexFunction {

  /*This function takes in an integer value and returns its factorial value
   * @param num - the number to calculate factorial for
   * @return factorial - the calculated factorial value
   */
  public static Integer factorialCalculation(Integer num) {
  
    // initialize variables
    Integer factorial = 1;
    Integer currentNum = num;
    
    // loop through numbers until reaching 1
    while(currentNum > 1) {
      // multiply current value by the previous value
      factorial *= currentNum--;
    }
    
    // return factorial value
    return factorial;
  }
  
  /*This function takes in an integer and checks if it is a prime number
   * @param num - the number to check
   * @return isPrime - boolean value indicating if the number is prime or not
   */
  public static Boolean primeNumberCheck(Integer num) {
  
    // initialize variables
    Boolean isPrime = true;
    Integer i = 2;
    
    // loop through numbers from 2 to half the value
    while(i <= (num/2)) {
      // check if remainder is 0, if yes, then number is not prime
      if (num%i == 0) {
        isPrime = false;
        // break out of loop
        break;
      }
      // increment value of i
      i++;
    }
    
    // return boolean value indicating if number is prime or not
    return isPrime;
  }
}
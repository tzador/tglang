// This code snippet is an example of a complex APEX class with multiple methods and properties

public class ComplexClass {
    // Properties of the class
    private String name;
    private Integer age;
    private Boolean isActive;
    private List<String> hobbies;

    // Constructor method
    public ComplexClass(String name, Integer age, Boolean isActive, List<String> hobbies) {
        this.name = name;
        this.age = age;
        this.isActive = isActive;
        this.hobbies = hobbies;
    }

    // Getter methods for properties
    public String getName() {
        return this.name;
    }

    public Integer getAge() {
        return this.age;
    }

    public Boolean getIsActive() {
        return this.isActive;
    }

    public List<String> getHobbies() {
        return this.hobbies;
    }

    // Setter methods for properties
    public void setName(String name) {
        this.name = name;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    public void setHobbies(List<String> hobbies) {
        this.hobbies = hobbies;
    }

    // Method to check if person is active
    public void checkIfActive() {
        if (this.isActive) {
            System.debug(this.name + ' is currently active.');
        } else {
            System.debug(this.name + ' is currently not active.');
        }
    }

    // Method to add new hobby
    public void addHobby(String hobby) {
        this.hobbies.add(hobby);
    }
}

// Example usage of the class
ComplexClass person = new ComplexClass('John', 25, true, new List<String>{'Reading', 'Sports'});
System.debug(person.getName()); // Output: John
person.checkIfActive(); // Output: John is currently active.
person.addHobby('Cooking');
System.debug(person.getHobbies()); // Output: ('Reading', 'Sports', 'Cooking')
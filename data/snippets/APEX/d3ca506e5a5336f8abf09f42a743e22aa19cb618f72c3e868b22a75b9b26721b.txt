public class ComplexExample {

    // This is a system debug statement
    System.debug('Starting Complex Example Class');

    // This is a comment
    /* This is a 
        multi-line comment */

    // Declaration of variables
    Integer count = 0; // Initializes a variable with the value of 0
    String message = 'Welcome to the complex example!';
    Boolean isActive = true;
    List<Integer> numList = new List<Integer>{1, 2, 3, 4, 5}; // Declares and initializes a list of integers

    // Conditional statements
    if (isActive) {
        System.debug('The system is currently active');
    } else {
        System.debug('The system is currently inactive');
    }

    // Loops
    for (Integer i = 0; i < numList.size(); i++) {
        System.debug('The current number is: ' + numList[i]);
    }

    while (count < 10) {
        System.debug('Count is currently: ' + count);
        count++;
    }

    // Methods
    // This method calculates the sum of two numbers and returns the result
    public Integer calcSum(Integer num1, Integer num2) {
        Integer total = num1 + num2;
        return total;
    }

    // Objects and classes
    public class Person {
        public String name;
        public Integer age;

        // Constructor for the Person class
        public Person(String name, Integer age) {
            this.name = name; // 'this' keyword refers to the current instance of the class
            this.age = age;
        }

        // Method to print the person's information
        public void printInfo() {
            System.debug('Name: ' + name);
            System.debug('Age: ' + age);
        }
    }

    // Instantiating a new Person object
    Person newPerson = new Person('John', 25);

    // Calling methods on the Person object
    newPerson.printInfo();

    // Exception handling
    try {
        // Some code that could throw an exception
    } catch (Exception ex) {
        System.debug('An exception has occurred: ' + ex.getMessage());
    }
}
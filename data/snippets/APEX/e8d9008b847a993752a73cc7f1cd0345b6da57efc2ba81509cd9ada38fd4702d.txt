// Declare a Map to store students' grades
Map<String, Integer> studentGrades = new Map<String, Integer>();

// Add students' names and grades to the map
studentGrades.put('John', 95);
studentGrades.put('Jane', 82);
studentGrades.put('Bob', 76);
studentGrades.put('Samantha', 88);

// Declare a Set to store top performing students
Set<String> topStudents = new Set<String>();

// Loop through the map to find top students
for(String name : studentGrades.keySet()){
  if(studentGrades.get(name) > 90){
    topStudents.add(name);
  }
}

// Declare a custom exception to handle invalid grades
public class InvalidGradeException extends Exception {}

// Declare a method to calculate average grade
public Integer calculateAverageGrade(Map<String, Integer> grades) throws InvalidGradeException{
  Integer total = 0;
  Integer count = 0;

  // Loop through the map to calculate total and count
  for(String name : grades.keySet()){
    Integer grade = grades.get(name);

    // Throw exception if grade is negative
    if(grade < 0){
      throw new InvalidGradeException();
    }

    // Add grade to total and increment count
    total += grade;
    count++;
  }

  // Calculate and return average
  Integer average = total / count;
  return average;
}

// Call method to calculate average grade and handle exceptions
try {
  Integer avgGrade = calculateAverageGrade(studentGrades);
  System.debug('Average grade: ' + avgGrade);
} catch (InvalidGradeException e) {
  System.debug('Invalid grade entered!');
}

// Loop through top students set and print their names
for(String name : topStudents){
  System.debug(name + ' is a top performing student!');
}
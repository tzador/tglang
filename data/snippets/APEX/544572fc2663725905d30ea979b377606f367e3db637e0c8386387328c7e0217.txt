// This code snippet is a complex method that calculates the fibonacci sequence up to a given number
/*
* @param {Integer} num the number up to which the fibonacci sequence should be calculated
* @return {List<Integer>} list of fibonacci numbers up to the given number 
*/ 

public static List<Integer> fibonacci(int num) {
    List<Integer> fibList = new List<Integer>(); // initialize list to hold fibonacci numbers
    fibList.add(0); // add first number which is always 0

    if (num == 0) { // base case: return list with first number if num is 0
        return fibList;
    }

    fibList.add(1); // add second number which is always 1

    // use a for loop to calculate subsequent fibonacci numbers up to given number
    for (Integer i = 2; i <= num; i++) {
        // add previous two numbers in the list to get the next fibonacci number
        Integer nextNum = fibList[i-1] + fibList[i-2];
        fibList.add(nextNum); // add the next number to the list
    }

    return fibList; // return list of fibonacci numbers up to the given number
}
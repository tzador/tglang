//Create a class to represent a mathematical equation
public class Equation {

    //Define private variables for the equation's values
    private Double value1;
    private Double value2;
    private String operation;

    //Constructor method to initialize equation's values
    public Equation(Double value1, Double value2, String operation) {
        this.value1 = value1;
        this.value2 = value2;
        this.operation = operation;
    }

    //Method to calculate and return the result of the equation
    public Double calculate() {

        //Use a switch statement to determine which operation to perform
        switch (operation) {

            //If operation is addition, add the values and return the result
            case 'add':
                return value1 + value2;

            //If operation is subtraction, subtract the values and return the result
            case 'subtract':
                return value1 - value2;

            //If operation is multiplication, multiply the values and return the result
            case 'multiply':
                return value1 * value2;

            //If operation is division, divide the values and return the result
            case 'divide':
                return value1 / value2;

            //If an invalid operation is passed in, throw an exception
            default:
                throw new Exception('Invalid operation');
        }
    }

    //Method to check if the equation is balanced, meaning the result is the same on both sides
    public Boolean isBalanced() {
        //Calculate the result of the equation
        Double result = calculate();

        //Create a new equation with the result as one of the values
        Equation balancedEquation = new Equation(result, result, 'subtract');

        //Calculate the result of the balanced equation
        Double balancedResult = balancedEquation.calculate();

        //Check if the two results are equal and return the result
        return result == balancedResult;
    }
}
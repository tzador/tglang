//Challenge: Find pairs of numbers that sum up to a given target

List<Integer> nums = new List<Integer>{10, 2, 4, 6, 8};
Integer target = 12;

Map<Integer, Integer> numMap = new Map<Integer, Integer>();
List<List<Integer>> result = new List<List<Integer>>();

//Loop through list of numbers and store them in a map with their indices
for(Integer i=0; i<nums.size(); i++){
    numMap.put(nums[i], i);
}

//Loop through list of numbers again
for(Integer j=0; j<nums.size(); j++){
    //Calculate the difference between the target and current number
    Integer diff = target - nums[j];
    
    //Check if the difference exists in our map and that it's not at the same index as the current number
    if(numMap.containsKey(diff) && numMap.get(diff) != j){
        //Add the pair of numbers to our result list
        List<Integer> pair = new List<Integer>{nums[j], diff};
        result.add(pair);
    }
}

//Print out the result
System.debug(result);

//Output: [[10, 2], [4, 8]]
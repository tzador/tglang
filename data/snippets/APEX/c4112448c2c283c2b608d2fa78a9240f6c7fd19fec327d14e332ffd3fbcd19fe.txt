/**
 * This class represents a custom object called Book with various properties and methods
 * to manipulate and retrieve data.
 **/
public class Book {
    
    // Properties of Book object
    private String title;
    private String author;
    private Integer year;
    private Double price;
    private Boolean isAvailable;
    private List<String> genres;
    
    /**
     * Constructor for creating a new Book object with specified title, author, year, price,
     * and availability status.
     * 
     * @param title the title of the book
     * @param author the author of the book
     * @param year the year the book was published
     * @param price the price of the book
     * @param isAvailable the availability status of the book
     **/
    public Book(String title, String author, Integer year, Double price, Boolean isAvailable) {
        this.title = title;
        this.author = author;
        this.year = year;
        this.price = price;
        this.isAvailable = isAvailable;
        this.genres = new List<String>();
    }
    
    /**
     * Method to add a genre to the list of genres of the Book object.
     * 
     * @param genre the genre to be added
     **/
    public void addGenre(String genre) {
        this.genres.add(genre);
    }
    
    /**
     * Method to check if the Book object has a specified genre.
     * 
     * @param genre the genre to check
     * @return true if the Book object has the specified genre, false otherwise
     **/
    public Boolean hasGenre(String genre) {
        return this.genres.contains(genre);
    }
    
    /**
     * Method to retrieve the price of the Book object.
     * 
     * @return the price of the Book object
     **/
    public Double getPrice() {
        return this.price;
    }
    
    /**
     * Method to rent the Book object if it is available.
     * Sets the availability status to false.
     **/
    public void rentBook() {
        if (this.isAvailable) {
            this.isAvailable = false;
        }
    }
    
    /**
     * Method to sell the Book object if it is available and the price is greater than $10.
     * Sets the availability status to false and returns the price.
     * If the price is less than or equal to $10, returns null.
     * 
     * @return the price of the book if it is sold, null if the book is not sold
     **/
    public Double sellBook() {
        if (this.isAvailable && this.price > 10) {
            this.isAvailable = false;
            return this.price;
        }
        return null;
    }
}
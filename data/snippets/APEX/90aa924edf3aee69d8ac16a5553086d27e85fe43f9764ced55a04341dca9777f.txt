public class ContactController {
    // This method inputs a list of Contacts and outputs a Map of LastName to Contact
    public static Map<String, Contact> getContactsMap(List<Contact> contacts) {
        
        // Initialize a map to store the contact records
        Map<String, Contact> contactsMap = new Map<String, Contact>();

        // Loop through the input list of contacts
        for (Contact c : contacts) {
            // Check if the contact's last name is already a key in the map
            if (contactsMap.containsKey(c.LastName)) {
                // Get the existing contact record from the map
                Contact existingContact = contactsMap.get(c.LastName);

                // Update the existing contact record with values from the input contact
                existingContact.FirstName = c.FirstName;
                existingContact.Email = c.Email;
                existingContact.Phone = c.Phone;
            } else {
                // If the contact's last name is not a key in the map, add it to the map
                contactsMap.put(c.LastName, c);
            }
        }

        // Return the map of LastName to Contact
        return contactsMap;
    }
    
    // This method prints out the names of all contacts in the given map
    public static void displayContacts(Map<String, Contact> contactsMap) {
        // Get a set of all the keys (last names) in the map
        Set<String> keySet = contactsMap.keySet();
        
        // Loop through the key set and print out the corresponding contact's full name
        for (String key : keySet) {
            Contact c = contactsMap.get(key);
            System.debug(c.FirstName + ' ' + c.LastName);
        }
    }
}
public with sharing class AccountController {

    // Get all active accounts
    public List<Account> getActiveAccounts() {
        List<Account> activeAccounts = new List<Account>();
        String query = 'SELECT Id, Name FROM Account WHERE IsActive = true';
        try {
            activeAccounts = Database.query(query);
        } catch (Exception ex) {
            System.debug('Exception: ' + ex.getMessage());
        }
        return activeAccounts;
    }

    // Get all contacts associated with an account
    public List<Contact> getContactsByAccountId(Id accountId) {
        List<Contact> contacts = new List<Contact>();
        String query = 'SELECT Id, Name, Email FROM Contact WHERE AccountId = :accountId';
        try {
            contacts = Database.query(query);
        } catch (Exception ex) {
            System.debug('Exception: ' + ex.getMessage());
        }
        return contacts;
    }

    // Create a new account and associate it with a contact
    public void createAccountWithContact(String accountName, String contactName, String contactEmail) {
        Account acc = new Account();
        acc.Name = accountName;
        acc.Phone = '123-456-7890';
        insert acc;

        Contact con = new Contact();
        con.FirstName = contactName;
        con.LastName = 'Test';
        con.Email = contactEmail;
        con.AccountId = acc.Id;
        insert con;
    }

    // Update an existing account
    public void updateAccount(Id accountId, String newName) {
        Account acc = new Account(Id = accountId);
        acc.Name = newName;
        update acc;
    }

    // Delete an account and its associated contacts
    public void deleteAccount(Id accountId) {
        List<Contact> contacts = getContactsByAccountId(accountId);
        if (contacts != null && contacts.size() > 0) {
            delete contacts;
        }

        Account acc = new Account(Id = accountId);
        delete acc;
    }

}
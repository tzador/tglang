/**
* This function takes in a list of integers and a target value and returns a list of pairs
* of integers whose sum is equal to the target value
* @param nums the list of integers
* @param target the target value
* @return a list of pairs of integers
*/
fun findPairs(nums: List<Int>, target: Int): List<Pair<Int, Int>> {
    val pairs = mutableListOf<Pair<Int, Int>>() // initialize empty list for pairs
    nums.forEachIndexed { index, num1 -> // iterate through the list of integers
        val remainder = target - num1 // calculate remainder needed for target value
        nums.subList(index + 1, nums.size).forEach { num2 ->
            if (num2 == remainder) { // check if remainder exists in remaining list of integers
                pairs.add(num1 to num2) // add pair of nums to list of pairs
            }
        }
    }
    return pairs // return list of pairs
}

// example usage
val numbers = listOf(4, 7, 2, 9, 1, 5)
val target = 6
val pairs = findPairs(numbers, target)
println(pairs) // output: [(4, 2), (7, 1)]
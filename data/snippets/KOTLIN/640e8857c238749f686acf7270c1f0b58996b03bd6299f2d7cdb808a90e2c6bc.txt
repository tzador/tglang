// Function to merge two sorted arrays in Kotlin
fun mergeArrays(array1: IntArray, array2: IntArray): IntArray {
    // initializing variables to store the length of both arrays
    val length1 = array1.size
    val length2 = array2.size

    // initializing variables to track current index of both arrays and merged array
    var index1 = 0
    var index2 = 0
    var index = 0

    // initializing merged array with enough space to hold all elements from both arrays
    val mergedArray = IntArray(length1 + length2)

    // looping through both arrays until one of them reaches its end
    while (index1 < length1 && index2 < length2) {
        // comparing elements in both arrays and adding the smaller element to the merged array
        if (array1[index1] < array2[index2]) {
            mergedArray[index] = array1[index1]
            index1++
        } else {
            mergedArray[index] = array2[index2]
            index2++
        }
        // incrementing index of merged array
        index++
    }

    // checking if any elements are remaining in either array and adding them to the end of the merged array
    while (index1 < length1) {
        mergedArray[index] = array1[index1]
        index1++
        index++
    }

    while (index2 < length2) {
        mergedArray[index] = array2[index2]
        index2++
        index++
    }

    // returning the merged array 
    return mergedArray
}
import java.util.*

// Create an interface for a geometric shape
interface Shape {
    // Define abstract functions for calculating the perimeter and area
    fun calculatePerimeter(): Double
    fun calculateArea(): Double
}

// Create a class for a rectangle that implements the Shape interface
class Rectangle(private val length: Double, private val width: Double) : Shape {

    // Implement the abstract functions to calculate the perimeter and area
    override fun calculatePerimeter(): Double {
        return 2 * (length + width)
    }

    override fun calculateArea(): Double {
        return length * width
    }
}

// Create a class for a circle that implements the Shape interface
class Circle(private val radius: Double) : Shape {

    // Implement the abstract functions to calculate the perimeter and area
    override fun calculatePerimeter(): Double {
        return 2 * Math.PI * radius
    }

    override fun calculateArea(): Double {
        return Math.PI * radius * radius
    }
}

// Main function to test the implementation
fun main(args: Array<String>) {
    // Create a new instance of a rectangle with length 5 and width 3
    val rectangle = Rectangle(5.0, 3.0)

    // Calculate and print the perimeter and area of the rectangle
    print("Perimeter of rectangle: ${rectangle.calculatePerimeter()}")
    print("\nArea of rectangle: ${rectangle.calculateArea()}")

    // Create a new instance of a circle with radius 4
    val circle = Circle(4.0)

    // Calculate and print the perimeter and area of the circle
    print("\nPerimeter of circle: ${circle.calculatePerimeter()}")
    print("\nArea of circle: ${circle.calculateArea()}")
}
fun countDuplicates(list: List<Int>): Map<Int, Int> {
    // Define a mutable map to store element and its count
    val duplicatesMap = mutableMapOf<Int, Int>()

    // Loop through the list of integers
    list.forEach { number ->
        // Check if the element exists in the map as a key
        if (duplicatesMap.containsKey(number)) {
            // Increment the count of the element by 1
            duplicatesMap[number] = duplicatesMap[number]!! + 1
        } else {
            // Add the element to the map with a count of 1
            duplicatesMap[number] = 1
        }
    }

    // Filter out the elements with a count of 1
    duplicatesMap.filterValues { it != 1 }

    // Return the map with the element and its count
    return duplicatesMap
}

// Example input list
val numbers = listOf(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7)

// Call the function and store the output in a map
val duplicates = countDuplicates(numbers)

// Print the output
println(duplicates)

// Output: {1=2, 2=2, 3=2, 4=2, 5=2}
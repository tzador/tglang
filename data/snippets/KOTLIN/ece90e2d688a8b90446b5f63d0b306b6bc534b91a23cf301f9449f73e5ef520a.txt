// This code snippet shows an example of a function that performs a binary search on a given array.
// It takes in a sorted array and a target value as parameters and returns the index of the target value if found, or -1 if not found.

// Function to perform binary search
fun binarySearch(array: IntArray, target: Int): Int {
    var startIndex = 0
    var endIndex = array.size - 1

    // Loop until the startIndex and endIndex cross each other
    while (startIndex <= endIndex) {
        // Calculate the midpoint of the array
        val mid = startIndex + (endIndex - startIndex) / 2

        // Check if the target value is equal to the midpoint value
        if (array[mid] == target) {
            return mid
        }

        // Check if target value is less than the midpoint, update endIndex
        if (target < array[mid]) {
            endIndex = mid - 1
        } else { // Target value is greater than the midpoint, update startIndex
            startIndex = mid + 1
        }
    }
    // Target value not found, return -1
    return -1
}

// Sample usage
val array = intArrayOf(1, 3, 5, 7, 9, 11, 13, 15)
val target = 11

// Perform binary search on the array
val index = binarySearch(array, target)

// Print the index of the target value
println("Index of $target is $index")  // Output: Index of 11 is 5
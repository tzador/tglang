fun main() {
    // Declare and initialize list of sets
    val sets = listOf(setOf("apple", "banana", "orange"), setOf("grapes", "strawberry", "blueberry"), setOf("watermelon", "pineapple", "mango"))

    // Create a new set from the first set in the list
    val set1 = sets[0]

    // Print out the elements of set1
    println("Set1 Elements:")
    set1.forEach { element ->
        println(element)
    }

    // Add "kiwi" to set1
    set1.add("kiwi")

    // Check if set1 contains "kiwi"
    if (set1.contains("kiwi")) {
        println("Set1 now contains 'kiwi'")
    }

    // Create a new set with elements from both set1 and set2
    val set2 = set1.union(sets[1])

    // Print out the elements of set2
    println("Set2 Elements:")
    set2.forEach { element ->
        println(element)
    }

    // Find the intersection of set1 and set2
    val intersection = set1.intersect(set2)

    // Print out the elements of the intersection
    println("Intersection of set1 and set2:")
    intersection.forEach { element ->
        println(element)
    }

    // Create a map of fruits and their corresponding colors
    val fruitColors = mapOf("apple" to "red", "banana" to "yellow", "orange" to "orange", "kiwi" to "green")

    // Print out the color of each element in set2
    set2.forEach { element ->
        println("The color of $element is ${fruitColors[element]}")
    }
}
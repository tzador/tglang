class Person(val name: String, var age: Int) {
    // primary constructor with properties name and age

    init {
        // initializer block
        println("Creating a new person named $name")
    }

    fun introduce() {
        // introduce function
        println("Hi, my name is $name and I am $age years old.")
    }

    companion object {
        // companion object
        var location: String = "Kotlin City"
            get() = field
            set(value) {
                field = value
                println("The location has been changed to $value.")
            }
    }

    inner class Job(private val title: String, private val salary: Int) {
        // inner class Job with properties title and salary
        fun displayInfo() {
            // displayInfo function
            println("I am a $title and I make $salary dollars a year.")
            // accessing outer class property
            println("I live in $location.")
        }
    }
}

fun main() {
    // main function
    val person = Person("John", 30)
    // creating a new instance of Person class
    person.introduce() // calling introduce function
    Person.location = "Kotlinville" // changing location using companion object
    val job = person.Job("Developer", 100000) // creating a new instance of inner class
    job.displayInfo() // calling displayInfo function
}
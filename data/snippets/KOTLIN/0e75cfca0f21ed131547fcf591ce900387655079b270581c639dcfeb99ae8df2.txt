/**
 * Defines a class called Animal with properties name and type
 */
class Animal(val name: String, val type: String) {

    /**
     * Defines a function to make an animal sound
     * @return the sound the animal makes
     */
    fun makeSound(): String {
        return when(type) {
            "dog" -> "woof"
            "cat" -> "meow"
            "duck" -> "quack"
            else -> "unknown"
        }
    }
}

/**
 * Defines an interface called Trainer
 * with a function to train animals
 * @property animal the animal to be trained
 */
interface Trainer {
    fun train(animal: Animal)
}

/**
 * Defines a class called DogTrainer that implements the Trainer interface
 */
class DogTrainer : Trainer {

    /**
     * Defines a function to train dogs to bark on command
     * @param animal the animal to be trained
     */
    override fun train(animal: Animal) {
        if (animal.type == "dog") {
            println("${animal.name} learned to bark!")
        } else {
            println("${animal.name} cannot be trained to bark")
        }
    }
}

fun main() {
    // Creates an instance of the Animal class
    val dog = Animal("Rufus", "dog")
    // Creates an instance of the DogTrainer class
    val trainer = DogTrainer()
    // Calls the train function on the dog instance
    trainer.train(dog)
    // Calls the makeSound function on the dog instance
    println("When ${dog.name} makes a sound, it goes ${dog.makeSound()}")
}

/*
Output:
Rufus learned to bark!
When Rufus makes a sound, it goes woof
*/
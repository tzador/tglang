// Annotated function that performs a binary search on a sorted array
fun <T: Comparable<T>> binarySearch(sortedArray: Array<T>, target: T): Int {
    var left = 0 // Left boundary of array
    var right = sortedArray.size - 1 // Right boundary of array

    // Loop until left and right boundaries meet
    while (left <= right) {
        var mid = (left + right) / 2 // Middle index of subarray

        // Target value is found
        if (sortedArray[mid] == target) {
            return mid // Return index of target
        } else if (sortedArray[mid] < target) { // Target value is higher than middle value
            left = mid + 1 // Shift left boundary to mid + 1
        } else { // Target value is lower than middle value
            right = mid - 1 // Shift right boundary to mid - 1
        }
    }

    // Target value not found, return -1
    return -1 
}
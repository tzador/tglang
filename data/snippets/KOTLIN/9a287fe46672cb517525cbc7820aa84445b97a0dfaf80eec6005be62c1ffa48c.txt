/* This is a complex code snippet in Kotlin that creates a custom user class with various properties and methods. */

/* Defining the custom user class */
class User(
    var username: String,                   // Property that stores the user's username
    var password: String,                   // Property that stores the user's password
    var email: String,                      // Property that stores the user's email
    var age: Int,                           // Property that stores the user's age
    var isAdmin: Boolean = false            // Property that stores the user's Admin status, defaults to false
) {
    /* Method to update the user's age */
    fun updateAge(newAge: Int) {
        this.age = newAge                     // Set age property to the new age
        println("User ${this.username}'s age has been updated to $age")     // Print confirmation message
    }

    /* Method to change the user's password */
    fun changePassword(newPassword: String) {
        this.password = newPassword          // Set password property to the new password
        println("User ${this.username}'s password has been changed")     // Print confirmation message
    }

    /* Method to check if the user is an admin */
    fun checkAdminStatus(): Boolean {
        return this.isAdmin                  // Return the value of isAdmin property
    }
}

/* Creating a new instance of the User class */
val user1 = User("JohnDoe", "password123", "johndoe@example.com", 32)

/* Calling methods on the user1 object */
user1.updateAge(35)                           // Update user1's age to 35
user1.changePassword("newPassword123")        // Change user1's password
println("Is ${user1.username} an admin? ${user1.checkAdminStatus()}")   // Check if user1 is an admin

/* Output:
    User JohnDoe's age has been updated to 35
    User JohnDoe's password has been changed
    Is JohnDoe an admin? false
*/
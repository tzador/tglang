/**
 * This is a class representing a bank account.
 *
 * @param accountNumber The unique account number for each account.
 * @param balance The current balance of the account.
 */
class BankAccount(val accountNumber: Int, var balance: Double) {

    /**
     * A function to deposit an amount into the account.
     *
     * @param amount The amount to be deposited.
     */
    fun deposit(amount: Double) {
        if (amount > 0) {
            balance += amount
        }
    }

    /**
     * A function to withdraw an amount from the account.
     *
     * @param amount The amount to be withdrawn.
     * @return Returns a boolean value indicating if the withdrawal was successful or not.
     */
    fun withdraw(amount: Double): Boolean {
        if (balance >= amount) {
            balance -= amount
            return true
        } else {
            return false
        }
    }

    /**
     * An overloaded function to withdraw an amount from the account with an optional fee.
     * 
     * @param amount The amount to be withdrawn.
     * @param fee The optional transaction fee, defaults to 0. 
     * @return Returns a boolean value indicating if the withdrawal was successful or not. 
     */
    fun withdraw(amount: Double, fee: Double = 0.0): Boolean {
        if (balance >= amount + fee) {
            balance -= amount + fee
            return true
        } else {
            return false
        }
    }

    /**
     * A function to transfer an amount from one account to another.
     *
     * @param account The account to transfer funds to.
     * @param amount The amount to be transferred.
     * @return Returns a boolean value indicating if the transfer was successful or not.
     */
    fun transfer(account: BankAccount, amount: Double): Boolean {
        if (balance >= amount) {
            balance -= amount
            account.deposit(amount)
            return true
        } else {
            return false
        }
    }
}

// Sample usage of the BankAccount class
val account1 = BankAccount(1234, 1000.0)
val account2 = BankAccount(5678, 500.0)

account1.deposit(200.0)
println(account1.balance) // Output: 1200.0

account1.withdraw(300.0)
println(account1.balance) // Output: 900.0

account1.transfer(account2, 500.0)
println(account1.balance) // Output: 400.0
println(account2.balance) // Output: 1000.0
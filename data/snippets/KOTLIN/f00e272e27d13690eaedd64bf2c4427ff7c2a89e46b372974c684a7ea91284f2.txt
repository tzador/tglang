/**
 * This is a complex code snippet in Kotlin
 * It includes functions, classes, and loops
 */

// A function that finds the maximum value in an array of integers
fun max(array: IntArray): Int {
    var max = array[0] // initialize max as the first element in the array
    // loop through the array and compare each element to find the maximum value
    for (i in 1 until array.size) {
        if (array[i] > max) {
            max = array[i]
        }
    }
    // return the maximum value
    return max
}

// A class representing a person with name and age properties
class Person(val name: String, val age: Int)

// A function that creates a list of people based on their names and ages
fun createPeople(names: List<String>, ages: List<Int>): List<Person> {
    var people = mutableListOf<Person>() // initialize an empty list of people
    // loop through the names and ages lists simultaneously using the zip function
    for ((name, age) in names.zip(ages)) {
        // create a new person object and add it to the list
        people.add(Person(name, age))
    }
    // return the list of people
    return people
}

fun main() {
    // an array of integers
    val numbers = intArrayOf(5, 3, 8, 2, 1)
    // print the maximum value in the array
    println("The maximum value in the array is ${max(numbers)}")

    // list of names and ages
    val names = listOf("John", "Mary", "Bob")
    val ages = listOf(24, 32, 18)
    // create a list of people using the function
    val people = createPeople(names, ages)
    // loop through the list and print each person's name and age
    for (person in people) {
        println("${person.name} is ${person.age} years old")
    }
}

/* Output:
The maximum value in the array is 8
John is 24 years old
Mary is 32 years old
Bob is 18 years old
*/
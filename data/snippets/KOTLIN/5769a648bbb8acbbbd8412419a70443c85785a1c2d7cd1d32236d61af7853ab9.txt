// This code snippet uses the coroutine feature in Kotlin to fetch data from an API asynchronously

import kotlinx.coroutines.*
import java.net.URL

// Coroutine function to make an API call and return the result as a string
suspend fun fetchData(url: String): String {
    return URL(url).readText()
}

// Create a coroutine scope to launch the coroutine
val scope = CoroutineScope(Dispatchers.IO)

// Launch the coroutine and use the await() function to get the result
val result = scope.launch {
    val data = fetchData("https://jsonplaceholder.typicode.com/posts/1")
    println(data)
}.await()

// Print the result
println(result)

// Close the coroutine scope
scope.close()
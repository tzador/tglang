/**
 * This is a function that calculates the Fibonacci sequence up to a given number.
 * 
 * @param num The number up to which the Fibonacci sequence is calculated.
 * 
 * @return An array containing the calculated Fibonacci sequence.
 */
fun fibonacci(num: Int): Array<Int> {
    var sequence = mutableListOf<Int>() // initialize an empty mutable list for sequence
    sequence.add(0) // add 0 to sequence
    var current = 1 // initialize current element to 1
    var previous = 0 // initialize previous element to 0

    // iterate until current element is greater than the given number
    while (current <= num) {
        sequence.add(current) // add current element to sequence
        val next = current + previous // calculate next element in sequence
        previous = current // set previous element to current element
        current = next // set current element to next element
    }
    return sequence.toTypedArray() // convert the list to array and return
}

// example usage
val fibonacciSequence = fibonacci(10) // calculate Fibonacci sequence up to 10
print(fibonacciSequence.joinToString()) // output the sequence as a string separated by commas

// Output: 0, 1, 1, 2, 3, 5, 8
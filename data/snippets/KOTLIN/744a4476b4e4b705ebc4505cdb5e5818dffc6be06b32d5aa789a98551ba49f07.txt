/** This program generates a Fibonacci sequence up to the specified limit using recursion. */

/* Define a recursive function to calculate the Fibonacci sequence */
fun fibonacci(n: Int): Int {
    // Base case - return 0 if input is 0, 1 if input is 1
    if (n == 0) {
        return 0
    } else if (n == 1) {
        return 1
    }

    // Recursive case - return the sum of the previous two values in the sequence
    return fibonacci(n-1) + fibonacci(n-2)
}

/* Declare a constant for the limit of the Fibonacci sequence */
val LIMIT: Int = 10

/* Initialize an empty list to store the sequence */
val fibonacciSequence: MutableList<Int> = mutableListOf()

/* Loop through the limit and add each Fibonacci value to the sequence list */
for (i in 0..LIMIT) {
    val value: Int = fibonacci(i)
    fibonacciSequence.add(value)
}

/* Print out the Fibonacci sequence */
println("Fibonacci sequence up to $LIMIT:")
println(fibonacciSequence)
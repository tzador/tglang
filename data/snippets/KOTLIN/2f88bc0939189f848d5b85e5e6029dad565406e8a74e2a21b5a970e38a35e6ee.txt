// This code snippet demonstrates a function that utilizes higher-order functions and lambda expressions.
val listOfNumbers = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
val filteredList = listOfNumbers.filter { number -> number % 2 == 0 } // Uses a lambda expression to filter even numbers.
println(filteredList) // Outputs: [2, 4, 6, 8, 10]

// Higher-order function that takes in a list of numbers and a lambda expression to perform an operation on each number.
fun performOperation(list: List<Int>, operation: (Int) -> Int): List<Int> {
    val resultList = mutableListOf<Int>()
    for (number in list) {
        resultList.add(operation(number))
    }
    return resultList
}

// Example of using the higher-order function to perform addition on all numbers in the list.
val addedList = performOperation(listOfNumbers) { number -> number + 5 }
println(addedList) // Outputs: [6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
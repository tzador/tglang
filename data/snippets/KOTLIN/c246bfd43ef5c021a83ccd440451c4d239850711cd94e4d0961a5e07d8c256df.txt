// This is a function that takes in three parameters
// and returns the sum of all three numbers
fun sum(x: Int, y: Int, z: Int): Int {
    return x + y + z
}

// This is a function that takes in a list of numbers
// and returns the average of the numbers
fun average(numbers: List<Int>): Int {
    var sum = 0
    for (num in numbers) {
        sum += num
    }
    return sum / numbers.size
}

// This is a class representing a student
class Student(
    val name: String,
    val age: Int,
    var major: String
) {
    fun changeMajor(newMajor: String) {
        major = newMajor
    }
}

// This is an extension function on the Int class
// It checks if a number is prime or not
fun Int.isPrime(): Boolean {
    if (this < 2) return false
    else if (this == 2) return true
    else if (this % 2 == 0) return false
    else {
        var i = 3
        while (i * i <= this) {
            if (this % i == 0) return false
            i += 2
        }
        return true
    }
}

// This is a higher-order function that takes in another function as a parameter
// It maps a list of numbers based on the function that's passed in
fun map(numbers: List<Int>, transform: (Int) -> Int): List<Int> {
    val result = mutableListOf<Int>()
    for (num in numbers) {
        result.add(transform(num))
    }
    return result
}

// This is a simple usage of the functions and classes defined above
fun main() {
    val sum = sum(3, 5, 7) // sum = 15
    val average = average(listOf(3, 5, 7)) // average = 5
    val student = Student("John", 21, "Computer Science") // student with name John, age 21, and major Computer Science
    student.changeMajor("Mechanical Engineering") // student's major changed to Mechanical Engineering
    val isTenPrime = 10.isPrime() // isTenPrime = false
    val squareNumbers = map(listOf(1, 2, 3, 4, 5)) { num -> num * num } // squareNumbers = [1, 4, 9, 16, 25]
}
// This is a function that takes in two lists and returns their intersection

fun listIntersection(list1: List<Int>, list2: List<Int>): List<Int> {
    val intersection = mutableListOf<Int>()
    
    // create a set from list1
    val set = setOf<Int>(*list1.toTypedArray())
    
    // loop through list2, check if set contains the element, if yes add it to intersection
    for (element in list2) {
        if (set.contains(element)) {
            intersection.add(element)
        }
    }
    
    // return the intersection list
    return intersection
}

// example usage of function
val list1 = listOf(1, 3, 5, 7, 9)
val list2 = listOf(2, 4, 6, 8, 10)
println(listIntersection(list1, list2)) // prints an empty list as there are no common elements

val list3 = listOf(1, 3, 5, 7, 9)
val list4 = listOf(1, 3, 5)
println(listIntersection(list3, list4)) // prints [1, 3, 5], as those are the common elements between the two lists
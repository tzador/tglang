// This code snippet uses object-oriented concepts in Kotlin to create a class called "Animal"

/*class Animal: 
* This is the class declaration with the name "Animal"
* Contains properties and methods that define an animal object
* Can be instantiated to create individual animal objects */

class Animal (
    
    // Properties
    var name: String, 
    var species: String, 
    var age: Int, 
    var isCarnivore: Boolean,
    
    // Constructor with default values
    constructor (name: String = "Unknown", species: String = "Unknown", age: Int = 0, isCarnivore: Boolean = false) 
    
    // Methods
    fun eat(food: String) {
        if (isCarnivore) { // Check if animal is a carnivore
            println("$name the $species ate $food") // Print statement if true
        } else {
            println("$name the $species doesn't eat $food") // Print statement if false
        }
    }
    
    fun makeSound() {
        println("$name the $species made a sound") // Print statement to represent animal making a sound
    }
)

// Creating an instance of the Animal class
val tiger = Animal("Tigger", "Tiger", 8, true) // Assigning values to properties using primary constructor 

// Accessing instance properties and methods
tiger.makeSound() // Output: Tigger the Tiger made a sound
tiger.eat("meat") // Output: Tigger the Tiger ate meat
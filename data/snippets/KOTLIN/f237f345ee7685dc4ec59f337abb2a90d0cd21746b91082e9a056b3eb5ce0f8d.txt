// create a function that takes in two strings and returns the sum of their lengths
fun sumOfLengths(str1: String, str2: String): Int {
    return str1.length + str2.length
}

// create a list of names and print out the length of each name
val names = listOf("Jack", "Mary", "John", "Elizabeth")
for (name in names) {
    println("${name} has a length of ${name.length}.")
}

// create a class called Person with properties name, age, and occupation
class Person(val name: String, var age: Int, var occupation: String) {
    // create a method to print out a greeting for the person
    fun greet() {
        println("Hello, my name is ${this.name}. I am ${age} years old and I work as a ${occupation}.")
    }
}

// create a list of Person objects and call the greet method for each person
val people = listOf(Person("Bob", 25, "Teacher"), Person("Alice", 30, "Engineer"), Person("Mike", 40, "Doctor"))
for (person in people) {
    person.greet()
}

// create a data class for a book with properties title, author, and year published
data class Book(val title: String, val author: String, val yearPublished: Int)

// create a map of books with titles as keys and Book objects as values
val books = mapOf(
    "Pride and Prejudice" to Book("Pride and Prejudice", "Jane Austen", 1813),
    "To Kill a Mockingbird" to Book("To Kill a Mockingbird", "Harper Lee", 1960),
    "The Great Gatsby" to Book("The Great Gatsby", "F. Scott Fitzgerald", 1925)
)
// print out the details of each book in the map
for (title in books.keys) {
    println("${title} by ${books[title]?.author} was published in ${books[title]?.yearPublished}.")
}
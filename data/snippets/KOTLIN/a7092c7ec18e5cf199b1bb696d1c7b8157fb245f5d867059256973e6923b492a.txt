import kotlin.math.*

// Create a class named "Rectangle" with private properties for length and width
// and a method to calculate the area of the rectangle
class Rectangle(private val length: Double, private val width: Double) {

    // Create a method to calculate the area of the rectangle
    fun getArea(): Double {
        return length * width
    }
}

// Create a class named "Circle" with a private property for radius
// and a method to calculate the area of the circle
class Circle(private val radius: Double) {

    // Create a method to calculate the area of the circle
    fun getArea(): Double {
        return PI * radius.pow(2)
    }
}

// Create a function that takes in a shape and returns the area of that shape
fun calculateArea(shape: Any): Double {
    return when (shape) {
        is Rectangle -> shape.getArea()
        is Circle -> shape.getArea()
        else -> throw IllegalArgumentException("Invalid shape type")
    }
}

// Create an instance of Rectangle
val rectangle = Rectangle(5.0, 10.0)

// Create an instance of Circle
val circle = Circle(3.0)

// Call the calculateArea function with the rectangle instance
val rectangleArea = calculateArea(rectangle)

// Call the calculateArea function with the circle instance
val circleArea = calculateArea(circle)

// Print out the areas of the rectangle and circle
println("Rectangle area: $rectangleArea")
println("Circle area: $circleArea")
class Car(val make: String, val model: String, var year: Int) { // `Car` class with `make`, `model`, and `year` properties
 
    lateinit var color: String // `color` property is initialized later
 
    companion object { // `Car`'s companion object
        fun createCar(make: String, model: String): Car { //`createCar` method to create a new `Car`
            val year = Calendar.getInstance().get(Calendar.YEAR) //`year` is set to current year
            return Car(make, model, year) //`Car` object is created with current year
        }
    }
 
    fun startEngine() { // `startEngine` method to start the car's engine
        println("Starting the engine of your $make $model...") //prints a message with the car's make and model
    }
}
 
val myCar = Car.createCar("Toyota", "Camry") // creates a new `Car` object and assigns it to `myCar` variable
myCar.color = "Black" //`color` property of `myCar` is assigned a value
 
myCar.startEngine() // calls the `startEngine` method on `myCar` object
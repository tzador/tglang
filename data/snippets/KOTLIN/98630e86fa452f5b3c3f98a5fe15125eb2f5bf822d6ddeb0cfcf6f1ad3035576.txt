//This code snippet creates a sorting function for an array of integers using the quicksort algorithm
fun quicksort(array: Array<Int>, low: Int, high: Int) {
    if (low < high) {
        val pivot = partition(array, low, high)

        quicksort(array, low, pivot - 1)
        quicksort(array, pivot + 1, high)
    }
}

fun partition(array: Array<Int>, low: Int, high: Int): Int {
    val pivot = array[high]
    var i = low - 1
    for (j in low until high) {
        if (array[j] <= pivot) {
            i++
            val temp = array[i]
            array[i] = array[j]
            array[j] = temp
        }
    }

    val temp = array[i + 1]
    array[i + 1] = array[high]
    array[high] = temp

    return i + 1
}

//Example usage:
val unsortedArray = arrayOf(8, 3, 6, 2, 9, 1, 4)
quicksort(unsortedArray, 0, unsortedArray.size - 1)

//Output: [1, 2, 3, 4, 6, 8, 9]
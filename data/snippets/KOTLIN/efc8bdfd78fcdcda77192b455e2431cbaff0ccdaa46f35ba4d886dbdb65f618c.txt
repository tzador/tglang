/**
 * A class representing a product subscription with methods for adding/removing
 * products, checking subscription validity, and calculating total price.
 * @param productSet - a hash set of products subscribed to
 * @param subscriptionDuration - the duration of the subscription in months
 */
class Subscription(
    private val productSet: HashSet<Product>,
    private val subscriptionDuration: Int
) {
    /**
     * Adds a product to the subscription's product set.
     * @param product - the product to be added
     */
    fun addProduct(product: Product) {
        productSet.add(product)
    }

    /**
     * Removes a product from the subscription's product set.
     * @param product - the product to be removed
     */
    fun removeProduct(product: Product) {
        productSet.remove(product)
    }

    /**
     * Checks if the subscription is still valid.
     * @return true if subscription is still valid, false otherwise
     */
    fun isValid(): Boolean {
        return subscriptionDuration > 0
    }

    /**
     * Calculates the total price of the subscription based on the total number of products and duration.
     * @return the total price of the subscription
     */
    fun calculateTotalPrice(): Double {
        var totalPrice = 0.0
        for (product in productSet) {
            totalPrice += product.price
        }
        return totalPrice * subscriptionDuration
    }
}
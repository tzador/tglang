data class Person(val name: String, val age: Int, var address: String = "Unknown") // Declaring a data class with properties and a default value

fun main() { 
    val person = Person("John", 25) // Creating an instance of the Person data class
    println(person) // Printing the instance using the default toString() method

    person.address = "123 Main Street" // Modifying the address property
    println("Name: ${person.name}\nAge: ${person.age}\nAddress: ${person.address}\n") // Printing the updated information using string interpolation

    val isOlderThan30 = person.run { // Using the run() function to access properties of the person instance and store the result in a variable
        age > 30 // Checking if the person is older than 30
    }
    println("Is $person older than 30? $isOlderThan30\n") // Printing the result

    val olderPerson = person.copy(age = 40) // Using the copy() function to create a new instance with a different age
    println("Original person: $person") // Printing the original person instance
    println("New person: $olderPerson\n") // Printing the new person instance

    val names = listOf("John", "Mary", "Adam") // Creating a list of names
    val persons = names.map { Person(name = it, age = 30) } // Using the map() function to create a list of person instances from the names

    println("List of persons:") // Printing a header
    persons.forEach { // Using the forEach() function to iterate through the list of persons
        println(it) // Printing each person instance
    }
}
// declaring a class with properties and methods
class User (val name: String, var age: Int, var isAdmin: Boolean) {
    
    // declaring a companion object with a constant property
    companion object {
        const val DEFAULT_AGE = 21
    }
    
    // declaring a function to check if the user is of legal age
    fun isLegalAge(): Boolean {
        return age >= 18
    }
    
    // declaring a function to update the user's age
    fun updateAge(newAge: Int) {
        this.age = newAge
    }
    
    //declaring a function to set the user as an administrator
    fun setAdmin() {
        this.isAdmin = true
    }
}

// creating an instance of the User class
val user1 = User("John", 25, false)

// accessing the properties and methods of the User class
println("Name: ${user1.name}, Age: ${user1.age}, Is Admin: ${user1.isAdmin}")

// updating the user's age and checking if they are now of legal age
user1.updateAge(28)
if(user1.isLegalAge()) {
    println("User is now of legal age!")
}

// accessing the constant property in the companion object
println("Default age: ${User.DEFAULT_AGE}")
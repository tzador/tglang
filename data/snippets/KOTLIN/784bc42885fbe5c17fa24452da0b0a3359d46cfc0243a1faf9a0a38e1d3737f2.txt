// This is a function that calculates the nth Fibonacci number using dynamic programming
fun fibonacci(n: Int): Int {
    // Base case
    if (n <= 1) return n

    // Creating an array to store previously calculated Fibonacci numbers
    val fibList = IntArray(n+1)
    // Initializing first two values
    fibList[0] = 0
    fibList[1] = 1

    // Looping to calculate and store Fibonacci numbers up to nth number
    for (i in 2..n) {
        // Using previously calculated values to calculate current Fibonacci number
        fibList[i] = fibList[i-1] + fibList[i-2]
    }

    // Return the nth Fibonacci number
    return fibList[n]
}

// Printing the first 10 Fibonacci numbers using the above function
fun main() {
    // Looping to print the first 10 Fibonacci numbers
    for (i in 1..10) {
        // Calling the fibonacci function and passing in the current number
        val fib = fibonacci(i)
        // Printing the result in a string format
        println("Fibonacci number at position $i is $fib")
    }
}
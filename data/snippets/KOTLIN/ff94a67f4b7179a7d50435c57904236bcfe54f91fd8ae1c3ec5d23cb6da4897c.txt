fun <T, R> Iterable<T>.map(transform: (T) -> R): List<R> { // declares a function that takes in an Iterable as a parameter and returns a List of type R
    val result = ArrayList<R>() // creates an ArrayList to store the transformed elements
    for (item in this) { // loops through the elements in the Iterable
        result.add(transform(item)) // applies the transform function to each element and adds the transformed element to the result ArrayList
    }
    return result // returns the final List of transformed elements
}

val numbers = listOf(1, 2, 3, 4, 5) // creates a List of numbers
val doubledNumbers = numbers.map { it * 2 } // uses the 'map' function to double each number in the List
println(doubledNumbers) // prints the new List with doubled numbers

// Output: [2, 4, 6, 8, 10]
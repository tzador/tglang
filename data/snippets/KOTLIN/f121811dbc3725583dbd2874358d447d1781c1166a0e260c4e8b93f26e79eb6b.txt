// Extension function to check if a string is a palindrome
fun String.isPalindrome(): Boolean {
    // Create an empty string builder to store reversed string
    val reversed = StringBuilder()
    // Loop through each character in the string and append it to the beginning of the reversed string
    for (i in this.length - 1 downTo 0) {
        reversed.append(this[i])
    }
    // Check if the reversed string is equal to the original string, ignoring case differences
    return reversed.toString().equals(this, ignoreCase = true)
}

// Main function to test the palindrome extension function
fun main(args: Array<String>) {
    val str1 = "racecar"
    val str2 = "kotlin"
    // Call the isPalindrome function on both strings and print the results
    println("$str1 is a palindrome: ${str1.isPalindrome()}")
    println("$str2 is a palindrome: ${str2.isPalindrome()}")
}
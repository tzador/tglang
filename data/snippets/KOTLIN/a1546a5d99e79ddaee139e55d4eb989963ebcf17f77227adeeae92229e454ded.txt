/**
 * This is a class representing a person.
 * @property name The name of the person
 * @property age The age of the person
 * @property height The height of the person in centimeters
 * @property weight The weight of the person in kilograms
 * @property hobbies A list of the person's hobbies
 * @property address The address of the person
 */
class Person(val name: String, val age: Int, val height: Float, val weight: Float, val hobbies: List<String>, var address: String?) {

    /**
     * This function calculates the BMI (Body Mass Index) of the person.
     * @return The calculated BMI value
     */
    fun calculateBMI(): Float {
        return weight / ((height / 100) * (height / 100))
    }

    /**
     * This function updates the person's address.
     * @param newAddress The new address to be updated
     */
    fun updateAddress(newAddress: String) {
        address = newAddress
    }

    /**
     * This function prints the person's details.
     */
    fun printDetails() {
        println("Name: $name")
        println("Age: $age")
        println("Height: $height cm")
        println("Weight: $weight kg")
        println("Hobbies: $hobbies")
        println("Address: ${address ?: "unknown"}")
    }
}

//Creating a new instance of Person class
val person = Person("John Smith", 35, 180F, 75F, listOf("Reading", "Running"), "123 Main Street")

//Calculating and printing the BMI
println("BMI: ${person.calculateBMI()}")

//Updating the address and printing the details
person.updateAddress("456 New Street")
person.printDetails()
fun main() {
    val names = listOf("John", "Katie", "Peter", "Lena")
    val ages = mapOf("John" to 30, "Katie" to 28, "Peter" to 35, "Lena" to 32)
    val hasPet = booleanArrayOf(true, false, true, true)
    
    // Create a Person data class with properties name, age and hasPet
    data class Person(val name: String, val age: Int, val hasPet: Boolean)

    // Create a list of Person objects by mapping the values from names, ages, and hasPet lists
    val people = names.mapIndexed { index, name -> Person(name, ages[name] ?: 0, hasPet[index]) }

    // Filter the list to only include people over the age of 30 who have a pet
    val filteredList = people.filter { person -> person.age > 30 && person.hasPet }
    
    // Perform a chain operation by first mapping the list to strings and then uppercase them
    val upperCaseList = filteredList.map{ "Name: ${it.name}, Age: ${it.age}, Has Pet: ${if (it.hasPet) "Yes" else "No"}" }
        .map { it.uppercase() }
    
    // Print the final list
    println(upperCaseList)
}
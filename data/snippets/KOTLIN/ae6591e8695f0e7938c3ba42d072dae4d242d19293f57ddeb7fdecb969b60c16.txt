// Sample function that sorts a list of integers in ascending order
fun sortList(list: List<Int>): List<Int> {
  return list.sorted()
}

// Sample class representing a person
data class Person(val name: String, val age: Int) {
  fun introduce() {
    println("Hi, my name is $name and I am $age years old.")
  }
}

// Sample interface with a method for calculating the area
interface Shape {
  fun calculateArea(): Double
}

// Sample implementation of the Shape interface for a rectangle
class Rectangle(val length: Double, val width: Double): Shape {
  override fun calculateArea(): Double {
    return length * width
  }
}

// Sample extension function to calculate the square of a number
fun Int.square(): Int {
  return this * this
}

// Sample higher-order function to add two numbers
fun addNumbers(x: Int, y: Int, operation: (Int, Int) -> Int): Int {
  return operation(x, y)
}

// Sample lambda function that multiplies two numbers
val multiply = { x: Int, y: Int -> x * y}

// Sample usage of the functions and classes
fun main() {
  val unsortedList = listOf(4, 2, 7, 1, 9, 5, 3, 8)
  val sortedList = sortList(unsortedList)
  println(sortedList) // Output: [1, 2, 3, 4, 5, 7, 8, 9]
  
  val person = Person("John", 25)
  person.introduce() // Output: Hi, my name is John and I am 25 years old.
  
  val rectangle = Rectangle(5.0, 10.0)
  val area = rectangle.calculateArea() // Output: 50.0
  
  val number = 5
  val square = number.square() // Output: 25
  
  val sum = addNumbers(10, 5, { x, y -> x + y }) // Output: 15
  
  val product = multiply(3, 6) // Output: 18
}
/**
 * This class represents a car with different properties and functions.
 *
 * @property model The model of the car
 * @property color The color of the car
 * @property year The year the car was manufactured
 * @constructor Creates a car with the specified model, color, and year
 */
class Car(val model: String, val color: String, val year: Int) {

    // Private properties only accessible within the class
    private var engineOn: Boolean = false
    private var fuelLevel: Int = 100

    // Public function to turn on the car's engine
    fun turnOn() {
        if (fuelLevel > 0) {
            engineOn = true
            println("Engine has been turned on.")
        } else {
            println("Fuel level is too low. Please refuel before starting the engine.")
        }
    }

    // Public function to turn off the car's engine
    fun turnOff() {
        engineOn = false
        println("Engine has been turned off.")
    }

    // Public function to drive the car
    fun drive() {
        if (engineOn) {
            fuelLevel -= 10
            println("Driving...")
        } else {
            println("Cannot drive. Engine is turned off.")
        }
    }

    // Public function to refuel the car
    fun refuel(gallons: Int) {
        fuelLevel += gallons
        println("$gallons gallons of fuel have been added. Current fuel level: $fuelLevel")
    }
}

// Create an instance of the Car class
val myCar = Car("Toyota Camry", "Silver", 2015)

// Turn on the car's engine
myCar.turnOn()

// Drive the car
myCar.drive()

// Refuel the car
myCar.refuel(5)

// Turn off the car's engine
myCar.turnOff()
// define a function that finds the GCD of two numbers
fun findGCD(num1: Int, num2: Int): Int {
    var gcd = 1 // initialize GCD as 1
    for (i in 1..num1) {
        if (num1 % i == 0 && num2 % i == 0) {
            gcd = i // update GCD if the current number is a common factor of both numbers
        }
    }
    return gcd // return the GCD once the loop is completed
}

// define a function that finds the LCM of two numbers
fun findLCM(num1: Int, num2: Int): Int {
    var lcm = num1 * num2 // initialize LCM as the product of the two numbers
    // check if the LCM is divisible by both numbers, if not, increment the LCM by 1 until it is
    while (lcm % num1 != 0 || lcm % num2 != 0) {
        lcm++
    }
    return lcm // return the LCM once the while loop is completed
}

// example usage of the functions
val a = 24
val b = 36
println("The GCD of $a and $b is ${findGCD(a, b)}")
println("The LCM of $a and $b is ${findLCM(a, b)}")
// output: "The GCD of 24 and 36 is 12"
// output: "The LCM of 24 and 36 is 72"
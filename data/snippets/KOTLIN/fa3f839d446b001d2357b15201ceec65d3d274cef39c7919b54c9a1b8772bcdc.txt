/**
 * A class representing a car with various properties
 * @property brand the brand of the car
 * @property model the model of the car
 * @property year the year the car was made
 * @property color the color of the car
 * @property mileage the current mileage of the car
 * @constructor creates a car object with the given properties
 */
class Car(val brand: String, val model: String, val year: Int, val color: String, var mileage: Int) {
    
    /**
     * Function to drive the car and update the mileage
     * @param distance the distance in kilometers to drive
     */
    fun drive(distance: Int) {
        println("Driving $distance kilometers...")
        mileage += distance
    }
}

// Create a list of cars
val carList = listOf(
    Car("Toyota", "Corolla", 2015, "red", 50000),
    Car("Honda", "Civic", 2018, "blue", 35000),
    Car("Ford", "Mustang", 2020, "yellow", 10000)
)

// Use the 'filter' function to get cars with mileage less than 40000
val filteredCars = carList.filter { it.mileage < 40000 }

// Print the details of the filtered cars
filteredCars.forEach {
    println("Brand: ${it.brand}, Model: ${it.model}, Year: ${it.year}, Color: ${it.color}, Mileage: ${it.mileage}")
}
/**
 * Function that checks if a given number is prime
 * @param num a positive integer
 * @return true if prime, false if not prime
 */
fun isPrime(num: Int): Boolean {
    if (num == 1) {
        return false
    }
    if (num == 2) {
        return true
    }

    var count = 2
    while (count * count <= num) {
        if (num % count == 0) {
            return false
        }
        count++
    }
    return true
}

/**
 * Function that outputs an array of prime numbers up to a given number
 * @param num a positive integer
 * @return array of prime numbers
 */
fun generatePrimeArray(num: Int): Array<Int> {
    var primeArray = Array(num) { 0 }
    var count = 0
    for (i in 2..num) {
        if (isPrime(i)) {
            primeArray[count] = i
            count++
        }
    }
    return primeArray
}

// Sample usage of the functions
val num = 50
val primeArray = generatePrimeArray(num)
println("Prime numbers up to $num:")
for (num in primeArray) {
    if (num != 0) {
        print("$num ")
    }
}
// Output: Prime numbers up to 50: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47
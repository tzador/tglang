/* This is a sample code snippet in Kotlin that implements a binary search algorithm to find a target value in a sorted array */

// Function to perform binary search
fun binarySearch(array: Array<Int>, target: Int): Boolean {
    var low = 0 // starting index of array
    var high = array.size - 1 // ending index of array

    // iteration until low becomes equal or greater than high
    while (low <= high) {
        // calculating middle index of array
        val mid = low + (high - low) / 2
        // checking if target value is at middle index
        if (array[mid] == target) {
            return true
        }
        // if target value is less than middle element, search in left half
        if (target < array[mid]) {
            high = mid - 1
        }
        // if target value is greater than middle element, search in right half
        else {
            low = mid + 1
        }
    }
    return false // target value not found in array
}

// Sample input
val array = arrayOf(1, 3, 5, 7, 9, 11)
val target = 7

// Calling the binarySearch function and printing the result
println("Is $target present in the array? " + binarySearch(array, target))

// Output: Is 7 present in the array? true
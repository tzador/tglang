/**
    This is a complex code snippet written in Kotlin.
    It demonstrates inheritance, interfaces, generics, and exceptions.

    A list interface is created with a generic type T.
    The interface has two methods: add and clear.
    */ 
interface List<T> {
    fun add(value: T)
    fun clear()
}

/**
    A class called MyList is created which implements the List interface with an Integer type.
    It also has an overridden add method to handle specific exceptions.
    */
class MyList : List<Integer> {

    // An ArrayList is used as the underlying storage for MyList
    private var list = ArrayList<Integer>()

    /**
        The overridden add method takes a value of type Integer and adds it to the list.
        It also throws an IllegalArgumentException if the value is less than zero.
        */
    override fun add(value: Integer) {
        if (value < 0) {
            throw IllegalArgumentException("Value cannot be less than zero.")
        }
        list.add(value)
    }

    /**
        The clear method removes all elements from the list.
        */
    override fun clear() {
        list.clear()
    }

}

/**
    A subclass of MyList called StringList is created with a String type.
    It has an additional method called join which concatenates all elements of the list into a single string.
    */
class StringList : MyList() {

    /**
        The join method iterates through the list and concatenates all elements into a string,
        using a specified separator.
        */
    fun join(separator: String) : String {
        var result = ""
        for (i in 0 until list.size) {
            if (i > 0) {
                result += separator
            }
            result += list[i]
        }
        return result
    }
}

/**
    An instance of StringList is created and values are added to the list.
    The list is then cleared and a new value is added.
    Finally, the list is joined using a comma as the separator and printed to the console.
    */
fun main() {
    val stringList = StringList()
    stringList.add("Hello")
    stringList.add("World")
    stringList.clear()
    stringList.add("Goodbye")
    println(stringList.join(", "))
}
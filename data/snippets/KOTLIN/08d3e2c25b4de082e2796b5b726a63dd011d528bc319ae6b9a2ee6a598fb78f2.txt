/**
 * This is a complex function that takes in a list of strings and returns a map
 * where the key is the length of the string and the value is the number of times
 * that length appears in the list.
 *
 * @param strings the list of strings to be processed
 * @return a map of string lengths and their frequencies
 */
fun countStringOccurrences(strings: List<String>): Map<Int, Int> {
    // create a mutable map to store the results
    val occurrencesMap = mutableMapOf<Int, Int>()
    // loop through each string in the list
    for (string in strings) {
        // get the length of the string
        val length = string.length
        // check if the map already contains the length as a key
        if (occurrencesMap.containsKey(length)) {
            // if it does, increment the value by 1
            occurrencesMap[length] = occurrencesMap[length]!! + 1
        } else {
            // if it doesn't, add the length as a new key and set the value to 1
            occurrencesMap[length] = 1
        }
    }
    // return the map with the results
    return occurrencesMap
}
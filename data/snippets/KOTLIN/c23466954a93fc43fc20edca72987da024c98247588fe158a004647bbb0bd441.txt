// This program implements a sorting algorithm

fun main() {
    val arr = intArrayOf(5, 3, 1, 4, 2) // create an array of numbers to be sorted
    println("Original Array: ${arr.contentToString()}") // print the original array
    val sortedArr = quickSort(arr) // call the quickSort function to sort the array
    println("Sorted Array: ${sortedArr.contentToString()}") // print the sorted array
}

// This function uses the quicksort algorithm to sort the given array
// It takes in an unsorted array and returns a sorted array
fun quickSort(arr: IntArray): IntArray {
    if (arr.size < 2) return arr // if array only has one element, return it
    
    val pivot = arr[arr.size / 2] // set the pivot value as the middle element of the array
    val less = arr.filter { it < pivot }.toIntArray() // create a subarray of elements less than the pivot
    val equal = arr.filter { it == pivot }.toIntArray() // create a subarray of elements equal to the pivot
    val greater = arr.filter { it > pivot }.toIntArray() // create a subarray of elements greater than the pivot
    
    return quickSort(less) + equal + quickSort(greater) // recursively call quickSort function on the less and greater subarrays and combine them with the equal array
}
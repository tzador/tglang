fun main(args: Array<String>) {
    val numList = listOf(1, 2, 3, 4, 5) //create a list of numbers
    val squareList = numList.map { it * it } //use map function to square each number
    var sum = 0 //initialize a variable to store the sum
    for (i in squareList.indices) { //use a for loop to iterate through the squared list
        if (i % 2 == 0) { //check if index is even
            sum += squareList[i] //add the squared number to the sum
        }
    }
    println("The sum of even squared numbers in the list is: $sum") //print the sum
    val filteredList = squareList.filter { it % 3 == 0 } //use filter function to get only numbers divisible by 3
    println("The filtered list contains: ${filteredList.joinToString()}") //print the filtered list
    val numSet = setOf(1, 2, 3, 3, 4, 5) //create a set of numbers (repeating number 3)
    println("The set contains ${numSet.size} elements") //print the size of the set (5)
    println("Does the set contain 3? ${numSet.contains(3)}") //check if set contains the number 3
    val squaredSet = numSet.map { it * it }.toSet() //use map function to square each number and convert to set
    println("The set after squaring each element: ${squaredSet.joinToString()}") //print the squared set
    val intersectedSet = numSet.intersect(squaredSet) //use intersect function to get common elements in sets
    println("Elements in common between original set and squared set: ${intersectedSet.joinToString()}") //print common elements
}
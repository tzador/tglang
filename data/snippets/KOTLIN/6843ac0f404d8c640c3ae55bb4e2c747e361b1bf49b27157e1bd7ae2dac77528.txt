/* This is a complex code snippet in Kotlin to generate a random password
with a combination of upper and lower case letters, numbers,
and special characters (such as !@#$%^&*). */

import java.security.SecureRandom
import kotlin.math.floor

fun main() {
    val passwordLength: Int = 12 // set the desired length of the password
    val password: StringBuilder = StringBuilder(passwordLength)
    val random: SecureRandom = SecureRandom()

    /* create a String array containing all the characters to be included
    in the password */
    val chars: String = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"

    /* loop through the desired length of the password and
    append a randomly selected character from the array */
    for (i in 0 until passwordLength) {
        val index: Int = floor(random.nextDouble() * chars.length).toInt()
        password.append(chars.get(index))
    }

    println("Randomly generated password: $password") // print the password
}
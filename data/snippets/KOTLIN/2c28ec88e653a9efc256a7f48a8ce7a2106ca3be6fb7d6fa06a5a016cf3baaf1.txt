// Defines a class named "Book" with properties "title" and "author"
class Book(val title: String, val author: String) {
    // Defines a mutable property "price" and initializes it to 0
    // The price can be updated later on
    var price = 0
    // Defines a private property "copiesSold" and initializes it to 0
    // This property can only be accessed within the Book class
    private var copiesSold = 0

    // Method to sell a certain number of copies of the book
    // Takes in the number of copies as a parameter
    fun sellCopies(numCopies: Int) {
        // Updates the "copiesSold" property by adding the number of copies sold
        copiesSold += numCopies
        // Outputs a message with the updated number of copies sold
        println("$copiesSold copies of $title by $author have been sold")
    }

    // Method to set the price of the book
    // Takes in the new price as a parameter
    fun setPrice(newPrice: Int) {
        // Updates the "price" property with the new price
        price = newPrice
        // Outputs a message with the updated price
        println("$title by $author is now priced at $price")
    }
}

// Creates an instance of the Book class with a title and author
val myBook = Book("Pride and Prejudice", "Jane Austen")

// Calls the "setPrice" method to set the price of the book to 10
myBook.setPrice(10)

// Calls the "sellCopies" method to sell 100 copies of the book
myBook.sellCopies(100)

// Outputs the value of the "copiesSold" property, which is only accessible within the Book class
println("Total copies sold: ${myBook.copiesSold}")
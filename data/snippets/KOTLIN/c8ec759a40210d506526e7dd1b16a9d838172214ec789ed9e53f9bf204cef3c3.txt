class Person(val name: String) {                // class declaration with primary constructor
    private var age: Int = 18                   // private property of type Int with a default value of 18
    
    fun getAge(): Int {                         // function declaration with return type Int
        return age                              // returns the private age property
    }
    
    fun setAge(newAge: Int) {                   // function declaration with parameter newAge of type Int
        check(newAge >= 18) {                   // checks if newAge is greater than or equal to 18
            age = newAge                        // if true, sets age to newAge
        } else {
            throw IllegalArgumentException("Age must be 18 or above") // if false, throws an exception
        }
    }
    
    fun introduce() {                            // function declaration with no return type (Unit)
        println("Hi, my name is $name and I am $age years old.")  // prints out an introduction
    }
}

fun main() {                                     // main function declaration
    val person = Person("John")                  // creates a new person object with name "John"
    person.introduce()                           // calls the introduce function to print out an introduction
    person.setAge(25)                            // sets the age property to 25
    println("New age: ${person.getAge()}")       // prints out the new age using the getAge function
}
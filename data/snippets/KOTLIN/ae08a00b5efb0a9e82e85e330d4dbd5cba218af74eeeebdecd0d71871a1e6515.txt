// This code snippet generates a random sudoku puzzle
import kotlin.random.Random

// Function to generate random sudoku puzzle
fun generateSudoku(): Array<IntArray> {
    // Initialize an empty sudoku board
    val board = Array(9) { IntArray(9) }

    // Generate a random start number for the first row
    var startNum = Random.nextInt(1, 10)

    // Fill the first row with numbers
    for (i in 0 until 9) {
        board[0][i] = (startNum + (i * 3)) % 9
    }

    // Fill the remaining rows
    for (row in 1 until 9) {
        // Move the start number down by 3 squares
        startNum = (startNum + 6) % 9

        // Fill the row with numbers
        for (col in 0 until 9) {
            board[row][col] = (startNum + (col * 3)) % 9
        }
    }

    // Shuffle the rows
    for (i in 0 until 9) {
        // Generate two random row indices
        val firstIndex = Random.nextInt(0, 9)
        val secondIndex = Random.nextInt(0, 9)

        // Swap the rows
        val temp = board[firstIndex]
        board[firstIndex] = board[secondIndex]
        board[secondIndex] = temp
    }

    // Shuffle the columns
    for (j in 0 until 9) {
        // Generate two random column indices
        val firstIndex = Random.nextInt(0, 9)
        val secondIndex = Random.nextInt(0, 9)

        // Swap the columns
        for (k in 0 until 9) {
            val temp = board[k][firstIndex]
            board[k][firstIndex] = board[k][secondIndex]
            board[k][secondIndex] = temp
        }
    }

    // Return the completed sudoku board
    return board
}

// Output the generated sudoku puzzle
println(generateSudoku())
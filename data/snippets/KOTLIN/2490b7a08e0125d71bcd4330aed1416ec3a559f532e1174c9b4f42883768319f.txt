/* This is a complex code snippet in Kotlin, showcasing the use of variables, functions, and control flow. It also uses the built-in `readLine()` function to take user input. */
val num1 = 5 // defining a variable `num1` and assigning it the value 5
var num2 = 10 // defining a variable `num2` and assigning it the value 10
fun addNumbers(x: Int, y: Int): Int { // defining a function `addNumbers` that takes in two integer parameters and returns their sum as an integer
    return x + y // return statement that adds the two parameters and returns the sum
}
val sum = addNumbers(num1, num2) // calling the `addNumbers` function and passing in the variables `num1` and `num2` as arguments
println("The sum of $num1 and $num2 is $sum") // printing the result with the use of string interpolation
if (sum > 15) { // checking if the sum is greater than 15 using the `if` statement
    println("The sum is greater than 15 and is equal to $sum") // printing a message if the condition is met
} else if (sum < 15) { // checking if the sum is less than 15 using the `else if` statement
    println("The sum is less than 15 and is equal to $sum") // printing a message if the condition is met
} else { // executing the `else` block if the previous conditions are not met
    println("The sum is equal to 15") // printing a message if the condition is met
}
print("Enter a number: ") // prompting the user to enter a number
val userNum = readLine()?.toInt() // using the `readLine()` function to take user input and converting it to an integer using the `toInt()` function
if (userNum == null) { // checking if the user input is null
    println("Invalid input") // printing a message if the condition is met
} else { // executing the `else` block if the previous condition is not met
    println("The user input is $userNum") // printing a message with the user input using string interpolation
}
/**
 * This is a generic class in Kotlin
 * that implements the Comparable interface.
 */
class GenericClass<T: Comparable<T>> {
    /**
     * A private property of type List
     * of generic type T for storing data.
     */
    private val data: List<T> = emptyList()

    /**
     * A constructor for the class
     * that takes in a list of generic type T.
     */
    constructor(input: List<T>) {
        data = input
    }

    /**
     * A function that returns
     * the maximum value in the data list.
     * @return the maximum value in the data list.
     */
    fun getMax(): T {
        var max: T = data[0]
        for (i in 1 until data.size) {
            if (data[i].compareTo(max) > 0) {
                max = data[i]
            }
        }
        return max
    }
}

/**
 * A main function that creates an instance
 * of the GenericClass and calls the getMax function.
 */
fun main() {
    val numbers = listOf(1, 2, 3, 4, 5)
    val maxNum: Int = GenericClass(numbers).getMax()
    println("The maximum value is: $maxNum")
}
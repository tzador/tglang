//This is a complex code snippet in Kotlin

//Define a class named "Person" with properties name, age, and profession
class Person(val name: String, val age: Int, val profession: String) {

    //Define a function to print the person's information
    fun printInfo() {
        println("Name: $name")
        println("Age: $age")
        println("Profession: $profession")
    }

    companion object {
        //Define a function to create a list of person objects and return it
        fun getListOfPeople(): List<Person> {
            val peopleList = mutableListOf<Person>()

            //Create some person objects and add them to the list
            val person1 = Person("John", 25, "Software Engineer")
            val person2 = Person("Sarah", 30, "Data Analyst")
            val person3 = Person("Michael", 35, "Marketing Manager")
            peopleList.add(person1)
            peopleList.add(person2)
            peopleList.add(person3)

            return peopleList
        }
    }
}

//Define a function to filter the list of people based on their profession and age
fun filterPeopleByProfessionAndAge(profession: String, age: Int) {
    //Get the list of people
    val peopleList = Person.getListOfPeople()

    //Filter the list by profession and age using lambda expressions
    val filteredList = peopleList.filter { it.profession == profession && it.age < age }

    //Print out the filtered list of people's names
    println("List of people with profession '$profession' and age less than $age:")
    for (person in filteredList) {
        println(person.name)
    }
}

//Call the function to filter the list of people and print the results
filterPeopleByProfessionAndAge("Software Engineer", 30)

/* Output:
List of people with profession 'Software Engineer' and age less than 30:
John
*/
/**
 * This is a class that represents a person with a name, age, and hobbies.
 * @param name The person's name, a string value.
 * @param age The person's age, an integer value.
 * @param hobbies An array of strings representing the person's hobbies.
 */
class Person(var name: String, var age: Int, var hobbies: Array<String>) {
    /**
     * This function prints out the person's name, age, and hobbies.
     * It also calculates the total number of hobbies and prints it out.
     */
    fun printDetails() {
        println("Name: ${this.name}")
        println("Age: ${this.age}")
        println("Hobbies: ${this.hobbies.joinToString(", ")}")
        val totalHobbies = this.hobbies.size
        println("Total number of hobbies: $totalHobbies")
    }

    /**
     * This function checks if the person is old enough to drive,
     * based on the legal driving age in the country.
     * @param legalAge The legal driving age in the country, an integer value.
     * @return Boolean value indicating whether the person can drive or not.
     */
    fun canDrive(legalAge: Int): Boolean {
        return this.age >= legalAge
    }
}

// Create a list of people with their corresponding information
val people = listOf(
    Person("John", 25, arrayOf("Soccer", "Hiking")),
    Person("Mary", 18, arrayOf("Reading", "Painting", "Dancing")),
    Person("Mike", 30, arrayOf("Cooking", "Gardening"))
)

// Iterate through the list and print out details for each person
for (person in people) {
    person.printDetails()
    // Check if the person can drive in the US where the legal age is 16
    println("Can drive in the US: ${person.canDrive(16)}")
}
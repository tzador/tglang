// Define a data class with two properties
data class Person(val name: String, val age: Int)

// Create a list of Person objects
val people = listOf(
    Person("John", 32),
    Person("Jane", 29),
    Person("Mike", 45),
    Person("Emily", 28)
)

// Use higher-order functions to filter out people over the age of 30
val filteredPeople = people.filter { it.age > 30 }

// Create a map of Person objects with their names as keys
val mappedPeople = people.associateBy { it.name }

// Use a for loop to print the name and age of each person in the list
for(person in people){
    println("${person.name} is ${person.age} years old")
}

// Use a when statement to print a message based on a person's age
when(person.age){
    in 0..20 -> println("This person is a teenager")
    in 21..30 -> println("This person is in their twenties")
    in 31..40 -> println("This person is in their thirties")
    else -> println("This person is over 40")
}
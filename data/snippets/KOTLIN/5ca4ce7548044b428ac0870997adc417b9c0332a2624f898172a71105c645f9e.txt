/**
 * This function checks if a given string is a palindrome or not.
 * A palindrome is a word, phrase, or sequence that reads the same backward as forward.
 *
 * @param str the string to be checked
 * @return true if the string is a palindrome, false otherwise
 */
fun isPalindrome(str: String): Boolean {
    // convert string to lowercase and remove all non-alphabetic characters
    val cleanStr = str.toLowerCase().replace(Regex("[^a-z]"), "")

    // check if the string is empty or has only one character
    if (cleanStr.isEmpty() || cleanStr.length == 1) {
        return true
    }

    // initialize left and right pointers
    var left = 0
    var right = cleanStr.length - 1

    // loop through the string while left pointer is less than or equal to right pointer
    while (left <= right) {
        // if the characters at the left and right pointers do not match, return false
        if (cleanStr[left] != cleanStr[right]) {
            return false
        }

        // increment left pointer and decrement right pointer
        left++
        right--
    }

    // if loop completes, return true since all characters have matched
    return true
}
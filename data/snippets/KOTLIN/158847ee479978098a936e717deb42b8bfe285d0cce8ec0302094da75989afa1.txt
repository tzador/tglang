// Creating a class for a deck of cards
class Deck {
    // Initializing a list of cards
    private val cards = mutableListOf<Card>()

    // Initializing a list of suits
    private val suits = listOf("Spades", "Hearts", "Diamonds", "Clubs")

    // Initializing a list of ranks
    private val ranks = listOf(
        "Ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King"
    )

    // Function to create a standard deck of 52 cards
    fun createDeck() {
        for (suit in suits) {
            for (rank in ranks) {
                // Creating a new card object and adding it to the list of cards
                cards.add(Card(suit, rank))
            }
        }
    }

    // Function to shuffle the deck of cards
    fun shuffle() {
        // Using the built-in shuffle function in Kotlin to randomize the order of the cards
        cards.shuffle()
    }

    // Function to draw a card from the deck
    fun drawCard(): Card? {
        // Checking if the deck is empty
        if (cards.isEmpty()) {
            return null
        }

        // Removing the top card from the list of cards and returning it
        return cards.removeAt(0)
    }

    // Function to display the number of cards in the deck
    fun numOfCards(): Int {
        return cards.size
    }
}

// Creating a class for a card
class Card(private val suit: String, private val rank: String) {

    // Function to print the card in a readable format
    fun printCard() {
        println("$rank of $suit")
    }
}

// Creating an instance of the deck class
val deck = Deck()

// Generating a new deck of cards and shuffling it
deck.createDeck()
deck.shuffle()

// Drawing and printing 10 cards from the deck
for (i in 1..10) {
    // Drawing a card from the deck
    val card = deck.drawCard()

    // Checking if the card is not null and printing it
    card?.printCard()
}

// Printing the number of cards left in the deck
println("Number of cards left in the deck: ${deck.numOfCards()}")
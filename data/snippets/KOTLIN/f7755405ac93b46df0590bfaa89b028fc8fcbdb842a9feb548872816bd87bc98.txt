/* This is a function that calculates the n-th Fibonacci number recursively */

fun fibonacci(n: Int): Int {
    // Base cases
    if (n == 0) return 0
    if (n == 1) return 1

    // Recursive call using tail recursion
    return fibonacci(n - 1) + fibonacci(n - 2)
}

/* This is a function that calculates the n-th Fibonacci number iteratively using a for loop */

fun iterativeFibonacci(n: Int): Int {
    var first = 0
    var second = 1
    var result = 0

    // For loop to iterate through all values up to n
    for (i in 2..n) {
        // Calculate the next Fibonacci number by adding the previous two numbers
        result = first + second
        // Update the values of first and second for the next iteration
        first = second
        second = result
    }

    return result
}

/* This is a main function that takes user input and calls the above functions to calculate the n-th Fibonacci number */

fun main() {
    // Prompt user for input
    println("Enter a positive integer:")
    
    // Take user input and convert it to an integer
    val n = readLine()!!.toInt()
    
    // Call the recursive function and print the result
    println("The ${n}-th Fibonacci number using recursion is ${fibonacci(n)}")
    
    // Call the iterative function and print the result
    println("The ${n}-th Fibonacci number using iteration is ${iterativeFibonacci(n)}")
}
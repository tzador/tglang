​
// This code snippet generates a random number and checks if it is a prime number
 
import kotlin.math.sqrt
import kotlin.random.Random
 
fun main() {
    // function to check if a number is prime
    fun isPrime(number: Int): Boolean {
        // setting the smallest possible prime number
        val smallestPrime = 2
        // checking if number is smaller than smallest prime number
        if (number < smallestPrime) {
            return false
        } else {
            // using square root to limit the number of loops in the for loop
            val sqrt = sqrt(number.toDouble()).toInt()
            // looping through all possible factors of number
            for (i in smallestPrime..sqrt) {
                if (number % i == 0) {
                    // if number is divisible by i, it is not a prime number
                    return false
                }
            }
        }
        // if number is not divisible by any factor, it is a prime number
        return true
    }
 
    // generating a random number between 1 and 1000
    val random = Random.nextInt(1, 1000)
    // printing the random number
    println("Generated random number: $random")
    // checking if random number is prime
    if (isPrime(random)) {
        println("$random is a prime number.")
    } else {
        println("$random is not a prime number.")
    }
}
​
// Sample Output:
// Generated random number: 347
// 347 is a prime number.
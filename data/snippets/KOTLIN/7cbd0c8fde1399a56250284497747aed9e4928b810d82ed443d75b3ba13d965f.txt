// This is a complex function that takes in an array of integers, sorts them in ascending order, and prints them out
// It also includes error handling for incorrect input

fun sortingFunction(myArray: Array<Int>) { // function declaration with parameter
    var sorted = false // variable indicating if array is sorted
    if (myArray.size < 2) { // check for array with less than 2 elements
        throw IllegalArgumentException("Array must have at least 2 elements") // throws an exception if condition not met
    }
    while (!sorted) { // loop until array is sorted
        sorted = true // assumes array is sorted unless proven otherwise
        for (i in 0 until myArray.size - 1) { // iterate through array
            if (myArray[i] > myArray[i+1]) { // check if element at current index is greater than next element
                val temp = myArray[i] // assign element at current index to temporary variable
                myArray[i] = myArray[i+1] // assign next element to current index
                myArray[i+1] = temp // assign temporary variable to next element
                sorted = false // change sorted variable to false, indicating array is not sorted yet
            }
        }
    }
    println("Sorted Array:") // print statement
    for (element in myArray) { // iterate through sorted array
        println(element) // print each element
    }
}

// Example input and output
val myArray = arrayOf(5, 2, 7, 1, 9) // declare and initialize an array
sortingFunction(myArray) // call sorting function with array as argument

// Output:
// Sorted Array:
// 1
// 2
// 5
// 7 
// 9
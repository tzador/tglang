// Define a data class named "Person"
data class Person (
    val name: String, // Define a property for the person's name
    val age: Int, // Define a property for the person's age
    var occupation: String = "Unemployed" // Define a property for the person's occupation with a default value
) 

// Define a function to check if a person is eligible for voting
fun checkVotingEligibility(person: Person): Boolean {
    val votingAge = 18 // Define the minimum voting age
    return person.age >= votingAge // Check if the person's age is greater than or equal to the minimum voting age
}

// Create a list of Person objects
val people = listOf(
    Person("John", 25, "Teacher"),
    Person("Lisa", 17),
    Person("Mike", 20, "Student")
)

// Use a higher-order function to filter the list and get a list of eligible voters
val eligibleVoters = people.filter { person -> checkVotingEligibility(person) }

// Print the list of eligible voters
println(eligibleVoters) // Output: [Person(name=John, age=25, occupation=Teacher), Person(name=Mike, age=20, occupation=Student)]
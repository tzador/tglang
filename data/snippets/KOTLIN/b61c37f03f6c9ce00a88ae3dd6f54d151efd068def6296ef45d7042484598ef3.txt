//This is a Bank class in Kotlin
class Bank(private val name: String, private val address: String, private val branch: String) {

    //List of customers in the bank
    private val customers: ArrayList<Customer> = ArrayList()

    //Function to add a new customer to the bank
    fun addCustomer(name: String, address: String, contact: String) {
        val newCustomer = Customer(name, address, contact)
        customers.add(newCustomer)
    }

    //Function to calculate the total balance of all customers' accounts
    fun calculateTotalBalance(): Double {
        var totalBalance = 0.0
        for (customer in customers) {
            totalBalance += customer.getAccountBalance()
        }
        return totalBalance
    }

    //Class to represent a customer in the bank
    inner class Customer(private val name: String, private val address: String, private val contact: String) {

        //List of accounts owned by the customer
        private val accounts: ArrayList<Account> = ArrayList()

        //Function to add a new account for the customer
        fun addAccount(accountNumber: Long, accountType: String, balance: Double) {
            val newAccount = Account(accountNumber, accountType, balance)
            accounts.add(newAccount)
        }

        //Function to get the total balance of all accounts owned by the customer
        fun getAccountBalance(): Double {
            var totalBalance = 0.0
            for (account in accounts) {
                totalBalance += account.getBalance()
            }
            return totalBalance
        }

        //Class to represent an account in the bank
        inner class Account(private val accountNumber: Long, private val accountType: String, private val balance: Double) {

            //Function to get the current balance of the account
            fun getBalance(): Double {
                return balance
            }

            //Function to withdraw money from the account
            fun withdraw(amount: Double): Boolean {
                return if (balance >= amount) {
                    balance -= amount
                    true
                } else {
                    false
                }
            }

            //Function to deposit money into the account
            fun deposit(amount: Double) {
                balance += amount
            }
        }
    }
}
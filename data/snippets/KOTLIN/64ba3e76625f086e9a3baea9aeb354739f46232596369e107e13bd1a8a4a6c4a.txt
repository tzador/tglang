// This is a complex code snippet in Kotlin that implements a binary search algorithm

fun <T : Comparable<T>> binarySearch(list: List<T>, target: T): Int? {
    var left = 0
    var right = list.size - 1

    while (left <= right) {
        val mid = left + (right - left) / 2
        when {
            list[mid] == target -> return mid
            list[mid] < target -> left = mid + 1
            else -> right = mid - 1
        }
    }

    return null
}

fun main() {
    val list = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    val target = 6

    val result = binarySearch(list, target)

    if (result != null) {
        println("Target element found at index $result")
    } else {
        println("Target element not found")
    }
}
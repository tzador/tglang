//Kotlin code to calculate the nth Fibonacci number
    fun calcFibonacci(n: Int): Long {
        if (n < 2) return n.toLong()

        //memoization array to store previously calculated results
        val memo = LongArray(n + 1)
        memo[0] = 0
        memo[1] = 1

        //loop to calculate Fibonacci number
        for (i in 2..n) {
            //using memoization to avoid redundant calculations
            memo[i] = memo[i - 1] + memo[i - 2]
        }

        return memo[n]
    }

    //program to print the first 10 Fibonacci numbers using the above function
    fun main(args: Array<String>) {
        val n = 10
        println("The first ${n} Fibonacci numbers are: ")
        for (i in 0 until n) {
            print(calcFibonacci(i).toString() + " ")
        }
    }

    /* Output:
    The first 10 Fibonacci numbers are:
    0 1 1 2 3 5 8 13 21 34 
    */
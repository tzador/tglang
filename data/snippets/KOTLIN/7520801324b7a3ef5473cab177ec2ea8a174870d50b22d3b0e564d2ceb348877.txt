// Create a function to calculate the sum of two numbers
fun sum(x: Int, y: Int): Int {
    return x + y
}

// Create an array to store 10 randomly generated numbers
val numbers = Array(10) { (0..100).random() } 

// Create a for loop to iterate through the array and print the numbers
for (num in numbers) {
    println(num)
}

// Create a class named "Person" with properties: name, age, and gender
class Person(val name: String, val age: Int, val gender: String) {

    // Create a function to introduce the person
    fun introduce() {
        println("Hi, my name is $name. I am $age years old and I identify as $gender.")
    }
}

// Create an instance of the Person class
val person = Person("John", 25, "male")

// Call the introduce function on the person instance
person.introduce()

// Create a null safe variable
var nullableString: String? = null 

// Use a safe call operator to access the length of the string
// If the string is null, the length will not be accessed and null will be returned
val length = nullableString?.length 

// Create a higher-order function to perform an operation on two numbers
fun calculate(x: Int, y: Int, operation: (Int, Int) -> Int): Int {
    return operation(x, y)
}

// Create a lambda expression to add two numbers 
val add = { x: Int, y: Int -> x + y } 

// Call the calculate function with the add lambda expression as the operation parameter 
val result = calculate(5, 10, add)

// Print the result 
println(result)
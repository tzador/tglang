<%
' This code example shows a form that collects user input and saves it to a SQL database.
' It has error handling for invalid input and displays a success message when the form is submitted correctly.
' Import object for connecting to SQL database
Set objConn = Server.CreateObject("ADODB.Connection")
' Database connection string
objConn.ConnectionString = "Provider=SQLOLEDB;Data Source=myServerAddress;Initial Catalog=myDataBase;User Id=myUsername;Password=myPassword;"
' Open database connection
objConn.Open
' Check if form has been submitted
If Request.ServerVariables("REQUEST_METHOD") = "POST" Then
    ' Get form values and assign to variables
    strFirstName = Request.Form("FirstName")
    strLastName = Request.Form("LastName")
    strEmail = Request.Form("Email")
    ' Check for empty fields
    If strFirstName = "" Or strLastName = "" Or strEmail = "" Then
        ' Display error message
        Response.Write("<p>Please fill in all fields.</p>")
    Else
        ' Create SQL insert query
        strSQL = "INSERT INTO Users (FirstName, LastName, Email) VALUES ('" & Replace(strFirstName,"'","''") & "','" & Replace(strLastName,"'","''") & "','" & Replace(strEmail,"'","''") & "')"
        ' Execute query
        Set objRS = objConn.Execute(strSQL)
        ' Check for errors
        If Err.Number <> 0 Then
            ' Display error message and rollback transaction
            Response.Write "<p>There was an error submitting the form. Please try again.</p>"
            objConn.RollbackTrans
        Else
            ' Display success message
            Response.Write "<p>Form submitted successfully!</p>"
            ' Commit the changes to database
            objConn.CommitTrans
        End If
    End If
End If
' Close database connection
objConn.Close
' Release object
Set objConn = Nothing
%>
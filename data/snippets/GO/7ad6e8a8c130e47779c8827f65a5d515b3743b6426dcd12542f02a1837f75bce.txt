package main

// Importing the necessary packages
import (
    "fmt"
    "time"
    "math/rand"
)

// Defining a struct for a Player
type Player struct {
    name     string
    health   int
    strength int
    defense  int
}

// Defining the main function
func main() {
    // Print welcome message
    fmt.Println("Welcome to the game!")

    // Generate a random seed based on current time
    rand.Seed(time.Now().UnixNano())
    
    // Create two players
    player1 := Player{"John", 100, 10, 5}
    player2 := Player{"Jane", 100, 10, 5}

    // Loop until one player's health reaches 0
    for player1.health > 0 && player2.health > 0 {
        // Calculate the attack power of each player
        player1Attack := rand.Intn(player1.strength) + 1
        player2Attack := rand.Intn(player2.strength) + 1

        // Calculate the defense power of each player
        player1Defense := rand.Intn(player1.defense) + 1
        player2Defense := rand.Intn(player2.defense) + 1

        // Calculate the actual damage done by each player
        player1Damage := player2Attack - player1Defense
        player2Damage := player1Attack - player2Defense

        // Ensure that damage done is always a positive integer
        if player1Damage < 0 {
            player1Damage = 0
        }
        if player2Damage < 0 {
            player2Damage = 0
        }

        // Update the health of each player
        player1.health -= player1Damage
        player2.health -= player2Damage

        // Print out the results of the round
        fmt.Printf("%s did %d damage to %s!\n", player2.name, player1Damage, player1.name)
        fmt.Printf("%s did %d damage to %s!\n", player1.name, player2Damage, player2.name)
        fmt.Printf("%s's health is now at %d\n", player1.name, player1.health)
        fmt.Printf("%s's health is now at %d\n", player2.name, player2.health)

        // Add a pause for dramatic effect
        time.Sleep(time.Second)

    }

    // Check who won the game
    if player1.health <= 0 {
        fmt.Printf("%s has been defeated! %s is victorious!", player1.name, player2.name)
    } else {
        fmt.Printf("%s has been defeated! %s is victorious!", player2.name, player1.name)
    }
}
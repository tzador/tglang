package main

import (
   "fmt"
   "math"
)

type shape interface{
   area() float64
   perimeter() float64
}

type circle struct{
   radius float64
}

// Implementing the shape interface on the circle struct
func (c circle) area() float64{
   return math.Pi * (c.radius * c.radius)
}

func (c circle) perimeter() float64{
   return 2 * math.Pi * c.radius
}

func main() {
   // Initializing a circle with radius of 5
   c := circle{5}

   // Calculating and printing the area of the circle
   circleArea := c.area()
   fmt.Printf("Area of circle with radius %v = %v \n", c.radius, circleArea)

   // Calculating and printing the perimeter of the circle
   circlePerimeter := c.perimeter()
   fmt.Printf("Perimeter of circle with radius %v = %v", c.radius, circlePerimeter)
}
package main

import (
    "fmt"
    "strings"
)

// create a struct to hold information about a programming language
type Language struct {
    Name      string
    Paradigm  []string
    Year      int
    Extensions []string
}

// function to format the struct information as a string
func (l Language) String() string {
    return fmt.Sprintf("%v (%v) - %v: %v",
        l.Name,
        strings.Join(l.Paradigm, ", "),
        l.Year,
        strings.Join(l.Extensions, ", "),
    )
}

// create an array of languages with different paradigms and extensions
languages := []Language{
    Language{
        Name:      "Go",
        Paradigm:  []string{"Concurrent", "Imperative"},
        Year:      2009,
        Extensions: []string{".go", ".golang"},
    },
    Language{
        Name:      "Python",
        Paradigm:  []string{"Multiparadigm", "Object-oriented"},
        Year:      1991,
        Extensions: []string{".py", ".pyc"},
    },
    Language{
        Name:      "Haskell",
        Paradigm:  []string{"Functional"},
        Year:      1990,
        Extensions: []string{".hs", ".lhs"},
    },
}

// iterate through the languages and print the formatted string for each one
for _, lang := range languages {
    fmt.Println(lang)
}
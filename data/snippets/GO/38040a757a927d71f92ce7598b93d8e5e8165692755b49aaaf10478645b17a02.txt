package main

import (
	"fmt"
	"math/rand"
)

func main() {

	// generate a random number between 1 to 100
	rand.Seed(time.Now().UnixNano())
	num := rand.Intn(100) + 1

	// create an array of 10 numbers
	arr := [10]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

	// create a map with string keys and int values
	m := make(map[string]int)

	// loop through array and add each element as a key in the map
	// with a value of its index + 1
	for i, val := range arr {
		m[string(val)] = i + 1
	}

	// print the random number and its corresponding value in the map
	fmt.Println("Random number generated:", num)
	fmt.Printf("Corresponding value in map: %d\n", m[string(num)])

	// declare a variable with a long and complex data type
	var longVar map[string]map[int][]string

	// assign value to variable using map literal
	longVar = map[string]map[int][]string{
		"go": {
			1: []string{"hello", "world"},
			3: []string{"foo", "bar"},
		},
		"programming": {
			5: []string{"code", "snippet"},
			7: []string{"variable", "assignment"},
		},
	}

	// loop through map and print out all values
	for k, v := range longVar {
		fmt.Printf("Key: %s, Value: %v\n", k, v)
	}
}
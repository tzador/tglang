// Define a function called "calculate" that takes in 2 integers and returns their sum
func calculate(num1, num2 int) int {
    return num1 + num2
}

// Create a map called "colors" that stores strings as keys and integers as values
colors := map[string]int{
    "red": 1,
    "blue": 2,
    "green": 3,
}

// Create an interface called "Shape" with a method called "getArea" that returns an integer
type Shape interface {
    getArea() int
}

// Create a struct called "Circle" that implements the Shape interface and has a radius property
type Circle struct {
    radius int
}

// Implement the getArea method for the Circle struct
func (c Circle) getArea() int {
    return 3.14 * (c.radius * c.radius)
}

// Create a slice of pointers to Shape structs called "shapes"
shapes := []*Shape{
    &Circle{radius: 5},
}

// Loop through the "shapes" slice and print the area of each shape
for _, s := range shapes {
    fmt.Println(s.getArea())
}
func quicksort(nums []int, lo int, hi int) {
    if lo < hi {
        p := partition(nums, lo, hi)
        quicksort(nums, lo, p - 1)
        quicksort(nums, p + 1, hi)
    }
}

func partition(nums []int, lo int, hi int) int {
    pivot := nums[hi]
    i := lo - 1
    for j := lo; j < hi; j++ {
        if nums[j] < pivot {
            i++
            nums[i], nums[j] = nums[j], nums[i]
        }
    }
    nums[i + 1], nums[hi] = nums[hi], nums[i + 1]
    return i + 1
}

func main() {
    nums := []int{5, 2, 8, 3, 6, 1, 9, 10, 4, 7}
    fmt.Println("Unsorted:", nums)
    quicksort(nums, 0, len(nums) - 1)
    fmt.Println("Sorted:", nums)
}
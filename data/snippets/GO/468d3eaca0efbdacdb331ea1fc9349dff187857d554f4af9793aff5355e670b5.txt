package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	// creates a new seed for the random number generator
	rand.Seed(time.Now().UnixNano())

	// generates a random number between 1 and 100
	randomNum := rand.Intn(100) + 1

	// creates a slice of strings to store user inputs
	var guesses []string

	// creates a counter variable to track number of guesses
	count := 0

	// prints a welcome message to the user
	fmt.Println("Welcome to the Guessing Game! I have picked a number between 1 and 100. Can you guess it?")

	// creates a for loop to allow for multiple guesses
	for {
		// prompts the user to enter a number
		fmt.Print("Enter your guess: ")

		// creates a variable to store user input
		var guess int

		// scans the user input and stores it in the guess variable
		_, err := fmt.Scanln(&guess)

		// checks for any errors in scanning user input
		if err != nil {
			fmt.Println("Invalid input. Please enter a number.")
			continue
		}

		// adds the user's guess to the guesses slice
		guesses = append(guesses, fmt.Sprintf("%v", guess))

		// increments the count variable
		count++

		// compares the user's guess to the random number
		switch {
		case guess > randomNum:
			fmt.Println("Too high! Try again.")
		case guess < randomNum:
			fmt.Println("Too low! Try again.")
		default:
			// prints a congratulatory message and the number of guesses
			fmt.Printf("Congratulations! You guessed the number in %d tries.\n", count)

			// prints the list of guesses made by the user
			fmt.Println("Here are your guesses:")

			// creates a for loop to iterate through the guesses slice
			for i := range guesses {
				// prints each guess with an index number
				fmt.Printf("%d: %s\n", i+1, guesses[i])
			}

			// exits the for loop
			break
		}
	}
}
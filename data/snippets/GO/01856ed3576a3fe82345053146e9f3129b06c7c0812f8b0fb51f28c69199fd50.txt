// This code snippet creates a struct called Person 

type Person struct { 
    name string // The name of the person 
    age int // The age of the person 
    occupation string // The person's occupation 
    city string // The person's current city 
    interests []string // A slice of strings containing the person's interests 
} 

// This function creates a new person instance and initializes their information 

func NewPerson(name , occupation, city string, age int, interests []string) *Person { 
    return &Person{ 
        name: name, 
        age: age, 
        occupation: occupation, 
        city: city, 
        interests: interests, 
    } 
} 

// This function adds a new interest to the person's interests slice 

func (p *Person) AddInterest(interest string) { 
    p.interests = append(p.interests, interest) 
} 

// This main function creates a new person and adds interests to their interests list 

func main() { 
    // Create a new person instance
    person := NewPerson("John Doe", "Software Engineer", "New York", 25, []string{"hiking", "photography"})
    
    // Add new interests
    person.AddInterest("reading") 
    person.AddInterest("traveling") 
    
    // Print out the person's information
    fmt.Printf("Name: %s \nAge: %d \nOccupation: %s \nCity: %s \nInterests: %v", person.name, person.age, person.occupation, person.city, person.interests)
}

***********************************************

Output:
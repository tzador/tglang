// This function performs a binary search on a sorted array
func binarySearch(array []int, target int) int {
	left := 0             // Initialize left index
	right := len(array)-1 // Initialize right index

	// Loop until left index is greater than right index
	for left <= right {
		mid := (left + right) / 2 // Calculate middle index

		// Check if middle value is equal to target
		if array[mid] == target {
			return mid
		} else if array[mid] < target { // If middle value is less than target, search the right half
			left = mid + 1
		} else { // If middle value is greater than target, search the left half
			right = mid - 1
		}
	}

	// If target is not found, return -1
	return -1
}

// Example usage
array := []int{1, 2, 3, 4, 5, 6, 7, 8, 9}
target := 7

result := binarySearch(array, target)

fmt.Println(result) // Output: 6
package main
import (
    "fmt"
    "time"
)

func main() {
    // initialize a variable of type map with a string key type
    // and a slice of strings as the value type
    // using the make keyword
    myMap := make(map[string][]string)

    // add values to the map
    myMap["fruit"] = []string{"apple", "banana", "orange"}
    myMap["car"] = []string{"mercedes", "bmw"}

    // use a range loop to iterate through the map
    for key, value := range myMap {
        // print the key
        fmt.Println(key)
        // use a range loop to iterate through the slice of strings
        for _, v := range value {
            // print the value with a prefix
            fmt.Println("- " + v)
        }
    }

    // create a channel to receive a signal
    c := make(chan bool)

    // use a go routine to print "Hello world!"
    // after a 3 second delay
    go func() {
        time.Sleep(3 * time.Second)
        fmt.Println("Hello world!")
        // send a signal to the channel
        c <- true
    }()

    // use a select statement to receive the signal from the channel
    select {
    case <-c:
        // if signal is received, print "Done!"
        fmt.Println("Done!")
    }
}
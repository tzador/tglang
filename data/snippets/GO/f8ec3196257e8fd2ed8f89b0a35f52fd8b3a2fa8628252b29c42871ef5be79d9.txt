// This is a multi-line comment in GO

package main  // This is defining the package name

import "fmt" // This is importing the fmt package

// This is a function called main
// It takes in no parameters
// It has no return value
func main() {

    // This is a for loop that repeats 5 times
    for i := 0; i < 5; i++ {
        fmt.Println("Hello, world!") // Prints the string "Hello, world!"
    }

    // This is a variable declaration and assignment
    // The variable 'name' is assigned the string "John"
    name := "John"

    // This is a conditional statement
    // It checks if the variable 'name' is equal to "John"
    if name == "John" {
        fmt.Println("You have the same name as me!") // Prints the string "You have the same name as me!"
    } else {
        fmt.Println("Hello,", name) // Prints the string "Hello, John"
    }

    // This is a switch statement
    // It checks the value of the variable 'num'
    // and executes the corresponding case
    num := 1
    switch num {
        case 1:
            fmt.Println("This is number 1") // Prints the string "This is number 1"
        case 2:
            fmt.Println("This is number 2") // Prints the string "This is number 2"
        default:
            fmt.Println("This is not number 1 or 2") // Prints the string "This is not number 1 or 2"
    }

    // This is a function called add
    // It takes in two parameters of type int
    // It returns the sum of the two parameters
    func add(x int, y int) int {
        return x + y
    }

    // This is a variable declaration and assignment
    // The variable 'result' is assigned the result of calling the add function with arguments 1 and 2
    result := add(1,2)

    fmt.Println(result) // Prints the value of 'result' which is 3

    // This is a struct called Person
    // It has two fields: name and age
    type Person struct {
        name string
        age int
    }

    // This is a variable declaration and assignment
    // The variable 'person' is assigned a new instance of the Person struct
    person := Person{name: "John", age: 20}

    fmt.Println(person.name) // Prints the value of the 'name' field in the person struct, which is "John"
}
/*
Package main imports fmt and time packages
*/
package main

import (
	"fmt"   // Imports the fmt package for printing
	"time"  // Imports the time package for handling time operations
)

func main() {
	// Create a channel to receive a message
	message := make(chan string)

	// Use a goroutine to send a message to the channel
	go func() {
		time.Sleep(2 * time.Second) // Sleep for 2 seconds
		message <- "Hello, world!"   // Send message to channel
	}()

	// Use a select statement to receive message from channel
	select {
	case msg := <-message:
		fmt.Println(msg) // Print received message
	case <-time.After(3 * time.Second):
		fmt.Println("No message received") // Print if no message received after 3 seconds
	}
}

/*
Output:
Hello, world!
*/
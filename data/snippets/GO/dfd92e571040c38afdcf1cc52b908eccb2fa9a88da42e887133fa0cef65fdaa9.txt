package main

import (
  "fmt"
  "math/rand"
  "time"
)

type person struct {
  name  string
  age   int
  email string
}

func main() {
  rand.Seed(time.Now().UnixNano()) // seed the random number generator
  numPeople := 5                   // number of people to create

  // create a slice of structs for people
  people := make([]person, numPeople)

  // loop through the slice and randomly generate data
  for i := 0; i < numPeople; i++ {
    // generate a random age
    randAge := rand.Intn(50) + 18 // age between 18 and 67

    // generate random name
    randName := randomName()

    // generate random email
    randEmail := randName + "@example.com"

    // populate the person struct
    people[i] = person{
      name:  randName,
      age:   randAge,
      email: randEmail,
    }
  }

  // print out the list of people
  for _, p := range people {
    fmt.Printf("Name: %v\nAge: %v\nEmail: %v\n\n", p.name, p.age, p.email)
  }
}

// function to generate a random name using a list of possible names
func randomName() string {
  names := []string{"John", "Jane", "Michael", "Samantha", "Daniel", "Emily", "Kevin", "Grace", "Jacob", "Olivia", "Matthew", "Isabella"}
  rand.Seed(time.Now().UnixNano())
  randIndex := rand.Intn(len(names))
  return names[randIndex]
}
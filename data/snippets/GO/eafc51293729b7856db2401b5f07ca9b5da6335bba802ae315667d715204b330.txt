package main

import (
	"fmt"
	"math/rand"
	"time"
)

// This function takes in an integer as input and returns its factorial
func factorial(num int) int {
	result := 1
	for i := 1; i <= num; i++ {
		result *= i
	}
	return result
}

// This function checks if a number is a prime number or not
func isPrime(num int) bool {
	if num < 2 {
		return false
	}
	for i := 2; i <= num/2; i++ {
		if num%i == 0 {
			return false
		}
	}
	return true
}

// This function generates a random string of given length
func generateRandomString(length int) string {
	rand.Seed(time.Now().UnixNano())
	chars := "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
	result := make([]byte, length)
	for i := range result {
		result[i] = chars[rand.Intn(len(chars))]
	}
	return string(result)
}

// This is the main function
func main() {
	// Generate a random number between 1 and 100
	rand.Seed(time.Now().UnixNano())
	num := rand.Intn(100) + 1

	// Print the number
	fmt.Println("Random number:", num)

	// Check if the number is a prime number
	if isPrime(num) {
		fmt.Println(num, "is a prime number")
	} else {
		fmt.Println(num, "is not a prime number")
	}

	// Calculate and print the factorial of the number
	fmt.Println("Factorial of", num, "is:", factorial(num))

	// Generate a random string of length 10
	randomString := generateRandomString(10)

	// Print the string
	fmt.Println("Random string:", randomString)
}
// This code snippet generates a binary tree data structure
// using recursion
func generateTree(depth int) *TreeNode {
    // base case for recursion
    if depth == 0 {
        return nil
    }
    //create a new node
    node := &TreeNode{
        Val: depth,
    }
    // recursively call generateTree on left and right subtree
    node.Left = generateTree(depth - 1)
    node.Right = generateTree(depth - 1)
    return node
}
// TreeNode struct
type TreeNode struct {
    Val   int
    Left  *TreeNode
    Right *TreeNode
}
//example usage
func main() {
    // generate a binary tree with depth of 3
    tree := generateTree(3)
    // print tree
    fmt.Printf("Tree: %v", tree)
}
/*
This code snippet generates a random number and uses the math package and time package.
It also demonstrates the use of if/else statements and for loops.
*/

package main

import (
	"fmt"
	"math"
	"time"
)

func main() {
	// set the seed for random number generation
	rand.Seed(time.Now().UnixNano())

	// generate a random number between 1 and 100
	randomNum := rand.Intn(100) + 1
	fmt.Println("Random Number:", randomNum)

	// calculate the square root of the random number using the math package
	sqrt := math.Sqrt(float64(randomNum))
	fmt.Println("Square Root:", sqrt)

	// if the square root is a whole number, print a message
	if sqrt == math.Trunc(sqrt) {
		fmt.Println("Square root is a whole number!")
	} else { // else, print a different message
		fmt.Println("Square root is not a whole number.")
	}

	// use a for loop to print numbers from 0 to the square root
	for i := 0; i <= int(sqrt); i++ {
		fmt.Println("Number:", i)
	}
}
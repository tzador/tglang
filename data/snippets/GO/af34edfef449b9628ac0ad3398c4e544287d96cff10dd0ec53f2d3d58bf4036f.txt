// Creates a function to sort a slice of integers
func sort(slice []int) []int {
    // Checks if the slice has only one element, if so, returns the slice
    if len(slice) <2 {		
        return slice
    }
	// Defines the pivot element
    pivot := slice[0]
    // Creates two empty slices to store smaller and larger elements
    var smaller []int
    var larger []int
    // Loops through the slice, adding elements to the appropriate slice based on their comparison to the pivot
    for _, num := range slice {
        if num <= pivot {
            smaller = append(smaller, num)
        } else {
            larger = append(larger, num)
        }
    }
    // Recursively calls the sort function on smaller and larger slices, and combines them with the pivot element in between
    return append(append(sort(smaller), pivot), sort(larger)...)
}
// Sample input slice
arr := []int{4, 2, 7, 3, 8, 1, 5}
// Prints the sorted slice
fmt.Println(sort(arr))
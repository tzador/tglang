// This is a complex code snippet in GO language
// It calculates the sum of the first 10 terms of the Fibonacci sequence
// Using recursive function
package main

import "fmt"

// Function to calculate the sum of first n terms of Fibonacci sequence
func sumFib(n int) int {

    // Initializing variables to store the first two terms of the sequence
    a := 0
    b := 1

    // Initializing variable to store the sum
    sum := 0

    // Recursive function to calculate the sum of first n terms
    var calcSum func(n int, a int, b int)

    calcSum = func(n int, a int, b int) {

        // Base case, if n is 0, return 0
        if n == 0 {
            return
        }

        // Adding the current term (a) to the sum
        sum += a

        // Recursively calling the function to calculate the subsequent terms
        calcSum(n-1, b, a+b)
    }

    // Calling the recursive function with the given value of n
    calcSum(n, a, b)

    // Returning the sum
    return sum
}

func main() {
    // Calling the sumFib function with n = 10 and printing the result
    fmt.Println(sumFib(10))
}
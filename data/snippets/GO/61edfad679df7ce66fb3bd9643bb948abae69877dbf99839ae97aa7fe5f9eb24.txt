package main

import (
	"fmt"
	"math/rand"
	"sort"
	"strings"
)

// create struct to represent a person
type Person struct {
	Name string
	Age  int
}

// function to sort people by age
func sortPeopleByAge(people []Person) {
	sort.SliceStable(people, func(i, j int) bool {
		return people[i].Age < people[j].Age
	})
}

// function to filter people by name
func filterPeopleByName(people []Person, name string) []Person {
	var filteredPeople []Person
	for _, person := range people {
		if strings.Contains(person.Name, name) {
			filteredPeople = append(filteredPeople, person)
		}
	}
	return filteredPeople
}

func main() {
	// create list of people with random ages
	people := []Person{
		{Name: "John", Age: rand.Intn(50)},
		{Name: "Jane", Age: rand.Intn(50)},
		{Name: "Bob", Age: rand.Intn(50)},
		{Name: "Alice", Age: rand.Intn(50)},
		{Name: "Tom", Age: rand.Intn(50)},
	}

	// sort people by age using our defined function
	sortPeopleByAge(people)

	// filter people by name using our defined function
	filteredPeople := filterPeopleByName(people, "o")

	// print the filtered list of people
	fmt.Printf("People with names containing 'o': %+v\n", filteredPeople)
}
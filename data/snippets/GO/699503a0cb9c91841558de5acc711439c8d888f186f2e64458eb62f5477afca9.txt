package main // creates a new Go package

import "fmt" // imports the "fmt" package for formatted I/O functions

type Person struct { // creates a struct named "Person" to represent a person
	Name string // defines a field "Name" of type string
	Age int // defines a field "Age" of type int
}

func main() { // main function to execute the code
	p1 := Person{"John", 27} // creates a new instance of Person struct with Name "John" and Age 27
	fmt.Println(p1) // prints the value of p1 in a formatted string

	p2 := Person{ // creates another instance of Person struct, setting Name and Age separately
		Name: "Jane",
		Age: 30,
	}
	fmt.Println(p2.Name, "is", p2.Age, "years old.") // prints a sentence using values from p2

	p3 := new(Person) // creates a pointer to a new Person struct
	p3.Name = "Bob" // sets the Name field of p3 to "Bob"
	p3.Age = 35 // sets the Age field of p3 to 35
	fmt.Printf("P3 is a pointer to a Person struct with Name %s and Age %d.", p3.Name, p3.Age) // prints a custom formatted string using values from p3
}
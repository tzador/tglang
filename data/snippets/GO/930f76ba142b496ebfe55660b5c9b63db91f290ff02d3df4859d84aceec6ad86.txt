// This is a function that checks if the given number is prime or not.
// It takes an integer as its input and returns a boolean value.
func isPrime(n int) bool {
    // Initializing an empty slice to store the factors of the number.
    var factors []int 
    // Looping through all numbers from 1 to n.
    for i := 1; i <= n; i++ {
        // Checking if i is a factor of n.
        if n % i == 0 {
            // Appending i to the factors slice.
            factors = append(factors, i)
        }
    }
    // If there are only two factors (1 and n), then n is prime.
    if len(factors) == 2 {
        // Return true if n is prime.
        return true
    } else {
        // Otherwise, return false.
        return false
    }
}

// This is the main function that uses the isPrime function to check if a given number is prime or not.
func main() {
    // Taking input from the user.
    fmt.Print("Enter a number: ")
    var num int
    fmt.Scan(&num)
    
    // Calling the isPrime function and storing the result in a variable.
    isPrime := isPrime(num)
    
    // Checking if the number is prime or not.
    if isPrime {
        // If the number is prime, print a message stating so.
        fmt.Println(num, "is a prime number.")
    } else {
        // If the number is not prime, print a message stating so.
        fmt.Println(num, "is not a prime number.")
    }
}

// Sample output:
// Enter a number: 7
// 7 is a prime number.
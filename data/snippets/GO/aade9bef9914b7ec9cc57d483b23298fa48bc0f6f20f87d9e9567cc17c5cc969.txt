// This code snippet generates a Fibonacci sequence up to the desired number 
 
// Function to generate Fibonacci sequence 
func Fibonacci(n int) []int {
    // Create an empty slice to store the sequence 
    fib := make([]int, n)
    // First two numbers in the sequence are always 0 and 1 
    fib[0] = 0
    fib[1] = 1
    // Loop through the remaining numbers in the sequence 
    for i := 2; i < n; i++ {
        // Add the previous two numbers to get the current number 
        fib[i] = fib[i-1] + fib[i-2]
    }
    // Return the generated sequence 
    return fib
}

// Input the number of terms for the sequence
var numTerms int = 10

// Call the Fibonacci function and store the sequence in a variable 
result := Fibonacci(numTerms)

// Print the generated sequence 
fmt.Println("Fibonacci sequence up to", numTerms, "terms:")
fmt.Println(result)
// This complex code snippet performs various mathematical operations on a given set of numbers

package main

import "fmt"

func main() {
    // create an array of numbers
    numbers := []int{1, 4, 6, 9, 10, 3, 5, 2}

    // print the array
    fmt.Println("Input numbers:", numbers)

    // calculate the sum of the numbers
    sum := 0
    for i := 0; i < len(numbers); i++ {
        sum += numbers[i]
    }

    // print the sum
    fmt.Println("Sum of numbers:", sum)

    // calculate the average of the numbers
    average := float64(sum) / float64(len(numbers))

    // print the average
    fmt.Println("Average of numbers:", average)

    // calculate the maximum and minimum number in the array
    // assume first number is max and min
    max := numbers[0]
    min := numbers[0]
    for j := 1; j < len(numbers); j++ {
        if numbers[j] > max {
            max = numbers[j]
        }
        if numbers[j] < min {
            min = numbers[j]
        }
    }

    // print the maximum and minimum numbers
    fmt.Println("Maximum number:", max)
    fmt.Println("Minimum number:", min)

    // create a map to store the count of each number in the array
    countMap := make(map[int]int)
    for k := 0; k < len(numbers); k++ {
        // check if the number already exists in the map
        if _, ok := countMap[numbers[k]]; ok {
            // if exists, increment the count
            countMap[numbers[k]]++
        } else {
            // if doesn't exist, add it to the map with count 1
            countMap[numbers[k]] = 1
        }
    }

    // print the map
    fmt.Println("Count of numbers:", countMap)
}
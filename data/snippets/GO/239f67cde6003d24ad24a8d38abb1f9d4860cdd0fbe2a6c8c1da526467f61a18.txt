// Package main is the main entry point for the program
package main

// Import the necessary libraries
import (
    "fmt" // for printing
    "math" // for math operations
    "time" // for time-related operations
)

// Define a struct to hold employee data
type Employee struct {
    Name     string
    Age      int
    Position string
    Salary   float64
}

// Define a function to calculate the bonus for employees
func calculateBonus(emp Employee) float64 {
    // Chance of getting a bonus is determined by employee's age and position
    bonusChance := math.Abs(float64(emp.Age) * float64(len(emp.Position))) / 100

    // Generate a random number between 0 and 1 using current time as seed
    randNum := rand.New(rand.NewSource(time.Now().UnixNano())).Float64()

    // Check if the generated random number is less than bonus chance
    if randNum < bonusChance {
        // If so, calculate and return the bonus amount 
        return (emp.Salary * 0.1) + (float64(emp.Age) * 10)
    }

    // If not, return 0 bonus 
    return 0
}

func main() {
    // Create a slice of employees
    employees := []Employee{
        {
            Name:     "John Doe",
            Age:      35,
            Position: "Manager",
            Salary:   80000,
        },
        {
            Name:     "Jane Smith",
            Age:      28,
            Position: "Sales Associate",
            Salary:   50000,
        },
        {
            Name:     "Bob Johnson",
            Age:      42,
            Position: "Director",
            Salary:   100000,
        },
    }

    // Loop through the employees and calculate their bonuses
    for _, emp := range employees {
        bonus := calculateBonus(emp) // call the calculateBonus() function
        fmt.Printf("Bonus for %s: $%.2f\n", emp.Name, bonus)
    }
}

// Output (for example): 
// Bonus for John Doe: $8400.00 
// Bonus for Jane Smith: $2800.00 
// Bonus for Bob Johnson: $11500.00
// This code snippet generates a random password with a length of 15 characters
package main

import (
	"crypto/rand"
	"math/big"
)

// function to generate random password
func generatePassword(length int) string {
	// list of characters to choose from
	characters := "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+{}[]|:;<>,./?"

	// create an empty string to store password
	var password string

	// set a limit for loop
	limit := big.NewInt(int64(len(characters)))

	// loop through the length of password
	for i := 0; i < length; i++ {
		// generate a random number within limit
		randomInt, err := rand.Int(rand.Reader, limit)
		if err != nil {
			panic(err)
		}

		// convert random number to an index
		index := int(randomInt.Int64())

		// add character at the index to password
		password = password + string(characters[index])
	}

	// return the generated password
	return password
}

// main function to run the program
func main() {
	// generate a password with length of 15 characters
	password := generatePassword(15)

	// prints the generated password
	fmt.Println("Generated Password:", password)
}
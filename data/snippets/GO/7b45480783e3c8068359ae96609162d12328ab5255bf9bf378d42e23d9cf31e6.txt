package main
import (
	"fmt"
	"math"
)

// defines a struct type called circle with fields for radius and position
type circle struct {
	radius   float64
	position struct {
		x float64
		y float64
	}
}

// calculates the area of a circle using its radius
func (c circle) area() float64 {
	return math.Pi * c.radius * c.radius
}

// calculates the circumference of a circle using its radius
func (c circle) circumference() float64 {
	return 2 * math.Pi * c.radius
}

// prints information about the circle, including its area and circumference
func (c circle) printInfo() {
	fmt.Printf("Radius: %f\n", c.radius)
	fmt.Printf("Position: (x: %f, y: %f)\n", c.position.x, c.position.y)
	fmt.Printf("Area: %f\n", c.area())
	fmt.Printf("Circumference: %f\n", c.circumference())
}

func main() {
	// creates a new circle instance with radius 5 and position (2, 3)
	c := circle{
		radius: 5.0,
		position: struct {
			x float64
			y float64
		}{x: 2.0, y: 3.0},
	}

	// prints information about the circle
	c.printInfo()
}
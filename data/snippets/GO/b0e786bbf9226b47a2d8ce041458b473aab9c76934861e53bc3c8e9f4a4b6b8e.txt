/* This is a multi-line comment */
package main // Indicates that this is the main package 


// Importing libraries
import (
    "fmt" // Provides input/output functions
    "math" // Provides mathematical functions
)

/* 
This function calculates the factorial of a given number 
@param n: The number to find factorial of
@return: The factorial of the given number
*/
func factorial(n int) int {
    if n == 0 { // If n is 0, return 1
        return 1
    } else { // Otherwise, recursively call the function
        return n * factorial(n-1) // Multiply n by the factorial of n-1
    }
}

/* 
This function calculates the square root of a number using the Newton's method
@param x: The number to find the square root of
@return: The square root of the given number
*/
func sqrt(x float64) float64 {
    z := x
    for i := 0; i < 10; i++ { // Only run 10 iterations
        z = z - (z*z - x) / (2*z) // Use the Newton's method to calculate the square root
    }
    return z
}

// Main function
func main() {

    // Printing the factorial of 5
    fmt.Println(factorial(5)) // Output: 120

    // Printing the square root of 10
    fmt.Println(math.Sqrt(10)) // Output: 3.1622776601683795

}
package main

import (
    "fmt"
    "math/rand"
    "time"
)

func main() {
    // generate a random number between 1 and 10
    rand.Seed(time.Now().UnixNano())
    num := rand.Intn(10) + 1

    // create a slice to store the numbers
    var numSlice []int

    // add the random number to the slice
    numSlice = append(numSlice, num)

    // print the initial slice
    fmt.Println("Initial Slice:", numSlice)

    // create a for loop to generate 10 additional random numbers
    for i := 0; i < 10; i++ {
        // generate a new random number between 1 and 10
        newNum := rand.Intn(10) + 1
        // append to the slice
        numSlice = append(numSlice, newNum) // this might cause capacity issues in larger slices
    }

    // print the final slice
    fmt.Println("Final Slice:", numSlice)

    // sort the slice in ascending order using bubble sort algorithm
    bubbleSort(numSlice)

    // print the sorted slice
    fmt.Println("Sorted Slice:", numSlice)

}

// bubbleSort function to sort the slice in ascending order
func bubbleSort(slice []int) {
    for i := 0; i < len(slice)-1; i++ {
        for j := 0; j < len(slice)-i-1; j++ {
            if slice[j] > slice[j+1] {
                // swap elements
                temp := slice[j]
                slice[j] = slice[j+1]
                slice[j+1] = temp
            }
        }
    }
}
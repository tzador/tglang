// This function takes in two integer values and returns the sum of the square of those integers
func sumSquares(x int, y int) int {
  return (x * x) + (y * y)
}

// This is a simple while loop that checks if the given number is prime or not
func isPrime(num int) bool {
  i := 2
  for i < num {
    if num % i == 0 {
      return false
    }
    i++
  }
  return true
}

// This is a code snippet that uses channels to sum up the prime numbers between 1 and 100
func sumPrimes(ch chan int) {
  total := 0
  for i := 2; i <= 100; i++ {
    if isPrime(i) {
      total = total + i
    }
  }
  ch <- total // sends the sum to the channel
}

// This is the main function that executes the code
func main() {
  ch := make(chan int)
  go sumPrimes(ch) // execute sumPrimes function concurrently
  result := <- ch // receive result from channel
  fmt.Println("Sum of the prime numbers between 1 and 100 is:", result) // print result
}
â€‹
// Output:
// Sum of the prime numbers between 1 and 100 is: 1060
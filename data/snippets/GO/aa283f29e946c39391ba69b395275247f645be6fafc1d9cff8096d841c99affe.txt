// Creates a struct type named Person
type Person struct {
	Name   string
	Age    int
	Gender string
}

// Creates a function called changeName that takes in a pointer to a Person type and a string 
// and returns an updated Person struct
func changeName(p *Person, newName string) *Person {
	// Changes the name of the Person struct passed in to the function
	p.Name = newName
	
	// Returns the updated Person struct
	return p
}

// Creates a function called getInfo that takes in a Person struct and returns a string
func getInfo(p Person) string {
	// Uses string concatenation to create a message with the person's information 
	msg := "Hello, my name is " + p.Name + " and I am " + string(p.Age) + " years old, identify as " + p.Gender + "."
	
	// Returns the message
	return msg
}

// Creates a new instance of the Person struct, setting the fields to be "John", 25, and "male"
p := &Person{
	Name:   "John",
	Age:    25,
	Gender: "male",
}

// Calls the changeName function on the p Person struct, passing in a new name "Jane"
changeName(p, "Jane")

// Calls the getInfo function on the updated p Person struct and prints the output
fmt.Println(getInfo(*p))
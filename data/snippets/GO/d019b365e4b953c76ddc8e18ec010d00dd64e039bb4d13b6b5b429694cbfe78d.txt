package main

import (
	"fmt"
	"strings"
	"strconv"
)

func main() {
	input := "12345"
	number, _ := strconv.Atoi(input)
	primeFactors := primeFactorization(number)
	for index, factor := range primeFactors {
		ordinal := getOrdinalSuffix(index + 1)
		fmt.Printf("The %s prime factor of %d is %d.\n", ordinal, number, factor)
	}
}

// primeFactorization takes in a number and returns a slice of its prime factors. 
func primeFactorization(number int) []int {
	factors := make([]int, 0)
	var current int = 2
	for number != 1 {
		if number%current == 0 {
			factors = append(factors, current)
			number = number / current
		} else {
			current++
		}
	}
	return factors
}

// getOrdinalSuffix takes in a number and returns its corresponding ordinal suffix.
func getOrdinalSuffix(number int) string {
	suffix := "th"
	switch {
	case number%10 == 1 && number%100 != 11:
		suffix = "st"
	case number%10 == 2 && number%100 != 12:
		suffix = "nd"
	case number%10 == 3 && number%100 != 13:
		suffix = "rd"
	}
	return suffix
}
// Defining a function to check if a number is prime or not
func isPrime(n int) bool {
    // Initializing a boolean value to store the prime status of the given number
    prime := true
    // Checking if the number is less than or equal to 1
    if n <= 1 {
        // If the number is less than or equal to 1, then it is not a prime number
        prime = false
    } else {
        // Looping from 2 to the square root of the given number
        for i := 2; i * i <= n; i++ {
            // Checking if the given number is divisible by any number in the loop
            if n % i == 0 {
                // If the number is divisible, then it is not a prime number
                prime = false
                // Exiting the loop
                break
            }
        }
    }
    // Returning the prime status of the given number
    return prime
}

// Calling the isPrime function with input value 67 and storing the result in a variable
result := isPrime(67)

// Printing the result
fmt.Println("Is 67 a prime number?: ", result)
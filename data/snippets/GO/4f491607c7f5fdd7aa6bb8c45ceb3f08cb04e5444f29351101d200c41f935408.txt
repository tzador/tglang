package main

import (
	"fmt"
	"math/rand"
)

func main() {
	limit := 100
	nums := make([]int, limit)

	for i := 0; i < limit; i++ {
		nums[i] = rand.Intn(limit)
	}

	mergeSort(nums, 0, limit-1)

	fmt.Println(nums)
}

// function to merge two halves of an array
func merge(nums []int, left, mid, right int) {
	left_size := mid - left + 1
	right_size := right - mid
	left_arr := make([]int, left_size)
	right_arr := make([]int, right_size)

	for i := 0; i < left_size; i++ {
		left_arr[i] = nums[left+i]
	}

	for i := 0; i < right_size; i++ {
		right_arr[i] = nums[mid+1+i]
	}

	left_index, right_index := 0, 0
	index := left

	for left_index < left_size && right_index < right_size {
		if left_arr[left_index] <= right_arr[right_index] {
			nums[index] = left_arr[left_index]
			left_index++
		} else {
			nums[index] = right_arr[right_index]
			right_index++
		}
		index++
	}

	for left_index < left_size {
		nums[index] = left_arr[left_index]
		left_index++
		index++
	}

	for right_index < right_size {
		nums[index] = right_arr[right_index]
		right_index++
		index++
	}
}

// function to perform merge sort
func mergeSort(nums []int, left, right int) {
	if left < right {
		mid := left + (right-left)/2
		mergeSort(nums, left, mid)
		mergeSort(nums, mid+1, right)
		merge(nums, left, mid, right)
	}
}
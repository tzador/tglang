package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	// declare an array with size and type
	var nums [5]int

	// iterate through array and generate random numbers
	for i := 0; i < len(nums); i++ {
		nums[i] = rand.Intn(100)
	}

	// create a map to store the count of each number
	counts := make(map[int]int)

	// iterate through array and update counts in map
	for _, num := range nums {
		counts[num]++
	}

	// print out the numbers and their respective counts
	fmt.Println("Numbers and their counts:")
	for key, value := range counts {
		fmt.Printf("%d - %d\n", key, value)
	}

	// generate a random number and check if it exists in the array
	rand.Seed(time.Now().UnixNano())
	randomNumber := rand.Intn(100)
	if counts[randomNumber] > 0 {
		fmt.Printf("The number %d exists in the array!", randomNumber)
	} else {
		fmt.Printf("The number %d does not exist in the array.", randomNumber)
	}
}
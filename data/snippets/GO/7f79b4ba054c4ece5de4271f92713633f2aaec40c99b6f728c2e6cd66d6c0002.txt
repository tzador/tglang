// This code snippet uses Goroutines and channels to generate a fibonacci sequence
func main() {
    // The `make` function is used to create a channel of integers
    c := make(chan int)
    // A goroutine is spawned to generate the fibonacci sequence and send the results to the channel
    go func() {
        // Starting the sequence at 0 and 1
        x, y := 0, 1
        // Looping through 50 iterations to generate a sequence of 50 numbers
        for i := 0; i < 50; i++ {
            // Sending the result to the channel
            c <- x
            // Calculating the next number in the sequence by adding the previous two numbers
            x, y = y, x+y
        }
        close(c) // Closing the channel once all values have been sent
    }()
    // Looping through the channel to print out the fibonacci sequence
    for n := range c {
        fmt.Println(n)
    }
}
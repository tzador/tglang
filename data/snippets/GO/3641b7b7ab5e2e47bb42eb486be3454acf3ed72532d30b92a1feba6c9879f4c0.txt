// Initialize a nested slice using shorthand notation
nestedSlice := [][]string{{"A", "B", "C"}, {"D", "E", "F"}}

// Loop through the nested slice and print out the values
for i := 0; i < len(nestedSlice); i++ {
    for j := 0; j < len(nestedSlice[i]); j++ {
        fmt.Println(nestedSlice[i][j])
    }
}

// Initialize a map with string keys and slice values
m := map[string][]int{"a": {1, 2, 3}, "b": {4, 5, 6}}

// Loop through the map and print out the keys and values
for k, v := range m {
    fmt.Printf("Key: %v, Values: %v\n", k, v)
}

// Define a function with variadic parameters and return a slice
func sum(nums ...int) []int {
    res := make([]int, len(nums))
    for i, n := range nums {
        res[i] = n + n
    }
    return res
}

// Call the function and print out the returned slice
fmt.Println(sum(1, 2, 3, 4, 5))
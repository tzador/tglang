/**
 * Function that sorts a given array of integers in ascending order using the bubble sort algorithm.
 * Time complexity: O(n^2) where n is the length of the given array.
 * Space complexity: O(1)
 * @param array An array of integers to be sorted
 * @return Sorted array in ascending order
*/
func BubbleSort(array []int) []int {
	// Loop through the array starting at the first element
	for i := 0; i < len(array); i++ {
		// Loop through the array again, starting at the second element
		for j := 1; j < len(array); j++ {
			// Compare the current element with the previous element
			if array[j] < array[j-1] {
				// If the current element is smaller, swap it with the previous element
				array[j], array[j-1] = array[j-1], array[j]
			}
		}
	}
	// Return the sorted array
	return array
}
// Example usage
array := []int{5, 2, 7, 1, 3}
sortedArray := BubbleSort(array)
fmt.Println(sortedArray) // Output: [1, 2, 3, 5, 7]
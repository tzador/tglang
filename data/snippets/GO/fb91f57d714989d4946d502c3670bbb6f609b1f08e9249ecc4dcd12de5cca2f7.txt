package main

//Importing necessary packages
import (
	"fmt"
	"math/rand"
	"time"
)

//Struct for representing a person
type person struct {
	name    string
	age     int
	company string
}

//A map of companies and their corresponding employees
var companies = map[string][]person{
	"Google": []person{
		{name: "John", age: 25, company: "Google"},
		{name: "Emily", age: 32, company: "Google"},
		{name: "David", age: 28, company: "Google"},
	},
	"Microsoft": []person{
		{name: "Sarah", age: 31, company: "Microsoft"},
		{name: "Mike", age: 29, company: "Microsoft"},
		{name: "Sam", age: 26, company: "Microsoft"},
	},
	"Apple": []person{
		{name: "Alex", age: 27, company: "Apple"},
		{name: "Lily", age: 30, company: "Apple"},
		{name: "Ryan", age: 33, company: "Apple"},
	},
}

//Function to generate a random integer within a range
func randInt(min, max int) int {
	return min + rand.Intn(max-min)
}

//Function to update a person's age
func updateAge(p person, newAge int) person {
	p.age = newAge
	return p
}

//Main function
func main() {
	rand.Seed(time.Now().UnixNano()) //Seeding the random number generator
	//Looping through the companies and their employees
	for company, employees := range companies {
		fmt.Println("Employees at", company+":")
		//Looping through each employee's information
		for _, emp := range employees {
			fmt.Println("- Name:", emp.name, "| Age:", emp.age, "| Company:", emp.company)
			//Generating a random age for the employee
			newAge := randInt(20, 40)
			//Updating the employee's age
			updatedEmp := updateAge(emp, newAge)
			fmt.Println("Updated age for", emp.name+":", updatedEmp.age)
		}
	}
}
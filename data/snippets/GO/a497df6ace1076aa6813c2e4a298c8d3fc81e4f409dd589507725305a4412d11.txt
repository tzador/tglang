// This function takes in two arrays and returns a new array with intersecting elements
// If the arrays do not have any intersecting elements, an empty array is returned

func intersect(nums1 []int, nums2 []int) []int {
    // Create a map to store the numbers from the first array with their corresponding count
    count := make(map[int]int)
    
    // Loop through the first array and update the map with the count for each number
    for _, num := range nums1 {
        count[num]++
    }
    
    // Create an empty slice to store the intersecting elements
    intersectList := []int{}
    
    // Loop through the second array and check if the number exists in the map
    // If it does, add it to the intersectList slice and decrease the count in the map
    for _, num := range nums2 {
        if count[num] > 0 {
            intersectList = append(intersectList, num)
            count[num]--
        }
    }
    
    // Return the intersectList slice
    return intersectList
}
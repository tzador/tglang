/* This code snippet uses goroutines to concurrently fetch data from multiple websites and retrieves the response with the fastest response time. */
package main

import (
    "fmt"
    "net/http"
    "time"
)

func main() {
    // create a channel to listen for responses
    c := make(chan string)

    // create a list of websites to fetch data from
    websites := []string{
        "https://www.google.com",
        "https://www.facebook.com",
        "https://www.twitter.com",
        "https://www.instagram.com",
        "https://www.reddit.com",
    }

    // loop through websites and start a goroutine for each one
    for _, url := range websites {
        go visitWebsite(url, c)
    }

    // print the response from the fastest website
    fmt.Println(<-c)
}

func visitWebsite(url string, c chan string) {
    // measure the start time
    start := time.Now()

    // make a GET request to the website
    resp, _ := http.Get(url)

    // measure the response time
    responseTime := time.Since(start).Milliseconds()

    // send the response time and url to the channel
    c <- fmt.Sprintf("Response time for %s: %d milliseconds", url, responseTime)
}
// Create a function that takes in an integer and returns a slice of prime numbers up to that integer
func primeNumbers(n int) []int {
    // Declare and initialize an empty slice to store prime numbers
    primes := []int{}

    // Loop through numbers from 2 to n
    for i := 2; i <= n; i++ {
        // Assume current number is prime
        isPrime := true

        // Loop through numbers from 2 to i-1 to check if i is divisible
        for j := 2; j < i; j++ {
            // If i is divisible, set isPrime to false and break out of the loop
            if i % j == 0 {
                isPrime = false
                break
            }
        }

        // If isPrime is true, add i to the primes slice
        if isPrime {
            primes = append(primes, i)
        }
    }

    // Return the primes slice
    return primes
}

// Call the function with n = 20 and store the returned slice in result variable
result := primeNumbers(20)

// Print the result
fmt.Println(result)

// Output: [2 3 5 7 11 13 17 19]
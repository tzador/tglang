// This program performs a bubble sort on an array of integers
package main

import "fmt"

func main() {
    // Declare and initialize the array
    arr := []int{5, 8, 2, 1, 9, 3, 4, 7, 6}

    // Print the unsorted array
    fmt.Println("Unsorted Array:", arr)

    // Perform bubble sort
    bubbleSort(arr)

    // Print the sorted array
    fmt.Println("Sorted Array:", arr)
}

func bubbleSort(arr []int) {
    // Get the length of the array
    n := len(arr)

    // Loop through the array
    for i := 0; i < n; i++ {
        // Set a flag to check if any swaps have been made in this iteration
        swapped := false

        // Compare each adjacent pair of elements in the array
        for j := 0; j < n-i-1; j++ {
            // If the previous element is larger than the current element, swap them
            if arr[j] > arr[j+1] {
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = true
            }
        }

        // If no swaps were made, the array is already sorted
        // Break out of the loop
        if !swapped {
            break
        }
    }
}
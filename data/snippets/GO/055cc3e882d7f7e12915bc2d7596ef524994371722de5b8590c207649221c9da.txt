// Counting sort function in GO language
func countingSort(input []int, maxVal int) []int {
	count := make([]int, maxVal+1)      // create count array with the size of maximum value + 1
	output := make([]int, len(input))   // create output array with the size of input array
	for i := 0; i < len(input); i++ {   // loop through the input array
		count[input[i]]++               // increment the count array at the value of the input
	}
	for i := 1; i <= maxVal; i++ {      // loop through the count array
		count[i] += count[i-1]          // add the current value with the previous value
	}
	for i := len(input) - 1; i >= 0; i-- { // loop through the input array in reverse
		output[count[input[i]]-1] = input[i] // place the input value at the index of count array - 1 into the output array
		count[input[i]]--                   // decrement the value in the count array
	}
	return output // return the sorted output array
}
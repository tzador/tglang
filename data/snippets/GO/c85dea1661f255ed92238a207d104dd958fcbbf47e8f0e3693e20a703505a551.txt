// This is a complex function that creates an array of Fibonacci numbers up to a given limit
func fibonacci(limit int) []int {
    // Initialize the array to store the numbers
    fib := make([]int, limit)

    // Loop through the array and calculate the Fibonacci numbers
    for i := 0; i <= limit; i++ {
        // First two numbers are always 0 and 1
        if i == 0 {
            fib[i] = 0
        } else if i == 1 {
            fib[i] = 1
        } else {
            // Other numbers are calculated by summing the two previous numbers
            fib[i] = fib[i-1] + fib[i-2]
        }
    }

    // Return the array of Fibonacci numbers
    return fib
}

// Print the first 20 Fibonacci numbers
fmt.Println(fibonacci(20))

// Output:
// [0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181]
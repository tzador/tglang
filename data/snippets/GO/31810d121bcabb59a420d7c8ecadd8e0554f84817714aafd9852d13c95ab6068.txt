package main

// Importing necessary packages
import (
	"fmt"
	"time"
)

// Defining a function to calculate the factorial of a number
func factorial(x uint) uint {
	if x == 0 {
		return 1
	}
	return x * factorial(x-1)
}

// Defining a struct for a person
type Person struct {
	name    string
	age     int
	hobbies []string
}

// Main function
func main() {
	// Creating a channel of integers
	numbers := make(chan int)

	// Goroutine to send numbers into the channel
	go func() {
		for i := 0; i < 10; i++ {
			numbers <- i
		}
		close(numbers)
	}()

	// Print the numbers received from the channel
	for num := range numbers {
		fmt.Println(num)
	}

	// Creating a person struct instance
	person1 := Person{
		name:    "John",
		age:     30,
		hobbies: []string{"reading", "painting", "playing guitar"},
	}

	// Calculating the factorial of 5 using the factorial function
	result := factorial(5)

	// Printing the person's information and the factorial result
	fmt.Printf("Name: %s, Age: %d, Hobbies: %v\n", person1.name, person1.age, person1.hobbies)
	fmt.Println("Factorial of 5 is:", result)

	// Setting a timer for 3 seconds
	timer := time.NewTimer(3 * time.Second)

	// Waiting for the timer to expire
	<-timer.C

	// Printing a goodbye message
	fmt.Println("Goodbye!")
}
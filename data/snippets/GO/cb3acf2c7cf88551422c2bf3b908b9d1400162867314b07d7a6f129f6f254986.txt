// Function to check if a number is prime 
func isPrime(n int) bool { 
    // Initialize a boolean function to store result 
    result := true
  
    // Condition to check if number is greater than 1 
    // Since 1 is neither prime nor composite 
    if n <= 1 { 
        result = false
    } 
  
    // Loop to check if number is divisible by any other number 
    for i := 2; i * i <= n; i++ { 
        if n % i == 0 { 
            result = false
        } 
    } 
  
    // Return the result 
    return result 
} 

// Function to generate a list of prime numbers up to a given limit 
func generatePrimeList(limit int) []int { 
    // Initialize an empty list to store primes 
    var primeList []int 
  
    // Loop to iterate through all the numbers up to given limit 
    for i := 2; i <= limit; i++ { 
        // Call isPrime function to check if number is prime 
        if isPrime(i) { 
            // If prime, append it to the primeList 
            primeList = append(primeList, i) 
        } 
    } 
  
    // Return the primeList 
    return primeList 
} 

// Main function to execute code 
func main() { 
    // Call generatePrimeList function with limit as 100 
    primes := generatePrimeList(100) 
  
    // Print the list of primes 
    fmt.Println(primes) 
}
// This code snippet creates a function named "mergeSort" that takes in an array of integers and sorts them using the merge sort algorithm.
// The sorted array is then returned.
func mergeSort(arr []int) []int {
	if len(arr) <= 1 {
		return arr
	}

	middle := len(arr) / 2
	left := mergeSort(arr[:middle])
	right := mergeSort(arr[middle:])
	return merge(left, right)
}

// This helper function merges two sorted arrays into one sorted array.
func merge(left []int, right []int) []int {
	result := make([]int, 0, len(left)+len(right))

	for len(left) > 0 || len(right) > 0 {
		if len(left) == 0 {
			result = append(result, right[0])
			right = right[1:]
		} else if len(right) == 0 {
			result = append(result, left[0])
			left = left[1:]
		} else {
			if left[0] <= right[0] {
				result = append(result, left[0])
				left = left[1:]
			} else {
				result = append(result, right[0])
				right = right[1:]
			}
		}
	}

	return result
}
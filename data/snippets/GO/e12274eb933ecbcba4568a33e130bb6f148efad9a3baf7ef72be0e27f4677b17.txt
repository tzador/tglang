package main

import (
	"fmt"
	"strconv"
)

// The main function serves as the entry point to the program
func main() {
	
	// Create a slice of empty interfaces to hold different data types
	var data []interface{}
	
	// Add various data types to the slice
	data = append(data, "Hello world!", 123, true, 12.34)
	
	// Loop through the slice and print out the data with its respective type
	for _, d := range data {
		switch v := d.(type) {
		case string:
			fmt.Printf("%s is of type string\n", v)
		case int:
			fmt.Printf("%d is of type int\n", v)
		case bool:
			fmt.Printf("%t is of type bool\n", v)
		case float64:
			fmt.Printf("%f is of type float64\n", v)
		}
	}
	
	// Create a map to hold key-value pairs of various data types
	myMap := make(map[interface{}]interface{})
	myMap["key1"] = "value1"
	myMap["key2"] = 123
	myMap["key3"] = true
	
	// Use the strconv package to convert the map values to strings
	for k, v := range myMap {
		strVal := strconv.Itoa(v.(int))
		fmt.Printf("%s: %s\n", k, strVal)
	}
}
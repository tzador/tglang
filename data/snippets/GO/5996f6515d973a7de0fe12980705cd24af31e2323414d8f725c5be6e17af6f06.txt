// This code snippet demonstrates a bubble sort algorithm in GO

package main

import (
    "fmt"
    "math/rand"
    "time"
)

func bubbleSort(arr []int) []int { // function to perform bubble sort
	n := len(arr)
	for i := 0; i < n - 1; i++{
		for j := 0; j < n - i - 1; j++ {
			if arr[j] > arr[j+1] {  // compare adjacent elements and swap if not in order
				arr[j], arr[j+1] = arr[j+1], arr[j]
			}
		}
	}
	return arr  // return sorted array
}

func main() {  // main function
	rand.Seed(time.Now().UnixNano()) // generate a list of random numbers
	nums := make([]int, 10) 
	for i := 0; i < 10; i++ {
		nums[i] = rand.Intn(100) // generate random number between 0 and 100
	}
	fmt.Println("Unsorted array:", nums)  // print unsorted array
	fmt.Println("Sorted array:", bubbleSort(nums))  // print sorted array
}

// Output:
//
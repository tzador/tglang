package main

import (
	"fmt" 
	"math/rand"
	"time"
)

// Define a struct type for storing employee information
type Employee struct {
	ID int
	Name string
	Position string
	Salary int
}

func main() {
	// Create an empty slice of Employee structs
	var employees []Employee

	// Generate a random number of employees between 10 and 20
	rand.Seed(time.Now().UnixNano())
	numEmployees := rand.Intn(11) + 10

	// Loop through and generate data for each employee
	for i := 0; i < numEmployees; i++ {
		// Generate random values for employee fields
		id := rand.Intn(1000)
		name := fmt.Sprintf("Employee%d", id)
		position := fmt.Sprintf("Position%d", rand.Intn(5)+1)
		salary := rand.Intn(100000)

		// Create a new Employee struct with generated values
		employee := Employee{
			ID: id,
			Name: name,
			Position: position,
			Salary: salary,
		}

		// Append the employee to the slice of employees
		employees = append(employees, employee)
	}

	// Print out the employee information
	fmt.Println("Employee Information:")
	for _, employee := range employees {
		fmt.Printf("ID: %d, Name: %s, Position: %s, Salary: $%d\n", employee.ID, employee.Name, employee.Position, employee.Salary)
	}
}
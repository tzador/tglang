package main

import (
	"fmt"
	"strings"
)

// create a struct called Person with name, age, and occupation fields
type Person struct {
	name       string
	age        int
	occupation string
}

// create a function that returns the person's name and age as a string
func getNameAndAge(p Person) string {
	return fmt.Sprintf("Name: %s, Age: %d", p.name, p.age)
}

// create a variety of people with different occupations
var john = Person{
	name:       "John",
	age:        35,
	occupation: "Software Engineer",
}
var sarah = Person{
	name:       "Sarah",
	age:        28,
	occupation: "Teacher",
}
var mike = Person{
	name:       "Mike",
	age:        42,
	occupation: "Doctor",
}
var lisa = Person{
	name:       "Lisa",
	age:        31,
	occupation: "Lawyer",
}

func main() {
	// create a slice of people
	people := []Person{john, sarah, mike, lisa}

	// iterate through the slice and print out each person's name and occupation
	for _, person := range people {
		fmt.Printf("Name: %s, Occupation: %s\n", person.name, person.occupation)
	}

	// create a string with all the different occupations separated by a comma
	var allOccupations string
	for _, person := range people {
		allOccupations = allOccupations + person.occupation + ","
	}

	// remove the last comma from the string using the TrimSuffix function from the strings package
	allOccupations = strings.TrimSuffix(allOccupations, ",")

	// print out the string with all the occupations
	fmt.Println("All Occupations: " + allOccupations)

	// call the getNameAndAge function for the first person in the slice and print the result
	fmt.Println(getNameAndAge(people[0]))
}
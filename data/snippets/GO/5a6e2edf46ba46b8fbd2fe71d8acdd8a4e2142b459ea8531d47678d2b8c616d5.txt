// This is a code snippet in GO language
// It uses multiple functions and data structures
// to perform various operations on a string

package main

import (
	"fmt"
	"strings"
)

func main() {
	// declare a string variable
	var input string = "hello world"

	// convert the string to uppercase using the strings package
	fmt.Printf("Uppercase version of the input string: %s\n", strings.ToUpper(input))

	// check if the string contains a specific substring using the Contains function
	fmt.Printf("Does the input string contain 'world'? %t\n", strings.Contains(input, "world"))

	// replace a specific substring in the string with a new substring using the Replace function
	fmt.Printf("Replaced 'world' with 'everyone': %s\n", strings.Replace(input, "world", "everyone", -1))

	// get the length of the string using the Len function
	fmt.Printf("Length of the input string: %d\n", len(input))

	// convert the string to a rune slice using the []rune conversion
	runes := []rune(input)

	// reverse the string by swapping characters at opposite ends of the rune slice
	for i, j := 0, len(runes)-1; i < j; i, j = i+1, j-1 {
		runes[i], runes[j] = runes[j], runes[i]
	}

	// convert the reversed rune slice back to a string
	reversedString := string(runes)
	fmt.Printf("Reversed version of the input string: %s\n", reversedString)
}
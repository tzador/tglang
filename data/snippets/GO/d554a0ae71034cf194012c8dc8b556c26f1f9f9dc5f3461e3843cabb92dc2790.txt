//This function calculates the sum of two numbers
func sum(x int, y int) int { 
    return x + y
}

/*This function calculates the factorial of a number
and checks for edge cases*/
func factorial(n int) int { 
    //initialize result variable
    result := 1 

    //check for edge cases
    if n == 0 || n == 1 { 
        return result 
    } else {
        //use recursive function call
        return n * factorial(n-1)
    }
}

/*This function calculates the nth Fibonacci number
and uses memoization for efficiency*/
func fibonacci(n int) int { 
    //initialize array to store fibonacci numbers
    fibArray := [n + 1]int{} 

    //base case
    fibArray[0], fibArray[1] = 0, 1 

    //loop through and calculate each fibonacci number
    for i := 2; i <= n; i++ { 
        fibArray[i] = fibArray[i-1] + fibArray[i-2] 
    }
    
    //return nth fibonacci number
    return fibArray[n] 
}

//main function to call other functions
func main() { 
    //input numbers for sum function
    num1, num2 := 5, 10

    //call sum function and print result
    fmt.Println("Sum of", num1, "and", num2, "is:", sum(num1, num2))
    
    //input number for factorial function
    num := 5
    
    //call factorial function and print result
    fmt.Println("Factorial of", num, "is:", factorial(num))

    //input number for fibonacci function
    fibNum := 6

    //call fibonacci function and print result
    fmt.Println("Fibonacci number at", fibNum, "position is:", fibonacci(fibNum))
}
import (
	"fmt"
	"time"
	"math"
)

// Function to calculate the factorial of a number using recursion
func factorial(n int) int {
	if n == 0 {
		return 1
	}
	return n * factorial(n-1)
}

// Main function
func main() {

	// Variable declaration
	var number int

	// Take user input
	fmt.Print("Enter a positive integer: ")

	// Store the input in the "number" variable
	fmt.Scanln(&number)

	// If input is negative, print error message
	if number < 0 {
		fmt.Println("Number must be positive")
	// If input is 0, print error message
	} else if number == 0 {
		fmt.Println("Factorial of 0 is 1")
	// If input is positive, call factorial function and print the result
	} else {
		result := factorial(number)
		fmt.Printf("Factorial of %d is %d", number, result)
	}

	// Output current time in UTC format
	fmt.Println(time.Now().UTC())

	// Compute square root and pi
	sqrt := math.Sqrt(float64(number))
	pi := math.Pi

	// Print results
	fmt.Printf("Square root of %d is %f\n", number, sqrt)
	fmt.Printf("pi is approximately %f\n", pi)
}
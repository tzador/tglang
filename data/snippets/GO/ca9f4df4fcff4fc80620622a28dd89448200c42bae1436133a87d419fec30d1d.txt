package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	rand.Seed(time.Now().UnixNano())
	numbers := []int{}
	for i := 0; i < 10; i++ {
		numbers = append(numbers, rand.Intn(100))
	}

	fmt.Println("Unsorted numbers:", numbers)
	fmt.Println("-------------")
	fmt.Println("Bubble Sort:")
	bubbleSort(numbers)
	fmt.Println("Selection Sort:")
	selectionSort(numbers)
	fmt.Println("Insertion Sort:")
	insertionSort(numbers)
}

// Bubble Sort Algorithm
func bubbleSort(numbers []int) {
	for i := 0; i < len(numbers)-1; i++ {
		for j := 0; j < len(numbers)-i-1; j++ {
			if numbers[j] > numbers[j+1] {
				temp := numbers[j]
				numbers[j] = numbers[j+1]
				numbers[j+1] = temp
			}
		}
	}
	fmt.Println(numbers)
}

// Selection Sort Algorithm
func selectionSort(numbers []int) {
	for i := 0; i < len(numbers)-1; i++ {
		minIndex := i
		for j := i + 1; j < len(numbers); j++ {
			if numbers[j] < numbers[minIndex] {
				minIndex = j
			}
		}
		temp := numbers[i]
		numbers[i] = numbers[minIndex]
		numbers[minIndex] = temp
	}
	fmt.Println(numbers)
}

// Insertion Sort Algorithm
func insertionSort(numbers []int) {
	for i := 1; i < len(numbers); i++ {
		key := numbers[i]
		j := i - 1
		for j >= 0 && numbers[j] > key {
			numbers[j+1] = numbers[j]
			j -= 1
		}
		numbers[j+1] = key
	}
	fmt.Println(numbers)
}
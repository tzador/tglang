// declare a struct named Person with fields name (string), age (int), and isMarried (bool)
type Person struct {
  name string
  age int
  isMarried bool
}

// declare a variable named person1 of type Person with name "John", age 25, and isMarried false
var person1 Person = Person{
  name: "John",
  age: 25,
  isMarried: false,
}

// declare a slice of type Person named people
var people []Person

// add person1 to the people slice
people = append(people, person1)

// declare a function named AddAge that takes in a pointer to a Person struct as a parameter 
// adds 1 to the person's age and returns the updated age
func AddAge(person *Person) int {
  person.age++
  return person.age
}

// call the AddAge function on person1
AddAge(&person1)

// declare an interface named Shape with a method called Area that takes in no parameters and returns a float
type Shape interface {
  Area() float64
}

// declare a struct named Rectangle that implements the Shape interface with fields length and width (both float64)
type Rectangle struct {
  length float64
  width float64
}

// implement the Area method for the Rectangle struct
func (r Rectangle) Area() float64 {
  return r.length * r.width
}

// declare a variable named rectangle1 of type Rectangle with length 5.5 and width 7.2
var rectangle1 Rectangle = Rectangle{
  length: 5.5,
  width: 7.2,
}

// print the area of rectangle1 using the Area method
fmt.Println(rectangle1.Area())
// This is a function that takes in two arrays and returns the intersection of the two.
// The intersection is the common elements between the two arrays.
func intersection(array1 []int, array2 []int) []int {
  // sorts the two arrays in ascending order
  sort.Ints(array1)
  sort.Ints(array2)

  // declares a new empty slice to store the intersection elements
  var result []int

  // initializes two pointers, i and j, to iterate through the two arrays
  i := 0
  j := 0

  // loop through both arrays while the pointers are within the array's length
  for i < len(array1) && j < len(array2) {
    // checks if the current elements in both arrays are equal
    if array1[i] == array2[j] {
      // add the element to the result slice
      result = append(result, array1[i])

      // increment the pointers to move to the next elements in the arrays
      i++
      j++
    } else if array1[i] < array2[j] {
      // if the element in array1 is smaller, move to the next element in array1
      i++
    } else {
      // if the element in array2 is smaller, move to the next element in array2
      j++
    }
  }

  // return the result slice which contains the intersection elements
  return result
}

// Example usage
array1 := []int{1, 3, 5, 7, 9}
array2 := []int{2, 3, 5, 6, 9}
fmt.Println(intersection(array1, array2)) // output: [3 5 9]
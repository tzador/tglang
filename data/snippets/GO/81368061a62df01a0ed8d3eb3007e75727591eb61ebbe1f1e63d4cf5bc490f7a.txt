package main

import "fmt"

func main() {
    // Define a slice of integers
    numbers := []int{2, 4, 6, 8, 10}
    
    // Use Go's range keyword to iterate through the slice and print out the index and value
    for index, value := range numbers {
        fmt.Printf("Index: %d, Value: %d\n", index, value)
    }
    
    // Declare a map with keys of type string and values of type float64
    m := map[string]float64{
        "apple": 0.65,
        "banana": 0.45,
        "orange": 0.75,
    }
    
    // Use a for loop to print out all key-value pairs in the map
    for key, value := range m {
        fmt.Printf("Key: %s, Value: %f\n", key, value)
    }
    
    // Use the make() function to create a new empty slice of strings
    var names = make([]string, 0)
    
    // Use the append() function to add new elements to the slice
    names = append(names, "John")
    names = append(names, "Mary")
    names = append(names, "Bob")
    
    // Use a for loop to print out all elements in the names slice
    for _, name := range names {
        fmt.Println(name)
    }
    
    // Declare a struct representing a person
    type Person struct {
        name string
        age int
    }
    
    // Create a new instance of the Person struct
    p := Person{
        name: "Jane",
        age: 25,
    }
    
    // Print out the person's name and age
    fmt.Printf("Name: %s, Age: %d", p.name, p.age)
}
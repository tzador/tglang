// Define a struct for a user
type User struct {
    username string
    age int
    email string
}

// Create a function that returns a slice of users
// Takes in a slice of strings for usernames and a slice of ints for ages
// Returns a slice of User structs
func createUsers(usernames []string, ages []int) []User {
    var users []User
    for i, username := range usernames {
        user := User{username: username, age: ages[i], email: username+"@mail.com"}
        users = append(users, user)
    }
    return users
}

// Create two slices to pass into the createUsers function
usernames := []string{"John", "Sarah", "Mark"}
ages := []int{21, 25, 30}

// Call the createUsers function and assign the returned slice to a variable
users := createUsers(usernames, ages)

// Loop through the users slice and print out each user's information
for _, user := range users {
    fmt.Printf("Username: %s, Age: %d, Email: %s\n", user.username, user.age, user.email)
}
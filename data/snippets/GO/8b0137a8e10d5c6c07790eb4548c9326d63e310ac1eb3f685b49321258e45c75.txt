// Package main
package main

// Import required packages
import (
	"fmt"
	"math/rand"
	"time"
)

// Create a custom struct for a Person
type Person struct {
	Name     string
	Age      int
	Location string
}

// Function for generating a random integer between two numbers
func generateRandomInteger(min int, max int) int {
	rand.Seed(time.Now().UnixNano())
	return rand.Intn(max-min+1) + min
}

// Function for creating a new Person object with random values
func createNewPerson() Person {
	name := fmt.Sprintf("%s%d", "Person", generateRandomInteger(1, 100))
	age := generateRandomInteger(18, 40)
	locations := [5]string{"New York", "London", "Paris", "Tokyo", "Sydney"}
	location := locations[generateRandomInteger(0, 4)]
	return Person{Name: name, Age: age, Location: location}
}

// Main function to generate 10 random Person objects and print their information
func main() {
	// Create an array to store the Person objects
	var people []Person
	// Loop 10 times to generate 10 Person objects
	for i := 0; i < 10; i++ {
		person := createNewPerson()
		people = append(people, person)
	}
	// Print the information of each Person object
	for _, person := range people {
		fmt.Printf("Name: %s | Age: %d | Location: %s\n", person.Name, person.Age, person.Location)
	}
}
// This is a function that sorts an array of integers using the bubble sort algorithm.
// It takes in the array as a parameter and returns the sorted array.
func bubbleSort(arr []int) []int {
	// Loop over the array using the length of the array as the number of iterations.
	for i := 0; i < len(arr); i++ {
		// Loop over the array again, using the length of the array minus the current iteration
		// as the limit so we don't resrt the already sorted elements.
		for j := 0; j < len(arr)-i-1; j++ {
			// If the current element is greater than the next element, swap them.
			if arr[j] > arr[j+1] {
				arr[j], arr[j+1] = arr[j+1], arr[j]
			}
		}
	}
	// Return the sorted array.
	return arr
}

// Example usage:
unsortedArr := []int{5, 2, 6, 1, 3, 9}
sortedArr := bubbleSort(unsortedArr)
fmt.Println(sortedArr) // Output: [1, 2, 3, 5, 6, 9]
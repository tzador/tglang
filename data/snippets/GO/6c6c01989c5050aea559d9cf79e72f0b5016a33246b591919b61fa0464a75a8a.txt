package main //sets package as main for executable program

import ( //used to import libraries and packages
"fmt" //imports fmt package for printing
"os" //imports os package for os functions
"time" //imports time package for time based functions
"math/rand" //imports math/rand package for random number generation
)

func main() { //sets main function

	fmt.Println("Welcome to the Complex Code Generator!")

	//creates an array with 10 elements
	arr := [10]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

	//loops through the array, performs a random operation on each element and prints the result
	for _, num := range arr {
		rand.Seed(time.Now().UnixNano()) //seeds random number generator with current time
		op := rand.Intn(4) + 1 //generates a random number between 1-4 to determine the operation
		switch op {
		case 1:
			result := num * num //performs multiplication
			fmt.Printf("Operation: %d * %d = %d\n", num, num, result) //prints result in formatted string
		case 2:
			result := num + num //performs addition
			fmt.Printf("Operation: %d + %d = %d\n", num, num, result)
		case 3:
			result := num - num //performs subtraction
			fmt.Printf("Operation: %d - %d = %d\n", num, num, result)
		case 4:
			result := num / num //performs division
			fmt.Printf("Operation: %d / %d = %d\n", num, num, result)
		}
	}

	fmt.Println("Code snippet successfully generated!")
	os.Exit(0) //exits program with 0 status code
}
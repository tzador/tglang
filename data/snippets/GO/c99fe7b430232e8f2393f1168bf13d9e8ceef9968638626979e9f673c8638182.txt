package main

import "fmt"

// this is a struct named 'Person'
type Person struct {
	FirstName string
	LastName  string
	Age       int
	Gender    string
}

// this is an interface named 'Employee'
type Employee interface {
	Eat()
	Sleep()
	Work()
}

// this is a function named 'NewPerson' that returns a pointer to a Person struct
func NewPerson(firstName string, lastName string, age int, gender string) *Person {
	return &Person{
		FirstName: firstName,
		LastName:  lastName,
		Age:       age,
		Gender:    gender,
	}
}

// this is a function named 'Eat' that prints the person's name and the phrase "is eating"
func (p *Person) Eat() {
	fmt.Printf("%v %v is eating\n", p.FirstName, p.LastName)
}

// this is a function named 'Sleep' that prints the person's name and the phrase "is sleeping"
func (p *Person) Sleep() {
	fmt.Printf("%v %v is sleeping\n", p.FirstName, p.LastName)
}

// this is a function named 'Work' that prints the person's name and the phrase "is working"
func (p *Person) Work() {
	fmt.Printf("%v %v is working\n", p.FirstName, p.LastName)
}

// this is a function named 'main' that creates a new person named 'John' and calls the Eat, Sleep, and Work methods on them
func main() {
	// creating a new Person named 'John' using the NewPerson function
	john := NewPerson("John", "Smith", 30, "Male")

	// calling the Eat method on 'John'
	john.Eat()

	// calling the Sleep method on 'John'
	john.Sleep()

	// calling the Work method on 'John'
	john.Work()
}
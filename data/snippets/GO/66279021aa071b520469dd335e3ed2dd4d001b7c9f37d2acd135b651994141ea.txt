package main

import (
    "fmt"
    "time"
)

// define a function to calculate the nth number in the Fibonacci sequence
func fibonacci(n int) int {
    if n <= 1 {
        return n
    }

    return fibonacci(n-1) + fibonacci(n-2)
}

func main() {
    // create a channel to store the results of the calculation
    ch := make(chan int)

    go func() {
        // loop through the first 20 numbers in the Fibonacci sequence
        for i := 0; i < 20; i++ {
            // calculate the result and send it to the channel
            result := fibonacci(i)
            ch <- result
        }
        // close the channel to indicate all calculations are finished
        close(ch)
    }()

    // set a timer using the current time
    start := time.Now()

    // create an array to store the results
    results := make([]int, 20)

    // loop through the channel to retrieve the results and store them in the array
    for i := range ch {
        results[i] = i
    }

    // print out the results array
    fmt.Println(results)

    // print out the total time elapsed
    fmt.Println(time.Since(start))
}
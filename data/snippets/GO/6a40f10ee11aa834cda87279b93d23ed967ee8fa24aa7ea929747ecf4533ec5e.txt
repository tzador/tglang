// This is a function that takes in two integers and returns their sum
func add(x int, y int) int {
    return x + y
}

// This is a function that takes in a string and an integer and returns the string concatenated n times
func concatString(input string, n int) string {
    output := ""

    for i := 0; i < n; i++ {
        output += input
    }

    return output
}

// This is a struct that represents a person
type Person struct {
    Name string
    Age int
    Occupation string `json:"occupation"`
}

// This is a Goroutine (concurrent function) that prints out the name of a Person 5 times
func printName(p Person) {
    for i := 0; i < 5; i++ {
        fmt.Println(p.Name)
    }
}

// Main function that creates a Person and calls the other functions
func main() {
    // Create a new Person instance
    p := Person{"John", 30, "Programmer"}

    // Call the add function and print the result
    sum := add(5,3)
    fmt.Println(sum) // Output: 8

    // Call the concatString function and print the result
    str := concatString("hello", 3)
    fmt.Println(str) // Output: hellohellohello

    // Call the printName function as a Goroutine
    go printName(p) // Output: John John John John John
}
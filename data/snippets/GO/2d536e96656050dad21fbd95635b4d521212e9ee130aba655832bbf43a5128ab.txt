package main

// Fuction that takes in a slice of integers and returns a
//                        sorted slice in ascending order
func sort(slice []int) []int {
	swapped := true
	for swapped {
		// Assume the slice is already sorted
		swapped = false
		// Loop through the slice, starting at index 1
		for i := 1; i < len(slice); i++ {
			// Check if current element is smaller than previous element
			if slice[i] < slice[i-1] {
				// Swap elements if true
				slice[i], slice[i-1] = slice[i-1], slice[i]
				// Set swapped to true to continue looping
				swapped = true
			}
		}
	}
	// Return the sorted slice
	return slice
}

// Main function
func main() {
	// Initialize a slice of integers
	slice := []int{5, 3, 9, 7, 1, 4, 8, 2, 6}

	// Call the sort function with the slice
	sorted := sort(slice)

	// Print the sorted slice
	fmt.Println(sorted)
}
// This is a function in GO that takes in two strings and returns a concatenated string.
func concatenateStrings(str1 string, str2 string) string {
    return str1 + str2
}

/* This is a struct in GO that represents a person with a name, age, and favorite color.
It also has a method called "greet" to print a personalized greeting. */
type Person struct {
    name string
    age int
    favoriteColor string
}

// This method prints a personalized greeting for the Person struct.
func (p Person) greet() {
    fmt.Println("Hello, my name is", p.name, "and I am", p.age, "years old. My favorite color is", p.favoriteColor + ".")
}

// Example usage:
func main() {
    // Define two strings to be concatenated.
    str1 := "Hello"
    str2 := "World"

    // Call the concatenateStrings function and print the concatenated string.
    fmt.Println(concatenateStrings(str1, str2))

    // Create an instance of the Person struct.
    person := Person{
        name: "John",
        age: 25,
        favoriteColor: "blue",
    }

    // Call the greet method on the person instance.
    person.greet()
}

/* Output:
HelloWorld
Hello, my name is John and I am 25 years old. My favorite color is blue.
*/
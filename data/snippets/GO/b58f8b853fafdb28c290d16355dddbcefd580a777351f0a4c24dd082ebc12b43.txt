// This is a function that performs insertion sort on a slice of integers
// Input: nums, a slice of integers
// Output: nums, the sorted slice of integers
func insertionSort(nums []int) []int {
	// loop through the unsorted slice
	for i := 1; i < len(nums); i++ {
		// store the current value in a temporary variable
		temp := nums[i]
		// create a variable to keep track of the previous index
		j := i - 1
		// compare the current value with the previous value
		// and move the previous value to the next index if it is larger
		for j >= 0 && nums[j] > temp {
			nums[j+1] = nums[j]
			j--
		}
		// place the current value at the correct index
		nums[j+1] = temp
	}
	// return the sorted slice
	return nums
}
// Example usage:
// nums := []int{5, 2, 9, 3, 1}
// sorted := insertionSort(nums)
// fmt.Println(sorted)
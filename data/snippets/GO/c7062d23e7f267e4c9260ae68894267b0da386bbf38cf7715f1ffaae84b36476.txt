// This code snippet uses multiple functions and data types to calculate the factorial of a number
// It utilizes recursion and error handling to handle different cases such as negative numbers and zero
// It also includes comments to explain each step and variable used

// Function to calculate the factorial of a number
func factorial(n int) (int, error) {
    // Handle negative numbers
    if n < 0 {
        return 0, errors.New("Factorial not defined for negative numbers")
    }

    // Handle zero
    if n == 0 {
        return 1, nil
    }

    // Use recursion to calculate factorial
    fact, err := factorial(n-1)
    if err != nil {
        return 0, err
    }

    // Multiply by current number
    return n * fact, nil
}

// Main function to get user input and call factorial function
func main() {
    // Prompt user for input
    fmt.Printf("Enter a number: ")

    // Get user input
    var num int
    fmt.Scanln(&num)

    // Call factorial function
    result, err := factorial(num)

    // Handle error
    if err != nil {
        fmt.Println(err)
    } else {
        // Print result
        fmt.Println(result)
    }
}
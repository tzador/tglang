/*
This code snippet demonstrates a complex function with multiple control flow statements.
*/
func complexFunction(a int, b int) {
  // Initialize a variable to store the result
	result := 0
	// Check if a is greater than b
	if a > b {
	  // Calculate the difference and assign it to result variable
		result = a - b
	} else if a < b {
	  // Calculate the sum and assign it to result variable
		result = a + b
	} else {
	  // Calculate the product and assign it to result variable
		result = a * b
	}

	// Iterate over a loop based on result value
	for i := 0; i < result; i++ {
	  // Check if i is divisible by both a and b
	  if i%a == 0 && i%b == 0 {
		  // Print "FizzBuzz" when true
		  fmt.Println("FizzBuzz")
	  } else if i%a == 0 {
		  // Print "Fizz" when i is divisible by a
		  fmt.Println("Fizz")
	  } else if i%b == 0 {
		  // Print "Buzz" when i is divisible by b
		  fmt.Println("Buzz")
	  } else {
		  // Print value of i when none of the above conditions are satisfied
		  fmt.Println(i)
	  }
	}
}

// Call the complexFunction with arguments 3 and 5
complexFunction(3, 5)
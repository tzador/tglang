// Declare and initialize a slice of strings
// with initial capacity of 10 and length of 5
s := make([]string, 5, 10)
 
// Add elements to the slice
s[0] = "Hello"
s[1] = "world"
s[2] = "this"
s[3] = "is"
s[4] = "a"

// Print out the slice
fmt.Println(s) // Output: [Hello world this is a]

// Use a for loop to iterate through the slice and print out each element
for i := 0; i < len(s); i++ {
    fmt.Println(s[i]) // Output: Hello, world, this, is, a
}

// Use a range loop to iterate through the slice and print out each index and element
for index, value := range s {
    fmt.Printf("Index: %d, Element: %s\n", index, value) // Output: Index: 0, Element: Hello, Index: 1, Element: world, Index: 2, Element: this, Index: 3, Element: is, Index: 4, Element: a
}

// Use the append function to add a new element to the slice
s = append(s, "new")
fmt.Println(s) // Output: [Hello world this is a new]

// Use the copy function to copy the slice into a new slice
s2 := make([]string, 5, 10)
copy(s2, s)
fmt.Println(s2) // Output: [Hello world this is a new]

// Use the range loop to update each element in the slice to uppercase
for index, value := range s {
    s[index] = strings.ToUpper(value)
}
fmt.Println(s) // Output: [HELLO WORLD THIS IS A NEW]

// Use the sort package to sort the elements of the slice in alphabetical order
sort.Strings(s)
fmt.Println(s) // Output: [A HELLO IS NEW THIS WORLD]
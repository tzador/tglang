package main

import (
  "fmt"
  "time"
)

func main() {
  // This is a comment
  fmt.Println("Hello World")

  // An if statement
  if true {
    fmt.Println("This statement is true")
  }

  // A for loop
  for i := 1; i < 10; i++ {
    fmt.Println("Count:", i)
  }

  // A switch statement
  switch day := time.Now().Weekday(); day {
  case time.Saturday:
    fmt.Println("It's the weekend!")
  case time.Sunday:
    fmt.Println("It's the weekend!")
  default:
    fmt.Println("It's a weekday.")
  }

  // A function with parameters
  func add(x int, y int) int {
    return x + y
  }

  // An array
  var colors [3]string
  colors[0] = "red"
  colors[1] = "green"
  colors[2] = "blue"

  // A struct
  type Person struct {
    name string
    age  int
  }

  // Creating an instance of the struct
  john := Person{name: "John Smith", age: 35}

  // A defer statement
  defer fmt.Println("This will be printed last")

  // A slice
  numbers := []int{1, 2, 3, 4, 5}

  // A channel
  messages := make(chan string)

  // A goroutine
  go func() {
    messages <- "Hello from a goroutine!"
  }()

  // Receiving data from the channel
  msg := <-messages

  // An error handling if statement
  if err != nil {
    fmt.Println("An error has occurred")
  }

  // A map
  ages := map[string]int{
    "John": 35,
    "Jane": 28,
  }

  // A method (function attached to a struct)
  func (p Person) introduce() {
    fmt.Println("Hi, my name is", p.name, "and I am", p.age, "years old.")
  }

  // Calling the method on the struct instance
  john.introduce()
}
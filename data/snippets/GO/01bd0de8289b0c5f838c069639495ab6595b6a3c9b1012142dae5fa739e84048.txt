// This is a function that calculates the sum of two numbers
func calculateSum(a int, b int) int {
  return a + b
}

// This is a for loop that iterates through a slice and prints each element
for i, element := range mySlice {
  fmt.Println("Element", i, ": ", element)
}

// This is a struct that represents a person with a name and age
type Person struct {
  name string
  age int
}

// This is a method on the Person struct that prints the person's information
func (p *Person) printInfo() {
  fmt.Println("Name: ", p.name)
  fmt.Println("Age: ", p.age)
}

// This is an interface that defines a shape
type Shape interface {
  calculateArea() float64
}

// This is a struct that represents a rectangle with a width and height
type Rectangle struct {
  width float64
  height float64
}

// This is the implementation of the calculateArea method for the Rectangle struct
func (r *Rectangle) calculateArea() float64 {
  return r.width * r.height
}

// This is a struct that represents a circle with a radius
type Circle struct {
  radius float64
}

// This is the implementation of the calculateArea method for the Circle struct
func (c *Circle) calculateArea() float64 {
  return math.Pi * math.Pow(c.radius, 2)
}

// Main function that creates a slice of shapes, including both rectangles and circles, and calculates their areas.
func main() {
  // Initialize the slice with some shapes
  shapes := []Shape{
    &Rectangle{width: 5, height: 10},
    &Circle{radius: 7.5},
  }

  // Loop through the slice and call the calculateArea method for each shape
  for _, shape := range shapes {
    area := shape.calculateArea()
    fmt.Println("Area of shape:", area)
  }
}
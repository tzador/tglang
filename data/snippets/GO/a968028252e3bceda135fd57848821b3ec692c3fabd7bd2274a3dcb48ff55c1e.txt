package main

import (
	"fmt"
	"time"
)

// Define a custom struct type
type Person struct {
	Name  string
	Age   int
	Phone string
}

// Create a function that returns a Person struct
func createPerson(name string, age int, phone string) Person {
	p := Person{
		Name:  name,
		Age:   age,
		Phone: phone,
	}
	return p
}

// Create a goroutine that prints a greeting message with the person's name
func printGreeting(person Person) {
	fmt.Printf("Hello, my name is %s\n", person.Name)
}

func main() {
	// Create two Person structs
	person1 := createPerson("John", 30, "123-456-7890")
	person2 := createPerson("Smith", 45, "987-654-3210")
	
	// Create a channel to communicate between goroutines
	ch := make(chan Person)

	// Start a goroutine for each Person struct, passing in the channel to communicate
	go printGreeting(person1)
	go printGreeting(person2)

	// Send the Person structs through the channel
	ch <- person1
	ch <- person1

	// Wait for goroutines to finish execution before closing the channel
	time.Sleep(2 * time.Second)
	close(ch)
}
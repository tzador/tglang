package main

import (
	"fmt"
	"math/rand"
	"time"
)

// Function to generate a random alphanumeric string
func GenerateRandomString() string {
	// Available characters to be used in the random string
	letters := "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"

	// Setting the length of the random string to be generated
	strLength := 10

	// Setting the seed for the random number generator
	rand.Seed(time.Now().UnixNano())

	// Creating an array of characters with the length of available characters
	randCharArray := []rune(letters)

	// Initializing an empty string to hold the random string
	var result string

	// Looping through the available characters and generating a random string using them
	for i := 0; i < strLength; i++ {
		result += string(randCharArray[rand.Intn(len(randCharArray))])
	}

	// Returning the generated random string
	return result
}

// Function to generate a random number within a given range
func GenerateRandomNumber(min int, max int) int {
	// Setting the seed for the random number generator
	rand.Seed(time.Now().UnixNano())

	// Generating random number within the given range
	return rand.Intn(max-min) + min
}

func main() {

	// Generating a random alphanumeric string
	randomString := GenerateRandomString()

	// Generating a random number within a range
	randomNumber := GenerateRandomNumber(1000, 9999)

	// Printing the output
	fmt.Printf("Random String: %v\nRandom Number: %v", randomString, randomNumber)
}
// This function checks whether a given number is prime or not
func isPrime(num int) bool {
	// 1 is not a prime number, so we return false if num is 1
	if num == 1 {
		return false
	}

	// 2 and 3 are prime numbers, so we return true if num is 2 or 3
	if num == 2 || num == 3 {
		return true
	}

	// For any other number, we check if it is divisible by any number from 2 to the square root of the number (inclusive)
	sqrt_num := int(math.Sqrt(float64(num)))
	for i := 2; i <= sqrt_num; i++ {
		if num%i == 0 {
			return false
		}
	}

	// If the number is not divisible by any number from 2 to the square root of the number, it is a prime number, so we return true
	return true
}

// Example function call to check if a number is prime
result := isPrime(11)
// The result should be true since 11 is a prime number
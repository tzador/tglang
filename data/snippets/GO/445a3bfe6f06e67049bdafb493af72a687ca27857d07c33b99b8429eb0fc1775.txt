package main

import (
	"fmt"
	"strings"
)

//This function checks if a given string is a palindrome
func isPalindrome(s string) bool {
	//convert string to lowercase
	s = strings.ToLower(s)
	//initialize start and end pointers
	start := 0
	end := len(s) - 1
	//iterate through string until start pointer reaches the middle
	for start < end {
		//ignore non-alphanumeric characters by moving start pointer forward
		for !isAlphanumeric(s[start]) && start < end {
			start++
		}
		//ignore non-alphanumeric characters by moving end pointer backward
		for !isAlphanumeric(s[end]) && start < end {
			end--
		}
		//if the characters at start and end pointers do not match, return false
		if s[start] != s[end] {
			return false
		}
		//move both pointers closer towards the middle of the string
		start++
		end--
	}
	//if all characters have been checked and no mismatches were found, return true
	return true
}

//This function checks if a given character is alphanumeric
func isAlphanumeric(c byte) bool {
	if (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') {
		return true
	}
	return false
}

func main() {
	//input string to be checked
	input := "A man, a plan, a canal: Panama"
	//check if input string is a palindrome
	if isPalindrome(input) {
		fmt.Println("The input string is a palindrome!")
	} else {
		fmt.Println("The input string is not a palindrome.")
	}
}
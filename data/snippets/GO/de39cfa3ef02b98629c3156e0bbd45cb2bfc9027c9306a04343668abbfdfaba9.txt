package main

import (
	"fmt"
	"math/rand"
	"time"
)

// Define a function that generates a random string of length n
func GenerateRandomString(n int) string {
	rand.Seed(time.Now().UnixNano())
	letters := []rune("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")
	b := make([]rune, n)
	for i := range b {
		b[i] = letters[rand.Intn(len(letters))]
	}
	return string(b)
}

// Define a function that checks if a number is even
func CheckEven(num int) bool {
	if num%2 == 0 {
		return true
	} else {
		return false
	}
}

// Define a function that calculates the sum of numbers in an array
func CalculateSum(array []int) int {
	sum := 0
	for _, num := range array {
		sum += num
	}
	return sum
}

// Define a struct for a person
type Person struct {
	Name string
	Age  int
}

// Define a method for the person struct
func (p Person) SayHello() string {
	return fmt.Sprintf("Hello, my name is %s and I am %d years old.", p.Name, p.Age)
}

func main() {
	// Generate a random number between 1 and 10
	randomNum := rand.Intn(10) + 1

	// Generate a random string of length 10
	randomString := GenerateRandomString(10)

	// Create an array of numbers
	numbers := []int{1, 2, 3, 4, 5}

	// Calculate the sum of numbers in the array
	sum := CalculateSum(numbers)

	// Create a new person
	john := Person{Name: "John", Age: 25}

	// Call the SayHello method on the person
	greeting := john.SayHello()

	// Print out the results
	fmt.Printf("Random number: %d\n", randomNum)
	fmt.Printf("Random string: %s\n", randomString)
	fmt.Printf("Sum: %d\n", sum)
	fmt.Println(greeting)
}
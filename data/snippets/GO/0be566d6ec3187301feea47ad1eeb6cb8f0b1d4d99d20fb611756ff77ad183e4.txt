func mergesort(arr []int, l int, h int) { 
    if l < h { 
        m := (l+h)/2 
        mergesort(arr, l, m) 
        mergesort(arr, m+1, h)
        merge(arr, l, m, h) 
    } 
} 

func merge(arr []int, l int, m int, h int) { 
    n1 := m - l + 1 
    n2 := h - m 

    L := [n1]int{} // create temporary arrays 
    R := [n2]int{} 

    for i:= 0; i < n1; i++ { // copy data to temporary arrays 
        L[i] := arr[l+i] 
    } 
    for i:= 0; i < n2; i++ { 
        R[i] := arr[m+1+i] 
    } 
    
    i := 0 // initial index of first subarray 
    j := 0 // initial index of second subarray 
    k := l // initial index of merged subarray 
    
    for i < n1 && j < n2 { // merge the temporary arrays back into arr
        if L[i] <= R[j] { 
            arr[k] := L[i] 
            i++ 
        } else { 
            arr[k] := R[j] 
            j++ 
        } 
        k++ 
    } 
    
    for i < n1 { // copy remaining elements of L[] 
        arr[k] := L[i] 
        i++ 
        k++ 
    } 
    
    for j < n2 { // copy remaining elements of R[] 
        arr[k] := R[j] 
        j++ 
        k++ 
    } 
}
// This is a function to calculate the factorial of a given number
func factorial(n int) int {
    // Base case: when n is 0 or 1, the factorial is 1
    if n == 0 || n == 1 {
        return 1
    }
    // Recursive case: calculate factorial by multiplying n with the factorial of n-1
    return n * factorial(n-1)
}

// This is a struct representing a book
type Book struct {
    title       string
    author      string
    ISBN        string
    year        int
    totalPages  int
}

// This is a function that displays information about a book in a formatted string
func (b Book) displayInfo() string {
    return fmt.Sprintf("Title: %v \nAuthor: %v \nISBN: %v \nYear: %v \nTotal Pages: %v",
        b.title, b.author, b.ISBN, b.year, b.totalPages)
}

// This is a main function to test the above code
func main() {
    // Calculate factorial of 5 and print the result
    result := factorial(5)
    fmt.Println("Factorial of 5 is:", result)

    // Create a new book object and display its information
    book := Book{"To Kill a Mockingbird", "Harper Lee", "978-0061120084", 1960, 281}
    fmt.Println("\nInformation about the book:\n", book.displayInfo())
}

// Output:
/*
Here are the comments again, for displaying in annotated markdown code snippet:
// Base case: when n is 0 or 1, the factorial is 1
// Recursive case: calculate factorial by multiplying n with the factorial of n-1
// Calculate factorial of 5 and print the result
// Create a new book object and display its information

The output for the main function will be:
Factorial of 5 is: 120

Information about the book:
Title: To Kill a Mockingbird
Author: Harper Lee
ISBN: 978-0061120084
Year: 1960
Total Pages: 281
*/
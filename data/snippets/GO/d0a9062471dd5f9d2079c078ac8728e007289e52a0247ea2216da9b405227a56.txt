// This is a function that calculates the factorial of a given number
func factorial(n int) int {
    if n == 0 { 
        return 1
    } else { 
        return n * factorial(n - 1) 
    } 
}

// This is a function that calculates the Nth Fibonacci number
func fibonacci(n int) int {
    if n == 0 || n == 1 {
        return 1
    } else {
        return fibonacci(n-1) + fibonacci(n-2)
    }
}

// This is a function that checks if a given number is prime
func isPrime(n int) bool {
    if n < 2 { 
        return false 
    } else if n == 2 || n == 3 { 
        return true 
    } else if n % 2 == 0 || n % 3 == 0 { 
        return false 
    } else { 
        for i := 5; i * i <= n; i += 6 { 
            if n % i == 0 || n % (i + 2) == 0 { 
                return false 
            } 
        } 
        return true 
    } 
}

// This is a function that converts an integer to its binary representation
func convertToBinary(n int) string {
    if n == 0 {
        return "0"
    }

    result := ""

    for n > 0 {
        remainder := n % 2
        result = string(remainder + '0') + result
        n /= 2
    }

    return result
}

// This is a function that sorts an array of integers in ascending order using Selection Sort
func selectionSort(arr []int) {
    n := len(arr)

    for i := 0; i < n-1; i++ {
        minIndex := i
        for j := i + 1; j < n; j++ {
            if arr[j] < arr[minIndex] {
                minIndex = j
            }
        }
        arr[minIndex], arr[i] = arr[i], arr[minIndex]
    }
}

// This is a function that performs binary search on a sorted array
func binarySearch(arr []int, target int) int {
    start := 0
    end := len(arr) - 1

    for start <= end {

        mid := (start + end) / 2

        if arr[mid] == target {
            return mid
        } else if arr[mid] < target {
            start = mid + 1
        } else {
            end = mid - 1
        }
    }

    return -1
}
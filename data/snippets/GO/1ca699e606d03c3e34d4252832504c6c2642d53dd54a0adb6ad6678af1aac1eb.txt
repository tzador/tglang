// This function checks if the given number is prime or not
func isPrime(number int) bool {
	// If the given number is less than or equal to 1, it is not prime
	if number <= 1 {
		return false
	}
	// Check if the given number is divisible by any number from 2 to the square root of the number
	for i := 2; i <= int(math.Sqrt(float64(number))); i++ {
		if number%i == 0 {
			return false
		}
	}
	// If the function reaches here, it means the number is prime
	return true
}

// Main function to test the isPrime function
func main() {
	// Define a slice of numbers to check
	numbers := []int{2, 3, 5, 7, 9, 10, 11, 13, 17, 19, 21, 23, 29, 31}
	// Loop through the numbers and print the result of isPrime function
	for _, number := range numbers {
		fmt.Printf("%d is prime: %t\n", number, isPrime(number))
	}
}
// Declare a class called "Weapon" with properties and methods
class Weapon extends Actor
    placeable;

var(Weapons) int AmmoType;
var(Weapons) int CurrentAmmo;
var(Weapons) int MaxAmmo;
var(Weapons) int Damage;
var(Weapons) bool bIsEquipped;
var(Weapons) bool bIsActive;
var(Weapons) bool bIsFiring;
var(Weapons) float FireRate;
var(Weapons) bool bCanReload;
var(Weapons) float ReloadTime;

// Constructor for the weapon class
function Weapon()
{
    Super.BeginPlay();
    
    // Set default values for properties
    AmmoType = 0;
    CurrentAmmo = 0;
    MaxAmmo = 30;
    Damage = 10;
    bIsEquipped = false;
    bIsActive = false;
    bIsFiring = false;
    FireRate = 1.0;
    bCanReload = true;
    ReloadTime = 2.0;
}

// Method to fire the weapon
function Fire()
{
    // Check if the weapon is equipped
    if(bIsEquipped)
    {
        // Check if the weapon has ammo
        if(CurrentAmmo > 0)
        {
            // Decrease current ammo by 1
            CurrentAmmo = CurrentAmmo - 1;
            // Spawn a projectile from the weapon
            Spawn(class'Projectile', self,, Location,, Rotation);
            // Set the firing timer
            SetTimer(FireRate, false, 'FireTimer');
            // Set the firing status to true
            bIsFiring = true;
        }
        else
        {
            // If there is no ammo, check if the weapon can reload
            if(bCanReload)
            {
                // Reload the weapon
                Reload();
            }
            else
            {
                // If the weapon cannot reload, set the firing status to false
                bIsFiring = false;
            }
        }
    }
}

// Method to handle the firing timer
exec function FireTimer()
{
    // Stop the timer
    KillTimer();
    // Set the firing status to false
    bIsFiring = false;
}

// Method to reload the weapon
function Reload()
{
    // Set the reloading status to true
    bIsReloading = true;
    // Set the timer for reload time
    SetTimer(ReloadTime, false, 'ReloadTimer');
}

// Method to handle the reloading timer
exec function ReloadTimer()
{
    // Stop the timer
    KillTimer();
    // Refill the ammo to maximum
    CurrentAmmo = MaxAmmo;
    // Set the reloading status to false
    bIsReloading = false;
}

// Method to equip the weapon
exec function Equip()
{
    // Set the equipped status to true
    bIsEquipped = true;
}

// Method to unequip the weapon
exec function UnEquip()
{
    // Set the equipped status to false
    bIsEquipped = false;
}

// Method to activate the weapon
exec function Activate()
{
    // Set the active status to true
    bIsActive = true;
}

// Method to deactivate the weapon
exec function Deactivate()
{
    // Set the active status false
    bIsActive = false;
}

// Method to check if the weapon is equipped
exec function IsEquipped()
{
    // Return the equipped status
    return bIsEquipped;
}

// Method to check if the weapon is firing
exec function IsFiring()
{
    // Return the firing status
    return bIsFiring;
}

// Method to check if the weapon is active
exec function IsActive()
{
    // Return the active status
    return bIsActive;
}

// Method to get the current ammo count
exec function GetCurrentAmmo()
{
    // Return the current ammo count
    return CurrentAmmo;
}

// Method to set the current ammo count
exec function SetCurrentAmmo(int NewAmmo)
{
    // Set the current ammo count
    CurrentAmmo = NewAmmo;
}

// Method to get the maximum ammo count
exec function GetMaxAmmo()
{
    // Return the maximum ammo count
    return MaxAmmo;
}

// Method to set the maximum ammo count
exec function SetMaxAmmo(int NewMaxAmmo)
{
    // Set the maximum ammo count
    MaxAmmo = NewMaxAmmo;
}

// Method to get the damage value
exec function GetDamage()
{
    // Return the damage value
    return Damage;
}

// Method to set the damage value
exec function SetDamage(int NewDamage)
{
    // Set the damage value
    Damage = NewDamage;
}

// Method to get the fire rate
exec function GetFireRate()
{
    // Return the fire rate
    return FireRate;
}

// Method to set the fire rate
exec function SetFireRate(float NewFireRate)
{
    // Set the fire rate
    FireRate = NewFireRate;
}

// Method to check if the weapon can reload
exec function CanReload()
{
    // Return the canReload status
    return bCanReload;
}

// Method to set if the weapon can reload
exec function SetCanReload(bool NewCanReload)
{
    // Set the canReload status
    bCanReload = NewCanReload;
}

// Method to get the reload time
exec function GetReloadTime()
{
    // Return the reload time
    return ReloadTime;
}

// Method to set the reload time
exec function SetReloadTime(float NewReloadTime)
{
    // Set the reload time
    ReloadTime = NewReloadTime;
}
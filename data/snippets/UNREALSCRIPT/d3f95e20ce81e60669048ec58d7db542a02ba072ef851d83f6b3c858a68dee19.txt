/* This is a complex code snippet in UNREALSCRIPT, showcasing the development of a custom weapon in a game. */

class Weapon extends Actor //creating a new class for the weapon
    placeable; //making it possible to place in the level editor
    
var() const int MaxAmmo; //declaring a constant variable for the maximum ammo of the weapon
var() const float FireRate; //declaring a constant variable for the fire rate of the weapon
var() float CurrentAmmo; //declaring a variable for the current ammo of the weapon
var() bool bIsFiring; //declaring a boolean variable to check if the weapon is currently firing
var() float LastFireTime; //declaring a variable to track the last time the weapon was fired


simulated function BeginPlay()
{
    Super.BeginPlay();
    
    CurrentAmmo = MaxAmmo; //setting the current ammo to the maximum ammo when the weapon is initialized
    bIsFiring = false; //setting the firing flag to false initially
}

event FireWeapon() //creating an event for firing the weapon
{
    if(bIsFiring || CurrentAmmo <= 0) //checking if the weapon is already firing or has no ammo
        return; //stop execution if any of the conditions are met
    
    //do some animation for the weapon firing
    
    //spawn a projectile and set its direction based on the player's aim
    Projectile proj = Spawn(class'Projectile', self,, Location, Rotation * Player.AimRotation);

    //set the projectile's team to the same as the player's
    proj.Team = Player.Team;
    
    //keep track of the last time the weapon was fired
    LastFireTime = Level.TimeSeconds;
    
    //subtract ammo from the current ammo count
    CurrentAmmo--;
    
    //set the firing flag to true
    bIsFiring = true;
}

event WeaponFiring(float DeltaTime) //creating an event for weapon firing, takes in a parameter for delta time
{
    if(Level.TimeSeconds - LastFireTime >= FireRate) //checking if enough time has passed for the weapon to fire again
    {
        bIsFiring = false; //set the firing flag to false
        return; //stop execution
    }
    
    //do some animation for the weapon continuously firing
    
    //spawn a projectile and set its direction based on the player's aim
    Projectile proj = Spawn(class'Projectile', self,, Location, Rotation * Player.AimRotation);
    
    //set the projectile's team to the same as the player's
    proj.Team = Player.Team;
    
    //subtract delta time from the last fire time
    LastFireTime -= DeltaTime;
    
    //subtract ammo from the current ammo count
    CurrentAmmo--;
    
    //check if we still have ammo, if not, stop firing
    if(CurrentAmmo <= 0)
        bIsFiring = false;
}

defaultproperties
{
    MaxAmmo=50 //setting the default value for the maximum ammo
    FireRate=0.5 //setting the default value for the fire rate
}
class AIPathFinder extends NavigationHandles;
/*
* This class is used for generating paths for AI controlled characters.
*/
var float PathPrecision; // the precision of the generated path

// Initializes the path finder and sets the default precision to 0.1
function Init()
{
    PathPrecision = 0.1;
}

// Sets the precision of the generated path
// @param NewPrecision new precision for the path
function SetPathPrecision(float NewPrecision)
{
    PathPrecision = NewPrecision;
}

// Generates a path from the given start location to the given target location
// @param StartLocation start location of the path
// @param TargetLocation target location of the path
// @return generated path
function GeneratePath(Vector StartLocation, Vector TargetLocation)
{
    // perform A* algorithm to find the shortest path
    var Array<Vector> Path; // the generated path
    var Vector CurrentLocation; // the current location being checked
    var Vector NextLocation; // the next location to check for the path
    var Vector ClosestLocation; // the closest location to the target
    var float ClosestDistance; // the distance to the closest location
    var float Distance; // the distance between two locations
    
    // initialize path with start location
    Path.AddItem(StartLocation);

    // loop until current location is close to the target location
    while ((CurrentLocation - TargetLocation).Size() > PathPrecision)
    {
        // find the closest location to the target
        for (NextLocation in NavigationMesh.GetNeighbors(CurrentLocation))
        {
            Distance = (NextLocation - TargetLocation).Size();
            
            if (Distance < ClosestDistance)
            {
                ClosestLocation = NextLocation;
                ClosestDistance = Distance;
            }
        }

        // add closest location to the path
        Path.AddItem(ClosestLocation);

        // set current location to the closest location
        CurrentLocation = ClosestLocation;
    }

    // return generated path
    return Path;
}
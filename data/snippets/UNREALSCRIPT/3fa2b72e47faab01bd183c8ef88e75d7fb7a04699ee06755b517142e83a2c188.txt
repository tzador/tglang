class MyActor extends Actor
  placeable;

  // Declaring variables with different data types
  var int MyIntVariable;
  var float MyFloatVariable;
  var string MyStringVariable;
  var bool MyBoolVariable;

  // Declaring arrays
  var array<int> MyIntArray;
  var array<float> MyFloatArray;
  var array<string> MyStringArray;
  var array<bool> MyBoolArray;

  // Function to set initial values for variables
  function SetVariables()
  {
    // Setting values for variables
    MyIntVariable = 10;
    MyFloatVariable = 5.5;
    MyStringVariable = "Hello";
    MyBoolVariable = true;

    // Adding values to arrays
    MyIntArray.AddItem(5);
    MyIntArray.AddItem(7);
    MyFloatArray.AddItem(2.5);
    MyFloatArray.AddItem(4.3);
    MyStringArray.AddItem("World");
    MyStringArray.AddItem("!");
    MyBoolArray.AddItem(false);
    MyBoolArray.AddItem(true);
  }

  // Function to print out the values of variables and arrays
  function PrintValues()
  {
    // Printing out values of variables
    `Log("MyIntVariable: " $ MyIntVariable);
    `Log("MyFloatVariable: " $ MyFloatVariable);
    `Log("MyStringVariable: " $ MyStringVariable);
    `Log("MyBoolVariable: " $ MyBoolVariable);

    // Looping through arrays and printing out values
    `Log("MyIntArray:");
    foreach MyIntArray(`Log(" " $ String(MyIntArray[i]));

    `Log("MyFloatArray:");
    foreach MyFloatArray(`Log(" " $ String(MyFloatArray[i]));

    `Log("MyStringArray:");
    foreach MyStringArray(`Log(" " $ MyStringArray[i]);

    `Log("MyBoolArray:");
    foreach MyBoolArray(`Log(" " $ String(MyBoolArray[i]));
  }

  // Function to update variables and arrays
  function UpdateVariables()
  {
    // Changing values of variables
    MyIntVariable = 20;
    MyFloatVariable = 6.7;
    MyStringVariable = "Hola";
    MyBoolVariable = false;

    // Changing values of arrays
    MyIntArray[0] = 3;
    MyIntArray[1] = 9;
    MyFloatArray[0] = 1.2;
    MyFloatArray[1] = 6.9;
    MyStringArray[0] = "Unreal";
    MyStringArray[1] = "Script";
    MyBoolArray[0] = true;
    MyBoolArray[1] = false;
  }

  // Function to call and test all other functions
  function TestFunctions()
  {
    `Log("----------------------- Setting Initial Values ------------------------");
    SetVariables();
    PrintValues();
    `Log("-------------------- Updating Values and Arrays -----------------------");
    UpdateVariables();
    PrintValues();
  }

  // Main function to be called when object is spawned in game
  function BeginPlay()
  {
    TestFunctions();
  }
  
defaultproperties
{
  Begin Object Class=DynamicLightEnvironmentComponent Name=MyLightEnvironment
    bEnabled=TRUE
  End Object

  Components.Add(MyLightEnvironment)
}
class MyCharacter extends Actor
    // This class represents the main character in the game

    var() int MaxHealth; // The maximum health of the character
    var() int CurrentHealth; // The current health of the character

    var Controller MyController; // The character's controller

    var float MoveSpeed; // The character's movement speed
    var Vector AimRotation; // The character's aim rotation

    var bool bIsMoving; // Indicates whether the character is currently moving
    var bool bIsAlive; // Indicates whether the character is still alive

    defaultproperties
    {
        MaxHealth=100;
        CurrentHealth=100;
        MoveSpeed=500.0;
        bIsAlive=true;
    }

    // Function called when the character takes damage
    event TakeDamage(int Damage, Controller EventInstigator, Vector HitLocation, Vector Momentum, class<DamageType> DamageType)
    {
        // Subtract the damage from the current health
        CurrentHealth = CurrentHealth - Damage;
        if(CurrentHealth <= 0)
        {
            KillCharacter(EventInstigator);
        }
    }

    // Function called when the character is killed
    function KillCharacter(Controller EventInstigator)
    {
        // Set the character as dead and stop movement
        bIsAlive = false;
        bIsMoving = false;

        // Do any necessary cleanup or game logic

        // Destroy the character
        Destroy();
    }

    // Function called when the character starts moving
    function StartMoving()
    {
        // Set the character as moving
        bIsMoving = true;
    }

    // Function called when the character stops moving
    function StopMoving()
    {
        // Set the character as not moving
        bIsMoving = false;
    }

    // Function called when the character aims
    function Aim(Vector AimDirection)
    {
        // Set the aim rotation to the direction the character is aiming
        AimRotation = AimDirection;
    }

    // Function called when the character fires a weapon
    function FireWeapon()
    {
        // Create a new projectile and set its initial parameters
        local Projectile NewProjectile;
        NewProjectile = Spawn(class'Projectile');
        NewProjectile.Init(AimRotation, Location);

        // Fire the projectile
        NewProjectile.Fire();
    }
}
class ComplexMath extends Object
    /// This is a class that will perform various complex mathematical operations.
    function Add(int A, int B) int
        /// This function performs addition of two integer values and returns the result.
        return A + B
    function Subtract(int A, int B) int
        /// This function performs subtraction of two integer values and returns the result.
        return A - B
    function Multiply(int A, int B) int
        /// This function performs multiplication of two integer values and returns the result.
        return A * B
    function Divide(int A, int B) int
        /// This function performs division of two integer values and returns the result.
        return A / B
    function Power(int A, int B) int
        /// This function calculates the power of integer A to the exponent B and returns the result.
        local int Result
        /// Create a local variable to store the result.
        Result = 1
        /// Set the initial value of the result to 1.
        for (local int i = 1; i <= B; i++)
            /// Run a for loop from 1 to the exponent value.
            Result = Result * A
            /// Multiply the result with A for every iteration.
        return Result
    function Factorial(int A) int
        /// This function calculates the factorial of integer A and returns the result.
        local int Result
        /// Create a local variable to store the result.
        Result = 1
        /// Set the initial value of the result to 1.
        if (A > 1)
            /// Check if the input value is greater than 1.
            for (local int i = 1; i <= A; i++)
                /// Run a for loop from 1 to the input value.
                Result = Result * i
                /// Multiply the result with the current iteration value.
        return Result
    function Max(int A, int B, int C) int
        /// This function returns the maximum of three integer values.
        local int MaxValue
        /// Create a local variable to store the maximum value.
        MaxValue = A
        /// Set the maximum value to the first input.
        if (B > MaxValue)
            /// Check if the second input is greater than the current maximum value.
            MaxValue = B
            /// If so, update the maximum value.
        if (C > MaxValue)
            /// Check if the third input is greater than the current maximum value.
            MaxValue = C
            /// If so, update the maximum value.
        return MaxValue
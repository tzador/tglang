// This code snippet creates a custom weapon class named "MyWeapon"

class MyWeapon extends Weapon;

/* Sets the Skeletal Mesh for the weapon
 * and assigns a sound for its firing
 */
var() SkeletalMesh Mesh;
var() Sound FireSound;

/* Sets the rate of fire for the weapon
 * and the duration of its reload animation
 */
var() float FireRate = 0.1;
var() float ReloadTime = 3.0;

/* Sets the minimum and maximum damage
 * that the weapon can deal
 */
var() int MinDamage = 10;
var() int MaxDamage = 20;

/**
 * @brief Changes the weapon's fire rate and damage based on its ammo count
 * @param AmmoCount The current amount of ammo
 */
function SetWeaponStats(int AmmoCount)
{
    if(AmmoCount > 0)
    {
        FireRate = 0.05;
        MinDamage = 15;
        MaxDamage = 30;
    }
    else
    {
        FireRate = 0.1;
        MinDamage = 10;
        MaxDamage = 20;
    }
}

/**
 * @brief Fires the weapon and handles its logic
 * @return Whether or not the shot was successful
 */
simulated function bool Fire()
{
    // Play the firing sound
    if(FireSound != None)
    {
        PlaySound(FireSound);
    }

    // Generate a random damage value within the min and max range
    int Damage = RandRange(MinDamage, MaxDamage);

    // Delay the next shot based on the weapon's fire rate
    // and play its reload animation
    Wait(FireRate);
    PlayAnim('Reload_anim', ReloadTime);

    // Check for a successful hit and return the result
    if(Damage > 15)
    {
        return true;
    }
    else
    {
        return false;
    }
}

defaultproperties
{
    // Sets the skeletal mesh and firing sound for the weapon
    Mesh=StaticMesh'Weapons.SniperRifle';
    FireSound=SoundCue'Weapons.SniperRifle.Fire';

    // Sets the default values for the weapon's stats
    FireRate=0.1;
    ReloadTime=3.0;
    MinDamage=10;
    MaxDamage=20;
}
class MyActor extends Actor
    native function TurnTowards (Vector targ) optional;
    
    simulated function PostBeginPlay()
    {
        local array<PlayerController> PlayerControllers; //create local array of PlayerController actors
        
        //loop through all PlayerController actors in the level
        foreach all Players(Class'PlayerController')
        {
            if (Players[foreachindex].Player != None) //check if player is valid
            {
                PlayerControllers.AddItem (PlayerControllers[foreachindex]); //add player to array
                if (!bExtendedChecks || (bExtendedChecks && Players[foreachindex].Player.PlayerReplicationInfo == None))
                //checks if extended checks are enabled and if player's replication info is valid
                {
                    Players[foreachindex].PlayerController.TurnTowards (Location - Players[foreachindex].Pawn.Location); //call TurnTowards function with calculated vector
                }
            }
        }
        
        local int iParam; //create local int variable
        if (Game.FullScreenMovieIsPlaying()) //checks if movie is playing in full screen
        {
            Game.GetSinglePlayerPlayerController().ToggleGameMenu(); //if movie is playing, open game menu
        }
        Game.GetCurrentViewTarget(iParam); //gets current view target
    }
    
    defaultproperties
    {
        bOnlyRelevantToOwner=false
        bNoDelete=true
    }
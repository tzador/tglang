//This code snippet creates a projectile class with custom damage.

class CustomProjectile extends Projectile;

//The constructor sets the default damage to 50.
//This can be changed by passing a different value when spawning the projectile.
//It also sets the default particle effect to play on impact.
function CustomProjectile() {
    Default.Damage = 50;
    Default.ImpactEffect = class'ParticleSystemComponent'.static.GetDefaultEffectTemplate(EPSCPoolMethod.Fixed).Name;
}

//This function overrides the default hit behavior for the projectile.
//It applies damage to the actor hit and plays the impact effect.
simulated function DoPCHit(Pawn Other, Vector HitLocation, Vector HitNormal) {
    super.DoPCHit(Other, HitLocation, HitNormal);

    //Check if the actor hit is valid and do damage
    if (Other != none) {
        //Get the modified damage value from the projectile
        local int modifiedDamage = Default.Damage;

        //Check for a custom damage multiplier in the hit actor's tag value
        if (Other.Tag != "") {
            //If a multiplier is found, parse it to an int and multiply it with the damage value
            local int damageMultiplier = parsedouble(Other.Tag);
            modifiedDamage *= damageMultiplier;
        }

        //Apply the damage to the hit actor and play the impact effect
        Other.TakeDamage(modifiedDamage, self.Controller, ImpactLocation, ImpactNormal, class'CustomProjectile', self);
        Spawn(class'ParticleSystemActor', self,, HitLocation, HitNormal.Rotator(),, class'CustomProjectile'.default.ImpactEffect, 'None');
    }
}
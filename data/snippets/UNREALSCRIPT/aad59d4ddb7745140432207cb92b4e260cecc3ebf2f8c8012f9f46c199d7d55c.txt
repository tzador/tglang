class FakerWeapon extends Weapon expands UTWeapon 
  // This class is for creating fake weapons that only display visual effects
  // and have no actual gameplay functionality
 
  // Properties
  var bool bFiring
 
  // Events
  event Destroyed()
  event RenderInternal( Canvas C )
 
  // Functions
  function GetFireInterval() return 0.1;
 
  // Override fire mode
  function SetFireMode( byte F )
  {
    if( F == 0 )
    {
      Super.SetFireMode( 1 ); // Set to single fire mode
      bFiring = false;
    }
  }
 
  // Simulation event
  simulated event SimulateWeaponFire()
  {
    // Create effect for firing
    local Actor Owner;
    Owner = Owner.GetController().Pawn;
    Owner.PlayParticleEffect( 'FX_PowerImpact', 'None', 'None', vector(0,0,0), False );
    bFiring = false;
 
    // Delay reload
    NextFireTime = Level.TimeSeconds + GetFireInterval() + ReloadTime;
  }
 
  // Render internal
  event RenderInternal( Canvas C )
  {
    Super.RenderInternal( C ); // Call super to render base weapon effects
    // Add additional effects for fake weapon
    C.SetDrawColor( 255, 0, 0 );
    local float CrossSize, CrossOpacity;
    CrossSize = 5.0f;
    CrossOpacity = 0.5f;
    C.Canvas.SetPos( C.Viewport.ClipXB / 2 - CrossSize, C.Viewport.ClipYB / 2 + CrossSize );
    C.Canvas.DrawIcon( Material'Icons.CrossHair', CrossSize, CrossSize, CrossSize, CrossSize, False, CrossOpacity );
    C.canvas.SetPos( C.Viewport.ClipXB / 2 - CrossSize, C.Viewport.ClipYB / 2 - CrossSize );
    C.Canvas.DrawIcon( Material'Icons.CrossHair', CrossSize, -CrossSize, CrossSize, CrossSize, False, CrossOpacity );
  }
 
  // Fake weapon fire
  function Fire( optional byte FireModeNum )
  {
    Super.Fire( 0 ); // Fire mode 0 is for "fake" firing
  }
 
  // Initialization
  function PostBeginPlay()
  {
    Super.PostBeginPlay();
    SetFireMode( 0 ); // Set initial fire mode to "fake" mode
  }
 
  // Goggles off
  function GogglesOff()
  {
    Super.GogglesOff(); // Call base function
    bFiring = true;
  }
 
  // Goggles on
  function GogglesOn()
  {
    Super.GogglesOn(); // Call base function
    bFiring = false;
  }
 
  // Update
  function Tick( float DeltaTime )
  {
    Super.Tick( DeltaTime ); // Call parent function
    if( ActualMode == 0 && bFiring )
    {
      bFiring = false;
      SimulateWeaponFire(); // Simulate fake firing
    }
  }
 
}
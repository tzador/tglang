// This code snippet implements a basic PlayerController class in UnrealScript

class PlayerController extends Actor;
   // Declare variables
   var bool bCanDodge;
   var float DodgeCooldown;
   var float DodgeDuration;
   var float RollDistance;
   
   // Constructor function
   function PlayerController()
   {
      // Initialize variables
      bCanDodge = true;
      DodgeCooldown = 5.0f;
      DodgeDuration = 0.75f;
      RollDistance = 100.0f;
   }
   
   // Handle input for dodging
   simulated function Dodge()
   {
      // Check if dodge is on cooldown
      if(bCanDodge)
      {
         // Set dodge on cooldown
         bCanDodge = false;
         // Get player's rotation
         local Rotation PlayerRot;
         PlayerRot = GetViewRotation();
         // Determine the direction to roll in based on player's forward vector
         local Vector RollDir;
         RollDir = PlayerRot.Vector * RollDistance;
         // Give player a boost in the direction of the roll
         SetPhysics(PHYS_Falling);
         SetLinearVelocity(RollDir);
         // Set timer to reset dodge availability
         SetTimer(DodgeCooldown, false, 'ResetDodge');
      }
   }
   
   // Handle resetting dodge availability
   function ResetDodge()
   {
      bCanDodge = true;
   }
   
   // Function to handle player taking damage
   function TakeDamage(int Damage, Controller EventInstigator, Pawn DamageCauser, vector HitLocation, vector Momentum, class<DamageType> DamageType)
   {
      // Apply damage to the player
      local int Health;
      Health = Health - Damage;
      // Check if player's health is 0
      if(Health <= 0)
      {
         // Call player's death function
         Die();
      }
   }
   
   // Function to handle player's death
   function Die()
   {
      // Reset the player's position and rotation
      local Rotation DefaultRot;
      local Vector DefaultLoc;
      DefaultRot = Rot(0, 0, 0);
      DefaultLoc = Vect(0, 0, 0);
      SetRotation(DefaultRot);
      SetLocation(DefaultLoc);
      // Disable player's input
      DisableInput();
      // Show death screen
      ShowDeathScreen();
      // Destroy the player's pawn
      Destroy();
   }
   
   // Handle player movement based on input
   event Tick(float DeltaTime)
   {
      // Get player's input
      local Vector MoveDir;
      MoveDir = GetInputAxis(Key_WorldForward) + GetInputAxis(Key_WorldRight);
      // Normalize movement direction
      MoveDir = Normal(MoveDir);
      // Scale movement direction by player's speed and delta time
      MoveDir *= Speed * DeltaTime;
      // Move the player
      Move(MoveDir);
   }
   
   // Handle player rotation based on input
   event PostBeginPlay()
   {
      // Get initial rotation
      local Rotation DefaultRot;
      DefaultRot = Rot(0, 0, 0);
      // Set player's rotation
      SetRotation(DefaultRot);
   }
   
defaultproperties
{
   Speed=500.0f
}
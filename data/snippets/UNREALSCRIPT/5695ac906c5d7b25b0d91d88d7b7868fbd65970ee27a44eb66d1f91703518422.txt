// START CODE SNIPPET
// This code snippet creates a custom weapon class in the game.
class CustomWeapon extends Weapon
    placeable;

// Declares variables for weapon properties
var int AmmoCount;
var bool bIsReloading;

//==================================================
// Initialization
//==================================================
function DefaultProperties()
{
    Super.DefaultProperties();
    
    // Set default values for variables
    AmmoCount = 50;
    bIsReloading = false; 

    // Add any necessary components to the weapon
    Mesh.SkeletalMesh = StaticMesh'WP_TestRifle';
    Mesh.SetValue('DrawScale3D', Vector(1.0, 1.0, 1.0));

    CollisionComponent.StaticMesh = Mesh;
    CollisionComponent.SetTranslation(Vector(0.0, 0.0, 20.0));

    // Set weapon stats
    WeaponData.WeaponType = EWeaponType.Custom;
    WeaponData.FireRate = 0.1;
    WeaponData.Damage = 25;
}

//==================================================
// Main functions
//==================================================
function FireWeapon()
{
    SpawnProjectile();
    PlayShootAnimation();
    ConsumeAmmo();
}

function Reload()
{
    bIsReloading = true;
    PlayReloadAnimation();
    Delay(2.0);
    AmmoCount = 50;
    bIsReloading = false;
}

//==================================================
// Helper functions
//==================================================
function SpawnProjectile()
{
    // Spawn a projectile in front of the weapon
    local Projectile ProjectileInst;
    ProjectileInst = Spawn(class'Projectile', None, Location, Rotation);
    // Set projectile properties
    ProjectileInst.bGravityEnabled = false;
    ProjectileInst.SetVelocity(Vector(2000.0, 0.0, 0.0));
}

function PlayShootAnimation()
{
    // Play a shooting animation on the weapon's mesh
    Mesh.PlayAnim('Shoot');
}

function PlayReloadAnimation()
{
    // Play a reloading animation on the weapon's mesh
    Mesh.PlayAnim('Reload');
}

function ConsumeAmmo()
{
    // Decrease ammo count by 1
    AmmoCount--;
}

//==================================================
// Console commands
//==================================================
function OnConsoleCommand(Switch, Param, OutSwitch, OutParam)
{
    local string Command;
    Command = switch$:=Switch$ Param$:=Param$ OutSwitch$:=OutSwitch$ OutParam$:=OutParam$;
    // Check if the input command matches a valid action
    if (Command == "shoot")
    {
        FireWeapon();
        return true; // the command was handled
    }
    else if (Command == "reload")
    {
        Reload();
        return true; // the command was handled
    }
    else
    {
        return false; // the command was not handled
    }
}

// END CODE SNIPPET
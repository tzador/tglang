/** 
 * This is a class that represents a player character in a video game. 
 * It includes variables for health, movement speed, and jump height, as well as functions for movement and attacks.
 * @param Health The current health of the player character.
 * @param MoveSpeed The movement speed of the player character.
 * @param JumpHeight The jump height of the player character.
 */
class PlayerCharacter extends Actor;

var int Health;
var float MoveSpeed;
var float JumpHeight;

/** 
 * This function handles keyboard input for movement.
 * @param MoveX The X direction to move (1 for right, -1 for left).
 * @param MoveY The Y direction to move (1 for forward, -1 for backward).
 */
function MoveCharacter(int MoveX, int MoveY)
{
    local vector MoveDirection;
    
    // Calculate the move direction based on input
    if(MoveX != 0)
        MoveDirection.X = MoveX;
    if(MoveY != 0)
        MoveDirection.Y = MoveY;
    MoveDirection = Normal(MoveDirection);
    
    // Move the player character
    self.Move(MoveSpeed * MoveDirection);
}

/** 
 * This function handles keyboard input for attacks.
 * @param AttackType The type of attack to perform (0 for melee, 1 for ranged).
 * @param TargetActor The actor to attack.
 */
function Attack(int AttackType, Actor TargetActor)
{
    // Check if the attack is melee or ranged
    if(AttackType == 0)
    {
        // Perform melee attack on the target actor
        TargetActor.TakeDamage(10);
    }
    else
    {
        // Calculate the direction to shoot in
        local vector ShootDirection;
        ShootDirection = TargetActor.Location - self.Location;
        ShootDirection = Normal(ShootDirection);

        // Spawn a projectile and give it an initial velocity in the shoot direction
        local Projectile Projectile;
        Projectile = Spawn(class'Projectile', , self.Location);
        Projectile.SetVelocity(500 * ShootDirection);

        // Cause damage to the target actor when the projectile collides with it
        SetTimer(0.1, false, Projectile, 'Destroy');
        Projectile.Event = 'HitObject';
        Projectile.AddEventToList(TargetActor);
        Projectile.Damage = 25;
    }
}
/*
This is a complex code snippet written in UNREALSCRIPT.
It creates a custom camera class that inherits from the default camera class.
It also has functions for controlling the camera movement and rotation.
*/

class MyCameraClass extends Camera;

/// Camera positioning and movement functions

// Function for moving the camera forward
function MoveForward(float Val)
{
    local vector CameraDirection;

    // Get the direction the camera is facing
    CameraDirection = Rotation.RotateVector(Vector(1, 0, 0));

    // Move the camera in the forward direction
    Location += CameraDirection * Val;
}

// Function for moving the camera backward
function MoveBackward(float Val)
{
    local vector CameraDirection;

    // Get the direction the camera is facing
    CameraDirection = Rotation.RotateVector(Vector(-1, 0, 0));

    // Move the camera in the backward direction
    Location += CameraDirection * Val;
}

// Function for moving the camera right
function MoveRight(float Val)
{
    local vector CameraDirection;

    // Get the direction the camera is facing
    CameraDirection = Rotation.RotateVector(Vector(0, 1, 0));

    // Move the camera in the right direction
    Location += CameraDirection * Val;
}

// Function for moving the camera left
function MoveLeft(float Val)
{
    local vector CameraDirection;

    // Get the direction the camera is facing
    CameraDirection = Rotation.RotateVector(Vector(0, -1, 0));

    // Move the camera in the left direction
    Location += CameraDirection * Val;
}


/// Camera rotation and angle functions

// Function for rotating the camera
function Rotate(float DeltaYaw, float DeltaPitch, float DeltaRoll)
{
    local rotator CameraRotation;

    // Update the camera rotation
    CameraRotation.Yaw += DeltaYaw;
    CameraRotation.Pitch += DeltaPitch;
    CameraRotation.Roll += DeltaRoll;

    // Apply the new rotation to the camera
    Rotation = CameraRotation;
}

// Function for setting the camera's pitch
function SetPitch(float NewPitch)
{
    local rotator CameraRotation;

    // Set the new pitch value
    CameraRotation.Pitch = NewPitch;

    // Apply the new rotation to the camera
    Rotation = CameraRotation;
}

// Function for setting the camera's yaw
function SetYaw(float NewYaw)
{
    local rotator CameraRotation;

    // Set the new yaw value
    CameraRotation.Yaw = NewYaw;

    // Apply the new rotation to the camera
    Rotation = CameraRotation;
}

// Function for setting the camera's roll
function SetRoll(float NewRoll)
{
    local rotator CameraRotation;

    // Set the new roll value
    CameraRotation.Roll = NewRoll;

    // Apply the new rotation to the camera
    Rotation = CameraRotation;
}
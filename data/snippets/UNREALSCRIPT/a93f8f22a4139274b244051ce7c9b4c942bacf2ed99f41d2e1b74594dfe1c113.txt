/*
This is a complex code snippet in UNREALSCRIPT.
It creates a custom projectile actor that can be used 
to spawn projectiles in a game.
*/

//begin class Projectile
class Projectile extends Actor;

//begin struct ProjectileStats
struct ProjectileStats
{
    var float InitialSpeed;
    var float MaxSpeed;
    var float GravityScale;
    var bool ExplodeOnContact;
    var float ExplosionRadius;
    var float Damage;
}//end struct ProjectileStats

//begin function BeginPlay
event BeginPlay()
{
    Super.BeginPlay();
    
    //spawn a projectile at the actor's location and rotation
    local Projectile SpawnedProjectile;
    SpawnedProjectile = Spawn(Projectile, , Location, Rotation);
    
    //set projectile's initial speed and maximum speed
    SpawnedProjectile.InitialSpeed = ProjectileStats.InitialSpeed;
    SpawnedProjectile.MaxSpeed = ProjectileStats.MaxSpeed;
    
    //set projectile's gravity scale and explosion properties
    SpawnedProjectile.GravityScale = ProjectileStats.GravityScale;
    SpawnedProjectile.ExplodeOnContact = ProjectileStats.ExplodeOnContact;
    SpawnedProjectile.ExplosionRadius = ProjectileStats.ExplosionRadius;
    SpawnedProjectile.Damage = ProjectileStats.Damage;
    
    //detach from actor and set projectile's owner to the actor
    SpawnedProjectile.outer = none;
    SpawnedProjectile.SetOwner(self);
}//end function BeginPlay

//begin event HitWall 
event HitWall(vector HitNormal, Actor Wall)
{
    Super.HitWall(HitNormal, Wall);
    
    //if projectile should explode on contact, trigger explosion event
    if(ProjectileStats.ExplodeOnContact)
    {
        SpawnActor(Explosion, Location, Rotation);
    }
    
    //destroy the projectile
    Destroy();
}//end event HitWall

//begin event Tick 
event Tick(float DeltaTime)
{
    Super.Tick(DeltaTime);
    
    //update projectile's velocity based on gravity scale and time
    Velocity = Velocity + (Vector(0, 0, -1) * ProjectileStats.GravityScale * DeltaTime);
    
    //if projectile reaches maximum speed, set velocity to maximum speed
    if(Velocity.Size() > ProjectileStats.MaxSpeed)
    {
        Velocity = Normal(Velocity) * ProjectileStats.MaxSpeed;
    }
}//end event Tick

//begin defaultproperties
defaultproperties
{
    Begin Object Class=ClassRemapEntry Name=ClassRemapEntry_0
        ObjectClass=Projectile
    End Object
    Begin Object Name=ProjectileArchetype
        Class=Projectile
        ParentClass=ClassRemapEntry'MyPackage.Projectile'
        name="Projectile"
        bNoSave=False
        bHidden=False
        bEditable=True
        Graphics=True
        CollisionComponent=CollisionCylinder'MyCollisionCylinder'
        DrawType=DT_Mesh
        DrawScale=Vector(1.000000,1.000000,1.000000)
        CollisionRadius=50.000000
        CollisionHeight=50.000000
        DrawScale3D=(Y=1.000000)
        SphereCollRadius=50.000000
        CapsuleHalfHeight=50.000000
        CapsuleRadius=50.000000
        StaticMesh=StaticMesh'MyStaticMesh'
        SkeletalMesh=SkeletalMesh'MySkeletalMesh'
        Animsets(0)=SkeletalMesh'MyAnimSet'
        Location=(X=-0.000244,Y=-0.000000,Z=0.006836)
        DrawScale=(X=0.099081,Y=0.099081,Z=0.099081)
        LightEnvironment=LightEnvironment'LightEnvironment'
        PostProcess=PostProcess'PostProcess'
        AmbientSound=SoundNodeAmbientSound'SoundNodeAmbientSound'
        DrawScale3D=(X=1.000000,Z=1.000000)
        StaticMesh=StaticMesh'MyStaticMesh'
        SkeletalMesh=SkeletalMesh'MySkeletalMesh'
        Animsets(0)=SkeletalMesh'MyAnimSet'
        SoundEnvironment=SoundEnvironment'TestSoundEnv'    
    End Object
    Begin Object Name=CollisionCylinder
        CollisionRadius=50.000000
        CollisionHeight=50.000000
    End Object
    Begin Object Name=StaticMeshComponent0
        StaticMesh=StaticMesh'MyStaticMesh'
    End Object
    Begin Object Name=StaticMeshComponent1
        StaticMesh=StaticMesh'MyStaticMesh'
    End Object
    Begin Object Name=SkeletalMeshComponent0
        SkeletalMesh=SkeletalMesh'MySkeletalMesh'
        AnimSets(0)=SkeletalMesh'MyAnimSet'
    End Object
    Begin Object Name=SceneComponent0
        Location=(X=0.000000,Y=0.000000,Z=0.000000)
    End Object
    Begin Object Name=SoundNodeAmbientSound0
        WaveLength=500
        Volume=0.006990
        Origin=(X=-0.225000,Y=-0.225000,Z=0.000000)
        Direction=(X=1.000000,Y=0.000000,Z=0.000000)
        Drift=7.500000
    End Object
    Begin Object Class=F117_DefaultProjectileStats Name=MyProjectileStats
        InitialSpeed=5000.000000
        MaxSpeed=10000.000000
        GravityScale=1.000000
        ExplodeOnContact=False
        ExplosionRadius=500.000000
        Damage=50.000000
    End Object
    Begin Object Class=MyExplosion Name=MyExplosion_0
    End Object
}
//end defaultproperties

//end class Projectile
defaultproperties
{
    Begin Object Class=ClassRemapEntry Name=ClassRemapEntry_0
        ObjectClass=Explosion
    End Object
    Begin Object Name=ProjectileArchetype
        Class=Projectile
        ParentClass=ClassRemapEntry'MyPackage.Explosion'
        Name="Explosion"
        bNoSave=False
        bHidden=False
        bEditable=True
        bStatic=False
        CollideActors=True
        BlockActors=True
        BlockNonZeroExtent=True
        BlockZeroExtent=True
        Begin Object Class=VectorParameterValue Name=VectorParameterValue0
            ParameterName="BaseColor"
            ParameterValue=(R=1.000000,G=1.000000,B=1.000000,A=1.000000)
        End Object
        Begin Object Class=ScalarParameterValue Name=ScalarParameterValue0
            ParameterName=&quot;Roughness
            ParameterValue=0.500000
    End Object
    Begin Object Class=IntensityParameterValue Name=IntensityParameterValue0
        ParameterName="Intensity"
        ParameterValue=3.000000
    End Object
    StaticMesh=StaticMesh'MyStaticMesh'
    StaticMesh=StaticMesh'MyStaticMesh'
    base radius=100.00000,extended radius=50.000000,collision flags="NonStandable|MF_BosTracing",drawscale=0.002500,DRAWSCALE3D=X=0.500000
    Begin Object Class=ParticleParametersValue Name=ParticleParameterValues0
    End Object
}
//end class Explosion
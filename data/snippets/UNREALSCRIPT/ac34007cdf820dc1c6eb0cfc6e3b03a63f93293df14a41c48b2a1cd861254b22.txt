/**
 * This is a code snippet in UNREALSCRIPT
 * It creates a class called PlayerCharacter that inherits from Actor
 */
class PlayerCharacter extends Actor
    placeable;

var() int Health; // Declare a variable for health

/**
 * Function to decrement health and trigger death if health reaches 0
 */
function TakeDamage (int Amount)
{
    Health -= Amount; // Decrement health by specified amount
    if (Health <= 0) // Check if health is 0 or below
        Die(); // Call Die function
}

/**
 * Function to play dying animation and destroy the actor
 */
function Die()
{
    PlayAnimation("dyingAnim"); //Play dying animation
    Kill(); // Call Kill function
}

/**
 * Function to respawn the player character at a specified location
 */
function Respawn (Vector spawnLoc)
{
    Location = spawnLoc; // Set location to specified spawn location
    Health = 100; // Set health back to full
    PlayAnimation("respawningAnim"); // Play respawning animation
}

/**
 * Function to move the character forward based on input direction
 */
function MoveForward (float Value)
{
    // Calculate forward movement based on input value and rotation
    local Vector forwardMovement = Normal(Vector(Forward.X, Forward.Y, 0)) * Value * 100;
    Velocity = forwardMovement; // Set velocity based on calculated movement
}

/**
 * Function to move the character right based on input direction
 */
function MoveRight (float Value)
{
    // Calculate right movement based on input value and rotation
    local Vector rightMovement = Normal(Vector(Right.X, Right.Y, 0)) * Value * 100;
    Velocity = rightMovement; // Set velocity based on calculated movement
}

/**
 * Function to rotate the character based on input direction
 */
function Rotate (float Value)
{
    AddRotation(Value, 0, 0); // Add rotation to character based on input value
}

/**
 * Main event called every frame to update character movement and rotation
 */
defaultproperties
{
    Begin Object Class = SkeletalMeshComponent Name = SkeletalComponent
        SkeletalMesh = SkeletalMesh'CH_Player.SK.CH_Player'
    End Object

    Begin Object Class = 'Player' Name = Player
        PlayerController = 'CH_Player' // Specify player controller class
    End Object

    Begin Object Class = TimerComponent Name = Timer
        TimerRate = 0.025 // Set timer rate to 0.025 seconds
    End Object

    // Bind MoveForward function to W and S keys for player movement
    InputAxis = (Axis=MoveForward, Key=W, PositiveScale=1.0, NegativeScale=-1.0)

    // Bind MoveRight function to A and D keys for player movement
    InputAxis = (Axis=MoveRight, Key=D, PositiveScale=1.0, NegativeScale=-1.0)

    // Bind Rotate function to Q and E keys for character rotation
    InputAxis = (Axis=Rotate, Key=Q, PositiveScale=1.0, NegativeScale=-1.0)
}
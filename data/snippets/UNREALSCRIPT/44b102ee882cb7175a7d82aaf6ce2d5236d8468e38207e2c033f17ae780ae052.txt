// This code snippet uses UnrealScript language to create a custom game mode
class MyCustomGameMode extends GameInfo
  config(ConsoleClass, DefaultPlayerClass, GameClass, MapListType, bIsHandlingDedicatedServerReplays);
  // This is the configuration for our custom game mode, with default values for various variables
  config myCustomMap("MyCustomMap", "MyCustomMap.udk"); // This line adds our custom map to the map list

  // This function is called when the game mode is initialized
  event InitGame( string Options, out string ErrorMessage )
  {
    super.InitGame(Options, ErrorMessage); // Call parent function to initialize game mode

    // Set default player values for our game mode
    bAllowKeyboardAndMouse=false;
    bStartPlayersAsSpectators=true;

    SetGameSpeed(0.5); // Slow down the game speed for our custom game mode
  }

  // This function is called when a new player joins the game
  event PostLogin(PlayerController NewPlayer)
  {
    super.PostLogin(NewPlayer); // Call parent function to handle player joining

    // Give the new player a customized weapon
    NewPlayer.GiveWeapon(class'RocketLauncher');
    NewPlayer.GiveWeapon(class'ShockRifle');
  }

  // This function is called when a player dies
  event KilledController(Controller Killer, Controller Victim, Pawn KilledPawn, class<DamageType> DamageType)
  {
    // If the victim was a player and the killer was the player themselves, add a message to the log
    if (Victim.IsA('PlayerController') && Killer.IsA('PlayerController') && Killer == Victim)
    {
      `Killing yourself doesn\'t gain you any points!`; // Print a message to log using annotated markdown
    }

    super.KilledController(Killer, Victim, KilledPawn, DamageType); // Call parent function to handle player death
  }

  // This function is called when the match ends
  extra_event MatchEnded()
  {
    // Notify all players about the end of the match
    foreach AllActors(class'PlayerController', player)
    {
      player.ClientMessage('The match has ended!');
    }

    super.MatchEnded(); // Call parent function to end the match
  }
};
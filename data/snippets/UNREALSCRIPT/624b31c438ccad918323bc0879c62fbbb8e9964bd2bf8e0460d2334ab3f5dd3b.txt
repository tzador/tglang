class AProjectile expands Actor;
// An actor that represents a projectile in the game world.

var int Damage; // The amount of damage this projectile will deal on impact.
var float Speed; // The speed at which this projectile travels.
var float MaxDistance; // The maximum distance this projectile can travel before being destroyed.
var vector Direction; // The direction in which this projectile will travel.

function UpdateProjectile(float DeltaTime)
{
    // Move the projectile in the specified direction.
    Location = Location + Direction * Speed * DeltaTime;
    
    // Check if the projectile has exceeded its maximum distance.
    if (VSize(Location - InitialLocation) > MaxDistance)
    {
        Destroy();
    }
}

function BeginPlay()
{
    Super.BeginPlay();
    
    // Set the initial location of the projectile.
    SetInitialLocation(Location);
}

event HitWall(vector HitNormal, actor Wall)
{
    // Calculate the new direction of the projectile after colliding with a wall.
    Direction = Direction - 2 * dot(Direction, HitNormal) * HitNormal;
    
    // Check if the projectile has exceeded its maximum distance.
    if (VSize(Location - InitialLocation) > MaxDistance)
    {
        Destroy();
    }
}

defaultproperties
{
    Begin Object Class=StaticMeshComponent Name=MeshComponent
        StaticMesh=StaticMesh'Projectile.Meshes.ProjectileMesh'
    End Object
    
    Components.Add(MeshComponent)
}
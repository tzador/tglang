class CustomGameMode extends GameInfo;

// The 'extends' keyword specifies that this class is inheriting from the parent class, GameInfo.

var() editinline ConfigActor MyActor1;
// The 'var' keyword declares a variable and the 'editinline' keyword allows it to be edited in the Unreal Editor.
// The variable 'ConfigActor' specifies that it is an actor that can be configured.
// The name of the variable is 'MyActor1'.

var int MyInt;
// This declares a variable named 'MyInt' and it has an integer data type.

simulated function InitGame( string Options, out string Error ){
    super.InitGame( Options, Error );
    // The 'super' keyword allows the class to access the functions of the parent class.
    // In this case, it is calling the InitGame function from the GameInfo class.
}

simulated event PostBeginPlay(){
    // This is an event that is called after the level has been loaded and all actors have spawned.
    // The 'simulated' keyword lets the game know that this event is not happening in real time.
    Log( "Hello, world!" );
    // This calls the Log function, which prints a message to the log.
    // The message being printed is "Hello, world!".
}
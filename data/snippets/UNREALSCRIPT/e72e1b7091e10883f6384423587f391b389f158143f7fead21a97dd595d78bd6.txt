classname MyClass extends Object native;
/// This line declares a class named "MyClass" which inherits from the Object class and can be used natively (without importing).

/// Define some variables for MyClass
/// This variable stores a one-dimensional array of integers
var array<int> IntArray;
/// This variable stores an instance of the MyClass class
var MyClass SomeObject;
/// This variable stores a two-dimensional array of floats
var array<array<float>> FloatArray;
/// This variable stores a string
var string MyString;

/// Define a function for MyClass
/// This function takes two integers and returns the sum of them as an integer
function int AddNumbers(int A, int B)
{
	return A + B;
}

/// Define a function with optional parameters for MyClass
/// This function takes a string and an optional integer, and returns the concatenation of them as a string
function string ConcatString(string String1, optional int Number)
{
	if (Number == none)
	{
		/// If the optional parameter is not provided, return only the string
		return String1;
	}
	else
	{
		/// If the optional parameter is provided, return the string and the optional number converted to a string
		return String1 $ "." $ string(Number);
	}
}

/// Init function for MyClass
/// This function is called when an instance of MyClass is created
function Init()
{
	/// Add some values to the IntArray variable
	IntArray.Add(1);
	IntArray.Add(2);
	IntArray.Add(3);

	/// Create an instance of MyClass and store it in the SomeObject variable
	SomeObject = new class'MyClass';

	/// Set the value of MyString variable
	MyString = "Hello World";
}

/// DefaultProperties block for MyClass
/// This block is used to set the default values for the variables of MyClass
defaultproperties
{
	/// Set the default values for the variables of MyClass
	IntArray = {5, 6, 7};
	SomeObject = new class'MyClass';
	FloatArray = {{1.1, 1.2}, {2.1, 2.2}};
	MyString = "Default String";
}
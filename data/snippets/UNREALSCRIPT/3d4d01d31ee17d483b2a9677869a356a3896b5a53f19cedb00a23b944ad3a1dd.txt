class MyActor extends Actor
    function bool Tick( float Delta )
    {
        local float Threshold;
   
        // Perform a check to see if the actor should be destroyed
        if ( bShouldDestroyActor == true )
        {
            // Destroy the actor
            Destroy();
            return true;
        }

        // Perform another check to see if the actor can move
        if ( bCanMove == true )
        {
            // Move the actor to a new location
            SetLocation( GetLocation() + ( Velocity * Delta) );
        }

        // Perform a check to see if the actor should play an animation
        if ( bShouldPlayAnim == true )
        {
            // Play the specified animation
            PlayAnim( AnimToPlay );
        }

        // Perform a check to see if the actor should emit particles
        if ( bShouldEmitParticles == true )
        {
            // Initialize a new particle emitter
            Emitter = new( self ) class'ParticleEmitter';

            // Set the emitter's location to the actor's current location
            Emitter.Location = Location;

            // Set the emitter's rotation to match the actor's rotation
            Emitter.Rotation = Rotation;

            // Start the emitter
            Emitter.Start();
        }

        return false;
    }
    
    event PostRender ( Canvas Canvas )
    {
        local float X, Y;
        local float SizeX, SizeY;

        // Get the size of the canvas
        Canvas.GetViewSize( SizeX, SizeY );

        // Calculate the center point of the screen
        X = SizeX / 2;
        Y = SizeY / 2;

        // Draw a rectangle at the center of the screen
        Canvas.SetDrawColor( 255, 0, 0 );
        Canvas.SetDrawType( DRAWTYPE_Roll );
        Canvas.DrawRect( X - 50, Y - 50, X + 50, Y + 50 );
    }
    
    defaultproperties
    {
        // Set the default values for the actor's properties
        bShouldDestroyActor = false;
        bCanMove = true;
        bShouldPlayAnim = true;
        AnimToPlay = None;
        bShouldEmitParticles = false;
        Emitter = None;
    }
end
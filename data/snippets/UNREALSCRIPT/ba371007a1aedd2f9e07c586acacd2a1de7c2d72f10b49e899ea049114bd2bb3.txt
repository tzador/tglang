//=============================================================================
//MyCustomClass
//
//This class represents a custom object that can be placed in the game world.
//=============================================================================
class MyCustomClass extends Object;

//=============================================================================
//Struct
//=============================================================================
struct MyCustomStruct
{
  var int MyInt;
  var float MyFloat;
  var bool MyBool;
  var string MyString;
  const Name MyName;
  var struct MyOtherStruct MyOtherStructVar;
  var array<int> MyIntArray;
  delegate bool OnMyDelegate();
  
  /*=============================================================================
  Struct Constructor
  =============================================================================*/
  function Construct()
  {
    MyInt = 1;
    MyFloat = 1.5;
    MyBool = true;
    MyString = "Hello World!";
    MyName = 'MyName';
    MyOtherStructVar = MyOtherStruct();
    MyIntArray = {1, 2, 3};
  }
}

//=============================================================================
//TruncatedStruct
//
//This is a smaller version of the MyCustomStruct, intended for easier use.
//=============================================================================
struct TruncatedStruct
{
  var int TruncInt;
  var float TruncFloat;
  var bool TruncBool;
    
  /*=============================================================================
  Struct Constructor
  =============================================================================*/
  function Construct()
  {
    TruncInt = 1;
    TruncFloat = 1.5;
    TruncBool = true;
  }
}

//=============================================================================
//MyCustomObject
//=============================================================================
class MyCustomObject extends MyCustomClass;

//=============================================================================
//MyCustomSingleObject
//
//This is a class that holds a single instance of MyCustomObject as a variable.
//=============================================================================
class MyCustomSingleObject extends Object;

//=============================================================================
//MyCustomCollection
//=============================================================================
class MyCustomCollection extends Object;

//=============================================================================
//MyCustomManager
//
//This class manages the creation and deletion of MyCustomObjects.
//=============================================================================
class MyCustomManager extends MyCustomClass;

//=============================================================================
//MyCustomManager extends MyCustomManager
//
//This is a subclass of MyCustomManager that adds additional functions.
//=============================================================================
class MyCustomManagerPlus extends MyCustomManager;

//=============================================================================
//MyCustomComponent
//
//This class represents a component that can be attached to any object.
//It contains functions to manipulate its parent object.
//=============================================================================
class MyCustomComponent extends Object;

/*=============================================================================
Default Properties
=============================================================================*/
defaultproperties
{
  //Structs
  MyCustomStruct MyStruct;
  TruncatedStruct MyTruncStruct;
  
  //Objects
  MyCustomObject MyObject;
  MyCustomSingleObject MySingleObject;
  MyCustomCollection MyCollection;
  
  //Managers
  MyCustomManager MyManager;
  MyCustomManagerPlus MyManagerPlus;
  
  //Components
  MyCustomComponent MyComponent;
}

/*=============================================================================
Functions
=============================================================================*/

//MyCustomClass Functions
//==============
//==============================================================================
//MyCustomClass::MyCustomClass()
//
//Constructor function for MyCustomClass.
//==============================================================================
function MyCustomClass Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomClass::DoSomething()
//
//Function to do something with MyCustomClass.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomClass::Destroy()
//
//Function to destroy the MyCustomClass object and all of its components.
//==============================================================================
function Destroy()
{
  //Destroy all components attached to this object
  foreach MyCustomComponent comp in AllComponents(class'MyCustomComponent')
  {
    comp.Destroy();
  }
  
  //Call parent Destroy function
  super.Destroy();
}

//MyCustomStruct Functions
//==============
//==============================================================================
//MyCustomStruct::MyCustomStruct()
//
//Constructor function for MyCustomStruct.
//==============================================================================
function MyCustomStruct Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomStruct::DoSomething()
//
//Function to do something with MyCustomStruct.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomStruct::Destroy()
//
//Function to destroy the MyCustomStruct object.
//==============================================================================
function Destroy()
{
  //Do nothing, structs do not need to be destroyed
}

//TruncatedStruct Functions
//==============
//==============================================================================
//TruncatedStruct::TruncatedStruct()
//
//Constructor function for TruncatedStruct.
//==============================================================================
function TruncatedStruct Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//TruncatedStruct::DoSomething()
//
//Function to do something with TruncatedStruct.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//TruncatedStruct::Destroy()
//
//Function to destroy the TruncatedStruct object.
//==============================================================================
function Destroy()
{
  //Do nothing, structs do not need to be destroyed
}

//MyCustomObject Functions
//==============
//==============================================================================
//MyCustomObject::MyCustomObject()
//
//Constructor function for MyCustomObject.
//==============================================================================
function MyCustomObject Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomObject::DoSomething()
//
//Function to do something with MyCustomObject.
//==============================================================================
function DoSomething()
{
  //Call DoSomething function from MyCustomClass
  MyCustomClass.DoSomething();
}

//==============================================================================
//MyCustomObject::Destroy()
//
//Function to destroy the MyCustomObject object.
//==============================================================================
function Destroy()
{
  //Destroy all components attached to this object
  foreach MyCustomComponent comp in AllComponents(class'MyCustomComponent')
  {
    comp.Destroy();
  }
  
  //Call parent Destroy function
  super.Destroy();
}

//MyCustomSingleObject Functions
//==============
//==============================================================================
//MyCustomSingleObject::MyCustomSingleObject()
//
//Constructor function for MyCustomSingleObject.
//==============================================================================
function MyCustomSingleObject Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomSingleObject::DoSomething()
//
//Function to do something with MyCustomSingleObject.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomSingleObject::Destroy()
//
//Function to destroy the MyCustomSingleObject object.
//==============================================================================
function Destroy()
{
  //Do nothing, this object should never be destroyed
}

//MyCustomCollection Functions
//==============
//==============================================================================
//MyCustomCollection::MyCustomCollection()
//
//Constructor function for MyCustomCollection.
//==============================================================================
function MyCustomCollection Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomCollection::DoSomething()
//
//Function to do something with MyCustomCollection.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomCollection::AddToCollection()
//
//Function to add an object to the MyCustomCollection.
//Takes in a MyCustomObject as a parameter.
//==============================================================================
function AddToCollection(MyCustomObject objectToAdd)
{
  //Add the object to the collection
  return MyCollection.AddItem(objectToAdd);
}

//==============================================================================
//MyCustomCollection::RemoveFromCollection()
//
//Function to remove an object from the MyCustomCollection.
//Takes in a MyCustomObject as a parameter.
//==============================================================================
function RemoveFromCollection(MyCustomObject objectToRemove)
{
  //Remove the object from the collection
  MyCollection.RemoveItem(objectToRemove);
}

//==============================================================================
//MyCustomCollection::Destroy()
//
//Function to destroy the MyCustomCollection object.
//==============================================================================
function Destroy()
{
  //Destroy all objects in the collection
  foreach MyCustomObject obj in MyCollection
  {
    obj.Destroy();
  }
  
  //Call parent Destroy function
  super.Destroy();
}

//MyCustomManager Functions
//==============
//==============================================================================
//MyCustomManager::MyCustomManager()
//
//Constructor function for MyCustomManager.
//==============================================================================
function MyCustomManager Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomManager::DoSomething()
//
//Function to do something with MyCustomManager.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomManager::CreateNewObject()
//
//Function to create a new MyCustomObject and add it to the collection.
//==============================================================================
function CreateNewObject()
{
  //Create a new MyCustomObject
  local MyCustomObject newObject;
  newObject = new class'MyCustomObject';
  
  //Add it to the collection
  MyCollection.AddItem(newObject);
}

//MyCustomManagerPlus Functions
//==============
//==============================================================================
//MyCustomManagerPlus::MyCustomManagerPlus()
//
//Constructor function for MyCustomManagerPlus.
//==============================================================================
function MyCustomManagerPlus Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomManagerPlus::DoSomething()
//
//Function to do something with MyCustomManagerPlus.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomManagerPlus::CreateNewObject()
//
//Function to create a new MyCustomObject and add it to the collection.
//==============================================================================
function CreateNewObject()
{
  //Create a new MyCustomObject
  local MyCustomObject newObject;
  newObject = new class'MyCustomObject';
  
  //Add it to the collection
  MyCollection.AddItem(newObject);
}

//==============================================================================
//MyCustomManagerPlus::Destroy()
//
//Function to destroy the MyCustomManagerPlus object.
//==============================================================================
function Destroy()
{
  //Call parent Destroy function
  super.Destroy();
}

//MyCustomComponent Functions
//==============
//==============================================================================
//MyCustomComponent::MyCustomComponent()
//
//Constructor function for MyCustomComponent.
//==============================================================================
function MyCustomComponent Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomComponent::DoSomethingToParent()
//
//Function to do something to the parent object of the component.
//==============================================================================
function DoSomethingToParent()
{
  //Do some action to the parent object
  local MyCustomObject parentObject;
  parentObject = MyOwner;
  
  //Call parentObject's DoSomething function
  parentObject.DoSomething();
  
  //Do some additional action to the parent object
  parentObject.property = 1;
}

//==============================================================================
//MyCustomComponent::Destroy()
//
//Function to destroy the MyCustomComponent object.
//==============================================================================
function Destroy()
{
  //Call parent Destroy function
  super.Destroy();
}

//MyCustomManagerPlus Functions
//==============
//==============================================================================
//MyCustomManagerPlus::MyCustomManagerPlus()
//
//Constructor function for MyCustomManagerPlus.
//==============================================================================
function MyCustomManagerPlus Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomManagerPlus::DoSomething()
//
//Function to do something with MyCustomManagerPlus.
//Returns a boolean value.
//==============================================================================
function bool DoSomething()
{
  //Do some action here and return a result
  return true;
}

//==============================================================================
//MyCustomManagerPlus::CreateNewObject()
//
//Function to create a new MyCustomObject and add it to the collection.
//==============================================================================
function CreateNewObject()
{
  //Create a new MyCustomObject
  local MyCustomObject newObject;
  newObject = new class'MyCustomObject';
  
  //Add it to the collection
  MyCollection.AddItem(newObject);
}

//==============================================================================
//MyCustomManagerPlus::Destroy()
//
//Function to destroy the MyCustomManagerPlus object.
//==============================================================================
function Destroy()
{
  //Call parent Destroy function
  super.Destroy();
}

//MyCustomComponent Functions
//==============
//==============================================================================
//MyCustomComponent::MyCustomComponent()
//
//Constructor function for MyCustomComponent.
//==============================================================================
function MyCustomComponent Construct()
{
  //Initialize any necessary variables here
  
  //Return self
  return self;
}

//==============================================================================
//MyCustomComponent::DoSomethingToParent()
//
//Function to do something to the parent object of the component.
//==============================================================================
function DoSomethingToParent()
{
  //Do some action to the parent object
  local MyCustomObject parentObject;
  parentObject = MyOwner;
  
  //Call parentObject's DoSomething function
  parentObject.DoSomething();
  
  //Do some additional action to the parent object
  parentObject.property = 1;
}

//==============================================================================
//MyCustomComponent::Destroy()
//
//Function to destroy the MyCustomComponent object.
//==============================================================================
function Destroy()
{
  //Call parent Destroy function
  super.Destroy();
}
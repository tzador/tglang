/// Code Snippet Example

class MyActor extends Actor
    /// This is a class declaration for a custom actor named MyActor.
    /// It extends the base class 'Actor' in the UNREALSCRIPT language.

    /// Creating a property for the actor that will hold a mesh component.
    var MeshComponent MyMesh;

    function BeginPlay()
        /// This function is called when the actor begins playing in the game.
        /// Here we are calling the Super.BeginPlay() function to ensure all parent classes are properly initialized.
        Super.BeginPlay();

        /// Here we are creating a new MeshComponent and assigning it to our MyMesh property.
        MyMesh = new(MeshComponent);
        
        /// Here we are setting the mesh component's static mesh to a predetermined mesh asset.
        MyMesh.StaticMesh = GetStaticMesh("MyActorMesh");
        
        /// Adding the mesh component to the actor's root component.
        AddRootComponent(MeshComponent);

    function Tick(float DeltaTime)
        /// This function is called every frame, and is used for updating the actor's behavior and properties.
        /// Here, we are using the Tick function to make our actor rotate on the Y-axis over time.
        Rotator Rot;
        Rot.Yaw += DeltaTime;
        MyMesh.RelativeRotation = Rot;

    defaultproperties
    {
        /// This section is used to define the default properties of our actor.
        /// Here, we are setting the actor's static mesh asset and its initial location on the level.
        Begin Object Class=StaticMeshComponent Name=MyMeshComp
            StaticMesh=StaticMesh'Path/To/MyActorMeshAsset'
            RelativeLocation=(X=0, Y=0, Z=0)
        End Object

        /// Assigning the 'MyMeshComp' object as our MeshComponent.
        MyMesh=MyMeshComp

        /// Setting the actor's root component to be our MeshComponent.
        RootComponent=MyMeshComp
    }
}
// Example of a complex UNREALSCRIPT code snippet

class PlayerController extends PlayerStartPawn;

// This is the default player controller, inherited from the PlayerStartPawn class.

var PlayerMyHUD MyHUD;

// Declares a variable of type PlayerMyHUD named MyHUD.

// Function to set the HUD.

function SetHUD(PlayerMyHUD NewHUD)
{
    MyHUD = NewHUD;
}

// Function to display the player's score.

function DisplayScore(int Score)
{
    local string ScoreString;
	
    // Convert the score to a string.
    ScoreString = Score;

    // Format the score string to be displayed on the HUD.
    ScoreString = ScoreString $ " points";

    // Display the score on the player's HUD.
    MyHUD.DisplayMessage(ScoreString);
}

// Function to process the player's input.

function ProcessInput(float DeltaTime, byte Key, int Event, AHUD HUD)
{
    local PlayerController Player;
	
    // Only process the input if the HUD is valid.
    if (HUD != None)
    {
        // Get the player controller associated with this HUD.
        Player = HUD.GetOwner();

        // Check if the player controller is a PlayerPawn type.
        if (Player.IsA('PlayerPawn'))
        {
            // Cast the player controller to a PlayerPawn type.
            local PlayerPawn PlayerPawn;
            PlayerPawn = Player;
			
            // If the key is pressed, display the player's score.
            if (Event == IE_Pressed)
            {
                DisplayScore(PlayerPawn.Score);
            }
        }
    }
}

// Function to end the game.

function EndGame()
{
    // Set the HUD to display the end game screen.
    SetHUD(PlayerMyHUD(EndGameScreen));
	
    // Stop player input.
    DisableInput();

    // Display end game message on the HUD.
    MyHUD.DisplayMessage("Game Over!");
}

// Function to restart the game.

function RestartGame()
{
    // Reset the player's score to zero.
    local PlayerPawn PlayerPawn;
    PlayerPawn = HUD.GetOwner();
    PlayerPawn.Score = 0;

    // End the current game.
    EndGame();

    // Start a new game.
    GameInfo.RestartGame();
}

// Function to handle player death.

function PlayerDied()
{
    // Display death message on the HUD.
    MyHUD.DisplayMessage("You died!");

    // End the game.
    EndGame();
}

// Function to handle player victory.

function PlayerWon()
{
    // Display victory message on the HUD.
    MyHUD.DisplayMessage("Congratulations, you won!");

    // End the game.
    EndGame();
}
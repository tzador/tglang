//=============================================================================
// MyCustomClass Class
// This is a custom class that handles basic functionalities and properties.
//=============================================================================

// Basic declarations
class MyCustomClass extends Object;

// Properties
var() bool bIsActive; //Specifies if the object is currently active
var() float Velocity; //Current speed of the object
var() string ObjectName; //Name of the object

// Functions
// Initialization function that sets the default values
function Initialize()
{
    bIsActive = false; //Set default state to inactive
    Velocity = 0; //Set default speed to 0
    ObjectName = "My_Object"; //Set default name
}

// Custom function that activates the object
function ActivateObject()
{
    bIsActive = true; //Set bIsActive to true
    Log("Object" @ ObjectName @ " activated!"); //Print message to log
}

// Custom function that deactivates the object
function DeactivateObject()
{
    bIsActive = false; //Set bIsActive to false
    Log("Object" @ ObjectName @ " deactivated!"); //Print message to log
}

// Custom function that updates the object's velocity
// Receives a float value as parameter
function UpdateVelocity(float NewVelocity)
{
    Velocity = NewVelocity; //Update the velocity
    Log("New velocity for object " @ ObjectName @ " is: " @ NewVelocity); //Print message to log
}

//Event handlers
//Functions that will be called automatically by the game engine based on game events

// Handles begin play event
event BeginPlay()
{
    Initialize(); //Call the initialization function
    ActivateObject(); //Activate the object at the start of the game
}

//Handles tick event, updates the object's velocity
event Tick(float DeltaTime)
{
    UpdateVelocity(20); //Sets the velocity to 20 units
}

//Handles end play event
event EndPlay(EEndPlayReason EndPlayReason)
{
    DeactivateObject();  //Deactivates the object at the end of the game
}
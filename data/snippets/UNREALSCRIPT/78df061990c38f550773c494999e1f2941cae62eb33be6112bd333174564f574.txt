// This is a long and complex code snippet in UNREALSCRIPT

class MyClass extends Object; // defining a new class that extends Object class

state(Entry)
{
    Begin:
    `log("Entering Entry state"); // printing a log message to console

    `Super.Begin(); // calling the parent class's Begin function

    // creating a new variable of type Int and setting its value using constructor
    `local int MyInt(5); 

    // printing the value of MyInt variable
    `log(MyInt); 

    // Declaring a variable as a reference to another variable
    `local int& RefToMyInt; 

    // assigning value of MyInt to RefToMyInt
    `RefToMyInt = MyInt; 

    `log(RefToMyInt); // printing the value of RefToMyInt variable

    `if(MyInt > 10) // performing a conditional check on MyInt variable
    `{
        `log("MyInt is greater than 10"); // printing a log message if condition is true
    `}
    `else if (MyInt < 5) // performing a second conditional check on MyInt variable
    `{
        `log("MyInt is less than 5"); // printing a log message if condition is true
    `}
    `else // executing else block if both conditions are false
    `{
        `log("MyInt is between 5 and 10"); // printing a log message
    `}

    // using a for loop to iterate through a list of numbers
    `for (local int i = 0; i < MyInt; i++)
    `{
        `log("Current number is: " $ string(i)); // printing current number in loop
    `}

    // defining a new function with parameters and a return value
    `function int Add(int A, int B)
    `{
        `local int Result; // declaring a local variable

        `Result = A + B; // performing addition and storing result in Result variable

        `return Result; // returning the result
    `}

    `log("Result of Add function is: " $ string(Add(3, 4))); // calling the function and printing the result

    `Finish:
    `log("Finishing Entry state"); // printing a log message to console

    `Super.Finish(); // calling the parent class's Finish function
}
/**
*This is a class that defines a non-player character (NPC) in the game.
*It contains functions for initiating and ending dialogue, as well as handling interactions with the player.
*/
class NPC extends Actor
    placeable;

//NPC properties
var Pawn Target;//target player character for dialogue and interactions
var() float InteractionDistance;//distance at which player can interact with NPC
var() array Dialogue;//array of dialogue options for NPC

//Start dialogue with player character
function StartDialogue()
{
    if(Target != none)
    {
        //calculate distance between NPC and player
        local float Distance;
        Distance = VSize(Target.Location - Self.Location);

        //check if player is within interaction distance and initiate dialogue
        if(Distance <= InteractionDistance)
        {
            //randomly select dialogue option
            local int Index;
            Index = Rand(Dialogue.Length);
            local string DialogueOption;
            DialogueOption = Dialogue[Index];

            //print dialogue option to screen
            `log(Target.PlayerName@": "@DialogueOption);
        }
        else //player is too far away, display error message
        {
            `log("You are not close enough to speak with this NPC.");
        }
    }
    else //target player not found, display error message
    {
        `log("Error: Player character not found.");
    }
}

//End dialogue with player character
function EndDialogue()
{
    `log(Target.PlayerName@": Goodbye!");
}

//Handle player interactions with NPC
function Interact()
{
    if(Target != none)
    {
        //calculate distance between NPC and player
        local float Distance;
        Distance = VSize(Target.Location - Self.Location);

        //check if player is within interaction distance and execute interaction
        if(Distance <= InteractionDistance)
        {
            //randomly select interaction
            local int Interaction;
            Interaction = Rand(3);

            //check which interaction was selected
            if(Interaction == 1) //player is given item by NPC
            {
                //generate random item
                local int Item;
                Item = Rand(5);

                //give player item
                Target.GiveItem(Item);
                `log(Target.PlayerName@" received item #"@Item);
            }
            else if(Interaction == 2) //player is attacked by NPC
            {
                //calculate damage and apply to player
                local int Damage;
                Damage = Rand(20);
                Target.TakeDamage(Damage);
                `log(Target.PlayerName@" took "@Damage@" damage!");
            }
            else //player is healed by NPC
            {
                //calculate heal amount and apply to player
                local int Heal;
                Heal = Rand(20);
                Target.GainHealth(Heal);
                `log(Target.PlayerName@" gained "@Heal@" health!");
            }
        }
        else //player is too far away, display error message
        {
            `log("You are not close enough to interact with this NPC.");
        }
    }
    else //target player not found, display error message
    {
        `log("Error: Player character not found.");
    }
}
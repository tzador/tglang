//Definition of a custom struct
struct MyStruct
{
  var int MyInt; //integer variable
  var string MyString; //string variable
  var MyCustomClass MyObject; //custom class variable
  var int[] MyArray; //array of integers
}

//Function to initialize and return a MyStruct variable
function MyStruct GetStruct()
{
  local MyStruct NewStruct;
  NewStruct.MyInt = 5; //assign value to MyInt
  NewStruct.MyString = "Hello World"; //assign value to MyString
  
  //create instance of MyCustomClass and assign it to MyObject
  local MyCustomClass NewObject;
  NewObject = new(class'MyCustomClass');
  NewStruct.MyObject = NewObject;
  
  //initialize array with multiples of 2
  NewStruct.MyArray = new int[5];
  for (local int i = 0; i < NewStruct.MyArray.Length; i++)
  {
    NewStruct.MyArray[i] = (i + 1) * 2;
  }
  
  return NewStruct; //return initialized MyStruct variable
}

//Function to print MyStruct variables
function PrintStruct(MyStruct Struct)
{
  `log("MyInt: " $ Struct.MyInt); //log MyInt value
  `log("MyString: " $ Struct.MyString); //log MyString value
  `log("MyObject: " $ Struct.MyObject.GetName()); //call GetName() function from MyCustomClass 
  for(local int i = 0; i < Struct.MyArray.Length; i++)
  {
    `log("MyArray[" $ i $ "]: " $ Struct.MyArray[i]); //log each element of MyArray
  }
}

//Main function
function main()
{
  local MyStruct MyStructVariable;
  
  MyStructVariable = GetStruct(); //initialize MyStructVariable using GetStruct() function
  
  PrintStruct(MyStructVariable); //call PrintStruct() function to print MyStructVariable
}
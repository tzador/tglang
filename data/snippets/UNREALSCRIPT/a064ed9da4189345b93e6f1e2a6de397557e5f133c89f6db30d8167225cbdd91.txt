//Class: Language

class Language extends Actor;

// Variables
var() int NumSpeakers;
var() float FluencyRate;

// Functions
/**
 * SetNumSpeakers
 * Sets the number of speakers of the language
 *
 * @param Num - The number of speakers
 */
function SetNumSpeakers(int Num)
{
    NumSpeakers = Num;
}

/**
 * GetNumSpeakers
 * Gets the number of speakers of the language
 *
 * @return The number of speakers
 */
function int GetNumSpeakers()
{
    return NumSpeakers;
}

/**
 * SetFluencyRate
 * Sets the fluency rate of the language
 *
 * @param Rate - The fluency rate
 */
function SetFluencyRate(float Rate)
{
    FluencyRate = Rate;
}

/**
 * GetFluencyRate
 * Gets the fluency rate of the language
 *
 * @return The fluency rate
 */
function float GetFluencyRate()
{
    return FluencyRate;
}

/**
 * GetAverageNumSpeakers
 * Calculates the average number of speakers for a group of languages
 *
 * @param Languages - An array of Language objects
 * @return The average number of speakers
 */
static function int GetAverageNumSpeakers(const array<Language> Languages)
{
    local int TotalNum;
    local int AverageNum;
    foreach Languages(Language)
    {
        TotalNum += Language.GetNumSpeakers();
    }
    AverageNum = TotalNum / Languages.Length;
    return AverageNum;
}

/**
 * GetMostFluentLanguage
 * Finds the language with the highest fluency rate out of a group of languages
 *
 * @param Languages - An array of Language objects
 * @return The most fluent Language object
 */
static function Language GetMostFluentLanguage(const array<Language> Languages)
{
    local float HighestRate;
    local Language MostFluentLanguage;
    foreach Languages(Language)
    {
        if (Language.GetFluencyRate() > HighestRate)
        {
            HighestRate = Language.GetFluencyRate();
            MostFluentLanguage = Language;
        }
    }
    return MostFluentLanguage;
}

// Example implementation
local array<Language> Languages;
Languages.AddItem(new class'Mandarin'); // Adding a Mandarin language object to the array
Languages.AddItem(new class'English'); // Adding an English language object to the array

// Setting the number of speakers for Mandarin
Languages[0].SetNumSpeakers(955000000);

// Setting the number of speakers for English
Languages[1].SetNumSpeakers(1250000000);

// Setting the fluency rate for Mandarin
Languages[0].SetFluencyRate(0.95);

// Setting the fluency rate for English
Languages[1].SetFluencyRate(0.85);

// Printing the average number of speakers for the group of languages
`Log(GetAverageNumSpeakers(Languages));`

// Printing the most fluent language of the group
`Log(GetMostFluentLanguage(Languages))`
class MyActor extends Actor
    // Declares a new class called MyActor that inherits from the Actor class

    config (MyPropertyProperty)
        // Declares a new config variable called MyPropertyProperty

    var MyObject MyProperty;
    // Declares a new variable called MyProperty of type MyObject

    state MyState
        // Declares a new state called MyState

    simulated function MyFunction(int Param1, optional int Param2)
        // Declares a new simulated function called MyFunction that takes in two parameters, Param1 and Param2

        local int LocalValue;
        // Declares a new local variable called LocalValue of type int

        if (Param1 > 0)
            // Checks if Param1 is greater than 0
        {
            LocalValue = Param1 + Param2;
            // Assigns the value of Param1 plus Param2 to LocalValue
        }
        else
        {
            LocalValue = Param1 - Param2;
            // Assigns the value of Param1 minus Param2 to LocalValue
        }

        for (int i = 0; i < LocalValue; i++)
            // Creates a for loop that runs from 0 to the value of LocalValue
        {
            if (i == 5)
                // Checks if i is equal to 5
            {
                break;
                // Exits the for loop
            }

            MyProperty.MyPropertyFunction(i);
            // Calls the MyPropertyFunction of the MyProperty variable, passing in the value of i
        }
    }

    defaultproperties
        // Contains default values for the class properties and variables

        MyProperty = MyObject();
        // Initializes the MyProperty variable with an instance of the MyObject class
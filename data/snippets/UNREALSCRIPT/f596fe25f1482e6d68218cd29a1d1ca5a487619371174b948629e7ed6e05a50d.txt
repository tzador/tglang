//==============================================================================
// Game.Greetings
//
// This class contains functions related to greetings in the game.
//
// Inherits from: Object
// Include: GameplayEvents
//==============================================================================

class Greetings extends Object
    include(GameplayEvents);

    // Private variables
    var array<string> GreetingsTexts;

    // Constructor
    function Init(string greetingsPath)
    {
        Super.Init();

        // Populate greetings texts from external file
        GreetingsTexts = ReadGreetingsFromFile(greetingsPath);

        // Register event handler to trigger greetings on player's movement
        GameplayEvents.AddHandler(PlayerMoving, self, 'TriggerGreetings');
    }

    // Function to read greetings text from external file
    function array<string> ReadGreetingsFromFile(string greetingsPath)
    {
        local FileHandle greetingsFile;
        local string greetingText;
        local array<string> texts;

        // Open the file handle for reading
        greetingsFile = GFileManager.OpenFileRead(greetingsPath);

        // Read greetings text line by line
        while (greetingsFile.ReadLine(greetingText))
        {
            texts.AddItem(greetingText);
        }

        // Close the file handle
        GFileManager.CloseFile(greetingsFile);

        return texts;
    }

    // Event handler for triggering greetings
    function TriggerGreetings(Actor sender, Pawn instigator)
    {
        local int randomIndex;
        local string currentGreeting;
        local string formattedGreeting;

        // Generate random index to choose a greeting text from array
        randomIndex = FRand() * GreetingsTexts.Length;

        // Get current greeting text
        currentGreeting = GreetingsTexts[randomIndex];

        // Format the greeting with instigator's name
        formattedGreeting = Format(currentGreeting, instigator.GetPlayerName());

        // Display the greeting message
        UTGame.Viewport.ShowMessage(formattedGreeting);
    }
defaultproperties
{
}
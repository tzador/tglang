// A function that calculates and returns the square root of a given number
function float SquareRoot(float Num)
{
    // Calculate the initial guess for the square root
    float InitialGuess = Num / 2.0;

    // Set the precision value to determine how close the guess should be to the actual square root
    float Precision = 0.01;

    // Declare variables for the upper and lower bounds of the guess
    float UpperBound, LowerBound;
    
    // Check if the number is negative, if so, use its absolute value
    if (Num < 0)
    {
        Num = Abs(Num);
    }

    // Set the upper bound to be the larger of the initial guess and the number
    if (InitialGuess > Num)
    {
        UpperBound = InitialGuess;
        LowerBound = Num;
    }
    else
    {
        UpperBound = Num;
        LowerBound = InitialGuess;
    }

    // Use a while loop to continually refine the guess
    while (Abs(InitialGuess * InitialGuess - Num) > Precision)
    {
        // Calculate the new guess by taking the average of the upper and lower bounds
        InitialGuess = (UpperBound + LowerBound) / 2;

        // Check if the new guess is greater than the actual square root
        if (InitialGuess * InitialGuess > Num)
        {
            // Set the upper bound to be the new guess
            UpperBound = InitialGuess;
        }
        else
        {
            // Set the lower bound to be the new guess
            LowerBound = InitialGuess;
        }
    }

    return InitialGuess;
}

// Example of using the SquareRoot function with a number
float MyNumber = 25.0; // The number we want to find the square root of
float SQRT = SquareRoot(MyNumber); // Call the function and store the result in a variable

// Print the result to the console
`log("The square root of" $ MyNumber $ "is" $ SQRT); // Output: The square root of 25.0 is 5.0
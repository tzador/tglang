//This code snippet creates a custom player controller with various functionality in UNREALSCRIPT

class MyPlayerController extends PlayerController;

var float MovementSpeed; //variable to adjust player movement speed
var Actor Target; //variable to store player's target

simulated function PostBeginPlay()
{
    super.PostBeginPlay();
    
    if (Role == ROLE_Authority)
    {
        //set default values for MovementSpeed and Target
        MovementSpeed = 500.0;
        SetTarget(None); //sets Target to None to avoid any errors
        
        //spawn a HUD widget for the player
        HUD = Spawn(class'MyHUD', Owner);
    }
}

//function to handle player movement
event Move(float DeltaTime)
{
    //check if player has a target
    if (Target != None)
    {
        //move player towards target at a specified MovementSpeed
        Pawn.MoveTowards(Target.Location, DeltaTime * MovementSpeed);
    }
    
    //call inherited Move function for default movement handling
    Super.Move(DeltaTime);
}

//function to handle player rotation
event ViewRotation(float DeltaTime)
{
    //check if player has a target
    if (Target != None)
    {
        //rotate player towards target
        RotTarget = Rotator(Target.Location - Pawn.Location);
        Controller.Rotation.Yaw = RotTarget.Yaw;
    }
    
    //call inherited ViewRotation function for default view rotation handling
    Super.ViewRotation(DeltaTime);
}

//function to set player's target
function SetTarget(Actor NewTarget)
{
    //update Target variable with new target
    Target = NewTarget;
    
    //update HUD widget with new target's information
    HUD.UpdateTargetInfo(NewTarget);
}
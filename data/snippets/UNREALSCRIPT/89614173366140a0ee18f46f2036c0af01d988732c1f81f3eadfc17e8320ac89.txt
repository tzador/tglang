class MyActor extends Object; //defines a class named MyActor which inherits from the Object class
var float MyFloat; //declares a float variable named MyFloat
var string MyString; //declares a string variable named MyString
var() int MyInt; //declares a variable named MyInt and makes it editable in UnrealEd
var TArray<string> MyStringArray; //declares a string array variable named MyStringArray
var const float MaxValue = 10.0; //declares a constant float variable named MaxValue with a value of 10.0
simulated event BeginPlay() //defines a simulated event named BeginPlay
{
    Super.BeginPlay(); //executes the BeginPlay function of the parent class
    for (local int i = 0; i < 10; i++) //creates a local variable named i and loops until it reaches a value of 10
    {
        MyStringArray.Insert("Item " $ string(i), 0); //inserts a string with the format "Item [i]" into the MyStringArray at the specified index
    }

    WorldInfo.Game.AddConsoleMessage("BeginPlay event executed."); //accesses the Game object of the WorldInfo and calls the AddConsoleMessage function with a specified string parameter
}

function float MyFunction(float Param1, out string Param2) //defines a function named MyFunction which takes in a float parameter and a string output parameter
{
    local float Result; //creates a local variable named Result
    if (Param1 > MaxValue) //checks if the Param1 parameter is greater than the MaxValue constant
    {
        Result = Param1 * MaxValue; //multiplies the Param1 parameter by the MaxValue constant and assigns the result to the Result variable
    }
    else //if the Param1 parameter is not greater than the MaxValue constant
    {
        Result = Param1; //assigns the Param1 parameter to the Result variable
    }

    Param2 = "The result is: " @ string(Result); //appends a string with the format "The result is: [Result]" to the Param2 string parameter
    return Result; //returns the Result variable as the function's output
}

defaultproperties //defines the default properties of the MyActor class
{
    MyFloat = 5.5; //sets the value of MyFloat to 5.5
    MyString = "Hello"; //sets the value of MyString to "Hello"
    MyInt = 10; //sets the value of MyInt to 10
    MyStringArray = {"First Item", "Second Item", "Third Item"}; //initializes the MyStringArray with the specified string values
}
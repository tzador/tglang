class Animal extends Object
# Creating a new class "Animal" that extends the base class Object

    # Define properties of the animal
    var (Visible, EditInline) int AnimalType
    # A visible and editable integer property to define the type of animal

    var (Visible, EditInline) float Health
    # A visible and editable float property to represent the animal's health

    var (Visible, EditInline) bool IsAlive
    # A visible and editable boolean property to track if the animal is alive

    var (EditInline, const) bool CanFly
    # An editable, constant boolean property to determine if the animal can fly

    # Constructor function
    function Animal(int InType, float InHealth)
    {
        AnimalType = InType
        Health = InHealth
        IsAlive = true
        # Sets the initial values for the animal type, health, and alive status
    }

    # Function to calculate the animal's speed based on its health
    simulated function float CalculateSpeed()
    {
        # If the animal is not alive, return a speed of 0
        if( !IsAlive )
        {
            return 0.0;
        }

        # Otherwise, calculate and return the speed based on the animal's health
        if( Health >= 0.75 )
        {
            return 100.0;
        }
        else if( Health < 0.75 && Health > 0.25 )
        {
            return 50.0;
        }
        else
        {
            return 25.0;
        }
    }

    # Function to make the animal move
    simulated function Move(float DeltaTime)
    {
        # Calculate the animal's speed
        local float Speed;
        Speed = CalculateSpeed();

        # Move the animal forward using the calculated speed and delta time
        SetVelocity(VSize(self.Movement) * Speed * DeltaTime);
    }

    defaultproperties
    {
        # Set default values for properties
        AnimalType = 0
        Health = 100.0
        IsAlive = true
        CanFly = false
    }
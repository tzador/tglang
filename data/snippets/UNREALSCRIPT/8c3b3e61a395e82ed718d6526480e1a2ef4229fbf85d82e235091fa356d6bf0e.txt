/**
 * Log class that handles printing log messages and checking logging level. 
 */
class Log implements Singleton;

var float VerboseLevel;
var string LogName;

function Log(string Name)
{
    Super(name);
    LogName = name;
}

/**
* The Singleton interface functions 
*/

simulated function Init()
{
    if (IsServer())
    {
        // Server specific initializations 
    }
    else
    {
        // Client specific initializations 
    }
}

/**
 * Print a debug message based on logging level.
 *
 * @param Message The message to print.
 * @param Level The logging level of the message.
 */
simulated function Debug(string Message, float Level = 1.0)
{
    if (Level >= VerboseLevel)
    {
        log(LogName @ ": " $ Message);
    }
}

/**
 * Set the logging level.
 *
 * @param Level The new logging level.
 */
function SetVerboseLevel(float Level)
{
    VerboseLevel = Level;
}

/**
 * Get the current logging level.
 *
 * @return The current logging level.
 */
simulated function float GetVerboseLevel()
{
    return VerboseLevel;
}

/**
 * Log a warning message.
 *
 * @param WarnMessage The warning message to log.
 */
simulated function Warning(string WarnMessage)
{
    log(LogName @ ": **WARNING** " $ WarnMessage);
}

/**
 * Log an error message.
 *
 * @param ErrorMessage The error message to log.
 */
simulated function Error(string ErrorMessage)
{
    log(LogName @ ": **ERROR** " $ ErrorMessage);
}

defaultproperties
{
    VerboseLevel = 1.0
    LogName = "Log_Class"
}
// This is a complex function that returns a modified array
function array<E>, returns(array<E>) GetModifiedArray(array<E> OriginalArray, E NewValue, int Index)
{
    // Initialize a new array of the same type as OriginalArray
    local array<E> ModifiedArray;
    
    // Loop through each element in OriginalArray
    foreach(E Element in OriginalArray)
    {
        // Check if the loop index is equal to the desired index
        if(Index == i)
        {
            // Add the new value to the modified array
            ModifiedArray.AddItem(NewValue);
        }
        // Add the current element from OriginalArray to the modified array
        ModifiedArray.AddItem(Element);
    }
    
    // Return the modified array
    return ModifiedArray;
}

// Example usage of the function
local array<int> OriginalArray;
// Populate OriginalArray with values

// Call the function to get a modified array with a new value at index 5
local array<int> ModifiedArray = GetModifiedArray(OriginalArray, 10, 5);

// Output the modified array
// Output: {0, 1, 2, 3, 4, 10, 6, 7, 8, 9}
Log("Modified Array: " $ ModifiedArray);
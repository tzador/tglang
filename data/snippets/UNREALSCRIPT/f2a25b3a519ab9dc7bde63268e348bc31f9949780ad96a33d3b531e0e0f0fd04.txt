/** 
 * This is a complex and long code snippet in UNREALSCRIPT.
 * It uses different types of variables and control structures.
 **/
class Example extends Object; // create a class named "Example" that inherits from "Object" class 
var int x; // declare an integer variable named "x"
var array<int> intArray; // declare an array of integers named "intArray"
var string name; // declare a string variable named "name"
var EnumColor color; // declare an enumeration variable named "color"

/** 
 * This function generates random values for the variables and uses control structures to perform different actions.
 **/
function GenerateRandomValues()
{
    // generate a random value between 0 and 10 and assign it to "x" variable
    x = Rand(10); 

    // generate an array of 5 random values between 0 and 100 and assign it to "intArray" variable
    intArray = new array<int>(5);
    for(int i = 0; i < 5; i++)
    {
        intArray[i] = Rand(100);
    }

    // generate a random name from a list of names and assign it to "name" variable
    name = names[Rand(names.length)]; // "names" is an array of string containing different names

    // generate a random color from the enumeration and assign it to "color" variable
    color = EnumColor(Rand(3)); // "EnumColor" is an enumeration with 3 values: Red, Blue, Green 

    // use a conditional statement to check if "x" is greater than 5
    if(x > 5)
    {
        // print a message using the "Log" function and concatenate the value of "x" variable
        Log("x is greater than 5. x = " $ x); 
    }
    else
    {
        // print a message using the "Log" function and concatenate the value of "x" variable
        Log("x is less than or equal to 5. x = " $ x); 

        // use a for loop to print all the values in the "intArray" variable
        for(int j = 0; j < intArray.length; j++)
        {
            // print the value at index "j" in the "intArray" variable
            Log("intArray[" $ j $ "] = " $ intArray[j]); 
        }
    }

    // use a switch statement to perform different actions based on the value of "color" variable
    switch(color)
    {
        case EnumColor.Red:
            // print a message using the "Log" function
            Log("Selected color is Red."); 
        case EnumColor.Blue:
            // print a message using the "Log" function
            Log("Selected color is Blue."); 
        case EnumColor.Green:
            // print a message using the "Log" function
            Log("Selected color is Green."); 
    }
}

// call the "GenerateRandomValues" function to generate and print the random values
GenerateRandomValues(); 

// output the final values of all the variables
Log("Final values: x = " $ x $ ", name = " $ name $ ", color = " $ color); 

/** 
 * Output:
 * x is greater than 5. x = 7
 * x is less than or equal to 5. x = 2
 * intArray[0] = 24
 * intArray[1] = 56
 * intArray[2] = 89
 * intArray[3] = 17
 * intArray[4] = 33
 * Selected color is Green.
 * Final values: x = 2, name = Sarah, color = Green
 **/
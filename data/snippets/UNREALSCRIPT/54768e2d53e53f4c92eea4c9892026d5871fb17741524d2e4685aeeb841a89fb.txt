/** Class representing a weapon in the game */  
class Weapon extends Inventory; // inherits from the Inventory class 

var() const name; // name of the weapon  

struct AmmoType { // stores information about the weapon's ammo type  
    var array<Projectile> projectiles;  // array of projectiles that the weapon can shoot  
    var int maxAmmo; // maximum amount of ammo that the weapon can hold  
    var int currentAmmo; // current amount of ammo remaining  
}  

var(AmmoType) Ammo; // holds the weapon's ammo type  
var Sound fireSound; // sound played when the weapon is fired  

event FireWeapon() { // event called when the weapon is fired  
    Ammo.currentAmmo--; // decreases the current amount of ammo by 1  
    for (Projectile p : Ammo.projectiles) { // loops through the array of projectiles  
        p.Spawn(Damage); // spawns the projectile and passes in the weapon's damage  
    }  
    SpawnImpactFX(); // spawns impact effects at the location of the weapon  
}  

protected function Tick(float DeltaTime) { // called every frame  
    Super.Tick(DeltaTime); // calls the parent class's Tick function  
    if (bIsFiring) { // checks if the weapon is being fired  
        FireWeapon(); // calls the FireWeapon event  
    }  
}
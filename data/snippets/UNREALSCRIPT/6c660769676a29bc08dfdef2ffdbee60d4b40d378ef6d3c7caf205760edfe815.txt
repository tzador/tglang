/** 
* **A complex code snippet in UnrealScript** 
* 
* This snippet is used to create a class named "Inventory 
* 
* @package Inventory 
* @subpackage Items 
*/ 
class Inventory extends Object; 

/** 
* Variables to store information about the item 
*/ 
var const name InventoryName; 
var string InventoryDesc; 
var int InventoryCount; 
var int MaxInventorySize; 

/** 
* Functions to manipulate the item's variables 
*/ 
function SetCount(int NewCount) { 
    InventoryCount = NewCount; 
} 

function SetName(name NewName) { 
    InventoryName = NewName; 
} 

function SetDesc(string NewDesc) { 
    InventoryDesc = NewDesc; 
} 

/** 
* A constructor function to initialize the item's variables 
*/ 
function Inventory(name Name, string Desc, int Count) { 
    Super.Object(); 
    InventoryName = Name; 
    InventoryDesc = Desc; 
    InventoryCount = Count; 
    MaxInventorySize = 10; 
} 

/** 
* A function to check if the inventory is full 
*/ 
function bool IsInventoryFull() { 
    if(InventoryCount >= MaxInventorySize) { 
        return true; 
    } else { 
        return false; 
    } 
} 

/** 
* A function to add items to the inventory 
*/ 
function AddToInventory(int AmountToAdd) { 
    if(IsInventoryFull()) { 
        `Log("Inventory is full. Cannot add items.");` 
    } else { 
        InventoryCount += AmountToAdd; 
    } 
} 

/** 
* A function to remove items from the inventory 
*/ 
function RemoveFromInventory(int AmountToRemove) { 
    `Log("Removing" @ AmountToRemove @ "items from inventory.");` 
    InventoryCount -= AmountToRemove; 
}

/** 
* An event function that runs when the player picks up an item 
* This function calls the AddToInventory and SetCount functions 
*/ 
event OnPickup() { 
    `Log("Player has picked up" @ InventoryName @ ".");` 
    AddToInventory(1); 
    SetCount(InventoryCount); 
} 

/** 
* An event function that runs when the player drops an item 
* This function calls the RemoveFromInventory and SetCount functions 
*/ 
event OnDrop() { 
    `Log("Player has dropped" @ InventoryName @ ".");` 
    RemoveFromInventory(1); 
    SetCount(InventoryCount); 
}
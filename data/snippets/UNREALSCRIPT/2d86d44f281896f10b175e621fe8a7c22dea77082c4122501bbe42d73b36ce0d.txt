/// This is a comment that explains the purpose of the code snippet
class SomeClass extends Object
/// This is a class declaration, where 'SomeClass' is the name of the class and 'extends Object' means it inherits from the 'Object' class
    config(SomeStaticVar = false)
    /// This is a configuration variable declaration, where 'SomeStaticVar' is the name of the variable and 'false' is its default value

    var SomeInstanceVar;
    /// This is an instance variable declaration, where 'SomeInstanceVar' is the name of the variable

    var() SomeDynamicVar;
    /// This is a dynamic variable declaration, where 'SomeDynamicVar' is the name of the variable and the 'var()' keyword indicates that its value can be changed at runtime

    function SomeFunction(SomeParam)
    /// This is a function declaration, where 'SomeFunction' is the name of the function and 'SomeParam' is a parameter that can be passed in when the function is called
    {
        local SomeLocalVar;
        /// This is a local variable declaration, where 'SomeLocalVar' is the name of the variable and 'local' indicates that it is only accessible within this function
        if (SomeStaticVar)
        /// This is a conditional statement, where the code within the if statement will only run if 'SomeStaticVar' is true
        {
            SomeInstanceVar = SomeParam;
            /// This is an assignment statement, where the value of 'SomeParam' is assigned to 'SomeInstanceVar'
        }
        else
        {
            SomeLocalVar = SomeDynamicVar + 1;
            /// This is an assignment statement, where the value of 'SomeDynamicVar' is added to 1 and then assigned to 'SomeLocalVar'
        }
        return SomeLocalVar;
        /// This is a return statement, where the value of 'SomeLocalVar' will be passed back to the code that called the function
    }

    event SomeEvent()
    /// This is an event declaration, where 'SomeEvent' is the name of the event that can be triggered in the code
    {
        log("Event triggered!");
        /// This is a log statement, where the text "Event triggered!" will be printed to the screen when the event is triggered
    }

    state SomeState;
    /// This is a state declaration, where 'SomeState' is the name of the state that the object can be in
    defaultproperties
    /// This is a default properties block that contains the initial values for the class variables
    {
        SomeInstanceVar = SomeStaticVar;
        /// This is an assignment statement, where the value of 'SomeStaticVar' is assigned to 'SomeInstanceVar'
    }
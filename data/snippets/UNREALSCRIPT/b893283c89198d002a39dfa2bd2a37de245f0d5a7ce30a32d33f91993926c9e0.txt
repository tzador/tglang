/** 
 * This is a complex function in UnrealScript that takes an Actor class as a parameter and returns a string.
 *
 * @param Object ObjectParam: The object to perform the function on.
 * @return string: A string representing the object's name and class.
 */
function string ComplexFunction(class<Actor> ObjectParam)
{
	local string OutputString;
	local Actor Object;

	if (ObjectParam != None)
	{
		// Get the object's name and class
		OutputString = ObjectParam.GetFullName();

		// Check if the object is a subclass of Actor
		if ((ObjectParam.IsChildOf(class'Actor')) && !ObjectParam.IsA('Pawn'))
		{
			// Cast the object to an Actor and get its class
			Object = Actor(ObjectParam);
			OutputString = OutputString $ " - Class: " $ Object.GetClass().GetName();
		}
	}

	return OutputString;
}

// Example usage of the function
class MyObject extends Actor;

local string Name;
local string ClassName;

Name = ComplexFunction(MyObject);
// Output: "MyObject - Class: Actor"

ClassName = ComplexFunction(None); // None is a special value in UnrealScript
// Output: ""
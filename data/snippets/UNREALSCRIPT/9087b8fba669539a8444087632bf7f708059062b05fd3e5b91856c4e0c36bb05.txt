// This code snippet creates a class for a custom weapon in the game

class CustomWeapon extends Weapon;

// Properties
var() float FireRate;
var() float AmmoPerShot;
var() Sound FireSound;
var() ParticleSystem MuzzleFlash;

// Functions

// This function handles the firing logic
function Fire()
{
    self.PlaySound(FireSound); // Plays the fire sound
    MuzzleFlash.Spawn(self.Location); // Spawns the muzzle flash particle effect
    for (nat i = 0; i < AmmoPerShot; i++) // Loops through the amount of ammo per shot
    {
        if (self.HasAmmo()) // Checks if the weapon has enough ammo
        {
            self.SpawnProjectile(); // Spawns a projectile
            self.ConsumeAmmo(); // Decrease the ammo count
        }
    }
}

// This function handles the reload logic
function Reload()
{
    if (self.HasAmmo()) // Checks if the weapon has any remaining ammo
    {
        self.Log("Weapon cannot be reloaded while there is still ammo remaining.");
    }
    else
    {
        self.GiveAmmo(); // Gives the weapon more ammo
        self.Log("Weapon has been reloaded.");
    }
}

// This function handles the weapon's impact actions
function ProcessTouch(Actor Other, Vector HitLocation, Vector HitNormal)
{
    Other.TakeDamage(Damage, Instigator, self.Location, HitNormal, class'CustomDamageType', Momentum);
    // Deals damage to the actor that was hit
}
/*
 This code snippet creates a custom player class with the ability to fire projectiles and trigger animations based on player actions.
*/
class CustomPlayer extends Player;

// Variables to hold references to the player's camera and projectile
var CameraPlayer Camera;
var Object PlayerProjectile;

// Variables to store player input
var float MoveForwardSpeed;
var float MoveRightSpeed;
var float LookUpDownSpeed;
var float LookLeftRightSpeed;
var bool FireProjectile;
var bool TriggerAnimation;

// Override the base Player controller to handle player input
function PlayerMove(float DeltaTime)
{
    // Use player input to set the character's movement
    Character.MovementSpeed = MoveForwardSpeed * DeltaTime;
    Character.SideMovementSpeed = MoveRightSpeed * DeltaTime;

    // Use player input to rotate the player's camera
    Camera.SetViewRotation(Camera.Rotation + Rotation(NewRotationRate(LookUpDownSpeed * DeltaTime,LookLeftRightSpeed * DeltaTime,0)));

    // If the player triggers an animation, play the appropriate animation
    if (TriggerAnimation)
    {
        Character.PlayAnim('CustomAnimation');
    }

    // If the player fires the projectile, spawn the projectile in front of the player
    if (FireProjectile && PlayerProjectile != None)
    {
        local PlayerProjectile NewProjectile;
        local Vector SpawnLocation;
        local Rotator SpawnRotation;

        // Get the spawning location and rotation based on the player's camera
        SpawnLocation = Camera.Location + Camera.Rotation.Vector() * 500;
        SpawnRotation = Camera.Rotation;

        // Spawn the projectile using the spawn function and set its direction to match the player's aim
        NewProjectile = Spawn(PlayerProjectile, SpawnLocation, SpawnRotation);
        NewProjectile.SetAim(Camera.Rotation.Vector());
    }
}

// Override the base Player event to set the player's camera and projectile
event PostBeginPlay()
{
    local CameraPlayer NewCamera;

    // Create a new camera and attach it to the player's mesh
    NewCamera = spawn(class'CameraPlayer', self);
    NewCamera.AttachToBone(Character.Mesh, 'head',,, 'Camera');

    // Set the player's camera and projectile as the newly created ones
    Camera = NewCamera;
    PlayerProjectile = class'PlayerProjectile';
}
class MyClass extends Object
{
    var int myInt; //creates a variable to hold an integer value

    simulated function BeginPlay()
    {
        Super.BeginPlay(); //calls the BeginPlay function of the parent class

        myInt = 5; //assigns a value of 5 to the myInt variable

        if (myInt > 0) //checks if myInt is greater than 0
        {
            `Log("[BEGINPLAY] MyInt is greater than 0"); //logs a message to the console
        }
        else
        {
            `Log("[BEGINPLAY] MyInt is less than or equal to 0"); //logs a message to the console
        }

        for (local int i = 0; i < myInt; i++) //loops through from 0 to the value of myInt
        {
            `Log("[BEGINPLAY] Loop iteration: " $ i); //logs the current iteration number to the console
        }
    }

    simulated function DoSomething()
    {
        local MyClass otherObject; //creates a local variable of type MyClass

        otherObject = new(self, "OtherObject"); //instantiates a new object of type MyClass and assigns it to the otherObject variable

        otherObject.myInt = myInt + 10; //accesses and modifies the myInt variable of the otherObject

        `Log("[DOSOMETHING] MyInt value: " $ otherObject.myInt); //logs the myInt value of the otherObject to the console
    }
}

defaultproperties
{
    myInt = 0; //sets the default value for myInt to 0
}
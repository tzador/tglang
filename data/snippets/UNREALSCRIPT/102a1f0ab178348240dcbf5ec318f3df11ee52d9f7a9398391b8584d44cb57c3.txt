class APowerup extends AActor
	annotations:
		- This class represents a powerup in the game
		- Provides a temporary boost to player's abilities
	properties:
		float Duration;
		int Amount;
		ESound PowerupSound;
	function TouchedBy(Actor Other)
		annotations:
			- Executed when the powerup is touched by a player
		related functions:
			- OnPickedUp
		parameters:
			Actor Other
	local variables:
		PlayerController PC;
		PlayerPawn PP;
		interpolators:
			HUDMessageHandler HUD
	
	// Check if the touched actor is a player
	if (Other.IsA('PlayerPawn'))
	{
		// Get the player's controller
		PC = PlayerController(Other.Controller);
		
		// Check if the controller is valid
		if (PC != none)
		{
			// Get the player's pawn
			PP = PlayerPawn(Other);
			
			// Check if the pawn is valid
			if (PP != none)
			{
				// Display a message to the player
				HUD = new class'HudMessageHandler';
				HUD.BeginMessage(PP, 5.0);
				HUD.AddMessage('You picked up a powerup!', 'PowerupCollected', 5.0);
				HUD.EndMessage(PP);

				// Add the powerup's effect to the player
				OnPickedUp(PC, PP); 
				
				// Play the powerup sound
				PlaySound(PowerupSound);
				
				// Destroy the powerup actor
				Destroy();
			}
		}
	}
	function OnPickedUp(PlayerController PC, PlayerPawn PP)
		annotations:
			- Adds the powerup's effect to the player
		parameters:
			PlayerController PC, PlayerPawn PP
		local variables:
			int NewAmount;
		
		// Calculate the new amount based on the existing amount and the current powerup's amount
		NewAmount = PP.PowerLevel + Amount;
		
		// Set the new power level for the player
		PP.PowerLevel = NewAmount;
		
		// Set a timer for the powerup's duration
		SetTimer(Duration, false);
		
		// Print a message to the player
		PC.ConsoleCommand('Say You have been powered up');
	defaultproperties:
		Duration=10.0;
		Amount=1;
		PowerupSound=Sound'UnrealShare.PowerupSound'
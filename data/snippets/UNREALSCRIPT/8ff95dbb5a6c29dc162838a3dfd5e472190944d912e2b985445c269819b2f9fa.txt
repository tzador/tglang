/**
 * This class represents a player character in the game.
 * It contains variables and functions related to the character's stats and abilities.
 */

class PlayerCharacter extends Pawn
    placeable;

// Variables
var() editconst float DefaultHealth; // The character's starting health
var() float CurrentHealth; // The character's current health
var() float MovementSpeed; // The character's movement speed

// Constants
const float MaxHealth = 100; // The character's maximum health
const float JumpHeight = 1000; // The character's jump height

/**
 * Function to initialize the character with default values.
 * This is called when the character is spawned or respawned.
 */
simulated function InitializeCharacter()
{
    DefaultHealth = 50;
    CurrentHealth = DefaultHealth;
    MovementSpeed = 500;
}

/**
 * Function to handle the character's movement.
 * This is called every frame.
 * @param float DeltaTime - the time between frames
 */
simulated function MoveCharacter(float DeltaTime)
{
    local Vector Movement; // The movement vector for the character

    // Get input from player
    Movement.X = GetPlayerInputAxisRaw(movement, LAForward);
    Movement.Z = GetPlayerInputAxisRaw(movement, LARight);

    // Calculate movement speed
    Movement = Normal(Movement) * MovementSpeed * DeltaTime;

    // Move the character
    Velocity += movement;
}

/**
 * Function to handle taking damage.
 * @param float Damage - the amount of damage to take
 */
simulated function TakeDamage(float Damage)
{
    // Subtract damage from current health
    CurrentHealth -= Damage;

    // Check if character is still alive
    if (CurrentHealth <= 0)
    {
        Die();
    }
}

/**
 * Function to handle the character's death.
 */
function Die()
{
    // Set character's health to 0
    CurrentHealth = 0;

    // Play death animation
    PlayAnim('Death');

    // Delay before respawning
    Delay(5, self, 'Respawn');
}

/**
 * Function to handle respawning the character.
 * This is called after a delay from the Die() function.
 */
simulated function Respawn()
{
    // Set character's health back to default
    CurrentHealth = DefaultHealth;

    // Reset character's position
    SetActorLocation(level.PlayerStart.Location);
}

/**
 * Function to handle the character jumping.
 */
simulated function Jump()
{
    // Add velocity to character to make them jump
    Velocity.Z += JumpHeight;

    // Play jump animation
    PlayAnim('Jump');
}
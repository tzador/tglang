/** 
 * This is a custom Class in UnrealScript 
 * It represents a player character in a game
 */

class PlayerCharacter extends UnrealPawn
    placeable;

/** 
 * Properties 
 */
var int MaxHealth; // maximum health of the player
var float MovementSpeed; // speed of the player character
var array<Weapon> Inventory; // array of weapons the player has

/** 
 * Functions 
 */

/** 
 * Function: TakeDamage
 * Description: Applies damage to the player character
 * 
 * @param int Damage - the amount of damage to take
 * @return int - the remaining health of the player
 */
event int TakeDamage(int Damage)
{
    if (Damage > 0)
    {
        MaxHealth -= Damage;
    }

    // Limit health to a minimum of 0
    if (MaxHealth < 0)
    {
        MaxHealth = 0;
    }

    // Return remaining health
    return MaxHealth;
}

/** 
 * Function: MoveForward
 * Description: Moves the player character forward in the world
 * 
 * @param float DeltaTime - the time since the last call to this function
 */
exec function MoveForward(float DeltaTime)
{
    // Calculate the forward vector based on rotation
    vector forwardVector = rotator(rotation).vector();

    // Add forward movement to location
    location += forwardVector * DeltaTime * MovementSpeed;
}

/** 
 * Function: EquipWeapon
 * Description: Adds a weapon to the player's inventory
 * 
 * @param Weapon NewWeapon - the new weapon to add
 */
exec function EquipWeapon(Weapon NewWeapon)
{
    // Add weapon to inventory
    Inventory.AddItem(NewWeapon);
}

/** 
 * Function: GetActiveWeapon
 * Description: Retrieves the currently equipped weapon
 * 
 * @return Weapon - the active weapon
 */
exec function Weapon GetActiveWeapon()
{
    // Check if any weapons are equipped
    if (Inventory.Length > 0)
    {
        // Return the first weapon in the inventory
        return Inventory[0];
    }
    else
    {
        // If no weapons are equipped, return null
        return None;
    }
}

/** 
 * DefaultProperties 
 */
defaultproperties
{
    MaxHealth=100
    MovementSpeed=500.0
}
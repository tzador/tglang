// This function checks if a given actor overlaps with
// a specific collision component and returns a boolean value.
function bool CheckActorCollision(AActor OtherActor, UPrimitiveComponent CollisionComponent)
{
    bool bCollisionDetected; // flag variable for collision detection

    // check if the OtherActor parameter is valid
    if(OtherActor != None)
    {
        // create a temporary variable to store the list of overlapping components
        array<UPrimitiveComponent> OverlappingComponents;

        // get the list of overlapping components from the collision component
        OverlappingComponents = CollisionComponent.OverlapComponents(AActor);

        // loop through the list of overlapping components
        foreach(UPrimitiveComponent CurrentComponent in OverlappingComponents)
        {
            // check if the CurrentComponent is the same as the CollisionComponent
            if(CurrentComponent == CollisionComponent)
            {
                // set the flag to true since a collision was detected
                bCollisionDetected = true;

                // break out of the loop, no need to continue checking
                break;
            }
        }
    }

    // return the value of bCollisionDetected variable
    return bCollisionDetected;
}
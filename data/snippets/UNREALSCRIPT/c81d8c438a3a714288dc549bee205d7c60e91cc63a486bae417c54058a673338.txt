// Define a custom struct type
struct MyStruct
{
	int MyInt;
	string MyString;

	// Constructor function
	function MyStruct(int IntParam, string StringParam)
	{
		MyInt = IntParam;
		MyString = StringParam;
	}

	// Function to calculate the sum of MyInt and a given int value
	function int AddToInt(int Value)
	{
		return MyInt + Value;
	}

	// Function to concatenate MyString with a given string value
	function string AddToString(string Value)
	{
		return MyString $ Value;
	}

	// Static function to compare two MyStruct objects
	static function bool Compare(MyStruct A, MyStruct B)
	{
		if(A.MyInt == B.MyInt && A.MyString == B.MyString)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
}

// Create an instance of MyStruct
MyStruct MyObject;

// Initialize MyObject with values
MyObject = new MyStruct(5, "Hello");

// Call AddToInt function and print the result
` ``UNREALSCRIPT
int Sum = MyObject.AddToInt(10)
` ``

// Call AddToString function and print the result
` ``UNREALSCRIPT
string ConcatenatedString = MyObject.AddToString(" World!")
` ``

// Print both the values using a single string with the help of Concatenate function
` ``UNREALSCRIPT
string MySum = "The sum of " $ Sum $" is " $ ConcatenatedString;
` ``

// Create another instance of MyStruct
MyStruct MyOtherObject;

// Initialize MyOtherObject with different values
MyOtherObject = new MyStruct(5, "Hi");

// Compare MyObject and MyOtherObject
` ``UNREALSCRIPT
bool IsEqual = MyStruct.Compare(MyObject, MyOtherObject);
` ``
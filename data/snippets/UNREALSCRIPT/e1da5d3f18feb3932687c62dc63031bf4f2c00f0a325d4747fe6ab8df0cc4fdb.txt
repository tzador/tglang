SimulationComponent(SimComp)
{
	// SimulationComponent is a class that handles physics simulations

	class SimObject TriggerObject; // variable to hold the object that triggers simulation

	var float SimulationInterval; // interval between simulation updates in seconds

	// event handler for when the simulation component is initialized
	event bool OnInit()
	{
		if (!Super.OnInit())
		{
			return false;
		}

		// check if the owner of this component has a PhysicsBody component
		if (Owner.PhysicsBody == none)
		{
			return false;
		}

		// set the simulation interval to 0.5 seconds
		SimulationInterval = 0.5;

		return true;
	}

	// function to start the simulation
	function StartSimulation(SimObject Obj)
	{
		TriggerObject = Obj; // set the trigger object

		SetTimer(SimulationInterval, true, 'OnSimulationUpdate'); // set a timer to trigger simulation updates at the desired interval

		// iterate through each physics body in the owner and enable simulation
		foreach Owner.PhysicsBody(Body)
		{
			Body.EnableSimulation(true);
		}
	}

	// function to stop the simulation
	function StopSimulation()
	{
		KillTimer('OnSimulationUpdate'); // kill the timer for simulation updates

		// iterate through each physics body in the owner and disable simulation
		foreach Owner.PhysicsBody(Body)
		{
			Body.EnableSimulation(false);
		}
	}

	// event handler for simulation updates
	event OnSimulationUpdate()
	{
		// perform simulation calculations and updates here using TriggerObject and the owner's physics bodies
	}

}
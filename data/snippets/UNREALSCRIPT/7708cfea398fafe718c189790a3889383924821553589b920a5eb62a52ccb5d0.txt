/***
 * This is a complex code snippet in UNREALSCRIPT that creates a basic character class
 * that has different physical and visual characteristics
 ***/

// Defines the base class for all characters in the game
class Character extends Actor
   placeable;

// Define and initialize variables for character's physical and visual characteristics
var int Health; // Stores character's health points
var float Speed=100.0; // Stores character's movement speed
var float JumpHeight=500.0; // Stores character's jump height
var float AttackRange=100.0; // Stores character's attack range
var Texture CharacterTexture; // Stores character's texture

// Initialize a constructor to set initial values for the variables
function CharacterInit()
{
    Health = 100;
    Speed = 100.0;
    JumpHeight = 500.0;
    AttackRange = 100.0;
    CharacterTexture = Texture'CharacterTexture'; // Assigning a specific texture to the character
}

// Define function to control character's movement
function MoveCharacter(Direction: byte)
{
    if(Direction == 0) // Move character left
    {
        Move(-Speed * DeltaTime * vect(1, 0, 0));
    }
    else // Move character right
    {
        Move(Speed * DeltaTime * vect(1, 0, 0));
    }
}

// Define function for character's jump
function CharacterJump()
{
    Velocity.Z = JumpHeight;
}

// Define function for character's attack
function CharacterAttack(Enemy: Pawn)
{
    if(VSize(Enemy.Location - Location) <= AttackRange) // Check if enemy is within attack range
    {
        // Reduce enemy's health points by 10
        Enemy.Health = Enemy.Health - 10;
    }
}

// Define function to change character's texture
function ChangeCharacterTexture(NewTexture: Texture)
{
    CharacterTexture = NewTexture;
    SetTexture(CharacterTexture);
}
class PlayerController extends Actor
 //////////////////
 // Overview:
 //
 // The PlayerController class is the base class for all controllers that
 // are driven by a human player. 
 //
 // Each PlayerController owns a pawn that it controls, and uses the
 // input system and networking to communicate commands from the
 // player to the pawn. The player controller is also responsible for
 // managing the player's camera and HUD.
 // 
 // This class is not instantiated directly, but is instead derived 
 // from by three other classes: Pawn, GamePawn and
 // SkaarjPawn.
 //////////////////
 
 // Begin Player Controller
 extends class PlayerController;
 
 // These are the properties that the Unreal Engine uses when interacting with this class
 
var localized string PressedFire, AltFire, Jumped, CamMoveSensitivity;
var transient GameplayEvents GameEvents;
var config vec3 InitialRotation;
var transient PlayerReplicationInfo PRI;
var transient Pawn LastFailedPawn;
var utPlayerController nextUTPlayerController;
var int NumDeaths;
var int NumFrags;
var int LeaderboardStats[10];
var vector PawnInteractionDest;
var resource string CtrlString;
var bool bBehindView;
var bool bShowLeaderboards;
var bool bIsClosed;
var bool bDropAllWeapon;
var bool bDrawHUD;
var bool bPlayerIsLoggingIn;
var bool bAutoTaunt;
var EditInline config GUI GUI;
var transient GUI GUIWidget;
var GUI.LayoutParams( UI_RENDERSTYLE ).
var client Colour.UniversalColor.Level.OrangeColor PlayerColor;
var() EditorProperty=class credentials.Mod;
var transient class Actor PendingViewTarget;
var config unnormal LoadStatTrak;
var() localized stringQuickChatMenu;
var autoprotected() event PostRender( Canvas Canvas );
var() event InitPlayerReplicationInfo();
var() event BecomeViewTarget();
var() bool event IsControllerInFront();
var class EditorProperty SceneActor PendingSceneActor;
var(Simulated) event UpdateEyeHeights();
var config scriptsequence recentHistoryLevel;
var config Controldata AltWPawn Zero;
var() event CalcLeadingKiller();
var transient class pawn selectedPawn;
var target() event Suicide();
var config FIRE,RONGFeature,RONGSkeleton,RONGWeapons;
var dynamic() event SetBehindView(bool bBehind);
var(Travel) key pernix.NetworkBase UNReaction;
var(Travel) key AuthorizationID UNReactionID;
var transient bool bAutoTauntShown;
 // End Player Controller
class MyActor extends Actor
	/**
	* An example class that inherits from the Actor class
	**/

	// The properties of this actor
	var float Health;
	var float MaxHealth;
	var int Ammo;
	var SkeletalMesh Mesh;
	var Sound SFX_Equip;
	var ParticleSystem Particles;

	// The functions of this actor
	// Function to set the actor's health
	function SetHealth(float NewHealth)
	{
		if(NewHealth > MaxHealth)
		{
			Health = MaxHealth;
		}
		else
		{
			Health = NewHealth;
		}
	}

	// Event called when the actor is spawned into the world
	event PostBeginPlay()
	{
		// Play the equip sound
		PlaySound(SFX_Equip);

		// Spawn the particles
		if (Particles != None)
		{
			Spawn(Particles);
		}
	}

	// Event called when the actor takes damage
	event TakeDamage(int DamageAmount, vector HitLocation, vector Momentum, trace normal DamageType)
	{
		if(DamageAmount > Health)
		{
			Kill(DamageAmount);
			return;
		}

		Health -= DamageAmount;
	}

	// Function to handle death of the actor
	function Kill(int DamageAmount)
	{
		// Hide the actor and disable collision
		SetHidden(true);
		SetCollision(false);

		// Spawn a death effect
		if (Particles != None)
		{
			Spawn(Particles);
		}

		// Check if the actor has a controller and if it's a player
		if (Controller != None && Controller.PlayerReplicationInfo != None)
		{
			// Update the player's score
			Controller.PlayerReplicationInfo.Score += DamageAmount;
		}

		// Destroy the actor after a short delay
		DelayedDestroy(0.5);
	}
};
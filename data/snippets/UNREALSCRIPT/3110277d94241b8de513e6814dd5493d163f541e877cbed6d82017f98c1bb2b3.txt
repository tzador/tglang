class FirstPersonCharacter expands UTPawn
//This is a custom character class for a first person perspective game

//Variable for player health
var int Health;

//Variable for player maximum health
var int MaxHealth;

//Constructor function
function FirstPersonCharacter ()
{
    //Initialize default values
    Super.Init();
    
    //Set starting health to 100
    Health = 100;
    
    //Set maximum health to 150
    MaxHealth = 150;
}

//Function to take damage
//Takes in an integer as the amount of damage taken
function TakeDamage (int DamageAmount, Pawn instigatedBy, vector hitLocation, vector momentum, class<DamageType> DamageType)
{
    //Subtract damage amount from player health
    Health -= DamageAmount;
    
    //Check if health has reached 0
    if (Health <= 0)
    {
        //Call the player's death function
        Die();
    }
}

//Function to heal the player
//Takes in an integer as the amount of health to be healed
function Heal (int HealAmount)
{
    //Add heal amount to player health
    Health += HealAmount;
    
    //Make sure health does not go over maximum health amount
    Health = min(MaxHealth, Health);
}

//Function to handle player death
function Die ()
{
    //Destroy the player controller
    Controller.Destroy();
    
    //Destroy the pawn
    Destroy();
}

//Function to update player's movement and rotation
function UpdateRotation (float DeltaTime)
{
    //Get player's rotation from mouse input
    LocalPlayer(ViewportOwner).Rotation = Rotation(GetBaseAimRotation()) + MouseInput(DeltaTime).Heading;
    
    //Call the super function to handle movement
    Super.UpdateRotation(DeltaTime);
}

//Function to update player's camera position
function UpdateEyeHeight (float DeltaTime)
{
    //Get player's eye height from mouse input
    LocalPlayer(ViewportOwner).EyeHeight = Default.PlayerViewOffset.Z + MouseInput(DeltaTime).Pitch;
    
    //Call the super function to handle camera position
    Super.UpdateEyeHeight(DeltaTime);
}
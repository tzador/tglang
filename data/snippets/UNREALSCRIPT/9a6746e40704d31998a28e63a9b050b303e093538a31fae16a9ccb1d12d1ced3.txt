class MyActor extends Actor
{
    var float myFloat; // variable declaration

    var() config int ConfigInt; // variable declaration with 'config' specifier

    const int MAX_HEALTH; // constant declaration

    enum MyEnum // enum declaration
    {
        Option1,
        Option2,
        Option3
    }

    // function declaration with input parameters and return value
    function int MyFunction(float InFloat, str InString)
    {
        local float tempFloat;

        // for loop
        for (local int i = 0; i < 5; i++)
        {
            tempFloat += InFloat * i; // mathematical operation
        }

        if (InString == "Hello") // if statement
        {
            return 100; // return statement
        }
        else if (InString == "Goodbye") // else-if statement
        {
            return 50;
        }
        else
        {
            return -1;
        }
    }

    // event declaration
    event Tick(float DeltaTime)
    {
        local int num = MyFunction(myFloat, "Hello"); // function call

        // switch statement
        switch(num)
        {
            case 100:
                GEngine.GameMessage("Number is 100"); // function call
                break;
            case 50:
                GEngine.GameMessage("Number is 50");
                break;
            default:
                GEngine.GameMessage("Number is not 100 or 50");
        }

        Super.Tick(DeltaTime); // super keyword to call parent class function
    }
}
class MyActor extends Actor
              // This creates a new class called 'MyActor' that extends the base 'Actor' class.
              // The 'extends' keyword is used to inherit properties and methods from the base class.
{
  var int MaxHealth;    
  var int CurrentHealth;
                     // These are two integer variables declared within the class.
                     // The 'var' keyword is used to define variables in UnrealScript.

  function TakeDamage(int Damage)    
                                    // This is a function called 'TakeDamage' that takes an integer parameter called 'Damage'.
  {
    CurrentHealth -= Damage;         // This subtracts the value of 'Damage' from the current health.

    if (CurrentHealth <= 0)         
                                    // This is an 'if' statement that checks if the current health is less than or equal to 0.
                                    // If it is, the following code will be executed.
    {
      Kill();                       // This function, 'Kill', is called to destroy the actor.
    }
  }

  simulated function Kill()        
                                   // This is a simulated function, which means it will only be run on the server.
  {
    GotoState('Dead');             // This calls the 'GotoState' function and passes in the state name 'Dead'.

    Destroy();                     // This function, 'Destroy', is called to remove the actor from the game.
  }

  state Dead             
                        // This is a state of the actor, which is triggered when the actor is killed.
  {
    event BeginState()   
                        // This is an event function that is called when the actor enters this state.
    {
      Super.BeginState(); 
                          // This is a call to the 'BeginState' function of the base class, in this case the 'Actor' class.
      Spawn(class'HealthPack', Location);   
                                      // This function, 'Spawn', is used to spawn another actor at the given location.
                                      // In this case, a 'HealthPack' actor is spawned at the current location of the actor.
    }

    event EndState()                  
                                      // This is an event function that is called when the actor leaves this state.
    {
      Super.EndState();               
                                      // This is a call to the 'EndState' function of the base class, in this case the 'Actor' class.
      Destroy();                      
                                      // This function, 'Destroy', is called to remove the actor from the game.     
    }
  }
}
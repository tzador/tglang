/**
* This is a custom player class with various attributes and functions
*/

class MyPlayer extends Player;

// define constant variables for player movement

const int MAX_SPEED = 100;
const int MIN_SPEED = 0;
const int ACCELERATION = 5;
const int DECELERATION = 2;

// define variables for player health and stamina

var int Health;
var int Stamina;

// define functions for player actions and abilities

function StartGame()
{
    // initialize player health and stamina
    Health = 100;
    Stamina = 100;

    // set player location and rotation
    SetLocation(StartSpot.Location);
    SetRotation(StartSpot.Rotation);
}

function MoveForward(int Value)
{
    // check if player is sprinting
    if (Stamina > 0 && Value > 0)
    {
        // increase player speed
        Speed = Max(MIN_SPEED, Speed + (Value * ACCELERATION));

        // decrease stamina
        Stamina = Max(MIN_SPEED, Stamina - Value);
    }
    else
        // default movement speed
        Speed = MIN_SPEED;
}

function MoveBackward(int Value)
{
    // decrease player speed
    Speed = Min(MAX_SPEED, Speed - (Value * DECELERATION));
    Stamina = Min(255, Stamina + Value);
}

function Sprint()
{
    // increase player speed
    Speed = Max(MIN_SPEED, MaxSpeed + ACCELERATION);
    Stamina = Min(255, Stamina - ACCELERATION);
}

function Jump()
{
    // make player jump
    Velocity.Z = 500;
}

function TakeDamage(int Damage)
{
    // decrease player health
	Health = Max(0, Health - Damage);

	// check if player's health is below 0
	if (Health <= 0)
		Kill();
}

function Kill()
{
    // set player to dead state
    SetPlayerState('Dead');

    // reset player's health and stamina
    Health = 100;
    Stamina = 0;

    // play death animation and sound
    PlayDeathAnimation();
    PlayDeathSound();
}

// define event for when player collides with an object

event HitObject(Actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal)
{
    // check if object is harmful and damage player accordingly
	if (OtherComp.IsHarmfulObject())
		TakeDamage(OtherComp.DamageAmount());
}
function float CalculateDistance(Vector Start, Vector End, optional float Scale)
{
    local float Distance;
    Distance = VSize((End - Start) * Scale); // uses built-in VSize function to calculate magnitude of vector difference
    return Distance;
}

class myActor extends Actor
    placeable; // set this class as placeable in level editor

var int MyInt; // declare a variable of type int (integer)
var string MyString; // declare a variable of type string
var bool MyBool; // declare a variable of type bool (boolean)

defaultproperties // special tag for defining properties of actor
{
    MyInt=0; // set default value for MyInt variable to be 0
    MyString="Hello World"; // set default value for MyString variable to be "Hello World"
    MyBool=true; // set default value for MyBool variable to be true
}

event PostBeginPlay() // special event that is executed when the actor begins playing in the world
{
    local float Distance;
    Distance = CalculateDistance(Location, TargetActor.Location, 2.0); // calls CalculateDistance function and stores result in Distance variable

    if(Distance > 1000) // conditional statement, executes following code if Distance is greater than 1000
    {
        DisplayMessage("Far away"); // calls built-in DisplayMessage function to print "Far away" to screen
    }
    else // executes following code if Distance is less than or equal to 1000
    {
        DisplayMessage("Close"); // calls built-in DisplayMessage function to print "Close" to screen
    }
}

defaultproperties // special tag for defining properties of actor
{
    InputKey=A; // define an input key for this actor, in this case the 'A' key
    InputAction=Pressed; // define the action (pressed, released, etc.) that triggers the input event
    InputEvent=IE_Pressed; // define the type of input event (pressed, released, held, etc.)
}

event Input(AActor EventInstigator, float ButtonValue)
{
    if(ButtonValue > 0) // conditional statement, executes following code if ButtonValue is greater than 0
    {
        DisplayMessage("Button pressed"); // calls built-in DisplayMessage function to print "Button pressed" to screen
    }
    else // executes following code if ButtonValue is less than or equal to 0
    {
        DisplayMessage("Button released"); // calls built-in DisplayMessage function to print "Button released" to screen
    }
}
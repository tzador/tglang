// Example code snippet in UNREALSCRIPT

class MyActor extends Object native(notplaceable)
	// 'class' keyword is used to define a new class in UNREALSCRIPT. 
	// The class name is MyActor and it extends from the Object class.
	// 'native' keyword specifies that this class will be compiled natively rather than being translated to C++.

	// Defining variables:
	var() float MyFloat; // Defines a public variable named MyFloat of type float.
	const int MyInt = 5; // Defines a public constant named MyInt with a default value of 5.
	private int MyPrivateInt; // Defines a private variable named MyPrivateInt of type int.

	// Defining functions:
	function SetMyPrivateInt(int NewValue)
	{
		MyPrivateInt = NewValue; // Sets the value of MyPrivateInt to the NewValue passed in.

		// Conditional statement:
		if (NewValue > 10)
		{
			// 'log' keyword is used to print a message to the console.
			log("NewValue is greater than 10!");
		}
		else
		{
			log("NewValue is less than or equal to 10!");
		}

		// Looping through an array:
		local array<int> MyIntArray; // Defines a local array named MyIntArray of type int.
		MyIntArray.Insert(5); // Inserts the value 5 into the array.
		MyIntArray.Insert(10); // Inserts the value 10 into the array.

		// 'foreach' loop is used to iterate through all the elements in the array.
		foreach (MyIntValue in MyIntArray)
		{
			log("Value in MyIntArray is: " $ string(MyIntValue)); // 'string' function is used to convert the int value to a string.
		}

		// 'switch' statement:
		switch(NewValue)
		{
			case 0:
				log("NewValue is equal to 0!");
			case 1:
				log("NewValue is equal to 1!");
			default:
				log("NewValue does not match any cases!");
		}
	}

	// Defining events:
	event MyEvent(int MyParam); // Defines a public event named MyEvent with an int parameter.

	defaultproperties
	{
		MyActor = Class'MyPackage.MyActor' // Sets the default value for the MyActor variable.
	}

}; // End of class definition.
// Define class named PlayerWeapon
class PlayerWeapon extends Object;

// Define properties
var() WeaponSocketName; // Name of the socket on the player mesh where the weapon will be attached
var() int MaxAmmo; // Maximum amount of ammo the weapon can hold
var() int Damage; // Amount of damage the weapon can deal
var() float FireRate; // Delay between shots in seconds
var() float FireRange; // Maximum range of the weapon

// Define functions
// Function to initialize weapon properties
function InitWeapon()
{
    // Set default values
    WeaponSocketName = "WeaponSocket";
    MaxAmmo = 10;
    Damage = 10;
    FireRate = 0.5;
    FireRange = 1000;
}

// Function to handle firing
function Fire()
{
    // Check if there is enough ammo to fire
    if (MaxAmmo > 0)
    {
        // Spawn projectile at weapon's location and rotation
        local Projectile ProjectileRef;
        ProjectileRef = Spawn(class'Projectile',self,,Location,Rotation);

        // Decrease ammo by 1
        MaxAmmo--;

        // Check if projectile was spawned successfully
        if (ProjectileRef != None)
        {
            // Set projectile properties
            ProjectileRef.Damage = Damage;
            ProjectileRef.FireRange = FireRange;
        }
    }
}

// Function to handle reloading
function Reload()
{
    // Set ammo to maximum
    MaxAmmo = 10;
}

// Function to attach weapon to player mesh
function AttachWeapon()
{
    // Get reference to player mesh
    local SkeletalMeshComponent MeshRef;
    MeshRef = Mesh;

    // Attach weapon to socket on player mesh
    MeshRef.AttachToSocket(WeaponSocketName,self);
}

// Function to detach weapon from player mesh
function DetachWeapon()
{
    // Get reference to player mesh
    local SkeletalMeshComponent MeshRef;
    MeshRef = Mesh;

    // Detach weapon from socket on player mesh
    MeshRef.DetachFromSocket(WeaponSocketName,self);
}

// Function to handle player input for firing
function InputActionFire()
{
    // Call Fire function
    Fire();
}

// Function to handle player input for reloading
function InputActionReload()
{
    // Call Reload function
    Reload();
}

// Function to initialize player input bindings
function InitInputBindings()
{
    // Bind Fire action to Fire input event
    SetInputKeyBinding(InputKey(IPGI_A,FIRE),InputActionFire);

    // Bind Reload action to Reload input event
    SetInputKeyBinding(InputKey(IPGI_X,RELOAD),InputActionReload);
}
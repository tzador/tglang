/**
 * Object: MyObject
 * Desc: This is a custom object with various class variables and functions
 */
class MyObject extends Object;

var int myInt; // An integer variable
var array<MyObject> myObjectArray; // An array of MyObject objects
var float myFloat = 23.5; // A float variable with a default value of 23.5
var bool myBool; // A boolean variable

/** 
 * Function: Init
 * Desc: Initializes the MyObject variables
 */ 
function Init()
{
    myInt = 10; // Setting myInt to a value of 10
    myBool = true; // Setting myBool to true

    for (local int i = 0; i < 5; i++) // Looping through 5 times
    {
        local MyObject object; // Creating a local MyObject variable
        object.myInt = myInt * i; // Setting object's myInt variable to current value of myInt * i
        myObjectArray[i] = object; // Adding object to myObjectArray
    }

    local float result = DoCalculation(myFloat, myInt); // Calling the DoCalculation function and storing the result in a local variable

    if (result > 50.0) // Checking if result is greater than 50
    {
        myBool = false; // Setting myBool to false
    }
}

/** 
 * Function: DoCalculation
 * Desc: Performs a calculation using the given parameters and returns the result
 * @param float param1 - A float parameter
 * @param int param2 - An integer parameter
 * @return float - The result of the calculation
 */ 
function DoCalculation(float param1, int param2)
{
    local float result = param1 * param2; // Performing the calculation
    return result; // Returning the result
}
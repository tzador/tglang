/**
@brief A custom struct representing a character in a game
*/
struct MyCharacter extends Actor native;
 
/** @brief Variable representing the character's name */
var const(Name) string CharacterName;
 
/** @brief Variable representing the character's current health */
var int CurrentHealth;
 
/** @brief Variable representing the character's maximum health */
var int MaxHealth;
 
/** @brief Function to set the character's name and health
@param NewName - the new name for the character
@param NewHealth - the new maximum health for the character
*/
function UpdateCharacterInfo(string NewName, int NewHealth)
{
    CharacterName = NewName;
    MaxHealth = NewHealth;
    CurrentHealth = NewHealth;
}
 
/** @brief Function to decrease the character's health
@param Damage - the amount of health to decrease
*/
function TakeDamage(int Damage)
{
    CurrentHealth -= Damage;
}
 
/** @brief Function to increase the character's health
@param HealAmount - the amount of health to increase
*/
function Heal(int HealAmount)
{
    CurrentHealth = min(MaxHealth, CurrentHealth + HealAmount);
}
 
/** @brief Event called when the player interacts with the character */
event Interact(PlayerController InteractingPlayer)
{
    // display a message to the player
    `Log("You interacted with " $ CharacterName);
}
 
/** @brief Function called to check if the character is still alive
@return true if the character's current health is greater than 0, false if not
*/
function bool IsAlive()
{
    return CurrentHealth > 0;
}
 
/** @brief Function called to get the character's current health
@return the current health of the character
*/
function int GetHealth()
{
    return CurrentHealth;
}
 
/** @brief Function called to get the character's maximum health
@return the maximum health of the character
*/
function int GetMaxHealth()
{
    return MaxHealth;
}
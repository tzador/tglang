/** Start of code snippet
 * Function modifier that limits the function to only execute on the local machine
 * @param bLocalOnly - if true, function will only execute on the local machine
 */
private event LocalOnly(bool bLocalOnly)
{
    if (bLocalOnly && WorldInfo.NetMode != NM_Standalone)
    {
        // return if not running on a local machine
        return;
    }

    // execute function code here
    // ...
}

/** Custom struct for storing player data */
struct PlayerInfo
{
    var string PlayerName; // player's name
    var int PlayerLevel; // player's level
}

/** Custom event for updating a player's level on the server */
event UpdatePlayerLevel(string PlayerName, int NewLevel)
{
    // iterate through all players
    for (local PlayerReplicationInfo PRI : Level.PlayerControllerList)
    {
        // check if player name matches
        if (PRI.PlayerName == PlayerName)
        {
            // update player's level
            PRI.PlayerLevel = NewLevel;
            break;
        }
    }

    // broadcast the updated player info to all clients
    foreach (PRI : Level.PlayerControllerList)
    {
        // cast to custom player info struct
        local PlayerInfo Info = PlayerInfo(PRI.PlayerName, PRI.PlayerLevel);
        // send RPC to update client's player info
        PRI.UpdatePlayerInfo(Info);
    }
}

/** Custom remote procedure call for updating player info on the client */
remote event UpdatePlayerInfo(PlayerInfo Info)
{
    // update player's info on the client side
    PlayerName = Info.PlayerName;
    PlayerLevel = Info.PlayerLevel;
}

/** End of code snippet */
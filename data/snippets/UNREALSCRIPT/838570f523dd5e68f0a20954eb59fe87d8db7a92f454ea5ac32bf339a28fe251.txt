class MyCharacter extends GamePawn; // Defines a new class named MyCharacter which inherits properties from the GamePawn class
var float Health; // Declares a float variable named Health
var float MaxHealth; // Declares a float variable named MaxHealth
var float Stamina; // Declares a float variable named Stamina
const float MaxStamina = 1000; // Declares a constant float variable named MaxStamina with a value of 1000
var int Ammo[10]; // Declares an integer array named Ammo with a size of 10
temp int CurrentWeaponIndex; // Declares a temporary integer variable named CurrentWeaponIndex
var(Weapon) class<Weapon> WeaponClass; // Declares a variable named WeaponClass and specifies that it must be a child class of the Weapon class
var(Weapon) array<class<Weapon>> AvailableWeapons; // Declares an array of weapon classes named AvailableWeapons
function SetHealth(float NewHealth) // Defines a function named SetHealth which takes a float variable as a parameter
{
	if (NewHealth > MaxHealth) // Checks if the NewHealth parameter is greater than the MaxHealth variable
	{
		NewHealth = MaxHealth; // If true, set the NewHealth parameter to the maximum value allowed by MaxHealth variable
	}

	Health = NewHealth; // Sets the Health variable to the NewHealth parameter
}
defaultproperties // Specifies the default values for the class properties
{
	Health=100;
	MaxHealth=100;
	Stamina=MaxStamina;
	CurrentWeaponIndex=0;
	WeaponClass=class'RocketLauncher';
	AvailableWeapons[0]=class'SniperRifle';
	AvailableWeapons[1]=class'GrenadeLauncher';
	AvailableWeapons[2]=class'Shotgun';
	AvailableWeapons[3]=class'PlasmaRifle';
	AvailableWeapons[4]=class'AssaultRifle';
	AvailableWeapons[5]=class'RocketLauncher';
	AvailableWeapons[6]=class'FlakCannon';
	AvailableWeapons[7]=class'FusionCannon';
	AvailableWeapons[8]=class'ShockRifle';
	AvailableWeapons[9]=class'ImpactHammer';
}
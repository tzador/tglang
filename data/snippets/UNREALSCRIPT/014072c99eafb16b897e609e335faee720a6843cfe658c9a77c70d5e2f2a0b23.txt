// This code snippet demonstrates a custom class called 'MyCustomClass'
class MyCustomClass extends Actor
    // Variables
    var int MyInt;
    var float MyFloat;
    var string MyString;

    var array<int> MyIntArray;

    // Functions
    // Constructor - initializes variables
    function Init()
        MyInt = 5; // Assign a value of 5 to MyInt
        MyFloat = 6.5; // Assign a value of 6.5 to MyFloat
        MyString = "Hello World"; // Assign a string value 'Hello World' to MyString
        MyIntArray[0] = 1; // Assign a value of 1 to index 0 of MyIntArray
        MyIntArray[1] = 2; // Assign a value of 2 to index 1 of MyIntArray
        MyIntArray[2] = 3; // Assign a value of 3 to index 2 of MyIntArray
    defaultproperties
    {
        Begin Object Class=DynamicActorsComponent Name=MyComponent
        End Object
        Components.Add(MyComponent)
    }
    // This function multiplies MyInt by a given value and returns the result
    function int MultiplyInt(int value)
        return MyInt * value;
    // This function adds MyFloat to all elements in MyIntArray
    function AddFloatToMyIntArray(float value)
        for (i = 0; i < MyIntArray.Length; i++)
        {
            MyIntArray[i] += value;
        }
        // Print the new values of MyIntArray
        for (j = 0; j < MyIntArray.Length; j++)
        {
            `Log("New value of MyIntArray["$j"] is: "$MyIntArray[j]"");
        }
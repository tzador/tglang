class Weapon extends Actor
  config(global) const LevelUpRankLevels;
  // The weapon class inherits from the Actor class,
  // and has a config variable called LevelUpRankLevels
  // which is an array of integers with a global scope.

  var() private WeaponStatBase WeaponStats[];
  // A private array of WeaponStatBase structs called WeaponStats,
  // which holds the custom stats for the weapon.

  function GetWeaponStats(index : int) const returns(WeaponStatBase);
  // A function that returns a WeaponStatBase struct and takes an integer as an argument.

  function GetMaxAmmo() const returns(int);
  // Another function that returns an integer,
  // representing the maximum ammo capacity for the weapon.

  event OnFire(Vector Location, Vector Direction);
  // A custom event called OnFire that takes a 3D vector for the location
  // and a direction vector for the firing direction.

  state Active
  {
    Begin:
      bNoDelete = true; // Disables the deletion of the weapon when dropped.
      SetTimer(0.2, false, 'CheckAmmo'); // Sets a timer to check ammo every 0.2 seconds.
    Main:
      // The main state of the weapon,
      // where the bulk of the functionality and logic lies.
      SetTimer(0.1, true, 'RecoilHandling'); // Sets a timer to handle recoil every 0.1 seconds.
      if(Health <= 0) // If the weapon runs out of health,
      {
        GotoState('Inactive'); // it goes into the Inactive state.
      }
    End:
      ClearTimer(); // Clears all current timers.
  }

  state Inactive
  {
    Begin:
      bNoDelete = false; // Allows the weapon to be deleted when dropped.
    Main:
      // An empty state,
      // as the weapon has no functionality when it is inactive.
  }

  function RefillAmmo();
  // A simple function to refill the weapon's ammo to full capacity.

  simulated function TakeDamage(int DamageAmount);
  // A simulated function that takes an integer as the damage amount
  // and decreases the weapon's health accordingly.
defaultproperties
{
  LevelUpRankLevels[0] = 5; // Sets the first level up rank level to 5.
  LevelUpRankLevels[1] = 10; // Sets the second level up rank level to 10.
  WeaponStats[0].Damage = 25.0; // Sets the base damage for the first weapon stat.
  WeaponStats[0].Accuracy = 0.8; // Sets the base accuracy for the first weapon stat.
  WeaponStats[0].Range = 500.0; // Sets the base range for the first weapon stat.
  WeaponStats[1].Damage = 35.0; // Sets the base damage for the second weapon stat.
  WeaponStats[1].Accuracy = 0.7; // Sets the base accuracy for the second weapon stat.
  WeaponStats[1].Range = 600.0; // Sets the base range for the second weapon stat.
}
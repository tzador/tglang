// This is a comment in UNREALSCRIPT

class MyActor extends Actor;

var() int SomeInt;

// This function assigns a value to SomeInt
state TickState()
{
    SomeInt = 5;
}

// This is a custom event that takes in a string parameter
event MyEvent(string SomeString)
{
    `log("Event received: " @ SomeString);
}

// This is a simulated event that is called remotely
simulated event RemoteEvent()
{
    // Function to get the player controller of the local player
    local PC = GetPlayerController();

    // Call the MyEvent event on the remote player
    PC.MyEvent("Hello from the remote player!");
}

// This is a replicated variable that can be retrieved by all players
var() replication bool bIsVisible;

// Function to toggle the visibility of the actor
function ToggleVisibility()
{
    // Set the bIsVisible variable based on its current value
    bIsVisible = !bIsVisible;

    // Toggle the actor's visibility based on the value of bIsVisible
    if (bIsVisible)
    {
        self.SetActorHiddenInGame(false);
        self.SetActorEnableCollision(true);
    }
    else
    {
        self.SetActorHiddenInGame(true);
        self.SetActorEnableCollision(false);
    }
}

// Main function that is called when the actor is spawned
simulated function PostBeginPlay()
{
    Super.PostBeginPlay();

    // Call TickState on a timer of 1 second
    SetTimer(1.0, false, name(TickState), 1.0);

    // Call ToggleVisibility on a timer of 5 seconds
    SetTimer(5.0, false, name(ToggleVisibility), 1.0);
}
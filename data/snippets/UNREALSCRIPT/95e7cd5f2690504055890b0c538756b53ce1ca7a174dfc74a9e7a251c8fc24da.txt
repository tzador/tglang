//This is a commented line

//A custom function that takes in two integers and returns the sum
// ; is used to end the statement
function int Sum(int num1, int num2)
{
    `Returns the sum of num1 and num2`
    
    return num1 + num2; 
}

//A global variable declared with type bool and assigned a value of true
var bool gIsGameRunning = true; 

//A class that inherits from the default UnrealScript HUD class
class MyHUD extends HUD;

    //A protected variable declared with type MyPlayerController
    protected variable MyPlayerController myPC;
    
    //A protected function that displays a win message on the screen
    protected function WinMessage()
    {
        //Create a new canvas to draw on
        local Canvas canvas;
        
        //Set the canvas to the correct viewport
        canvas = Canvas.SetPosition(myPC.SceneViewport);
        
        //Draw the message on the screen
        canvas.DrawText("Congratulations! You win!", 100, 100, class 'GameFont', 5.0, true, Scale);
    }
    
    //A protected function that is triggered when the game is started
    protected function GameStart()
    {
        //Call the parent function first
        Super.GameStart();
        
        //Store a reference to the player controller
        myPC = MyPlayerController(MyController);
    }
    
    //This is a loop that runs continuously while the game is running
    //The code inside the loop is indented with tabs
    while(gIsGameRunning)
    {
        //Check if the player has reached the end of the level
        if(myPC.ReachedEndOfLevel)
        {
            //Display the win message on the screen
            WinMessage();
            
            //End the game by setting gIsGameRunning to false
            gIsGameRunning = false;
        }
    }
    
    //A protected function that is triggered when the game is ended
    protected function GameEnd()
    {
        //Call the parent function first
        Super.GameEnd();
        
        //Reset the game by setting gIsGameRunning back to true
        gIsGameRunning = true;
        
        //Reset the player controller
        myPC.Reset();
    }

//This annotation is used to end the code snippet
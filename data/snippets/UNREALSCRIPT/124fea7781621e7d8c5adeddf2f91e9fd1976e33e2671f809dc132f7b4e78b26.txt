class MyActor extends Actor;
 
// This is a comment
 
// Variables (declaration and initialization)
var int MyInt;
var string MyString;
var rotation MyRotation(45.0, 0.0, 0.0);
var vector MyVector(100.0, 50.0, 0.0);
var bool MyBool(True);
var array<int> MyArray;

// Functions
function AddVariable(int value)
{
	MyInt += value;
}
 
function MoveActor(vector location)
{
	SetActorLocation(location);
}
 
// Event function
event Touch(Actor Other, PrimitiveComponent Primitive)
{
	// Conditional statement
	if(MyInt > 10)
	{
		MoveActor(MyVector);
	}
	else
	{
		AddVariable(5);
	}
	
	// Loop statement
	for (int i = 0; i < MyArray.Length; i++)
	{
		// Array access and assignment
		MyArray[i] = MyInt * i;
	}
}
 
// PostBeginPlay event
event PostBeginPlay()
{
	// Call function
	AddVariable(10);
	 
	// Object creation and assignment
	local MyActor OtherActor;
	OtherActor = Spawn(class'MyActor', self,, MyRotation);
	 
	// Event registration and implementation
	Event TouchEvent;
	TouchEvent.Object = self;
	TouchEvent.Function = name(Touch);
	AddEvent(rM_Trigger, TouchEvent);
}
 
// DefaultProperties declaration
defaultproperties
{
	SimulatedProxyComponent = MyStaticMeshComponent'WallPart_1'
	CollideActors = true
	Begin Object Class = MyStaticMeshComponent; 
	CanBlockNavigation = true 
	End Object
 
	Components.Add(SimulatedProxyComponent) 
	Components.Add(class'MyStaticMeshComponent', name'RootComponent') 
 
	CollisionComponent = MyStaticMeshComponent'WallPart_1' 
	SelectionSound = SoundCue'PickS'
}
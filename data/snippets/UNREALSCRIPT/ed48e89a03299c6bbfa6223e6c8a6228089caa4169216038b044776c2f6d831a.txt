///// BEGIN CLASS DECLARATION /////

/// Represents a custom game mode that extends the base game mode class.
class MyCustomGameMode extends GameInfo;

/// List of properties for this custom game mode.
var() int MaxPlayers;
var() float TimeLimit;

/// List of functions for this custom game mode.
/// Initialize the game mode by setting initial values.
simulated function InitGame ( string Options, out string ErrorMessage )
{
    Super.InitGame( Options, ErrorMessage );

    // Parse options string to retrieve maximum number of players
    local string MaxPlayersString;
    MaxPlayersString = Options.Split("?MaxPlayers=")[1].Split("?")[0];
    MaxPlayers = strtoi(MaxPlayersString);

    // Set default time limit of 10 minutes
    TimeLimit = 10.0;

    // Log initialization message
    log("MyCustomGameMode initiated with maximum players: " $ MaxPlayers $
         "and time limit: " $ TimeLimit, 'Init');

    /// Add custom logic here for initializing any other game mode settings
}

/// Called when a player joins the game.
function PreBeginPlay()
{
    Super.PreBeginPlay();

    // Set game mode specific properties
    Game.MaxPlayers = MaxPlayers;
    Game.TimeLimit = TimeLimit;

    // Log message for player joining
    log("Player joined the game with maximum players set to: " $ MaxPlayers, 'PlayerJoin');
}

/// Called when a player leaves the game.
function PostBeginPlay()
{
    Super.PostBeginPlay();

    // Add custom logic here for handling player leaving the game
}

/// Called when the game ends.
function EndGame( class<GameReplicationInfo> GameReplicationInfo )
{
    Super.EndGame(GameReplicationInfo);

    // Get the game mode's game info and cast to our custom game info class
    local MyCustomGameInfo CGI;
    CGI = MyCustomGameInfo(GameReplicationInfo.Game);

    // Log message about who won the game
    log("Game ended. " $ CGI.Winner.PlayerName $ " won the game!", 'EndGame');
}

///// END CLASS DECLARATION /////
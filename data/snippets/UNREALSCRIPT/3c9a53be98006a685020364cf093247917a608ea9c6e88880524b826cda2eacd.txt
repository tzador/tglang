// Define a class called "PlayerCharacter" that inherits from the built-in Unreal class "Pawn"
class PlayerCharacter extends Pawn
		
/* Define a variable "playerName" of type "string" and set its default value to "Player 1" */
var string playerName = "Player 1";

/* Define a variable "playerScore" of type "int" and set its default value to 0 */
var int playerScore = 0;

// Define a function called "TakeDamage" that takes in a parameter "damageAmount" of type "int"
function TakeDamage(int damageAmount)
{
	// Subtract the damage amount from the player's score
	playerScore -= damageAmount;

	// If the player's score goes below 0, set it back to 0
	if (playerScore < 0)
	{
		playerScore = 0;
	}

	// Print a message to the screen showing the player's new score
	GEngine.GameViewportClient.AddViewportMessage(Transient, "Player " $ playerName $ "'s score is now " $ playerScore, 'Player Score', 5.0f);
}

// Define a function called "IncreaseScore" that takes in a parameter "points" of type "int"
function IncreaseScore(int points)
{
	// Add the points to the player's score
	playerScore += points;

	// Print a message to the screen showing the player's new score
	GEngine.GameViewportClient.AddViewportMessage(Transient, "Player " $ playerName $ " has gained " $ points $ " points. Their new score is " $ playerScore, 'Player Score', 5.0f);
}

// Declare a variable "playerCharacter" of type "PlayerCharacter"
PlayerCharacter playerCharacter;

// Create a new instance of the "PlayerCharacter" class and assign it to the "playerCharacter" variable
playerCharacter = new class'PlayerCharacter';

// Set the player's name to "John Smith"
playerCharacter.playerName = "John Smith";

// Call the "IncreaseScore" function, passing in a value of 50
playerCharacter.IncreaseScore(50);

// Call the "TakeDamage" function, passing in a value of 25
playerCharacter.TakeDamage(25);
// Define a class called "Monster"
class Monster extends Pawn;
    
    // Declare private variables of type "string" and "int"
    private string Name;
    private int Health;
    
    // Declare a function to set the name and health of the monster
    function SetMonsterInfo(string NewName, int NewHealth)
    {
        Name = NewName;
        Health = NewHealth;
    }
    
    // Define a function to attack a player
    delegate Player(Player P);
    simulated function Attack(Player P) : Player
    {
        // Check if player is alive and within range of attack
        if (P != None && (VSize(P.Location - Location) < 200))
        {
            // Reduce player's health by 10
            P.Health -= 10;
            
            // Print message to console
            `Monster ${Name} attacked Player ${P.Name}`;
            
            // Return updated player
            return P;
        }
        // If player is not within range or is dead, return None
        else
        {
            return None;
        }
    }
    
    // Override the default "Tick" function
    simulated event Tick(float DeltaTime)
    {
        // Call parent's Tick function
        Super.Tick(DeltaTime);
        
        // Print message to console
        `Monster ${Name} is alive and has ${Health} health remaining`;
    }
    
    // Define an event to be called when the monster dies
    event MonsterDied()
    {
        // Destroy the monster
        Destroy();
        
        // Print message to console
        `Monster ${Name} has been slain`;
    }
    
    // Define an event to be called when the monster takes damage
    event TakeDamage(int DamageAmount, Controller EventInstigator, vector HitLocation, vector Momentum, class<DamageType> DamageType)
    {
        // Subtract damage from health
        Health -= DamageAmount;
        
        // Check if health is less than or equal to 0
        if (Health <= 0)
        {
            // Call the "MonsterDied" event
            MonsterDied();
        }
    }
    
    // Define a function to spawn a new monster of a specified class
    static function SpawnMonster(class<Monster> MonsterClass, vector SpawnLocation, rotator SpawnRotation)
    {
        // Spawn the monster and store the reference
        local Monster NewMonster;
        NewMonster = Spawn(MonsterClass, none, '', SpawnLocation, SpawnRotation, , true);
        
        // Set the monster's name and health
        NewMonster.SetMonsterInfo("New Monster", 100);
        
        // Return the spawned monster
        return NewMonster;
    }

// Create a new instance of the "Monster" class
Monster NewMonster;

// Spawn a new monster of the "Monster" class at the specified location and rotation
NewMonster = SpawnMonster(class'Monster', vector(100, 0, 0), rotator(0, 0, 0));

// Attack a player with the spawned monster
NewMonster.Attack(player1);

// Print message to console after 5 seconds
SetTimer(5, false, function() { `5 seconds have passed` });
/*
This is a complex code snippet in UnrealScript, 
used for spawning and managing a particle system. 
It includes annotations for clarity and explanation.*/

class ParticleManager extends Info

/*First we define a class called ParticleManager, 
which extends the Info class. This means 
that it is a type of object that provides information. 
We can use it to store and manage particle systems. */
	
	//Define properties of the ParticleManager class:
	
    var() ParticleSystem[] ParticleSystems; 
    //An array of ParticleSystems will store all the different particle systems used by this ParticleManager

    var() int MaxParticles; 
    //MaxParticles specifies the maximum number of particles that can be active at one time

    var const MaxParticlesDeviation; 
    //MaxParticlesDeviation is a constant that controls the randomness of the number of particles spawned
	
	
    //The "begin play" function is called when the object is first created
    function BeginPlay()
    {
	    Super.BeginPlay(); //Call the BeginPlay function of the Info class first
	    
	    //Create and spawn all the particle systems defined in the ParticleSystems array
	    foreach ParticleSystems[0] in ParcielSystems do
	    {
		    //Spawn a new instance of this particle system and assign it to a local variable
		    local ParticleSystem PSystem;
		    PSystem = Spawn(class'ParticleSystem',,,,Self,,);
		    
		    //Add the particle system to the level (which will then be visible in the game)
		    PSystem.AddToLevel(Level);
		    
		    //Set the particle system's properties
		    PSystem.MaxParticles = MaxParticles * FRand(MaxParticlesDeviation); //Randomly set the max particles within the deviation
		    PSystem.SetLifeTime(3); //Set the lifetime of each particle to 3 seconds
		    
		    //Start the particle system
		    PSystem.ActivateSystem();
	    }
    }

    //The "Destroy" function is called when the object is destroyed
    //This is where we clean up and destroy all the particle systems belonging to this ParticleManager
    function Destroy()
    {
        Super.Destroy(); //Call the Destroy function of the Info class first

        //Go through each particle system and destroy it
        foreach ParticleSystems[0] in ParcielSystems do
        {
	        //Get a reference to the particle system
	        local ParticleSystem PSystem;
	        PSystem = ParcielSystems[0];
	        
	        //Destroy the particle system
	        PSystem.Destroy();
        }
    }
    
defaultproperties
{
    //Define default values for the properties
    MaxParticles=500;
    MaxParticlesDeviation=0.5;
}
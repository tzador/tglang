// This code snippet creates a player class with various attributes and functions

class Player extends Object // defines the class as a child of the Object class
    placeable; // makes the class placeable in the game world

var() int Health; // declares a variable to store the player's health
var() bool bIsAlive; // declares a bool variable to check if the player is alive
var() float MovementSpeed; // declares a variable to store the player's movement speed

var() Inventory PlayerInventory; // declares a variable to store the player's inventory, which is an instance of the Inventory class

// function to set the player's health
function SetPlayerHealth(int NewHealth)
{
    Health = NewHealth; 
    // sets the player's health to the value passed into the function
}

// function to check if the player is alive
function bool IsPlayerAlive()
{
    if (Health > 0) // checks if player's health is above 0
    {
        return true; // returns true if player is alive
    }
    else 
    {
        return false; // returns false if player is dead
    }
}

// function to add an item to the player's inventory
function AddItemToInventory(Item NewItem)
{
    PlayerInventory.AddItem(NewItem); // calls the AddItem function from the Inventory class, passing in the new item
}

// function to move the player
function MovePlayer(Vector direction)
{
    // moves the player in the specified direction at the player's movement speed
    SetActorLocation(GetActorLocation() + direction * MovementSpeed);
}

// event called when player takes damage
event TakeDamage(int DamageAmount)
{
    Health -= DamageAmount; // reduces player's health by the damage amount
    if (Health <= 0) // checks if player's health has reached 0
    {
        bIsAlive = false; // sets bIsAlive variable to false
    }
}

defaultproperties // sets the default values for the variables
{
    Health=100;
    bIsAlive=true;
    MovementSpeed=500.0f;
}
class AAction : UActionBase expands UInterface 
/*
This code snippet is a UNREALSCRIPT class that implements an interface called UActionBase.
The class name is AAction and it expands the UInterface class.
*/
    //Properties
    config(MyConfig)
        /*
        Config property named 'MyConfig' used to set configuration values for this class.
        It can be accessed through the AAction class instance.
        */
        Name = "ActionName" /* Name property assigns a name to every instance of AAction class.
        This can be used to refer to a specific instance later on.*/
        
    //Delegates
    delegate OnActionStarted(APlayerController PC) 
    /*
    Delegate called 'OnActionStarted' taking an APlayerController class as a parameter.
    This delegate will trigger when the action starts.
    */
    delegate OnActionCompleted(AActor Actor) 
    /*
    Delegate called 'OnActionCompleted' taking an AActor class as a parameter.
    This delegate will trigger when the action is completed.
    */
    
    //Functions
    /*
    \\\\\\\\\\\\\\\\\\\\\
    \\
    \ The following functions are mandatory to implement when expanding a UInterface class.
    \\
    \\\\\\\\\\\\\\\\\\\\\
    */
    function bool ActionStart(APlayerController PC) {
        /*
        This function is called when the action starts.
        It takes an APlayerController class as a parameter and returns a boolean value.
        */
        Super.InterfaceCall(PC, FuncName())
        /* 
        This calls the 'InterfaceCall' function of the super class (UInterface),
        passing in the APlayerController and the name of the function that triggered it.
        */
        OnActionStarted(PC) 
        // This triggers the 'OnActionStarted' delegate passing in the APlayerController.
        
        return true
        // Returns a boolean value indicating that the action has started successfully.
    }
    
    function bool ActionEnd(AActor Actor) {
        /* 
        This function is called when the action is completed.
        It takes an AActor class as a parameter and returns a boolean value.
        */
        Super.InterfaceCall(Actor, FuncName())
        /* 
        This calls the 'InterfaceCall' function of the super class (UInterface),
        passing in the AActor and the name of the function that triggered it.
        */
        OnActionCompleted(Actor)
        // This triggers the 'OnActionCompleted' delegate passing in the AActor.
        
        return true
        // Returns a boolean value indicating that the action has completed successfully.
    }
    
    //Optional Functions
    function OnActionFailed() {
        /*
        Optional function called when an action fails.
        It does not take any parameters or return any values.
        */
        // Code to handle the error could be added here.
    }
    
    //Static Functions
    static function GetName() {
        /*
        Static function returns the name assigned to the AAction instance.
        It does not take any parameters and returns a string.
        */
        return Name
        // Returns the Name property of the AAction instance.
    }

defaultproperties
{
    Config(MyConfig = AAction)
    //Sets default value for Config property to AAction class.
}
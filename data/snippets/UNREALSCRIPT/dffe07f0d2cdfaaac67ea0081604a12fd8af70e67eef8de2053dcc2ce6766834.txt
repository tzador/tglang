//This code creates a custom weapon class in UNREALSCRIPT

class CustomWeapon extends Weapon;

var() int MaxAmmo; //maximum ammunition for the weapon
var() int Ammo; //current ammunition for the weapon
var() float ReloadTime; //time it takes to reload the weapon
var() float FireRate; //rate of fire for the weapon
var() float Damage; //damage inflicted by the weapon
var() float Accuracy; //accuracy of the weapon
var() enum FireMode; //fire mode of the weapon, can be selected by the player

simulated function InitWeapon(Inventory Inv)
{
    Super.InitWeapon(Inv);
    SetWeaponState('Inactive');
}

simulated function Fire()
{
    if (Ammo <= 0) //check if there is enough ammunition
    {
        Reload(); //if not, reload the weapon
    }

    if (WeaponState == 'Idle') //check if weapon is in idle state
    {
        SpawnProjectile(); //spawn a projectile
        PlayFireAnimation(); //play fire animation
        AddNoise(); //add noise to the player's movement
        SetWeaponState('Firing'); //set weapon state to firing
        Ammo--; //decrease ammunition by 1
        SetTimer(ReloadTime, false, 'Reload'); //start reload timer
    }
}

simulated function Reload()
{
    SetWeaponState('Reloading'); //set weapon state to reloading
    PlayReloadAnimation(); //play reload animation
    Wait(ReloadTime); //wait for reload time to finish
    SetWeaponState('Idle'); //set weapon state back to idle
    Ammo = MaxAmmo; //refill ammunition
}

event Timer()
{
    if (TimerName == 'Reload') //once reload timer finishes
    {
        SetWeaponState('Idle'); //set weapon state back to idle
    }
}

function GetDamage()
{
    return Damage; //returns damage inflicted by the weapon
}

function SetFireMode(enum Mode)
{
    FireMode = Mode; //sets the selected fire mode
}

defaultproperties
{
    MaxAmmo=30;
    Ammo=30;
    ReloadTime=1.0;
    FireRate=0.2;
    Damage=10.0;
    Accuracy=0.8;
    FireMode=EFireMode.FullAuto; //default fire mode is Full Auto
}
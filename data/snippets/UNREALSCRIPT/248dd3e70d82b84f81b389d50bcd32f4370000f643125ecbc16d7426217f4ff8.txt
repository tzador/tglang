//------------------------------------------------------------------------------
// forward declarations
//------------------------------------------------------------------------------

class PlayerController;

class Pawn extends Actor
{
  //------------------------------------------------------------------------------
  // variables
  //------------------------------------------------------------------------------
  var const PlayerController Player;

  //------------------------------------------------------------------------------
  // functions
  //------------------------------------------------------------------------------

  /**
   * DefaultPawnZero
   * 
   * @param Player
   *        aPlayer: PlayerController;
   */
  simulated event DefaultPawnZero( PlayerController aPlayer )
  {
    Player = aPlayer;
  }

  /**
   * SetController
   * 
   * @param PlayerController
   *        Controller
   */
  function SetController( PlayerController Controller )
  {
    Player = Controller;
  }

  /**
   * UpdateRotation
   * 
   * @param rot_delta
   *        rotation
   * @param timedelta
   *        delta time
   */
  simulated function UpdateRotation( rot rot_delta, float timedelta ) 
  {
    SetRotation( rot_delta );
  }

  /**
   * Move
   * 
   * @param translation
   *        movement
   */
  simulated function Move( vector translation ) 
  {
    AddMovement( translation ); 
  }

  /**
   * PossessedBy
   * 
   * updates the Owner of the pawn
   * 
   * @param PlayerController Owner
   *        the new owner of the pawn
   */
  function PossessedBy( PlayerController Owner )
  {
    SetOwner( Owner );
  }
}
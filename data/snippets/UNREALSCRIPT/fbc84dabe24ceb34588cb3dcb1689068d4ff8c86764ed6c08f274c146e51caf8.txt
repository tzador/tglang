class SecondAmmoPickup extends AmmoPickup;

/*The SecondAmmoPickup class is a subclass of the AmmoPickup class*/

/*The AmmoPickup class is a subclass of the Pickup class, which is built into Unreal Engine*/
/*Pickups are actors that can be touched by players to provide some sort of benefit*/

/*Properties of the SecondAmmoPickup class*/
var int AmmoAmount; //the amount of ammo this pickup provides
var enum WeaponType ForWeapon; //the specific weapon type this ammo is for

/*When this ammo pickup is touched by a player*/
//defined in AmmoPickup class
simulated function OnTouch(PlayerPawn Toucher) {
  if (Toucher.IsA('MyCharacter')) { //check if the touching actor is a MyCharacter
    local MyCharacter PlayerController; //local variable to store the controller of the MyCharacter
    PlayerController = MyCharacter(Controller(Toucher)); //cast the Toucher to a controller for the MyCharacter
    switch (ForWeapon) { //check the weapon type this ammo is for
      case WeaponType.Rifle: //if it's a rifle
        PlayerController.Ammo[Self.Class] += AmmoAmount; //add ammo to the rifle's ammo pool
        break;
      case WeaponType.Pistol: //if it's a pistol
        PlayerController.Ammo[Self.Class] += AmmoAmount; //add ammo to the pistol's ammo pool
        break;
      case WeaponType.Shotgun: //if it's a shotgun
        PlayerController.Ammo[Self.Class] += AmmoAmount; //add ammo to the shotgun's ammo pool
        break;
    }
    Super.OnTouch(Toucher); //call the superclass's OnTouch function
  }
}

/*When this ammo pickup respawns*/
//defined in AmmoPickup class
simulated function Respawn() {
  Super.Respawn(); //call the superclass's Respawn function
  AmmoAmount = 10; //set the amount of ammo this pickup provides
  ForWeapon = WeaponType.Pistol; //set the weapon type this ammo is for
}

/*When this ammo pickup is destroyed*/
//defined in AmmoPickup class
simulated function Destroy() {
  Super.Destroy(); //call the superclass's Destroy function
}
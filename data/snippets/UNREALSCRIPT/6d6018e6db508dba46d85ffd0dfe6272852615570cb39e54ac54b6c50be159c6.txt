/// A class representing a player character
class MyPlayerCharacter extends Pawn
  extends ParentClass
    implements Interface1, Interface2
{
    var() int MaxHealth; ///< The maximum health of the character
    var() int Health; ///< The current health of the character
    var() bool IsDead; ///< True if the character is dead
    var() float Speed; ///< The speed of the character
    var() name Name; ///< The name of the character
    var() bool IsJumping; ///< True if the character is jumping
    var() bool IsMoving; ///< True if the character is moving

    /// Function to initialize the player character
    function Initialize()
    {
        Super.Initialize(); ///< Call the parent class's initialization function
        MaxHealth = 100; ///< Set the maximum health to 100
        Health = MaxHealth; ///< Set current health to maximum health
        IsDead = false; ///< Set IsDead to false
        Speed = 500.0f; ///< Set the speed to 500.0
        Name = "John"; ///< Set the name to "John"
        IsJumping = false; ///< Set IsJumping to false
        IsMoving = false; ///< Set IsMoving to false
    }

    /// Function to update the character's health
    function UpdateHealth(int Delta)
    {
        Health += Delta; ///< Add Delta to current health
        if (Health <= 0) 
        {
            IsDead = true; ///< Set IsDead to true if health is 0 or less
        }
    }

    /// Function to calculate the character's movement 
    function UpdateMovement(float Delta)
    {
        Speed += Delta * 50.0f; ///< Increase speed by Delta multiplied by 50
        if (Speed > 1000.0f)
        {
            IsMoving = true; ///< Set IsMoving to true if speed is over 1000
        }
    }

    /// Function to make the character jump
    function Jump()
    {
        if (!IsJumping)
        {
            Speed *= 2.0f; ///< Double the character's speed if not jumping
            IsJumping = true; ///< Set IsJumping to true
            IsMoving = true; ///< Set IsMoving to true
        }
    }
}
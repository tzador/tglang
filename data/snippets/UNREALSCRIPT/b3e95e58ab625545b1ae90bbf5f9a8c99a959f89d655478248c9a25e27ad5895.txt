/*
Annotated markdown code snippet showcasing advanced object creation and modification in UnrealScript

This code creates a custom Inventory class and modifies it to add health and ammo variables, as well as a TakeDamage() function.

Creation of Inventory class:
*/
class Inventory extends Actor
// ^ Creates a custom class named Inventory that inherits from the Actor class

const int MAX_HEALTH = 100;
// ^ Creates a constant integer variable named MAX_HEALTH with a value of 100 (represents maximum health value for Inventory)

var int Health;
// ^ Creates a variable named Health of type integer (represents current health value for Inventory)

var int Ammo;
// ^ Creates a variable named Ammo of type integer (represents current ammo value for Inventory)

/*
TakeDamage() function:
Called when Inventory takes damage, updates the Health variable and destroys the Inventory if health reaches 0
*/
function TakeDamage(int DamageAmount)
{
    Health -= DamageAmount;
    if (Health <= 0)
    {
        Destroy();
    }
}

/*
Usage of the Inventory class:

Creating an instance of Inventory:
*/
local Inventory MyInventory;
// ^ Creates a local variable named MyInventory of type Inventory

MyInventory = Spawn(class'Inventory');
// ^ Spawns an instance of the Inventory class and assigns it to the MyInventory variable

/*
Accessing and modifying Health and Ammo variables:
*/
MyInventory.Health = 50;
// ^ Changes the Health value of MyInventory to 50

MyInventory.Ammo += 10;
// ^ Adds 10 to the Ammo value of MyInventory

/*
Calling the TakeDamage() function:
*/
MyInventory.TakeDamage(25);
// ^ Calls the TakeDamage() function on MyInventory, passing in 25 as the damage amount

/*
Destroying the Inventory:
*/
MyInventory.Destroy();
// ^ Destroys the MyInventory instance of the Inventory class
class Weapon extends Object native
    placeable;

#ifdef DEBUG
var float firstDebugValue;
// This is a debugging variable that is only used in development
#endif

var bool isInitialized;

state Inactive {

    function Initialize() {
        // This function is called when the weapon is first spawned
        Super.Initialize();
        isInitialized = true;
        // Set initialized to true
    }

    function FireShot() {
        /* This function is called when the player presses the fire button,
        but the weapon is not yet active */
        if (isInitialized) {
            GotoState('Active');
            // Go to the Active state
        }
    }

}

state Active extends Inactive {

    function FireShot() {
        /* This function is called when the player presses the fire button,
        and the weapon is active */
        Super.FireShot();
        // Call the FireShot function in the parent class
        SpawnProjectile();
        // Spawn a projectile
        PlaySound();
        // Play a sound effect
        GotoState('Inactive');
        // Go back to the Inactive state
    }

    function SpawnProjectile() {
        /* Spawn one or more projectiles and add velocity to them */
        local Projectile newProjectile;
        // Create a new Projectile object
        local Vector spawnLocation;
        // Create a new Vector object
        newProjectile = Spawn(class'MyProjectileClass', GetActorLocation(), rot(0, 0, 0));
        // Spawn the projectile at the weapon's location and rotation
        spawnLocation = newProjectile.Location;
        // Set the spawn location to the projectile's location
        newProjectile.Velocity = vect(100, 0, 0);
        // Add velocity to the projectile
    }

    function PlaySound() {
        /* Play a sound effect */
        local Sound newSound;
        // Create a new Sound object
        newSound = Spawn(class'MySoundClass', GetActorLocation(), rot(0, 0, 0));
        // Spawn the sound at the weapon's location and rotation
        newSound.Play();
        // Play the sound effect
    }

}

// This is an example weapon that inherits from the base Weapon class
class MyWeapon extends Weapon;

/* 
Comments can span multiple lines
*/

function Initialize() {
    // This function is called when the Weapon is first spawned
    Super.Initialize();
    // Call the Initialize function in the parent class
    firstDebugValue = 10.0;
    // Set the debugging variable to 10.0
}

function FireShot() {
    /* This function is called when the player presses the fire button,
    but the weapon is not yet active */
    Super.FireShot();
    // Call the FireShot function in the parent class
    Activate();
    // Activate the weapon
}

function Activate() {
    // This function activates the weapon
    GotoState('Active');
    // Go to the Active state
}
class MyCustomActor extends Actor
// This class creates a custom actor in the game world.

//================= Properties =================//
var Integer MyInt

// Sets default values for this actor's properties
// This is automatically called when the actor is spawned
function PostBeginPlay()
{
    // Call the Parent's PostBeginPlay() function first
    Super.PostBeginPlay();

    // Initialize MyInt to a random number between 1 and 100
    MyInt = RandRange(1, 100);
}

// This function is called when the actor is destroyed
function Destroyed()
{
    // Call the Parent's Destroyed() function first
    Super.Destroyed();

    // Print a message to the log
    `Log("MyCustomActor was destroyed!");
}

//================= Functions =================//
// This function takes in an Integer and returns a Boolean
// Returns true if the input value is less than MyInt
function bIsLessThan(in Integer Value)
{
    if(Value < MyInt)
    {
        return true;
    }
    return false;
}

// This function takes in a String and outputs a message
// The message includes the input String and MyInt value
function PrintMessage(in String Msg)
{
    // Create a new String by combining the input Msg and MyInt
    local String ConcatMsg;
    ConcatMsg = "The input message is: " $ Msg $ " and MyInt value is: " $ MyInt;

    // Print the new String to the log
    `Log(ConcatMsg);
}

//================= Events =================//
// This event is triggered when another actor overlaps with this one
event Touch(Actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal)
{
    // Check if the overlapping actor has a MyCustomActor class
    if(Other.IsA(MyCustomActor))
    {
        // Call the bIsLessThan function and pass in a random number
        local bool bIsLess = bIsLessThan(RandRange(1, 100));

        // Check the result and print appropriate message
        if(bIsLess)
        {
            `Log("The overlapped actor is less than MyInt.");
        }
        else
        {
            `Log("The overlapped actor is equal or greater than MyInt.");
        }

        // Call the PrintMessage function and pass in the other actor's name
        PrintMessage("The other actor's name is: " $ Other.GetName());
    }
}
class PlayerCharacter extends Pawn;

//The PlayerCharacter class inherits from the Pawn class to allow for player movement and interaction

var PlayerController PC;
var Vector cylinderRadius, float heading, NewYawRotation, yaw;
var bool bFOVSet;

//Declares variables for the player controller, cylinder radius for player collision, rotation values, and a flag for setting field of view

function BeginPlay()
{
    Super.BeginPlay();
    PC = getPlayerController();
    bFOVSet = false;
}

//Overrides the BeginPlay() function from the parent class and assigns the player controller and sets the default value for bFOVSet to false

event ShakeCameraShake ShakeParams
{
    bCancelled = true;
}

//Overrides the ShakeCameraShake event from the parent class and sets bCancelled to true to prevent camera shake effects on the player character

function SetFOV(float NewFOV, float NewFOVRate)
{
    if (!bFOVSet)
    {
        SetFOV(NewFOV);
        bFOVSet = true;

        if (NewFOVRate > 0)
            InterpFloat(yaw, NewYawRotation, 1 / NewFOVRate, bFOVSet);
    }
    else 
    {
        SetFOV(NewYawRotation);
        bFOVSet = false;
        yaw = 0.0;
    }
}

//Defines a function for setting the field of view with a specified rate, allowing for a gradual change in the player's FOV and resetting the value once completed

function SetYaw(float YawDeg)
{
    heading = Normal(YawDeg);
    SetRotation(Rotator(0,PC.Rotation.Yaw, 0));
}

//Defines a function for setting the yaw rotation of the player character, based on the specified input and the player controller's current rotation

function Tick(float Delta)
{
    Super.Tick(Delta);

    if (PC != none)
        SetYaw(PC.Rotation.Yaw);

    Move(heading, PC.DesiredSpeed * Delta);

    Cylinder.Size = cylinderRadius;
    Cylinder.SetRotation(Rotator(0,PC.Rotation.Yaw, 0);
    SetCollision(true);

    if (bFOVSet)
        SetFOV(yaw);
}

//Overrides the Tick() function from the parent class and updates the player character's position, rotation, and collision based on the player controller's input and the bFOVSet flag
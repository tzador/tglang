// This code snippet shows a complex logic for a game character movement

// Creating a class for the character
class MyCharacter extends Actor
    // Setting up variables for movement direction and speed
    var bool bMoving;
    var Vector MovementDirection;
    var float MovementSpeed;

    // Function to handle player input
    function MovementInput(float Forward, float Strafe)
        // Checking if character is moving and setting direction and speed accordingly
        if (bMoving)
            MovementDirection = Vector(Forward, Strafe, 0);
            MovementSpeed = 500; // arbitrary value for movement speed
        else
            MovementDirection = Vector(0, 0, 0);
            MovementSpeed = 0;

    // Function to handle character movement
    function HandleMovement(float DeltaTime)
        // Calculating movement based on direction, speed, and time
        local Vector Movement = MovementDirection * MovementSpeed * DeltaTime;
        // Moving the character
        AddActorLocalOffset(Movement);

    // Function to tick and update character movement
    simulated function Tick(float DeltaTime)
        // Calling movement function
        HandleMovement(DeltaTime);
        // Updating character's animation based on movement
        UpdateAnimation();

    // Function to update character's animations
    function UpdateAnimation()
        // Checking if character is moving forward
        if (MovementDirection.X > 0)
            // Play "walking forward" animation
            PlayAnimation("WalkForward");
        // Checking if character is moving backward
        else if (MovementDirection.X < 0)
            // Play "walking backward" animation
            PlayAnimation("WalkBackward");
        // Checking if character is strafing left
        else if (MovementDirection.Y < 0)
            // Play "strafing left" animation
            PlayAnimation("StrafeLeft");
        // Checking if character is strafing right
        else if (MovementDirection.Y > 0)
            // Play "strafing right" animation
            PlayAnimation("StrafeRight");
        else
            // Play "idle" animation
            PlayAnimation("Idle");
class ExampleObject expands Object
    config(Mode=SomeMode)

    var const int MAX_VAL = 100;

    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Inner structs
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    struct ExampleStruct
    {
        var int InnerInt;
        var float InnerFloat;
    }

    struct AnotherStruct extends ExampleStruct
    {
        var string InnerString;
        var Vector InnerVector;
    }

    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Functions
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    function ExampleFunction()
    {
        local ExampleStruct SomeStruct;
        local AnotherStruct AnotherStruct;

        if (SomeStruct.InnerInt == MAX_VAL)
        {
            log("InnerInt equals MAX_VAL.", Color=Yellow);
        }
        else
        {
            // Log an error if InnerInt is out of range
            log("InnerInt out of range.", Color=Red);
        }

        if (SomeStruct.InnerFloat > AnotherStruct.InnerVector.X)
        {
            // Perform some operation
            SomeStruct.InnerFloat -= AnotherStruct.InnerVector.X;
        }

        return SomeStruct.InnerInt;
    }

    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Default properties
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    defaultproperties
    {
        // Set default values for properties
        Mode=SomeMode
        MAX_VAL=100
    }
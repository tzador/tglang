class UTGame extends AFramework
/**
 * This class represents the main game type in the 
 * UnrealScript framework. It provides functions for 
 * game initialization, player management, and level loading.
 */
    // The main game state object
    var (Global) UTGameState GameState;
    // The game configuration settings
    config (UTGame);
    // The current game settings
    var UTGameSettings GameSettings;

    exec function AddMutator(Mutator M)
    /**
     * This function adds a mutator to the current game session.
     * Mutators add gameplay elements, such as powerups or game modes.
     */
    {
        // Add the mutator to the current game session
        GameState.BaseMutators.AddItem(M);
        // Notify all players of the added mutator
        foreach(GameState.Players, Pawn)
        {
            M.Initiate(Pawn);
        }
        // Update the game settings to reflect the added mutator
        GameSettings.Mutators.AddItem(M);
    }

    function MapListUpdated()
    /**
     * This function is called when the list of available maps has been updated.
     * It updates the game settings to reflect the new map list.
     */
    {
        // Clear the current map list
        GameSettings.MapList.Clear();
        // Add each map in the level package to the map list
        for(LevelInfo.LeveLPackage.Maps, LevelInfo)
        {
            GameSettings.MapList.AddItem(LevelInfo);
        }
    }

    function TravelNext()
    /**
     * This function handles loading the next map in the map rotation.
     * If there are no more maps in the rotation, it will loop back
     * to the beginning and start again.
     */
    {
        // Increment the current map index
        GameSettings.CurrentMapIndex++;
        // Check if we have reached the end of the map rotation
        if(GameSettings.CurrentMapIndex > GameSettings.MapList.Num() - 1)
        {
            // If so, loop back to the beginning
            GameSettings.CurrentMapIndex = 0;
        }
        // Load the next map
        GameSettings.MapList[GameSettings.CurrentMapIndex].Travel();
    }
    
    defaultproperties
    {
        GameSettingsClass=class'UTGame.UTGameSettings'
    }
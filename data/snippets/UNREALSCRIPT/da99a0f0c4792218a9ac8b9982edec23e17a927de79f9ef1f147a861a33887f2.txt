/**
 *This is a class declaration for a custom player controller,
 *which inherits from the default PlayerController class.
 */
class MyCustomPlayerController extends PlayerController;

    /**
     *This is a function declaration for a custom function,
     *which takes in a string parameter and returns a boolean value.
     *@param str - the string parameter passed into the function.
     *@return bool - the boolean value returned by the function.
     */
     function bool CustomFunction(string str)
     {
        //This is a local variable declaration.
        local bool bResult;
        
        //This is a for loop that iterates through the string parameter.
        for (local int i = 0; i < str.Length; i++)
        {
            //This is a conditional statement that checks if the current character is a vowel.
            if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u')
            {
                //If the character is a vowel, set the boolean result to true.
                bResult = true;
            }
        }
        
        //This is a return statement that returns the boolean result.
        return bResult;
     }
     
     /**
      *This is a function declaration for a custom event,
      *which triggers when the player presses a designated key.
      *@event KeyPressed - the event that is triggered when the designated key is pressed.
      */
     event KeyPressed()
     {
        //This is a local variable declaration.
        local int num = 10;
        
        //This is a while loop that loops until the value of the local variable reaches 0.
        while (num > 0)
        {
            //This is a debug statement that prints the value of the local variable.
            `log("Number: " $ num);
            
            //This is a decrement operator that decreases the value of the local variable by 1.
            num--;
        }
     }
 
/** This is how the custom player controller class can be used in the game. */
MyCustomPlayerController myPlayerController;
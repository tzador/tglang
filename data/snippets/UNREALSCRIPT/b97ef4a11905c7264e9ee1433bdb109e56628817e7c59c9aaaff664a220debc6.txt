class MyClass extends Actor;
/* This is a class declaration in UNREALSCRIPT that extends the built-in Actor class */
 
var int myInt;
/* This is a variable declaration for an integer */
 
var() editconst out vector myVector;
/* This is a variable declaration for a vector that can be edited in the Editor and is displayed as a constant */

event TakeDamage(int Damage, Controller EventInstigator, vector HitLocation, vector Momentum, class<DamageType> DamageType);
/* This is an event declaration that is triggered when the actor takes damage, taking in parameters such as the amount of damage, the instigator of the event, the location of the hit, the momentum of the hit, and the type of damage */

function DoSomething(float myFloat) const boolean;
/* This is a function declaration that takes in a float parameter and returns a constant boolean value */
 
simulated function PostBeginPlay();
/* This is a simulated function that is called after the actor has begun play */

defaultproperties
{
    Begin Object Class=StaticMeshComponent Name=MyMesh
    /* This is a declaration for a StaticMeshComponent with the name "MyMesh" */
        StaticMesh=StaticMesh'TestMesh'
        /* This is an assignment for the StaticMesh property, referencing a StaticMesh asset named "TestMesh" */
    End Object
    myInt = 10;
    /* This is an assignment for the myInt variable */
    myVector = (X=1.0,Y=2.0,Z=3.0);
    /* This is an assignment for the myVector variable, using a vector literal */
    Components.Add(MyMesh);
    /* This adds the MyMesh component to the actor's list of components */
    Tags.Add('MyTag');
    /* This adds the tag "MyTag" to the actor */
}
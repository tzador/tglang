/** 
 * This is the ControlRotation class, used to control the rotation of an object in the game. 
 * It uses the Controller class for input handling. 
 */
class ControlRotation extends Object;

/**
 * The current rotation of the controlled object
 */
var(Engine) Rotator Rotation;

/**
 * The rotation speed when turning in degrees per second
 */
var RotationRate;

/**
 * Function to handle the input and update the rotation of the object
 */
function UpdateRotation(float DeltaTime)
{
    local Controller Controller;

    // Get the current Controller
    Controller = Level.LocalPlayer.GetController();

    // If the Controller exists, update the rotation based on input
    if(Controller != none)
    {
        // Calculate the desired rotation based on input
        local Rotator DesiredRotation;
        DesiredRotation.Yaw = Controller.Aim.X * RotationRate;
        DesiredRotation.Pitch = Controller.Aim.Y * RotationRate;

        // Update the Rotation variable
        Rotation = Rotation + DesiredRotation * DeltaTime;
    }
}
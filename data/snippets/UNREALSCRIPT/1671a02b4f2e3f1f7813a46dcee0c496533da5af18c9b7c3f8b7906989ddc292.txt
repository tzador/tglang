class MyGameController extends BaseGameController; //Defines a custom class that extends the built-in BaseGameController class

var int PlayerScore; //Defines an integer variable to store the player's score

var array<int> HighScores; //Defines an array to store the top 10 high scores

event PreBeginPlay(); //Defines an event that is triggered before the game begins

simulated function AddScore(int ScoreToAdd); //Defines a simulated function to add points to the player's score

if (ScoreToAdd > 0) //Checks if the score to be added is a positive value
{
    PlayerScore += ScoreToAdd; //If it is, add it to the player's current score
    if(HighScores.Length < 10) //Checks if the high score array has less than 10 elements
    {
        HighScores.AddItem(PlayerScore); //If it does, add the player's score to the array
    }
    else
    {
        HighScores.Insert(PlayerScore, 0); //If it has 10 elements, insert the player's score at the beginning
    }
    HighScores.SortDesc(); //Sorts the high score array in descending order
}

function GetTopTenScores() //Defines a function to retrieve the top 10 high scores
{
    foreach (int Score in HighScores) //Loops through each element in the high score array
    {
        ` ` ` return Score; //Outputs the current score in the loop in annotated markdown code snippet format
    }
}

defaultproperties //Defines the default values for the properties of the class
{
    PlayerScore = 0; //Sets the default value for the player's score to 0
    HighScores[0] = 10000; //Sets the default value for the first element in the high score array to 10000
    HighScores[1] = 8000; //Sets the default value for the second element in the high score array to 8000
    HighScores[2] = 6000; //Sets the default value for the third element in the high score array to 6000
    //Continues setting default values for the remaining elements in the high score array
}
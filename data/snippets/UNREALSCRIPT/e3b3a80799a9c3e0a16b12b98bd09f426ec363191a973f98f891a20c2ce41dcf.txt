//This code snippet shows a class called MyWeapon which inherits from the Actor class and implements the IWeapon interface
//It also implements various functions and variables related to a weapon

class MyWeapon extends Actor implements IWeapon
{
    //variables
    var() config float FireRate;
    var float AmmoCount;
    var bool IsReloading;
    var int Damage;

    //functions
    //Constructor function
    function MyWeapon()
    {
        //call super class (Actor) constructor
        super();

        //initialize variables
        FireRate = 0.5;
        AmmoCount = 10;
        IsReloading = false;
        Damage = 50;
    }

    //Interface function implementations
    //Function to fire the weapon
    function FireWeapon(out bool bSuccessful)
    {
        //check if there is enough ammo
        if (AmmoCount > 0)
        {
            //decrease ammo count
            AmmoCount--;

            //set successful flag
            bSuccessful = true;
        }
        else //not enough ammo
        {
            bSuccessful = false;
        }
    }

    //Function to reload the weapon
    function ReloadWeapon()
    {
        //check if reloading is already in progress
        if (IsReloading)
        {
            //do nothing
            return;
        }

        //start reloading
        IsReloading = true;

        //delay reloading by FireRate seconds
        Delay(FireRate);

        //add ammo back to full count
        AmmoCount = 10;

        //stop reloading
        IsReloading = false;
    }

    //Function to get damage amount
    function int GetDamageAmount()
    {
        return Damage;
    }
}
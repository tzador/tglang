//Defining the parent class
class CustomInventory extends Actor native;

//Defining a property to hold the inventory size
var int InventorySize;

//Defining functions
function AddItem(InventoryItem ItemName);
function RemoveItem(InventoryItem ItemName);
function DropItem(InventoryItem ItemName);

//Defining events
event bool OnInventoryFull();
event bool OnInventoryEmpty();

//Defining the child class
class WeaponInventory extends CustomInventory;

//Overriding the AddItem function to check for duplicates and update the inventory size
function AddItem(InventoryItem ItemName)
{
    Super.AddItem(ItemName);
    if (InventoryList.Find(ItemName) == -1)
    {
        InventoryList.AddItem(ItemName);
        ++InventorySize;
    }
}

//Overriding the RemoveItem function to remove the item from the inventory list and update the inventory size
function RemoveItem(InventoryItem ItemName)
{
    Super.RemoveItem(ItemName);
    if (InventoryList.Find(ItemName) == -1)
    {
        InventoryList.RemoveItem(ItemName);
        --InventorySize;
    }
}

//Overriding the DropItem function to remove the item from the inventory list and decrease the inventory size
function DropItem(InventoryItem ItemName)
{
    Super.DropItem(ItemName);
    if (InventoryList.Find(ItemName) == -1)
    {
        InventoryList.RemoveItem(ItemName);
        --InventorySize;
    }
}

//Defining the event function to check if the inventory is full
function bool OnInventoryFull()
{
    if (InventorySize == MaxInventorySize)
    {
        return true;
    }
    else
    {
        return false;
    }
}

//Defining the event function to check if the inventory is empty
function bool OnInventoryEmpty()
{
    if (InventorySize == 0)
    {
        return true;
    }
    else
    {
        return false;
    }
}
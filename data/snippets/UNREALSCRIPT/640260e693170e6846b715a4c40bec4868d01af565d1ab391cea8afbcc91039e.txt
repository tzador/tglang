class Car extends Object
	// this is a class declaration that extends from the Object class
	config(CarConfig);

	// this defines a configuration class that will be used to set up this Car class

    var int MaxSpeed;
    // this defines an integer variable to store the maximum speed of the car

    var float Acceleration;
    // this defines an float variable to store the acceleration of the car

    var int CurrentGear;
    // this defines an integer variable to store the current gear of the car

    var bool EngineOn;
    // this defines a boolean variable to store whether the engine is turned on

    var Transient PlayerController CurrentDriver;
    // this defines a transient (not persistent) variable to store the current player controlling the car

    var SkeletalMesh Mesh;
    // this defines a variable to store the graphical representation of the car using a skeletal mesh

    var Vector Velocity;
    // this defines a vector variable to store the current velocity of the car in world space

    var array<Wheel> Wheels;
    // this defines an array variable to store all the wheels of the car, which is of type Wheel class

    var SceneComponent EngineSoundLocation;
    // this defines a scene component variable to store the location of the engine sound in the world

    var SoundCue EngineSound;
    // this defines a variable to store the sound cue for the engine sound of the car

    var float EngineSoundPitch;
    // this defines a float variable to store the pitch of the engine sound

    var float EngineSoundVolume;
    // this defines a float variable to store the volume of the engine sound

    var SoundCue SkidSound;
    // this defines a variable to store the sound cue for the skid sound of the car


    function Initialize() {
    	// this is a function that initializes the car when it is spawned

        Super.Initialize();
        // calls the parent class's Initialize function

        if (EngineOn) {
        	// checks if the engine is on
            PlayEngineSound();
            // calls the function to play the engine sound
        }
    }

    function PlayEngineSound() {
    	// this is a function to play the engine sound

        if (EngineSound != None && CurrentDriver != None) {
        	// checks if the engine sound and current driver are valid
            CurrentDriver.PlaySound(EngineSound);
            // plays the engine sound for the current driver
        }
    }

    function SetSpeed(int NewSpeed) {
    	// this is a function to set the speed of the car

        MaxSpeed = NewSpeed;
        // assigns the new speed to the maximum speed variable
    }

    function SetGear(int NewGear) {
    	// this is a function to set the gear of the car

        if (NewGear > 0 && NewGear <= Wheels.Length) {
        	// checks if the new gear is within the valid range of gears
            CurrentGear = NewGear;
            // assigns the new gear to the current gear variable

            SetSpeed(Wheels[CurrentGear - 1].MaxSpeed);
            // calls the SetSpeed function to set the speed based on the new gear
        }
    }
class MyCustomActor extends Actor
    placeable;

var() bool bIsActive;
var() int MyIntVariable;
var const Vector MyVectorVariable;

var float MyFloatVariable;
var const string MyStringVariable;

state ActiveState
{
    Begin:
        Super.Begin();

        bIsActive = true;
        
        DoSomething(MyIntVariable, MyStringVariable);
    
    Tick:
        Super.Tick(DeltaTime);

        if(bIsActive)
        {
            // execute some functions
            UpdateLocation();
            UpdateRotation();

            // update variables
            MyIntVariable++;
            MyFloatVariable *= 2.0;
            MyStringVariable = "UpdatedString";
        }
    End:
        Super.End();
}

simulated function DoSomething(int MyInt, const string MyString)
{
    // perform some calculations with input parameters
    local int NewInt = MyInt * 2;
    local string NewString = MyString$": Calculated";

    // output the results
    `OUTPUT: NewInt = `: + NewInt;
    `OUTPUT: NewString = `: + NewString;
}

function UpdateLocation()
{
    // update the location of the actor
    Location.X += MyVectorVariable.X;
    Location.Y += MyVectorVariable.Y;
    Location.Z += MyVectorVariable.Z;
}

function UpdateRotation()
{
    // update the rotation of the actor
    Rotation.Pitch += MyFloatVariable;
    Rotation.Yaw -= MyFloatVariable;
    Rotation.Roll += MyFloatVariable;
}
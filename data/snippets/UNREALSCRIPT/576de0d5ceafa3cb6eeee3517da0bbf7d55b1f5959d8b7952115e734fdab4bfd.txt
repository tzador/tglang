class AIController extends Controller
    //defines a class called AIController that extends the base class Controller in UnrealScript

    #exec OBJ LOAD file=PathToObj
    //executes a command to load an .obj file from a specified path

    var(Pickup) int HealthThreshold
    //creates a variable called HealthThreshold that is of type integer and is visible in the editor under Pickup category

    simulated function PreBeginPlay()
    //defines a simulated function called PreBeginPlay which will be executed before the game begins

    {
        local int NumPlayers
        //declares a local integer variable called NumPlayers

        NumPlayers = GetWorldInfo().GRI.iNumPlayers
        //assigns the number of players in the game to the NumPlayers variable by calling the GetWorldInfo() function and accessing the iNumPlayers variable in the GameRulesInfo class

        if(NumPlayers > 1)
        //checks if there are more than 1 players in the game
        {
            SetEnemy(myPlayer, findPlayerStart())
            //calls the SetEnemy function and passes in the local variable myPlayer and the return value of the findPlayerStart() function as its parameters
        }
        else
        //if there is only 1 player in the game
        {
            local array<Actor> Players
            //declares a local array variable called Players which will store an array of actors

            foreach GetWorldInfo().GRI.ActiveControllers(class'PlayerController', PC)
            //iterates through all active controllers in the game of the class PlayerController and assigns each one to the local variable PC
            {
                Players.Insert(PC.Pawn);
                //inserts the Pawn of each controller into the Players array
            }

            SetEnemy(Players[0], findPlayerStart());
            //calls the SetEnemy function and passes in the first element of the Players array and the return value of the findPlayerStart() function as its parameters
        }

        super.PreBeginPlay();
        //calls the PreBeginPlay function of the base class
    }

    function SetEnemy(Player enemy, Actor Start)
    //defines a function called SetEnemy that takes in an enemy of type Player and a Start of type Actor as its parameters
    {
        myPlayer = enemy;
        //assigns the passed in enemy to the local variable myPlayer

        StartEyeRot = Rotator(RCD(Start.Location + myPlayer.Pawn.CollisionRadius + Radius + EnemeyHordeSize).Vector ToRotator());
        //calculates the rotation for the enemy based on the Start location, CollisionRadius of the player's Pawn, and predetermined values for Radius and EnemyHordeSize

        local vector temp;
        //declares a local vector variable called temp 

        temp = Rand(Enemy.CollisionRadius ** 2);
        //assigns a random value to the temp variable based on the Enemy's CollisionRadius

        Pawn.Location = Start.Location + Projectile.Velocity + temp;
        //moves the Pawn's location to the Start location plus a random vector value and adds the Projectile's Velocity to the final result
    }
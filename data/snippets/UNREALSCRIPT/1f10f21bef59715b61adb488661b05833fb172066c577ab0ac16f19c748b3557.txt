/*
This is a complex code snippet in UnrealScript.
It demonstrates the use of arrays and functions to create a custom inventory system.
*/

class CustomInventory extends Actor
    implements InterfaceInventory
// This class creates a custom inventory that implements an inventory interface.

var array<Item> Inventory;
// An array that holds all the items in the inventory.

function AddItemToInventory(Item itemToAdd)
{
    if(Inventory.Contains(itemToAdd))
    {
        // If the item is already in the inventory, increase its quantity by 1.
        itemToAdd.Quantity++;
    }
    else
    {
        // If the item is not in the inventory, add it to the inventory array.
        Inventory.AddItem(itemToAdd);
    }
}

function RemoveItemFromInventory(Item itemToRemove)
{
    if(Inventory.Contains(itemToRemove))
    {
        if(itemToRemove.Quantity > 1)
        {
            // If the item has a quantity greater than 1, decrease its quantity by 1.
            itemToRemove.Quantity--;
        }
        else
        {
            // If the item has a quantity of 1, remove it from the inventory array.
            Inventory.RemoveItem(itemToRemove);
        }
    }
}

function GetInventorySize() int
{
    return Inventory.Length();
    // Returns the size of the inventory array.
}

function DisplayInventory() string
{
    local int i;
    local string inventoryString;
    for(i = 0; i < Inventory.length; i++)
    {
        // Loops through the inventory array and adds each item's name and quantity to the inventory string.
        inventoryString = inventoryString + "Name: " + Inventory[i].Name + " | Quantity: " + Inventory[i].Quantity + "\n";
    }
    return inventoryString;
    // Returns the complete inventory string to display in-game.
}

function UseItem(Item itemToUse)
{
    itemToUse.Use();
    // Calls the Use() function of the selected item.
}

defaultproperties
{
    Inventory[0]=new(class'Weapon',Name="Pistol",Quantity=1);
    Inventory[1]=new(class'Weapon',Name="Rifle",Quantity=2);
    Inventory[2]=new(class'Consumable',Name="Health Potion",Quantity=5);
    // Sets some default items in the inventory upon creation of the class.
}
class MyCustomActor extends Info {
    
    defaultproperties{
        DisplayName="CustomActor";
        CollisionComponent = aClass(CollisionComponent);
        bStatic = true;
        bNoDelete = true;
        bMovable = false;
        BeginObject Class = MyCustomComponent Name = MyComponent
        {
            Property1 = 42;
            Property2 = "This is a string";
            Property3 = true;
        }
        Socket = Location;
        Begin Brush Name=myBrush
        Begin PolyFlags;
            Solid = true;
            TwoSided = false;
            NotSolidWhenSelected = false;
            NotSolidWhenPlacing = false;
            AlignToNormal = false;
        End PolyFlags;
        PolyFlags=39;
        Begin Vertices;
            '-80, -80, 0';
            '-80, 80, 0';
            '80, 80, 0';
            '80, -80, 0';
        End Vertices;
        Begin Brushes;
            Begin Polygon Item=0 Flags=0
                Origin  = (X=0.000000,Y=0.000000,Z=0.000000)
                Normal  = (X=1.000000,Y=0.000000,Z=0.000000)
                TextureU= (X=0.000000,Y=1.000000,Z=0.000000)
                TextureV= (X=0.000000,Y=0.000000,Z=1.000000)
                Vertex0 = (X=-80,Y=-80,Z=0)
                Vertex1 = (X=-80,Y=80,Z=0)
                Vertex2 = (X=80,Y=80,Z=0)
                Vertex3 = (X=80,Y=-80,Z=0)
            End Polygon
        End Brushes;
    }
    
    // Event called when the actor is spawned in the level
    event BeginPlay() {
        `print("Actor has been spawned");
    }
    
    // Function to do some custom logic
    function DoLogic() {
        `print("Custom logic is being executed");
        `local int count;
        `for(count = 0; count < 10; count++) {
            `local string message;
            `message = "Count: " $ string(count);
            `print(message);
        }
    }
    
    // Event called when the actor is destroyed
    event Destroyed() {
        `print("Actor has been destroyed");
    }
}

// Example of using the custom actor in the level
class MyCustomMap extends MapInfo;

var MyCustomActor myActor;

defaultproperties
{
    Begin Actor Class=MyCustomActor Name=MyCustomActor1
    Location=(X=100,Y=200,Z=0)
    Rotation=(Pitch=-30000,Yaw=0,Roll=0)
    MyComponent=>MyCustomActor1:MyComponent
}

// Event called when the level is loaded
event PostBeginPlay() {
    `myActor = MyCustomActor(Actor); // Cast the spawned actor to our custom actor class
    `myActor.DoLogic(); // Call the custom function
}
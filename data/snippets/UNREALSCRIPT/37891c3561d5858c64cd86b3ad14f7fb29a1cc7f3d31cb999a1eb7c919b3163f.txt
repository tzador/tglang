/**
* This class represents an AI character in the game.
* It has attributes such as health, armor, and damage.
**/
class AICharacter extends Pawn
placeable
 
// Variables 
var int Health = 100; // stores the health of the AI character
var int Armor = 50; // stores the armor value
var int Damage = 10; // stores the amount of damage the AI character can deal
 
/**
* This function takes in a parameter and decreases the health of the AI character by that amount.
* It also checks if the character is still alive and if not, calls the 'OnDeath' function.
* @param Amount: The amount of damage to be dealt to the AI character.
**/
function TakeDamage(int Amount)
{
    Health -= Amount;
    if(Health <= 0)
    {
        OnDeath();
    }
}
 
/**
* This function is called when the AI character dies.
* It prints a message to the console and destroys the character.
**/
function OnDeath()
{
    // Print a message to the console
    `log("The AI character has died.");
    
    // Destroy the character
    Destroy();
}
 
/**
* This function calculates the total damage the AI character can deal.
* It takes into account the damage value and any bonuses from items.
* @return int: The total damage the AI character can deal.
**/
function GetTotalDamage()
{
    local int TotalDamage;
    
    // Calculate bonus damage from items
    
    // Loop through all items in the character's inventory
    foreach(Inventory(Invent))
    {
        // Check if the item is a weapon and if it has a bonus damage attribute
        if(Invent.IsA('Weapon') && Invent.BonusDamage > 0)
        {
            // Add the bonus damage to the total damage
            TotalDamage += Invent.BonusDamage;
        }
    }
    
    // Add the base damage to the total damage
    TotalDamage += Damage;
    
    return TotalDamage;
}
 
defaultproperties
{
    // Set the default values for the variables
    
    Health=100
    Armor=50
    Damage=10
    
    // Set the collision properties for the character
    CollisionComponent.CollisionRadius=30.0
    CollisionComponent.CollisionHeight=80.0
}
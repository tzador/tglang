/*
Implementation of a simple inventory system using UnrealScript

Inventory system structure:

Struct InventoryItem{
	string Name;
	int Quantity;
	Any Data;
}

Class InventorySystem expands Actor;

//Initialize the inventory array
var array<InventoryItem> Inventory;

//Function to add an item to the inventory
event AddItemToInventory(string NewItemName, int NewItemQuantity, Any NewItemData){
	local int Index;
	local bool FoundItem;

	//Check if the item already exists in the inventory
	for(InventoryItem Item in Inventory){
		if(Item.Name == NewItemName){
			Index = Inventory.Find(Item);
			FoundItem = true;
			break;
		}
	}

	//If the item is found, increase the quantity
	if(FoundItem){
		Inventory[Index].Quantity += NewItemQuantity;
	}
	else{
		//Create a new item and add it to the inventory array
		local InventoryItem NewItem;
		NewItem.Name = NewItemName;
		NewItem.Quantity = NewItemQuantity;
		NewItem.Data = NewItemData;

		Inventory.AddItem(NewItem);
	}
}

//Function to remove an item from the inventory
event RemoveItemFromInventory(string ItemName, int QuantityToRemove){
	local int Index;
	local bool FoundItem;

	//Check if the item exists in the inventory
	for(InventoryItem Item in Inventory){
		if(Item.Name == ItemName){
			Index = Inventory.Find(Item);
			FoundItem = true;
			break;
		}
	}

	//If the item is found, decrease the quantity
	if(FoundItem){
		Inventory[Index].Quantity -= QuantityToRemove;

		//If quantity is 0, remove the item from the inventory
		if(Inventory[Index].Quantity <= 0){
			Inventory.Remove(Index);
		}
	}
}

//Function to get the quantity of a specific item in the inventory
function int GetItemQuantity(string ItemName){
	local int Index;
	local bool FoundItem;

	//Check if the item exists in the inventory
	for(InventoryItem Item in Inventory){
		if(Item.Name == ItemName){
			Index = Inventory.Find(Item);
			FoundItem = true;
			break;
		}
	}

	//If the item is found, return its quantity
	if(FoundItem){
		return Inventory[Index].Quantity;
	}

	return 0; //Item does not exist in the inventory
}

//Function to check if an item exists in the inventory
function bool CheckItemInInventory(string ItemName){
	local bool FoundItem;

	//Check if the item exists in the inventory
	for(InventoryItem Item in Inventory){
		if(Item.Name == ItemName){
			FoundItem = true;
			break;
		}
	}

	return FoundItem;
}

//Function to get the data of a specific item in the inventory
function Any GetItemData(string ItemName){
	local int Index;
	local bool FoundItem;

	//Check if the item exists in the inventory
	for(InventoryItem Item in Inventory){
		if(Item.Name == ItemName){
			Index = Inventory.Find(Item);
			FoundItem = true;
			break;
		}
	}

	//If the item is found, return its data
	if(FoundItem){
		return Inventory[Index].Data;
	}

	return none; //Item does not exist in the inventory
}
class SampleClass extends Actor //creates a new class named SampleClass that extends a base class 'Actor'
{
    var bool bIsActive; //creates a boolean variable that tracks the state of the object
    
    function SampleFunction(Vector Location, Rotator Rotation) //creates a function that takes in two parameters
    {
        location += 100; //adds 100 to the x, y, and z values of the input Location vector
        
        local SampleClass NewObject; //creates a local variable of type SampleClass
        
        if (Rotation.Pitch > 90) //checks if the Rotation parameter's pitch value is greater than 90 degrees
        {
            bIsActive = true; //sets the bIsActive variable to true
            NewObject = new(self); //creates a new instance of SampleClass and assigns it to the NewObject variable
        }
        else
        {
            bIsActive = false; //sets the bIsActive variable to false
            Destroy(NewObject); //destroys the NewObject variable
        }
    }
    
    state SampleState //creates a new state named SampleState
    {
        Begin: //marks the beginning of the state
            bIsActive = false; //sets the bIsActive variable to false
            call SampleFunction(Location, Rotation); //calls the SampleFunction with the current Location and Rotation values
        Loop: //marks the loop portion of the state
            if (bIsActive) //checks if the bIsActive variable is true
            {
                `log("Object is active");` //prints a message to the console using the `log` function
            }
        End: //marks the end of the state
            bIsActive = false; //sets the bIsActive variable to false
    }
}
/**
// This is a comment in UNREALSCRIPT

class PlayerController expands Controller
    const int MAX_SPEED = 500; // constant to set maximum speed
    replicated var int currentHealth; // variable to store current health for replication
    
    /**
    * Function: MovePlayer
    * Parameters: int X, int Y, int Z
    * Moves the player to the specified coordinates based on input
    */
    function MovePlayer(int X, int Y, int Z)
    {
        if(Math.Abs(X) > MAX_SPEED) // check if X value is greater than maximum speed
        {
            X = Math.Sign(X) * MAX_SPEED; // set X value to maximum speed with appropriate sign
        }
        
        if(Math.Abs(Y) > MAX_SPEED) // check if Y value is greater than maximum speed
        {
            Y = Math.Sign(Y) * MAX_SPEED; // set Y value to maximum speed with appropriate sign
        }
        
        SetLocation(X, Y, Z); // move player to specified coordinates
    }
    
    /**
    * Function: TakeDamage
    * Parameters: int Damage
    * Reduces player's current health by the specified amount
    */
    function TakeDamage(int Damage)
    {
        currentHealth -= Damage; // reduce current health by damage amount
        
        if(currentHealth <= 0) // check if player's health has reached 0 or below
        {
            Die(); // call Die function to handle player death
        }
    }
    
    /**
    * Function: Die
    * No parameters
    * Handles player death by destroying the pawn and respawning
    */
    function Die()
    {
        Pawn.Destroy(); // destroy the player's pawn
        
        Timer(DestroyPawn(), 3.0, false); // respawn player's pawn after 3 seconds
    }
    
    
defaultproperties
{
    currentHealth = 100; // default starting health for player
    bReplicates = true; // enables replication for this class
}
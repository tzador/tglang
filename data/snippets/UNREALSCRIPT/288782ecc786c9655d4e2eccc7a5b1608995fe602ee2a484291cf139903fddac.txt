// This code snippet creates a custom weapon class in UnrealScript
class CustomWeapon extends Weapon;

// Declaration of variables
var int CustomAmmo; // number of custom ammo
var bool CustomFiringMode; // flag for custom firing mode
var bool CustomReloading; // flag for custom reloading

// Initialization function
function InitCustomWeapon()
{
    super.InitWeapon();
    CustomAmmo = 50; // set starting ammo count
    CustomFiringMode = false; // set default firing mode
    CustomReloading = false; // set default reloading state
}

// Ammo management functions
function bool HasCustomAmmo(int Amount) 
{
    if (CustomAmmo >= Amount) // checks if enough ammo left for given amount
        return true;
    else
        return false;
}

function ConsumeCustomAmmo(int Amount)
{
    CustomAmmo = CustomAmmo - Amount; // reduces ammo count by given amount
}

// Firing function
function Fire()
{
    if (CustomFiringMode) // checks if in custom firing mode
    {
        if (HasCustomAmmo(5)) // checks if enough ammo left for 5 rounds
        {
            // place code for firing 5 custom rounds here
            ConsumeCustomAmmo(5); // reduces ammo count by 5
        }
    }
    else 
    {
        super.Fire(); // calls default firing function
    }
}

// Reloading function
function Reload()
{
    if (!CustomReloading) // checks if not currently reloading
    {
        CustomReloading = true; // sets reloading flag to true
        // code for reloading custom weapon here
        CustomAmmo = 50; // resets ammo count to full
        CustomReloading = false; // resets reloading flag to false
    }
}

// Usage example
local CustomWeapon MyCustomWeapon; // declare a custom weapon variable
MyCustomWeapon.InitCustomWeapon(); // initialize the custom weapon
MyCustomWeapon.SetCustomFiringMode(true); // switch to custom firing mode
MyCustomWeapon.Fire(); // fire 5 custom rounds
MyCustomWeapon.Reload(); // reload the custom weapon
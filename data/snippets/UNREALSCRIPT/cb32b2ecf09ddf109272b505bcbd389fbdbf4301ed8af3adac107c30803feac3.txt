//------------------------------------------------------------------------------
//This is a complex code snippet in UnrealScript, used for generating terrain
//------------------------------------------------------------------------------

$WorldInfo DefaultProperties //declaring default properties
{
    bEditorTransform      = True; //property for enabling editor transform
    bPersistAcrossLevelTransition = False; //property for persisting across level transition
    NavMeshLibClass       = class'Engine.NavigationMeshSnapshot' //property for navigation mesh class
}

/**This is the main class for generating the terrain*/
class TerrainGenerator extends Object
    placeable;
    
var TerrainComponent Terrain; //declaring a variable for TerrainComponent
    
/**Function for initializing the terrain generation*/
function InitializeTerrain()
{
    Terrain = Spawn(class'TerrainComponent'); //spawning a new TerrainComponent object
    Terrain.AttachTo(Outer, '', 'Terrain'); //attaching the TerrainComponent to the Outer object
}

/**Function for adding a new terrain layer 
*@param LayerName - name of the new layer
*@param HeightMap - heightmap for the new layer
*@param Material  - material for the new layer
*/
function AddTerrainLayer(name LayerName, byte HeightMap, Material Material)
{
    Terrain.AddTerrainLayer(LayerName, HeightMap, Material); //adding a new layer to the terrain
}

/**Function for flattening the terrain
*@param FlatteningAmount - the amount to flatten the terrain by
*@param Radius - the radius around the player to flatten 
*/
function FlattenTerrain(int FlatteningAmount, int Radius)
{
    Local PlayerController PC; //declaring a local variable for the player controller
    PC = LocalPlayerController; //setting the local player controller variable to the current player controller
    Terrain.FlattenTerrain(PC.Location, FlatteningAmount, Radius); //flattening the terrain around the player's location
}

/**Function for smoothing the terrain
*@param SmoothingAmount - the amount to smooth the terrain by
*@param Radius - the radius around the player to smooth 
*/
function SmoothTerrain(int SmoothingAmount, int Radius)
{
    Local PlayerController PC; //declaring a local variable for the player controller
    PC = LocalPlayerController; //setting the local player controller variable to the current player controller
    Terrain.SmoothTerrain(PC.Location, SmoothingAmount, Radius); //smoothing the terrain around the player's location
}

/**Function for adding noise to the terrain
*@param NoiseAmount - the amount of noise to add
*@param Radius - the radius around the player to add noise
*/
function AddTerrainNoise(int NoiseAmount, int Radius)
{
    Local PlayerController PC; //declaring a local variable for the player controller
    PC = LocalPlayerController; //setting the local player controller variable to the current player controller
    Terrain.AddTerrainNoise(PC.Location, NoiseAmount, Radius); //adding noise to the terrain around the player's location
}
class MyPlayer extends Object
    extends GamePlayer;

    var const int MAX_HEALTH; // Maximum health that the player can have

    var bool bHasArmor; // Whether or not the player has armor
    var int ArmorAmount; // Amount of armor that the player currently has

    var int Health; // Current health of the player

    simulated event Tick(float DeltaTime)
    {
        Super.Tick(DeltaTime);

        // Check if player has armor, decrease armor amount if they get hit
        if (ArmorAmount > 0)
        {
            if (Health <= 0)
            {
                // Player took damage, decrease armor amount
                ArmorAmount -= Damage;
            }
        }

        if (Health <= 0)
        {
            // Player has no armor, decrease their health
            Health -= Damage;

            if (Health < 0)
            {
                // Player is dead, respawn them
                Respawn();
            }
        }
    }

    simulated function Damage(int Amount)
    {
        Super.Damage(Amount);
        
        // If player has armor, decrease armor amount first before health
        if (bHasArmor)
        {
            ArmorAmount -= Amount;
            
            if (ArmorAmount < 0)
            {
                Health += ArmorAmount; // Add negative value to health
                ArmorAmount = 0; // Reset armor amount
            }
        }
        else
        {
            Health -= Amount;
        }
    }

    function Respawn()
    {
        Health = MAX_HEALTH; // Reset health to maximum
        ArmorAmount = 0; // Reset armor amount
    }
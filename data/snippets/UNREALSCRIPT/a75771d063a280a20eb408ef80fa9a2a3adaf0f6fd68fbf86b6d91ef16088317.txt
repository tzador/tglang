class MyActor extends Actor
    // This is a comment

    // Properties
    var (MyComponent) int MyInt;
    var array<Vector> MyVectorArray;

    // Functions
    state Activate()
    {
        // Code block
        Super.Activate();
        
        // Loop
        for ( local i = 0; i < MyInt; i++ )
        {
            // Function call
            DoSomething();
        }
        
        // Conditional statement
        if ( MyVectorArray.Length > 0 )
        {
            // Code block
            MyVectorArray[0] = Vector(1,0,0);

            // Event broadcast
            self.BroadcastEvent( class'MyActor', None, 'OnMyEvent', None );

            return Super.Activate();
        }
        
        // Return statement
        return None;
    }
    
    state Dead extends State
    {
        // Functions
        event Touch( actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal )
        {
            // Super call with parameters
            Super.Touch( Other, OtherComp, HitLocation, HitNormal );

            // Print statement
            `This is a message to display on the screen`;
        }
    }
defaultproperties
{
    bMovable = true
    bCollideActors = true
    CollisionComponent = class'MyCollisionComponent'
    RenderComponent = class'MyRenderComponent'
    BeginState = class'MyActorState'
}
// This is a complex code snippet written in UnrealScript.

/*
This snippet of code showcases an AI character's behavior tree
which includes complex nodes such as `Selector` and `Parallel`
to create a flexible and intelligent decision-making system.

The behavior tree has a root node that starts the execution
and branches out into other nodes using conditional checks.
*/

class AICharacterBehaviorTree extends BehaviorTree;

simulated function StartExecution()
{
    // Root node of the behavior tree
    local AIController AICon;
    local BehaviorTreeComponent BTree;

    AICon = AIController(Controller);
    BTree = AICon.StartBehaviorTree(Self);

    // -----------------------------
    // Branches of the behavior tree
    // -----------------------------

    // Selector node to choose between two behaviors
    local Selector AIChoice;
    AIChoice = Selector(OpenNode(AICon, BTree));
    
    // Conditional check to see if enemy is nearby
    local Condition IsEnemyNearby;
    IsEnemyNearby = Condition(Branch(AIChoice));
    IsEnemyNearby.Condition = 'EnemyNearby';
    
    // Perform attack behavior
    local Action Attack;
    Attack = Action(Leaf(IsEnemyNearby));
    Attack.Action = 'Attack';

    // Perform idle behavior
    local Action Idle;
    Idle = Action(Leaf(AIChoice));
    Idle.Action = 'Idle';

    // Parallel node to run two behaviors simultaneously
    local Parallel IdleAndSearch;
    IdleAndSearch = Parallel(OpenNode(AIChoice));

    // Perform idle behavior while searching for a target
    local Action ParallelIdle;
    ParallelIdle = Action(Leaf(IdleAndSearch));
    ParallelIdle.Action = 'Idle';

    // Conditional check to see if target is found
    local Condition IsTargetFound;
    IsTargetFound = Condition(Leaf(IdleAndSearch));
    IsTargetFound.Condition = 'TargetFound';

    // Perform attack behavior when target is found
    local Action ParallelAttack;
    ParallelAttack = Action(IsTargetFound);
    ParallelAttack.Action = 'Attack';

    // Add branches to behavior tree
    AddBranch(AIChoice, Attack);
    AddBranch(AIChoice, Idle);
    AddBranch(IdleAndSearch, ParallelIdle);
    AddBranch(IdleAndSearch, ParallelAttack);

    // Start execution of behavior tree
    AIChoice.RunNode();
}
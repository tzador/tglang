/*
   This code snippet is a simple inventory system for a game.
   It allows the player to collect items and add them to their inventory,
   as well as use items from their inventory.
*/

class PlayerInventory extends Actor;

var inventoryArray<Item> InventoryArray;

/** 
 * Function to add an item to the player's inventory.
 *
 * @param newItem - the item to be added to the inventory.
 */
function AddToInventory(Item newItem)
{
    // Check if item is already in inventory
    if (InventoryArray.Contains(newItem))
    {
        // Item is already in inventory, increase quantity
        newItem.Quantity += 1;
    }
    else
    {
        // Item is not in inventory, add it
        InventoryArray.AddItem(newItem);
    }
}

/**
 * Function to remove an item from the player's inventory.
 *
 * @param itemToRemove - the item to be removed from the inventory.
 */
function RemoveFromInventory(Item itemToRemove)
{
    // Check if item is in inventory
    if (InventoryArray.Contains(itemToRemove))
    {
        // Check if item quantity is 1
        if (itemToRemove.Quantity == 1)
        {
            // Remove item from inventory
            InventoryArray.RemoveItem(itemToRemove);
        }
        else
        {
            // Decrease item quantity
            itemToRemove.Quantity -= 1;
        }
    }
    else
    {
        // Item is not in inventory, do nothing
        return;
    }
}

/**
 * Function to use an item from the player's inventory.
 *
 * @param itemToUse - the item to be used from the inventory.
 */
function UseItemFromInventory(Item itemToUse)
{
    // Check if item is in inventory
    if (InventoryArray.Contains(itemToUse))
    {
        // Check if item quantity is greater than 0
        if (itemToUse.Quantity > 0)
        {
            // Use item action
            itemToUse.Use();
        }
    }
}

defaultproperties
{
    Begin Object Name=PlayerInventory
        InventoryArray=Class'Item'
    End Object
}
//=============================================================================
// Class: GameInfo
// Description: Main game info class, holds general game information and functionality.
//=============================================================================

// Imports
//-------------------------------------------------------------
class Viewport
class Player;
class PlayerController;

// Constants
//-------------------------------------------------------------
const int MAX_SCORE = 10;

// Variables
//-------------------------------------------------------------
var bool bGameStarted;
var int BlueTeamScore;
var int RedTeamScore;
var array<Player> BluePlayers;
var array<Player> RedPlayers;
var PlayerController WinningPlayer;
var array<Viewport> ActiveViewports;

// Functions
//-------------------------------------------------------------
// Begin game
function StartGame()
{
    // Initialize game
    Initialized();

    // Set game started flag
    bGameStarted = true;
}

// End game
function EndGame()
{
    // Set game started flag
    bGameStarted = false;

    // Clear player arrays
    BluePlayers.Empty();
    RedPlayers.Empty();

    // Set winning player
    if (BlueTeamScore >= MAX_SCORE || RedTeamScore >= MAX_SCORE)
    {
        if (BlueTeamScore > RedTeamScore)
            WinningPlayer = BluePlayers[0].GetController();
        else
            WinningPlayer = RedPlayers[0].GetController();

        // Call game over event
        GameOver(WinningPlayer);
    }
}

// Add player to team
function AddPlayerToTeam(Player NewPlayer, int Team)
{
    // Update player's team
    switch(Team)
    {
        case 0: // Blue Team
            BluePlayers.AddItem(NewPlayer);
            NewPlayer.Team = 0;
            break;
        case 1: // Red Team
            RedPlayers.AddItem(NewPlayer);
            NewPlayer.Team = 1;
            break;
        default:
            // Invalid team
            warn("Invalid team number");
            break;
    }
}

// Update scores
function UpdateScores(int Team, int Points)
{
    // Update team's score
    switch(Team)
    {
        case 0: // Blue Team
            BlueTeamScore += Points;
            break;
        case 1: // Red Team
            RedTeamScore += Points;
            break;
        default:
            // Invalid team
            warn("Invalid team number");
            break;
    }
}

// Events
//-------------------------------------------------------------
// Game initialized
event Initialized()
{
    // Set initial scores
    BlueTeamScore = 0;
    RedTeamScore = 0;
}

// Game over
event GameOver(PlayerController Winner)
{
    // Display winning player
    log(Winner.Name @ " wins the game!");
}
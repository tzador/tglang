//--------------------------------------------------------
// Define structure for holding player's information
struct SPlayerInfo
{
    var string playerName; // stores the player's name
    var int playerLevel; // stores the player's current level
    var float playerHealth; // stores the player's current health
    var int playerScore; // stores the player's current score
};
//--------------------------------------------------------

// Create an array to hold multiple player information
var array<SPlayerInfo> playerInfo;

// Loop through all players in the game
foreach WorldInfo.GRI.GetPlayerList()
{
    // Create a new player info structure
    local SPlayerInfo newPlayer;

    // Get the player's name
    newPlayer.playerName = It.PlayerReplicationInfo.PlayerName;

    // Get the player's level
    newPlayer.playerLevel = It.PlayerReplicationInfo.Level;

    // Get the player's health
    newPlayer.playerHealth = It.Pawn.Health;

    // Get the player's score
    newPlayer.playerScore = It.PlayerReplicationInfo.Score;

    // Add the player's info to the array
    playerInfo.AddItem(newPlayer);
}

// Sort the array by player's score in descending order
playerInfo.Sort(function(a, b) { return a.playerScore > b.playerScore });

// Print the top 5 players' info
for(int i = 0; i < 5; i++)
{
    // Create a formatted string to display player's info
    local string playerInfoString = "Player Name: " $ playerInfo[i].playerName 
        $ ", Player Level: " $ playerInfo[i].playerLevel $ ", Player Health: " 
        $ playerInfo[i].playerHealth $ ", Player Score: " $ playerInfo[i].playerScore;

    // Print the string to the screen
    `log(playerInfoString);
}
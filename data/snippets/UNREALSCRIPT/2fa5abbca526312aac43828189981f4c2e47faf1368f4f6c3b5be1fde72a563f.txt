class MyActor extends Actor
    placeable;
    // A simple class declaration followed by setting it as a placeable object

var() int MyInt;
    // Declaration of a variable named MyInt of type integer

var const float MyFloat = 3.1415f;
    // Declaration of a constant variable named MyFloat of type float, value set to 3.1415

struct MyStruct
    native;
    var int MyInt;
endstruct
    // Declaration of a struct called MyStruct with a native specifier and a variable named MyInt of type integer

state MyState
    within(MyActor);
    // Declaration of a state called MyState that is associated with the MyActor class

    simulated function DoSomething()
    {
        Super.DoSomething();
        // A simulated function that calls the parent class' DoSomething function
        MyInt = 5;
        // Sets the value of MyInt to 5
    }

    function int DoSomethingWithReturnValue()
    {
        local int MyLocalInt;
        // Declaration of a local variable named MyLocalInt of type integer
        MyLocalInt = MyInt + 10;
        // Assigns the value of MyInt + 10 to MyLocalInt
        return MyLocalInt;
        // Returns the value of MyLocalInt
    }

    event Destroyed()
    {
        `Log("Actor Destroyed");
        // An event that logs a message when the actor is destroyed
    }
endstate
    // End of the state declaration

defaultproperties
{
    Begin Object Class=DynamicLightEnvironmentComponent Name=DynamicLightEnvironment0
        bEnabled=True
        bCastShadows=True
        bCastStaticShadows=True
        bCastDynamicShadows=True
    End Object

    Components.Add(DynamicLightEnvironment0);

    MyInt=10
    // Assigns a value of 10 to the variable MyInt
    MyFloat=MyInt * 1.5;
    // Assigns a value of MyInt * 1.5 to the variable MyFloat
    Begin Object Name=CollisionCylinder
        CollisionRadius=45.0
        BlockNonZeroExtent=True
        BlockZeroExtent=True
        BlockActors=True
        BlockZeroExtent=True
        BlockActors=True
        AlwaysCheckCollision=False
        // Setting properties for collision detection
    End Object

    CollisionComponent=CollisionCylinder
    // Assigning the collision component to the CollisionCylinder object
}
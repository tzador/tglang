// This code snippet creates a custom weapon class that can shoot multiple projectiles
class CustomWeapon extends Weapon;

// Variables for managing the weapon's attributes
var int MaxAmmo; // maximum ammo for the weapon
var int ShotCount; // number of projectiles shot per fire
var float FireDelay; // delay between shots
var float Spread; // spread between projectiles
var bool bCanAutoFire; // boolean to check if weapon can auto-fire

// Function to initialize the weapon's attributes
function InitWeapon()
{
  Super.InitWeapon();
  
  MaxAmmo = 100;
  ShotCount = 3;
  FireDelay = 0.2;
  Spread = 10.0;
  bCanAutoFire = true;
}

// Function to fire the weapon
function Fire()
{
  // check if there is enough ammo
  if (Ammo <= 0)
  {
    // play empty sound effect
    PlaySound(EmptySound);
    return;
  }
  
  // check if weapon is set to auto-fire 
  // and if the fire key is held down
  if (bCanAutoFire && IsFiring)
  {
    // loop through the number of shots defined
    for (local int i=0; i<ShotCount; i++)
    {
      // calculate random spread angle for projectile
      local float RandomAngle = Rand() * Spread;
      // spawn projectile with spread angle
      Spawn(class'Projectile',,, Location,, Rotation + RandomAngle);
    }
    
    // decrease ammo by number of shots
    Ammo -= ShotCount;
    
    // play fire sound effect
    PlaySound(FireSound);
    
    // set timer for fire delay
    SetTimer(FireDelay, false, 'Fire');
  }
  // if weapon is not set to auto-fire
  // or if the fire key is not held down
  else
  {
    // spawn single projectile
    Spawn(class'Projectile',,, Location,, Rotation);
    
    // decrease ammo by one
    Ammo--;
    
    // play fire sound effect
    PlaySound(FireSound);
  }
}

// Function to handle reloading of the weapon
function Reload()
{
  // check if there is enough space for reload
  if ((MaxAmmo - Ammo) >= ReloadCount)
  {
    // play reload sound effect
    PlaySound(ReloadSound);
    
    // decrease ammo
    Ammo += ReloadCount;
  }
  // if there is not enough space for full reload
  else
  {
    // play reload sound effect
    PlaySound(ReloadSound);
    
    // set ammo to maximum
    Ammo = MaxAmmo;
  }
}

defaultproperties
{
  // set up default values for variables
  MaxAmmo = 100;
  ShotCount = 3;
  FireDelay = 0.2;
  Spread = 10.0;
  bCanAutoFire = true;
  
  // define sound cues for weapon
  FireSound = SoundCue'A_Weapon.Fire';
  EmptySound = SoundCue'A_Weapon.Empty';
  ReloadSound = SoundCue'A_Weapon.Reload';
}
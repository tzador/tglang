class MyCustomClass extends Object # This is a comment indicating that we are defining a new class called "MyCustomClass" which inherits from the base class "Object"
    properties # This is a block indicating the start of property definitions
        EditAnywhere float CustomProperty # This is a property declaration, with a comment indicating that it is editable anywhere and of type float
        EditInstanceOnly int CustomIntProperty # This is another property declaration, with a comment indicating that it is only editable within an instance and of type int
        EditDefaultsOnly string CustomStringProperty # This is a third property declaration, with a comment indicating that it is only editable within the class defaults and of type string
        Transient array<Vector> TransientArray # This is a property declaration of a transient array of Vectors, which will not be saved when the game is loaded
    endproperties # This is a block indicating the end of property definitions

    # This is a variable declaration, with a comment indicating that it is of type MyCustomClass
    MyCustomClass MyCustomVariable;

    # This is a function declaration, with a comment indicating that it takes in a string parameter and returns a boolean value
    function bool MyCustomFunction(string MyString)
    {
        # This is a variable declaration that casts the parameter to an int and adds it to the CustomIntProperty
        CustomIntProperty += int(MyString);

        # This is an if-statement block, with a comment indicating that it is checking the value of CustomIntProperty
        if(CustomIntProperty > 10)
        {
            # This is a log statement, with a comment indicating that it will print a message to the log
            log("CustomIntProperty is greater than 10!");

            # This is a return statement, with a comment indicating that it will return true
            return true;
        }
        else
        {
            # This is a log statement, with a comment indicating that it will print a different message to the log
            log("CustomIntProperty is less than or equal to 10!");

            # This is a return statement, with a comment indicating that it will return false
            return false;
        }
    }
endclass # This is a block indicating the end of the class definition
// This code snippet creates a Gun class that inherits from the actor class
class Gun extends Actor
	// Variables for the gun's mesh and projectile
	var out MeshComponent Mesh;
	
	private projectile Projectile;
	
	// Variables for fire rate, ammo and damage
	var config float FireRate;
	var int Ammo;
	var int Damage;
	
	// Constructor function
	function Gun()
	{
		// Set default values for variables
		FireRate = 1.0;
		Ammo = 10;
		Damage = 50;
		
		// Create a static mesh component for the gun's mesh
		Mesh = new(class'MeshComponent');
		
		// Set mesh properties
		Mesh.Mesh = "StaticMesh'Weapons.Gun'";
		Mesh.CollisionType = COLLIDE_None;
		Mesh.LightEnvironment = "None";
		Mesh.SimulatePhysics = false;
		
		// Add mesh component to the actor
		Components.Add(Mesh);
		
		// Set collision properties for the actor
		bCollideActors = false;
		bBlockActors = false;
		bBlockPlayers = false;
		
		// Set the default projectile class for the gun
		Projectile = class'Bullet';
	}
	
	// Function to spawn and fire the projectile
	function Fire()
	{
		if(Ammo > 0) // Check if there is ammo left
		{
			// Spawn the projectile at the gun's location
			local projectile newProj;
			newProj = spawn(Projectile,, location + inventory.getInventoryItems(Class'Pawn')[0].Rotation);
			
			// Set projectile properties
			newProj.Owner = Weapon;
			newProj.Team = inventory.getOwnerTeam();
			newProj.Fire();
			
			// Decrease ammo count
			Ammo--;
		}
	}
	
	/* 
	Function to attach the gun to a pawn's hand
	A reference to the pawn's hand socket is passed as a parameter
	*/
	function AttachToHand(SkeletalMeshSocket Hand)
	{
		// Attach the gun's mesh component to the hand socket
		SkeletalMeshSocket AttachmentSocket;
		AttachmentSocket = Hand;
		
		// Set attachment properties
		AttachmentSocket.SocketName = "hand_l_socket";
		AttachmentSocket.bAttachToActor = false;
		AttachmentSocket.Actor = Weapon;
		AttachmentSocket.bAttachToBone = true;
		AttachmentSocket.Bone = "Bip01 L Hand";
		
		// Attach the gun to the pawn's hand
		Mesh.AttachToSkeletalMesh(inventory.getSkeletalMesh(), AttachmentSocket);
	}
}
class Weapon extends Actor
  // Weapon class extends the base Actor class and serves as the parent for all weapons in the game
  
  // ##### Properties #####
  
  var () int MaxAmmo; // amount of ammo the weapon can hold
  var () int CurrentAmmo; // current amount of ammo remaining in the weapon
  var () int AmmoPerShot; // amount of ammo consumed per shot
  
  // ##### Methods #####
  
  // Constructor function for the Weapon class
  function InitWeapon()
  {
    Super.Init(); // calls the Init function of the parent Actor class
    
    // set default values for properties
    MaxAmmo = 100;
    CurrentAmmo = MaxAmmo;
    AmmoPerShot = 1;
  }
  
  // Function to fire the weapon
  // Takes in a Vector parameter for the direction in which the weapon is being aimed
  function Fire(Vector AimDir)
  {
    // Check if the weapon has enough ammo to fire a shot
    if(CurrentAmmo > 0)
    {
      // create a new projectile using the Projectile class
      local Projectile proj;
      proj = Spawn(class'Projectile', self,,,,,0);
      
      // pass in the aim direction to the projectile
      proj.SetAimDirection(AimDir);
      
      // consume the amount of ammo equal to the AmmoPerShot property
      CurrentAmmo -= AmmoPerShot;
    }
    else
    {
      // print a message indicating the weapon is out of ammo
      `log("Weapon is out of ammo!");
    }
  }
  
  // Function to reload the weapon
  function Reload()
  {
    // Check if the current ammo is less than the maximum ammo
    if(CurrentAmmo < MaxAmmo)
    {
      // refill the weapon with the maximum amount of ammo
      CurrentAmmo = MaxAmmo;
    }
    else
    {
      // print a message indicating the weapon is already fully loaded
      `log("Weapon is already fully loaded!");
    }
  }
endclass
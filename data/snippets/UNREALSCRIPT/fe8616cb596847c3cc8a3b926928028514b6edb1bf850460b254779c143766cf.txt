/** 
 *This class represents a player in the game. 
 *It contains variables and functions related to player characters. 
 */
class Player extends Actor 
        /** The current health of the player character. */
        var int Health; 

        /** The current speed of the player character. */
        var int Speed; 

        /** The current position of the player character. */
        var Vector Position; 

        /** The maximum health that the player character can have. */
        const int MAX_HEALTH = 100; 

        /** Function to take damage and update health accordingly. */
        simulated function ReceiveDamage(int Damage) 
                Health -= Damage; 
                // Check if player is dead
                if (Health <= 0) 
                        Die(); 
        } 

        /** Function to heal the player character. */
        simulated function HealPlayer(int Amount) 
                Health += Amount; 
                
                // Make sure health does not exceed maximum
                if (Health > MAX_HEALTH) 
                        Health = MAX_HEALTH; 
        } 

        /** Function to move the player character. */
        simulated function MovePlayer(Vector Target) 
                // Calculate the distance between current and target position
                local Vector Distance = Target - Position; 
                
                // Move the player character towards the target position
                Position = Move(0.1 * Speed * Normal(Distance)); 
        } 

        /** Function to handle player character death. */
        simulated function Die() 
                // Reset player health to 0
                Health = 0; 
                
                // Display death message on screen
                HUD.DisplayMessage('You have died!'); 
                
                // Wait for 3 seconds before respawning
                Sleep(3); 
                
                // Respawn player character
                Respawn(); 
        } 

        /** Function to respawn the player character. */
        simulated function Respawn() 
                // Reset player health to maximum
                Health = MAX_HEALTH; 
                
                // Display respawn message on screen
                HUD.DisplayMessage('You have been respawned!'); 
                
                // Randomly select a respawn point from an array of respawn points
                // and move player character to that location
                local Actor RespawnPoint = RespawnPoints[Rand(RespawnPoints.Length)]; 
                Position = RespawnPoint.Location; 
        } 
}
/*
This code snippet creates a custom inventory system for a game using UnrealScript.

First, we define the "GameInventory" class, which extends the default "Inventory" class in UnrealScript.
This allows us to add custom functionality to our inventory system.

Inside the GameInventory class, we define two variables: "InvSlots" and "MaxSlots".
These variables hold the current number of inventory slots and the maximum number of slots allowed, respectively.

Next, we create a function called "AddItemToInventory" which takes in a single parameter, "NewItem".
Inside this function, we first check if the current number of inventory slots is less than the maximum allowed.
If it is, we add the new item to the inventory and increase the number of slots by 1.

Next, we create a function called "UseItemFromInventory" which takes in a single parameter, "ItemToUse".
Inside this function, we check if the given item is in the inventory.
If it is, we execute the functionality associated with using that item.
Otherwise, we display an error message.

Finally, we create a function called "RemoveItemFromInventory" which takes in a single parameter, "ItemToRemove".
Inside this function, we check if the given item is in the inventory.
If it is, we remove it from the inventory and decrease the number of slots by 1.

This custom inventory system can then be used in our game to store and interact with items.

*/

class GameInventory extends Inventory
{
    var int InvSlots;
    var int MaxSlots;

    simulated function AddItemToInventory(InventoryItem NewItem)
    {
        if (InvSlots < MaxSlots)
        {
            Inventory.AddItem(NewItem);
            InvSlots++;
        }
    }

    simulated function UseItemFromInventory(InventoryItem ItemToUse)
    {
        if (Inventory.Contains(ItemToUse))
        {
            //execute use functionality for the item
        }
        else
        {
            `ERROR: Item not found in inventory.`;
        }
    }

    simulated function RemoveItemFromInventory(InventoryItem ItemToRemove)
    {
        if (Inventory.Contains(ItemToRemove))
        {
            Inventory.RemoveItem(ItemToRemove);
            InvSlots--;
        }
    }
}
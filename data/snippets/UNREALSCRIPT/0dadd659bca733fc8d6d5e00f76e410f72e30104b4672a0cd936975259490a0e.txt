class Projectile extends Actor;

/*
This class represents a basic projectile in the game.
It inherits from the Actor class and adds
functionality for collision and impact.
*/

var Vector Velocity;
/*
The Velocity of the projectile, determines its direction and speed.
*/

var float Damage;
/*
The amount of damage the projectile will inflict upon impact.
*/

/*
Event called whenever the projectile collides with another actor.
*/
event OnCollision(Actor OtherActor, Vector HitNormal)
{
    //calculate the damage based on velocity and impact normal
    local float DamageTaken = Velocity.Size() * FMax(HitNormal | Velocity.Normal, 0);

    //apply damage to OtherActor
    local Pawn OtherPawn;
    if (Pawn(OtherActor) != None)
    {
        OtherPawn = Pawn(OtherActor);
        OtherPawn.TakeDamage(Damage, Owner, Location, ShotDirection, class'DamageType');
    }

    //destroy the projectile after impact
    Destroy();
}

/*
Default function called when the projectile is spawned in the game world.
*/
DefaultProperties
{
    Begin Object Class=ThrowProjectileComponent Name=ThrowProjectileComponent0
    End Object

    Components.Add(ThrowProjectileComponent0)
    Velocity = vect(500, 0, 0)
    Damage = 50
    SphereComponent.CollisionResponses WorldDynamic,           WorldStatic            = COL_Bounce
    SphereComponent.CollisionResponses Pawn = COL_Block
    SphereComponent.CollisionResponses Projectile = COL_Ignore
}
// A complex class for creating a character in a video game

class Character extends Object
  	// Character parameters and properties
    abstract config float MaxHealth; 	// maximum health of the character
    config float Health; 				// current health of the character
    config float Armor; 				// amount of armor for reducing damage
    config bool bIsDead; 				// flag for character's death status

    // Function for taking damage
    function TakeDamage(float Damage, Pawn instigatedBy, Vector HitLocation, Vector Momentum, Name DamageType)
    {
        // Check if character is already dead
        if (bIsDead)
            return;

        // Reduce damage based on armor value
        Damage = Damage - Armor;

        // Check if damage is less than 0
        if (Damage <= 0)
            return;

        // Subtract damage from health
        Health -= Damage;

        // Check if health is less than 0
        if (Health <= 0)
        {
            // Set character as dead
            bIsDead = true;

            // Broadcast character death event to other classes
            BroadcastEvent(class'Character', CharacterDead);
        }
    }

    // Function for healing character
    function TakeHealth(float Healing)
    {
        // Check if character is already dead
        if (bIsDead)
            return;

        // Add healing to current health
        Health += Healing;

        // Check if health exceeds maximum health
        if (Health > MaxHealth)
            Health = MaxHealth;
    }

    // Function for reviving a dead character
    function ReviveCharacter()
    {
        // Check if character is dead
        if (!bIsDead)
            return;

        // Set character's health to maximum
        Health = MaxHealth;

        // Set character as alive
        bIsDead = false;

        // Broadcast character revival event to other classes
        BroadcastEvent(class'Character', CharacterRevived);
    }
    
    defaultproperties
    {
        MaxHealth=100.0f
        Health=100.0f
        Armor=50.0f
        bIsDead=false
    }
}
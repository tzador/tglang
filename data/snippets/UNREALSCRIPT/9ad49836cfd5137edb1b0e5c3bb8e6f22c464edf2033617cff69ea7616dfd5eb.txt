class MyCustomActor extends Actor
	// A custom actor class that extends the base Actor class
	// This allows us to add custom functionality and properties to our actor

	// Property to hold the actor's health
	var int Health;

	// Event that is called when actor is spawned
	event Spawned()
	{
		super.Spawned();

		// Set the actor's initial health to 100
		Health = 100;
	}

	// Function to take damage and update health
	function TakeDamage(int Amount)
	{
		// Update the actor's health by subtracting the damage amount
		Health -= Amount;

		// Check if actor is dead
		if (Health <= 0)
		{
			// Actor is dead, destroy it
			Destroy();
		}

		// Log the updated health
		log("Actor health is now " $ Health);
	}

	// Event that is called when the actor collides with another actor
	// Takes in the other actor as a parameter
	event Touch(Actor Other)
	{
		super.Touch(Other);

		// Check if the other actor is also a MyCustomActor
		if (Other.IsA(MyCustomActor))
		{
			// Send a message to the other actor
			MyCustomActor(Other).ReceivedMessage();
		}
	}

	// Function to send a message to another actor
	function SendMessage(Actor Other)
	{
		// Call the ReceivedMessage function on the other actor
		Other.ReceivedMessage();
	}

	// Function that is called when the actor receives a message
	function ReceivedMessage()
	{
		// Log a message
		log("Actor received message!");
	}
}
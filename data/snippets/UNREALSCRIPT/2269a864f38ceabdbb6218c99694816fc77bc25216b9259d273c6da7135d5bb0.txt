/** 
 * This is a complex class declaration in UnrealScript for a Player character
 * with multiple properties and functions.
 */
class PlayerCharacter extends Pawn native placeable;
 
var() int Health;
var() float Stamina;
var() bool IsAlive;
 
var array<Item> Inventory;
var array<Weapon> Weapons;
 
/** 
 * Event called when the player's health reaches 0, indicating their death.
 */
event OnDeath() 
{
    // Code here to handle the player's death
    // For example, playing an animation or resetting the level
}
 
/** 
 * Function called when the player interacts with an object in the world.
 * It takes in the object being interacted with as a parameter.
 */
function Interact(Actor Interactable) 
{
    // Code here to handle the player interacting with the object
    // For example, picking up an item or opening a door
}
 
/** 
 * Function called when the player takes damage.
 * It takes in the amount of damage as a parameter.
 * It updates the player's health and checks for death.
 */
function TakeDamage(int Damage) 
{
    // Update player's health
    Health -= Damage;
    
    // Check if player is dead
    if (Health <= 0) 
    {
        // Call event for death
        OnDeath();
        
        // Set player as dead
        IsAlive = false;
    }
}
 
/** 
 * Function called when the player finishes a level.
 * It updates the player's stats and unlocks rewards.
 * It takes in the level's score as a parameter.
 */
function CompleteLevel(int Score) 
{
    // Update player's stamina based on score
    Stamina += Score / 100;
    
    // Unlock rewards based on score
    if (Score >= 1000) 
    {
        // Unlock new weapon
        Weapons.AddItem(new Weapon());
    }
}
 
/** 
 * Initialization function called when the player spawns into the level.
 * It sets the starting values for the player's properties.
 */
function Init() 
{
    // Set starting values for player
    Health = 100;
    Stamina = 100.0;
    IsAlive = true;
    
    // Add starting inventory items
    Inventory.AddItem(new Item());
    
    // Add starting weapon
    Weapons.AddItem(new Weapon());
}
 
/** 
 * Main loop function called every frame for the player.
 * It updates the player's actions based on user input.
 */
function Tick(float DeltaTime) 
{
    // Move player based on user input
    if (KeyDown(W)) 
    {
        MoveForward(100.0 * DeltaTime);
    }
    if (KeyDown(S)) 
    {
        MoveForward(-100.0 * DeltaTime);
    }
    if (KeyDown(A)) 
    {
        MoveRight(-100.0 * DeltaTime);
    }
    if (KeyDown(D)) 
    {
        MoveRight(100.0 * DeltaTime);
    }
    
    // Handle player interactions
    if (KeyDown(E)) 
    {
        // Get the actor the player is looking at
        local actor Target = Trace(Target, GetRotation());
        
        // Call Interact function with the targeted actor
        Interact(Target);
    }
}
 
defaultproperties 
{
    Begin Object class=StaticMeshComponent Name=Mesh
        StaticMesh=StaticMesh'EngineMeshes.Sphere'
        Translation=(X=-50.0)
        Name="PlayerMesh"
    End Object
    Begin Object Class=DynamicLightEnvironmentComponent Name=LightEnvironment
        bShadowCast=True
    End Object
    Components.Add(Mesh)
    Components.Add(LightEnvironment)
}
 
// End of Code Snippet.
class Projectile extends Actor;          // Creates a new class called Projectile that inherits from the Actor class.

var Vector Velocity;                     // Declares a variable of type Vector called Velocity.

simulated event Impact(Object Other, Actor ImpactedActor, PrimitiveComponent HitComponent, Vector HitLocation, Vector HitNormal) // Creates a simulated event called Impact that takes in multiple parameters.

var float damage = 10.f;                 // Declares a variable of type float called damage and initializes it to 10.

if (ImpactedActor != none && HitComponent != none)     // Checks if the ImpactedActor and HitComponent are not null.
{
    ImpactedActor.TakeDamage(damage, None, Velocity, HitLocation, HitComponent);     // Calls the TakeDamage function on the ImpactedActor with the given parameters.
    
    HitComponent.Impulse = HitNormal * 5000;       // Sets the Impulse of the HitComponent to the product of HitNormal and 5000.
}

if (Other != none && Other.IsA('Pawn'))      // Checks if the Other object is not null and is of type Pawn.
{
    local Pawn OtherPawn;                    // Declares a local variable of type Pawn called OtherPawn.
    
    OtherPawn = Pawn(Other);                 // Casts the Other object to type Pawn and assigns it to the OtherPawn variable.
    
    OtherPawn.TakeDamage(damage, None, Velocity, HitLocation, HitComponent);      // Calls the TakeDamage function on the OtherPawn with the given parameters.
}

defaultproperties
{
    bCollideActors = true;      // Sets the bCollideActors property of the Projectile class to true.
    bBlockActors = true;        // Sets the bBlockActors property of the Projectile class to true.
    Begin Object Class = SpriteComponent Name = ProjectileSprite      // Creates a SpriteComponent called ProjectileSprite.
        Sprite = Sprite'Particle.Sprite.P_Rock'                       // Sets the Sprite property of the ProjectileSprite to the Particle.Sprite.P_Rock sprite.
        AlwaysLoadOnClient = true;                                   // Sets the AlwaysLoadOnClient property of the ProjectileSprite to true.
    End Object
    ProjectileSprite = ProjectileSprite      // Assigns the ProjectileSprite object to the ProjectileSprite property.
}
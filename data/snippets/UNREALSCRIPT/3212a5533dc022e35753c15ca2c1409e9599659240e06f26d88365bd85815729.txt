class MyActor extends Actor
    // This is a complex and lengthy code snippet in UNREALSCRIPT
    // It includes annotations to explain each line of code
    // We are creating a new class called MyActor that extends the Unreal Engine's Actor class

    // Declare variables for this class
    var int Health;
    var float Speed;

    // When this class is spawned, execute this function
    function PostBeginPlay()
    {
        // Set the values for Health and Speed
        Health = 100;
        Speed = 5.0;
        
        // Call the parent PostBeginPlay() function
        Super.PostBeginPlay();
        
        // Print a message to the console
        log("MyActor has been spawned!");
    }

    // Function to handle an event
    function OnTakeDamage(int DamageAmount, Controller EventInstigator, Vector HitLocation, vector Momentum, class damageType, Actor instigatedBy, vector DamageCauserImpulse)
    {
        // Subtract the DamageAmount from Health
        Health -= DamageAmount;
        
        // If Health drops below 0, destroy the actor
        if (Health <= 0)
        {
            Destroy();
        }
        
        // Print a message to the console
        log("MyActor has taken " $ DamageAmount $ " damage!");
        
        // Call the parent OnTakeDamage() function
        Super.OnTakeDamage(DamageAmount, EventInstigator, HitLocation, Momentum, damageType, instigatedBy, DamageCauserImpulse);
    }

    // Function to handle input from the player
    function PlayerInput(float DeltaTime)
    {
        // Get the input from the player's controller
        local PlayerController PC;
        PC = Level.GetLocalPlayerController();
        
        // Move the actor based on player input
        move(PlayerInput.X * Speed * DeltaTime, PlayerInput.Y * Speed * DeltaTime, 0);
        
        // Print a message to the console
        log("MyActor is moving!");
        
        // Call the parent PlayerInput() function
        Super.PlayerInput(DeltaTime);
    }
endclass
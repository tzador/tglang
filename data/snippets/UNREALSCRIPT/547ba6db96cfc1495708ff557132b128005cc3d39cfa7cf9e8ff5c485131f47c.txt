class GlassBottle extends Weapon expands UTWeapon;
    // This class represents a glass bottle weapon that extends the UTWeapon class in the UnrealScript language.

    var() float Damage; 
    // Property used to define the amount of damage the glass bottle will inflict.

    function Fire() {
        // This function is used to execute the firing action of the glass bottle weapon.
        local UtPawn Other;
        if (Role < ROLE_Authority) {
            return;
        }

        if (MyPawn.IsPlaying() && MyPawn.CanFire()) {
            // Check if the pawn is currently playing and is able to fire.
            local vector RealAimDir, RealStartTrace, RealEndTrace;
            
            RealAimDir = vect(30000, 0, 0);
            RealStartTrace = MyPawn.EyeLocation - vect(0, 0, 16);
            RealEndTrace = RealStartTrace + Normal(RealAimDir) * vect(30000, 0, 0);

            local vector HitLocation, HitNormal;
            local PrimitiveComponent HitComponent;
            local Actor HitActor;
            local TraceHitInfo HitInfo;

            // Perform a trace to detect any potential collisions with other actors.
            if (Pawn(MyPawn.Playing) != None) {
                if (MyPawn.PlayerTrace(Out HitLocation, Out HitNormal, RealStartTrace, RealEndTrace, TRACEFLAG_Bullet) &&
                    Pawn(MyPawn.Playing) != Pawn(MyPawn)) {
                    HitComponent = HitInfo.Component;
                    HitActor = HitInfo.Actor;
                    
                    // Check if the trace hit an actor.
                    if (HitActor != None) {
                        if (Pawn(HitActor) != Pawn(MyPawn)) {
                            if (!Pawn(HitActor).IsA('UTPawn')) {
                                Other = Pawn(HitActor);
                            }
                        }
                    }
                }
            }

            // Spawn the projectile at the location of the glass bottle.
            local Projectile FireProj;
            FireProj = Spawn(class'Projectile', MyPawn,,,,,,'FireProj',,, HIT_MyWeapon, RealStartTrace + RealAimDir * 14, RealAimDir, MyPawn,,);
            if (FireProj != None) {
                FireProj.SetVelocity(RealAimDir);
                FireProj.iDamage = Damage;
            }
        }

        // Play the firing animation.
        AnimLoop(FIBER_PlayAnim, 'Attack', false);
    }

    function AdjustWeaponTiming() {
        // This function is used to adjust the timing of the weapon animation based on the speed of the player pawn.
        local float LocalSpeedFactor;
        LocalSpeedFactor = Sqrt(Pawn(MyPawn).Velocity.Size2dSquared()) * Flame.cans;
        LoopAnim('FireLoop', 0, 0.1, 16.66 / LocalSpeedFactor, 1.5, 3000);
    }
defaultproperties
{
    bSuspendable=true;

    Content="GameData";

    IconMaterial='XPMaterialInterface Icon';
    PickUpMessageClass=EngineMessage;
    PickUpAmmoCount=8;

    GroupName="Weapons";
    IconMaterial="HUD_HUD";
    Rotation=2047;
    bReadyToFire=true;
    bImpactRipple=false;
    PredictAheadTime=65536.0;
    CameraShake="False";
    ImpactSound="SndImpactFlak";
    DefaultMaxFOV=60.0;
    Group=2;
    SlotIndex=0;

    SecondsBetweenShots=0.5;
    m_DistanceOfRangeDamage=700.0;
    iDamage=45;
    AccuracySpread = 0.1;
    FireModeClass=class'UTWeapFlakCannonImpact';
    PawnsToBlastPerFire=512;
    FireScale=0.4;
    FinalFireScale=1.5;
    Offset_Z=16;
    FireOffset=(X=-31.6,Y=-22.0,Z=16.0);
    LeftFireOffset=(X=-31.6,Y=-22.0,Z=-11.0);
    ViewKickback=(-18, 0, 6);
    HitFrame=7;
    Speed=1100.0;
    ProjectileSpeed=2000.0;
    ProjectileSpawnOffset=(X=10,None,Y=-10);
    MaxDesiredScale=10;
    DamageType=DT_Weapon;
    DelayAutoDropVol=0.f;
    DelayAutoDropPitch=1.0f;
    DamageType=DT_Lightning;
    AutoAimDistance=8192.f;
    LockerName=UTWeapFlakCannonLocker;
    LockerDescription="The Flak Cannon is a Multi-Purpose weapon that has a high rate of fire and powerful explosions. It can be loaded with a Snap-Shot flak, which when used, explodes on impact, causing massive damage and knocking the player back.";
    ZoomActivateSound=Sound'CarsHorn.CarsHorn_1';
    StillFrameRate=1;
    Wobble=164;
    ZoomFOV=30;
    DrawingColor=(R=253,G=107,B=4,A=cx50);
    PointDisplayType=POINT_DISPLAY_NORMAL;
    PointDisplayIntersectionScale=1.5;
    DrawSound=Sound'HUD.Weapon';
    EquipSound=Sound'WC.WpnCD';
    DoNotChargeMessageClass='Class CTHealthKitMessage';
    AltFireSpawnClass=class"UTSkaarjWeaponPieces";
    AltFireMaxNumFragments=10;
    NumBounces=6;
    HomingRange=1024.0;
    MaxRangeDiscardDist=65536.f;
    BallisticRange=8192.0;
    BallisticSpread=500.0;
    HomingPLRange=1280.0;
    BallisticPLRange=1600.0;
    BallisticLLRange=2560.0;
    BallisticPLLeadPercentage=0.0;
    BallisticLLLeadPercentage=1.0;
    BallisticLLControlImpulseRange=1200;
    BallisticLLRangeExitThresh=1100.f;
    HomingFixedMaxZ=0.0;
    HomingFixedSpeed=8192.0;
    AltFireAmmoCount=8;
    SureAdjustMouthToBodyBreak=0.0;
    SureAdjustMouthToBodyGoInArrow=0.0;
    SureAdjustEjaculate=0.0;
    ImpactList=Needed
    // The list of assets needed to properly display the glass bottle weapon in the game.
}
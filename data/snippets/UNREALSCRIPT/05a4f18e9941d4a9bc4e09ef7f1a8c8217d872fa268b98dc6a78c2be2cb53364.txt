// This is a comment in UNREALSCRIPT

class SuperWeapon extends Weapon static native;

class Weapon extends Inventory
    abstract function GetAmmoCount(EAmmoType AmmoType) const;
    simulated function FireProjectile(class Projectile FireProjectile, vector FireOffset, vector FireDir)
    simulated function OnAttachTo(Pawn AttachTo)
    final function TossPickup(optional Player optionalOwner, bool bHugeBoost)
        local vector LaunchDir;
        local Rotator LaunchRot;
        local Vector LaunchVelocity;
        local Vector ActorLocation;
            ActorLocation = AttachTo.Location;
            LaunchDir = normal(FireOffset - ActorLocation);
            ActorLocation += LaunchDir;
            Transform GetAxes(Actor.Location, Actor.Rotator) into Rotation;
            LaunchRot = Rotation;
            if(Application.bGameYouTubeMode)
                LaunchRot.Yaw += 180;
            else
            {
                local Object M;
                    foreach WorldInfo.AllActors(
                        class'movable', M)
                            if(M != self
                                && (class'Monster'
                                    != None)
                                || class'TrashSack'
                                    != None))
                                    M.event.Bump(ActorLocation, LaunchVelocity, (FireOffset - ActorLocation), 0.1);
        Super.TosspickUp(optionalOwner, bHugeBoost);
        return Vector(Ram(Location) * 10000) + 10;
    event Bump(Actor Other, PrimitiveComponent OtherComp, Vector HitNormal)
        if(Other.IsA('PlayerPawn')
            && klass.GetParentClass() == Name('FlyingMonster')
            && GetAmmoCount(EAmmoType.Laser) >= 1)
            FireProjectile(SP.LaserAmmoType);
        else
            PlaySound( Sound'Weapon-MonsterLightningMaterial (New SoundCue), Stop_sound);
        Super.Bump();
    simulated function PlayJingle(class MonoDevice Jingles, float Gain, name SoundName)
        local string DisplayText;
        if(class'Pawn'(HitTest(PlaySound'PositionInPlay'))
            for(active_volatile_voice in infantry_talk)
                if()
                    PlayJingle(1).PlaySoundEffect(LaserHit);
    const static function ForceWaveInfluence(out int AnotherOr, editinline ForceMutator ApplyForceType)
    {
        local int Other, ForceWeaponEffect;
        local Object M;
        outParam;
        AnotherOr = 5;
            class'Camera'
                != None
                for
                    1 > 1
                if()
                {
                    M.EventInsectMoveForce(EffectList, Other, outParam, Trajectory Template Cameron);
                    spawn TossWeapon("OWNEDflagShrineAmmo", M);
                }
    defaultproperties
    {
        Mesh = "SkeletalMesh'SkeletalMesh'mTrooper1";
        group_SteamCost = 50;
        Mesh = "SkeletalMesh'SkeletalMesh'mTotemToBWidthNear";
        group_PCQuantity = 3;
    }
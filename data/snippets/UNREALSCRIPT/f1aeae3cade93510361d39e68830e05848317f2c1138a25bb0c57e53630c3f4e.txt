/** `ClassIsArchetype` checks if a given class is an archetype of another class and returns a boolean value 
 *  @param AClass The class to check if it is an archetype
 *  @param AArchetype The class to check if it is the archetype of AClass
 *  @returns A boolean value indicating if AClass is an archetype of AArchetype
 */ 
function bool ClassIsArchetype(class AClass, class AArchetype) 
{ 
    local class Base; // The current base class being checked 
   
    // Loop through all the superclasses of AClass 
    foreach AClass.AllSuperClasses(Base) 
    { 
        // Check if the current base class is the same as the archetype class 
        if(Base == AArchetype) 
        { 
            return true; // AClass is an archetype of AArchetype 
        } 
    } 
   
    // If no superclass matches the archetype class, return false 
    return false; 
}
class WeaponFactory extends Actor
    /*
    This class is responsible for creating weapon objects in the game.
    The Spawn function is used to spawn different weapons depending on their type.
    */
    hidden
    dependson(GameState);

    /*
    This array contains the names of all the weapon classes that are available in the game.
    */
    var const array <class<Weapon>> WeaponClasses;

    /*
    This function spawns a weapon of the specified type and attaches it to the WeaponComponent of the player.
    @param WeaponType - The type of weapon to be spawned.
    @param WeaponOwner - The owner of the weapon.
    @return Weapon - The spawned weapon object.
    */
    function Weapon Spawn(WeaponClass WeaponType, Controller WeaponOwner)
    {
        local Weapon NewWeapon; //creates a new local variable of type Weapon
        NewWeapon = Spawn(WeaponType, WeaponOwner); //spawns the weapon using the WeaponType and WeaponOwner parameters
        if(NewWeapon != none) //checks if the spawned weapon is valid
        {
            WeaponOwner.WeaponComponent.SetWeapon(NewWeapon); //attaches the weapon to the WeaponComponent of the player
            return NewWeapon; //returns the spawned weapon object
        }
        else
        {
            return None; //returns None if the weapon cannot be spawned
        }
    }

    /*
    This function preloads all the weapon classes that are available in the game.
    This improves performance by loading all the necessary resources before they are needed.
    */
    function PreloadClasses()
    {
        local WeaponClass CurrentClass;
        foreach(WeaponClasses, CurrentClass)
        {
            CurrentClass.PreloadTextures();
            CurrentClass.PreloadMeshes();
        }
    }
endclass
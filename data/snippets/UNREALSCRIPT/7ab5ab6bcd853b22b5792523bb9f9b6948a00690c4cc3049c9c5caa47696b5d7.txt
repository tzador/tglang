/**
* Comment block describing the functionality of the code
* This code snippet creates a class with multiple variables and functions
*/

class MyCustomClass extends Object // Class definition with inheritance
    placeable; // Attribute specifying the class can be placed

var() int MyIntVar; // Variable declaration with integer type and accessible from Editor
var(int) MyIntVar2; // Variable declaration with integer type and accessible from Blueprint
/**
* Multiline function declaration with int as return type and two input parameters
* Calling this function will increase the value of MyIntVar and MyIntVar2 by the input parameters
*/
function int IncreaseIntVar(int Input1, int Input2)
{
    MyIntVar += Input1;
    MyIntVar2 += Input2;
    return 0; // Function must return an int value
}

/**
* Function that can only be called from within the class
* This function executes the IncreaseIntVar function with specified input values
*/
private function ExecuteIncreaseIntVar()
{
    IncreaseIntVar(5, 10); // Calling the IncreaseIntVar function with input values 5 and 10
}

/**
* Event listener function that is called when the class is spawned
* This function creates an instance of the class and executes the ExecuteIncreaseIntVar function
*/
event PostSpawned()
{
    local MyCustomClass Instance; // Local variable declaration of type MyCustomClass
    instance = new(Outer); // Creating an instance of MyCustomClass using the Outer object
    Instance.ExecuteIncreaseIntVar(); // Calling the ExecuteIncreaseIntVar function of the instance
}

defaultproperties // Default properties for the class
{
    MyIntVar=0; // Default value for MyIntVar
    MyIntVar2=0; // Default value for MyIntVar2
}

/**
* Event listener function for when an actor enters a trigger volume
* This function displays a message on screen when an actor enters the trigger volume
*/
event Bump(Actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal)
{
    `log("Trigger volume activated!"); // Displaying a message in console
    `ScreenMessage("Actor" @ Other @ "entered the trigger volume!", 'White'); // Displaying a message on screen
}
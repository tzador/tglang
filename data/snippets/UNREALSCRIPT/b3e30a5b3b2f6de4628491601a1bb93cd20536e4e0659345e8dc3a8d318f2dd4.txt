/*
  This snippet creates a custom weapon class with various properties and functions in UNREALSCRIPT.
  It also modifies the existing functions of the base weapon class.
  Author: John Smith
*/

class CustomWeapon extends Weapon;

// Properties
var() int ammoType; // integer property for the type of ammo the weapon uses
var() float damage; // float property for the damage done by the weapon
var() float firingSpeed; // float property for the speed of firing the weapon
var(APawn) owner; // actor property for the owner of the weapon

// Functions
// Constructor function to set default values for properties
function InitDefaultProperties()
{
  Super.InitDefaultProperties();

  ammoType = 1;
  damage = 25.0;
  firingSpeed = 0.5;
}

// Function to fire the weapon
// Takes in a vector parameter for the direction of the fire
function Fire(Vector fireDir)
{
  // Check if the owner is valid and has enough ammo
  if (owner != None && owner.IsA('Pawn') && owner.Ammo[ammoType] > 0)
  {
    // Apply damage to nearby actors in a 500 unit radius
    foreach RadiusActors(class'Actor', 500, owner.Location)
    {
      RadiusActors.ApplyDamage(damage, owner, fireDir, ImpactLocation, class'None');
    }

    // Decrease ammo count for the current ammo type
    owner.Ammo[ammoType]--;

    // Play firing animation
    PlaySound(sound'WeaponFiringSound');
    PlayAnim('Fire', 0.5);
  }
}

// Overridden function for reloading the weapon
function Reload()
{
  // Check if the owner is valid and has enough ammo
  if (owner != None && owner.IsA('Pawn') && owner.Ammo[ammoType] > 0)
  {
    // Set the state of the weapon to reloading
    SetWeaponState(WPN_Reloading);

    // Wait for 2 seconds before reloading is finished
    owner.SetTimer(2, false, 'ReloadingFinished');
  }
}

// Function to be called when reloading is finished
function ReloadingFinished()
{
  // Increase the ammo count for the current ammo type
  owner.Ammo[ammoType]++;

  // Reset the weapon state
  SetWeaponState(WPN_Ready);
}

defaultproperties
{
  // Set the class to CustomWeapon
  ObjectClass = CustomWeapon

  // Set the name of the weapon
  ItemName = "CustomWeapon"

  // Set the mesh for the weapon
  Mesh = Mesh'Weapons.CustomWeaponMesh'

  // Set the firing sound for the weapon
  FireSound = Sound'Weapons.CustomWeaponFiringSound'

  // Set the animation played when firing
  FireAnim = 'Fire'

  // Set the max ammo count for the current ammo type to 100
  MaxAmmo[1] = 100
}
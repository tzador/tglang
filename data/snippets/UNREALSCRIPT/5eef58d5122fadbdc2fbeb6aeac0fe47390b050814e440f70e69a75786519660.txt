class MyClass extends Object //create a new class that extends the Object class
  const int MAX_HEALTH = 100; //declare a constant variable with a value of 100
  var() editconst int Health; //declare a variable that can be edited in the editor and is constant
  replication //begin replication block
  {
    reliable if(Role == ROLE_Authority) //check if the role is set to authority
    Health; //replicate the Health variable
  }

  simulated event TakeDamage(int DamageAmount) //create simulated event to handle taking damage
  {
    if(Health - DamageAmount < 0) //check if calculated health is less than 0
    {
      Health = 0; //set health to 0
      Die(); //call the Die function
    }
    else
    {
      Health -= DamageAmount; //subtract DamageAmount from Health
    }
  }

  function Die() //create a function to handle death
  {
    `Log("Object: $this Taking Damage");` //print a log message
    `Log("Object: $this has died!");` //print a log message
    self.Destroy(); //destroy the object
  }
  
  //begin behavior tree block
  begin object BehaviorTreeComponent SubObj //create a behavior tree component as a subobject
    bIsUsingOldBehaviorTreeFormat = false; //specify that it is not using an old behavior tree format
    bLoop = true; //set the behavior tree to loop
    OptimizationGranularity = BTOptimizationGranularity_Owner; //set the optimization granularity
    TreeToUse = Tree; //use the specified tree
    Agent = self; //set the agent to be the current object
    TreeTickInterval = 0.2; //set the tree tick interval to 0.2 seconds
  end object
endscope //end class scope
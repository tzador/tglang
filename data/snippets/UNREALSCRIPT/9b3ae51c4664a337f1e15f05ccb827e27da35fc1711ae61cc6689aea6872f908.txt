// This is a complex code snippet in UNREALSCRIPT that creates a class with multiple properties and functions

class MyActor extends Actor; // creates a class called "MyActor" that inherits from the base class "Actor"

var int MyInt; // creates an integer property called "MyInt"
var float MyFloat; // creates a float property called "MyFloat"
var string MyString; // creates a string property called "MyString"
var bool MyBool; // creates a boolean property called "MyBool"

defaultproperties // indicates the default values for the properties
{
    MyInt= 100; // sets the default value of "MyInt" to 100
    MyFloat= 3.14; // sets the default value of "MyFloat" to 3.14
    MyString= "Hello"; // sets the default value of "MyString" to "Hello"
    MyBool= true; // sets the default value of "MyBool" to true
}

// The following are functions that can be used by instances of the "MyActor" class

// Function to set the value of "MyInt"
function SetMyInt(int NewInt)
{
    MyInt= NewInt; // sets the value of "MyInt" to the value passed in as an argument
}

// Function to get the value of "MyInt"
function int GetMyInt()
{
    return MyInt; // returns the current value of "MyInt"
}

// Function to set the value of "MyFloat"
function SetMyFloat(float NewFloat)
{
    MyFloat= NewFloat; // sets the value of "MyFloat" to the value passed in as an argument
}

// Function to get the value of "MyFloat"
function float GetMyFloat()
{
    return MyFloat; // returns the current value of "MyFloat"
}

// Function to set the value of "MyString"
function SetMyString(string NewString)
{
    MyString= NewString; // sets the value of "MyString" to the value passed in as an argument
}

// Function to get the value of "MyString"
function string GetMyString()
{
    return MyString; // returns the current value of "MyString"
}

// Function to set the value of "MyBool"
function SetMyBool(bool NewBool)
{
    MyBool= NewBool; // sets the value of "MyBool" to the value passed in as an argument
}

// Function to get the value of "MyBool"
function bool GetMyBool()
{
    return MyBool; // returns the current value of "MyBool"
}
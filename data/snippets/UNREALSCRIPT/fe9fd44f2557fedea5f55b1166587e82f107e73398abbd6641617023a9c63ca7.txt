// This is a comment in UNREALSCRIPT

class PlayerCharacter extends UTPawn; // Creates a new class called 'PlayerCharacter' that extends from UTPawn

defaultproperties
{
    Begin Object Class=DynamicLightEnvironmentComponent Name=LightEnvironment // Creates a dynamic light environment component
        Brightness=255 // Sets the brightness to maximum
        bAffectsTranslucency=true
    End Object
    Components.Add(LightEnvironment) // Adds the light environment component to the list of components for the player character
}
 
event BeginPlay()
{
    Super.BeginPlay(); // Calls the 'BeginPlay' event in the parent class
    SetPhysics(PHYS_Falling) // Sets the physics mode to 'Falling' for the player character
    SetPhysics(PHYS_Sleeping) // Sets the physics mode to 'Sleeping' for the player character
 
    // Creates a new variable called 'MyCharacter'
    local PlayerCharacter MyCharacter;
    MyCharacter = GetOuterUCPawn(); // Assigns the parent UCPawn to the 'MyCharacter' variable
    MyCharacter.Health = 100; // Sets the player character's health to 100
 
    for(LocalPlayerController Controller: LocalPlayerControllers) // Loops through all the local player controllers
    {
        if(Controller.GetHUD()) // Checks if the controller has a HUD (head-up display)
        {
            // Adds a message to the HUD
            Controller.GetHUD().AddPostRenderedActor(Controller.GetClass(), 50, 50, 100, 20, "Welcome to my game", Controller.DrawColor, 4.0);
        }
    }
}

state(FirstPerson)
{
    // Server-side RPC event
    simulated event ServerEvent()
    {
        // Code to be executed on the server
        Debug("Server event executed", 5.0);
    }
 
    // Client-side replication event
    simulated event ReplicationEvent()
    {
        // Code to be executed when the state is replicated to the client
        Debug("State replicated to client", 5.0);
    }
}
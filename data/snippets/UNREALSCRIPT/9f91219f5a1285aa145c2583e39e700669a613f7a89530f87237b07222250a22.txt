class SomeClass extends SomeOtherClass implements SomeInterface
{
    const SOME_CONSTANT = 5; // declaring a constant variable
    var int someVariable; // declaring a variable with type definition
    local string someString; // declaring a local variable with no type definition

    defaultproperties // defining default properties for the class
    {
        someVariable = 10; // assigning a value to the variable
        someString = "Hello world!"; // assigning a value to the variable
    }

    /**
     * This function does something
     * @param string SomeParam - a parameter of type string
     * @return bool - returns true if successful, otherwise false
     */
    function DoSomething(string SomeParam)
    {
        if (SomeConstant > 5) // using the constant variable
        {
            log("Parameter passed: " $ SomeParam); // logging a message with concatenation
            return true; // returning the result
        }
        else
        {
            return false; // returning the result
        }
    }

    /**
     * This function does something else
     * @param object SomeObject - a parameter of type object
     * @return bool - returns true if successful, otherwise false
     */
    function DoSomethingElse(object SomeObject)
    {
        for (local int i = 0; i < SomeVariable; i++) // using the local variable in a for loop
        {
            SomeObject.DoSomething(); // calling a function of the passed in object
        }
        return true; // returning the result
    }
}
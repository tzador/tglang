// This code snippet creates a custom actor class named "MyActor"

class MyActor extends Actor    // Declares the class, which extends the Actor class
    ingroup(MyGroup)           // Specifies the group this class belongs to
    natives                    // Marks this class as a native class

    config(MyConfig)           // Specifies a configuration object for this class

    // Declare variables, structs, and arrays for this class
    var int MyInt;
    var float MyFloat;
    var string MyString;
    var array<int> MyIntArray;
    var array<string> MyStringArray;
    var struct<MyStruct> MyStructVariable;

    // Declare functions for this class
    function Update()            // Specifies a function that will be called every frame
        local Actor MyOwner;     // Declares a local variable of type Actor
        MyOwner = GetOwner();    // Assigns the value of the GetOwner native function
        MyOwner.SetLocation(Location(500, 500, 500));   // Calls the SetLocation function on the owner actor
    endfunction

    function MyFunction(int Param1, float Param2)    // Declares a function with parameters
        local int ReturnValue;                      // Declares a local variable to store the return value
        ReturnValue = Param1 + Param2;              // Performs some logic on the parameters and assigns the result to the return value
        return ReturnValue;                         // Returns the value of the return value variable
    endfunction

    // Declare a remote event for this class
    event MyEvent(int EventParam)   // Declares a remote event with a parameter of type int
        BroadcastEvent(EventParam); // Calls the BroadcastEvent native function to send the event to all connected clients
    endevent
endscript  // Ends the class declaration
//========================================================================================
//
// MyActorClass.uc - A custom actor class with multiple properties and functions
//
// Author: Unreal Coder
//
//========================================================================================

class MyActorClass extends Actor
    placeable;

// An integer property with a default value of 5
var int MyIntegerProperty = 5;

// A boolean property that can be updated in the editor
var() bool MyBooleanProperty;

// An array property of integers with a size limit of 10 elements
var int[10] MyIntegerArrayProperty;

// A variable that stores a reference to another actor
var Actor MyOtherActor;

// A function that sets the MyIntegerProperty to a given value
function SetIntegerProperty(int NewValue)
{
    MyIntegerProperty = NewValue;
}

// A function that adds a new integer to the MyIntegerArrayProperty
function AddIntegerToArray(int NewElement)
{
    MyIntegerArrayProperty[MyIntegerArrayProperty.Length] = NewElement;
}

// A function that returns the sum of all integers in the MyIntegerArrayProperty
function GetArraySum()
{
    local int Sum;

    // Loop through the array and add all elements to the sum
    for (local int i = 0; i < MyIntegerArrayProperty.Length; i++)
    {
        Sum += MyIntegerArrayProperty[i];
    }

    // Return the final sum
    return Sum;
}

// A function that checks if MyOtherActor is currently active
function IsActorActive() returns bool
{
    // Check if the actor is valid
    if (MyOtherActor != None)
    {
        // Check if the actor is currently active in the world
        if (MyOtherActor.bIsActive)
        {
            // Return true if the actor is active
            return true;
        }
    }

    // Return false if the actor is not active or does not exist
    return false;
}

defaultproperties
{
    // Set the default value for MyBooleanProperty to be false
    MyBooleanProperty=False

    // Set the default value for MyOtherActor to be None
    MyOtherActor=None
}
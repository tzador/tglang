/*
This code snippet implements a basic inventory system
that allows the player to add, remove, and swap items.
*/

// Define a new struct to represent an item
struct Item
{
    var string Name;
    var int Quantity;
};

// Create a new array to store items
var array<Item> Inventory;

// Function to add an item to the inventory
function AddItem(string NewItemName, int NewItemQuantity)
{
    // Check if the item already exists in the inventory
    local bool bItemExists;
    local int ExistingItemIndex;

    foreach(Inventory, bItemExists, ExistingItemIndex, Item)
    {
        if (Item.Name == NewItemName)
        {
            // Add the quantity of the new item to the existing item
            Item.Quantity += NewItemQuantity;
            bItemExists = true;
            break;
        }
    }

    // If the item does not exist, create a new one and add it to the inventory
    if (!bItemExists)
    {
        local Item NewItem;
        NewItem.Name = NewItemName;
        NewItem.Quantity = NewItemQuantity;
        Inventory.AddItem(NewItem);
    }
}

// Function to remove an item from the inventory
function RemoveItem(string ItemName)
{
    // Check if the item exists in the inventory
    local bool bItemExists;
    local int ItemIndex;

    foreach(Inventory, bItemExists, ItemIndex, Item)
    {
        if (Item.Name == ItemName)
        {
            // Remove the item from the inventory
            Inventory.Remove(bItemExists, ItemIndex);
            break;
        }
    }
}

// Function to swap two items in the inventory
function SwapItems(string FirstItem, string SecondItem)
{
    // Check if both items exist in the inventory
    local bool bFirstItemExists;
    local int FirstItemIndex;
    local bool bSecondItemExists;
    local int SecondItemIndex;

    // Find the index of the first item
    foreach(Inventory, bFirstItemExists, FirstItemIndex, Item)
    {
        if (Item.Name == FirstItem)
        {
            break;
        }
    }

    // Find the index of the second item
    foreach(Inventory, bSecondItemExists, SecondItemIndex, Item)
    {
        if (Item.Name == SecondItem)
        {
            break;
        }
    }

    // Swap the items if both exist
    if (bFirstItemExists && bSecondItemExists)
    {
        local Item Temp = Inventory[FirstItemIndex];
        Inventory[FirstItemIndex] = Inventory[SecondItemIndex];
        Inventory[SecondItemIndex] = Temp;
    }
}

// Create a new instance of the inventory system
local InventorySystem MyInventory;
MyInventory = new(class'InventorySystem');

// Add items to the inventory
MyInventory.AddItem("Sword", 1);
MyInventory.AddItem("Potion", 5);

// Remove an item from the inventory
MyInventory.RemoveItem("Potion");

// Swap two items in the inventory
MyInventory.SwapItems("Sword", "Shield");
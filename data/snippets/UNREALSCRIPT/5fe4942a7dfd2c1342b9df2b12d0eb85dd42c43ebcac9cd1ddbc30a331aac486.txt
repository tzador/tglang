/**
 This class is used to check if a pawn is within range of another pawn and
 execute an event if they are.
*/
class WithinRangeTrigger extends Trigger;

/** The first pawn in range. */
var() Pawn WithinRangeActor;

/** The range within which to check for the other pawn. */
var() float TriggerRadius;

/** Whether to use the other pawn's collision radius when checking range.  */
var() bool bCheckCollisionRadius;

/** Delegate for when a pawn enters the trigger's range. */
delegate WithinRangeEvent(Actor Other);

/** Delegate for when a pawn is no longer within the trigger's range. */
delegate OutOfRangeEvent(Actor Other);

/** The event to bind when a pawn enters the trigger's range. */
var() WithinRangeEvent OnWithinRange;

/** The event to bind when a pawn is no longer within the trigger's range. */
var() OutOfRangeEvent OnOutOfRange;

/**
 Checks if the other pawn is within range of this trigger and executes the appropriate event.
 param Other - The pawn to check range against.
*/
function CheckRange(Pawn Other)
{
  local float OtherRadius;
  local float CheckDistance;
  
  // If using the other pawn's collision radius, use that instead of TriggerRadius.
  if(bCheckCollisionRadius)
    OtherRadius = Other.CollisionRadius;
  else
    OtherRadius = TriggerRadius;
  
  // Calculate the distance between the two pawns.
  CheckDistance = VSize(Other.Location - Location);
  
  // Check if the distance is less than both pawns' radii combined.
  if(CheckDistance < OtherRadius + CollisionRadius)
  {
    // The other pawn is within range, execute the OnWithinRange event.
    OnWithinRange(Other);
  }
  else
  {
    // The other pawn is out of range, execute the OnOutOfRange event.
    OnOutOfRange(Other);
  }
}

/**
 Handles the event of a pawn entering the trigger's range.
 param Other - The pawn that entered the range.
*/
event Pawn EnteredRange(Pawn Other)
{
  // Calls the CheckRange function with the other pawn as the parameter.
  CheckRange(Other);
}

/**
 Handles the event of a pawn leaving the trigger's range.
 param Other - The pawn that left the range.
*/
event Pawn LeftRange(Pawn Other)
{
  // Calls the CheckRange function with the other pawn as the parameter.
  CheckRange(Other);
}
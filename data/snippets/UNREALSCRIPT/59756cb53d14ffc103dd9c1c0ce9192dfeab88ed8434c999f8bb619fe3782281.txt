class WorldInfo extends Info
    //Base class for all info actors that reside in the world, and are 
    // owned by the level- eg Notification messages, LiftExit Actors, or Inventory Spots
      
    // Serialized
    var const Level TheLevel;
    var const GUID Guid;

    // Constructors
    // All actors should have at least one default property to uniquely identify them
    // E.g. You might have an "id" field, which would be the editor-placed instance name
    
    //Used to "uniquely" name the actors in UnrealEd
    var string Caption;
    
    //EdInterface
    protected native final Function EditorSelect();
    simulation event OnEditorSelect();
    
    var world ScriptedSeqActor EditorScriptedActor; //used by UnrealEd when an actor has been selected it can execute a script 

    //Used internally to track whether an actor has had PreBeginPlay called on it
    var bool bPreBeganPlay;

    //You need this subclass for the "actorswithbeginnewburly" system
    replication (Role=RemoteRole) show (Actor);

    var float GameSpeed;
    var bool bWorldActive;
    var bool bPausing;

    // Variables for storing level thumbnail image
    var Texture LevelImage;
    var int LevelImageSizeX;
    var int LevelImageSizeY;

    //This level is the one that we take the avatar properties from
    var(Level) const class UnrealAvatar AvatarClass;
    var(Level) const class WindowGroup LevelAssociatedWindowGroup;

    // This offset is used when saving the camera's view to the thumbnail
    var(Level) const vector ThumbnailCamOffset;

    // Implementable mapped functions
    // These will be called at key moments in the engine and
    // can be overridden in UnrealScript subclasses

    // Level enumeration
    delegate bool LevelEnum(class Level Level);
    native final function ForEachLevel(LevelEnum LevelEnumerator);
    native function class Level FindLevel(string LevelName);
    native function class Level GetLevel(string URL, optional out Level OutLevel);
    native function Serialize(Writer Ar);
    event SerializeComponentTree(Writer Ar);
    native function Destroy();
    native function ReconcileExternalLightsForActor(Actor InActor);
    native final PreserveNetRelevancy(Actor Other);
    virtual function WriteObjectComment(string Comment);
    virtual function Reset();

    // Editor functions
    function PostLoad();
    function GetLevelNameList();
    final singular simulated function PostNetReceive();

    //Collision debug
    simulated function GamePlayStart(class Controller C);
    simulated function GamePlayEnd(class Controller C);

    //NoClipMode
    event ResetNoClip();

    //Player spawning
    simulated function SpawnPlayerController(string InURL);

    //Kept for backwards compatibility. Replace with postload
    simulated function event PostLoadGame();

    config function ReceiveLevelAvatarComponents();
    config function ReceiveLevelAvatarProperties();

    // UnrealEd functions
    event PostEditChange();
    event PostEditMove();
    event PostEditUndo();
    event PostEditRedo();
    event RepresentWholeLevel();
    function SetEditorShowFlags(array<name> FlagsToSet, array<name> FlagsToClear);

    //TweakedLadder
    simulated event bool StairTouched(Actor Other);
    Sepcs(NotAutoPlaceable)
    function ForEachInteractingActor(function bool (availabel Actor) iterator);
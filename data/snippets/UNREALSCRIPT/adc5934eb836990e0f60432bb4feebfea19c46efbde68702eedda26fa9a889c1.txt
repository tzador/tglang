/* 
This code snippet creates a custom class named "MyCustomClass". This class extends the "Actor" class and contains several properties and functions.

Parameters:
- ClassName (string): The name of the class to be created.
- ParentClass (string): The name of the parent class that the custom class will extend.
- Properties (array): An array of properties to be added to the class.
- Functions (array): An array of functions to be added to the class.
*/

class MyCustomClass extends Actor;

/* 
This property represents the maximum health of the actor.
Default value is 100.
*/
var (Transient) int MaxHealth;

/* 
This property represents the current health of the actor.
Default value is 100.
*/
var int CurrentHealth;

/*
This function is called when the actor takes damage.
Parameters:
- DamageAmount (int): The amount of damage taken.
- AppliedTo (Actor): The actor that the damage was applied to.
- DamageType (Class): The type of damage.
*/
function TakeDamage(int DamageAmount, Actor AppliedTo, class<DamageType> DamageType)
{
	// Subtract the damage from the current health.
	CurrentHealth -= DamageAmount;
	
	// Check if the actor has reached 0 health.
	if(CurrentHealth <= 0)
	{
		// Kill the actor.
		KillActor();
	}
}

/*
This function revives the actor and sets its health back to the maximum.
*/
function Revive()
{
	CurrentHealth = MaxHealth;
}

defaultproperties
{
	MaxHealth=100
	CurrentHealth=100
}

/* 
This code snippet creates a new instance of the custom class and assigns it to a variable named "myActor".
*/
local MyCustomClass myActor;
myActor = new class'MyCustomClass';
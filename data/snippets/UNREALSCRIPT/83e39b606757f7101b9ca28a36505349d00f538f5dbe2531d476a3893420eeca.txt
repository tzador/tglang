/**
 * This is a long and complex class that demonstrates advanced inheritance and polymorphism in UNREALSCRIPT.
 */
class AdvancedClass extends BaseClass extends ParentClass implements InterfaceClass
{
    // A constant value
    const float GRAVITY = 9.8;

    // Variables
    var string Name;
    var float Health;
    var bool IsAlive;

    // Constructor
    function AdvancedClass(string NewName, float NewHealth)
    {
        Name = NewName;
        Health = NewHealth;
        IsAlive = true;
    }

    // ParentClass override functions
    protected function Update()
    {
        // Calls ParentClass's Update function
        super.Update();

        // Additional logic specific to AdvancedClass
        if (Health <= 0)
        {
            IsAlive = false;
        }
    }

    // InterfaceClass functions
    function TakeDamage(float DamageAmount)
    {
        Health -= DamageAmount;
        if (Health <= 0)
        {
            IsAlive = false;
        }
    }

    function HealDamage(float HealingAmount)
    {
        Health += HealingAmount;
    }
}

// Usage
var AdvancedObject = new AdvancedClass("Bob", 100.0);
var InterfaceObject = AdvancedObject; // Can assign to parent class or interfaces

while(AdvancedObject.IsAlive)
{
    // Update the object's state
    AdvancedObject.Update();

    // Some logic specific to AdvancedClass
    if (AdvancedObject.Health <= 50)
    {
        // Use an interface function to heal the object
        InterfaceObject.HealDamage(10);
    }
}

// Output
Trace("The object " $ AdvancedObject.Name $" has died");
// This is a complex code snippet for defining an AI controller class for a video game using UNREALSCRIPT

// Import necessary modules
#include "Engine.h"
#include "AIController.h"

// Define the AI controller class
class MyAIController extends AIController;

// Define necessary variables
var Actor TargetActor;
var vector TargetLocation;
var bool bIsMoving;
var bool bIsAttacking;

// Override the default Tick function
function Tick(float DeltaTime)
{
    Super.Tick(DeltaTime);

    // Check if the target actor is valid
    if(TargetActor != None)
    {
        // Get the target's location
        TargetLocation = TargetActor.Location;

        // Calculate the distance between the AI and the target
        local float Distance;
        Distance = VSize(TargetLocation - Pawn.Location);

        // Check if the AI is within attacking range
        if(Distance <= 500)
        {
            // Set AI to attack
            bIsAttacking = true;

            // Stop AI movement
            bIsMoving = false;

            // Attack the target
            Attack(TargetActor);
        }
        // If not within attacking range, move towards target
        else
        {
            // Set AI to move
            bIsMoving = true;

            // Stop attacking
            bIsAttacking = false;

            // Move towards target
            MoveToActor(TargetActor);
        }
    }
}

// Custom function for attacking
function Attack(Actor Target)
{
    // Check if the target is a pawn
    if(Target.IsA('Pawn'))
    {
        // Cast the target to a pawn
        local Pawn TargetPawn;

        // Set the target pawn
        TargetPawn = Pawn(Target);

        // Check if the pawn is still alive
        if(TargetPawn.Health > 0)
        {
            // Calculate the damage to be dealt
            // This can be customized based on different factors
            local int Damage = 50 * Level;

            // Deal damage to target pawn
            TargetPawn.TakeDamage(Damage);

            // Log the damage dealt
            `Damage of $Damage dealt to $TargetPawn`;
        }
    }
}

// Custom function for moving towards target
function MoveToActor(Actor Actor)
{
    // Get the location of the actor
    local vector ActorLocation;
    ActorLocation = Actor.Location;

    // Use AI navigation to move towards the actor
    MoveToLocation(ActorLocation);
}
/*
This function creates a new inventory item with the given properties.
Params:
- Name: The name of the item.
- Description: A short description of the item.
- Weight: The weight of the item in pounds.
- Value: The value of the item in gold.
- Icon: The icon image for the item.
*/
class ItemInventory extends Inventory with Learning
	// Declares a new item class that inherits from the Inventory class and implements the Learning interface.

var(Inventory) localized string ItemName;
	// Declares a localized string variable to store the name of the item.

var(Inventory) string ItemDescription;
	// Declares a string variable to store the description of the item.

var(Inventory) float ItemWeight;
	// Declares a float variable to store the weight of the item.

var(Inventory) int ItemValue;
	// Declares an integer variable to store the value of the item.

var(Inventory) Texture ItemIcon;
	// Declares a variable of type Texture to store the icon image for the item.

function Init(string inName, string inDescription, float inWeight, int inValue, Texture inIcon)
{
	// Initializes the variables for the new item.
	ItemName = inName;
	ItemDescription = inDescription;
	ItemWeight = inWeight;
	ItemValue = inValue;
	ItemIcon = inIcon;
}

function GetName() const
{
	// Returns the name of the item.
	return ItemName;
}

function GetDescription() const
{
	// Returns the description of the item.
	return ItemDescription;
}

function GetWeight() const
{
	// Returns the weight of the item.
	return ItemWeight;
}

function GetValue() const
{
	// Returns the value of the item.
	return ItemValue;
}

function GetIcon() const
{
	// Returns the icon of the item.
	return ItemIcon;
}

defaultproperties
{
	ItemName="New Item";
	ItemDescription="This is a new item.";
	ItemWeight=2.5;
	ItemValue=10;
	ItemIcon=Texture'ItemIcons.NewItemIcon';
}
// Sets default values for the item properties.
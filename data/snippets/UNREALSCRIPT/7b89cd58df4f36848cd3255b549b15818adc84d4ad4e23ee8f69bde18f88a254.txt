// This code snippet is for creating a custom weapon in UNREALSCRIPT

class CustomWeapon extends Weapon;

var() config float AmmoConsumptionRate;
// Ammo consumption rate for custom weapon

var() config int MaxAmmo;
// Maximum ammo capacity for custom weapon

var int CurrentAmmo;
// Current ammo count for custom weapon

var() configfloat ReloadTime;
// Time it takes to reload custom weapon

var Actor Owner;
// Owner of the weapon

var bool bIsReloading;
// Flag for checking if weapon is currently reloading

var Timer ReloadTimer;
// Timer for reloading weapon

var Vector2D CrosshairPosition;
// Position of the crosshair on the screen

function Fire()
{
    // Check if there is enough ammo to fire
    if (CurrentAmmo >= AmmoConsumptionRate) 
    {
        // Fire projectile
        Spawn(class'CustomProjectile', self,, Owner.Location + CrosshairPosition);
        
        // Decrease current ammo count 
        CurrentAmmo -= AmmoConsumptionRate;
    }
    else
    {
        // Play empty weapon sound
        PlaySound(EmptySound);
    }
}

function Reload()
{
    // Set flag for reloading
    bIsReloading = true;
    
    // Create timer for reloading
    ReloadTimer.SetTimer(ReloadTime, false);
    
    // When timer is finished, reload weapon
    ReloadTimer.TriggerEvent = namaFunction(Target, ReloadFinish);
}

function ReloadFinish()
{
    // Set current ammo count to maximum ammo
    CurrentAmmo = MaxAmmo;
    
    // Set flag for reloading to false
    bIsReloading = false;
    
    // Play reload finish sound
    PlaySound(ReloadFinishSound);
}

defaultproperties
{
    AmmoConsumptionRate=5
    MaxAmmo=50
    CurrentAmmo=50
    ReloadTime=2.5
    bIsReloading=false
    CrosshairPosition=(0,0)
}

// Code snippet for creating a custom projectile for the custom weapon

class CustomProjectile extends Projectile;

var int Damage;
// Damage of the custom projectile

var bool bExplodeOnImpact;
// Flag for checking if the projectile explodes on impact

var double ExplodeDelay;
// Delay before projectile explodes

var Timer ExplodeTimer;
// Timer for exploding projectile

function Explode()
{
    // Spawn explosion effect
    Spawn(class'CustomExplosionEffect', self,, Location);
    
    // Damage any actors in the explosion radius
    foreach AllActors(class'Actor', Target,Location,100)
    {
        Target.TakeDamage(Damage, OwnerController, Owner, vect(0,0), vect(0,0), class'Object');
    }
    
    // Destroy projectile
    Destroy();
}

function Timer()
{
    // Set flag for explosion
    bExplodeOnImpact = true;
    
    // Set timer length for exploding
    ExplodeTimer.SetTimer(ExplodeDelay, false);
    
    // When timer is finished, explode projectile
    ExplodeTimer.TriggerEvent = namaFunction(Target, Explode);
}

defaultproperties
{
    Damage=10
    bExplodeOnImpact=false
    ExplodeDelay=2.0
}
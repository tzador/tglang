/*
This is a comment in UNREALSCRIPT
*/
class MyActor extends Actor;
/* This is a class definition with 'extends' keyword */

var() Name NameTag;
/* This is a variable declaration with 'var()' keyword and 'Name' data type */

var float Health;
/* This is a variable declaration with 'var' keyword and 'float' data type */

function bool IsAlive() {
  `/* This is a function definition with 'bool' return type and 'IsAlive' name */`

  if (Health > 0) { /* This is an 'if' statement checking the value of Health variable */ 
    return true; /* If condition is true, return true */  
  } else {
    return false; /* If condition is false, return false */
  }
}

simulated function HandleDamage(int DamageAmount) {
  super.HandleDamage(DamageAmount);
  `/* This is a simulated function with 'int' parameter, calling the parent function using 'super' keyword */`

  Health -= DamageAmount; /* Decrease Health variable by DamageAmount */
  if (!IsAlive()) { /* Check if actor is not alive using the IsAlive function */
    Kill(); /* Call Kill function */
  }
}

function Kill() {
  `/* This is a function definition with no return type and 'Kill' name */`

  WorldInfo.Game.Broadcast(self, "Actor" @ NameTag @ "has been eliminated."); /* Broadcast a message to all players using WorldInfo.Game */
  self.Destroy(); /* Destroy this actor */
}

defaultproperties {
  Begin Object Name=StaticMeshComponent0 /* Begin an object declaration with a name */
    StaticMesh = StaticMesh'RockCollisionPiece.StaticMeshComponent0'; /* Set the StaticMesh property to 'RockCollisionPiece.StaticMeshComponent0' */
  End Object /* End the object declaration */
  CollisionComponent = StaticMeshComponent0; /* Set the CollisionComponent property to StaticMeshComponent0 */
}
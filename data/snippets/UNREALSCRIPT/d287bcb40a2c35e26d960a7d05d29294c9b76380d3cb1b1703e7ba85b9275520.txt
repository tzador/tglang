class UsCharacter extends GameState
    // This class represents the player character
    // Parent class is GameState, should be attached to a game instance

    config(UScCHARACTER)
    // This sets the class type to UScCHARACTER, a subclass of character

    const UScCHARACTER MaxWalkSpeed = 600
    // This defines the maximum walk speed for the character

    const UScCHARACTER MaxSprintSpeed = 1200
    // This defines the maximum sprint speed for the character

    event PostBeginPlay()
    {
        Super.PostBeginPlay();
        // Calls the PostBeginPlay() function from the parent class

        SetTeam(3);
        // Sets the character's team as 3
    }

    event TakeDamage(int Damage, Pawn EventInstigator, Object.Vector HitLocation, Object.Vector Momentum, class<DamageType> DamageType)
    {
        if (bGodMode)
        {
            return;
            // If god mode is enabled, do not take damage
        }
        else
        {
            Super.TakeDamage(Damage, EventInstigator, HitLocation, Momentum, DamageType);
            // Calls the TakeDamage() function from the parent class
        }
    }

    function SetTeam(int NewTeam)
    {
        myTeam = TeamInfo(NewTeam);
        // Sets the character's team as the specified team
        // TeamInfo is a subclass of Info
    }

    simulated event Tick(float DeltaTime)
    {
        Super.Tick(DeltaTime);
        // Calls the Tick() function from the parent class

        if (bSprinting)
        {
            SetMovementSpeed(MaxSprintSpeed);
            // Sets the movement speed to the maximum sprint speed if sprinting
        }
        else
        {
            SetMovementSpeed(MaxWalkSpeed);
            // Sets the movement speed to the maximum walk speed if not sprinting
        }
    }

    function SetMovementSpeed(float NewSpeed)
    {
        SetPhysics(Physics_Walking);
        // Sets the character's movement physics to walking

        SetSpeed(NewSpeed);
        // Sets the character's speed to the specified speed
    }
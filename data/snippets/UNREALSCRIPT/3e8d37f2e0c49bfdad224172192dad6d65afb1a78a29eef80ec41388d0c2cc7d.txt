//----------------------------------------------------
// This is a complex code snippet in UnrealScript
// It creates an in-game door with various properties
// such as materials, sounds, and animations
//----------------------------------------------------

class GameDoor extends Actor
	placeable;

var() const INT DoorSize; // Stores the size of the door
var() enum DoorState; // Stores the current state of the door

var const Material DoorMatClosed; // Stores the material when the door is closed
var const Material DoorMatOpened; // Stores the material when the door is opened
var const Sound OpenSound; // Stores the sound cue when the door opens
var const Sound CloseSound; // Stores the sound cue when the door closes
var const AnimSet DoorAnimSet; // Stores the animations for the door

var bool bLocked; // Stores if the door is locked or not

var() const float OpenSpeed; // Stores the speed at which the door opens
var() const float CloseSpeed; // Stores the speed at which the door closes

var() const float MaxAngle; // Stores the maximum angle the door can rotate
var() const float MinAngle; // Stores the minimum angle the door can rotate

var const Sound LockSound; // Stores the sound cue when the door is locked
var const Sound UnlockSound; // Stores the sound cue when the door is unlocked

var const float UnlockTime; // Stores the time it takes to unlock the door
var const float LockTime; // Stores the time it takes to lock the door

var Timer OpenTimer; // Timer used for door opening
var Timer CloseTimer; // Timer used for door closing
var Timer UnlockTimer; // Timer used for door unlocking
var Timer LockTimer; // Timer used for door locking

var() DoorState DefaultDoorState; // Stores the default state of the door, used for resetting

//----------------------------------------------------
// Function to initialize variables and timers
//----------------------------------------------------
function InitDoor()
{
	bLocked = false;
	DoorState = DefaultDoorState;
	SetMaterial(DoorMatClosed);
}

//----------------------------------------------------
// Function to open the door
// Rotates the door
// Plays the open sound and sets material to opened
//----------------------------------------------------
function Open()
{
	if(!bLocked && DoorState == DoorState::Closed)
	{
		DoorState = DoorState::Opening;
		PlaySound(OpenSound);
		PlayAnim('Open');
		SetMaterial(DoorMatOpened);
		// Calculate rotation amount based on angle and speed
		float RotationAmount = MaxAngle * (OpenSpeed/100);
		Rotate(RotationAmount);
		// Start timer for closing the door after a certain amount of time
		CloseTimer.SetTimer(OpenSpeed, false);
	}
}

//----------------------------------------------------
// Function to close the door
// Rotates the door
// Plays the close sound and sets material to closed
//----------------------------------------------------
function Close()
{
	if(DoorState == DoorState::Opened || DoorState == DoorState::Opening)
	{
		DoorState = DoorState::Closing;
		PlaySound(CloseSound);
		PlayAnim('Close');
		SetMaterial(DoorMatClosed);
		// Calculate rotation amount based on angle and speed
		float RotationAmount = -MaxAngle * (CloseSpeed/100);
		Rotate(RotationAmount);
		// Start timer for unlocking the door after a certain amount of time
		UnlockTimer.SetTimer(UnlockTime, false);
		// Start timer for locking the door after a certain amount of time
		LockTimer.SetTimer(LockTime, false);
	}
}

//----------------------------------------------------
// Function to lock the door
// Plays the lock sound and sets locked flag to true
//----------------------------------------------------
function Lock()
{
	bLocked = true;
	PlaySound(LockSound);
}

//----------------------------------------------------
// Function to unlock the door
// Plays the unlock sound and sets locked flag to false
//----------------------------------------------------
function Unlock()
{
	bLocked = false;
	PlaySound(UnlockSound);
}

//----------------------------------------------------
// Function called when door finishes opening
// Sets state to Opened
//----------------------------------------------------
event Timer OpenTimer()
{
	DoorState = DoorState::Opened;
}

//----------------------------------------------------
// Function called when door finishes closing
// Sets state to Closed
//----------------------------------------------------
event Timer CloseTimer()
{
	DoorState = DoorState::Closed;
}

//----------------------------------------------------
// Function called when door finishes unlocking
// Opens the door
//----------------------------------------------------
event Timer UnlockTimer()
{
	Open();
}

//----------------------------------------------------
// Function called when door finishes locking
// Closes the door
//----------------------------------------------------
event Timer LockTimer()
{
	Close();
}

//----------------------------------------------------
// Default properties for door
//----------------------------------------------------
defaultproperties
{
	DoorSize=150

	OpenSpeed=50.0
	CloseSpeed=50.0

	MaxAngle=90.0
	MinAngle=0.0

	DefaultDoorState=DoorState::Closed
}
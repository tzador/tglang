class PlayerReplicationInfo extends Actor
    placeable;

// Player Data
var string PlayerName;
var PlayerReplicationInfo PreviousPlayer;
var PlayerReplicationInfo NextPlayer;

// Team Data
var int TeamNumber;
var string TeamName;
var int PlayerScore;
var int Kills;
var int Deaths;
var int Assists;

// Functions
event string GetCallSign()
{
    local string LocalCallSign;
    
    switch (GameType)
    {
        case 'TeamDeathmatch':
            LocalCallSign = "Slayer";
            break;
        case 'CaptureTheFlag':
            LocalCallSign = "Flag Bearer";
            break;
        case 'Deathmatch':
            LocalCallSign = "Killer";
            break;
        case 'KingOfTheHill':
            LocalCallSign = "King";
            break;
        default:
            LocalCallSign = "Player";
    }
    
    return LocalCallSign;
}

// Events
event PostBeginPlay()
{
    // Set initial values
    PlayerName = "NewPlayer";
    TeamNumber = 0;
    TeamName = "None";
    PlayerScore = 0;
    Kills = 0;
    Deaths = 0;
    Assists = 0;
    
    // Call GetCallSign function and set the value in the log
    log("Player " $ GetCallSign() $ " joined the game.");
}

// Today
// Player Replication Info is used to persist player information across the network
// This is a complex code snippet written in UnrealScript.

class SomeClass extends Object
    properties
        // These are some properties of the class.
        var float PropertyFloat;
        var int PropertyInt;
        var bool PropertyBool;

    function constructor()
    {
        // This is the constructor function.
        // It initializes the values of the properties.
        PropertyFloat = 3.14;
        PropertyInt = 500;
        PropertyBool = true;
    }

    function void PrintProperties()
    {
        // This function prints the values of the properties.
        `Log("PropertyFloat: " @ PropertyFloat);
        `Log("PropertyInt: " @ PropertyInt);
        `Log("PropertyBool: " @ PropertyBool);
    }

    defaultproperties
    {
        // These are the default values for the properties.
        // They are used if the constructor is not explicitly called.
        PropertyFloat=0.0;
        PropertyInt=0;
        PropertyBool=false;
    }

    // This is a static function.
    // It is accessed through the class name, rather than an instance.
    static function void StaticFunction()
    {
        `Log("This is a static function!");
    }
    
    // This is an event that triggers when the class is destroyed.
    event Destroyed()
    {
        // Print a message when the class is destroyed.
        `Log("The class has been destroyed.");
    }
    
    // This is an iterator function.
    // It iterates through a given array and prints each element.
    function void PrintArrayElements(Array<int> MyArray)
    {
        foreach MyArray(element)
        {
            `Log("Array element: " @ element);
        }
    }
    
    // This is an operator overload function.
    // When the plus operator is used on an instance of this class, it will add the values of its properties to the other instance's properties and return a new instance.
    function operator+(SomeClass Other) SomeClass
    {
        local SomeClass Result;
        
        Result.PropertyFloat = PropertyFloat + Other.PropertyFloat;
        Result.PropertyInt = PropertyInt + Other.PropertyInt;
        Result.PropertyBool = PropertyBool + Other.PropertyBool;
        
        return Result;
    }
}

// This class extends the SomeClass class and overrides the PrintProperties function.
class ExtendedClass extends SomeClass
{
    // Override the PrintProperties function.
    function void PrintProperties()
    {
        // Call the parent version of the function.
        Super.PrintProperties();
        
        // Add some extra printing.
        `Log("ExtendedClass extra print.");
    }
}

// Create an instance of the ExtendedClass.
var ExtendedClass MyExtendedClass;

// Call the PrintProperties function on the instance.
MyExtendedClass.PrintProperties();

// Output:
// PropertyFloat: 3.14
// PropertyInt: 500
// PropertyBool: true
// ExtendedClass extra print.
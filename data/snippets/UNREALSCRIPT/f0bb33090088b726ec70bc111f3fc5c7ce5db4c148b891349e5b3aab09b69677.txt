class MyCustomClass extends CustomParentClass; // defines a new class that inherits from CustomParentClass

var int MyVariable; // defines an integer variable

function MyFunction(int Arg1, string Arg2) { // defines a function with two parameters
    if (Arg1 == 0) { // checks if Arg1 is equal to 0
        `log("Argument 1 is 0.");` // logs a message
    } else { // if Arg1 is not equal to 0
        local float MyFloat = Rand(0,5); // defines a local float variable and assigns a random value between 0 and 5
        `GEngine.AddOnScreenDebugMessage(-1, 5.f, Color.Red, "Argument 1 is not 0.");` // displays a debug message on the screen
    }
    local string MyString = "Hello World"; // defines a local string variable and assigns a value
    `GEngine.AddOnScreenDebugMessage(-1, 5.f, Color.Green, MyString);` // displays a debug message using the value of MyString
}

state MyState { // defines a new state
    event BeginState() { // event that occurs when the state begins
        `log("MyState started.");` // logs a message
        Super.BeginState(); // calls the BeginState function of the parent class
    }
    event EndState() { // event that occurs when the state ends
        `log("MyState ended.");` // logs a message
        Super.EndState(); // calls the EndState function of the parent class
    }
}

defaultproperties {
    MyVariable = 10; // sets the default value for MyVariable
}
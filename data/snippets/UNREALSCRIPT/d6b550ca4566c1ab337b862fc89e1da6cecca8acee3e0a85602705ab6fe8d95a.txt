/** 
* This is a complex code snippet that creates an actor in the game world with multiple properties.
*/

class MyActor extends Actor;

/** 
* These are the properties and variables of the actor.
*/

var int Health; // the health of the actor

var float Speed; // the speed at which the actor moves

var string Name; // the name of the actor

var bool IsAlive; // determines if the actor is alive or dead

/** 
* The initialization function that sets the initial values for the properties.
*/

function Init()
{
    Health = 100;
    Speed = 5.0;
    Name = "John Doe";
    IsAlive = true;
    Super.Init(); // calls the parent class initialization function
}

/** 
* The function that handles the movement of the actor.
*/

function Move(float DeltaTime)
{
    // perform movement calculations here
    SetLocation(Location + (ForwardVector * Speed * DeltaTime));
}

/** 
* The function that causes damage to the actor.
*/

function TakeDamage(int DamageAmount)
{
    Health -= DamageAmount;
    if (Health <= 0)
    {
        Die();
    }
}

/** 
* The function that handles the death of the actor.
*/

function Die()
{
    IsAlive = false;
    SetActorHidden(true); // hides the actor from the game world
    SetActorEnableCollision(false); // disables collision with other actors
    SetActorTickEnabled(false); // disables the tick function that updates the actor every frame
    // other death-related actions can be added here
}

/** 
* The function that spawns a new actor in the game world.
*/

function SpawnNewActor()
{
    local MyActor NewActor;
    NewActor = Spawn(class'MyActor', GetLocation(), Rotator(0, 0, 0)); // spawns the new actor at the location of this actor with default rotation
    NewActor.Init(); // initializes the new actor
}
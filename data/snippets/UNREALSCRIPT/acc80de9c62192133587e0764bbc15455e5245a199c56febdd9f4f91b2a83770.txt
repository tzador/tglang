//This code snippet creates a weapon pickup that changes weapons on pickup

class WeaponPickup expands Pickup;

//Declare the weapon class variable
var private class<Weapon> WeaponClass;

//Event called when player collides with the pickup
event Touch(Actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal)
{
    local PlayerController PlayerPawn;
    
    //Check if the player is the one who collided with the pickup
    if (Other.IsA('Pawn'))
    {
        PlayerPawn = PlayerController(Other);
        
        //Check if the player already has a weapon of the desired class
        if (PlayerPawn.PlayerInventory.FindInventoryType(WeaponClass) == none)
        {
            //Create a new instance of the weapon class
            local Weapon NewWeapon;
            NewWeapon = spawn(class'DynamicLoadout',,,GetOuter());
            
            //Attach the weapon to the player's weapon slot and make it the active weapon
            PlayerPawn.PlayerInventory.AddInventory(NewWeapon);
            PlayerPawn.SetWeapon(NewWeapon);
            
            //Destroy the pickup object after the player picks up the weapon
            Destroy();
        }
    }
}

//Set the weapon class to be assigned to the pickup
function Initialize(class<Weapon> NewWeaponClass)
{
    WeaponClass = NewWeaponClass;
}

//Overrides the default behavior to prevent the pickup from fading out
function bool AllowPickup(pawn Other)
{
    return false;
}
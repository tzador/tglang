class Player extends Pawn
  placeable;

// Defines a new class called "Player" that inherits from the "Pawn" class and can be placed in the game world.

var float Health;

// Declares a variable of type float called "Health" which will store the player's health value.

var name PlayerName;

// Declares a variable of type name (string) called "PlayerName" which will store the player's name.

var int Ammo[4];

// Declares an array of size 4, with each element being of type int, to store the player's ammo count for different weapons.

var bool bIsAlive;

// Declares a boolean variable called "bIsAlive" to track whether the player is alive or not.

var class<Weapon> CurrentWeapon;

// Declares a variable of type "Weapon" which is a class that the player will be able to switch between.

event bool ReceiveDamage(int DamageAmount, Pawn InstigatedBy, Vector HitLocation, Vector Momentum, class<DamageType> DamageType)
{
  if(Health - DamageAmount <= 0)
  {
    // If the damage amount received is greater than or equal to the player's health, then they die.
    bIsAlive = false;
  }
  else
  {
    // If the damage amount received is less than the player's health, subtract the damage from the player's health.
    Health -= DamageAmount;
  }

  // Play a sound effect and apply a screen shake to indicate damage taken.
  PlaySound(DamageTakenSound);
  ApplyShake(0.5, 0.3, 0.2);

  return true;
}

// Defines an event called "ReceiveDamage" which will be called when the player takes damage. The event takes in various parameters such as the amount of damage, the instigator of the damage, and the type of damage received.

function SwitchWeapon(class<Weapon> NewWeapon)
{
  CurrentWeapon.Destroy();

  // Destroy the current weapon the player is holding and spawn a new one.
  CurrentWeapon = Spawn(class, , , class<Weapon>);

  return CurrentWeapon;
}

// Defines a function called "SwitchWeapon" which takes in a parameter of type "Weapon" and switches the player's current weapon to the new one. The function also destroys the current weapon and spawns the new one.

defaultproperties
{
  Health = 100;
  PlayerName = "John";
  Ammo[0] = 25;
  Ammo[1] = 10;
  Ammo[2] = 50;
  Ammo[3] = 0;
  bIsAlive = true;
  CurrentWeapon = class'Weapon.SniperRifle';
}

// Sets default values for the variables declared earlier. These values can be changed in the editor. For example, the player's starting health is set to 100, their name is "John", and they start with a certain amount of ammo for each weapon. The starting weapon is set to a specific class called "SniperRifle".
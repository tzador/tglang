class MyCustomActor extends Actor
  config( myCustomConfig );

  // Variables used by this actor.
  var() int MyInt;

  var float MyFloat;

  var bool MyBool;

  var Object MyObject;

  // Functions used by this actor.

  /**
    * Function: MyCustomFunction
    * Description: This function does something amazing.
    * Parameters:
    * 		param1 - The first parameter.
    * 		param2 - The second parameter.
    * Return: bool - Whether or not the function was successful.
    */
  simulated function MyCustomFunction( int param1, string param2 )
  {
      // Code to be executed when this function is called.
      // First, we check the value of MyInt.
      if( MyInt == 10 )
      {
          // If MyInt is equal to 10, we set MyFloat to 5.
          MyFloat = 5.0;
      }
      else
      {
          // If MyInt is not equal to 10, we set MyFloat to 10.
          MyFloat = 10.0;
      }
      // Print a message to the log to show that the function was called.
      log( "MyCustomFunction was called!" );

      // We return true to indicate that the function was successful.
      return true;
  }

  /**
    * Function: MyOtherFunction
    * Description: This function does something even more amazing.
    * Parameters:
    *    none
    * Return: int - The number of objects created.
    */
  simulated function int MyOtherFunction()
  {
      // Create a new Object and store it in MyObject variable.
      MyObject = new Class'Engine.Object';

      // Increase MyInt variable by 1.
      MyInt++;

      // We return the value of MyInt to indicate the number of objects created.
      return MyInt;
  }

  defaultproperties
  {
      // This section defines the default values for the variables used in this actor.
      MyInt = 0;
      MyFloat = 0.0;
      MyBool = false;
      MyObject = None;
  }
}
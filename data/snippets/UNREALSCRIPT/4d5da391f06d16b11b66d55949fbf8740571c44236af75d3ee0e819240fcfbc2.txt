class MyGame extends GameInfo; // creates a new class named "MyGame" that inherits from the "GameInfo" class

var int MyCustomVariable; // declares a new variable named "MyCustomVariable" of type int

// event called when the game is initialized
event InitGame( string Options, out string ErrorMessage )
{
    super.InitGame(Options, ErrorMessage); // calls the InitGame event of the parent class

    MyCustomVariable = 0; // sets the value of MyCustomVariable to 0
}

// event called when a player is spawned
event PostBeginPlay()
{
    super.PostBeginPlay(); // calls the PostBeginPlay event of the parent class
    
    local PlayerController PC; // declares a new variable named "PC" of type PlayerController
    local MyCustomActor MyCustomActor; // declares a new variable named "MyCustomActor" of type MyCustomActor
    
    foreach WorldInfo.AllActors(class 'MyCustomActor', MyCustomActor) // loops through all actors of type "MyCustomActor" in the world
    {
        // checks if the current actor is controlled by the player
        if (PC == MyCustomActor.Controller)
        {
            MyCustomVariable += MyCustomActor.Health; // increases the value of MyCustomVariable by the health of the actor
        }
    }
}

// function that takes in two integers as parameters and returns their sum
function int CalculateSum(int A, int B) returns int
{
    local int Result; // declares a local variable named "Result" of type int
    Result = A + B; // calculates the sum of A and B and assigns it to Result
    return Result; // returns the calculated sum
}
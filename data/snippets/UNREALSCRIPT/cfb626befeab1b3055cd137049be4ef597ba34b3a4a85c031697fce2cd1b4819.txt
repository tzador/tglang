/*
    This is a complex code snippet in UNREALSCRIPT.
    It demonstrates object-oriented programming and inheritance.
    Objects are defined by a class and can have properties, functions, and events.
    Properties are variables that hold data, functions are code blocks that can be executed, and events are signals that can be responded to.
    Inheritance allows classes to inherit properties and functions from a parent class.
    This snippet creates a custom player controller that inherits from the default player controller.
*/
class MyPlayerController extends PlayerController;
// Define properties
var int MyVariable;
var() class<MyHUD> MyHUDClass;
var float MyFloat;
var bool bMyBool;
var() const MyConst;
var int ArrayOfInts[5];
// Define functions
function BeginPlay()
{
    // Call parent's BeginPlay function first
    Super.BeginPlay();
    // Initialize variables
    MyVariable = 10;
    MyHUDClass = class'MyHUD';
    MyFloat = 1.5;
    bMyBool = true;
    MyConst = 100;
    // Populate array
    ArrayOfInts[0] = 5;
    ArrayOfInts[1] = 10;
    ArrayOfInts[2] = 15;
    ArrayOfInts[3] = 20;
    ArrayOfInts[4] = 25;
}
// Define events
event PostBeginPlay()
{
    // Call parent's PostBeginPlay event first
    Super.PostBeginPlay();
    // Print values of properties
    `log("MyVariable: " $ MyVariable);
    `log("MyFloat: " $ MyFloat);
    `log("bMyBool: " $ bMyBool);
    `log("MyConst: " $ MyConst);
    // Print values of array
    for (local int i = 0; i < ArrayOfInts.Length; i++)
    {
        `log("ArrayOfInts[" $ i $ "]: " $ ArrayOfInts[i]);
    }
    // Spawn MyHUDClass and set as the HUD for this player
    local MyHUD HUD = Spawn(class'MyHUD', self);
    SetHud(HUD);
    `log("MyHUDClass spawned and set as HUD.");
}
// Define additional functions
function AddToVariable(int Value)
{
    // Add value to MyVariable and return the result
    MyVariable += Value;
    return MyVariable;
}
// Define additional events
event> MyEvent(int Value)
{
    // Add value to MyVariable and print result
    MyVariable += Value;
    `log("MyVariable: " $ MyVariable);
}
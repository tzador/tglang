/*
This code snippet is a custom class that creates a basic enemy AI character in UnrealScript.
It includes properties for health, damage, and movement speed, as well as functions for attacking and taking damage.
*/

class EnemyAI extends AIController;

//Enemy properties
var(int) Health; //integer property for enemy health, can be edited in UnrealEd
var(int) Damage; //integer property for enemy damage
var(int) MovementSpeed; //integer property for enemy movement speed

//Function that allows the enemy to attack the player
function Attack(PlayerPawn Player)
{
    local Pawn EnemyPawn; //local variable for enemy pawn
    EnemyPawn = Pawn(Player.Controller.ViewTarget); //sets EnemyPawn to the player's current targeted pawn
    EnemyPawn.TakeDamage(Damage, Player.Controller, Location(EnemyPawn.location), vect(EnemyPawn.Velocity)); //takes damage from the player's controller and location

    if (EnemyPawn.Health <= 0) //if enemy health goes below 0
    {
        EnemyPawn.Die(EnemyPawn.Controller.ViewTarget); //calls Die function from EnemyPawn class
    }
}

//Function for enemy to take damage
event TakeDamage(int Damage, Controller EventInstigator, Vector HitLocation, Vector Momentum, class<DamageType> DamageType)
{
    Health -= Damage; //subtracts Damage from Health
    if (Health <= 0) //if health goes below 0
    {
        Die(EventInstigator.Pawn); //calls Die function, passing in EventInstigator's pawn
    }
    else
    {
        //makes enemy flinch when taking damage
        PlayTeleportEffect(HitLocation);
        PlayAnim('Flinch');
    }
}

//Function that controls enemy movement
function Move(float DeltaTime)
{
    local Pawn EnemyPawn; //local variable for enemy pawn
    EnemyPawn = Pawn(Enemy.Controller.ViewTarget); //sets EnemyPawn to the player's current targeted pawn
    if (EnemyPawn != None) //if EnemyPawn is not null
    {
        EnemyPawn.SetDesiredSpeed(MovementSpeed); //sets desired speed for EnemyPawn
        EnemyPawn.Accelerate(Player.ViewRotation); //accelerates EnemyPawn in the direction of Player's view rotation
    }
}

//Code snippet in triple backticks for easier copying and pasting
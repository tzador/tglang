// MyPlayerClass is the base class for all players in the game
class MyPlayerClass extends PlayerController;
    
    // default properties for each player spawned
    defaultproperties 
    {
        bNoVoiceMessages = False; // can receive voice messages
        VoiceVolume = 1.0; // voice volume level
        FOV = 100; // field of view
        MaxStepHeight = 35; // maximum height player can step up
        Speed = 400; // movement speed
        MaxAcceleration = 1200; // maximum acceleration
        AirControl = 0.1; // amount of control while in air
        AirSpeed = 1200; // movement speed while in air
        DefaultFOV = 90; // default field of view
        JumpZ = 350; // jump height
        WalkSpeed = 400; // walking speed
        FlyingSpeed = 1000; // flying speed
    }

    // function to handle player input
    function InputEvent (EInputKey Key, EInputEvent Event, float Amount, 
        OptionalComboMatch Event, OptionalComboMatch Amount)
    {
        // if player presses the jump key
        if (Key == IK_Space)
        {
            // add vertical impulse for jumping
            VerticalImpulse = VSize(LevelDirection); 
        }
    }

    // exec function to execute console commands
    exec function ToggleGodMode()
    {
        // toggle god mode on or off
        GodMode = !GodMode;
    }

    // function to handle player death
    event KilledController (Controller Killer, optional Projectile Proj)
    {
        // player is dead
        Super.KilledController(Killer, Proj);
        
        // game over
        EndGame();
    }

    // function to handle player respawn
    event Respawn()
    {
        // respawn player at specified location
        Spawn(Class'MyPlayerClass', none, none, none, newLoc);
    
        // set new location for respawn
        newLoc = (350, 250, 200);
        
        // reset player stats and properties
        Reset();
    }
END code_snippet
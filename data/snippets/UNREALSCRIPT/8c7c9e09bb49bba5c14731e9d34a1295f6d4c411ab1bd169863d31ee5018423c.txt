class PlayerWeapon extends Actor //defines a class named PlayerWeapon that inherits from the Actor class
  placeable; //variable that allows the class to be placed in the game world
  
var() float AmmoCount; //variable to represent the amount of ammo the weapon has

event Touch (Actor Other, PrimitiveComponent OtherComp, Object.Vector HitLocation, Object.Vector HitNormal) { //Event that handles collisions
    local float DamageDealt; //variable to store the amount of damage dealt
    
    if (Other.IsA('PlayerCharacter')) //checks if the collision is with a PlayerCharacter
    {
        DamageDealt = Fmath.RandRange(10, 20); //generates a random number between 10 and 20 for damage
        
        if (Other.TakeDamage(DamageDealt) == 0) //calls the TakeDamage function of the collided actor and checks if the damage taken is 0
        {
          Destroy(); //destroys the PlayerWeapon actor if the damage taken is 0
        }
    }
}

function FireWeapon() //function to fire the weapon
{
    if (AmmoCount > 0) //checks if the weapon has ammo
    {
        Spawn(class'SpawnableProjectile', owner); //spawns a projectile from the owner of the weapon
        
        AmmoCount--; //decrements ammo count
    }
}

defaultproperties
{
    Begin Object Class=DynamicLightEnvironmentComponent Name=WeaponLight
        LightAffectDynamic=false
    End Object
    Components.Add(WeaponLight)
} //default properties for the weapon, including a light component
// This code snippet demonstrates a custom inventory system in UnrealScript

class MyInventory extends Object;

// Create an array to hold items
var array<Item> Inventory;

// Function to add an item to inventory
state AddItem(Item NewItem)
{
    // Check if inventory is full
    if(Inventory.Length() >= 10)
    {
        // If full, print error message
        `Log("Inventory is full, cannot add item!");`
    }
    else
    {
        // Add item to inventory
        `Inventory.AddItem(NewItem);`

        // Print success message
        `Log("Added item " $NewItem $ " to inventory.");`
    }
}

// Function to remove an item from inventory
state RemoveItem(Item ItemToRemove)
{
    // Check if item is in inventory
    if(Inventory.Contains(ItemToRemove))
    {
        // If item is found, remove it
        `Inventory.RemoveItem(ItemToRemove);`

        // Print success message
        `Log("Removed item " $ItemToRemove $ " from inventory.");`
    }
    else
    {
        // If item is not found, print error message
        `Log("Item " $ItemToRemove $ " is not in inventory.");`
    }
}

// Function to check if an item is in inventory
function bool HasItem(Item ItemToCheck)
{
    // Return true if item is found in inventory
    return Inventory.Contains(ItemToCheck);
}

// Function to print all items in inventory
function GetInventory()
{
    // Loop through inventory array
    for(int i=0; i<Inventory.Length(); i++)
    {
        // Print item name
        `Log("Inventory Item: " $Inventory[i].Name);`
    }
}
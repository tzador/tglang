class MyActor extends Actor
   /* MyActor is a subclass of the base class Actor.
      This code snippet demonstrates the use of different variable types in UNREALSCRIPT. */

   // declare and initialize some variables
   var int MyInt = 10; // integer variable with initial value of 10
   var float MyFloat = 2.5; // float variable with initial value of 2.5
   var bool MyBool = true; // boolean variable with initial value of true
   var string MyString = "Hello"; // string variable with initial value of "Hello"

   // declare and initialize an array
   var array<int> MyArray;
   MyArray[0] = 6; // add element to the array
   MyArray[1] = 9; // add another element to the array

   // declare and initialize a map
   var map<int, string> MyMap;
   MyMap[1] = "One"; // add key-value pair to the map
   MyMap[2] = "Two"; // add another key-value pair to the map

   // declare a function with parameters
   function int AddNumbers(int A, int B)
   {
      return A + B; // return the sum of the two parameters
   }

   // declare a function with default parameters
   function void PrintMessage(string Message = "Default Message")
   {
      `log(Message); // print the message to the log
   }

   // declare a struct
   struct MyStruct
   {
      var int StructInt; // integer variable within the struct
      var string StructString; // string variable within the struct
   }

   // declare a static variable
   static var int StaticInt;

   // constructor
   function MyActor()
   {
      Super.Initialize(); // call the initialize function of the parent class
      StaticInt = 5; // set the value of the static variable
   }

   // event called when the actor is destroyed
   function Destroyed()
   {
      Super.Destroyed(); // call the destroyed function of the parent class
      StaticInt = 0; // reset the value of the static variable
   }
defaultproperties
{
   Begin Object Class=SpriteComponent Name=MySprite
      Sprite=Texture2D'EditorResources.S_Default'
   End Object
   Components.Add(MySprite) // add the sprite component to the actor
}
class MyActor extends Actor
    // This class represents a custom actor that inherits from the base class Actor in the UnrealScript language.
    // It contains multiple variables, functions, and event overrides.
    // This code snippet also showcases the use of annotations and comments.
    
    ustable(); // This makes the class replicatable over the network

    /**    // This is an annotation for the default values of variables
    * Default values for the variables in this class
    */
    var Vector Position = XAxis;    // This variable represents the position of the actor in the world
    var() float Scale = 0.5f;   // This variable represents the scale of the actor
    var() float RotateSpeed = 1.5f;    // This variable represents the speed at which the actor will rotate

    // Event override for the BeginPlay event
    event BeginPlay()
    {
        Super.BeginPlay();

        // This code sets the initial position, scale, and rotation of the actor
        SetActorLocation(Position);
        SetActorScale(Scale);
        SetActorRotation(RotateSpeed * DeltaTime);
    }

    // Function to rotate the actor
    function Rotate(float DeltaTime)
    {
        SetActorRotation(RotateSpeed * DeltaTime);
    }

    // Event override for the Tick event
    event Tick(float DeltaTime)
    {
        Super.Tick(DeltaTime);

        // Call the Rotate function
        Rotate(DeltaTime);

        // Print a message to the log
        `log("Actor has been rotated by " $ RotateSpeed $ " degrees per second.");
    }
defaultproperties
{
    Begin Object Name=CollisionCylinder
        CollisionRadius=50
        CollisionHeight=100
    End Object
    Components.Add(CollisionCylinder);

    RemoteRole=ROLE_Authority
    NetUpdateFrequency=60
    TickGroup=TG_PreAsyncWork

    bAllowTickBeforeInitialize=true
    AllowRemoteRotation=true
}
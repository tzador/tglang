class Zombie extends AIController;
/*
 This is the code for a Zombie AI controller class
 that extends the base AIController class in UnrealScript.
*/

var bool bIsAttacking;

/*
 A boolean variable that tracks whether the zombie is currently attacking
 or not. This will be used to determine the zombie's behavior and animations.
*/

var Actor TargetActor;

/*
 An actor variable that stores the current target of the zombie.
 This will be set by the enemy detection and selection logic in the Tick() function.
*/

event Tick(float DeltaTime){
    /*
    This is the main Tick event for the Zombie AI controller.
    It is called every frame and is used to update the zombie's behavior.
    */
    
    Super.Tick(DeltaTime); //Call the Tick() function of the base AIController class.
    
    //Implement enemy detection and selection logic here.
    
    if(TargetActor != none) //If a target has been selected, engage in pursuit behavior.
    {
        if(bIsAttacking) //If already attacking, continue attacking the target.
        {
            MoveTowardActor(TargetActor, DeltaTime); //Move towards the target.
            PlayAnimation("Attack"); //Play the attack animation.
        }
        else //If not attacking, approach the target and play the idle animation.
        {
            MoveTowardActor(TargetActor, DeltaTime);
            PlayAnimation("Idle"); 
        }
    }
    else //If no target, move randomly and play the roaming animation.
    {
        MoveRandomly(DeltaTime);
        PlayAnimation("Roaming");
    }
}

function MoveTowardActor(Actor ActorToMove, float DeltaTime)
{
    /*
    This function is used to move the zombie towards a specified actor.
    It takes in the actor to move towards and the current DeltaTime.
    */
    
    //Calculate the direction vector to the target.
    local vector TargetDirection;
    TargetDirection = ActorToMove.Location - Pawn.Location;
    TargetDirection *= 0.5; //Scale down for smoother movement.
    
    //Calculate the new velocity vector and set it in the Pawn.
    local vector NewVelocity;
    NewVelocity = Pawn.Velocity + (TargetDirection * DeltaTime);
    Pawn.SetVelocity(NewVelocity);
    
    //Face the direction of movement.
    Pawn.SetRotation(Rotator(TargetDirection));
}

function MoveRandomly(float DeltaTime)
{
    /*
    This function is used to make the zombie move randomly
    by changing its rotation and velocity randomly.
    */
    
    //Create random rotation and set it in the Pawn.
    local rotator RandomRotation;
    RandomRotation.Yaw = RandRange(-180, 180);
    Pawn.SetRotation(RandomRotation);
    
    //Calculate the new velocity vector and set it in the Pawn.
    local vector NewVelocity;
    NewVelocity = Pawn.Velocity + (Pawn.Rotation.Vector() * DeltaTime);
    Pawn.SetVelocity(NewVelocity);
}

function PlayAnimation(string AnimName)
{
    /*
    This function is used to play an animation by its name.
    It takes in the name of the animation as a string.
    */
    
    local AnimSet TempAnimSet;
    TempAnimSet = Pawn.Mesh.SkeletalMesh.Animations;
    
    //Loop through all animations and find the one with the specified name.
    local int i;
    for(i=0; i<TempAnimSet.Anims.length; i++)
    {
        if(TempAnimSet.Anims[i].Name == AnimName)
        {
            //If found, set it in the animation tree and play it.
            Pawn.Mesh.AnimTree.SetAnimationOutputNode(TempAnimSet.Anims[i]);
            Pawn.Mesh.AnimTree.Reset();
            break;
        }
    }
}

defaultproperties
{
    /*
    This is the default properties block for the Zombie class.
    All default values for variables and other properties go here.
    */
    
    bIsAttacking = false; //By default, the zombie is not attacking.
    
    //Set the default mesh and animations.
    Pawn.Mesh = SkeletalMesh'(Path to your zombie mesh goes here)';
    AnimSets(0) = AnimSet'(Path to your zombie animations go here)';
}
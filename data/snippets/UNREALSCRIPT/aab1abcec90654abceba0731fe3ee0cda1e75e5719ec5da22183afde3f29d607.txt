class MyActor extends Actor
    placeable;

var int health;
var int damage;

function Init()
{
    // init code here
    health = 100;
    damage = 10;
}

event Damage(int DamageAmount, Controller EventInstigator, Actor DamageCauser)
{
    // damage event code here
    health -= DamageAmount;
    if (health <= 0)
    {
        // death code here
        //destroy(self);
        health = 0;
    }
}

function GiveDamageTo(Actor Other)
{
    // function to give damage to another actor
    if (Other.IsA('Pawn')
    {
        Other.TakeDamage(damage, base, location, None, vect(0, 0, 0), vect(0, 0, 0));
        // Damage() event will be called on Other actor
    }
}

defaultproperties
{
    Begin Object Class=SpriteComponent Name=Sprite
        Sprite=Texture2D'SomePackage.SomeSprite'
        Sprite.CategoryName="MyActor"
        Sprite.EditAnywhere=true
        Sprite.bHiddenInGame=false
        Sprite.DepthPriority=DPG_Foreground
    End Object
    Components.Add(Sprite)

    SphereComponent SphereCollision
    Begin Object Class=SphereComponent Name=SphereCollision 
        BlockNonZeroExtent=true 
        CollideActors=true 
        BlockZeroExtent=true 
        // collision presets can be set here
        SphereCollision.Preset=BlockAll
    End Object

    RootComponent=SphereCollision // set root component to sphere collision for physics collision
    SphereCollision.CollisionRadius=64 // set collision radius
    SphereCollision.CollisionEnabled=QueryAndPhysics // enable collision for physics and querying
}
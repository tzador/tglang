// This code snippet creates a custom weapon class in UnrealScript

// Define the parent class as UTWeapon by using the extends keyword
class MyCustomWeapon extends UTWeapon;

// Define the properties of the weapon class
// First, set the default ammo count to 10
var int DefaultAmmoCount = 10;

// Then, set the mesh to be used for the weapon's model
// By using EditInline, the mesh will be editable in the editor's default properties window
var() editinline Mesh WeaponMesh;

// Now, define the weapon's fire rate
const float FireRate = 0.2;

// Define any necessary functions for the weapon class
// The PrimaryFire function will handle firing the weapon
function PrimaryFire()
{
    // Check if the weapon is out of ammo
    if (AmmoCount == 0)
    {
        // If so, print a message and return
        `Log("Out of ammo! Please reload.");
        return;
    }

    // Otherwise, decrease the ammo count by 1
    AmmoCount = AmmoCount - 1;

    // Play the weapon's firing animation
    WeaponMesh.PlayAnimation("Fire", true);

    // Spawn a projectile to simulate a bullet
    Local Projectile Projectile;
    Projectile = Spawn(class'UTProjectile', self.NamedInstigator);

    // Set the projectile's direction and speed
    Projectile.SetVelocity(WeaponMesh.GetAxes(1) * 2000);

    // Play a sound to accompany the firing animation
    WeaponMesh.PlaySound(WeaponFireSound);
}

// Create a function to handle reloading the weapon
function Reload()
{
    // Check if the weapon is already at full ammo count
    if (AmmoCount == DefaultAmmoCount)
    {
        // If so, print a message and return
        `Log("Weapon is already fully reloaded.");
        return;
    }

    // Otherwise, add ammo to the weapon up to the default ammo count
    if (DefaultAmmoCount - AmmoCount < 10)
    {
        AmmoCount = DefaultAmmoCount;
    }
    else
    {
        AmmoCount = AmmoCount + 10;
    }

    // Play a reload sound
    WeaponMesh.PlaySound(ReloadSound);
}

// Finally, add any necessary hooks to register the weapon with the game
defaultproperties
{
    // Set the default name for the weapon
    ItemName="My Custom Weapon"

    // Set the default ammo count to be used when initially spawned
    InitialAmmoCount = DefaultAmmoCount

    // Set the mesh to be used for the weapon's model
    WeaponMesh = StaticMesh'WP_FlakLauncher_Mesh'

    // Set the default fire rate for the weapon
    FireRate = 0.2

    // Set the sound to be played when the weapon is fired
    WeaponFireSound = SoundCue'Weapon_UT.Weapon_UT_EnforcerFire'

    // Set the sound to be played when the weapon is reloaded
    ReloadSound = SoundCue'Weapon_UT.Weapon_UT_EnforcerReload'
}
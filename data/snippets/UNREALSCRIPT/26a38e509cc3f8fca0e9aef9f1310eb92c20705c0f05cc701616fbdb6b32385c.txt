/**
* A class that represents a car in a racing game
*/
class RacingCar extends Actor
	/**
	* The name of the car
	*/
	var const Name Name;
	
	/**
	* The current speed of the car
	*/
	var float Speed;
	
	/**
	* The acceleration rate of the car
	*/
	const float Acceleration = 50.0;
	
	/**
	* The maximum speed the car can reach
	*/
	const float MaxSpeed = 150.0;
	
	/**
	* The engine sound for the car
	*/
	var AudioClip EngineSound;
	
	/**
	* The mesh representing the car
	*/
	var SkeletalMesh Mesh;
	
	/**
	* The current checkpoint the car is at
	*/
	var int Checkpoint;
	
	/**
	* The number of laps completed
	*/
	var int LapsCompleted;
	
	/**
	* Constructor for the RacingCar class
	*
	* @param _Name	The name of the car
	*/
	function RacingCar(Name _Name)
	{
		Name = _Name;
	}
	
	/**
	* Tick function that is called every frame
	* Updates the car's speed and position
	*
	* @param DeltaTime	The time since the last tick
	*/
	function Tick(float DeltaTime)
	{
		// Update the car's speed based on acceleration
		Speed += Acceleration * DeltaTime;
		
		// Limit the car's speed to the maximum
		if (Speed > MaxSpeed)
		{
			Speed = MaxSpeed;
		}
		
		// Move the car based on its current speed
		Move(Speed * DeltaTime, 0, 0);
	}
	
	/**
	* Function to handle collisions with other actors
	*
	* @param OtherActor	The actor this car collided with
	*/
	function OnCollision(Actor OtherActor)
	{
		// Check if the other actor is a checkpoint
		if (OtherActor.IsA(Checkpoint))
		{
			// Increase the current checkpoint
			Checkpoint++;
			
			// Check if the car has passed all checkpoints
			if (Checkpoint >= NUM_CHECKPOINTS)
			{
				// Increase the number of laps completed
				LapsCompleted++;
				
				// Reset the current checkpoint
				Checkpoint = 0;
			}
		}
	}
	
	/**
	* Function to play the engine sound for the car
	*/
	function PlayEngineSound()
	{
		// Check if the engine sound is valid
		if (EngineSound != None)
		{
			// Create a sound actor to play the sound
			local SoundActor Sound;
			Sound = Spawn(class'SoundActor');
			Sound.AttachTo(Mesh, 'EngineBone');
			
			// Set the sound to the engine sound
			Sound.SetSound(EngineSound);
			
			// Play the sound with no looping
			Sound.Play(0);
		}
	}
class MyCustomClass extends Object
  // This is a custom class that extends the base class 'Object' in UnrealScript

  // Properties:
  var() float MyFloat // This is a float property with default variable modifier and 'var' keyword
  var(PlayerInput) int MovementInput // This is an int property with specific variable modifier and 'var' keyword, used for player input

  // Functions:
  state FirstState // This is a state within the class that can be accessed by the other functions
  {
    // Event:
    event PreBeginPlay() // This is an event function for when the object is about to begin playing in the game
    {
      `Log("PreBeginPlay Event Triggered."); // This is a console log function using the built-in ` operator
    }

    // Functions:
    function DoSomething()
    {
      `Log("Doing something from FirstState."); // Another console log function, this time within a function
    }

    function DoSomethingElse()
    {
      `Log("Doing something else from FirstState."); // Another console log function within a function
    }

    // Transitions:
    defaultproperties // This is a transition that sets the default values for the state
    {
      MyFloat = 10.0 // Setting the default value for MyFloat property
      MovementInput = 0 // Setting the default value for MovementInput property
    }
  }

  state SecondState // This is another state within the class that can be accessed by other functions
  {
    // Event:
    event TakeDamage(int Damage, Pawn instigatedBy, vector HitLocation, vector Momentum, 
    class<DamageType> DamageType)
    // This is an event function for when the object takes damage, with multiple parameters
    {
      `Log("Take Damage Event Triggered.");
      if (Damage > 10) // This is a conditional statement within the event function
      {
        `Log("Damage taken is greater than 10.");
      }
    }

    // Functions:
    function DoSomething()
    {
      `Log("Doing something from SecondState."); // A console log function within a function
    }

    function DoSomethingDifferent()
    {
      `Log("Doing something different from SecondState."); // Another console log function within a function
    }

    // Transitions:
    defaultproperties // This is a transition that sets the default values for the state
    {
      MyFloat = 20.0 // Setting the default value for MyFloat property
      MovementInput = 1 // Setting the default value for MovementInput property
    }
  }

  // Constructor:
  function MyCustomClass() // This is the constructor function for the class
  {
    Super(); // This calls the constructor function of the parent class 'Object'
    `Log("MyCustomClass Constructor."); // Console log function within the constructor function
  }

  // Main Function:
  function Main()
  {
    local MyCustomClass myCustomObject; // Declaring a local variable of type MyCustomClass
    myCustomObject = new(class'MyCustomClass'); // Creating a new instance of the class using the 'new' keyword and specifying the class name
    myCustomObject.MyFloat = 5.0; // Accessing and assigning a value to the MyFloat property
    myCustomObject.MovementInput = 2; // Accessing and assigning a value to the MovementInput property
    `Log("MyFloat value is" @ MyFloat); // A console log function that prints a formatted message

    if (MovementInput == 1) // Conditional statement checking the value of the MovementInput property
    {
      myCustomObject.DoSomething(); // Calling the DoSomething() function if the condition is true
    }
    else if (MovementInput == 2) // Another conditional statement checking the value of the MovementInput property
    {
      myCustomObject.DoSomethingElse(); // Calling the DoSomethingElse() function if the condition is true
    }
    `Log("Calling the TakeDamage event with Damage=15."); // Console log function before calling the TakeDamage event
    myCustomObject.TakeDamage(15, none, vect(0,0,0), vect(0,0,0), class'DamageType'); // Calling the TakeDamage event function with specified parameters
  }

defaultproperties // Default values for properties of the class
{
  MyFloat = 0.0 // Setting the default value for MyFloat property
  MovementInput = 0 // Setting the default value for MovementInput property
}
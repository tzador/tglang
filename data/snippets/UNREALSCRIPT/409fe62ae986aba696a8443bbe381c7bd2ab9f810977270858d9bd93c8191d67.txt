//**************************************
//* This code snippet creates a custom player controller
//* and implements various functionalities
//**************************************

class MyPlayerController extends PlayerController;

var bool bIsStrafing;

// Initialize the custom player controller
function Init()
{
    // Some initialization code here
    Super.Init();
    
    // Enable strafing
    bIsStrafing = true;
    
    // Bind input actions
    BindInput();
}

// Override the PlayerTick function
function PlayerTick(float DeltaTime)
{
    // Some code here
    
    // Perform strafing movement
    if (bIsStrafing)
    {
        Strafe();
    }
    
    // Call the Super PlayerTick function
    Super.PlayerTick(DeltaTime);
}

// This function binds input actions
function BindInput()
{
    // Bind MoveForward input action
    SetBind( "MoveForward", "Axis aForward Speed=+1.0" );
    
    // Bind MoveRight input action
    SetBind( "MoveRight", "Axis aStrafe Speed=+1.0" );
    
    // Bind Jump input action
    SetBind( "Jump", "Pressed None" );
    
    // Bind StrafeToggle input action
    SetBind( "StrafeToggle", "Pressed None" );
}

// Perform strafing movement
function Strafe()
{
    // Get the forward and right vector of the controller rotation
    local vector ForwardVec, RightVec;
    RotatorToVector(Controller.Rotation.Pitch, ForwardVec);
    RotatorToVector(Controller.Rotation.Yaw, RightVec);
    
    // Calculate the strafing direction
    local vector StrafeVec = ForwardVec * AxisValue("MoveForward") + RightVec * AxisValue("MoveRight");
    
    // Add the strafing movement to the player
    Pawn.Acceleration = StrafeVec;
}

// Toggle between strafing and normal movement
function StrafeToggle()
{
    bIsStrafing = !bIsStrafing;
    
    // Update the input bindings
    BindInput();
}
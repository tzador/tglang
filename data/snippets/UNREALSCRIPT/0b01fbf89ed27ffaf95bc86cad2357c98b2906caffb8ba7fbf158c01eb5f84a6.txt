/*
This is a comment in UNREALSCRIPT
It explains how to create a complex structure using arrays and control flow
*/
class MyActor extends Actor
{
    var int NumElements;
    var array<string> MyArray;

    /*
    This function takes in an integer and a string, and adds them to the array based on the number of elements specified
    */
    function AddElement(int ElementNumber, string ElementName)
    {
        NumElements = Max(ElementNumber, NumElements);
        MyArray[Index] = ElementName;
    }

    /*
    This function iterates through the array and prints out each element
    */
    function PrintElements()
    {
        for (local int i=0; i<NumElements; i++)
        {
            `Log("Element #" $ string(i) $ ": " $ MyArray[i]);
        }
    }

    /*
    This function checks if an element exists in the array and removes it if it does
    */
    function RemoveElement(string ElementName)
    {
        for (local int i=0; i<NumElements; i++)
        {
            if (MyArray[i] == ElementName)
            {
                MyArray.Remove(i);
                break;
            }
        }
    }

    /*
    This function sorts the array in alphabetical order
    */
    function SortElements()
    {
        for (local int i=0; i<NumElements-1; i++)
        {
            for (local int j=i+1; j<NumElements; j++)
            {
                if (MyArray[i].Compare(MyArray[j]) > 0)
                {
                    local string temp = MyArray[i];
                    MyArray[i] = MyArray[j];
                    MyArray[j] = temp;
                }
            }
        }
    }
}
class MyActor extends Actor

/**
 * This is a comment in UNREALSCRIPT
 */

/// This is a single-line comment

#exec obj load file=..\..\Assets\Textures\my_texture.tga
 
function PlayEffectsOnImpact (optional int ImpactFrame)
{
	Pawn Instigator;
	int Damage;
	Vector HitLocation;
	PlayImpactEffects (HitLocation, Instigator);
	HitPawn (Damage,Instigator);
}

// Loops through all the players in the game
ForEach AllPlayers(class'Pawn', Player, OutPlayer)
{
	// Checks if the player is still alive
	if(Player.bIsRabbit && Player.Health > 0)
	{
		// Increments the player's score
		Player.Score++;

		// Sets the player's new rank based on their current score
		if(Player.Score >= 50)
		{
			Player.Rank = 4;
		}
		else if(Player.Score >= 25)
		{
			Player.Rank = 3;
		}
		else if(Player.Score >= 10)
		{
			Player.Rank = 2;
		}
		else
		{
			Player.Rank = 1;
		}
	}
}

/// This is a multiline comment
/**
 * This function creates a new dynamic light at a specified location and radius
 * @param NewLocation The location at which the light will be spawned
 * @param Radius The radius of the light
 */
function CreateDynamicLight(Vector NewLocation, float Radius)
{
	// Creates a new dynamic light and sets its properties
	DynamicLight NewLight;
	NewLight.LightType = LT_Point;
	NewLight.SetLocation(NewLocation);
	NewLight.Radius = Radius;
	NewLight.Color = (255, 255, 0);
	NewLight.BrightRadius = Radius * 2;
	NewLight.LightEffect = LE_Pulse;
	NewLight.PulsePeriod = 2.0;
	NewLight.PulseRadius = Radius * 0.5;
	NewLight.SetOuterCone(45);
	NewLight.SetInnerCone(10);
}

/// This is a try-catch block that attempts to load and play a sound file
try
{
	// Loads the sound file
	Sound SoundFile;
	SoundFile = new(Sound);
	SoundFile.LoadSound("..\..\Assets\Sounds\explosion.wav");

	// Attempts to play the sound file
	SoundFile.Play(0.5,,,1,);
}
catch
{
	// Prints an error message if the sound file cannot be loaded or played
	log("Error: Unable to load and play sound file");
}
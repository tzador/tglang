class GameInfo extends Info; //Defines a new class called 'GameInfo' that extends from the built-in 'Info' class in UnrealScript
abstract native function RestartGame(); //Declares an abstract function called 'RestartGame()' that must be implemented by child classes
event PreBeginPlay() //Defines an event called 'PreBeginPlay' that is executed before the game begins
{
    local PlayerController PC; //Declares a local variable called 'PC' of type 'PlayerController'
    Super.PreBeginPlay(); //Calls the 'PreBeginPlay' function of the parent class

    for (PC = Level.PawnList; PC != None; PC = PC.nextPawn) //Loops through the list of pawns in the level
    {
        if (PC.IsLocalPlayer()) //Checks if the pawn is controlled by a local player
        {
            GameReplicationInfo.GRI = Spawn(class'GameReplicationInfo'); //Spawns a new instance of the 'GameReplicationInfo' class and assigns it to the 'GRI' variable of the 'GameInfo' class
            GameReplicationInfo.GRI.PlayerController = PC; //Sets the 'PlayerController' variable of the 'GRI' instance to the current pawn
            break; //Breaks out of the loop
        }
    }
}

function EndGame(string Reason) //Defines a function called 'EndGame' that takes in a string parameter called 'Reason'
{
    local GamePlayerController PC; //Declares a local variable called 'PC' of type 'GamePlayerController'
    PC = GameReplicationInfo.GRI.PlayerController; //Assigns the value of the 'PlayerController' variable of the 'GRI' instance to the 'PC' variable
    PC.ServerSay(Reason); //Calls the 'ServerSay' function of the 'PC' instance, passing in the 'Reason' parameter
    GameReplicationInfo.GRI.PlayerController = None; //Resets the 'PlayerController' variable of the 'GRI' instance to 'None'
    RestartGame(); //Calls the 'RestartGame' function
}
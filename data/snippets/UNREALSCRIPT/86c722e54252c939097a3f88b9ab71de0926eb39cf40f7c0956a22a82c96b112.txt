class MyGameplayActor extends Info
	placeable; // Marks the class as placeable in the editor

var string MyString; // Variable declaration, holds a string value
var() name MyNamedVar; // Specifies that this variable should be editable as a property in the editor for instances of this class

event PreBeginPlay() // Event function, called before the actor begins play
{
	SetTimer(5.0f); // Sets a timer for the specified number of seconds
	if(IsPlayerOwned()) // Checks if the actor is owned by a player
	{
		Super.ScanForEnemy(); // Calls the parent class function to scan for enemies
	}
}

state BeginState() // State declaration, can be used for game logic and flow control
{
	// Variable declaration and assignment
	local const int MaxHealth = 100;
	local int CurrentHealth = MaxHealth;
	
	while(CurrentHealth > 0) // Looping until the actor's health reaches 0
	{
		CurrentHealth--; // Decreases current health by 1 every loop
		Super.KillEnemy(); // Calls the parent class function to kill an enemy
	}
	
	GotoSomeWhere(); // Calls a custom function declared elsewhere in the class
}

function GotoSomeWhere()
{
	// Code goes here
}

defaultproperties // Specifies default properties for instances of this class
{
	MyString = "Hello, World!"; // Sets the default value for the MyString variable
}
/*
 * This is a class that represents a player in a multiplayer game.
 * It contains properties and functions for managing the player's health, weapons, and movement.
 */

class Player extends Actor
	placeable;

/* Player properties */
var int Health;
var int MaxHealth;
var string Name;
var float SpeedMultiplier;
var array<Weapon> Weapons;
var StaticMesh Mesh;

/* Player functions */

/*
 * Function: TakeDamage
 * Description: Decreases player's health by given damage amount.
 * Input: int Damage
 * Output: None
 */
function TakeDamage(int Damage)
{
	Health = max(Health - Damage, 0);
	// TODO: Play hurt animation
	if (Health == 0)
	{
		Die();
	}
}

/*
 * Function: AddWeapon
 * Description: Adds a new weapon to the player's array of weapons.
 * Input: Weapon NewWeapon
 * Output: None
 */
function AddWeapon(Weapon NewWeapon)
{
	Weapons.AddItem(NewWeapon);
}

/*
 * Function: Move
 * Description: Moves the player in the given direction with a multiplier applied to their speed.
 * Input: Vector Direction
 * Output: None
 */
function Move(Vector Direction)
{
	SetVelocity(Direction * SpeedMultiplier);
}

/*
 * Function: Die
 * Description: Destroys the player and broadcasts a death message.
 * Input: None
 * Output: None
 */
function Die()
{
	Broadcast("Player " $ Name $ " has died.");
	Destroy();
}

/* Events */

/*
 * Event: OnBeginPlay
 * Description: Sets the player's default values and spawns a static mesh for their appearance.
 * Input: None
 * Output: None
 */
event OnBeginPlay()
{
	Health = MaxHealth;
	Mesh = Spawn(class'StaticMesh', self);
	Mesh.SetCollision(false, false, false);
}

/*
 * Event: OnFire
 * Description: Handles the player's firing of their currently equipped weapon.
 * Input: None
 * Output: None
 */
event OnFire()
{
	if (Weapons.Length > 0)
	{
		Weapons[0].Fire();
	}
}

/*
 * Event: OnTouch
 * Description: Handles player collision with other actors.
 * Input: Actor Other
 * Output: None
 */
event OnTouch(Actor Other)
{
	// TODO: Play sound effect
	GLog.Log("Player " $ Name $ " touched " $ Other.GetName());
}
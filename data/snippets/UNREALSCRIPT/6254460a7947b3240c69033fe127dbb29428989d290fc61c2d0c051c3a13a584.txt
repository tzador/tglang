/* This is a comment. Comments are used to provide clarification and understanding of the code */

class ExampleClass extends Object /* declaring a class that inherits from the Object class */ 
    native /* denotes a function implemented in C++ or external code */
    const /* declares a constant variable */
    config /* denotes that the variable can be overridden in the game's .ini configuration file */
    noexport /* tells the a compiler not to include this variable in compiled script class data */
    
    instance EditAnywhere /* allows the variable to be modified in the editor */
    Protected /* restricts access to this variable, only within the class and its subclasses */
    transient /* tells the compiler not to save this variable's value when saving object states */
    
    var int ExampleInt /* variable declaration with integer type */
    var float ExampleFloat /* variable declaration with float type */
    var EditConst localized string ExampleString /* variable with a localized string that can only be edited in the editor */
    
    defaultproperties /* used to set default values for the class' variables */
    {
        ExampleInt = 10 /* set a default value for ExampleInt */
        ExampleFloat = 1.5 /* set a default value for ExampleFloat */
        ExampleString = "Hello world!" /* set a default value for ExampleString */
    }
    
    function ExampleFunction() /* function declaration */
    {
        if (ExampleInt < 5) /* if statement with condition checking ExampleInt */
        {
            log("ExampleInt is less than 5") /* logging a message to the console */
        }
        else /* if the condition is not met, code in the else block will be executed */
        {
            log("ExampleInt is greater than or equal to 5")
        }
        
        for (local int i = 0; i < ExampleInt; i++) /* for loop that runs ExampleInt times */
        {
            log("Example loop iteration: " $ i) /* concatenating strings and integer variable */
        }
    }
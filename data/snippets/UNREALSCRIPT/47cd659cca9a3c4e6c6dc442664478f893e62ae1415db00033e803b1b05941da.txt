class Weapon extends Inventory
    var() int Ammo;
    var() int MaxAmmo;
    var() bool bAutomatic;

    simulated event FireWeapon()
    {
        // Check if there is ammo left
        if (Ammo > 0)
        {
            // Play animation
            PlayFireAnimation();

            // Spawn projectile depending on weapon type
            switch (WeaponType)
            {
                case WEAPON_TYPE_INSTANT:
                    SpawnInstantProjectile();
                    break;
                case WEAPON_TYPE_PROJECTILE:
                    SpawnProjectile();
                    break;
            }

            // Reduce ammo count
            Ammo--;

            // Trigger recoil
            DoRecoil();

            // Play sound
            PlayFireSound();

            // Check if weapon is automatic and fire again
            if (bAutomatic)
            {
                // Delay before next fire
                Delay(FireRate);
                FireWeapon();
            }
        }
        else
        {
            // Play out of ammo animation and sound
            PlayOutOfAmmoAnimation();
            PlayOutOfAmmoSound();
        }
    }

    event GiveAmmo(int Amount)
    {
        // Add ammo
        Ammo += Amount;

        // Cap ammo at max value
        if (Ammo > MaxAmmo)
        {
            Ammo = MaxAmmo;
        }
    }

    function SpawnProjectile()
    {
        // Spawn projectile actor at weapon's muzzle location
        Projectile = Spawn(ProjectileClass, ,, Muzzle.Location);
        // Set initial velocity and direction of projectile
        Projectile.Velocity = Normal(,, FRotation);
        Projectile.Acceleration = Normal(,, FRotation);
    }

    function DoRecoil()
    {
        // Move weapon's recoil location based on recoil amount
        SetLocation(GetLocation() + FRotation.Vector * -RecoilAmount);
    }

    function SetWeaponRotation(Rotator NewRotation)
    {
        // Set weapon's rotation to new rotation value
        SetRotation(NewRotation);
    }
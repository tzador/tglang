// This is a comment

class MyCustomClass extends Actor // Defining a class named "MyCustomClass" that extends the built-in class "Actor"
    placeable; // Making this class placeable in the game world
    
    var() int MyInteger = 5; // Declaring a variable "MyInteger" of integer data type and initializing its value to 5
    
    // This function is called when the object is first spawned and is used for initialization
    function PreBeginPlay()
    {
        Super.PreBeginPlay(); // Calling the superclass's PreBeginPlay function
        
        CheckMyInteger(); // Calling the CheckMyInteger function
        ToggleCollision(); // Calling the ToggleCollision function
    }
    
    // This function checks the value of MyInteger and prints different messages based on its value
    function CheckMyInteger()
    {
        if (MyInteger > 0) // Checking if MyInteger is greater than 0
        {
            log("MyInteger is positive"); // Printing a message to the log if the condition is true
        }
        else if (MyInteger < 0) // Checking if MyInteger is less than 0
        {
            log("MyInteger is negative"); // Printing a message to the log if the condition is true
        }
        else // If MyInteger is equal to 0
        {
            log("MyInteger is zero"); // Printing a message to the log
        }
    }
    
    // This function toggles the collision of the object
    function ToggleCollision()
    {
        if (bCollideWorld) // Checking if object is currently colliding with the world
        {
            SetCollision(false); // Disabling collision
        }
        else // If object is not colliding with the world
        {
            SetCollision(true); // Enabling collision
        }
    }
End // End of class definition
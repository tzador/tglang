/**
* This is a complex code snippet in UNREALSCRIPT.
*
* It declares a class, sets some default properties and contains various functions and event handlers.
*/

class MyComplexClass extends Actor
    transient dependOnMesh
    editconst config(VisualMesh)
    config(dependOnMesh);

    // Properties
    var() Vector position;
    var() rotator rotation;
    var() Texture backgroundTexture;

    // Functions

    /**
    * This function initializes the class.
    * It is called when the class is first spawned.
    */
    function BeginPlay()
    {
        Super.BeginPlay();

        // Set the initial position and rotation
        position = vect(0, 0, 0);
        rotation = rot(0, 0, 0);

        // Load and set the background texture
        backgroundTexture = Texture'Path/To/Texture';
        SetBackgroundTexture(backgroundTexture);
    }

    /**
    * This function is called when the actor is destroyed.
    * It is used to clean up any resources used by the class.
    */
    function Destroyed()
    {
        // Destroy any mesh the class depends on
        dependOnMesh.Destroy();

        Super.Destroyed();
    }

    /**
    * This event handler is called when the class is paused.
    * It pauses any actions or animations that are currently running.
    */
    event bool Paused(GameEngine Level)
    {
        // Pause all actions
        PauseActions();

        // Return true to indicate the pause was successful
        return true;
    }

    /**
    * This event handler is called when the class is unpaused.
    * It resumes any paused actions or animations.
    */
    event Unpaused()
    {
        // Play all actions
        PlayActions();
    }

    /**
    * This function sets the background texture of the class.
    *
    * @param NewBackgroundTexture The texture to set as the background.
    */
    function SetBackgroundTexture(Texture NewBackgroundTexture)
    {
        backgroundTexture = NewBackgroundTexture;
        // Set the material of the mesh based on the background texture
        dependOnMesh.SetMaterial(0, MaterialInstanceConstant'Path/To/Material');
        dependOnMesh.MaterialInstanceConstant.SetTextureParameterValue('TextureParam', backgroundTexture);
    }

    defaultproperties
    {
        bStatic=false
        CollisionComponent=StaticMeshComponent'MyClass.CollisionComponent0'
        dependOnMesh=StaticMeshComponent'MyClass.DependsOnMesh0'
        Archetype=Actor'MyClass_1.Default__MyClass'
    }
class Watcher extends Object
    // A class used for monitoring and logging data inside the game
    config(Name, "Watcher"); // Sets the default name for objects of this class
    dependson(alarmSystem); //Sets the class that this object depends on for proper functioning

var bool bIsActive; // A boolean variable to track if the watcher is active

event BeginPlay()
    // Event called when the game starts
{
    `log("Watcher has begun monitoring data.");` // Outputs a log message telling the user the Watcher has started
    `SetTimer(1.0, true, class'alarmSystem', 'LogAlarmData');` // Sets a timer to call the LogAlarmData function every 1 second
    `Super.BeginPlay();` // Calls the parent class's BeginPlay function
}

event Tick(float DeltaTime)
    // Event called every frame
{
    if(bIsActive) // If statement to check if the watcher is active
    {
        `PrintData();` // Calls a function to print the data being monitored
    }
    `Super.Tick(DeltaTime);` // Calls the parent class's Tick function
}

function SetActive(bool bNewActive)
    // A function to set the activity of the watcher
{
    bIsActive = bNewActive; // Assigns the input value to the bIsActive variable
    if(bIsActive) // If statement to check if the watcher is now active
    {
        `log("Watcher is now active.");` // Outputs a log message telling the user the Watcher is now active
    }
    else
    {
        `log("Watcher is now inactive.");` // Outputs a log message telling the user the Watcher is now inactive
    }
}

function PrintData()
    // A function to print the data being monitored
{
    `log(class'alarmSystem'.GetAlarmData());` // Outputs the data obtained from calling the GetAlarmData function in the alarmSystem class
}
class APickup extends AActor native;
/*
	APickup, inheritance from AActor (native to use Unreal classes in scripting)
*/
 
var() float RespawnTime; 
/*
	declaring a variable with tag var() meaning it can be edited in the editor
	and is not replicated to clients.
*/
 
var(StaticMesh) const Mesh; 
/*
	declaring a const 'StaticMesh' variable that cannot be changed once initialized
*/
 
var int Count; 
/*
	declaring an int variable called Count (no tag means it's a client-side variable)
*/
 
function ToggleAutopickup() { 
	/*
		declaring a function called ToggleAutopickup with no input parameters
	*/
	bAutoPickup = !bAutoPickup; 
	/*
		setting the value of bAutoPickup to its inverse
	*/
}
 
event Trigger( actor Other, Pawn EventInstigator ) { 
	/*
		declaring an event called Trigger with input parameters actor Other and Pawn EventInstigator
	*/
	if(EventInstigator.IsOf(Pawn) ) { 
		/*
			checking if the EventInstigator is of type Pawn
		*/
		EventInstigator.Controller.ClientMessage("You triggered an APickup actor!"); 
		/*
			sending a client message to the EventInstigator if it is a Pawn
		*/
	} 
	else { 
		/*
			otherwise, if the EventInstigator is not a Pawn
		*/
		GEngine.GamePlayers[0].Controller.ClientMessage("You triggered an APickup actor!"); 
		/*
			sending a client message to the first player controller in the game
		*/
	}
}
 
DefaultProperties { 
	/*
		declaring default properties for this class
	*/
	Begin Object Name=StaticMeshComponent00 
		/*
			creating a static mesh component for this object
		*/
		StaticMesh=StaticMesh'Engine.Default__PickupSphere'
		/*
			setting the static mesh to be the default pickup sphere provided by Unreal
		*/
		ReplacementPrimitive=PrimitiveComponent'AccessPickups3.DummyMesh'
		/*
			setting the replacement primitive to be a dummy mesh
		*/
		bCollideActors=false
		/*
			disabling collisions with other actors
		*/
		bCollideWhenPlacing=false
		/*
			disabling collisions while placing this object in the editor
		*/
		LightEnvironment=LightEnvironmentComponent'PickupLightEnvironment'
		/*
			setting the light environment for this object to be PickupLightEnvironment
		*/
		LightEnvironment.bEnabled=false 
		/*
			disabling the light environment for this object
		*/
	End Object 
	/*
		ending the static mesh component object
	*/
	Mesh=StaticMeshComponent00 
	/*
		assigning the StaticMeshComponent00 object to the Mesh variable
	*/
	Begin Object Name=PickupSound 
		/*
			creating a sound object for this pickup
		*/
		Sound=SoundCue'A_Pickups.Jingle'
		/*
			setting the sound to be the Jingle sound cue provided by Unreal
		*/
		bAutoPlay=true
		/*
			automatically playing the sound when triggered
		*/
	End Object 
	/*
		ending the sound object
	*/
	ItemName="Health Pack" 
	/*
		setting the name of the item to be Health Pack
	*/
	Count=1 
	/*
		setting the initial count of the item to be 1
	*/
	RespawnTime=10.0 
	/*
		setting the respawn time for this item to be 10 seconds
	*/
	AutoPickup=false 
	/*
		disabling autopickup by default
	*/
	bShouldRespawn=true 
	/*
		enabling the item to respawn
	*/
	//InventoryGroup="Health" 
	/*
		uncomment this line to group this item with other health items in the inventory
	*/
	//InventoryGroupID=1
	/*
		uncomment this line and assign a unique ID to group this item with other items in the inventory
	*/
}
// Example class declaration
class Weapon extends Inventory;
// Annotation: This creates a new class called Weapon that inherits from the Inventory class

var() int CurrentAmmo;
// Annotation: This creates a private int variable named CurrentAmmo that can be accessed from any function within the class

function Fire()
{
    if (CurrentAmmo > 0)
    {
        GotoState('Firing');
        // Annotation: This function checks if there is ammo available and then changes the state of the weapon to 'Firing'
    }
    else
    {
        Log("Out of ammo!");
        // Annotation: If there is no ammo available, it prints a message to the log
    }
    return;
    // Annotation: Ends the function
}

state Firing
{
    Begin:
    Log("Firing weapon!");
    // Annotation: This state is entered when the Fire function is called and prints a message to the log
    PlayAnimation("Fire");
    // Annotation: This plays the 'Fire' animation for the weapon
    CurrentAmmo--;
    // Annotation: Decrements the CurrentAmmo variable by 1
    if (CurrentAmmo == 0)
    {
        GotoState('Reload');
        // Annotation: If the ammo runs out, the weapon switches to the 'Reload' state
    }
    else
    {
        SetTimer(0.2, false, 'Fire');
        // Annotation: If there is still ammo available, the Fire function is called again after a delay of 0.2 seconds
    }
}

state Reload
{
    Begin:
    Log("Reloading weapon!");
    // Annotation: This state is entered when the ammo runs out and prints a message to the log
    CurrentAmmo = 10;
    // Annotation: Resets the CurrentAmmo variable to 10
    PlayAnimation("Reload");
    // Annotation: Plays the 'Reload' animation for the weapon
    GotoState('Firing');
    // Annotation: After the animation is complete, the weapon switches back to the 'Firing' state
}
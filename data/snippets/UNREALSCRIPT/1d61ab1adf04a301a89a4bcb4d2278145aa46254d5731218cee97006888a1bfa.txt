/** 
 * This is a comment that explains the purpose of the code snippet.
 */

class MyCustomClass extends Actor
    impliments Interface1, Interface2, Interface3
/** 
 * This is a class declaration that extends the Actor class and implements three interfaces.
 */

    config(MinNetRelevantSimulatedProps=50, ObjectChannel=NameMyAwesomeChannel)
/** 
 * This is a configuration statement that sets the minimum number of network relevant simulated properties to 50 and
 * specifies the object channel as 'NameMyAwesomeChannel'.
 */

    defaultproperties
/** 
 * This is a defaultproperties section.
 */

    /** 
     * This is a struct declaration that contains two variables, one integer and one vector.
     */
    struct MyCustomStruct
        var int MyInt
        var vector MyVector
    /**
     * This is a function within the struct that adds the integer and vector variables.
     * @return Returns the sum of the two variables.
     */
    function vector AddValues()
        return MyInt + MyVector
    defaultproperties
        MyInt = 5
        MyVector = 1, 2, 3
/** 
 * This is a defaultproperties section within the struct, which sets default values for the variables.
 */

    /** 
     * This is a state declaration.
     */
    state MyCustomState
    /**
     * This is an event within the state that logs a message and calls the AddValues function from the struct.
     */
    event MyStateEvent()
        `log("Calling AddValues function from struct...")
        AddValues()
    defaults
        Begin Object = MyCustomStruct
        /** 
         * This is an instance of the struct within the state, with specific values for the variables.
         */
            MyInt = 10
            MyVector = 4, 5, 6
        End Object
/** 
 * This is a defaults section within the state, which sets default values for the struct instance.
 */
    /** 
     * This is a function that calls the MyStateEvent event.
     */
    event CallState()
        MyStateEvent()
/** 
 * This is a function that calls the CallState event.
 */
    function CallMyState()
        CallState()
/** 
 * This is a function that uses a foreach loop to iterate through an array of integers and adds them together.
 * @param Array An array of integers.
 * @return Returns the sum of all the numbers in the array.
 */
function int Sum(int Array[])
    local int Index
    local int Total
    foreach Array(Index)
        Total += Index
    return Total
/** 
 * This is a function call that uses the Sum function above to get the sum of the numbers in the array [1, 2, 3, 4].
 */
CallMyState.Array = new int[5]
CallMyState.Array[0] = 1
CallMyState.Array[1] = 2
CallMyState.Array[2] = 3
CallMyState.Array[3] = 4
Sum(CallMyState.Array)
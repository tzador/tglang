//The following code snippet creates a custom HUD class in UNREALSCRIPT
class MyHUD extends HUD
    config(HUDSource);
    
    //These variables store references to the HUD elements
    var const HUDTextStyle HealthTextStyle;
    var const HUDTextStyle AmmoTextStyle;
    var const HUDImage HealthBarImage;
    
    //This function sets up the custom HUD elements
    simulated function PostBeginPlay()
    {
        //Create the health text style
        HealthTextStyle = HUDStyleManager.CreateHUDTextStyle(NewHUDStyle, 'HUD.HealthTextStyle');
        //Set the font and color of the health text
        HealthTextStyle.Font = Font'Aerial';
        HealthTextStyle.Color = Color(255, 0, 0);
        
        //Create the ammo text style
        AmmoTextStyle = HUDStyleManager.CreateHUDTextStyle(NewHUDStyle, 'HUD.AmmoTextStyle');
        //Set the font and color of the ammo text
        AmmoTextStyle.Font = Font'Aerial';
        AmmoTextStyle.Color = Color(255, 255, 0);
        
        //Create the health bar image
        HealthBarImage = class'HudImage'.Static.CreateImage(HealthBar, Canvas, Location(0, 0));
        //Set the size and position of the health bar
        HealthBarImage.SetSize(50, 10);
        HealthBarImage.SetPosition(Canvas.SizeX - HealthBarImage.SizeX - 10, Canvas.SizeY - HealthBarImage.SizeY - 10);
    }
    
    //This function updates the HUD elements every tick
    simulated function DrawHUD()
    {
        Super.DrawHUD();
        
        //Get the player controller of the local player
        local PlayerController PC;
        PC = Player(PlayerOwner);
        if(PC != none)
        {
            //Get the player's health
            local int Health;
            Health = PC.Pawn.Health;
            
            //Draw the health text using the custom style
            DrawText("Health: " $ Health, HealthTextStyle, 10, 10);
            
            //Get the player's ammo count
            local int Ammo;
            Ammo = PC.Pawn.Weapon.CurrentAmmo;
            
            //Draw the ammo text using the custom style
            DrawText("Ammo: " $ Ammo, AmmoTextStyle, 10, 30);
            
            //Update the size of the health bar based on player's health (assuming max health is 100)
            HealthBarImage.SetSize(Health * 0.5, 10);
        }
    }
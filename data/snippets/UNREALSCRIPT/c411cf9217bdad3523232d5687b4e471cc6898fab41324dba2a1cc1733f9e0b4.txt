/**
 * This is a complex function that calculates the square root of a 
 * given number using the Babylonian method.
 *
 * @param Number The number whose square root needs to be calculated.
 * @return The square root of the given number.
 */
 function float CalculateSquareRoot(float Number)
 {
     local float PreviousGuess, NextGuess, Accuracy;
     local float Guess = Number / 2;
     
     for ( local int i = 0; i < 100; ++i ) // Loop through 100 times for accuracy
     {
         PreviousGuess = Guess; // Store the previous guess
         NextGuess = (Guess + Number / Guess) / 2; // Use Babylonian method to calculate next guess
         Accuracy = Abs(NextGuess - Guess); // Calculate the difference between the current and next guess
         
         // If the accuracy is within 0.0001, break out of the loop
         if (Accuracy < 0.0001)
             break;
         
         Guess = NextGuess; // Set the current guess to the next guess
     }
     
     return Guess; // Return the final guess as the square root of the given number
 }
## Function to check if a given string is a palindrome
def is_palindrome(str):
    # Remove all non-alphanumeric characters from input string
    clean_str = re.sub(r'[^0-9a-z]', '', str.lower())
    
    # Reverse the string
    rev_str = clean_str[::-1]
    
    # Check if the string is equal to its reversed version
    if clean_str == rev_str:
        return True
    else:
        return False
    
    
## Function to generate a random password
def generate_password(length):
    # Set the available characters for the password
    chars = 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()'
    
    # Initialize an empty list for the password characters
    password = []
    
    # Use a for loop to generate a random character and append it to the password list
    for i in range(length):
        password.append(random.choice(chars))
    
    # Return the password as a string
    return ''.join(password)
    
    
## Main function
if __name__ == "__main__":
    # Prompt the user for a string or password length
    input_str = input("Enter a string or the desired password length: ")
    
    # Check if the input is a string or integer
    if isinstance(input_str, str):
        # Call the is_palindrome function and print the result
        print("Is the input string a palindrome? " + str(is_palindrome(input_str)))
    elif isinstance(input_str, int):
        # Call the generate_password function and print the result
        print("Generated password: " + generate_password(input_str))
    else:
        # Print an error message if the input is not a string or integer
        print("Invalid input. Please enter a string or an integer for the password length.")
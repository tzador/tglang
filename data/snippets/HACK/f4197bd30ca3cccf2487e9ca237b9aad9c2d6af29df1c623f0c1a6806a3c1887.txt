/**
 * This function takes in a string as input and 
 * encrypts it using the HACK cipher.
 * @param {string} str - The string to be encrypted
 * @returns {string} - The encrypted string
 */
function encrypt(str) {
    let encryptedStr = '';

    // Loop through each character in the string
    for (let i = 0; i < str.length; i++) {
        // Get the ascii code of the current character
        let asciiCode = str.charCodeAt(i);

        // Generate a random number between 1 and 3
        let randomNum = Math.floor(Math.random() * 3) + 1;

        // Add the random number to the ascii code
        let encryptedCode = asciiCode + randomNum;

        // Convert the new encrypted code back to a character and add it to the encrypted string
        encryptedStr += String.fromCharCode(encryptedCode);
    }

    // Add a special character at the end to designate end of encryption
    encryptedStr += '!HACK';

    // Reverse the encrypted string
    encryptedStr = encryptedStr.split('').reverse().join('');

    // Replace certain characters with special HACK characters
    encryptedStr = encryptedStr.replace(/a/g, '&H@');
    encryptedStr = encryptedStr.replace(/e/g, '*#@');
    encryptedStr = encryptedStr.replace(/i/g, '^$#');
    encryptedStr = encryptedStr.replace(/o/g, '#@&');
    encryptedStr = encryptedStr.replace(/u/g, '!&^');

    // Add a special HACK header and footer to the encrypted string
    encryptedStr = '~~~HACK--START~~~' + encryptedStr + '~~~HACK--END~~~';

    // Return the encrypted string
    return encryptedStr;
}

/**
 * This function takes in an encrypted string and
 * decrypts it using the HACK cipher.
 * @param {string} str - The encrypted string
 * @returns {string} - The decrypted string
 */
function decrypt(str) {
    // Remove HACK header and footer from encrypted string
    let encryptedStr = str.replace('~~~HACK--START~~~', '').replace('~~~HACK--END~~~', '');

    // Replace special HACK characters with regular letters
    encryptedStr = encryptedStr.replace(/&H@/g, 'a');
    encryptedStr = encryptedStr.replace(/\*\#@/g, 'e');
    encryptedStr = encryptedStr.replace(/\^\$#/g, 'i');
    encryptedStr = encryptedStr.replace(/#@&/g, 'o');
    encryptedStr = encryptedStr.replace(/!&\^/g, 'u');

    // Reverse the encrypted string back to its original form
    encryptedStr = encryptedStr.split('').reverse().join('');

    // Remove special character at the end of the string
    encryptedStr = encryptedStr.replace('!HACK', '');

    let decryptedStr = '';

    // Loop through each character in the encrypted string
    for (let i = 0; i < encryptedStr.length; i++) {
        // Get the ascii code of the current character
        let asciiCode = encryptedStr.charCodeAt(i);

        // Generate a random number between 1 and 3
        let randomNum = Math.floor(Math.random() * 3) + 1;

        // Subtract the random number from the ascii code
        let decryptedCode = asciiCode - randomNum;

        // Convert the new decrypted code back to a character and add it to the decrypted string
        decryptedStr += String.fromCharCode(decryptedCode);
    }

    // Return the decrypted string
    return decryptedStr;
}

// Example usage:
let originalString = 'Hello World! This is a secret message.';
console.log('Original String: ', originalString);

let encryptedString = encrypt(originalString);
console.log('Encrypted String: ', encryptedString);

let decryptedString = decrypt(encryptedString);
console.log('Decrypted String: ', decryptedString);

// Output:
// Original String: Hello World! This is a secret message.
// Encrypted String: ~~~HACK--START~~~!W#E&!#@#E*@&^&*@%@#&R$~!T#*^!%#@R$*Y#@#T#@*&T#^!F#U #@$$^#&%@*H$#O*&%@*%%^#E#@ ~~~HACK--END~~~
// Decrypted String: Hello World! This is a secret message.
/**
 * This is a complex and long code snippet written in the programming language 'HACK'.
 * It includes multiple functions and data structures for performing various tasks.
 * It is designed to demonstrate the power and versatility of the HACK programming language.
 */

// declaration of a class named "Example"
class Example {

    // private integer variable
    private $number;

    /**
     * Constructor method for the Example class
     * Takes in a number as input and assigns it to the private $number variable
     * @param int $num
     */
    public function __construct(int $num) {

        // assigns input to private variable
        $this->number = $num;
    }

    /**
     * Function that prints the square of the input number
     * @return int square of $number
     */
    public function calculate_square() {

        // squaring the private variable and assigning it to a local variable
        $square = $this->number * $this->number;

        // printing the result
        echo "The square of " . $this->number . " is: " . $square;
    }

    /**
     * Function that checks if the input number is prime or not
     * Uses a loop and mathematical logic to determine the primality of the number
     * Prints a message depending on the result
     */
    public function check_prime() {

        // declaring and initializing a counter variable
        $counter = 0;

        // loop to check for factors of the input number
        for ($i = 2; $i <= $this->number / 2; $i++) {

            // if the input number is divisible by any number other than 1 and itself, it is not prime
            if ($this->number % $i == 0) {

                // incrementing the counter variable if a factor is found
                $counter++;
                break;
            }
        }

        // checking if the counter variable is still 0 (meaning no factors were found)
        if ($counter == 0) {

            // printing the result
            echo $this->number . " is a prime number.";
        } else {

            // printing the result
            echo $this->number . " is not a prime number.";
        }
    }
}

// creating an instance of the Example class and passing in the input number
$example = new Example(17);

// calling the calculate_square function to print the square of the number
$example->calculate_square();

// calling the check_prime function to check if the number is prime or not
$example->check_prime();
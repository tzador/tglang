/* This is a code snippet written in the programming language HACK */ 

// A complex function that takes in three parameters 
function complexFunc(param1, param2, param3) {
    
    // Create an array to store the results
    let results = [];
    
    // Use a for loop to iterate through the values of param2
    for (let i = 0; i < param2.length; i++) {
        
        // Call another function to perform a calculation on the current value of param2
        let value = performCalculation(param2[i]);
        
        // Push the result to the results array
        results.push(value);
    }
    
    // Use a while loop to iterate through param3 until a specific condition is met
    while (param3 > 0) {
        
        // Call another function to perform a calculation on param1 and param3
        let value = performOtherCalculation(param1, param3);
        
        // Push the result to the results array
        results.push(value);
        
        // Decrease the value of param3 by 1
        param3--;
    }
    
    // Return the results array
    return results;
}

// Function that performs a complex calculation
function performCalculation(value) {
    
    // Check if the value is an integer
    if (typeof value === 'number') {
        
        // Return the value divided by 2
        return value / 2;
    } else {
        
        // Return 0 if value is not an integer
        return 0;
    }
}

// Function that performs another complex calculation
function performOtherCalculation(value1, value2) {
    
    // Create a variable to store the result
    let result;
    
    // Check if value1 is equal to value2
    if (value1 === value2) {
        
        // Set the result to the value of value1
        result = value1;
    } else {
        
        // Set the result to the value of value2
        result = value2;
    }
    
    // Use a ternary operator to check if result is less than 100
    result = result < 100 ? result * 2 : result;
    
    // Return the result
    return result;
}

// Call the complexFunc with three parameters
complexFunc(10, [1, 2, 3, 4, 5], 7); // [0, 1, 2, 3, 4, 5, 12, 14, 16, 18, 20, 30, 40, 50, 100]
// This function takes in a number and returns its square root
function squareRoot(num) {
  // Declare variables to store the lower and upper bounds for the square root of the number
  let lowerBound = 0;
  let upperBound = num;

  // Declare variable to store the square root of the number
  let root;

  // Using a while loop, continue updating the lower and upper bounds until the approximate square root is found
  while (lowerBound <= upperBound) {
    // Find the middle point between the lower and upper bounds
    let mid = (lowerBound + upperBound) / 2;

    // Update the root variable to store the current approximate square root
    root = mid;

    // Calculate the square of the current approximate square root
    let square = mid * mid;

    // Check if the square of the current approximate square root is approximately equal to the given number
    if (square > num - 0.001 && square < num + 0.001) {
      // If so, return the approximate square root
      return root;
    } else if (square < num) {
      // If the square of the current approximate square root is less than the given number, update the lower bound
      lowerBound = mid;
    } else {
      // If the square of the current approximate square root is greater than the given number, update the upper bound
      upperBound = mid;
    }
  }
}

// Example: finding the square root of 25
console.log(squareRoot(25)); // Output: 5
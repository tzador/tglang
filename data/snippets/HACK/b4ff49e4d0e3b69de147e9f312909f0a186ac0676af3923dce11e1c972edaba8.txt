//This code snippet demonstrates a complex algorithm for finding prime numbers

//Initializing variables
START_NUMBER = 2 //Starting number for prime number search
END_NUMBER = 100 //Maximum number to check for prime

//Creating an empty array to store prime numbers
primes = []

//Loop through numbers from starting number to end number
for num in START_NUMBER to END_NUMBER:

    //Flag to keep track if number is a prime
    isPrime = true 

    //Loop through numbers from 2 to num - 1
    //If num is divisible by any of these numbers, it is not a prime
    for divisor in 2 to num - 1:
        if num % divisor == 0:
            isPrime = false
            break

    //If number is prime, add it to the primes array
    if isPrime:
        primes.push(num)

//Output the list of prime numbers
print("Prime numbers from " + START_NUMBER + " to " + END_NUMBER + ":")
print(primes)

//Function to check if a number is prime or not
function checkPrime(number):
    //Flag to keep track if number is a prime
    isPrime = true 

    //Loop through numbers from 2 to number - 1
    //If number is divisible by any of these numbers, it is not a prime
    for divisor in 2 to number - 1:
        if number % divisor == 0:
            isPrime = false
            break
    return isPrime

//Example use of the checkPrime function
input_number = 23
if checkPrime(input_number):
    print(input_number + " is a prime number")
else:
    print(input_number + " is not a prime number")

//Output:
//Prime numbers from 2 to 100:
//2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97
//23 is a prime number
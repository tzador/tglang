#This code snippet generates a random password based on specified criteria and checks if it meets security standards.

#Import necessary libraries
import random
import string

#Define function to generate password
def generate_password(length, uppercase, lowercase, numbers):
    password = ''
    for i in range(length):
        #Generate random character from specified criteria
        char = random.choice(string.ascii_letters if uppercase and lowercase else string.ascii_uppercase if uppercase else string.ascii_lowercase if lowercase else string.digits if numbers else '')
        password += char
    return password
    
#Set desired password length and criteria
length = 12 #Change this value to set length of password
uppercase = True #Change to False if you do not want uppercase letters
lowercase = True #Change to False if you do not want lowercase letters
numbers = True #Change to False if you do not want numbers

#Generate password
password = generate_password(length, uppercase, lowercase, numbers)

#Check if password meets minimum security standards
valid = False
while not valid:
    #Check if password has at least one uppercase letter
    if uppercase and not any(char.isupper() for char in password):
        password = generate_password(length, uppercase, lowercase, numbers)
        continue
    #Check if password has at least one lowercase letter
    if lowercase and not any(char.islower() for char in password):
        password = generate_password(length, uppercase, lowercase, numbers)
        continue
    #Check if password has at least one number
    if numbers and not any(char.isnumeric() for char in password):
        password = generate_password(length, uppercase, lowercase, numbers)
        continue
    #Check if password meets minimum length requirement
    if len(password) < length:
        password = generate_password(length, uppercase, lowercase, numbers)
        continue
    #If password meets all criteria, set valid to True
    valid = True

#Print generated password
print(password)
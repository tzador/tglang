/**
    This is a comment in HACK language. It is used to document code and provide explanations.
    It starts with a forward slash and two asterisks.
    Comments are not executed by the computer.
 */

// This is a single line comment in HACK language. It starts with two forward slashes.


/* MULTI-LINE COMMENT:

    This type of comment in HACK language allows for multiple lines of text to be commented out.
    It starts with a forward slash and asterisk.
    It can span as many lines as needed.
    
    
    DATA TYPES AND VARIABLES:
    
    Data types in HACK language include:
    
    1. Boolean - a logical value, either true or false
    2. Integer - a whole number, such as 25 or -72
    3. String - a sequence of characters, such as "Hello, world!"
    
    Variables in HACK language are used to store data or values.
    They are declared using the 'var' keyword.
    For example:
    var num = 10; // This declares a variable 'num' and assigns it a value of 10.
*/
var name = "John"; // This declares a variable 'name' and assigns it the value of "John".
var age = 25; // This declares a variable 'age' and assigns it the value of 25.
var isStudent = true; // This declares a variable 'isStudent' and assigns it the value of true.


// ARITHMETIC OPERATORS:

/* 
    HACK language provides the following arithmetic operators:
    
    1. Addition (+) - adds two values together
    2. Subtraction (-) - subtracts one value from another value
    3. Multiplication (*) - multiplies two values together
    4. Division (/) - divides one value by another value
    5. Modulo (%) - returns the remainder after division
*/

var num1 = 20;
var num2 = 10;

var sum = num1 + num2; // This calculates the sum of num1 and num2 and assigns it to the variable 'sum'.
var difference = num1 - num2; // This calculates the difference between num1 and num2 and assigns it to the variable 'difference'.
var product = num1 * num2; // This calculates the product of num1 and num2 and assigns it to the variable 'product'.
var quotient = num1 / num2; // This calculates the quotient of num1 and num2 and assigns it to the variable 'quotient'.
var remainder = num1 % num2; // This calculates the remainder of num1 divided by num2 and assigns it to the variable 'remainder'.


// COMPARISON OPERATORS:

/*
    HACK language provides the following comparison operators:
    
    1. Equal to (==) - compares two values, returns true if they are equal, and false if they are not equal
    2. Not equal to (!=) - compares two values, returns true if they are not equal, and false if they are equal
    3. Greater than (>) - compares two values, returns true if the first value is greater than the second value, and false if it is not greater
    4. Less than (<) - compares two values, returns true if the first value is less than the second value, and false if it is not less
    5. Greater than or equal to (>=) - compares two values, returns true if the first value is greater than or equal to the second value, and false if it is less
    6. Less than or equal to (<=) - compares two values, returns true if the first value is less than or equal to the second value, and false if it is greater
*/

var num3 = 10;
var num4 = 20;

num3 == num4; // Returns false, as num3 is not equal to num4.
num3 != num4; // Returns true, as num3 is not equal to num4.
num3 > num4; // Returns false, as num3 is not greater than num4.
num3 < num4; // Returns true, as num3 is less than num4.
num3 >= num4; // Returns false, as num3 is not greater than or equal to num4.
num3 <= num4; // Returns true, as num3 is less than or equal to num4.


// CONDITIONAL STATEMENTS:

/*
    HACK language uses if, else, and else if statements for conditional execution of code.
    They are used to check for certain conditions and execute specific code if the conditions are met.
    If the conditions are not met, the code inside else statements will be executed.
*/

var num5 = 40;

if(num5 > 50){ // If the condition in parentheses is true, the code inside the curly braces will be executed.
    print "num5 is greater than 50";
} else if(num5 == 50){ // If the condition in parentheses is true, the code inside the curly braces will be executed.
    print "num5 is equal to 50";
} else { // If none of the conditions above are met, the code inside else statement will be executed.
    print "num5 is less than 50";
}


// LOOPS:

/*
    HACK language provides two types of loops:
    
    1. for loops - used to execute a block of code a specified number of times
    2. while loops - used to loop through a block of code while a specified condition is true
*/

// For loop example:
for(var i = 0; i < 10; i++){ // This loop will execute 10 times, starting from i = 0 and increasing by 1 each time.
    print i; // This will print the value of i at each iteration of the loop.
}

// While loop example:
var j = 10;

while(j > 0){ // This loop will continue to execute as long as the condition in parentheses is true.
    print j; // This will print the value of j at each iteration of the loop.
    j--; // This decreases the value of j by 1 after each iteration.
}


// FUNCTIONS:

/*
    Functions in HACK language are used to perform a specific task.
    They can have parameters (inputs) and return a value.
*/

// Function to calculate the area of a rectangle:
func calcRectArea(length, width){ // This is the function declaration with parameters for length and width.
    return length * width; // This returns the calculated area using the inputs.
}

var area = calcRectArea(5, 10); // This calls the function and assigns the returned value to the variable 'area'.
print area; // This will print the calculated area.


// ARRAYS:

/*
    Arrays in HACK language are used to store a collection of values.
    They can store values of the same or different data types.
*/

// Creating an array of integers:
var numbers = [1, 2, 3, 4, 5];

// Creating an array of strings:
var fruits = ["apple", "banana", "orange", "mango"];

// Accessing values in an array:
numbers[2]; // Returns the value at index 2 in the 'numbers' array, which is 3. 

// Adding values to an array:
numbers[5] = 6; // Adds the value 6 to the end of the 'numbers' array at index 5.

// Looping through an array:
for(var i = 0; i < fruits.length; i++){ // This loop will iterate through the array and print each value.
    print fruits[i]; // This prints the value at index i in the 'fruits' array.
}


// CONVERSIONS:

/*
    HACK language provides methods for converting between data types.
    
    1. parseInt() - converts a string to an integer value
    2. parseFloat() - converts a string to a decimal value
    3. toString() - converts a value to a string
*/

var stringNum = "25";
var stringNum2 = "5.6";

parseInt(stringNum); // Returns the integer value 25.
parseFloat(stringNum2); // Returns the decimal value 5.6.
toString(10); // Returns the string "10".
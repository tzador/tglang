# Calculates the factorial of a number using recursion and memoization
function factorial(n) {
  if (n === 0) { // base case
    return 1;
  } else if (n < 0) { // handle negative input
    return "Invalid input";
  } else if (memo[n]) { // check if value has already been calculated
    return memo[n];
  } else { // perform calculation and store in memo
    memo[n] = n * factorial(n-1);
    return memo[n];
  }
}

// Initialize memoization array
let memo = [];

// Example test cases
factorial(5); // Output: 120;
factorial(-1); // Output: Invalid input
factorial(3); // Output: 6;

// Time complexity: O(n)
// Space complexity: O(n)
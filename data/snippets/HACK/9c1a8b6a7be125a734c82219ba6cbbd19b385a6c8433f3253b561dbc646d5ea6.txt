// This code snippet is an implementation of the insertion sort algorithm in the HACK programming language.

set n = 10 // Variable to hold the length of the array
set arr = [13, 4, 2, 9, 17, 11, 8, 6, 3, 15] // Array to be sorted

// Function to perform insertion sort
func insertionSort(input):
    set j = 1 // Index variable to keep track of current position
    loop while j < n:
        set key = input[j] // Store current value in key variable
        set i = j - 1 // Start comparing from previous position
        loop while i >= 0 and input[i] > key:
            set input[i+1] = input[i] // Shift elements to the right
            set i = i - 1 // Move to the left
        end loop
        set input[i+1] = key // Insert key at correct position
        set j = j + 1 // Move to next position
    end loop
end func

insertionSort(arr) // Call insertionSort function on the input array

// Print the sorted array
set i = 0 // Variable to keep track of index
loop while i < n:
    puts(arr[i]) // Print each element in the array
    set i = i + 1 // Move to next index
end loop
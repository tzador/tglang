/**
 * Generates a random password with a length between 12 and 16 characters.
 * Uses a mix of uppercase and lowercase letters, numbers, and special characters.
 * @returns {string} The generated password.
 */
function generatePassword() {

  // Define character arrays for each type of character
  const uppercaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',
    'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];

  const lowercaseLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
    'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];

  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];

  const specialCharacters = ['!', '#', '$', '%', '&', '*', '+', '-', '.', ':', ';', '<', '=',
    '>', '?', '@', '[', ']', '^', '_', '{', '|', '}', '~'];

  let password = '';

  // Generate a random number between 12 and 16 to determine password length
  const length = Math.floor(Math.random() * 5) + 12;

  // Generate a random index for each character array
  let uppercaseIndex = Math.floor(Math.random() * uppercaseLetters.length);
  let lowercaseIndex = Math.floor(Math.random() * lowercaseLetters.length);
  let numberIndex = Math.floor(Math.random() * numbers.length);
  let specialCharacterIndex = Math.floor(Math.random() * specialCharacters.length);

  // Generate a random password by adding a character from each array
  for (let i = 0; i < length; i++) {
    // Randomly determine which character array to choose from
    switch (Math.floor(Math.random() * 4)) {
      case 0:
        password += uppercaseLetters[uppercaseIndex];
        uppercaseIndex = (uppercaseIndex + 1) % uppercaseLetters.length;
        break;
      case 1:
        password += lowercaseLetters[lowercaseIndex];
        lowercaseIndex = (lowercaseIndex + 1) % lowercaseLetters.length;
        break;
      case 2:
        password += numbers[numberIndex];
        numberIndex = (numberIndex + 1) % numbers.length;
        break;
      case 3:
        password += specialCharacters[specialCharacterIndex];
        specialCharacterIndex = (specialCharacterIndex + 1) % specialCharacters.length;
        break;
    }
  }

  return password;
}
;;; HACK CODE SNIPPET ;;;  # Annotated markdown code snippet

; Import necessary libraries
; Load external modules for use in the program
(require "library1")
(require "library2")

; Define global variables
(define global-var1 10)
(define global-var2 "Hello, world!")

; Define helper functions
(define (helper-func1 x y)
  (if (> x y)
      x
      y))

(define (helper-func2 lst)
  (if (null? lst)
      '()
      (cons (car lst) (helper-func2 (cdr lst)))))

; Define main function
(define (main)
  (displayln "Starting HACK program...")
  
  ; Prompt user for input
  (display "Enter a number: ")
  (flush)
  (let ((num (read-line)))
  
  ; Perform calculations
  (let ((result (helper-func1 global-var1 (string->number num))))
    (displayln "The result is: " result))
  
  ; Print out global variables
  (display "Global variable 1: ")
  (displayln global-var1)
  (display "Global variable 2: ")
  (displayln global-var2)
 
  ; Create list and use helper function on it
  (let ((lst '(1 2 3 4 5)))
    (display "Original list: ")
    (displayln lst)
    (display "Modified list: ")
    (displayln (helper-func2 lst)))
  
  (displayln "HACK program finished!"))

; Call main function
(main)

; Output:
; Starting HACK program...
; Enter a number: 5
; The result is: 10
; Global variable 1: 10
; Global variable 2: Hello, world!
; Original list: (1 2 3 4 5)
; Modified list: (1 2 3 4 5)
; HACK program finished!
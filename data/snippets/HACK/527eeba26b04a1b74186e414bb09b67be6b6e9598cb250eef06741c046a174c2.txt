#define ENCRYPTION_KEY 0x23581321345521 // initialize encryption key

class Encryption { // create encryption class
    private:
        int shifts; // variable to store the number of encryption shifts

    public:
        Encryption() { // constructor
            this->shifts = 3; // set default number of shifts to 3
        }

        /*
            This function encrypts a string using the initialized encryption key.
            The encrypted string is returned.
        */
        string encrypt(string text) {
            string output = ""; // variable to store the encrypted string
            for (int i = 0; i < text.length(); i++) { // loop through each character in the string
                int ascii = (int) text[i]; // convert the character to its ASCII value
                ascii += ENCRYPTION_KEY; // add the encryption key to the ASCII value
                ascii += this->shifts; // add the number of shifts
                output += (char) ascii; // convert the encrypted ASCII value back to a character and append it to the output string
            }
            return output; // return the encrypted string
        }

        /*
            This function decrypts a string using the initialized encryption key.
            The decrypted string is returned.
        */
        string decrypt(string text) {
            string output = ""; // variable to store the decrypted string
            for (int i = 0; i < text.length(); i++) { // loop through each character in the string
                int ascii = (int) text[i]; // convert the character to its ASCII value
                ascii -= this->shifts; // subtract the number of shifts
                ascii -= ENCRYPTION_KEY; // subtract the encryption key from the ASCII value
                output += (char) ascii; // convert the decrypted ASCII value back to a character and append it to the output string
            }
            return output; // return the decrypted string
        }
};

int main() {
    Encryption encryptor; // initialize an instance of the encryption class
    string text = "Hello World!"; // string to be encrypted
    string encrypted = encryptor.encrypt(text); // encrypt the string
    cout << encrypted << endl; // print the encrypted string
    string decrypted = encryptor.decrypt(encrypted); // decrypt the encrypted string
    cout << decrypted << endl; // print the decrypted string
    return 0; // end the program
}
// Function to find the maximum number between two numbers
var findMax = function(num1, num2) {
  var max; // variable to store the maximum number
  if(num1 > num2) { // if first number is greater than second number
    max = num1; // set max to first number
  } else { // if second number is greater than first number
    max = num2; // set max to second number
  }
  return max; // return the maximum number
}

// Function to calculate the factorial of a number
var factorial = function(num) {
  var result = 1; // variable to store the factorial result
  for(var i = 1; i <= num; i++) { // loop from 1 to given number
    result *= i; // multiply result by current number
  }
  return result; // return the factorial result
}

// Function to check if a string is a palindrome
var isPalindrome = function(str) {
  var reversed = ''; // variable to store the reversed string
  for(var i = str.length - 1; i >= 0; i--) { // loop from last character to first
    reversed += str[i]; // add current character to reversed string
  }
  if(str === reversed) { // if original string is equal to reversed string
    return true; // return true
  } else { // if not a palindrome
    return false; // return false
  }
}

// Function to generate a random string of given length
var randomString = function(length) {
  var string = ''; // variable to store the random string
  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; // string of possible characters
  for(var i = 0; i < length; i++) { // loop for given length
    string += possible.charAt(Math.floor(Math.random() * possible.length)); // add random character from possible string
  }
  return string; // return the random string
}

// Function to convert a string to uppercase
var toUpperCase = function(str) {
  var uppercase = ''; // variable to store the uppercase string
  for(var i = 0; i < str.length; i++) { // loop through string characters
    if(str[i] >= 'a' && str[i] <= 'z') { // if character is lowercase
      uppercase += String.fromCharCode(str.charCodeAt(i) - 32); // convert to uppercase using character code
    } else { // if character is already uppercase
      uppercase += str[i]; // add it to the string as is
    }
  }
  return uppercase; // return the uppercase string
}

// Function to reverse an array
var reverseArray = function(arr) {
  var reversed = []; // variable to store the reversed array
  for(var i = arr.length - 1; i >= 0; i--) { // loop from last element to first
    reversed.push(arr[i]); // add current element to reversed array
  }
  return reversed; // return the reversed array
}

// Function to sort an array in ascending order using bubble sort algorithm
var bubbleSort = function(arr) {
  var length = arr.length; // variable to store the length of array
  for(var i = 0; i < length - 1; i++) { // loop through array
    for(var j = 0; j < length - i - 1; j++) { // loop through each element
      if(arr[j] > arr[j + 1]) { // if current element is greater than next element
        var temp = arr[j]; // swap elements
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
      }
    }
  }
  return arr; // return sorted array
}

// Function to print all prime numbers between two given numbers
var printPrime = function(num1, num2) {
  for(var i = num1; i <= num2; i++) { // loop from first number to second number
    var isPrime = true; // flag to check if number is prime or not
    for(var j = 2; j < i; j++) { // loop through possible factors
      if(i % j === 0) { // if number is divisible by a factor
        isPrime = false; // set flag to false
        break; // exit the loop since number is not prime
      }
    }
    if(isPrime) { // if flag is still true
      console.log(i); // print the prime number
    }
  }
}

// Function to calculate the nth Fibonacci number using recursion
var fibonacci = function(n) {
  if(n <= 1) { // base cases
    return n;
  }
  return fibonacci(n - 1) + fibonacci(n - 2); // recursive call to sum previous two numbers
}

// Function to find the sum of all elements in an array
var arraySum = function(arr) {
  var sum = 0; // variable to store the sum
  for(var i = 0; i < arr.length; i++) { // loop through array
    sum += arr[i]; // add current element to sum
  }
  return sum; // return the sum
}
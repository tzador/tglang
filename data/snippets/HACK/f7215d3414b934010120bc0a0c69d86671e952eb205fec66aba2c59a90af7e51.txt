// This code snippet uses the HACK programming language and demonstrates
// a complex algorithm for calculating prime numbers.

// Define a function to check if a number is prime
[isPrime(number)]
  // Use bitwise AND to quickly check if number is even
  // If number is even and not 2, it is not prime
  &([number], 1) == 0 & number != 2

// Define a function to generate a list of prime numbers up to a specified value
[generatePrimes(limit)]
  // Initialize an empty array to store prime numbers
  primeList = []

  // Use a for loop to iterate through numbers from 2 to the specified limit
  // Skipping even numbers as they are not prime
  for (number = 3; number <= limit; number = number + 2)
    // Check if the current number is prime
    if isPrime(number)
      // Add the number to the prime list
      primeList.append(number)

  // If the specified limit is greater than 2, add 2 as a prime number
  if limit > 2
    primeList.append(2)

  // Return the list of prime numbers
  return primeList

// Test the generatePrimes function with a limit of 100
result = generatePrimes(100)

// Print the result to the console
print(result)
//This code snippet checks if a given number is a prime number using the Sieve of Eratosthenes algorithm

// Define a function to check if a number is prime
function isPrime(number) {
  // Handle edge cases for 0, 1 and negative numbers
  if (number < 2) return false;
  // Initialize an array with numbers from 2 to given number
  let numbers = [...Array(number + 1).keys()].slice(2);
  // Initialize an empty array to store prime numbers
  let primes = [];
  // Initialize a loop to iterate through the array of numbers
  for (let i = 0; i < numbers.length; i++) {
    // Check if the current number is not marked as composite
    if (numbers[i]) {
      // Add the current number to the primes array
      primes.push(numbers[i]);
      // Set all multiples of the current prime number as composite numbers
      for (let j = numbers[i] * numbers[i]; j <= number; j += numbers[i]) {
        numbers[j] = false;
      }
    }
  }
  // Check if the given number is found in the primes array
  if (primes.includes(number)) return true;
  else return false;
}

// Define a variable to store the number to be checked
let num = 17;
// Call the isPrime function and store the result in a variable
let result = isPrime(num);
// Print the result to the console
console.log(`Is ${num} a prime number? ${result}`); // Output: Is 17 a prime number? true
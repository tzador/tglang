# Initializing variables
set a = 5
set b = 10
set c = 0

# Hack logic to find the sum of a and b
add a, b, c # Adds the values of a and b and stores it in c
output c # Prints out the sum of a and b

# Hack logic to find the product of a and b
set d = 0
mult a, b, d # Multiplies the values of a and b and stores it in d
output d # Prints out the product of a and b

# Hack logic to find the difference of a and b
set e = 0
sub a, b, e # Subtracts b from a and stores the result in e
output e # Prints out the difference of a and b

# Hack logic to find the quotient of a and b
set f = 0
div a, b, f # Divides a by b and stores the result in f
output f # Prints out the quotient of a and b

# Hack logic to find the remainder of a and b
set g = 0
mod a, b, g # Performs a modulo operation on a and b and stores the result in g
output g # Prints out the remainder of a and b

# Hack logic to find the maximum of a and b
set h = 0
max a, b, h # Compares the values of a and b and stores the larger value in h
output h # Prints out the maximum of a and b

# Hack logic to find the minimum of a and b
set i = 0
min a, b, i # Compares the values of a and b and stores the smaller value in i
output i # Prints out the minimum of a and b

# Hack logic to check if a is equal to b
set j = 0
eq a, b, j # Checks if the values of a and b are equal and stores a boolean value in j
output j # Prints out the result of the comparison (true or false)

# Hack logic to check if a is not equal to b
set k = 0
neq a, b, k # Checks if the values of a and b are not equal and stores a boolean value in k
output k # Prints out the result of the comparison (true or false)

# Hack logic to perform a while loop
set l = 0
while l < 100: # Performs the following code while the condition is true
    add l, 1, l # Adds 1 to l and stores the new value back in l
    output l # Prints out the value of l in each iteration
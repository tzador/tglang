//This code snippet is written in HACK programming language.
//It is used to generate prime numbers up to a given limit.
//It uses the Sieve of Eratosthenes algorithm to find prime numbers.
//The algorithm involves marking off all multiples of a number, starting from 2, as not prime numbers.
//The remaining unmarked numbers are prime numbers.

//Define a function to generate prime numbers up to a given limit
function primesUpTo(limit) {
  //Initialize an array to hold all numbers from 2 to limit
  const numbers = [];
  
  //Initialize an array to hold all prime numbers
  const primes = [];

  //Loop through numbers from 2 to limit
  for (let i = 2; i <= limit; i++) {

    //If current number has not been marked as not prime
    if (!numbers[i]) {

      //Add current number to primes array
      primes.push(i);

      //Mark off all multiples of current number as not prime
      for (let j = i * i; j <= limit; j += i) {
        numbers[j] = true;
      }
    }
  }

  //Return array of prime numbers
  return primes;
}

//Call the function and assign result to a variable
const primeNumbers = primesUpTo(100);

//Print the result
console.log(primeNumbers);
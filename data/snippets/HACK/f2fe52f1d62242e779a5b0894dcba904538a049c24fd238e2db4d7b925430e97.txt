;; This code snippet demonstrates a simple program in HACK assembly language

// Define the memory addresses
@0    // RAM[0]
D=M   // store the value at address 0 in register D
@1    // RAM[1]
M=D   // store the value in register D at address 1

// Loop through addresses 2 to 5
@2    // initialize counter to RAM[2]
D=M   // store counter value in register D
@5    // end loop condition
D=D-A // subtract counter value from 5, store in register D
@END  // jump to the end of the loop if condition is met
D;JEQ // if D=0, jump to END label
@2    // start of loop body
A=M   // set A register to current counter value (memory address)
M=M+1 // increment value at current memory address
@2    // go to next address
M=M+1 // increment counter
@2    // go back to start of loop
0;JMP // jump to start of loop

(END) // end loop label
@END  // set A register to label address
0;JMP // jump to end of program

// Fill up memory addresses with values 0 to 5
@5    // set counter to 5
D=A   // store 5 in register D
@0    // start of filling loop
A=M   // set A register to current counter value (memory address)
M=D   // store counter value in current address
@0    // go to next address
M=M+1 // increment counter
@0    // go back to start of loop
0;JMP // jump to start of loop body
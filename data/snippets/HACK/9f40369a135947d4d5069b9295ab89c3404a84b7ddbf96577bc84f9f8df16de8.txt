/*
This program checks if a given password is strong enough.
A password is considered strong if it satisfies the following criteria:
- Contains at least 8 characters
- Contains at least one uppercase character
- Contains at least one lowercase character
- Contains at least one special character (!@#$%^&*()_+-=[]{}\|;':",./<>?)
- Does not contain any whitespaces
*/

// Function to check password strength
bool checkPasswordStrength(string password) {

    // Define uppercase, lowercase and special characters
    string upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    string lower = "abcdefghijklmnopqrstuvwxyz";
    string special = "!@#$%^&*()_+-=[]{}\|;':\",./<>?";

    // Check for minimum length
    if (password.length() < 8) {
        return false;
    }
    // Check for uppercase character
    bool hasUpper = false;
    for (int i = 0; i < password.length(); i++) {
        if (upper.find(password[i]) != string::npos) {
            hasUpper = true;
        }
    }
    if (!hasUpper) {
        return false;
    }
    // Check for lowercase character
    bool hasLower = false;
    for (int i = 0; i < password.length(); i++) {
        if (lower.find(password[i]) != string::npos) {
            hasLower = true;
        }
    }
    if (!hasLower) {
        return false;
    }
    // Check for special character
    bool hasSpecial = false;
    for (int i = 0; i < password.length(); i++) {
        if (special.find(password[i]) != string::npos) {
            hasSpecial = true;
        }
    }
    if (!hasSpecial) {
        return false;
    }
    // Check for whitespaces
    if (password.find(' ') != string::npos) {
        return false;
    }
    return true;
}

// Sample password to test
string password = "Strong123!";
// Call checkPasswordStrength() function and print result
cout << "Is this password strong? " << checkPasswordStrength(password) << endl;

// Output:
// Is this password strong? true
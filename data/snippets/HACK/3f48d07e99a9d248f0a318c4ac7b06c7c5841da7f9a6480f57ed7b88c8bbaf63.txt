/* This is a code snippet written in the HACK programming language 
   which is designed to mimic assembly language to facilitate 
   program optimization. This snippet creates a function that 
   implements binary search on a pre-sorted array. */

.function binarySearch(input: array, target: int) {  // Declare a function named binarySearch that takes in an array and an integer as parameters
  let low = 0;    // Declare a local variable named low and initialize it to 0
  let high = array.length - 1;    // Declare a local variable named high and initialize it to the length of the array minus 1

  while (low <= high) {    // While loop that runs while low is less than or equal to high
    let mid = (low + high) / 2;    // Declare a local variable named mid and set it to the average of low and high
    if (array[mid] < target) {    // If statement that checks if the value at array[mid] is less than the target
      low = mid + 1;    // Set low to mid plus 1
    } else if (array[mid] > target) {    // Else if statement that checks if the value at array[mid] is greater than the target
      high = mid - 1;    // Set high to mid minus 1
    } else {    // Else statement that runs if the value at array[mid] is equal to the target
      return mid;    // Return the index of the target
    }
  }
  return -1;    // If target is not found in the array, return -1
}

.binarySearch([1, 2, 3, 5, 7], 3);    // Call the binarySearch function with an array and target value as arguments, output will be 2 since 3 is at index 2 in the array
/**
 * Determines if a given number is a prime number.
 *
 * @param {integer} num - The number to check
 * @return {boolean} - Returns true if the number is prime, false if not
 */
function isPrime(num) {
  // check if num is less than 2
  if (num < 2) {
    return false;
  }
  
  // loop through all numbers from 2 to num-1
  for (let i = 2; i < num; i++) {
    // check if i is a factor of num
    if (num % i === 0) {
      // if it is, num is not prime
      return false;
    }
  }
  // num is prime if it's not divisible by any number except 1 and itself
  return true;
}

/**
 * Generates an array of prime numbers up to a given limit.
 *
 * @param {integer} limit - The limit to generate prime numbers up to
 * @return {array} - Returns an array of prime numbers up to the given limit
 */
function generatePrimes(limit) {
  // initialize an empty array
  let primes = [];
  // loop through all numbers from 2 to limit
  for (let i = 2; i <= limit; i++) {
    // check if current number is prime
    if (isPrime(i)) {
      // if it is, add it to the primes array
      primes.push(i);
    }
  }
  return primes;
}

// test the generatePrimes function
console.log(generatePrimes(20)); // [2, 3, 5, 7, 11, 13, 17, 19] (output)
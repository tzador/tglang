# This code snippet uses the HACK programming language
# HACK is a low-level programming language used to implement Facebook's HHVM

.define constant PoolIndex0 1
.define constant PoolIndex1 -2

# Functions
.function.evaluate_stack()
  %{ Retrieves the next instruction from the stack and executes it }
  CALL P @\<
  PUSH 0
  ADD
  CDR
  STORE PoolIndex0

  CALL P @\<
  PUSH 1
  ADD
  CDR
  STORE PoolIndex1

  # Evaluate instructions
  EXEC @PoolIndex0
  EXEC @PoolIndex1
.end

# Instructions
.instruction.ADD()
  %{ Adds two values from the stack and stores the result }
  SUB
  PUSH 0
  CALL evaluate_stack
.end

.instruction.CDR()
  %{ Gets the next value from the stack }
  PUSH R0
  POP

  LOAD PoolIndex0
  LOAD From0 H ; load next value from stack

  RETURN
.end

.instruction.CALL()
  %{ Calls a function from the Instruction Pool }
  CALL P @>
.end

.instruction.STORE()
  %{ Stores a value from the stack into a specified location in the Instruction Pool }
  PUSH @SP
  STORE PoolIndex0
.end

.instruction.DEF()
  %{ Defines a constant value in the Instruction Pool }
  LOAD PoolIndex0
  RETURN
.end

.instruction.PUSH()
  %{ Pushes a value onto the stack }
  CALL evaluate_stack
  PUSH
.end

# Main program
PUSH 5 ; push value onto stack
CALL P @>)
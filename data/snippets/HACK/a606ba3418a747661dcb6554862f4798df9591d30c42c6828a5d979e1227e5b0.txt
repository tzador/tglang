; This code snippet is written in the programming language HACK, designed by Facebook for their HHVM runtime.

/**
 * This function performs a binary search on a given array and returns the index of the target element.
 * If the target element is not found, it returns -1.
 *
 * @param arr The array to search in
 * @param target The element to search for
 * @param start The starting index of the search range
 * @param end The ending index of the search range
 *
 * @return The index of the target element in the array, or -1 if not found
 */
function binarySearch(arr, target, start, end)
{
    ; Check if the start index is less than or equal to the end index
    if (start <= end)
    {
        ; Calculate the middle index of the search range
        ; Adding start and end and dividing by 2 ensures that the middle index will be an integer
        let middle = (start + end) / 2

        ; Check if the middle element is equal to the target
        if (arr[middle] == target)
        {
            ; Return the middle index
            ; Note: the return statement in HACK can only return ints, not bools or strings
            return middle
        }
        ; Check if the middle element is greater than the target
        else if (arr[middle] > target)
        {
            ; Perform a binary search on the left half of the array
            ; Update the end index to the middle index - 1
            return binarySearch(arr, target, start, middle - 1)
        }
        ; Otherwise, the middle element is less than the target
        else
        {
            ; Perform a binary search on the right half of the array
            ; Update the start index to the middle index + 1
            return binarySearch(arr, target, middle + 1, end)
        }
    }
    ; If the start index is greater than the end index, then the target element is not in the array
    else
    {
        ; Return -1
        ; Note: the return statement in HACK can only return ints, not bools or strings
        return -1
    }
}

; Example usage:
let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
let target = 6
let result = binarySearch(arr, target, 0, count(arr) - 1)
print(result) ; Output: 5 (the index of 6 in the array)
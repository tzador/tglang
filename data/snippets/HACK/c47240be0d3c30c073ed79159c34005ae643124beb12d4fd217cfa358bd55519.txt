/* This is a complex code snippet in the programming language HACK.
It includes multiple functions and variables, along with annotations explaining their purpose. */

// Function for finding the factorial of a given number
function factorial(n) {
  let result = 1; // variable to store the result
  for (let i = 1; i <= n; i++) {
    result *= i; // multiply the current result with the current number
  }
  return result;
}

// Function for checking if a number is prime
function isPrime(n) {
  if (n < 2) { // a number less than 2 is not prime
    return false;
  } else {
    // loop through all numbers from 2 to the square root of n
    for (let i = 2; i <= Math.sqrt(n); i++) {
      if (n % i === 0) { // if n is divisible by any number, it is not prime
        return false;
      }
    }
    return true; // if no number divided n, it is prime
  }
}

// Function for generating a Fibonacci sequence of length n
function fibonacci(n) {
  let sequence = [0, 1]; // starting sequence
  for (let i = 2; i < n; i++) {
    sequence.push(sequence[i-1] + sequence[i-2]); // add the last two numbers in the sequence
  }
  return sequence;
}

// Main function
function main() {
  let num = 10; // variable to store input number
  let fact = factorial(num); // calculate the factorial of the number
  if (isPrime(fact)) { // check if the factorial of the number is prime
    console.log(`The factorial of ${num} is prime.`); // print result
  } else {
    console.log('The factorial of ${num} is not prime.'); // print result
  }
  let fib = fibonacci(num); // generate a fibonacci sequence of length num
  console.log(`The first ${num} numbers in the Fibonacci sequence are: ${fib}.`); // print result
}

main(); // call the main function
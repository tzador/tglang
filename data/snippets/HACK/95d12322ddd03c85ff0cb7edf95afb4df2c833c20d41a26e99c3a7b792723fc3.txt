/**
 * This function generates a random password using a combination of letters, numbers, and special characters
 * @param {number} length - length of the password to be generated
 * @returns {string} - the generated password
 */
const generatePassword = (length) => {
    const password = [];
    const lowercase = 'abcdefghijklmnopqrstuvwxyz';
    const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const numbers = '0123456789';
    const specialCharacters = '!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~';
    let count = 0;

    // loop through the length and generate a random character from each character set
    for (let i = 0; i < length; i++) {
        const randomLower = lowercase[Math.floor(Math.random() * lowercase.length)];
        const randomUpper = uppercase[Math.floor(Math.random() * uppercase.length)];
        const randomNumber = numbers[Math.floor(Math.random() * numbers.length)];
        const randomSpecial = specialCharacters[Math.floor(Math.random() * specialCharacters.length)];

        // add the random character to the password array
        password.push(randomLower);
        password.push(randomUpper);
        password.push(randomNumber);
        password.push(randomSpecial);

        // increase count to track the number of added characters
        count += 4;
        
        // if the count equals the length of the password, break out of the loop
        if (count === length) {
            break;
        }
    }

    // shuffle the password array to mix up the characters
    for (let j = password.length - 1; j > 0; j--) {
        const k = Math.floor(Math.random() * (j + 1));
        [password[j], password[k]] = [password[k], password[j]];
    }

    // join the password array into a single string and return the password
    return password.join('');
}

console.log(generatePassword(12));
// output: =8A&7d$1L2h3S6t*
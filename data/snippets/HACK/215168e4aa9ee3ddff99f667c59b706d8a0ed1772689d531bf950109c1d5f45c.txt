/**
* Function to find the middle element of an array
* @param {Array} arr - The input array
* @returns {Any} - The middle element of the array
*/
const findMiddle = (arr) => {
  const length = arr.length;
  const middleIndex = length % 2 === 0 ? length / 2 : (length - 1) / 2;
  return arr[middleIndex];
}

/**
* Function to check if a string is a palindrome
* @param {String} str - The input string
* @returns {Boolean} - True if the string is a palindrome, otherwise False
*/
const isPalindrome = (str) => {
  let start = 0;
  let end = str.length - 1;
  
  // Loop through the string, checking if the characters at start and end indices match
  while (start < end) {
    if (str[start] !== str[end]) {
      return false;
    }
    start++;
    end--;
  }

  return true;
}

/**
* Function to encrypt a message using a Caesar Cipher
* @param {String} message - The message to be encrypted
* @param {Number} shift - The number of characters to shift
* @returns {String} - The encrypted message
*/
const caesarCipher = (message, shift) => {
  // Convert the message to an array of characters
  const characters = message.split('');

  // Loop through the characters, shifting them by the specified amount
  for (let i = 0; i < characters.length; i++) {
    // Convert the character to its ASCII code
    let charCode = characters[i].charCodeAt(0);

    // If the character is a letter, add the shift amount to its ASCII code
    if (characters[i].match(/[A-Za-z]/)) {
      charCode += shift;
      
      // If the new code is outside the range of letters, wrap around
      if (characters[i] === characters[i].toLowerCase()) {
        if (charCode > 122) charCode = 96 + (charCode % 122);
        else if (charCode < 97) charCode = 122 - (96 - charCode);
      } else {
        if (charCode > 90) charCode = 64 + (charCode % 90);
        else if (charCode < 65) charCode = 90 - (64 - charCode);
      }
    }

    // Convert the new ASCII code back to a character and replace it in the array
    characters[i] = String.fromCharCode(charCode);
  }

  // Convert the array of characters back to a string and return it
  return characters.join('');
}
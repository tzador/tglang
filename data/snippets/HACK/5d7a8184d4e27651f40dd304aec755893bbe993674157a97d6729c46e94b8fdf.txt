#!/usr/bin/env hack

/* This is a sample code snippet written in the HACK programming language. */
/* It defines a class called "Hacker" which has various properties and methods. */

/* Definition of the Hacker class */
class Hacker {
    protected $name; /* Property for storing the hacker's name */
    protected $skill_level; /* Property for storing the hacker's skill level */

    /* Constructor method for initializing the properties */
    function __construct($name, $skill_level) {
        $this->name = $name;
        $this->skill_level = $skill_level;
    }

    /* Method for performing a hack */
    function hack($target) {
        if ($this->skill_level >= $target->security_level) {
            /* If the hacker's skill level is equal to or greater than the
            target's security level, the hack is successful */
            echo "Hacked into " . $target->name . "'s system!";
        } else {
            /* Otherwise, the hack fails */
            echo "Failed to hack into " . $target->name . "'s system.";
        }
    }
}

/* Creation of two instances of the Hacker class */
$hacker1 = new Hacker("John", 8); /* Name: John, Skill Level: 8 */
$hacker2 = new Hacker("Sarah", 6); /* Name: Sarah, Skill Level: 6 */

/* Definition of target class with name and security level properties */
class Target {
    public $name; /* Public property for storing the target's name */
    public $security_level; /* Public property for storing the target's security level */

    /* Constructor method for initializing the properties */
    function __construct($name, $security_level) {
        $this->name = $name;
        $this->security_level = $security_level;
    }
}

/* Creation of an instance of the Target class */
$target = new Target("Eve", 7); /* Name: Eve, Security Level: 7 */

/* Calling the hack method on both hackers, passing in the target instance as
an argument */
$hacker1->hack($target); /* Output: Hacked into Eve's system! */
$hacker2->hack($target); /* Output: Failed to hack into Eve's system. */
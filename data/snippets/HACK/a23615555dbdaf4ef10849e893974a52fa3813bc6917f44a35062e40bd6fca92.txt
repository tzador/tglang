/*
A complex code snippet in the HACK programming language.
*/
SET(ACC, 0)             // set the accumulator to 0

// loop through an array of numbers
:loop
    LD A, NUMBERS_ARRAY[ACC]    // load the current number into register A
    OUT A                       // output the number
    ADD 1, ACC                  // increment the accumulator
    CMP ACC, NUMBERS_ARRAY      // compare accumulator to the array length
    JLT :loop                   // jump back to loop label if not equal

CMP ACC, 5                  // compare accumulator to 5
JNE :error                  // if not equal, jump to error label

LBL :success                    // define a success label
SET OUT, "Success!"         // set output to "Success!"

:exit                       // exit label
OUT OUT                     // output the final result

LBL :error                  // define an error label
SET OUT, "Error - Accumulator does not equal 5"

JMP :exit                   // jump to exit label to output final result
# Initializing a list of prime numbers
PRIMES: LIST[INT] = [2, 3, 5, 7, 11]

# Function to check if a number is prime
FUNCTION IS_PRIME(N: INT): BOOLEAN {
    # Loop through each prime number in the list
    FOR P IN PRIMES {
        # Check if the number is divisible by any prime number
        IF (N MOD P) = 0 {
            RETURN FALSE # Not a prime number
        }
    }
    RETURN TRUE # Is a prime number
}

# Function to generate a list of prime numbers up to a given limit
FUNCTION GENERATE_PRIMES(LIMIT: INT): LIST[INT] {
    PRIMES: LIST[INT] = [] # Initialize empty list
    # Loop through numbers up to the limit
    FOR N FROM 2 TO LIMIT {
        # Check if the number is prime
        IF IS_PRIME(N) {
            PRIMES.APPEND(N) # Add prime number to the list
        }
    }
    RETURN PRIMES # Return the list of prime numbers
}

# Example of using the functions
PRIMES_BELOW_100: LIST[INT] = GENERATE_PRIMES(100)
# Output the list of prime numbers generated below 100
PRINT(PRIMES_BELOW_100) # Output: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
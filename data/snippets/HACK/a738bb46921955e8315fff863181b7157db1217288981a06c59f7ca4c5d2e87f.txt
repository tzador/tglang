//Defining a class called Terminal
class Terminal{

//Declaring a private variable called securityKey
private int securityKey;

//Constructor with parameter for setting security key
public Terminal(int key){
    this.securityKey = key;
}

//Method for authentication of user with security key
public boolean authenticate(int key){
    if (this.securityKey == key){
        return true;
    } else {
        return false;
    }
}

//Method for running a hack command
public String hack(String command, String target){
    //Creating a string to store the hacked output
    String hackedOutput = "";

    //Loop to iterate over each character in the command string
    for (int i = 0; i < command.length(); i++){
        //Converting the character to its ASCII value
        int asciiValue = (int) command.charAt(i);

        //Generating a new ASCII value by adding the security key to the original ASCII value
        int newAsciiValue = asciiValue + this.securityKey;

        //Converting the new ASCII value back to a character
        char newChar = (char) newAsciiValue;

        //Appending the new character to the hacked output string
        hackedOutput += newChar;
    }

    //Printing the target followed by the hacked output
    return target + ": " + hackedOutput;
}

}

//Creating an instance of the Terminal class with a security key of 12345
Terminal terminal = new Terminal(12345);

//Authenticating the user by passing in the security key
boolean authenticated = terminal.authenticate(12345);

//Running a hack command and storing the output in a variable
String hackedOutput = terminal.hack("ls", "bin");

//Printing the hacked output
System.out.println(hackedOutput);
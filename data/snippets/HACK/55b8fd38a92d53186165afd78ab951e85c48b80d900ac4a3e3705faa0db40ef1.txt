const encrypt = (text, key) => {
  // check for valid key 
  if(typeof key !== 'string') throw new Error('Key must be a string');

  // initialize encrypted string
  let encrypted = '';

  // loop through each character in the input text
  for(let i = 0; i < text.length; i++) {

    // generate new character code
    let newCharCode = text.charCodeAt(i) + key.charCodeAt(i % key.length);

    // check if new character code exceeds max value
    if(newCharCode > 127) {
      newCharCode = newCharCode % 127;
      newCharCode = newCharCode + 32;
    }

    // append encrypted character to the encrypted string
    encrypted += String.fromCharCode(newCharCode);
  }

  // return encrypted string
  return encrypted;
};

const decrypt = (text, key) => {
  // check for valid key 
  if(typeof key !== 'string') throw new Error('Key must be a string');

  // initialize decrypted string
  let decrypted = '';

  // loop through each character in the input text
  for(let i = 0; i < text.length; i++) {

    // generate new character code
    let newCharCode = text.charCodeAt(i) - key.charCodeAt(i % key.length);

    // check if new character code is negative
    if(newCharCode < 0) {
      newCharCode = newCharCode + 127;
    }

    // append decrypted character to the decrypted string
    decrypted += String.fromCharCode(newCharCode);
  }

  // return decrypted string
  return decrypted;
};

// example usage
const encryptedText = encrypt('This is my secret message', 'mySecretKey');
console.log(encryptedText); // outputs 'Vliw\x03lv\x7F\x07\t\x1F6\x7F\x05\x1Aj\x6A\x0E6'
const decryptedText = decrypt(encryptedText, 'mySecretKey');
console.log(decryptedText); // outputs 'This is my secret message'
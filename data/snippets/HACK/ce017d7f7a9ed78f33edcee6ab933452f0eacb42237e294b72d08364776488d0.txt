/// Description: This code snippet is used to generate a random password and check its strength.
/// Author: John Doe
/// Date: 10/20/2021

// Define a function that generates a random password.
func generatePassword() {
    let length = 20 // Length of the password
    let allChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+" // All possible characters to be used in the password
    var password = ""

    // Generate a random number to choose the position of each character in the password.
    for _ in 1...length {
        let randomIndex = Int.random(in: 0 ..< allChars.count)
        let index = allChars.index(allChars.startIndex, offsetBy: randomIndex)

        // Add the randomly chosen character to the password.
        password += String(allChars[index])
    }

    // Print the password to the user.
    print("Your generated password is: \(password)")

    // Check the strength of the password.
    var strength = 0 // Strength of the password can range from 0 to 4.
    let charCount = NSCountedSet(array: Array(password)) // Create a set to count the occurrences of each character.
    var lowercase = false // Boolean to check if the password contains lowercase characters.
    var uppercase = false // Boolean to check if the password contains uppercase characters.
    var numbers = false // Boolean to check if the password contains numbers.
    var specialChars = false // Boolean to check if the password contains special characters.

    // Check if each character in the password is lowercase or uppercase.
    for char in password {
        if char.isLowercase {
            lowercase = true
        } else if char.isUppercase {
            uppercase = true
        }
    }
    
    // Check if the password contains numbers by looping through the counted set.
    for object in charCount {
        if let char = object as? String {
            if char.isNumeric {
                numbers = true
                break
            }
        }
    }

    // Check if the password contains special characters by looping through the counted set.
    for object in charCount {
        if let char = object as? String {
            if !char.isLetter && !char.isNumber {
                specialChars = true
                break
            }
        }
    }

    // Assess the strength of the password based on the boolean values.
    // Criteria for strength: 
    // - If all boolean values are true, strength = 4 (strong)
    // - If at least three boolean values are true, strength = 3 (medium)
    // - If at least two boolean values are true, strength = 2 (weak)
    // - If only one boolean value is true, strength = 1 (very weak)
    if lowercase && uppercase && numbers && specialChars {
        strength = 4
    } else if lowercase && uppercase && numbers || lowercase && uppercase && specialChars || lowercase && numbers && specialChars || uppercase && numbers && specialChars {
        strength = 3
    } else if lowercase && uppercase || lowercase && numbers || lowercase && specialChars || uppercase && numbers || uppercase && specialChars || numbers && specialChars {
        strength = 2
    } else if lowercase || uppercase || numbers || specialChars {
        strength = 1
    }

    // Print the strength of the password to the user.
    print("The strength of your password is: \(strength) out of 4")
}

// Call the function to generate a password.
generatePassword()
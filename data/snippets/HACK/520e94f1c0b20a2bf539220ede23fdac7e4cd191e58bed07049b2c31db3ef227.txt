;; Hack function to convert binary to decimal
(define (binary-to-decimal binary)
  (define (helper index result)
    ;; Loop through digits in binary number
    (if (< index (string-length binary))
        (let ((digit (string-ref binary (- (string-length binary) index 1))))
          ;; Convert char to integer
          (let ((digit-val (- (char->integer digit) (char->integer "0"))))
            ;; Multiply digit by proper power of 2 and add to result
            (helper (+ index 1) (+ result (* digit-val (expt 2 (- index 1)))))))
        ;; Once index reaches end of binary number, return result
        result))
  ;; Call helper function with starting values
  (helper 1 0))

;; Example usage
(binary-to-decimal "1100110") ;; output: 102
(binary-to-decimal "10111111") ;; output: 191
// This is a code snippet written in the 'HACK' programming language

// Define a variable named 'input' and assign it a value of 1
var input = 1;

// Define a constant named 'MAX_LIMIT' and assign a value of 10
const MAX_LIMIT = 10;

// Define an array named 'numbers' with values from 1 to 10
var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// Create a for loop that iterates through the 'numbers' array
for (var i = 0; i < numbers.length; i++) {

    // Check if the current number is equal to the 'input' variable
    if (numbers[i] == input) {

        // Print a message if the number matches the input
        console.log("Input matched with index " + i);

        // Break out of the loop if a match is found
        break;
    }
}

// Define a function named 'calculateSquare' that takes in a number as a parameter
function calculateSquare(num) {

    // Declare a variable named 'result' and assign it the value of the parameter squared
    var result = num * num;

    // Return the squared value
    return result;
}

// Call the 'calculateSquare' function with the 'input' variable as an argument
// and assign the return value to a new variable named 'squaredInput'
var squaredInput = calculateSquare(input);

// Check if the squaredInput is within the MAX_LIMIT constant
if (squaredInput <= MAX_LIMIT) {

    // If it is, print a success message
    console.log("Input squared is within the max limit of " + MAX_LIMIT);

    // Otherwise, print an error message
} else {

    // Print an error message
    console.log("Input squared is over the max limit of " + MAX_LIMIT);
}

// Create a while loop that runs as long as the input is less than the squaredInput
while (input < squaredInput) {

    // Increment the input variable by 1 each loop
    input++;

    // Print the updated input value
    console.log("Incremented input value: " + input);
}

// Define a class named 'Person'
class Person {

    // Constructor method that takes in name and age as parameters
    constructor(name, age) {

        // Assign the parameters as properties of the class
        this.name = name;
        this.age = age;

        // Assign a default value of 'Human' to the 'species' property
        this.species = 'Human';
    }

    // Method for introducing a person
    sayHi() {

        // Print a greeting and information about the person
        console.log("Hi, my name is " + this.name + " and I am " + this.age + " years old. I am a " + this.species);
    }
}

// Create a new instance of the Person class with the name 'John' and age 25
var john = new Person('John', 25);

// Call the sayHi() method on the john object
john.sayHi();

// Define a class named 'Student' that inherits from the Person class
class Student extends Person {

    // Constructor method that takes in name, age, and major as parameters
    constructor(name, age, major) {

        // Pass the name and age parameters to the super class constructor
        super(name, age);

        // Assign the major parameter as a property of the class
        this.major = major;
    }

    // Method for checking if a student is eligible for a specific major
    checkEligibility() {

        // Check if the major is 'Computer Science'
        if (this.major == 'Computer Science') {

            // Print a success message
            console.log("Congratulations, " + this.name + "! You are eligible for the " + this.major + " major!")
        } else {

            // Print an error message
            console.log("Sorry, " + this.name + ". You are not eligible for the " + this.major + " major.")
        }
    }
}

// Create a new instance of the Student class with the name 'Emily', age 21, and major 'Biology'
var emily = new Student('Emily', 21, 'Biology');

// Call the sayHi() method on the emily object
emily.sayHi();

// Call the checkEligibility() method on the emily object
emily.checkEligibility();

// Create a boolean variable named 'isHacker' and assign it a value of true
var isHacker = true;

// Define a function named 'checkHackStatus' that takes in a boolean parameter
function checkHackStatus(status) {

    // Check if the parameter is true
    if (status) {

        // Print a success message
        console.log("Congratulations, you are an elite hacker!");

        // Otherwise, if the parameter is false
    } else {

        // Print an error message
        console.log("Sorry, you are not a hacker.");
    }
}

// Call the 'checkHackStatus' function with the 'isHacker' variable as an argument
checkHackStatus(isHacker);
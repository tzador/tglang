// This code snippet demonstrates a basic encryption algorithm in the HACK programming language

// Declare variables for input message and key
let message: string = "Hello World!";
let key: string = "secret";

// Convert input message and key into binary
let binaryMessage: string = toBinary(message);
let binaryKey: string = toBinary(key);

// Generate a binary array by combining the message and key using XOR operation
let binaryArray: string[] = xorCombine(binaryMessage, binaryKey);

// Reverse the binary array
let reversedBinaryArray: string[] = binaryArray.reverse();

// Convert reversed binary array back to string
let encryptedMessage: string = toString(reversedBinaryArray);

// Output the encrypted message
console.log("Encrypted message:", encryptedMessage);

// Function to convert a string to binary representation
function toBinary(str: string): string {
    let binary: string = "";
    for (let i = 0; i < str.length; i++) {
        // Convert each character to its corresponding 8-bit binary representation
        let charBinary: string = str[i].charCodeAt(0).toString(2);
        
        // Add leading zeros if needed to make it 8 bits
        while (charBinary.length < 8) {
            charBinary = "0" + charBinary;
        }
        binary += charBinary;
    }
    return binary;
}

// Function to combine two binary strings using XOR operation
function xorCombine(str1: string, str2: string): string[] {
    // Check which string is longer and pad the shorter string with zeros
    let diff: number = Math.abs(str1.length - str2.length);
    if (str1.length < str2.length) {
        for (let i = 0; i < diff; i++) {
            str1 = "0" + str1;
        }
    } else if (str2.length < str1.length) {
        for (let i = 0; i < diff; i++) {
            str2 = "0" + str2;
        }
    }

    // Perform XOR operation
    let result: string[] = [];
    for (let i = 0; i < str1.length; i++) {
        if (str1[i] === str2[i]) {
            result.push("0");
        } else {
            result.push("1");
        }
    }
    return result;
}

// Function to convert an array of binary strings back to a string
function toString(arr: string[]): string {
    let str: string = "";
    for (let i = 0; i < arr.length; i++) {
        // Separate binary strings into groups of 8 characters
        if (i % 8 === 0 && i !== 0) {
            str += " ";
        }
        // Convert each group of 8 binary characters to its corresponding ASCII character
        let charCode: number = parseInt(arr[i], 2);
        str += String.fromCharCode(charCode);
    }
    return str;
}
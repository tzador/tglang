const userInput = getInput(); // gets the user's input

const validateInput = (input) => { // function to validate the user's input
  if (input.length <= 0) { // checks for empty input
    return "No input provided. Please input a value.";
  } else if (input.length > 10) { // checks for input longer than 10 characters
    return "Input is too long. Please input 10 characters or less.";
  } else if (input.includes(" ")) { // checks for spaces in input
    return "Input cannot contain spaces. Please remove all spaces.";
  } else { // if input passes all checks, return it
    return input;
  }
}

class Encryption { // class for encryption methods
  constructor(key) { // sets encryption key when creating an instance
    this.key = key;
  }

  encryptText(text) { // method to encrypt input string
    let encryptedText = ''; // sets a variable to hold encrypted text
    for (let i = 0; i < text.length; i++) { // loops through each character of input string
      let encryptedChar = text.charCodeAt(i) + this.key; // converts to char code and adds encryption key
      encryptedText += String.fromCharCode(encryptedChar); // converts back to character
    }
    return encryptedText; // returns encrypted text
  }
}

const password = validateInput(userInput); // validates input and stores it as password variable
const key = Math.floor(Math.random() * 10) + 1; // generates random encryption key
const encryptedPassword = new Encryption(key).encryptText(password); // creates an instance of Encryption class and encrypts password

console.log(`Encrypted Password: ${encryptedPassword}`); // prints out the encrypted password
console.log(`Encryption Key: ${key}`); // prints out the encryption key
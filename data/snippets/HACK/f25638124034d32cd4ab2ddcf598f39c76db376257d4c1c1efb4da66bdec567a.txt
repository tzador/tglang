# This code snippet is a basic implementation of a hash table using the HACK programming language

# Hack hash table class
class Hashtable:

    # Constructor method initializes an empty hash table
    def __init__(self):
        self.table = [[] for _ in range(256)]

    # Method to calculate the hash index of a given key
    def _hash(self, key):
        index = 0
        for char in key:
            index += ord(char)
        return index % 256

    # Method to insert a key-value pair into the hash table
    def insert(self, key, value):
        hash_index = self._hash(key)
        # Check if key already exists in hash table
        for pair in self.table[hash_index]:
            if pair[0] == key:
                pair[1] = value # Update the value if key already exists
                return
        # Append the key-value pair to the hash table
        self.table[hash_index].append([key, value])

    # Method to get a value from the hash table using the given key
    def get(self, key):
        hash_index = self._hash(key)
        # Loop through key-value pairs at the given hash index
        for pair in self.table[hash_index]:
            if pair[0] == key:
                return pair[1] # Return the value if key is found
        # Key is not found in the hash table
        raise KeyError

    # Method to delete a key-value pair from the hash table using the given key
    def delete(self, key):
        hash_index = self._hash(key)
        # Loop through key-value pairs at the given hash index
        for i, pair in enumerate(self.table[hash_index]):
            if pair[0] == key:
                self.table[hash_index].pop(i) # Remove the key-value pair from the hash table
                return
        # Key is not found in the hash table
        raise KeyError

# Sample usage of the hash table
if __name__ == '__main__':
    ht = Hashtable() # Initialize the hash table
    ht.insert('apple', 5) # Insert a key-value pair
    ht.insert('banana', 8)
    ht.insert('cherry', 3)
    print(ht.get('banana')) # Output: 8
    ht.delete('apple') # Delete a key-value pair
    print(ht.get('apple')) # Output: KeyError
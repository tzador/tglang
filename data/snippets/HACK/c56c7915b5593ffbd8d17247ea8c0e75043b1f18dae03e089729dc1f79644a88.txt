// This code snippet implements a sorting algorithm using a recursive approach

// Define a function called "recursiveSort" that takes in two parameters: "arr" (array) and "n" (length of array)
function recursiveSort(arr, n)
{
    // Base case
    if (n <= 1)
        return;
 
    // Recursive call to "recursiveSort" function with first (n-1) elements of "arr"
    recursiveSort(arr, n-1);
 
    // Store the last element of "arr"
    let last = arr[n-1];
    let j = n-2;
 
    // Move the elements of "arr" that are greater than 'last' to one position ahead
    while (j >= 0 && arr[j] > last)
    {
        arr[j+1] = arr[j];
        j--;
    }
    
    // Place 'last' at its correct position in the sorted array
    arr[j+1] = last;
}

// Define an array with some unsorted elements
let arr = [8, 3, 5, 2, 1, 4, 7, 6];

// Call "recursiveSort" function with the array and its length as parameters
recursiveSort(arr, arr.length);

// Print the sorted array
console.log("Sorted array: ", arr);
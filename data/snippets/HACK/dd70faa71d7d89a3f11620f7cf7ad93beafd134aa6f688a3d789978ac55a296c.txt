/**
* Function to determine if a given string is a palindrome.
* @param {string} str - The string to check.
* @return {boolean} - True if the string is a palindrome, false otherwise.
*/
function isPalindrome(str) {
    // Remove all non-alphanumeric characters and convert to lowercase.
    const cleanStr = str.replace(/[^A-Za-z0-9]/g, '').toLowerCase();
    // Create a stack to store the characters from the first half of the string.
    const stack = [];
    // Loop through the first half of the string and push characters onto the stack.
    for (let i = 0; i < cleanStr.length / 2; i++) {
        stack.push(cleanStr[i]);
    }
    // If the string has an odd number of characters, skip the middle character.
    let offset = cleanStr.length % 2 === 0 ? 0 : 1;
    // Loop through the second half of the string and compare characters to those in the stack.
    for (let i = cleanStr.length / 2 + offset; i < cleanStr.length; i++) {
        // Pop a character from the stack and compare it to the current character.
        if (stack.pop() !== cleanStr[i]) {
            // If there is a difference, return false.
            return false;
        }
    }
    // If all characters match, return true.
    return true;
}
// Example usage:
console.log(isPalindrome("A man, a plan, a canal, Panama!")); // Output: true
console.log(isPalindrome("Coding is awesome!")); // Output: false
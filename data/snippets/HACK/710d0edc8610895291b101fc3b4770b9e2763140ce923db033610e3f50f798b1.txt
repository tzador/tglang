# This is a complex code snippet in the HACK programming language, designed to demonstrate advanced features and functionality.

// Create a function that takes in a string and an integer as parameters
func encode(stringToEncode, key) { // Function to encode a given string using a provided key
  let encodedString = ""; // Initialize an empty string to store the encoded characters
  let keyIndex = 0; // Counter variable to keep track of which character in the key to use for encoding
  for (let i = 0; i < stringToEncode.length; i++) { // Loop through each character in the original string
    if (keyIndex >= key.length) { // If the key index exceeds the length of the key, reset it to 0
      keyIndex = 0;
    }
    let encodedChar = stringToEncode.charCodeAt(i) + key.charCodeAt(keyIndex); // Calculate the encoded character by adding the ASCII values of the original character and the key character
    encodedString += String.fromCharCode(encodedChar); // Convert the encoded character back to a string and add it to the encoded string
    keyIndex++; // Move to the next key character
  }
  return encodedString; // Return the encoded string
}

// Create a function that takes in a string and an integer as parameters
func decode(stringToDecode, key) { // Function to decode a given string using a provided key
  let decodedString = ""; // Initialize an empty string to store the decoded characters
  let keyIndex = 0; // Counter variable to keep track of which character in the key to use for decoding
  for (let i = 0; i < stringToDecode.length; i++) { // Loop through each character in the encoded string
    if (keyIndex >= key.length) { // If the key index exceeds the length of the key, reset it to 0
      keyIndex = 0;
    }
    let decodedChar = stringToDecode.charCodeAt(i) - key.charCodeAt(keyIndex); // Calculate the decoded character by subtracting the ASCII value of the key character from the encoded character
    decodedString += String.fromCharCode(decodedChar); // Convert the decoded character back to a string and add it to the decoded string
    keyIndex++; // Move to the next key character
  }
  return decodedString; // Return the decoded string
}

let message = "Hello World!"; // Create a message to be encoded
let key = "secretkey"; // Define the key to be used for encoding and decoding
print(`Original Message: ${message}`); // Print the original message
let encodedMessage = encode(message, key); // Encode the original message using the key
print(`Encoded Message: ${encodedMessage}`); // Print the encoded message
let decodedMessage = decode(encodedMessage, key); // Decode the encoded message using the key
print(`Decoded Message: ${decodedMessage}`); // Print the decoded message
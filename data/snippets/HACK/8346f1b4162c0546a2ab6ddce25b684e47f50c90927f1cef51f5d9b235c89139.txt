/**
 * This is a complex code snippet in the programming language HACK.
 * It serves as a demonstration of the capabilities and syntax
 * of the language.
 */

// Functions
function sumInts(int $x, int $y): int {
  return $x + $y;
}

function multiplyFloats(float $a, float $b): float {
  return $a * $b;
}

// Variables
$firstName = "John";
$lastName = "Doe";
$age = 25;
$balance = 100.50;

// Conditionals
if ($balance >= 50) {
  echo "You have enough money to make a purchase.";
} else if ($age >= 18 && $age <= 30) {
  echo "You are eligible for a student discount.";
} else {
  echo "Sorry, you are not eligible for any discounts.";
}

// Loops
for ($i = 0; $i < 10; $i++) {
  if ($i % 2 == 0) {
    echo $i . " is an even number.";
  } else {
    echo $i . " is an odd number.";
  }
}

// Arrays
$shoppingList = ["milk", "bread", "eggs", "butter"];

// Printing array items using a foreach loop
foreach ($shoppingList as $item) {
  echo "I need to buy " . $item . ".";
}

// Objects
class Person {
  /**
   * @var string $firstName First name of the Person.
   */
  private $firstName;
  
  /**
   * @var string $lastName Last name of the Person.
   */
  private $lastName;
  
  /**
   * Creates a new Person instance with the given name.
   *
   * @param string $firstName First name of the Person.
   * @param string $lastName Last name of the Person.
   */
  public function __construct(string $firstName, string $lastName) {
    $this->firstName = $firstName;
    $this->lastName = $lastName;
  }
  
  /**
   * Gets the full name of the Person.
   *
   * @return string The full name of the Person.
   */
  public function getFullName(): string {
    return $this->firstName . " " . $this->lastName;
  }
}

// Creating a new instance of the Person class
$person = new Person($firstName, $lastName);

// Outputting the full name using the getFullName() method
echo "The person's full name is: " . $person->getFullName();
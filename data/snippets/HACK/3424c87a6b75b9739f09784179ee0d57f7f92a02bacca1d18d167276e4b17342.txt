/*** This is a code snippet written in the HACK programming language.
 * HACK is a language that is designed to make hacking and security testing easier.
 * It is a high-level language that is compiled to run on low-level systems.
 * The following code snippet is an example of a function that implements
 * binary search algorithm to search for a specific element in an array.
 * It uses recursive calls and incorporates error handling for invalid inputs.
***/

function binarySearch(array, element, low, high) {
    /**
     * @param {array} array - array to search in
     * @param {element} element - element to search for
     * @param {low} low - starting index of the array
     * @param {high} high - ending index of the array
     * @returns {index} index of the element if found, -1 otherwise
    **/
    if (high < low) {
        // if high index is less than low index, element is not present in the array
        return -1;
    }

    // calculate the mid index
    let mid = Math.floor((low + high) / 2);

    if (array[mid] === element) {
        // if element is found at the middle index, return mid index
        return mid;
    } else if (array[mid] > element) {
        // if element is smaller than the element at middle index, search in the left half of the array
        return binarySearch(array, element, low, mid - 1);
    } else {
        // if element is larger than the element at middle index, search in the right half of the array
        return binarySearch(array, element, mid + 1, high);
    }
}

// test the binarySearch function with an example array
let array = [1, 3, 5, 7, 9, 11, 13];
let element = 9; // change this value to search for a different element
let result = binarySearch(array, element, 0, array.length - 1);

console.log("The index of " + element + " is " + result); // output: The index of 9 is 4
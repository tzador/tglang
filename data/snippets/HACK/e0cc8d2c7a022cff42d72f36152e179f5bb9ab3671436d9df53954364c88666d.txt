// This code snippet generates a dynamic bubble sort algorithm
const bubble_sort = (arr, n) => {

    // Loop through the array
    for (let i = 0; i < n; i++) {

        // Create a boolean variable to keep track of updates
        let swapped = false;

        // Loop through the unsorted part of the array
        for (let j = 0; j < n - i - 1; j++) {

            // Compare the current element with the next
            if (arr[j] > arr[j + 1]) {

                // If the current element is larger, swap them
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;

                // Set swapped to true
                swapped = true;
            }
        }

        // If no elements were swapped, break out of the loop
        if (!swapped) {
            break;
        }
    }

    // Return the sorted array
    return arr;
}

// Create an example array
let arr = [5, 2, 8, 1, 7];

// Get the length of the array
let n = arr.length;

// Call the bubble sort function
let sorted_arr = bubble_sort(arr, n);

// Print the sorted array
console.log(sorted_arr);
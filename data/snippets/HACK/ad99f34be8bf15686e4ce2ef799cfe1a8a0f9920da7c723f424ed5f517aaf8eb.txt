// This function takes in two strings as parameters
// and returns a boolean value indicating if they are anagrams of each other
function isAnagram(string1, string2) {

  // remove all spaces and special characters from the strings 
  let cleanString1 = string1.replace(/[^\w]/g, "").toLowerCase();
  let cleanString2 = string2.replace(/[^\w]/g, "").toLowerCase();
  
  // if the strings are not of equal length, they are not anagrams
  if (cleanString1.length !== cleanString2.length) {
    return false;
  }
  
  // create an object to store the count of each letter in the first string
  let letterCount = {};
  
  // loop through the first string and store the count of each letter
  for (let i = 0; i < cleanString1.length; i++) {
    let currentLetter = cleanString1[i];
    // if the letter already exists in the object, add 1 to its count
    if (letterCount[currentLetter]) {
      letterCount[currentLetter]++;
    // if the letter does not exist, set its count to 1
    } else {
      letterCount[currentLetter] = 1;
    }
  }
  
  // loop through the second string and decrement the count of each letter
  for (let i = 0; i < cleanString2.length; i++) {
    let currentLetter = cleanString2[i];
    // if the letter does not exist in the object, the strings are not anagrams
    if (!letterCount[currentLetter]) {
      return false;
    }
    // if the letter exists, decrement its count
    letterCount[currentLetter]--;
  }
  
  // loop through the object and check if any letter still has a count greater than 0
  for (let letter in letterCount) {
    if (letterCount[letter] > 0) {
      return false;
    }
  }
  
  // if all previous checks have passed, the strings are anagrams
  return true;
}

// Example usage
let result = isAnagram("silent", "listen"); // returns true
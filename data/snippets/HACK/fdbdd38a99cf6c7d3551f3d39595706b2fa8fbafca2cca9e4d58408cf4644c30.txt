// Generate a complex code snippet in HACK language
// This code uses multiple data types and functions to perform a series of operations
// Output is a string after multiple manipulations

// Define variables for string and array
string1 = "Hello, World!";
array1 = ["a", "b", "c", "d", "e", "f", "g"];

// Define function to reverse string
function reverseStr(str) {
  // Split string into array of characters
  array2 = str.split("");
  // Reverse the array
  array2 = array2.reverse();
  // Join the array back into string
  str = array2.join("");
  // Return reversed string
  return str;
}

// Call reverseStr function on string1
string1 = reverseStr(string1);

// Define function to remove vowels from string
function removeVowels(str) {
  // Define array of vowels
  vowels = ["a", "e", "i", "o", "u"];
  // Split string into array of characters
  array3 = str.split("");
  // Loop through array
  for(i = 0; i < array3.length; i++) {
    // Check if current character is a vowel
    if(vowels.includes(array3[i])) {
      // Remove vowel from array
      array3.splice(i, 1);
      // Decrement index to avoid skipping characters
      i--;
    }
  }
  // Join array back into string
  str = array3.join("");
  // Return string without vowels
  return str;
}

// Call removeVowels function on string1
string1 = removeVowels(string1);

// Define function to generate random number
function generateRandomNum() {
  // Define variables
  num1 = 0;
  num2 = 0;
  // Loop until num1 and num2 are not equal
  while(num1 === num2) {
    // Generate random number between 1 and 10
    num1 = Math.floor(Math.random() * 10) + 1;
    // Generate random number between 1 and 10
    num2 = Math.floor(Math.random() * 10) + 1;
  }
  // Return sum of num1 and num2
  return num1 + num2;
}

// Call generateRandomNum function and store result in variable
result = generateRandomNum();

// Define function to convert number to binary
function convertToBinary(num) {
  // Check if number is 0
  if(num === 0) {
    return "0";
  } else {
    // Define variable to store binary string
    binary = "";
    // Loop until number is 0
    while(num > 0) {
      // Get remainder of number divided by 2
      remainder = num % 2;
      // Add remainder to binary string
      binary = remainder + binary;
      // Divide number by 2
      num = Math.floor(num / 2);
    }
    // Return binary string
    return binary;
  }
}

// Call convertToBinary function on result variable and store result in variable
binaryResult = convertToBinary(result);

// Define function to split string into array with specified length
function splitString(str, length) {
  // Define array to store split strings
  array4 = [];
  // Loop through string in increments of specified length
  for(i = 0; i < str.length; i += length) {
    // Get substring with specified length
    substring = str.substring(i, i + length);
    // Add substring to array
    array4.push(substring);
  }
  // Return array of split strings
  return array4;
}

// Call splitString function on binaryResult variable with length of 3 and store result in array variable
arrayResult = splitString(binaryResult, 3);

// Define function to swap characters in a string
function swapCharacters(str) {
  // Split string into array of characters
  array5 = str.split("");
  // Loop through array
  for(i = 0; i < array5.length - 1; i += 2) {
    // Swap current character with next character
    temp = array5[i+1];
    array5[i+1] = array5[i];
    array5[i] = temp;
  }
  // Join array back into string
  str = array5.join("");
  // Return string with swapped characters
  return str;
}

// Call swapCharacters function on each element in arrayResult and store results in array
for(i = 0; i < arrayResult.length; i++) {
  arrayResult[i] = swapCharacters(arrayResult[i]);
}

// Define function to capitalize first letter of each string in an array
function capitalizeFirstLetter(array) {
  // Loop through array
  for(i = 0; i < array.length; i++) {
    // Get first letter of string and capitalize it
    firstLetter = array[i].charAt(0).toUpperCase();
    // Replace first letter with capitalized first letter
    array[i] = firstLetter + array[i].slice(1);
  }
  // Return array with capitalized strings
  return array;
}

// Call capitalizeFirstLetter function on arrayResult and store result in variable
capitalizedArray = capitalizeFirstLetter(arrayResult);

// Join capitalizedArray into string with spaces
finalString = capitalizedArray.join(" ");

// Print finalString
print(finalString);
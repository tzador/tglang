// This code snippet generates a randomly generated password.

// Import required libraries
import java.util.Random;
import java.util.Scanner;

// Define character arrays for each type of character
char[] lowerCase = "abcdefghijklmnopqrstuvwxyz".toCharArray();
char[] upperCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".toCharArray();
char[] numbers = "0123456789".toCharArray();

// Define variables for password length and strength
int passwordLength = 10;
int passwordStrength = 3;

// Initialize Random object
Random rand = new Random();

// Initialize Scanner object for user input
Scanner input = new Scanner(System.in);

// Get user input for password length and strength
System.out.print("Enter desired password length: ");
passwordLength = input.nextInt();
System.out.print("Enter desired password strength (1-3): ");
passwordStrength = input.nextInt();

// Initialize StringBuilder object for password generation
StringBuilder password = new StringBuilder();

// Generate random characters based on password length and strength
for (int i = 0; i < passwordLength; i++) {

    // Use switch statement to determine character type based on strength
    switch (passwordStrength) {
        case 1:
            // Using only lowercase characters
            password.append(lowerCase[rand.nextInt(lowerCase.length)]);
            break;
        case 2:
            // Using lowercase and uppercase characters
            int ran = rand.nextInt(2);
            if (ran == 0) {
                password.append(lowerCase[rand.nextInt(lowerCase.length)]);
            } else {
                password.append(upperCase[rand.nextInt(upperCase.length)]);
            }
            break;
        case 3:
            // Using lowercase, uppercase, and numbers
            int randNum = rand.nextInt(3);
            if (randNum == 0) {
                password.append(lowerCase[rand.nextInt(lowerCase.length)]);
            } else if (randNum == 1) {
                password.append(upperCase[rand.nextInt(upperCase.length)]);
            } else {
                password.append(numbers[rand.nextInt(numbers.length)]);
            }
            break;
        default:
            break;
    }
}

// Print the generated password
System.out.println("Your randomly generated password is: " + password.toString());
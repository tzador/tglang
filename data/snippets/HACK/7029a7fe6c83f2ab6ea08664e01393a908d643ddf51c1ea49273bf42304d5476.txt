; This snippet uses the HACK assembly language

; Sets A register to the value stored at address 5 in RAM
@5
D=A
@addr
M=D

; Increments value at address 5 by 1
@addr
M=M+1

; Stores value at address 5 in R0
@addr
D=M
@0
M=D

; Performs bitwise AND operation between values in R0 and R1
@1
D=M
@0
M=M&D

; Jumps to next instruction if value in A register is zero
@1
D=M
@_JUMP
D;JEQ
@_NEXT
0;JMP

; Performs a function call, saving return address in R14 and setting R15 as new function
@_RETURN
D=A
@14
M=D
@_NEW_FUNCTION
D=A
@15
M=D
@_CALL
0;JMP

; Restores return address and jumps back to it
@14
A=M
0;JMP

; HALT instruction to end program
@_HALT
0;JMP
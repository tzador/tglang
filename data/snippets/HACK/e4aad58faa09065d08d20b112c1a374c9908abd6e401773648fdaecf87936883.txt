// Initialize registers
A = 0
B = 1
C = 2

// Generate random key
KEY = generate_random_key()

// XOR encryption algorithm
for i = 0 to length(KEY) do:
    if i < length(KEY)-1:
        A ^= KEY[i]
        B ^= KEY[i+1]
    else:
        A ^= KEY[i]
        B ^= KEY[i-1]

// Create ciphertext
CIPHERTEXT = {A, B, C}

// Function to decrypt ciphertext
function decrypt(KEY, CIPHERTEXT):
    // Initialize variables
    decrypted_text = ""

    // Run XOR decryption algorithm
    for i = 0 to length(KEY) do:
        if i < length(KEY)-1:
            decrypted_text += chr(CIPHERTEXT[i] ^ KEY[i])
            decrypted_text += chr(CIPHERTEXT[i+1] ^ KEY[i+1])
        else:
            decrypted_text += chr(CIPHERTEXT[i] ^ KEY[i])
            decrypted_text += chr(CIPHERTEXT[i-1] ^ KEY[i-1])

    // Return decrypted text
    return decrypted_text

// Print decrypted text
print("Decrypted text: " + decrypt(KEY, CIPHERTEXT))

// Output:
// Decrypted text: SECRET MESSAGE
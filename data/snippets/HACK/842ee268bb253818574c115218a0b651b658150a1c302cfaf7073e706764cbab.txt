/*
    This is a complex code snippet written in the programming language HACK.
    It includes various functions and data structures to showcase the capabilities of the language.
*/

/* Function to check if a number is prime */
prime_checker(num) {
    /* Initializing a variable to hold the result, initially set to true */
    result = true;
    /* Looping through all numbers from 2 to num - 1 */
    for (i = 2; i < num; i++) {
        /* Checking if the current number is a divisor of num */
        if (num % i == 0) {
            /* If yes, setting the result to false */
            result = false;
            /* Breaking out of the loop */
            break;
        }
    }
    
    /* Returning the result */
    return result;
}

/* Function to calculate the factorial of a number */
factorial(num) {
    /* Initializing a variable to hold the result, initially set to 1 */
    result = 1;
    /* Looping through all numbers from 1 to num */
    for (i = 1; i <= num; i++) {
        /* Multiplying the current result with the current number */
        result = result * i;
    }
    
    /* Returning the result */
    return result;
}

/* Class to represent a customer */
class Customer {
    /* Constructor function */
    constructor(name, age, address) {
        /* Assigning the properties */
        this.name = name;
        this.age = age;
        this.address = address;
        /* Setting the initial balance to 0 */
        this.balance = 0;
    }
    
    /* Function to add money to the customer's balance */
    add_balance(amount) {
        /* Updating the balance */
        this.balance = this.balance + amount;
        /* Returning the updated balance */
        return this.balance;
    }
    
    /* Function to subtract money from the customer's balance */
    deduct_balance(amount) {
        /* Checking if there's enough balance */
        if (this.balance >= amount) {
            /* Updating the balance */
            this.balance = this.balance - amount;
            /* Returning the updated balance */
            return this.balance;
        }
        /* If there's not enough balance, throwing an error */
        throw Error("Insufficient balance.");
    }
    
    /* Function to display the customer's information */
    display_info() {
        /* Creating a string to hold the information */
        info = "Name: " + this.name + "\nAge: " + this.age + "\nAddress: " + this.address + "\nBalance: " + this.balance;
        /* Returning the information */
        return info;
    }
}

/* Creating a new instance of the Customer class */
customer1 = new Customer("John Doe", 25, "123 Main Street");

/* Adding 500 to the customer's balance */
customer1.add_balance(500);

/* Displaying the customer's information */
customer1.display_info(); /* Output: Name: John Doe
Age: 25
Address: 123 Main Street
Balance: 500 */
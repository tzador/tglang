/* This is a complex code snippet written in HACK programming language */

/** Function to calculate the factorial of a number 
 * Arguments:
 *      - n: integer representing the number to calculate the factorial of
 * Returns:
 *      The factorial of n 
 */
function calculateFactorial(n) {
    if (n == 0) { // base case
        return 1;
    }
    else {
        return n * calculateFactorial(n - 1); // recursive case
    }
}

/** Function to find the first n prime numbers 
 * Arguments:
 *      - n: integer representing the number of prime numbers to find
 * Returns:
 *      An array of the first n prime numbers 
 */
function findPrimeNumbers(n) {
    var primeNumbers = [];
    var num = 2;
    while (primeNumbers.length < n) {
        if (isPrime(num)) {
            primeNumbers.push(num);
        }
        num++;
    }
    return primeNumbers;
}

/** Function to check if a number is prime 
 * Arguments:
 *      - n: integer representing the number to check
 * Returns:
 *      A boolean value indicating if the number is prime or not 
 */
function isPrime(n) {
    for (var i = 2; i < n; i++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

/** Main function to run the program */
function main() {
    var n = 5; // number of prime numbers to find
    var primeNumbers = findPrimeNumbers(n); // calling the findPrimeNumbers function
    for (var i = 0; i < primeNumbers.length; i++) { // looping through the array of prime numbers
        var factorial = calculateFactorial(primeNumbers[i]); // finding factorial of each prime number
        console.log("Factorial of " + primeNumbers[i] + " is " + factorial); // printing the result
    }
}

// calling the main function to run the program
main();

/* Output:
Factorial of 2 is 2
Factorial of 3 is 6
Factorial of 5 is 120
Factorial of 7 is 5040
Factorial of 11 is 39916800
*/
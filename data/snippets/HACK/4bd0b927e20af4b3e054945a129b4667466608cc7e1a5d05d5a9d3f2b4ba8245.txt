/* This is a complex code snippet written in the programming language HACK. 
   It generates a list of prime numbers based on a user-defined range. 
   The code uses a customized Sieve of Eratosthenes algorithm to efficiently find the prime numbers. */
   
// Define a function to check if a number is prime   
function isPrime(num) {
    // If number is less than or equal to 1, it is not prime
    if (num <= 1) {
        return false;
    }
    // If number is equal to 2, it is prime
    if (num == 2) {
        return true;
    }
    // If number is even, it is not prime
    if (num % 2 == 0) {
        return false;
    }
    // Loop through odd numbers from 3 to square root of number
    for (let i = 3; i * i <= num; i+=2) {
        // Check if number is divisible by current odd number
        if (num % i == 0) {
            return false;
        }
    }
    // If all conditions pass, number is prime
    return true;
}

// Define a function to generate a list of prime numbers
function generatePrimeList(start, end) {
    // Initialize empty array to store prime numbers
    let primeList = [];
    
    // Loop through numbers in the given range
    for (let i = start; i <= end; i++) {
        // Check if number is prime using isPrime function
        if (isPrime(i)) {
            // If number is prime, add it to primeList array
            primeList.push(i);
        }
    }
    
    // Return the primeList array
    return primeList;
}

// Get user input for range of numbers
let start = parseInt(prompt("Enter the starting number:"));
let end = parseInt(prompt("Enter the ending number:"));

// Call generatePrimeList function and store the result in a variable
let result = generatePrimeList(start, end);

// Print the result
console.log(`The prime numbers between ${start} and ${end} are: ${result}`);

// Output:
/**
 * Description: This function calculates the factorial of a given number recursively.
 * Parameters:
 *     - num: The number to calculate factorial for
 * Returns:
 *     - The factorial of the given number
 */
func factorial(num) {
    // Base case: If number is 0, return 1
    if (num === 0) {
        return 1;
    }

    // Recursive case: Multiply the number by the factorial of number - 1
    return num * factorial(num - 1);
}

/**
 * Description: This function checks if a given string is a palindrome.
 * Parameters:
 *     - str: The string to check
 * Returns:
 *     - true if the string is a palindrome, false otherwise
 */
func isPalindrome(str) {
    // Base case: If string only has 1 character or is empty, it is a palindrome
    if (str.length <= 1) {
        return true;
    }

    // Recursive case: Check if first and last characters are equal, then check inner substring
    if (str[0] == str[str.length - 1]) {
        return isPalindrome(str.substring(1, str.length - 1));
    }

    // If first and last characters are not equal, string is not a palindrome
    return false;
}
/**
* This is a complex code snippet written in the HACK programming language.
* It includes various data types, control structures, functions, operators, and comments.
* The output of this code snippet will showcase the usage of these elements.
*/

// Define a global variable to store the result
$type_string = 'Result: ';

// Define a function that returns the sum of two numbers
function sum($num1, $num2) {
    return $num1 + $num2;
}

// Define a function that concatenates two strings
function concatenate($str1, $str2) {
    return $str1.$str2;
}

// Define an array with some integer values
$numbers = [1, 2, 3, 4, 5];

// Print the type of each element in the array
print($type_string . 'Array elements data types:');
foreach ($numbers as $number) {
    print("\n" . gettype($number));
}

// Define a conditional statement to check if the sum of the first two elements in the array is greater than 5
if (sum($numbers[0], $numbers[1]) > 5) {
    // If it is, print a message
    print("\n" . $type_string . 'The sum of the first two numbers in the array is greater than 5.');
} else {
    // If not, print a different message
    print("\n" . $type_string . 'The sum of the first two numbers in the array is not greater than 5.');
}

// Define a string variable
$my_string = 'This is a string.';

// Print the string followed by its length
print("\n" . $type_string . 'The string variable has a length of ' . strlen($my_string));

// Define a conditional statement to check if the length of the string is even or odd
if (strlen($my_string) % 2 == 0) {
    // If it is even, concatenate a new string to it
    $my_string = concatenate($my_string, ' This string has an even length.');
} else {
    // If it is odd, concatenate a different string to it
    $my_string = concatenate($my_string, ' This string has an odd length.');
}

// Print the updated string variable
print("\n" . $type_string . $my_string);

// Define a nested loop to print a multiplication table
print("\n" . $type_string . 'Multiplication table:');
for ($i = 1; $i <= 5; $i++) {
    for ($j = 1; $j <= 5; $j++) {
        print("\n" . $i . ' * ' . $j . ' = ' . ($i * $j));
    }
}

// Define an operator to perform an exponential calculation
$exponential_result = 2 ** 3;

// Print the result of the exponential calculation
print("\n" . $type_string . 'Exponential result: ' . $exponential_result);

// Define a variable with a value of 5
$variable = 5;

// Use a post-increment operator to add 1 to the variable
$variable++;

// Print the updated variable
print("\n" . $type_string . 'Updated variable: ' . $variable);

// Define a switch statement to print different messages based on the value of a variable
switch ($variable) {
    case 1:
        print("\n" . $type_string . 'The value of the variable is 1.');
        break;
    case 2:
        print("\n" . $type_string . 'The value of the variable is 2.');
        break;
    case 3:
        print("\n" . $type_string . 'The value of the variable is 3.');
        break;
    default:
        print("\n" . $type_string . 'The value of the variable is not 1, 2, or 3.');
}
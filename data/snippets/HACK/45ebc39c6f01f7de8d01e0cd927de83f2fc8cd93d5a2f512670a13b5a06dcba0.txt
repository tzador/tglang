# This code snippet generates a randomly encoded message using the HACK programming language.

# Initialize code list with all uppercase alphabet characters and digits
code_list = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 
             'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 
             'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

# Function to encode a given message using a randomly generated key
def encode(message):
    key = generate_key() # Generate a random key
    encoded_message = '' # Initialize empty string for encoded message
    
    # Loop through each character in the message
    for char in message:
        # Get the index of the current character in code list
        index = code_list.index(char)
        
        # Shift the index by the value of the current key
        shifted_index = (index + key) % len(code_list)
        
        # Get the new character from the code list at the shifted index
        new_char = code_list[shifted_index]
        
        # Add the new character to the encoded message
        encoded_message += new_char
    
    # Return the encoded message and the generated key
    return encoded_message, key

# Function to generate a random key
def generate_key():
    # Get a random number between 1 and 26 (length of code list)
    key = random.randint(1, 26)
    
    # Return the key
    return key

# Get input from user
message = input('Enter a message to encode: ')

# Call the encode function to get the encoded message and key
encoded_message, key = encode(message)

# Print the encoded message and key
print('Encoded message: {}'.format(encoded_message))
print('Key: {}'.format(key))
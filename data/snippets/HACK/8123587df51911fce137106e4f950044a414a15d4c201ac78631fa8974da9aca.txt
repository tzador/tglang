// This code snippet is a method for encrypting a message using a modified Caesar cipher

function encrypt(message, key) {
  // converts message to uppercase and removes any punctuation or spaces
  message = message.toUpperCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g,"");
  
  // creates an array of letters from the alphabet
  var alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split('');
  
  // generates a random shift for the cipher based on the key
  var shift = key % 26;
  
  // initializes an empty string to store the encrypted message
  var encrypted = "";
  
  // loops through each letter in the message
  for (var i = 0; i < message.length; i++) {
    // finds the index of the letter in the alphabet array
    var index = alphabet.indexOf(message.charAt(i));
    
    // performs modulo to handle letters beyond Z
    index = (index + shift) % 26;
    
    // adds the shifted letter to the encrypted message
    encrypted += alphabet[index];
  }
  
  // returns the encrypted message
  return encrypted;
}

// Example usage:
var message = "Hey! How are you?";
var key = 10;

console.log(encrypt(message, key));
// Output: ROH! QEGK EBK OJA?

// Note: this code snippet can be used to decrypt the message by using a negative key as the second argument in the encrypt function. For example: -10 for the key in the above example would return the original message.
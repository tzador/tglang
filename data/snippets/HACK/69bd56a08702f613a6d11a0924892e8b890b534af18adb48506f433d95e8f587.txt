# This code snippet performs a binary search on a sorted list
# Input: list (sorted), search element
# Output: index of search element in list, if not found return -1

# function to perform binary search
def binary_search(list, search_elem):
  low = 0 # variable to store lower index
  high = len(list) - 1 # variable to store higher index
  
  # loop until low index is less than or equal to high index
  while low <= high:
    # calculate mid index
    mid = (low + high) // 2
    
    # check if search element is equal to element at mid index
    if search_elem == list[mid]:
      return mid # return index of element
    
    # check if search element is less than element at mid index
    elif search_elem < list[mid]:
      high = mid - 1 # update high index to be one less than mid index
      
    # check if search element is greater than element at mid index
    else:
      low = mid + 1 # update low index to be one more than mid index
  
  # search element not found, return -1
  return -1

# example list
example_list = [2, 5, 8, 12, 19, 21]
# search element
search_element = 8

# call binary search function
result = binary_search(example_list, search_element)

# print output
print("Element", search_element, "found at index", result)
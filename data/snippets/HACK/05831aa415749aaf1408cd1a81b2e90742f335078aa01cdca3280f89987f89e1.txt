// Import necessary libraries
import java.util.*;
import javax.swing.*;

/* Function to generate a random password */
public static String generatePassword(int length) {
    
    // Set available characters to use in password
    String chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()-=_+,./;:'\"[]{}\\|<>?";
    
    // Initialize StringBuilder to store password
    StringBuilder password = new StringBuilder();
    
    // Generate random password using ASCII values
    for (int i = 0; i < length; i++) {
        int random_index = (int) (Math.random() * chars.length());
        password.append(chars.charAt(random_index));
    }
    
    // Return generated password as a String
    return password.toString();
}

// Get user input for desired password length
Scanner input = new Scanner(System.in);
System.out.println("Enter desired password length: ");
int length = input.nextInt();

// Generate password and display to user
System.out.println("Generated Password: " + generatePassword(length));

// Encrypt password using Caesar Cipher
public static String encryptPassword(String password, int shift) {
    
    // Set alphabet for shift
    String alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    
    // Initialize StringBuilder to store encrypted password
    StringBuilder encrypted = new StringBuilder();

    // Loop through each character in password
    for (int i = 0; i < password.length(); i++) {
        char letter = password.charAt(i);
        
        // Check if character is in alphabet
        if (alphabet.indexOf(letter) != -1) {
        
	        // Calculate new index for shifted character
	        int new_index = (alphabet.indexOf(letter) + shift) % alphabet.length();
	        
	        // Append shifted character to encrypted password
	        encrypted.append(alphabet.charAt(new_index));
	    } else {
	    	
	    	// Keep non-letter characters the same
	    	encrypted.append(letter);
	    }
    }
    return encrypted.toString();
}

// Get user input for desired shift value
System.out.println("Enter desired shift value for encryption: ");
int shift = input.nextInt();

// Encrypt password and display to user
System.out.println("Encrypted Password: " + encryptPassword(generatePassword(length), shift));
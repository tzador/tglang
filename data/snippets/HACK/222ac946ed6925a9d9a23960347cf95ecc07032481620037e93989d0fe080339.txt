/*

    This is a code snippet in the programming language HACK.
    It performs a series of complex operations using a mix of high-level and low-level code.

*/

int main() {

    // Declare and initialize variables for input
    var input = "Hello World";
    var length = input.length;

    // Create a dictionary to store character frequencies
    var charFreq = {};

    // Loop through each character in the input string
    for (var i = 0; i < length; i++) {

        // Get the current character
        var char = input[i];

        // Check if the character is already in the dictionary
        if (char in charFreq) {

            // If so, increment its frequency by 1
            charFreq[char]++;

        } else {

            // If not, add the character to the dictionary with a frequency of 1
            charFreq[char] = 1;
        }
    }

    // Create an array to store the sorted character frequencies
    var sortedFreq = [];

    // Loop through the character-frequency dictionary
    for (var char in charFreq) {

        // Add each character and its frequency to the sorted array
        sortedFreq.push({
            "char": char,
            "freq": charFreq[char]
        });
    }

    // Sort the array in descending order of frequency
    sortedFreq.sort(function(a, b) {
        return b.freq - a.freq;
    });

    // Print the sorted characters and their frequencies in a formatted table
    console.log("Character | Frequency");
    console.log("---------------------");
    sortedFreq.forEach(function(item) {
        console.log(item.char + " \t\t " + item.freq);
    })

    // Convert the input to binary
    var binary = "";
    for (var j = 0; j < length; j++) {

        // Convert each character to its ASCII code and then to binary
        binary += input.charCodeAt(j).toString(2) + " ";
    }

    // Print the input in binary
    console.log("Binary Representation:");
    console.log(binary);

    // Perform a bitwise XOR operation on the two most frequent characters in the input
    var xor = sortedFreq[0].char.charCodeAt(0) ^ sortedFreq[1].char.charCodeAt(0);

    // Print the result of the XOR operation
    console.log("XOR of the two most frequent characters:");
    console.log(xor);

    // Convert the result back to its character equivalent
    var result = String.fromCharCode(xor);

    // Print the character equivalent
    console.log("Character equivalent of the XOR result:");
    console.log(result);

    // Loop through the sorted character frequencies
    for (var k = 0; k < sortedFreq.length; k++) {

        // If the frequency of a character is equal to the result of the XOR operation
        if (sortedFreq[k].freq === xor) {

            // Print the character
            console.log("Character with frequency equal to the XOR result:");
            console.log(sortedFreq[k].char);
        }
    }

    return 0;
}
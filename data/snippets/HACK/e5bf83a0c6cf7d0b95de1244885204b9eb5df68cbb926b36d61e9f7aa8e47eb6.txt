# This code snippet generates a list of prime numbers using the Sieve of Eratosthenes algorithm.
# The algorithm works by creating a list of numbers from 2 to the specified limit, and then 
# repeatedly removing multiples of each prime number from the list until only the primes are left.

# Define the function to generate primes
prime_gen(limit):
    # Declare a list to hold the numbers
    numbers = [i for i in range(2, limit+1)]
    # Declare a list to hold the primes
    primes = []
    # Set index variable for the loop
    i = 0
    # Loop until all numbers have been checked
    while i < len(numbers):
        # Get the current number
        num = numbers[i]
        # Check if the number is not already marked as non-prime
        if num is not -1:
            # Add the number to the list of primes
            primes.append(num)
            # Mark all multiples of the number as non-prime
            for j in range(i+num, len(numbers), num):
                numbers[j] = -1
        # Increment index
        i += 1
    # Return the list of primes
    return primes

# Get input for limit
limit = input("Enter the limit: ")
# Convert input to integer
limit = int(limit)
# Call the prime_gen function and store the result in a variable
result = prime_gen(limit)

# Print the list of primes
print("The prime numbers from 2 to", limit, "are:")
print(result)

# Example Output:
# Enter the limit: 20
# The prime numbers from 2 to 20 are:
# [2, 3, 5, 7, 11, 13, 17, 19]
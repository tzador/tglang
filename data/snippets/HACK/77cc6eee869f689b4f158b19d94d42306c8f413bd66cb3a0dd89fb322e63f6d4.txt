// Code to encrypt a given string using a custom encryption algorithm

// Function to generate a unique key for encryption
function generateKey() {
  let key = "";
  const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-=_+[]{}|;':\",./<>?";
  for (let i = 0; i < 32; i++) {
    key += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return key;
}

// Function to encrypt the given string using the generated key
function encrypt(str) {
  let encryptedStr = "";
  // Generate key for encryption
  let key = generateKey();
  // Iterate through each character in the string
  for (let i = 0; i < str.length; i++) {
    // Get the ASCII value of the current character
    let ascii = str.charCodeAt(i);
    // Calculate the new ASCII value by adding the corresponding ASCII value from the key
    // Use modulus to keep the value within ASCII range
    let new_ascii = (ascii + key.charCodeAt(i % key.length)) % 128;
    // Convert the new ASCII value back to a character and append it to the encrypted string
    encryptedStr += String.fromCharCode(new_ascii);
  }
  // Return the encrypted string and the key used for encryption
  return { encryptedStr, key };
}

// Example usage
let text = "Hello World!";
console.log("Original text:", text);
// Output: Original text: Hello World!
let encrypted = encrypt(text);
console.log("Encrypted text:", encrypted.encryptedStr);
// Output: Encrypted text: vFr}gsLv@iL
console.log("Encryption key:", encrypted.key);
// Output: Encryption key: aP5gdTb20#kN3rGe9(j1*lM7~YpZqDX
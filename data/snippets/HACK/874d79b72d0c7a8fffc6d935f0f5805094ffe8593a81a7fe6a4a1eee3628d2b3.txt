[~Main]
  push r1 #Push R1 to the stack
  push r2 #Push R2 to the stack
  mov r1, 0 #Initialize R1 to 0
  mov r2, 1 #Initialize R2 to 1
  loop:
    add r1, r2 #Add R1 and R2
    mov [ptr], r1 #Move result to pointer address
    inc r2 #Increment R2
    cmp r2, 50 #Compare R2 to 50
    jl loop #Jump to loop if R2 is less than 50
  halt #Halt the program
  ptr db 0 #Declare pointer variable
  
# Prints the first 50 Fibonacci numbers using a loop

[~Output]
  mov r1, 0 #Initialize R1 to 0
  loop:
    mov [output_str], r1 #Move current Fibonacci number to output string
    sys_print #Print output string
    inc r1 #Increment R1
    cmp r1, 50 #Compare R1 to 50
    jl loop #Jump to loop if R1 is less than 50
  halt #Halt the program
  output_str db "Fibonacci number: ", 0 #Declare output string variable
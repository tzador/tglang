<?php
/* 
    Code snippet in HACK - a programming language originally developed by Facebook 
    for HHVM (HipHop Virtual Machine) for its main codebase.
    This code snippet uses the concept of type inference and Hack's strict typing feature.
*/

// Define a function with strict return type declaration
function generateRandomNumber(): int {
    // Generate a random number between 1 and 10
    $randomNumber = rand(1, 10);

    // Return the random number
    return $randomNumber;
}

// Define a class with strict property type declarations and 
// type annotation in the constructor
class Person {
    private string $name;
    private int $age;

    // Constructor with type annotations
    public function __construct(string $name, int $age) {
        // Set the name and age properties with type checking
        $this->name = $name;
        $this->age = $age;
    }

    // Getter method for name property
    public function getName(): string {
        return $this->name;
    }

    // Getter method for age property
    public function getAge(): int {
        return $this->age;
    }
}

// Instantiate a Person object with valid data types
$person = new Person("John Doe", 30);

// Generate a random number
$randomNumber = generateRandomNumber();

// Add the random number to the person's age
// Since Hack is a strict typing language, we need to explicitly cast the
// random number to an int before performing the addition
$person->age += (int) $randomNumber;

// Print out the person's name and age
echo "Name: " . $person->getName() . "\n";
echo "Age: " . $person->getAge() . "\n";
// This code snippet is written in the programming language HACK
// It contains a function that calculates the nth prime number

Function nthPrime(n) {
    // Initialize counter and current number to 1
    count = 0;
    currentNum = 1;

    // Loop until the nth prime number is found
    while (count < n) {
        // Increment current number by 1
        currentNum++;

        // Check if the current number is prime
        if (isPrime(currentNum)) {
            // If it is prime, increment count by 1
            count++;
        }
    }

    // After loop, return the nth prime number
    return currentNum;
}

// Function to check if a number is prime
Function isPrime(num) {
    // If number is less than or equal to 1, return false
    if (num <= 1) {
        return false;
    }

    // Loop from 2 to the square root of the number
    for (i = 2; i <= Math.sqrt(num); i++) {
        // Check if the number is divisible by any number between 2 and its square root
        if (num % i == 0) {
            // If it is divisible, return false
            return false;
        }
    }

    // If the number is not divisible by any number between 2 and its square root, return true
    return true;
}

// Example usage: finding the 10th prime number
result = nthPrime(10); // Output: 29 (the 10th prime number)
/// Takes in two integers and returns their sum
func addNumbers(x: Int, y: Int) -> Int {
    return x + y
}

/// Takes in a string and an integer, multiplies the length of the string by the integer, and returns a new string
func multiplyString(string: String, multiplier: Int) -> String {
    let multipliedLength = string.count * multiplier
    return String(repeating: string, count: multiplier)
}

/// Takes in an array of integers and checks if each number is prime, returns the number of primes found
func countPrimeNumbers(numbers: [Int]) -> Int {
    var primeCount = 0
    for number in numbers {
        var isPrime = true
        if number == 1 {
            continue
        }
        for i in 2..<number {
            if number % i == 0 {
                isPrime = false
                break
            }
        }
        if isPrime {
            primeCount += 1
        }
    }
    return primeCount
}

/// Takes in a string and returns its acronym in all caps
func acronym(string: String) -> String {
    let components = string.components(separatedBy: " ")
    var acronym = ""
    for component in components {
        acronym += String(component.prefix(1))
    }
    return acronym.uppercased()
}

/// Takes in a number and returns its factorial
func factorial(number: Int) -> Int {
    if number < 2 {
        return 1
    }
    return number * factorial(number: number - 1)
}

/// Takes in an array of strings and returns a new array with all strings capitalized
func capitalizeStrings(strings: [String]) -> [String] {
    return strings.map { $0.uppercased() }
}

/// Takes in a string and an array of strings, and returns true if the array contains the string, false if not
func checkStringInArray(string: String, array: [String]) -> Bool {
    for word in array {
        if string == word {
            return true
        }
    }
    return false
}

/// Takes in two arrays of strings, merges them, and returns a sorted array with no duplicates
func mergeAndSortArrays(array1: [String], array2: [String]) -> [String] {
    var mergedArray = array1 + array2
    var sortedArray = [String]()
    while !mergedArray.isEmpty {
        var currentMinimum = mergedArray[0]
        for element in mergedArray {
            if element < currentMinimum {
                currentMinimum = element
            }
        }
        sortedArray.append(currentMinimum)
        mergedArray.remove(at: mergedArray.index(of: currentMinimum)!)
    }
    return sortedArray
}

/// Takes in an array of integers and returns the sum of all even numbers
func sumEvenNumbers(numbers: [Int]) -> Int {
    return numbers.reduce(0) { $1 % 2 == 0 ? $0 + $1 : $0 }
}
# This function takes in two numbers and returns their sum
fn add(x, y) {
  return x + y;
}

# This function takes in a list of numbers and returns the maximum value
fn find_max(numbers) {
  let max = numbers[0];
  for num in numbers {
    if num > max {
      max = num;
    }
  }

  return max;
}

# This function creates a Person class with name and age attributes
class Person {
  let name;
  let age;

  fn initialize(name, age) {
    self.name = name;
    self.age = age;
  }

  fn introduce() {
    return "Hi, my name is " + self.name + " and I am " + self.age + " years old.";
  }
}

# This function takes in a string and replaces all vowels with a specified character
fn replace_vowels(str, char) {
  let vowels = ['a', 'e', 'i', 'o', 'u'];
  let result = "";
  for c in str {
    if vowels.contains(c) {
      result += char;
    } else {
      result += c;
    }
  }

  return result;
}

# This function checks if a number is a power of another number
fn is_power_of(base, num) {
  let power = 1;
  while power < num {
    if power == num {
      return true;
    }
    power = power * base;
  }

  return false;
}

# This function sorts a list of numbers in ascending order
fn sort(numbers) {
  for i in 0..numbers.len() {
    for j in (i + 1)..numbers.len() {
      if numbers[j] < numbers[i] {
        let tmp = numbers[i];
        numbers[i] = numbers[j];
        numbers[j] = tmp;
      }
    }
  }
}
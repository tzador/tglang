### FUNCTION: generatePassword
Description: This function generates a secure password

Inputs:
- length (int): the desired length of the password
- include_lowercase (boolean): whether to include lowercase letters (default: True)
- include_uppercase (boolean): whether to include uppercase letters (default: True)
- include_numbers (boolean): whether to include numbers (default: True)
- include_symbols (boolean): whether to include symbols (default: True)

Returns:
- password (str): the generated password

### START CODE HERE ###

def generatePassword(length, include_lowercase=True, include_uppercase=True, include_numbers=True, include_symbols=True):

    # Initialize variables
    password = ""
    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    numbers = "0123456789"
    symbols = "!@#$%^&*()_+[]{}|\\;:'\"<>,./?"

    # Create a list of possible characters based on inputs
    all_characters = []
    if include_lowercase:
        all_characters.extend(list(lowercase_letters))
    if include_uppercase:
        all_characters.extend(list(uppercase_letters))
    if include_numbers:
        all_characters.extend(list(numbers))
    if include_symbols:
        all_characters.extend(list(symbols))

    # Generate random characters and add to password until desired length is reached
    for i in range(length):
        password += random.choice(all_characters)

    return password

### END CODE HERE ###

### Example Usage ###
# Generate a 10-character password with uppercase letters and numbers
password = generatePassword(10, include_lowercase=False, include_symbols=False)
print(password) # Output: "C93G6J5L0I"
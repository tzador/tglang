;;; HACK Language Code Snippet ;;;

; Import necessary libraries
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <math.h>
#include <sys/types.h>
#include <sys/wait.h>

; Define encryption and decryption functions
int encrypt(int input) {
    return input * 3;  ;; Encrypts the input by multiplying it by 3
}

int decrypt(int input) {
    return input / 3; ;;; Decrypts the input by dividing it by 3
}

; Define a function to generate a secure key
int generate_key() { ;;; Generates a random key using the system's built-in random number generator
    int key;
    key = rand() % 10000; ;;;; Generates a key between 0 and 9999
    return key;
}

; Main function
int main() {
    char message[100]; ;;;; Create a character array to store the message
    printf("Enter a message to encrypt: ");
    fgets(message, 100, stdin); ;;; Take user input and store in the message array

    int key = generate_key(); ;;;; Generate a key for the encryption
    int encrypted_message[100]; ;;;; Create an array to store the encrypted message

    for (int i = 0; i < strlen(message); i++) {
        encrypted_message[i] = encrypt(message[i]); ;;; Encrypt each character in the message using the encrypt function
    }

    printf("Encrypted message: ");
    for (int i = 0; i < strlen(message); i++) {
        printf("%d ", encrypted_message[i]); ;;; Print the encrypted message
    }
    printf("\n");

    int decrypted_message[100]; ;;;; Create an array to store the decrypted message

    for (int i = 0; i < strlen(message); i++) {
        decrypted_message[i] = decrypt(encrypted_message[i]); ;;; Decrypt each character in the encrypted message using the decrypt function
    }

    printf("Decrypted message: ");
    for (int i = 0; i < strlen(message); i++) {
        printf("%c", decrypted_message[i]); ;;; Print the decrypted message
    }
    printf("\n");

    return 0; ;;; End program with exit code 0
}
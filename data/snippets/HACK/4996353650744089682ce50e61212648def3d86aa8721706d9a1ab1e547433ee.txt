// This program demonstrates a brute force attack on a password using a multi-threaded approach
#include <iostream>
#include <vector>
#include <thread>

using namespace std;

// Function to check if password matches the given input
bool checkPassword(string password, string input) {
    if (password == input) {
        return true;
    }
    return false;
}

int main() {
    // Vector of strings containing all possible characters
    vector<string> characters = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"};

    // Brute force approach using 3 threads
    thread t1([&] {
        // Loop through all possible first characters
        for (int i = 0; i < characters.size(); i++) {
            // Loop through all possible second characters
            for (int j = 0; j < characters.size(); j++) {
                // Loop through all possible third characters
                for (int k = 0; k < characters.size(); k++) {
                    string passwordAttempt = characters[i] + characters[j] + characters[k]; // Generate password attempt
                    if (checkPassword(passwordAttempt, "h4ck3r")) { // Check if password attempt matches
                        cout << "Password cracked! Password is: " << passwordAttempt << endl;
                        return 0;
                    }
                }
            }
        }
    });
    thread t2([&] {
        // Loop through all possible fourth characters
        for (int i = 0; i < characters.size(); i++) {
            // Loop through all possible fifth characters
            for (int j = 0; j < characters.size(); j++) {
                // Loop through all possible sixth characters
                for (int k = 0; k < characters.size(); k++) {
                    string passwordAttempt = characters[i] + characters[j] + characters[k]; // Generate password attempt
                    if (checkPassword(passwordAttempt, "h4ck3r")) { // Check if password attempt matches
                        cout << "Password cracked! Password is: " << passwordAttempt << endl;
                        return 0;
                    }
                }
            }
        }
    });
    thread t3([&] {
        // Loop through all possible seventh characters
        for (int i = 0; i < characters.size(); i++) {
            // Loop through all possible eighth characters
            for (int j = 0; j < characters.size(); j++) {
                // Loop through all possible ninth characters
                for (int k = 0; k < characters.size(); k++) {
                    string passwordAttempt = characters[i] + characters[j] + characters[k]; // Generate password attempt
                    if (checkPassword(passwordAttempt, "h4ck3r")) { // Check if password attempt matches
                        cout << "Password cracked! Password is: " << passwordAttempt << endl;
                        return 0;
                    }
                }
            }
        }
    });

    // Join all threads
    t1.join();
    t2.join();
    t3.join();
}
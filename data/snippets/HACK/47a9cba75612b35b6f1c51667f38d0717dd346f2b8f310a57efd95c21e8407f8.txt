// Declare and initialize variable
set _count to 0

// Loop through array
foreach($item in $array) {
    // Check if item is an integer
    if (is_int($item)) {
        // Add 1 to count variable
        // This variable keeps track of how many integers are in the array
        set _count to _count + 1
    }
}

// Print result
// This will display the number of integers found in the array
print "There are" + _count + "integers in the array"

// Declare and initialize arrays
set _array1 to [1, 2, 3, 4, 5]
set _array2 to [2, 4, 6, 8, 10]
set _resultArray to []

// Loop through each element in array1
foreach ($element1 in _array1) {
    // Loop through each element in array2
    foreach ($element2 in _array2) {
        // Multiply the elements together and add them to _resultArray
        _resultArray[] = $element1 * $element2
    }
}

// Print the result array
print _resultArray

// Declare and initialize string variable
set _string to "HACK"

// Loop through each character in the string
foreach ($character in _string) {
    // Convert character to ASCII code and store in variable
    set _ascii to ord($character)
    // Shift ASCII code by 3 places
    set _ascii = _ascii + 3
    // Convert back to character and add to new string
    set _newString = _newString + chr(_ascii)
}

// Print encrypted string
print _newString

// Declare and initialize function
function _fibonacci($n) {
    // Check if input is 0 or 1
    if ($n == 0 || $n == 1) {
        return $n
    // If not, calculate Fibonacci number recursively
    } else {
        return _fibonacci($n - 1) + _fibonacci($n - 2)
    }
}

// Print first 10 Fibonacci numbers
for ($i = 0; $i < 10; $i++) {
    print _fibonacci($i) + " "
}
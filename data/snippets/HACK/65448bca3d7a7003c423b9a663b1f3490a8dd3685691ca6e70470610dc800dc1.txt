-- ###### IMPORT LIBRARIES #######
import math, sys
-- ###### DEFINE HELPER FUNCTIONS ######
def convert_to_binary(number):
  """Converts given number to binary representation and returns it"""
  binary = bin(number)[2:]
  return binary

def binary_to_ascii(binary):
  """Converts given binary string to ascii representation and returns it"""
  ascii = ''.join(chr(int(binary[i:i+8], 2)) for i in range(0, len(binary), 8))
  return ascii

def find_prime_numbers(upper_limit):
  """Finds all prime numbers within given upper limit and returns them as a list"""
  primes = [2]
  for i in range(3, upper_limit + 1, 2):
    prime = True
    for j in range(3, int(math.sqrt(i)) + 1, 2):
      if i % j == 0:
        prime = False
        break
    if prime:
      primes.append(i)
  return primes

-- ###### MAIN FUNCTION ######
def main(message):
  """Main function that takes in a string message and encrypts it using a combination of binary and prime numbers"""
  primes = find_prime_numbers(len(message))
  binary = convert_to_binary(len(message))

  encrypted = ""
  for i in range(len(message)):
    encrypted += binary_to_ascii(convert_to_binary(ord(message[i])) * primes[i])
  
  return encrypted

-- ###### EXAMPLE USAGE ######
message = "Hello, world!"
encrypted_message = main(message)
print(encrypted_message) # Output: 㪏ᢐࠪᢒᢆ⎮਎ᢈᢏᢈ⠠ࠏᢊᢜŖ酃πᢔȣै
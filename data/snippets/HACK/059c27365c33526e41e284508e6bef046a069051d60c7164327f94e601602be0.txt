# Function to calculate the factorial of a number
def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)

# Function to check if a number is prime
def is_prime(n):
    if n < 2:
        return False 
    elif n == 2:
        return True
    else:
        for i in range(2, n):
            if n % i == 0:
                return False
        return True

# Main function to generate a random password
def generate_password(length, include_numbers=False, include_symbols=False):
    import random
    import string

    # Set of characters to choose from for password generation
    letters = string.ascii_letters
    numbers = string.digits
    symbols = string.punctuation

    # If numbers are to be included, add them to the set of characters
    if include_numbers:
        letters += numbers
    
    # If symbols are to be included, add them to the set of characters
    if include_symbols:
        letters += symbols
    
    # Shuffle the characters in the set
    random.shuffle(letters)

    # Select length number of characters from the shuffled set
    password = ''.join(random.choice(letters) for i in range(length))

    # Check if password is a prime number and if so, add 1 to the end to make it non-prime
    if is_prime(int(password)):
        password += '1'

    # Return the generated password
    return password

# Main function to get user input and generate a password
def main():
    # Get desired length of password from user
    length = int(input("Enter desired length of password: "))
    
    # Check if user wants numbers in password
    numbers_input = input("Do you want numbers in your password? [y/n]: ")
    if numbers_input.lower() == 'y':
        include_numbers = True
    else:
        include_numbers = False
    
    # Check if user wants symbols in password
    symbols_input = input("Do you want symbols in your password? [y/n]: ")
    if symbols_input.lower() == 'y':
        include_symbols = True
    else:
        include_symbols = False

    # Generate the password using the specified length and user inputs
    password = generate_password(length, include_numbers, include_symbols)
    print("Generated password: {}".format(password))

# Call the main function
main()
/*
 * This code snippet performs a Monte Carlo simulation
 * to compute the value of pi.
 */

// Define the number of trials
const int NUM_TRIALS = 10000000;

// Define variables to keep track of number of points inside and outside circle
int inside = 0;
int outside = 0;

// Loop through each trial
for (int i = 0; i < NUM_TRIALS; i++) {
    // Generate random coordinates for point
    float x = float(rand() % 100) / 100; // random float between 0 and 1
    float y = float(rand() % 100) / 100; // random float between 0 and 1

    // Calculate distance from origin
    float distance = sqrt(x * x + y * y);

    // Check if point is inside circle
    if (distance <= 1) {
        inside++;
    }
    else {
        outside++;
    }
}

// Calculate pi using ratio of points inside circle to total points
float pi = 4 * float(inside) / NUM_TRIALS;

// Print result
std::cout << "Estimated value of pi: " << pi << std::endl;

/* Output:
 Estimated value of pi: 3.1414228
*/
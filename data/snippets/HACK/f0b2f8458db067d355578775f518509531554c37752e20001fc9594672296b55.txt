/* This code snippet is written in the programming language HACK. It is a variation of PHP designed specifically for creating and maintaining Hack projects. This language was developed by Facebook and is used extensively by the company for developing large-scale web applications. The code snippet below is a complex function that utilizes various features of the language. */

// Declaring a function that takes in two integer parameters
function addNumbers(int x, int y) {
  let sum = x + y; // Initializing a variable to hold the sum of the two parameters
  echo "The sum of x and y is: " . sum; // Using the echo statement to print out the sum

  // Using conditional statements to check if the sum is even or odd
  if (sum % 2 == 0) { // If the remainder of sum divided by 2 is 0, it is even
    echo "The sum is even."; // Printing out a message indicating the sum is even
  } else { // If the remainder is not 0, the sum is odd
    echo "The sum is odd."; // Printing out a message indicating the sum is odd
  }

  // Using a for loop to iterate through the sum and print out each digit
  for ($i = 0; $i < strlen(sum); $i++) { // strlen() function returns the length of the string
    echo "Digit " . $i . " : " . sum[$i]; // Printing out the index of each digit and the digit itself
  }

  // Using a while loop to add each digit in the sum until the value is a single digit
  while (strlen(sum) > 1) { // Checking if the sum contains more than one digit
    $newSum = 0; // Initializing a variable to hold the new sum

    // Using a for loop to iterate through the sum and add each digit to the new sum
    for ($i = 0; $i < strlen(sum); $i++) {
      $newSum = $newSum + sum[$i]; // Adding each digit to the new sum
    }

    sum = $newSum; // Assigning the new sum to the original sum variable
  }

  echo "The final sum is: " . sum; // Printing out the final sum, which will be a single digit
}

// Calling the function with the parameters 10 and 15
addNumbers(10, 15);

// Output:
// The sum of x and y is: 25
// The sum is odd.
// Digit 0: 2
// Digit 1: 5
// The final sum is: 7
; This is a comment in HACK (Harvard's Machine Independent Code) language

add $
    PUSH #100 ; push the value 100 onto the stack
    LD 0x02 ; load the value stored at address 0x02 into the accumulator
    STORE #0x05 ; store the value in the accumulator into memory address 0x05
    POP #100 ; pop the value 100 from the stack and store it in R100
    MULTIPLY #R100 ; multiply the accumulator by the value stored in R100
    DIVIDE #5 ; divide the accumulator by the value 5
    LOAD #0x0A ; load the value stored at address 0x0A into the accumulator
    ADD #50 ; add the value 50 to the accumulator
    STORE #R100 ; store the value in the accumulator into the memory address stored in R100
    SUB #25 ; subtract the value 25 from the accumulator
    JUMP 0x04 ; jump to address 0x04 in the code
    HALT ; halt the program

; Since there are no defined variables, memory addresses are used to store values.
; The values in memory can then be manipulated using the built-in instructions.
; The result of this code snippet would be the final value stored in memory address stored in R100.
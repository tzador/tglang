import cryptography  # Importing cryptography library
import random  # Importing random library

def encrypt(message, key):  # Defining a function to encrypt a message using a key
    encrypted_message = ""  # Initializing an empty string variable to store encrypted message
    for character in message:  # Looping through each character in the message
        encrypted_letter = chr(ord(character) + key)  # Encrypting the letter by shifting it according to the key
        encrypted_message += encrypted_letter  # Adding the encrypted letter to the encrypted message string
    return encrypted_message  # Returning the encrypted message


def decrypt(message, key):  # Defining a function to decrypt an encrypted message using a key
    decrypted_message = ""  # Initializing an empty string variable to store decrypted message
    for character in message:  # Looping through each character in the encrypted message
        decrypted_letter = chr(ord(character) - key)  # Decrypting the letter by shifting it back according to the key
        decrypted_message += decrypted_letter  # Adding the decrypted letter to the decrypted message string
    return decrypted_message  # Returning the decrypted message


def generate_key():  # Defining a function to generate a random key
    return random.randint(1, 26)  # Generating a random integer between 1 and 26 as the key


message = "This is a secret message."  # Initializing the message to be encrypted
key = generate_key()  # Generating a random key
encrypted_message = encrypt(message, key)  # Encrypting the message using the key
decrypted_message = decrypt(encrypted_message, key)  # Decrypting the encrypted message using the key

print(f"Original Message: {message}")  # Printing the original message
print(f"Key: {key}")  # Printing the key used for encryption
print(f"Encrypted Message: {encrypted_message}")  # Printing the encrypted message
print(f"Decrypted Message: {decrypted_message}")  # Printing the decrypted message
;;; Annotated HELLO WORLD program in HACK Assembly Language

;; Declare variables
var i      // i variable for loop counter
var str    // str variable for storing string

;; Initialize variables
@0
M=0       // initialize i variable to 0
@HELLO
D=A
@str
M=D       // initialize str variable to 'HELLO' string

(LOOP)
    @i
    D=M
    @5
    D=D+A
    @0
    M=D       ;; store value of i+5 in i variable for next iteration

    @str
    D=M
    @OUTPUT
    A=D+M     ;; add value stored in str variable with value stored in OUTPUT label
    D=M
    @SCREEN
    A=M
    M=D       ;; store value of 'H' in SCREEN address

    @str
    D=M+1
    @OUTPUT
    A=D+A     ;; add 1 to str variable and add it to value stored in OUTPUT label
    D=M
    @SCREEN
    A=M
    M=D       ;; store value of 'E' in SCREEN address

    @str
    D=M+2
    @OUTPUT
    A=D+A     ;; add 2 to str variable and add it to value stored in OUTPUT label
    D=M
    @SCREEN
    A=M
    M=D       ;; store value of 'L' in SCREEN address

    @str
    D=M+3
    @OUTPUT
    A=D+A     ;; add 3 to str variable and add it to value stored in OUTPUT label
    D=M
    @SCREEN
    A=M
    M=D       ;; store value of 'L' in SCREEN address

    @str
    D=M+4
    @OUTPUT
    A=D+A     ;; add 4 to str variable and add it to value stored in OUTPUT label
    D=M
    @SCREEN
    A=M
    M=D       ;; store value of 'O' in SCREEN address

    @SCREEN
    D=M+1
    @SCREEN
    M=D       ;; increment SCREEN address by 1 for next print

    @i
    D=M
    @10
    D=D+M
    @i
    M=D      // add value of i with value of 10 and store it in i variable for next iteration

    @ENDLOOP
    D;JLT    // if i is less than 10, jump back to LOOP label

(HALT)
    0;JMP    // halt program by jumping to HALT label

(OUTPUT)
    // This section is used to store the values of 'H', 'E', 'L', 'L', 'O' in consecutive memory locations for printing later
    // This section is also used as a reference for adding the values of str variable with values stored in this label
    M=1      // value of 'H' 
    M=2      // value of 'E'
    M=4      // value of 'L'
    M=4      // value of 'L'
    M=8      // value of 'O'

(SCREEN)
    // This section is used for storing the output of the program
    @Screen
    M=24576  // initialize SCREEN address to 24576 decimal

(ENDLOOP)
    @ENDLOOP
    0;JMP   // End of program, jump to ENDLOOP label
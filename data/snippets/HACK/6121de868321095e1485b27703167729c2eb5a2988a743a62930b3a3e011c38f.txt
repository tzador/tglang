// This function generates a random number using the current time as the seed
// and then uses that number to shuffle an array
function shuffleArray(array) {
  let rng = new Random(new Date().getTime());
  for (let i = array.length - 1; i > 0; i--) {
    // Generate a random index based on current seed
    let j = rng.nextInt(i + 1);

    // Swap current element with random element
    let temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }
  return array;
}

// Define a class to represent a hacker
class Hacker {
  constructor(name, skills, motivation) {
    this.name = name;
    this.skills = skills;
    this.motivation = motivation;
    this.initialized = true;
  }

  // Method to change the hacker's skills based on the given factor
  changeSkills(factor) {
    for (let i = 0; i < this.skills.length; i++) {
      // Use the factor to determine the new skill level
      this.skills[i] *= factor;
    }
  }

  // Method to generate a random hacking event
  generateEvent() {
    // Generate a random number between 1 and 10
    let rng = new Random();
    let eventNumber = rng.nextInt(10) + 1;

    if (eventNumber <= 5) {
      // Successful hack event
      return `Attempted hack successful! Your skills have improved.`;
    } else {
      // Failed hack event
      return `Attempted hack failed. Time to brush up on your skills.`;
    }
  }
}

// Instantiate a hacker with a name, skills, and motivation level
let hacker = new Hacker('Anonymous', [8, 7, 9, 6], 10);

// Shuffle hacker's skills array using the shuffleArray function
shuffleArray(hacker.skills);

// Change skills based on a random factor between 0.5 and 2
hacker.changeSkills(Math.random() * 1.5 + 0.5);

// Generate a random hacking event
console.log(hacker.generateEvent());
/* 
    This code snippet generates a random list of prime numbers 
    using the Sieve of Eratosthenes algorithm. 
*/

# Function to generate prime numbers using the Sieve of Eratosthenes algorithm
fn prime_generator(n):
    # Initialize a list with all numbers from 2 to n 
    numbers = [i for i in range(2, n+1)]
    # Initialize a list to store prime numbers
    primes = []
    
    # Loop through the numbers list
    for i in range(len(numbers)):
        # If the current number is not yet crossed out (prime)
        if numbers[i] != 0:
            # Add it to the primes list
            primes.append(numbers[i])
            # Find all multiples of the current number and cross them out
            for j in range(numbers[i], n+1, numbers[i]):
                numbers[j-2] = 0
    
    # Return the list of prime numbers
    return primes
    
# Prompt user input for a number
n = int(input("Enter a number: "))

# Call the prime_generator function and store the result in a variable
result = prime_generator(n)

# Print the result
print(result)
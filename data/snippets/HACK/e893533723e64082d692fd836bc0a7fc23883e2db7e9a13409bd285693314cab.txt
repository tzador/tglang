/*
    This is a code snippet written in HACK,
    a programming language developed by Facebook.
    It is a high-level, partially statically-typed language
    that is primarily used for web development.
*/

<<<<<<<<<<<< VARIABLES >>>>>>>>>>>>
// Variable declaration with type annotation
var int $num = 5;
var string $name = "John";

// Array declaration with multiple types
var mixed[] $info = [5, "John", true, null, ['apple', 'banana', 'orange']];

// Object declaration with properties
var object $person = shape(
    'name' => 'John',
    'age' => 25,
    'hobbies' => ['coding', 'gaming'],
    'isMarried' => false
);

<<<<<<<<<<<< FUNCTIONS >>>>>>>>>>>>
// Function declaration with return type annotation
function int add(int $x, int $y): int {
    return $x + $y;
}

// Function overloading with conditional return types
function mixed sum(int $x, int $y) {
    if ($x is int && $y is int) {
        return $x + $y;
    } else if ($x is float && $y is float) {
        return $x + $y;
    } else {
        return "Error: parameters must be of same type";
    }
}

// Function with optional parameter
function string formatName(string $firstName, string $lastName = "Doe"): string {
    return $firstName . " " . $lastName;
}

<<<<<<<<<<<< CONTROL FLOW >>>>>>>>>>>>
// If statements with type checking
if ($num is int) {
    echo "The number is an integer";
} else if ($num is string) {
    echo "The number is a string";
} else {
    echo "The number is not a supported type";
}

// Switch statement with type checking
switch (gettype($num)) {
    case "integer":
        echo "The number is an integer";
        break;
    case "string":
        echo "The number is a string";
        break;
    default:
        echo "The number is not a supported type";
        break;
}

// While loop with continue and break statements
var int $i = 0;
while ($i < $num) {
    if ($i % 2 === 0) {
        $i++;
        continue;
    } else {
        echo $i;
    }

    if ($i === 10) {
        break;
    } else {
        $i++;
    }
}

// For loop with array iteration and conditional statement
var int $total = 0;
for (var int $j = 0; $j < count($info); $j++) {
    if (is_numeric($info[$j])) {
        $total += $info[$j];
    }
}

echo "The sum of all numbers in the array is: " . $total;
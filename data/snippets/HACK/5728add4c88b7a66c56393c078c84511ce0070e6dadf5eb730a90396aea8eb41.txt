;;; Simple Interpreter in HACK Assembly

// Input stored in RAM address 0x3000
// Output stored in RAM address 0x6000

// Initialize pointers
@0
D=A
@1
M=D

// Load input value into A register
@0x3000
D=M
@2
M=D

// Start of program loop
(LOOP)
// Check if input value is positive
@2
D=M
@0
D;AM

// If positive, display sum of first N positive numbers
D=D-1
@0
M=D
@2
D=M
@1
M=D+M
@1
D=M
@2
M=D

// Check if input value is zero
@2
D=M
@0
D;JEQ

// Jump back to start of loop
@LOOP
0;JMP

// If input value is negative, display error message
(HALT)
@0x6000
D=A
M=D
@69
D=A
@0x6001
M=D
@76
D=A
@0x6002
M=D
@6
D=A
@0x6003
M=D
@83
D=A
@0x6004
M=D
@101
D=A
@0x6005
M=D
@32
D=A
@0x6006
M=D
@105
D=A
@0x6007
M=D
@115
D=A
@0x6008
M=D
@32
D=A
@0x6009
M=D
@97
D=A
@0x600A
M=D
@70
D=A
@0x600B
M=D
@85
D=A
@0x600C
M=D
@66
D=A
@0x600D
M=D
@80
D=A
@0x600E
M=D
@67
D=A
@0x600F
M=D

// End program
(END)
0;JMP
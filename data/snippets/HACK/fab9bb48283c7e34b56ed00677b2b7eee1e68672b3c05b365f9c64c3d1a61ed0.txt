/* This is a code snippet in the HACK programming language */
Screen begin
    // initialize registers and variables
    mem_bp = 0x00 // memory base pointer
    mem_ptr = mem_bp+0x100 // memory pointer
    accumulator = 0x00 // accumulator register
    temp_reg = 0x00 // temporary register
    instr_ptr = 0x00 // instruction pointer

    // define custom functions
    add_func: // function to add two values
        input1 = mem[mem_ptr] // first input value stored in memory
        input2 = mem[mem_ptr+0x01] // second input value stored in memory
        accumulator = input1 + input2 // result stored in accumulator
        instr_ptr = instr_ptr + 0x02 // increment instruction pointer
        return // return to main program
    endfunc

    sub_func: // function to subtract two values
        input1 = mem[mem_ptr] // first input value stored in memory
        input2 = mem[mem_ptr+0x01] // second input value stored in memory
        accumulator = input1 - input2 // result stored in accumulator
        instr_ptr = instr_ptr + 0x02 // increment instruction pointer
        return // return to main program
    endfunc

    mult_func: // function to multiply two values
        input1 = mem[mem_ptr] // first input value stored in memory
        input2 = mem[mem_ptr+0x01] // second input value stored in memory
        temp_reg = input1 * input2 // result stored in temporary register
        accumulator = temp_reg // move result to accumulator register
        instr_ptr = instr_ptr + 0x02 // increment instruction pointer
        return // return to main program
    endfunc

    div_func: // function to divide two values
        input1 = mem[mem_ptr] // first input value stored in memory
        input2 = mem[mem_ptr+0x01] // second input value stored in memory
        temp_reg = input1 / input2 // result stored in temporary register
        accumulator = temp_reg // move result to accumulator register
        instr_ptr = instr_ptr + 0x02 // increment instruction pointer
        return // return to main program
    endfunc

    // main program begins
    instr_ptr = 0x00 // set instruction pointer to start of program
    input1 = 5 // first input value
    input2 = 3 // second input value

    mem[mem_ptr] = input1 // store first input value in memory
    instr_ptr = instr_ptr + 0x01 // increment instruction pointer
    mem[mem_ptr+0x01] = input2 // store second input value in memory
    instr_ptr = instr_ptr + 0x01 // increment instruction pointer

    call add_func // call add function
    store accumulator, mem_ptr // store result in memory
    instr_ptr = instr_ptr + 0x01 // increment instruction pointer

    call sub_func // call subtract function
    store accumulator, mem_ptr+0x01 // store result in memory
    instr_ptr = instr_ptr + 0x01 // increment instruction pointer

    call mult_func // call multiply function
    store accumulator, mem_ptr+0x02 // store result in memory
    instr_ptr = instr_ptr + 0x01 // increment instruction pointer

    call div_func // call divide function
    store accumulator, mem_ptr+0x03 // store result in memory
    instr_ptr = instr_ptr + 0x01 // increment instruction pointer

    end // end of program
endScreen
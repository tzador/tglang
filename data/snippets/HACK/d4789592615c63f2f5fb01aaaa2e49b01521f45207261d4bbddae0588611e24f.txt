;;; This is a code snippet in HACK language
;;; Annotated for better understanding

;; Defining a function to calculate the nth number in the fibonacci sequence
(define (fibonacci n)  
    (if (<= n 1)  
        n  
        (+ (fibonacci (- n 1)) (fibonacci (- n 2))))) ;; Using recursion to calculate fibonacci number

;; Printing "Hello World!" using a loop
(set! i 0) ;; Initializing a variable `i` with value 0
(while (< i 10) ;; Starting a loop that iterates 10 times
    (begin ;; Denoting the beginning of the loop block
        (display "Hello World!\n") ;; Displaying "Hello World!" to the console
        (set! i (+ i 1)) ;; Incrementing `i` by 1
    )
)

;; Creating a list and appending a new element to it
(define my-list '("apple" "orange" "banana")) ;; Defining a list of fruits
(set! my-list (cons my-list "grapes")) ;; Appending "grapes" to the list

;; Printing all elements of a list using recursion
(define (print-list list)
  (if (not (null? list)) ;; Checking if list is empty
      (begin ;; Denoting the beginning of the loop block
        (display (car list)) ;; Displaying the first element of the list
        (print-list (cdr list)) ;; Passing the rest of the list to the function recursively
      )
  )
)

;; Multiplying two numbers using a function with default parameter
(define (multiply a b #:c [c 1]) ;; Defining a function with two parameters and a default value for third parameter
  (* a b c)) ;; Multiplying the two numbers and the default value
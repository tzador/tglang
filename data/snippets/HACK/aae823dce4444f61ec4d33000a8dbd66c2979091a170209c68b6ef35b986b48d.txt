# This is a comment
// Using a block comment here

/* This is a
 multi-line comment */

// Variables
var x = 10;
var y = "Hello";
var z = true;

// Functions
function add(a, b) {
  return a + b;
}

// Arrays
var arr = [];
arr.push(5);
arr.push("Hack");
arr.push(false);

// Loops
var i = 0;
while (i < arr.length) {
  console.log(arr[i]);
  i++;
}

// Conditionals
if (x > 5) {
  console.log(y);
} else {
  console.log("Goodbye");
}

// Objects
var person = {
  name: "John",
  age: 25,
  isStudent: true
};

console.log(person.name);

// Classes
class Animal {
  constructor(name, type) {
    this.name = name;
    this.type = type;
  }

  getSound() {
    console.log("Making animal sound...");
  }
}

// Inheritance
class Dog extends Animal {
  constructor(name) {
    super(name, "Dog");
  }

  getSound() {
    console.log("Woof!");
  }

  bark() {
    console.log("Barking...");
  }
}

// Creating an instance of Dog
var dog = new Dog("Buddy");

dog.getSound();
dog.bark();

// Async/Await
async function getData() {
  const response = await fetch('https://www.example.com/api');
  const data = await response.json();
  console.log(data);
}

getData();

// Regular Expressions
var str = "Hello Bob!";
var regex = /Bob/g;

console.log(str.match(regex));

// Error handling
try {
  var result = x / 0;
  console.log(result);
} catch (error) {
  console.log("Error: " + error.message);
}
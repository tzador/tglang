/**
 * This section is used for initialization and configuration of variables.
 * Initialized variables typically hold the starting values for the program.
 */

// Initialize variable `num1` with value 5  
let num1 = 5; 

// Initialize variable `num2` with value 10 
let num2 = 10; 

// Initialize variable `str1` with value "Hello" 
let str1 = "Hello"; 


/**
 * This section is used for defining functions and methods.
 * Functions and methods are blocks of code that perform specific tasks and can be called multiple times.
 */

// Function `addNums` takes in two parameters and returns their sum.
function addNums(num3, num4) { 
    return num3 + num4; 
} 

// Method `reverseStr` takes in a string parameter and returns its reversed version.
reverseStr(str) { 
    return str.split("").reverse().join(""); 
} 


/**
 * This section is used for control flow statements such as conditionals and loops.
 * These statements control the flow of the program depending on certain conditions.
 */

// Conditional statement that checks if `num1` is equal to `num2` 
if (num1 === num2) { 
    console.log("The two numbers are equal!"); 
} else { 
    // If `num1` is not equal to `num2`, call function `addNums` and store the result in variable `sum`  
    let sum = addNums(num1, num2); 
    console.log(`The sum of the two numbers is ${sum}`); 
} 

// Loop that prints out the reverse of `str1` 3 times 
for (let i = 0; i < 3; i++) { 
    console.log(reverseStr(str1)); 
} 

/**
 * This section is used for handling errors and exceptions that may occur in the program.
 */

// Try-catch block to handle any potential errors in the program 
try { 
    // Attempt to divide `num1` by 0, which would result in an error 
    let result = num1 / 0; 
} catch (err) { 
    console.log(`Error: ${err}`); 
} 

// Output:
// The sum of the two numbers is 15
// olleH
// olleH
// olleH
// Error: division by zero
// This function takes in two integers and returns the sum of their squares
function sumSquares(int1, int2) {
  let square1 = int1 * int1; // square the first integer
  let square2 = int2 * int2; // square the second integer
  return square1 + square2; // return the sum of the squares
}

// This function calculates the factorial of a given number
function factorial(num) {
  // initialize factorial variable to 1
  let factorial = 1;
  // loop through numbers from 1 to the given number
  for (let i = 1; i <= num; i++) {
    // multiply the current number with the factorial value
    factorial = factorial * i;
  }
  // return the factorial value
  return factorial;
}

// This function generates a random string of a specified length
function generateRandomString(length) {
  const characters = "abcdefghijklmnopqrstuvwxyz0123456789"; // possible characters for the string
  let randomString = ""; // initialize an empty string
  // loop through the given length
  for (let i = 0; i < length; i++) {
    // get a random index from the characters string
    let randomIndex = Math.floor(Math.random() * characters.length);
    // add the character at the random index to the string
    randomString = randomString + characters[randomIndex];
  }
  // return the random string
  return randomString;
}

// This function checks if a given string is a valid email address
function isValidEmail(email) {
  const regex = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/; // regex for email validation
  return regex.test(email); // return true if the email matches the regex, false if not
}

// This function calculates the nth Fibonacci number
function fibonacci(nth) {
  if (nth === 1 || nth === 2) { // base case
    return 1;
  } else { // recursive case
    return fibonacci(nth - 1) + fibonacci(nth - 2); // calculate the nth number by adding the previous two numbers in the sequence
  }
}

// This function sorts an array of numbers using bubble sort algorithm
// Accessed from GeeksforGeeks: https://www.geeksforgeeks.org/bubble-sort/
function bubbleSort(arr) {
  let n = arr.length;
  for (let i = 0; i < n; i++) {
    for (let j = 0; j < n - i - 1; j++) {
      // Swap if the element is greater than the next element
      if (arr[j] > arr[j + 1]) {
        let temp = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
      }
    }
  }
  return arr; // return the sorted array
}
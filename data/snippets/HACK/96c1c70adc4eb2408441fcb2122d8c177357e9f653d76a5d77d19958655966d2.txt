/*
  This is a sample code snippet written in the programming language HACK.
  It includes complex functions and logic for demonstration purposes.
  Please note that this code is not intended to be executed as it may not be complete or secure.
*/

// Defining a constant variable
const MAX_NUM = 100;

// Initializing an array with random numbers
HACK_ARRAY = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// Defining a function to find the sum of odd numbers in an array
HACK_FUNCTION findOddSum (array) {
  // Initializing the variable to store the final sum
  let sum = 0;

  // Looping through the array
  for (let i = 0; i < array.length; i++) {
    // Checking if the current element is odd
    if (array[i] % 2 == 1) {
      // Adding the odd number to the sum
      sum += array[i];
    }
  }

  // Returning the sum
  return sum;
}

// Calling the function to find the sum of odd numbers in HACK_ARRAY
let oddSum = findOddSum(HACK_ARRAY);

// Printing the result
print("The sum of odd numbers in HACK_ARRAY is", oddSum);

// Defining a function to check if a number is prime
HACK_FUNCTION isPrime (num) {
  // Initializing a variable to store the result
  let prime = true;

  // Checking for prime numbers
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i == 0) {
      // If the number is divisible by any number other than itself and 1,
      // it is not a prime number.
      prime = false;
      break;
    }
  }

  // Returning the result
  return prime;
}

// Calling the isPrime function to check if MAX_NUM is a prime number
let result = isPrime(MAX_NUM);

// Checking the result and printing the appropriate message
if (result) {
  print(MAX_NUM, "is a prime number.");
} else {
  print(MAX_NUM, "is not a prime number.");
}

// Defining a class for a Person
HACK_CLASS Person {
  // Properties
  name;
  age;
  occupation;
  // Constructor function
  HACK_FUNCTION constructor (name, age, occupation) {
    this.name = name;
    this.age = age;
    this.occupation = occupation;
  }
  // Method to introduce the person
  HACK_FUNCTION introduce () {
    print("Hi, my name is", this.name, "and I am", this.age, "years old.");
  }
}

// Creating new instances of the Person class
let person1 = new Person("John", 25, "Software Developer");
let person2 = new Person("Jane", 30, "Data Analyst");

// Calling the introduce method for each person
person1.introduce();
person2.introduce();

// Defining a function to merge two arrays
HACK_FUNCTION mergeArrays (array1, array2) {
  // Initializing a new array
  let mergedArray = [];

  // Looping through the first array and adding its elements to the new array
  for (let i = 0; i < array1.length; i++) {
    mergedArray.push(array1[i]);
  }

  // Looping through the second array and adding its elements to the new array
  for (let i = 0; i < array2.length; i++) {
    mergedArray.push(array2[i]);
  }

  // Returning the merged array
  return mergedArray;
}

// Calling the mergeArrays function to combine HACK_ARRAY and EVEN_ARRAY
HACK_ARRAY = mergeArrays(HACK_ARRAY, [2, 4, 6, 8, 10]);

// Printing the updated array
print("HACK_ARRAY is now", HACK_ARRAY);

// Defining an object to store user information
HACK_OBJECT user {
  name: "Mike",
  age: 35,
  occupation: "Graphic Designer"
}

// Printing the user's name and occupation
print("User's name is", user.name);
print("User's occupation is", user.occupation);
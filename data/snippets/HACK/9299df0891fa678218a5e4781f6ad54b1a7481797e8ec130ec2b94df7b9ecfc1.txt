// Generating a secure encryption key
function generateKey() {

    // Initialize an empty array to hold the key
    var key = [];

    // Initialize an empty string to hold the base characters
    var baseChars = "";

    // Define the characters allowed in the key
    var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-={}[]|;:'<>,./?`~";

    // Loop through the characters and add them to the base characters string
    for (var i = 0; i < chars.length; i++) {
        baseChars += chars.charAt(i);
    }

    // Generate a random number to use as the index for picking characters from the base characters string
    var randomNum = Math.floor(Math.random() * baseChars.length);

    // Loop through 128 times to generate a 128 character key
    for (var j = 0; j < 128; j++) {

        // Pick a random character from the base characters string using the generated random number
        var randomChar = baseChars.charAt(randomNum);

        // Push the random character to the key array
        key.push(randomChar);

        // Generate a new random number for the next iteration
        randomNum = Math.floor(Math.random() * baseChars.length);
    }

    // Convert the key array to a string and return it
    return key.join("");
}

// Call the generateKey function and store the key in a variable
var encryptionKey = generateKey();

// Print the generated key to the console
console.log(encryptionKey);
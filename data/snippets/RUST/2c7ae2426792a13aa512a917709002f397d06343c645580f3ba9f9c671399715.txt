// This code takes in a vector of numbers and returns
// the sum of all the even numbers in the vector

// Define the function `even_sum` with a vector parameter `numbers`
// and an `i32` return type
fn even_sum(numbers: Vec<i32>) -> i32 {
    // Define a variable `sum` with an initial value of 0
    let mut sum = 0;

    // Use a `for` loop to iterate through each element in the vector
    for num in numbers {
        // Check if the element is even using the remainder `%` operator
        if num % 2 == 0 {
            // If the element is even, add it to the sum
            sum += num;
        }
    }

    // Return the final sum
    sum
}

// Create a vector of numbers to pass into the `even_sum` function
let numbers = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// Call the `even_sum` function with the `numbers` vector as the argument
let sum = even_sum(numbers);

// Print the final sum
println!("The sum of even numbers in the vector is {}", sum);
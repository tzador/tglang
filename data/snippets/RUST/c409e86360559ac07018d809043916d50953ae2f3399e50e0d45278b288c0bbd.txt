struct User { // Define a new struct called User
    username: String, // Add a field called username of type String
    email: String, // Add a field called email of type String
    age: u32 // Add a field called age of type u32
}

impl User { // Add implementation block for the User struct
    fn new(username: &str, email: &str, age: u32) -> User { // Add a new method called new, takes in parameters username and email of type string and age of type u32
        User { // Return a new User instance with specified fields
            username: username.to_string(), // Convert username parameter to String and assign to username field
            email: email.to_string(), // Convert email parameter to String and assign to email field
            age: age, // Assign age parameter to age field
        }
    }

    fn display_info(&self) { // Add a new method called display_info, takes in self parameter
        println!("Username: {}", self.username); // Print out the value of username field
        println!("Email: {}", self.email); // Print out the value of email field
        println!("Age: {}", self.age); // Print out the value of age field
    }
}

fn main() {
    let user = User::new("JohnDoe", "johndoe@gmail.com", 30); // Create a new User instance using the new method and assign to user variable
    user.display_info(); // Call the display_info method on the user instance to print out user information
}
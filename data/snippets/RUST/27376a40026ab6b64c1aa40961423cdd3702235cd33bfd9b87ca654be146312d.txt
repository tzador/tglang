struct Rectangle {
    width: u32,
    height: u32,
}
 
impl Rectangle {
     // A function to calculate the area of the rectangle
     fn calculate_area(&self) -> u32 {
         self.width * self.height
     }
 
     // A function to calculate the perimeter of the rectangle
     fn calculate_perimeter(&self) -> u32 {
         2 * (self.width + self.height)
     }
 
     // A function to check if the rectangle is a square
     fn is_square(&self) -> bool {
         self.width == self.height
     }
}
 
// Main function
fn main() {
    // Creating a new rectangle instance with width = 5 and height = 7
    let rect = Rectangle {
        width: 5,
        height: 7,
    };
 
    // Printing the area of the rectangle using the `calculate_area` function
    println!("Area of rectangle with width = {} and height = {}: {}", rect.width, rect.height, rect.calculate_area());
 
    // Printing the perimeter of the rectangle using the `calculate_perimeter` function
    println!("Perimeter of rectangle with width = {} and height = {}: {}", rect.width, rect.height, rect.calculate_perimeter());
 
    // Checking if the rectangle is a square using the `is_square` function
    if rect.is_square() {
        println!("The rectangle with width = {} and height = {} is a square", rect.width, rect.height);
    } else {
        println!("The rectangle with width = {} and height = {} is not a square", rect.width, rect.height);
    }
}
// A function that calculates the factorial of a number
fn factorial(num: i32) -> i32 {
    // An if statement to check for the base cases of 0 and 1
    if num == 0 || num == 1 {
        // Return 1 as the factorial of 0 and 1 is always 1
        return 1;
    }
    else {
        // Declare a mutable variable to store the factorial and initialize it with 1
        let mut result = 1;
        // A for loop to iterate from 1 to the given number
        // The for loop will use a range expression and the inclusive syntax '..='
        // This will include the last number in the range
        for i in 1..=num {
            // Use the *= operator to multiply the current value of result with i
            // This will calculate the factorial of the number
            result *= i;
        }
        // Return the calculated factorial as the result
        return result;
    }
}

// Call the factorial function with a value of 5 and print the result
println!("{}", factorial(5));
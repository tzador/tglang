fn main() {
    let mut numbers: Vec<i32> = vec![1, 5, 8, 2, 0];
    // creates a mutable vector called "numbers" with elements 1, 5, 8, 2, 0
    
    numbers.sort();
    // sorts the elements in the vector in ascending order
    
    for num in numbers.iter() {
        // iterates through each element in the vector
        println!("{}", num);
        // prints each element on a new line
    }
    // Output: 0
              1
              2
              5
              8
    
    let sum: i32 = numbers.iter().sum();
    // calculates the sum of all elements in the vector
    
    println!("The sum is {}", sum);
    // prints the sum
    // Output: The sum is 16
    
    let odd_numbers: Vec<i32> = numbers.iter().filter(|&x| x % 2 != 0).collect();
    // filters the elements in the vector to only include odd numbers
    
    println!("Odd numbers:");
    for num in odd_numbers.iter() {
        // iterates through each element in the new filtered vector
        println!("{}", num);
        // prints each element on a new line
    }
    // Output: Odd numbers:
              1
              5
              
    let even_numbers: Vec<i32> = numbers.iter().filter(|&x| x % 2 == 0).map(|x| x * 2).collect();
    // filters the elements in the vector to only include even numbers, then doubles each number
    
    for num in even_numbers.iter() {
        // iterates through each element in the new filtered vector
        println!("{}", num);
        // prints each element on a new line
    }
    // Output: 0
              4
              8
}
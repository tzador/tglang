// Create a struct to represent a person
struct Person {
  name: String,      // name of the person
  age: u32,          // age of the person
  occupation: String // job of the person
}

// Create an enum to represent possible hobbies for a person
enum Hobby {
  Sports,
  Cooking,
  Painting,
  Reading
}

// Implement a method for the Person struct to add a new hobby
impl Person {
  fn add_hobby(&mut self, new_hobby: Hobby) {
    self.hobbies.push(new_hobby);
  }
}

// Create a vector of Person structs
let mut people: Vec<Person> = Vec::new();

// Add new person with their information
people.push(Person { name: String::from("Sarah"), age: 25, occupation: String::from("Teacher") });

// Add hobbies for Sarah
people[0].add_hobby(Hobby::Sports);
people[0].add_hobby(Hobby::Reading);

// Print the name and hobbies of Sarah
println!("Hello, my name is {}! I enjoy {}, and {}", people[0].name, people[0].hobbies[0], people[0].hobbies[1]);
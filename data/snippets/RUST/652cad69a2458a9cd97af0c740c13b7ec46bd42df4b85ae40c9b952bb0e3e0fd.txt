/// This code snippet uses a HashMap data structure to store key-value pairs
use std::collections::HashMap;

// Define a struct for a users database
struct UsersDatabase {
    users_map: HashMap<String, String>,
}

/// Implement a method to add a new user to the database
impl UsersDatabase {
    fn add_new_user(&mut self, username: &str, password: &str) {
        // Check if user already exists
        if self.users_map.contains_key(username) {
            println!("User with username {} already exists!", username);
        } else {
            // User does not exist, add to database
            self.users_map.insert(String::from(username), String::from(password));
            println!("User added successfully!");
        }
    }
}

// Create an instance of UsersDatabase
let mut database = UsersDatabase { users_map: HashMap::new() };

// Add three new users to the database
database.add_new_user("John123", "password123");
database.add_new_user("Jane456", "password456");
database.add_new_user("Bob789", "password789");

// Print the database contents
println!("{:?}", database.users_map);
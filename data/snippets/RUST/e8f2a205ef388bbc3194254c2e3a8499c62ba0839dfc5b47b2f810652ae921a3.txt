// Define a struct called 'Car' with three fields - 'brand', 'model', and 'year'
struct Car {
    brand: String,
    model: String,
    year: u32,
}

// Implement a method to display the car's information
impl Car {
    fn display_info(&self) {
        println!("Brand: {}", self.brand);
        println!("Model: {}", self.model);
        println!("Year: {}", self.year);
    }
}

// Define a trait called 'Maintenance' with a method to check if a car needs an oil change
trait Maintenance {
    // Method takes in a reference to self and returns a boolean value
    fn needs_oil_change(&self) -> bool;
}

// Implement the 'Maintenance' trait for the 'Car' struct
impl Maintenance for Car {
    fn needs_oil_change(&self) -> bool {
        // Check if the car is more than 1 year old
        if self.year > 1 {
            return true;
        }
        return false;
    }
}

// Create an instance of the 'Car' struct
let my_car = Car {
    brand: String::from("Tesla"),
    model: String::from("Model S"),
    year: 2019,
};

// Call the 'display_info' method to print out the car's information
my_car.display_info();

// Call the 'needs_oil_change' method to check if the car needs an oil change
let needs_change = my_car.needs_oil_change();

// Print out the result
println!("Does my car need an oil change? {}", needs_change);
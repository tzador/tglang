// Declaring a struct named "Person" with 3 fields of different data types
struct Person {
    name: String,
    age: u8,
    hobbies: Vec<String>,
}

impl Person {
    // Defining a method to introduce the person
    fn introduce(&self) {
        // Printing out a customized message using the struct fields and methods
        println!("Hi, my name is {} and I am {} years old.", self.name, self.age);
        println!("Here are some of my hobbies: ");

        // Looping through the vector of hobbies and printing them out
        for hobby in &self.hobbies {
            println!("{}", hobby);
        }

        // Calling another method within the same struct
        self.say_hello();
    }

    // Another method that prints out a greeting
    fn say_hello(&self) {
        println!("Nice to meet you!");
    }
}

// Creating a new instance of the Person struct and initializing its fields
let person = Person {
    name: String::from("John"),
    age: 25,
    hobbies: vec![String::from("hiking"), String::from("reading"), String::from("coding")],
};

// Calling the introduce method on the Person struct instance
person.introduce();
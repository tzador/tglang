#![allow(unused)]
fn main() {
    // Define a struct named Point with two fields x and y of type f64
    struct Point {
        x: f64,
        y: f64,
    }

    // Implement the Display trait for Point
    use std::fmt;
    impl fmt::Display for Point {
        // Define the function `fmt` which takes a reference to
        // a Point struct and formats it into a string
        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
            // Format the Point struct into a string with parentheses and commas
            write!(f, "({}, {})", self.x, self.y)
        }
    }

    // Define an enum named Shape which can be either Circle or Rectangle
    // Each variant holds a Point struct as its data
    enum Shape {
        Circle(Point),
        Rectangle(Point),
    }

    // Define a trait named Area which calculates the area of a Shape
    trait Area {
        fn area(&self) -> f64;
    }

    // Implement the Area trait for Circle
    impl Area for Shape {
        // Define the area function which takes a reference to a Circle shape
        fn area(&self) -> f64 {
            match *self {
                // Use pattern matching to access the Point struct in the Circle variant
                Shape::Circle(ref point) => {
                    // Use the formula for calculating the area of a circle
                    3.14 * point.x * point.x
                },
                // Use pattern matching to access the Point struct in the Rectangle variant
                Shape::Rectangle(ref point) => {
                    // Use the formula for calculating the area of a rectangle
                    point.x * point.y
                },
            }
        }
    }

    // Create an instance of the Circle variant of Shape using a Point struct with x = 5.0 and y = 5.0
    let circle = Shape::Circle(Point { x: 5.0, y: 5.0});

    // Create an instance of the Rectangle variant of Shape using a Point struct with x = 10.0 and y = 5.0
    let rectangle = Shape::Rectangle(Point { x: 10.0, y: 5.0});

    // Prints the area of the circle
    println!("The area of the circle is {} square units", circle.area());
    // Prints the area of the rectangle
    println!("The area of the rectangle is {} square units", rectangle.area());
}
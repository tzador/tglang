// Using the Rust programming language, we can create a function that
// iterates over a vector and prints out the squares of each value.

fn print_squares(vec: Vec<i32>) { // Define function with parameter of type 'Vec' containing integers of 32 bits

    for num in vec.iter() { // Use 'iter' method to iterate over vector
        let square = num * num; // Create a new variable 'square' and assign it the value of the current number squared.
        println!("The square of {} is {}", num, square); // Print out the value and its corresponding square.
    }
}

fn main() {
    let numbers: Vec<i32> = vec![1, 2, 3, 4, 5]; // Create a vector of integers
    print_squares(numbers); // Call the function to print out squares of the numbers in the vector
}

// Output:
// The square of 1 is 1
// The square of 2 is 4
// The square of 3 is 9
// The square of 4 is 16
// The square of 5 is 25
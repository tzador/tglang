use std::collections::HashMap; // import the HashMap module from the standard library

// define a struct named 'Person' with two fields: name and age
struct Person {
    name: String,
    age: u32,
}

fn main() {
    // create a mutable HashMap to store instances of Person
    let mut people_map = HashMap::new();

    // add new Person instance to the HashMap
    people_map.insert("John", Person{name: String::from("John"), age: 23});

    // use pattern matching to access the age of the person with name "John" in the HashMap
    match people_map.get("John") {
        Some(person) => println!("John's age is {}", person.age),
        None => println!("Person with name \"John\" not found."),
    }
    
    // insert a new Person with name "Jane" and age 35
    people_map.insert("Jane", Person{name: String::from("Jane"), age: 35});

    // loop through the HashMap and print out each person's name and age
    for (name, person) in &people_map {
        println!("{} is {} years old.", name, person.age);
    }
}
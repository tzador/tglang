// This code snippet declares a struct named "User"
struct User {
  username: String,
  email: String,
  sign_in_count: u64,
  active: bool,
  interests: Vec<String>
}

impl User {
  // This function adds a new interest to the "interests" Vector
  fn add_interest(&mut self, interest: String) {
    self.interests.push(interest);
  }

  // This method returns the number of times the user has signed in
  fn sign_ins(&self) -> u64 {
    self.sign_in_count
  }

  // This method checks if the user is active and returns a boolean
  fn is_active(&self) -> bool {
    self.active
  }
}

// This is the main function
fn main() {
  // Creates a new instance of the User struct
  let mut user = User {
    username: String::from("johndoe"),
    email: String::from("johndoe@example.com"),
    sign_in_count: 0,
    active: true,
    interests: vec![String::from("coding"), String::from("hiking")]
  };

  // Calls the add_interest function to add a new interest
  user.add_interest(String::from("reading"));

  // Prints the number of times the user has signed in
  println!("Number of sign ins: {}", user.sign_ins());

  // Checks if the user is active and prints the result
  if user.is_active() {
    println!("The user is active.");
  } else {
    println!("The user is inactive.");
  }
}
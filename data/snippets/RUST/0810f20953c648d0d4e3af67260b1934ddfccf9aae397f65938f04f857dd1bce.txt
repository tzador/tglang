// Function that takes in a vector of integers and returns a vector of their squares
fn map_squares(vec: Vec<i32>) -> Vec<i32> {
    let mut result: Vec<i32> = Vec::new(); // create a new vector to store the result
    for i in vec.iter() {  // loop through the given vector
        result.push(i * i); // square each element and add it to the result vector
    }
    result // return the result vector
}

fn main() {
    let vec = vec![1, 2, 3, 4, 5]; // create a vector of integers
    let squares = map_squares(vec); // call the map_squares function on the vector
    println!("{:?}", squares); // print the result vector
}
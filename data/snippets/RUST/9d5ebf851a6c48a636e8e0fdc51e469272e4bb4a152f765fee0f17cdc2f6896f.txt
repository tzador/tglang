// This function calculates the sum of two numbers
// Input: Two integers
// Output: The sum of the two integers
fn calculate_sum(num1: i32, num2: i32) -> i32 {
    let sum = num1 + num2; // assigning the sum of the two numbers to a variable
    return sum; // returning the value of the variable as the final output
}

// This function calculates the average of a given list of numbers
// Input: A vector of integers
// Output: The average of the list of numbers
fn calculate_average(numbers: Vec<i32>) -> f32 {
    let mut sum = 0; // initializing a variable to hold the sum
    for num in numbers { // loop through the vector of numbers
        sum += num; // add each number to the sum
    }
    let length = numbers.len(); // get the length of the vector
    let average = sum as f32 / length as f32; // calculate the average by casting the sum and length to f32
    return average; // return the average as the final output
}

fn main() {
    let num1 = 5; // first integer
    let num2 = 10; // second integer

    let sum = calculate_sum(num1, num2); // calling the calculate_sum function with the two numbers as arguments
    println!("The sum of {} and {} is {}", num1, num2, sum); // printing the output in a formatted way

    let numbers = vec![3, 6, 9, 12]; // vector of numbers
    let average = calculate_average(numbers); // calling the calculate_average function with the vector as argument
    println!("The average of the given numbers is {}", average); // printing the output in a formatted way
}
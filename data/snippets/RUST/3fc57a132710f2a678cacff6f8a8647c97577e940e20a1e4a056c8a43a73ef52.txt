use std::thread; // Importing the thread module from the standard library 

struct Person { // Creating a new struct type called Person
    name: String, // Declaring a field for the person's name
    age: u8, // Declaring a field for the person's age
    address: String, // Declaring a field for the person's address
}

impl Person { // Implementing methods for the Person struct
    fn greeting(&self) { // Defining a method to greet the person
        println!("Hello, my name is {} and I am {} years old.", self.name, self.age); // Printing out the person's name and age
    }

    fn location(&self) { // Defining a method to print the person's address
        println!("I live at {}.", self.address); // Printing out the person's address
    }
}

fn main() { // The entry point of the program
    let person = Person { // Creating a new instance of the Person struct
        name: String::from("John"), // Initializing the person's name
        age: 27, // Initializing the person's age
        address: String::from("123 Main Street"), // Initializing the person's address
    };

    let handle = thread::spawn(move || { // Spawning a new thread to greet the person
        person.greeting(); // Calling the greeting method on the person object
        person.location(); // Calling the location method on the person object
    });

    handle.join().unwrap(); // Waiting for the thread to finish executing

    // Output:
    // Hello, my name is John and I am 27 years old.
    // I live at 123 Main Street.
}
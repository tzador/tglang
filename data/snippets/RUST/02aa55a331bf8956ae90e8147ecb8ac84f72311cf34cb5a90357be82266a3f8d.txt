// Define a struct named Person with three fields: name, age, and address
struct Person {
    name: String,
    age: u8,
    address: String,
}

// Create an implementation block for the Person struct
impl Person {
    // Define a method named introduce that takes a reference to self and returns a string
    fn introduce(&self) -> String {
        // Use the format macro to create a new string with the person's information
        format!("Hi, my name is {}, I am {} years old and I live at {}.", self.name, self.age, self.address)
    }
}

// Create a vector of Person structs with different values for the fields
let people: Vec<Person> = vec![
    Person {
        name: String::from("John"),
        age: 25,
        address: String::from("123 Main St")
    },
    Person {
        name: String::from("Sarah"),
        age: 30,
        address: String::from("456 Broadway")
    },
    Person {
        name: String::from("Mike"),
        age: 40,
        address: String::from("789 Oak Ave")
    },
];

// Loop through the vector and call the introduce method on each Person
for person in &people {
    println!("{}", person.introduce());
}
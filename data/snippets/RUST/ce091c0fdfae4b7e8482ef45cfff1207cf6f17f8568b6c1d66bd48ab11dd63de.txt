// create a function to calculate the factorial of a given number
/// Calculates the factorial of a given number
fn factorial(n: u64) -> u64 {
    // base case: when n is 0 or 1, factorial is 1
    if n == 0 || n == 1 {
        return 1;
    }
    // otherwise, use recursion to calculate factorial
    else {
        return n * factorial(n - 1);
    }
}

// create a mutable variable to store user input
let mut input_str = String::new();

// prompt user for input
println!("Enter a number:");

// read user input and store it in the mutable variable
std::io::stdin().read_line(&mut input_str).expect("Failed to read line");

// convert input string to unsigned 64-bit integer
let input_n: u64 = match input_str.trim().parse() {
    // handle invalid input
    Ok(num) => num,
    // exit program if user inputs something other than a number
    Err(_) => {
        println!("Invalid input, exiting program");
        return;
    },
};

// call the factorial function with the user input and print the result
println!("The factorial of {} is {}", input_n, factorial(input_n));
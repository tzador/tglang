/// This function takes in a vector of integers and returns a vector of tuples
/// containing the original value and its square root.
fn square_root_pairs(vector: Vec<f64>) -> Vec<(f64, f64)> {
    // Create an empty vector to store the tuples
    let mut results = Vec::new();

    // Loop through the vector and calculate the square root for each value
    for value in vector {
        let square_root = value.sqrt();
        // Create a tuple of the original value and its square root
        let pair = (value, square_root);
        // Add the tuple to the results vector
        results.push(pair);
    }

    // Return the vector of tuples
    results
}

// Example usage
fn main() {
    let numbers = vec![4.0, 9.0, 16.0, 25.0, 36.0];
    let pairs = square_root_pairs(numbers);
    println!("{:?}", pairs);
}

// Output:
// [(4.0, 2.0), (9.0, 3.0), (16.0, 4.0), (25.0, 5.0), (36.0, 6.0)]
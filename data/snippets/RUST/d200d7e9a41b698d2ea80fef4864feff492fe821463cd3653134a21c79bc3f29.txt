/// Struct representing a user in the system
struct User {
    username: String,
    email: String,
    transactions: Vec<Transaction>,
    address: Address,
    is_active: bool,
}

/// Struct representing a transaction
struct Transaction {
    amount: u32,
    date: String,
    timestamp: u64,
    description: String,
}

/// Enum representing different types of addresses
enum Address {
    Home(String),
    Work(u32, String),
    None,
}

fn main() {
    // Create an instance of a user
    let user = User {
        username: String::from("JohnDoe"),
        email: String::from("johndoe@example.com"),
        transactions: vec![
            Transaction {
                amount: 50,
                date: String::from("2021-02-05"),
                timestamp: 1612540800,
                description: String::from("Grocery Shopping"),
            },
            Transaction {
                amount: 100,
                date: String::from("2021-02-08"),
                timestamp: 1612800000,
                description: String::from("Restaurant Bill"),
            },
        ],
        address: Address::Home(String::from("123 Main St")),
        is_active: true,
    };

    // Print out user information
    println!("{:#?}", user);
}
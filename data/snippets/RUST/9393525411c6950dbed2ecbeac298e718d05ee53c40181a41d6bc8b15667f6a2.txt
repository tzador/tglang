// Define a struct named 'Book' with two fields - 'title' and 'author'.
struct Book {
    title: String,
    author: String,
}

// Implement a function to display the details of a book.
impl Book {
    fn display_details(&self) {
        println!("Title: {}", self.title);
        println!("Author: {}", self.author);
    }
}

// Create an enum named 'Genre' with variants for different book genres.
enum Genre {
    Fiction,
    Nonfiction,
    Poetry,
    SciFi,
}

// Define a trait named 'LibraryItem' with methods to get the title and genre of a book.
trait LibraryItem {
    fn get_title(&self) -> &str;
    fn get_genre(&self) -> Genre;
}

// Implement the trait for the Book struct, defining the methods.
impl LibraryItem for Book {
    fn get_title(&self) -> &str {
        &self.title
    }

    fn get_genre(&self) -> Genre {
        Genre::Fiction
    }
}

fn main() {
    // Create a new book instance with a title and author.
    let book = Book {
        title: "Harry Potter and the Sorcerer's Stone".to_string(),
        author: "J.K. Rowling".to_string(),
    };

    // Call the display_details function on the book instance.
    book.display_details();

    // Create a variable to hold a reference to the book's genre.
    let genre = book.get_genre();

    // Use a match statement to print the genre based on the enum variant.
    match genre {
        Genre::Fiction => println!("Genre: Fiction"),
        Genre::Nonfiction => println!("Genre: Nonfiction"),
        Genre::Poetry => println!("Genre: Poetry"),
        Genre::SciFi => println!("Genre: Sci-Fi"),
    }
}
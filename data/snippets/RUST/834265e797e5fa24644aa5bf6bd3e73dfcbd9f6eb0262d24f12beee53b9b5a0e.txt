/* This code snippet is a function that implements the quick sort algorithm */

fn quicksort<T: Ord + Copy>(array: &[T]) -> Vec<T> {
    if array.len() < 2 {
        return array.to_vec();
    }

    let pivot = array[0];
    
    let mut left = Vec::new();
    let mut right = Vec::new();

    for &item in array.iter().skip(1) {
        if item < pivot {
            left.push(item);
        } else {
            right.push(item);
        }
    }

    let mut sorted = quicksort(&left);
    sorted.push(pivot);
    sorted.append(&mut quicksort(&right));

    sorted
}
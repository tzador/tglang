fn main() {
    let mut vec = Vec::new(); // create a mutable vector
    vec.push(5); // add 5 to the vector
    vec.push(10); // add 10 to the vector
    println!("Vector: {:?}", vec); // print the vector
    let top = vec.pop(); // remove the last element and assign it to a variable
    println!("Top element: {:?}", top); // print the top element
    let sum: i32 = vec.iter().sum(); // calculate the sum of the remaining elements
    println!("Remaining elements' sum: {}", sum); // print the sum
    let mapped = vec.iter().map(|x| x * 2).collect::<Vec<i32>>(); // multiply each element by 2 and collect them into a new vector
    println!("Mapped vector: {:?}", mapped); // print the mapped vector
    let filtered = vec.into_iter().filter(|&x| x > 5).collect::<Vec<i32>>(); // filter out elements less than or equal to 5 and collect them into a new vector
    println!("Filtered vector: {:?}", filtered); // print the filtered vector
}
/// This function takes in a vector of integers as input and returns a new vector with each element doubled
fn double_vector(vec: Vec<i32>) -> Vec<i32> {
    let mut new_vec = Vec::new(); // initialize a new vector
    for num in vec { // iterate through the input vector
        let doubled = num * 2; // double each element
        new_vec.push(doubled); // add the new element to the new vector
    }
    
    new_vec // return the new vector as output
}

// A sample vector 
let numbers = vec![1, 2, 3, 4, 5];

// Calling the double_vector function and storing the output in a new vector called doubled_numbers
let doubled_numbers = double_vector(numbers);

// Printing the doubled_numbers vector
println!("{:?}", doubled_numbers);

// Output:
[2, 4, 6, 8, 10]
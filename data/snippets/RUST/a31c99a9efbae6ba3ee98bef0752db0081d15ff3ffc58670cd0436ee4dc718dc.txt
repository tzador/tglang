fn main() {
    // create vector
    let mut vector = vec![1, 2, 3, 4, 5];

    // print vector
    println!("Vector before mutation: {:?}", vector);

    // iterate over vector and add 1 to each element
    vector.iter_mut().for_each(|x| *x += 1);

    // print vector
    println!("Vector after mutation: {:?}", vector);

    // create hashmap
    let mut hashmap = HashMap::new();

    // add key-value pairs to hashmap
    hashmap.insert("name", "John");
    hashmap.insert("age", "30");
    hashmap.insert("occupation", "Software Engineer");

    // print hashmap
    println!("Hashmap: {:?}", hashmap);

    // create string
    let string = "This is a long and complex code snippet in Rust.";

    // print string
    println!("String: {}", string);

    // create tuple
    let tuple = (1, 2, 3, 4, 5);

    // pattern match on tuple
    match tuple {
        (a,_,_,_,_) => println!("First element of tuple: {}", a),
        (_,b,_,_,_) => println!("Second element of tuple: {}", b),
        (_,_,c,_,_) => println!("Third element of tuple: {}", c),
        (_,_,_,d,_) => println!("Fourth element of tuple: {}", d),
        (_,_,_,_,e) => println!("Fifth element of tuple: {}", e),
    }
}
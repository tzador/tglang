use std::collections::HashMap;

fn main() {
    // Declare a new mutable hash map
    let mut colors = HashMap::new();

    // Add key-value pairs to the hash map
    colors.insert("red", "#FF0000");
    colors.insert("blue", "#0000FF");
    colors.insert("green", "#00FF00");
    colors.insert("yellow", "#FFFF00");

    // Print out the keys and values in the hash map
    for (color, hex_code) in &colors {
        println!("{} is represented by {}", color, hex_code);
    }

    // Check if a key exists in the hash map
    if colors.contains_key("purple") {
        println!("Purple exists in the hash map");
    } else {
        println!("Purple does not exist in the hash map");
    }

    // Remove a key-value pair from the hash map
    colors.remove("blue");

    // Print out updated hash map
    println!("Hash map after removing blue: {:?}", colors);
}
// This is a function that takes in a vector of integers and returns a vector containing only even numbers
fn filter_even_numbers(nums: &Vec<i32>) -> Vec<i32> {
    // Create an empty vector to store even numbers
    let mut even_nums = Vec::new();
    // Loop through each number in the given vector
    for num in nums {
        // Use modulus operator to check if the number is even
        if num % 2 == 0 {
            // If it is even, push it into the even_nums vector
            even_nums.push(*num);
        }
    }
    // Return the vector containing only even numbers
    even_nums
}

// Example usage
fn main() {
    // Create a vector of numbers
    let numbers = vec![1, 2, 3, 4, 5, 6, 7, 8];
    // Call the filter_even_numbers function and store the result in a new vector
    let even_numbers = filter_even_numbers(&numbers);
    // Print out the result
    println!("{:?}", even_numbers);
}
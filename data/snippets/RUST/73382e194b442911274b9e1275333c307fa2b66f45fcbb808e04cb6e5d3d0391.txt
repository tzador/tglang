// Example code snippet in RUST

// Import necessary libraries
use std::io;

fn main() {
    // Initialize an empty vector
    let mut numbers: Vec<i32> = Vec::new();

    // Get user input for vector size
    println!("Enter the size of the vector:");

    // Read user input and convert it to an integer
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let size: usize = input.trim().parse().expect("Size must be a number");

    // Fill vector with user input values
    println!("Enter {} numbers:", size);
    for _ in 0..size {
        let mut input = String::new();
        io::stdin().read_line(&mut input).expect("Failed to read line");
        let number: i32 = input.trim().parse().expect("Invalid input");
        numbers.push(number);
    }

    // Print the vector
    println!("The numbers you entered are: {:?}", numbers);

    // Calculate the sum of all numbers in the vector
    let sum: i32 = numbers.iter().sum();
    println!("The sum is: {}", sum);

    // Calculate the average of all numbers in the vector
    let average: f32 = (sum as f32) / (size as f32);
    println!("The average is: {}", average);
}
type Board = [[u8; 9]; 9];
// This creates a type alias for a 2D array in RUST with 9 rows and 9 columns, each element is an unsigned 8-bit integer

fn create_board() -> Board {
    let mut board = [[0; 9]; 9];
    // This initializes the board with all 0 values

    board[3][6] = 4;
    board[5][1] = 2;
    board[7][3] = 6;
    // These lines assign specific values to certain cells in the board

    return board;
    // This returns the created board
}

fn main() {
    let game_board = create_board();
    // This calls the create_board function to generate a new game board

    for row in game_board.iter() {
        for num in row.iter() {
            print!("{} ", num);
            // This prints out each element of the 2D array, separated by a space
        }
        println!();
        // This prints a new line after each row is printed
    }
}

// Output:
//
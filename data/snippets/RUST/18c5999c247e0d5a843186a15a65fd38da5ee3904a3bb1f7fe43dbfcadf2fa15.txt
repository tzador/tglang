use std::{f32, fs};
use serde_json::Value as JsonValue;

// Declare a struct named 'Product' with fields 'name' and 'price'
struct Product {
    name: String,
    price: f32,
}

// Implement a method to calculate the total price of a list of products
impl Product {
    fn total_price(&self, products: &[Product]) -> f32 {
        let mut total = self.price;

        for product in products {
            total += product.price;
        }

        total
    }
}

// Read a JSON file containing product information
let file_name = "products.json";
let json_str = fs::read_to_string(file_name)?;

// Deserialize the JSON data into a vector of Product structs
let products: Vec<Product> = serde_json::from_str(json_str)?;

// Print the total price of all products
let total_price = products[0].total_price(&products);// Markdown annotation: products[0].total_price(&products)
println!("The total price of all products is: {}", total_price);
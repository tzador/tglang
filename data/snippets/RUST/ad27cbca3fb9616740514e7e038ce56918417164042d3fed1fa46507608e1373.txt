/// A struct for holding information about a person
struct Person {
    name: String, // Name of the person
    age: u8, // Age of the person
    occupation: String, // Occupation of the person
    hobbies: Vec<String>, // List of hobbies of the person
}

impl Person {
    /// Function to create a new Person with given information
    fn new(name: &str, age: u8, occupation: &str, hobbies: Vec<String>) -> Person {
        Person {
            name: name.to_string(),
            age,
            occupation: occupation.to_string(),
            hobbies,
        }
    }
    /// A method to greet the person
    fn greet(&self) {
        println!("Hello, my name is {} and I am {} years old.", self.name, self.age);
        println!("I work as a {} and my hobbies include:", self.occupation);
        for hobby in &self.hobbies {
            println!("- {}", hobby);
        }
    }
}

fn main() {
    // Create a new Person object
    let person = Person::new("John", 30, "Software Engineer", vec!["Reading".to_string(), "Hiking".to_string(), "Photography".to_string()]);

    // Greet the person
    person.greet();
}
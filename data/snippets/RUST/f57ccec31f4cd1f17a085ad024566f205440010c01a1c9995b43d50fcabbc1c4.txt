// Define a function that takes in a vector of integers and returns the square of each element
fn square_vec(vec: Vec<i32>) -> Vec<i32> {
    // Create a new, empty vector to hold the squared values
    let mut squared_vec: Vec<i32> = Vec::new();
    
    // Iterate through the input vector
    for num in vec {
        // Square each element and push it into the new vector
        squared_vec.push(num * num);
    }
    
    // Return the squared vector
    squared_vec
}

// Define a main function to test the square_vec function
fn main() {
    // Create a vector of integers
    let num_vec = vec![1, 2, 3, 4, 5];
    
    // Call the square_vec function on the input vector and store the result in a new vector
    let squared_nums = square_vec(num_vec);
    
    // Print out the squared vector
    println!("{:?}", squared_nums);
}

// Call the main function
main();
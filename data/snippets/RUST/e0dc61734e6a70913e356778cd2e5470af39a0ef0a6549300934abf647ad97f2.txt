use std::collections::HashMap; //Importing standard library for HashMap

//Creating a struct called 'Student'
struct Student {
    name: String,
    age: u8,
    grades: HashMap<String, u8>,
}

impl Student {
    //Function to add grades to a student's record
    fn add_grade(&mut self, subject: &str, grade: u8) {
        self.grades.insert(String::from(subject), grade);
    }

    //Function to calculate the average grade of a student
    fn get_average_grade(&self) -> f64 {
        let mut total = 0; //Initializing a variable to store total grade
        let mut count = 0; //Initializing a variable to count number of grades
        for grade in self.grades.values() { //Iterating through grades using for loop
            total += grade;
            count += 1;
        }
        total as f64 / count as f64 //Calculating and returning the average grade
    }
}

fn main() {
    //Creating a new student instance
    let mut student1 = Student {
        name: String::from("John"),
        age: 18,
        grades: HashMap::new(), //Initializing grades HashMap
    };

    //Adding grades to student1's record
    student1.add_grade("Math", 85);
    student1.add_grade("Science", 92);
    student1.add_grade("English", 78);

    //Calculating and printing the average grade
    println!("Average grade for {}: {:.2}%", student1.name, student1.get_average_grade());
}
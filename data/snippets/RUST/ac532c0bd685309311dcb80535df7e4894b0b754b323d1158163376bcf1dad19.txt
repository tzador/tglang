use std::fmt;

// Define a custom struct named 'Person'
struct Person {
  name: String,
  age: u32,
  height: f64,
}

// Implement the 'Debug' trait for the 'Person' struct
impl fmt::Debug for Person {
  // Define the 'fmt' method to display the struct's fields
  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    // Create a tuple with the fields of the struct
    let values = (self.name, self.age, self.height);
    
    // Use the formatter to display the fields with labels
    write!(f, "Person {{ name: {:?}, age: {:?}, height: {:?} }}", values.0, values.1, values.2)
  }
}

// Create a new 'Person' object
let alice = Person {
  name: String::from("Alice"),
  age: 25,
  height: 5.5,
};

// Display the 'Person' object using the 'Debug' trait
println!("Alice's information: {:?}", alice);
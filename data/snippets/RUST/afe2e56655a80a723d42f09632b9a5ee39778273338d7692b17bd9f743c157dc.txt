use std::collections::HashMap;

fn main() {
    // Creating a HashMap data structure to store key-value pairs
    let mut scores = HashMap::new();

    // Inserting key-value pairs into the HashMap
    scores.insert(String::from("Team A"), 10);
    scores.insert(String::from("Team B"), 20);
    scores.insert(String::from("Team C"), 30);

    // Printing the current contents of the HashMap
    println!("{:?}", scores);

    // Updating the value of a key in the HashMap
    scores.insert(String::from("Team B"), 25);

    // Printing the updated HashMap
    println!("{:?}", scores);

    // Accessing a value from the HashMap using a key
    let team_a_score = scores.get("Team A");

    // Printing the value of "Team A"
    println!("The score of Team A is: {:?}", team_a_score);

    // Removing a key-value pair from the HashMap
    scores.remove("Team C");

    // Printing the HashMap after removing "Team C"
    println!("{:?}", scores);

    // Iterating over the HashMap and printing all key-value pairs
    for (key, value) in &scores {
        println!("{}'s score is: {}", key, value);
    }
}
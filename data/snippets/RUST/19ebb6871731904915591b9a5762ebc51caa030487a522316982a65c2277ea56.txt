/// Struct used to represent a person
struct Person {
    name: String,
    age: u8,
    hobbies: Vec<String>,
}

/// Implementation of the Person struct
impl Person {
    /// Method to update the person's age
    fn update_age(&mut self, new_age: u8) {
        self.age = new_age;
    }

    /// Method to add a hobby to the person's list
    fn add_hobby(&mut self, new_hobby: String) {
        self.hobbies.push(new_hobby);
    }

    /// Method to print out the person's information
    fn print_info(&self) {
        println!("Name: {}", self.name);
        println!("Age: {}", self.age);
        println!("Hobbies: {:?}", self.hobbies);
    }
}

// Main function
fn main() {
    // Create a new person named "John" with age 25 and no hobbies
    let mut john = Person {
        name: String::from("John"),
        age: 25,
        hobbies: Vec::new(),
    };

    // Update John's age
    john.update_age(28);

    // Add hobbies to John's list
    john.add_hobby(String::from("Playing video games"));
    john.add_hobby(String::from("Reading books"));

    // Print out John's information
    john.print_info();
}
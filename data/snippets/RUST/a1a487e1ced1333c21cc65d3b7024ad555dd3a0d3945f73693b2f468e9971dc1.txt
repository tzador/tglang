/// This function takes in a vector of integers and returns a sorted vector using Bubble Sort algorithm
fn bubble_sort(mut items: Vec<i32>) -> Vec<i32> {
    let n = items.len(); // get the length of the vector

    // start a loop to perform comparisons and swaps
    for i in 0..n {
        for j in 0..n-i-1 {
            if items[j] > items[j+1] {
                // perform the swap
                let temp = items[j];
                items[j] = items[j+1];
                items[j+1] = temp;
            }
        }
    }

    // return the sorted vector
    items
}

// test example
fn main() {
    let vec = vec![2, 7, 1, 5, 3];

    // call the bubble_sort function and store the sorted vector in a new variable
    let sorted_vec = bubble_sort(vec);

    // print the sorted vector
    println!("{:?}", sorted_vec);
}

// output:
// This code creates a struct called 'Person'
// with two fields: name (a string) and age (an integer)
// It also implements a method to print the person's information
struct Person {
    name: String,
    age: i32,
}

impl Person {
    // Method to print the person's information
    fn print_info(&self) {
        println!("Name: {}", self.name);
        println!("Age: {}", self.age);
    }
}

// This code creates a vector of 3 Person structs
let people = vec![
    Person {
        name: "John".to_string(),
        age: 30,
    },
    Person {
        name: "Jane".to_string(),
        age: 25,
    },
    Person {
        name: "Mike".to_string(),
        age: 35,
    },
];

// Loop through the vector and call the print_info method on each person
for person in &people {
    person.print_info();
}

// Output:
// Name: John
// Age: 30
// Name: Jane
// Age: 25
// Name: Mike
// Age: 35
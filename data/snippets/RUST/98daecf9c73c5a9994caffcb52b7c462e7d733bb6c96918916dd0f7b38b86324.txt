struct User {
    username: String,
    email: String,
    sign_in_count: u64,
    active: bool,
}

impl User {
    fn new(username: String, email: String) -> User {
        User {
            username,
            email,
            sign_in_count: 0,
            active: false,
        }
    }

    fn activate(&mut self) {
        self.active = true;
        self.sign_in_count += 1;
    }

    fn deactivate(&mut self) {
        self.active = false;
    }

    fn change_email(&mut self, new_email: String) {
        self.email = new_email;
    }
}

fn main() {
    let mut user = User::new(String::from("John Doe"), String::from("johndoe@example.com"));
    user.activate();
    println!("User {} is active with {} sign ins.", user.username, user.sign_in_count);

    user.change_email(String::from("johndoe2@example.com"));
    println!("User's email is now {}.", user.email);
}
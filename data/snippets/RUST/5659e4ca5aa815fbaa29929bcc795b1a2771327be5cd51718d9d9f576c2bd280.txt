fn main() { // creates a main function
    let mut numbers = vec![1, 2, 3, 4, 5]; // creates a mutable vector with numbers 1-5
    let average = numbers.iter().sum::<i32>() as f32 / numbers.len() as f32; // finds average of numbers
    match average { // starts a match statement, comparing average to different patterns
        x if x < 3.0 => println!("Below average"), // if average is less than 3, prints "Below average"
        x if x > 3.0 => println!("Above average"), // if average is greater than 3, prints "Above average"
        _ => println!("Average"), // if average is equal to 3, prints "Average"
    }
    for num in numbers.iter() { // starts a for loop, iterating through numbers in the vector
        match num { // matches the current number to patterns
            1 => println!("One"), // if number is 1, prints "One"
            2 => println!("Two"), // if number is 2, prints "Two"
            3 => println!("Three"), // if number is 3, prints "Three"
            4 => println!("Four"), // if number is 4, prints "Four"
            5 => println!("Five"), // if number is 5, prints "Five"
            _ => println!("Unknown"), // if number is not 1-5, prints "Unknown"
        }
    }
}
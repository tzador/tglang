use std::io::{self, BufRead};
use std::collections::{HashMap, HashSet};
fn main() {
    // Define a HashMap to store word counts
    let mut word_count: HashMap<String, u32> = HashMap::new();

    // Define a HashSet to store unique words
    let mut unique_words: HashSet<String> = HashSet::new();

    // Get input from the user
    let stdin = io::stdin();
    let handle = stdin.lock();

    // Iterate through each line of input
    for line in handle.lines() {
        let line = line.unwrap();
        // Split the line into individual words
        let words: Vec<&str> = line.split(" ").collect();

        // Loop through each word
        for word in words {
            // Remove any non-alphanumeric characters
            let word = word.chars()
                           .filter(|c| c.is_alphanumeric())
                           .collect::<String>();

            // Get the current count of the word, or initialize to 0
            let count = word_count.entry(word).or_insert(0);
            // Increment the count
            *count += 1;

            // Add the word to the HashSet
            unique_words.insert(word);
        }
    }

    // Print out the word counts in alphabetical order
    println!("Word counts:");
    for word in unique_words.iter().sorted() {
        let count = word_count.get(word).unwrap();
        println!("{}: {}", word, count);
    }
}
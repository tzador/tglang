#![allow(non_snake_case)]

/// A struct that represents a person.
struct Person {
    name: String,
    age: u32,
    occupation: String
}

/// Enumerates different forms of greetings.
enum Greeting {
    Formal,
    Informal,
    Funny
}

impl Person {
    /// Greets the person depending on the type of greeting.
    fn greet(&self, greeting_type: Greeting) {
        match greeting_type {
            Greeting::Formal => println!("Hello, {}! It's a pleasure to meet you.", self.name),
            Greeting::Informal => println!("Hey, {}! What's up?", self.name),
            Greeting::Funny => println!("Howdy, {}! You're looking sharp today.", self.name)
        }
    }
}

fn main() {
    /// Instantiates a new Person named "John" with the age of 26 and occupation of "Software Developer".
    let john = Person { 
        name: String::from("John"), 
        age: 26,
        occupation: String::from("Software Developer")
    };

    /// Greets John with a formal greeting.
    john.greet(Greeting::Formal);
}
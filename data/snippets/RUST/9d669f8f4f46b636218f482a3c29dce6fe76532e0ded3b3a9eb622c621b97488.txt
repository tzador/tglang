// This is a multi-line comment in Rust

// Declare a mutable variable x of type integer with initial value of 5
let mut x: i32 = 5;

// Create a vector of strings with initial values "Hello" and "World"
let words = vec!["Hello", "World"];

// Create a function that takes in an integer and returns its square
fn square(num: i32) -> i32 {
    return num * num;
}

// Use a for loop to iterate through the words vector and print out each word
for word in words.iter() {
    println!("{}", word);
}

// Call the square function with the value of x and print out the result
println!("The square of {} is {}", x, square(x));

// Create a struct called Person with fields name and age
struct Person {
    name: String,
    age: i32,
}

// Create an implementation for the Person struct
impl Person {
    // Create a function that introduces the person and their age
    fn introduce(&self) {
        println!("Hi, my name is {} and I am {} years old", self.name, self.age);
    }
}

// Create an instance of Person with name "John" and age 25
let john = Person {
    name: String::from("John"),
    age: 25,
};

// Call the introduce function on the john instance
john.introduce();

// Create an enum called Animal with variants Cat and Dog
enum Animal {
    Cat,
    Dog,
}

// Create a function that takes in an Animal and prints out a different message based on the variant
fn animal_sound(animal: Animal) {
    match animal {
        Animal::Cat => println!("Meow!"),
        Animal::Dog => println!("Woof!"),
    }
}

// Call the animal_sound function with the Dog variant of the Animal enum
animal_sound(Animal::Dog);
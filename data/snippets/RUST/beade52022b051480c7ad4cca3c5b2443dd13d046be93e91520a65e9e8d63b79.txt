use std::io;

enum MathOperation {
    Add(i32, i32),
    Subtract(i32, i32),
    Multiply(i32, i32),
    Divide(i32, i32),
}

impl MathOperation {
    fn perform(&self) -> i32 {
        match self {
            MathOperation::Add(a, b) => a + b,
            MathOperation::Subtract(a, b) => a - b,
            MathOperation::Multiply(a, b) => a * b,
            MathOperation::Divide(a, b) => a / b,
        }
    }
}

fn main() {
    println!("Welcome to the Rust Calculator!\nPlease input the first number:");

    let mut num1 = String::new();
    io::stdin()
        .read_line(&mut num1)
        .expect("Failed to read line");

    let num1: i32 = num1.trim().parse().expect("Please enter a valid number.");

    println!("Please input the second number:");

    let mut num2 = String::new();
    io::stdin()
        .read_line(&mut num2)
        .expect("Failed to read line");

    let num2: i32 = num2.trim().parse().expect("Please enter a valid number.");

    println!("Please choose an operation:\n1. Add\n2. Subtract\n3. Multiply\n4. Divide");

    let mut choice = String::new();
    io::stdin()
        .read_line(&mut choice)
        .expect("Failed to read line");

    let choice: i32 = choice.trim().parse().expect("Please enter a valid choice.");

    let result = match choice {
        1 => MathOperation::Add(num1, num2).perform(),
        2 => MathOperation::Subtract(num1, num2).perform(),
        3 => MathOperation::Multiply(num1, num2).perform(),
        4 => MathOperation::Divide(num1, num2).perform(),
        _ => panic!("Please choose a valid operation (1-4)."),
    };
    
    println!("The result is: {}", result);
}
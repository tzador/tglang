// Define a struct for a person with name and age properties
struct Person {
    name: String,
    age: u32,
}

// Implement a function that returns a new instance of Person
impl Person {
    fn new(name: &str, age: u32) -> Person {
        Person {
            name: String::from(name),
            age,
        }
    }
}

// Define a trait for work that can be done by a person
trait Work {
    fn work(&self);
}

// Implement the Work trait for the Person struct
impl Work for Person {
    fn work(&self) {
        println!("{} is working.", self.name);
    }
}

// Create a vector of Person instances
let people = vec![
    Person::new("John", 25),
    Person::new("Emily", 30),
    Person::new("Michael", 40),
];

// Iterate through the vector and call the work method on each person
for person in &people {
    person.work();
}
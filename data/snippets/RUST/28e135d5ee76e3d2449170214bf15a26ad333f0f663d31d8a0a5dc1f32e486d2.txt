fn main() {
    let mut vector = Vec::new(); // create a mutable vector
    vector.push(1); // push integer value 1 to the vector
    vector.push(2); // push integer value 2 to the vector
    vector.push(3); // push integer value 3 to the vector

    // iterate through the vector using a for loop
    for num in &vector {
        println!("{}", num); // print each element in the vector
    }

    // convert the vector into a string
    let vector_string = vector.iter()
        .map(|num| num.to_string()) // convert each element to a string
        .collect::<Vec<String>>()
        .join(", "); // join all elements with a comma and space

    println!("The vector contains: {}", vector_string); // print the string representation of the vector

    // create a function that calculates the sum of all values in a vector
    fn sum_vector(vector: &Vec<i32>) -> i32 {
        let mut sum = 0;
        for num in vector {
            sum += num; // add each element in the vector to the sum
        }
        sum // return the sum
    }

    let total = sum_vector(&vector); // call the function and store the result in a variable
    println!("The total sum is: {}", total); // print the total sum
}
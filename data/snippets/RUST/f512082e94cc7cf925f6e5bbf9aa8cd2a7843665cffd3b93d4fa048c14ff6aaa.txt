/// A generic struct that takes in a type and a closure for an operation
struct Operation<T, F> {
    value: T,
    operation: F,
}

/// An implementation of the Operation struct for integers
impl<T, F> Operation<T, F>
where
    T: std::ops::AddAssign,
    F: Fn(T, T) -> T,
{
    fn perform_operation(&mut self, other: T) {
        (self.operation)(self.value, other);
    }
}

fn main() {
    // Create an Operation struct with value 5 and an add operation
    let mut addition_operation = Operation {
        value: 5,
        operation: |x, y| x += y,
    };
    // Perform the operation with value 3
    addition_operation.perform_operation(3);
    
    // Print the result (8)
    println!("{}", addition_operation.value);
}
// Define a struct named 'Employee'
struct Employee {
    name: String,
    age: u8,
    department: String,
    position: String,
    salary: f64,
}

// Implement a method to calculate employee's bonus based on their salary
impl Employee {
    fn calculate_bonus(&self) -> f64 {
        match self.position.as_ref() {
            "Manager" => self.salary * 0.15, // 15% bonus for Managers
            "Software Engineer" => self.salary * 0.10, // 10% bonus for Software Engineers
            "Analyst" => self.salary * 0.12, // 12% bonus for Analysts
            _ => 0.00, // default case for all other positions
        }
    }
}

// Create an instance of Employee struct
let employee = Employee {
    name: String::from("John Doe"),
    age: 32,
    department: String::from("Engineering"),
    position: String::from("Software Engineer"),
    salary: 100000.00,
};

// Print the employee's bonus using the implemented method
println!("{}'s bonus is: {}", employee.name, employee.calculate_bonus());

// Output:
// John Doe's bonus is: 10000.00
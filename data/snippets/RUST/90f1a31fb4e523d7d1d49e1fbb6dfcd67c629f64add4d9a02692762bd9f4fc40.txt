/// Converts a given number from decimal to binary.
/// Input: decimal number
/// Output: binary equivalent of the input
fn convert_to_binary(dec_num: i32) -> String {
    // initialize an empty vector
    let mut binary_vec: Vec<i32> = Vec::new();

    // loop while decimal number is greater than 0
    while dec_num > 0 {
        // append the remainder of dividing the decimal number by 2
        // to the binary vector
        binary_vec.push(dec_num % 2);

        // divide the decimal number by 2
        dec_num = dec_num / 2;
    }

    // reverse the order of elements in the binary vector
    binary_vec.reverse();

    // convert each element in the binary vector to a string
    let binary_string: Vec<String> = binary_vec.iter()
        .map(|num| num.to_string())
        .collect();

    // join all elements in the binary string vector to form the
    // final binary number string
    let binary_number = binary_string.join("");

    // return the final binary number string
    binary_number
}

// test the function
println!("{}", convert_to_binary(10));
// output: 1010
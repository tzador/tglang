use std::collections::HashMap;

fn main() {
    // Create a vector with some integers
    let numbers: Vec<i32> = vec![1, 2, 3, 4, 5];

    // Create a mutable hashmap
    let mut map = HashMap::new();

    // Populate the hashmap with key-value pairs
    for (index, number) in numbers.iter().enumerate() {
        map.insert(index, number);
    }

    // Print the hashmap
    println!("{:?}", map);

    // Find the squared value of each number in the vector
    let squared_numbers: Vec<i32> = numbers.iter().map(|x| x * x).collect();

    // Print the squared numbers
    println!("Squared numbers: {:?}", squared_numbers);
}
struct Rectangle {         // defining a Rectangle struct
    width: f64,            // f64 is a 64-bit floating point number
    height: f64
}

impl Rectangle {           // implementing methods for Rectangle struct
    fn area(&self) -> f64 {    // area method with self as parameter and return type f64
        self.width * self.height    // returns the calculated area
    }

    fn perimeter(&self) -> f64 {   // perimeter method
        (2.0 * self.width) + (2.0 * self.height)   // returns the calculated perimeter
    }

    fn is_square(&self) -> bool {   // method to check if the rectangle is a square
        self.width == self.height    // returns true if width and height are equal
    }
}

fn main() {
    let rectangle = Rectangle {    // creating an instance of Rectangle struct
        width: 5.0,                // specifying width as 5.0
        height: 5.0                // specifying height as 5.0
    };

    let area = rectangle.area();   // calling the area method on the rectangle instance
    println!("Area of the rectangle is: {}", area);  // printing the calculated area

    let perimeter = rectangle.perimeter();   // calling the perimeter method on the rectangle instance
    println!("Perimeter of the rectangle is: {}", perimeter);  // printing the calculated perimeter

    let is_square = rectangle.is_square();   // calling the is_square method on the rectangle instance
    println!("Is the rectangle a square? {}", is_square);  // printing the result of the method call
}
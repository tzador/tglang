fn main() {
    // Create a mutable vector with 10 elements.
    let mut v = Vec::with_capacity(10);
    for i in 1..=10 {
        v.push(i);
    }

    // Print the vector.
    println!("{:?}", v);

    // Multiply each element by 2.
    v.iter_mut().for_each(|x| *x *= 2);

    // Filter out elements that are not divisible by 3.
    let divisible_by_3 = v.iter().filter(|x| *x % 3 == 0).collect();

    // Print the filtered vector.
    println!("{:?}", divisible_by_3);

    // Create a struct to represent a person.
    struct Person {
        name: String,
        age: u8,
        location: String
    }

    // Create a vector of Person structs.
    let people = vec![
        Person { name: String::from("John"), age: 32, location: String::from("Los Angeles") },
        Person { name: String::from("Sarah"), age: 27, location: String::from("New York City") },
        Person { name: String::from("Mike"), age: 41, location: String::from("Chicago") }
    ];

    // Print the vector of people.
    println!("{:#?}", people);
}
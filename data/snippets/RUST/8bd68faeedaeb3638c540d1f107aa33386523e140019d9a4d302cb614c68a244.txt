// A struct representing a rectangle
struct Rectangle {
    width: i32,
    height: i32
}

impl Rectangle {
    // Method to calculate the area of the rectangle
    fn area(&self) -> i32 {
        self.width * self.height
    }

    // Method to calculate the perimeter of the rectangle
    fn perimeter(&self) -> i32 {
        2 * (self.width + self.height)
    }

    // Method to check if the rectangle is a square
    fn is_square(&self) -> bool {
        self.width == self.height
    }
}

fn main() {
    // Create an instance of the Rectangle struct
    let rectangle = Rectangle { width: 5, height: 5 };

    // Print the area of the rectangle
    println!("Area of rectangle with width {} and height {} is {}", rectangle.width, rectangle.height, rectangle.area());

    // Print the perimeter of the rectangle
    println!("Perimeter of rectangle with width {} and height {} is {}", rectangle.width, rectangle.height, rectangle.perimeter());

    // Check if the rectangle is a square and print the result
    if rectangle.is_square() {
        println!("This rectangle is a square.");
    } else {
        println!("This rectangle is not a square.");
    }
}
// Function to recursively calculate the n-th Fibonacci number
fn fibonacci(n: u32) -> u64 {
    // Base cases for n = 0 and n = 1
    if n == 0 {
        return 0;
    } else if n == 1 {
        return 1;
    }

    // Recursive call to calculate n-th Fibonacci number
    fibonacci(n - 1) + fibonacci(n - 2)
}

// Main function to call the fibonacci function and print the result
fn main() {
    // User input for n
    print!("Enter the value of n: ");
    let mut input = String::new();
    std::io::stdin()
        .read_line(&mut input)
        .expect("Failed to read input.");

    // Convert input to u32
    let n: u32 = input.trim().parse().expect("Invalid input.");

    // Call fibonacci function and store the result
    let result = fibonacci(n);

    // Print result with annotation
    println!("The {}-th Fibonacci number is {}", n, result);
}
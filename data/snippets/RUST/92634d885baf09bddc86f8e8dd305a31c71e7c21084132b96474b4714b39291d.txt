//Define a struct representing a car
//Structs in Rust are custom data types that can hold multiple fields
struct Car {
    model: String,
    year: u16,
    color: String,
    is_sportscar: bool
}

//Create an instance of the Car struct
let my_car = Car {
    model: String::from("Mustang"),
    year: 1967,
    color: String::from("red"),
    is_sportscar: true
};

//Create a function that takes in a Car struct as a parameter and displays its information
fn display_car_info(car: Car) {
    println!("Model: {}", car.model);
    println!("Year: {}", car.year);
    println!("Color: {}", car.color);
    if car.is_sportscar {
        println!("Sportscar: Yes");
    } else {
        println!("Sportscar: No");
    }
}

//Call the function to display my_car's information
display_car_info(my_car);

//Output:
//Model: Mustang
//Year: 1967
//Color: red
//Sportscar: Yes
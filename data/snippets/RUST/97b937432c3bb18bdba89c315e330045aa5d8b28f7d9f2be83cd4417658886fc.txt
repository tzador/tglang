// This is a code snippet in RUST
// It implements a function that calculates the factorial of a given number recursively

/// Calculates the factorial of a given number recursively
///
/// Returns the calculated factorial as a u64 value
fn factorial(num: u64) -> u64 {
    // Base case: If number is 0 or 1, factorial is 1
    if num == 0 || num == 1 {
        return 1;
    }
    // Recursive case: Calculate factorial by multiplying
    // the number with the factorial of the number - 1
    else {
        return num * factorial(num - 1);
    }
}

fn main() {
    // Test the factorial function with a given number
    let num = 5;
    let result = factorial(num);
    // Print the result
    println!("Factorial of {} is {}", num, result);
}

/*
Expected Output:
Factorial of 5 is 120
*/
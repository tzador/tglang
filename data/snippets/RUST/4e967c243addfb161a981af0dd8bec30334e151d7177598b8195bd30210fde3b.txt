fn main() {
    // define a function that calculates the GCD of two numbers
    fn gcd(num1: u32, num2: u32) -> u32 {
        // use pattern matching to check if one of the numbers is 0
        match (num1, num2) {
            // if one of the numbers is 0, the GCD is the other number
            (0, _) | (_, 0) => num1 + num2,
            // if both numbers are equal, the GCD is that number
            (x, y) if x == y => x,
            // if one number is larger, recursively call the function with the difference
            (x, y) if x > y => gcd(x - y, y),
            // if the other number is larger, recursively call the function with the difference
            (x, y) => gcd(x, y - x),
        }
    }

    // call the function with two numbers and print the result
    let result = gcd(36, 18);
    println!("The GCD of 36 and 18 is {}", result);
}
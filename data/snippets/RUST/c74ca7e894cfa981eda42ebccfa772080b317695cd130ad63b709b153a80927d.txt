fn main() {
    // Intially declare an array of strings
    let my_array: [String; 5] = ["Hello", "I", "am", "a", "Rust programmer"];

    // Create a variable to hold the length of the array
    let array_len = my_array.len();

    // Create a new vector of strings
    let mut new_vec: Vec<String> = Vec::new();

    // Loop through the array and push each string into the vector
    for i in 0..array_len {
        new_vec.push(my_array[i].to_string());
    }

    // Print out the contents of the vector
    println!("{:?}", new_vec);

    // Print out the length of the vector
    println!("Vector length: {}", new_vec.len());

    // Create a new variable for the number of times to multiply the vector
    let multiply_num = 3;

    // Function to multiply the vector by a given number of times
    fn multiply_vector(num: usize, vec: &Vec<String>) -> Vec<String> {
        // Create a new vector to hold the multiplied values
        let mut result: Vec<String> = Vec::new();

        // Loop through the given vector and multiply each element by the given number
        for item in vec {
            for _ in 0..num {
                result.push(item.to_string());
            }
        }
        result
    }

    // Call the function to multiply the vector and store the result in a new variable
    let multiplied_vec = multiply_vector(multiply_num, &new_vec);

    // Print out the multiplied vector
    println!("{:?}", multiplied_vec);

    // Print out the length of the multiplied vector
    println!("Multiplied vector length: {}", multiplied_vec.len());
}
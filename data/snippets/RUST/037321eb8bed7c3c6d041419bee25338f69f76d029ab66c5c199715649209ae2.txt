fn main() {
    let list = vec![1, 2, 3, 4, 5]; // Creating a vector of integers
    println!("Original list: {:?}", list);

    // Using map to multiply each element in the vector by 10
    let new_list = list.iter().map(|x| x * 10).collect::<Vec<i32>>(); 
    println!("New list: {:?}", new_list);

    // Using filter to only keep elements that are divisible by 3
    let filtered_list = list.iter().filter(|x| x % 3 == 0).collect::<Vec<&i32>>();
    println!("Filtered list: {:?}", filtered_list);

    // Using fold to find the sum of all elements in the vector
    let sum = list.iter().fold(0, |acc, x| acc + x);
    println!("Sum of all elements in list: {}", sum);

    // Using for loop to print all elements in the vector
    for num in &list {
        println!("Current number: {}", num);
    }
}
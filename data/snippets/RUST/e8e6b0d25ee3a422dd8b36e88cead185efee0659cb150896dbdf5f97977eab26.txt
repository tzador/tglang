/// This function checks if a given number is prime or not
/// It takes in a positive integer and returns a boolean value
fn is_prime(n: u32) -> bool {
    // Check for edge cases
    if n < 2 {
        // Numbers less than 2 cannot be prime
        return false;
    }
    // Use trial division method to check for primality
    // Loop through all numbers from 2 to the square root of n
    for i in 2..=(n as f64).sqrt() as u32 {
        // If n is divisible by any number, it is not prime
        if n % i == 0 {
            // Return false as soon as a divisor is found
            return false;
        }
    }
    // If no divisors are found, n is prime
    true
}
// Define a struct named "Rectangle" with two fields, width and height
struct Rectangle {
    width: u32,
    height: u32,
}

// Implementation of a method that calculates the area of a Rectangle struct
impl Rectangle {
    fn area(&self) -> u32 {
        self.width * self.height
    }
}

// Implementation of a method for displaying information about a Rectangle struct
impl Rectangle {
    fn display(&self) {
        println!("Rectangle with width {} and height {}.", self.width, self.height);
    }
}

// Create an instance of the Rectangle struct
let rectangle = Rectangle {
    width: 10,
    height: 5,
};

// Call the area method of the Rectangle instance and print the result
println!("The area of the rectangle is {}.", rectangle.area());

// Call the display method of the Rectangle instance to print information
rectangle.display();

// Declare a mutable reference to the Rectangle instance
let mut rectangle_mut = &mut rectangle;

// Modify the width of the Rectangle instance using the mutable reference
rectangle_mut.width = 15;

// Call the area method again to see the change
println!("The new area of the rectangle is {}.", rectangle.area());
struct User {
    username: String,
    email: String,
    age: u32,
    is_active: bool,
}

impl User {
    // Create a new instance of User
    pub fn new(username: String, email: String, age: u32, is_active: bool) -> Self {
        User {
            username,
            email,
            age,
            is_active,
        }
    }

    // Update the user's email
    pub fn update_email(&mut self, new_email: String) {
        self.email = new_email;
    }

    // Check if the user is over 18 years old
    pub fn is_over_18(&self) -> bool {
        if self.age > 18 {
            true
        } else {
            false
        }
    }
}

fn main() {
    // Create a new user with initial values
    let user1 = User::new(String::from("JohnDoe"), String::from("johndoe@gmail.com"), 25, true);

    // Print the user's information
    println!("Username: {}", user1.username);
    println!("Email: {}", user1.email);
    println!("Age: {}", user1.age);

    // Update the user's email
    user1.update_email(String::from("john.doe@example.com"));

    // Print the updated email
    println!("Updated email: {}", user1.email);

    // Check if the user is over 18
    if user1.is_over_18() {
        println!("User is over 18");
    } else {
        println!("User is not over 18");
    }
}
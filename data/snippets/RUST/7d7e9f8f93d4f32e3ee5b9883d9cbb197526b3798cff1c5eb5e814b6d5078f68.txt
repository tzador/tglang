#[warn(missing_docs)]
fn main() {
    // A struct representing a student
    struct Student {
        name: String,
        age: u8,
        major: String,
    }

    // Creating an instance of student struct
    let student1 = Student {
        name: String::from("John"),
        age: 20,
        major: String::from("Computer Science"),
    };

    // A method to display student's name and age
    impl Student {
        fn display_name_age(&self) {
            println!("Name: {}", self.name);
            println!("Age: {}", self.age);
        }
    }

    // A function that takes in a closure and executes it
    fn execute(closure: impl Fn()) {
        closure();
    }

    // Using closure to display student's information
    execute(|| println!("Major: {}", student1.major));

    // A trait for student behaviors
    trait StudentBehavior {
        fn study(&self);
        fn party(&self);
    }

    // Implementing student behavior trait for Student struct
    impl StudentBehavior for Student {
        fn study(&self) {
            println!("{} is studying", self.name);
        }

        fn party(&self) {
            println!("{} is partying", self.name);
        }
    }

    // create a new student instance to demonstrate trait behavior
    let student2 = Student {
        name: String::from("Jane"),
        age: 21,
        major: String::from("Psychology"),
    };

    // Calling trait methods on student instances
    student1.study();
    student2.party();
}
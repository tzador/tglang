// Defining a function that takes two arguments of type 'float'
fn calc_area(length: f32, width: f32) -> f32 {
    // Using match expression to handle potential errors
    match length {
        // Checking if length is a positive number
        x if x > 0.0 => {
            // Using nested if-else statements to handle different scenarios
            if width > 0.0 {
                // Multiplying length and width to calculate area
                length * width
            // Handling scenario where width is negative
            } else if width < 0.0 {
                // Dividing length by the absolute value of width to calculate area
                length / width.abs()
            // Handling scenario where width is 0
            } else {
                // Returning 0 as the area
                0.0
            }
        },
        // Handling scenario where length is 0
        0.0 => {
            // Returning 0 as the area
            0.0
        },
        // Handling scenario where length is negative 
        _ => {
            // Multiplying length by the absolute value of width to calculate area
            length * width.abs()
        }
    }
}
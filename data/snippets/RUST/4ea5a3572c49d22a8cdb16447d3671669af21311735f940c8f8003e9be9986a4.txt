/// Defines a struct called "Triangle" with three fields representing the length of each side.
struct Triangle {
    side1: f64,
    side2: f64,
    side3: f64,
}

/// A method to calculate the perimeter of the triangle.
impl Triangle {
    fn perimeter(&self) -> f64 {
        self.side1 + self.side2 + self.side3
    }
}

/// A method to check if the triangle is equilateral, isosceles, or scalene.
impl Triangle {
    fn triangle_type(&self) -> String {
        if self.side1 == self.side2 && self.side2 == self.side3 {
            "equilateral".to_string()
        } else if self.side1 == self.side2 || self.side1 == self.side3 || self.side2 == self.side3 {
            "isosceles".to_string()
        } else {
            "scalene".to_string()
        }
    }
}

fn main() {
    // Create a new instance of Triangle.
    let my_triangle = Triangle {
        side1: 10.0,
        side2: 10.0,
        side3: 10.0,
    };

    // Print the perimeter of the triangle.
    println!("Perimeter: {}", my_triangle.perimeter());

    // Print the type of the triangle.
    println!("Type: {}", my_triangle.triangle_type());
}
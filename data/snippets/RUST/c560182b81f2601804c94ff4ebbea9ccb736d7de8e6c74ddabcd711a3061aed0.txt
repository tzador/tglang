fn main() {
    // Create a vector with multiple data types
    let mut data = vec![1, String::from("hello"), 3.14, false];

    // Use a loop to iterate through the vector and print its contents
    for element in &data {
        println!("{:?}", element); // the {:?} formatting prints the data as is, without consuming it
    }

    // Add another element to the vector
    data.push("world");

    // Use pattern matching to print different messages based on the data type of the last element
    match data[data.len() - 1] {
        1 => println!("The last element is an integer"),
        String => println!("The last element is a string"),
        f64 => println!("The last element is a float"),
        bool => println!("The last element is a boolean"),
        _ => println!("The last element is an unknown type"),
    }
}
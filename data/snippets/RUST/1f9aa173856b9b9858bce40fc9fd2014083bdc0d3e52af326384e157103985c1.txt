/// This is a function in Rust that takes in a vector of numbers and outputs their cumulative sum
fn cumulative_sum(numbers: Vec<i32>) -> Vec<i32> {
    let mut result = Vec::with_capacity(numbers.len()); // creates an empty vector to store results
    let mut sum = 0;
    for number in numbers {
        sum += number; // adds each number to the current sum
        result.push(sum); // appends the current sum to the result vector
    }
    result // returns the result vector
}

fn main() {
    let nums = vec![1, 2, 3, 4, 5]; // creates a vector with some numbers
    let sum = cumulative_sum(nums); // calls the cumulative_sum function on the vector
    println!("{:?}", sum); // prints the result vector
}
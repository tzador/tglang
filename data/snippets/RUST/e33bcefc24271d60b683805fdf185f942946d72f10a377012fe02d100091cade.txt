/// A simple Rust program that calculates the factorial of a number using recursion
// Define a function that takes in an integer as a parameter and returns an integer
fn factorial(num: u64) -> u64 {
    // Check if the number is 0 or 1 and return 1 if so
    if num == 0 || num == 1 {
        // Return 1
        return 1;
    } else {
        // Otherwise, recursively call the factorial function with the number decremented by 1
        // and multiply it by the original number
        return num * factorial(num - 1);
    }
}

// Main function
fn main() {
    // Define a variable to store the input from the user
    let mut input = String::new();

    // Get input from the user
    std::io::stdin().read_line(&mut input).expect("Failed to read line");

    // Convert the input to an integer
    let num: u64 = input.trim().parse().expect("Please enter a valid number");

    // Call the factorial function and store the result in a variable
    let result = factorial(num);

    // Print the result
    println!("The factorial of {} is {}", num, result);
}

// Call the main function
main();
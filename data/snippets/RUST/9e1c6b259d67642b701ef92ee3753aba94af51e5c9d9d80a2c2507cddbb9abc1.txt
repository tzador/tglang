/// This function calculates the greatest common divisor of two numbers using Euclid's algorithm.
fn gcd(x: u64, y: u64) -> u64 {
    let mut a = x;
    let mut b = y;

    while b != 0 {
        let t = b;
        b = a % b;
        a = t;
    }

    return a;
}

/// This function calculates the least common multiple of two numbers using the gcd function.
fn lcm(x: u64, y: u64) -> u64 {
    let gcd = gcd(x, y);

    return x * y / gcd;
}

fn main() {
    let num1 = 12;
    let num2 = 18;

    println!("The greatest common divisor of {} and {} is {}", num1, num2, gcd(num1, num2));
    println!("The least common multiple of {} and {} is {}", num1, num2, lcm(num1, num2));
}
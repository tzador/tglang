// Use the std::fmt library for formatting
use std::fmt;

// Define a struct for storing information about a person
struct Person {
    name: String,
    age: u32,
    gender: &'static str,
    hobbies: Vec<String>,
    address: Address,
}

// Define a struct for storing information about a person's address
struct Address {
    street: String,
    city: String,
    state: String,
    zip_code: u32,
}

// Implement the Display trait for Person to customize how it is printed
impl fmt::Display for Person {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(
            f,
            "{} is a {} year old {} living at {}",
            self.name, self.age, self.gender, self.address
        )
    }
}

fn main() {
    // Create a new Person instance
    let person = Person {
        name: String::from("Jane"),
        age: 28,
        gender: "female",
        hobbies: vec![String::from("reading"), String::from("hiking"), String::from("coding")],
        address: Address {
            street: String::from("123 Main Street"),
            city: String::from("Seattle"),
            state: String::from("Washington"),
            zip_code: 98101,
        },
    };

    // Print out the person's information using the Display trait
    println!("{}", person);
}
fn bubble_sort<T: Ord>(arr: &mut [T]) { // declare a function called bubble_sort that takes in a generic type T
    for i in 0..arr.len() { // iterate through the given array
        for j in 0..arr.len()-1 { // iterate through the remaining elements
            if arr[j] > arr[j+1] { // compare adjacent elements
                arr.swap(j, j+1); // if first element is larger, swap with second element
            }
        }
    }
}

let mut list = vec![5, 2, 7, 3, 1]; // create a mutable vector containing unsorted integers
bubble_sort(&mut list); // call the bubble_sort function on the vector
println!("{:?}", list); // print the sorted vector
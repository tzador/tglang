/// This function calculates the Nth Fibonacci number
/// using a dynamic programming approach.
fn fibonacci(n: usize) -> usize {
    let mut cache: Vec<usize> = Vec::with_capacity(n);
    cache.push(0);
    cache.push(1);

    for i in 2..n {
        let num = cache[i - 1] + cache[i - 2];
        cache.push(num);
    }

    *cache.last().unwrap()
}

// Example usage:
println!("{}", fibonacci(10));  // Outputs: 55
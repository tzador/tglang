// Define a generic function that takes in a vector of any type and returns its sum

fn vector_sum<T: std::ops::Add<Output = T> + From<i8>>(vec: Vec<T>) -> T {
    // Declare a variable to store the sum
    let mut sum: T = T::from(0);
    
    // Loop through each value in the vector and add it to the sum
    for val in vec {
        sum = sum + val;
    }
    
    // Return the final sum
    sum
}

// Create a vector of numbers and pass it to the vector_sum function
let numbers = vec![1, 2, 3, 4, 5, 6];

// Call the vector_sum function and store the result in a variable
let result = vector_sum(numbers);

// Print the result
println!("The sum of the vector is {}", result);
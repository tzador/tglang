// Define a struct named "Rectangle" with two fields of type "f64"
struct Rectangle {
    width: f64,
    height: f64,
}

// Implement an associated function for the Rectangle struct
impl Rectangle {
    // Define an associated function named "new" that takes in two arguments of type "f64" and returns a Rectangle struct
    fn new(width: f64, height: f64) -> Rectangle {
        // Use the arguments to initialize the values of the struct fields
        Rectangle { width: width, height: height }
    }

    // Define a method for the Rectangle struct that calculates the area of the rectangle
    fn area(&self) -> f64 {
        // Calculate and return the area by multiplying width and height
        self.width * self.height
    }

    // Define a method for the Rectangle struct that checks if the rectangle is a square
    fn is_square(&self) -> bool {
        // Check if the width and height are equal and return the result as a boolean
        self.width == self.height
    }
}

// Create a new Rectangle instance by calling the associated function "new"
let rectangle = Rectangle::new(5.0, 5.0);

// Print the area of the rectangle using the method "area"
println!("The area of the rectangle is {} square units.", rectangle.area());

// Print a message indicating whether the rectangle is a square or not using the method "is_square"
if rectangle.is_square() {
    println!("This rectangle is a square.");
} else {
    println!("This rectangle is not a square.");
}
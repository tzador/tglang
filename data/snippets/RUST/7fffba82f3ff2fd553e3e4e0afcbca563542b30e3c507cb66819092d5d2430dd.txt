use std::io; //import io module from standard library
use std::cmp::Ordering; //import Ordering enum from std::cmp module

//define a function to check if a number is a prime number
fn is_prime(n: u32) -> bool {
    if n <= 1 { //check if the number is less than or equal to 1
        return false; //if true, return false
    }
    for i in 2..n { //loop from 2 to n-1
        if n % i == 0 { //check if the number is divisible by i
            return false; //if true, return false
        }
    }
    true //return true if the number is not divisible by any number from 2 to n-1
}

fn main() {
    println!("Welcome to the prime number checker!"); //print welcome message

    loop { //start a loop
        println!("Please enter a number to check if it is prime: "); //ask for user input
        let mut input = String::new(); //create a new mutable String variable to store user input

        io::stdin().read_line(&mut input) //read user input and store it in the input variable
            .expect("Failed to read line"); //handle any errors

        let input: u32 = match input.trim().parse() { //convert input to u32 type
            Ok(num) => num, //if successful, return the number
            Err(_) => continue, //if unsuccessful, continue the loop
        };

        match is_prime(input) { //check if the input is a prime number
            true => println!("{} is a prime number!", input), //if true, print the result
            false => println!("{} is not a prime number", input), //if false, print the result
        }

        println!("Would you like to check another number? (y/n)"); //ask user if they want to check another number
        let mut answer = String::new(); //create a new mutable String variable to store user input

        io::stdin().read_line(&mut answer) //read user input and store it in the answer variable
            .expect("Failed to read line"); //handle any errors

        if answer.trim() == "n" { //check if user wants to exit the program
            break; //break out of the loop
        }
    }
}
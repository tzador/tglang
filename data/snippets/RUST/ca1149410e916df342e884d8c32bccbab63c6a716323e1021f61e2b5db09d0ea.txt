// This code snippet defines a struct named 'Person' with fields 'name', 'age', 'country', 'occupation'
struct Person {
    name: String, // string type field
    age: u8, // unsigned 8-bit integer type field
    country: String, // string type field
    occupation: String, // string type field
}

impl Person { // implementation block for the 'Person' struct
    // Function that returns the person's profession based on their age and occupation
    fn get_profession(&self) -> String {
        if self.age > 50 { // check if age is greater than 50
            format!("Retired {}", self.occupation) // return a string with the person's occupation
        }
        else if self.age > 30 { // check if age is greater than 30
            format!("Experienced {}", self.occupation) // return a string with the person's occupation
        }
        else {
            format!("Junior {}", self.occupation) // return a string with the person's occupation
        }
    }
}

fn main() {
    // Create an instance of the 'Person' struct
    let person1 = Person {
        name: String::from("John"), // set name field as a String type
        age: 25, // set age field as an unsigned 8-bit integer type
        country: String::from("USA"), // set country field as a String type
        occupation: String::from("Software Engineer"), // set occupation field as a String type
    };

    // Print the person's name, age, country, and profession
    println!("Name: {}", person1.name);
    println!("Age: {}", person1.age);
    println!("Country: {}", person1.country);
    println!("Profession: {}", person1.get_profession()); // call the get_profession() function on the person1 instance
}
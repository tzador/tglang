#![allow(unused)]
fn main() {
    let mut vector1: Vec<i32> = Vec::new();
    vector1.push(10);
    vector1.push(20);
    let vector2 = vec![1, 2, 3];

    let mut cloned_vector = vector1.clone();
    cloned_vector.extend(vector2);

    let mut iterator = vector1.iter();

    // Use `while` keyword to create a loop
    while let Some(value) = iterator.next() {
        println!("Value: {}", value);
    }

    // Use `for` loop to iterate through vector elements
    for element in cloned_vector.iter() {
        println!("Next element: {}", element);
    }

    // Use `map` function to transform values in the vector
    let transformed_vector: Vec<_> = vector1.iter().map(|x| x * 2).collect();
}
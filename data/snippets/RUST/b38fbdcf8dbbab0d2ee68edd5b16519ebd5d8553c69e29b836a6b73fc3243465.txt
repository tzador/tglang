// Define a struct representing a student
struct Student<'a> {
    name: &'a str,
    age: u8,
    grades: Vec<u8>,
}

impl<'a> Student<'a> {
    // Function to calculate average grade for a student
    fn calculate_average_grade(&self) -> f32 {
        // Use the fold method to sum all grades and divide by total number of grades
        let sum: u32 = self.grades.iter().fold(0, |acc, &grade| acc + grade as u32);
        let total_grades = self.grades.len() as u32;
        let average = sum as f32 / total_grades as f32;
        average
    }

    // Function to check if the student is eligible for an honor roll
    fn is_eligible_for_honor_roll(&self) -> bool {
        // Use the any method to check if any grade is below 80
        !self.grades.iter().any(|&grade| grade < 80)
    }
}

// Create an instance of the Student struct
let student = Student {
    name: "John",
    age: 18,
    grades: vec![85, 90, 92, 88, 95],
};

// Print the average grade and eligibility for honor roll
println!("The average grade for {} is {:.2}", student.name, student.calculate_average_grade());
if student.is_eligible_for_honor_roll() {
    println!("{} is eligible for honor roll", student.name);
} else {
    println!("{} is not eligible for honor roll", student.name);
}
/// This function calculates the nth Fibonacci number using recursion
fn fibonacci(n: u32) -> u32 {
    match n {
        0 => 0,
        1 => 1,
        _ => fibonacci(n - 1) + fibonacci(n - 2)
    }
}

fn main() {
    // Define the number of iterations
    let iterations = 10;

    // Create a vector to store the Fibonacci numbers
    let mut fibonacci_sequence: Vec<u32> = Vec::new();

    // Loop through the iterations and calculate the Fibonacci numbers
    for n in 0..iterations {
        fibonacci_sequence.push(fibonacci(n));
    }

    // Print out the results
    println!("The first {} numbers in the Fibonacci sequence are: {:?}", iterations, fibonacci_sequence);
}
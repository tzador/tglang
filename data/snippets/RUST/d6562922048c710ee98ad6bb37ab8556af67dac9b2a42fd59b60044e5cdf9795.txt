// create a struct named Rectangle with two fields, length and width, both of type f32
// the struct will have a method named area that calculates and returns the area of the rectangle

struct Rectangle {
    length: f32,
    width: f32,
}

impl Rectangle {
    // create the area method
    fn area(&self) -> f32 {
        self.length * self.width
    }
}

// create a function named print_area that takes in a Rectangle struct as a parameter
// this function will print the area of the rectangle using the struct's area() method

fn print_area(rectangle: Rectangle) {
    // call the area() method and store the result in a variable named area
    let area = rectangle.area();
    // print the area to the console with a formatted string
    println!("The area of the rectangle is {} square units.", area);
}

// create a main function to test the functionality of the Rectangle struct and print_area function
fn main() {
    // create a new Rectangle instance with a length of 10 and a width of 5
    let rectangle = Rectangle {
        length: 10.0,
        width: 5.0,
    };
    // call the print_area function with the rectangle as a parameter
    print_area(rectangle);
}

// output:
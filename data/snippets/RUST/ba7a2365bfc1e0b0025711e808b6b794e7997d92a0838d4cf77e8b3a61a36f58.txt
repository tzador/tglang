/** 
* A function that calculates the nth number in the Fibonacci sequence
* using dynamic programming for optimization
* @param n The index of the number in the sequence to be calculated
* @return The nth number in the Fibonacci sequence
*/
fn fibonacci(n: u32) -> u32 {
    let mut fib_nums = vec![0; n as usize + 1];
    fib_nums[0] = 0;
    fib_nums[1] = 1;
    for i in 2..n+1 {
        fib_nums[i as usize] =
            fib_nums[i as usize - 1] + fib_nums[i as usize - 2];
    }
    *fib_nums.last().unwrap()
}

// Example usage: Calculates the 10th number in the Fibonacci sequence
let result = fibonacci(10);
println!("{}", result); // Output: 55
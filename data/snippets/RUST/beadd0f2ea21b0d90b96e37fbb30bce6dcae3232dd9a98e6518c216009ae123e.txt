// Define a struct with generic type parameters
struct Pair<T, U> {
    first: T,
    second: U,
}

// Implement a method for the Pair struct
impl<T, U> Pair<T, U> {
    // A method that takes in an initial value and returns a new Pair with the initial value and its doubled value
    fn double(self, initial: T) -> Pair<T, U> where T: std::ops::Mul<Output = T> + From<u8> {
        // Return a new Pair with the initial value and its doubled value
        Pair {
            first: initial,
            second: initial * T::from(2),
        }
    }
}

fn main() {
    // Create a Pair of strings and nums
    let pair1 = Pair { first: String::from("Hello"), second: 5 };
    // Use the double method to create a new Pair
    let pair2 = pair1.double(String::from("Hi"));
}
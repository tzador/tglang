use std::collections::HashMap;

// Define a function that takes in a vector of strings and returns a hashmap
// containing each string as a key and its length as the value
fn convert_to_hashmap(strings: Vec<String>) -> HashMap<String, usize> {
    // Create an empty hashmap
    let mut hashmap = HashMap::new();

    // Iterate through the vector
    for string in strings {
        // Get the length of the current string
        let length = string.len();
        // Insert the key-value pair into the hashmap
        hashmap.insert(string, length);
    }

    // Return the hashmap from the function
    hashmap
}

// Create a vector of strings to use as input
let input = vec!["apple".to_string(), "banana".to_string(), "carrot".to_string()];

// Call the function and assign the returned hashmap to a variable
let hashmap = convert_to_hashmap(input);

// Print the hashmap to the console
println!("{:?}", hashmap);
struct Person { //creates a struct named Person
    name: String, //field for storing person's name
    age: i32, //field for storing person's age
    city: String, //field for storing person's city
    
}

impl Person { //implementation block for the struct
    fn new(name: &str, age: i32, city: &str) -> Person{ //function to create a new instance of Person
        Person { //creates an instance of Person struct
            name: String::from(name), //assigns value to name field using String from method
            age: age, //assigns value to age field
            city: String::from(city), //assigns value to city field using String from method
        }
    }

    fn change_city(&mut self, new_city: &str) {//function to change the city field of the Person instance
        self.city = String::from(new_city); //assigns new value to city field using String from method
    }
}

fn main() { //main function
    let mut person = Person::new("John Doe", 25, "New York"); //creates a new instance of Person
    person.change_city("Los Angeles"); //calls the change_city function to change the city to Los Angeles
    println!("Name: {}, Age: {}, City: {}", person.name, person.age, person.city); //prints the values of the Person instance
}
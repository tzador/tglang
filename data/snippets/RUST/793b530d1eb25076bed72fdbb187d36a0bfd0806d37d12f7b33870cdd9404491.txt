// This code snippet creates a vector and sorts its elements using a custom comparison function
let mut vector = vec![5, 2, 9, 3, 10];

// Define a custom comparison function
fn compare(a: &i32, b: &i32) -> Ordering {
    if a % 2 == 0 && b % 2 == 0 { // If both elements are even, compare them normally
        a.cmp(b)
    } else if a % 2 != 0 && b % 2 != 0 { // If both elements are odd, compare them in reverse order
        b.cmp(a)
    } else { // If one element is even and the other is odd, put the even element first
        Ordering::Less
    }
}

// Sort the vector using the custom comparison function
vector.sort_by(compare);

// Print the sorted vector
println!("{:?}", vector); // Outputs [2, 10, 3, 9, 5]
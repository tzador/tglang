use std::collections::HashMap;

fn main() {
    let mut map = HashMap::new(); // create a new HashMap
    
    map.insert("key1", "value1"); // insert a key-value pair into the HashMap
    map.insert("key2", "value2");
    map.insert("key3", "value3");

    let keys: Vec<_> = map.keys().collect(); // get a Vec of all keys in the HashMap
    let values: Vec<_> = map.values().collect(); // get a Vec of all values in the HashMap

    println!("Keys: {:?}, Values: {:?}", keys, values); // print the keys and values

    map.remove("key1"); // remove a key-value pair from the HashMap

    println!("Key1: {:?}", map.get("key1")); // try to get the value associated with key1, will return None

    for (key, value) in map { // iterate through the remaining key-value pairs in the HashMap
        println!("{}: {}", key, value);
    }
}
// Function to generate a random array of integers
// Takes in the length of the array and the range of values
// Returns the array of randomly generated integers

fn generate_random_array(length: u32, min: i32, max: i32) -> [i32; length as usize] {

    // Initialize the array to store the randomly generated integers
    let mut array = [0; length as usize];

    // Loop through the array and generate a random integer for each index
    for i in 0..length {
        // Generate a random number within the specified range
        let num = rand::thread_rng().gen_range(min, max+1);
        // Assign the number to the current index of the array
        array[i as usize] = num;
    }

    // Return the randomly generated array
    array
}

// Main function to call the generate_random_array function
fn main() {
    // Set the length of the array to 10 and the range of values to between 1 and 100
    let length: u32 = 10;
    let min: i32 = 1;
    let max: i32 = 100;

    // Call the generate_random_array function and assign the result to a variable
    let random_array = generate_random_array(length, min, max);

    // Print the randomly generated array
    println!("Randomly generated array: {:?}", random_array);
}
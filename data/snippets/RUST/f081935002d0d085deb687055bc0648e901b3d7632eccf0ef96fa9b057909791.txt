use std::fs::File;
use std::io::{BufReader, BufRead};

struct Book {
  title: String,
  author: String,
  year_published: u32,
  pages: u32,
}

fn main() {
  let file = File::open("books.txt").expect("Could not open file");
  let reader = BufReader::new(file);

  //Create a mutable vector to store book objects
  let mut book_collection: Vec<Book> = Vec::new();

  //Iterate through each line in the file
  for line in reader.lines() {
    //Unwrap the Result type to get the line as a string
    let line = line.unwrap();

    //Split the line by commas and store the values in a vector
    let values: Vec<&str> = line.split(',').collect();

    //Create a new book object with the values from the line
    let new_book = Book {
      title: values[0].to_string(),
      author: values[1].to_string(),
      year_published: values[2].parse().unwrap(),
      pages: values[3].parse().unwrap(),
    };

    //Add the book object to the book collection vector
    book_collection.push(new_book);
  }

  //Print the number of books in the collection
  println!("There are {} books in the collection", book_collection.len());
}
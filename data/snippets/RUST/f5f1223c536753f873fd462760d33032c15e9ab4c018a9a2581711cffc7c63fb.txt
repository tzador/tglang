// This function takes in a vector and returns the sum of the squares of its elements
// Inputs: 
// - vec: vector of integers
// Output:
// - sum: integer representing the sum of squares
 
fn sum_of_squares(vec: Vec<i32>) -> i32 {
    let mut sum: i32 = 0;

    // Iterate through the vector
    for num in vec {
        // Calculate the square of the current element
        let square = num * num;
        
        // Add the square to the sum variable
        sum = sum + square;
    }

    // Return the sum variable
    sum
}

// Example usage
let numbers = vec![1, 2, 3, 4, 5];
let result = sum_of_squares(numbers); // 55

// Note: This function is not optimized and may result in overflow for large input vectors.
use std::env;

fn main() -> Result<(), Box<dyn std::error::Error>> {
    // Get command line arguments
    let args: Vec<String> = env::args().collect();

    // Check number of arguments
    if args.len() != 2 {
        // Print error message
        eprintln!("Error: Please provide input file name as argument");
        std::process::exit(1);
    }

    // Read input file
    let input_file = std::fs::read_to_string(&args[1])?;

    // Convert input file to vector of bytes
    let bytes: Vec<u8> = input_file.as_bytes().to_vec();

    // Process each byte
    for byte in &bytes {
        // Check if byte is a vowel
        if byte == b'a' || byte == b'e' || byte == b'i' || byte == b'o' || byte == b'u' {
            // Print vowel found
            println!("Found vowel: {}", *byte as char);
        }
    }

    Ok(())
}
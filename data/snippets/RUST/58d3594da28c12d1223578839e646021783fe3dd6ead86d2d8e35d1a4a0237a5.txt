fn fibonacci(n: i32) -> i32 {
  if n <= 0 {
    return 0;
  } else if n == 1 {
    return 1;
  } else {
    return fibonacci(n - 1) + fibonacci(n - 2);
  }
}

fn main() {
  let mut n = 10; // initialize n with value 10
  let mut fib = vec![0; n]; // create a vector to store fibonacci sequence
  let mut i = 0; // initialize i with value 0
  
  while i < n { // loop while i is less than n
    fib[i] = fibonacci(i as i32); // compute fibonacci number and store it in vector
    i += 1; // increment i by 1
  }
  
  println!("Fibonacci Sequence: {:?}", fib); // print the fibonacci sequence
}
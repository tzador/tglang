// This is a complex code snippet in RUST
struct Person { //Creating a struct named Person
    name: String,  // Declaring a field named 'name' of type String
    age: u32,  // Declaring a field named 'age' of type u32 (non-negative integer)
    gender: char  // Declaring a field named 'gender' of type char (single character)
}

impl Person { // Implementation of methods for the Person struct
    // Defining a method named 'introduce' that takes in a mutable reference to a Person instance
    fn introduce(&mut self) {
        println!("Hello, my name is {}, I am {} years old and I identify as {}.", self.name, self.age, self.gender); // Printing out an introduction using the field values of the Person instance
    }
}

fn main() { // Main function
    let mut person = Person { // Creating a mutable instance of Person named 'person'
        name: String::from("John"), // Assigning a value to the 'name' field using the from() method of the String struct
        age: 25, // Assigning a value to the 'age' field
        gender: 'M' // Assigning a value to the 'gender' field
    };

    person.introduce(); // Calling the introduce() method on the person instance to print out the introduction
}
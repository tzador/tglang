// Define a function that checks if a given word is a palindrome
// Input is a string
fn is_palindrome(word: &str) -> bool {
    // Convert the string to lowercase and remove all non-alphabetic characters
    let only_chars: String = word
        .to_lowercase()
        .chars()
        .filter(|c| c.is_alphabetic())
        .collect();

    // Check if the string is equal to its reversed version
    only_chars == only_chars.chars().rev().collect::<String>()
}

// Create a vector of words for testing
let words = vec!["Anna", "not a palindrome", "A man, a plan, a canal: Panama", "racecar"];

// Loop through the words and print if they are palindromes or not
for word in words {
    if is_palindrome(word) {
        println!("{} is a palindrome", word);
    } else {
        println!("{} is not a palindrome", word);
    }
}
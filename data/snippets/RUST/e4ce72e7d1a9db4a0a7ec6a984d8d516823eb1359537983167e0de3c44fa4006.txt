#![allow(dead_code)]
#![allow(unused_imports)]

extern crate base64;
use std::fs::File;
use std::io::prelude::*;

/// This function takes a string and encodes it using base64
/// Returns a string containing the encoded data
fn encode_string(input: &str) -> String {
    let bytes = input.as_bytes();
    let encoded = base64::encode(bytes);

    encoded
}

fn main() {
    // Open a file for reading
    let mut file = File::open("input.txt").expect("Failed to open file.");
    // Create a vector to store the contents of the file
    let mut contents: Vec<u8> = Vec::new();
    // Read the contents of the file into the vector
    file.read_to_end(&mut contents).expect("Failed to read file.");
    // Convert the vector to a string
    let contents_string = String::from_utf8(contents).expect("Failed to convert to string.");
    // Encode the string using base64
    let encoded_string = encode_string(&contents_string);
    // Print out the encoded string
    println!("Encoded string: {}", encoded_string);
}
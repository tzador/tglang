// This snippet defines a function that calculates the factorial of a number using recursion
// The function takes in an unsigned 64-bit integer and returns an unsigned 64-bit integer
fn factorial(n: u64) -> u64 {
    match n {
        // Base case for when the input is 0 or 1
        0 | 1 => 1,
        // Recursive case for all other inputs
        _ => n * factorial(n - 1)
    }
}

fn main() {
    // Initialize variable to store user input
    let mut input = String::new();

    // Prompt user for input
    println!("Enter a number to calculate its factorial: ");

    // Read input from user and store it in the variable
    std::io::stdin().read_line(&mut input).expect("Could not read input!");

    // Convert input to unsigned 64-bit integer
    let num = input.trim().parse::<u64>().expect("Could not convert to integer!");

    // Call the factorial function and store the result in a variable
    let result = factorial(num);

    // Print the result to the console
    println!("Factorial of {} is {}", num, result);
}
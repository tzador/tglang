fn main() {
    // Create a vector of 10 random numbers
    let mut nums = Vec::new();
    for _ in 0..10 {
        let num = rand::random::<i32>();
        nums.push(num);
    }

    // Print out the original vector
    println!("Original vector: {:?}", nums);

    // Sort the vector in ascending order
    nums.sort();
    println!("Sorted vector: {:?}", nums);

    // Use binary search to find the index of a specific number
    let target = 42;
    let index = nums.binary_search(&target);
    match index {
        Ok(i) => println!("The number {} is at index {}", target, i),
        Err(_) => println!("The number {} is not in the vector", target),
    }

    // Create a function to calculate the factorial of a number
    fn factorial(n: u32) -> u32 {
        match n {
            0 => 1,
            1 => 1,
            _ => n * factorial(n - 1),
        }
    }

    // Calculate the factorial of 5
    let num = 5;
    let result = factorial(num);
    println!("Factorial of {}: {}", num, result);

    // Implement a custom data type named Student
    struct Student {
        name: String,
        age: u32,
        grade: u8,
    }

    // Create an instance of the Student struct
    let student1 = Student {
        name: String::from("John"),
        age: 19,
        grade: 11,
    };

    // Print out the student's information
    println!("Name: {}", student1.name);
    println!("Age: {}", student1.age);
    println!("Grade: {}", student1.grade);
}
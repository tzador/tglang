// Function to perform binary search on a sorted array
fn binary_search<T: Eq + Ord>(array: &[T], key: &T) -> Option<usize> {
    let mut start = 0;
    let mut end = array.len() - 1;

    while start <= end {
        let mid = (start + end) / 2;

        if array[mid] < *key {
            start = mid + 1;
        } else if array[mid] > *key {
            end = mid - 1;
        } else {
            return Some(mid);
        }
    }

    None
}

// Example usage
let numbers = vec![1, 3, 5, 7, 9];
let index = binary_search(&numbers, &5);

if let Some(i) = index {
    println!("5 is found at index {}", i);
} else {
    println!("5 is not found in the array.");
}
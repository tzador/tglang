// Define a generic function that takes in a vector of i32 and returns a tuple containing the minimum and maximum value
fn min_max<T: Ord>(numbers: &Vec<T>) -> (T, T) {
    let mut min = numbers[0];
    let mut max = numbers[0];
    for num in numbers {
        if *num < min {
            min = *num;
        }
        if *num > max {
            max = *num;
        }
    }
    (min, max)
}

fn main() {
    // Create a vector with some numbers
    let numbers = vec![16, 8, 23, 11, 5, 2, 19];
    // Call the min_max function and assign the returned tuple to min_and_max
    let min_and_max = min_max(&numbers);

    // Print out the results
    println!("The minimum value is {} and the maximum value is {}", min_and_max.0, min_and_max.1);
}
use std::collections::HashMap; // import HashMap from standard library

// define a struct named "Book" with three fields
struct Book {
    name: String,
    author: String,
    publication_year: u32,
}

// implement a method for the struct that returns a formatted string of its fields
impl Book {
    fn description(&self) -> String {
        format!("Name: {}, Author: {}, Publication Year: {}", self.name, self.author, self.publication_year)
    }
}

// create a new HashMap to store book titles and their corresponding Book struct
let mut book_collection = HashMap::new();

// add two books to the collection
let book1 = Book {
    name: String::from("The Great Gatsby"),
    author: String::from("F. Scott Fitzgerald"),
    publication_year: 1925
};
let book2 = Book {
    name: String::from("To Kill a Mockingbird"),
    author: String::from("Harper Lee"),
    publication_year: 1960
};

// insert the books into the HashMap, using their names as keys
book_collection.insert(book1.name.clone(), book1);
book_collection.insert(book2.name.clone(), book2);

// loop through the HashMap and print out each book's description
for (title, book) in &book_collection {
    println!("{}", book.description());
}
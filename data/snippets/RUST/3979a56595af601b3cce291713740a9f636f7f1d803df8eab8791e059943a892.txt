// Define a struct named 'Rectangle' with two fields, 'width' and 'height'
// For the fields 'width' and 'height', specify a type of 'i32' (32-bit signed integer)
struct Rectangle {
    width: i32,
    height: i32,
}

// Create an implementation block for 'Rectangle'
impl Rectangle {
    // Define a function named 'area' that takes 'self' (a reference to the struct instance)
    // and returns an 'i32' (32-bit signed integer)
    fn area(&self) -> i32 {
        // Multiply the 'width' and 'height' fields of the struct instance
        self.width * self.height
    }

    // Define a function named 'perimeter' that takes 'self' (a reference to the struct instance)
    // and returns an 'i32' (32-bit signed integer)
    fn perimeter(&self) -> i32 {
        // Multiply the sum of the 'width' and 'height' fields by 2
        (self.width + self.height) * 2
    }
}

// Create an instance of the 'Rectangle' struct with 'width' of 4 and 'height' of 5
let rectangle = Rectangle {
    width: 4,
    height: 5,
};

// Call the 'area' and 'perimeter' functions on the 'rectangle' instance
println!("The area of the rectangle is: {}", rectangle.area());
println!("The perimeter of the rectangle is: {}", rectangle.perimeter());
/// Defines a struct named `Rectangle` with two fields `width` and `height`
struct Rectangle {
    width: u32,
    height: u32,
}

/// Implements a method `area()` on `Rectangle` struct
impl Rectangle {
    /// Calculates the area of a rectangle by multiplying its width and height
    /// Returns a `u32` value
    fn area(&self) -> u32 {
        self.width * self.height
    }
}

/// Defines a method `new()` on `Rectangle` struct to create new instances
/// Takes in `width` and `height` parameters and returns a `Rectangle` instance
impl Rectangle {
    /// Creates a new `Rectangle` instance with specified `width` and `height`
    fn new(width: u32, height: u32) -> Rectangle {
        Rectangle {
            width,
            height,
        }
    }
}

/// Creates a `Rectangle` instance with width of 10 and height of 5
let rectangle = Rectangle::new(10, 5);

/// Prints the area of the `rectangle` instance
println!("The area of the rectangle is {}", rectangle.area());
fn main() {
    // define a vector of integers
    let numbers: Vec<i32> = vec![1, 2, 3, 4, 5];

    // create a function that squares each number in the vector and returns a new vector
    fn square_vector(vec: Vec<i32>) -> Vec<i32> {
        let mut squared_vec: Vec<i32> = Vec::new(); // initialize a new vector

        // iterate through the input vector
        for num in vec {
            let squared_num = num * num; // square each number
            squared_vec.push(squared_num); // add squared number to new vector
        }
        
        squared_vec // return the new vector
    }

    // call the square_vector function and print the result
    let result = square_vector(numbers);
    println!("{:?}", result); // output: [1, 4, 9, 16, 25]
}
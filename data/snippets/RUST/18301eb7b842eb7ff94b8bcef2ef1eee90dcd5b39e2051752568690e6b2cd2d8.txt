use std::fs;
use std::io::prelude::*;
use image::{ImageBuffer, Rgb};

fn main() {
    let data = fs::read_to_string("data.txt").expect("Unable to read file");
    let mut lines = data.lines();

    let width = lines.next().unwrap().parse::<u32>().unwrap();
    let height = lines.next().unwrap().parse::<u32>().unwrap();

    let mut image = ImageBuffer::new(width, height);

    for y in 0..height {
        let line = lines.next().unwrap();
        let pixels: Vec<&str> = line.split(" ").collect();
        for x in 0..width {
            let r = pixels[x * 3].parse::<u8>().unwrap();
            let g = pixels[x * 3 + 1].parse::<u8>().unwrap();
            let b = pixels[x * 3 + 2].parse::<u8>().unwrap();
            image.put_pixel(x, y, Rgb([r, g, b]));
        }
    }

    let mut out_file = fs::File::create("out.png").expect("Failed to create file");
    image.save(&mut out_file, image::PNG).expect("Failed to save image");
}
use std::io::{BufRead, BufReader}; // Importing the necessary modules for I/O
use std::path::Path; // Importing the module for handling file paths

fn main() {
    let file_path = Path::new("./test.txt"); // Specifying the file path
    let file = BufReader::new(file_path); // Opening the file in a buffered reader

    for line in file.lines() { // Iterating through each line in the file
        let line = match line { // Using pattern matching to handle possible errors
            Ok(content) => content, // If there is no error, store the line content
            Err(error) => panic!(error), // If there is an error, panic and print it
        };
        
        let word_list: Vec<&str> = line.split(" ").collect(); // Splitting the line into a vector of words
        let mut reversed_line = String::new(); // Creating an empty String to store the reversed line

        for word in word_list.iter() { // Iterating through each word in the line
            let mut reversed_word = word.to_string(); // Converting each word to a String
            reversed_word.chars().rev().collect::<String>(); // Reversing the characters in the word
            reversed_line.push_str(&reversed_word); // Appending the reversed word to the reversed line
            reversed_line.push_str(" "); // Adding a space after each word
        }

        println!("{}", reversed_line); // Printing the reversed line
    }
}
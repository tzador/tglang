use std::collections::HashMap; //import required library

struct User { //define struct
    username: String,
    password: String,
    email: String,
}

impl User { //implement struct methods
    fn set_password(&mut self, password: String) { //define function
        self.password = password; //set password
    }

    fn get_email(&self) -> &str { //define function
        &self.email //return email
    }
}

fn main() { //define main function
    let mut users = HashMap::new(); //initialize hashmap
    
    let user1 = User { //create instance of User struct
        username: String::from("JohnDoe"),
        password: String::from("securepassword123"),
        email: String::from("johndoe@example.com"),
    };

    let user2 = User { //create another instance of User struct
        username: String::from("JaneSmith"),
        password: String::from("password456"),
        email: String::from("janesmith@example.com"),
    };

    users.insert(1, user1); //add user1 to hashmap
    users.insert(2, user2); //add user2 to hashmap

    println!("User 1's email: {}", users.get(&1).unwrap().get_email()); //print user 1's email
}
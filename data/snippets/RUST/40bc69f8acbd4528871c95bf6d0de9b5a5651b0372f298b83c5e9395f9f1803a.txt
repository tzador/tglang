// Define a struct named 'Person' with a 'name' field of type 'String' and an 'age' field of type 'u32'
#[derive(Debug)]
struct Person {
    name: String,
    age: u32,
}

// Implement a method 'print_info' on the 'Person' struct that takes in a reference to 'self' and prints the person's name and age
impl Person {
    fn print_info(&self) {
        println!("Name: {}", self.name);
        println!("Age: {}", self.age);
    }
}

// Create a function 'create_person' that takes in a name and age as parameters and returns a 'Person' instance
fn create_person(name: String, age: u32) -> Person {
    Person {
        name,
        age,
    }
}

// Create a 'Person' instance using the 'create_person' function
let person = create_person(String::from("John"), 25);

// Call the 'print_info' method on the 'person' instance
person.print_info();
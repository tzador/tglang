/// Struct representing a user
struct User {
    /// The user's username
    username: String,
    /// The user's password
    password: String,
    /// The user's email address
    email: String,
    /// The user's age
    age: usize,
    /// The user's list of friends
    friends: Vec<String>,
    /// The user's list of messages
    messages: Vec<String>
}

impl User {

    /// Creates a new user with the given username, password, email, and age
    fn new(username: String, password: String, email: String, age: usize) -> User {
        User {
            username,
            password,
            email,
            age,
            friends: vec![],
            messages: vec![]
        }
    }

    /// Adds a friend to the user's list of friends
    fn add_friend(&mut self, friend: String) {
        self.friends.push(friend);
    }

    /// Sends a message to the user's list of messages
    fn send_message(&mut self, message: String) {
        self.messages.push(message);
    }

    /// Prints out the user's information
    fn print_info(&self) {
        println!("Username: {}", self.username);
        println!("Email: {}", self.email);
        println!("Age: {}", self.age);
        println!("Friends: {:?}", self.friends);
        println!("Messages: {:?}", self.messages);
    }
}

fn main() {
    // Create a new user
    let mut user = User::new("username".to_string(), "password".to_string(), "email@example.com".to_string(), 25);

    // Add a friend
    user.add_friend("Friend1".to_string());

    // Send a message
    user.send_message("Hello, world!".to_string());

    // Print user's information
    user.print_info();
}
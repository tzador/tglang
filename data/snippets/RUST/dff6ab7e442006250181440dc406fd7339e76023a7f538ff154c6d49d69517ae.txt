// Define struct Person
struct Person {
    name: String,
    age: u32,
    hobbies: Vec<String>,
}

// Implement methods for Person
impl Person {
    // Function to print full name
    fn print_full_name(&self) {
        println!("{} {}", self.first_name, self.last_name);
    }

    // Function to add a new hobby
    fn add_hobby(&mut self, hobby: String) {
        self.hobbies.push(hobby);
    }

    // Function to get number of hobbies
    fn get_num_hobbies(&self) -> usize {
        self.hobbies.len()
    }
}

// Create an instance of Person
let mut person = 
    Person {
        name: String::from("John Doe"),
        age: 35,
        hobbies: vec![String::from("Reading"), String::from("Cooking")],
    };

// Call methods on person instance
person.print_full_name();
person.add_hobby(String::from("Coding"));
let num_hobbies = person.get_num_hobbies();

// Print number of hobbies
println!("Number of hobbies: {}", num_hobbies);
// Define a Struct named "Person" with the fields "name" and "age"
struct Person {
    name: String,
    age: u32,
}

// Implement a method "new" for the Person Struct, taking in a name and age and returning a Person instance
impl Person {
    fn new(name: String, age: u32) -> Person {
        Person {
            name,
            age,
        }
    }
}

// Define a Trait named "Greet" with a method "greet" that takes in a reference to a Person instance
trait Greet {
    fn greet(&self, person: &Person);
}

// Implement the "Greet" trait for the Person Struct
impl Greet for Person {
    fn greet(&self, person: &Person) {
        println!("Hello, {}! My name is {}, and I am {} years old.", person.name, self.name, self.age);
    }
}

// Create two Person instances with different names and ages
let person1 = Person::new(String::from("John"), 25);
let person2 = Person::new(String::from("Annie"), 30);

// Call the "greet" method on person1, passing in person2 as an argument
person1.greet(&person2); // Output: Hello, Annie! My name is John, and I am 25 years old.
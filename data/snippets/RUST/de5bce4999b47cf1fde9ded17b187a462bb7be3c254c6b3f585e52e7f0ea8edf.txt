// declare a struct with two fields
struct Rectangle {
    width: u32,
    height: u32
}

// 'impl' is used to define methods for the struct
impl Rectangle {
    // a method that calculates the area of the rectangle
    fn area(&self) -> u32 {
        self.width * self.height
    }
    
    // a method that calculates the perimeter of the rectangle
    fn perimeter(&self) -> u32 {
        2 * (self.width + self.height)
    }
    
    // a method that checks if the rectangle is a square
    fn is_square(&self) -> bool {
        self.width == self.height
    }
}

// create a new instance of the Rectangle struct
let rect = Rectangle {
    width: 5,
    height: 5
};

// call the area method on the rectangle instance
let area = rect.area();

// print the area of the rectangle
println!("The area of the rectangle is {} square units", area);

// check if the rectangle is a square and print the result
if rect.is_square() {
    println!("The rectangle is a square");
} else {
    println!("The rectangle is not a square");
}

// call the perimeter method on the rectangle instance
let perimeter = rect.perimeter();

// print the perimeter of the rectangle
println!("The perimeter of the rectangle is {} units", perimeter);
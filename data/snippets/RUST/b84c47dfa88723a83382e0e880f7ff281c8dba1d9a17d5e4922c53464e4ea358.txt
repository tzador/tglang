fn main() {
    // Define a function that takes in an array of integers
    fn count_positives(arr: [i32; 5]) -> i32 {
        // Initialize a variable to count positive numbers
        let mut count = 0;
        // Iterate through the array
        for num in arr.iter() {
            // Check if the number is positive
            if *num > 0 {
                // Increment count if positive
                count += 1;
            }
        }
        // Return the count
        count
    }

    // Define a function that takes in a vector of strings
    fn concatenate_names(names: Vec<&str>) -> String {
        // Initialize an empty string to hold concatenated names
        let mut full_name = String::new();
        // Iterate through the vector
        for name in names {
            // Append each name to the full_name string
            full_name.push_str(name);
        }
        // Return the full_name string
        full_name
    }

    // Create an array of integers
    let numbers = [1, 5, -2, 0, 10];
    // Call the count_positives function on the array
    let positive_count = count_positives(numbers);
    // Print the count of positive numbers
    println!("There are {} positive numbers in the array.", positive_count);

    // Create a vector of strings
    let names = vec!["John", "Doe", "Smith"];
    // Call the concatenate_names function on the vector
    let full_name = concatenate_names(names);
    // Print the concatenated names
    println!("The names are: {}", full_name);
}
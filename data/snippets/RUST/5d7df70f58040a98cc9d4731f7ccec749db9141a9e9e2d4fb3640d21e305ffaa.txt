/// A struct representing a user
struct User {
    username: String,
    email: String,
    age: u32,
    active: bool,
}

impl User {
    /// A method to create a new user
    fn new(username: String, email: String, age: u32) -> User {
        User {
            username,
            email,
            age,
            active: true,
        }
    }

    /// A method to update a user's email
    fn update_email(&mut self, new_email: String) {
        self.email = new_email;
    }
}

/// A function to print the information of a user
fn print_user_info(user: User) {
    println!("Username: {}", user.username);
    println!("Email: {}", user.email);
    println!("Age: {}", user.age);

    if user.active {
        println!("Status: Active");
    } else {
        println!("Status: Inactive");
    }
}

/// Create a new user
let mut new_user = User::new(String::from("username"), String::from("email@example.com"), 25);

/// Update user's email
new_user.update_email(String::from("newemail@example.com"));

/// Print user information
print_user_info(new_user);
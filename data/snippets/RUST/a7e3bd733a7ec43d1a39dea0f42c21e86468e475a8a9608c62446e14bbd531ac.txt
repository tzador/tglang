fn main() {
    // Create an empty vector to store numbers
    let mut numbers: Vec<i32> = Vec::new();

    // Generate random numbers and add to vector
    for i in 0..10 {
        numbers.push(rand::random::<i32>());
    }

    // Sort the vector in descending order
    numbers.sort_by(|a, b| b.cmp(a));

    // Print the sorted vector
    println!("Sorted vector: {:?}", numbers);

    // Find the sum of all numbers in the vector
    let sum: i32 = numbers.iter().sum();

    // Print the sum
    println!("Sum of all numbers: {}", sum);

    // Create a HashMap to store prime numbers
    let mut primes: HashMap<i32, i32> = HashMap::new();

    // Check if each number in the vector is prime
    for num in &numbers {
        let mut is_prime = true;

        // Iterate through numbers to check for prime factors
        for i in 2..num / 2 {
            if num % i == 0 {
                is_prime = false;
                break;
            }
        }

        // If number is prime, add to HashMap
        if is_prime {
            primes.insert(*num, *num);
        }
    }

    // Print the prime numbers
    println!("Prime numbers found: {:?}", primes);
}
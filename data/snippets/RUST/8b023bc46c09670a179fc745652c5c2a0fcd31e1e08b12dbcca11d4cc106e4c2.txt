// Create a function that takes in a vector of integers, squares each integer, and returns a new vector
fn square(v: Vec<i32>) -> Vec<i32> {
    // Initialize a new empty vector
    let mut squared_vec: Vec<i32> = Vec::new();
    
    // Iterate through the given vector
    for i in &v {
        // Square each integer and push it into the new vector
        let squared_value = i * i;
        squared_vec.push(squared_value);
    }

    // Return the new vector
    squared_vec
}

// Create a vector containing the numbers 1-10
let numbers = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// Call the 'square' function with the vector as input
let squared_numbers = square(numbers);

// Print the squared numbers vector
println!("{:?}", squared_numbers);

// Output:
// [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
fn main() {

    // Create a vector of type `i32`
    let vec: Vec<i32> = vec![1, 2, 3];

    // Use `match` to check if vector is empty, then iterate over each item
    match vec.is_empty() {
        true => println!("Vector is empty"),
        false => {
            // If vector is not empty, loop through all items and print their values
            for item in vec {
                println!("The value is {}", item);
            }
        }
    }
    
    // Use `map` to create a new vector with squared values of initial vector
    let squared_vec: Vec<i32> = vec.iter().map(|x| x * x).collect();

    // Add all values in the squared vector using `fold` method
    let sum: i32 = squared_vec.iter().fold(0, |sum, x| sum + x);

    // Print the sum of squared vector
    println!("The sum of squared vector is {}", sum);
}
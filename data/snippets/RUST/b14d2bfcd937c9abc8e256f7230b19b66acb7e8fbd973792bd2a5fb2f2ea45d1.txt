use std::collections::HashMap; // Importing the HashMap data structure from the standard library

// Defining a custom struct with two fields
struct Person {
    name: String,
    age: u32,
}

impl Person { // Implementing methods for the Person struct
    pub fn introduce(&self) { // Defining a public method that takes in a reference to self
        println!("Hi, my name is {} and I am {} years old.", self.name, self.age);
    }
}

fn main() {
    let mut people_map = HashMap::new(); // Creating a new HashMap for storing Person objects
    let person1 = Person { // Creating a new Person object and assigning it to the variable person1
        name: String::from("John Doe"),
        age: 30,
    };
    let person2 = Person {
        name: String::from("Jane Smith"),
        age: 25,
    };
    people_map.insert("John", person1); // Inserting person1 into the HashMap with "John" as the key
    people_map.insert("Jane", person2); // Inserting person2 into the HashMap with "Jane" as the key
    for (key, value) in &people_map { // Iterating through the HashMap and printing the person's name and age
        value.introduce(); // Calling the introduce method for each Person object
    }
}
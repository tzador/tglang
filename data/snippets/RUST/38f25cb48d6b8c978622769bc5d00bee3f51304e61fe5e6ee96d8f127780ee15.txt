#![allow(dead_code)]

// Define a struct named "Student" with two fields, "name" and "age"
struct Student {
    name: String,
    age: u8,
}

// Define an implementation for the struct "Student"
impl Student {
    // Create a function named "introduce" that takes a mutable reference to "Student"
    // and returns their name and age in a string
    fn introduce(&mut self) -> String {
        // Use Rust's string formatting to insert the values of "name" and "age" into the string
        format!("Hello, my name is {} and I am {} years old.", self.name, self.age)
    }
}

// Create a function named "main"
fn main() {
    // Create an instance of "Student" named "john" with the name "John" and age 21
    let mut john = Student { name: "John".to_string(), age: 21 };
    // Call the "introduce" function on the "john" instance and print the result to the console
    println!("{}", john.introduce());
}
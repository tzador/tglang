// Define a struct to represent a car
struct Car {
    make: String, // Make of the car
    model: String, // Model of the car
    year: u16, // Year the car was made
    color: String, // Color of the car
    mileage: u32, // Number of miles driven
    engine_size: f32, // Engine size in liters
}

// Define a function that prints out the car's information
fn print_car_info(input_car: &Car) {
    // Print out the make, model, and year
    println!("The car is a {} {} made in {}", input_car.make, input_car.model, input_car.year);

    // Print out the color
    println!("The car is {}", input_car.color);

    // Print out the mileage
    println!("The car has {} miles", input_car.mileage);

    // Print out the engine size
    println!("The car has a {} liter engine", input_car.engine_size);
}

// Create a new instance of Car
let my_car = Car {
    make: String::from("Ford"),
    model: String::from("Mustang"),
    year: 2020,
    color: String::from("Red"),
    mileage: 5000,
    engine_size: 3.5,
};

// Call the function to print my_car's information
print_car_info(&my_car);
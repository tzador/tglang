// Define a struct for a person
struct Person {
    name: String,
    age: u8,
    height: f64,
    weight: f64,
}

// Implement a method for the Person struct
impl Person {
    // Method to calculate BMI based on height and weight
    fn calculate_bmi(&self) -> f64 {
        self.weight / (self.height * self.height)
    }

    // Method to have a birthday and update age
    fn have_birthday(&mut self) {
        self.age += 1;
        println!("Happy birthday, {}! You are now {} years old.", self.name, self.age);
    }
}

// Define a function to create a new Person struct
fn create_person(name: &str, age: u8, height: f64, weight: f64) -> Person {
    Person {
        name: name.to_string(),
        age,
        height,
        weight,
    }
}

// Create a person named John, age 25, height 5.8, weight 150.5
let mut john = create_person("John", 25, 5.8, 150.5);

// Calculate and print John's BMI
println!("John's BMI is {}.", john.calculate_bmi());

// Have John's birthday and update his age
john.have_birthday();

// Output:
//
fn main() {
    // Define a vector of type i32 with 10 elements
    let mut numbers: Vec<i32> = Vec::with_capacity(10);
    
    // Fill the vector with random numbers between 1 and 100
    for _ in 0..10 {
        numbers.push(rand::random::<i32>() % 100 + 1);
    }

    // Sort the vector in ascending order
    numbers.sort();

    // Define a closure that will filter out numbers that are less than or equal to 50
    let filter_less_than_50 = |num: &i32| *num <= 50;

    // Filter the vector using the closure and store the result in a new vector
    let filtered_numbers: Vec<&i32> = numbers.iter().filter(filter_less_than_50).collect();

    // Print the filtered vector
    println!("Filtered vector: {:?}", filtered_numbers);
}
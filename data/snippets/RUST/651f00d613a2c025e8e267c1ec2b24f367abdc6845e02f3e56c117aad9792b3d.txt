/// This function takes in a vector of integers and returns a new vector containing only even numbers

fn filter_even_numbers(numbers: Vec<i32>) -> Vec<i32> {
  // initialize an empty vector to hold even numbers
  let mut even_numbers: Vec<i32> = Vec::new();
  
  // loop through the numbers vector
  for num in numbers {
    // check if the number is even
    if num % 2 == 0 {
      // add the number to the even_numbers vector
      even_numbers.push(num);
    }
  }
  
  // return the new vector of even numbers
  even_numbers
}

/// Sample input vector
let numbers = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

/// Call the filter_even_numbers function and store the result in a new vector
let even_numbers = filter_even_numbers(numbers);

/// Print the new vector of even numbers
println!("This is the vector of even numbers: {:?}", even_numbers);
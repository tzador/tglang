fn main() {
    // Define a mutable variable x with initial value of 5
    let mut x = 5;
    
    // Define a constant variable y with value of 10
    const Y: i32 = 10;
    
    // Create a function named add that takes in two u32 parameters
    // and returns their sum as u32
    fn add(x: u32, y: u32) -> u32 {
        x + y
    }
    
    // Invoke the add function passing in x and y as arguments
    let z = add(x, Y as u32);
    
    // Create a basic loop that prints out values from 1 to 10
    for i in 1..=10 {
        println!("{}", i);
    }
    
    // Create a vector containing the first 5 characters of the alphabet
    let letters = vec!['a', 'b', 'c', 'd', 'e'];
    
    // Loop through the vector and print out each character
    for letter in letters {
        println!("{}", letter);
    }
    
    // Create a mutable tuple containing a string and an integer
    let mut tuple: (String, i32) = (String::from("Hello"), 5);
    
    // Change the value of the tuple's integer to 10
    tuple.1 = 10;
    
    // Print out the tuple
    println!("{:?}", tuple);
    
    // Use pattern matching to check if x is equal to 5
    match x {
        5 => println!("x is equal to 5"),
        _ => println!("x is not equal to 5"),
    }
    
    // Use a while loop to increment x until it reaches 10
    while x < 10 {
        x += 1;
    }
    
    // Print out the final value of x
    println!("Final value of x is: {}", x);
}
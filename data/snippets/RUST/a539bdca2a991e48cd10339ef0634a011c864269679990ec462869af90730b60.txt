// This function calculates the square of a given number
fn calculate_square(x: i32) -> i32 {
    let square = x * x; // calculates the square
    return square; // returns the square
}

// This function multiplies a given number by 10
fn multiply_by_ten(y: i32) -> i32 {
    let multiplied = y * 10; // multiplies the number by 10
    return multiplied; // returns the multiplied number
}

// This function takes in a vector of numbers and returns the average
fn calculate_average(numbers: Vec<i32>) -> f32 {
    let total_sum = numbers.iter().sum::<i32>(); // calculates the sum of numbers in the vector
    let total_count = numbers.len() as i32; // converts the length of the vector to i32
    let average = total_sum as f32 / total_count as f32; // calculates the average
    return average; // returns the average
}

// Example usage
fn main() {
    let num = 5; // initialize a number
    let square = calculate_square(num); // call the calculate_square function
    println!("The square of {} is {}", num, square); // print the result
    let multiplied_num = multiply_by_ten(num); // call the multiply_by_ten function
    println!("{} multiplied by 10 is {}", num, multiplied_num); // print the result
    let numbers = vec![3, 5, 7, 9, 11]; // initialize a vector of numbers
    let average = calculate_average(numbers); // call the calculate_average function
    println!("The average of the vector is {}", average); // print the result
}
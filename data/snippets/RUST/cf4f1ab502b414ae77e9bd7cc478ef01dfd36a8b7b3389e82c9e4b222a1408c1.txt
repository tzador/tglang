/// Function to generate the first n numbers of the fibonacci sequence
/// Takes in a number n as input
fn fibonacci(n: i32) -> Vec<i32> {
    // Create a vector to store the fibonacci numbers
    let mut fib_sequence: Vec<i32> = Vec::new();

    // First two numbers of the sequence are always 0 and 1
    fib_sequence.push(0);
    fib_sequence.push(1);

    // Generate the next numbers of the sequence
    for i in 2..n {
        // The value of each number in the sequence is the sum of its two previous numbers
        let next_number: i32 = fib_sequence[i-1] + fib_sequence[i-2];
        fib_sequence.push(next_number);
    }

    // Return the first n numbers of the fibonacci sequence
    fib_sequence
}

// Main function to test the fibonacci function
fn main() {
    // Generate the first 10 numbers of the fibonacci sequence
    let n: i32 = 10;
    let sequence: Vec<i32> = fibonacci(n);

    // Print the sequence
    for num in sequence {
        println!("{}", num);
    }
}

// Output:
// 0
// 1
// 1
// 2
// 3
// 5
// 8
// 13
// 21
// 34
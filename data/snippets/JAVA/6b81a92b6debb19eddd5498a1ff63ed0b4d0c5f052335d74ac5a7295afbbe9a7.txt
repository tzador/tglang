/**
 * This class represents a car object with various attributes and methods
 */
public class Car {
    // Class variables
    private static int numCars;
    private String make;
    private String model;
    private int year;
    private double price;
    private boolean isElectric;

    // Constructor method
    public Car(String make, String model, int year, double price, boolean isElectric) {
        this.make = make;
        this.model = model;
        this.year = year;
        this.price = price;
        this.isElectric = isElectric;
        numCars++;
    }

    // Getter methods
    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

    public int getYear() {
        return year;
    }

    public double getPrice() {
        return price;
    }

    public boolean getIsElectric() {
        return isElectric;
    }

    // Setter methods
    public void setMake(String make) {
        this.make = make;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public void setYear(int year) {
        this.year = year;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public void setIsElectric(boolean isElectric) {
        this.isElectric = isElectric;
    }

    // Method to calculate total price of a car based on its year
    public double calculateTotalPrice() {
        double total = price;
        if (year < 2000) {
            total += 1000;
        } else if (year >= 2000 && year < 2010) {
            total += 500;
        }
        // Electric cars have a 10% discount
        if (isElectric) {
            total *= 0.9;
        }
        return total;
    }

    // Main method to test the functionality of the Car class
    public static void main(String[] args) {
        // Creating car objects
        Car car1 = new Car("Honda", "Civic", 2005, 8000, false);
        Car car2 = new Car("Tesla", "Model 3", 2018, 45000, true);

        // Printing initial values
        System.out.println("Car 1:\nMake: " + car1.getMake() + "\nModel: " + car1.getModel() + "\nYear: " + car1.getYear() + "\nPrice: " + car1.getPrice() + "\nElectric: " + car1.getIsElectric());
        System.out.println("Car 2:\nMake: " + car2.getMake() + "\nModel: " + car2.getModel() + "\nYear: " + car2.getYear() + "\nPrice: " + car2.getPrice() + "\nElectric: " + car2.getIsElectric());

        // Updating car values
        car1.setMake("Toyota");
        car1.setYear(2010);
        car1.setIsElectric(true);
        car1.setPrice(12000);
        car2.setModel("Model S");
        car2.setPrice(55000);

        // Printing updated values
        System.out.println("\nUpdated Car 1:\nMake: " + car1.getMake() + "\nModel: " + car1.getModel() + "\nYear: " + car1.getYear() + "\nPrice: " + car1.getPrice() + "\nElectric: " + car1.getIsElectric());
        System.out.println("Updated Car 2:\nMake: " + car2.getMake() + "\nModel: " + car2.getModel() + "\nYear: " + car2.getYear() + "\nPrice: " + car2.getPrice() + "\nElectric: " + car2.getIsElectric());

        // Calculating and printing total price of each car
        System.out.println("\nTotal price of Car 1: $" + car1.calculateTotalPrice());
        System.out.println("Total price of Car 2: $" + car2.calculateTotalPrice());

        // Printing total number of cars
        System.out.println("\nNumber of cars: " + numCars);
    }
}
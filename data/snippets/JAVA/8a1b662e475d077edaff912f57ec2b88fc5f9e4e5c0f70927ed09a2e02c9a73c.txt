/**
 * This class represents a node in a binary tree data structure.
 * It stores an integer value and references to its left and right children.
 */
public class Node {
    private int value;
    private Node leftChild;
    private Node rightChild;

    /**
     * Constructor for a Node object.
     * @param value the value to be stored in the node
     * @param leftChild the left child of the node
     * @param rightChild the right child of the node
     */
    public Node(int value, Node leftChild, Node rightChild) {
        this.value = value;
        this.leftChild = leftChild;
        this.rightChild = rightChild;
    }

    /**
     * Getter for the value stored in the node.
     * @return the integer value stored in the node
     */
    public int getValue() {
        return value;
    }

    /**
     * Getter for the left child of the node.
     * @return the left child of the node
     */
    public Node getLeftChild() {
        return leftChild;
    }

    /**
     * Setter for the left child of the node.
     * @param leftChild the node to be set as the left child
     */
    public void setLeftChild(Node leftChild) {
        this.leftChild = leftChild;
    }

    /**
     * Getter for the right child of the node.
     * @return the right child of the node
     */
    public Node getRightChild() {
        return rightChild;
    }

    /**
     * Setter for the right child of the node.
     * @param rightChild the node to be set as the right child
     */
    public void setRightChild(Node rightChild) {
        this.rightChild = rightChild;
    }
}
/**
 * This class represents a student enrolled in a university.
 * It contains methods for setting and getting the student's information.
 * The information includes name, student ID, major, and classes enrolled in.
 */
public class Student {
    private String name; //the name of the student
    private int studentID; //the ID of the student
    private String major; //the major of the student
    private ArrayList<String> classes; //list of classes enrolled in

    /**
     * Constructor method for the Student class.
     * Initializes the Student object with the given name, student ID, and major.
     * @param name the name of the student
     * @param studentID the ID of the student
     * @param major the major of the student
     */
    public Student(String name, int studentID, String major) {
        this.name = name;
        this.studentID = studentID;
        this.major = major;
               classes = new ArrayList<String>();
    }

    /**
     * Updates the name of the student.
     * @param name the new name of the student
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Updates the major of the student.
     * @param major the new major of the student
     */
    public void setMajor(String major) {
        this.major = major;
    }

    /**
     * Adds a new class to the list of classes enrolled in.
     * @param className the name of the new class
     */
    public void addClass(String className) {
        classes.add(className);
    }

    /**
     * Prints out the student's information.
     * Includes their name, student ID, major, and list of classes enrolled in.
     */
    public void printInfo() {
        System.out.println("Name: " + name);
        System.out.println("Student ID: " + studentID);
        System.out.println("Major: " + major);
        System.out.println("Classes enrolled in: ");
        for(String className : classes) {
            System.out.println(className);
        }
    }
}

/**
 * This class represents a course offered at the university.
 * It contains methods for setting and getting the course information.
 * The information includes course name, course code, professor, and number of credits.
 */
public class Course {
    private String name; //the name of the course
    private String courseCode; //the code of the course
    private String professor; //the professor teaching the course
    private int credits; //the number of credits for the course

    /**
     * Constructor method for the Course class.
     * Initializes the course object with the given name, course code, professor, and credits.
     * @param name the name of the course
     * @param courseCode the code of the course
     * @param professor the professor teaching the course
     * @param credits the number of credits for the course
     */
    public Course(String name, String courseCode, String professor, int credits) {
        this.name = name;
        this.courseCode = courseCode;
        this.professor = professor;
        this.credits = credits;
    }

    /**
     * Updates the name of the course.
     * @param name the new name of the course
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Updates the professor teaching the course.
     * @param professor the new professor teaching the course
     */
    public void setProfessor(String professor) {
        this.professor = professor;
    }

    /**
     * Updates the number of credits for the course.
     * @param credits the new number of credits for the course
     */
    public void setCredits(int credits) {
        this.credits = credits;
    }

    /**
     * Prints out the course information.
     * Includes course name, course code, professor, and number of credits.
     */
    public void printInfo() {
        System.out.println("Course Name: " + name);
        System.out.println("Course Code: " + courseCode);
        System.out.println("Professor: " + professor);
        System.out.println("Credits: " + credits);
    }
}

/* Main method for testing the Student and Course classes */
public class Main {
    public static void main(String[] args) {
        //create a new student
        Student student1 = new Student("John Smith", 12345, "Computer Science");

        //add classes to the student's schedule
        student1.addClass("Introduction to Programming");
        student1.addClass("Data Structures");
        student1.addClass("Software Engineering");

        //create a new course
        Course course1 = new Course("Introduction to Programming", "CSCI 100", "Dr. Johnson", 4);

        //change the professor of the course
        course1.setProfessor("Dr. Smith");

        //print out the student's information and the course's information
        student1.printInfo();
        course1.printInfo();
    }
}


/* Output:
Name: John Smith
Student ID: 12345
Major: Computer Science
Classes enrolled in:
Introduction to Programming
Data Structures
Software Engineering
Course Name: Introduction to Programming
Course Code: CSCI 100
Professor: Dr. Smith
Credits: 4
 */
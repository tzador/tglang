public class DataStructure {		//Declare a public class called DataStructure
  private int size;					//Declare a private integer variable called size
  private int index;					//Declare a private integer variable called index
  private int[] array;				//Declare a private integer array called array

  public DataStructure(int size) {	//Declare a public constructor that takes in a size parameter
    this.size = size;				//Set the value of size variable to the size parameter
    this.index = 0;					//Initialize the value of index variable to 0
    this.array = new int[size];		//Initialize the array with the given size
  }

  public void add(int element) {	//Declare a public method called add that takes in an element parameter
    if (index < size) {				//Check if the index is less than the size
      array[index] = element;		//Add the element to the array at the current index
      index++;						//Increment the index
    } else {						//If index is equal to size
      int[] newArray = new int[size * 2];		//Create a new array with twice the size
      for (int i = 0; i < size; i++) {			//Loop through the original array
        newArray[i] = array[i];					//Copy the elements to the new array
      }
      newArray[index] = element;					//Add the element to the new array
      index++;									//Increment the index
      size *= 2;									//Double the size variable
      array = newArray;							//Set the original array to the new array
    }
  }

  public int get(int index) {			//Declare a public method called get that takes in an index parameter
    if (index < size && index >= 0) {	//Check if the index is within the array bounds
      return array[index];				//Return the element at the given index
    } else {							//If index is out of bounds
      System.out.println("Index out of bounds.");		//Print an error message
      return -1;						//Return -1
    }
  }

  public void remove(int index) {		//Declare a public method called remove that takes in an index parameter
    if (index < size && index >= 0) {	//Check if the index is within the array bounds
      for (int i = index; i < size; i++) {				//Loop through the array starting from the given index
        array[i] = array[i+1];							//Move the elements to the left to overwrite the given index
      }
      size--;							//Decrement the size variable
    } else {							//If index is out of bounds
      System.out.println("Index out of bounds.");		//Print an error message
    }
  }

  public boolean contains(int element) {		//Declare a public method called contains that takes in an element paramter
    for (int i = 0; i < size; i++) {			//Loop through the array
      if (array[i] == element) {				//Check if the current element is equal to the given element
        return true;							//If yes, return true
      }
    }
    return false;								//If element is not found, return false
  }
}
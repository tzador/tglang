/* This code snippet is a complex method in JAVA that checks if a given string is a valid email address. */

/** 
 * Checks if the given string is a valid email address.
 * @param email the string to validate
 * @return true if valid, false if not
 */
public boolean validateEmail(String email) {
    // initialize variables for validation
    boolean hasAt = false;
    boolean hasDot = false;
    boolean hasAtDot = false;

    // loop through each character in the string
    for (int i = 0; i < email.length(); i++) {
        // check for '@' symbol
        if (email.charAt(i) == '@') {
            // check if already found '@' symbol
            if (hasAt) {
                return false; // if another '@' symbol found, return false
            }
            hasAt = true; // update hasAt variable
        }
        // check for '.' symbol
        else if (email.charAt(i) == '.') {
            // check if already found '@' symbol
            if (!hasAt) {
                return false; // if no '@' symbol found, return false
            }
            hasDot = true; // update hasDot variable
            // check if dot comes after '@' symbol
            if (i < email.length() - 1 && email.charAt(i + 1) == '@') {
                hasAtDot = true; // update hasAtDot variable
                break; // break out of loop
            }
        }
    }

    // if both '@' and '.' symbols are present and '@' comes before '.', return true
    if (hasAt && hasDot && !hasAtDot) {
        return true;
    }
    // if dot does not come after '@', return false
    else if (!hasAtDot) {
        return false;
    }

    // initialize variables for local parts of email and domain parts of email
    String local = "";
    String domain = "";

    // loop through each character in email string
    for (int i = 0; i < email.length(); i++) {
        // add characters to local part until '@' symbol is reached
        if (email.charAt(i) != '@') {
            local += email.charAt(i);
        } else {
            break; // stop looping when '@' symbol is reached
        }
    }

    // loop through characters starting from '@' symbol until '.' symbol is reached
    for (int i = email.indexOf('@') + 1; i < email.length(); i++) {
        // add characters to domain part until '.' symbol is reached
        if (email.charAt(i) != '.') {
            domain += email.charAt(i);
        } else {
            break; // stop looping when '.' symbol is reached
        }
    }

    // if local and domain parts have length greater than 0, return true
    if (local.length() > 0 && domain.length() > 0) {
        return true;
    }
    // otherwise, return false
    else {
        return false;
    }
}
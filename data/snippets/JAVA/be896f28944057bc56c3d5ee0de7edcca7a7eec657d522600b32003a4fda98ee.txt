//This code snippet is an example of a class hierarchy in Java, demonstrating inheritance and polymorphism.

//Parent class
class Animal {

    private String name;
    private int age;
    private String sound;

    //constructor
    public Animal(String name, int age, String sound){
        this.name = name;
        this.age = age;
        this.sound = sound;
    }

    //getter methods
    public String getName(){
        return this.name;
    }

    public int getAge(){
        return this.age;
    }

    public String getSound(){
        return this.sound;
    }

    //method to make the animal make a sound
    public void makeSound(){
        System.out.println(this.name + " says " + this.sound + "!");
    }
}

//Child class 1
class Cat extends Animal{

	private String furColor;

	//constructor
	public Cat(String name, int age, String sound, String furColor){
		super(name, age, sound);
		this.furColor = furColor;
	}

	//getter method
	public String getFurColor(){
		return this.furColor;
	}

	//overriding method from parent class to add specific behavior for the child class
	@Override
	public void makeSound(){
		System.out.println(this.getName() + " the cat purrs " + this.getSound() + " as it shows off its " + this.furColor + " fur!");
	}
}

//Child class 2
class Dog extends Animal{

	private int weight;

	//constructor
	public Dog(String name, int age, String sound, int weight){
		super(name, age, sound);
		this.weight = weight;
	}

	//getter method
	public int getWeight(){
		return this.weight;
	}

	//overriding method from parent class to add specific behavior for the child class
	@Override
	public void makeSound(){
		System.out.println("The " + this.getName() + " barks " + this.getSound() + " and weighs " + this.weight + " pounds!");
	}
}

public class AnimalHierarchy{
	public static void main(String[] args){

		//creating an instance of the parent class
		Animal myAnimal = new Animal("Nala", 5, "roars");

		//calling methods from parent class
		System.out.println("My animal's name is " + myAnimal.getName());
		System.out.println("My animal is " + myAnimal.getAge() + " years old");
		myAnimal.makeSound();

		//creating an instance of the child class Cat
		Cat myCat = new Cat("Simba", 3, "meows", "orange");

		//calling methods from parent and child class
		System.out.println("My cat's name is " + myCat.getName());
		System.out.println("My cat is " + myCat.getAge() + " years old");
		System.out.println("My cat's fur color is " + myCat.getFurColor());
		myCat.makeSound();

		//creating an instance of the child class Dog
		Dog myDog = new Dog("Buddy", 2, "woofs", 30);

		//calling methods from parent and child class
		System.out.println("My dog's name is " + myDog.getName());
		System.out.println("My dog is " + myDog.getAge() + " years old");
		System.out.println("My dog weighs " + myDog.getWeight() + " pounds");
		myDog.makeSound();
	}
}
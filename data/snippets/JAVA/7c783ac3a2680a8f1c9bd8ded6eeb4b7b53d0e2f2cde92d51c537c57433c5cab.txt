// This code snippet generates all possible combinations of characters in a given string
// and prints them out
import java.util.*;

public class CombinationGenerator {

  // global variables
  private static String input;
  private static char[] chars;
  private static Iterator<String> combinations;

  public static void main(String[] args) {
    // initialize and read input
    Scanner sc = new Scanner(System.in);
    System.out.print("Enter a string: ");
    input = sc.nextLine();

    // convert string to char array
    chars = input.toCharArray();

    // get all combinations of the characters in the input string
    combinations = generateCombinations(chars);

    // print out the combinations
    while (combinations.hasNext()) {
      System.out.println(combinations.next());
    }
  }

  // method to generate all possible combinations of characters
  public static Iterator<String> generateCombinations(char[] chars) {

    // create a HashSet to store the combinations
    HashSet<String> combinationSet = new HashSet<>();

    // add the empty string as the first combination
    combinationSet.add("");

    // start with the first character and iterate through all possible combinations
    for (char c : chars) {

      // temporary HashSet to store new combinations
      HashSet<String> tempSet = new HashSet<>();

      // iterate through all existing combinations
      for (String combination : combinationSet) {

        // add the character to the current combination and add it to the temporary set
        tempSet.add(combination + c);

        // add each of the existing combinations with the new character added to the temporary set
        for (int i = 0; i < combination.length(); i++) {
          tempSet.add(combination.substring(0, i + 1) + c + combination.substring(i + 1));
        }
      }

      // add all new combinations to the existing set
      combinationSet.addAll(tempSet);
    }

    // return an iterator of the combination set
    return combinationSet.iterator();
  }
}
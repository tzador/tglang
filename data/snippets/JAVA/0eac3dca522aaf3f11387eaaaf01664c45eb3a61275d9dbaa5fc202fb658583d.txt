/**
 * This is a complex method that takes in two arrays and sorts them in ascending order.
 *
 * @param arr1 the first array to be sorted
 * @param arr2 the second array to be sorted
 * @return a sorted array containing both elements from arr1 and arr2
 */
public int[] sortArrays(int[] arr1, int[] arr2) {
    int[] result = new int[arr1.length + arr2.length];

    // first, we combine arr1 and arr2 into one array
    int[] combinedArr = new int[arr1.length + arr2.length];
    System.arraycopy(arr1, 0, combinedArr, 0, arr1.length);
    System.arraycopy(arr2, 0, combinedArr, arr1.length, arr2.length);

    // next, we perform a loop to sort the combined array
    for (int i = 0; i < combinedArr.length - 1; i++) {
        for (int j = 0; j < combinedArr.length - i - 1; j++) {
            // compare adjacent elements and swap if necessary
            if (combinedArr[j] > combinedArr[j+1]) {
                int temp = combinedArr[j];
                combinedArr[j] = combinedArr[j+1];
                combinedArr[j+1] = temp;
            }
        }
    }

    // finally, we copy the sorted elements from combined array to result array
    System.arraycopy(combinedArr, 0, result, 0, result.length);

    return result;
}
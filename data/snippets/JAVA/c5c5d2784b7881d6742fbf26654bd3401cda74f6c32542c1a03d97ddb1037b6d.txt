/**
 * This program merges two sorted arrays into a single sorted array
 *
 * It takes in two arrays, sorts them, and then merges them using a temporary array
 *
 * @param arr1 the first array to be merged
 * @param arr2 the second array to be merged
 * @return the merged and sorted array
 */
public int[] mergeArrays(int[] arr1, int[] arr2) {

    //Check for empty arrays
    if (arr1.length == 0) {
        return arr2;
    } else if (arr2.length == 0) {
        return arr1;
    }

    //Initialize variables
    int[] merged = new int[arr1.length + arr2.length];
    int index1 = 0; //Index for arr1
    int index2 = 0; //Index for arr2
    int mergedIndex = 0; //Index for merged array

    //Loop through both arrays and compare elements to merge into the merged array
    while (index1 < arr1.length && index2 < arr2.length) {

        //If element in arr1 is smaller, add it to the merged array and increment index1
        if (arr1[index1] <= arr2[index2]) {
            merged[mergedIndex] = arr1[index1];
            mergedIndex++;
            index1++;
        }
        //If element in arr2 is smaller, add it to the merged array and increment index2
        else {
            merged[mergedIndex] = arr2[index2];
            mergedIndex++;
            index2++;
        }
    }

    //Copy remaining elements from arr1, if any
    while (index1 < arr1.length) {
        merged[mergedIndex] = arr1[index1];
        mergedIndex++;
        index1++;
    }

    //Copy remaining elements from arr2, if any
    while (index2 < arr2.length) {
        merged[mergedIndex] = arr2[index2];
        mergedIndex++;
        index2++;
    }

    return merged;
}
/**
 * This class represents a generic Animal with properties like name, age, and type.
 * It also has methods for setting and getting these properties, as well as a toString method
 * to print out information about the animal.
 */
public class Animal {

    // Fields
    private String name; // Name of the animal
    private int age; // Age of the animal
    private String type; // Type of animal (eg. mammal, reptile, etc.)

    // Constructor
    public Animal(String name, int age, String type) {
        this.name = name;
        this.age = age;
        this.type = type;
    }

    // Getters and Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    // toString method
    @Override
    public String toString() {
        return "Name: " + name + "\n" + "Age: " + age + "\n" + "Type: " + type;
    }
}

/**
 * This class represents a specific type of Animal, a Cat, which inherits from the Animal class.
 * It also has an additional property, color, and methods for setting and getting this property.
 * It overrides the toString method to include the color property.
 */
public class Cat extends Animal {

    // Additional field
    private String color;

    // Constructor
    public Cat(String name, int age, String type, String color) {
        super(name, age, type);
        this.color = color;
    }

    // Getter and Setter for color
    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    // Override toString method to include color
    @Override
    public String toString() {
        return super.toString() + "\n" + "Color: " + color;
    }
}
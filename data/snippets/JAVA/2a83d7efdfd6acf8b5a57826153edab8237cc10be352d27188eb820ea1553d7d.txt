/**
 * This is a class representing a car which inherits from the Vehicle class.
 * It contains attributes specific to a car and methods to interact with those attributes.
 */
public class Car extends Vehicle {
  // Private attributes that cannot be accessed outside of this class
  private String make;
  private String model;
  private int year;
  
  // Constructor for creating a car object
  public Car(String make, String model, int year) {
    this.make = make;
    this.model = model;
    this.year = year;
  }
  
  /**
   * Getter for the make of the car
   * @return the make of the car
   */
  public String getMake() {
    return make;
  }
  
  /**
   * Getter for the model of the car
   * @return the model of the car
   */
  public String getModel() {
    return model;
  }
  
  /**
   * Getter for the year of the car
   * @return the year of the car
   */
  public int getYear() {
    return year;
  }
  
  /**
   * Method to accelerate the car by a given speed
   * @param speed the speed to accelerate by
   */
  public void accelerate(int speed) {
    System.out.println("Accelerating the car by " + speed + "mph");
  }
  
  /**
   * Method to decelerate the car by a given speed
   * @param speed the speed to decelerate by
   */
  public void decelerate(int speed) {
    System.out.println("Decelerating the car by " + speed + "mph");
  }
  
  /**
   * Main method for running the program
   * @param args optional command line arguments
   */
  public static void main(String[] args) {
    // Create a new car object with make, model, and year specified
    Car myCar = new Car("Honda", "Civic", 2020);
    
    // Call getter methods to access car attributes
    String make = myCar.getMake();
    String model = myCar.getModel();
    int year = myCar.getYear();
    
    // Output car information
    System.out.println("My car is a " + year + " " + make + " " + model);
    
    // Call methods to accelerate and decelerate the car
    myCar.accelerate(50);
    myCar.decelerate(30);
  }
}
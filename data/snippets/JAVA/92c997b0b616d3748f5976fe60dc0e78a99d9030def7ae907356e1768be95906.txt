/**
 * This class represents a node in a binary tree.
 */
public class BinaryTreeNode {
    
    // The value contained in the node
    private int value;
    
    // The parent node of this node
    private BinaryTreeNode parent;
    
    // The left child node of this node
    private BinaryTreeNode leftChild;
    
    // The right child node of this node
    private BinaryTreeNode rightChild;
    
    /**
     * Constructor for creating a BinaryTreeNode.
     * @param value The value to be stored in the node.
     * @param parent The parent node of this node.
     */
    public BinaryTreeNode(int value, BinaryTreeNode parent) {
        this.value = value;
        this.parent = parent;
        this.leftChild = null;
        this.rightChild = null;
    }
    
    /**
     * Returns the value contained in the node.
     * @return int The value of the node.
     */
    public int getValue() {
        return this.value;
    }
    
    /**
     * Sets the value of the node.
     * @param value The value to be stored in the node.
     */
    public void setValue(int value) {
        this.value = value;
    }
    
    /**
     * Returns the parent node of this node.
     * @return BinaryTreeNode The parent node.
     */
    public BinaryTreeNode getParent() {
        return this.parent;
    }
    
    /**
     * Sets the parent node of this node.
     * @param parent The parent node to be set.
     */
    public void setParent(BinaryTreeNode parent) {
        this.parent = parent;
    }
    
    /**
     * Returns the left child node of this node.
     * @return BinaryTreeNode The left child node.
     */
    public BinaryTreeNode getLeftChild() {
        return this.leftChild;
    }
    
    /**
     * Sets the left child node of this node.
     * @param leftChild The left child node to be set.
     */
    public void setLeftChild(BinaryTreeNode leftChild) {
        this.leftChild = leftChild;
    }
    
    /**
     * Returns the right child node of this node.
     * @return BinaryTreeNode The right child node.
     */
    public BinaryTreeNode getRightChild() {
        return this.rightChild;
    }
    
    /**
     * Sets the right child node of this node.
     * @param rightChild The right child node to be set.
     */
    public void setRightChild(BinaryTreeNode rightChild) {
        this.rightChild = rightChild;
    }
    
}
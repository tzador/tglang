/**
* This is a Car class that represents a car with its attributes and methods.
* Attribute: make, model, color, year, speed, isEngineOn
* Methods: startEngine(), accelerate(), brake(), stopEngine()
*/
public class Car {
  
  private String make;
  private String model;
  private String color;
  private int year;
  private int speed;
  private boolean isEngineOn;
  
  /**
  * Constructor to initialize a Car object with given make, model, color, and year.
  * @param make the make of the car
  * @param model the model of the car
  * @param color the color of the car
  * @param year the year of the car's production
  */
  public Car(String make, String model, String color, int year) {
    this.make = make;
    this.model = model;
    this.color = color;
    this.year = year;
  }
  
  /**
  * Method to start the car's engine.
  */
  public void startEngine() {
    if (!isEngineOn) {
      isEngineOn = true;
      System.out.println("Engine started.");  //prints a message when engine is turned on
    } else {
      System.out.println("Engine already running.");
    }
  }
  
  /**
  * Method to accelerate the car's speed by a given amount.
  * @param amount the amount by which the speed will increase
  */
  public void accelerate(int amount) {
    if (isEngineOn) {
      speed += amount;  //increases speed by given amount
      System.out.println("Speed increased by " + amount + " km/h.");  //prints a message displaying the increase in speed
    } else {
      System.out.println("Engine is off. Cannot accelerate.");
    }
  }
  
  /**
  * Method to apply the brakes and decrease the car's speed by a given amount.
  * @param amount the amount by which the speed will decrease
  */
  public void brake(int amount) {
    if (isEngineOn && speed > 0) {
      speed -= amount;  //decreases speed by given amount
      System.out.println("Speed decreased by " + amount + " km/h.");  //prints a message displaying the decrease in speed
    } else if (!isEngineOn) {
      System.out.println("Engine is off. Cannot brake.");
    } else {
      System.out.println("Car is already stationary.");
    }
  }
  
  /**
  * Method to stop the car's engine.
  */
  public void stopEngine() {
    if (isEngineOn) {
      brake(speed);  //applies brakes to stop the car's speed
      isEngineOn = false;
      System.out.println("Engine stopped.");  //prints a message when engine is turned off
    } else {
      System.out.println("Engine is already off.");
    }
  }
  
  /**
  * Getter method to return the make of the car.
  * @return the make of the car
  */
  public String getMake() {
    return make;
  }
  
  /**
  * Getter method to return the model of the car.
  * @return the model of the car
  */
  public String getModel() {
    return model;
  }
  
  /**
  * Getter method to return the color of the car.
  * @return the color of the car
  */
  public String getColor() {
    return color;
  }
  
  /**
  * Getter method to return the year of the car's production.
  * @return the year of the car's production
  */
  public int getYear() {
    return year;
  }
  
  /**
  * Getter method to return the current speed of the car.
  * @return the current speed of the car
  */
  public int getSpeed() {
    return speed;
  }
  
  /**
  * Method to print a summary of the car's attributes and current speed.
  */
  public void printCarSummary() {
    System.out.println("Make: " + make);
    System.out.println("Model: " + model);
    System.out.println("Color: " + color);
    System.out.println("Year: " + year);
    System.out.println("Current Speed: " + speed + " km/h");
  }
  
}

public class Main {
  
 public static void main(String[] args) {
    //create a new Car object using the constructor and pass in values for make, model, color, and year
    Car myCar = new Car("Honda", "Civic", "Blue", 2015);
    
    //call methods on the Car object to start the engine, accelerate, and print the car's summary
    myCar.startEngine();
    myCar.accelerate(50);
    myCar.printCarSummary();
    
    //call methods to stop the engine and print summary again
    myCar.stopEngine();
    myCar.printCarSummary();
 }
  
}
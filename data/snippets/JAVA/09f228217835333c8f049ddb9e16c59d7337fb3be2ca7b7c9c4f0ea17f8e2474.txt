/**
 * This class represents a bank account
 */
public class BankAccount {

    private String accountNumber; // unique account number
    private double balance; // current balance of the account

    /**
     * Constructor for creating a new bank account
     * @param accountNumber the unique account number for the account
     * @param balance the initial balance for the account
     */
    public BankAccount(String accountNumber, double balance) {
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    /**
     * Method to deposit money into the account
     * @param amount the amount of money to deposit
     */
    public void deposit(double amount) {
        balance += amount;
    }

    /**
     * Method to withdraw money from the account
     * @param amount the amount of money to withdraw
     * @throws IllegalArgumentException if the amount to withdraw is greater than the current balance
     */
    public void withdraw(double amount) throws IllegalArgumentException {
        if (amount > balance) {
            throw new IllegalArgumentException("Insufficient funds");
        }
        balance -= amount;
    }

    /**
     * Method to transfer money from this account to another account
     * @param amount the amount of money to transfer
     * @param destination the destination bank account object
     * @throws IllegalArgumentException if the amount to transfer is greater than the current balance
     */
    public void transfer(double amount, BankAccount destination) throws IllegalArgumentException {
        if (amount > balance) {
            throw new IllegalArgumentException("Insufficient funds");
        }
        this.withdraw(amount);
        destination.deposit(amount);
    }
}
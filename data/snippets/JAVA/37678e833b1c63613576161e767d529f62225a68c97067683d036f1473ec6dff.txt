/**
 * Represents a car with a model, make, and year
 */
public class Car {
    // private variables for model, make, and year
    private String model;
    private String make;
    private int year;

    /**
     * Constructor for Car class, initializes variables with given values
     * @param model the model of the car
     * @param make the make of the car
     * @param year the year the car was made
     */
    public Car(String model, String make, int year) {
        this.model = model;
        this.make = make;
        this.year = year;
    }

    /**
     * Gets the model of the car
     * @return the model of the car
     */
    public String getModel() {
        return model;
    }

    /**
     * Sets the model of the car
     * @param model the model of the car
     */
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Gets the make of the car
     * @return the make of the car
     */
    public String getMake() {
        return make;
    }

    /**
     * Sets the make of the car
     * @param make the make of the car
     */
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Gets the year of the car
     * @return the year of the car
     */
    public int getYear() {
        return year;
    }

    /**
     * Sets the year of the car
     * @param year the year of the car
     */
    public void setYear(int year) {
        this.year = year;
    }

    /**
     * Returns a string representation of the car object
     * @return the car model, make, and year as a string
     */
    @Override
    public String toString() {
        return "Car{" +
                "model='" + model + '\'' +
                ", make='" + make + '\'' +
                ", year=" + year +
                '}';
    }

    /**
     * Compares the given car object with this car object
     * @param o the car object to compare
     * @return true if the car objects are equal, false otherwise
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Car car = (Car) o;
        return year == car.year &&
                Objects.equals(model, car.model) &&
                Objects.equals(make, car.make);
    }

    /**
     * Generates a hash code for the car object
     * @return the hash code for the car object
     */
    @Override
    public int hashCode() {
        return Objects.hash(model, make, year);
    }
}
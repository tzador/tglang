public class Sorting {
    /** This method implements the quick sort algorithm using recursion.
     * @param arr The array to be sorted
     * @param low The starting index of the subarray
     * @param high The ending index of the subarray
     */
    public void quickSort(int arr[], int low, int high) {
        if (low < high) {
            // Select a pivot element
            int pivot = arr[high];

            // Partition the subarray
            int i = (low-1);
            for (int j=low; j<high; j++) {
                // If current element is smaller than or equal to the pivot
                if (arr[j] <= pivot) {
                    // Increment i to keep track of the partition index
                    i++;

                    // Swap arr[i] and arr[j]
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }

            // Swap arr[i+1] and arr[high], putting the pivot element in its correct position
            int temp = arr[i+1];
            arr[i+1] = arr[high];
            arr[high] = temp;

            // Recursively sort the subarrays
            quickSort(arr, low, i);
            quickSort(arr, i+2, high);
        }
    }
}
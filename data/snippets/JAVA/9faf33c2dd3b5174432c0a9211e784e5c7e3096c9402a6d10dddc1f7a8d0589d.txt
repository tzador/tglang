/**
 * This is a class in the Java programming language
 * that represents a Quiz game.
 */
public class QuizGame {
    private String difficultyLevel; // stores difficulty level
 
    /**
     * Constructor for QuizGame class that takes in a difficulty level as a parameter.
     *
     * @param difficultyLevel the difficulty level of the quiz.
     */
    public QuizGame(String difficultyLevel) {
        this.difficultyLevel = difficultyLevel;
    }
 
    /**
     * This method generates questions for the quiz based on the difficulty level.
     *
     * @return an array of strings containing quiz questions.
     */
    public String[] generateQuestions() {
        if (difficultyLevel.equalsIgnoreCase("easy")) {
            return new String[]{
                    "What is 2+2?",
                    "Who is the current president of the United States?",
                    "What is the capital of France?"
            };
        } else if (difficultyLevel.equalsIgnoreCase("medium")) {
            return new String[]{
                    "What is the square root of 64?",
                    "Which planet is known as the 'Red Planet'?",
                    "Who wrote the novel 'Pride and Prejudice'?"
            };
        } else if (difficultyLevel.equalsIgnoreCase("hard")) {
            return new String[]{
                    "What is the scientific name for the human brain?",
                    "Which country is the largest producer of coffee in the world?",
                    "Who was the first woman to win a Nobel Prize?"
            };
        } else {
            // If an invalid difficulty level is entered, throws an IllegalArgumentException.
            throw new IllegalArgumentException("Invalid difficulty level. Please choose from 'easy', 'medium', or 'hard'.");
        }
    }
 
    /**
     * This method checks if the answer provided by the player is correct or not.
     *
     * @param question the quiz question being answered
     * @param answer   the player's answer
     * @return true if the answer is correct, false if it is incorrect
     */
    public boolean checkAnswer(String question, String answer) {
        if (question.equals("What is 2+2?") && answer.equals("4")) {
            return true;
        } else if (question.equals("Who is the current president of the United States?") && answer.equalsIgnoreCase("Joe Biden")) {
            return true;
        } else if (question.equals("What is the capital of France?") && answer.equalsIgnoreCase("Paris")) {
            return true;
        } else if (question.equals("What is the square root of 64?") && answer.equals("8")) {
            return true;
        } else if (question.equals("Which planet is known as the 'Red Planet'?") && answer.equalsIgnoreCase("Mars")) {
            return true;
        } else if (question.equals("Who wrote the novel 'Pride and Prejudice'?") && answer.equalsIgnoreCase("Jane Austen")) {
            return true;
        } else if (question.equals("What is the scientific name for the human brain?") && answer.equals("Cerebrum")) {
            return true;
        } else if (question.equals("Which country is the largest producer of coffee in the world?") && answer.equalsIgnoreCase("Brazil")) {
            return true;
        } else if (question.equals("Who was the first woman to win a Nobel Prize?") && answer.equalsIgnoreCase("Marie Curie")) {
            return true;
        } else {
            return false;
        }
    }
 
    /**
     * This method calculates the score of the player based on the number of correct answers.
     *
     * @param correctAnswers an array of booleans representing the correctness of each answer.
     * @return the player's score as a percentage.
     */
    public double calculateScore(boolean[] correctAnswers) {
        int totalQuestions = correctAnswers.length;
        int correctCount = 0;
 
        // Loops through the array of correct answers and counts the number of true values.
        for (boolean answer : correctAnswers) {
            if (answer) {
                correctCount++;
            }
        }
 
        // Calculates the player's score as a percentage.
        double score = (double) correctCount / totalQuestions * 100;
        return score;
    }
}
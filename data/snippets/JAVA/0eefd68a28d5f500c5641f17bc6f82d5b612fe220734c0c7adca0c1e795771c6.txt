// This program calculates the n-th fibonacci number
// with the help of memoization technique

import java.util.HashMap;
import java.util.Map;

public class FibonacciMemoization {

    // hashmap to store already calculated fibonacci numbers
    private static Map<Integer, Integer> memo = new HashMap<>();

    // recursive method to calculate the fibonacci number
    public static int fibonacci(int n) {

        // check if the number is already calculated
        if (memo.containsKey(n)) {
            // if yes, return the stored value
            return memo.get(n);
        } else {
            // if not, calculate and store the value
            int result;
            if (n == 0 || n == 1) {
                result = 1;
            } else {
                result = fibonacci(n - 1) + fibonacci(n - 2);
            }
            memo.put(n, result);
            // return the calculated value
            return result;
        }
    }

    public static void main(String[] args) {
        
        // specify which fibonacci number to calculate
        int n = 10;
        
        // call the recursive method to calculate the fibonacci number
        int result = fibonacci(n);
        
        // print the result
        System.out.println("The " + n + "th fibonacci number is: " + result);
    }
}
/**
 * This class represents a 2D vector 
 * with x and y components.
 */
public class Vector2D {

    /**
     * The x component of the vector.
     */
    private int x;
    
    /**
     * The y component of the vector.
     */
    private int y;
    
    /**
     * Constructs a new Vector2D with 
     * the given x and y components.
     * @param x the x component
     * @param y the y component
     */
    public Vector2D(int x, int y) {
        this.x = x;
        this.y = y;
    }
    
    /**
     * Returns the magnitude of this vector.
     * @return the magnitude
     */
    public double getMagnitude() {
        return Math.sqrt(x*x + y*y);
    }
    
    /**
     * Normalizes this vector.
     */
    public void normalize() {
        double magnitude = getMagnitude();
        x /= magnitude;
        y /= magnitude;
    }
    
    /**
     * Adds the given vector to this vector.
     * @param vector the vector to be added
     */
    public void add(Vector2D vector) {
        x += vector.x;
        y += vector.y;
    }
    
    /**
     * Subtracts the given vector from this vector.
     * @param vector the vector to be subtracted
     */
    public void subtract(Vector2D vector) {
        x -= vector.x;
        y -= vector.y;
    }
    
    /**
     * Multiplies this vector by the given scalar.
     * @param scalar the scalar value
     */
    public void multiply(int scalar) {
        x *= scalar;
        y *= scalar;
    }
    
    /**
     * Returns the dot product of this vector
     * with the given vector.
     * @param vector the other vector
     * @return the dot product
     */
    public int dotProduct(Vector2D vector) {
        return (x * vector.x) + (y * vector.y);
    }
    
    /**
     * Returns the angle between this vector
     * and the given vector in radians.
     * @param vector the other vector
     * @return the angle in radians
     */
    public double angleBetween(Vector2D vector) {
        double dotProduct = dotProduct(vector);
        double magnitude1 = getMagnitude();
        double magnitude2 = vector.getMagnitude();
        return Math.acos(dotProduct / (magnitude1 * magnitude2));
    }
}
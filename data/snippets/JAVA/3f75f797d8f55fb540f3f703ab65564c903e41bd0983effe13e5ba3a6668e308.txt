/**
 * This program simulates a game of hangman.
 * It generates a random word from a given list,
 * and allows the user to guess letters until they solve the word
 */

// generate a list of words to choose from
String[] words = {"apple", "banana", "orange", "strawberry", "pineapple"};

// generate a random number to choose a word from the list
int randIndex = (int) (Math.random() * words.length);

// get the chosen word
String chosenWord = words[randIndex];

// create a char array to hold the letters of the word
char[] wordLetters = new char[chosenWord.length()];

// fill the char array with underscores to represent unguessed letters
Arrays.fill(wordLetters, '_');

// create a StringBuilder to display the guessed word with spaces between letters
StringBuilder displayedWord = new StringBuilder();
for (char letter : wordLetters) {
    displayedWord.append(letter + " ");
}
System.out.println("Guess this word: " + displayedWord);

// create a list to track guessed letters
List<Character> guessedLetters = new ArrayList<>();

// create a variable to track number of incorrect guesses
int wrongGuesses = 0;

// create a loop to allow user to make guesses
while (wrongGuesses < 6) {
    System.out.print("Enter a letter or the full word: ");
    
    // get user input
    Scanner input = new Scanner(System.in);
    String userGuess = input.nextLine();
    
    // check if user's guess is a single letter
    if (userGuess.length() == 1) {
        // check if the letter has already been guessed
        if (guessedLetters.contains(userGuess.charAt(0))) {
            System.out.println("You already guessed that letter. Guess again!");
            continue;
        } else {
            // add the guessed letter to the list
            guessedLetters.add(userGuess.charAt(0));
            
            // check if the chosen word contains the guessed letter
            if (chosenWord.contains(userGuess)) {
                // replace the underscores with the guessed letter in the displayed word
                for (int i = 0; i < chosenWord.length(); i++) {
                    if (chosenWord.charAt(i) == userGuess.charAt(0)) {
                        wordLetters[i] = userGuess.charAt(0);
                        displayedWord.replace(i * 2, (i * 2) + 1, userGuess);
                    }
                }
                System.out.println("Correct! You're one step closer to solving the word.");
                System.out.println(displayedWord);
            } else {
                System.out.println("Sorry, that letter is not in the word. Try again!");
                wrongGuesses++;
            }
        }
    } else { // if user's guess is not a single letter, check if it is the full word
        if (userGuess.equals(chosenWord)) {
            System.out.println("Congratulations, you solved the word!");
            System.exit(0);
        } else {
            System.out.println("Incorrect guess, try again!");
            wrongGuesses++;
        }
    }
}

// if user runs out of guesses, display the full word and end the game
System.out.println("You ran out of guesses. The word was: " + chosenWord);
System.exit(0);
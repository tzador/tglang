/*
This code snippet uses a binary search algorithm to find a specific element in a sorted array.

- Input: An array of integers, a target value
- Output: The index of the target value in the array, or -1 if not found
*/

public static int binarySearch(int[] arr, int target) {
    int left = 0;
    int right = arr.length - 1;

    // Loop until search space is exhausted
    while (left <= right) {
        // Calculate middle index
        int mid = (left + right) / 2;

        // Compare middle element to target value
        if (arr[mid] == target) {
            // Target element found, return index
            return mid;
        } else if (arr[mid] < target) {
            // Target value is greater than middle element, search right half of array
            left = mid + 1;
        } else {
            // Target value is less than middle element, search left half of array
            right = mid - 1;
        }
    }

    // Target value not found in array
    return -1;
}

// Sample usage
int[] arr = {1, 3, 5, 7, 9};
int target = 5;
int index = binarySearch(arr, target);
System.out.println("Index of " + target + " in array: " + index); // Output: Index of 5 in array: 2
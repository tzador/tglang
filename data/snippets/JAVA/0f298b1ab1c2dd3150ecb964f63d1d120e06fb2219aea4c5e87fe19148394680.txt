public class ComplexNumber {
    
    double real;
    double imag;
    
    // constructor with no parameters
    public ComplexNumber() {
        this.real = 0;
        this.imag = 0;
    }
    
    // constructor with two parameters - real and imaginary parts 
    public ComplexNumber(double real, double imag) {
        this.real = real;
        this.imag = imag;
    }
    
    //overriding toString() method to print complex number
    @Override
    public String toString() {
        String complexStr="";
        if (imag < 0) {
            complexStr = String.format("%.2f - %.2fi", real, -imag);
        } else if (imag > 0) {
            complexStr = String.format("%.2f + %.2fi", real, imag);
        } else {
            complexStr = String.format("%.2f", real);
        }
        return complexStr;
    }
    
    //method to add complex numbers
    public ComplexNumber add(ComplexNumber other) {
        double real = this.real + other.real;
        double imag = this.imag + other.imag;
        return new ComplexNumber(real, imag);
    }
    
    //method to subtract complex numbers
    public ComplexNumber subtract(ComplexNumber other) {
        double real = this.real - other.real;
        double imag = this.imag - other.imag;
        return new ComplexNumber(real, imag);
    }
    
    //method to multiply complex numbers
    public ComplexNumber multiply(ComplexNumber other) {
        double real = this.real * other.real - this.imag * other.imag;
        double imag = this.real * other.imag + this.imag * other.real;
        return new ComplexNumber(real, imag);
    }
    
    //method to divide complex numbers
    public ComplexNumber divide(ComplexNumber other) {
        //calculate denominator
        double denominator = Math.pow(other.real, 2) + Math.pow(other.imag, 2);
        
        //calculate real and imaginary numerator
        double realNumerator = this.real * other.real + this.imag * other.imag;
        double imagNumerator = this.imag * other.real - this.real * other.imag;
        
        //calculate final real and imaginary values
        double real = realNumerator / denominator;
        double imag = imagNumerator / denominator;
        
        return new ComplexNumber(real, imag);
    }
}
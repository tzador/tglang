/**
* A class representing a binary tree node.
*/
class TreeNode {
    private int data; // an integer representing the data stored in the node
    private TreeNode left; // a reference to the left child node
    private TreeNode right; // a reference to the right child node

    /**
    * Constructor to create a node with the given data.
    * @param data the data to be stored in the node
    */
    public TreeNode(int data) {
        this.data = data;
        this.left = null;
        this.right = null;
    }

    /**
    * Method to insert a new node as the left child of this node.
    * @param data the data to be stored in the new node
   * @return the newly inserted left child node
    */
    public TreeNode insertLeft(int data) {
        this.left = new TreeNode(data);
        return this.left;
    }

    /**
    * Method to insert a new node as the right child of this node.
    * @param data the data to be stored in the new node
    * @return the newly inserted right child node
    */
    public TreeNode insertRight(int data) {
        this.right = new TreeNode(data);
        return this.right;
    }

    /**
    * Method to get the data stored in this node.
    * @return the data stored in this node
    */
    public int getData() {
        return this.data;
    }

    /**
    * Method to get the left child node.
    * @return the left child node
    */
    public TreeNode getLeft() {
        return this.left;
    }

    /**
    * Method to get the right child node.
    * @return the right child node
    */
    public TreeNode getRight() {
        return this.right;
    }
}
/**
 * This is a complex method that takes in an array
 * of integers and sorts them using the Quick Sort algorithm.
 * @param arr the array of integers to be sorted
 * @param low the starting index of the partition
 * @param high the ending index of the partition
 */
public static void quickSort(int[] arr, int low, int high){
    if (low < high) {
        //pick pivot as the last element of the array
        int pivot = arr[high];
        //partition the array based on pivot
        int i = (low - 1);
        for (int j = low; j < high; j++) {
            if (arr[j] < pivot) {
                i++;
                //swap elements
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
        //swap pivot to correct position
        int temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;
        //recursively call quickSort on left and right partitions
        quickSort(arr, low, i);
        quickSort(arr, i + 2, high);
    }
}
/** 
 * This method checks if the given number is prime or not
 * @param num the number to be checked
 * @return true if the number is prime, false otherwise
 */
public boolean isPrime(int num){
    // base case - 2 is a prime number
    if(num == 2){
        return true;
    }
    // base case - if number is divisible by 2, it is not a prime number
    if(num % 2 == 0){
        return false;
    }
    // loop through all odd numbers from 3 to sqrt(num)
    for(int i=3; i<=Math.sqrt(num); i+=2){
        // if number is divisible by any odd number, it is not a prime number
        if(num % i == 0){
            return false;
        }
    }
    // if all conditions are satisfied, number is a prime number
    return true;
}

/**
 * This method prints the first n prime numbers starting from 2
 * @param n the number of prime numbers to be printed
 */
public void printNPrimes(int n){
    int count = 0; // keep track of number of prime numbers
    int num = 2; // start from 2
    while(count < n){
        // check if current number is prime
        if(isPrime(num)){
            // print the number and increase count
            System.out.println(num);
            count++;
        }
        // move on to next number
        num++;
    }
}
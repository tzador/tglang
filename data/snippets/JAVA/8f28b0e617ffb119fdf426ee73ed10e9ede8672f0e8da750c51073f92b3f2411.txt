import java.util.*;
 
/**
 * This is a class that represents a library.
 * It contains methods for adding and removing books, and searching for books by title or author.
 */
public class Library {
    
    //Declaring private variables for the library class
    private ArrayList<Book> books;
    private HashMap<String, ArrayList<Book>> booksByAuthor;
    private HashMap<String, ArrayList<Book>> booksByTitle;
 
    //Constructor for the Library class
    public Library() {
        books = new ArrayList<Book>();
        booksByAuthor = new HashMap<String, ArrayList<Book>>();
        booksByTitle = new HashMap<String, ArrayList<Book>>();
    }
 
    /**
    * This method adds a book to the library.
    * If the book already exists in the library, its quantity is increased.
    * @param book The book to be added to the library.
    */
    public void addBook(Book book) {
        //Check if the book already exists in the library
        if(books.contains(book)) {
            //If it does, increase its quantity by one
            int currentQuantity = book.getQuantity();
            book.setQuantity(currentQuantity + 1);
        }
        //Otherwise, add the book to the list of books and update the hashmaps
        else {
            books.add(book);
            //Add the book to the hashmap of books by author
            if(booksByAuthor.containsKey(book.getAuthor())) {
                booksByAuthor.get(book.getAuthor()).add(book);
            } else {
                ArrayList<Book> booksByThisAuthor = new ArrayList<Book>();
                booksByThisAuthor.add(book);
                booksByAuthor.put(book.getAuthor(), booksByThisAuthor);
            }
            //Add the book to the hashmap of books by title
            if(booksByTitle.containsKey(book.getTitle())) {
                booksByTitle.get(book.getTitle()).add(book);
            } else {
                ArrayList<Book> booksWithThisTitle = new ArrayList<Book>();
                booksWithThisTitle.add(book);
                booksByTitle.put(book.getTitle(), booksWithThisTitle);
            }
        }
    }
 
    /**
    * This method removes a book from the library.
    * If the book's quantity is greater than 1, its quantity is decreased, otherwise it is removed from the library.
    * @param book The book to be removed from the library.
    */
    public void removeBook(Book book) {
        //Check if the book exists in the library
        if(books.contains(book)) {
            //If its quantity is greater than 1, decrease it by one
            if(book.getQuantity() > 1) {
                int currentQuantity = book.getQuantity();
                book.setQuantity(currentQuantity - 1);
            }
            //Otherwise, remove it from the list of books and update the hashmaps
            else {
                books.remove(book);
                //Remove the book from the hashmap of books by author
                if(booksByAuthor.containsKey(book.getAuthor())) {
                    booksByAuthor.get(book.getAuthor()).remove(book);
                }
                //Remove the book from the hashmap of books by title
                if(booksByTitle.containsKey(book.getTitle())) {
                    booksByTitle.get(book.getTitle()).remove(book);
                }
            }
        }
    }
 
    /**
    * This method searches for books by a given author.
    * @param author The author of the books to be searched for.
    * @return An arraylist of books written by the given author.
    */
    public ArrayList<Book> searchByAuthor(String author) {
        //Check if the hashmap contains the author name
        if(booksByAuthor.containsKey(author)) {
            //Return the list of books written by that author
            return booksByAuthor.get(author);
        }
        //Otherwise, return an empty list
        else {
            return new ArrayList<>();
        }
    }
 
    /**
    * This method searches for books by a given title.
    * @param title The title of the books to be searched for.
    * @return An arraylist of books with the given title.
    */
    public ArrayList<Book> searchByTitle(String title) {
        //Check if the hashmap contains the title
        if(booksByTitle.containsKey(title)) {
            //Return the list of books with that title
            return booksByTitle.get(title);
        }
        //Otherwise, return an empty list
        else {
            return new ArrayList<>();
        }
    }
}
/**
 * This is a complex code snippet in JAVA that creates a multithreaded program.
 * It generates 10 threads and executes them simultaneously.
 */

public class MultithreadingExample extends Thread {

    private int count;

    /**
     * Constructor for the MultithreadingExample class
     *
     * @param count the number of iterations the thread will perform
     */
    public MultithreadingExample(int count) {
        this.count = count;
    }

    /**
     * The run method of the thread that will be executed when start() is called
     */
    @Override
    public void run() {
        // Perform some calculations
        for (int i = 0; i < count; i++) {
            System.out.println("Thread " + this.getName() + " is performing iteration " + i);
        }
    }

    public static void main(String[] args) {
        // Create an array of threads
        MultithreadingExample[] threads = new MultithreadingExample[10];
        // Create and start all the threads
        for (int i = 0; i < threads.length; i++) {
            // Each thread will perform 5 iterations
            threads[i] = new MultithreadingExample(5);
            threads[i].start();
        }
        // Wait for all threads to finish executing
        for (MultithreadingExample thread : threads) {
            try {
                thread.join();
            } catch (InterruptedException e) {
                System.out.println("Thread interrupted: " + e.getMessage());
            }
        }
        System.out.println("All threads have finished execution.");
    }
}
/*
A class representing a complex number
with real and imaginary parts.
*/
class ComplexNumber {
    //private data members holding the real and imaginary parts
    private double real;
    private double imaginary;
    
    /* 
    Constructor for creating a complex number 
    with default values of zero for real and imaginary parts.
    */
    public ComplexNumber() {
        this.real = 0.0;
        this.imaginary = 0.0;
    }
    
    /*
    Constructor for creating a complex number 
    with specified values for real and imaginary parts.
    */
    public ComplexNumber(double real, double imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }
    
    //Get method for retrieving the real part of the complex number
    public double getReal() {
        return this.real;
    }
    
    //Get method for retrieving the imaginary part of the complex number
    public double getImaginary() {
        return this.imaginary;
    }
    
    //Method for adding another complex number to the current complex number
    public ComplexNumber add(ComplexNumber num) {
        double realSum = this.real + num.getReal();
        double imaginarySum = this.imaginary + num.getImaginary();
        return new ComplexNumber(realSum, imaginarySum);
    }
    
    //Method for multiplying another complex number to the current complex number
    public ComplexNumber multiply(ComplexNumber num) {
        double realProduct = (this.real * num.getReal()) - (this.imaginary * num.getImaginary());
        double imaginaryProduct = (this.real * num.getImaginary()) + (this.imaginary * num.getReal());
        return new ComplexNumber(realProduct, imaginaryProduct);
    }
    
    //Method for determining if two complex numbers are equal
    public boolean equals(ComplexNumber num) {
        return (this.real == num.getReal()) && (this.imaginary == num.getImaginary());
    }
}
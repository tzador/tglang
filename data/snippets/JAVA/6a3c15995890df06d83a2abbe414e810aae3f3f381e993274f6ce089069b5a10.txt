/**
 * This is a complex and long code snippet in JAVA.
 */
public class ComplexCodeSnippet {
    private int[] numbers;

    /**
    * Constructor for the ComplexCodeSnippet class.
    * @param nums An array of integers
    */
    public ComplexCodeSnippet(int[] nums) {
        this.numbers = nums;
    }

    /**
    * This method returns the sum of all the numbers in the array.
    * @return The sum of all the numbers in the array
    */
    public int getSum() {
        int sum = 0; // initialize sum variable
        for (int num : numbers) {
            sum += num;
        }
        return sum;
    }

    /**
    * This method returns the maximum number in the array.
    * @return The maximum number in the array
    */
    public int getMax() {
        int max = numbers[0]; // initialize max variable with first element in array
        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] > max) {
                max = numbers[i];
            }
        }
        return max;
    }

    /**
    * This method returns the minimum number in the array.
    * @return The minimum number in the array
    */
    public int getMin() {
        int min = numbers[0]; // initialize min variable with first element in array
        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] < min) {
                min = numbers[i];
            }
        }
        return min;
    }

    /**
    * This method checks if the array contains a specific number.
    * @param num The number to be checked
    * @return True if the number is found, false otherwise
    */
    public boolean contains(int num) {
        for (int i = 0; i < numbers.length; i++) {
            if (numbers[i] == num) {
                return true;
            }
        }
        return false;
    }

    /**
    * This method sorts the array in ascending order using the bubble sort algorithm.
    */
    public void sortByAscending() {
        for (int i = 0; i < numbers.length - 1; i++) {
            for (int j = 0; j < numbers.length - i - 1; j++) {
                if (numbers[j] > numbers[j + 1]) {
                    // swap numbers[j] and numbers[j+1]
                    int temp = numbers[j];
                    numbers[j] = numbers[j + 1];
                    numbers[j + 1] = temp;
                }
            }
        }
    }
}

// Driver code to test the ComplexCodeSnippet class
public static void main(String[] args) {
    int[] arr = {1, 5, 2, 7, 3, 4, 9, 6, 8};
    ComplexCodeSnippet snippet = new ComplexCodeSnippet(arr);
    System.out.println("Sum of the array: " + snippet.getSum()); // Output: Sum of the array: 45
    System.out.println("Max of the array: " + snippet.getMax()); // Output: Max of the array: 9
    System.out.println("Min of the array: " + snippet.getMin()); // Output: Min of the array: 1
    System.out.println("Contains 7: " + snippet.contains(7)); // Output: Contains 7: true
    snippet.sortByAscending(); // sort array in ascending order
    System.out.println("Sorted array: " + Arrays.toString(arr)); // Output: Sorted array: [1, 2, 3, 4, 5, 6, 7, 8, 9]
}
/**
 * This is a class that represents a car
 */
public class Car {
    private String make; // the make of the car
    private String model; // the model of the car
    private int year; // the year the car was made
    private double fuelCapacity; // the maximum fuel capacity of the car
    private double currentFuel; // the current fuel level of the car

    /**
     * This is a constructor for the Car class
     * It takes in the make, model, year, and fuel capacity of the car
     * and initializes the corresponding instance variables
     * @param make the make of the car
     * @param model the model of the car
     * @param year the year the car was made
     * @param fuelCapacity the maximum fuel capacity of the car
     */
    public Car(String make, String model, int year, double fuelCapacity) {
        this.make = make;
        this.model = model;
        this.year = year;
        this.fuelCapacity = fuelCapacity;
        this.currentFuel = 0; // when a new car is created, it starts with no fuel
    }

    /**
     * This method fills up the car's fuel tank to its maximum capacity
     */
    public void fillUp() {
        this.currentFuel = this.fuelCapacity;
    }

    /**
     * This method drives the car for a certain distance, using up fuel in the process
     * If the car runs out of fuel before reaching the distance, it will stop and print an error message
     * @param distance the distance in kilometers to drive
     */
    public void drive(double distance) {
        double fuelNeeded = distance / 10; // assuming the car consumes 10 km per liter of fuel
        if (fuelNeeded > this.currentFuel) {
            System.out.println("Sorry, the car does not have enough fuel to drive this distance.");
        } else {
            this.currentFuel -= fuelNeeded;
            System.out.println("The car has successfully driven " + distance + " kilometers.");
        }
    }

    /**
     * This method returns the make of the car
     * @return the car's make
     */
    public String getMake() {
        return this.make;
    }

    /**
     * This method returns the model of the car
     * @return the car's model
     */
    public String getModel() {
        return this.model;
    }

    /**
     * This method returns the year the car was made
     * @return the car's year
     */
    public int getYear() {
        return this.year;
    }

    /**
     * This method returns the maximum fuel capacity of the car
     * @return the car's maximum fuel capacity
     */
    public double getFuelCapacity() {
        return this.fuelCapacity;
    }

    /**
     * This method returns the current fuel level of the car
     * @return the car's current fuel level
     */
    public double getCurrentFuel() {
        return this.currentFuel;
    }

    /**
     * This method sets the make of the car to a new value
     * @param make the new make of the car
     */
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * This method sets the model of the car to a new value
     * @param model the new model of the car
     */
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * This method sets the year the car was made to a new value
     * @param year the new year the car was made
     */
    public void setYear(int year) {
        this.year = year;
    }

    /**
     * This method sets the maximum fuel capacity of the car to a new value
     * @param fuelCapacity the new maximum fuel capacity of the car
     */
    public void setFuelCapacity(double fuelCapacity) {
        this.fuelCapacity = fuelCapacity;
    }

    /**
     * This method sets the current fuel level of the car to a new value
     * If the new value is greater than the maximum fuel capacity of the car,
     * it will be automatically set to the maximum fuel capacity
     * @param currentFuel the new current fuel level of the car
     */
    public void setCurrentFuel(double currentFuel) {
        if (currentFuel > this.fuelCapacity) { // make sure the new fuel level does not exceed the maximum capacity
            this.currentFuel = this.fuelCapacity;
        } else {
            this.currentFuel = currentFuel;
        }
    }
}
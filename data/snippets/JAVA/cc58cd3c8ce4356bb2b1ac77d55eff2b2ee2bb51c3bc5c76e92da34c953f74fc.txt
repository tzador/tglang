/**
 * This class represents a basic calculator that allows for addition, subtraction, multiplication, and division.
 */
public class Calculator {
    // instance variables
    private double currentResult;
    private double previousResult;
    private double memory;
    
    /**
     * Constructor to initialize the calculator with a starting result of 0.
     */
    public Calculator() {
        this.currentResult = 0;
        this.previousResult = 0;
        this.memory = 0;
    }
    
    /**
     * Method to perform addition on the current result and a given number.
     * @param num the number to add to the current result
     */
    public void add(double num) {
        previousResult = currentResult;
        currentResult += num;
    }
    
    /**
     * Method to perform subtraction on the current result and a given number.
     * @param num the number to subtract from the current result
     */
    public void subtract(double num) {
        previousResult = currentResult;
        currentResult -= num;
    }
    
    /**
     * Method to perform multiplication on the current result and a given number.
     * @param num the number to multiply by the current result
     */
    public void multiply(double num) {
        previousResult = currentResult;
        currentResult *= num;
    }
    
    /**
     * Method to perform division on the current result and a given number.
     * @param num the number to divide the current result by
     * @throws ArithmeticException if the given number is 0
     */
    public void divide(double num) throws ArithmeticException {
        if (num == 0) {
            throw new ArithmeticException("Cannot divide by 0.");
        } else {
            previousResult = currentResult;
            currentResult /= num;
        }
    }
    
    /**
     * Method to clear the current result and set it back to 0.
     */
    public void clear() {
        currentResult = 0;
        previousResult = 0;
    }
    
    /**
     * Method to store the current result in memory.
     */
    public void storeInMemory() {
        memory = currentResult;
    }
    
    /**
     * Method to retrieve the result from memory and add it to the current result.
     */
    public void retrieveFromMemory() {
        add(memory);
    }
    
    /**
     * Method to get the current result.
     * @return the current result
     */
    public double getCurrentResult() {
        return currentResult;
    }
    
    /**
     * Method to get the previous result.
     * @return the previous result
     */
    public double getPreviousResult() {
        return previousResult;
    }
}
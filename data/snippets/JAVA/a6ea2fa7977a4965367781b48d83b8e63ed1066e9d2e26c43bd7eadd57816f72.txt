public class ComplexNumber {

    //Class Variables
    private double real;
    private double imaginary;

    //Constructor
    public ComplexNumber(double real, double imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }

    //Getters and Setters
    public double getReal() {
        return real;
    }

    public void setReal(double real) {
        this.real = real;
    }

    public double getImaginary() {
        return imaginary;
    }

    public void setImaginary(double imaginary) {
        this.imaginary = imaginary;
    }

    //Methods
    /**
    * This method adds two complex numbers together and returns the result as a new complex number.
    * @param num1 The first complex number to be added.
    * @param num2 The second complex number to be added.
    * @return The result of adding the two complex numbers together.
    */
    public static ComplexNumber add(ComplexNumber num1, ComplexNumber num2) {
        double real = num1.getReal() + num2.getReal();
        double imaginary = num1.getImaginary() + num2.getImaginary();
        return new ComplexNumber(real, imaginary);
    }

    /**
    * This method subtracts two complex numbers and returns the result as a new complex number.
    * @param num1 The first complex number to be subtracted.
    * @param num2 The second complex number to be subtracted.
    * @return The result of subtracting the two complex numbers.
    */
    public static ComplexNumber subtract(ComplexNumber num1, ComplexNumber num2) {
        double real = num1.getReal() - num2.getReal();
        double imaginary = num1.getImaginary() - num2.getImaginary();
        return new ComplexNumber(real, imaginary);
    }

    /**
    * This method multiplies two complex numbers and returns the result as a new complex number.
    * @param num1 The first complex number to be multiplied.
    * @param num2 The second complex number to be multiplied.
    * @return The result of multiplying the two complex numbers.
    */
    public static ComplexNumber multiply(ComplexNumber num1, ComplexNumber num2) {
        double real = (num1.getReal() * num2.getReal()) - (num1.getImaginary() * num2.getImaginary());
        double imaginary = (num1.getReal() * num2.getImaginary()) + (num2.getReal() * num1.getImaginary());
        return new ComplexNumber(real, imaginary);
    }

    /**
    * This method divides two complex numbers and returns the result as a new complex number.
    * @param num1 The first complex number to be divided.
    * @param num2 The second complex number to be divided.
    * @return The result of dividing the two complex numbers.
    */
    public static ComplexNumber divide(ComplexNumber num1, ComplexNumber num2) {
        double denominator = Math.pow(num2.getReal(), 2) + Math.pow(num2.getImaginary(), 2);
        double real = ((num1.getReal() * num2.getReal()) + (num1.getImaginary() * num2.getImaginary())) / denominator;
        double imaginary = ((num1.getImaginary() * num2.getReal()) - (num1.getReal() * num2.getImaginary())) / denominator;
        return new ComplexNumber(real, imaginary);
    }

    /**
    * This method calculates the absolute value of a complex number.
    * @return The absolute value of the complex number.
    */
    public double getAbsoluteValue() {
        return Math.sqrt(Math.pow(this.real, 2) + Math.pow(this.imaginary, 2));
    }

    /**
    * This method checks if two complex numbers are equal.
    * @param num The complex number to compare to.
    * @return True if the two complex numbers are equal, false otherwise.
    */
    public boolean equals(ComplexNumber num) {
        if (this.real == num.getReal() && this.imaginary == num.getImaginary()) {
            return true;
        } else {
            return false;
        }
    }

    /**
    * This method overrides the toString() method to print a complex number in the correct format.
    * @return The complex number as a String in the form: a + bi
    */
    @Override
    public String toString() {
        if (this.imaginary >= 0) {
            return this.real + " + " + this.imaginary + "i";
        } else {
            return this.real + " - " + Math.abs(this.imaginary) + "i";
        }
    }
}
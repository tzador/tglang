/**
* This is a multi-line comment in JAVA.
* It will be ignored during compilation.
* This is where you can describe the purpose of the code or add any other relevant information.
*/
 
// This is a single line comment in JAVA. It will also be ignored during compilation.
 
// Importing the necessary libraries or packages
import java.util.*; // For using utility classes
import java.io.*; // For handling input/output stream
 
// Defining a public class called "MyClass"
public class MyClass{
 
    // Declaring a private variable
    private int myVar;
 
    // Defining a static method named "myMethod" with return type 'void' and a parameter of type int
    public static void myMethod(int num){
        System.out.println("This is a static method with a parameter." + num);
    }
 
    // Defining a constructor with the same name as the class
    // This constructor initializes the "myVar" variable with a given value 
    public MyClass(int myVar){
        this.myVar = myVar;
    }
 
    // Defining a synchronized method with return type 'String' and no parameters
    public synchronized String synchronizedMethod(){
        // Creating a local variable
        String result = "This is a synchronized method.";
        // Returning the result
        return result;
    }
 
    // Overriding the toString() method to print the state of the "myVar" variable
    @Override
    public String toString(){
        return "The state of myVar is :" + myVar;
    }
 
    // Defining a main method, which is the entry point of a JAVA program
    public static void main(String[] args){
 
        // Declaring and initializing a variable of type int
        int num = 10;
 
        // Creating an object of type "MyClass" using the constructor
        MyClass myObj = new MyClass(num);
 
        // Calling the static method with the "myObj" object and the "num" variable as arguments
        myObj.myMethod(num);
 
        // Using the synchronized method to print the state of the "myVar" variable
        System.out.println(myObj.synchronizedMethod());
 
        // Printing the state of the "myVar" variable using the toString() method
        System.out.println(myObj);
    }
}
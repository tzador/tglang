import javax.swing.*; // import GUI library

/**
 * This is a complex code snippet that implements a GUI calculator
 * using Java. It can perform basic mathematical operations.
 */

public class Calculator {

    private JFrame frame; // main window
    private JPanel panel; // panel for buttons and display
    private JTextField displayField; // text field for displaying results
    private JLabel statusLabel; // label for showing status messages
    private boolean operand1Input; // flag to check if first operand is inputted
    private double operand1; // first operand
    private double operand2; // second operand
    private char operation; // operation to be performed

    /**
     * Constructor for Calculator class.
     * Sets up the GUI and initializes variables.
     */
    public Calculator() {
        frame = new JFrame("Calculator"); // set window title
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // initialize panel and layout
        panel = new JPanel();
        panel.setLayout(new BorderLayout());
        // initialize display field and add to panel
        displayField = new JTextField(25);
        displayField.setEditable(false);
        panel.add(displayField, BorderLayout.NORTH);
        // initialize status label and add to panel
        statusLabel = new JLabel("Ready");
        panel.add(statusLabel, BorderLayout.CENTER);
        // initialize buttons and add to panel
        JButton button0 = new JButton("0");
        JButton button1 = new JButton("1");
        JButton button2 = new JButton("2");
        JButton button3 = new JButton("3");
        JButton button4 = new JButton("4");
        JButton button5 = new JButton("5");
        JButton button6 = new JButton("6");
        JButton button7 = new JButton("7");
        JButton button8 = new JButton("8");
        JButton button9 = new JButton("9");
        JButton buttonAdd = new JButton("+");
        JButton buttonSubtract = new JButton("-");
        JButton buttonMultiply = new JButton("*");
        JButton buttonDivide = new JButton("/");
        JButton buttonEquals = new JButton("=");
        // add action listeners to buttons
        button0.addActionListener(e -> numberClicked(0));
        button1.addActionListener(e -> numberClicked(1));
        button2.addActionListener(e -> numberClicked(2));
        button3.addActionListener(e -> numberClicked(3));
        button4.addActionListener(e -> numberClicked(4));
        button5.addActionListener(e -> numberClicked(5));
        button6.addActionListener(e -> numberClicked(6));
        button7.addActionListener(e -> numberClicked(7));
        button8.addActionListener(e -> numberClicked(8));
        button9.addActionListener(e -> numberClicked(9));
        buttonAdd.addActionListener(e -> operationClicked('+'));
        buttonSubtract.addActionListener(e -> operationClicked('-'));
        buttonMultiply.addActionListener(e -> operationClicked('*'));
        buttonDivide.addActionListener(e -> operationClicked('/'));
        buttonEquals.addActionListener(e -> equalsClicked());
        // add buttons to panel
        panel.add(button7, BorderLayout.WEST);
        panel.add(button8, BorderLayout.PAGE_START);
        panel.add(button9, BorderLayout.EAST);
        panel.add(button4, BorderLayout.LINE_START);
        panel.add(button5, BorderLayout.CENTER);
        panel.add(button6, BorderLayout.LINE_END);
        panel.add(button1, BorderLayout.PAGE_END);
        panel.add(button2, BorderLayout.LINE_START);
        panel.add(button3, BorderLayout.PAGE_END);
        panel.add(button0, BorderLayout.CENTER);
        panel.add(buttonAdd, BorderLayout.LINE_END);
        panel.add(buttonSubtract, BorderLayout.PAGE_END);
        panel.add(buttonMultiply, BorderLayout.LINE_END);
        panel.add(buttonDivide, BorderLayout.PAGE_END);
        // add panel to frame and set size
        frame.add(panel);
        frame.setSize(300, 300);
        frame.setVisible(true);
        // initialize variables
        operand1Input = false;
        operand1 = 0;
        operand2 = 0;
        operation = ' ';
    }

    /**
     * Method to handle when a number button is clicked.
     * Prints out the number clicked and updates display.
     * @param num the number clicked
     */
    private void numberClicked(int num) {
        // if first operand not yet inputted, display the clicked number
        if (!operand1Input) {
            displayField.setText("" + num);
        } else { // if first operand already inputted, append to display
            displayField.setText(displayField.getText() + num);
        }
    }

    /**
     * Method to handle when an operation button is clicked.
     * Stores the first operand and operation.
     * @param op the operation clicked
     */
    private void operationClicked(char op) {
        // store first operand and operation
        operand1 = Double.parseDouble(displayField.getText());
        operation = op;
        // set status label
        if (op == '+') {
            statusLabel.setText("Addition in progress...");
        } else if (op == '-') {
            statusLabel.setText("Subtraction in progress...");
        } else if (op == '*') {
            statusLabel.setText("Multiplication in progress...");
        } else if (op == '/') {
            statusLabel.setText("Division in progress...");
        }
        // clear display field
        displayField.setText("");
        // set operand1Input flag to true
        operand1Input = true;
    }

    /**
     * Method to handle when equals button is clicked.
     * Performs the operation and displays the result.
     */
    private void equalsClicked() {
        // store second operand
        operand2 = Double.parseDouble(displayField.getText());
        // perform operation
        if (operation == '+') {
            displayField.setText("" + (operand1 + operand2));
        } else if (operation == '-') {
            displayField.setText("" + (operand1 - operand2));
        } else if (operation == '*') {
            displayField.setText("" + (operand1 * operand2));
        } else if (operation == '/') {
            // check for division by zero
            if (operand2 == 0) {
                statusLabel.setText("Error: Cannot divide by zero");
                displayField.setText("");
            } else {
                displayField.setText("" + (operand1 / operand2));
            }
        }
        // reset variables
        operand1 = 0;
        operand2 = 0;
        operation = ' ';
        operand1Input = false;
    }

    /**
     * Main method to run the calculator.
     * @param args command-line arguments (not used)
     */
    public static void main(String[] args) {
        Calculator calculator = new Calculator();
    }
}
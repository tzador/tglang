/*
This is a complex code snippet in JAVA
It creates an array of numbers and sorts them using the quicksort algorithm
*/
public class QuickSort {
    //Method to partition the array
    public static int partition(int[] arr, int low, int high) {
        //Choose a pivot element
        int pivot = arr[high];

        //Index of smaller element
        int i = (low - 1);

        for (int j = low; j < high; j++) {
            //If current element is smaller than or equal to pivot
            if (arr[j] <= pivot) {
                i++;

                //Swap elements arr[i] and arr[j]
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }

        //Swap elements arr[i+1] and arr[high]
        int temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;

        return i + 1;
    }

    //Method to perform quicksort
    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            //Partition the array
            int partitionIndex = partition(arr, low, high);

            //Recursively sort elements before partition and after partition
            quickSort(arr, low, partitionIndex - 1);
            quickSort(arr, partitionIndex + 1, high);
        }
    }

    //Sample code to test the quicksort algorithm
    public static void main(String[] args) {
        int[] arr = { 10, 7, 8, 9, 1, 5 };
        int n = arr.length;

        quickSort(arr, 0, n - 1);
        System.out.println("Sorted array:");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}
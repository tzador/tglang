/**
 * This is a program that implements the binary search algorithm
 * to search for an element in a sorted list
 */
public class BinarySearch {

    /**
     * The main method calls the binary search function
     * to search for the element 5 in the array [1, 3, 5, 7, 9]
     * and prints the result
     */
    public static void main(String[] args) {
        int[] sortedArray = {1, 3, 5, 7, 9}; //initialize a sorted array
        int elementToFind = 5; //element to search for
        int resultIndex = binarySearch(sortedArray, elementToFind); //call binary search function
        System.out.println("Index of " + elementToFind + " is " + resultIndex); //print result
    }

    /**
     * This function takes in a sorted array and an element to find
     * and uses the binary search algorithm to find the index of the element
     * @param sortedArray the sorted array to search in
     * @param element the element to find
     * @return the index of the element, or -1 if it is not found
     */
    public static int binarySearch(int[] sortedArray, int element) {
        int low = 0; //lower bound of the array
        int high = sortedArray.length - 1; //upper bound of the array

        while (low <= high) { //while there are elements to search
            int mid = (low + high) / 2; //calculate middle index
            if (element == sortedArray[mid]) { //if element is found at middle index
                return mid; //return index of middle element
            } else if (element < sortedArray[mid]) { //if element is smaller than middle element
                high = mid - 1; //discard upper half of the array
            } else { //if element is larger than middle element
                low = mid + 1; //discard lower half of the array
            }
        }
        return -1; //element not found, return -1
    }
}
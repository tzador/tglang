/**
 * Binary search algorithm implemented in Java.
 * This algorithm assumes that the array is already sorted.
 * @param arr the sorted array
 * @param target the target element to search for in the array
 * @return the index of the target element, or -1 if not found
 */
public int binarySearch(int[] arr, int target) {
    int low = 0; // initialize the low index to 0
    int high = arr.length - 1; // initialize the high index to the last element in the array
    while (low <= high) { // loop until the low index is equal to or greater than the high index
        int mid = (low + high) / 2; // calculate the middle index
        if (arr[mid] < target) { // if the middle element is less than the target element
            low = mid + 1; // update the low index to the element after the middle index
        }
        else if (arr[mid] > target) { // if the middle element is greater than the target element
            high = mid - 1; // update the high index to the element before the middle index
        } else { // if the middle element is equal to the target element
            return mid; // return the index of the middle element
        }
    }
    return -1; // if the target element is not found, return -1
}
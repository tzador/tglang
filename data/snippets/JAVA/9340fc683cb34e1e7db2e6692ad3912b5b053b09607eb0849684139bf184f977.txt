public class ComplexNumbers {

    private double real;
    private double imaginary;

    // Constructor to initialize the real and imaginary parts
    public ComplexNumbers(double r, double i) {
        this.real = r;
        this.imaginary = i;
    }

    // Method to add two complex numbers
    public ComplexNumbers add(ComplexNumbers c) {
        double real = this.real + c.real;
        double imaginary = this.imaginary + c.imaginary;
        return new ComplexNumbers(real, imaginary);
    }

    // Method to subtract two complex numbers
    public ComplexNumbers subtract(ComplexNumbers c) {
        double real = this.real - c.real;
        double imaginary = this.imaginary - c.imaginary;
        return new ComplexNumbers(real, imaginary);
    }

    // Method to multiply two complex numbers
    public ComplexNumbers multiply(ComplexNumbers c) {
        double real = this.real * c.real - this.imaginary * c.imaginary;
        double imaginary = this.real * c.imaginary + this.imaginary * c.real;
        return new ComplexNumbers(real, imaginary);
    }

    // Method to divide two complex numbers
    public ComplexNumbers divide(ComplexNumbers c) {
        double numeratorReal = this.real * c.real + this.imaginary * c.imaginary;
        double numeratorImaginary = this.imaginary * c.real - this.real * c.imaginary;
        double denominator = c.real * c.real + c.imaginary * c.imaginary;
        double real = numeratorReal / denominator;
        double imaginary = numeratorImaginary / denominator;
        return new ComplexNumbers(real, imaginary);
    }

    // Method to calculate the magnitude of the complex number
    public double magnitude() {
        double realSquared = this.real * this.real;
        double imaginarySquared = this.imaginary * this.imaginary;
        return Math.sqrt(realSquared + imaginarySquared);
    }

    // Method to calculate the phase of the complex number
    public double phase() {
        return Math.atan2(this.imaginary, this.real);
    }

    // Method to convert the complex number to a string representation
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(this.real);
        if (this.imaginary >= 0) {
            sb.append("+");
        }
        sb.append(this.imaginary + "i");
        return sb.toString();
    }

    // Method to check if two complex numbers are equal
    public boolean equals(ComplexNumbers c) {
        if (this.real == c.real && this.imaginary == c.imaginary) {
            return true;
        }
        return false;
    }
}
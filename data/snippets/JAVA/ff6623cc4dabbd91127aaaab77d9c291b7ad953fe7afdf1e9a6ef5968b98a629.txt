/**
 * This class represents a bank account
 */
public class BankAccount {
    private String accountNumber; //unique account number of the account
    private double balance; //current balance in the account
    private String accountHolder; //name of the account holder
    private boolean isActive; //indicates if the account is active or not

      /**
      * Constructor for BankAccount class
      * @param accountNumber unique account number for the account
      * @param initialDeposit initial deposit amount for the account
      * @param accountHolder name of the account holder
      */
    public BankAccount(String accountNumber, double initialDeposit, String accountHolder) {
        this.accountNumber = accountNumber;
        this.balance = initialDeposit;
        this.accountHolder = accountHolder;
        this.isActive = true;
    }
    
    /**
     * This method allows deposits to be made into the account
     * @param amount deposit amount
     */
    public void deposit(double amount) {
        balance += amount;
        System.out.println(amount + " deposited into account " + accountNumber);
    }
    
    /**
     * This method allows withdrawals to be made from the account
     * @param amount withdrawal amount
     */
    public void withdraw(double amount) {
        if (balance - amount >= 0) {
            balance -= amount;
            System.out.println(amount + " withdrawn from account " + accountNumber);
        } else {
            System.out.println("Insufficient funds in account " + accountNumber);
        }
    }
    
    /**
     * This method returns the current balance of the account
     * @return current balance
     */
    public double getBalance() {
        return balance;
    }
    
    /**
     * This method changes the account holder's name
     * @param newName new account holder's name
     */
    public void changeName(String newName) {
        this.accountHolder = newName;
        System.out.println("Account holder name updated to " + newName);
    }
    
    /**
     * This method closes the account
     */
    public void closeAccount() {
        isActive = false;
        System.out.println("Account " + accountNumber + " closed");
    }
    
    /**
     * This method checks if the account is active or not
     * @return true if account is active, false if account is closed
     */
    public boolean isActive() {
        return this.isActive;
    }
}
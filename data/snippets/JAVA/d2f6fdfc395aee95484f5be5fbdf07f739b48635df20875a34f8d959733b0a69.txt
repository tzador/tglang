// This code snippet is a complex method for calculating the sum of the elements in a 2D array.
// It uses a nested for loop to iterate through each element in the array.
// It also includes error handling to check for invalid input.

public int sumArray(int[][] arr) {
    int sum = 0;

    // check for empty array
    if (arr == null || arr.length == 0) {
        throw new IllegalArgumentException("Array must not be empty.");
    }

    // loop through each row in the array
    for (int i = 0; i < arr.length; i++) {

        // check for empty row
        if (arr[i] == null || arr[i].length == 0) {
            throw new IllegalArgumentException("Row must not be empty.");
        }

        // loop through each column in the row
        for (int j = 0; j < arr[i].length; j++) {

            // add element to sum
            sum += arr[i][j];
        }
    }

    return sum;
}

// Example input:
// int[][] arr = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}
// Output: 45

// Example input:
// int[][] arr = {{}, {4, 5, 6}, {7, 8, 9}}
// Output: Throws IllegalArgumentException (empty row)

// Example input:
// int[][] arr = null
// Output: Throws IllegalArgumentException (empty array)
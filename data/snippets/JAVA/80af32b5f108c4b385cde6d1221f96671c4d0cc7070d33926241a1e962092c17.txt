/*
* This is a complex code snippet in JAVA
* It uses multiple classes and methods
* to demonstrate object-oriented programming
* concepts such as inheritance and polymorphism
*/

// Creating a parent class
class Animal {
    protected String name;
    protected int age;
    protected String breed;

    public Animal(String name, int age, String breed) {
        this.name = name;
        this.age = age;
        this.breed = breed;
    }

    // Method to make animal sounds
    public void makeSound() {
        System.out.println("This animal makes a sound.");
    }
}

// Creating a child class that inherits from Animal class
class Dog extends Animal {
    private String favoriteToy;

    // Constructor for Dog class
    public Dog(String name, int age, String breed, String favoriteToy) {
        // Calling the constructor of the parent class
        super(name, age, breed);
        this.favoriteToy = favoriteToy;
    }

    // Overriding the makeSound() method from parent class
    public void makeSound() {
        System.out.println("This dog says woof!");
    }

    // Method to play with favorite toy
    public void play() {
        System.out.println("The dog is playing with its favorite toy: " + favoriteToy);
    }
}

// Creating another child class that inherits from Animal class
class Cat extends Animal {
    private String favoriteFood;

    // Constructor for Cat class
    public Cat(String name, int age, String breed, String favoriteFood) {
        // Calling the constructor of the parent class
        super(name, age, breed);
        this.favoriteFood = favoriteFood;
    }

     // Overriding the makeSound() method from parent class
    public void makeSound() {
        System.out.println("This cat says meow!");
    }

    // Method to eat favorite food
    public void eat() {
        System.out.println("The cat is eating its favorite food: " + favoriteFood);
    }
}

// Main method to test the classes
public class Main {
    public static void main(String args[]) {
        // Creating a dog object
        Dog dog = new Dog("Buddy", 3, "Labrador Retriever", "tennis ball");
        // Calling the makeSound() method
        dog.makeSound();
        // Calling the play() method
        dog.play();

        System.out.println();

        // Creating a cat object
        Cat cat = new Cat("Whiskers", 5, "Persian", "tuna");
        // Calling the makeSound() method
        cat.makeSound();
        // Calling the eat() method
        cat.eat();
    }
}
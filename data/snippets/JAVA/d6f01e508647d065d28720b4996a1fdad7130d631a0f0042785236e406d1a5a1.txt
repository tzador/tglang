// This code snippet is a sorted merge function
public static int[] mergeSortedArrays(int[] arr1, int[] arr2) { // function takes in two sorted arrays as parameters
    int[] mergedArr = new int[arr1.length + arr2.length]; // create new array with length of both arrays combined
    int i = 0, j = 0, k = 0; // initialize variables for index tracking
    while (i < arr1.length && j < arr2.length) { // loop through both arrays until one of them is fully traversed
        if (arr1[i] < arr2[j]) { // check if current element in first array is smaller
            mergedArr[k] = arr1[i]; // add smaller element to merged array at correct index
            i++; // increment index for first array
        } else { // if current element in second array is smaller
            mergedArr[k] = arr2[j]; // add smaller element to merged array at correct index
            j++; // increment index for second array
        }
        k++; // increment index for merged array
    }
    while (i < arr1.length) { // loop through remaining elements in first array
        mergedArr[k] = arr1[i]; // add elements to merged array at correct index
        i++; // increment index for first array
        k++; // increment index for merged array
    }
    while (j < arr2.length) { // loop through remaining elements in second array
        mergedArr[k] = arr2[j]; // add elements to merged array at correct index
        j++; // increment index for second array
        k++; // increment index for merged array
    }
    return mergedArr; // return the merged sorted array
}
import java.util.*;

//This code snippet uses the concept of polymorphism to calculate the area of shapes
//It also uses inheritance to create specific shape classes that inherit from the parent Shape class

//Creating the parent Shape class
abstract class Shape{
    private String name;
    public Shape(String name){
        this.name = name;
    }

    //Creating an abstract method to calculate the area of different shapes
    abstract double calculateArea();
}

//Creating a child class Square that inherits from Shape
class Square extends Shape{
    private double side;

    //Constructor for Square class
    Square(String name, double side){
        super(name);
        this.side = side;
    }

    @Override
    //Implementing the calculateArea method for Square
    double calculateArea(){
        return side * side;
    }
}

//Creating a child class Circle that inherits from Shape
class Circle extends Shape{
    private double radius;
    private final double PI = 3.14;

    //Constructor for Circle class
    Circle(String name, double radius){
        super(name);
        this.radius = radius;
    }

    @Override
    //Implementing the calculateArea method for Circle
    double calculateArea(){
        return PI * radius * radius;
    }
}

//Creating a child class Rectangle that inherits from Shape
class Rectangle extends Shape{
    private double length;
    private double width;

    //Constructor for Rectangle class
    Rectangle(String name, double length, double width){
        super(name);
        this.length = length;
        this.width = width;
    }

    @Override
    //Implementing the calculateArea method for Rectangle
    double calculateArea(){
        return length * width;
    }
}

public class AreaCalculator{
    public static void main(String[] args){
        //Creating an ArrayList to store different shapes
        ArrayList<Shape> shapes = new ArrayList<Shape>();

        //Creating instances of different shape classes and adding them to the ArrayList
        Square square = new Square("Square", 5);
        shapes.add(square);

        Circle circle = new Circle("Circle", 3);
        shapes.add(circle);

        Rectangle rectangle = new Rectangle("Rectangle", 4, 6);
        shapes.add(rectangle);

        //Looping through the ArrayList and calculating the area of each shape using polymorphism
        for(Shape shape : shapes){
            System.out.println("The area of " + shape.getName() + " is " + shape.calculateArea());
        }
    }
}
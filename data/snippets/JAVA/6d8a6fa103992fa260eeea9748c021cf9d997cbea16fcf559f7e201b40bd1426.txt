// This is a Java program to find the kth smallest number in a sorted matrix

// Importing libraries
import java.util.*;

// Class for finding kth smallest element
public class KthSmallestElement {

    // Function to find the kth smallest element
    public static int kthSmallest(int[][] matrix, int k) {
        // Initializing min and max variables
        int min = matrix[0][0];
        int max = matrix[matrix.length - 1][matrix[0].length - 1];

        // Binary search to find the kth smallest number
        while (min < max) {
            int mid = (min + max) / 2;
            int count = 0;
            for (int i = 0; i < matrix.length; i++) {
                count += countNonZero(matrix[i], mid);
            }
            if (count < k) {
                min = mid + 1; // kth smallest element is greater than mid, so we search in the right half
            } else {
                max = mid; // kth smallest element is less than or equal to mid, so we search in the left half
            }
        }
        return min;
    }

    // Helper function to count the number of elements less than or equal to mid
    public static int countNonZero(int[] arr, int mid) {
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] <= mid) {
                count++;
            }
        }
        return count;
    }

    // Main function to test the program and print the output
    public static void main(String[] args) {
        // Creating a sample matrix
        int[][] matrix = {
            { 1, 4, 7 },
            { 2, 5, 8 },
            { 3, 6, 9 }
        };
        // kth element to find
        int k = 5;
        // Finding kth smallest element using the kthSmallest function
        int result = kthSmallest(matrix, k);
        // Printing the result
        System.out.println("The kth smallest element in the matrix is: " + result);
    }
}
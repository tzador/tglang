// This is a complex code snippet in JAVA

/* File: ComplexSnippet.java
 * Author: John Doe
 * Description: This code snippet showcases various complex functions and algorithms.
 */

// importing necessary libraries
import java.util.*;
import javax.swing.*;

// declaring variables
int num1 = 5;
int num2 = 2;
double radius = 3.5;
String message = "Hello!";

// creating and initializing arrays
int[] arr = new int[10];
for (int i = 0; i < arr.length; i++) {
    arr[i] = i * 3;
}
String[] words = {"apple", "orange", "banana", "grape"};

// using if-else statements
if (num1 > num2) {
    System.out.println("num1 is greater than num2");
} else {
    System.out.println("num1 is smaller than num2");
}

// using for loop
for (int i = 0; i < num1; i++) {
    System.out.println(i);
}

// using while loop
while (radius > 0) {
    System.out.println("The circle's radius is: " + radius);
    radius -= 0.5; // decrementing radius by 0.5 in each iteration
}

// using switch case
String userInput = JOptionPane.showInputDialog("Enter your favorite fruit: ");
switch (userInput) {
    case "apple":
        System.out.println("Apples are a great choice!");
        break;
    case "orange":
        System.out.println("Oranges are delicious!");
        break;
    case "banana":
        System.out.println("Bananas are nutritious!");
        break;
    case "grape":
        System.out.println("Grapes are a tasty snack!");
        break;
    default:
        System.out.println("Sorry, I don't recognize that fruit.");
}

// using recursion
public int fibonacci(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

// using classes and objects
public class Person {
    private String name;
    private int age;
    
    // constructor
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
    
    // getters and setters
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public int getAge() {
        return this.age;
    }
    
    public void setAge(int age) {
        this.age = age;
    }
    
    // method to print person's details
    public void printDetails() {
        System.out.println("Name: " + this.name);
        System.out.println("Age: " + this.age);
    }
}

// creating an object of Person class
Person person1 = new Person("John", 25);

// printing person's details
person1.printDetails();

// sorting an array using comparator
Arrays.sort(words, new Comparator<String>() {
    @Override
    public int compare(String s1, String s2) {
        return s1.compareTo(s2);
    }
});
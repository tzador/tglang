/***
* This is a complex code snippet in Java that demonstrates a custom class with multiple methods and attributes.
* The class is named "Vehicle" and it has attributes like make, model, year, and color.
* It also has methods like startEngine(), accelerate(), and brake().
* The code snippet also showcases the usage of constructors and conditional statements.
*/

public class Vehicle {

    // Attributes
    private String make;
    private String model;
    private int year;
    private String color;

    // Constructor with parameters
    public Vehicle(String make, String model, int year, String color) {
        this.make = make;
        this.model = model;
        this.year = year;
        this.color = color;
    }

    // Method to start the engine
    public void startEngine() {
        System.out.println("The " + year + " " + make + " " + model + " is starting its engine.");
    }

    // Method to accelerate the vehicle
    public void accelerate() {
        System.out.println("The " + color + " " + make + " " + model + " is speeding up.");
    }

    // Method to apply brakes
    public void brake() {
        System.out.println("The " + make + " " + model + " is slowing down.");
    }

    // Getter methods for attributes
    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

    public int getYear() {
        return year;
    }

    public String getColor() {
        return color;
    }

    // Setter methods for attributes
    public void setMake(String make) {
        this.make = make;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public void setYear(int year) {
        this.year = year;
    }

    public void setColor(String color) {
        this.color = color;
    }

    // Main method to test the class
    public static void main(String[] args) {
        // Creating a new Vehicle object with given attributes
        Vehicle myCar = new Vehicle("Honda", "Civic", 2015, "Blue");

        // Outputting the values of the attributes
        System.out.println("My car's make is " + myCar.getMake());
        System.out.println("My car's model is " + myCar.getModel());
        System.out.println("My car's year is " + myCar.getYear());
        System.out.println("My car's color is " + myCar.getColor());

        // Calling the startEngine() method
        myCar.startEngine();

        // Using conditional statement to check if car is a Honda Civic
        if(myCar.getMake().equals("Honda") && myCar.getModel().equals("Civic")) {
            // Calling the accelerate() method
            myCar.accelerate();
        }

        // Calling the brake() method
        myCar.brake();

        // Changing the color attribute
        myCar.setColor("Red");

        // Outputting the updated color
        System.out.println("My car's updated color is " + myCar.getColor());
    }
}
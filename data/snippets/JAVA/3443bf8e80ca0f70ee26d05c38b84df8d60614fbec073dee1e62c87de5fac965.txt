/*
This code snippet implements a recursive merge sort algorithm
that sorts an array of integers in ascending order.
*/

public class MergeSort {
  // create a recursive merge sort function
  public static void mergeSort(int[] arr, int start, int end){
    // check if the array is empty or has only one element
    if (start >= end){
      return;
    }

    // calculate the middle index
    int mid = start + (end - start) / 2;

    // recursively sort the left subarray
    mergeSort(arr, start, mid);
    // recursively sort the right subarray
    mergeSort(arr, mid + 1, end);

    // merge the two sorted subarrays
    merge(arr, start, mid, end);
  }

  // create a function to merge two sorted subarrays
  public static void merge(int[] arr, int start, int mid, int end){
    // calculate the sizes of the two subarrays
    int n1 = mid - start + 1;
    int n2 = end - mid;

    // create temporary arrays to store the sorted subarrays
    int[] leftArr = new int[n1];
    int[] rightArr = new int[n2];

    // copy the elements from the original array into the temporary arrays
    for (int i = 0; i < n1; i++){
      leftArr[i] = arr[start + i];
    }
    for (int j = 0; j < n2; j++){
      rightArr[j] = arr[mid + 1 + j];
    }

    // create indices to iterate through both subarrays
    int i = 0, j = 0;
    // create index to track the position in the original array
    int k = start;

    // compare the elements from both subarrays and place them in the correct position in the original array
    while (i < n1 && j < n2){
      if (leftArr[i] <= rightArr[j]){
        arr[k] = leftArr[i];
        i++;
      }
      else {
        arr[k] = rightArr[j];
        j++;
      }
      k++;
    }

    // copy any remaining elements from the left subarray into the original array
    while (i < n1){
      arr[k] = leftArr[i];
      i++;
      k++;
    }

    // copy any remaining elements from the right subarray into the original array
    while (j < n2){
      arr[k] = rightArr[j];
      j++;
      k++;
    }
  }

  // main method to test the merge sort algorithm
  public static void main(String[] args){
    // create an array of integers to be sorted
    int[] arr = {9, 5, 2, 7, 3, 4, 1, 6, 8};

    // print the unsorted array
    System.out.println("Unsorted Array: " + Arrays.toString(arr));

    // sort the array using merge sort
    mergeSort(arr, 0, arr.length - 1);

    // print the sorted array
    System.out.println("Sorted Array: " + Arrays.toString(arr));
  }
}
/**
* This class represents a coffee shop ordering system.
* It allows customers to place orders, add and remove items,
* and calculate the total cost of their order.
*/
public class CoffeeShopOrderingSystem {

    // declare variables
    private ArrayList<String> menuItems;
    private double totalCost;

    // constructor
    public CoffeeShopOrderingSystem() {
        // initialize variables
        this.menuItems = new ArrayList<String>();
        this.totalCost = 0.0;
    }

    /**
    * Adds an item to the customer's order.
    * @param item the item to be added
    */
    public void addItem(String item) {
        // check if the item is on the menu
        if (menuItems.contains(item)) {
            // if so, add the item to the order
            menuItems.add(item);
            // update the total cost
            totalCost += getItemPrice(item);
        } else {
            // if not, print an error message
            System.out.println("Item is not on the menu.");
        }
    }

    /**
    * Removes an item from the customer's order.
    * @param item the item to be removed
    */
    public void removeItem(String item) {
        // check if the item is on the order
        if (menuItems.contains(item)) {
            // if so, remove the item
            menuItems.remove(item);
            // update the total cost
            totalCost -= getItemPrice(item);
        } else {
            // if not, print an error message
            System.out.println("Item is not on the order.");
        }
    }

    /**
    * Calculates the total cost of the customer's order.
    * @return the total cost
    */
    public double calculateTotalCost() {
        // return the total cost
        return this.totalCost;
    }

    /**
    * Gets the price of an item from the menu.
    * @param item the item to get the price for
    * @return the price of the item
    */
    private double getItemPrice(String item) {
        // declare and initialize the price variable
        double price = 0.0;
        // switch statement to set the price based on the item
        switch (item) {
            case "Coffee":
                price = 2.50;
                break;
            case "Tea":
                price = 2.00;
                break;
            case "Croissant":
                price = 3.00;
                break;
            case "Muffin":
                price = 2.50;
                break;
            default:
                price = 0.0;
                break;
        }
        // return the price
        return price;
    }
}
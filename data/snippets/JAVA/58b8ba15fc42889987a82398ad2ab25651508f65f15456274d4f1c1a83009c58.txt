/***
 * This method checks if a given string is a palindrome or not.
 * It uses a recursive approach to check the first and last characters, and then the inner substring,
 * until the entire string is checked. 
 * @param str the string to be checked 
 * @return a boolean value, true if the string is a palindrome, false if it is not
 */
 public static boolean isPalindrome(String str) {

    // remove all spaces and make all characters lowercase for comparison
    str = str.replaceAll("\\s+", "").toLowerCase();

    // base case, if the length of string is 0 or 1, it is a palindrome by default
    if (str.length() == 0 || str.length() == 1) {
        return true;
    }

    // compare first and last character of the string 
    if (str.charAt(0) == str.charAt(str.length() - 1)) {
        // use recursion to check the inner substring 
        // by removing the first and last character which have already been checked 
        return isPalindrome(str.substring(1, str.length() - 1));
    } else {
        return false;
    }
}
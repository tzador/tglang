// This code snippet uses the Java Generics feature
// to create a generic method that accepts any type of array
// and returns the maximum value of that array
// Written by John Doe
// Date: 12/05/2021

public class MaximumValue {

    // This is a generic method that accepts an array of any type
    // and returns the maximum value in that array
    public <T extends Comparable<T>> T getMaxValue(T[] array) {
      
        // Initialize the maximum value to be the first element in the array
        T maxValue = array[0];

        // Loop through the array
        for (int i = 1; i < array.length; i++) {
            
            // Compare the current element to the current maximum value
            // using the compareTo method
            if (array[i].compareTo(maxValue) > 0) {
                
                // If the current element is greater than the maximum value,
                // update the maximum value to be the current element
                maxValue = array[i];
            }
        }

        // Return the maximum value
        return maxValue;
    }

    // This is the main method where the code execution starts
    public static void main(String[] args) {
        
        // Create an array of integers
        Integer[] intArray = {5, 3, 7, 1, 9};

        // Create an instance of the MaximumValue class
        MaximumValue maximumValue = new MaximumValue();

        // Call the getMaxValue method and pass in the integer array
        // Store the return value in a variable
        Integer maxValue = maximumValue.getMaxValue(intArray);

        // Print the maximum value to the console
        System.out.println("The maximum value in the array is: " + maxValue);
    }
}
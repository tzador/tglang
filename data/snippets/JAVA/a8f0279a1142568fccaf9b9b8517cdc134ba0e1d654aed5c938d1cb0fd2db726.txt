/**
 * This class represents a shopping cart where items can be added and removed.
 */
public class ShoppingCart {

    // Instance variables
    private ArrayList<Item> items;  // list of items in the cart
    private double totalPrice;      // total price of all items in the cart

    /**
     * Constructor for ShoppingCart class
     * Initializes the items list as an empty ArrayList and the total price to 0.0
     */
    public ShoppingCart() {
        items = new ArrayList<Item>();
        totalPrice = 0.0;
    }

    /**
     * Method to add an item to the shopping cart
     * @param item the item to be added
     */
    public void addItem(Item item) {
        items.add(item);
        totalPrice += item.getPrice();
    }

    /**
     * Method to remove an item from the shopping cart
     * @param item the item to be removed
     */
    public void removeItem(Item item) {
        if (items.contains(item)) {
            items.remove(item);
            totalPrice -= item.getPrice();
        }
    }

    /**
     * Method to display the items in the shopping cart and the total price
     */
    public void displayCart() {
        System.out.println("Shopping Cart:");
        System.out.println("--------------");
        for (Item item : items) {
            System.out.println("- " + item.getName() + ": $" + item.getPrice());
        }
        System.out.println("--------------");
        System.out.println("Total Price: $" + totalPrice);
    }

    /**
     * Main method to test the ShoppingCart class
     */
    public static void main(String[] args) {
        // Create a new shopping cart object
        ShoppingCart cart = new ShoppingCart();

        // Create some items to add to the cart
        Item item1 = new Item("Shirt", 15.99);
        Item item2 = new Item("Pants", 24.99);
        Item item3 = new Item("Shoes", 49.99);

        // Add the items to the cart
        cart.addItem(item1);
        cart.addItem(item2);
        cart.addItem(item3);

        // Display the contents of the shopping cart
        cart.displayCart();

        // Remove an item from the cart
        cart.removeItem(item2);

        // Display the updated cart
        cart.displayCart();
    }
}
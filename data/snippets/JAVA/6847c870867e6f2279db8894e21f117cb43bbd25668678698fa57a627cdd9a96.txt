//This is a complex Java code snippet featuring multiple classes and interfaces

//Class hierarchy interface
interface Hierarchy {
    void print();
}

//Parent class
class Parent {
    String name;

    //Constructor with name
    Parent(String name) {
        this.name = name;
    }

    //Method to print parent's name
    public void printParentName() {
        System.out.println("Parent's name is: " + this.name);
    }
}

//First child class that implements hierarchy interface
class ChildOne extends Parent implements Hierarchy {
    int age;

    //Constructor with name and age
    ChildOne(String name, int age) {
        super(name);
        this.age = age;
    }

    //Method to print child's age
    public void printChildAge() {
        System.out.println("Child One's age is: " + this.age);
    }

    //Method of hierarchy interface to print class name
    @Override
    public void print() {
        System.out.println("Child One class");
    }
}

//Second child class that extends parent class and implements hierarchy interface
class ChildTwo extends Parent implements Hierarchy {
    String hobby;

    //Constructor with name and hobby
    ChildTwo(String name, String hobby) {
        super(name);
        this.hobby = hobby;
    }

    //Method to print child's hobby
    public void printChildHobby() {
        System.out.println("Child Two's hobby is: " + this.hobby);
    }

    //Method of hierarchy interface to print class name
    @Override
    public void print() {
        System.out.println("Child Two class");
    }
}

//Main class to instantiate objects and call methods
public class Main {
    public static void main(String[] args) {
        //Instantiate child one and call methods
        ChildOne childOne = new ChildOne("John", 10);
        childOne.printParentName();
        childOne.printChildAge();
        childOne.print();

        System.out.println();

        //Instantiate child two and call methods
        ChildTwo childTwo = new ChildTwo("Mary", "Dancing");
        childTwo.printParentName();
        childTwo.printChildHobby();
        childTwo.print();
    }
}
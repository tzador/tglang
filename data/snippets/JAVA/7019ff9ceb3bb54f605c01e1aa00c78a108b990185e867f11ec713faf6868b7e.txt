/**
 * A class representing a bookstore
 */
public class Bookstore {
    // instance variables
    private String name;
    private String location;
    private int numOfBooks;
    private List<Book> books;

    /**
     * Constructor for the Bookstore class
     * @param name the name of the bookstore
     * @param location the location of the bookstore
     * @param numOfBooks the number of books in the bookstore
     * @param books a list of books in the bookstore
     */
    public Bookstore(String name, String location, int numOfBooks, List<Book> books) {
        this.name = name;
        this.location = location;
        this.numOfBooks = numOfBooks;
        this.books = books;
    }

    /**
     * Getter method for the name of the bookstore
     * @return the name of the bookstore
     */
    public String getName() {
        return name;
    }

    /**
     * Setter method for the name of the bookstore
     * @param name the new name for the bookstore
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter method for the location of the bookstore
     * @return the location of the bookstore
     */
    public String getLocation() {
        return location;
    }

    /**
     * Setter method for the location of the bookstore
     * @param location the new location for the bookstore
     */
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Getter method for the number of books in the bookstore
     * @return the number of books in the bookstore
     */
    public int getNumOfBooks() {
        return numOfBooks;
    }

    /**
     * Setter method for the number of books in the bookstore
     * @param numOfBooks the new number of books for the bookstore
     */
    public void setNumOfBooks(int numOfBooks) {
        this.numOfBooks = numOfBooks;
    }

    /**
     * Getter method for the list of books in the bookstore
     * @return the list of books in the bookstore
     */
    public List<Book> getBooks() {
        return books;
    }

    /**
     * Setter method for the list of books in the bookstore
     * @param books the new list of books for the bookstore
     */
    public void setBooks(List<Book> books) {
        this.books = books;
    }

    /**
     * Method to add a new book to the bookstore
     * @param book the book to add to the bookstore
     */
    public void addBook(Book book) {
        books.add(book);
        numOfBooks++;
    }

    /**
     * Method to check if the bookstore has a specific book
     * @param book the book to check for in the bookstore
     * @return true if the book is found, or false otherwise
     */
    public boolean hasBook(Book book) {
        for (Book b : books) {
            if (b.equals(book)) {
                return true;
            }
        }
        return false;
    }

    /**
     * Method to remove a book from the bookstore
     * @param book the book to remove from the bookstore
     */
    public void removeBook(Book book) {
        books.remove(book);
        numOfBooks--;
    }

    /**
     * Method to calculate the total cost of all the books in the bookstore
     * @return the total cost of all the books in the bookstore
     */
    public double calculateTotalCost() {
        double totalCost = 0.0;
        for (Book book : books) {
            totalCost += book.getPrice();
        }
        return totalCost;
    }

    /**
     * Method to display information about the bookstore
     */
    public void displayInfo() {
        System.out.println("Bookstore name: " + name);
        System.out.println("Location: " + location);
        System.out.println("Number of books: " + numOfBooks);
        System.out.println("Books available: ");
        for (Book book : books) {
            System.out.println(book.getTitle() + " - " + book.getAuthor());
        }
    }
}
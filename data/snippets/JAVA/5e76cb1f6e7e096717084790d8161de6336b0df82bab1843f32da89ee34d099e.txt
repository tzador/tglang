import java.util.*;

public class ComplexCodeSnippet {
    /**
     * This is a long and complex code snippet written in JAVA.
     * It consists of various data structures, control flow statements,
     * and methods to demonstrate different functionalities in JAVA.
     */
    
    public static void main(String[] args) {
        // create a HashMap to store key-value pairs
        HashMap<String, Integer> hashMap = new HashMap<>();
        
        // add some elements to the HashMap
        hashMap.put("apple", 1);
        hashMap.put("banana", 2);
        hashMap.put("orange", 3);
        
        // create a LinkedList to store some string values
        LinkedList<String> linkedList = new LinkedList<>();
        
        // add some elements to the LinkedList
        linkedList.add("dog");
        linkedList.add("cat");
        linkedList.add("rabbit");
        
        // create a variable to store a random number
        int randomNumber = (int) (Math.random() * 10) + 1;
        
        // create a for loop to print the HashMap key-value pairs
        for (String key : hashMap.keySet()) {
            System.out.println("Key: " + key + ", Value: " + hashMap.get(key));
        }
        
        // create a while loop to print the elements in the LinkedList
        int index = 0;
        while (index < linkedList.size()) {
            System.out.println(linkedList.get(index));
            index++;
        }
        
        // call a method to perform a specific task
        int sum = calculateSum(randomNumber, 5);
        System.out.println("The sum of " + randomNumber + " and 5 is: " + sum);
        
        // create a switch statement to perform different actions based on the value of randomNumber
        switch (randomNumber) {
            case 1:
                System.out.println("Random number is 1.");
                break;
            case 5:
                System.out.println("Random number is 5.");
                break;
            default:
                System.out.println("Random number is not 1 or 5.");
        }
    }
    
    /**
     * This method takes in two integers and returns the sum of the two numbers.
     * @param num1 first integer
     * @param num2 second integer
     * @return sum of num1 and num2 as an integer
     */
    public static int calculateSum(int num1, int num2) {
        return num1 + num2;
    }
}
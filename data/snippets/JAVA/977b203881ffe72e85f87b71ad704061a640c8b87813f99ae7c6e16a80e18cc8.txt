public class ComplexNumber {

    //defining class for complex numbers

    private double real; //variable for real part
    private double imaginary; //variable for imaginary part

    /**
     * This is the constructor for the complex number
     * @param real - The real part of the complex number
     * @param imaginary - The imaginary part of the complex number
     */
    public ComplexNumber(double real, double imaginary) {
        this.real = real; //assigning value to real variable
        this.imaginary = imaginary; //assigning value to imaginary variable
    }

    /**
     * Method to get the real part of the complex number
     *
     * @return double - Real part of the complex number
     */
    public double getReal() {
        return real;
    }

    /**
     * Method to get the imaginary part of the complex number
     *
     * @return double - Imaginary part of the complex number
     */
    public double getImaginary() {
        return imaginary;
    }

    /**
     * Method to add two complex numbers
     *
     * @param other - The other complex number to be added
     * @return ComplexNumber - The resulting complex number after addition
     */
    public ComplexNumber add(ComplexNumber other) {
        double resultReal = this.real + other.real; //Calculating the real part of the resulting complex number
        double resultImaginary = this.imaginary + other.imaginary; //Calculating the imaginary part of the resulting complex number
        return new ComplexNumber(resultReal, resultImaginary); //Creating a new complex number object with the calculated parts
    }

    /**
     * Method to multiply two complex numbers
     *
     * @param other - The other complex number to be multiplied
     * @return ComplexNumber - The resulting complex number after multiplication
     */
    public ComplexNumber multiply(ComplexNumber other) {
        double resultReal = (this.real * other.real) - (this.imaginary * other.imaginary); //Calculating the real part of the resulting complex number
        double resultImaginary = (this.real * other.imaginary) + (this.imaginary * other.real); //Calculating the imaginary part of the resulting complex number
        return new ComplexNumber(resultReal, resultImaginary); //Creating a new complex number object with the calculated parts
    }

    /**
     * Method to calculate the conjugate of the complex number
     *
     * @return ComplexNumber - The conjugate of the complex number
     */
    public ComplexNumber conjugate() {
        return new ComplexNumber(this.real, -this.imaginary); //Creating a new complex number object with the real part remaining the same and the imaginary part being the negative of the original
    }

    /**
     * Overriding the toString method to print the complex number in the form a + bi
     *
     * @return String - The string representation of the complex number
     */
    @Override
    public String toString() {
        return this.real + " + " + this.imaginary + "i"; //Creating a string representation of the complex number
    }
}
//The output is the code snippet without any explanations or additional comments.
/**
 * This is a program that generates a random password of specified length
 * using a combination of letters, numbers, and symbols
 */
public class RandomPasswordGenerator {

    // array of possible characters to use in the password
    private static final char[] CHARACTERS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()".toCharArray();

    /**
     * This method generates a random password
     *
     * @param length the desired length of the password
     * @return a randomly generated password of specified length
     */
    public static String generatePassword(int length) {
        if (length <= 0) {
            throw new IllegalArgumentException("Password length must be positive.");
        }

        // initialize StringBuilder to store the password
        StringBuilder password = new StringBuilder();

        // loop until the password reaches the desired length
        for (int i = 0; i < length; i++) {
            // generate a random index to choose a character from the array
            int randInd = (int) (Math.random() * CHARACTERS.length);
            // append the chosen character to the password
            password.append(CHARACTERS[randInd]);
        }
        // return the generated password
        return password.toString();
    }

    // main method to test the code
    public static void main(String[] args) {
        for (int i = 8; i <= 14; i++) {
            // generate a random password of length i
            String password = generatePassword(i);
            System.out.println("Generated password of length " + i + ": " + password);
        }
    }
}

// Output:
// Generated password of length 8: 3Tf9bW@1
// Generated password of length 9: s6TgM&4RZ
// Generated password of length 10: n7YhL#8pB3
// Generated password of length 11: Q2ZjA&9tE4i
// Generated password of length 12: G8RdS^7mP!6V
// Generated password of length 13: w6jKqZ&2tB7Mf
// Generated password of length 14: H3KcV!4gN9Ts#
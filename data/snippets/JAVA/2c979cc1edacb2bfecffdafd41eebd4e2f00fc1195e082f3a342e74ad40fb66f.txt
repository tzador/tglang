//This code snippet creates a class named "Car" with various properties and methods 
public class Car { // creates a public class named "Car"
  private String make; // declares a private string variable "make"
  private String model; // declares a private string variable "model"
  private int year; // declares a private integer variable "year"
  private String color; // declares a private string variable "color"
  private int mileage; // declares a private integer variable "mileage"
  private boolean isRunning; // declares a private boolean variable "isRunning"
  
  // Constructor method for the Car class
  public Car(String make, String model, int year, String color) { // defines arguments for constructor method
    this.make = make; // assigns "make" argument to "this.make" variable 
    this.model = model; // assigns "model" argument to "this.model" variable
    this.year = year; // assigns "year" argument to "this.year" variable
    this.color = color; // assigns "color" argument to "this.color" variable
    this.mileage = 0; // initializes "mileage" variable to 0
    this.isRunning = false; // initializes "isRunning" variable to false
  }
  
  // Method to start the car
  public void startCar() { // defines a public void method named "startCar"
    isRunning = true; // sets "isRunning" variable to true
    System.out.println("The " + year + " " + make + " " + model + " has started."); // prints out a statement with car information
  }
  
  // Method to stop the car
  public void stopCar() { // defines a public void method named "stopCar"
    isRunning = false; // sets "isRunning" variable to false
    System.out.println("The " + year + " " + make + " " + model + " has stopped."); // prints out a statement with car information
  }
  
  // Method to accelerate the car
  public void accelerate(int speed) { // defines a public void method named "accelerate" with an integer argument "speed"
    if (isRunning) { // checks if "isRunning" variable is set to true
      mileage += speed; // adds "speed" to "mileage" variable
      System.out.println("The " + year + " " + make + " " + model + " has accelerated to " + speed + " mph."); // prints out a statement with car information and speed
    } else { // if "isRunning" variable is not set to true
      System.out.println("The " + year + " " + make + " " + model + " cannot accelerate as it is not running."); // prints out a statement with car information and an error message
    }
  }
  
  // Method to decelerate the car
  public void decelerate(int speed) { // defines a public void method named "decelerate" with an int argument "speed"
    if (isRunning) { // checks if "isRunning" variable is set to true
      mileage -= speed; // subtracts "speed" from "mileage" variable
      System.out.println("The " + year + " " + make + " " + model + " has decelerated to " + speed + " mph."); // prints out a statement with car information and speed
    } else { // if "isRunning" variable is not set to true
      System.out.println("The " + year + " " + make + " " + model + " cannot decelerate as it is not running."); // prints out a statement with car information and an error message
    }
  }
  
  // Method to change the car's color
  public void changeColor(String newColor) { // defines a public void method named "changeColor" with a string argument "newColor"
    color = newColor; // updates "color" variable to "newColor"
    System.out.println("The " + year + " " + make + " " + model + " has been repainted " + newColor + "."); // prints out a statement with car information and new color
  }
  
   // Getter method to retrieve mileage data
  public int getMileage() { // defines a public int method named "getMileage"
    return mileage; // returns value of "mileage" variable
  }
}
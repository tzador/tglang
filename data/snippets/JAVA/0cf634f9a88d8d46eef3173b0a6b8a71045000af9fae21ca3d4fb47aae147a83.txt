/**
 * This is a complex code snippet in JAVA
 * It contains multiple classes, inheritance, and polymorphism
 * There are also comments and annotations for better understanding
 */

// Abstract class Shape
abstract class Shape {
    private String color; // private variable to store color

    // Constructor for Shape, takes color as parameter
    public Shape(String color) {
        this.color = color;
    }

    // Abstract method to calculate area, implemented by subclasses
    public abstract double calculateArea();

    // Getter for color
    public String getColor() {
        return color;
    }

    // Setter for color
    public void setColor(String color) {
        this.color = color;
    }
}

// Subclass Circle that extends Shape
class Circle extends Shape {
    private double radius; // private variable to store radius

    // Constructor for Circle, takes color and radius as parameters
    public Circle(String color, double radius) {
        super(color); // calling constructor of superclass
        this.radius = radius;
    }

    // Implementation of abstract method to calculate area
    public double calculateArea() {
        return Math.PI * radius * radius;
    }

    // Getter for radius
    public double getRadius() {
        return radius;
    }

    // Setter for radius
    public void setRadius(double radius) {
        this.radius = radius;
    }
}

// Subclass Rectangle that extends Shape
class Rectangle extends Shape {
    private double length; // private variable to store length
    private double width; // private variable to store width

    // Constructor for Rectangle, takes color, length, and width as parameters
    public Rectangle(String color, double length, double width) {
        super(color); // calling constructor of superclass
        this.length = length;
        this.width = width;
    }

    // Implementation of abstract method to calculate area
    public double calculateArea() {
        return length * width;
    }

    // Getter for length
    public double getLength() {
        return length;
    }

    // Setter for length
    public void setLength(double length) {
        this.length = length;
    }

    // Getter for width
    public double getWidth() {
        return width;
    }

    // Setter for width
    public void setWidth(double width) {
        this.width = width;
    }
}

// Subclass Square that extends Rectangle
class Square extends Rectangle {
    // Constructor for Square, takes color and side length as parameters
    public Square(String color, double side) {
        super(color, side, side); // calling constructor of superclass
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        // Creating objects of different shapes
        Shape circle = new Circle("red", 5.0);
        Shape rectangle = new Rectangle("blue", 4.0, 6.0);
        Shape square = new Square("green", 3.0);

        // Printing the color and area of each shape
        System.out.println("Color of the circle is " + circle.getColor() + " and its area is " + circle.calculateArea());
        System.out.println("Color of the rectangle is " + rectangle.getColor() + " and its area is " + rectangle.calculateArea());
        System.out.println("Color of the square is " + square.getColor() + " and its area is " + square.calculateArea());
    }
}
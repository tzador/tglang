/*
 * This is a complex code snippet in JAVA.
 * It involves multiple classes, inheritance, and exception handling.
 * Please note that this is just a snippet and may not run as a standalone code.
 */

public class Shape{                          //Shape class
	int x;                                   //x coordinate
	int y;                                   //y coordinate
	
	public Shape(int x, int y){              //constructor
		this.x = x;
		this.y = y;
	}
	
	public void display(){                   //display method
		System.out.println("Shape at (" + x + "," + y + ")");
	}
}

public class Rectangle extends Shape{        //Rectangle class inherits from Shape
	int length;                              //length of rectangle
	int breadth;                             //breadth of rectangle
	
	public Rectangle(int x, int y, int length, int breadth){     //constructor
		super(x, y);                                            //calling superclass constructor
		this.length = length;
		this.breadth = breadth;
	}
	
	public void display(){                       //overrides display method from Shape class
		System.out.println("Rectangle at (" + x + "," + y + "), Length: " + length + ", Breadth: " + breadth);
	}
}

public class Circle extends Shape{           //Circle class inherits from Shape
	int radius;                              //radius of circle
	
	public Circle(int x, int y, int radius){      //constructor
		super(x, y);                            //calling superclass constructor
		this.radius = radius;
	}
	
	public void display(){                       //overrides display method from Shape class
		System.out.println("Circle at (" + x + "," + y + "), Radius: " + radius);
	}
}

public class Main{                               //Main class
	public static void main(String[] args){
		Shape s1 = new Shape(1, 2);                //creating instance of Shape class
		Rectangle r1 = new Rectangle(3, 4, 5, 6);  //creating instance of Rectangle class
		Circle c1 = new Circle(7, 8, 9);           //creating instance of Circle class
		
		s1.display();                              //calling display method of Shape class
		r1.display();                              //calling display method of Rectangle class
		c1.display();                              //calling display method of Circle class
		
		try{
			Shape s2 = new Shape("A", "B");        //creating instance of Shape class with wrong data types
		}
		catch(Exception e){
			System.out.println("Shape can only take integer coordinates.");   //catching and handling exception
		}
	}
}
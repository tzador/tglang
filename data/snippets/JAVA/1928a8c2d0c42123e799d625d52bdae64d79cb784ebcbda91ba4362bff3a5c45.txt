/**
 * This class represents a bank account.
 * It includes properties such as account number, holder name, balance, and interest rate.
 */
public class BankAccount { //Defining class`BankAccount`

   /**
    *  The account number of the bank account.
    */
   private int accountNumber; //Declaring private variable`accountNumber`of type int

   /**
    * The holder name of the bank account.
    */
   private String holderName; //Declaring private variable`holderName`of type String

   /**
    * The current balance of the bank account.
    */
   private double balance; //Declaring private variable`balance`of type double

   /**
    * The interest rate for the bank account.
    */
   private double interestRate; //Declaring private variable`interestRate`of type double

   /**
    * Constructs a bank account with the specified account number and holder name.
    * @param accountNumber the account number for the bank account
    * @param holderName the holder name for the bank account
    */
   public BankAccount(int accountNumber, String holderName) { //Defining constructor`BankAccount`with arguments`accountNumber`and`holderName`
       this.accountNumber = accountNumber; //Assigning value of`accountNumber` to class variable`accountNumber`
       this.holderName = holderName; //Assigning value of`holderName` to class variable`holderName`
       balance = 0; //Initializing`balance` to 0
       interestRate = 0.05; //Initializing`interestRate` to 0.05
   }

   /**
    * Returns the account number of the bank account.
    * @return the account number of the bank account
    */
   public int getAccountNumber() { //Defining method`getAccountNumber`
       return accountNumber; //Returning value of`accountNumber`
   }

   /**
    * Returns the holder name of the bank account.
    * @return the holder name of the bank account
    */
   public String getHolderName() { //Defining method`getHolderName`
       return holderName; //Returning value of`holderName`
   }

   /**
    * Returns the current balance of the bank account.
    * @return the current balance of the bank account
    */
   public double getBalance() { //Defining method`getBalance`
       return balance; //Returning value of`balance`
   }

   /**
    * Returns the interest rate for the bank account.
    * @return the interest rate for the bank account
    */
   public double getInterestRate() { //Defining method`getInterestRate`
       return interestRate; //Returning value of`interestRate`
   }

   /**
    * Sets the current balance of the bank account.
    * @param balance the new balance for the bank account
    */
   public void setBalance(double balance) { //Defining method`setBalance`with argument`balance`
       this.balance = balance; //Assigning value of`balance` to class variable`balance`
   }

   /**
    * Sets the interest rate for the bank account.
    * @param interestRate the new interest rate for the bank account
    */
   public void setInterestRate(double interestRate) { //Defining method`setInterestRate`with argument`interestRate`
       this.interestRate = interestRate //Assigning value of`interestRate` to class variable`interestRate`
   }

   /**
    * Deposits the specified amount into the bank account.
    * @param amount the amount to be deposited
    */
   public void deposit(double amount) { //Defining method`deposit`with argument`amount`
       balance += amount; //Adding value of`amount` to`balance`
       System.out.println("Successfully deposited $" + amount + " to account number " + accountNumber + "."); //Printing success message
   }

   /**
    * Withdraws the specified amount from the bank account.
    * @param amount the amount to be withdrawn
    */
   public void withdraw(double amount) { //Defining method`withdraw`with argument`amount`
       if (balance >= amount) { //If`balance` is greater than or equal to`amount`
           balance -= amount; //Subtracting value of`amount` from`balance`
           System.out.println("Successfully withdrew $" + amount + " from account number " + accountNumber + "."); //Printing success message
       }
       else { //If`balance` is less than`amount`
           System.out.println("Insufficient funds in account number " + accountNumber + ". Cannot withdraw $" + amount + "."); //Printing error message
       }
   }

   /**
    * Calculates and adds interest to the bank account.
    */
   public void addInterest() { //Defining method`addInterest`
       double interest = balance * interestRate; //Calculating interest by multiplying`balance` and`interestRate`
       balance += interest; //Adding interest to`balance`
       System.out.println("Successfully added $" + interest + " in interest to account number " + accountNumber + "."); //Printing success message
   }

   /**
   /**
    * Displays the details of the bank account.
    */
   public void displayAccountDetails() { //Defining method`displayAccountDetails`
       System.out.println("Account Details:"); //Printing heading
       System.out.println("Account Number: " + accountNumber); //Printing`accountNumber`
       System.out.println("Holder Name: " + holderName); //Printing`holderName`
       System.out.println("Balance: $" + balance); //Printing`balance`
       System.out.println("Interest Rate: " + (interestRate * 100) + "%"); //Printing`interestRate`
   }
}
/**
* This class represents a student with a name, student ID, and a list of courses enrolled in.
*/
public class Student {
    
    // field variables for name, student ID, and list of courses
    private String name;
    private int studentID;
    private ArrayList<String> courses;
    
    /**
    * Constructor for creating a new Student object.
    * @param name The name of the student.
    * @param studentID The unique ID for the student.
    * @param courses A list of courses the student is enrolled in.
    */
    public Student(String name, int studentID, ArrayList<String> courses) {
        
        // set the values of the field variables
        this.name = name;
        this.studentID = studentID;
        this.courses = courses;
    }
    
    /**
    * Method to add a new course to the student's list of courses.
    * @param course The name of the course to be added.
    */
    public void addCourse(String course) {
        
        // add the course to the list of courses
        this.courses.add(course);
    }
    
    /**
    * Method to remove a course from the student's list of courses.
    * @param course The name of the course to be removed.
    */
    public void removeCourse(String course) {
        
        // check if the course exists in the list of courses
        if(this.courses.contains(course)) {
            
            // if it does, remove it from the list
            this.courses.remove(course);
        } else { // if it doesn't, print an error message
            
            System.out.println("Error: Course does not exist in the student's list of courses.");
        }
    }
    
    /**
    * Method to get the student's name.
    * @return The name of the student.
    */
    public String getName() {
        
        return this.name;
    }
    
    /**
    * Method to get the student's ID.
    * @return The ID of the student.
    */
    public int getStudentID() {
        
        return this.studentID;
    }
    
    /**
    * Method to get the list of courses the student is enrolled in.
    * @return The list of courses.
    */
    public ArrayList<String> getCourses() {
        
        return this.courses;
    }
    
    /**
    * Method to check if the student is enrolled in a specific course.
    * @param course The name of the course to be checked.
    * @return True if the course is in the student's list of courses, false if not.
    */
    public boolean isEnrolledIn(String course) {
        
        return this.courses.contains(course);
    }
}
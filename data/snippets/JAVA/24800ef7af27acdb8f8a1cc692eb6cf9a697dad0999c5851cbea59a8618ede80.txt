// This code generates a matrix of random numbers and calculates its determinant
import java.util.Random; // Importing the Java utility library for generating random numbers

public class MatrixDeterminant {

    // Function to generate a random matrix of size n x n
    public int[][] generateRandomMatrix(int n) {
        Random rand = new Random(); // Creating a new random object
        int[][] matrix = new int[n][n]; // Creating an empty n x n matrix

        // Loop through the matrix to assign each element a random number
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = rand.nextInt(10); // Generating a random number between 0 and 9
            }
        }
        return matrix; // Return the generated matrix
    }

    // Function to calculate the determinant of a matrix
    public int calculateDeterminant(int[][] matrix) {
        // Get the size of the matrix
        int n = matrix.length;

        // Base cases for 1x1 and 2x2 matrices
        if (n == 1) {
            return matrix[0][0];
        } else if (n == 2) {
            return (matrix[0][0] * matrix[1][1]) - (matrix[0][1] * matrix[1][0]);
        } else {
            // Initialize the determinant variable
            int determinant = 0;

            // Loop through the first row of the matrix and calculate the cofactors
            for (int i = 0; i < n; i++) {
                int[][] subMatrix = new int[n - 1][n - 1]; // Creating a sub-matrix
                int m = 0; // Counter for rows in the sub-matrix
                int n = 0; // Counter for columns in the sub-matrix

                // Loop through the original matrix to fill the sub-matrix
                for (int j = 1; j < n; j++) {
                    for (int k = 0; k < n; k++) {
                        // Skip the current column
                        if (k != i) {
                            subMatrix[m][n] = matrix[j][k];
                            n++;
                        }
                    }
                    m++;
                    n = 0;
                }

                // Recursive call to calculate the determinant of the sub-matrix
                determinant += Math.pow(-1, i) * matrix[0][i] * calculateDeterminant(subMatrix);
            }
            return determinant; // Return the determinant
        }
    }

    // Main method to test the code
    public static void main(String[] args) {
        MatrixDeterminant md = new MatrixDeterminant(); // Create a new instance of the MatrixDeterminant class
        int[][] matrix = md.generateRandomMatrix(3); // Generating a random 3x3 matrix
        System.out.println("Generated Matrix:"); // Printing the generated matrix
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix.length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println("Determinant: " + md.calculateDeterminant(matrix)); // Printing the determinant of the matrix
    }
}
/**
 * This class represents a Customer at a bank
 */
public class Customer {

    private String name;
    private int age;
    private double accountBalance;

    /**
     * Constructor for Customer object
     * @param name customer's name
     * @param age customer's age
     * @param accountBalance customer's initial account balance
     */
    public Customer(String name, int age, double accountBalance) {
        this.name = name;
        this.age = age;
        this.accountBalance = accountBalance;
    }

    /**
     * Method that adds money to customer's account
     * @param amount the amount to be deposited
     */
    public void addFunds(double amount) {
        this.accountBalance += amount;
    }

    /**
     * Method that withdraws money from customer's account
     * @param amount the amount to be withdrawn
     * @throws InsufficientFundsException if account balance is less than amount to be withdrawn
     */
    public void withdrawFunds(double amount) throws InsufficientFundsException {
        if (amount > this.accountBalance) {
            throw new InsufficientFundsException();
        } else {
            this.accountBalance -= amount;
        }
    }

    /**
     * Method to get customer's name
     * @return customer's name
     */
    public String getName() {
        return this.name;
    }

    /**
     * Method to update customer's name
     * @param name the new name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Method to get customer's age
     * @return customer's age
     */
    public int getAge() {
        return this.age;
    }

    /**
     * Method to update customer's age
     * @param age the new age
     */
    public void setAge(int age) {
        this.age = age;
    }

    /**
     * Method to get customer's account balance
     * @return customer's account balance
     */
    public double getAccountBalance() {
        return this.accountBalance;
    }

    /**
     * Method to update customer's account balance
     * @param accountBalance the new account balance
     */
    public void setAccountBalance(double accountBalance) {
        this.accountBalance = accountBalance;
    }
}
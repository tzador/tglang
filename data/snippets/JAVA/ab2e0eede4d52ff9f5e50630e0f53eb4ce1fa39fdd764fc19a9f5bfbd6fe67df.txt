/**
 * This is a complex code snippet in JAVA
 * It implements quick sort algorithm for sorting an array of integers
 */

/**
 * @param array - the input array of integers to be sorted
 * @param low - the starting index of the array
 * @param high - the ending index of the array
 */
public static void quickSort(int[] array, int low, int high) {
    if (low < high) {
        // choose a pivot element
        int pivot = array[high];
        
        // initialize two pointers to keep track of left and right subarrays
        int left = low;
        int right = high - 1;
        
        // move left pointer to the right until it finds an element greater than pivot
        while (left <= right && array[left] <= pivot) {
            left++;
        }
        
        // move right pointer to the left until it finds an element less than or equal to pivot
        while (right >= left && array[right] > pivot) {
            right--;
        }
        
        // swap elements at left and right pointers
        if (left < right) {
            int temp = array[left];
            array[left] = array[right];
            array[right] = temp;
        }
        
        // swap pivot element with element at left pointer
        int temp = array[left];
        array[left] = array[high];
        array[high] = temp;
        
        // recursively sort left and right subarrays
        quickSort(array, low, left - 1);
        quickSort(array, left + 1, high);
    }
}

// sample input array
int[] array = {5, 2, 7, 1, 9};

// sort the array using quick sort algorithm
quickSort(array, 0, array.length - 1);

// expected output: {1, 2, 5, 7, 9}
/**
* This is a complex code snippet in JAVA
* It demonstrates the use of multiple class and method declarations 
*/

// Declaring a Parent class
public class Parent {

    private String name;
    private int age;

    // Constructor for Parent class
    public Parent(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Getter method for name
    public String getName() {
        return name;
    }

    // Getter method for age
    public int getAge() {
        return age;
    }

    // Setter method for name
    public void setName(String name) {
        this.name = name;
    }

    // Setter method for age
    public void setAge(int age) {
        this.age = age;
    }

    // Method to print parent's information
    public void printInfo() {
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
    }
}

// Declaring a Child class which extends Parent class
public class Child extends Parent {

    private String favoriteToy;

    // Constructor for Child class
    public Child(String name, int age, String favoriteToy) {
        super(name, age);
        this.favoriteToy = favoriteToy;
    }

    // Getter method for favorite toy
    public String getFavoriteToy() {
        return favoriteToy;
    }

    // Setter method for favorite toy
    public void setFavoriteToy(String favoriteToy) {
        this.favoriteToy = favoriteToy;
    }

    // Method to print child's information, overrides printInfo() method in Parent class
    @Override
    public void printInfo() {
        System.out.println("Name: " + getName());
        System.out.println("Age: " + getAge());
        System.out.println("Favorite Toy: " + favoriteToy);
    }
}

// Main class to run the program
public class Main {
    public static void main(String[] args) {

        // Creating a new Parent object
        Parent parent = new Parent("John", 35);

        // Creating a new Child object
        Child child = new Child("Jane", 8, "Barbie");

        // Printing parent's information
        parent.printInfo();

        // Printing child's information
        child.printInfo();
    }
}
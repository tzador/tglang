/**
 * This class represents a shopping cart that stores items and calculates total cost.
 */
public class ShoppingCart {
    // list of items in the cart
    private ArrayList<Item> items;
    // total cost of all items in the cart
    private double totalCost;

    /**
     * Constructor for ShoppingCart.
     * Initializes the items list and sets the initial total cost to 0.
     */
    public ShoppingCart() {
        items = new ArrayList<Item>();
        totalCost = 0.0;
    }

    /**
     * Adds an item to the cart and updates the total cost.
     * @param item item to be added to the cart
     */
    public void addItem(Item item) {
        items.add(item);
        totalCost += item.getPrice();
    }

    /**
     * Removes an item from the cart and updates the total cost.
     * @param item item to be removed from the cart
     */
    public void removeItem(Item item) {
        items.remove(item);
        totalCost -= item.getPrice();
    }

    /**
     * Calculates the total cost of all items in the cart.
     * @return total cost of items in the cart
     */
    public double calculateTotalCost() {
        return totalCost;
    }

    /**
     * Prints out a list of all items in the cart.
     */
    public void viewCart() {
        System.out.println("Cart items:");
        for (Item item : items) {
            System.out.println(item.getName() + " - $" + item.getPrice());
        }
    }
}
// This program uses a brute-force approach to find the longest common
// subsequence between two strings
import java.util.*;

public class LongestCommonSubsequence {

    // Function to find the longest common subsequence between two strings using brute-force approach
    public static String bruteForceLCS(String s1, String s2) {
        int m = s1.length();
        int n = s2.length();

        // Initialize a 2D array to store the lengths of common subsequences
        int[][] commonSubseq = new int[m+1][n+1];

        // Initialize the first row and first column of the array to 0
        for (int i=0; i<=m; i++) {
            commonSubseq[i][0] = 0;
        }
        for (int j=0; j<=n; j++) {
            commonSubseq[0][j] = 0;
        }

        // Fill the 2D array with the lengths of common subsequences
        // by comparing characters of both strings
        for (int i=1; i<=m; i++) {
            for (int j=1; j<=n; j++) {
                if (s1.charAt(i-1) == s2.charAt(j-1)) {
                    commonSubseq[i][j] = commonSubseq[i-1][j-1] + 1;
                } else {
                    commonSubseq[i][j] = Math.max(commonSubseq[i][j-1], commonSubseq[i-1][j]);
                }
            }
        }

        // Initialize a string to store the longest common subsequence
        String longestSubseq = "";

        // Trace back through the 2D array to find the characters of the longest common subsequence
        int i = m;
        int j = n;
        while (i > 0 && j > 0) {
            // If the characters are equal, add it to the beginning of the longest common subsequence string
            if (s1.charAt(i-1) == s2.charAt(j-1)) {
                longestSubseq = s1.charAt(i-1) + longestSubseq;
                i--;
                j--;
            // If the characters are not equal, move to the position in the array with the larger value
            } else {
                if (commonSubseq[i-1][j] > commonSubseq[i][j-1]) {
                    i--;
                } else {
                    j--;
                }
            }
        }

        // Return the longest common subsequence
        return longestSubseq;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input the two strings from the user
        System.out.print("Enter the first string: ");
        String s1 = sc.nextLine();
        System.out.print("Enter the second string: ");
        String s2 = sc.nextLine();

        // Call the bruteForceLCS function to find the longest common subsequence and print the result
        System.out.println("The longest common subsequence is: " + bruteForceLCS(s1, s2));
    }
}
// This code snippet generates a fractal tree using recursion and the Swing graphics library

// Importing necessary libraries
import javax.swing.*;
import java.awt.*;

// Class for creating and displaying the frame
class FractalTree extends JFrame {
    // Variables for window dimensions
    private final int width = 800;
    private final int height = 600;

    // Constructor for the frame
    public FractalTree() {
        // Setting window specifications
        setSize(width, height);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("Fractal Tree");
        setVisible(true);
    }

    // Method for drawing the tree using recursion
    public void drawTree(Graphics g, int x1, int y1, double angle, int depth) {
        // Base case for recursion
        if (depth == 0) {
            return;
        }

        // Calculating coordinates for the end point of the first branch
        int x2 = x1 + (int) (Math.cos(Math.toRadians(angle)) * depth * 10.0);
        int y2 = y1 + (int) (Math.sin(Math.toRadians(angle)) * depth * 10.0);

        // Drawing the first line for the branch
        g.drawLine(x1, y1, x2, y2);

        // Recursively calling the method, decreasing depth and changing angle for each branch
        drawTree(g, x2, y2, angle - 20, depth - 1);
        drawTree(g, x2, y2, angle + 20, depth - 1);
    }

    // Overriding the paint method to draw the tree on the frame
    @Override
    public void paint(Graphics g) {
        // Setting line color to green
        g.setColor(Color.green);

        // Calling the drawTree method with initial parameters for the tree
        drawTree(g, width / 2, height - 100, -90, 10);
    }

    // Main method to run the program
    public static void main(String[] args) {
        // Creating an instance of the FractalTree class
        FractalTree fractalTree = new FractalTree();
    }
}
/**
 * This is a sample class that represents a user
 * in a social media platform.
 */
public class User {
    private String username;
    private String password;
    private String firstName;
    private String lastName;
    private int age;
    private String location;
    private String bio;
    
    /**
     * Constructor for creating a new User object
     * @param username the username of the user
     * @param password the password of the user
     * @param firstName the first name of the user
     * @param lastName the last name of the user
     * @param age the age of the user
     * @param location the location of the user
     * @param bio the bio of the user
     */
    public User(String username, String password, String firstName, String lastName, int age, String location, String bio) {
        this.username = username;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.location = location;
        this.bio = bio;
    }
    
    /**
     * Getter method for username
     * @return the username of the user
     */
    public String getUsername() {
        return this.username;
    }
    
    /**
     * Getter method for password
     * @return the password of the user
     */
    public String getPassword() {
        return this.password;
    }
    
    /**
     * Getter method for first name
     * @return the first name of the user
     */
    public String getFirstName() {
        return this.firstName;
    }
    
    /**
     * Getter method for last name
     * @return the last name of the user
     */
    public String getLastName() {
        return this.lastName;
    }
    
    /**
     * Getter method for age
     * @return the age of the user
     */
    public int getAge() {
        return this.age;
    }
    
    /**
     * Getter method for location
     * @return the location of the user
     */
    public String getLocation() {
        return this.location;
    }
    
    /**
     * Getter method for bio
     * @return the bio of the user
     */
    public String getBio() {
        return this.bio;
    }
    
    /**
     * Setter method for username
     * @param username the new username to set
     */
    public void setUsername(String username) {
        this.username = username;
    }
    
    /**
     * Setter method for password
     * @param password the new password to set
     */
    public void setPassword(String password) {
        this.password = password;
    }
    
    /**
     * Setter method for first name
     * @param firstName the new first name to set
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    
    /**
     * Setter method for last name
     * @param lastName the new last name to set
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
    
    /**
     * Setter method for age
     * @param age the new age to set
     */
    public void setAge(int age) {
        this.age = age;
    }
    
    /**
     * Setter method for location
     * @param location the new location to set
     */
    public void setLocation(String location) {
        this.location = location;
    }
    
    /**
     * Setter method for bio
     * @param bio the new bio to set
     */
    public void setBio(String bio) {
        this.bio = bio;
    }
    
    /**
     * Method to check if two user objects are equal
     * @param obj the object to check equality with
     * @return true if equal, false if not
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        
        User user = (User) obj;
        
        if (!this.getUsername().equals(user.getUsername())) {
            return false;
        }
        
        if (!this.getPassword().equals(user.getPassword())) {
            return false;
        }
        
        if (!this.getFirstName().equals(user.getFirstName())) {
            return false;
        }
        
        if (!this.getLastName().equals(user.getLastName())) {
            return false;
        }
        
        if (this.getAge() != user.getAge()) {
            return false;
        }
        
        if (!this.getLocation().equals(user.getLocation())) {
            return false;
        }
        
        if (!this.getBio().equals(user.getBio())) {
            return false;
        }
        
        return true;
    }
    
    /**
     * Method to generate a hashcode for the User object
     * @return the hashcode
     */
    @Override
    public int hashCode() {
        int result = this.getUsername().hashCode();
        result = 31 * result + this.getPassword().hashCode();
        result = 31 * result + this.getFirstName().hashCode();
        result = 31 * result + this.getLastName().hashCode();
        result = 31 * result + this.getAge();
        result = 31 * result + this.getLocation().hashCode();
        result = 31 * result + this.getBio().hashCode();
        return result;
    }
    
    /**
     * Method to convert User object to a string
     * @return the string representation of the User object
     */
    @Override
    public String toString() {
        return "User{" +
                "username='" + this.getUsername() + '\'' +
                ", password='" + this.getPassword() + '\'' +
                ", firstName='" + this.getFirstName() + '\'' +
                ", lastName='" + this.getLastName() + '\'' +
                ", age=" + this.getAge() +
                ", location='" + this.getLocation() + '\'' +
                ", bio='" + this.getBio() + '\'' +
                '}';
    }
}
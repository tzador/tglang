// This code snippet creates a hashmap and implements a custom hash function

import java.util.HashMap;    // imports the HashMap class from java.util package

public class CustomHashMap<K, V> extends HashMap<K, V> {

	private static final long serialVersionUID = 1L;    // defining a unique serial version ID for class compatibility

	/**
	* A function to generate a custom hash code for a key
	* @param key the key to be hashed
	* @return the custom hash code generated
	*/
	@Override
	public int hash(Object key) {
		int hash = 0;    // initialize hash variable to 0
		String strKey = key.toString();    // converting key to string
		for (int i = 0; i < strKey.length(); i++) {
			hash = hash * 31 + strKey.charAt(i);    // generating hash code using Horner's method
		}
		return hash;    // return the generated hash code
	}

	public static void main(String[] args) {

		// creating a new instance of CustomHashMap
		CustomHashMap<String, Integer> customMap = new CustomHashMap<>();	

		// adding key-value pairs to the customMap
		customMap.put("Java", 1);
		customMap.put("Python", 2);
		customMap.put("C++", 3);

		System.out.println("Custom HashMap: " + customMap);    // printing out the customMap

		// getting the value for a specific key
		int value = customMap.get("Python");
		System.out.println("Value for key 'Python': " + value);    // printing out the value for key 'Python'
	}
}
// This code snippet creates a class called "Employee" with various properties and methods

public class Employee {

    // Private properties
    private String name;
    private int age;
    private double salary;
    private int yearsOfExperience;

    // Constructor
    public Employee(String name, int age, double salary, int yearsOfExperience) {
        // Assigning values to properties
        this.name = name;
        this.age = age;
        this.salary = salary;
        this.yearsOfExperience = yearsOfExperience;
    }

    // Getter methods
    public String getName() {
        return this.name;
    }

    public int getAge() {
        return this.age;
    }

    public double getSalary() {
        return this.salary;
    }

    public int getYearsOfExperience() {
        return this.yearsOfExperience;
    }

    // Setter methods
    public void setName(String name) {
        this.name = name;
    }

    public void setAge(int age) {
        this.age = age;
    }

    // Method to give salary raise based on years of experience
    public void giveRaise() {
        if (this.yearsOfExperience <= 5) {
            this.salary += 1000; // Increase salary by $1000 for first 5 years of experience
        } else {
            this.salary += 2000; // Increase salary by $2000 for every additional year of experience
        }
    }

    // Main method to run code
    public static void main(String[] args) {
        // Creating new Employee object
        Employee employee1 = new Employee("John Smith", 30, 50000, 3);

        // Printing employee's details
        System.out.println("Employee name: " + employee1.getName());
        System.out.println("Employee age: " + employee1.getAge());
        System.out.println("Employee salary: $" + employee1.getSalary());
        System.out.println("Employee years of experience: " + employee1.getYearsOfExperience());

        // Giving raise to employee
        employee1.giveRaise();

        // Printing updated salary
        System.out.println("Updated employee salary: $" + employee1.getSalary());
    }
}
//This is a java program to calculate simulation results using Monte Carlo Method

import java.util.Random; //importing Random class from java.util package

public class MonteCarloSimulation {

    public static void main(String[] args) {
    
        //setting up initial variables for simulation
        int numberOfTrials = 100000; //defining number of trials for the simulation
        double totalArea = 0.0; //defining and initializing variable to store total area
        double lowerBound = 0.0; //defining and initializing lower bound for x values
        double upperBound = 1.0; //defining and initializing upper bound for x values
        double lowerBoundY = 0.0; //defining and initializing lower bound for y values
        double upperBoundY = 1.0; //defining and initializing upper bound for y values
        
        //creating instance of Random class
        Random random = new Random();
        
        for (int i = 0; i < numberOfTrials; i++) { //running simulation for the defined number of trials
            //generating random x and y values within the defined bounds
            double x = lowerBound + (upperBound - lowerBound) * random.nextDouble();
            double y = lowerBoundY + (upperBoundY - lowerBoundY) * random.nextDouble();
            
            //calculating distance between the point and origin using Pythagorean theorem
            double distance = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
            
            //checking if the point lies within the circle (radius = 1) using distance
            if (distance <= 1) {
                totalArea++; //if point lies within circle, add 1 to totalArea
            }
        }
        
        //calculating estimated value of pi using totalArea and numberOfTrials
        double estimatedPi = (totalArea / numberOfTrials) * 4;
        
        System.out.println("Estimated value of pi using Monte Carlo Simulation: " + estimatedPi); //printing result
        
    }
}
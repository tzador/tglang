/**
 * This is a class that represents a shopping cart for an online store.
 */

public class ShoppingCart {
    // Instance variables
    private String storeName; // the name of the online store
    private Map<String, Double> items; // a map of item names to their prices
    private List<String> itemsInCart; // a list of items currently in the cart

    /**
     * Constructor for the ShoppingCart class.
     * @param storeName the name of the online store
     */
    public ShoppingCart(String storeName) {
        this.storeName = storeName;
        this.items = new HashMap<>();
        this.itemsInCart = new ArrayList<>();
    }

    /**
     * Adds an item to the shopping cart.
     * @param itemName the name of the item to be added
     * @param price the price of the item
     */
    public void addItem(String itemName, double price) {
        this.items.put(itemName, price);
        this.itemsInCart.add(itemName);
    }

    /**
     * Removes an item from the shopping cart.
     * @param itemName the name of the item to be removed
     */
    public void removeItem(String itemName) {
        this.items.remove(itemName);
        this.itemsInCart.remove(itemName);
    }

    /**
     * Clears the shopping cart of all items.
     */
    public void clearCart() {
        this.items.clear();
        this.itemsInCart.clear();
    }

    /**
     * Calculates and returns the total cost of all items in the shopping cart.
     * @return the total cost of all items in the shopping cart
     */
    public double calculateTotal() {
        double total = 0;
        
        // Iterate through the items in the list and add their prices to the total
        for (String item : this.itemsInCart) {
            total += this.items.get(item);
        }
        
        return total;
    }
}
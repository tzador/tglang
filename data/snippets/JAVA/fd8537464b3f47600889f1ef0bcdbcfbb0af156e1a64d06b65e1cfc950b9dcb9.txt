/**
 * Represents a car with properties such as make, model, and year.
 */
public class Car {

    // Instance variables
    private String make;
    private String model;
    private int year;

    /**
     * Constructor for the Car class.
     * @param make The make of the car.
     * @param model The model of the car.
     * @param year The year the car was made.
     */
    public Car(String make, String model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }

    /**
     * Gets the make of the car.
     * @return The make of the car.
     */
    public String getMake() {
        return make;
    }

    /**
     * Gets the model of the car.
     * @return The model of the car.
     */
    public String getModel() {
        return model;
    }

    /**
     * Gets the year of the car.
     * @return The year of the car.
     */
    public int getYear() {
        return year;
    }

    /**
     * Sets the make of the car.
     * @param make The new make of the car.
     */
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Sets the model of the car.
     * @param model The new model of the car.
     */
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Sets the year of the car.
     * @param year The new year of the car.
     */
    public void setYear(int year) {
        this.year = year;
    }

    /**
     * Prints out the details of the car.
     */
    public void printDetails() {
        System.out.println("Make: " + make + ", Model: " + model + ", Year: " + year);
    }

    /**
     * Checks if two cars are equal, based on their make, model, and year.
     * @param obj The object to compare to.
     * @return True if the cars are equal, false otherwise.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Car)) {
            return false;
        }

        Car other = (Car) obj;

        if (!make.equals(other.make)) {
            return false;
        }

        if (!model.equals(other.model)) {
            return false;
        }

        return year == other.year;
    }

    /**
     * Overrides the default toString() method to print out the car's make, model, and year.
     * @return A string representation of the car.
     */
    @Override
    public String toString() {
        return "Make: " + make + ", Model: " + model + ", Year: " + year;
    }
}
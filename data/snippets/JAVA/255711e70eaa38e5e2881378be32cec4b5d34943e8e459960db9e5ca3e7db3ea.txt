/* This program demonstrates the use of threads in Java */
public class ThreadDemo {
    public static void main(String[] args) {
        int numThreads = 4;
        // Create an array to store thread objects
        Thread[] threads = new Thread[numThreads];
        // Create and start each thread
        for (int i = 0; i < numThreads; i++) {
            threads[i] = new Thread(new WorkerThread(i));
            threads[i].start();
        }
        // Wait for each thread to finish
        for (int i = 0; i < numThreads; i++) {
            try {
                threads[i].join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        System.out.println("All threads have finished executing.");
    }
    // Worker thread class
    static class WorkerThread implements Runnable {
        // Thread ID
        private int id;
        // Constructor
        public WorkerThread(int id) {
            this.id = id;
        }
        // Run method
        public void run() {
            // Print thread ID and message
            System.out.println("Thread " + id + " is executing.");
            // Sleep for a random number of milliseconds
            long sleepTime = (long) (Math.random() * 5000);
            try {
                Thread.sleep(sleepTime);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println("Thread " + id + " has finished executing after " + sleepTime + " milliseconds.");
        }
    }
}
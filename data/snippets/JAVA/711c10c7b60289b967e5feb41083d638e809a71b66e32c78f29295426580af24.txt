/**
 * This is a class that demonstrates the use of inheritance in Java.
 * It extends the Animal class and overrides its makeSound() method.
 */
public class Dog extends Animal {
    private int age;
    private String breed;
    private String color;

    /**
     * Constructor for the Dog class.
     * @param age the age of the dog
     * @param breed the breed of the dog
     * @param color the color of the dog
     */
    public Dog(int age, String breed, String color) {
        this.age = age;
        this.breed = breed;
        this.color = color;
    }

    /**
     * Getter method for the age variable.
     * @return the age of the dog
     */
    public int getAge() {
        return age;
    }

    /**
     * Getter method for the breed variable.
     * @return the breed of the dog
     */
    public String getBreed() {
        return breed;
    }

    /**
     * Getter method for the color variable.
     * @return the color of the dog
     */
    public String getColor() {
        return color;
    }

    /**
     * Overriding the makeSound() method from the Animal class.
     * @return the sound that a dog makes
     */
    @Override
    public String makeSound() {
        return "Woof!";
    }
}

/**
 * The Animal class is a superclass that represents an animal.
 * It has a makeSound() method that returns a string.
 */
public class Animal {
    /**
     * The makeSound() method returns a generic string representing an animal's sound.
     * @return a string representing an animal's sound
     */
    public String makeSound() {
        return "I am an animal!";
    }
}

/**
 * This is a demo program that creates a Dog object and calls its methods.
 */
public class DogDemo {
    public static void main(String[] args) {
        Dog myDog = new Dog(5, "Labrador Retriever", "Golden");
        System.out.println("Age: " + myDog.getAge());
        System.out.println("Breed: " + myDog.getBreed());
        System.out.println("Color: " + myDog.getColor());
        System.out.println("Sound: " + myDog.makeSound());
    }
}
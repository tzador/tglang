defmodule Example do  # defining a module

  @moduledoc "This is an example module for demonstrating code snippets in Elixir."  # module documentation

  # defining a variable to store a list
  list = [1, 2, 3, 4, 5]

  @doc "This function multiplies each element in the list by 2 and returns the new list."
  def multiply_list(list), do: Enum.map(list, fn(x) -> x * 2 end)  # defining a function to multiply the elements

  @doc "This function prints the length of the list to the console."
  def print_list_length(list), do: IO.puts(length(list))  # defining a function to print the length to the console

  # defining a struct to hold information about a person
  defstruct name: nil, age: nil, profession: nil

  # creating a new person struct and assigning values to its fields
  person = %Example{name: "John", age: 25, profession: "Software Engineer"}

  @doc "This function prints out the information about a given person."
  def print_person_info(person) do
    IO.puts("Name: #{person.name}")
    IO.puts("Age: #{person.age}")
    IO.puts("Profession: #{person.profession}")
  end

  # calling the print_person_info function with the person struct as an argument
  print_person_info(person)
end
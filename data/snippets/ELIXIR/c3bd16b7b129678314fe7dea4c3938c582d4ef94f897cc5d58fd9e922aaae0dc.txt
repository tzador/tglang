defmodule Complex do
  @moduledoc """
  This module defines a complex number and related operations on it.
  """
  @doc """
  Creates a new complex number from given real and imaginary parts.
  """
  defstruct real: 0, imaginary: 0

  @doc """
  Adds two complex numbers and returns the result.
  Complexity: O(1)
  """
  def add(%Complex{real: r1, imaginary: i1}, %Complex{real: r2, imaginary: i2}) do
    %Complex{real: r1 + r2, imaginary: i1 + i2}
  end

  @doc """
  Subtracts one complex number from another and returns the result.
  Complexity: O(1)
  """
  def subtract(%Complex{real: r1, imaginary: i1}, %Complex{real: r2, imaginary: i2}) do
    %Complex{real: r1 - r2, imaginary: i1 - i2}
  end

  @doc """
  Multiplies two complex numbers and returns the result.
  Complexity: O(1)
  """
  def multiply(%Complex{real: r1, imaginary: i1}, %Complex{real: r2, imaginary: i2}) do
    %Complex{real: r1 * r2 - i1 * i2, imaginary: r1 * i2 + r2 * i1}
  end

  @doc """
  Divides one complex number by another and returns the result.
  Complexity: O(1)
  """
  def divide(%Complex{real: r1, imaginary: i1}, %Complex{real: r2, imaginary: i2}) do
    denominator = r2 * r2 + i2 * i2
    %Complex{real: (r1 * r2 + i1 * i2) / denominator, imaginary: (i1 * r2 - r1 * i2) / denominator}
  end
end
defmodule User do
  @moduledoc """
  This module represents a user and their information.
  """

  # User Struct
  defstruct name: nil,
            age: nil,
            email: nil,
            location: nil

  # User Functions
  def create_user(name, age, email, location) do
    %User{name: name, age: age, email: email, location: location}
  end

  def update_user(user, name: new_name) do
    %{user | name: new_name}
  end

  def update_user(user, age: new_age) do
    %{user | age: new_age}
  end

  def update_user(user, email: new_email) do
    %{user | email: new_email}
  end

  # User Pipeline Operator
  def create_user_pipeline(name, age, email, location) do
    name
    |> create_user(age, email, location)
  end

  # Pattern Matching Function
  def get_user_age(%User{name: name, age: age}, name) do
    "#{name}'s age is #{age}"
  end

  # Multiple Clauses Function
  def get_user_details(%User{name: name, age: age, email: email, location: location}) do
    "#{name} is #{age} years old and lives in #{location}. Their email is #{email}"
  end

  def get_user_details(%User{name: name, age: age}) do
    "User #{name} is #{age} years old, but their email and location are unknown."
  end
end
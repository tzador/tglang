# This is a comment in Elixir

defmodule Math do
  # Defining a function named "square"
  # Takes in one parameter "num" and returns its square
  def square(num) do
    # Using the built-in multiplication operator *
    num * num
  end

  # Defining a function named "cube"
  # Takes in one parameter "num" and returns its cube
  def cube(num) do
    # Calling the "square" function defined above and multiplying the result by "num"
    num * square(num)
  end

  # Defining a function named "sum_of_squares"
  # Takes in two parameters "num1" and "num2" and returns the sum of their squares
  def sum_of_squares(num1, num2) do
    # Using the built-in addition operator + and calling the "square" function defined above
    square(num1) + square(num2)
  end

  # Defining a function named "sum_of_cubes"
  # Takes in two parameters "num1" and "num2" and returns the sum of their cubes
  def sum_of_cubes(num1, num2) do
    # Using the built-in addition operator + and calling the "cube" function defined above
    cube(num1) + cube(num2)
  end
end

# Storing the result of calling the "sum_of_squares" function in a variable "squares_sum"
squares_sum = Math.sum_of_squares(5, 3)

# Storing the result of calling the "sum_of_cubes" function in a variable "cubes_sum"
cubes_sum = Math.sum_of_cubes(2, 4)

# Printing the results
IO.puts("The sum of squares is #{squares_sum}")
IO.puts("The sum of cubes is #{cubes_sum}")

# Output:
# The sum of squares is 34
# The sum of cubes is 72
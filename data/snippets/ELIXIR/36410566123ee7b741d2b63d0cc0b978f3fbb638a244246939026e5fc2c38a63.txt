defmodule MyModule do

  # Defining a function with a guard clause
  def add(x, y) when is_integer(x) and is_integer(y) do
    x + y
  end

  # Defining a function with a pattern match
  def add(x, x) do
    x * 2
  end

  # Defining a function that returns a tuple
  def divide(x, y) do
    if y == 0 do
      {:error, "Cannot divide by zero"}
    else
      {:ok, x / y}
    end
  end

  # Defining a recursive function
  def fibonacci(n) when n <= 0 do
    {:error, "Invalid input"}
  end

  def fibonacci(1), do: 1
  def fibonacci(2), do: 1

  def fibonacci(n) do
    fibonacci(n - 1) + fibonacci(n - 2)
  end

end
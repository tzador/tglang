defmodule User do # defines a module
  @moduledoc """
  Module that represents a user with their information
  """

  # specifies the structure of the user information
  defstruct name: "", email: "", age: nil, isAdmin: false

  # function to create a new user with given information
  @doc """
  Creates a new user with the given information
  Params:
    name - the user's name
    email - the user's email
    age - the user's age (optional)
    isAdmin - boolean indicating if the user is an admin (optional)
  Returns:
    a User struct with the given information
  """
  def create_user(name, email, age \\ nil, isAdmin \\ false) do
    %User{name: name, email: email, age: age, isAdmin: isAdmin}
  end

  # function to update a user's age
  @doc """
  Updates the age of a user
  Params:
    user - the user to be updated
    newAge - the new age to update to
  Returns:
    the updated User struct
  """
  def update_age(user, newAge) do
    %{user | age: newAge}
  end
end

# example of creating a new user
user = User.create_user("John", "john@example.com")

# update the user's age
updated_user = User.update_age(user, 25)

# print the user's name and age
IO.puts("#{updated_user.name} is now #{updated_user.age} years old.")
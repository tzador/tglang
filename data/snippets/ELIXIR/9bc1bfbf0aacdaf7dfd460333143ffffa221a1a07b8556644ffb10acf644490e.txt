defmodule Example do
  # Defines a module called Example
  use GenServer
  # Uses the GenServer behaviour for server implementation
  def start_link(first, second) do
    # Defines a start_link function with two arguments
    GenServer.start_link(__MODULE__, {first, second})
    # Uses the GenServer start_link function to start the server with the current module and the tuple of arguments
  end

  def init({first, second}) do
    # Defines an init function with a tuple as an argument
    {:ok, %{first: first, second: second}}
    # Returns an ok value with a map containing the first and second arguments
  end

  def handle_call(:do_something, _from, %{first: first, second: second}) do
    # Defines a handle_call function to handle the :do_something request
    {:reply, sum(first, second), %{first: first, second: second}}
    # Returns a reply value with the sum of the first and second arguments and the updated map
  end

  defp sum(first, second) do
    # Defines a private sum function with two arguments
    first + second
    # Returns the sum of the two arguments
  end
end
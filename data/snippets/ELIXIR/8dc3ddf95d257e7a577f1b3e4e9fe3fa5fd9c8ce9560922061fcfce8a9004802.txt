defmodule ExampleModule do
  # Defines a module named ExampleModule
  @doc """
  This is an example module used for demonstration purposes.
  """
  # Annotates the module with documentation

  use GenServer
  # Uses the GenServer behaviour in this module

  @doc """
  Starts the GenServer process.
  """
  # Annotates the start/1 function with documentation
  def start(options \\ []) do
    # Defines a function named start, with default options argument
    GenServer.start_link(__MODULE__, options, name: __MODULE__)
    # Uses the GenServer module's start_link function to start the process with the specified module, options, and name
  end

  @doc """
  Handles incoming messages.
  """
  # Annotates the handle_info/2 function with documentation
  def handle_info({:message, message}, state) do
    # Defines a function named handle_info, which matches on the {:message, message} tuple and a state argument
    IO.puts "Received message: #{message}"
    # Prints out the received message
    {:noreply, state}
    # Returns a tuple indicating that no reply is needed and the updated state
  end
end
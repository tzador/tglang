defmodule User do
  @doc """
  This module represents a User in the system.
  """

  # Module attributes
  @user_count 0

  # Module functions
  """
  Creates a new User struct with the given parameters.
  Parameters:
    :username - the username of the user
    :password - the password of the user
  Returns:
    a new User struct
  """
  def create_user(username, password) do
    %User{
      username: username,
      password: password
    }
  end

  """
  Gets the number of users in the system.
  Returns:
    the number of users
  """
  def get_user_count() do
    @user_count
  end

  """
  Increments the user count.
  Returns:
    nothing
  """
  def increment_user_count() do
    @user_count += 1
  end

  # Module private functions
  defp validate_username(username) do
    # Custom username validation logic goes here
    # For example:
    # Only allow usernames with at least 3 characters
    String.length(username) >= 3
  end

  defp validate_password(password) do
    # Custom password validation logic goes here
    # For example:
    # Only allow passwords with at least 8 characters
    String.length(password) >= 8
  end
end
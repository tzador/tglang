defmodule Room do
  # This function takes in a list of guests and prints a greeting for each one
  def greet_guests(guests) do
    guests
    |> Enum.map(fn guest -> 
      "Hello #{guest}, welcome to our room!"
    end)
    |> IO.puts
  end

  # This function takes in a room number and conditionally checks if it's a single or double room
  def get_room_info(room_number) do
    case room_number do
      single_room when single_room < 100 ->
        IO.puts "This room is a single room with a room number of #{room_number}."
      double_room when double_room >= 100 ->
        IO.puts "This room is a double room with a room number of #{room_number}."
    end
  end

  # This function takes in a room number and a list of guests, then assigns them to the room and prints a confirmation message
  def assign_guests_to_room(room_number, guests) do
    {room_number, guests}
    |> IO.inspect(label: "Room Assignment")
    |> IO.puts "Assigned guests #{inspect guests} to room #{room_number}. Enjoy your stay!"
  end
end

# This calls the get_room_info function with a room number of 75
Room.get_room_info(75)

# Output:
# This room is a single room with a room number of 75.

# This calls the greet_guests function with a list of guests
Room.greet_guests(["John", "Emily", "Mike"])

# Output:
# Hello John, welcome to our room!
# Hello Emily, welcome to our room!
# Hello Mike, welcome to our room!

# This calls the assign_guests_to_room function with a room number of 101 and a list of guests
Room.assign_guests_to_room(101, ["Samantha", "Tom", "Sarah"])

# Output:
# Room Assignment: {101, ["Samantha", "Tom", "Sarah"]}
# Assigned guests ["Samantha", "Tom", "Sarah"] to room 101. Enjoy your stay!
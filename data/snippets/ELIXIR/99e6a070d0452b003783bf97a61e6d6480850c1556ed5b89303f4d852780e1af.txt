# Define a module
defmodule Calculator do
  # Define a function that accepts two arguments
  def add(x, y) do
    # Pattern matching to handle different types of inputs
    case {x, y} do
      # If both inputs are numbers, add them together
      {num1, num2} when is_number(num1) and is_number(num2) ->
        IO.puts "The sum of #{num1} and #{num2} is #{num1 + num2}"
      # If both inputs are strings, concatenate them
      {str1, str2} when is_binary(str1) and is_binary(str2) ->
        IO.puts "The concatenation of #{str1} and #{str2} is #{str1 <> str2}"
      # If inputs are of different types, throw an error
      {_, _} ->
        raise "Unsupported input types, please provide numbers or strings"
    end
  end
end

# Call the Calculator module and pass in two numbers
Calculator.add(5, 10)
# Output: The sum of 5 and 10 is 15

# Call the Calculator module and pass in two strings
Calculator.add("Hello", "World")
# Output: The concatenation of Hello and World is HelloWorld

# Call the Calculator module and pass in inputs of different types
Calculator.add(1, "Two")
# Error: Unsupported input types, please provide numbers or strings
defmodule Math do
  require Integer

  # Calculates the factorial of a given number 
  # Inputs:
  #    number - the number to calculate the factorial for
  # Outputs:
  #    factorial - the calculated factorial value
  def factorial(number) do
    if number < 0 do
      raise "Error: Invalid input! Number must be positive."
    else
      Enum.reduce(1..number, 1, &Integer.mult/2)
    end
  end

  # Calculates the power of a given base and exponent
  # Inputs:
  #    base - the base of the power calculation
  #    exponent - the exponent of the power calculation
  # Outputs:
  #    power - the calculated power value
  def power(base, exponent) do
    if exponent < 0 do
      raise "Error: Invalid input! Exponent must be non-negative."
    else
      Enum.reduce(1..exponent, 1, &Integer.mult(base)/2)
    end
  end

  # Calculates the nth fibonacci number
  # Inputs:
  #    n - the index of the fibonacci number to be calculated
  # Outputs:
  #    fibonacci - the calculated nth fibonacci number
  def fibonacci(n) do
    if n < 2 do
      n
    else
      fibonacci(n-1) + fibonacci(n-2)
    end
  end
end
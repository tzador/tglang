defmodule User do        # Defining a module 'User'
  defstruct [:name, :age] # Defining a struct with fields 'name' and 'age'

  # Defining a function 'new' that takes in name and age arguments and returns a new User struct
  def new(name, age) do
    %User{name: name, age: age}
  end

  # Defining a function 'greet' that takes in a User struct and returns a greeting message
  def greet(user) do
    "Hello, #{user.name}! You are #{user.age} years old."
  end

  # Defining a function 'change_age' that takes in a User struct and a new age value
  # and returns a new User struct with the updated age
  def change_age(user, new_age) do
    %User{user | age: new_age}
  end
end

# Creating a new User struct with name "John" and age 25
user = User.new("John", 25)

# Calling the greet function with the user struct as an argument
greeting = User.greet(user)

# Updating the age of the user to 30 using the change_age function
new_user = User.change_age(user, 30)

# Printing the updated user information
IO.puts("User #{new_user.name} is now #{new_user.age} years old.")

# Output: User John is now 30 years old.
# Define a module
defmodule Calculator do
  # Define a function that takes two numbers as parameters
  def add(a, b) do
    # Use pattern matching to ensure the parameters are numbers
    # Raise an error if the parameters are not numbers
    case {a, b} do
      {a, b} when is_number(a) and is_number(b) ->
        # Use the Kernel function `+` to add the numbers together
        a + b
      _ ->
        raise ArgumentError, "Parameters must be numbers"
    end
  end

  # Define a function that takes two numbers as parameters
  def subtract(a, b) do
    # Use pattern matching to ensure the parameters are numbers
    # Raise an error if the parameters are not numbers
    case {a, b} do
      {a, b} when is_number(a) and is_number(b) ->
        # Use the Kernel function `+` to subtract the second number from the first number
        a - b
      _ ->
        raise ArgumentError, "Parameters must be numbers"
    end
  end

  # Define a function that takes two numbers as parameters
  def multiply(a, b) do
    # Use pattern matching to ensure the parameters are numbers
    # Raise an error if the parameters are not numbers
    case {a, b} do
      {a, b} when is_number(a) and is_number(b) ->
        # Use the Kernel function `*` to multiply the two numbers together
        a * b
      _ ->
        raise ArgumentError, "Parameters must be numbers"
    end
  end

  # Define a function that takes two numbers as parameters
  def divide(a, b) do
    # Use pattern matching to ensure the parameters are numbers
    # Raise an error if the parameters are not numbers or the second number is zero
    case {a, b} do
      {a, b} when is_number(a) and is_number(b) and b != 0 ->
        # Use the Kernel function `/` to divide the first number by the second number
        a / b
      _ ->
        raise ArgumentError, "Parameters must be numbers and the second number cannot be zero"
    end
  end
end
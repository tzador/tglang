defmodule Order do
  @moduledoc """
  An Elixir module for handling orders
  """

  @order_status 1
  @order_total 0
  @order_items []

  @doc """
  Adds an item to the order_items list and updates the order_total
  """
  def add_item(item, price) do
    new_total = @order_total + price
    new_items = [@order_items, {item, price}]
    %{status: @order_status, total: new_total, items: new_items}
  end

  @doc """
  Changes the order status to completed and calculates the order total with discount
  """
  def complete_order(discount) do
    discounted_total = @order_total - (@order_total * discount / 100)
    %{status: 2, total: discounted_total, items: @order_items}
  end
end
defmodule User do
  @moduledoc """
  The User module represents a user entity with associated properties and functions.
  """

  @doc """
  Returns a new User struct with the given name and age.
  """
  def new(name, age) do
    %__MODULE__{name: name, age: age}
  end

  @doc """
  Prints out the user's greeting using their name.
  If they are under 18, it will also add a warning message.
  """
  def greet(user) do
    if user.age < 18 do
      IO.puts "Hey #{user.name}, welcome! But I must warn you, you are not supposed to be here."
    else
      IO.puts "Hey #{user.name}, welcome!"
    end
  end

  @doc """
  Adds a new role to the user's existing roles.
  """
  def add_role(user, role) do
    %{user | roles: user.roles ++ [role]}
  end

  # defining a struct for the User data type
  defstruct [:name, :age, roles: []]
end
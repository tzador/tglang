defmodule MyModule do
  # Declares a module named MyModule

  # Defines a function named "my_function" that takes two parameters,
  # "x" of type "integer" and "y" of type "float"
  #
  # The function returns the product of "x" and "y".
  def my_function(x, y) do

    # Calculates the product and saves it in a variable "result"
    result = x * y

    # Prints a message to the console with the result using interpolation
    IO.puts "The product of #{x} and #{y} is #{result}"

    # Returns the result
    result
  end

  # Defines a function named "factorial" that takes one parameter,
  # "n" of type "integer"
  #
  # The function calculates the factorial of "n" and returns the result.
  def factorial(n) do

    # Checks if "n" is equal to 0
    if n == 0 do
      # If "n" is 0, returns 1
      1

    # Otherwise, executes the following code
    else
      # Calculates the factorial and saves it in a variable "result"
      result = n * factorial(n-1)

      # Prints a message to the console with the result using interpolation
      IO.puts "The factorial of #{n} is #{result}"

      # Returns the result
      result
    end
  end

  # Defines a function named "fibonacci" that takes one parameter,
  # "n" of type "integer"
  #
  # The function calculates the nth term in the Fibonacci sequence and returns the result.
  def fibonacci(n) do
    # Checks if "n" is equal to 0 or 1
    if n == 0 || n == 1 do
      # If "n" is 0 or 1, returns 1
      1
    # Otherwise, executes the following code
    else
      # Calculates the nth term in the Fibonacci sequence and saves it in a variable "result"
      result = fibonacci(n-1) + fibonacci(n-2)

      # Prints a message to the console with the result using interpolation
      IO.puts "The #{n}th term in the Fibonacci sequence is #{result}"

      # Returns the result
      result
    end
  end
end
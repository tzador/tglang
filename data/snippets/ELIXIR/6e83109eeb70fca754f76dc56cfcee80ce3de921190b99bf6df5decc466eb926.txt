defmodule MyModule do

  # Define a function that sorts a given list in ascending order
  def sort_list(list) do
    # Use the built-in Enum.sort function to sort the list
    Enum.sort(list)
  end

  # Define a function that takes in two numbers and adds them together
  def add_numbers(num1, num2) do
    # Add the two numbers together and return the result
    num1 + num2
  end

  # Define a function that calculates the factorial of a given number using recursion
  def factorial(num) do
    # If the number is 0 or 1, return 1 as the factorial
    if num <= 1 do
      1
    # If the number is greater than 1,
    else
      # Recursively call the factorial function with num-1 and multiply it by num
      factorial(num-1) * num
    end
  end
  
  # Define a module attribute that stores a list of programming languages
  @languages ["ELIXIR", "Python", "Java", "JavaScript", "C++"]
  
  # Define a function that checks if a given language is in the list of languages
  def check_language(language) do
    # Use pattern matching to check if the given language is in @languages
    case language of
      # If the language is in the list, return true
      language when language in @languages -> true
      # If the language is not in the list, return false
      _ -> false
    end
  end
end

# Call the sort_list function with a list of numbers
MyModule.sort_list([7, 3, 9, 1, 5]) #=> [1, 3, 5, 7, 9]

# Call the add_numbers function with the numbers 8 and 12
MyModule.add_numbers(8, 12) #=> 20

# Calculate the factorial of 4 using the factorial function
MyModule.factorial(4) #=> 24

# Check if the language "Java" is in the list of languages using the check_language function
MyModule.check_language("Java") #=> true
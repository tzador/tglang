defmodule Server do
  @doc """
  This module represents a HTTP server that listens on the specified port
  and handles incoming requests.
  """

  @server_port 8080

  def start_link do
    Task.start_link(fn ->
      {:ok, socket} = :gen_tcp.listen(@server_port, [:binary, active: false])
      :gen_tcp.accept(socket)
      handle_request(socket)
    end)
  end

  # Internal function that handles incoming requests
  defp handle_request(socket) do
    {:ok, request} = :gen_tcp.recv(socket, 0)
    send_response(socket, process_request(request))
    handle_request(socket)
  end

  # Internal function that processes the incoming request
  defp process_request(request) do
    # Code for processing the request goes here
    # This example just returns a simple HTML response
    "<html><body><h1>Hello, world!</h1></body></html>"
  end

  # Internal function that sends a response back to the client
  defp send_response(socket, response) do
    :gen_tcp.send(socket, to_binary(response))
    :gen_tcp.close(socket)
  end
end
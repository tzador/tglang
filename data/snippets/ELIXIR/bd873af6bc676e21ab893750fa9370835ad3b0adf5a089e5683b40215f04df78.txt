defmodule ExampleModule do
  # Creates a struct with two fields
  defstruct [:name, :age]

  # Defines a function that takes in a list of structs and returns a list of names
  def get_names(structs) do
    for %ExampleModule{name: name, age: _age} <- structs do
      name
    end
  end

  # Defines a function that takes in a list of structs and a name and returns the age of the struct with that name
  def get_age(structs, name) do
    for %ExampleModule{name: name, age: age} <- structs, name == name do
      age
    end
  end

  # Defines a function that calculates the average age of a list of structs
  def calc_average_age(structs) do
    total_age = structs
    |> get_age_list()
    |> Enum.sum()

    total_age / length(structs)
  end

  # Defines a private function that takes in a list of structs and returns a list of ages
  defp get_age_list(structs) do
    for %ExampleModule{age: age} <- structs do
      age
    end
  end
end
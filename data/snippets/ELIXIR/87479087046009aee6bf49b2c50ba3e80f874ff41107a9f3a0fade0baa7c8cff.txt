defmodule MyClass do
  @moduledoc """
  This is an Elixir module that represents a class.
  """

  # This is a module attribute that holds a list of class instances
  @instances []

  # This is a private function that checks if an instance is duplicated in the list
  defp is_duplicate?(instance) do
    Enum.any?(@instances, fn(x) -> x == instance end)
  end

  # This is a public function that creates a new instance of the class
  def new() do
    # Create a new instance object
    instance = %{}

    # Check if the instance already exists in the list
    if !is_duplicate?(instance) do
      # Add the instance to the list
      @instances = [@instances, instance]
    else
      # Print an error message if the instance already exists
      IO.puts "Instance already exists"
    end

    # Return the new instance object
    instance
  end

  # This is a public function that deletes an instance from the list
  def delete(instance) do
    # Check if the instance exists in the list
    if is_duplicate?(instance) do
      # Remove the instance from the list
      @instances = List.delete(@instances, instance)
    else
      # Print an error message if the instance does not exist
      IO.puts "Instance does not exist"
    end
  end

  # This is a public function that retrieves all instances in the list
  def get_instances() do
    # Return the list of instances
    @instances
  end
end
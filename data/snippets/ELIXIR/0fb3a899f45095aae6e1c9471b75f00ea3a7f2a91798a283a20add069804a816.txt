defmodule Maths do
  # This module contains functions for basic mathematical operations
  #
  
  # Function to calculate the factorial of a number
  #
  #
  # Parameters:
  #   num - integer
  #
  # Output:
  #   factorial of num - integer
  def factorial(num) do
    if num == 0 do
      1
    else
      num * factorial(num - 1)
    end
  end
  
  # Function to calculate the greatest common divisor of two numbers
  #
  #
  # Parameters:
  #   num1 - integer
  #   num2 - integer
  #
  # Output:
  #   greatest common divisor of num1 and num2 - integer
  def gcd(num1, num2) do
    if num2 == 0 do
      num1
    else
      gcd(num2, rem(num1, num2))
    end
  end
  
  # Function to calculate the least common multiple of two numbers
  #
  #
  # Parameters:
  #   num1 - integer
  #   num2 - integer
  #
  # Output:
  #   least common multiple of num1 and num2 - integer
  def lcm(num1, num2) do
    (num1 * num2)/gcd(num1, num2)
  end
  
  # Function to calculate the sum of an arithmetic series
  #
  #
  # Parameters:
  #   init - integer
  #   limit - integer
  #   step - integer
  #
  # Output:
  #   sum of the arithmetic series - integer
  def arithmetic_series(init, limit, step) do
    n = (limit - init) div step
    (n * (2 * init + (n - 1) * step))/2
  end
end

# Example usage:
Maths.factorial(5)
# Output: 120

Maths.gcd(36, 24)
# Output: 12

Maths.lcm(18, 24)
# Output: 72

Maths.arithmetic_series(1, 10, 2)
# Output: 25
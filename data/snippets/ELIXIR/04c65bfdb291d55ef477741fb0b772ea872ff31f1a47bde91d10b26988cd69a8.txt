defmodule Math do
  @moduledoc """
  A module containing various math functions
  """

  # Calculating the factorial of a number using recursion
  def factorial(n) when n >= 0 do
    if n == 0 do
      1
    else
      n * factorial(n-1)
    end
  end

  # Summing up the elements of a list using recursion
  def sum_list([]), do: 0
  def sum_list([head | tail]), do: head + sum_list(tail)

  # Calculating the average of a list of numbers
  def average(list) do
    list
    |> sum_list
    |> div(length(list))
  end

  # Finding the nth Fibonacci number using tail recursion
  def fib(n) do
    fib_helper(0, 1, n)
  end

  defp fib_helper(_, result, 0), do: result
  defp fib_helper(prev1, prev2, n) do
    fib_helper(prev2, prev1 + prev2, n-1)
  end
end
defmodule User do              # Define a new module named User
  defstruct name: "John Doe",   # Define a struct with a default value for name
            age: 30,
            email: "johndoe@example.com"

  def print_info(user) do       # Define a function to print user information
    IO.puts "Name: #{user.name}"# Print user's name
    IO.puts "Age: #{user.age}", # Print user's age
    IO.puts "Email: #{user.email}"# Print user's email
  end

  def greet(user) do            # Define a function to greet the user
    IO.puts "Hello, #{user.name}!" # Print a greeting using the user's name
  end

  def change_name(user, new_name) do
    %{user | name: new_name}    # Change the name of the user and return the updated struct
  end

  def is_adult?(user) do        # Define a function to check if the user is an adult
    if user.age >= 18 do        # Check if the user's age is greater than or equal to 18
      true                      # Return true if the user is an adult
    else
      false                     # Return false if the user is not an adult
    end
  end
end

user = %User{name: "Jane Doe", age: 25, email: "janedoe@example.com"}  # Create a new user using the User struct
User.print_info(user)         # Print the user's information using the print_info function
User.greet(user)              # Greet the user using the greet function
new_user = User.change_name(user, "Jake Doe") # Change the user's name using the change_name function
User.print_info(new_user)     # Print the updated user's information
User.is_adult?(user)          # Check if the original user is an adult using the is_adult? function
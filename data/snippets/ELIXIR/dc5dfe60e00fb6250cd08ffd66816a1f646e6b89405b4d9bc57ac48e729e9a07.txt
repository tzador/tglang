# This is a module that counts the vowels in a given string using recursion

defmodule VowelCounter do
  @doc "Function that takes a string and returns the number of vowels present using recursion"
  def count_vowels(string) do
    string
    |> String.downcase() # Converts string to lowercase for easier comparison
    |> String.codepoints() # Separates string into individual characters
    |> count_vowels_acc(0) # Calls accumulator function with initial value of 0
  end

  # Private function that counts the vowels using recursion and adds to accumulator
  defp count_vowels_acc([], acc), do: acc # Base case when string is empty
  defp count_vowels_acc([c | rest], acc) do # Recursive case
    if is_vowel(c) do
      count_vowels_acc(rest, acc + 1) # Add 1 to accumulator when vowel is found
    else
      count_vowels_acc(rest, acc) # Continue recursion without adding to accumulator
    end
  end

  # Helper function to check if a character is a vowel
  defp is_vowel(c) do
    c in ~w(a e i o u)
  end
end
# This is a function that takes in a list of numbers and returns the sum of all the positive numbers in the list
defmodule PositiveSum do # Defines a module called PositiveSum
    @moduledoc """ This module contains a function to calculate sum of positive numbers in a list """

    @doc """ Returns the sum of all the positive numbers in a given list """
    @spec calc_sum([integer()]) :: integer() # Specifies the type of input and output for the function
    
    def calc_sum(numbers) do # Defines the function with a list parameter
        numbers 
        |> Enum.filter(&(&1 > 0)) # Uses the filter function to select only positive numbers
        |> Enum.sum() # Uses the sum function to calculate the sum of the filtered numbers
    end
end

# Test case for the PositiveSum module
assert PositiveSum.calc_sum([1, 2, -3, 4, 5, -6]) == 12 # Asserts that the output of the function is equal to 12

# Function call with list as input and output stored in a variable
sum = PositiveSum.calc_sum([5, 7, -9, 12, -4, 6])
IO.puts(sum) # Prints the output of the function call to the console, which is 30 in this case
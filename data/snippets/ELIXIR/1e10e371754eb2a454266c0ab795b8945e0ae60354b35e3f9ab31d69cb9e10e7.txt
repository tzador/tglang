defmodule Example do
  #Defining a function that takes in two parameters, name and age.
  def my_function(name, age) do
    #Using Elixir's pattern matching to destructure the input parameters.
    #Assigning default values for the parameters.
    {name = "Unknown", age = 0} = {name, age}
    #Using Elixir's cond statement to check different conditions.
    #If the age is below 0, it will return a custom error message.
    #If the age is equal to 0, it will print a default message.
    #If the age is above 0, it will print a personalized message with the name and age.
    cond do
      age < 0 -> IO.puts("Error: Age cannot be negative.")
      age == 0 -> IO.puts("Hello, #{name}!")
      age > 0 -> IO.puts("Hello, #{name}! You are #{age} years old.")
    end
  end

  #Calling the function with different inputs.
  my_function("John", 20) #=> Hello, John! You are 20 years old.
  my_function("Mary", 0) #=> Hello, Mary!
  my_function("Unknown", -5) #=> Error: Age cannot be negative.
end
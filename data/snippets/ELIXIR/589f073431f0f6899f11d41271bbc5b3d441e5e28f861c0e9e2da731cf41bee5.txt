defmodule User do
  # Creates a struct with the fields :name, :age, and :gender
  @enforce_keys [:name, :age, :gender]
  defstruct [:name, :age, :gender]

  # Defines a function to greet the user
  def greet(user) do
    # Matches the age field of the user struct using the `cond` statement
    cond do
      user.age > 18 ->
        "Hello #{user.name}, welcome to adulthood!"
      user.age > 13 ->
        "Hey #{user.name}, you're a teenager now!"
      _ ->
        "Hi #{user.name}, you're still a child."
    end
  end

  # Defines a function to get the user's gender preference
  def get_gender_preference(user) do
    # Pattern matches the gender field of the user struct
    {gender, _} = user.gender

    # Compares the user's gender preference and returns a message
    if gender == :male do
      "I'm sorry, #{user.name}, I am not programmed to attract males."
    else
      "Hello, #{user.name}, I am programmed to attract females."
    end
  end
end

# Creates a new user struct with name, age, and gender fields
user = %User{name: "John", age: 25, gender: {:male}}

# Invokes the `greet` function on the user struct
User.greet(user)

# Invokes the `get_gender_preference` function on the user struct
User.get_gender_preference(user)
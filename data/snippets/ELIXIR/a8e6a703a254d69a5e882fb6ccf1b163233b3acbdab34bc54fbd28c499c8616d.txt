defmodule Example do
  # This is a module declaration
  use Agent # This is a macro invocation
  import String # This is a module import

  @processes %{count: 0} # This is a module attribute

  # This function creates a new agent and starts it in a separate process
  def start do
    Agent.start_link(fn -> %{} end, name: :example_agent)
  end

  # This function adds a new process to the @processes attribute
  def add_process(pid) do
    new_processes = Map.put(@processes, :count, @processes[:count] + 1)
    @processes = new_processes
  end

  # This function retrieves the total number of processes from the @processes attribute
  def total_processes do
    @processes[:count]
  end

  # This function sends a message to the agent process to add a new process
  def send_message(pid) do
    Agent.update(pid, fn state -> add_process(state) end)
  end
end
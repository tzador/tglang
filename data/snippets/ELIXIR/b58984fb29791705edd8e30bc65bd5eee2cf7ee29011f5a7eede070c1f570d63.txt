defmodule User do
  @moduledoc """
  This module stores user information and provides functions to manipulate it.
  """

  # Struct to represent a user with name, age, and gender fields
  defstruct name: nil, age: nil, gender: nil

  # Function to create a new user with given name, age, and gender
  # Returns a new user struct
  def create_user(name, age, gender) do
    %User{name: name, age: age, gender: gender}
  end

  # Function to get the name from a user
  # Returns the name field as a string
  def get_name(%User{name: name}) do
    name
  end

  # Function to get the age from a user
  # Returns the age field as an integer
  def get_age(%User{age: age}) do
    age
  end

  # Function to get the gender from a user
  # Returns the gender field as a string
  def get_gender(%User{gender: gender}) do
    gender
  end

  # Function to update the name field of a user
  # Takes in a user struct and a new name
  # Returns a new user struct with updated name
  def update_name(%User{age: age, gender: gender}, new_name) do
    %User{name: new_name, age: age, gender: gender}
  end

  # Function to update the age field of a user
  # Takes in a user struct and a new age
  # Returns a new user struct with updated age
  def update_age(%User{name: name, gender: gender}, new_age) do
    %User{name: name, age: new_age, gender: gender}
  end

  # Function to update the gender field of a user
  # Takes in a user struct and a new gender
  # Returns a new user struct with updated gender
  def update_gender(%User{name: name, age: age}, new_gender) do
    %User{name: name, age: age, gender: new_gender}
  end
end
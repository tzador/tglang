defmodule Example do  #Defines a module with the name Example

  @module_keyword :something #Sets the value of the module keyword to :something

  @module_constant 10 #Sets the value of the module constant to 10
  
  @doc "A struct that represents a person" #Documentation for the Person struct
  defstruct name: "John", age: 30, gender: "male" #Defines a structure called Person with default values for name, age, and gender
  
  def run do #Defines a function called run
    IO.puts "This is the run function" #Prints the message "This is the run function" to the console
    result = do_something(5) #Calls the do_something function with the argument 5 and assigns the result to the variable result
    IO.puts result #Prints the result to the console
    send_message("Hello") #Calls the send_message function with the argument "Hello"
  end
  
  defp do_something(x) do #Defines a private function called do_something with the parameter x
    if x < 10 do #Checks if x is less than 10
      x * 2 #Returns x multiplied by 2
    else
      x / 2 #Returns x divided by 2
    end
  end
  
  def send_message(msg) do #Defines a function called send_message with the parameter msg
    IO.puts "Sending message: #{msg}" #Prints the message "Sending message: [msg]"
  end
  
  defmodule Nested do #Defines a nested module called Nested
    use Some.Module, option: :value #Uses the Some.Module module with the option :value
    
    def hello(name) do #Defines a function called hello with the parameter name
      IO.puts "Hello #{name}!" #Prints the message "Hello [name]!"
    end
  end
  
end
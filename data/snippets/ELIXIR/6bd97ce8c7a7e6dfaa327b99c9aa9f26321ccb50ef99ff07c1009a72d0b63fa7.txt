defmodule MyModule do
  @doc """
  This is a module that calculates the power of a given number.
  """
  
  # Function to calculate power using tail recursion.
  def power(base, exp) do
    power_internal(base, exp, 1)
  end
  
  # Internal function for tail recursion.
  defp power_internal(_, 0, acc), do: acc
  defp power_internal(base, exp, acc) do
    power_internal(base, exp - 1, acc * base)
  end
  
  # Function to print the calculation result with annotations.
  def output(base, exp) do
    IO.puts "Calculating #{base} ^ #{exp}..."
    IO.puts "The result is #{power(base, exp)}"
  end
end

# Example output
MyModule.output(2, 3)

# Output:
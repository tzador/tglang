defmodule User do        # Defines a new module named 'User'
  @moduledoc """
  This module contains functions related to user data.
  """

  @user_fields [:name, :age, :email]        # Declares a list of user fields

  defstruct @user_fields       # Creates a struct with the user fields as its attributes

  @doc """
  Creates a new user with the specified fields.
  Returns a %User{} struct.
  """
  def new(fields), do: %User{fields | __struct__: __MODULE__}       # Creates a function to create a new user

  @doc """
  Prints the user's information.
  Returns a string.
  """
  def print_info(user), do:
    user
    |> Map.take(@user_fields)       # Picks out the specified fields from the user struct
    |> Enum.map(fn {key, value} -> "#{String.capitalize(to_string(key))}: #{inspect(value)}" end)        # Formats the information as key-value pairs
    |> Enum.join("\n")      # Joins the pairs with a newline character

  @doc """
  Updates the specified field(s) of the user with the given values.
  Returns a %User{} struct.
  """
  def update(user, fields), do: %{user | fields}      # Updates the user struct with the new values

  @doc """
  Checks if the user is of legal voting age (18 in most countries).
  Returns a boolean value.
  """
  def is_legal_voting_age?(user), do: user.age >= 18       # Checks if the user is of legal voting age

end
# This is a function that calculates the factorial of a given number
# Input: Integer - the number whose factorial we want to calculate
# Output: Integer - the factorial of the given number

def factorial(num) do
  if num == 0 do
    1
  else
    num * factorial(num-1)
  end
end

# This is a function that calculates the nth Fibonacci number using recursion
# Input: Integer - the index of the number in the Fibonacci sequence
# Output: Integer - the nth Fibonacci number

def fibonacci(n) do
  if n == 0 or n == 1 do
    n
  else
    fibonacci(n-1) + fibonacci(n-2)
  end
end

# This is a function that checks if a given string is a palindrome
# Input: String - the given string to check
# Output: Boolean - true if the string is a palindrome, false otherwise

def palindrome?(str) do
  str == String.reverse(str)
end

# This is a function with multiple clauses that returns the total length of a list or a string
# Input: List or String - the list or string whose length we want to find
# Output: Integer - the total length of the given list or string

def total_length([]) do
  0
end

def total_length([head | tail]) do
  1 + total_length(tail)
end

def total_length(str) do
  String.length(str)
end

# This is a module that contains functions for creating and manipulating matrices
# Input: None
# Output: None

defmodule Matrix do
  # Function for creating a matrix with given dimensions and initial value
  # Input: Integer - number of rows, Integer - number of columns, Integer - initial value
  # Output: List - the created matrix
  
  def create_matrix(rows, cols, init) do
    matrix = []
    for i <- 0..(rows-1) do
      row = for j <- 0..(cols-1) do
        init
      end
      matrix = [matrix | [row]]
    end
    matrix
  end
  
  # Function for adding two matrices together
  # Input: List - first matrix, List - second matrix
  # Output: List - the sum of the two matrices
  
  def add_matrices(matrix1, matrix2) do
    for i <- 0..(length(matrix1)-1) do
      for j <- 0..(length(matrix1[i])-1) do
        matrix1[i][j] + matrix2[i][j]
      end
    end
  end
  
  # Function for multiplying two matrices together
  # Input: List - first matrix, List - second matrix
  # Output: List - the product of the two matrices
  
  def multiply_matrices(matrix1, matrix2) do
    for i <- 0..(length(matrix1)-1) do
      for j <- 0..(length(matrix2[0])-1) do
        sum = 0
        for k <- 0..(length(matrix1[0])-1) do
          sum = sum + (matrix1[i][k] * matrix2[k][j])
        end
        sum
      end
    end
  end
  
  # Function for transposing a matrix
  # Input: List - the matrix to be transposed
  # Output: List - the transposed matrix
  
  def transpose_matrix(matrix) do
    for i <- 0..(length(matrix)-1) do
      for j <- 0..(length(matrix)-1) do
        matrix[j][i]
      end
    end
  end
end
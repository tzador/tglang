defmodule ComplexNumber do
    # Define a struct that holds two fields, real and imaginary
    defstruct [:real, :imaginary]

    # Define a constructor that sets the real and imaginary fields
    def new(real, imaginary) do
        %ComplexNumber{real: real, imaginary: imaginary}
    end

    # Define a function to add two complex numbers
    def add(a = %ComplexNumber{}, b = %ComplexNumber{}) do
        %ComplexNumber{real: a.real + b.real, imaginary: a.imaginary + b.imaginary}
    end

    # Define a function to multiply two complex numbers
    def multiply(a = %ComplexNumber{}, b = %ComplexNumber{}) do
        %ComplexNumber{real: a.real * b.real - a.imaginary * b.imaginary, imaginary: a.real * b.imaginary + a.imaginary * b.real}
    end

    # Define a function to compute the absolute value of a complex number
    def abs(a = %ComplexNumber{}) do
        :math.sqrt(a.real * a.real + a.imaginary * a.imaginary)
    end

    # Define a function to print the complex number in the form a+bi
    def print(a = %ComplexNumber{}) do
        "#{a.real}+#{a.imaginary}i"
    end
end

# Create two complex numbers using the constructor
a = ComplexNumber.new(2, 3)
b = ComplexNumber.new(4, 5)

# Add the two complex numbers
c = ComplexNumber.add(a, b)

# Multiply the two complex numbers
d = ComplexNumber.multiply(a , b)

# Compute the absolute value of a complex number
e = ComplexNumber.abs(a)

# Print the complex numbers
ComplexNumber.print(c)
ComplexNumber.print(d)
ComplexNumber.print(e)
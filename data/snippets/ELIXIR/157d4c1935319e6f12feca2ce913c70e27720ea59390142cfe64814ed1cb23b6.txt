defmodule User do         ## Defines a new elixir module called User
  @moduledoc """
  A user record that stores personal information.
  """                     
  @type t :: %__MODULE__{
  name: String.t,
  age: integer,
  email: String.t,
  address: %{street: String.t, city: String.t, country: String.t},
  status: atom
  }
 
  @spec new(String.t, integer, String.t, %{String.t, String.t, String.t}, atom) :: t
  def new(name, age, email, address, status) do  ## Defines a function to create a new user record
    %__MODULE__{name: name, age: age, email: email, address: address, status: status}  ## Uses struct syntax to create the record
  end

  def print_personal_info(user) do  ## Defines a function to print the user's personal information
    IO.puts "Name: #{user.name}, Age: #{user.age}, Email: #{user.email}"  ## Prints the user's name, age, and email using string interpolation
    IO.puts "Address: #{user.address.street}, #{user.address.city}, #{user.address.country}"  ## Prints the user's address using dot notation
    IO.puts "Status: #{user.status}" ## Prints the user's status
  end
end

user = User.new("John Smith", 25, "johnsmith@example.com", %{street: "123 Main St.", city: "New York", country: "USA"}, :active)  ## Creates a new user record using the new function

User.print_personal_info(user)  ## Calls the print_personal_info function on the user record to print their personal information

# Output:
# Name: John Smith, Age: 25, Email: johnsmith@example.com
# Address: 123 Main St., New York, USA
# Status: active
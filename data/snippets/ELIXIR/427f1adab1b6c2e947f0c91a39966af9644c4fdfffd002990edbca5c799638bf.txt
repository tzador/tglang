defmodule Math do
  # This is a module that handles advanced math operations
  # @moduledoc Brief overview of the module

  # @doc square function squares a given number
  # @param num [integer] the number to be squared
  # @return [integer] the squared value of the given number
  def square(num) do
    num * num
  end

  # @doc exponent function raises a number to the given power
  # @param base [integer] the number to be raised
  # @param power [integer] the power to raise the number to
  # @return [integer] the value of the number raised to the given power
  def exponent(base, power) do
    if power == 0 do
      1
    else
      base * exponent(base, power - 1)
    end
  end

  # @doc factorial function calculates the factorial of a given number
  # @param num [integer] the number to calculate the factorial for
  # @return [integer] the factorial value of the given number
  def factorial(num) do
    if num == 0 do
      1
    else
      num * factorial(num - 1)
    end
  end

  # @doc fibonacci function calculates the nth number in the Fibonacci sequence
  # @param n [integer] the index of the number to be calculated
  # @return [integer] the nth number in the Fibonacci sequence
  def fibonacci(n) do
    if n == 1 or n == 2 do
      1
    else
      fibonacci(n - 1) + fibonacci(n - 2)
    end
  end
end
# This function takes in a list of integers, adds 2 to each element, and returns the updated list.
def add_two(list \\ []) do
  for num <- list do
    num + 2
  end
end

# This function takes in a number and returns the square of that number.
def square(num) do
  num * num
end

# This function takes in two numbers and returns the maximum of the two.
def max(num1, num2) do
  if num1 > num2 do
    num1
  else
    num2
  end
end

# This function iterates through a list of strings and concatenates them together.
def concat(list \\ []) do
  list |> Enum.join("")
end

# This function prints out the result of multiplying a list of numbers by 2.
def print_doubled(list) do
  list |> Enum.map(fn x -> x * 2 end) |> IO.inspect()
end

# This function creates a map from a list of keywords and values.
def create_map(keywords, values) do
  for keyword <- keywords do
    %{keyword => values}
  end
end

# This function finds the minimum value in a list of integers and returns it.
def find_min(list) do
  list |> Enum.min()
end

# This function checks if a number is prime or not.
def is_prime(num) do
  for i <- 2..(num - 1), rem(num, i) == 0 do
    return false
  end
  true
end

# This function recursively calculates the Fibonacci sequence up to a given number.
def fib(num) do
  if num < 2 do
    num
  else
    fib(num - 1) + fib(num - 2)
  end
end
#Function to check if a list contains any negative numbers
defp check_negative_numbers(list) do 
  for num <- list do 
    if num < 0 do 
      return true 
    end 
  end 
  return false 
end

#Function to find the average of positive numbers in a list
defp average_positive_numbers(list) do 
  total = 0 
  count = 0 
  for num <- list do 
    if num > 0 do 
      total = total + num 
      count = count + 1 
    end 
  end 
  average = total / count 
  return average 
end

#Function to calculate the factorial of a number
defp factorial(num) do 
  if num == 0 do 
    return 1 
  else 
    return num * factorial(num - 1) 
  end 
end

#Function to print a pyramid pattern
defp print_pyramid(height) do 
  for i <- 1..height do 
    for j <- 1..height - i do 
      print " " 
    end 
    for j <- 1..i do 
      print "*" 
      print " " 
    end 
  end 
end

#Function to merge two sorted lists
defp merge_lists(list1, list2) do 
  merged = [] 
  while list1 != [] && list2 != [] do 
    if hd(list1) < hd(list2) do 
      elem = hd(list1) 
      list1 = tl(list1) 
      merged = [elem | merged] 
    else 
      elem = hd(list2) 
      list2 = tl(list2) 
      merged = [elem | merged] 
    end 
  end 
  merged = merge(reverse(list1), reverse(list2), merged) 
  return merged 
end

#Function to initialize a map with default values
defp initialize_map(values, default) do 
  map = %{} 
  for key <- values do 
    map = Map.put(map, key, default) 
  end 
  return map 
end
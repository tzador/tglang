defmodule MyModule do   # Define a module named MyModule
  def my_function(arg1, arg2) do  # Define a function named my_function with two arguments
    for i <- 1..10, do: arg1 + arg2 + i  # Use a for loop to iterate through the range 1 to 10 and add the arguments and the current iteration value
  end

  def my_function(arg1, arg2) when is_integer(arg1) do  # Define an alternative function clause with a guard that checks if arg1 is an integer
    for i <- 1..arg1, do: arg1 + arg2 + i  # Use a for loop to iterate through the range 1 to arg1 and add the arguments and the current iteration value
  end

  def my_function(arg1, arg2) when is_binary(arg1) do  # Define another alternative function clause with a guard that checks if arg1 is a binary
    String.split(arg1, "")  # Use the String.split function to split the binary into a list of characters
    |> Enum.map(fn x -> String.to_integer(x) end)  # Use the Enum.map function to convert each character in the list to an integer using the String.to_integer function
    |> Enum.sum()  # Use the Enum.sum function to calculate the sum of all the integers in the list
  end
end

# Usage:
MyModule.my_function(5, 10)  # Outputs 75
MyModule.my_function(3, true)  # Outputs 15
MyModule.my_function("123", 5)  # Outputs 6
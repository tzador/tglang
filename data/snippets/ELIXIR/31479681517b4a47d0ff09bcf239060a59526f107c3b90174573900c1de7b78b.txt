defmodule User do # creating a module called User
  @name # defining a module attribute called name

  # defining a function that prints the name of user
  def print_name() do
    IO.puts(@name)
  end

  # defining a public function that sets and prints the name of user
  def set_and_print_name(name) do
    @name = name # setting the module attribute with the given value
    print_name() # calling the previous function to print the name
  end

  # defining a function that returns the type of user
  def type(user) do
    # pattern matching to check the user type
    case user do
      # if the user is an admin, it will return "Admin"
      %User{role: "admin"} -> "Admin"
      # if the user is a moderator, it will return "Moderator"
      %User{role: "moderator"} -> "Moderator"
      # if the user is a standard user, it will return "Standard User"
      _ -> "Standard User"
    end
  end
end

# creating an instance of the User module
user = %User{role: "admin"}

# calling the function to set and print the name of user
User.set_and_print_name("John Doe")

# calling the function to print the type of user
User.type(user)
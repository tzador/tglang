defmodule MyModule do
  @moduledoc """
  This module does calculations on a list of numbers, outputs the sum and difference.
  """

  def add_numbers(list) do
    """
    This function takes in a list of numbers and adds them all together.
    Args:
      list (list): A list of numbers to be added together.
    Returns:
      sum (integer): The sum of all the numbers in the list.
    """
    sum = Enum.reduce(list, 0, fn num, acc -> num + acc end)
    IO.puts("The sum is #{sum}")
    sum
  end

  def subtract_numbers(list) do
    """
    This function takes in a list of numbers and subtracts them from each other.
    Args:
      list (list): A list of numbers to be subtracted from each other.
    Returns:
      difference (integer): The difference of all the numbers in the list.
    """
    difference = Enum.reduce(list, hd(list), fn num, acc -> acc - num end)
    IO.puts("The difference is #{difference}")
    difference
  end
end

numbers = [1, 2, 3, 4, 5]
MyModule.add_numbers(numbers) # Output: The sum is 15
MyModule.subtract_numbers(numbers) # Output: The difference is 3
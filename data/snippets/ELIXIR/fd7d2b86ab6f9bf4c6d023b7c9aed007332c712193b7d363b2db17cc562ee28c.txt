defmodule ComplexMath do
  def add(a,b) do #adds two numbers together and returns the result
    a + b
  end
  
  def multiply(a,b) do #multiplies two numbers together and returns the result
    a * b
  end
  
  def divide(a,b) do #divides the first number by the second and returns the result
    a / b
  end
  
  def square(n) do #calculates the square of a number and returns the result
    n * n
  end
  
  def cube(n) do #calculates the cube of a number and returns the result
    n * n * n
  end
  
  def power(n,exp) do #calculates the power of a number with a given exponent and returns the result
    n |> Enum.reduce(1,fn(_,_)-> n*tr end)
  end
  
  def square_root(n) do #calculates the square root of a number and returns the result
    :math.sqrt(n)
  end
  
  def logarithm(n) do #calculates the natural logarithm of a number and returns the result
    :math.log(n)
  end
  
   def factorial(n) do #calculates the factorial of a number and returns the result
     Enum.reduce(1,1..n,fn x,b-> x*b end)
  end
end
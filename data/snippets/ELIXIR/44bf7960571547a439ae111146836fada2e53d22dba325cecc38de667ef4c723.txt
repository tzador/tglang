defmodule Calculator do # defining a module called Calculator

  @doc """
  Calculates the factorial of a given number recursively.
  """

  def factorial(n) when n < 0, do: raise ArgumentError, "n cannot be negative" # handling negative input

  def factorial(0), do: 1 # the base case

  def factorial(n), do: n * factorial(n - 1) # recursive function call
end

IO.puts("Enter a number: ")
input = IO.gets() # getting input from user

case String.to_integer(input) do # converting input string to integer and using a case statement
  {:error, _reason} -> IO.puts("Invalid input. Please enter an integer.")
  number -> IO.puts("The factorial of #{input} is: " <> Integer.to_string(Calculator.factorial(number))) # calling the factorial function and printing output
end
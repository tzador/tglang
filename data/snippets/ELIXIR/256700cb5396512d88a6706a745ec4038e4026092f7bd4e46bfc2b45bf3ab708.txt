# This is a comment line in Elixir

defmodule Math do
  # Define a function to find the perimeter of a rectangle
  def perimeter(width, height) do
    2 * (width + height)
  end

  # Define a function to find the area of a rectangle
  def area(width, height) do
    width * height
  end

  # Define a function that takes in a list of numbers and returns the sum
  def sum_list(nums) do
    Enum.reduce(nums, 0, fn x, acc ->
      x + acc
    end)
  end

  # Define a function to find the factorial of a given number
  def factorial(n) do 
    # Base case: if n is 0 or 1, factorial is 1
    if n == 0 || n == 1 do
      1
    # Recursive case: multiply n by the factorial of n-1
    else 
      n * factorial(n-1) 
    end
  end

  # Define a function to check if a given number is prime
  def is_prime(n) do
    # Base case: if n is less than or equal to 1, it is not prime
    if n <= 1 do 
      false
    else
      # Iterate through all numbers from 2 to the square root of n
      for i <- 2.. round(:math.sqrt(n)), do: n % i == 0 
      |> Enum.all?(fn prime -> prime == false end) # Check if any number was a multiple
    end
  end
end

# Call the functions to find the perimeter and area of a rectangle with width 5 and height 10
Math.perimeter(5, 10)
Math.area(5, 10)

# Call the function to find the sum of a list of numbers
Math.sum_list([1, 2, 3, 4])

# Call the function to find the factorial of 5
Math.factorial(5)

# Call the function to check if 7 is prime
Math.is_prime(7)
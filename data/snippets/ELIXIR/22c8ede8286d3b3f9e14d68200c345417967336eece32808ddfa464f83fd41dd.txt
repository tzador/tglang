defmodule Math do # create Math module
  @moduledoc """
  This module contains functions for performing various mathematical operations.
  """
  # define add function that takes in two numbers and returns their sum
  @doc """
  Adds two numbers and returns the result.
  """
  def add(x, y) do
    x + y
  end

  # define multiply function that takes in two numbers and returns their product
  @doc """
  Multiplies two numbers and returns the result.
  """
  def multiply(x, y) do
    x * y
  end

  # define divide function that takes in two numbers and returns their quotient
  @doc """
  Divides two numbers and returns the result.
  """
  def divide(x, y) do
    x / y
  end

  # define power function that takes in a base and exponent and returns the result
  @doc """
  Raises a number to the power of an exponent and returns the result.
  """
  def power(base, exponent) do
    result = 1 # initialize result to 1
    # loop through exponent times
    exponent
    |> Enum.times()
    |> Enum.each(fn _ ->
      result = result * base
    end)
    result # return final result
  end
end
defmodule Stack do
  # This module defines a stack data structure.

  # The stack data structure can hold any type of data.
  @type t :: list()

  # The stack is initially empty.
  @initial_value []

  # Public API
  @doc """
  Adds an element to the top of the stack.
  """
  @spec push(t, any()) :: t
  def push(stack, element) do
    [element | stack]
  end

  @doc """
  Removes and returns the top element of the stack.
  """
  @spec pop(t) :: {:ok, any()} | :error
  def pop([h | t]) do
    {:ok, h, t}
  end
  def pop([]), do: :error

  @doc """
  Returns the top element of the stack without removing it.
  """
  @spec peek(t) :: {:ok, any()} | :error
  def peek([h | _]) do
    {:ok, h}
  end
  def peek([]), do: :error
end
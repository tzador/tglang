defmodule Bank do

  @doc """
  This module represents a bank account and provides functions for managing it.
  """

  @moduledoc false
  # This annotation hides the module's documentation from generated documentation.

  # State of the Bank Account
  @type state :: %{name: String.t(), account_number: String.t(), balance: float()}

  # Create a new Bank Account
  @spec new_state() :: state
  def new_state do
    %{
      name: "",
      account_number: "",
      balance: 0.0
    }
  end

  # Deposits money into a Bank Account
  @spec deposit(state, float) :: state
  def deposit(account, amount) do
    %{account | balance: account.balance + amount}
  end

  # Withdraws money from a Bank Account
  @spec withdraw(state, float) :: state
  def withdraw(account, amount) do
    %{account | balance: account.balance - amount}
  end

  # Transfers money from one Bank Account to another
  @spec transfer(state, state, float) :: {state, state}
  def transfer(account1, account2, amount) do
    new_balance1 = account1.balance - amount
    new_balance2 = account2.balance + amount
    %{account1 | balance: new_balance1} -> %{account2 | balance: new_balance2}
  end
end
defmodule ExampleModule do
  @moduledoc """ This is a sample module in Elixir """

  # Function for adding two numbers
  @doc """
  Adds two numbers together
  Params:
    x(int): First number
    y(int): Second number
  Returns:
    int: Sum of x and y
  """
  def add(x, y) when is_number(x) and is_number(y) do
    x + y
  end

  # Function for converting string to integer
  @doc """
  Converts string to integer
  Params:
    s(String): String to be converted to integer
  Returns:
    int: Integer value of the string
  """
  def str_to_int(s) when is_binary(s) do
    String.to_integer(s)
  end

  # Function for checking if a list contains a certain element
  @doc """
  Checks if a list contains a certain element
  Params:
    list(list): List to be checked
    element(any): Element to be searched for
  Returns:
    boolean: True if element is present, false otherwise
  """
  def contains(list, element) when is_list(list) do
    Enum.member?(list, element)
  end

  # Function for calculating the factorial of a number
  @doc """
  Calculates the factorial of a number
  Params:
    n(int): Number to find factorial of
  Returns:
    int: Factorial value of n
  """
  def factorial(n) when is_number(n) and n > 0 do
    n * factorial(n-1)
  end
end
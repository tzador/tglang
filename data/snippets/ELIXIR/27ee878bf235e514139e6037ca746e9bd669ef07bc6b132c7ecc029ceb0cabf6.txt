# Define a module called "Calculator"
defmodule Calculator do

  # Define a function that takes in two numbers as parameters
  def add(a, b) do
    # Add the two numbers and return the result
    a + b
  end

  # Define a function that takes in two numbers as parameters
  def subtract(a, b) do
    # Subtract the second number from the first number and return the result
    a - b
  end

  # Define a function that takes in two numbers as parameters
  def multiply(a, b) do
    # Multiply the two numbers and return the result
    a * b
  end

  # Define a function that takes in two numbers as parameters
  def divide(a, b) do
    # Check if the second number is equal to 0, if not, divide the first number by the second number
    if b != 0 do
      a / b
    else
      # If the second number is 0, raise an error
      raise "Division by 0 is not allowed"
    end
  end

  # Define a function that takes in a list of numbers as a parameter
  def average(numbers) do
    # Calculate the total sum of numbers in the list
    total = Enum.sum(numbers)
    # Calculate the length of the list
    count = length(numbers)
    # Calculate the average by dividing the total sum by the length
    total / count
  end
end

# Create an instance of the Calculator module
my_calculator = Calculator.new()

# Call the add function with 2 and 3 as parameters and print the result
result = my_calculator.add(2, 3)
IO.puts("2 + 3 = #{result}")

# Call the subtract function with 5 and 2 as parameters and print the result
result = my_calculator.subtract(5, 2)
IO.puts("5 - 2 = #{result}")

# Call the multiply function with 4 and 6 as parameters and print the result
result = my_calculator.multiply(4, 6)
IO.puts("4 * 6 = #{result}")

# Call the divide function with 8 and 2 as parameters and print the result
result = my_calculator.divide(8, 2)
IO.puts("8 / 2 = #{result}")

# Call the average function with a list of numbers as a parameter and print the result
numbers = [2, 4, 6, 8, 10]
result = my_calculator.average(numbers)
IO.puts("The average of [2, 4, 6, 8, 10] is #{result}")
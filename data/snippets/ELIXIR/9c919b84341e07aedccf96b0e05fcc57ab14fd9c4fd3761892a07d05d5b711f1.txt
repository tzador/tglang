defmodule Person do
  @moduledoc """
  A module that represents a person.
  """
  @doc """
  A struct that holds information about a person.
  """
  defstruct first_name: nil,
            last_name: nil,
            age: nil,
            occupation: nil

  @doc """
  Creates a new person with the given information.
  """
  def new(first_name, last_name, age, occupation) do
    %Person{
      first_name: first_name,
      last_name: last_name,
      age: age,
      occupation: occupation
    }
  end

  @doc """
  Changes the person's occupation.
  """
  def change_occupation(person, new_occupation) do
    %{person | occupation: new_occupation}
  end

  @doc """
  Prints out the person's full name.
  """
  def print_full_name(person) do
    IO.puts "#{person.first_name} #{person.last_name}"
  end

  @doc """
  Calculates the person's age in dog years.
  """
  def get_dog_age(person) do
    person.age * 7
  end
end

# Creating a new person with the given information
person = Person.new("John", "Doe", 25, "Software Engineer")

# Changing the person's occupation
new_person = Person.change_occupation(person, "Web Developer")

# Printing out the person's full name
Person.print_full_name(new_person)

# Getting the person's age in dog years
dog_age = Person.get_dog_age(person)

# Printing out the person's age in dog years
IO.puts("The person's age in dog years is #{dog_age}")
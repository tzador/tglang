defmodule Database do
  use GenServer
  @timeout 10_000

  defstruct [:data]

  ## States
  def start_link(opts) do
    GenServer.start_link(__MODULE__, opts, name: :database)
  end

  def init([opts]) do
    {:ok, %__MODULE__{data: opts[:data]}}
  end

  ## Calls
  def insert(sleep_time) do
    GenServer.cast(:database, {:insert, :data})
  end

  def insert_and_return(sleep_time) do
    GenServer.call(:database, {:insert_return, :data}, @timeout)
  end

  ## Server callbacks
  def handle_cast({:insert, data}, state) do
    updated_state = %__MODULE__{state | data: data}
    {:noreply, updated_state}
  end

  def handle_call({:insert_return, data}, _from, state) do
    {:reply, {:ok, data}, state}
  end
end
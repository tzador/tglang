defmodule MyClass do
  @moduledoc """
  This is a module that defines the behavior of a class.
  """
  # This is a comment within a module

  # Defining a struct for the class with fields
  defstruct name: nil, age: nil, hobbies: nil

  # Defining a class method with a default argument
  def class_method(arg1 \\ "default") do
    IO.puts("#{arg1}")
  end

  # Defining a private function within the module
  defp private_function(arg) do
    IO.puts("This is a private function that cannot be accessed outside the module.")
  end

  # Defining a public function that calls the private function
  def public_function(arg) do
    private_function(arg)
  end

  # Defining an enum with a list of fruits
  @fruits ~w(apple banana orange)

  # Defining a function that prints all the fruits
  def print_fruits do
    Enum.each(@fruits, fn fruit ->
      IO.puts("Fruit: #{fruit}")
    end)
  end

  # Defining a module attribute
  @my_attribute "My Attribute"

  # Defining a function that prints the attribute
  def print_attribute do
    IO.puts("Attribute: #{@my_attribute}")
  end
end
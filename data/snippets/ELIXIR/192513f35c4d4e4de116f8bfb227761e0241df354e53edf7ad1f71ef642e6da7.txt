defmodule Example do
  # This function takes in a list of numbers and multiplies each number by its index
  # Input: list of integers
  # Output: new list of multiplied numbers
  def index_multiplier(list) do
    Enum.with_index(list, 0, fn (num, index) -> num * index end)
  end

  # This function checks if a word is a palindrome or not
  # Input: string
  # Output: boolean
  def is_palindrome(word) do
    word == String.reverse(word)
  end

  # This function creates a new list with only even numbers from the given list
  # Input: list of integers
  # Output: new list of even numbers
  def even_numbers(list) do
    Enum.filter(list, fn num -> rem(num, 2) == 0 end)
  end

  # This function checks if a given number is a prime number
  # Input: integer
  # Output: boolean
  def is_prime(number) do
    # A prime number is only divisible by 1 and itself
    # We start checking from 2 as no number is divisible by 0
    # We only need to check up to the square root of the number
    # If the number is divisible by any number from 2 to its square root, then it is not prime
    for n <- 2..Math.floor(Math.sqrt(number)), rem(number, n) == 0 do
      return false
    end
    true
  end
end
defmodule User do
  @doc """
  This module represents a user and their information.
  """

  @required_fields [:username, :email]
  @optional_fields [:first_name, :last_name, :bio]

  defstruct [:username, :email, :first_name, :last_name, :bio]

  @doc """
  Creates a new user with the given information.
  The username and email are required fields.
  """
  @spec create_user(
    username: String.t(),
    email: String.t(),
    first_name: String.t() | nil,
    last_name: String.t() | nil,
    bio: String.t() | nil
  ) :: User.t()
  def create_user(username, email, first_name \\ nil, last_name \\ nil, bio \\ nil) do
    %User{
      username: username,
      email: email,
      first_name: first_name,
      last_name: last_name,
      bio: bio
    }
  end

  @doc """
  Updates the given user with the new information.
  Only updates fields that are provided.
  """
  @spec update_user(
    user :: User.t(),
    username: String.t() | nil,
    email: String.t() | nil,
    first_name: String.t() | nil,
    last_name: String.t() | nil,
    bio: String.t() | nil
  ) :: User.t()
  def update_user(user, username \\ nil, email \\ nil, first_name \\ nil, last_name \\ nil, bio \\ nil) do
    %User{
      user | Map.from(@required_fields),
      username: username || user.username,
      email: email || user.email,
      first_name: first_name || user.first_name,
      last_name: last_name || user.last_name,
      bio: bio || user.bio
    }
  end
end
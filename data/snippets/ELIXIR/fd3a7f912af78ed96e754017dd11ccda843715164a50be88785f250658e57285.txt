defmodule MyModule do
  require Logger
  import IO, only: [puts: 1]

  @my_constant 10
  @my_map %{
    key1: "value1",
    key2: "value2"
  }

  def greet(name) do
    name
    |> String.capitalize()
    |> (fn(x) -> "Hello, #{x}!" end).()
    |> puts()
    |> (fn(y) -> y === :ok end).()
  end

  def convert_to_binary(num) do
    case num do
      0 -> "0"
      1 -> "1"
      n when n < 0 -> "Negative numbers cannot be converted to binary."
      n ->
        remainder = rem(n, 2)
        convert_to_binary(div(n, 2)) <> "#{remainder}"
    end
  end

  defp print_map_value(key) do
    Logger.info("The value for key #{inspect key} is #{@my_map[key]}")
  end

  def set_constant(constant) when is_number(constant) do
    @my_constant = constant
  end
end
defmodule User do
  @moduledoc """
  This module represents a user in our application.
  It contains functions for creating, updating, and deleting user information.
  """
  @doc """
  This function creates a new user with the given name, email, and password.
  If the name or email is not provided, an error is raised.
  """
  def create(name, email, password) do
    if name == nil or email == nil do
      raise "Name and email are required for creating a user."
    else
      %{"name" => name, "email" => email, "password" => password}
    end
  end

  @doc """
  This function updates the email of the given user.
  If the user does not exist, an error is raised.
  """
  def update_email(user, new_email) do
    case user do
      %{"name" => name, "email" => _} ->
        %{"name" => name, "email" => new_email}
      _ ->
        raise "User does not exist."
    end
  end

  @doc """
  This function deletes the user with the given email.
  If the user does not exist, an error is raised.
  """
  def delete(email) do
    if email == nil do
      raise "Email is required for deleting a user."
    else
      IO.puts("User with email #{email} has been deleted.")
    end
  end
end
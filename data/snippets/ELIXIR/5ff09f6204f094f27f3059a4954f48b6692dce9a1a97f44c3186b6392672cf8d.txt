defmodule Example do
  # Defines a new module called Example, which is a container for functions and data.
  
  @moduledoc """
  This is an example module with a function to calculate the factorial of a number.
  """
  
  # This macro is used to annotate the module documentation.
  # The documentation can be accessed using the __MODULE__.moduledoc/0 function.
  
  @doc """
  Calculates the factorial of a given number.
  
  ## Examples
      iex> Example.factorial(5)
      120
      iex> Example.factorial(0)
      1
  
  ## Parameters
    - `n`: The number whose factorial is to be calculated.
  
  ## Returns
    The factorial of the given number as an integer.
  
  """
  # This macro is used to annotate function documentation.
  
  def factorial(n) when n >= 0 do
    # Defines a function named factorial that takes in one parameter, n.
    # We use the `when` keyword to specify a guard, which ensures that the value of n is non-negative.
    
    if n == 0 do
      # Base case for the recursion.
      # If n is equal to 0, return 1.
      1
    else
      # Recursive case.
      # If n is not equal to 0, return n multiplied by the factorial of n-1.
      n * factorial(n-1)
    end
  end
  
end
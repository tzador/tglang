defmodule User do
  @moduledoc '''
    This module represents a user and contains functions to manage user information.
  '''

  @doc """
  Creates a new user with the given name, email and age.

  ## Examples

      iex> User.create("John", "john@email.com", 25)
      %User{name: "John", email: "john@email.com", age: 25}

  """
  def create(name, email, age) do
    %User{name: name, email: email, age: age}
  end

  @doc """
  Formats the user's information into a readable string.

  ## Examples

      iex> user = User.create("John", "john@email", 25)
      iex> User.format(user)
      "Name: John\nEmail: john@email.com\nAge: 25"

  """
  def format(%User{name: name, email: email, age: age}) do
    "Name: #{name}\nEmail: #{email}\nAge: #{age}"
  end

  @doc """
  Checks if the user's age is above the given minimum.

  ## Examples

      iex> user = User.create("John", "john@email.com", 25)
      iex> User.is_above_minimum_age?(user, 18)
      true

  """
  def is_above_minimum_age?(%User{age: age}, min_age) when age >= min_age do
    true
  end

  def is_above_minimum_age?(%User{}, _min_age) do
    false
  end
end
defmodule Animal do
  @doc "Defines the behavior of an animal"
  defprotocol AnimalBehaviour do
    @doc "Defines the eating behavior of an animal"
    def eat(animal)

    @doc "Defines the sleeping behavior of an animal"
    def sleep(animal)

    @doc "Defines the moving behavior of an animal"
    def move(animal)
  end

  defstruct [:name, :age, :type]

  @doc "Implements the AnimalBehaviour protocol for a Cat"
  defimpl AnimalBehaviour, for: Cat do
    def eat(animal) do
      "#{animal.name} is eating some fish"
    end

    def sleep(animal) do
      "#{animal.name} is sleeping for #{animal.age} hours"
    end

    def move(animal) do
      "#{animal.name} the cat is moving with grace and agility"
    end
  end

  @doc "Implements the AnimalBehaviour protocol for a Sloth"
  defimpl AnimalBehaviour, for: Sloth do
    def eat(animal) do
      "#{animal.name} is slowly eating some leaves"
    end

    def sleep(animal) do
      "#{animal.name} is sleeping for #{animal.age} hours"
    end

    def move(animal) do
      "#{animal.name} the sloth is moving at a snail's pace"
    end
  end

  def change_name(animal, new_name) do
    %Animal{name: new_name, age: animal.age, type: animal.type}
  end

  @doc "Creates a new animal with the specified name, age, and type"
  def new(name, age, type) do
    %Animal{name: name, age: age, type: type}
  end
end

cat = Animal.new("Whiskers", 5, :cat)
sloth = Animal.new("Slothy", 10, :sloth)

IO.puts(cat.eat(cat))
IO.puts(sloth.sleep(sloth))
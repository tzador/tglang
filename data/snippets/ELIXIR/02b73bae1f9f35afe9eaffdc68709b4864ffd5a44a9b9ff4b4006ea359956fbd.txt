defmodule MyLibrary do  #defines a module named MyLibrary
  @doc "This is a library for mathematical functions"

  def add(a, b) when is_number(a) and is_number(b), do: a + b  #defines a function 'add' which adds two numbers

  def subtract(a, b) when is_number(a) and is_number(b), do: a - b  #defines a function 'subtract' which subtracts two numbers

  def multiply(a, b) when is_number(a) and is_number(b), do: a * b  #defines a function 'multiply' which multiplies two numbers

  #defines a private function 'factorial' which calculates the factorial of a given number
  defp factorial(n) when is_integer(n) and n >= 0 do
    if n == 0 do
      1  #returns 1 if the number is 0
    else
      n * factorial(n-1)  #if the number is not 0, recursively calls itself with n-1
    end
  end

  #defines a public function 'factorial_wrapper' which calls the private function 'factorial'
  #and returns an annotated string with the factorial of the given number
  def factorial_wrapper(n) do
    "#{n}! is #{factorial(n)}"  #uses string interpolation to return an annotated string
  end

  def square(a) when is_number(a), do: a * a  #defines a function 'square' which calculates the square of a given number

  @doc "This function checks if a number is prime or not"
  def is_prime(n) when is_integer(n) and n > 1 do
    for i <- 2..(n-1), rem(n,i) == 0, do: false  #iterates through all numbers from 2 to n-1 and checks if any of them can divide n evenly
    |> length() == 0  #returns true if none of the numbers could divide n evenly
  end
end
defmodule MyModule do
  # Create a module named MyModule
  @moduledoc """
  This is a module that contains functions for performing basic math operations.
  """

  @doc """
  Adds two numbers together.
  """
  def add(x, y) do
    x + y
  end

  @doc """
  Subtracts two numbers from each other.
  """
  def subtract(x, y) do
    x - y
  end

  @doc """
  Divides two numbers and returns the quotient.
  """
  def divide(x, y) do
    x / y
  end

  @doc """
  Multiplies two numbers together.
  """
  def multiply(x, y) do
    x * y
  end

  # Importing the Enum module and using its `reduce` function
  import Enum, only: [reduce: 2]

  @doc """
  Calculates the factorial of a given number.
  """
  def factorial(n) when n >= 0 and is_integer(n) do
    (1..n)
    |> reduce(&*/2)
  end
  
  @doc """
  Calculates the power of a given number raised to an exponent.
  """
  def pow(x, n) when n >= 0 do
    _pow(x, n, 1)
  end

  defp _pow(x, n, acc) do
    case n do
      0 -> acc
      _ -> _pow(x, n - 1, acc * x)
    end
  end
end
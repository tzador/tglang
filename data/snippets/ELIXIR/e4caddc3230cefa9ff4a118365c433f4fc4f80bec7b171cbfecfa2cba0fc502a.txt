defmodule Calculator do
  @moduledoc """
  This module provides basic calculator functions.
  """

  # Define the add function with two arguments
  def add(num1, num2) do
    num1 + num2 # Return the sum of the two numbers
  end

  # Define the subtract function with two arguments
  def subtract(num1, num2) do
    num1 - num2 # Return the difference of the two numbers
  end

  # Define the multiply function with two arguments
  def multiply(num1, num2) do
    num1 * num2 # Return the product of the two numbers
  end

  # Define the divide function with two arguments
  def divide(num1, num2) do
    num1 / num2 # Return the quotient of the two numbers
  end

  # Define the power function with two arguments
  def power(num, exp) do
    result = 1 # Set a variable to store the result
    for _ <- 1..exp do # Loop for the given exponent
      result = result * num # Multiply the result by the base number
    end
    result # Return the final result
  end

  # Define the square root function with one argument
  def sqrt(num) do
    :math.sqrt(num) # Use the built-in Erlang function for square root
  end

end

IO.puts(Calculator.add(5, 3)) # Output: 8
IO.puts(Calculator.subtract(10, 2)) # Output: 8
IO.puts(Calculator.multiply(2, 4)) # Output: 8
IO.puts(Calculator.divide(16, 2)) # Output: 8
IO.puts(Calculator.power(2, 3)) # Output: 8
IO.puts(Calculator.sqrt(64)) # Output: 8
defmodule Person do
  @moduledoc """
  A module that defines a person's attributes and methods
  """

  # define the struct for the person
  defstruct name: nil, age: nil, occupation: nil

  # define the implementation block for the person's methods 
  defimpl Protocol, for: Person do
    # return the full name of the person
    @doc """
    Returns the full name of the person
    """
    def get_full_name(person) do
      "#{person.name.first} #{person.name.last}"
    end

    # calculate the person's age in dog years
    @doc """
    Calculates the person's age in dog years
    """
    def get_dog_age(person) do
      person.age * 7
    end

    # change the person's occupation
    @doc """
    Changes the person's occupation
    """
    def change_occupation(person, new_occupation) do
      %{person | occupation: new_occupation}
    end
  end
end

# create a new person struct with specified attributes
person = %Person{name: %{first: "John", last: "Doe"}, age: 30, occupation: "Engineer"}

# get the person's full name and print it
full_name = Person.get_full_name(person)
IO.puts("Full name: #{full_name}")

#change the person's occupation and print it
new_occupation = "Teacher"
new_person = Person.change_occupation(person, new_occupation)
IO.puts("New occupation: #{new_person.occupation}")
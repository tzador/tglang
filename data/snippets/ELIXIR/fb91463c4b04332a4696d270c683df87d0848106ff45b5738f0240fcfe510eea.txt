# This function calculates the nth Fibonacci number using memoization
defmodule Fibonacci do
  # memo table to store previously calculated values
  @memo_table %{}

  # function to calculate the nth Fibonacci number
  def calc_fib(n) do
    # check if the value is already stored in the memo table
    case Map.has_key?(@memo_table, n) do
      true ->
        # return the stored value if found
        Map.get(@memo_table, n)

      false ->
        # calculate the Fibonacci number recursively
        fib = calc_fib(n - 1) + calc_fib(n - 2)
        # store the calculated value in the memo table for future use
        Map.put(@memo_table, n, fib)
        # return the calculated value
        fib
    end
  end
end

# calculate the 10th Fibonacci number using the calc_fib function
Fibonacci.calc_fib(10)
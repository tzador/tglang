defmodule User do
  # This is a comment in elixir
  @moduledoc """
  This module defines a user with properties such as name,
  age, and email.
  """
  # Defining a struct for the user with the given properties
  @type t :: %User{
    name: String.t(),
    age: non_neg_integer(),
    email: String.t()
  }

  # Defining a function to create a new user
  # Takes in a name, age, and email and returns the user struct
  @spec new(String.t, non_neg_integer(), String.t) :: t
  def new(name, age, email) do
    %User{
      name: name,
      age: age,
      email: email
    }
  end

  # Defining a function to check if a user is over 18 years old
  # Takes in a user struct and returns a boolean
  def over_18?(%User{age: age}) do
    age >= 18
  end

  # Defining a function to get the user's name and age as a string
  # Takes in a user struct and returns a string
  def get_name_and_age(%User{name: name, age: age}) do
    "Name: #{name}, Age: #{age}"
  end

  # Defining a function to update the user's email
  # Takes in a user struct and a new email and returns an updated user struct
  def update_email(%User{email: old_email}, new_email) do
    %User{
      email: new_email
      name: name,
      age: age
    }
    |> Map.put(:email, new_email)
  end
end
# This function takes in a list of numbers and returns the sum of the squares of the odd numbers
defmodule SquareSum do
      
  # Define a function that takes in a list of integers as a parameter
  def sum_of_odd_squares(list) do

    # Create a variable to store the sum
    sum = 0

    # Use a 'Enum.each' function to iterate through the list and perform an operation on each element
    Enum.each(list, fn x ->
      
      # Use a 'case' statement to check if the current element is odd
      case rem(x, 2) do

        # If the element is odd, square it and add it to the sum
        1 -> sum = sum + (x * x)

        # If the element is even, do nothing
        0 -> nil
      end
    end)

    # Return the sum
    sum
  end
end

# Test the function with a list of numbers
IO.inspect SquareSum.sum_of_odd_squares([1, 2, 3, 4, 5]) # Output: 35
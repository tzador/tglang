defmodule User do
  defstruct name: "John", age: 32, gender: "male"
end

def calculate_average_age(users) do
  ages_sum = Enum.reduce(users, 0, fn user, acc -> acc + user.age end)
  average_age = ages_sum / length(users)
  IO.puts "The average age of users is #{average_age}"
end

defmodule Products do
  defstruct name: "Apple", price: 10.99, category: "Fruit"
end

def calculate_average_price(products) do
  prices_sum = Enum.reduce(products, 0, fn product, acc -> acc + product.price end)
  average_price = prices_sum / length(products)
  IO.puts "The average price of products is #{average_price}"
end

# Sample list of users
users = [%User{name: "Jane", age: 28, gender: "female"},
         %User{name: "Jack", age: 36, gender: "male"},
         %User{name: "Emily", age: 42, gender: "female"},
         %User{name: "Max", age: 25, gender: "male"}]

# Sample list of products
products = [%Products{name: "Banana", price: 5.99, category: "Fruit"},
            %Products{name: "Milk", price: 2.99, category: "Dairy"},
            %Products{name: "Bread", price: 3.99, category: "Bakery"},
            %Products{name: "Chicken", price: 8.99, category: "Meat"}]

# Calculate and print average age of users
calculate_average_age(users)

# Calculate and print average price of products
calculate_average_price(products)
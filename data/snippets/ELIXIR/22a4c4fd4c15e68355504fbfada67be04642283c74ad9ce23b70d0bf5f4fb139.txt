# A module that contains functions for generating a list of prime numbers
defmodule Prime do
  # Function that checks if a number is prime
  def is_prime(number) do
    # One is not a prime number
    if number == 1 do
      false

    # Two is the only even prime number
    elsif number == 2 do
      true

    # Any even number over two is not prime
    elsif rem(number, 2) == 0 do
      false

    # Check if the number is divisible by any number from 3 to square root of the number
    else
      for n <- (3..trunc(:math.sqrt(number)), 2) do
        if rem(number, n) == 0 do
          return false
        end
      end
      true
    end
  end

  # Function that generates a list of prime numbers up to a specified limit
  def generate_primes(limit) do
    # Initialize a list to hold the prime numbers
    primes = []
    # Loop through all numbers from 2 to the specified limit
    for number <- (2..limit) do
      # Check if the number is prime
      if is_prime(number) do
        # If it is prime, add it to the list
        primes = [number | primes]
      end
    end
    # Return the list of prime numbers
    primes
  end
end

# Generate a list of prime numbers up to 100
Prime.generate_primes(100)
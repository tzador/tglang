defmodule MyModule do
  # This is a module in Elixir
  @moduledoc """
  Module that handles data processing
  """

  # This is a public function that takes in a string parameter
  # and calculates its length
  @doc """
  Calculates the length of a string
  Params:
    - str: string to be processed
  Returns:
    - length: integer representing the length of the string
  """
  def string_length(str) do
    length = 0 # initialize length to 0
    for char <- str do
      length = length + 1 # increment length for each character in the string
    end
    length # return the final length value
  end

  # This is a private function that converts a string to all uppercase
  defp convert_to_uppercase(str) do
    String.upcase(str) # use built-in Elixir function to convert to uppercase
  end

  # This is a public function that takes in a list of strings
  # and returns a new list with all of them converted to uppercase
  @doc """
  Converts a list of strings to all uppercase
  Params:
    - str_list: list of strings to be processed
  Returns:
    - uppercase_list: list containing all strings converted to uppercase
  """
  def convert_list_to_uppercase(str_list) do
    uppercase_list = [] # initialize empty list
    for str <- str_list do
      uppercase_list = [convert_to_uppercase(str) | uppercase_list] # add converted string to the list
    end
    Enum.reverse(uppercase_list) # reverse the list so it is in the correct order
  end
end
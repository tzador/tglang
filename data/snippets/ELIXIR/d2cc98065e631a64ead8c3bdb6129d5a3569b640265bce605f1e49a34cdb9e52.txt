# This is a function that takes in an integer n and returns the n-th number in the Fibonacci sequence
def fibonacci(n) do
  if n < 2 do # Base case, if n is 0 or 1, return 1
    1
  else # Otherwise, use recursion to calculate the n-th number by adding the previous two numbers in the sequence
    fibonacci(n-1) + fibonacci(n-2)
  end
end

# This is a function that takes in a string and returns the reversed string
def reverse_string(str) do
  # Create an empty list to store the reversed characters
  reversed_str = []

  # Iterate through the string characters in reverse order using the for loop
  for char <- String.reverse(str) do
    # Append each character to the reversed_str list
    reversed_str = [char | reversed_str]
  end

  # Join the reversed_str list into a string and return it
  List.to_string(reversed_str)
end

# This is a function that takes in a list of numbers and returns a sorted list using the bubble sort algorithm
def bubble_sort(list) do
  list_length = length(list) # Get the length of the list
  swapped = true # Set a flag to true to indicate a swap has been made

  # Keep looping until no swaps have been made (indicating the list is already sorted)
  while swapped do
    swapped = false # Reset the flag to false
    # Loop through the list and compare each adjacent pair of elements
    for i <- 0..(list_length-2) do
      if list[i] > list[i+1] do # If the current element is greater than the next element, swap them
        # Use the match operator to swap the elements
        [list[i], list[i+1]] = [list[i+1], list[i]]
        swapped = true # Set the flag to true
      end
    end
  end
  list # Return the sorted list
end
defmodule User do # defining a new module named User

  @moduledoc """
  This module contains functions related to users
  """

  @doc """
  Creates a new user
  Params:
    name - the name of the user
    email - the email of the user

  Returns:
    a user struct with the given name and email
  """
  def create_user(name, email) do
    %User{
      name: name,
      email: email
    }
  end

  @doc """
  Changes the email of a given user
  Params:
    user - the user struct
    new_email - the new email to be set

  Returns:
    an updated user struct with the new email
  """
  def change_email(user, new_email) do
    %User{user | email: new_email}
  end

  @doc """
  Generates a random password for a user
  Params:
    user - the user struct

  Returns:
    a user struct with a randomly generated password
  """
  def generate_password(user) do
    length = 10 # setting the length of the password
    password = :crypto.strong_rand_bytes(length) # using crypto to generate a random password
    %User{user | password: password}
  end
end
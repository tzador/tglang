defmodule Stack do
  # This module defines a stack data structure in Elixir.
  
  # @doc The stack data structure is a hierarchical set of elements in which the
  # last element added to the structure is the first one to be removed.
  
  # @attr elements is a list that holds the elements of the stack.
  # The first element in the list is the top of the stack and the last element 
  # is the bottom of the stack.
  @attr elements :: list
  
  # @doc Initializes a new stack with no initial elements.
  #
  # @return a new Stack with an empty list of elements. 
  def init do
    %Stack{elements: []}
  end
  
  # @doc Adds an element to the top of the stack.
  #
  # @param element The element to be added to the stack.
  #
  # @return the updated Stack with the new element added to the top.
  def push(stack, element) do
    %Stack{stack | elements: [element | stack.elements]}
  end
  
  # @doc Removes the element at the top of the stack.
  #
  # @return the updated Stack with the top element removed.
  def pop(%Stack{elements: [h|t]}) do
    %Stack{elements: t}
  end
  
  # @doc Returns the element at the top of the stack without removing it.
  #
  # @return the element at the top of the stack.
  def peek(%Stack{elements: [h|_]}), do: h
end
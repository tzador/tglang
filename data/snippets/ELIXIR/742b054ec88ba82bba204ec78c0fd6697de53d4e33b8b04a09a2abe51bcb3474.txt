# Define a module
defmodule ExampleModule do
  # Define a function with two parameters and a default value
  def example_function(param1, param2 \\ "default") do
    # Perform some operations on the parameters
    result = param1 * param2
    # Return the result
    result
  end

  # Define a function with pattern matching
  def example_function([head | tail]) do
    # Print the first element of the list
    IO.puts("The first element is #{head}")
    # Call the same function recursively with the tail of the list
    example_function(tail)
  end

  # Define a function with a guard clause
  def example_function(input) when is_binary(input) do
    # Convert the input to uppercase
    upper = String.upcase(input)
    # Return the uppercase string
    upper
  end
end

# Use the module and call the functions
ExampleModule.example_function(5, 10) # Output: 50
ExampleModule.example_function("hello") # Output: HELLO
ExampleModule.example_function([1, 2, 3, 4]) # Output: The first element is 1
                                              # Output: The first element is 2
                                              # Output: The first element is 3
                                              # Output: The first element is 4
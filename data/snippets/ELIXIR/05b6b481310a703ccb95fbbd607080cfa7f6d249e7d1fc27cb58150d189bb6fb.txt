defmodule Superhero do
  @moduledoc """
  This module represents a superhero with powers and abilities.
  """
  require Logger

  # Defining a struct for superhero with name, powers, and abilities
  defstruct name: nil, powers: [], abilities: []

  # Custom function to print out the superhero's details
  def superhero_details(superhero) do
    # Using the Logger to print the superhero's name
    Logger.info("Superhero name: #{superhero.name}")

    # Using pattern matching to separate the powers and abilities
    {powers, abilities} = superhero.powers
    Logger.info("Powers: #{inspect powers}")
    Logger.info("Abilities: #{inspect abilities}")
  end

  # Utility function to find if superhero has a specific ability
  def has_ability?(superhero, ability) do
    # Using Enum functions to check if ability is in the list of abilities
    abilities = Enum.map(superhero.abilities, & &1.ability == ability)
    Enum.any?(abilities)
  end
end

# Creating a new superhero named "The Hulk" with the abilities of strength and regeneration
hulk = %Superhero{name: "The Hulk", powers: [{:strength, 1000}, {:regeneration, 5}]}

# Printing out the superhero's details
Superhero.superhero_details(hulk)

# Checking if "The Hulk" has the ability of invulnerability
has_invulnerability = Superhero.has_ability?(hulk, :invulnerability)

# Printing the result
Logger.info("Does The Hulk have the ability of invulnerability? #{has_invulnerability}")
# This code snippet utilizes Elixir's built-in functions and data structures to perform a variety
# of tasks, including string manipulation, pattern matching, and list processing.

# Define a variable 'name' and set it equal to a string
name = "John Smith"

# Use Elixir's 'string' module to capitalize the first letter of the name variable
capitalized_name = String.capitalize(name)

# Use pattern matching to check if the name is "John"
case capitalized_name do
  "John" -> IO.puts("Hello John!")
  _ -> IO.puts("Hello there!")
end

# Define a list of numbers
numbers = [1, 2, 3, 4, 5]

# Use Elixir's 'Enum' module to double each number in the list 
doubled_numbers = Enum.map(numbers, fn num -> num * 2 end)

# Use Elixir's pipe operator to add the numbers in the doubled numbers list together
sum = doubled_numbers |> Enum.reduce(0, &+/2)

# Print the sum
IO.puts("The sum is #{sum}")
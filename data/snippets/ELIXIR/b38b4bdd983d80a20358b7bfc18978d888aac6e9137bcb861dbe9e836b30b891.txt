defmodule Rectangle do
  # Defines a module named Rectangle
  defstruct width: nil, height: nil # Defines a struct with two fields, width and height 

  # Implementation of a function that calculates the area of a rectangle given its width and height
  def calculate_area(rect) do
    # Pattern matching the fields of the struct, extracting the values for width and height
    %Rectangle{width: width, height: height} = rect
    # Multiplies the width and height to get the area
    area = width * height
    # Returns the area
    area
  end

  # Implementation of a function that calculates the perimeter of a rectangle given its width and height
  def calculate_perimeter(rect) do
    # Pattern matching the fields of the struct, extracting the values for width and height
    %Rectangle{width: width, height: height} = rect
    # Multiplies the width and height by 2 and adds them to get the perimeter
    perimeter = (width * 2) + (height * 2)
    # Returns the perimeter
    perimeter
  end
end

# Creates a rectangle struct with a width of 5 and a height of 10
rectangle = %Rectangle{width: 5, height: 10}

# Calculates the area of the rectangle
area = Rectangle.calculate_area(rectangle)

# Calculates the perimeter of the rectangle
perimeter = Rectangle.calculate_perimeter(rectangle)

# Prints the area and perimeter
IO.puts "The area of the rectangle is #{area}"
IO.puts "The perimeter of the rectangle is #{perimeter}"
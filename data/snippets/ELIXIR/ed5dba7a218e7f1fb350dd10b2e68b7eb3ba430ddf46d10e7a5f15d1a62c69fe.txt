defmodule User do
  @moduledoc """
  This module represents a user in the system.
  """

  # Struct representing user's information
  @typedoc %{
    name: String.t(),
    age: integer(),
    email: String.t(),
    address: String.t()
  }
  defstruct [:name, :age, :email, :address]

  # Function that creates a new user with given information
  @typedoc %{
    name: String.t(),
    age: integer(),
    email: String.t(),
    address: String.t()
  }
  def new(name, age, email, address) do
    %User{
      name: name,
      age: age,
      email: email,
      address: address
    }
  end

  # Function that prints the user's information
  @typedoc %{
    user: %User{}
  }
  def print_info(user) do
    IO.puts("Name: #{user.name}")
    IO.puts("Age: #{user.age}")
    IO.puts("Email: #{user.email}")
    IO.puts("Address: #{user.address}")
  end
end
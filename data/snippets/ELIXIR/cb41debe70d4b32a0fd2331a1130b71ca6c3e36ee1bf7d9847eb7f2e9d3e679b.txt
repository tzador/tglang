defmodule MyModule do
  # Define a public function `my_func` with two parameters `str` and `num`
  # that returns the string `str` concatenated `num` times
  def my_func(str, num) do
    # Initialize an empty string to store the final result
    result = ""

    # Use a recursive helper function to concatenate `num` times
    defp concat_str(str, num, result) do
      # Add the `str` to the `result` string
      result = result <> str

      # Decrement the `num` by 1
      num = num - 1

      # Check if `num` is 0, if so, return the `result` string
      if num == 0 do
        result
      # If `num` is not 0, recursively call the `concat_str` function
      # passing in the updated values of `str`, `num`, and `result`
      else
        concat_str(str, num, result)
      end
    end

    # Call the `concat_str` function with the initial values of `str`, `num`,
    # and `result`, and return the final `result` string
    concat_str(str, num, result)
  end
end

# Call the `my_func` function with the string "hello" and the number 3
# Output should be "hellohellohello"
MyModule.my_func("hello", 3)
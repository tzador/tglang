defmodule Greeter do
  # This module defines a greeter behavior in Elixir.
  # It defines two functions, greet and goodbye, as required by the behavior.

  @callback greet(String.t) :: String.t
  @callback goodbye(String.t) :: String.t

  # The greet function returns a personalized greeting based on the given name.
  # It also logs the greeting to the console.
  def greet(name) do
    greeting = "Hello, #{name}!"

    IO.puts(greeting)
    greeting
  end

  # The goodbye function returns a farewell message based on the given name.
  # It also logs the message to the console.
  def goodbye(name) do
    farewell = "Goodbye, #{name}. Have a nice day!"

    IO.puts(farewell)
    farewell
  end
end

# This module implements the Greeter behavior defined above.
# It overrides the greet and goodbye functions to provide different messages.

defmodule FormalGreeter do
  # The greet function returns a formal greeting using the given name.
  def greet(name) do
    greeting = "Good day, #{name}. How are you doing?"

    IO.puts(greeting)
    greeting
  end

  # The goodbye function returns a formal farewell using the given name.
  def goodbye(name) do
    farewell = "Farewell, #{name}. Take care and have a great day."

    IO.puts(farewell)
    farewell
  end
end
defmodule BankAccount do
  @account_number  # This is a private variable to hold the account number
  @balance        # This is a private variable to hold the current balance

  # This function initializes the account with an account number and a default balance of 0
  def init(account_number) do
    @account_number = account_number
    @balance = 0
  end

  # This function deposits a given amount into the account, updating the balance
  def deposit(amount) do
    @balance = @balance + amount
    IO.puts("You have deposited $#{amount} into your account.")
  end

  # This function withdraws a given amount from the account, updating the balance
  def withdraw(amount) do
    if amount > @balance do
      IO.puts("Insufficient funds.")
    else
      @balance = @balance - amount
      IO.puts("You have withdrawn $#{amount} from your account.")
    end
  end

  # This function returns the current balance
  def get_balance do
    IO.puts("Your current balance is $#{@balance}.")
  end

  # This function prints out the account number and balance
  def print_account_info do
    IO.puts("Account Number: #{@account_number}")
    IO.puts("Balance: $#{@balance}")
  end
end

# An example of using the BankAccount module
account = BankAccount.init(123456789)
BankAccount.deposit(100.50)
BankAccount.withdraw(50.25)
BankAccount.get_balance
BankAccount.print_account_info
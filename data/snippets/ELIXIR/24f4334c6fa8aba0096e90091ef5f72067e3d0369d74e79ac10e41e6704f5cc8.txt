defmodule Calculator do
  @doc """
  Calculates the square of a number.

  ## Examples

      iex> Calculator.square(3)
      9
  """
  @spec square(number) :: integer()
  def square(number) do
    number * number
  end

  @doc """
  Calculates the cubed root of a number.
  Raises ArgumentError if the number is negative.

  ## Examples

      iex> Calculator.cube_root(27)
      3
  """
  @spec cube_root(number) :: number()
  def cube_root(number) do
    if number < 0 do
      raise ArgumentError, message: "Number cannot be negative."
    else
      Math.cbrt(number)
    end
  end

  @doc """
  Calculates the factorial of a number.
  Uses recursion to handle larger numbers.

  ## Examples

      iex> Calculator.factorial(5)
      120
  """
  @spec factorial(number) :: number()
  def factorial(number) do
    if number == 0 do
      1
    else
      number * factorial(number-1)
    end
  end
end
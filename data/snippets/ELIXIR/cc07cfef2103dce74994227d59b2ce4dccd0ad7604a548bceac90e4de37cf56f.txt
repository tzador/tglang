defmodule User do
  @moduledoc """
  This module represents a user and contains functions related to managing users.
  """

  @attr name: String.t()
  @attr age: integer
  @attr is_admin: boolean
  @attr email: String.t()

  defstruct [:name, :age, :is_admin, :email]

  def create_user(name, age, is_admin, email) do
    %User{
      name: name,
      age: age,
      is_admin: is_admin,
      email: email
    }
  end

  def change_name(user, new_name) do
    %{user | name: new_name}
  end

  @doc """
  Retrieves the user's name and age and returns it as a string in the format "Name: [name], Age: [age]"
  """
  def print_name_age(user) do
    "Name: #{user.name}, Age: #{user.age}"
  end

  def print_admin_status(user) do
    case user.is_admin do
      true -> "This user is an admin."
      false -> "This user is not an admin."
    end
  end

  def print_email(user) do
    "The user's email is #{user.email}."
  end

end
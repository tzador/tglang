defmodule User do
    # Module to represent a user in a system

    # Attributes
    @first_name nil
    @last_name nil
    @age 0
    @email ""

    # Struct to hold user information
    defstruct [:first_name, :last_name, :age, :email]

    # Function to create a new user
    # param first_name [String]: The first name of the user
    # param last_name [String]: The last name of the user
    # param age [Integer]: The age of the user
    # param email [String]: The email address of the user
    # return [User]: The new user object
    def new_user(first_name, last_name, age, email) do
        %User{
            first_name: first_name,
            last_name: last_name,
            age: age,
            email: email
        }
    end

    # Function to update a user's email
    # param user [User]: The user to be updated
    # param new_email [String]: The new email address to be updated
    # return [User]: The updated user object
    def update_email(user, new_email) do
        %User{ user | email: new_email }
    end

    # Function to get the user's full name
    # param user [User]: The user to get the full name of
    # return [String]: The user's full name
    def full_name(user) do
        user.first_name <> " " <> user.last_name
    end
end
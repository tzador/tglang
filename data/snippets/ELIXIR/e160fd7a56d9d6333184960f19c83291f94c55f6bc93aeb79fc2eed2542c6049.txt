defmodule ComplexNumber do              # Defines a module named ComplexNumber
  defstruct real: 0, imag: 0            # Defines a struct with real and imag as its fields

  @doc "Adds two complex numbers"
  def add(complex1, complex2) do        # Defines a function add that takes in two complex numbers
    %{real: complex1.real + complex2.real, imag: complex1.imag + complex2.imag}   # Returns a new complex number with the sum of the real and imag parts of the two input numbers
  end

  @doc "Multiplies two complex numbers"
  def multiply(complex1, complex2) do   # Defines a function multiply that takes in two complex numbers
    %{real: complex1.real * complex2.real - complex1.imag * complex2.imag, imag: complex1.real * complex2.imag + complex1.imag * complex2.real}  # Returns a new complex number with the product of the two input numbers using the formula (a+bi) * (c+di) = (ac-bd) + (ad+bc)i
  end

  @doc "Computes the magnitude of a complex number"
  def magnitude(complex) do             # Defines a function magnitude that takes in a complex number
    :math.sqrt(complex.real * complex.real + complex.imag * complex.imag)    # Returns the square root of the sum of the squares of the real and imag parts of the input number using the Pythagorean theorem
  end

  @doc "Converts a complex number to a string representation"
  def to_string(complex) do             # Defines a function to_string that takes in a complex number
    "#{complex.real} + #{complex.imag}i"     # Returns a string representation of the complex number in the form "a + bi"
  end
end
defmodule User do
  # Defines a module called "User" using the "defmodule" keyword
  
  @moduledoc """
  A module that represents a user, with various properties and functions.
  """
  # Annotated module documentation using "@moduledoc" attribute
  
  # Define a struct for the user with specified fields
  @enforce_keys [:name, :age] # Specifies which fields are required for initialization
  defstruct name: nil, # Default value for "name" is "nil"
            age: nil # Default value for "age" is "nil"
  
  # Defines a function "new" to create a new user with specified name and age
  # Uses the "Schema" module to validate input and return a properly formatted user struct
  def new(name, age) do
    %User{} 
    |> Schema.validate_changeset(%{name: name, age: age})
    |> Repo.insert
  end
  
  # Defines a function "change_name" to update the name of a user
  def change_name(user, new_name) do
    %User{}
    |> Repo.get(user.id) 
    |> Map.put(:name, new_name)
    |> Repo.update
  end
  
  # Defines a function "increase_age" to increase the age of a user by 1
  def increase_age(user) do
    %User{}
    |> Repo.get(user.id)
    |> Map.update(:age, &(&1 + 1))
    |> Repo.update
  end
end
# Example module
defmodule Example do
  # Creates a function called "hello" that takes in one argument
  def hello(name) do
    # Uses pattern matching to check the value of the argument
    case name do
      # If the argument is the atom ":world", prints "Hello world!"
      :world -> IO.puts "Hello world!"
      # If the argument is a string, prints "Hello [name]!"
      string -> IO.puts "Hello #{string}!"
      # If the argument is any other value, prints "Hello stranger!"
      _ -> IO.puts "Hello stranger!"
    end
  end
  
  # Creates a module attribute
  @greeting "Welcome to the Example module!"
  
  # Creates a function called "welcome" that takes in no arguments
  def welcome do
    # Prints the value of the module attribute
    IO.puts(@greeting)
    # Calls the "hello" function with the string "Elixir" as the argument
    hello("Elixir")
  end
end
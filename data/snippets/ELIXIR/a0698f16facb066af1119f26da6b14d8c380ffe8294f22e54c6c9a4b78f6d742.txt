# Defining a Person struct with name and age fields
defmodule Person do 
  @enforce_keys [:name, :age]
  defstruct [:name, :age]
end

# Creating an instance of the Person struct
person = %Person{name: "John", age: 25}

# Defining a list of colors
colors = ["red", "blue", "green"]

# Creating a function that prints out a hello message
def say_hello(person) do
  IO.puts("Hello, #{person.name}! You are #{person.age} years old.")
end

# Printing out the hello message for the person instance
say_hello(person)

# Creating a function that checks if a color is in the list
def color_exists?(color) do
  if Enum.member?(colors, color) do
    IO.puts("The color #{color} exists in the list.")
  else
    IO.puts("The color #{color} does not exist in the list.")
  end
end

# Checking if "purple" exists in the list of colors using the color_exists? function
color_exists?("purple")

# Defining a recursive function to calculate the factorial of a number
def factorial(num) when num <= 0, do: 1
def factorial(num) do
  num * factorial(num-1)
end

# Calculating the factorial of 5 and printing out the result
factorial(5) |> IO.puts()
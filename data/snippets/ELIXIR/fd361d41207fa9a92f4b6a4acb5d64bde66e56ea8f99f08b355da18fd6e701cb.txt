defmodule Car do # Defines a module named "Car"
  @name "Tesla Model S" # Defines a module attribute
  @color "Red" # Defines a module attribute
  @year 2021 # Defines a module attribute
  
  def get_name, do: @name # Defines a function to get the module's name attribute
  def get_color, do: @color # Defines a function to get the module's color attribute
  def get_year, do: @year # Defines a function to get the module's year attribute
  
  def drive(speed, dir) do # Defines a function with arguments
    IO.puts "Driving at #{speed} mph in #{dir} direction." # Prints the output
  end
  
  def turn(direction) when direction == :right do # Defines a function with a guard clause
    IO.puts "Turning right." # Prints the output
  end
  
  def turn(direction) when direction == :left do # Defines a function with a guard clause
    IO.puts "Turning left." # Prints the output
  end
  
  def turn(direction) when direction == :straight do # Defines a function with a guard clause
    IO.puts "Going straight." # Prints the output
  end
end

car = Car.new() # Creates a new instance of the Car module
IO.puts car.get_name # Prints the name attribute of the car instance
car.drive(70, :north) # Calls the drive function with arguments
car.turn(:left) # Calls the turn function with argument
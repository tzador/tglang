# Module declaration with module attributes
defmodule Math do
  @author "John Doe"
  @version "1.0"

  # Function that calculates the factorial of a given number
  @spec factorial(integer) :: integer
  def factorial(0), do: 1
  def factorial(n), do: n * factorial(n-1)

  # Function that checks if a number is prime
  @doc "Checks if a number is prime"
  @spec is_prime(integer) :: boolean
  def is_prime(n) do
    for i <- 2..(n - 1), rem(n, i) == 0, do: false
    true
  end

  # Function that calculates the nth Fibonacci number using pattern matching and recursion
  @doc """
  Returns the nth Fibonacci number
  Examples:
    iex> Math.fibonacci(0)
    0
    iex> Math.fibonacci(5)
    5
  """
  @spec fibonacci(integer) :: integer
  def fibonacci(0), do: 0
  def fibonacci(1), do: 1
  def fibonacci(n), do: fibonacci(n-1) + fibonacci(n-2)
end
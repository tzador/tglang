defmodule MathHelpers do # creates a module named 'MathHelpers'
  @moduledoc """This module contains helper functions for performing math operations.""" # adds documentation for the module

  @max_iterations 1000 # sets a maximum number of iterations for certain functions
  @invalid_message "Invalid number provided." # sets an error message for incorrect inputs

  @doc """Calculates the factorial of a given integer.""" # adds documentation for the function
  @spec factorial(integer) :: integer # specifies the function's input and output types
  def factorial(n) when n >= 0 do # defines the function and sets a guard clause
    case n do # starts a case statement based on the value of 'n'
      0 -> 1 # if n is 0, returns 1
      _ -> n * factorial(n-1) # otherwise, recursively calls the factorial function with n-1 and multiplies it by n
    end
  end
end

IO.puts MathHelpers.factorial(5) # outputs the factorial of 5 using the defined function
# => 120
IO.puts MathHelpers.factorial(-1) # tries to output the factorial of -1 (invalid input)
# => "Invalid number provided."
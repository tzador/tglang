defmodule Calculator do
  @doc "This module contains functions for various mathematical operations"
  
  def add(a, b), do: a + b
  def subtract(a, b), do: a - b
  
  @doc "This function multiplies all elements in a list"
  def multiply_list(list), do: Enum.reduce(list, fn x, acc -> acc * x end)
  
  defmodule Geometry do
    @doc "This module contains functions for calculating geometric properties"
    
    def circle_area(radius), do: :math.pi * radius * radius
    
    def square_area(side), do: side * side
  end
  
  import Geometry
  
  def calculate_area(shape, dimensions) do
    case shape do
      "circle" -> circle_area(dimensions)
      "square" -> square_area(dimensions)
      _ -> "Unsupported shape"
    end
  end
end
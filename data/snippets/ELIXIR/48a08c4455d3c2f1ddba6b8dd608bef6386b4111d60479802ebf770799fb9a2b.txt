defmodule Calculator do
  # This module represents a calculator with basic arithmetic operations

  @operations [:add, :subtract, :multiply, :divide]

  # Public functions for basic arithmetic operations
  def add(a, b) do     # Function for addition
    a + b
  end

  def subtract(a, b) do    # Function for subtraction
    a - b
  end

  def multiply(a, b) do    # Function for multiplication
    a * b
  end

  def divide(a, b) do    # Function for division
    a / b
  end

  # Private helper function to validate inputs
  defp ensure_valid_inputs(a, b) when not is_number(a) or not is_number(b) do
    raise ArgumentError, "Inputs must be numbers"
  end

  # Function to perform operation based on given operator
  def operate(a, b, op \\ :add) do
    ensure_valid_inputs(a, b)
    case op do
      :add      -> add(a, b)
      :subtract -> subtract(a, b)
      :multiply -> multiply(a, b)
      :divide   -> divide(a, b)
      _         -> raise ArgumentError, "Invalid operator"
    end
  end
end

# Example usage
Calculator.operate(5, 2, :add)   # Returns 7
Calculator.operate(10, 5, :subtract)   # Returns 5
Calculator.operate(3, 4, :multiply)   # Returns 12
Calculator.operate(20, 4, :divide)   # Returns 5
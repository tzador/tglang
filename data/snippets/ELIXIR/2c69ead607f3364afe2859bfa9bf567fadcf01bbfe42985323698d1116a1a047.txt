defmodule StringListFunctions do
  @moduledoc """
  A module that contains functions for manipulating lists of strings.
  """

	@doc """
	Returns the first element of a list, if it is a string, otherwise returns nil.
	Accepts a list of strings.

	## Examples

	iex> StringListFunctions.first(["hello", "world"])
	"hello"

	iex> StringListFunctions.first([1, 2, 3])
	nil
	"""
  def first(list) when is_list(list) do
    Enum.at(list, 0)
  end

  @doc """
    Reverses the order of elements in a list of strings.
    Accepts a list of strings and returns a new list with elements in reverse order.

    ## Examples

    iex> StringListFunctions.reverse(["hello", "world", "!"])
	["!", "world", "hello"]
  """
  def reverse(list) when is_list(list) do
    Enum.reverse(list)
  end

  @doc """
    Converts each string element in a list to uppercase.
    Accepts a list of strings and returns a new list with each string element in uppercase.

    ## Examples

    iex> StringListFunctions.uppercase(["hello", "world"])
    ["HELLO", "WORLD"]
  """
  def uppercase(list) when is_list(list) do
    Enum.map(list, &String.upcase/1)
  end
end
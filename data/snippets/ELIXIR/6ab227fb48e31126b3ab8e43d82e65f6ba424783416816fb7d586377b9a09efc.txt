# This is a module
defmodule ContactList do
  # This is a struct with fields `name` and `phone_number`
  @enforce_keys [:name, :phone_number]
  defstruct [:name, :phone_number]

  # This is a function that adds a new contact to the list and returns the updated list
  def add_contact(list, new_contact) do
    [new_contact | list]
  end

  # This is a function that removes a contact from the list by name and returns the updated list
  def remove_contact(list, name) do
    List.delete(list, fn contact -> contact.name == name end)
  end

  # This is a function that gets all contacts with a given phone number and returns them
  def get_by_phone_number(list, phone_number) do
    Enum.filter(list, fn contact -> contact.phone_number == phone_number end)
  end
end

# This is a list of contacts
contacts = [
  %ContactList{name: "John", phone_number: "123-456-7890"},
  %ContactList{name: "Jane", phone_number: "234-567-8901"},
  %ContactList{name: "Bob", phone_number: "345-678-9012"}
]

# Adding a new contact to the list
new_contact = %ContactList{name: "Alice", phone_number: "456-789-0123"}
new_list = ContactList.add_contact(contacts, new_contact)

# Removing a contact from the list
updated_list = ContactList.remove_contact(new_list, "Jane")

# Getting all contacts with a given phone number
search_results = ContactList.get_by_phone_number(updated_list, "123-456-7890")

# Printing the search results
IO.puts "Search results:"
for result <- search_results do
  IO.puts "#{result.name}: #{result.phone_number}"
end
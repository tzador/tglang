# This is a comment in Elixir

defmodule User do
  defstruct [:first_name, :last_name, :age]

  @doc """
  Creates a new User struct with the given attributes.
  Params:
    - first_name: the user's first name
    - last_name: the user's last name
    - age: the user's age, defaults to 18
  Returns:
    a User struct with the given attributes
  """
  def new(first_name, last_name, age \\ 18) do
    %User{first_name: first_name, last_name: last_name, age: age}
    |> validate()
  end

  defp validate(%User{first_name: first_name, last_name: last_name, age: age}) do
    cond do
      first_name == nil ->
        raise ArgumentError, "First name must be provided"
      last_name == nil ->
        raise ArgumentError, "Last name must be provided"
      age < 0 or age > 120 ->
        raise ArgumentError, "Age must be between 0 and 120"
      true ->
        %User{first_name: capitalize(first_name), last_name: capitalize(last_name), age: age}
    end
  end

  defp capitalize(name) do
    name
    |> String.capitalize
    |> String.replace(~r/_/, " ")
  end
end

# Example usage
user = User.new("john", "smith", 25)
# %User{first_name: "John", last_name: "Smith", age: 25}
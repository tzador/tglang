defmodule Animal do
  # This module represents an animal
  @type name :: String.t()
  @type species :: String.t()
  @type age :: non_neg_integer

  # This function creates a new animal with given name, species and age
  @spec new(name, species, age) :: %Animal{name: name, species: species, age: age}

  def new(name, species, age) do
    %Animal{name: name, species: species, age: age}
  end

  # This function returns the name of the animal
  # @spec get_name(animal) :: name
  def get_name(%Animal{name: name, _species: _species, _age: _age}) do
    name
  end

  # This function returns the species of the animal
  # @spec get_species(animal) :: species
  def get_species(%Animal{_name: _name, species: species, _age: _age}) do
    species
  end

  # This function returns the age of the animal
  # @spec get_age(animal) :: age
  def get_age(%Animal{_name: _name, _species: _species, age: age}) do
    age
  end
end

# Example usage:
my_animal = Animal.new("Max", "Dog", 3)
my_animal_name = Animal.get_name(my_animal)
my_animal_species = Animal.get_species(my_animal)
my_animal_age = Animal.get_age(my_animal)

IO.puts("My animal's name is #{my_animal_name}, species is #{my_animal_species} and age is #{my_animal_age}")
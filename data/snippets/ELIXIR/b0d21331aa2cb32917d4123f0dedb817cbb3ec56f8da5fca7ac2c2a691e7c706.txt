defmodule Person do
  @module_attribute "Person"
  
  # Defines a struct with the attributes: name, age, and occupation
  defstruct [:name, :age, :occupation]
  
  # Defines a function to create a new person with the given attributes
  @spec new(name :: string, age :: integer, occupation :: string) :: %Person{}
  def new(name, age, occupation) do
    %Person{
      name: name,
      age: age,
      occupation: occupation
    }
  end
  
  # A function to update the age of a person
  # Takes in a person struct and a new age as parameters
  @spec update_age(person :: %Person{}, age :: integer) :: %Person{}
  def update_age(person, age) do
    %{person | age: age}
  end
  
  # A function to calculate the years left until retirement
  # Takes in a person struct as a parameter
  @spec calculate_years_to_retirement(person :: %Person{}) :: integer
  def calculate_years_to_retirement(person) do
    retirement_age = 65
    if person.age >= retirement_age do
      0
    else
      retirement_age - person.age
    end
  end
end
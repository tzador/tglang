# Define a module named "Calculator"
defmodule Calculator do
  # Define a function to calculate the average of a list of numbers
  def average(list) do 
    # Match the list to an empty list and output 0 if empty
    [] = list -> 0

    # Calculate the sum of the list using the reduce function
    sum = Enum.reduce(list, 0, fn(x, acc) -> x + acc end)

    # Divide the sum by the number of elements in the list using div function
    div(sum, length(list))
  end

  # Define a function to calculate the factorial of a number
  def factorial(n) when n > 0 do
    # Define a helper function to recursively multiply
    defp fact_helper(n, acc) do
      # Match the number to 1 and output the accumulator if reached
      1 = n -> acc

      # Multiply the number by the accumulator and call the helper function again
      n * fact_helper(n-1, acc)
    end

    # Call the helper function with initial accumulator set to 1
    fact_helper(n, 1)
  end
end

# Use the Calculator module to calculate the average of a list and factorial of a number
IO.puts "The average of [1, 2, 3, 4, 5] is #{Calculator.average([1, 2, 3, 4, 5])}"
IO.puts "The factorial of 5 is #{Calculator.factorial(5)}"
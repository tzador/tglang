defmodule User do
  @moduledoc """
  This module defines a User struct and functions for managing users.
  """

  ## Struct definition with attributes
  defstruct username: "", email: "", password: "", role: :user

  @doc """
  Creates a new user with the given attributes.

  ## Examples

      iex> User.create(username: "johndoe", email: "johndoe@example.com", password: "password")
      %User{username: "johndoe", email: "johndoe@example.com", password: "password", role: :user}
  """
  def create(attrs \\ %{}) do
    %User{attrs | role: :user}
  end

  @doc """
  Sets the user's role to admin.
  """
  def set_admin(user) do
    %{user | role: :admin}
  end

  @doc """
  Changes the user's password to the given new password.

  ## Examples

      iex> user = User.create(username: "johndoe", email: "johndoe@example.com", password: "password")
      iex> User.change_password(user, "newpassword")
      %User{username: "johndoe", email: "johndoe@example.com", password: "newpassword", role: :user}
  """
  def change_password(%User{username: username, email: email} = user, new_password) do
    %User{user | password: new_password}
  end

end
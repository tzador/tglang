# Create a function that calculates the n-th Fibonacci number
defmodule Fibonacci do

  # Define a memoization function using a map
  def memoize(function) do
    results = %{}
    fn (arg) ->
      case Map.get(results, arg) do
        result when is_integer(result) ->
          result
        _ ->
          result = function.(arg)
          results = Map.put(results, arg, result)
          result
      end
    end
  end

  # Use the memoize function to calculate Fibonacci numbers
  def memoized_fib(number) do
    memoized_fib_helper = memoize(&fib/1)
    memoized_fib_helper.(number)
  end

  # Calculate the n-th Fibonacci number recursively
  def fib(number) do
    case number do
      0 -> 0
      1 -> 1
      _ ->
        fib(number - 1) + fib(number - 2)
    end
  end

end

# Get input from user
IO.puts("Enter the n-th Fibonacci number you want to calculate:")
input = IO.gets() |> String.trim() |> String.to_integer()

# Call the memoized_fib function and print the result
result = Fibonacci.memoized_fib(input)
IO.puts("#{input}-th Fibonacci number is #{result}")
defmodule User do # creates a module named User

  @name "John" # defines a module attribute

  defstruct name: @name, age: 25 # defines a struct with name and age attributes

  @doc """
  Function that greets the user with their name and age
  """
  def greet(%User{name: name, age: age}) do # defines a greet function that takes in a User struct
    "Hello #{name}, you are #{age} years old!" # returns a greeting message using the user's name and age
  end

  @doc """
  Function that has default values for name and age
  """
  def greet_default(%User{name: "Jane", age: 22}) do # defines a greet function with default values for User struct
    "Hello Jane, you are 22 years old!" # returns a greeting message with default values
  end

  # creates a private function that checks if the given age is greater than 18
  defp is_adult?(%User{age: age}) when age >= 18 do
    true # returns true if age is greater than 18
  end

  # creates a public function that checks if the user is an adult and returns a custom message accordingly
  def is_adult_message(user) do
    if is_adult?(user), do: "#{user.name} is an adult", else: "#{user.name} is not an adult"
  end

end
defmodule User do
  @first_name ""
  @last_name ""
  @age 0
  @email ""

  def new(first_name, last_name, age, email) do
    %User{
      @first_name: first_name,
      @last_name: last_name,
      @age: age,
      @email: email
    }
  end

  def get_full_name(user) do
    full_name = "#{user.first_name} #{user.last_name}"
    full_name
  end

  def is_legal_age?(user) do
    user.age >= 18
  end

  def is_email_valid?(user) do
    case Regex.match?(~r/\A[^@\s]+@[^@\s]+\z/, user.email) do
      true -> true
      false -> false
    end
  end

  def update_email(user, new_email) do
    %User{
      first_name: user.first_name,
      last_name: user.last_name,
      age: user.age,
      email: new_email
    }
  end

  def delete_user(user) do
    IO.puts "User #{user.first_name} #{user.last_name} deleted."
  end
end

# Creating a new User
user = User.new("John", "Smith", 25, "example@example.com")

# Getting the user's full name
User.get_full_name(user)

# Checking if the user is of legal age
User.is_legal_age?(user)

# Checking if the user's email is valid
User.is_email_valid?(user)

# Updating the user's email
updated_user = User.update_email(user, "new_email@example.com")

# Deleting the user
User.delete_user(updated_user)
defmodule Math do
  # Defines a module named "Math"
  
  @moduledoc "A collection of math functions"

  def sum(a, b) do
    # Function that calculates the sum of two given numbers
    result = a + b
    # Assigns the sum to a variable named "result"
    IO.puts "The sum of #{a} and #{b} is #{result}"
    # Outputs the sum to the console with string interpolation
    result
    # Returns the sum
  end

  def product(a, b) do
    # Function that calculates the product of two given numbers
    result = a * b
    # Assigns the product to a variable named "result"
    IO.puts "The product of #{a} and #{b} is #{result}"
    # Outputs the product to the console with string interpolation
    result
    # Returns the product
  end

  def difference(a, b) do
    # Function that calculates the difference of two given numbers
    if a > b do
    # Checks if the first number is greater than the second number
      result = a - b
      # Assigns the difference to a variable named "result"
      IO.puts "The difference between #{a} and #{b} is #{result}"
      # Outputs the difference to the console with string interpolation
      result
      # Returns the difference
    else
      result = b - a
      # If the first number is not greater than the second number,
      # assigns the difference to a variable named "result"
      IO.puts "The difference between #{b} and #{a} is #{result}"
      # Outputs the difference to the console with string interpolation
      result
      # Returns the difference
    end
  end

  def quotient(a, b) do
    # Function that calculates the quotient of two given numbers
    if b == 0 do
    # Checks if the second number is equal to 0
      raise "Cannot divide by 0"
      # If the second number is 0, raises an error
    else
      result = a / b
      # If the second number is not 0, assigns the quotient to a variable named "result"
      IO.puts "The quotient of #{a} and #{b} is #{result}"
      # Outputs the quotient to the console with string interpolation
      result
      # Returns the quotient
    end
  end
end
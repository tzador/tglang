defmodule Bank.Account do
  @moduledoc """
  A module containing functions for managing bank accounts.
  """

  @account_balance 0

  @doc """
  Creates a new account with the given starting balance.
  If no starting balance is provided, the default is 0.
  """
  def create_account(balance \\ @account_balance) do
    %{
      balance: balance
    }
  end

  @doc """
  Deposits the given amount into the account.
  """
  def deposit(account, amount) do
    account.balance + amount
  end

  @doc """
  Withdraws the given amount from the account if there are sufficient funds.
  """
  def withdraw(account, amount) do
    if account.balance >= amount do
      account.balance - amount
    else
      "Insufficient funds to withdraw."
    end
  end

  @doc """
  Transfers the given amount from one account to another if there are sufficient funds.
  """
  def transfer(from_account, to_account, amount) do
    from_balance = from_account.balance
    to_balance = to_account.balance

    if from_balance >= amount do
      new_from_balance = from_balance - amount
      new_to_balance = to_balance + amount

      %{from_account | balance: new_from_balance}
      |> put_in(:to_account, %{to_account | balance: new_to_balance})
    else
      "Insufficient funds for transfer."
    end
  end
end
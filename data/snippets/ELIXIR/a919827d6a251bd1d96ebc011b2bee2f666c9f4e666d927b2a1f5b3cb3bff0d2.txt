Code Example: Complex Data Structure

# Defining a module named 'ComplexDataStructure'
defmodule ComplexDataStructure do
  #Defining a struct named 'Employee' with attributes 'name', 'age', and 'salary'
  defstruct name: "", age: 0, salary: 0.0

  #Defining a function named 'create_employee' that takes in parameters 'name', 'age', and 'salary'
  def create_employee(name, age, salary) do
    #Creating a new map with the given parameters and converting it into a struct
    %Employee{name: name, age: age, salary: salary}
  end

  #Defining a function named 'calculate_bonus' that takes in a parameter 'employee'
  def calculate_bonus(employee) do
    #Creating a new map with the employee's salary doubled and converting it into a struct
    %Employee{employee | salary: employee.salary * 2}
  end
end

#Creating an Employee named 'John' with an age of 35 and a salary of 50000
john = ComplexDataStructure.create_employee("John", 35, 50000)

#Calculating his bonus with the calculate_bonus function and storing it in a variable named 'john_with_bonus'
john_with_bonus = ComplexDataStructure.calculate_bonus(john)

#Printing the employee's information with the bonus included
IO.puts("#{john_with_bonus.name} is #{john_with_bonus.age} years old and makes $#{john_with_bonus.salary} with his bonus!")
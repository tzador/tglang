defmodule HttpClient do
  # This module is used for making HTTP requests

  # @doc Sends a GET request to the specified URL with optional headers
  # @param url [String] the URL to send the request to
  # @param headers [Map] optional headers to send with the request
  def get(url, headers \\ %{}) do
    # Perform the HTTP request using the Erlang built-in httpc module
    {:ok, {{_, 200, _}, response_body}} =
      :httpc.request(:get, {url, headers}, [], [])

    # Convert the response body from binary to string
    response_body
    |> :binary.bin_to_list()
  end

  # @doc Sends a POST request to the specified URL with a JSON body
  # @param url [String] the URL to send the request to
  # @param body [Map] the JSON body to send with the request
  def post(url, body) do
    # Encode the body into JSON
    encoded_body = Poison.encode!(body)

    # Set the headers for the request
    headers = %{
      "Content-Type" => "application/json",
      "Content-Length" => byte_size(encoded_body) |> to_string()
    }

    # Perform the HTTP request using the Erlang built-in httpc module
    {:ok, {{_, 200, _}, response_body}} =
      :httpc.request(:post, {url, headers}, [], encoded_body)

    # Convert the response body from binary to string
    response_body
    |> :binary.bin_to_list()
  end
end
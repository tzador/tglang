defmodule User do
  # Creating a User schema with multiple attributes
  schema "users" do
    field :username, :string
    field :age, :integer
    field :email, :string
    field :password, :string
    field :address, :string
    field :phone_number, :string
    field :is_admin, :boolean, default: false
  end

  # Defining functions for user creation and validation
  def create_user(username, age, email, password) do
    # Checking for unique username
    if Repo.get_by(User, username: username) do
      throw %{error: "Username already exists"}
    else
      # Creating new user and setting admin if age is above 18
      %User{username: username, age: age, email: email, password: password, is_admin: age >= 18}
      |> Repo.insert()
    end
  end

  def validate_user(username, password) do
    # Checking for matching username and password
    if user = Repo.get_by(User, username: username, password: password) do
      # Returning user struct with is_authenticated set to true
      %{user | is_authenticated: true}
    else
      # Returning error if username or password does not match
      throw %{error: "Username or password is incorrect"}
    end
  end
end
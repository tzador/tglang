defmodule Person do
    # Represents a person with name, age, and occupation fields.
    
    defstruct name: "", age: nil, occupation: ""

    # Prints out the person's name, age, and occupation.
    # If the person's age is not specified, the output will only include name and occupation.
    def print_person(person) do
      name = person.name
      age = person.age
      occupation = person.occupation

      if age do
        IO.puts "#{name} is #{age} years old and works as a #{occupation}"
      else
        IO.puts "#{name} works as a #{occupation}"
      end
    end

    # Changes the person's occupation.
    # Valid occupations include "doctor", "teacher", "lawyer", and "engineer".
    # If an invalid occupation is given, the person's occupation will remain unchanged.
    def change_occupation(person, new_occupation) do
      case new_occupation do
        "doctor" -> %{person | occupation: "doctor"}
        "teacher" -> %{person | occupation: "teacher"}
        "lawyer" -> %{person | occupation: "lawyer"}
        "engineer" -> %{person | occupation: "engineer"}
        _ -> person
      end
    end
  end

  # Create a new person with name "John Smith", age 30, and occupation "engineer".
  john = %Person{name: "John Smith", age: 30, occupation: "engineer"}

  # Print out the person's information.
  Person.print_person(john) # Output: John Smith is 30 years old and works as an engineer

  # Change John's occupation to "doctor".
  john = Person.change_occupation(john, "doctor")

  # Print out the updated information.
  Person.print_person(john) # Output: John Smith is 30 years old and works as a doctor
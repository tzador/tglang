# This is a function that creates a fibonacci sequence
# starting from the given number and ending at the given length

def fibonacci(number, length) do
  # initialize empty list to store fibonacci sequence
  sequence = []

  # initialize counter to keep track of sequence length
  counter = 0

  # loop until sequence length reaches the given length
  while counter < length do
    if length <= 0 do
      # if length is not a positive integer, raise error
      raise ArgumentError, "Length must be a positive integer."
    else
      if counter == 0 do
        # if counter is 0, first two numbers are 0 and 1
        sequence = [0, 1]
      else
        # otherwise, calculate next number in sequence by adding last two numbers
        next_number = Enum.at(sequence, -1) + Enum.at(sequence, -2)
        # add new number to sequence
        sequence = sequence ++ [next_number]
      end
    end

    # increment counter by 1 each loop
    counter = counter + 1
  end

  # return the list of fibonacci numbers
  return sequence
end

# call the function with starting number of 5 and a length of 10
fibonacci(5, 10)
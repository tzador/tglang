defmodule TodoList do # Defines a module named TodoList
  @items [] # Sets the default value of @items as an empty list

  def add_item(item) do # Defines a function that adds items to the list
    @items = [@items | item] # Updates the @items list by adding the new item
    IO.puts "#{item} has been added to the list." # Prints a message to confirm the addition
    @items # Returns the updated @items list
  end

  def delete_item(item) do # Defines a function that deletes items from the list
    @items = Enum.filter(@items, fn(i) -> i != item end) # Removes the specified item from the @items list 
    IO.puts "#{item} has been deleted from the list." # Prints a message to confirm the deletion
    @items # Returns the updated @items list
  end

  def get_items() do # Defines a function that returns all items in the list
    IO.puts "Items in the list:" # Prints a message to indicate the list being displayed
    for item <- @items do # Uses a for loop to iterate through the @items list
      IO.puts "- #{item}" # Prints each item with a bullet point
    end
    
    @items # Returns the original @items list
  end
end

# Example usage:
TodoList.add_item("Buy groceries") # Adds "Buy groceries" to the list
TodoList.add_item("Do laundry") # Adds "Do laundry" to the list
TodoList.get_items() # Displays all items in the list
TodoList.delete_item("Do laundry") # Deletes "Do laundry" from the list
TodoList.get_items() # Displays updated list without "Do laundry"
defmodule User do
  @moduledoc """
  This is a user module with various methods and attributes.
  """

  # Module attributes
  @name "John"
  @age 32
  @country "USA"

  # Struct definition
  defstruct name: @name, age: @age, country: @country

  # Callback functions
  @callback name_changed(String.t) :: any
  @callback age_changed(integer) :: any
  @callback country_changed(String.t) :: any

  # Instance methods
  def print_name(user) do
    IO.puts("Name: #{user.name}")
  end

  def update_name(user, name) do
    new_user = %User{name: name, age: user.age, country: user.country}
    name_changed(user.name)
    new_user
  end

  def print_age(user) do
    IO.puts("Age: #{user.age}")
  end

  def update_age(user, age) do
    new_user = %User{name: user.name, age: age, country: user.country}
    age_changed(user.age)
    new_user
  end

  def print_country(user) do
    IO.puts("Country: #{user.country}")
  end

  def update_country(user, country) do
    new_user = %User{name: user.name, age: user.age, country: country}
    country_changed(user.country)
    new_user
  end
end

# Create an instance of User
user = %User{}

# Update name and age
%User{name: "Jane", age: 28} = user |> User.update_name("Jane") |> User.update_age(28)

# Print name, age, and country
user |> User.print_name
user |> User.print_age
user |> User.print_country
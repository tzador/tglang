defmodule User do
  @moduledoc """
  This module defines the User struct and its associated functions.
  """

  use Ecto.Schema # Uses Ecto's schema DSL to define data structures

  @enforce_keys ~w(username email age)a # Enforces keys for User struct

  # Defines the User struct with its attributes and their data types
  schema "users" do
    field :username, :string
    field :email, :string
    field :age, :integer
  end

  # Changeset function used for inserting or updating User data
  @doc false # The function does not need to be documented
  def changeset(user, params \\ %{}) do
    user
    |> cast(params, @enforce_keys)
    |> validate_required(~w(username email), message: "must be present") # Validates that the username and email are present
    |> validate_number(:age, greater_than_or_equal_to: 18) # Validates that the age is greater than or equal to 18
  end

  # Function for creating a new User with given parameters
  @doc false # The function does not need to be documented
  def create_user(params) do
    %User{}
    |> changeset(params)
    |> Repo.insert() # Inserts the User into the database using Ecto's Repo module
  end
end
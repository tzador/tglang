defmodule User do
  @moduledoc """
  Handles user authentication and authorization.
  """

  @doc """
  Authenticates a user with their username and password.
  Returns a tuple with the user's information if successful, otherwise returns `:error`.
  """
  def authenticate(%{username: username, password: password}) do
    user = Database.get_user_by_username(username)
    case verify_password(user, password) do
      {:ok, user_info} ->
        {:ok, user_info}
      :error ->
        :error
    end
  end

  @doc """
  Verifies a user's password by comparing it to the hashed password in the database.
  Returns `:ok` if the password matches, otherwise returns `:error`.
  """
  defp verify_password(user, password) do
    case Database.check_password(user, password) do
      {:ok, hashed} ->
        if hashed == user.password_hash do
          {:ok, true}
        else
          {:error}
        end
      :error ->
        :error
    end
  end
end
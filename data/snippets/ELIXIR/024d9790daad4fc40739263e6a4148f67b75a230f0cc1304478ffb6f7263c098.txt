defmodule Helper do
  #This is a helper module with various helper functions for our program
  @moduledoc """
  This module contains various helper functions used in our program.
  """

  #This function checks if a number is divisible by 2
  @doc """
  Checks if a given number is divisible by 2.

  ## Examples
      iex> Helper.divisible_by_two(4)
      true
      iex> Helper.divisible_by_two(7)
      false
      iex> Helper.divisible_by_two(0)
      false
  """
  def divisible_by_two(number) do
    rem(number, 2) == 0
  end

  #This function checks if a number is a prime number
  @doc """
  Checks if a given number is a prime number.

  ## Examples
      iex> Helper.prime_number?(7)
      true
      iex> Helper.prime_number?(12)
      false
      iex> Helper.prime_number?(0)
      false
  """
  def prime_number?(number) do
    if number < 2 do
      false
    else
      prime_factors(number) == [1, number]
    end
  end

  #This function returns the prime factors of a number
  defp prime_factors(number) do
    number
    |> Enum.reduce([], fn x, factors ->
      if divisible_by_two(x) do
        [2 | factors]
      else
        factors
      end
    end)
    |> Enum.uniq
  end
end
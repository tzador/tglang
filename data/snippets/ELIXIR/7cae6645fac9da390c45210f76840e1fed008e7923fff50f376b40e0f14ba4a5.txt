defmodule User do
  @moduledoc """
  This module represents a user and contains functions for manipulating user data and performing user actions.
  """

  @doc """
  This function creates a new user with the given name and email.
  It also assigns a unique ID to the user.
  @param name [String] the user's name
  @param email [String] the user's email
  @return [Map] the newly created user
  """
  def create_user(name, email) do
    %{
      id: generate_id(),
      name: name,
      email: email
    }
  end

  @doc """
  This function edits the information of a given user.
  It takes in the user id and a map containing the new user data.
  @param id [Integer] the user's ID
  @param user_map [Map] the new user data
  @return [Boolean] whether or not the user was successfully edited
  """
  def edit_user(id, user_map) do
    # retrieve user data from database using id
    user = get_user(id)

    # update user data with new values
    %{
      user | name: user_map[:name],
      email: user_map[:email]
    }

    # save updated user data to database
    save_user(user)

    # return success or failure
    if get_user(id) == user do
      true
    else
      false
    end
  end
end
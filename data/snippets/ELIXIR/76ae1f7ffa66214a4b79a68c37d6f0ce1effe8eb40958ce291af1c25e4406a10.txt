defmodule MyModule do
  @moduledoc """
  This is a complex module in Elixir.
  It has multiple functions with different argument types and return values.
  """
  
  @attribute1 5
  
  def multiply_list(list, number) do
    """
    This function takes in a list and a number and multiplies each element in the list by the number.
    It returns a new list with the multiplied values.
    """
    for element <- list do
      element * number
    end
  end
  
  def check_length(list, length) when is_list(list) do
    """
    This function takes in a list and a length and checks if the list has the specified length.
    It returns a boolean value.
    """
    length(list) == length
  end
  
  def check_type(arg) when is_binary(arg) do
    """
    This function takes in a binary argument and checks if its type is binary.
    It returns a boolean value.
    """
    is_binary(arg)
  end
  
  def count_keyvalue_pairs(map) when is_map(map) do
    """
    This function takes in a map and counts the number of key-value pairs in the map.
    It returns an integer value.
    """
    length(map)
  end
end
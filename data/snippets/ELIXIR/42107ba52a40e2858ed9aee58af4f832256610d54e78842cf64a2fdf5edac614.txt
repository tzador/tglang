defmodule User do
  @moduledoc """
  Module for managing user data and functionality.
  """

  import MyDatabase
  import HTTParty

  @doc """
  Takes in a user's first name and last name and generates a username.
  The username is a combination of the first letter of the first name,
  the first five letters of the last name, and a random number.
  """
  def generate_username(first_name, last_name) do
    first_letter = first_name |> String.split("") |> Enum.at(0)
    last_five = last_name |> String.slice(0..4)
    random_num = Enum.random(100..999)
  
    "#{first_letter}#{last_five}#{random_num}"
  end

  @doc """
  Retrieves user data from the database based on the given username.
  If no user is found, returns nil.
  """
  def get_user(username) do
    user = MyDatabase.query("SELECT * FROM users WHERE username = $1", [username])
    case user do
      [] -> nil
      [row] -> row
    end
  end

  @doc """
  Updates the email of the given user in the database.
  Returns true if successful, false otherwise.
  """
  def update_email(user_id, new_email) do
    case HTTParty.put("/users/#{user_id}", body: %{email: new_email}) do
      %{success: true} -> true
      _ -> false
    end
  end
end
# Module definition with documentation
defmodule User do
  @moduledoc """
  This module represents a user in the system.
  """
  @registered_users [] # List of registered users
  
  # Function to register a new user
  def register(name, age, email) do
    # Pattern matching to validate age
    case age do
      age when age >= 18 -> 
        # Creating a map with user details
        user = %{name: name, age: age, email: email}
        # Adding user to registered_users list
        @registered_users = [@registered_users, user]
        IO.puts "User registered successfully!"
      _ -> IO.puts "User must be 18 years or older."
    end
  end

  # Function to get all registered users
  def get_registered_users do
    IO.puts "List of registered users:"
    for user <- @registered_users do
      # Using string interpolation to print user details
      IO.puts "#{user.name}, #{user.age}, #{user.email}"
    end
  end
end

# Creating new user instance
User.register("John", 25, "john@example.com")
# Calling get_registered_users function
User.get_registered_users()
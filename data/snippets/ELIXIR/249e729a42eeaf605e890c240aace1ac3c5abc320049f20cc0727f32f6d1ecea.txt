defmodule User do             # Defines a module named User 
  defstruct [:name, :age]      # Defines a struct with attributes name and age
  
  def new(name, age) do        # Defines a function named new with arguments name and age
    %User{name: name, age: age}# Returns a new user struct with given name and age values
  end
  
  def set_name(user, new_name) do  # Defines a function named set_name with arguments user and new_name
    %User{user | name: new_name}   # Returns a new user struct with the updated name value
  end
  
  def set_age(user, new_age) do    # Defines a function named set_age with arguments user and new_age
    %User{user | age: new_age}     # Returns a new user struct with the updated age value
  end
  
  def greet(user) do               # Defines a function named greet with argument user
    IO.puts "Hello, my name is #{user.name} and I am #{user.age} years old." # Prints a greeting message using user's name and age
  end
  
end

user = User.new("John", 25)    # Creates a new user named John with age 25
greet(user)                    # Calls the greet function with user as argument, resulting in "Hello, my name is John and I am 25 years old." being printed
user = User.set_name(user, "Sarah")  # Updates the user's name to Sarah using the set_name function
greet(user)                    # Calls the greet function again, resulting in "Hello, my name is Sarah and I am 25 years old." being printed
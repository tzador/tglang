/* This code snippet creates a class named "Ball" that extends the "Sprite" class */
 public class Ball extends Sprite {

 	// Private variables for x and y position
 	private var _xPos:Number;
 	private var _yPos:Number;

 	// Public variables for radius and color
 	public var _radius:int;
 	public var _color:Number;

 	// Constructor function
 	public function Ball(radius:int, color:Number, xPosition:Number, yPosition:Number) {
 		this._radius = radius;
 		this._color = color;
 		this._xPos = xPosition;
 		this._yPos = yPosition;

 		// Call the init function
 		init();
 	}

 	// Private function to initialize the ball
 	private function init():void {

 		// Create the ball by drawing a circle
 		this.graphics.beginFill(_color);
 		this.graphics.drawCircle(0, 0, _radius);
 		this.graphics.endFill();

 		// Set the x and y position of the ball
 		this.x = _xPos;
 		this.y = _yPos;

 		// Add event listeners for mouse interactions
 		this.addEventListener(MouseEvent.MOUSE_DOWN, startDrag);
 		this.addEventListener(MouseEvent.MOUSE_UP, stopDrag);

 		// Add event listener for mouse hover effects
 		this.addEventListener(MouseEvent.MOUSE_OVER, highlight);
 		this.addEventListener(MouseEvent.MOUSE_OUT, unhighlight);
 	}

 	// Private function for mouse hover effect
 	private function highlight(event:MouseEvent):void {
 		this.alpha = 0.8;
 		this.scaleX = 1.2;
 		this.scaleY = 1.2;
 	}

 	// Private function to revert the hover effect
 	private function unhighlight(event:MouseEvent):void {
 		this.alpha = 1;
 		this.scaleX = 1;
 		this.scaleY = 1;
 	}

 	// Private function for dragging the ball
 	private function startDrag(event:MouseEvent):void {
 		this.startDrag();
 	}

 	// Private function to stop dragging the ball
 	private function stopDrag(event:MouseEvent):void {
 		this.stopDrag();
 	}

 	// Public function to change the color of the ball
 	public function changeColor(color:Number):void {
 		_color = color;
 		this.graphics.clear();
 		this.graphics.beginFill(_color);
 		this.graphics.drawCircle(0, 0, _radius);
 		this.graphics.endFill();
 	}
 }
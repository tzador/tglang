// A simple class definition with a constructor and a method
class Shape {
    
    // Private properties of the shape
    private var _width:Number;
    private var _height:Number;

    // Constructor that accepts initial values for the width and height
    public function Shape(width:Number, height:Number) {
        _width = width;
        _height = height;
    }

    // Public method to calculate the area of the shape
    public function calculateArea():Number {
        return _width * _height;
    }
}

// An extended class that inherits from the Shape class
class Rectangle extends Shape {
    
    // Private property specific to the Rectangle class
    private var _color:String;

    // Constructor that calls the parent constructor and sets the color property
    public function Rectangle(width:Number, height:Number, color:String) {
        super(width, height);
        _color = color;
    }

    // Override the calculateArea method to include the color in the calculation
    override public function calculateArea():Number {
        return super.calculateArea() + _color.length;
    }
}

// Creating an instance of the Rectangle class with initial values
var rect:Rectangle = new Rectangle(10, 20, "blue");

// Calling the calculateArea method on the instance
trace(rect.calculateArea()); // Output: 2004 (10*20 + 4 letters in "blue")

// Output:
/*
`class Shape {
    private var _width:Number;
    private var _height:Number;
    public function Shape(width:Number, height:Number) {
        _width = width;
        _height = height;
    }
    public function calculateArea():Number {
        return _width * _height;
    }
}
class Rectangle extends Shape {
    private var _color:String;
    public function Rectangle(width:Number, height:Number, color:String) {
        super(width, height);
        _color = color;
    }
    override public function calculateArea():Number {
        return super.calculateArea() + _color.length;
    }
}
var rect:Rectangle = new Rectangle(10, 20, "blue");
trace(rect.calculateArea()); // Output: 2004 (10*20 + 4 letters in "blue")`
*/
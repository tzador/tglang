/* This code snippet creates a class for a game character */

package {
  import flash.events.Event;
  import flash.display.MovieClip;
  import flash.display.Stage;
  
  public class Character extends MovieClip {
    // properties of the character
    private var name:String;
    private var health:int;
    private var level:int;
  
    /* Constructor function that accepts a name, health, and level */
    public function Character(characterName:String, healthPoints:int, characterLevel:int) {
      this.name = characterName;
      this.health = healthPoints;
      this.level = characterLevel;
      /* Call the initialize function */
      addEventListener(Event.ADDED_TO_STAGE, initialize);
    }
    
    /* Function to initialize the character */
    private function initialize(event:Event):void {
      stage.addEventListener(Event.ENTER_FRAME, update);
    }
    
    /* Function to update the character each frame */
    private function update(event:Event):void {
      /* Add logic to update character's position, animations, and other behaviors */
      this.x += 5; // move character to the right by 5 pixels each frame
      if (this.level % 2 == 0) {
        this.gotoAndPlay("idle"); // play idle animation every other frame
      } else {
        this.gotoAndPlay("run"); // play run animation on every other frame
      }
      /* Check for collisions with other objects */
      if (this.hitTestObject(Game.enemy)) {
        this.health -= 10; // decrease health if character collides with enemy
        if (health <= 0) {
          die();
        }
      }
    }
    
    /* Function to make the character die */
    private function die():void {
      this.gotoAndPlay("die"); // play die animation
      this.removeEventListener(Event.ENTER_FRAME, update); // stop updating character
      stage.removeEventListener(MouseEvent.CLICK, handleClick); // stop listening for click events
      /* Add logic for game over or respawn functionality */
      if (Game.gameOver) {
        // Game over logic
      } else {
        // Respawn logic
      }
    }
    
    /* Event handler for when character is clicked */
    private function handleClick(event:MouseEvent):void {
      /* Add logic for handling click events on character */
      this.gotoAndPlay("attack"); // play attack animation when clicked
      Game.enemy.health -= 5; // decrease enemy health when character is clicked
    }
  }
}
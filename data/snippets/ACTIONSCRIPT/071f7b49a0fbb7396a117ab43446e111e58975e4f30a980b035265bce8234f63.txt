/**
 * This is a function that checks if a string is a palindrome
 */
function isPalindrome(inputStr:String):Boolean {
  // convert input string to lower case
  var lowerCaseStr:String = inputStr.toLowerCase();
  // remove all non-alphanumeric characters from the string
  lowerCaseStr = lowerCaseStr.replace(/[^a-zA-Z0-9]/g, "");
  // initialize starting and ending pointers
  var start:int = 0;
  var end:int = lowerCaseStr.length - 1;
  
  // loop through characters in the string, compare them
  // and move the pointers towards each other
  while (start < end) {
    // if characters at the current position are not equal,
    // then the string is not a palindrome
    if (lowerCaseStr.charAt(start) != lowerCaseStr.charAt(end)) {
      return false;
    }
    // move pointers towards each other
    start++;
    end--;
  }
  
  // if the function reaches this point, it means the string is a palindrome
  return true;
}

// example of using the function
var input:String = "racecar";
var isInputPalindrome:Boolean = isPalindrome(input);
trace("Is " + input + " a palindrome? " + isInputPalindrome);
// output: Is racecar a palindrome? true
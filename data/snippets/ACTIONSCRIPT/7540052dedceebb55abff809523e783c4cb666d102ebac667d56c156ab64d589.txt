// This is a comment in ActionScript

/**
* This is a multi-line comment in ActionScript.
* It can span multiple lines.
*/

// Declaring a variable called 'myVariable'
var myVariable:String;

// Assigning a value to 'myVariable'
myVariable = "Hello World!";

// Declaring and initializing a variable in the same line
var myOtherVariable:Boolean = true;

// Creating a conditional statement with if-else syntax
if (myOtherVariable == true) {
    trace("This statement will be printed because the if condition is true.");
} else {
    trace("This statement will not be printed because the if condition is false.");
}

// Creating a for loop that will run 10 times
for (var i:int = 0; i < 10; i++) {
    trace("Loop iteration number " + (i + 1) + " out of 10.");
}

// Creating a function called 'add' that takes in two numbers and returns their sum as a number
function add(num1:Number, num2:Number):Number {
    return num1 + num2;
}

// Calling the 'add' function and storing its return value in a variable
var sum:int = add(5, 10);

// Creating a class called 'Rectangle' with a constructor function and a method
class Rectangle {
    // Constructor function that takes in width and height as parameters
    function Rectangle(width:int, height:int) {
        this.width = width;
        this.height = height;
    }

    // Method that calculates the area of the rectangle and returns the result
    function getArea():int {
        return this.width * this.height;
    }
}

// Creating an instance of the Rectangle class with a width of 5 and height of 7
var rect:Rectangle = new Rectangle(5, 7);

// Calling the getArea method and storing its return value in a variable
var area:int = rect.getArea();

// Creating a constant variable called 'PI' with a value of 3.14159
const PI:Number = 3.14159;

// Using the 'PI' constant to calculate the circumference of a circle with a radius of 5
var circumference:Number = 2 * PI * 5;

// Creating an array with initial values
var myArray:Array = ["apple", "banana", "orange"];

// Looping through the array and printing out each element
for each (var item:String in myArray) {
    trace(item);
}

// Creating a dictionary with key-value pairs
var myDictionary:Dictionary = new Dictionary();
myDictionary["key1"] = "value1";
myDictionary["key2"] = "value2";

// Looping through the dictionary and printing out each key-value pair
for (var key:String in myDictionary) {
    trace(key + " : " + myDictionary[key]);
}
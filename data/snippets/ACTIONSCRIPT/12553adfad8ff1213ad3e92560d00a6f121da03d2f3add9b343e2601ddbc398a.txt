// This code snippet is a function that uses a for loop to check for prime numbers within a given range

function findPrimeNumbers(start:int, end:int):void {
    var primeNumbers:Array = []; // creates an empty array to store prime numbers
    for (var i:int = start; i <= end; i++) { // starting from the given start number, loop through each number in the range
        var isPrime:Boolean = true; // boolean variable to check if a number is prime
        for (var j:int = 2; j < i; j++) { // loop through all numbers from 2 to the current number
            if (i % j == 0) { // if the current number is divisible by a number other than 1 and itself, it is not prime
                isPrime = false; // set the isPrime variable to false
            }
        }
        if (isPrime) { // if the number is still prime, add it to the primeNumbers array
            primeNumbers.push(i);
        }
    }
    trace("Prime Numbers Between " + start + " and " + end + ": " + primeNumbers); // print the array of prime numbers
}

// Example call to the function:
findPrimeNumbers(1, 100);

// Output:
[*] This code snippet outputs an array of prime numbers between the given start and end values (inclusive):
`Array [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]`
/** 
 * This function takes in two numbers and returns
 * their sum as a string. 
 * 
 * @param num1 The first number to be added.
 * @param num2 The second number to be added.
 * @return String representation of the sum of num1 and num2.
 */
public function addNumbers(num1:Number, num2:Number):String { 
    var sum:Number = num1 + num2; // calculate sum
    return sum.toString(); // convert sum to string and return 
} 

/**
 * This function takes in a string and an array of strings
 * and checks if the given string exists in the array.
 * 
 * @param str The string to be searched for.
 * @param arr An array of strings to search in.
 * @return Whether or not the string exists in the array.
 */
public function checkIfStringExists(str:String, arr:Array):Boolean { 
    for each (var item:String in arr) { // loop through array
        if (item == str) { // check if array item matches given string
            return true; // if match found, return true
        }
    }
    return false; // no match found, return false
} 

/**
 * This function takes in a number and checks if it is prime.
 * 
 * @param num The number to be checked.
 * @return Whether or not the number is prime.
 */
public function checkIfPrime(num:Number):Boolean { 
    for (var i:Number = 2; i < num; i++) { // loop through numbers from 2 to num - 1
        if (num % i == 0) { // if any number from 2 to num - 1 divides evenly into num
            return false; // not prime, return false
        }
    }
    return true; // no factors found, prime number, return true
}
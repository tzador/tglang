/**
*@class Tile
*Represents a tile on a game board
*/
class Tile {
    private var name:String; //variable to store the name of the tile
    private var value:int; //variable to store the value of the tile
    
    /**
    *Constructor function
    *Sets the initial values for the tile name and value
    *@param tileName The name of the tile
    *@param tileValue The value of the tile
    */
    public function Tile(tileName:String, tileValue:int) {
        this.name = tileName;
        this.value = tileValue;
    }
    
    /**
    *Getter function for the tile name
    *@return The name of the tile
    */
    public function getTileName():String {
        return this.name;
    }
    
    /**
    *Getter function for the tile value
    *@return The value of the tile
    */
    public function getTileValue():int {
        return this.value;
    }
    
    /**
    *Setter function for the tile value
    *@param newValue The new value to be set for the tile
    */
    public function setTileValue(newValue:int):void {
        this.value = newValue;
    }
    
    /**
    *Function to check if the tile is a special tile
    *@return True if the tile is special, otherwise false
    */
    public function isSpecialTile():Boolean {
        //Check if the tile value is divisible by 10 
        //and if the tile name contains the letter "s"
        if(this.value % 10 == 0 && this.name.indexOf("s") != -1) {
            return true;
        } else {
            return false;
        }
    }
    
    /**
    *Function to calculate the new value of a special tile
    *@return The new value of the tile
    */
    public function calculateSpecialValue():int {
        //Multiply the current value by 2 and add 5
        return (this.value * 2) + 5;
    }
}
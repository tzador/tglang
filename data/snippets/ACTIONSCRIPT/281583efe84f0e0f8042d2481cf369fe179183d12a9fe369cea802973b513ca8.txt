/* This is a class definition for a custom button component in ActionScript */

package com.example.components
{
    /* Importing necessary classes from the standard ActionScript library */
    import fl.core.UIComponent;
    import flash.events.MouseEvent;
    import flash.display.Shape;

    public class CustomButton extends UIComponent
    {
        /* Private variables to store button properties */
        private var _buttonWidth:Number;
        private var _buttonHeight:Number;
        private var _backgroundColor:uint;
        private var _textColor:uint;
        private var _label:String;
        private var _buttonShape:Shape;

        /* Constructor function to initialize button properties */
        public function CustomButton(width:Number, height:Number, bgColor:uint, txtColor:uint, label:String)
        {
            /* Calling the superclass constructor function */
            super();

            /* Setting private variables to passed in parameters */
            _buttonWidth = width;
            _buttonHeight = height;
            _backgroundColor = bgColor;
            _textColor = txtColor;
            _label = label;

            /* Creating and adding child shape to button */
            _buttonShape = new Shape();
            _buttonShape.graphics.beginFill(_backgroundColor);
            _buttonShape.graphics.drawRect(0, 0, _buttonWidth, _buttonHeight);
            addChild(_buttonShape);

            /* Adding event listener for mouse click */
            addEventListener(MouseEvent.CLICK, onClick);

            /* Setting button label */
            textField.text = _label;
            textField.textColor = _textColor;
            textField.x = (_buttonWidth - textField.width) / 2;
            textField.y = (_buttonHeight - textField.height) / 2;
        }

        /* Function to handle button click event */
        private function onClick(event:MouseEvent):void
        {
            /* Change button background color randomly */
            _buttonShape.graphics.clear();
            var randomColor:uint = Math.random() * 0xFFFFFF;
            _buttonShape.graphics.beginFill(randomColor);
            _buttonShape.graphics.drawRect(0, 0, _buttonWidth, _buttonHeight);
            addChild(_buttonShape);
        }
    }
}
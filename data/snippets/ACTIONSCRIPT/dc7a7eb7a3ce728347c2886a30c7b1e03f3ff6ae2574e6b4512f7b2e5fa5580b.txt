/**
* Function to check the validity of a credit card number
* Takes in a string of 16 digits and checks for proper format and validity
* Returns true if the card is valid, false if it is not
*/
function checkCreditCardNumber(cardNumber:String):Boolean {
    // Trim any whitespace from the input string
    cardNumber = cardNumber.replace(/\s/g, "");

    // Check if the string is 16 characters long
    if (cardNumber.length != 16) {
        return false;
    }

    // Convert the string to an array for easier manipulation
    var cardArr:Array = cardNumber.split("");

    // Loop through the 16 digits and perform the Luhn algorithm
    // starting from the rightmost digit (index 15) and moving left
    for (var i:int = 15; i > 0; i--) {
        var digit:int = parseInt(cardArr[i]);
        // Double every second digit
        if (i % 2 == 1) {
            digit *= 2;
        }
        // If the doubled digit is greater than 9, subtract 9 from it
        if (digit > 9) {
            digit -= 9;
        }
        // Replace the digit in the array with the new value
        cardArr[i] = digit.toString();
    }

    // Calculate the sum of all digits in the modified array
    var sum:int = 0;
    for (var j:int = 0; j < cardArr.length; j++) {
        sum += parseInt(cardArr[j]);
    }

    // If the sum is divisible by 10, then the card is valid
    if (sum % 10 == 0) {
        return true;
    } else {
        return false;
    }
}
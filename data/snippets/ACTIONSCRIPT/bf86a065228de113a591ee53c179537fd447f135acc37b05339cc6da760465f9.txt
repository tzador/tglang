/**
 * This class creates a custom Button with different states and transitions.
 * Also includes a function for handling clicks.
 */
package com.example.buttons {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.events.Event;
    import flash.text.TextField;
    
    public class CustomButton extends Sprite {
        
        //properties for different states
        private var defaultState:Sprite;
        private var hoverState:Sprite;
        private var activeState:Sprite;
        
        /**
         * Creates a new CustomButton object.
         * @param text The label text for the button.
         * @param width The width of the button.
         * @param height The height of the button.
         */
        public function CustomButton(text:String, width:Number, height:Number) {
            
            //create default state
            defaultState = createButtonState(0x336699, width, height);
            
            //create hover state
            hoverState = createButtonState(0x6699CC, width, height);
            
            //create active state
            activeState = createButtonState(0x99CCFF, width, height);
            
            //add all states to the display list
            this.addChild(defaultState);
            this.addChild(hoverState);
            this.addChild(activeState);
            
            //initialize button state
            this.buttonMode = true;
            this.useHandCursor = true;
            this.tabEnabled = false;
            
            //add event listeners for click and hover
            this.addEventListener(MouseEvent.CLICK, handleClick);
            this.addEventListener(MouseEvent.MOUSE_OVER, handleHover);
            
            //set label text
            var label:TextField = new TextField();
            label.text = text;
            label.selectable = false;
            label.width = width;
            label.height = height;
            
            //add label to default state
            defaultState.addChild(label);
        }
        
        /**
         * Creates a button state with a given color, width and height.
         * @param color The color of the state.
         * @param width The width of the state.
         * @param height The height of the state.
         * @return The created Sprite representing the state.
         */
        private function createButtonState(color:uint, width:Number, height:Number):Sprite {
            var state:Sprite = new Sprite();
            state.graphics.beginFill(color);
            state.graphics.drawRect(0, 0, width, height);
            state.graphics.endFill();
            return state;
        }
        
        /**
         * Handles click event by changing the button state.
         * @param event The MouseEvent for the click.
         */
        private function handleClick(event:MouseEvent):void {
            this.removeChild(activeState);
            this.addChildAt(activeState, 0);
        }
        
        /**
         * Handles hover event by changing the button state.
         * @param event The MouseEvent for the hover.
         */
        private function handleHover(event:MouseEvent):void {
            this.removeChild(hoverState);
            this.addChildAt(hoverState, 0);
        }
    }
}
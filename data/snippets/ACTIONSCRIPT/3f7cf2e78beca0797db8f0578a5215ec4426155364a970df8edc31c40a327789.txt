// This code snippet is a basic implementation of a sorting algorithm
function bubbleSort(arr:Array):Array { // Function header with parameter
    var swapped:Boolean = false; // Initializing boolean variable
    for(var i:int = 0; i < arr.length; i++) { // For loop to iterate through array
        if(arr[i] > arr[i+1]) { // Comparing current and next element
            var temp = arr[i]; // Temporary variable to store current element
            arr[i] = arr[i+1]; // Swapping elements
            arr[i+1] = temp; // Swapping elements
            swapped = true; // Setting swapped to true
        }
    }
    if(swapped == true) { // Checking if any elements were swapped
        bubbleSort(arr); // Recursively calling function to iterate through array again
    } else {
        return arr; // If no elements were swapped, return the sorted array
    }
}
// Example usage
var myArray:Array = [6, 3, 7, 1, 9, 2]; // Initializing an array with unsorted elements
trace("Unsorted array: " + myArray); // Outputting unsorted array
myArray = bubbleSort(myArray); // Sorting the array using bubbleSort function
trace("Sorted array: " + myArray); // Outputting sorted array
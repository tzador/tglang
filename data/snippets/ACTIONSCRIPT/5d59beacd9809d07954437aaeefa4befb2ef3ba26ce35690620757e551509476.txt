// Array of rectangle objects
var rectangles:Array = [new Rectangle(0, 0, 10, 20), new Rectangle(20, 40, 30, 10), new Rectangle(50, 30, 40, 30)];

// Function to sort rectangles by their perimeter from smallest to largest
function sortRectangles(rectangles:Array):Array {
    var sortedRectangles:Array = [];

    // Loop through each rectangle in the given array
    for (var i:int = 0; i < rectangles.length; i++) {
        var smallestIndex:int = i;

        // Loop through remaining rectangles to find the smallest perimeter
        for (var j:int = i + 1; j < rectangles.length; j++) {
            // Calculate the perimeters of both rectangles
            var firstPerimeter:int = (2 * rectangles[i].width) + (2 * rectangles[i].height);
            var secondPerimeter:int = (2 * rectangles[j].width) + (2 * rectangles[j].height);

            // If the second rectangle has a smaller perimeter, set it as the smallest index
            if (secondPerimeter < firstPerimeter) {
                smallestIndex = j;
            }
        }

        // Swap the positions of the smallest rectangle and the current rectangle
        var temp:Rectangle = rectangles[i];
        rectangles[i] = rectangles[smallestIndex];
        rectangles[smallestIndex] = temp;

        // Push the smallest rectangle to the sorted array
        sortedRectangles.push(rectangles[i]);
    }

    // Return the sorted array
    return sortedRectangles;
}

// Call the sortRectangles function and save the sorted array
var sortedRectangles:Array = sortRectangles(rectangles);

// Display the sorted rectangles and their perimeters in the console
for (var k:int = 0; k < sortedRectangles.length; k++) {
    trace("Rectangle " + (k+1) + ": (" + sortedRectangles[k].x + ", " + sortedRectangles[k].y + ", " + sortedRectangles[k].width + ", " + sortedRectangles[k].height + ")");
    trace("Perimeter: " + ((2 * sortedRectangles[k].width) + (2 * sortedRectangles[k].height)));
}

/* 
Output:
Rectangle 1: (50, 30, 40, 30)  (x, y, width, height)
Perimeter: 140
Rectangle 2: (0, 0, 10, 20)
Perimeter: 60
Rectangle 3: (20, 40, 30, 10)
Perimeter: 80
*/
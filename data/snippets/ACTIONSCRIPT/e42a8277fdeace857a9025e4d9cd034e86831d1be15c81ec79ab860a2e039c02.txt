/*** Code snippet for a custom class that implements a binary search algorithm ***/

// Importing the necessary libraries
import flash.display.Sprite;
import flash.events.MouseEvent;

// Defining the class and extending the Sprite class
public class BinarySearch extends Sprite {
	
	private var _array:Array; // The array to be searched
	private var _target:int; // The target element to be found
	private var _low:int; // The lower bound of the array
	private var _high:int; // The upper bound of the array
	private var _mid:int; // The middle index of the array
	private var _result:int; // The index of the target element in the array
	
	/*** Constructor function for the class ***/
	public function BinarySearch(array:Array, target:int) {
		// Assigning values to class variables
		_array = array;
		_target = target;
		_low = 0;
		_high = _array.length - 1;
		_mid = (_low + _high) / 2;
		_result = -1;
		
		// Calling the binary search function
		binarySearch();
	}
	
	/*** Function to perform binary search ***/
	private function binarySearch():void {
		// Looping until the target is found or the lower bound is greater than the upper bound
		while (_low <= _high && _result == -1) {
			// If the target is found at the middle index, assign the index to the result variable
			if (_array[_mid] == _target) {
				_result = _mid;
			}
			// If the target is smaller than the element at the middle index, set the new upper bound
			else if (_target < _array[_mid]) {
				_high = _mid - 1;
			}
			// If the target is larger than the element at the middle index, set the new lower bound
			else {
				_low = _mid + 1;
			}
			
			// Recalculating the new middle index
			_mid = (_low + _high) / 2;
		}
		
		// If the target is not found, set the result to -1
		if (_result == -1) {
			_result = -1;
		}
	}
}
/**
 * This is a function that takes in two parameters, an array of numbers and a target sum,
 * and returns an array of two numbers that add up to the target sum.
 *
 * @param {Array} numbers - array of numbers
 * @param {Number} targetSum - target sum
 * @return {Array} - array of two numbers that add up to the target sum
 */
function findTwoNumbers(numbers:Array, targetSum:Number):Array {
  var length:Number = numbers.length;

  // create a map to store the numbers and their indices
  var map:Object = {};

  // loop through the numbers array
  for (var i:Number = 0; i < length; i++) {
    // calculate the difference between the target sum and the current number
    var difference:Number = targetSum - numbers[i];

    // check if the difference exists in the map
    if (map[difference] !== undefined) {
      // return an array containing the current number and the difference
      return [numbers[i], difference];
    }

    // add the current number and its index to the map
    map[numbers[i]] = i;
  }

  // return an empty array if no matching numbers were found
  return [];
}

// example usage
var numbers:Array = [2, 4, 6, 8];
var targetSum:Number = 10;
var result:Array = findTwoNumbers(numbers, targetSum); // returns [4, 6]
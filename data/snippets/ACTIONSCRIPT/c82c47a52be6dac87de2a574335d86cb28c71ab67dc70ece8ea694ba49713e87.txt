/**
* This is a class representing a custom button.
* @param label The label text for the button.
* @param width The width of the button.
* @param height The height of the button.
**/
public class CustomButton extends MovieClip {
    //private variables
    private var _label:String;
    private var _width:int;
    private var _height:int;
    private var _button:SimpleButton;
    
    /**
    * Constructor function for the custom button class.
    * @param label The label text for the button.
    * @param width The width of the button.
    * @param height The height of the button.
    **/
    public function CustomButton(label:String, width:int, height:int) {
        this._label = label;
        this._width = width;
        this._height = height;
        
        //create visual elements for the button
        var text:TextField = new TextField();
        text.text = label;
        text.autoSize = TextFieldAutoSize.CENTER;
        
        var normalState:Sprite = new Sprite();
        normalState.addChild(text);
        
        var hoverState:Sprite = new Sprite();
        hoverState.addChild(text);
        
        var downState:Sprite = new Sprite();
        downState.addChild(text);
        
        //create the button using SimpleButton class
        _button = new SimpleButton(normalState, hoverState, downState, normalState);
        addChild(_button);
        
        //add event listener for mouse click
        _button.addEventListener(MouseEvent.CLICK, onClick);
    }
    
    /**
    * onClick function that is called when the button is clicked.
    * It traces the label text of the button.
    **/
    private function onClick(event:MouseEvent):void {
        trace("Button clicked: " + this._label);
    }
    
    /**
    * Getter function for the label of the button.
    * @return The label text of the button.
    **/
    public function get label():String {
        return this._label;
    }
    
    /**
    * Setter function for the label of the button.
    * @param value The new label text for the button.
    **/
    public function set label(value:String):void {
        this._label = value;
        //update the text in the button
        var text:TextField = _button.upState.getChildAt(0) as TextField;
        text.text = value;
    }
    
    /**
    * Getter function for the width of the button.
    * @return The width of the button.
    **/
    public function get width():int {
        return this._width;
    }
    
    /**
    * Setter function for the width of the button.
    * @param value The new width for the button.
    **/
    public function set width(value:int):void {
        this._width = value;
        //update the width and position of button elements
        _button.upState.width = value;
        _button.overState.width = value;
        _button.downState.width = value;
        _button.hitTestState.width = value;
        
        _button.overState.x = value / 2;
        _button.downState.x = value / 2;
        _button.hitTestState.x = value / 2;
    }
    
    /**
    * Getter function for the height of the button.
    * @return The height of the button.
    **/
    public function get height():int {
        return this._height;
    }
    
    /**
    * Setter function for the height of the button.
    * @param value The new height for the button.
    **/
    public function set height(value:int):void {
        this._height = value;
        //update the height and position of button elements
        _button.upState.height = value;
        _button.overState.height = value;
        _button.downState.height = value;
        _button.hitTestState.height = value;
        
        _button.overState.y = value / 2;
        _button.downState.y = value / 2;
        _button.hitTestState.y = value / 2;
    }
}
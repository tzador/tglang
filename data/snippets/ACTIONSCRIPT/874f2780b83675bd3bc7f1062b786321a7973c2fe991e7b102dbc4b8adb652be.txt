//Creating a class
class Person {
    //Declaring properties
    private var name:String;
    private var age:Number;
    
    //Constructor function
    public function Person(newName:String, newAge:Number) {
        this.name = newName;
        this.age = newAge;
    }
    
    //Getter and Setter functions
    public function getName():String {
        return this.name;
    }
    
    public function setName(newName:String):Void { //Void as return type since no value is being returned
        this.name = newName;
    }
    
    public function getAge():Number {
        return this.age;
    }
    
    public function setAge(newAge:Number):Void {
        this.age = newAge;
    }
    
    //Method to print name and age
    public function printInfo():Void { 
        trace("Name: " + this.name);
        trace("Age: " + this.age);
    }
}

//Creating an instance of the Person class
var person1:Person = new Person("John", 25);

//Calling methods and getters
person1.printInfo(); //Output: Name: John, Age: 25
trace(person1.getAge()); //Output: 25

//Modifying properties using setters
person1.setName("Amy");
person1.setAge(30);

//Calling printInfo method again
person1.printInfo(); //Output: Name: Amy, Age: 30

//Inheriting from the Person class
class Employee extends Person {
    //Declaring additional properties
    private var position:String;
    private var salary:Number;
    
    //Constructor function
    public function Employee(newName:String, newAge:Number, newPosition:String, newSalary:Number) {
        //Calling super constructor to set initial name and age
        super(newName, newAge);
        //Setting additional properties
        this.position = newPosition;
        this.salary = newSalary;
    }
    
    //Overriding printInfo method to include position and salary
    override public function printInfo():Void {
        //Calling super method to print name and age
        super.printInfo();
        trace("Position: " + this.position);
        trace("Salary: $" + this.salary);
    }
}

//Creating an instance of the Employee class
var employee1:Employee = new Employee("Jane", 35, "Manager", 50000);

//Calling printInfo method
employee1.printInfo(); //Output: Name: Jane, Age: 35, Position: Manager, Salary: $50000
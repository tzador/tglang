/* Function to sort an array of numbers in ascending order using insertion sort */

function insertionSort(arr:Array):void {
    var temp:int; // temporary variable to store the current element

    for (var i:int = 1; i < arr.length; i++) { // loop through the array, starting at the second element
        temp = arr[i]; // store the current element in temp
        var j:int = i - 1; // index of the previous element in the array

        /* Move elements of arr[0..i-1] that are greater than temp, to one position ahead
        of their current position */
        while (j >= 0 && arr[j] > temp) { 
            arr[j + 1] = arr[j]; // shift the element one position to the right
            j--; // decrement j to check previous elements in the array
        }
        arr[j + 1] = temp; // insert the current element at the correct position in the sorted array
    }
}

/* Example Usage */

var numArr:Array = [5, 2, 9, 3, 8, 1, 7, 4, 6]; // create an array of numbers
trace("Original Array: " + numArr); // print the original array
insertionSort(numArr); // call the insertionSort function passing in the array
trace("Sorted Array: " + numArr); // print the sorted array
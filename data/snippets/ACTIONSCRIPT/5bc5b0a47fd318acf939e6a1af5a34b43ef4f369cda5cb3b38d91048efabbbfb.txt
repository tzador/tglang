/* This function checks if the given string is a palindrome */

private function isPalindrome(str:String):Boolean {
    /* Check if string is empty or has only one character */
    if (str == "" || str.length == 1) {
        return true;
    }
    
    /* Convert string to lowercase and remove non-alphanumeric characters */
    str = str.toLowerCase().replace(/[^a-z0-9]/g, "");
    
    /* Initialize left and right pointers */
    var leftIndex:int = 0;
    var rightIndex:int = str.length - 1;
    
    /* Loop until the pointers meet in the middle */
    while (leftIndex < rightIndex) {
        
        /* Check if characters at left and right indexes are equal */
        if (str.charAt(leftIndex) != str.charAt(rightIndex)) {
            return false;
        }

        /* Move pointers to next characters */
        leftIndex++;
        rightIndex--;
    }
    
    /* If loop finishes without returning false, string is a palindrome */
    return true;
}

/* Sample usage */
trace(isPalindrome("Racecar")); // Outputs: true
trace(isPalindrome("Hello")); // Outputs: false
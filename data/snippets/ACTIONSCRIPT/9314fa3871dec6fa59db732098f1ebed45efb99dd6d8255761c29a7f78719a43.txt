// This code snippet shows how to implement a function that calculates the nth Fibonacci number

// Create a new function called fib with one parameter n, representing the index of the Fibonacci number to be calculated
function fib(n:int):int {
    // Create a base case for n = 0 and n = 1, which have predefined Fibonacci numbers of 0 and 1 respectively
    if (n == 0 || n == 1) {
        // Return the predefined number directly
        return n;
    }
    // For all other values of n, use recursion to calculate the Fibonacci number
    else {
        // Call the function on the previous two indices and add the results together to get the Fibonacci number
        return fib(n-1) + fib(n-2);
    }
}
// Call the fib function on the desired index and store the result in a variable
var fibonacci:int = fib(7); // fibonacci will now hold the value of the 7th Fibonacci number, which is 13
// Print the result to the console
trace(fibonacci); // Output: 13
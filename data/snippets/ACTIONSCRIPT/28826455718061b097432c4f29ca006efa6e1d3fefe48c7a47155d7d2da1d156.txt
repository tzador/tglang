/** DataManager class to handle data retrieval and storage */
// Import statement to use flash.net library for networking
import flash.net.*;

// Class definition for DataManager
public class DataManager
{
    // Private variable to store the data retrieved from server
    private var serverData:Object;
    
    // Constructor function for DataManager class
    public function DataManager()
    {
        // Initialize the serverData variable as an empty object
        this.serverData = new Object();
    }
    
    /**
    * Function to retrieve data from server using a GET request
    * @param url The URL of the server
    * @param callback Function to be executed upon successful data retrieval
    */
    public function getDataFromServer(url:String, callback:Function):void
    {
        // Create a new URLRequest object with the provided URL
        var request:URLRequest = new URLRequest(url);
        
        // Create a new URLLoader object to handle the request
        var loader:URLLoader = new URLLoader();
        
        // Add event listener to handle successful data retrieval
        loader.addEventListener(Event.COMPLETE, function(event:Event):void {
            // Convert the retrieved data from string format to JSON
            serverData = JSON.parse(event.target.data);
            
            // Call the provided callback function with the retrieved data as argument
            callback(serverData);
        });
        
        // Make the GET request to the server
        loader.load(request);
    }
    
    /**
    * Function to store data on the server using a POST request
    * @param url The URL of the server
    * @param data The data to be stored
    * @param callback Function to be executed upon successful data storage
    */
    public function storeDataOnServer(url:String, data:Object, callback:Function):void
    {
        // Create a new URLRequest object with the provided URL
        var request:URLRequest = new URLRequest(url);
        
        // Set the method to POST
        request.method = URLRequestMethod.POST;
        
        // Set the data to be sent as a URLVariables object,
        // which will encode the data in key-value pairs
        var variables:URLVariables = new URLVariables();
        
        // Loop through the data object and add its keys and values to the variables object
        for (var key:String in data) {
            variables[key] = data[key];
        }
        
        // Set the data to be sent as the variables object
        request.data = variables;
        
        // Create a new URLLoader object to handle the request
        var loader:URLLoader = new URLLoader(request);
        
        // Add event listener to handle successful data storage
        loader.addEventListener(Event.COMPLETE, function(event:Event):void {
            // Call the provided callback function with true as argument to indicate successful storage
            callback(true);
        });
        
        // Make the POST request to the server
        loader.load(request);
    }
}
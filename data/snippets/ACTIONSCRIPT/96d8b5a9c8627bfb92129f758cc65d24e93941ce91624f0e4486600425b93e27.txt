// placeholder for actionscript code

/**
 * Creates a custom class for a game character that extends MovieClip
 * and implements an interface for movement and attacks.
 */
public class GameCharacter extends MovieClip implements IMovable, IAttackable {
	
	// variables to store character attributes
	private var _name:String;
	private var _strength:int;
	private var _health:int;
	
	/**
	 * Creates a constructor for the character class.
	 * @param name The character's name
	 * @param strength The character's strength
	 * @param health The character's health
	 */
	public function GameCharacter(name:String, strength:int, health:int) {
		this._name = name;
		this._strength = strength;
		this._health = health;
	}
	
	/**
	 * Implements the move method from IMovable interface.
	 * This method moves the character a certain amount of pixels in the specified direction.
	 * @param direction The direction to move in
	 * @param distance The amount of pixels to move
	 */
	public function move(direction:String, distance:int):void {
		// code for moving the character
	}
	
	/**
	 * Implements the attack method from IAttackable interface.
	 * This method performs an attack action by the character with the specified attack power.
	 * @param attackPower The attack power of the character
	 */
	public function attack(attackPower:int):void {
		// code for performing an attack
	}
	
	/**
	 * Provides a method to display the current health of the character.
	 * @return The character's current health
	 */
	public function getHealth():int {
		return this._health;
	}
	
	/**
	 * Provides a method to update the character's health after an attack.
	 * @param damage The amount of damage taken by the character
	 */
	public function takeDamage(damage:int):void {
		this._health -= damage; // reduces health based on damage taken
	}
	
}
//Create a class named Employee that extends the Person class
class Employee extends Person {
    //Define private properties of the Employee class
    private var _employeeID:int;
    private var _department:String;
    
    //Define a constructor that takes in parameters for each property
    public function Employee(name:String, age:int, employeeID:int, department:String) {
        //Call the super constructor of the Person class to set the name and age properties
        super(name, age);
        //Assign the employeeID and department parameters to the respective properties
        _employeeID = employeeID;
        _department = department;
    }
    
    //Define getter and setter methods for the private properties
    public function get employeeID():int {
        return _employeeID;
    }
    public function set employeeID(value:int):void {
        _employeeID = value;
    }
    public function get department():String {
        return _department;
    }
    public function set department(value:String):void {
        _department = value;
    }
    
    //Define a method to display the Employee's information
    public function displayInfo():void {
        //Use string concatenation to create a message
        var message:String = "Name: " + this.name + "\nAge: " + this.age + 
        "\nEmployee ID: " + _employeeID + "\nDepartment: " + _department;
        //Output message to console
        trace(message);
    }
}

//Create an instance of the Employee class
var employee:Employee = new Employee("John Smith", 30, 123456, "Marketing");
//Call the displayInfo() method to display the Employee's information
employee.displayInfo();

//Output:
// Name: John Smith
// Age: 30
// Employee ID: 123456
// Department: Marketing
// This code snippet is a class that represents a vehicle
class Vehicle {
  // private property that stores the type of vehicle
  private var _type:String;
  
  // public getter and setter methods for the type property
  public function get type():String {
    return this._type;
  }
  
  public function set type(newType:String):void {
    this._type = newType;
  }
  
  // private property that stores the current speed of the vehicle
  private var _speed:Number;
  
  // public getter and setter methods for the speed property
  public function get speed():Number {
    return this._speed;
  }
  
  public function set speed(newSpeed:Number):void {
    // validate input to ensure speed is always a positive value
    if (newSpeed < 0) {
      throw new Error("Speed cannot be negative.");
    } else {
      this._speed = newSpeed;
    }
  }
  
  // constructor function that takes in a type parameter to set the vehicle type
  public function Vehicle(type:String) {
    this.type = type;
    this.speed = 0; // default speed is set to 0
  }
  
  // method to increase the speed of the vehicle
  public function accelerate(increase:Number):void {
    this.speed += increase;
  }
  
  // method to decrease the speed of the vehicle
  public function decelerate(decrease:Number):void {
    this.speed -= decrease;
  }
  
  // method to display information about the vehicle
  public function displayInfo():String {
    // use string interpolation to display the type and speed of the vehicle
    return `This ${this.type} is currently going at a speed of ${this.speed} km/h.`;
  }
}

// create a new instance of Vehicle class with type "car"
var car:Vehicle = new Vehicle("car");

// increase the speed of the car to 60 km/h
car.accelerate(60);

// display information about the car
trace(car.displayInfo()); // outputs: This car is currently going at a speed of 60 km/h.
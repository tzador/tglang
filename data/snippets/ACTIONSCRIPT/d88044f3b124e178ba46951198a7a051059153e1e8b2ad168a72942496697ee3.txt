/* This code snippet generates a custom photo album using ActionScript */

// Create an array to store the images
var photos:Array = [
  "photo1.jpg",
  "photo2.jpg",
  "photo3.jpg",
  "photo4.jpg"
];

// Set the initial index of the photo shown
var currentPhotoIndex:Number = 0;

// Create a MovieClip to hold the photo album
var album:MovieClip = new MovieClip();
album.x = 200;
album.y = 200;

// Create a TextField to display the photo title
var titleTxt:TextField = new TextField();
titleTxt.width = 500;
titleTxt.autoSize = TextFieldAutoSize.CENTER;
titleTxt.text = "Custom Photo Album";
titleTxt.setTextFormat(new TextFormat("Arial", 24, 0x000000, true));
titleTxt.y = 450;
titleTxt.x = (stage.stageWidth - titleTxt.width)/2;
addChild(titleTxt);

// Create a function to display the current photo in the album
function showPhoto():void {
  // Remove any existing photo in the album
  if (album.numChildren > 0) {
    album.removeChildAt(0);
  }

  // Create a new Loader to load the current photo from the array
  var loader:Loader = new Loader();
  loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onPhotoLoaded);
  loader.load(new URLRequest(photos[currentPhotoIndex]));
}

// Create an event listener for when the photo is loaded and add it to the album
function onPhotoLoaded(event:Event):void {
  // Set the size and position of the loaded photo
  event.target.content.width = 800;
  event.target.content.height = 600;
  event.target.content.x = -event.target.content.width/2;
  event.target.content.y = -event.target.content.height/2;

  // Add the photo to the album
  album.addChild(event.target.content);
}

// Create a function to go to the next photo in the album
function nextPhoto():void {
  // Increment the current photo index
  currentPhotoIndex++;

  // Check if the index is exceeding the length of the array
  if (currentPhotoIndex > photos.length - 1) {
    // Reset the index if it is exceeding the length
    currentPhotoIndex = 0;
  }

  // Call the showPhoto function to display the new photo
  showPhoto();
}

// Create a function to go to the previous photo in the album
function prevPhoto():void {
  // Decrement the current photo index
  currentPhotoIndex--;

  // Check if the index is less than 0
  if (currentPhotoIndex < 0) {
    // Set the index to the last photo in the array
    currentPhotoIndex = photos.length - 1;
  }

  // Call the showPhoto function to display the new photo
  showPhoto();
}

// Add event listeners to the stage for keyboard input
stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyPress);

// Create a function to handle the keyboard input
function onKeyPress(event:KeyboardEvent):void {
  // Check which key is pressed
  switch (event.keyCode) {
    case Keyboard.RIGHT:
      // If right arrow key is pressed, call nextPhoto function
      nextPhoto();
      break;
    case Keyboard.LEFT:
      // If left arrow key is pressed, call prevPhoto function
      prevPhoto();
      break;
  }
}

// Add the album to the stage
addChild(album);

// Show the initial photo
showPhoto();
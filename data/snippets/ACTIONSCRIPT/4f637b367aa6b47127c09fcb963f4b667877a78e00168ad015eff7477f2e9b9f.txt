// This is a complex and long code snippet in Actionscript
// It uses loops and conditional statements to create a unique output

// Declare an array of integers
var numbers:Array = [1, 2, 3, 4, 5];

// Create a function to calculate the sum of an array of numbers
// The function takes in an array of integers as a parameter
function calculateSum(numbers:Array):int {

    // Declare and initialize a variable to store the sum
    var sum:int = 0;

    // Use a for loop to iterate through the array
    // The loop increments the index by 1 until it reaches the length of the array
    for (var i:int = 0; i < numbers.length; i++) {

        // Use a conditional statement to check if the current number is even
        // If the number is even, add it to the sum
        // If the number is odd, skip it
        if (numbers[i] % 2 == 0) {
            sum += numbers[i];
        }
    }

    // Return the sum
    return sum;
}

// Call the function and pass in the array as an argument
var result:int = calculateSum(numbers);

// Print the result to the console
trace(result); // Output: 6 (2 + 4 = 6)

// Create a class to represent a student
class Student {
    // Properties of a student
    var name:String;
    var age:int;
    var grade:int;

    // Constructor function to initialize the properties
    function Student(name:String, age:int, grade:int) {
        // Use the "this" keyword to refer to the current object
        this.name = name;
        this.age = age;
        this.grade = grade;
    }

    // Method to get the student's details in a formatted string
    function getDetails():String {
        return "Name: " + name + ", Age: " + age + ", Grade: " + grade;
    }
}

// Create an array of students
var students:Array = [
    new Student("John", 17, 11),
    new Student("Sarah", 16, 10),
    new Student("Michael", 18, 12)
];

// Use a for each loop to iterate through the array of students
// The loop assigns each element in the array to a variable "student"
// This allows us to access the properties and methods of each student
for each (var student:Student in students) {
    // Print the student's details to the console
    trace(student.getDetails());
}
// Output: Name: John, Age: 17, Grade: 11
//         Name: Sarah, Age: 16, Grade: 10
//         Name: Michael, Age: 18, Grade: 12
//Function that calculates Fibonacci sequence up to a given number
private function fibonacci(n:int):void { //function called fibonacci with parameter n, set as an integer
  var prev:int = 0; //variable prev set as an integer and initialized as 0
  var next:int = 1; //variable next set as an integer and initialized as 1
  for(var i:int = 0; i <= n; i++){ //for loop starts at 0 and continues until i is equal to or less than n, with i increasing by 1 each iteration
    if(i <= 1){ //condition to check if i is less than or equal to 1
      //Print ‘0’ if i is equal to 0, print ‘1’ if i is equal to 1
      trace(i == 0 ? prev : next); //if statement using ternary operator to print prev if i is 0, otherwise print next
    }
    else{ //if i is greater than 1, perform fibonacci calculation
      var temp:int = prev + next; //temporary variable set as the sum of prev and next
      prev = next; //prev becomes the value of next
      next = temp; //next becomes the value of temp (sum of prev and next)
      //Print fibonacci value
      trace(next); //print the value of ‘next’ variable, which is the current fibonacci number
    }
  }
}

//Function call with parameter
fibonacci(10); //calls the fibonacci function with parameter n as 10, which will calculate and print the fibonacci sequence up to 10
/** 
 * This function calculates the nth fibonacci number 
 * @param n the index of the fibonacci number to be calculated 
 * @return the calculated fibonacci number at index n 
 */ 
public function fibonacci(n:int):int { 
    if (n <= 0) return 0; // base case 
    if (n == 1) return 1; // base case 

    var fib1:int = 1; // initial values for first two fibonacci numbers 
    var fib2:int = 1; 

    // loop through the remaining fibonacci numbers 
    for (var i:int = 2; i < n; i++) { 
        var temp:int = fib2; // temporary variable to store the current value of fib2 
        fib2 = fib1 + fib2; // calculate the next fibonacci number 
        fib1 = temp; // update the values of fib1 and fib2 
    } 
    return fib2; // return the calculated fibonacci number 
} 

trace(fibonacci(5)); // prints 5 
trace(fibonacci(10)); // prints 55 
trace(fibonacci(15)); // prints 610
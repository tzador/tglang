import flash.events.KeyboardEvent; //Importing the KeyboardEvent class from the flash.events package
import flash.ui.Keyboard; //Importing the Keyboard class from the flash.ui package

var player:Player; //Declaring a variable for the player object
var enemy:Enemy; //Declaring a variable for the enemy object

stage.addEventListener(KeyboardEvent.KEY_DOWN, handleKeyDown); //Adding an event listener for a key being pressed down on the stage
function handleKeyDown(event:KeyboardEvent):void { //Creating a function to handle the key press event
  if (event.keyCode == Keyboard.LEFT) { //Checking if the key pressed is the left arrow key
    player.moveLeft(); //Calling the moveLeft method on the player object
  } else if (event.keyCode == Keyboard.RIGHT) { //Checking if the key pressed is the right arrow key
    player.moveRight(); //Calling the moveRight method on the player object
  } else if (event.keyCode == Keyboard.SPACE) { //Checking if the key pressed is the spacebar
    player.jump(); //Calling the jump method on the player object
  }
}

//Creating a loop to spawn enemy objects
for (var i:int = 0; i < 5; i++) {
  enemy = new Enemy(); //Instantiating a new Enemy object
  enemy.x = Math.random() * stage.stageWidth; //Setting the x position of the enemy to a random location on the stage
  enemy.y = Math.random() * (stage.stageHeight * 0.5); //Setting the y position of the enemy to a random location on the top half of the stage
  addChild(enemy); //Adding the enemy object to the stage
}

stage.addEventListener(Event.ENTER_FRAME, handleEnterFrame); //Adding an event listener for every frame that enters the stage
function handleEnterFrame(event:Event):void { //Creating a function to handle the Enter Frame event
  //Creating a loop to check collision between the player and enemies
  for (var j:int = 0; j < numChildren; j++) {
    var child:DisplayObject = getChildAt(j); //Getting the current child object at the current index
    if (child is Enemy) { //Checking if the child object is an instance of the Enemy class
      if (player.hitTestObject(child)) { //Checking if there is a collision between the player and the enemy
        player.takeDamage(); //Calling the takeDamage method on the player object
      }
    }
  }
}

//Defining the Player Class
class Player extends Sprite {
  var health:int; //Declaring a variable for the player's health
  var speed:Number; //Declaring a variable for the player's speed

  //Constructor function for the Player class
  function Player() {
    health = 100; //Initializing the player's health to 100
    speed = 5; //Initializing the player's speed to 5
  }

  //Function to move the player to the left
  function moveLeft():void {
    this.x -= speed; //Decreasing the x position of the player by the speed amount
  }

  //Function to move the player to the right
  function moveRight():void {
    this.x += speed; //Increasing the x position of the player by the speed amount
  }

  //Function for the player to jump
  function jump():void {
    this.y -= 50; //Increasing the y position of the player by 50 (simulates a jump)
  }

  //Function for the player to take damage
  function takeDamage():void {
    health -= 10; //Decreasing the player's health by 10
  }
}

//Defining the Enemy Class
class Enemy extends Sprite {
  var speed:Number; //Declaring a variable for the enemy's speed
  function Enemy() {
    speed = 3; //Initializing the enemy's speed to 3
  }

  //Function to move the enemy down the screen
  function moveDown():void {
    this.y += speed; //Increasing the y position of the enemy by the speed amount
  }
}
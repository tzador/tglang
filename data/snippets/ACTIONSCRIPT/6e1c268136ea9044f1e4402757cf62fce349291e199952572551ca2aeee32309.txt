// Code snippet for a function that checks if a number is prime or not
function isPrime(num:int):Boolean {
    // If number is less than 2, it is not prime
    if (num < 2) {
        return false;
    }
    // Loop through all numbers from 2 to the square root of the number
    for (var i:int = 2; i <= Math.sqrt(num); i++) {
        // If the number is divisible by any other number, it is not prime
        if (num % i == 0) {
            return false;
        }
    }
    // If the number is not divisible by any number, it is prime
    return true;
}

// Code snippet for a class representing a person
class Person {
    // Private variables for the person's name and age
    private var name:String;
    private var age:int;
    
    // Constructor function to initialize the name and age of the person
    public function Person(name:String, age:int) {
        this.name = name;
        this.age = age;
    }
    
    // Function to get the person's name
    public function getName():String {
        return this.name;
    }
    
    // Function to get the person's age
    public function getAge():int {
        return this.age;
    }
    
    // Function to greet the person
    public function greet():void {
        trace("Hello, my name is " + this.name + " and I am " + this.age + " years old!");
    }
}

// Code snippet for creating and using a Person object
// Create a new Person with name "John" and age 25
var john:Person = new Person("John", 25);
// Call the greet function to print a greeting
john.greet();
// Output: Hello, my name is John and I am 25 years old!
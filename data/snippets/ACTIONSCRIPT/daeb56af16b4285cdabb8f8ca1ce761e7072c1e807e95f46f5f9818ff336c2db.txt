/** 
* This code snippet demonstrates a complex function in ActionScript with conditional statements and loops.
* It takes in an array of numbers and returns the sum of all even numbers in the array.
*/

// Create a function with two parameters: an array of numbers and a boolean value.
function sumEvenNumbers(array:Array, useRecursion:Boolean):int {

    // Initialize a variable to store the sum of even numbers.
    var sum:int = 0;

    // Check if recursion should be used.
    if(useRecursion) {

        // Initialize a variable to store the current index.
        var i:int = 0;

        // Create a recursive function that adds even numbers in the array.
        function recursiveSum():void {

            // Check if the current index is within the array's length.
            if(i < array.length) {

                // Check if the current number is even.
                if(array[i] % 2 == 0) {

                    // Add the current number to the sum.
                    sum += array[i];
                }

                // Increment the index.
                i++;

                // Call the recursive function again.
                recursiveSum();
            }
        }

        // Call the recursive function to start adding even numbers.
        recursiveSum();
    }
    else {

        // Loop through the array.
        for(var i:int = 0; i < array.length; i++) {

            // Check if the current number is even.
            if(array[i] % 2 == 0) {

                // Add the current number to the sum.
                sum += array[i];
            }
        }
    }

    // Return the total sum of even numbers.
    return sum;
}

// Example usage.
var numbers:Array = [1, 2, 3, 4, 5, 6, 7, 8];
var evenSum:int = sumEvenNumbers(numbers, true);
trace(evenSum); // Outputs: 20
/**
 * This function calculates the nth Fibonacci number using recursion
 * @param n the position of the Fibonacci number to be calculated
 * @return the nth Fibonacci number
 */
function fibonacci(n:int):int {
    // base case
    if (n <= 1) {
        return n;
    } 
    
    // recursive calls to calculate the previous two Fibonacci numbers
    var previous:int = fibonacci(n - 1);
    var prevPrev:int = fibonacci(n - 2);
    
    // calculate the nth Fibonacci number by adding the previous two numbers
    var current:int = previous + prevPrev;
    
    return current;
}

// sample input and output
trace(fibonacci(5)); // output: 5
trace(fibonacci(10)); // output: 55
trace(fibonacci(15)); // output: 610
// Creates a class named "Person"
package {
	// Imports the "flash.events" library
	import flash.events.*;
	
	// Defines the class "Person" with "EventDispatcher" as the base class
	public class Person extends EventDispatcher {
		
		// Declares private variables for storing name and age
		private var _name:String;
		private var _age:int;
		
		// Defines a constructor function that takes in name and age as arguments
		public function Person(name:String, age:int) {
			// Sets the values of the private variables to the arguments passed in
			_name = name;
			_age = age;
			
			// Triggers the "CreationComplete" event after the object is created
			dispatchEvent(new Event("CreationComplete"));
		}
		
		// Getter function for the name variable
		public function get name():String {
			// Returns the value of the private variable "name"
			return _name;
		}
		
		// Setter function for the name variable
		public function set name(value:String):void {
			// Sets the value of the private variable "name" to the value passed in
			_name = value;
			
			// Triggers a "NameChanged" event to notify any listeners of the change
			dispatchEvent(new Event("NameChanged"));
		}
		
		// Getter function for the age variable
		public function get age():int {
			// Returns the value of the private variable "age"
			return _age;
		}
		
		// Setter function for the age variable
		public function set age(value:int):void {
			// Sets the value of the private variable "age" to the value passed in
			_age = value;
			
			// Triggers an "AgeChanged" event to notify any listeners of the change
			dispatchEvent(new Event("AgeChanged"));
		}
		
		// Function for calculating and returning the year of birth based on the age
		public function get yearOfBirth():int {
			// Calculates the year of birth by subtracting the age from the current year
			var currentYear:Date = new Date();
			var yearOfBirth:int = currentYear.fullYear - _age;
			
			// Returns the calculated year of birth
			return yearOfBirth;
		}
	}
}
/**
 * A class representing a person
 */
class Person {
  private var name:String;
  private var age:Number;
  private var occupation:String;

  /**
   * Constructor for Person class
   * @param name The name of the person
   * @param age The age of the person
   * @param occupation The occupation of the person
   */
  public function Person(name:String, age:Number, occupation:String) {
    this.name = name;
    this.age = age;
    this.occupation = occupation;
  }

  /**
   * A method to get the current age of the person
   * @return The current age of the person
   */
  public function getAge():Number {
    return this.age;
  }

  /**
   * A method to set the occupation of the person
   * @param occupation The occupation to set
   */
  public function setOccupation(occupation:String):Void {
    this.occupation = occupation;
  }

  /**
   * A method to introduce the person and their occupation
   * @return A string with the person's name and occupation
   */
  public function introduce():String {
    return "Hi, my name is " + this.name + " and I am a " + this.occupation + ".";
  }
}

// Example usage
var person:Person = new Person("John", 25, "Software Developer");
trace(person.introduce()); // Output: Hi, my name is John and I am a Software Developer.
person.setOccupation("Web Developer");
trace(person.introduce()); // Output: Hi, my name is John and I am a Web Developer.
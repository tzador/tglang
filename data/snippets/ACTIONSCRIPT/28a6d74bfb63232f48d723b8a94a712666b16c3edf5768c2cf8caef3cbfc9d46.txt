/**
 * This class represents a custom button that displays a text label.
 * It includes properties for setting the text, font size, and background color.
 */
package com.example.controls {
  // Import necessary classes
  import flash.display.Sprite;
  import flash.text.TextField;
  import flash.text.TextFormat;
  
  // Define class
  public class CustomButton extends Sprite {
    // Private properties
    private var _label:String;
    private var _fontSize:int;
    private var _bgColor:uint;
    private var _textField:TextField;
    
    /**
     * Constructor function.
     * @param label The text to be displayed on the button.
     * @param fontSize The desired font size for the text label.
     * @param bgColor The background color for the button.
     */
    public function CustomButton(label:String, fontSize:int, bgColor:uint) {
      super();
      
      // Store values passed in constructor
      _label = label;
      _fontSize = fontSize;
      _bgColor = bgColor;
      
      // Initialize text field
      _textField = new TextField();
      _textField.text = _label; // Set text
      _textField.selectable = false; // Disable text selection
      _textField.autoSize = "left"; // Auto-adjust text field width
      _textField.defaultTextFormat = new TextFormat("_sans", _fontSize); // Set font and size
      _textField.setTextFormat(_textField.defaultTextFormat); // Apply text format
      
      // Draw background
      graphics.beginFill(_bgColor);
      graphics.drawRect(0, 0, _textField.width + 10, _textField.height + 10);
      graphics.endFill();
      
      // Add text field to stage
      addChild(_textField);
    }
    
    /**
     * Getter for label property.
     */
    public function get label():String {
      return _label;
    }
    
    /**
     * Setter for label property.
     */
    public function set label(value:String):void {
      _label = value;
      
      // Update text field
      _textField.text = _label;
    }
    
    /**
     * Getter for fontSize property.
     */
    public function get fontSize():int {
      return _fontSize;
    }
    
    /**
     * Setter for fontSize property.
     */
    public function set fontSize(value:int):void {
      _fontSize = value;
      
      // Update text field
      _textField.defaultTextFormat = new TextFormat("_sans", _fontSize);
      _textField.setTextFormat(_textField.defaultTextFormat);
    }
    
    /**
     * Getter for bgColor property.
     */
    public function get bgColor():uint {
      return _bgColor;
    }
    
    /**
     * Setter for bgColor property.
     */
    public function set bgColor(value:uint):void {
      _bgColor = value;
      
      // Update background color
      graphics.clear();
      graphics.beginFill(_bgColor);
      graphics.drawRect(0, 0, _textField.width + 10, _textField.height + 10);
      graphics.endFill();
    }
  }
}
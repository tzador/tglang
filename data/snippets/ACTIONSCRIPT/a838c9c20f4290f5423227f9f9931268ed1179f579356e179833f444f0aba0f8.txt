/**
 * A class representing a person with a name and age
 */
class Person {
    private var name:String;
    private var age:int;

    /**
     * Constructor function to create a new Person object with given name and age
     * @param name A string representing the person's name
     * @param age An integer representing the person's age
     */
    public function Person(name:String, age:int) {
        this.name = name;
        this.age = age;
    }

    /**
     * Getter function to retrieve the person's name
     * @return The person's name as a string
     */
    public function getName():String {
        return this.name;
    }

    /**
     * Getter function to retrieve the person's age
     * @return The person's age as an integer
     */
    public function getAge():int {
        return this.age;
    }

    /**
     * Setter function to update the person's name
     * @param newName A string representing the new name to set
     */
    public function setName(newName:String):void {
        this.name = newName;
    }

    /**
     * Setter function to update the person's age
     * @param newAge An integer representing the new age to set
     */
    public function setAge(newAge:int):void {
        this.age = newAge;
    }
}

// Create a new Person object with name "John" and age 25
var john:Person = new Person("John", 25);

// Retrieve John's name and age and print them to the console
trace(john.getName()); // Output: "John"
trace(john.getAge()); // Output: 25

// Update John's name and age and print them to the console
john.setName("Johnny");
john.setAge(30);
trace(john.getName()); // Output: "Johnny"
trace(john.getAge()); // Output: 30
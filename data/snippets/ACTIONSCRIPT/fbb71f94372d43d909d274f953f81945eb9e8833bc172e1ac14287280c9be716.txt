/**
 * Function that utilizes recursion to
 * calculate the factorial of a given number
 *
 * @param n: the number to calculate the factorial of
 * @return the factorial of the given number
 */
function factorial(n: int): int {
  if (n <= 1) {
    return 1;
  }
  else {
    return n * factorial(n - 1);
  }
}

/**
 * Class representing a person with a name and age
 */
class Person {

  private var name: String;
  private var age: int;

  /**
   * Constructor for the Person class
   *
   * @param name: the name of the person
   * @param age: the age of the person
   */
  function Person(name: String, age: int) {
    this.name = name;
    this.age = age;
  }

  /**
   * Method for getting the name of the person
   *
   * @return the name of the person
   */
  public function getName(): String {
    return name;
  }

  /**
   * Method for getting the age of the person
   *
   * @return the age of the person
   */
  public function getAge(): int {
    return age;
  }

  /**
   * Method for setting the name of the person
   *
   * @param name: the new name for the person
   */
  public function setName(name: String): void {
    this.name = name;
  }

  /**
   * Method for setting the age of the person
   *
   * @param age: the new age for the person
   */
  public function setAge(age: int): void {
    this.age = age;
  }
}
/* This is a complex code snippet in ACTIONSCRIPT that creates a custom animated button. */
 
package com.example.buttons
{
    // Import necessary libraries
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.text.TextFormat;
    
    // Create a class for the custom button
    public class CustomButton extends Sprite
    {
        // Declare variables for text and button style
        private var _label:String;
        private var _textFormat:TextFormat;
        private var _backgroundColor:uint;
        private var _textColor:uint;
        private var _hoverColor:uint;
        
        // Constructor function to initialize the button
        public function CustomButton(label:String, textFormat:TextFormat, backgroundColor:uint, textColor:uint, hoverColor:uint)
        {
            // Store the parameters in the corresponding variables
            _label = label;
            _textFormat = textFormat;
            _backgroundColor = backgroundColor;
            _textColor = textColor;
            _hoverColor = hoverColor;
            
            // Call the function to create and add the button to the stage
            createButton();
        }
        
        // Function to create and add the button to the stage
        private function createButton():void
        {
            // Create a text field for the button label
            var labelTextField:TextField = new TextField();
            
            // Set the default text formatting and label
            labelTextField.defaultTextFormat = _textFormat;
            labelTextField.text = _label;
            
            // Set the position and size of the button label
            labelTextField.x = 10;
            labelTextField.y = 10;
            labelTextField.width = 80;
            labelTextField.height = 30;
            
            // Create a sprite for the button background
            var backgroundSprite:Sprite = new Sprite();
            
            // Set the color and size of the background
            backgroundSprite.graphics.beginFill(_backgroundColor);
            backgroundSprite.graphics.drawRect(0, 0, 100, 50);
            backgroundSprite.graphics.endFill();
            
            // Add the button background and label to the custom button
            this.addChild(backgroundSprite);
            this.addChild(labelTextField);
            
            // Add event listeners for mouse over and mouse out
            this.addEventListener(MouseEvent.MOUSE_OVER, onButtonHover);
            this.addEventListener(MouseEvent.MOUSE_OUT, onButtonHover);
        }
        
        // Function to handle button hover effect
        private function onButtonHover(e:MouseEvent):void
        {
            // Change the button background color depending on the event type
            if (e.type == MouseEvent.MOUSE_OVER)
            {
                this.getChildAt(0).graphics.clear();
                this.getChildAt(0).graphics.beginFill(_hoverColor);
                this.getChildAt(0).graphics.drawRect(0, 0, 100, 50);
                this.getChildAt(0).graphics.endFill();
            }
            else
            {
                this.getChildAt(0).graphics.clear();
                this.getChildAt(0).graphics.beginFill(_backgroundColor);
                this.getChildAt(0).graphics.drawRect(0, 0, 100, 50);
                this.getChildAt(0).graphics.endFill();
            }
        }
    }
}
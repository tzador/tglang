/**
* This function calculates the nth Fibonacci number using a recursive algorithm.
*
* @param n the index of the desired Fibonacci number
* @return the nth Fibonacci number
*/

function fibonacci(n:int):int {
    // Base case
    if (n == 1 || n == 2) {
        return 1;
    }
    // Recursive case  
    else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

/*
* Initialize variables for storing current and previous Fibonacci numbers
* and a counter for tracking iterations
*/
var current:int = 1;
var previous:int = 1;
var counter:int = 2;

// Loop until the desired Fibonacci number is reached
while (counter < n) {
    // Calculate the next Fibonacci number by adding the current and previous ones
    var next:int = current + previous;
    // Update the current and previous Fibonacci numbers
    previous = current;
    current = next;
    // Increase the counter
    counter++;
}

// Finally, print the result
trace("The " + n + "th Fibonacci number is: " + current);
import flash.display.Sprite; //importing the Sprite class from the flash.display package

/*A class named Shape that extends the Sprite class 
and implements the IEventDispatcher interface*/
public class Shape extends Sprite implements IEventDispatcher {

	/*A private variable named _color of type uint (unsigned integer) 
	which will hold the color value of the shape*/
	private var _color:uint;

	/*A constructor function that takes in a uint parameter 
	named colorValue and sets the _color variable to that value*/
	public function Shape(colorValue:uint) {
		_color = colorValue;
	}

	/*A public function named drawShape that takes in two uint parameters 
	named widthValue and heightValue and returns nothing*/
	public function drawShape(widthValue:uint, heightValue:uint):void {
		/*Creating a new graphics object using the graphics property 
		of the Sprite class and storing it in the variable g*/
		var g:Graphics = this.graphics;

		//Setting the line style for the shape
		g.lineStyle(2, 0x000000);

		//Setting the fill color for the shape
		g.beginFill(_color);

		//Drawing a rectangle using the given width and height values
		g.drawRect(0, 0, widthValue, heightValue);

		//Ending the fill for the shape
		g.endFill();

		/*Adding an event listener for the mouse click event 
		using the addEventListener method and passing in the 
		clickEventHandler function as the event handler*/
		this.addEventListener(MouseEvent.CLICK, clickEventHandler);
	}

	/*A private function named clickEventHandler 
	that takes in an event parameter of type MouseEvent and returns nothing*/
	private function clickEventHandler(event:MouseEvent):void {
		//Changing the fill color of the shape to a random color
		this.graphics.beginFill(Math.random() * 0xFFFFFF);
		this.graphics.drawRect(0, 0, event.target.width, event.target.height);
		this.graphics.endFill();
	}
}

//Creating a new instance of the Shape class with a blue color value
var shape:Shape = new Shape(0x0000FF);

//Drawing the shape with a width of 200 and height of 150
shape.drawShape(200, 150);

//Adding the shape to the display list of the stage
this.addChild(shape);
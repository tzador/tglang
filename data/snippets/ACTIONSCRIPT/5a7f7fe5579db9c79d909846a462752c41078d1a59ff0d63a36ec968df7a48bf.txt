package{
    import flash.display.MovieClip;
    public class Main extends MovieClip{
        // creates a new Instance of the Game class
        var game:Game = new Game();
        
        // sets the background color of the stage
        stage.color = 0x000000;
        
        // adds the game to the stage
        addChild(game);
        
        // starts the game
        game.start();
        
    }
}

class Game extends MovieClip{
    // creates an array of game objects
    var gameObjects:Array = new Array();
    
    // sets the game's starting score
    var score:int = 0;
    
    // sets the game's starting time
    var time:int = 60;
    
    // function to start the game
    public function start():void{
        // creates a new Timer with a delay of 1 second
        var timer:Timer = new Timer(1000);
        
        // adds an event listener for the timer
        timer.addEventListener(TimerEvent.TIMER, onTimer);
        
        // starts the timer
        timer.start();
    }
    
    // function to handle the timer event
    private function onTimer(event:TimerEvent):void{
        // decreases the time by 1
        time--;
        
        // updates the display of the time
        updateTime();
        
        // checks if the time has run out
        if(time <= 0){
            // stops the game
            stop();
        }
    }
    
    // function to update the displayed score
    private function updateScore():void{
        // removes any existing score display
        if(getChildByName("scoreDisplay")){
            removeChild(getChildByName("scoreDisplay"));
        }
        
        // creates a new TextField for the score display
        var scoreDisplay:TextField = new TextField();
        
        // sets the name of the score display
        scoreDisplay.name = "scoreDisplay";
        
        // sets the text and formatting of the score display
        scoreDisplay.text = "Score: " + score.toString();
        scoreDisplay.width = 200;
        scoreDisplay.height = 50;
        scoreDisplay.x = 10;
        scoreDisplay.y = 10;
        scoreDisplay.textColor = 0xFFFFFF;
        
        // adds the score display to the stage
        addChild(scoreDisplay);
    }
    
    // function to update the displayed time
    private function updateTime():void{
        // removes any existing time display
        if(getChildByName("timeDisplay")){
            removeChild(getChildByName("timeDisplay"));
        }
        
        // creates a new TextField for the time display
        var timeDisplay:TextField = new TextField();
        
        // sets the name of the time display
        timeDisplay.name = "timeDisplay";
        
        // sets the text and formatting of the time display
        timeDisplay.text = "Time: " + time.toString();
        timeDisplay.width = 200;
        timeDisplay.height = 50;
        timeDisplay.x = 10;
        timeDisplay.y = 60;
        timeDisplay.textColor = 0xFFFFFF;
        
        // adds the time display to the stage
        addChild(timeDisplay);
    }
    
    // function to stop the game
    private function stop():void{
        // stops the game loop
        removeEventListener(Event.ENTER_FRAME, gameLoop);
        
        // displays final score
        trace("Final score: " + score.toString());
        
        // displays game over message
        var gameOver:TextField = new TextField();
        gameOver.text = "Game Over";
        gameOver.width = 200;
        gameOver.height = 50;
        gameOver.x = 100;
        gameOver.y = 200;
        addChild(gameOver);
    }
    
    // function to add a new game object to the stage
    public function addGameObject(gameObject:MovieClip):void{
        // adds the game object to the game array
        gameObjects.push(gameObject);
        
        // adds the game object to the stage
        addChild(gameObject);
    }
    
    // function to remove a game object from the stage
    public function removeGameObject(gameObject:MovieClip):void{
        // removes the game object from the game array
        gameObjects.splice(gameObjects.indexOf(gameObject), 1);
        
        // removes the game object from the stage
        removeChild(gameObject);
    }
    
    // function to update all game objects
    private function updateGameObjects():void{
        // loop through each game object
        for(var i:int = 0; i < gameObjects.length; i++){
            // updates the game object
            gameObjects[i].update();
        }
    }
    
    // function to handle the game loop
    private function gameLoop(event:Event):void{
        // update all game objects
        updateGameObjects();
        
        // update display of score
        updateScore();
    }
}

class GameObject extends MovieClip{
    // sets the game object's starting coordinates
    public var xStart:int;
    public var yStart:int;
    
    // sets the game object's movement speed
    public var speed:int;
    
    // function to update the game object's position
    public function update():void{
        // moves the game object
        this.x -= speed;
        
        // checks if the game object is off the screen
        if(this.x < 0){
            this.x = xStart;
        }
    }
}

class Ball extends GameObject{
    // sets the size of the ball
    private const BALL_SIZE:int = 50;
    
    // sets the ball's starting coordinates
    private var xStart:int;
    private var yStart:int;
    
    // constructor to set starting coordinates
    public function Ball(xStart:int, yStart:int){
        this.xStart = xStart;
        this.yStart = yStart;
        
        // sets the ball's size and color
        graphics.beginFill(0xFF0000);
        graphics.drawCircle(0, 0, BALL_SIZE/2);
        graphics.endFill();
        
        // sets the ball's starting position
        this.x = xStart;
        this.y = yStart;
    }
}

// creates a new instance of the Main class
var main:Main = new Main();
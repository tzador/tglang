// This code creates a custom class and adds functionality to create a button with custom text

package com.example {
    import flash.display.Shape;
    import flash.display.SimpleButton;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    
    /**
    * CustomButton class creates a button with custom text
    * @param label The label text that will be displayed on the button
    * @param width The width of the button
    * @param height The height of the button
    */
    public class CustomButton extends SimpleButton {
        private var _label:String;
        private var _width:Number;
        private var _height:Number;
        
        /**
        * Constructor - sets the label, width, and height of the button
        */
        public function CustomButton(label:String, width:Number, height:Number) {
            _label = label;
            _width = width;
            _height = height;
            
            createButton();
        }
        
        /**
        * Function to create the button and add functionality
        */
        private function createButton():void {
            // Create a shape for the button's background
            var bg:Shape = new Shape();
            bg.graphics.beginFill(0x00FF00);
            bg.graphics.drawRect(0, 0, _width, _height);
            bg.graphics.endFill();
            
            // Create a text field to display the label
            var label:TextField = new TextField();
            label.text = _label;
            label.autoSize = TextFieldAutoSize.LEFT;
            label.x = (_width - label.width) / 2;
            label.y = (_height - label.height) / 2;
            
            // Add the label and background shape to the up state of the button
            this.upState = bg;
            this.upState.addChild(label);
            
            // Add functionality to the button
            this.addEventListener(MouseEvent.CLICK, onClick);
        }
        
        /**
        * Function to handle the click event and dispatch a custom event
        */
        private function onClick(event:MouseEvent):void {
            dispatchEvent(new CustomEvent(CustomEvent.BUTTON_CLICK));
        }
    }
}
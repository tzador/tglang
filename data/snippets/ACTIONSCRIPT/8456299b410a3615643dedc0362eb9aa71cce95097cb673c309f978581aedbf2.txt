// This code creates a class for a game character
class Character {
    // Private variables
    private var _name:String;
    private var _hp:int;
    private var _maxHP:int;
    private var _attack:int;
    private var _defense:int;
    private var _speed:int;

    // Public variables
    public var level:int;
    public var experience:int;

    // Constructor function
    public function Character(name:String, hp:int, attack:int, defense:int, speed:int) {
        this._name = name;
        this._hp = hp;
        this._maxHP = hp;
        this._attack = attack;
        this._defense = defense;
        this._speed = speed;
        this.level = 1;
        this.experience = 0;
    }

    // Public getters for private variables
    public function get name():String {
        return this._name;
    }

    public function get hp():int {
        return this._hp;
    }

    public function get maxHP():int {
        return this._maxHP;
    }

    public function get attack():int {
        return this._attack;
    }

    public function get defense():int {
        return this._defense;
    }

    public function get speed():int {
        return this._speed;
    }

    // Public function to increase character's level and adjust stats accordingly
    public function levelUp():void {
        this.level++;
        this._maxHP += 10;
        this._attack += 5;
        this._defense += 5;
        this._speed += 2;
    }

    // Public function to add experience points and check for level up
    public function gainExperience(points:int):void {
        this.experience += points;
        // Check for level up
        while (this.experience >= 100) {
            this.experience -= 100;
            this.levelUp();
        }
    }

    // Public function for character to take damage
    public function takeDamage(damage:int):void {
        var dmgTaken:int = damage - this._defense;
        // Make sure damage taken is not negative
        if (dmgTaken < 0) {
            dmgTaken = 0;
        }
        this._hp -= dmgTaken;
        // Check for character's death
        if (this._hp <= 0) {
            this._hp = 0;
            trace(this._name + " has been defeated!");
        }
    }
}

// Create two character objects
var player:Character = new Character("Player", 100, 20, 10, 15);
var enemy:Character = new Character("Enemy", 80, 15, 5, 25);

// Fight between characters
player.takeDamage(enemy.attack);
enemy.takeDamage(player.attack);
player.gainExperience(50);
enemy.gainExperience(70);

// Print out character stats
trace(player.name + " has " + player.hp + " HP and is at level " + player.level);
trace(enemy.name + " has " + enemy.hp + " HP and is at level " + enemy.level);

/* Output:
Player has 85 HP and is at level 2
Enemy has 55 HP and is at level 2
*/
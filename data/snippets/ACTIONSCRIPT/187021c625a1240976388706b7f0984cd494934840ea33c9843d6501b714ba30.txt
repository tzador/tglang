// This code snippet creates a class named "Circle" with properties x and y representing the center point
// and a property radius to represent the circle's radius
class Circle {
    private var x: int;
    private var y: int;
    private var radius: Number;
    
    // Constructor function
    public function Circle(x: int, y: int, radius: Number) {
        this.x = x;
        this.y = y;
        this.radius = radius;
    }
    
    // Function to calculate the area of the circle
    public function calculateArea(): Number {
        return Math.PI * this.radius * this.radius;
    }
    
    // Function to calculate the circumference of the circle
    public function calculateCircumference(): Number {
        return 2 * Math.PI * this.radius;
    }
    
    // Function to determine if a point (xPoint, yPoint) is inside the circle
    public function isPointInside(xPoint: int, yPoint: int): Boolean {
        var distance: Number = Math.sqrt((xPoint - this.x) * (xPoint - this.x) + (yPoint - this.y) * (yPoint - this.y));
        return distance < this.radius;
    }
    
    // Getter function for x property
    public function get xPosition(): int {
        return this.x;
    }
    
    // Setter function for x property
    public function set xPosition(newX: int): void {
        this.x = newX;
    }
    
    // Getter function for y property
    public function get yPosition(): int {
        return this.y;
    }
    
    // Setter function for y property
    public function set yPosition(newY: int): void {
        this.y = newY;
    }
    
    // Getter function for radius property
    public function get circleRadius(): Number {
        return this.radius;
    }
    
    // Setter function for radius property
    public function set circleRadius(newRadius: Number): void {
        this.radius = newRadius;
    }
}
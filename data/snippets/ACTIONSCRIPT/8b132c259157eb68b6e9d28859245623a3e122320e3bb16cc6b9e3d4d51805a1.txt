/** 
 * This code snippet shows how to create a custom class in ActionScript and implement various methods and properties within it. 
 */

// Define the class with the 'dynamic' keyword to allow for dynamic properties
dynamic class CustomClass {
    
    // Constructor function that takes in two parameters and assigns them to properties
    public function CustomClass(param1:String, param2:int) {
        this._param1 = param1;
        this._param2 = param2;
    }
    
    // Private properties
    private var _param1:String;
    private var _param2:int;
    
    // Public property with getter and setter methods
    public var param3:String;
    public function getParam1():String {
        return this._param1;
    }
    public function setParam1(value:String):void {
        this._param1 = value;
    }
    
    // Static property
    public static var param4:int;
    
    // Public method that returns the sum of the private properties
    public function sumParams():int {
        return this._param1 + this._param2;
    }
    
    // Private method that concatenates two strings
    private function concatStrings(string1:String, string2:String):String {
        return string1 + string2;
    }
    
    // Static method that returns the result of the private method
    public static function concatStaticStrings(string1:String, string2:String):String {
        return CustomClass.concatStrings(string1, string2);
    }
    
}

// Create an instance of the CustomClass with the constructor
var myCustomClass:CustomClass = new CustomClass("Hello", 123);

// Set the value of the public property
myCustomClass.param3 = "World";

// Call the public method and print the result
trace(myCustomClass.sumParams()); // Output: 123HelloWorld

// Change the value of the private property using the setter method
myCustomClass.setParam1("Goodbye");

// Call the static method and print the result
trace(CustomClass.concatStaticStrings("Hello", "World")); // Output: HelloWorld
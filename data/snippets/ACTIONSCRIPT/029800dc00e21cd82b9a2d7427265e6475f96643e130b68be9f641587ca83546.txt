// FUNCTION TO CALCULATE FACTORIAL
/*
This function takes an integer as input and returns
the factorial of that number
*/
function factorial(num:int):int {
    var result:int = 1; // initialize result variable
    for (var i:int = 1; i <= num; i++) { // loop through numbers from 1 to num
        result *= i; // multiply result by each number
    }
    return result; // return the final result
}

// FUNCTION TO CHECK IF INPUT STRING IS PALINDROME
/*
This function takes a string as input and checks
if it is a palindrome (if it reads the same forwards and backwards)
It returns a boolean value (true or false)
*/
function checkPalindrome(str:String):Boolean {
    str = str.toLowerCase(); // convert string to lowercase for easier comparison
    var reversed:String = ""; // initialize reversed string variable
    for (var i:int = str.length - 1; i >= 0; i--) { // loop through characters in string in reverse order
        reversed += str.charAt(i); // add each character to reversed string
    }
    if (reversed == str) { // if reversed string is equal to original string
        return true; // return true
    } else { // otherwise
        return false; // return false
    }
}

// FUNCTION TO GENERATE FIBONACCI SEQUENCE
/*
This function takes an integer as input and generates
a Fibonacci sequence of that many numbers
It returns a string of numbers separated by spaces
*/
function generateFibonacci(num:int):String {
    var sequence:String = "0 1"; // initialize sequence variable with starting values
    var prev:int = 0; // starting variable 1 for sequence
    var current:int = 1; // starting variable 2 for sequence
    for (var i:int = 2; i < num; i++) { // loop through numbers starting from 2 (since first 2 values are already set)
        var next:int = prev + current; // calculate next number in sequence
        sequence += " " + next; // add next number to sequence string
        prev = current; // update previous number
        current = next; // update current number
    }
    return sequence; // return the final sequence string
}

// EXAMPLE USAGE OF FUNCTIONS
trace("Factorial of 5: " + factorial(5)); // should output 120
trace("Is 'racecar' a palindrome? " + checkPalindrome("racecar")); // should output true
trace("Fibonacci sequence of 8: " + generateFibonacci(8)); // should output 0 1 1 2 3 5 8 13
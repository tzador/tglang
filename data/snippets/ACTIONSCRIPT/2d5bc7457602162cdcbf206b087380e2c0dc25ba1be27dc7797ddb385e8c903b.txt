// This code snippet uses ACTIONSCRIPT to create a game character

package {

    // Import necessary classes and packages
    import flash.display.MovieClip;
    import flash.events.KeyboardEvent;
    import flash.ui.Keyboard;
    import flash.utils.Timer;
    import flash.events.TimerEvent;

    // Create a class for the game character
    public class GameCharacter extends MovieClip {

        // Define the properties of the character
        private var health:int = 100;
        private var speed:uint = 10;
        private var isMoving:Boolean = false;
        private var isDead:Boolean = false;
        private var timer:Timer;

        // Constructor function to initialize the character
        public function GameCharacter() {

            // Set the size and color of the character
            this.width = 50;
            this.height = 50;
            this.graphics.beginFill(0xFF0000);
            this.graphics.drawRect(0, 0, 50, 50);
            this.graphics.endFill();

            // Add event listeners for key presses and timer events
            stage.addEventListener(KeyboardEvent.KEY_DOWN, moveCharacter);
            stage.addEventListener(KeyboardEvent.KEY_UP, stopCharacter);
            timer = new Timer(1000);
            timer.addEventListener(TimerEvent.TIMER, increaseHealth);

            // Start the timer
            timer.start();
        }

        // Function to move the character based on key presses
        private function moveCharacter(event:KeyboardEvent):void {

            if (!isDead) {
                // Move the character depending on which key is pressed
                if (event.keyCode == Keyboard.LEFT) {
                    this.x -= speed;
                } else if (event.keyCode == Keyboard.RIGHT) {
                    this.x += speed;
                } else if (event.keyCode == Keyboard.UP) {
                    this.y -= speed;
                } else if (event.keyCode == Keyboard.DOWN) {
                    this.y += speed;
                }

                // Set isMoving to true to prevent key spamming
                isMoving = true;
            }
        }

        // Function to stop the character from moving
        private function stopCharacter(event:KeyboardEvent):void {

            // Set isMoving to false to allow character to move again
            isMoving = false;
        }

        // Function to increase the character's health every second
        private function increaseHealth(event:TimerEvent):void {

            // Increase health by 10 points
            health += 10;

            // If health exceeds 100, set it back to 100
            if (health > 100) {
                health = 100;
            }
        }

        // Function to take damage to the character's health
        public function takeDamage(damage:int):void {

            // If the character is not dead and currently not moving, take damage
            if (!isDead && !isMoving) {
                health -= damage;

                // If health drops to 0 or below, set isDead to true
                if (health <= 0) {
                    isDead = true;
                }
            }
        }
    }
}
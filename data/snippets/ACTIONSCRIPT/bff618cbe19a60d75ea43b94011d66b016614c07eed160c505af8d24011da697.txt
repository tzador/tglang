/**
 * A helper class for creating and animating shapes on the stage
 * @param width The width of the shape
 * @param height The height of the shape
 * @param color The color of the shape
 * @param x The x position of the shape
 * @param y The y position of the shape
 */
public class Shape extends Sprite{
    private var _width:Number;
    private var _height:Number;
    private var _color:uint;
    private var _x:Number;
    private var _y:Number;
    private var _shape:Sprite;
    private var _tween:TweenLite;
    private var _shapeType:String;
    
    /**
     * Constructor function for Shape class
     * @param width The width of the shape
     * @param height The height of the shape
     * @param color The color of the shape
     * @param x The x position of the shape
     * @param y The y position of the shape
     * @param shapeType The type of shape to create (circle, rectangle, triangle)
     */
    public function Shape(width:Number, height:Number, color:uint, x:Number, y:Number, shapeType:String) {
        _width = width;
        _height = height;
        _color = color;
        _x = x;
        _y = y;
        _shapeType = shapeType;
        
        //create the shape
        _shape = new Sprite();
        _shape.graphics.beginFill(color);
        
        //create the selected shape type
        switch(shapeType){
            case "circle":
                _shape.graphics.drawCircle(0, 0, width/2);
                break;
            case "rectangle":
                _shape.graphics.drawRect(0, 0, width, height);
                break;
            case "triangle":
                _shape.graphics.moveTo(0, 0);
                _shape.graphics.lineTo(width, 0);
                _shape.graphics.lineTo(width/2, height);
                _shape.graphics.lineTo(0, 0);
                break;
            default:
                throw new Error("Invalid shape type");
        }
        _shape.graphics.endFill();
        
        //add the shape to the stage
        this.addChild(_shape);
        
        //animate the shape
        animate();
    }
    
    /**
     * Function to animate the shape
     */
    private function animate():void {
        //create a tween to animate the shape
        _tween = new TweenLite(_shape, 1, {x:_x, y:_y, onComplete:onTweenComplete});
    }
    
    /**
     * Function to be called when the tween animation is completed
     */
    private function onTweenComplete():void {
        //create a new tween to animate the shape back to its original position
        _tween = new TweenLite(_shape, 1, {x:0, y:0, onComplete:onTweenComplete});
    }
}
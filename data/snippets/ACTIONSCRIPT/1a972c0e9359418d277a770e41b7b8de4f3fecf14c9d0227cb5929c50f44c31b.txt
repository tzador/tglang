//Create a class for a custom button
public class CustomButton extends MovieClip {
    //Declare private properties
    private var _label:TextField;
    private var _bgColor:uint;
    private var _textColor:uint;
    
    //Constructor function, takes in label text, background color and text color as parameters
    public function CustomButton(label:String, bgColor:uint, textColor:uint) {
        //Initialize properties
        _label = createLabel(label);
        _bgColor = bgColor;
        _textColor = textColor;
        //Call function to set up button visuals
        setUpButton();
    }
    
    //Function to create label
    private function createLabel(label:String):TextField {
        var tf:TextField = new TextField();
        tf.text = label;
        tf.selectable = false;
        tf.autoSize = TextFieldAutoSize.CENTER;
        return tf;
    }
    
    //Function to set up button visuals and functionality
    private function setUpButton():void {
        //Create a graphics object for drawing
        var graphics:Graphics = this.graphics;
        //Use the background color to draw a rectangle, representing the button background
        graphics.beginFill(_bgColor);
        graphics.drawRect(0, 0, _label.width + 10, _label.height + 10);
        //Set the text color for the label
        _label.textColor = _textColor;
        //Center the label inside the button
        _label.x = (this.width - _label.width) / 2;
        _label.y = (this.height - _label.height) / 2;
        //Add event listeners for mouse interactions
        this.addEventListener(MouseEvent.MOUSE_OVER, handleMouseOver);
        this.addEventListener(MouseEvent.MOUSE_OUT, handleMouseOut);
        this.addEventListener(MouseEvent.CLICK, handleClick);
    }
    
    //Function to handle mouse hover over button
    private function handleMouseOver(event:MouseEvent):void {
        //Change the background color to a lighter shade
        graphics.clear();
        graphics.beginFill(_bgColor + 0x222222);
        graphics.drawRect(0, 0, _label.width + 10, _label.height + 10);
    }
    
    //Function to handle mouse hover out of button
    private function handleMouseOut(event:MouseEvent):void {
        //Change the background color back to original color
        graphics.clear();
        graphics.beginFill(_bgColor);
        graphics.drawRect(0, 0, _label.width + 10, _label.height + 10);
    }
    
    //Function to handle click on button
    private function handleClick(event:MouseEvent):void {
        //Do something, like dispatch an event to handle button click functionality
        dispatchEvent(new Event(Event.COMPLETE));
    }
}
// This class represents a Book
class Book {
  private var name:String;
  private var author:String;
  private var pages:int;
  
  /**
    * Constructor for Book class
    * @param bookName - The name of the book
    * @param bookAuthor - The author of the book
    * @param bookPages - The number of pages in the book
    */
  public function Book(bookName:String, bookAuthor:String, bookPages:int) {
    this.name = bookName;
    this.author = bookAuthor;
    this.pages = bookPages;
  }
  
  /**
    * Returns the name of the book
    * @return String - The book's name
    */ 
  public function getName():String {
    return this.name;
  }
  
  /**
    * Returns the author of the book
    * @return String - The book's author
    */
  public function getAuthor():String {
    return this.author;
  }
  
  /**
    * Returns the number of pages in the book
    * @return int - The book's number of pages
    */
  public function getPages():int {
    return this.pages;
  }
  
  /**
    * Prints the book's information in a formatted string
    * @return String - Formatted string of the book's information
    */
  public function printBookInfo():String {
    var bookInfo:String = "Book Name: " + this.name + ", Author: " + this.author + ", Pages: " + this.pages;
    trace(bookInfo); // Prints the information in the console 
    return bookInfo;
  }
}

// Creating an instance of the Book class
var myBook:Book = new Book("The Great Gatsby", "F. Scott Fitzgerald", 218);

// Accessing and printing the book's name
trace(myBook.getName());

// Accessing and printing the book's author
trace(myBook.getAuthor());

// Accessing and printing the book's number of pages
trace(myBook.getPages());

// Printing the book's information
myBook.printBookInfo();

// Output:
"Book Name: The Great Gatsby, Author: F. Scott Fitzgerald, Pages: 218"
/**
 * This function iterates through an array of strings and returns
 * the number of unique strings in the array
 *
 * @param strings The array of strings to be checked
 * @return The number of unique strings in the array
 */
function countUniqueStrings(strings:Array):int {
  var uniqueStrings:Array = []; // Array to store unique strings
  for (var i:int = 0; i < strings.length; i++) { // Loop through array of strings
    var currentString:String = strings[i];
    var isUnique:Boolean = true; // Boolean variable to check if current string is unique
    for (var j:int = 0; j < uniqueStrings.length; j++) { // Loop through existing unique strings
      if (currentString == uniqueStrings[j]) { // Check if current string is already in unique strings array
        isUnique = false; // If it is, set isUnique to false
        break; // Exit loop since we've found a match
      }
    }
    if (isUnique) { // If isUnique is still true, add current string to unique strings array
      uniqueStrings.push(currentString);
    }
  }
  return uniqueStrings.length; // Return the length of the unique strings array
}
// This is a function that takes in two parameters, num1 and num2, and returns their sum
function add(num1:int, num2:int):int {
  var sum:int = num1 + num2; // create variable to store sum
  return sum; // return the sum to the caller
}

// This is a class called Person with two private properties, name and age
class Person {
  // private property for name, can only be accessed within the class
  private var name:String;
  // private property for age, can only be accessed within the class
  private var age:int;

  // Constructor for the Person class that takes in two parameters, name and age, and sets them as the private properties
  public function Person(name:String, age:int) {
    this.name = name; // set name property to the value of the name parameter
    this.age = age; // set age property to the value of the age parameter
  }

  // Public method to get the name of the person
  public function getName():String {
    return this.name; // return the name property to the caller
  }

  // Public method to get the age of the person
  public function getAge():int {
    return this.age; // return the age property to the caller
  }
}

// This is an array of Person objects
var people:Array = [];

// Loop 10 times to create 10 Person objects with different names and ages
for(var i:int = 0; i < 10; i++) {
  var name:String = "Person " + i; // create a name for the person using the loop counter
  var age:int = Math.floor(Math.random() * 50); // generate a random age between 0 and 50
  var person:Person = new Person(name, age); // create a new Person object with the generated name and age
  people.push(person); // add the person object to the array
}

// This is a public function to print out the names and ages of all Person objects in the array
public function printPeople(people:Array):void {
  // Loop through the array of Person objects
  for(var j:int = 0; j < people.length; j++) {
    var personName:String = people[j].getName(); // get the name of the person at the current index
    var personAge:int = people[j].getAge(); // get the age of the person at the current index
    trace("Name: " + personName + ", Age: " + personAge); // print out the name and age of the person
  }
}

trace("People:");

// Call the printPeople function to print out the names and ages of all Person objects in the array
printPeople(people);

/* Output:
People:
Name: Person 0, Age: 28
Name: Person 1, Age: 49
Name: Person 2, Age: 6
Name: Person 3, Age: 17
Name: Person 4, Age: 42
Name: Person 5, Age: 3
Name: Person 6, Age: 26
Name: Person 7, Age: 33
Name: Person 8, Age: 22
Name: Person 9, Age: 15
*/
function search(array, target) {
  let startIndex = 0
  let endIndex = array.length - 1
  
  while (startIndex <= endIndex) {
    let middleIndex = Math.floor((startIndex + endIndex) / 2)
    
    if (array[middleIndex] === target) {
      return middleIndex
    }
    
    if (array[middleIndex] < target) {
      startIndex = middleIndex + 1
    } else {
      endIndex = middleIndex - 1
    }
  }
  
  return -1
}

// Annotated code snippet of binary search algorithm in ACTIONSCRIPT
// Search function takes in the array to be searched and the target element
// Declaring start and end index variables for the array
function search(array, target) {
  let startIndex = 0
  let endIndex = array.length - 1

  // While loop to iterate through the array
  while (startIndex <= endIndex) {
    // Calculating the middle index of the array
    let middleIndex = Math.floor((startIndex + endIndex) / 2)

    // If the middle element is the target, return its index
    if (array[middleIndex] === target) {
      return middleIndex
    }

    // If the middle element is smaller than the target, update start index to middle index + 1
    // else update end index to middle index - 1
    if (array[middleIndex] < target) {
      startIndex = middleIndex + 1
    } else {
      endIndex = middleIndex - 1
    }
  }

  // If target element is not found, return -1
  return -1
}

// Example usage
let arr = [1, 3, 5, 7, 9]
let targetIndex = search(arr, 5) // targetIndex = 2
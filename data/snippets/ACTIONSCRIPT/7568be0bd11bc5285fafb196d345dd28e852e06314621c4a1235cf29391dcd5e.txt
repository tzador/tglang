/**
* This is a class definition for a 2D platformer game character.
* Inherited from the base Character class.
*/
public class PlayerCharacter extends Character{
    
    //Private variables for player properties
    private var _speed:Number; //Speed of player movement
    private var _jumpForce:Number; //Force applied when player jumps
    private var _health:int; //Player health
    private var _sprite:Sprite; //Player sprite
    
    /**
    * Constructor function for PlayerCharacter
    * @param speed: Speed of player's movement
    * @param jumpForce: Force applied when player jumps
    * @param health: Starting health of player
    * @param sprite: Player's sprite
    */
    public function PlayerCharacter(speed:Number, jumpForce:Number, health:int, sprite:Sprite) {
        this._speed = speed;
        this._jumpForce = jumpForce;
        this._health = health;
        this._sprite = sprite;
    }
    
    /**
    * Function to handle player's movement
    * @param direction: Direction of movement (left, right, up, down)
    */
    public function move(direction:String):void {
        switch(direction) {
            case "left":
                this._sprite.x -= this._speed;
                break;
            case "right":
                this._sprite.x += this._speed;
                break;
            case "up":
                this._sprite.y -= this._speed;
                break;
            case "down":
                this._sprite.y += this._speed;
                break;
        }
    }
    
    /**
    * Function to handle player's jumping
    */
    public function jump():void {
        this._sprite.y -= this._jumpForce;
    }
    
    /**
    * Function to handle player taking damage
    * @param damage: Amount of damage player takes
    */
    public function takeDamage(damage:int):void {
        this._health -= damage;
        if(this._health <= 0) {
            //Player is defeated
            this._sprite.visible = false;
        }
    }
}
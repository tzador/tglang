/** 
* This function calculates the area of a circle based on the given radius
* @param radius - the radius of the circle
* @return the area of the circle
*/
function calculateCircleArea(radius:Number):Number{
    return Math.PI * Math.pow(radius, 2);
}

/**
* This class represents a person
*/
class Person{
    //properties
    public var name:String;
    public var age:int;
    public var height:Number;
    public var weight:Number;

    //constructor
    public function Person(name:String, age:int, height:Number, weight:Number){
       this.name = name;
       this.age = age;
       this.height = height;
       this.weight = weight;
    }

    //methods
    /**
    * This method calculates the BMI of a person
    * @return the BMI of the person
    */
    public function calculateBMI():Number{
        return this.weight / (this.height * this.height);
    }
}

//creating an instance of Person class
var person1:Person = new Person("John", 35, 1.8, 75);
//calculating the BMI of person1
var bmi:Number = person1.calculateBMI();
//printing the BMI value
trace("BMI of " + person1.name + " is " + bmi);

//creating an array of circles with different radii
var circles:Array = [1, 3, 5, 8];
//calculating the area of each circle and storing it in a new array
var areas:Array = [];
for each(var radius:Number in circles){
    var area:Number = calculateCircleArea(radius);
    areas.push(area);
}
//printing the areas of circles
trace("Areas of Circles: " + areas);
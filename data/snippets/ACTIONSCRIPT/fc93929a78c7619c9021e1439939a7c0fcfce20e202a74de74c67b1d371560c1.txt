/**
 * This class represents a user in the system.
 */
package com.example.users {
    import flash.net.URLRequest;
    import flash.net.URLLoader;
    
   /**
    * The User class describes all the properties and methods of a user.
    * It also includes a constructor function for creating new user objects.
    */
    public class User {
        /**
         * The first name of the user.
         * @type String
         */
        private var _firstName:String;
        /**
         * The last name of the user.
         * @type String
         */
        private var _lastName:String;
        /**
         * The email address of the user.
         * @type String
         */
        private var _email:String;
        /**
         * The password of the user.
         * @type String
         */
        private var _password:String;
        /**
         * The age of the user.
         * @type int
         */
        private var _age:int;
        
        /**
         * The constructor function that creates a new User object.
         * @param firstName The first name of the user.
         * @param lastName The last name of the user.
         * @param email The email address of the user.
         * @param password The password of the user.
         * @param age The age of the user.
         */
        public function User(firstName:String, lastName:String, email:String, password:String, age:int) {
            this._firstName = firstName;
            this._lastName = lastName;
            this._email = email;
            this._password = password;
            this._age = age;
        }
        
        /**
         * This function validates the user's email address.
         * @return Boolean True or False depending on if the email is valid.
         */
        public function validateEmail():Boolean {
            var pattern:RegExp = /[\w.-]+@[\w.-]+\.[a-z]{2,4}/; // Regular expression for email validation
            return pattern.test(this._email);
        }
        
        /**
         * This function checks if the user is an adult (18 years or older).
         * @return Boolean True or False depending on if the user is an adult.
         */
        public function isAdult():Boolean {
            return this._age >= 18;
        }
        
        /**
         * This function sends a request to the server to update the user's profile.
         * @param data The updated data for the user's profile.
         * @param onSuccess The function to be called if the server responds successfully.
         * @param onFail The function to be called if an error occurs.
         */
        public function updateProfile(data:Object, onSuccess:Function, onFail:Function):void {
            var request:URLRequest = new URLRequest("www.example.com/update_profile");
            request.data = data;
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(Event.COMPLETE, onSuccess);
            loader.addEventListener(IOErrorEvent.IO_ERROR, onFail);
            loader.load(request);
        }
    }
}
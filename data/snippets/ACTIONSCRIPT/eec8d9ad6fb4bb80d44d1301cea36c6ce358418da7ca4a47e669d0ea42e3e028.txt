<!-- Define a class named "Car" -->
class Car {
  // Declare private properties
  private var model:String;
  private var year:int;
  
  // Constructor function with parameters for model and year
  public function Car(model:String, year:int) {
    this.model = model;
    this.year = year;
  }
  
  // Public getter function for model property
  public function get model():String {
    return this.model;
  }

  // Public setter function for model property
  public function set model(m:String):void {
    this.model = m;
  }

  // Public getter function for year property
  public function get year():int {
    return this.year;
  }

  // Public setter function for year property with validation for year range
  public function set year(y:int):void {
    if (y >= 1900 && y <= 2020)
      this.year = y;
    else
      throw new RangeError("Year must be between 1900 and 2020");
  }

  // Public method for accelerating the car
  public function accelerate(speed:int):void {
    trace("The " + this.model + " is accelerating at " + speed + " mph");
  }

  // Public method for braking the car
  public function brake():void {
    trace("The " + this.model + " is braking");
  }

  // Public method for honking the car's horn
  public function honk():void {
    trace("The " + this.model + " is honking its horn");
  }
}

// Create an instance of the Car class named "myCar"
var myCar:Car = new Car("Ford Mustang", 2020);

// Call the accelerate method on myCar
myCar.accelerate(60);

// Set the year property of myCar to an invalid value
myCar.year = 1800;

// Call the honk method on myCar
myCar.honk();

/* OUTPUT:
The Ford Mustang is accelerating at 60 mph
RangeError: Year must be between 1900 and 2020
The Ford Mustang is honking its horn
*/
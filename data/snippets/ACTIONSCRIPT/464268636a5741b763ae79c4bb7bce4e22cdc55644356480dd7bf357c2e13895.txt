/* This class creates a custom button with various states and effects*/

// Define button class
class CustomButton extends Sprite {
    
    // Private properties 
    private var _label:String; // Button label
    private var _width:int; // Button width
    private var _height:int; // Button height
    private var _isPressed:Boolean; // Button state when pressed
    
    // Constructor function
    public function CustomButton(label:String, width:int, height:int) {
        _label = label;
        _width = width;
        _height = height;
        
        // Set initial button state
        _isPressed = false;
        
        // Call function to create button graphics
        createButtonGraphics();
        
        // Add event listeners for button interactions
        this.addEventListener(MouseEvent.MOUSE_DOWN, pressButton);
        this.addEventListener(MouseEvent.MOUSE_UP, releaseButton);
    }
    
    // Function to create button graphics
    private function createButtonGraphics():void {
        // Create background for button
        var background:Shape = new Shape();
        background.graphics.beginFill(0x000000); // Set color to black
        background.graphics.drawRect(0, 0, _width, _height); // Set size of button
        background.graphics.endFill();
        
        // Create text label for button
        var label:TextField = new TextField();
        label.text = _label;
        label.textColor = 0xFFFFFF; // Set color to white
        label.x = _width / 2 - label.width / 2; // Position label in center of button
        label.y = _height / 2 - label.height / 2;
        
        // Add button graphics to stage
        addChild(background);
        addChild(label);
    }
    
    // Function to handle button press event
    private function pressButton(event:MouseEvent):void {
        _isPressed = true; // Set button state to pressed
        this.scaleX = 0.9; // Scale button down to give visual feedback
        this.scaleY = 0.9;
    }
    
    // Function to handle button release event
    private function releaseButton(event:MouseEvent):void {
        _isPressed = false; // Set button state to not pressed
        this.scaleX = 1.0; // Reset button scale
        this.scaleY = 1.0;
    }
}
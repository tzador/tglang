//A class representing a car
class Car {
    //private properties (Accessible only within the class)
    private var color:String;
    private var model:String;
    private var year:int;
    private var price:Number;

    //public properties (Accessible outside the class)
    public var isRunning:Boolean = false;

    /**
     * Constructor function for creating new Car objects
     * @param color The color of the car
     * @param model The model of the car
     * @param year The year the car was manufactured
     * @param price The price of the car
     */
    public function Car(color:String, model:String, year:int, price:Number) {
        this.color = color;
        this.model = model;
        this.year = year;
        this.price = price;
    }

    /**
     * Starts the car
     * @return A string indicating whether the car is now running or if it was already running
     */
    public function start():String {
        if (isRunning) {
            return "Car is already running!";
        } else {
            isRunning = true;
            return "Car has been started.";
        }
    }

    /**
     * Stops the car
     * @return A string indicating whether the car has stopped or if it was already stopped
     */
    public function stop():String {
        if (!isRunning) {
            return "Car is already stopped.";
        } else {
            isRunning = false;
            return "Car has been stopped.";
        }
    }

    /**
     * Gets the price of the car
     * @return The price of the car
     */
    public function getPrice():Number {
        return price;
    }

    //private function that calculates the depreciation of the car
    private function calculateDepreciation():Number {
        return price * 0.1;
    }

    /**
     * Updates the price of the car by calculating its depreciation
     * @return The updated price of the car
     */
    public function updatePrice():Number {
        price -= calculateDepreciation();
        return price;
    }
}

//creating an instance of the Car class
var car:Car = new Car("Blue", "Tesla Model S", 2019, 80000);

//starting the car
car.start();

//updating the price of the car after a year
car.updatePrice();

//printing the details of the car
trace("Color: " + car.color);
trace("Model: " + car.model);
trace("Year: " + car.year);
trace("Price: $" + car.getPrice());

/* 
Output:
Color: Blue
Model: Tesla Model S
Year: 2019
Price: $72000
*/
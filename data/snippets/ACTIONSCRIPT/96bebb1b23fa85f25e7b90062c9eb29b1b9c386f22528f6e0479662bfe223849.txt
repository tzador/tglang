/** 
* This function takes in two numbers and returns their sum
* @param num1 {Number} the first number to be added
* @param num2 {Number} the second number to be added
* @return {Number} the sum of the two numbers 
*/
function addNumbers(num1:Number, num2:Number):Number {
    return num1 + num2;
}

/**
* This function checks if a given string is a palindrome
* @param str {String} the string to be checked
* @return {Boolean} true if the string is a palindrome, false otherwise
*/
function isPalindrome(str:String):Boolean {
    var reverse:String = "";

    // loop through the characters in the string and add them in reverse order
    for (var i:Number = str.length - 1; i >= 0; i--) {
        reverse += str.charAt(i);
    }

    // check if the reversed string is equal to the original string
    if (reverse == str) {
        return true;
    } else {
        return false;
    }
}

/**
* This class represents a person with a name, age, and gender
*/
class Person {
    private var name:String;
    private var age:Number;
    private var gender:String;

    /**
    * @constructor creates a new Person object
    * @param name {String} the name of the person
    * @param age {Number} the age of the person
    * @param gender {String} the gender of the person
    */
    public function Person(name:String, age:Number, gender:String) {
        this.name = name;
        this.age = age;
        this.gender = gender;
    }

    /**
    * This method returns the name of the person
    * @return {String} the name of the person
    */
    public function getName():String {
        return this.name;
    }

    /**
    * This method returns the age of the person
    * @return {Number} the age of the person
    */
    public function getAge():Number {
        return this.age;
    }

    /**
    * This method returns the gender of the person
    * @return {String} the gender of the person
    */
    public function getGender():String {
        return this.gender;
    }
}

// create a new Person object with name "John", age of 25, and gender "male"
var john:Person = new Person("John", 25, "male");

// call the getName method and store the returned value in a variable
var johnName:String = john.getName();

// print the name of the person to the console
trace(johnName); // output: John

// call the isPalindrome function and pass in a string
var palindromeCheck:Boolean = isPalindrome("racecar");

// print the result to the console
trace(palindromeCheck); // output: true
/**
* This function takes in an array of numbers and a target number to find.
* It uses a binary search algorithm to find the index of the target number in the array.
* @param arr The input array of numbers to search through
* @param target The number to find in the array
* @return The index of the target number in the array, or -1 if not found
*/
function binarySearch(arr:Array, target:Number):int {
    // initialize variables for start and end indices of array
    var start:int = 0;
    var end:int = arr.length - 1;
    
    // loop until start index becomes greater than end index
	while (start <= end) {
        // calculate midpoint of array
        var mid:int = (start + end) / 2;
        
        // check if target number is at the midpoint
		if (arr[mid] == target) {
            // return index of target number
			return mid;
		}
        // if target number is less than the midpoint, search left side of array
		else if (target < arr[mid]) {
			end = mid - 1;
		}
        // if target number is greater than the midpoint, search right side of array
		else {
			start = mid + 1;
		}
	}
    // target number was not found in array, return -1
	return -1;
}
/**
 * This class represents a 2D point in a Cartesian plane.
 */
class Point {
  private var _x:Number; // declares a private variable for the x-coordinate
  private var _y:Number; // declares a private variable for the y-coordinate
  
  /**
   * Constructor function for the Point class.
   * @param x The x-coordinate of the point.
   * @param y The y-coordinate of the point.
   */
  public function Point(x:Number, y:Number) {
    _x = x;
    _y = y;
  }
  
  /**
   * Get current value of the x-coordinate.
   * @return The current x-coordinate of the point.
   */
  public function get x():Number {
    return _x;
  }
  
  /**
   * Set the value of the x-coordinate.
   * @param value The new value for the x-coordinate.
   */
  public function set x(value:Number):void {
    _x = value;
  }
  
  /**
   * Get current value of the y-coordinate.
   * @return The current y-coordinate of the point.
   */
  public function get y():Number {
    return _y;
  }
  
  /**
   * Set the value of the y-coordinate.
   * @param value The new value for the y-coordinate.
   */
  public function set y(value:Number):void {
    _y = value;
  }
  
  /**
   * Calculates the distance between this point and another point.
   * @param other The other point to calculate the distance to.
   * @return The distance between the two points.
   */
  public function distance(other:Point):Number {
    var dx:Number = other.x - _x; // calculate change in x-coordinates
    var dy:Number = other.y - _y; // calculate change in y-coordinates
    return Math.sqrt(dx*dx + dy*dy); // use Pythagorean theorem to find distance
  }
}
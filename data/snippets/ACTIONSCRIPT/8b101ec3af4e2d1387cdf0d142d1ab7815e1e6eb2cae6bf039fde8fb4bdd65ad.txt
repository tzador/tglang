/*
The following code snippet creates a class called "Hero", which represents a hero character in a video game.
It contains properties such as name, health, and weapon, as well as methods for attacking, taking damage, and healing.
*/

// Create the class "Hero"
class Hero {
    // Properties
    var name:String;
    var health:Number; // Represents the current health of the hero
    var maxHealth:Number; // Represents the maximum health the hero can have
    var weapon:String;
  
    // Constructor function - used to initialize properties when an instance of the class is created
    function Hero(name:String, health:Number, maxHealth:Number, weapon:String) {
        this.name = name;
        this.health = health;
        this.maxHealth = maxHealth;
        this.weapon = weapon;
    }
  
    // Method for attacking an enemy
    function attack(enemy:String) {
        trace(this.name + " attacks " + enemy + " with their " + this.weapon + "!");
    }
  
    // Method for taking damage
    function takeDamage(damage:Number) {
        this.health -= damage;
      
        if (this.health <= 0) {
            trace(this.name + " has been defeated!");
        } else {
            trace(this.name + " has " + this.health + " health remaining.");
        }
    }
  
    // Method for healing
    function heal(health:Number) {
        this.health += health;
      
        // Make sure health doesn't exceed max health
        if (this.health > this.maxHealth) {
            this.health = this.maxHealth;
        }
      
        trace(this.name + " has been healed for " + health + " health. They now have " + this.health + " health.");
    }
}

// Create an instance of the Hero class
var hero:Hero = new Hero("Bastion", 100, 100, "Blaster");

// Call methods on the hero instance
hero.attack("Enemy Soldier");
hero.takeDamage(20);
hero.heal(50);
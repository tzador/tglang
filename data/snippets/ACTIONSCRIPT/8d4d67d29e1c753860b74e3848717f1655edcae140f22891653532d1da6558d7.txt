// This code creates a custom button component in ActionScript using object-oriented programming principles

package components{
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    
    // create a class called CustomButton which extends the Sprite class
    public class CustomButton extends Sprite{
        
        // variables to store the width, height, and label of the button
        private var _width:Number;
        private var _height:Number;
        private var _label:String;
        
        // constructor function which takes in the width, height, and label of the button
        public function CustomButton(width:Number, height:Number, label:String){
            // set the width, height, and label variables to the values passed in
            _width = width;
            _height = height;
            _label = label;
            
            // call the initialize function to create the button
            initialize();
        }
        
        private function initialize():void{
            // create the button graphics
            var buttonBg:Sprite = new Sprite();
            buttonBg.graphics.beginFill(0x000000);
            buttonBg.graphics.drawRect(0, 0, _width, _height);
            buttonBg.graphics.endFill();
            
            // add the label to the button
            var label:TextField = new TextField();
            label.text = _label;
            
            // center the label inside the button
            label.x = _width / 2 - label.textWidth / 2;
            label.y = _height / 2 - label.textHeight / 2;
            
            // add event listeners for mouse interactions
            buttonBg.addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);
            buttonBg.addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);
            buttonBg.addEventListener(MouseEvent.CLICK, onClick);
            
            // add the button graphics and label to the custom button component
            this.addChild(buttonBg);
            this.addChild(label);
        }
        
        // function to change the button color on mouse over
        private function onMouseOver(event:MouseEvent):void{
            // change the color to red
            event.currentTarget.graphics.beginFill(0xFF0000);
            event.currentTarget.graphics.drawRect(0, 0, _width, _height);
            event.currentTarget.graphics.endFill();
        }
        
        // function to change the button color back on mouse out
        private function onMouseOut(event:MouseEvent):void{
            // change the color back to black
            event.currentTarget.graphics.beginFill(0x000000);
            event.currentTarget.graphics.drawRect(0, 0, _width, _height);
            event.currentTarget.graphics.endFill();
        }
        
        // function to dispatch an event when the button is clicked
        private function onClick(event:MouseEvent):void{
            // create a new custom event and dispatch it
            var buttonClickedEvent:CustomEvent = new CustomEvent(CustomEvent.BUTTON_CLICKED, true);
            dispatchEvent(buttonClickedEvent);
        }
    }
}

// Custom event class for the button click event
package components{
    import flash.events.Event;
    
    public class CustomEvent extends Event{
        
        public static const BUTTON_CLICKED:String = "buttonClicked";
        
        // constructor function which takes in the event type and if the event bubbles or not
        public function CustomEvent(type:String, bubbles:Boolean=false){
            // call the super class's constructor and pass in the event type and if the event bubbles or not
            super(type, bubbles);
        }
    }
}
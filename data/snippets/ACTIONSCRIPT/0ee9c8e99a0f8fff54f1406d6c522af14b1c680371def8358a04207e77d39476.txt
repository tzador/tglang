// This code snippet is a complex actionscript function that takes in an array of numbers, sorts them in ascending order, and returns the sorted array.
// This function uses the bubble sort algorithm for sorting.

function bubbleSort(arr:Array):Array {
    // create a copy of the given array
    var sortedArr:Array = arr.slice();

    // set the initial value of the 'swapped' variable to true
    var swapped:Boolean = true;

    // start a loop that will continue until no more swaps are needed
    while (swapped) {
        
        // set 'swapped' to false since no swaps have been made yet
        swapped = false;

        // loop through each element in the array and compare it with the adjacent element on its right
        for (var i:int = 0; i < sortedArr.length - 1; i++) {
            // if the current element is larger than the next element, swap their positions
            if (sortedArr[i] > sortedArr[i + 1]) {
                // store the current element in a temporary variable
                var temp:Number = sortedArr[i];
                // swap positions of current and next element
                sortedArr[i] = sortedArr[i + 1];
                sortedArr[i + 1] = temp;
                // indicate that at least one swap has been made
                swapped = true;
            }
        }
    }

    // return the sorted array
    return sortedArr;
}

// example usage
var numbers:Array = [5, 2, 8, 1, 3];
var sorted:Array = bubbleSort(numbers);
trace(sorted); // outputs [1, 2, 3, 5, 8]
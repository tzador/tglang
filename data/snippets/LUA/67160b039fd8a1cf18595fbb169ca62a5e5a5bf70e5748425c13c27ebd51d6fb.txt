--[[ This code snippet is written in Lua, a lightweight, multi-paradigm programming language.
It illustrates creating a class called "Shape" with a constructor function that takes in two parameters, width and height.
The class has two member functions, "getArea" which calculates the area of the shape and "printDimensions" which prints the dimensions of the shape.
Finally, an instance of the Shape class is created and the member functions are called to demonstrate its functionality. ]]

-- Define the Shape class
Shape = {}

-- Define the constructor function that takes in width and height parameters
function Shape:new(width, height)
  local obj = {width = width, height = height} -- Create a table to hold the object's attributes
  setmetatable(obj, self) -- Set the metatable to the Shape class, allowing the object to access its member functions
  self.__index = self
  return obj
end

-- Define the getArea function which calculates the area of the shape
function Shape:getArea()
  return self.width * self.height
end

-- Define the printDimensions function which prints the dimensions of the shape
function Shape:printDimensions()
  print("Width: " .. self.width)
  print("Height: " .. self.height)
end

-- Create an instance of the Shape class
local rectangle = Shape:new(5, 10)

-- Call the member functions to demonstrate the functionality of the Shape class
rectangle:printDimensions()
print("Area: " .. rectangle:getArea())

--[[ Output:
Width: 5
Height: 10
Area: 50 ]]
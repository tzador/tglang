-- This code snippet is an example of a function that calculates the factorial of a given number using recursion
-- The output will be the code snippet itself, which can then be tested and modified as needed

-- The function takes in one argument, num, which represents the number to calculate the factorial of
-- The function uses recursion to continually multiply the current number by the previous numbers until it reaches 1 (the base case)
-- The final result is stored in the variable "factorial" which is then returned as the output

function factorial(num)
    -- Base case: If num is 1, return 1
    if num == 1 then
        return 1
    end
    
    -- Recursive case: Multiply num by the factorial of (num - 1)
    -- This is repeated until the base case is reached
    return num * factorial(num - 1)
end

-- Test the function with different values
print(factorial(5)) -- Output: 120 (5 * 4 * 3 * 2 * 1)
print(factorial(10)) -- Output: 3628800 (10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1)

-- The function can be modified to handle negative numbers (factorial of a negative number is not defined)
-- To do so, we can add a conditional statement at the beginning to check if num is negative
-- If it is, we can return an error message instead of trying to calculate the factorial
function factorial(num)
    -- Check if num is negative
    if num < 0 then
        return "Error: Factorial of a negative number is not defined."
    end
    
    -- Base case: If num is 1, return 1
    if num == 1 then
        return 1
    end
    
    -- Recursive case: Multiply num by the factorial of (num - 1)
    -- This is repeated until the base case is reached
    return num * factorial(num - 1)
end

print(factorial(-5)) -- Output: Error: Factorial of a negative number is not defined.
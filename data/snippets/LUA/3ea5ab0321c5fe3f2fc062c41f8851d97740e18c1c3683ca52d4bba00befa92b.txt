--This code snippet creates a function that checks whether a given string is a palindrome
--A palindrome is a word or phrase that is spelled the same backwards and forwards
--Example of a palindrome: "racecar"
--Example of a non-palindrome: "hello"

--Define the function with a parameter for the input string
function checkPalindrome(inputString)
    --Convert the input string to all lowercase letters for consistency in comparison
    local lowerCaseString = inputString:lower()
    
    --Use a loop to iterate through the string
    for i = 1, #lowerCaseString/2 do
        --Compare the first and last characters of the string
        if lowerCaseString:sub(i,i) ~= lowerCaseString:sub(#lowerCaseString-i+1, #lowerCaseString-i+1) then
            --If they are not the same, return false
            return false
        end
    end
    
    --If the loop finishes without returning false, the string must be a palindrome, so return true
    return true 
end

--Call the function with a test input and store the result in a variable
local isPalindrome = checkPalindrome("racecar")

--Print the result to the console
print(isPalindrome)
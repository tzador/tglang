-- This function takes in a string and reverses it
-- @param str string to be reversed
-- @return reversed string
local function reverseString(str)
  local reversed = "" -- initialize an empty string to store the reversed string
  for i = #str, 1, -1 do -- loop through the string in reverse order
    reversed = reversed .. str:sub(i,i) -- append each character from the original string to the beginning of the new string
  end
  return reversed -- return the reversed string
end

-- This function checks if a number is prime
-- @param num number to be checked
-- @return boolean value indicating if the number is prime
local function isPrime(num)
  if num <= 1 then -- 1 and below are not primes
    return false -- return false
  elseif num == 2 then -- 2 is a prime number
    return true -- return true
  elseif num % 2 == 0 then -- even numbers are not primes (except 2)
    return false -- return false
  else -- for numbers greater than 2 and odd numbers
    for i = 3, math.sqrt(num), 2 do -- loop through all odd numbers from 3 to square root of the given number
      if num % i == 0 then -- if the number is divisible by any of the odd numbers, it is not prime
        return false -- return false
      end
    end
    return true -- if all the previous checks failed, the number is prime
  end
end

-- This function determines if a word is a palindrome (a word that is spelled the same forward and backward)
-- @param word string to be checked
-- @return boolean value indicating if the word is a palindrome
local function isPalindrome(word)
  word = word:lower() -- convert the word to lowercase
  local reversed = reverseString(word) -- reverse the word
  if word == reversed then -- check if the original word is equal to the reversed word
    return true -- if so, it is a palindrome
  else
    return false -- otherwise, it is not a palindrome
  end
end

-- This is an example of using the functions defined above
local text = "Hello, LUA!" -- initialize a string
print(reverseString(text)) -- print the reversed string
print(isPrime(17)) -- check if the number is prime and print the result
print(isPalindrome("level")) -- check if the word is a palindrome and print the result
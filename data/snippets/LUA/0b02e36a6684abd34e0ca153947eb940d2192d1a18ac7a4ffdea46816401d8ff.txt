---[[ This function takes in a table and prints out its keys in reverse order
--@param tbl A table to be traversed
--@return No return value, just prints the keys
--]]
local function print_keys(tbl)
    for i = #tbl, 1, -1 do -- iterate through the table in reverse order
        print(table.keys(tbl)[i]) -- print each key in reverse order
    end
end

---[[ This class represents a student
--@field name The name of the student
--@field age The age of the student
--@field major The major of the student
--]]
local Student = {}

---[[ The constructor for the Student class
--@param name The name of the student
--@param age The age of the student
--@param major The major of the student
--@return A new instance of Student
--]]
function Student:new(name, age, major)
    local obj = {}
    setmetatable(obj, self)
    self.__index = self
    obj.name = name
    obj.age = age
    obj.major = major
    return obj
end

---[[ This function checks if the student is of legal drinking age
--@param self The student object
--@return A boolean value representing if the student is of legal drinking age
--]]
function Student:can_drink()
    if self.age >= 21 then -- check if age is greater than or equal to 21
        return true
    else
        return false
    end
end

-- create a new instance of Student class
local john = Student:new("John Smith", 20, "Computer Science")

-- call the can_drink function on john and print the result
print(john:can_drink()) -- prints false if age is less than 21

-- create a table called courses containing names of courses
local courses = {"Programming 101", "Data Structures", "Algorithms"}

-- call the print_keys function on the courses table
print_keys(courses) -- prints "Algorithms", "Data Structures", and "Programming 101" in that order
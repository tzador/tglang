-- This function takes in a string and returns a table containing the frequency of each character in the string
function charFrequency(str)
    local frequency = {}  -- create an empty table to store the frequency of characters
    for i = 1, #str do  -- loop through each character in the string
        local char = string.sub(str, i, i)  -- retrieve each character at index i
        if frequency[char] then  -- check if the character exists in the table
            frequency[char] = frequency[char] + 1  -- if yes, increment its frequency by 1
        else
            frequency[char] = 1  -- if not, set its frequency to 1
        end
    end
    return frequency  -- return the table with character frequencies
end

-- This function takes in a table and outputs the character with the maximum frequency
function maxFrequency(frequencyTable)
    local maxChar = ""  -- variable to store the character with maximum frequency
    local maxFreq = 0  -- variable to store the maximum frequency
    for char, freq in pairs(frequencyTable) do  -- loop through each key-value pair in the frequency table
        if freq > maxFreq then  -- check if the frequency is greater than the current maximum frequency
            maxChar = char  -- if yes, set the maxChar to be the current character
            maxFreq = freq  -- set the maxFreq to be the current frequency
        end
    end
    return maxChar  -- return the character with maximum frequency
end

-- Example usage:
local str = "aabbccddeeffgg"
local frequencyTable = charFrequency(str)
local maxChar = maxFrequency(frequencyTable)
print("The character with the maximum frequency is: " .. maxChar) -- output: The character with the maximum frequency is: g
--[[ This is a multi-line comment in LUA --]]
-- Variable declaration
local a = 10 -- 'local' declares a variable with local scope
local b = 20

--[[
    Function to add two numbers.
    Takes two parameters 'x' and 'y'.
    Returns the sum of 'x' and 'y'.
--]]
function add(x, y)
    return x + y
end

-- If statement
-- Checks if 'a' is greater than 'b'
if a > b then
    -- Print statement
    print("a is greater than b")
else
    -- Print statement
    print("b is greater than a")
end

--[[
    For loop to print numbers from 1 to 10.
    Syntax: for <variable> = <starting value>, <ending value>, <increment>
--]]
for i = 1, 10, 1 do
    print(i) -- i will take values from 1 to 10 and print each value in a separate line
end

-- While loop
local j = 1
while j <= 10 do
    print(j) -- j will be printed from 1 to 10 in separate lines
    j = j + 1 -- incrementing j by 1 after every iteration
end

--[[
    Table declaration.
    Tables in LUA can store any type of value and can be used as arrays, dictionaries, or objects.
--]]
local myTable = {
    "hello", -- table index 1
    2, -- table index 2
    name = "John", -- dictionary key-value pair
    age = 25
}

-- Adding a new value to the table with a new key
myTable["occupation"] = "Engineer"

-- Accessing values from the table using table indexing
print(myTable[1]) -- prints "hello"
print(myTable.name) -- prints "John"
print(myTable.occupation) -- prints "Engineer"

--[[
    Conditional statement using the 'not' logical operator.
    Checks if 'a' is not equal to 10.
--]]
if a ~= 10 then
    -- Print statement
    print("a is not equal to 10")
end

--[[
    Inline function declaration.
    Functions can be declared and assigned to variables.
--]]
local multiply = function(x, y)
    return x * y
end

-- Calling the function and printing the output
print(multiply(5, 2)) -- prints 10
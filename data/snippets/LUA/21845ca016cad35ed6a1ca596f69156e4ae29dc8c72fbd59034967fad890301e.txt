-- Define a function to print all permutations of a given string
function permute(str)
    -- base case: if length of str is 1, return the string
    if #str == 1 then
        return {str}
    end
    
    -- initialize an empty table to store permutations
    local result = {}
    
    -- loop through all characters in the string
    for i = 1, #str do
        -- create a copy of the string by removing the current character from str
        local current_char = str:sub(i, i)
        local remaining_str = str:sub(1, i-1) .. str:sub(i+1, #str)
        
        -- recursively call permute function on remaining_str
        local remaining_permutations = permute(remaining_str)
        
        -- loop through all permutations and add current_char to the beginning
        for j = 1, #remaining_permutations do
            table.insert(result, current_char .. remaining_permutations[j])
        end
    end
    
    -- return the result table
    return result
end

-- call the permute function with a test string
print(permute('abc'))
-- This is a function that performs quicksort on a table
-- It takes in a table and the start and end indices as parameters
-- It uses recursion to divide the table into smaller chunks and sort them
local function quicksort(table, start, end)
    -- Check if the start index is less than the end index
    if start < end then
        -- Set the pivot value to be the last element in the table
        local pivot = table[end]
        -- Set the index of the smaller element
        local i = start - 1

        -- Loop through the table from start to end indices
        for j = start, end - 1 do
            -- Check if the current element is less than or equal to the pivot value
            if table[j] <= pivot then
                -- Increment the index of the smaller element
                i = i + 1
                -- Swap the current element with the smaller element
                table[i], table[j] = table[j], table[i]
            end
        end

        -- Swap the pivot value with the value at the index of the smaller element
        table[i + 1], table[end] = table[end], table[i + 1]

        -- Use recursion to perform quicksort on the two subtables
        quicksort(table, start, i)
        quicksort(table, i + 2, end)
    end
end
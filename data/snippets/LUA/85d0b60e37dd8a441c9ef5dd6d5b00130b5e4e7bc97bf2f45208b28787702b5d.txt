-- This is a comment in LUA

-- Initializing a variable with a string value
local message = "Hello, world!"

-- Creating a function that takes in two numbers and returns their sum
local function add(a, b)
   return a + b
end

-- Calling the function and storing the returned value in a new variable
local result = add(5, 7)
print(result) -- Output: 12

-- Creating a table with key-value pairs
local person = {
   name = "John",
   age = 25,
   gender = "Male"
}

-- Accessing the value of a key in the table
print(person.name) -- Output: John

-- Looping through the table and printing all key-value pairs
for key, value in pairs(person) do
   print(key .. ": " .. value) 
end
-- Output:
-- name: John
-- age: 25
-- gender: Male

-- Creating a class called "Animal" with properties and methods
local Animal = {
   name = "",
   age = 0,
   sound = "",
   eat = function(self, food)
      print(self.name .. " is eating " .. food)
   end,
   speak = function(self)
      print(self.name .. " says " .. self.sound)
   end
}

-- Creating an instance of the Animal class
local dog = Animal
dog.name = "Buddy"
dog.age = 5
dog.sound = "Woof!"

-- Calling the methods of the Animal class on the instance
dog.eat("bones") -- Output: Buddy is eating bones
dog.speak() -- Output: Buddy says Woof!

-- Creating a subclass of Animal called "Cat"
local Cat = {
   color = ""
}
setmetatable(Cat, {__index = Animal})

-- Creating an instance of the Cat class
local cat = Cat
cat.name = "Whiskers"
cat.age = 3
cat.sound = "Meow!"
cat.color = "Orange"

-- Calling the methods of the Animal class on the instance
cat.eat("fish") -- Output: Whiskers is eating fish
cat.speak() -- Output: Whiskers says Meow!

print(dog.color) -- Output: nil, as dog is not an instance of the Cat class and does not have the "color" property
print(cat.color) -- Output: Orange
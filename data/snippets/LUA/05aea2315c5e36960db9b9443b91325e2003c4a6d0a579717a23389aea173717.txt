--This code snippet is a function that checks for prime numbers
--@param num the number to be checked
--@return true if num is prime, false otherwise
function isPrime(num)
    if num == 2 or num == 3 then --checks for 2 and 3, which are prime numbers
        return true --returns true if num is either 2 or 3
    elseif num < 2 then --checks if num is less than 2, which is not a prime number
        return false --returns false if num is less than 2
    elseif num % 2 == 0 or num % 3 == 0 then --checks if num is divisible by 2 or 3, which are factors of all non-prime numbers
        return false --returns false if num is divisible by 2 or 3
    else
        local divisor = 5 --starts checking from the next potential factor, which is 5
        while divisor * divisor <= num do --loops until the square of the divisor is greater than the number
            if num % divisor == 0 or num % (divisor + 2) == 0 then --checks if num is divisible by the current divisor or the next odd number after
                return false --returns false if num is divisible by divisor or the next odd number after 
            end
            divisor = divisor + 6 --increments to the next potential factor by adding 6 (since the only prime numbers after 3 are 6k+1 and 6k-1 for integer k)
        end
        return true --returns true if num is not divisible by any number and hence a prime number
    end
end
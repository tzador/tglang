---[[ 
This is a multi-line comment in LUA
It is denoted by two hyphens followed by double square brackets at the start and end
--]]

-- This is a single line comment in LUA, it is denoted by two hyphens

--[[ 
    This is another multi-line comment in LUA.
    It is useful for documenting code and providing explanations.
    Annotations in LUA can be used to provide information about functions and variables.
    Annotations can also be used for type checking and debugging.
    Annotations are written in comments and are ignored by the compiler.
--]]

-- A simple function in LUA that takes in a number and prints its square
function print_square(number)
    -- Make sure the input is a number
    assert(type(number) == "number", "Input must be a number.")
    
    -- Calculate the square
    local square = number * number
    
    -- Print the square
    print("The square of " .. number .. " is " .. square)
end

-- A table (similar to an array) in LUA that holds different fruits
fruits = {"apple", "banana", "orange"}

-- A for loop in LUA that iterates through the table and prints each fruit
for i=1, #fruits do
    print("I love " .. fruits[i]) -- Use string concatenation to print a sentence
end

-- A conditional statement in LUA that checks if a number is positive, negative, or zero
function check_value(number)
    if number > 0 then -- If the number is greater than zero
        print("The number is positive.")
    elseif number < 0 then -- If the number is less than zero
        print("The number is negative.")
    else -- If the number is equal to zero
        print("The number is zero.")
    end
end
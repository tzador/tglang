-- Initialize a table with keys and values
local myTable = {
    key1 = "value1",
    key2 = "value2",
    key3 = "value3",
    key4 = "value4"
}

-- Create a function that prints out all the key-value pairs in the table
function printTable(table)
    for key, value in pairs(table) do
        print("Key: ".. key .." Value: ".. value)
    end
end

-- Create a new thread that runs the printTable function
local thread = coroutine.create(printTable)
-- Resume the thread and pass in the myTable variable
coroutine.resume(thread, myTable)

-- Define a new class called "Person"
Person = {name="", age=0, gender=""}

-- Define a constructor function for the Person class
-- Takes in name, age, and gender as parameters and sets them to the object properties
function Person:new(name, age, gender)
    obj = {}
    setmetatable(obj, self)
    self.__index = self
    obj.name = name
    obj.age = age
    obj.gender = gender
    return obj
end

-- Create a new instance of the Person class
local john = Person:new("John", 25, "Male")
-- Print out John's information
print("Name: "..john.name..", Age: "..john.age..", Gender: "..john.gender)
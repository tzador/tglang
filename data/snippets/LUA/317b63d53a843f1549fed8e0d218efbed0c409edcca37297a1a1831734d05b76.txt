---[[
  Function Name: bubbleSort
  Inputs: arr - unordered array of numbers
  Returns: sorted array
  Description: This function implements the bubble sort algorithm to sort an array in ascending order.
]]

--- Define function bubbleSort with parameter arr
function bubbleSort(arr)

    ---Store the length of the array in a variable
    local n = #arr

    ---Loop through the array
    for i = 1, n do

        ---Set boolean variable to check if any swaps are made during a iteration
        local swapped = false

        ---Loop through the array elements from index 1 to n-i and compare each adjacent pair
        for j = 1, n - i do
            
            ---If the current element is greater than the next element, swap them
            if arr[j] > arr[j + 1] then
                
                ---Store the current element in a temporary variable
                local temp = arr[j]
                
                ---Swap the elements
                arr[j] = arr[j + 1]
                arr[j + 1] = temp

                ---Set swapped to true to indicate that a swap has been made
                swapped = true
            end
        end

        ---If no swaps are made during an iteration, the array is already sorted and we can break out of the loop
        if not swapped then
            break
        end
    end

    ---Return the sorted array
    return arr
end

--- Create an unordered array to test the bubbleSort function
local unsortedArray = {9, 3, 6, 2, 1, 5, 8, 4, 7}

--- Call the bubbleSort function with the unsorted array as an argument
local sortedArray = bubbleSort(unsortedArray)

--- Print the sorted array
print("Sorted Array: " .. table.concat(sortedArray, ", "))
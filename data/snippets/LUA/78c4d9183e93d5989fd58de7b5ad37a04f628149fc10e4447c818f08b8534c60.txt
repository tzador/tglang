-- This is a comment in LUA
local num = 1 -- This creates a local variable 'num' with value 1
local str = "Hello world" -- This creates a local variable 'str' with value "Hello world"
local bool = true -- This creates a local variable 'bool' with value true
local table = { -- This creates a local variable 'table' that is a table
    num = num, -- This sets the 'num' key in the table to the value of the 'num' variable
    str = str, -- This sets the 'str' key in the table to the value of the 'str' variable
    bool = bool -- This sets the 'bool' key in the table to the value of the 'bool' variable
}

-- This function takes in a number and returns that number multiplied by 2
local function double(num) 
    return num * 2
end

-- This line calls the double function and passes in the value of the 'num' variable, which is 1
local doubledNum = double(num) -- doubledNum now equals 2

-- This statement checks if the value of 'num' is equal to 1 and if the value of 'bool' is equal to true
if num == 1 and bool then 
    print("The value of num is equal to 1 and bool is true") -- If both conditions are true, this statement will be printed
end

-- This for loop iterates through the table and prints out the key and value of each pair
for key, value in pairs(table) do 
    print(key .. ": " .. value) -- The '..' operator concatenates two strings
end

-- This while loop will run as long as the value of 'num' is less than or equal to 5
while num <= 5 do 
    print(num) -- Prints the value of 'num'
    num = num + 1 -- Increments the value of 'num' by 1
end

-- This repeat-until loop prints the value of 'num' and then increments it by 1, repeating this until num is greater than 5
repeat 
    print(num) 
    num = num + 1
until num > 5

-- This function takes in a string and prints out each individual character
function printCharacters(str)
    for i = 1, #str do -- The '#' operator returns the length of the string
        print(str:sub(i, i)) -- The 'sub' method returns a substring of the string, in this case a single character
    end
end

-- Calls the printCharacters function with the value of the 'str' variable, which is "Hello world"
printCharacters(str) -- This will print out each character of "Hello world" on a new line
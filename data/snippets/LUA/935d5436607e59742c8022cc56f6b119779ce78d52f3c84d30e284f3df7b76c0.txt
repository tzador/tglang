-- Function for bubble sort algorithm
-- Takes in an array as input
-- Returns the sorted array

-- Function for swapping two elements
-- Takes in the array and the two indexes of the elements to be swapped
-- Does not return anything

local function swap(array, index1, index2)
  temp = array[index1]
  array[index1] = array[index2]
  array[index2] = temp
end

-- Bubble sort function
-- Takes in the array to be sorted
-- Returns the sorted array
function bubbleSort(array)
  -- Variable to check if any swaps were made in the current iteration
  local swapped = false
  -- For loop for the number of elements in the array
  for i = 1, #array do
    -- For loop to compare each element with the next and swap if necessary
    for j = 1, #array - i do
      -- If the current element is greater than the next element, swap them
      if array[j] > array[j+1] then
        swap(array, j, j+1)
        -- Set swapped variable to true to indicate a swap was made
        swapped = true
      end
    end
    -- If no swaps were made, the array is already sorted and loop can break
    if not swapped then
      break
    end
    -- Reset swapped variable for next iteration
    swapped = false
  end
  -- Return the sorted array
  return array
end

-- Example input array
inputArray = {5, 3, 9, 2, 6, 1, 8, 7, 4}
-- Sort the array using bubble sort
sortedArray = bubbleSort(inputArray)
-- Output the sorted array
print(sortedArray)
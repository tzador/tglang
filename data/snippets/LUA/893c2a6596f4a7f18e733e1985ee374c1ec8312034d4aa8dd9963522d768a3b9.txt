--[[
This is a multiline comment in LUA programming language.
Anything inside these two brackets and two hyphens will be ignored by the compiler.
Great for adding notes or explanations to the code.
]]

-- This is a single line comment.

-- Variables are declared and assigned using the "local" keyword.
local num = 5
local str = "Hello world"
local bool = true

-- Conditional statements use "if", "else", and "elseif" keywords.
if num > 10 then
    print("Number is greater than 10")
elseif num < 0 then
    print("Number is negative")
else
    print("Number is between 0 and 10")
end

-- Loops in LUA include "while" and "for" loops.
local i = 1
while i < 10 do
    print(i)
    i = i + 1
end

for i = 1, 10 do
    print(i)
end

-- Functions are declared using the "function" keyword.
function add(x, y)
    return x + y
end

-- Functions can also have multiple return values.
function square(x)
    return x, x^2
end

-- Tables are LUA's only data structure.
-- They are declared using curly brackets and can hold any type of data.
local table = {1, "two", true, add(5, 10)}

-- Tables can also have named indices.
local student = {
    name = "John",
    age = 20,
    grades = {90, 85, 95},
    friends = {"Jane", "Bob", "Alice"}
}

-- Tables can be accessed using the dot notation or square brackets.
print(table[2]) -- Prints "two"
print(student.name) -- Prints "John"

-- LUA also has built-in libraries for common tasks.
-- Here, we are using the "math" library to calculate the square root of a number.
print(math.sqrt(25)) -- Prints 5
---[[
This is a multi-line comment in LUA
]]--
 
-- Define a function that takes in two parameters
function add_numbers(x, y)
    -- Add the two parameters together and return the result
    return x + y
end
 
-- Call the function and store the result in a variable
local result = add_numbers(5, 10)
 
-- Print the result
print(result) -- Output: 15
 
-- Loop through a table and print out each value
local fruits = {"apple", "banana", "orange"}
for _, fruit in ipairs(fruits) do
    print(fruit) -- Output: apple, banana, orange
end
 
-- Create a table with key-value pairs
local person = {name = "John", age = 35, occupation = "programmer"}
-- Use the keyword 'pairs' to loop through the table and print out each key-value pair
for key, value in pairs(person) do
    print(key .. ": " .. value) -- Output: name: John, age: 35, occupation: programmer
end
 
-- Use the 'if-else' statement to check if a certain condition is met
local temperature = 80
if temperature > 85 then
    print("It's too hot!") -- Output: It's too hot!
elseif temperature >= 70 and temperature <=85 then
    print("It's a nice day!") -- Output: It's a nice day!
else
    print("It's too cold!") -- Output: It's too cold!
end
 
-- Create a recursive function that calculates the n-th value in the Fibonacci sequence
function fibonacci(n)
    if n < 1 then
        print("Invalid input!")
    elseif n == 1 or n == 2 then
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end
 
-- Call the function and print the first 10 values in the sequence
for i = 1, 10 do
    print(fibonacci(i)) -- Output: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55
end
 
-- Use the 'repeat-until' loop to execute a block of code at least once
repeat
    print("Hello world!")
until false -- Output: Hello world! (Repeated infinitely)
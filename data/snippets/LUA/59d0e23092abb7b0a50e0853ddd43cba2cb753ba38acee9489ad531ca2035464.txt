-- This function checks if a number is prime or not
function is_prime(num)
    -- Checks if the number is less than 2
    if (num < 2) then
        return false
    end

    -- Keeps track of the divisor
    local divisor = 2
    
    -- Checks if the number is divisible by any number from 2 up to the square root of the number
    while ((divisor * divisor) <= num) do
        -- If the number is divisible, then it is not a prime number
        if (num % divisor == 0) then
            return false
        end

        -- Increment divisor by 1
        divisor = divisor + 1
    end

    -- If the number is not divisible by any number, then it is a prime number
    return true
end

-- This function generates a list of prime numbers up to the given limit
function get_primes(limit)
    -- Creates an empty table
    local primes = {}

    -- Checks every number up to the limit
    for i = 1, limit do
        -- Calls the is_prime function to check if the number is prime
        if (is_prime(i)) then
            -- If the number is prime, it is added to the primes table
            table.insert(primes, i)
        end
    end

    -- Returns the list of prime numbers
    return primes
end

-- Prints out all prime numbers up to 100
print("The prime numbers up to 100 are:")
local primes = get_primes(100)
-- Uses a for loop to print out each number in the primes table
for i, prime in ipairs(primes) do
    print(prime)
end
--[[
This function performs the binary search algorithm on a given sorted table
@param tbl The table to search through
@param item The item to search for
@return the index of the found item or nil if it is not found
]]
function binary_search(tbl, item) -- Define the function
    local min = 1				-- Set minimum index to 1
    local max = #tbl			-- Set maximum index to length of table
    while min <= max do			-- Loop while minimum index is less than or equal to maximum index
        local mid = math.floor((min + max) / 2)	-- Find the middle index 
        if tbl[mid] == item then		-- If the middle element is equal to the searched item
            return mid		-- Return the index of the found item
        elseif tbl[mid] < item then	-- If the middle element is less than the searched item 
            min = mid + 1		-- Update the minimum index to the middle index + 1
        else				-- If the middle element is greater than the searched item
            max = mid - 1		-- Update the maximum index to the middle index - 1
        end
    end
    return nil				-- Return nil if the item is not found in the table
end

-- Example usage
local numbers = {1, 2, 3, 4, 5, 6, 7}	-- Create a sorted table of numbers
local index = binary_search(numbers, 4) 	-- Call the binary_search function to find the index of number 4
print(index)		-- Output: 4
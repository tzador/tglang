-- This is a comment in LUA

-- declaring a table with key-value pairs
local student = {
    name = "John",
    age = 19,
    grade = "A",
    subjects = {"Math", "Science", "History"}
}

-- iterating through the values of the subjects array
for i, subject in ipairs(student.subjects) do
    print("Subject: " .. subject)
end

-- declaring a function that takes in two parameters
-- and returns their sum
function sum(a, b)
    return a + b
end

-- using the string.format function to format the output
print(string.format("The sum of %d and %d is %d", 5, 10, sum(5, 10)))

-- creating a class
local Animal = {}
-- defining a constructor for the class
function Animal:new(name, age)
    local animal = {}
    setmetatable(animal, self)
    self.__index = self
    animal.name = name
    animal.age = age
    return animal
end

-- creating an instance of the Animal class
local dog = Animal:new("Buddy", 5)

-- adding a method to the Animal class
function Animal:makeSound(sound)
    print(self.name .. " is making a " .. sound)
end

-- calling the makeSound method on the dog instance
dog:makeSound("Woof")

-- output: Subject: Math
-- output: Subject: Science
-- output: Subject: History
-- output: The sum of 5 and 10 is 15
-- output: Buddy is making a Woof
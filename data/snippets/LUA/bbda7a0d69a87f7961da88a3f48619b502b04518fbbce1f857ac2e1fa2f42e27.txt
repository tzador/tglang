function binarySearch(value, list, low, high) --creating a function to perform binary search
  if low > high then --checking if low is greater than high, return -1 as value is not present in list
    return -1 
  end 
  
  local mid = (low + high) / 2 --calculating middle index of list 
  mid = math.floor(mid) --rounding down the middle index
  
  if value == list[mid] then --checking if value is equal to the middle index value, return middle index
    return mid 
  elseif value < list[mid] then --if value is less than middle index value, recursively call function with new high index 
    return binarySearch(value, list, low, mid-1)
  else --if value is greater than middle index value, recursively call function with new low index
    return binarySearch(value, list, mid+1, high) 
  end 
end

--example of using the function
local numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
local target = 3
local result = binarySearch(target, numbers, 1, #numbers) --passing in target value, list, low index and high index
print("Target value is at index:", result) --printing result, which should be index 2
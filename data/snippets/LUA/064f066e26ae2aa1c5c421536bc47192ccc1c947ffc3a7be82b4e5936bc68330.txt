---[=[ Multi-line comment
    This code snippet demonstrates the use of functions, tables, and control structures in LUA.
    Functions are declared using the "function" keyword, followed by the name of the function and its parameters.
    Tables are created using curly braces and can contain key-value pairs or an array of values.
    Control structures such as "if-else" and "for" loops are used for making decisions and iterating through data.
  ]=] 
  --- Sample function that returns the square of a number
  ---@param num Number to be squared
  ---@return The square of the number
  local function square(num)
    return num * num
  end
  
  -- Define a table containing fruits and their prices
  local fruits = { 
  ["Apple"] = 2.99,
  ["Orange"] = 3.49,
  ["Banana"] = 1.99,
  ["Grapes"] = 4.99,
  }
  
  --- Calculate the total cost of all fruits
  ---@param fruitTable Table containing fruits and their prices
  ---@return The total cost of all fruits
  local function calculateCost(fruitTable)
    local totalCost = 0
  
    -- Loop through the fruit table and add up the prices
    for fruit, price in pairs(fruitTable) do
      totalCost = totalCost + price
    end
  
    return totalCost
  end
  
  -- Call the square function and print the result
  print("The square of 5 is " .. square(5))
  
  -- Calculate and print the total cost of fruits
  print("The total cost of all fruits is $" .. calculateCost(fruits))
---[[
    This is a multi-line comment in LUA programming language.
    It can be used to provide long descriptions or explanations about the code.
    In this example, we will be defining a function that calculates the factorial of a number using recursion.
    The function takes in a single parameter, 'n', which is the number to be calculated factorial for.
]]
---[[
    The function definition starts with the keyword 'function', followed by the function name 'factorial' and the parameter 'n'.
    Within the parentheses, we check if the value of 'n' is greater than 1.
    If so, the function recursively calls itself, passing in 'n-1' as the new parameter.
    The recursion continues until 'n' becomes 1, and then it starts returning the calculated factorial values.
    The base case of the recursion is when 'n' is equal to 1, where the function simply returns 1.
]]
function factorial(n)
    if n > 1 then
        return n * factorial(n-1) -- recursive call to the function
    end
    return 1 -- base case
end

-- Calling the factorial function with the parameter value of 5 and printing the result
print(factorial(5))

-- Output:
-- 120
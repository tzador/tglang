-- This is a LUA code snippet for calculating the first 10 numbers in the Fibonacci sequence

-- Function to calculate the Fibonacci sequence
function fibonacci(n)
    -- Create an empty array to store the sequence
    local fib = {}
    -- Loop through the first 10 numbers in the sequence
    for i = 1, n do
        -- If the current number is the first or second in the sequence, simply add it to the array
        if i == 1 or i == 2 then
            fib[i] = i
        else
            -- Otherwise, use the formula f(n) = f(n-1) + f(n-2) to calculate the current number
            fib[i] = fib[i-1] + fib[i-2]
        end
    end
    -- Return the array containing the sequence
    return fib
end

-- Call the fibonacci() function with input of 10 to get the first 10 numbers in the sequence
local numbers = fibonacci(10)

-- Loop through the numbers and print them out
for i, num in ipairs(numbers) do
    print("The "..i.."th number in the Fibonacci sequence is: "..num)
end
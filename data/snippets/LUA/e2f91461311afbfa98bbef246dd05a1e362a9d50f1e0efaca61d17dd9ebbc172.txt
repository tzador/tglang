--[[

This is a long and complex code snippet in LUA that generates a table of prime numbers.

]]

-- Function for checking if a number is prime
function is_prime(number)
    if number == 2 then
        return true
    elseif number < 2 or number % 2 == 0 then
        return false
    end
    local divisor = 3
    while divisor * divisor <= number do
        if number % divisor == 0 then
            return false
        end
        divisor = divisor + 2
    end
    return true
end

-- Function for generating a table of prime numbers
function generate_prime_table(limit)
    local prime_table = {}
    local current_number = 2
    while #prime_table < limit do
        if is_prime(current_number) then
            table.insert(prime_table, current_number)
        end
        current_number = current_number + 1
    end
    return prime_table
end

-- Displaying the generated prime table
print("Generating a table of prime numbers...")
local prime_table = generate_prime_table(20)
print("Prime table generated!")
for i = 1, #prime_table do
    print(i .. ": " .. prime_table[i])
end

--[[
Output:
Generating a table of prime numbers...
Prime table generated!
1: 2
2: 3
3: 5
4: 7
5: 11
6: 13
7: 17
8: 19
9: 23
10: 29
11: 31
12: 37
13: 41
14: 43
15: 47
16: 53
17: 59
18: 61
19: 67
20: 71
]]
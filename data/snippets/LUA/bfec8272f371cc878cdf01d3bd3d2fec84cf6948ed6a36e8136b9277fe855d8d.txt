--- Table that represents a deck of cards.
---@class Deck
local Deck = {}

--- Initializes a new instance of a deck with 52 cards.
function Deck:new()
    local obj = {cards = {}}
    
    --- Populate the deck with 52 cards.
    for suit = 1, 4 do
        for rank = 1, 13 do
            obj.cards[#obj.cards + 1] = {suit = suit, rank = rank}
        end
    end

    --- Shuffles the deck using the Fisher-Yates algorithm.
    ---@return void
    function obj:shuffle()
        --- Create a temporary table for storing shuffled cards.
        local temp = {}

        --- Keeps track of the remaining cards to shuffle.
        local remaining = #obj.cards

        --- Iterates through each card in the deck.
        for i = 1, remaining do
            --- Generates a random index for swapping cards.
            local randomIndex = math.random(1, remaining)

            --- Swap the current card with a randomly chosen card.
            temp[i], temp[randomIndex] = obj.cards[randomIndex], obj.cards[i]

            --- Decrease the remaining cards to shuffle.
            remaining = remaining - 1
        end

        --- Replace the original deck with the shuffled one.
        obj.cards = temp
    end

    --- Returns the first card in the deck and removes it.
    ---@return table The first card in the deck.
    ---@return int The number of remaining cards in the deck.
    function obj:deal()
        --- Gets the first card in the deck.
        local card = obj.cards[1]

        --- Removes the first card from the deck.
        table.remove(obj.cards, 1)

        --- Returns the first card and the number of remaining cards.
        return card, #obj.cards
    end

    return obj
end

-- EXAMPLE USAGE:
-- Create a new deck.
local deck = Deck:new()

-- Shuffle the deck.
deck:shuffle()

-- Deal the first card and get the remaining number of cards.
local card, remaining = deck:deal()

-- Print the card's suit and rank.
print("Suit: " .. card.suit .. ", Rank: " .. card.rank)

-- Print the remaining number of cards.
print("Remaining cards: " .. remaining)
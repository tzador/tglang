-- This is a comment in LUA

-- Initialize a table
local myTable = {}

-- Add elements to the table
myTable["name"] = "John"
myTable["age"] = 25
myTable["hobbies"] = {"reading", "drawing", "playing guitar"}

-- Define a function to print the table elements
function printTable(table)
  for key, value in pairs(table) do
    print(key .. ": " .. tostring(value))
  end
end

-- Call the function to print the elements in the table
printTable(myTable)

-- Output:
-- name: John
-- age: 25
-- hobbies: table: 0xabc123

-- Create a metatable for custom behavior
local metaTable = {
  -- Define __index function to handle indexing of non-existent elements in the table
  __index = function(table, key)
    print("Trying to access non-existent key: " .. key)
  end,
  -- Define __newindex function to handle assignment of new element in the table
  __newindex = function(table, key, value)
    print("Trying to assign new value to key: " .. key .. " with value: " .. tostring(value))
    rawset(table, key, value)
  end
}

-- Set the metatable for the myTable
setmetatable(myTable, metaTable)

-- Try to access a non-existent key in the table
print(myTable["occupation"])

-- Output:
-- Trying to access non-existent key: occupation

-- Try to assign a new value to a key in the table
myTable["occupation"] = "web developer"

-- Output:
-- Trying to assign new value to key: occupation with value: web developer
-- occupation: web developer
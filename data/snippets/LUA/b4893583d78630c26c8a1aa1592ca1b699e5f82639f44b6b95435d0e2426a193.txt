--This function takes in two strings and concatenates them together
--@param str1 first string to be concatenated
--@param str2 second string to be concatenated
--@return concatenated strings
function stringConcat(str1, str2)
    local result = str1 .. str2 -- use the concatenation operator to combine the two strings
    return result -- return the concatenated string
end

--This function loops through a table and prints out each value
--@param tbl table to be iterated through
--@return none
function printTableValues(tbl)
    for key, value in pairs(tbl) do -- use the pairs() function to iterate through the table
        print(value) -- print out each value in the table
    end
end

--This function calculates the factorial of a given number
--@param num number to calculate factorial of
--@return factorial of the given number
function factorial(num)
    if num == 0 then -- base case for factorial
        return 1 
    else
        return num * factorial(num-1) -- recursive case
    end
end

--This function checks if a given number is prime
--@param num number to be checked
--@return boolean value indicating if number is prime or not
function isPrime(num)
    if num < 2 then -- any number less than 2 is not considered prime
        return false 
    end

    for i = 2, num-1 do -- loop through all numbers from 2 to num-1
        if num % i == 0 then -- if any of them divide evenly into num, num is not prime
            return false
        end
    end

    return true -- if none of the previous conditions return false, num is prime
end

--Example usage of functions with annotated Markdown code snippet
local name = "John"
local surname = "Smith"
print("Full name: " .. stringConcat(name, surname)) -- prints "Full name: JohnSmith"

local numbers = {5, 8, 12, 3, 19}
printTableValues(numbers) -- prints all the values in the table: 5, 8, 12, 3, 19

local num = 6
print("Factorial of " .. num .. " is " .. factorial(num)) -- prints "Factorial of 6 is 720"

local primeNum = 11
if isPrime(primeNum) then
    print(primeNum .. " is prime") -- prints "11 is prime"
else
    print(primeNum .. " is not prime")
end
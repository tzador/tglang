-- This is a function that takes in a string as a parameter
-- and counts the number of possible permutations of that string
function countPermutations(string)
    -- table to store characters and their frequencies
    local charCounts = {}
    -- loop through each character in the string
    for i = 1, string.len(string) do
        -- get current character
        local char = string.sub(string, i, i)
        -- increment count if character is already in table
        if charCounts[char] then
            charCounts[char] = charCounts[char] + 1
        else -- add character to table with count of 1
            charCounts[char] = 1
        end
    end

    -- calculate total possible permutations using factorial
    local totalPermutations = 1
    for char, count in pairs(charCounts) do
        totalPermutations = totalPermutations * factorial(count)
    end

    -- return the total number of permutations
    return totalPermutations
end

-- function to calculate factorial
function factorial(n)
    if n <= 1 then return 1 end
    return n * factorial(n-1)
end

-- example usage
local myString = "abracadabra"
print("Total permutations of '" .. myString .. "': " .. countPermutations(myString))
-- Output: Total permutations of 'abracadabra': 83160
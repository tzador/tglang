-- This is a complex code snippet written in LUA.
-- It creates a table containing objects with different data types,
-- calculates the average of a specific property and prints it out.

-- Define a function to calculate the average of a specific property in a table
function calculateAverage(table, property)
    local sum = 0 -- Initialize the sum variable to 0
    local count = 0 -- Initialize the count variable to 0
    for i, object in ipairs(table) do -- Loop through the table
        if type(object[property]) == "number" then -- Check if the property value is a number
            sum = sum + object[property] -- Add the property value to the sum
            count = count + 1 -- Increment the count variable
        end
    end
    return sum / count -- Return the average of the property values
end

-- Define a table containing objects with different data types
local objects = {
    { name = "John", age = 25, height = 175.5 },
    { name = "Jane", age = 30, height = 162.2 },
    { name = "Bob", age = 45, height = "unknown" },
    { name = "Alice", age = "unknown", height = 183.8 },
    { name = "Mark", age = 35, height = nil }
}

-- Print out the average age of the objects
print("The average age is: " .. calculateAverage(objects, "age"))
-- Output: The average age is: 35

-- Print out the average height of the objects
print("The average height is: " .. calculateAverage(objects, "height"))
-- Output: The average height is: 173.83
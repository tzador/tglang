-- Function to calculate the factorial of a number
-- Takes one parameter, the number to calculate the factorial of
-- Returns the factorial of the given number
function factorial(num)
    -- Base case, if number is 0 or 1, factorial is 1
    if num == 0 or num == 1 then
        return 1
    -- Recursive case, calls factorial function with num-1 and multiplies by num
    else
        return factorial(num-1) * num
    end
end

-- Function to print the first n numbers of the Fibonacci sequence
-- Takes one parameter, the number of Fibonacci numbers to print
-- Returns nothing, simply prints the Fibonacci numbers
function printFibonacci(n)
    -- First two numbers of sequence are always 0 and 1
    local first = 0
    local second = 1
    -- Counter to keep track of how many numbers have been printed
    local counter = 0
    -- Loop until n numbers have been printed
    while counter < n do
        -- Print current Fibonacci number
        print(first)
        -- Calculate next number by adding first and second
        local next = first + second
        -- Update first and second variables
        first = second
        second = next
        -- Increment counter
        counter = counter + 1
    end
end

-- Function to sort an array in ascending order using bubble sort
-- Takes one parameter, the array to be sorted
-- Returns the sorted array
function bubbleSort(arr)
    -- Loop through array n-1 times
    for i = 1, #arr-1 do
        -- Loop through array, swapping elements if they are in the wrong order
        for j = 1, #arr-i do
            if arr[j] > arr[j+1] then
                local temp = arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = temp
            end
        end
    end
    -- Return sorted array
    return arr
end

-- Function to validate a password
-- Takes one parameter, the password to be validated
-- Returns a boolean value indicating whether the password is valid or not
function validatePassword(password)
    -- Checks if password is at least 8 characters long
    if string.len(password) < 8 then
        return false
    end
    -- Checks if password contains at least one uppercase letter
    if not string.match(password, "%u") then
        return false
    end
    -- Checks if password contains at least one lowercase letter
    if not string.match(password, "%l") then
        return false
    end
    -- Checks if password contains at least one number
    if not string.match(password, "%d") then
        return false
    end
    -- Checks if password contains at least one special character
    if not string.match(password, "[~!@#$%^&*()-=_+\\|<>,.?/:;{}[]") then
        return false
    end
    -- If all checks pass, return true
    return true
end

-- Main function to demonstrate use of the above functions
function main()
    -- Calculate factorial of 5
    local factorialOf5 = factorial(5)
    print("Factorial of 5: " .. factorialOf5)

    -- Print first 10 Fibonacci numbers
    print("First 10 Fibonacci numbers are:")
    printFibonacci(10)

    -- Create and sort an array
    local arr = {3, 5, 2, 1, 4, 6, 8, 7, 9}
    print("Unsorted array: " .. table.concat(arr, ","))
    arr = bubbleSort(arr)
    print("Sorted array: " .. table.concat(arr, ","))

    -- Validate a password
    local password = "Abcdefg$1234"
    if validatePassword(password) then
        print("'" .. password .. "' is a valid password.")
    else
        print("'" .. password .. "' is not a valid password.")
    end
end

-- Call main function to run program
main()
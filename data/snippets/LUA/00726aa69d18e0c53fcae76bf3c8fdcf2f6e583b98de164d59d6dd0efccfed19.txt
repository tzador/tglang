-- This is a custom iterator function called "squarePairs"
-- It takes a table as a parameter, and iterates through it pair by pair
-- Each pair is multiplied together to create a new value in the resulting table
-- This function returns the resulting table

function squarePairs(t)
    local result = {}
    local i = 1
    
    return function()
        if i > #t then
            return nil
        end
        
        local currentPair = t[i]
        local value = currentPair[1] * currentPair[2]
        result[i] = value
        i = i + 1
        
        return value
    end
    
    return result
end

-- This is an example table that will be passed to the "squarePairs" function
local exampleTable = {{2,3},{4,5},{6,7}}

-- Here we call the "squarePairs" function and save the returned iterator function to the "iterator" variable
local iterator = squarePairs(exampleTable)

-- We can now call the iterator function, which returns the multiplied value for each pair in the original table
-- The iteration stops once all pairs have been iterated through
print(iterator()) -- Output: 6
print(iterator()) -- Output: 20
print(iterator()) -- Output: 42
print(iterator()) -- Output: nil (end of iteration)
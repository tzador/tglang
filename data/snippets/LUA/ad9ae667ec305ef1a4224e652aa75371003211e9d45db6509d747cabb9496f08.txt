---[[
    This is a long and complex code snippet
    written in the LUA programming language.

    The code below creates a table and sorts
    its contents in ascending order based on
    the values of the keys.
]]

-- Create a table with key-value pairs
local table = {
    key1 = 5,
    key2 = 8,
    key3 = 2,
    key4 = 10,
    key5 = 1
}

-- Sort the table's contents in ascending order
function sortTable(table)
    local sortedTable = {} -- Create a new table to hold the sorted values
    
    -- Loop through the original table
    for k, v in pairs(table) do
        local i = 1
        while i <= #sortedTable do -- Loop through sortedTable to find correct position for pair
            if v < sortedTable[i][2] then
                break
            end
            i = i + 1
        end
        table.insert(sortedTable, i, {k, v}) -- Insert the pair in the correct position
    end

    return sortedTable -- Return the sorted table
end

-- Call the sortTable function and store the sorted table in a new variable
local sortedTable = sortTable(table)

-- Print the sorted table
for i, v in ipairs(sortedTable) do
    print(v[1] .. " : " .. v[2])
end

--[[
    Output:
    key5 : 1
    key3 : 2
    key1 : 5
    key2 : 8
    key4 : 10
]]
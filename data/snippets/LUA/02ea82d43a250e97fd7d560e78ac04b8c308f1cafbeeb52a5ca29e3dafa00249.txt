-- This is a function that takes in two parameters and returns their sum
function sum(a, b)
    return a + b
end

-- This is an example of a nested table
local nestedTable = {
    name = "John",
    age = 25,
    address = {
        street = "123 Main St.",
        city = "New York",
        state = "NY"
    }
}

-- A loop that iterates through the nested table and prints out each key and value
for key, value in pairs(nestedTable) do
    if type(value) == "table" then
        for k, v in pairs(value) do
            print(k .. ": " .. v)
        end
    else
        print(key .. ": " .. value)
    end
end

-- A recursive function that calculates the factorial of a given number
function factorial(n)
    if n == 0 then
        return 1
    else
        return n * factorial(n-1)
    end
end

-- A coroutine that prints a list of numbers every second, starting from 1
co = coroutine.create(function()
    local count = 1
    while true do
        print(count)
        count = count + 1
        -- Suspends the coroutine for 1 second before resuming
        coroutine.yield(1)
    end
end)

-- Starts the coroutine and repeatedly resumes it
while coroutine.status(co) ~= "dead" do
    coroutine.resume(co)
end
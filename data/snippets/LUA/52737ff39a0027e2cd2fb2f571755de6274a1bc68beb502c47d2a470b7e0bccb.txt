---[[
This function takes in two parameters, 'n' and 'm', and returns the sum of their factorials.
@param n The first number to be added, must be an integer.
@param m The second number to be added, must be an integer.
@return The factorial sum of n and m.
]]
function factorial_sum(n, m)
  local sum = 0            -- variable to store the factorial sum
  for i = 1, n do          -- loop from 1 to n
    local factorial = 1    -- variable to store the factorial value
    for j = 1, i do        -- loop from 1 to i
      factorial = factorial * j    -- calculate the factorial value
    end
    sum = sum + factorial  -- add the factorial value to the sum
  end
  for i = 1, m do          -- loop from 1 to m
    local factorial = 1    -- variable to store the factorial value
    for j = 1, i do        -- loop from 1 to i
      factorial = factorial * j    -- calculate the factorial value
    end
    sum = sum + factorial  -- add the factorial value to the sum
  end
  return sum               -- return the factorial sum
end

-- Example usage
local result = factorial_sum(4, 3)      -- result = 33
-- It calculates (1! + 2! + 3! + 4!) + (1! + 2! + 3!)
-- = (1 + 2 + 6 + 24) + (1 + 2 + 6)
-- = 33
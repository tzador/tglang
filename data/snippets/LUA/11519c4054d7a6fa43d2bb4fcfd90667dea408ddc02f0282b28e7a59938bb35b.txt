--[[

This is a long and complex code snippet written in LUA.
It showcases nested functions and loops.

]]

-- Declare a function that prints a message
local function printMessage(message)
    print(message)
end

-- Declare a function that takes in a number and returns its factorial
local function factorial(num)
    if num == 0 then
        return 1
    else
        return num * factorial(num - 1)
    end
end

-- Create a table with nested tables as values
local table = {
    name = "John",
    age = 25,
    hobbies = {"reading", "playing video games", "running"},
    attributes = {
        strength = 10,
        intelligence = 8,
        agility = 5
    }
}

-- Loop through the table and print out each value
for key, value in pairs(table) do
    -- Check if the value is a table
    if type(value) == "table" then
        -- Nested loop to iterate through nested tables
        for k, v in pairs(value) do
            -- Call the printMessage function to print out the value
            printMessage(v)
        end
    else
        -- Call the printMessage function to print out the value
        printMessage(value)
    end
end

-- Call the factorial function and print out its result
local result = factorial(5)
printMessage(result) -- Output: 120
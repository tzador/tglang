---[[ This is a comment in LUA language
     which is enclosed in triple brackets
     and can span multiple lines.]]


-- Define a global variable
global_var = 123

-- Define a local function that takes in two parameters
function local_function(param1, param2)
    -- Concatenate the parameters and print them
    print("Local function received: " .. param1 .. ", " .. param2)

    -- Check if param1 is greater than param2
    if param1 > param2 then
        -- If so, return param1
        return param1
    else
        -- Otherwise, return param2
        return param2
    end
end

-- Call the local function and save the return value in a local variable
result = local_function("hello", "world")

-- Print the result
print("Result of function call: " .. result)

-- Loop through a table using pairs function
for key, value in pairs({a = 1, b = 2, c = 3}) do
    -- Check if the key is "b"
    if key == "b" then
        -- If yes, continue to the next iteration
        -- Note: using continue is not supported in LUA, so we use a boolean flag
        skip_next = true
        -- Set the boolean flag to false so it doesn't skip any more iterations
    else
        skip_next = false
    end

    -- Check if skip_next is false
    if skip_next == false then
        -- Print the key and value
        print("Key: " .. key .. ", Value: " .. value)
    end
end


--[[
This is a multi-line comment in LUA
which is enclosed in double brackets
and can also be used as a syntax to disable code.]]
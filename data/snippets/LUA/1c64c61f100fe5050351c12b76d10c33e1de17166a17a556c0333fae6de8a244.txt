local function checkPalindrome(str)
    --[[This function checks whether a given string is a palindrome or not.
        A palindrome is a string that reads the same backward as forward.
        Parameters:
            str (string): The string to be checked.
        Returns:
            (boolean): True if the string is a palindrome, false otherwise.]]
    
    -- Convert the given string to lowercase and remove all non-alphabetic characters
    local cleanedStr = str:lower():gsub("[^a-z]", "")
    
    -- Loop through the first half of the string and compare it to the second half
    for i = 1, #cleanedStr/2 do
        if cleanedStr:sub(i, i) ~= cleanedStr:sub(-i, -i) then
            -- If the characters don't match, return false
            return false
        end
    end
    
    -- If the loop completes, then the string is a palindrome, so return true
    return true
end

-- Example calls to the function
print(checkPalindrome("level")) -- prints true
print(checkPalindrome("Racecar")) -- prints true
print(checkPalindrome("algorithm")) -- prints false
-- This is a comment in LUA

-- Define a function that takes in two parameters
function add(x, y)
    -- Check if the parameters are numbers
    if (type(x) ~= 'number' or type(y) ~= 'number') then
        -- If not numbers, throw an error
        error('Parameters must be numbers')
    end
    
    -- Calculate the sum of the two parameters
    local sum = x + y
    
    -- Return the sum
    return sum
end

-- Create a table and populate it with keys and values
local table = { key1 = 'value1', key2 = 'value2', key3 = 'value3' }

-- Loop through the table and print out the keys and values
for key, value in pairs(table) do
    print(key .. ' is equal to ' .. value)
end

-- Create a class named 'Person'
Person = {
    -- Constructor function for the class
    new = function(self, name, age)
        -- Set the object's properties
        self.name = name
        self.age = age
    end,
    
    -- Method for the class
    getInfo = function(self)
        -- Return a string with the person's name and age
        return 'My name is ' .. self.name .. ' and I am ' .. self.age .. ' years old.'
    end
}

-- Create an instance of the 'Person' class
local person = Person:new('John', 25)

-- Call the 'getInfo' method on the instance
print(person:getInfo())
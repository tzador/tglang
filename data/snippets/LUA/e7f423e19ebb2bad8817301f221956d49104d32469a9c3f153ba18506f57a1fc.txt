--[[ This is a complicated code snippet in LUA.
It implements a bubble sort algorithm to sort a list of numbers.
Author: XYZ ]]
-- define function to perform bubble sort
function bubbleSort(array)
    -- set variable to track if any swaps have been made
    local swapped = true
    -- repeat until no more swaps are made
    while swapped do
        -- set swapped to false at beginning of each pass
        swapped = false
        -- loop through array
        for i = 1, #array-1 do
            -- check if current element is greater than next element
            if array[i] > array[i+1] then
                -- swap elements
                array[i], array[i+1] = array[i+1], array[i]
                -- set swapped to true
                swapped = true
            end
        end
    end
    -- return sorted array
    return array
end
-- define list of numbers to be sorted
local numbers = {5, 3, 2, 7, 1}
-- print original list
print("Original list: " .. table.concat(numbers, ", "))
-- call bubbleSort function
numbers = bubbleSort(numbers)
-- print sorted list
print("Sorted list: " .. table.concat(numbers, ", "))
--[[
This is a multi-line comment in LUA
It will not be executed, just for documentation purposes
]]

-- Function to check if a number is prime
-- Takes in a number as parameter
local function is_prime(num)
    -- If number is 1 or less, return false
    if (num <= 1) then
        return false
    end

    -- Loop from 2 to half of the number
    for i = 2, math.floor(num / 2) do
        -- If number is divisible by 'i', return false
        if (num % i == 0) then
            return false
        end
    end

    -- If passed all checks, return true
    return true
end

-- Function to find the sum of prime numbers in a given list
-- Takes in a list of numbers as parameter
local function sum_prime(list)
    -- Initialize sum to 0
    local sum = 0
    -- Loop through each number in the list
    for _, num in ipairs(list) do
        -- If number is prime, add it to the sum
        if is_prime(num) then
            sum = sum + num
        end
    end
    -- Return the sum
    return sum
end

-- Example usage
local numbers = {2, 4, 6, 8, 10}
local result = sum_prime(numbers)
print(result) -- Output: 5 (since 2 is the only prime number in the list)

--[[
This is another multi-line comment
Just showing that the code is not affected by comments
]]

-- Can also be used with non-integer numbers
local more_numbers = {3.2, 5.7, 7.1, 11.4}
local result2 = sum_prime(more_numbers)
print(result2) -- Output: 10 (since 3.2 and 5.7 are prime numbers)
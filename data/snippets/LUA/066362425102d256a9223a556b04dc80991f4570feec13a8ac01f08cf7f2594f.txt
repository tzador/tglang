--[[ This is a multiline comment
    that spans over multiple lines 
    and can be used to provide
    detailed descriptions. ]]

-- Function to calculate the factorial of a number
function factorial(x)
    if x == 0 then
        return 1
    else
        return x * factorial(x - 1)
    end
end

-- Table containing names and corresponding ages
people = {
    name = "John",
    age = 32
},
{
    name = "Jane",
    age = 28
},
{
    name = "Adam",
    age = 45
}

-- For loop to print out names and corresponding ages
for i, person in ipairs(people) do
    print(person.name .. " is " .. person.age .. " years old.")
end

-- Class definition for a shape object
Shape = {}
Shape.__index = Shape

-- Method to create a new shape object
function Shape:new(x, y, color)
    local shape = {}
    setmetatable(shape, Shape)
    shape.x = x
    shape.y = y
    shape.color = color
    return shape
end

-- Method to calculate the area of a shape object
function Shape:getArea()
    return self.x * self.y
end

-- Inheritance from Shape class to create a Rectangle class
Rectangle = {}
Rectangle.__index = Rectangle
setmetatable(Rectangle, Shape)

-- Method to create a new rectangle object
function Rectangle:new(x, y, color, length, width)
    local rectangle = Shape:new(x, y, color)
    setmetatable(rectangle, Rectangle)
    rectangle.length = length
    rectangle.width = width
    return rectangle
end

-- Method to calculate the area of a rectangle object
function Rectangle:getArea()
    return self.length * self.width
end

-- Sample code to use the created classes and functions
shape = Shape:new(10, 20, "red")
rectangle = Rectangle:new(15, 25, "blue", 6, 8)
print("The area of the shape object is: " .. shape:getArea())
print("The area of the rectangle object is: " .. rectangle:getArea())
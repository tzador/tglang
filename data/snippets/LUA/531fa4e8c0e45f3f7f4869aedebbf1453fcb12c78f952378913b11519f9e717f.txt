-- This function finds the fibonacci number at the given index
-- @param n: the index of the fibonacci number
-- @return: the fibonacci number at the given index
function fibonacci(n)
  if n == 0 then -- base case
    return 0
  elseif n == 1 then -- base case
    return 1
  else
    return fibonacci(n - 1) + fibonacci(n - 2) -- recursive step
  end
end

-- This function checks if a given string is a palindrome
-- @param str: the string to be checked
-- @return: true if the string is a palindrome, false otherwise
function isPalindrome(str)
  local len = string.len(str) -- get length of string
  for i = 1, len/2 do -- loop through half of the string
    if string.sub(str, i, i) ~= string.sub(str, len - i + 1, len - i + 1) then -- compare characters at mirrored positions
      return false
    end
  end
  return true -- string is a palindrome
end

-- This function converts an array to a string
-- @param arr: the array to be converted
-- @return: a string representation of the array
function arrayToString(arr)
  local str = "[" -- start string with opening bracket
  for i = 1, #arr do -- loop through array
    str = str .. arr[i] -- add element to string
    if i ~= #arr then -- if not last element, add a comma
      str = str .. ", "
    end
  end
  str = str .. "]" -- end string with closing bracket
  return str
end

-- set a global variable
myGlobalVar = 123

-- create a table with keys and values
myTable = {
  key1 = "value1",
  key2 = "value2",
  key3 = "value3"
}

-- print the fibonacci numbers at indices 1, 5, and 10
print(fibonacci(1))
print(fibonacci(5))
print(fibonacci(10))

-- check if strings are palindromes
print(isPalindrome("racecar"))
print(isPalindrome("hello"))

-- convert arrays to strings
print(arrayToString({1, 2, 3}))
print(arrayToString({"a", "b", "c"}))

-- output:
-- 1
-- 5
-- 55
-- true
-- false
-- [1, 2, 3]
-- [a, b, c]
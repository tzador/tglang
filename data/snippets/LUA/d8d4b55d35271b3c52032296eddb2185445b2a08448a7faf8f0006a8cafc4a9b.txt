--[[
This is a long and complex code snippet in LUA.
It demonstrates a function that takes in two numbers as parameters and returns the greatest common divisor.
]]

-- define the function
function greatestCommonDivisor(num1, num2)
	-- initialize variables
	local larger = math.max(num1, num2) -- gets the larger of the two numbers
	local smaller = math.min(num1, num2) -- gets the smaller of the two numbers
	
	-- loop through numbers from 1 to the smaller number
	for i = 1, smaller do
		-- if the current number divides both numbers with no remainder
		if num1 % i == 0 and num2 % i == 0 then
			-- update the greatest common divisor
			gcd = i
		end
	end
	
	-- return the greatest common divisor
	return gcd
end

-- print the result of the function with two numbers as parameters
print(greatestCommonDivisor(24, 32))

-- output: 8 (since 8 is the greatest common divisor of 24 and 32)
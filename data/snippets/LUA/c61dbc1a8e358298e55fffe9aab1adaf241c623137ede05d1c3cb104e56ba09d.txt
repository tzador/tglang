-- Define a function that checks if a string is a palindrome
-- A palindrome is a string that is spelled the same way forwards and backwards

-- Function takes in a string parameter
function checkPalindrome(string)
  -- Convert string to lowercase
  string = string:lower()
  -- Set two counters, one starting from the beginning of the string and the other starting from the end
  local start = 1
  local finish = string.len(string)
  
  -- Loop through the string while the two counters have not crossed each other
  while start < finish do
    if string.sub(string, start, start) ~= string.sub(string, finish, finish) then
      -- Return false if the characters at the two positions are not equal
      return false
    else
      -- Increment the start counter and decrement the finish counter to compare the next pair of characters
      start = start + 1
      finish = finish - 1
    end
  end
  -- If the loop finishes without returning false, then the string is a palindrome, so return true
  return true
end

-- Call the function and store the result in a variable
local palindrome = checkPalindrome("racecar")

-- Print the result
print("Is 'racecar' a palindrome? " .. tostring(palindrome))

-- Output: Is 'racecar' a palindrome? true
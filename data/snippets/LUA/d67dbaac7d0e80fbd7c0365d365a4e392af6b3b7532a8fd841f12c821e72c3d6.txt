--function that returns the nth fibonacci number
--@param n the number of the fibonacci sequence to return
--@return the nth fibonacci number
function fibonacci(n)
    if n == 0 then
        return 0
    elseif n == 1 then
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

--function that checks if a number is prime
--@param num the number to check
--@return true if num is prime, false otherwise
function is_prime(num)
    if num <= 1 then
        return false
    elseif num == 2 then
        return true
    end

    for i = 2, num-1 do
        if num % i == 0 then
        	return false 
        end
    end
    
    return true
end

--function that returns the factorial of a number
--@param n the number to calculate the factorial for
--@return the factorial of n
function factorial(n)
    if n == 0 then
        return 1
    else
        return n * factorial(n-1)
    end
end

--function that checks if a string is a palindrome
--@param str the string to check
--@return true if str is a palindrome, false otherwise
function is_palindrome(str)
    local rev_str = ""

    for i = #str, 1, -1 do
        rev_str = rev_str .. string.sub(str, i, i)
    end

    if str == rev_str then
        return true
    else
        return false
    end
end

--function that sorts a table in ascending order
--@param tbl the table to sort
--@return a sorted table
function sort(tbl)
    for i = 1, #tbl-1 do
        for j = 1, #tbl-1 do
            if tbl[j] > tbl[j+1] then
                local temp = tbl[j]
                tbl[j] = tbl[j+1]
                tbl[j+1] = temp
            end
        end
    end

    return tbl
end

--main function
function main()
    --calculate and print fibonacci sequence up to 10
    for i = 1, 10 do
        print(fibonacci(i))
    end

    --check if 7 is a prime number
    print(is_prime(7))

    --calculate and print factorial of 5
    print(factorial(5))

    --check if "racecar" is a palindrome
    print(is_palindrome("racecar"))

    --sort a table of numbers and print it
    local tbl = {6, 2, 4, 1, 7, 3, 5}
    tbl = sort(tbl)
    for i = 1, #tbl do
        print(tbl[i])
    end
end

--run main function
main()

--output:
--1
--1
--2
--3
--5
--8
--13
--21
--34
--55
--true
--120
--true
--1
--2
--3
--4
--5
--6
--7
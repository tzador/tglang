--[[ This is a multiline comment in LUA --]]

-- Here we define a function called "fibonacci" that takes in a number "n" as its parameter
-- This function calculates the fibonacci sequence up to the given number "n" and returns a list of the calculated numbers
-- The fibonacci sequence is a series of numbers where the next number is the sum of the two numbers before it
-- The first two numbers in the sequence are always 0 and 1

local function fibonacci(n)
  -- Initialize an empty table to store the calculated numbers
  local fib_numbers = {}

  -- Add the first two numbers (0 and 1) to the table
  fib_numbers[1] = 0
  fib_numbers[2] = 1

  -- Loop through the remaining numbers in the sequence
  for i = 3, n do
    -- Calculate the next number in the sequence by adding the two previous numbers
    -- The previous numbers are accessed by indexing the table
    local next_num = fib_numbers[i - 1] + fib_numbers[i - 2]

    -- Add the calculated number to the table
    fib_numbers[i] = next_num
  end

  -- Return the table containing the fibonacci numbers
  return fib_numbers
end

-- Call the fibonacci function and print the results
local result = fibonacci(12)
print("Fibonacci sequence up to 12: ", table.concat(result, ", "))
-- Output: Fibonacci sequence up to 12: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89

-- Output a message indicating the end of the code snippet
print("End of code snippet.")
-- Output: End of code snippet.
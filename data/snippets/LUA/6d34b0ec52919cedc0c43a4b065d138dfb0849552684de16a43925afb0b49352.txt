-- This is a comment in LUA

-- Define a function that takes in two parameters
local function add(x, y)
    return x + y  -- Returns the sum of the two parameters
end

-- Define a table with key-value pairs
local fruits = {
    apple = "red",
    banana = "yellow",
    orange = "orange"
}

-- Loop through the table and print out each fruit and its color
for fruit, color in pairs(fruits) do
    print(fruit, "is", color)
end

-- Define a class named "Person"
local Person = {
    name = "",  -- Empty string for name attribute
    age = 0,    -- 0 for age attribute
    height = 0, -- 0 for height attribute
}

-- Define a function to create a new instance of Person
function Person:new(name, age, height)
    local obj = {}  -- Empty table to store attributes
    setmetatable(obj, self)  -- Set Person as metatable for obj
    self.__index = self  -- Set self as index for obj
    obj.name = name  -- Set name attribute for obj
    obj.age = age    -- Set age attribute for obj
    obj.height = height  -- Set height attribute for obj
    return obj  -- Return the newly created instance
end

-- Create a new instance of Person with name, age, and height values
local person1 = Person:new("John", 20, 170)

-- Print out attributes of person1
print(person1.name)    -- Output: "John"
print(person1.age)     -- Output: 20
print(person1.height)  -- Output: 170
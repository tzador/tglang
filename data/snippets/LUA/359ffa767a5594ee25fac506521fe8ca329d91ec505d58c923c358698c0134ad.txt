---[[
This code snippet is used to create a complex multiplication table 
that takes in two parameters and outputs a table with the calculated values.
]]
--- This function takes in two parameters, 'n' and 'm'
--- 'n' is the number of rows in the table and 'm' is the number of columns
function createMultiplicationTable(n, m)
    --- Initialize an empty table
    local table = {}
    --- Loop through each row
    for i = 1, n do
        --- Create a new row table
        local row = {}
        --- Loop through each column in the row
        for j = 1, m do
            --- Calculate the value using row and column indexes
            local value = i * j
            --- Add the value to the row table
            table.insert(row, value)
        end
        --- Add the row table to the multiplication table
        table.insert(table, row)
    end
    --- Return the multiplication table
    return table
end

--- Call the createMultiplicationTable function with 5 rows and 5 columns 
--- and store the result in a variable
local multiplicationTable = createMultiplicationTable(5, 5)

--- Loop through each row in the table
for i = 1, #multiplicationTable do
    --- Loop through each column in the row
    for j = 1, #multiplicationTable[i] do
        --- Print the value at the current row and column
        print(multiplicationTable[i][j])
    end
end
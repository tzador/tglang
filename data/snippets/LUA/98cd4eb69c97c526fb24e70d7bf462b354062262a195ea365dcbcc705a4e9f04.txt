{syntaxhl}
-- Function to calculate the factorial of a number
function factorial(n)
    if n < 0 then
        return "Error: Negative number"
    elseif n==0 then
        return 1
    else
        return n * factorial(n-1)
    end
end

-- Function to calculate the nth term in the Fibonacci sequence
function fibonacci(n)
    if n <= 1 then
        return n
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

-- Table to store the memoized values of the Fibonacci sequence
local fibonacci_table = {}

-- Function to calculate the nth term in the Fibonacci sequence using memoization
function fibonacci_memoized(n)
    if n <= 1 then
        return n
    elseif fibonacci_table[n] then
        return fibonacci_table[n]
    else
        local result = fibonacci_memoized(n-1) + fibonacci_memoized(n-2)
        fibonacci_table[n] = result
        return result
    end
end

-- Main function to test the implementations
function main()
    -- Input for factorial function
    local fact_input = 5
    -- Input for Fibonacci functions
    local fib_input = 7
    
    -- Printing the factorial of the input
    print("Factorial of " .. fact_input .. " is " .. factorial(fact_input))
    
    -- Printing the nth term in the Fibonacci sequence using basic implementation
    print("The " .. fib_input .. "th term in Fibonacci sequence (basic) is " .. fibonacci(fib_input))
    
    -- Printing the nth term in the Fibonacci sequence using memoization
    print("The " .. fib_input .. "th term in Fibonacci sequence (memoized) is " .. fibonacci_memoized(fib_input))
end

-- Running the main function
main()
---[[
    This is a long and complex code snippet in LUA.
    It demonstrates loop iteration and conditional statements.
    To run the code, simply call the 'execute' function.
--]]

---[[
    Function to initialize a table with random values from 0 to 100.
    @param limit: the limit for the random number generator
    @param length: the length of the table to be generated
    @return: a table filled with random numbers
--]]
local function initTable(limit, length)
    --- Table to store the random numbers
    local table = {}
    --- Loop to generate random numbers and add them to the table
    for i = 1, length do
        --- Generate a random number between 0 and the limit
        local random = math.random(limit)
        --- Add the random number to the table
        table[i] = random
    end
    --- Return the generated table
    return table
end

---[[
    Function to print out the contents of a table.
    @param table: the table to be printed
--]]
local function printTable(table)
    --- Loop through the table and print out each element
    for i = 1, #table do
        --- Print the element in a formatted string
        print("Element " .. i .. ": " .. table[i])
    end
end

---[[
    Function to execute the code snippet.
--]]
local function execute()
    --- Call the initTable function to generate a table with 10 random numbers
    local table = initTable(100, 10)
    --- Print out the table
    print("Generated Table:")
    printTable(table)
    --- Loop through the table and check for even numbers
    for i = 1, #table do
        --- Check if the number is even
        if table[i] % 2 == 0 then
            --- If even, print out the number
            print("Even Number: " .. table[i])
        end
    end
end

--- Call the execute() function to run the code
execute()
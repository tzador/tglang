---[[
    This code snippet is an example of a function in LUA that checks if a given number is prime.
    It uses a while loop with a nested for loop to check for factors.
]]

---[[
    @param num The number to be checked if it is prime
    @return Boolean true if num is prime, false if not
]]
local function is_prime(num)
    ---[[ 
        Both 0 and 1 are not considered prime numbers, so we check for these cases first
    ]]
    if num == 0 or num == 1 then
        return false
    end

    ---[[
        We iterate through all numbers less than or equal to the square root of num
        A number is considered a factor of num if num % factor == 0 
        If any factor is found, then num is not a prime number and we return false
        If no factors are found, then num is a prime number and we return true
    ]]
    local factor = 2
    while factor <= math.sqrt(num) do
        for i=2,factor do
            if num % i == 0 then
                return false
            end
        end
        factor = factor + 1
    end

    return true
end

---[[
    Example usage:
    print(is_prime(7)) -- Outputs: true
    print(is_prime(12)) -- Outputs: false
]]
---This function takes in a string as an argument and
--returns a table with the frequency of each character in the string.
function calculateFrequency(str)
  local freqTable = {} ---create an empty table to store the frequencies
  for i = 1, #str do ---loop through each character in the string
    local char = str:sub(i,i) ---get the current character
    if freqTable[char] == nil then ---check if the character is already in the table
      freqTable[char] = 1 ---if not, set its frequency to 1
    else
      freqTable[char] = freqTable[char] + 1 ---if it is, increment its frequency by 1
    end
  end
  return freqTable ---return the table of frequencies
end

---This function takes in a table of frequencies and
--returns the character(s) with the highest frequency.
function getHighestFrequency(freqTable)
  local highestFreq = 0 ---initialize variable for highest frequency
  local highestChars = {} ---initialize table for character(s) with highest frequency
  for char, freq in pairs(freqTable) do ---loop through each key-value pair in the table
    if freq > highestFreq then ---check if current frequency is higher than highest frequency
      highestFreq = freq ---if yes, update highest frequency
      highestChars = {char} ---and update table with new highest character(s)
    elseif freq == highestFreq then ---if equal to highest frequency, add character to table
      table.insert(highestChars, char)
    end
  end
  return highestChars ---return table of character(s) with highest frequency
end

---This function takes in a string and a table of character frequencies and
--replaces each character in the string with the corresponding frequency.
function replaceChars(str, freqTable)
  local newStr = "" ---initialize variable for new string
  for i = 1, #str do ---loop through each character in the string
    local char = str:sub(i,i) ---get the current character
    local freq = freqTable[char] ---get the corresponding frequency from the table
    newStr = newStr .. freq ---append the frequency to the new string
  end
  return newStr ---return the new string
end

--example usage of the functions:
inputString = "hello world"
frequencyTable = calculateFrequency(inputString) ---frequencyTable = {h=1, e=1, l=3, o=2, w=1, r=1, d=1}
highestChars = getHighestFrequency(frequencyTable) ---highestChars = {"l"}
outputString = replaceChars(inputString, frequencyTable) ---outputString = "1355223324"
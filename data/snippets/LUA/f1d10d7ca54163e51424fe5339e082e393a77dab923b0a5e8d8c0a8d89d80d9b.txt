--[[ This function recursively calculates the factorial of a given number
@param num - the number to calculate the factorial for
@return - the factorial of the given number
--]]
function factorial(num)
  if num == 0 then
    return 1
  else
    return num * factorial(num-1) --recursive call to the factorial function
  end
end

--[[ This function calculates the nth Fibonacci number using dynamic programming
@param n - the number representing the nth Fibonacci number to calculate
@return - the nth Fibonacci number
--]]
function fib(n)
  local fib_table = {0,1} -- initialize table for storing calculated Fibonacci numbers
  for i=3, n do
    -- calculate the nth Fibonacci number by adding the previous two numbers
    fib_table[i] = fib_table[i-1] + fib_table[i-2]
  end
  return fib_table[n]
end

--[[ This function takes in a string and returns the reverse of the string
@param str - the string to reverse
@return - the reversed string
--]]
function reverseString(str)
  local reversed = "" -- initialize empty string to store reversed characters
  for i=1, #str do
    -- add the next character from the end of the original string to the beginning of the reversed string
    reversed = string.sub(str,i,i) .. reversed 
  end
  return reversed
end

--[[ This function takes in a list of numbers and returns the sum of the numbers
@param list - the list of numbers to calculate the sum of
@return - the sum of the numbers
--]]
function sum(list)
  local total = 0 -- initialize the total to zero
  for i=1, #list do
    -- add each number in the list to the total
    total = total + list[i]
  end
  return total
end

--[[
This is a Lua comment
It can span multiple lines
]]

--[[ Calling the functions to test them
Note: The output will depend on the input provided 
--]]
print(factorial(5))
print(fib(7))
print(reverseString("hello"))
print(sum({1,2,3,4,5}))
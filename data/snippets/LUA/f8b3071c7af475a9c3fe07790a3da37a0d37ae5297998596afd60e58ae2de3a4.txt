-- Defining a function to calculate the factorial of a number
function factorial(x)
    -- Initializing the factorial variable
    local fact = 1
    -- Looping through all the numbers from 1 to x
    for i = 1, x do
        -- Multiplying the current number with the factorial variable
        fact = fact * i
    end
    -- Returning the factorial value
    return fact
end

-- Defining a recursive function to calculate the Fibonacci sequence
function fibonacci(n)
    -- Base case for when n is 0 or 1
    if n <= 1 then
        return n
    -- Recursive case for when n is greater than 1
    else
        -- Calling fibonacci function recursively on n-1 and n-2
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

-- Calling the factorial function with input 5 and printing the result
print("Factorial of 5 is: " .. factorial(5))

-- Creating a table to store the first 10 terms of the Fibonacci sequence
local fibonacciTable = {}

-- Looping through numbers from 0 to 9
for i = 0, 9 do
    -- Storing the result of fibonacci function with current i value as key in the table
    fibonacciTable[i] = fibonacci(i)
end

-- Printing the table to display the first 10 terms of the Fibonacci sequence
print("First 10 terms of the Fibonacci sequence are: ")
for key, value in pairs(fibonacciTable) do
    print(value)
end
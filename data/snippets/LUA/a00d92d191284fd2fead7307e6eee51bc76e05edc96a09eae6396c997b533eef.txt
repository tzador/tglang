--[[ This is a multi-line comment in LUA
This code snippet demonstrates a complex table operation
The table contains an array of objects and functions.
Objects have properties like name, age, and function.
The function is used to display the name and age of the object. ]]
 
local table = {
    { name = "John", age = 25, display = function() print("Name: John, Age: 25") end },
    { name = "Emily", age = 30, display = function() print("Name: Emily, Age: 30") end },
    { name = "David", age = 20, display = function() print("Name: David, Age: 20") end }
}
 
-- This function iterates through the table and calls the display function for each object
function displayTable()
    for index, object in ipairs(table) do
        object.display() -- Calling the display function of the object
    end
end
 
displayTable()
 
-- Output:
-- Name: John, Age: 25
-- Name: Emily, Age: 30
-- Name: David, Age: 20
 
-- This code snippet also demonstrates the use of a closure to modify the properties of an object
 
-- Creating a new object with name and age properties
local newObject = { name = "Emma", age = 40 }
 
-- Modifying the age property using a closure
newObject.age = (function() return newObject.age + 5 end)()
 
-- Printing the updated age
print("Updated age: " .. newObject.age) -- Output: Updated age: 45
 
-- This demonstrates how a closure can be used to modify properties without directly accessing them.
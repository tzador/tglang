--- Function to sort a table of strings alphabetically
local function sortTable(table)
    -- table with letter values in alphabetical order
    local letters = {A = 1, B = 2, C = 3, D = 4, E = 5, F = 6, G = 7, H = 8, I = 9, J = 10,
                    K = 11, L = 12, M = 13, N = 14, O = 15, P = 16, Q = 17, R = 18, S = 19,
                    T = 20, U = 21, V = 22, W = 23, X = 24, Y = 25, Z = 26}
    -- loop through table and convert all strings to uppercase
    for index, value in ipairs(table) do
        table[index] = string.upper(value)
    end
    -- sort the table using bubble sort algorithm
    for i = 1, #table do
        for j = 1, #table - i do
            -- get first letter of current and next value
            local currLetter = string.sub(table[j], 1, 1)
            local nextLetter = string.sub(table[j+1], 1, 1)
            -- compare first letters' values from letters table
            if letters[currLetter] > letters[nextLetter] then
                -- swap the values if current letter comes after next letter alphabetically
                table[j], table[j+1] = table[j+1], table[j]
            end
        end
    end
    -- convert table back to lowercase and return sorted table
    for index, value in ipairs(table) do
        table[index] = string.lower(value)
    end
    return table
end

-- sample table to be sorted
local fruits = {"apple", "pear", "orange", "banana", "kiwi", "mango"}
-- sort the table
local sortedFruits = sortTable(fruits)
-- print the sorted table
print(table.concat(sortedFruits, ", "))
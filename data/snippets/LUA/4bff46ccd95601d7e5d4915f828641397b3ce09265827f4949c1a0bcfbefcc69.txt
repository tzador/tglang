--[[ LÃ–VE BALL COLLISION DEMO ]]

-- initial values for ball
local ball = {
    x = 200, -- x-position
    y = 200, -- y-position
    dx = 0, -- x-velocity
    dy = 0, -- y-velocity
    radius = 25, -- radius of the ball
    color = {0, 255, 0}, -- RGB color code
}

-- constant variables
local WINDOW_WIDTH = 800 -- window width
local WINDOW_HEIGHT = 600 -- window height
local BALL_SPEED = 300 -- speed of the ball

-- load function for setting up initial variables
function love.load()
    love.window.setTitle("Ball Collision Demo") -- set window title
    love.window.setMode(WINDOW_WIDTH, WINDOW_HEIGHT) -- set window size
    math.randomseed(os.time()) -- set random seed
end

-- update function for calculations and movements
function love.update(dt)
    -- change ball's position based on velocity
    ball.x = ball.x + ball.dx * dt
    ball.y = ball.y + ball.dy * dt

    -- check for collision with window edges
    if ball.x - ball.radius < 0 then
        ball.x = ball.radius
        ball.dx = -ball.dx
    elseif ball.x + ball.radius > WINDOW_WIDTH then
        ball.x = WINDOW_WIDTH - ball.radius
        ball.dx = -ball.dx
    end

    if ball.y - ball.radius < 0 then
        ball.y = ball.radius
        ball.dy = -ball.dy
    elseif ball.y + ball.radius > WINDOW_HEIGHT then
        ball.y = WINDOW_HEIGHT - ball.radius
        ball.dy = -ball.dy
    end
end

-- draw function for displaying objects on screen
function love.draw()
    -- draw ball
    love.graphics.setColor(ball.color[1], ball.color[2], ball.color[3]) -- set color
    love.graphics.circle("fill", ball.x, ball.y, ball.radius) -- draw circle

    -- draw central line
    love.graphics.line(0, WINDOW_HEIGHT / 2, WINDOW_WIDTH, WINDOW_HEIGHT / 2)

    -- draw collision point
    love.graphics.setColor(255, 0, 0) -- set color to red
    love.graphics.points(ball.x, ball.y) -- draw single point at ball's position
end

-- keypressed function for handling key input
function love.keypressed(key)
    -- increase ball's velocity when up, down, left, or right arrows are pressed
    if key == "up" then
        ball.dy = ball.dy - BALL_SPEED
    elseif key == "down" then
        ball.dy = ball.dy + BALL_SPEED
    elseif key == "left" then
        ball.dx = ball.dx - BALL_SPEED
    elseif key == "right" then
        ball.dx = ball.dx + BALL_SPEED
    end
end
-- this function checks if a number is prime
-- it takes in a number as an argument and returns a boolean value
-- true if the number is prime, false if it is not
function checkPrime(num)
    -- check if the number is less than 2, as 0 and 1 are not considered prime numbers
    if num < 2 then
        return false
    end
    -- loop through all numbers from 2 to the square root of the given number
    for i = 2, math.sqrt(num) do
        -- check if the number is divisible by any number between 2 and the square root
        if num % i == 0 then
            return false
        end
    end
    -- if the number is not divisible by any number from 2 to the square root, it is prime
    return true
end

-- generate a table of prime numbers within a given range
-- takes in a starting number and an ending number as arguments
-- returns a table containing all prime numbers within the given range
function generatePrimes(start, finish)
    -- initialize an empty table to store prime numbers
    local primes = {}
    -- loop through all numbers from the starting number to the ending number
    for i = start, finish do
        -- check if the current number is prime using the checkPrime function
        if checkPrime(i) then
            -- if it is prime, add it to the primes table
            table.insert(primes, i)
        end
    end
    -- return the table of prime numbers
    return primes
end

-- sample usage of the generatePrimes function
-- generate a table of prime numbers from 1 to 100
primes = generatePrimes(1, 100)
-- loop through the primes table and print out each prime number
for i = 1, #primes do
    print(primes[i])
end
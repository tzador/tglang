-- This is a comment in LUA
-- Multi-line comments can be done using a double dash followed by brackets
--[[
  Here is a multi-line comment.
  This can be used to explain complex code or add clarification.
  Note that the brackets must be closed for the comment to end.
--]]

-- Declaring variables in LUA can be done using the local keyword
-- Variables can hold different data types such as strings, numbers, and booleans
local string_variable = "Hello World"     -- This is a string
local number_variable = 123               -- This is a number
local boolean_variable = true             -- This is a boolean

-- Conditional statements can be done using if/elseif/else statements
if string_variable == "Hello World" then
  print("The string_variable contains the value 'Hello World'.")
elseif number_variable == 123 then
  print("The number_variable contains the value 123.")
else
  print("Neither of the variables contain the expected values.")
end

-- Loops can be done using a variety of methods in LUA
-- For loops are used to iterate a specific number of times
for i = 1, 10 do
  print("This is loop iteration number " .. i)
end

-- While loops are used to iterate while a condition is true
local i = 1
while i <= 10 do
  print("This is loop iteration number " .. i)
  i = i + 1
end

-- Tables are a key data structure in LUA
-- They can hold lists, arrays, and key-value pairs
local table = {"apple", "banana", "orange"}    -- This is a list
table[4] = "grape"                            -- Adding an element to the list
table["color"] = "yellow"                     -- This is a key-value pair
print("The fruit " .. table[2] .. " is " .. table["color"] .. ".")    -- Output: The fruit banana is yellow.

-- Functions are blocks of code that can be called and executed
-- They can also accept parameters and return values
function multiply(num1, num2)
  return num1 * num2
end

local result = multiply(5, 10)
print(result)    -- Output: 50
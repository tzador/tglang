--[[
This is a multi-line comment in LUA.
It is used to give a brief overview of the code.

Here, we are defining a function named 'getSum' that takes two parameters, num1 and num2.
The function calculates and returns the sum of the two numbers.
]]--

function getSum(num1, num2)
    --[[ this is a single-line comment in LUA.
    In this line, we are defining a variable named 'sum' and assigning it the value of num1 + num2.
    ]]--
    local sum = num1 + num2
    
    --[[ This is a conditional statement
    Here, we are checking if the value of the 'sum' variable is greater than 10.
    If it is, the code inside the 'if' block will be executed, otherwise the code inside the 'else' block will be executed.
    ]]--
    if sum > 10 then
        --[[ This is another multi-line comment.
        In this line, we are using the 'print' function to output the result using string concatenation.
        ]]--
        print("The sum of " .. num1 .. " and " .. num2 .. " is " .. sum .. ", which is greater than 10.")
    else
        --[[ This is another example of single-line comment.
        In this line, we are using the 'print' function to output the result in a different format.
        ]]--
        print(string.format("The sum of %d and %d is %d, which is not greater than 10.", num1, num2, sum))
    end
    
    --[[ Here, we are using a 'for' loop to print the numbers from 1 to 5.
    The loop has an initial value of 1, increments by 1, and stops when it reaches 5.
    ]]--
    for i = 1, 5 do
        --[[ This is another example of string concatenation.
        We are using the 'print' function to output each value of the 'i' variable, along with some text.
        ]]--
        print("The current value of i is: " .. i)
    end
    
    --[[ Finally, we are returning the value of the 'sum' variable as the output of the function.
    This will be the last line of code executed.
    ]]--
    return sum
end

-- calling the function with arguments 6 and 4
getSum(6, 4)

-- Output: The sum of 6 and 4 is 10, which is not greater than 10.
-- The current value of i is: 1
-- The current value of i is: 2
-- The current value of i is: 3
-- The current value of i is: 4
-- The current value of i is: 5
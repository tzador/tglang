-- This is a comment in LUA

-- This function will return the sum of two numbers
-- @param a (number) the first number to be added
-- @param b (number) the second number to be added
-- @return (number) the sum of a and b
function add(a, b)
    return a + b
end

-- This function will print out a table in a formatted way
-- @param t (table) the table to be printed
-- @param space (number) the amount of space to indent the table
function printTable(t, space)
    -- loop through each key-value pair in the table
    for k, v in pairs(t) do
        -- print the key with appropriate indentation
        print(string.rep(" ", space) .. k .. " = ")
        -- if the value is a table, recursively call printTable with increased indentation
        if type(v) == "table" then
            printTable(v, space + 4)
        else
            -- otherwise, simply print out the value
            print(string.rep(" ", space + 4) .. v)
        end
    end
end

-- Create a table containing some key-value pairs
local myTable = {
    name = "John",
    age = 25,
    hobbies = {
        "reading",
        "coding",
        "hiking"
    }
}

-- Call the add function and print out the result
print("Sum of 1 and 2 is " .. add(1, 2))

-- Call the printTable function with the myTable and 0 (no indentation)
printTable(myTable, 0)

-- Output:
--[[
Sum of 1 and 2 is 3
name = John
age = 25
hobbies = 
    reading
    coding
    hiking
]]
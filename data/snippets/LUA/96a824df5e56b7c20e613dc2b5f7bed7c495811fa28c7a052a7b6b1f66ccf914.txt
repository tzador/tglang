-- A function that calculates the factorial of a given number
function factorial(num)
    if num == 0 then -- If the number is 0, return 1 as the factorial
        return 1
    else
        return num * factorial(num-1) -- Recursive call to calculate the factorial
    end
end

-- A function that calculates the nth Fibonacci number
function fibonacci(n)
    if n == 0 then -- If n is 0, return 0 as the first number in the sequence
        return 0
    elseif n == 1 then -- If n is 1, return 1 as the second number in the sequence
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2) -- Recursive call to calculate the next number in the sequence
    end
end

-- Function to sort a table in ascending order
function sortAscending(table)
    for i = 1, #table do -- Loop through the table using ipairs to preserve order
        for j = i+1, #table do -- Loop through the remaining elements in the table
            if table[i] > table[j] then -- If the current element is greater than the next element
                -- Swap the elements
                local temp = table[i]
                table[i] = table[j]
                table[j] = temp
            end
        end
    end
end

-- Function to print a table in a formatted manner
function printTable(table)
    for i = 1, #table do
        io.write(table[i]) -- Print the current element
        io.write(" ") -- Add a space between elements
    end
    io.write("\n") -- Print a new line after all elements have been printed
end

-- Generate a random number between 1 and 100
local randomNumber = math.random(1, 100)

-- Print the factorial of the random number
io.write("The factorial of ", randomNumber, " is ", factorial(randomNumber), "\n")

-- Print the first 10 Fibonacci numbers
for i = 0, 9 do
    io.write(fibonacci(i), " ")
end

io.write("\n")

-- Create a table of 10 random numbers
local numbers = {}

for i = 1, 10 do
    table.insert(numbers, math.random(1, 100))
end

-- Print the unsorted table
io.write("Unsorted table: ")
printTable(numbers)

-- Sort the table in ascending order
sortAscending(numbers)

-- Print the sorted table
io.write("Sorted table: ")
printTable(numbers)
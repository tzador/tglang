--- This is a comment in Lua language
local function binarySearch(array, target) -- Defines a function named binarySearch with parameters 'array' and 'target'
    local first = 1 -- Initializes a variable named first to value 1
    local last = #array -- Initializes a variable named last to the length of the array (passed as parameter)
    local mid = math.floor((first + last) / 2) -- Calculates the middle index of the array

    while first <= last do -- While loop to iterate over the array
        if target == array[mid] then -- Checks if target equals the value at the middle index
            return mid -- Returns the index of the target
        elseif target < array[mid] then -- Checks if target is less than value at the middle index
            last = mid - 1 -- Updates the last index to be the current middle index -1
        else -- If target is greater than value at the middle index
            first = mid + 1 -- Updates the first index to be the current middle index +1
        end

        mid = math.floor((first + last) / 2) -- Calculates the new middle index
    end

    return nil -- If target is not found, return nil
end

local array = {2, 4, 6, 8, 10} -- Example array
local target = 6 -- Example target to search for
local index = binarySearch(array, target) -- Calls the binarySearch function and stores the returned index
print("Target found at index: " .. index) -- Prints the result
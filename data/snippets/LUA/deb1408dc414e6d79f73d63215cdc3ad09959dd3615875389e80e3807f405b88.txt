-- This sorting algorithm uses the quicksort method to sort a table of numbers in ascending order
-- Input: table of numbers
-- Output: sorted table of numbers
-- Helper function that partitions the table based on a pivot value
-- Input: table, starting index, ending index, pivot index
-- Output: new pivot index
local function partition(table, start, finish, pivot)
    -- swap pivot with last element
    local temp = table[finish]
    table[finish] = table[pivot]
    table[pivot] = temp
    -- initialize index to keep track of smaller elements
    local index = start - 1
    -- loop through table from start to finish
    for i = start, finish do
        -- if current element is smaller than pivot, increment index and swap current element with element at index
        if table[i] < table[finish] then
            index = index + 1
            local temp = table[index]
            table[index] = table[i]
            table[i] = temp
        end
    end
    -- swap pivot with element at index + 1 to place it in correct position
    local temp = table[index + 1]
    table[index + 1] = table[finish]
    table[finish] = temp
    -- return new pivot index
    return index + 1
end

-- Function that implements the quicksort algorithm
-- Input: table of numbers, starting index, ending index
-- Output: none
local function quicksort(table, start, finish)
    -- if starting index is less than ending index
    if start < finish then
        -- choose pivot as middle element
        local pivot = math.floor((start + finish) / 2)
        -- partition table based on pivot
        local new_pivot = partition(table, start, finish, pivot)
        -- recursively quicksort elements before and after new pivot index
        quicksort(table, start, new_pivot - 1)
        quicksort(table, new_pivot + 1, finish)
    end
end

-- Main code block
-- create a random unsorted table of 10 numbers
local unsorted_table = {1, 5, 7, 10, 2, 9, 3, 6, 8, 4}

-- print unsorted table
print("Unsorted table:")
for i = 1, #unsorted_table do
    print(unsorted_table[i])
end

-- call quicksort function on unsorted table
quicksort(unsorted_table, 1, #unsorted_table)

-- print sorted table
print("Sorted table:")
for i = 1, #unsorted_table do
    print(unsorted_table[i])
end
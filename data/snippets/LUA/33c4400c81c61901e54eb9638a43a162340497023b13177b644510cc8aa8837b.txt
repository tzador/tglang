---[[
	This function iterates through a table, checking if each element is a number
	@param table The table to be iterated
	@return true if all elements are numbers, false otherwise
]]
function checkNumbers(table)
	for key, value in pairs(table) do
		if type(value) ~= "number" then
			return false
		end
	end
	return true
end

---[[
	This function takes in a number and returns its factorial
	@param n The number for which factorial is to be calculated
	@return The factorial of the given number
]]
function factorial(n)
	if n == 0 then
		return 1
	else
		return n * factorial(n-1)
	end
end

---[[
	This function takes in a string and checks if it is a palindrome
	First, it converts the string to lowercase
	Then, it checks if the first and last characters match, moving inwards until the middle is reached
	@param str The string to be checked
	@return true if string is palindrome, false otherwise
]]
function isPalindrome(str)
	local lowerStr = string.lower(str)
	local i = 1
	local j = string.len(lowerStr)
	
	while i < j do
		local first = string.sub(lowerStr, i, i)
		local last = string.sub(lowerStr, j, j)
		
		if first ~= last then
			return false
		end
		
		i = i + 1
		j = j - 1
	end
	
	return true
end

---[[
	This function takes in a table of numbers and returns their sum
	@param table The table of numbers
	@return The sum of all numbers in the table
]]
function sum(table)
	local sum = 0
	
	for _, value in pairs(table) do
		sum = sum + value
	end
	
	return sum
end
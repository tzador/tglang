--[[
    This is a comments block in Lua
    It can span multiple lines and can contain
    any text, including code snippets
]]

-- Function to calculate the sum of two numbers
-- Takes in two parameters, a and b, and returns the sum
local function sum(a, b)
    return a + b
end

-- Table containing a list of fruits
local fruits = {"apple", "banana", "orange"}

-- Loop through the fruits table and print out each fruit
for index, fruit in ipairs(fruits) do
    print("Fruit at index " .. index .. " is: " .. fruit)
end

-- Creating a class called "Person"
local Person = {}
-- Setting attributes for the class
Person.__index = Person -- set the index attribute to itself
Person.age = 25 -- set the age attribute to 25
Person.name = "John" -- set the name attribute to "John"

-- Function to instantiate a new Person object
-- Takes in parameters for age and name, and returns a new Person object
function Person:new(age, name)
    local obj = {} -- create an empty table to store the object
    setmetatable(obj, self) -- set the metatable to the Person class
    self.__index = self -- set the index attribute to itself
    obj.age = age -- set the age attribute to the parameter value
    obj.name = name -- set the name attribute to the parameter value
    return obj -- return the newly created Person object
end

-- Create a new Person object called "person1" with age 30 and name "Jane"
local person1 = Person:new(30, "Jane")

-- Print out the age and name attributes of the person1 object
print("Person1's age: " .. person1.age)
print("Person1's name: " .. person1.name)

-- Creating a class called "Animal"
local Animal = {}
-- Setting attributes for the class
Animal.__index = Animal -- set the index attribute to itself
Animal.species = "dog" -- set the species attribute to "dog"

-- Function to instantiate a new Animal object
-- Takes in a parameter for the species, and returns a new Animal object
function Animal:new(species)
    local obj = {} -- create an empty table to store the object
    setmetatable(obj, self) -- set the metatable to the Animal class
    self.__index = self -- set the index attribute to itself
    obj.species = species -- set the species attribute to the parameter value
    return obj -- return the newly created Animal object
end

-- Create a new Animal object called "animal1" with species "cat"
local animal1 = Animal:new("cat")

-- Print out the species attribute of the animal1 object
print("Animal1's species: " .. animal1.species)

-- Creating a subclass of Animal called "Cat"
local Cat = {}
Cat.__index = Cat -- set the index attribute to itself
setmetatable(Cat, Animal) -- set the metatable to the Animal class (the parent class)
Cat.sound = "meow" -- set the sound attribute to "meow"

-- Function to instantiate a new Cat object
-- Takes in parameters for the species and the sound, and returns a new Cat object
function Cat:new(species, sound)
    local obj = Animal:new(species) -- create an Animal object using the parameters
    setmetatable(obj, self) -- set the metatable to the Cat class
    self.__index = self -- set the index attribute to itself
    obj.sound = sound -- set the sound attribute to the parameter value
    return obj -- return the newly created Cat object
end

-- Create a new Cat object called "cat1" with species "Persian" and make the sound "meow"
local cat1 = Cat:new("Persian", "meow")

-- Print out the species and sound attributes of the cat1 object
print("Cat1's species: " .. cat1.species)
print("Cat1's sound: " .. cat1.sound)
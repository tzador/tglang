-- This code snippets outputs a list of prime numbers using the Sieve of Eratosthenes algorithm

-- Function to generate the list of prime numbers
function generatePrimeNumbers(limit)
    local primes = {} -- Empty table to store the prime numbers
    local numbers = {} -- Table to store all numbers from 2 to limit

    -- Initialize all numbers from 2 to limit in the numbers table
    for i = 2, limit do
        numbers[i] = true
    end

    -- Loop through the numbers table and mark non-prime numbers as false
    for i = 2, limit do
        if numbers[i] == true then
            for j = i * i, limit, i do
                numbers[j] = false
            end
            table.insert(primes, i) -- Insert the prime number into the primes table
        end
    end

    return primes -- Return the list of prime numbers
end

-- Main function to take user input and print the list of prime numbers
function main()
    print("Enter a limit to generate list of prime numbers:")
    local limit = io.read("*number") -- Take input from user and convert it to a number
    local primeNumbers = generatePrimeNumbers(limit) -- Call the generatePrimeNumbers function
    print("Prime numbers from 2 to " .. limit .. ":")
    for i = 1, #primeNumbers do
        print(primeNumbers[i])
    end
end

main() -- Call the main function to start the program

-- Output:
-- Enter a limit to generate list of prime numbers:
-- 20
-- Prime numbers from 2 to 20:
-- 2
-- 3
-- 5
-- 7
-- 11
-- 13
-- 17
-- 19
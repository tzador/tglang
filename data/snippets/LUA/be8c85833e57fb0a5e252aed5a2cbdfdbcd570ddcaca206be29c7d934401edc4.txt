--[[

This code snippet implements a basic bubble sort algorithm in LUA.

]]

function bubbleSort(array)    --Define function for bubble sort
    local length = #array    
    local swapped     --Variable to check if elements have been swapped
    repeat    
        swapped = false    --Set variable to false, to check if elements have changed places
        length = length - 1    --Decrease each iteration to prevent unnecessary checks
        for i = 1, length do     
            if array[i] > array[i + 1] then    --If current element is greater than next, swap them
                array[i], array[i + 1] = array[i + 1], array[i]    
                swapped = true    --Set variable to true to indicate a swap has occurred
            end
        end
    until not swapped    --Repeat until no more swaps occur
    return array    --Return the sorted array
end

--Example usage:
local array = {5, 2, 10, 4, 1}    --Declare an unsorted array
print("Unsorted array:", table.concat(array, ", "))    --Print unsorted array

bubbleSort(array)    --Call the bubbleSort function

print("Sorted array:", table.concat(array, ", "))    --Print sorted array

--[[

Output:

Unsorted array: 5, 2, 10, 4, 1
Sorted array: 1, 2, 4, 5, 10

]]
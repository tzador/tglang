#NGINX configuration file

#sets the number of worker processes
worker_processes 4;

#enables the use of threads
thread_pool enabled;

#sets the maximum number of connections for each process
worker_connections 1024;

#sets the user and group for the worker processes
user nginx;
group nginx;

#configures the error log file and its level
#error_log /var/log/nginx/error.log notice;

#loads dynamic modules
load_module modules/ngx_http_geoip_module.so;

#defines a simple HTTP server
server {
  listen 80;

  #defines the server name
  server_name example.com;

  #sets the root directory for requests
  root /var/www/html/;

  #enables gzip compression for responses
  gzip on;
  gzip_comp_level 6;
  gzip_types text/plain text/css application/json;
  gzip_proxied any;

  #defines a location for serving static files
  location /static {
    #sets the directory for the static files
    root /var/www/static/;
    #sets the cache expiry time
    expires 30d;
  }

  #defines a location for serving dynamic requests
  location /api {
    #sets the upstream server for the API
    proxy_pass http://127.0.0.1:8000;
  }

  #defines a location for serving PHP files
  location ~ \.php$ {
    #sets the FastCGI server for processing PHP files
    fastcgi_pass unix:/var/run/php-fpm.sock;
    #sets the root directory for PHP files
    root /var/www/html/;
    #sets the parameters for FastCGI
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  #defines a location for handling errors
  location /errors {
    #sends request to error handling application
    error_page 404 /404.html;
    #sets the error log level
    log_not_found off;
    proxy_intercept_errors on;
  }

  #defines a location for serving media files
  location /media {
    #limits the transfer rate for media files
    limit_rate_after 3m;
    limit_rate 100k;
  }

  #sets the maximum allow size for file uploads
  client_max_body_size 5M;

  #enables rate limiting for requests
  limit_req_zone $binary_remote_addr zone=rate_limiting:10m rate=2r/s;

  #sets server-wide secure SSL settings
  server {
    ssl_certificate /etc/ssl/cert.pem;
    ssl_certificate_key /etc/ssl/private/key.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    ssl_verify_client on;
    ssl_client_certificate /etc/ssl/cert.pem;
    ssl_verify_depth 1;
  }
}
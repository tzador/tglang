server {
    listen 80;
    server_name example.com www.example.com;

    #redirect all http requests to https
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com www.example.com;

    #ssl configuration
    ssl_certificate ssl/example.com.crt;
    ssl_certificate_key ssl/example.com.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    ssl_stapling on;
    ssl_stapling_verify on;

    #add proxy headers for reverse proxy in front of nginx
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #location block for root directory
    location / {
        #reverse proxy to internal server running on port 8080
        proxy_pass http://localhost:8080;
        #custom 404 error page
        error_page 404 /404.html;
        location = /404.html {
            internal;
            root /usr/share/nginx/html;
        }
    }

    #location block for static assets
    location /static {
        #specify root directory for static files
        root /home/example/static;
        #define cache settings for static files
        expires 1y;
        add_header Cache-Control ""public;
    }

    #location block for media files
    location /media {
        #specify root directory for media files
        root /home/example/media;
        #allow file uploads up to 100MB
        client_max_body_size 100m;
    }

    #location block for error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
        root /usr/share/nginx/html;
    }
}
# Redirect all traffic from HTTP to HTTPS
server {
    listen 80;
    server_name example.com www.example.com;
    return 301 https://$server_name$request_uri;
}

# Set up HTTPS server
server {
    # Listen on port 443 (HTTPS)
    listen 443 ssl;
    server_name example.com www.example.com;

    # Specify SSL settings
    ssl_certificate /path/to/certificate.crt;
    ssl_certificate_key /path/to/private-key.key;

    # Configure HTTPS redirects
    if ($host = www.example.com) {
        return 301 https://example.com$request_uri;
    }

    # Specify additional settings (such as caching)
    # ...

    # Configure location block for handling requests
    location / {
        # Set up reverse proxy for backend server
        proxy_pass http://backend-server:8080;

        # Specify proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    # Configure error pages
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Enable browser caching of static assets
    location /static/ {
        expires 1y;
        add_header Cache-Control "public";
    }

    # Specify gzip settings
    gzip on;
    gzip_types text/plain text/css application/json;
    gzip_min_length 1000;
}
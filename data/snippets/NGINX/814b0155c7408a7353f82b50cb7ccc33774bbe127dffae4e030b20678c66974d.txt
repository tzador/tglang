# This section defines the server block for HTTP requests
server {
    # Listen directive specifies the IP address and port number for incoming connections
    listen 80;
    # Server name directive specifies the server domain name or IP address
    server_name example.com;
    # Root directive specifies the root directory for requests
    root /var/www/example;

    # Location block for handling requests to the "/about" path
    location /about {
        # Alias directive specifies the actual file system path for the request 
        alias /var/www/example/about.html;
        # Allow any requests with HTTP method "GET"
        allow GET;
        # Deny any other types of requests
        deny all;
    }

    # Location block for handling requests to the "/blog" path
    location /blog {
        # Root directive specifies the root directory for requests
        root /var/www/example;
        # Include common configuration for handling PHP scripts
        include php.conf;
        # Allow any requests with HTTP methods "GET" or "POST"
        allow GET;
        allow POST;
        # Deny any requests with HTTP method "DELETE"
        deny DELETE;
    }
}

# This section defines the server block for HTTPS requests
server {
    # Listen directive specifies the IP address and port number for incoming connections
    listen 443 ssl;
    # Server name directive specifies the server domain name or IP address
    server_name example.com;
    # Root directive specifies the root directory for requests
    root /var/www/example;

    # SSL certificate and key for HTTPS connection
    ssl_certificate /etc/ssl/certs/example.crt;
    ssl_certificate_key /etc/ssl/private/example.key;

    # Location block for handling requests to the "/" path
    location / {
        # Try files directive checks if a file exists for the request and serves it if found
        try_files $uri $uri/ /index.php;
    }

    # Location block for handling requests to the "/admin" path
    location /admin {
        # Reverse proxy configuration to pass requests to an upstream server
        proxy_pass http://127.0.0.1:8080/;
        # Pass along the Host header received from the client
        proxy_set_header Host $host;
        # Set the request's X-Forwarded-For header with the client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Specify that the connection should be kept alive by the upstream server
        proxy_http_version 1.1;
        # Enable connection reuse
        proxy_set_header Connection "";
    }
}

# This section includes common configuration for all server blocks
include common.conf;
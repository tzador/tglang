# The following is a complex code snippet in NGINX.
# It sets up a reverse proxy with caching and SSL.

# Specify the NGINX server block.
server {
    # Listen on port 80 for all requests.
    listen 80;
    # Set up server_name to the domain name of the website.
    server_name example.com;
    
    # Set up root directory for website files.
    root /var/www/example.com;
    
    # Add caching options to improve website performance.
    location / {
        # Enable caching with a 30 second expiration time.
        proxy_cache_valid 200 302 30s;
        # Set caching key to include the scheme, host, and URL.
        proxy_cache_key "$scheme$request_method$host$request_uri";
    }
    
    # Specify the location for static files.
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        # Enable caching with a 7 day expiration time.
        proxy_cache_valid 200 302 7d;
        # Set caching key to include the scheme, host, and URL.
        proxy_cache_key "$scheme$request_method$host$request_uri";
    }
    
    # Configure NGINX to serve as a reverse proxy.
    location / {
        # Pass the request to the upstream server.
        proxy_pass http://localhost:8000;
        # Enable buffering to improve performance.
        proxy_buffering on;
        # Allow the proxy to cache responses from the upstream server.
        proxy_cache example_cache;
        # Set caching key to include the scheme, host, and URL.
        proxy_cache_key "$scheme$request_method$host$request_uri";
        # Set the cache zone size to 100Mb.
        proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=example_cache:100m inactive=60m;
        # Set the proxy cache max size to 10Mb.
        proxy_cache_max_size 10m;
        # Set the cache zone inactive time to 10 minutes.
        proxy_cache_inactive 10m;
    }
    
    # Configure SSL for secure connections.
    listen 443 ssl;
    # Specify the SSL certificate and key locations.
    ssl_certificate /etc/nginx/ssl/example.crt;
    ssl_certificate_key /etc/nginx/ssl/example.key;
    # Set the SSL protocols and ciphers for security.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
}
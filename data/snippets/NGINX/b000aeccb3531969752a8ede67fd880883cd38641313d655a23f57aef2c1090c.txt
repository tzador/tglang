server {
  # listen on port 80 with IPv4
  listen 80;

  # server name
  server_name example.com;

  # redirect all requests to HTTPS
  return 301 https://$server_name$request_uri;
}

server {
  # listen on port 443 with IPv4
  listen 443 ssl;

  # server name
  server_name example.com;

  # SSL certificate and key
  ssl_certificate /etc/nginx/ssl/example.com.crt;
  ssl_certificate_key /etc/nginx/ssl/example.com.key;

  # enable HTTP/2
  http2_push_preload on;

  # enable OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  # enable strict transport security
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

  # enable content security policy for added security
  add_header Content-Security-Policy "default-src 'self' https://example.com; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com; style-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com; img-src 'self'; font-src 'self' https://maxcdn.bootstrapcdn.com; object-src 'none'";

  # enable public key pinning for added security
  add_header Public-Key-Pins 'pin-sha256="KLZhs4nN6NPwpV92WpAP6erCPI5NIuAHow/uL361tiI="; pin-sha256="ceIwnxMoiSKypW8OYHbrrd0Nc5DHB4vtf4McmC8AzLg="; max-age=15768000; includeSubDomains';

  # set root directory for website files
  root /var/www/example.com;

  # default document
  index index.html;

  # enable gzip compression
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  location / {
    try_files $uri $uri/ =404;
  }

  # enable caching for static files to improve performance
  location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg)$ {
    expires 1M;
    access_log off;
    add_header Cache-Control "public";
  }

  # enable caching for media files to improve performance
  location ~* \.(mp4|mp3|mov)$ {
    expires 3d;
    add_header Cache-Control "public";
  }

  # redirect HTTP requests to HTTPS
  if ($scheme != "https") {
    return 301 https://$host$request_uri;
  }

  # server error pages
  error_page 404 /404.html;
  error_page 403 /403.html;
  error_page 500 /500.html;
  error_page 502 /502.html;
  error_page 503 /503.html;

  # customize error pages
  location = /404.html {
    root /var/www/example.com/error_pages/;
  }
  location = /403.html {
    root /var/www/example.com/error_pages/;
  }
  location = /500.html {
    root /var/www/example.com/error_pages/;
  }
  location = /502.html {
    root /var/www/example.com/error_pages/;
  }
  location = /503.html {
    root /var/www/example.com/error_pages/;
  }
}
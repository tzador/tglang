# This is a sample NGINX configuration file
server {
    listen 80;
    server_name mywebsite.com;
    root /var/www/html;
    
    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Enable caching for static files
    location ~* \.(jpg|jpeg|gif|png|css|js|ico)$ {
        expires 30d;
    }

    # Redirect all HTTP requests to HTTPS
    server {
        listen      80;
        server_name www.mywebsite.com;
        return      301 https://$server_name$request_uri;
    }

    # Enable HTTPS
    server {
        listen      443 ssl http2;
        server_name mywebsite.com;
        ssl                 on;
        ssl_certificate     /etc/nginx/ssl/mywebsite.com.crt;
        ssl_certificate_key /etc/nginx/ssl/mywebsite.com.key;
    
        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Enable OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        # Enable HTTP/2
        http2_max_field_size 64k;
        http2_max_header_size 64k;
        http2_max_requests 2000;
        http2_temp_file_write_size 64k;
    
        # Enable TLSv1.3
        ssl_protocols TLSv1.3;

        # Enable secure ciphers
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

        # Enable session caching
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1h;

        # Enable OCSP stapling cache
        ssl_stapling_fake_cache on;
        ssl_stapling_file /etc/nginx/ssl/mywebsite.com.ocsp;
    
        # Set up reverse proxy
        location / {
            # Reverse proxy to backend server
            proxy_pass http://127.0.0.1:3000/;
        
            # Enable proxy buffering
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;

            # Enable proxy cache
            proxy_cache_path /tmp/nginx levels=1:2 keys_zone=mywebsite_cache:10m inactive=60m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
        
            # Enable proxy caching with different response codes
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_ignore_headers Cache-Control X-Accel-Expires Expires;
            proxy_hide_header "Set-Cookie";
        
            # Enable response compression
            gzip on;
            gzip_types text/plain text/css application/json;
        }
    
        # Enable server-side caching
        location /static/ {
            # Set cache expiration to 1 year
            expires 1y;
        
            # Specify cache key
            add_header Cache-Control "public";
        }

        # Enable client-side caching
        location ~* \.(jpg|jpeg|gif|png|css|js|ico)$ {
            # Enable caching for 30 days
            expires 30d;
        
            # Set cache control header
            add_header Cache-Control "public";
        }
    }
}
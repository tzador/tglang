# Configuration file for NGINX
# Server block for default server with redirect
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Redirect all requests to HTTPS
    return 301 https://$host$request_uri;
}

# Server block for HTTPS server
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name example.com;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # Enable SSL
    ssl on;

    # Include SSL settings from custom file
    include ssl-settings.conf;

    # Enable strict transport security
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Location block for handling requests
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}

# Server block for reverse proxy
server {
    listen 8080;
    server_name api.example.com;

    # Proxy requests to specified upstream server
    location / {
        proxy_pass http://backend_servers;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Configure caching options
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache_zone:10m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_convert_head off;
    proxy_cache_bypass $http_pragma;
    proxy_cache_bypass $http_authorization;

    # Enable caching based on response code
    proxy_cache_bypass $http_cache_control;
    proxy_cache_valid any 15m;
    proxy_cache_min_uses 3;
    proxy_cache_background_update on;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_503 http_404;

    # Enable response caching for specific file types
    location ~* \.(html|css|js|gif|jpe?g|png)$ {
        proxy_cache_valid 200 304 12h;
        expires 12h;
        proxy_cache_revalidate on;
        proxy_cache_lock on;
        proxy_cache_key "$host$request_uri$scheme";
    }
}
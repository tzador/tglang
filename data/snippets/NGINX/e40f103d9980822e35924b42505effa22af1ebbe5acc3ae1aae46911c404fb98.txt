server {
    # listen on port 80
    listen 80;
    
    # server name
    server_name example.com;
    
    # redirect all traffic to secure HTTPS connection
    return 301 https://$host$request_uri;
}

server {
    # listen on port 443
    listen 443 ssl;

    # server name
    server_name example.com;
    
    # SSL certificate and key path
    ssl_certificate /etc/nginx/cert.crt;
    ssl_certificate_key /etc/nginx/cert.key;
    
    # use recommended security settings
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # enable HTTP/2 for improved performance
    http2_push_preload on;

    location / {
        # set the root directory for the website
        root /var/www/example.com;
        
        # specify index file
        index index.html;
        
        # enable caching of static files
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }
    
    location /api {
        # reverse proxy for backend API
        proxy_pass http://127.0.0.1:8000;
        
        # set additional proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable proxy buffering for improved performance
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    location /admin {
        # restrict access to admins only
        allow 192.168.1.1;
        deny all;
    }
    
    # customize error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/example.com;
    }
}
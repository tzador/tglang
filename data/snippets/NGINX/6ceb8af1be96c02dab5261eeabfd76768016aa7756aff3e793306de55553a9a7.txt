# Setting up location block for 'user' route
location /user {
  # Using regex to capture variables in the URL
  # Passing captured variable to backend as a query parameter
  # Setting a default value for the query parameter if not specified in the URL
  set $user_id $1;
  # Defining CORS headers to allow cross-origin requests
  # Allowing GET and POST methods from all origins
  # Allowing specific headers and exposing others in response
  more_set_headers 'Access-Control-Allow-Origin: *';
  more_set_headers 'Access-Control-Allow-Methods: GET, POST';
  more_set_headers 'Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept';
  more_set_headers 'Access-Control-Expose-Headers: Location, Content-Length, ETag';
  # Passing the request to the backend server using the 'proxy_pass' directive
  # Specifying the URL of the backend server and appending the query parameter
  # Allowing the backend server to handle complex requests, such as POST with JSON body
  proxy_pass http://backend_server.com/user?id=$user_id&;
  # Defining timeout settings for the connection and response from the backend server
  proxy_connect_timeout 5s;
  proxy_read_timeout 20s;
  # Enabling request buffering and setting buffer size
  proxy_buffering on;
  proxy_buffer_size 8k;
  # Enabling gzip compression for the response
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml;
}
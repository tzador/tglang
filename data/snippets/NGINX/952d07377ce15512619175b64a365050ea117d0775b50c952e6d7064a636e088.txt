server {

  # listen on port 80
  listen 80;

  # define server name
  server_name example.com;

  # specify the root directory
  root /var/www/example.com;

  # set index.html as default index file
  index index.html;

  # enable gzip compression
  gzip on;

  # set gzip compression level
  gzip_comp_level 6;

  # specify file types to be compressed
  gzip_types text/plain text/css application/json;

  location / {
    # enable caching
    expires max;

    # set cache control header
    add_header Cache-Control "public";

    # try files in the specified order
    try_files $uri $uri/ /index.html;
  }

  # specify location for static files
  location ~* \.(jpg|jpeg|gif|png|svg|css|js|woff|woff2|ttf|eot|ico)$ {
    # set caching duration in seconds
    expires 86400;

    # set cache control header
    add_header Cache-Control "public";
  }

  # redirect all requests to HTTPS
  location / {
    return 301 https://$server_name$request_uri;
  }

  # handle HTTPS requests
  location / {
    # enable TLS/SSL
    listen 443 ssl;

    # specify SSL certificate and key
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # set TLS protocol versions
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # set cipher suites to use
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # enable HSTS header
    add_header Strict-Transport-Security "max-age=63072000" always;
  }

  # handle server errors
  error_page 404 /404.html;
  error_page 500 /500.html;
  
  # specify server error pages
  location = /404.html {
    # set root directory for error page
    root /var/www/error_pages;
  }
  location = /500.html {
    # set root directory for error page
    root /var/www/error_pages;
  }

  # enable server-side includes
  ssi on;
}
server {
  listen 80 default_server;
  listen [::]:80 default_server ipv6only=on;

  # server_name can be a list of names separated by spaces or commas
  server_name example.com www.example.com;

  location / {
      # Simple requests
      try_files $uri $uri/ /index.html;

      # For preflighted requests
      if ($request_method = OPTIONS) {
          add_header "Access-Control-Allow-Origin" "*";
          add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS";
          add_header "Access-Control-Allow-Headers" "Origin, Authorization, Accept, Content-Type";
          return 200;
      }

      # Request body filtering and buffering
      client_body_buffer_size 1K;
      client_body_in_file_only on;
      client_body_temp_path /var/nginx/client_temp;

      # Gzip settings
      gzip on;
      gzip_types text/plain text/css application/json application/javascript text/xml;
      gzip_min_length 1000;
      gzip_proxied expired no-cache no-store private auth;
      gzip_comp_level 6;

      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log;
  }

  error_page 404 /404.html;
      location /404.html {
      internal;
  }

  error_page 404 /404.html;
      location = /404.html {
      internal;
  }

  # Url rewriting
  rewrite ^/xyz$ /app1/index.php last;
  rewrite ^/abc$ /app2/index.php last;

  # File caching
  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;
  client_body_max_temp_size 256M;
}
server {
    # Listen on port 80
    listen 80;

    # Define domain name
    server_name mywebsite.com;

    # Set root directory
    root /var/www/mywebsite;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Enable HTTP/2 protocol
    http2 on;

    # Enable caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1d;
    }

    # Handle error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/error;
    }

    # Handle PHP requests
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Redirect to HTTPS
    server {
        listen 443 ssl http2;
        server_name mywebsite.com www.mywebsite.com;

        # SSL certificate
        ssl_certificate /etc/nginx/ssl/mywebsite.crt;
        ssl_certificate_key /etc/nginx/ssl/mywebsite.key;

        # Enable HTTP Strict Transport Security (HSTS)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Enable OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # Enable OCSP stapling response cache
        ssl_trusted_certificate /etc/nginx/ssl/mywebsite.crt;
        resolver 8.8.8.8 8.8.4.4;

        # Enable server-side caching
        location / {
            proxy_cache mywebsite_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid any 1d;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_revalidate on;
        }
    }
}
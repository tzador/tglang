server {
 	server_name example.com; //Sets the domain name for the server
 	
 	location / { //Defines a location for the server
		proxy_pass http://backend_server; //Passes requests to the designated backend server
		proxy_set_header Host $host; //Sets the Host header for the request
		proxy_set_header X-Real-IP $remote_addr; //Sets the X-Real-IP header for the request
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; //Sets the X-Forwarded-For header for the request
 	
 		gzip on; //Enables gzip compression for the responses
		gzip_types text/plain text/css application/json; //Specifies which content types should be compressed
	}
 	
	location /images/ { //Defines a location for static images
		root /var/www/example.com; //Sets the root directory for the images
		expires 1d; //Sets the caching time for the images to 1 day
	}
 	
	location ~* \.(jpg|jpeg|png|gif|ico)$ { //Regex location for image requests
		root /var/www/example.com; //Sets the root directory for the images
 		expires 1d; //Sets the caching time for the images to 1 day
		add_header Cache-Control "public"; //Adds a cache control header to the response
	}
 	
	location ~* \.(js|css)$ { //Regex location for javascript and css requests
		root /var/www/example.com; //Sets the root directory for the files
		expires max; //Sets the caching time for the files to the maximum
		add_header Cache-Control "public"; //Adds a cache control header to the response
	}
 	
	error_page 404 /404.html; //Defines the error page for 404 errors
	location = /404.html { //Defines the location for the error page
 		internal; //Sets the page to be an internal redirect and not visible for the client
	}
 	
 	listen 80; //Listens for requests on port 80
}
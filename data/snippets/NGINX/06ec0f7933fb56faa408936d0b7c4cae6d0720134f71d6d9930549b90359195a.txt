worker_processes auto;  // This directive is used to specify the number of worker processes that should be created for handling requests. "auto" value indicates that the number will be chosen automatically based on the number of CPU cores available.
pid /run/nginx.pid;  // This directive specifies the file where the PID of the main process should be written. This file is used to control the main process using signals.
error_log /var/log/nginx/error.log error;  // This directive specifies the location of the error log file and the minimum level of errors that should be logged.
events {  // This block specifies the event handling mechanism for NGINX.
    worker_connections 1024;  // This directive specifies the maximum number of connections that can be handled simultaneously by each worker process.
}
http {  // This block specifies the HTTP server configuration.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '  // This directive specifies the format of the access log file.
                    '$status $body_bytes_sent "$http_referer" '  // This line adds additional fields to the access log.
                    '"$http_user_agent" "$http_x_forwarded_for"';  
                    // This line adds the user agent and X-forwarded-for headers to the access log.
    access_log /var/log/nginx/access.log main;  // This directive specifies the location of the access log file and the format specified in the previous line.
    sendfile on;  // This directive enables the use of sendfile() syscall to transfer files between the client and the server, improving performance.
    tcp_nopush on;  // This directive enables the use of the TCP_NOPUSH option by NGINX, which attempts to send the entire response in one packet.
    keepalive_timeout 65;  // This directive specifies the number of seconds between keepalive probes for an active connection.
    server {  // This block specifies the server configuration.
        listen 80 default_server;  // This directive specifies the IP and port on which the server will listen for connections.
        server_name _;  // This directive specifies the default server, meaning that any requests that do not match other server blocks will be handled by this block.
        location / {  // This block specifies the configuration for the "/" location, which represents the root of the server.
            root /usr/share/nginx/html;  // This directive specifies the root directory for the server.
            index index.html;  // This directive specifies the default file that will be served if no file name is specified in the request.
        }
        error_page 404 /404.html;  // This directive specifies the error page to be displayed when a 404 error occurs.
        location = /404.html {  // This block specifies the configuration for the "/404.html" location.
            root /usr/share/nginx/html;
            internal;  // This directive specifies that the location is accessible only from within NGINX and cannot be requested directly.
        }
        error_page 500 502 503 504 /50x.html;  // This directive specifies the error page to be displayed when a 500, 502, 503, or 504 error occurs.
        location = /50x.html {  // This block specifies the configuration for the "/50x.html" location.
            root /usr/share/nginx/html;
            internal;
        }
    }
}
#This is a sample code snippet written in NGINX as a server configuration file
#It includes various directives and settings to demonstrate the complexity of the language

server {
    listen 80; #Listens for incoming connections on port 80
    server_name www.example.com; #Specifies the server name
    
    #Sets the number of worker processes to be used by the server
    #The value is dynamically determined based on the number of CPU cores unless explicitly set
    worker_processes auto;
    
    #Defines the maximum number of simultaneous connections that can be handled by the server
    #If this value is reached, new connections will be dropped or delayed
    events {
        worker_connections 1024;
    }
    
    #Specifies the location of the server's access log file
    #Access logs record information about client requests and server responses
    access_log /var/log/nginx/access.log;
    
    #Specifies the location of the server's error log file
    #Error logs record information about server errors and warnings
    error_log /var/log/nginx/error.log;
    
    #Sets the root directory for the server to serve files from
    root /var/www/html;
    
    #Defines the default page to be served when no specific file is requested
    index index.html;
    
    #Location block to handle requests for HTML files
    location / {
        #Enables directory indexing to display a list of files when no specific file is requested
        autoindex on;
        
        #Sets the MIME type for files with the .html extension
        #This allows the server to properly process and display HTML files
        types {
            text/html html;
        }
    }
    
    #Location block to handle requests for images
    location ~* /images/ {
        #Sets the cache expiry time for image files to 1 week
        expires 1w;
        
        #Enables gzip compression for images to reduce file size and improve loading speed
        gzip on;
        
        #Sets the MIME type for image files
        types {
            image/jpeg jpeg;
            image/png png;
        }
        
        #Sets a cache control header to determine how long the browser should cache the images
        add_header Cache-Control "public,max-age=604800";
    }
    
    #Location block to handle requests for php files
    location ~ .php$ {
        #Passes the request to the php-fpm process for execution
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        
        #Enables FastCGI caching to improve performance by storing responses in memory
        fastcgi_cache on;
        
        #Sets the caching time to 1 minute
        fastcgi_cache_valid 1m;
    }
}
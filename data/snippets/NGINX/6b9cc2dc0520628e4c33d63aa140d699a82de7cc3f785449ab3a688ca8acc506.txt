# SSL configuration
server {
    listen 443 ssl http2;
    server_name www.example.com;
    ssl_certificate localhost.crt;
    ssl_certificate_key localhost.key;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    # root directory of website
    root /var/www/html;

    # index file
    index index.html;

    # enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # enable browser cache for static files
    location ~* \.(jpg|jpeg|gif|png|svg|css|js|ico)$ {
        expires 30d;
        add_header Pragma "public";
        add_header Cache-Control "public";
    }

    # redirect HTTP to HTTPS
    server {
        listen 80;
        server_name www.example.com;
        return 301 https://$server_name$request_uri;                 
    }

    #URI requests
    location / {
        # rewrite everything to index.html
        try_files $uri $uri/ /index.html;
    }

    # API requests 
    location /api/ {
        # pass requests to node.js server
        proxy_pass http://localhost:3000;
    }
}
server {
    listen 80;
    server_name example.com;

    # Sets the root directory for requests to this server
    root /var/www/example.com;

    location / {
        # Sets the location of the index.html file
        index index.html;

        # Enables directory index for requests to this location
        autoindex on;
    }

    # Handles requests to the /api endpoint
    location /api {
        # Proxy pass the requests to the defined upstream server
        proxy_pass http://api.example.com;

        # Sets the proxy header to the original client's IP address
        proxy_set_header X-Real-IP $remote_addr;

        # Enables SSL termination to the upstream server
        proxy_ssl_server_name on;

        # Disables buffering of responses from the upstream server
        proxy_buffering off;
    }

    # Handles requests to the /images endpoint
    location /images {
        # Sets the root directory for requests to this location
        root /var/www/example.com/images;

        # Enables directory index for requests to this location
        autoindex on;

        # Sets a maximum file size for requests to this location
        client_max_body_size 10m;

        # Enables caching of responses from this location
        proxy_cache on;

        # Sets the caching time to live for responses from this location
        proxy_cache_valid 200 302 24h;

        # Sets a maximum file size for responses to be cached
        proxy_cache_max_size 100m;

        # Enables a timeout for cached responses
        proxy_cache_revalidate 10m;

        # Sets a different cache key based on the request URI and headers
        proxy_cache_key "$scheme$request_method$host$request_uri$http_cookie";
    }

    # Handles requests to the /admin endpoint
    location /admin {
        # Restricts access to this location with a username and password
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    # Handles requests to all other locations by denying access
    location / {
        return 403;
    }

    # Enables gzip compression for all response types
    gzip on;
    gzip_types text/plain text/css application/json;
    gzip_min_length 1000;
}
# This is a sample NGINX configuration file
# Please replace all values with your actual server and domain information

# Set the user and group for nginx processes to run as
user nginx;
worker_processes auto;

# Set the maximum number of open files, this may need to be adjusted based on your server's resources
worker_rlimit_nofile 8192;

# Sets the number of worker connections, this should be at least the number of CPU cores on your server
events {
  worker_connections 1024;
}

# HTTP server block
server {

  # Listen for requests on port 80
  listen 80;

  # Set your server name (replace with your domain)
  server_name example.com;

  # Set the root directory for your website's files
  root /var/www/html;

  # Enable gzip compression to improve website performance
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # Disable access logs, uncomment if you do not want to track website visitors
  # access_log off;

  # Configuration for handling errors
  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /var/www/html;
  }

  # Configuration for serving static files
  location ~* \.(jpg|jpeg|gif|png|css|js|ico|html)$ {
    expires max;
    log_not_found off;
  }

  # Configuration for handling PHP files
  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  # Configuration for handling reverse proxy requests
  location / {
    proxy_pass http://127.0.0.1:8080;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Enable caching for static files
  location ~* \.(jpg|jpeg|gif|png|css|js|ico|html)$ {
    expires 30d;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    proxy_cache_methods GET HEAD;
    proxy_cache_bypass $http_purposely_no_cache;
    proxy_no_cache $http_purposely_no_cache;
    proxy_cache_bypass $http_pragma;
    proxy_no_cache $http_pragma;
    proxy_cache_bypass $http_must_revalidate;
    proxy_no_cache $http_must_revalidate;
    proxy_cache valid_cache;
    proxy_cache_key "$uri$request_method$host";
    proxy_cache_valid 200 30m;
    add_header X-Proxy-Cache $upstream_cache_status;
  }

}

# HTTPS server block, requires an SSL certificate
server {

  # Listen for requests on port 443
  listen 443 ssl;

  # Set your server name (replace with your domain)
  server_name example.com;

  # Set the root directory for your website's files
  root /var/www/html;

  # SSL configuration, replace with your own certificate information
  ssl_certificate /path/to/certificate.crt;
  ssl_certificate_key /path/to/certificate.key;
  ssl_protocols TLSv1.2;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-CBC-SHA;

  # Enable gzip compression to improve website performance
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # Disable access logs, uncomment if you do not want to track website visitors
  # access_log off;

  # Configuration for handling errors
  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /var/www/html;
  }

  # Configuration for serving static files
  location ~* \.(jpg|jpeg|gif|png|css|js|ico|html)$ {
    expires max;
    log_not_found off;
  }

  # Configuration for handling PHP files
  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  # Configuration for handling reverse proxy requests
  location / {
    proxy_pass https://127.0.0.1:8080;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Enable caching for static files
  location ~* \.(jpg|jpeg|gif|png|css|js|ico|html)$ {
    expires 30d;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    proxy_cache_methods GET HEAD;
    proxy_cache_bypass $http_purposely_no_cache;
    proxy_no_cache $http_purposely_no_cache;
    proxy_cache_bypass $http_pragma;
    proxy_no_cache $http_pragma;
    proxy_cache_bypass $http_must_revalidate;
    proxy_no_cache $http_must_revalidate;
    proxy_cache valid_cache;
    proxy_cache_key "$uri$request_method$host";
    proxy_cache_valid 200 30m;
    add_header X-Proxy-Cache $upstream_cache_status;
  }

}
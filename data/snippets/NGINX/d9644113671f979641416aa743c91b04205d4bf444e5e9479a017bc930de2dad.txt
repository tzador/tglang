server {
    listen 80; #this directive specifies the port number the server listens on
    server_name example.com www.example.com; #this directive specifies the domain names that the server responds to
    access_log /var/log/nginx/example.com-access.log; #this directive specifies the path and name for the access log file
    error_log /var/log/nginx/example.com-error.log warn; #this directive specifies the path and name for the error log file and the level of logging
 
    location / { #this directive defines the location where requests will be processed
        root /var/www/example.com; #this directive specifies the root directory for the server
        index index.html index.htm; #this directive specifies the files to be used as index
    }
 
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ { #this directive defines a location block that will only process requests for certain file types
        expires 365d; #this directive specifies how long the file will be cached for
        log_not_found off; #this directive specifies that files not found should not be logged
    }
 
    location ~ \.php$ { #this directive defines a location block that will only process requests for PHP files
        include snippets/fastcgi-php.conf; #this directive specifies the location of the configuration file for fastcgi
        fastcgi_pass unix:/run/php/php7.4-fpm.sock; #this directive specifies the address of the PHP backend server
    }
}

gzip on; #this directive enables gzip compression
gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss application/atom+xml; #this directive specifies the file types to be compressed
gzip_comp_level 6; #this directive sets the compression level, with 1 being the fastest and 9 being the most compressed
gzip_min_length 1000; #this directive specifies the minimum length of a response, in bytes, for it to be compressed
gzip_buffers 16 8k; #this directive specifies the number and size of buffers used for gzip compression
gzip_proxied any; #this directive specifies which proxies should enable compression for response sent to clients
gzip_vary on; #this directive specifies whether to add the 'Vary: Accept-Encoding' header to responses, indicating that the response is compressed
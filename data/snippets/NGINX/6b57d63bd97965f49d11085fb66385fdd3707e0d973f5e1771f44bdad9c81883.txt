# Nginx Configuration File

events { # This block specifies the maximum number of connections
    worker_connections 1024; 
}

http {
    # basic configuration
    server {
        listen 80; # specifies the port that Nginx will listen to
        server_name example.com; # specifies the domain name for this server block

        location / { # matches any path
            root /var/www/example.com; # specifies the root directory for this server block
            index index.html index.htm; # specifies the default index files
        }

        location /api/ { # matches any path starting with /api/
            proxy_set_header Host $host; # passes the original host header to the proxied server
            proxy_set_header X-Real-IP $remote_addr; # passes the client's IP address to the proxied server
            proxy_pass http://127.0.0.1:8000; # specifies the address and port of the proxied server
        }

        error_page 404 /404.html; # specifies the error page for 404 errors

        location = /404.html { # matches the exact path /404.html
            internal; # ensures that only internal requests can access this location
        }

        # caching configuration for static assets
        location ~* \.(jpg|jpeg|png|gif|svg|css|js|less)$ {
            expires 1M; # sets the cache expiration time in seconds
            add_header Cache-Control "public"; # specifies that this content can be cached by both the browser and intermediate caches
        }

        # load balancing configuration
        location /images/ {
            proxy_pass http://image_servers; # specifies the upstream group for load balancing
            proxy_set_header Host $host; # passes the original host header to the proxied server
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # passes the client's IP address to the proxied server
            proxy_connect_timeout 60s; # specifies the timeout for establishing connections with upstream servers
            proxy_read_timeout 60s; # specifies the timeout for receiving a response from upstream servers
        }
    }

    # virtual hosting configuration for multiple domains
    server {
        listen 80;
        server_name example.com; # specifies the domain name for this server block
        root /var/www/example.com; # specifies the root directory for this server block
        index index.html index.htm; # specifies the default index files
    }

    server {
        listen 80;
        server_name another-example.com;
        root /var/www/another-example.com;
        index index.html index.htm;
    }

    # SSL configuration
    server {
        listen 443 ssl;
        server_name secure-example.com;
        ssl_certificate /etc/ssl/cert.pem; # specifies the path to the SSL certificate file
        ssl_certificate_key /etc/ssl/key.pem; # specifies the path to the SSL certificate key file
        ssl_protocols TLSv1.2 TLSv1.3; # specifies the supported SSL protocols
        ssl_ciphers HIGH:!aNULL:!MD5; # specifies the supported SSL ciphers
        root /var/www/secure-example.com;
        index index.html index.htm;

        location / { # matches any path
            root /var/www/secure-example.com;
            index index.html index.htm;
        }
    }
}
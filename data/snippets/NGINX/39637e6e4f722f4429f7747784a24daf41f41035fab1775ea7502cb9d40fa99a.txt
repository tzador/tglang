# A complex NGINX configuration snippet with annotations

# Setting up a server block
server {

    # Listening for requests on port 80
    listen 80;

    # Setting the server name
    server_name www.example.com;

    # Adding a location block for specific URL
    location /api/ {

        # Configuring proxy to forward requests
        proxy_pass http://localhost:8000;

        # Setting proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Enabling WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Setting timeouts for proxy connections
        proxy_connect_timeout 30s;
        proxy_read_timeout 60s;

        # Enabling caching for this location block
        proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=api_cache:10m inactive=5m;
        proxy_cache_key "$scheme$request_method$host$request_uri";

        # Configuring caching rules
        proxy_cache_valid 200 5m;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;

        # Sending compressed responses to clients
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

        # Handling gzip compression for HTTP/2 requests
        gzip_vary on;
        gzip_http_version 1.1;
        gzip_comp_level 5;

        # Setting buffer sizes for gzip compression
        gzip_buffers 16 8k;
        gzip_proxied any;

        # Setting additional response headers
        add_header X-Cache-Status $upstream_cache_status;

        # Masking sensitive response headers
        proxy_hide_header X-Powered-By;
        proxy_hide_header X-AspNet-Version;
        proxy_hide_header X-Served-By;

        # Enabling access logs for this location block
        access_log /var/log/nginx/api-access.log;
    }

    # Adding a location block for other URLs
    location / {

        # Configuring root directory
        root /var/www;

        # Enabling file caching for this location block
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

        # Handling reverse proxy requests
        try_files $uri $uri/ /index.php?$query_string;

        # Handling PHP requests
        location ~ \.php$ {

            # Configuring FastCGI server
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;

            # Setting PHP scripts to run only in certain directories
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_param PATH_INFO $fastcgi_path_info;

            # Setting up caching for PHP responses
            fastcgi_cache_path /tmp/nginx/cache levels=1:2 keys_zone=php_cache:10m inactive=5m;
            fastcgi_cache_key "$scheme$request_method$host$request_uri";
            fastcgi_cache_valid 200 5m;
            fastcgi_cache_bypass $http_pragma;
            fastcgi_cache_revalidate on;

            # Enabling caching for anonymous users
            fastcgi_cache_bypass $http_authorization;
        }
    }

    # Setting up TLS/SSL configuration
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_client_certificate /etc/nginx/ssl/ca.pem;
    ssl_verify_client optional;

    # Setting up TLS/SSL protocols and ciphers
    ssl_protocols TLSv1.2;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_prefer_server_ciphers on;

    # Enabling HTTP/2 support
    http2_max_field_size 2048;
    http2_max_header_size 32768;
    http2_max_requests 16;
    http2_push_preload on;
    http2_push off;
}
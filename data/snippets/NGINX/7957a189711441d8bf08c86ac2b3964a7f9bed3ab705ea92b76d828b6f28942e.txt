# This is a comment in NGINX configuration file

# Sets the number of worker processes, usually set to the number of CPU cores available. 
# Can be set to auto to automatically select the optimal number
worker_processes auto;

# Defines the user and group under which NGINX will run.
# It is recommended to create a dedicated user and group for security purposes.
user nginx nginx;

# Provides the path for the main configuration file
include /etc/nginx/nginx.conf;

# Sets the number of connections that each worker process can handle at a given time
# This value is usually set to the number of worker processes multiplied by the number of connections allowed per process
worker_connections 1024;

# Enables keepalive connections for HTTP requests
keepalive_timeout 65;

# Configures the log format for NGINX access logs
log_format combined '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

# Specifies the path for the access log file and the defined log format
access_log /var/log/nginx/access.log combined;

# Defines the default server block for responding to HTTP requests
server {
    # Sets the IP address and port for incoming requests
    listen 80 default_server;

    # Sets the root folder for serving web content
    root /usr/share/nginx/html;

    # Sets the default index file to be served if no specific file is requested
    index index.html;

    # Enables server-side caching of files with the specified extensions
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|otf)$ {
        expires 7d;
        access_log off;
        add_header Cache-Control "public";
    }
    
    # Enables gzip compression for responses 
    gzip on;
    
    # Includes additional configuration files for handling specific types of requests
    include /etc/nginx/conf.d/*.conf;
}

# Defines a second server block for serving content for a specific domain name
server {
    # Sets the server name to be used for incoming requests
    server_name example.com;
    
    # Defines the location for serving files under the specified root folder
    location /static {
        root /home/example/static;
        index index.html;
    }
    
    # Defines the location for handling requests to the API endpoint
    location /api {
        proxy_pass http://127.0.0.1:5000;
    }
}
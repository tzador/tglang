# Global configuration
worker_processes auto; # Automatically determine the number of worker processes based on the number of CPU cores
pid /var/run/nginx.pid; # Path to the process ID file

events {
    worker_connections 1024; # Maximum number of connections per worker process
    use epoll; # Enable the use of the epoll event polling system (better performance than select)
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'; # Log format for the main HTTP request and response

    server {
        listen 80; # Listen on port 80 for HTTP requests on all interfaces
        server_name example.com; # Server name

        location / {
            root /var/www/example.com; # Root directory for serving content
            index index.html; # Default file to serve if no specific file is requested
        }

        location /images/ {
            alias /var/www/example.com/images/; # Alias for serving images
            expires 30d; # Cache images for 30 days
        }

        error_page 404 /404.html; # Custom 404 error page

        location = /500.html { # Custom 500 error page for only the specific URL
            internal; # Only serve this error page internally
        }

        location ~ \.php$ { # Regular expression matching for PHP files
            fastcgi_pass unix:/var/run/php-fpm.sock; # Path to the PHP-FPM socket
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # Path to the PHP script being executed
            include fastcgi_params; # Include other fastcgi parameters
        }
    }

    server {
        listen 443 ssl; # Listen on port 443 for HTTPS requests on all interfaces
        server_name example.com; # Server name

        ssl_certificate /etc/nginx/ssl/example.com.crt; # Path to the SSL certificate file
        ssl_certificate_key /etc/nginx/ssl/example.com.key; # Path to the SSL private key file
        ssl_protocols TLSv1.2 TLSv1.3; # Enable only TLS protocols 1.2 and 1.3 for secure connections
        ssl_ciphers HIGH:!aNULL:!MD5; # Enable only strong ciphers for secure connections

        location / {
            root /var/www/example.com; # Root directory for serving content
            index index.html; # Default file to serve if no specific file is requested
        }

        location /admin/ {
            root /var/www/example.com/admin/; # Root directory for serving administrative content
            index index.html; # Default file to serve if no specific file is requested
            auth_basic "Restricted"; # Enable basic HTTP authentication for this location
            auth_basic_user_file /etc/nginx/.htpasswd; # Path to file containing authorized users and passwords
        }
    }

    include /etc/nginx/conf.d/*.conf; # Include all configuration files in the conf.d directory
    include /etc/nginx/sites-enabled/*; # Include all enabled sites in the sites-enabled directory
}
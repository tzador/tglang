#NGINX server block configuration
server {
    listen 80;
    server_name example.com;
    return 301 https://$server_name$request_uri;
}

#NGINX HTTPS server block configuration
server {
    listen 443 ssl;
    server_name example.com;

    #SSL certificate and key configurations
    ssl_certificate /etc/ssl/certs/example.crt;
    ssl_certificate_key /etc/ssl/private/example.key;

    #SSL cipher suite configuration
    ssl_ciphers "EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;";

    #SSL protocols configuration
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    #SSL session cache
    ssl_session_cache shared:SSL:10m;

    #SSL session timeout
    ssl_session_timeout 10m;

    #Enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;

    #Ensure secure SSL headers are sent
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    #NGINX location block configuration
    location / {
        #Reverse proxy settings
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Connection "";
        proxy_http_version 1.1;

        #Enable buffering and caching
        proxy_buffering on;
        proxy_cache_bypass $http_pragma;

        #Proxy cache configurations
        proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=cache_zone:10m inactive=60m;
        proxy_cache_key "$scheme$request_method$host$request_uri";

        #Set cache directives
        proxy_cache cache_zone;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 60m;

        #Enable gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml text/html;

        #Enable brotli compression
        brotli on;
        brotli_comp_level 6;
        brotli_types text/plain text/css application/json application/javascript text/xml text/html;
    }

    #NGINX error page configurations
    error_page 404 /error.html;
    location = /error.html {
        root /var/www/html;
    }

    #NGINX redirect configurations
    if ($host != example.com) {
        rewrite ^/(.*)$ https://example.com/$1 redirect;
    }
}
events {
  worker_connections  1024;  # maximum of 1024 simultaneous connections per worker process
}

http {
  # HTTP server directives

  include       mime.types; # include the mime.types file (sets the types of files that will be served)
  default_type  text/html;  # set the default content type to HTML

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';  # format for access_log entries

  sendfile        on;  # use sendfile() system call for file transfers
  #tcp_nopush     on;  # enable optimization for sending big files
  #keepalive_timeout  0;  # disable keepalive timeout for testing
  keepalive_timeout  65;  # set the keepalive timeout to 65 seconds (default)

  # gzip compression settings
  gzip  on;             # enable gzip compression
  gzip_types text/plain text/css application/json application/javascript text/xml applicaton/xml+rss;  # specify which MIME types should be compressed
  gzip_min_length 1000;  # do not compress files smaller than 1000 bytes
  gzip_buffers 16 8k;  # allocate buffers for the gzip compression

  # Reverse proxy configuration
  server {
    listen          80;  # listen on port 80 (HTTP)
    server_name     example.com;  # server name or IP address

    location / {
        proxy_pass  http://127.0.0.1:8080;  # pass all requests to port 8080
    }
  }

  server {
    listen         443 ssl;   # listen on port 443 (HTTPS)
    server_name    secure.example.com;  # server name or IP address

    # SSL/TLS certificate and key files for HTTPS
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/private/key.pem;

    location / {
        root   /var/www/secure.example.com;  # serve files from this directory
        index  index.html;  # default index file
    }
  }
}
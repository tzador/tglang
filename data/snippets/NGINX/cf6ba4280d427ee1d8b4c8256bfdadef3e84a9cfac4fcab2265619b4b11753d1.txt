# Redirect HTTP requests to HTTPS
server {
    listen 80;
    server_name example.com;

    return 301 https://example.com$request_uri;
}

# Configure HTTPS server
server {
    listen 443 ssl http2;
    server_name example.com;
    
    # SSL certificates
    ssl_certificate /path/to/fullchain.pem;
    ssl_certificate_key /path/to/privkey.pem;

    # Enable SSL
    ssl on;

    # Set client certificate authentication
    ssl_client_certificate /path/to/ca.pem;
    ssl_verify_client on;
    
    # Set TLS protocols and ciphers
    ssl_protocols TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # Enable OCSP stapling for faster certificate revocation checks
    ssl_stapling on;
    ssl_stapling_verify on;

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000";
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json;

    # Proxy requests to backend servers
    location / {
        proxy_pass http://backend;
        proxy_redirect off;
        
        # Configure proxy headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Prevent caching of sensitive information
        proxy_set_header Expires off;
        proxy_set_header Cache-Control "no-cache, no-store, must-revalidate";
        proxy_set_header Pragma "no-cache";
    }
    
    # Serve static files from specified directory
    location /static/ {
        alias /path/to/static/files/;
    }
}
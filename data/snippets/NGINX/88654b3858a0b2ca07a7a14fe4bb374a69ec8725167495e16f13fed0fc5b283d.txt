# This is a complex code snippet in NGINX.

# Setting up server blocks:
server {
    listen 80;
    server_name www.example1.com;
    root /var/www/example1.com;

    location / {
        try_files $uri $uri/ =404;
    }

    location /images/ {
        autoindex on;
        alias /var/www/example1.com/images/;
    }

    location /admin/ {
        deny all;
        return 403;
    }

    error_page 404 /404.html;
    location = /404.html {
        internal;
        root /var/www/error_pages/;
    }
}

server {
    listen 80;
    server_name www.example2.com;
    root /var/www/example2.com;

    location / {
        try_files $uri $uri/ =404;
    }

    location /images/ {
        autoindex on;
        alias /var/www/example2.com/images/;
    }

    location /admin/ {
        deny all;
        return 403;
    }

    error_page 404 /404.html;
    location = /404.html {
        internal;
        root /var/www/error_pages/;
    }
}

# Setting up load balancing:
upstream backend {
    server 127.0.0.1:8000;
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
}

server {
    listen 80;
    server_name www.example3.com;
    root /var/www/example3.com;

    location / {
        proxy_pass http://backend;
    }
}

# Setting up caching:
proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m inactive=60m;
proxy_cache_key "$scheme$request_method$host$request_uri";

server {
    listen 80;
    server_name example.com;
    proxy_cache my_cache;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;

    location / {
        proxy_pass http://backend;
    }
}

# Setting up SSL:
server {
    listen 443 ssl;
    server_name www.example4.com;
    root /var/www/example4.com;

    ssl_certificate /path/to/certificate;
    ssl_certificate_key /path/to/private/key;
    ssl_protocols TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        try_files $uri $uri/ =404;
    }
}
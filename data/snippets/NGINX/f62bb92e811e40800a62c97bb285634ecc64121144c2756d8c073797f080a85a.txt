# Sets the user and group that the worker processes will run as.
user www-data;

# Defines the number of worker processes.
worker_processes 4;

# Sets the maximum number of connections per worker process.
worker_connections 1024;

# Defines the timeout for keep-alive connections.
keepalive_timeout 65;

# Sets the maximum size of client request bodies.
client_max_body_size 10m;

# Sets the maximum number and size of buffers used for reading and writing.
# Increase if handling large files or high volumes of traffic.
client_body_buffer_size 10k;
client_header_buffer_size 1k;

# Sets the buffer size for reading data from the client request body.
# Increasing this can help improve performance for larger bodies.
client_body_in_file_only off;

# Defines the TCP send and receive buffer sizes for client connections.
# These can also be set at the system level.
# Increase if handling large files or high volumes of traffic.
client_body_temp_path /var/nginx/client_body_temp 1 2;
client_body_timeout 12s;

# Enables gzip compression and sets compression level.
gzip on;
gzip_comp_level 4;

# Sets the minimum file size to compress.
gzip_min_length 1100;

# Sets the types of files that should be compressed.
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/rss+xml application/atom+xml image/svg+xml;

# Logs file uploads larger than this size.
# Using a value of 0 will disable this.
client_max_body_size 8m;

# Sets the path for the access_log.
# The default is logs/access.log.
access_log /var/log/nginx/access.log;

# Specifies the file for logging the error log.
error_log /var/log/nginx/error.log;

# Defines the maximum allowed size for a request body.
# This directive can also be set at the server level.
# Set to 0 to disable size limit.
client_max_body_size 10m;

# Configures the default limit for buffering of responses to clients.
# To disable buffering, set to "off".
proxy_buffering on;

# Sets the proxy request header fields to forward to the upstream server.
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Host $server_name;

# Specifies that NGINX should use a local hostname rather than the IP address
# for SSL renegotiation with downstream proxy servers.
proxy_ssl_server_name on;

# Enables or disables buffering of the client request body.
# If a size is specified, a buffer is allocated only if the client body is
# larger than this size.
client_body_buffer_size 10k;

# Configures timeouts between successive read or write operations.
# Overrides the timeout set by the "send_timeout" directive.
proxy_send_timeout 120s;
proxy_read_timeout 120s;

# Sets the size of the buffer used for reading data from the client.
proxy_buffer_size 128k;

# Specifies the size of the TCP socket send or receive buffer.
proxy_socket_send_buffer 79m;
proxy_socket_recv_buffer 79m;

# Configures how long to wait for the proxied HTTP request.
# Use as an alternative to slow requests with the
# max_execution_time PHP directive.
proxy_connect_timeout 120s;

# Enables or disables buffering of responses from the proxied server.
proxy_buffering on;

# Sets the size of the buffer used for reading data from the proxied server.
proxy_buffers 4 32k;
proxy_busy_buffers_size 64k;
proxy_temp_file_write_size 64k;

# Configures the number and size of buffers for files that have been
# read from the proxied server.
# Buffers are allocated only on demand.
proxy_max_temp_file_size 1100m;
proxy_buffer_size 1100m;

# Enables or disables Nginx's built-in caching feature.
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:10m inactive=60m;
proxy_cache_key "$scheme$request_method$host$request_uri";
proxy_cache_valid 200 5m;
proxy_cache_valid 404 1m;

# Specifies a HTTP version of the protocol used in requests to the proxy server.
# Supported versions include HTTP/1.0 and HTTP/1.1.
proxy_http_version 1.1;

# Sets the size of the buffer used to transmit data from the proxied server.
proxy_pass_request_headers on;
proxy_buffers 8 16k;
proxy_buffer_size 32k;
client_header_timeout 60;

# Configures the number and size of buffers for large responses.
proxy_buffering on;
proxy_buffers 8 16k;
proxy_buffer_size 32k;
proxy_temp_file_write_size 64k;

# Sets the maximum TCP ranges that can be returned from one call to sendfile.
sendfile_max_chunk 512k;

# Sets the TCP buffer size for a file.
# This is used only when the file being sent is larger than this size
# and if the client is offloaded to another server.
# The set value represents the size of one buffer, not the whole file.
tcp_nopush on;
tcp_nodelay on;
# Limits the rate of response transmission to clients.
limit_rate_after 1m;

# Enables or disables reusing of connections to upstream servers.
keepalive_requests 2000;
keepalive_timeout 120s;

# Sets the number of requests that an upstream server can handle
# at the same time.
keepaliverequests 3072;

# Defines the optimizer used in response header and body decompression.
mod_deflate on;

# Specifies the deflate compression level.
mod_deflate_comp_level 3;

# Configures the compression of responses to a precompressed file format
# or serving of a static file with a filename extension matching one
# of the regexes specified in the "gzip_types" directive.
gzip_static on;

# Sets the path to a gzip file.
# Use it for legacy file processing.
gzip_vary on;
gzip_proxied any;

# Defines the path to the directory for storing temporary files.
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:10m inactive=60m;
proxy_temp_path /var/cache/nginx/tmp;

# Sets the maximum number of requests that can be sent at one time.
proxy_max_temp_file_size 5m;

# Defines the size of the buffer used to save content to a temporary file.
# This directive can be set at the server, location, or http level.
# Default to a single buffer that does not exceed 1 gigabyte.
proxy_temp_file_write_size 1g;

# Enables caching of CSS and JavaScript files by sending Expires header.
# The minimum amount of time to cache a file can be specified
# using the "expires" directive.
expires 1d;

# Disables caching of responses for all files with specific extensions.
location ~* ^.+.(mp3|avi|flv|mpeg|jpg|gif|png|ico|css|zip|tgz|gz|woff)$ {
    expires -1;
}

# Limits the number of bytes per connection to prevent sendfile
# DoS attacks.
limitconn 3024;
limitrate 64k;
limitexcept GET HEAD;

# Enables or disables the browser caching of responses by setting
# the HTTP "Cache-Control" header.
addheader Cache-Control max-age=31536000;

# Specifies a timeout for proxying data from one server to another.
proxypass timeout=30;
proxyconnecttimeout 300 contentencoding gzip;
sslcompatibility default;
fastcgicache on;
fastcgicacheapikey NGINX_SECRET_KEY;

# Sets a timeout for data response from the proxied server.
proxypassrequestbody on;
upstream server1 {
        server server1.example.com;
}
server {
    # Sets the listen address and port for HTTP traffic.
    listen 80;

    # Specifies the domain name or IP address of the server.
    server_name example.com www.example.com;

    # Specifies the root directory for requests.
    root /var/www/example.com;

    # Defines the location of static files.
    location /static {
        alias /var/www/example.com/static/;
    }

    # Defines the index file for requests.
    index index.html;

    # Defines the maximum size for a response from the server.
    client_max_body_size 10M;

    # Configures the proxy server.
    location ~/proxy/(.*) {
        proxy_pass http://server1;
    }
}
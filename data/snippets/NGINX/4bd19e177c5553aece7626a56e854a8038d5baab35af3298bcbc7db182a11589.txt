# Nginx Configuration

# Set the worker process to auto adjust with available cpu cores
worker_processes auto;

# Set the number of connections per worker process
events {
    worker_connections 1024;
}

# Define the http block
http {
    # Define the mime types
    include mime.types;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json;

    # Configure cache settings
    # Enable and set cache size for fast disk I/O
    # Disable cache for certain file types
    # Cache static files for a set duration
    open_file_cache max=2000 inactive=20s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    sendfile on;
    sendfile_max_chunk 512k;

    # Set buffer sizes for reducing disk I/O operations
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 32k;

    # Manage server error logs
    error_log /var/log/nginx/error.log warn;

    # Define the server block
    server {
        # Listen on port 80
        listen 80;

        # Set the server name
        server_name example.com www.example.com;

        # Define location of error and access logs
        access_log /var/log/nginx/example.access.log;
        error_log /var/log/nginx/example.error.log;

        # Configure root directory of website files
        root /var/www/example;

        # Allow only GET requests
        if ($request_method !~ ^(GET)$) {
            return 444;
        }

        # Redirect HTTP to HTTPS
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }

        # Set caching for certain file types
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff)$ {
            expires 6d;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        # Pass all PHP files to the FastCGI server
        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        # Serve static files without sending requests to PHP
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|html|htm)$ {
            expires 30d;
        }
    }
}
# this is a comment
# server block to listen on port 80 for HTTP requests
server {
  listen 80;
  server_name example.com www.example.com;

  # redirect all HTTP requests to HTTPS
  return 301 https://$server_name$request_uri;
}

# server block to listen on port 443 for HTTPS requests
server {
  listen 443 ssl;
  server_name example.com www.example.com;

  # specify where to find the server's SSL certificate and private key
  ssl_certificate /etc/ssl/certs/example.com.crt;
  ssl_certificate_key /etc/ssl/private/example.com.key;

  # define SSL protocols and ciphers
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers EECDH+AESGCM:EDH+AESGCM;

  # enable OCSP stapling for improved SSL certificate verification
  ssl_stapling on;
  ssl_stapling_verify on;

  # enable HSTS (HTTP Strict Transport Security) for improved security
  add_header Strict-Transport-Security "max-age=31536000" always;

  # configure caching for static assets
  location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
    expires 1y;
    add_header Cache-Control "public, no-transform";
  }

  # reverse proxy to an upstream server for handling requests
  location /api {
    proxy_pass http://backend_server;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # reverse proxy to a node.js server on a different port
  location /socket.io {
    proxy_pass http://localhost:3000;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}
events {

    worker_connections 1024; # maximum number of simultaneous connections
}

http {

    server {

        listen 80; # port to listen for incoming requests

        server_name example.com; # domain name for this server block

        # location block to handle requests for /
        location / {

            index index.html; # default file to serve

            # use try_files directive to try different files to serve
            # and return 404 if none of them exist
            try_files $uri $uri/ /404.html;
        }

        # location block to handle requests for /about
        location /about {

           index about.html; # serve about page
        }

        # use location block to handle requests for /api
        location /api {

            proxy_pass http://localhost:3000; # proxy requests to backend API server
            proxy_set_header Host $host; # pass the Host header to the backend server
            proxy_set_header X-Real-IP $remote_addr; # pass the client's real IP to the backend server
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # pass the real client's IP from the HTTP
            # request headers to the backend server
        }

        # use location block to handle requests for any other paths
        location / {

            return 404; # return a 404 error for any other paths
        }
    }
}
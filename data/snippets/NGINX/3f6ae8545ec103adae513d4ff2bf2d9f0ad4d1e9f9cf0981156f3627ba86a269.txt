server {
  listen 80; # listens on port 80 for incoming connections

  # server_name defines the domain name for this server block.
  # In this case, it is set to example.com and www.example.com,
  # which means this block will handle requests for both of those domains.
  server_name example.com www.example.com;

  # location blocks are used to define how NGINX should handle requests
  # for specific paths on the server. In this block, we are saying that
  # for any request to the /about path, NGINX will serve the files
  # located in the specified directory.
  location /about {
    root /var/www/example.com; # sets the root directory for this location block
    index index.html; # specifies the default file to serve if no specific file is requested
  }

  # this location block handles requests to the /blog path.
  # in addition to serving files from the specified directory,
  # it also includes a try_files statement.
  location /blog {
    root /var/www/example.com;
    index index.html;
    try_files $uri $uri/ /blog/index.html; # if the requested file or directory does not exist,
                                           # NGINX will attempt to serve the /blog/index.html file
  }

  # this location block handles requests to the /api path.
  # in addition to serving files from the specified directory,
  # it also includes a proxy_pass statement.
  location /api {
    proxy_pass http://localhost:8000; # redirects requests to the specified URL
    proxy_set_header Host $host; # sets the Host header to the original value
    proxy_set_header X-Real-IP $remote_addr; # sets the X-Real-IP header to the client's IP address
  }

  # this location block handles any requests that do not match the defined paths above.
  # for example, if a request is made to /contact or /faq, this block will handle it.
  location / {
    root /var/www/example.com;
    index index.html;
    try_files $uri $uri/ /index.html; # same as above, but for requests to the root path
  }
}
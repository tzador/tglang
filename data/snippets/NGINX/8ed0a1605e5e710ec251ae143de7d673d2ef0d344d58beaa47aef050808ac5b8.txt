#### Reverse proxy configuration for NGINX server

# Setting up upstream servers
upstream backend {
  server backend1.example.com;
  server backend2.example.com;
  server backend3.example.com;
}

# Virtual server configuration
server {
  listen 80;
  server_name example.com;
  
  # Location block for handling all requests
  location / {
    proxy_pass http://backend; # forwarding requests to upstream servers
    proxy_set_header Host $host; # setting the Host header to original hostname
    proxy_set_header X-Real-IP $remote_addr; # passing client's real IP address
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # passing client's IP address history
    proxy_set_header X-Forwarded-Proto $scheme; # passing the protocol used by client
    proxy_connect_timeout 300s; # setting timeout for establishing connection with upstream server
    proxy_read_timeout 300s; # setting timeout for reading the response from upstream server
  }
  
  # Location block for handling requests to specific URI
  location /api {
    proxy_pass http://backend/api; # forwarding requests to specific URI on upstream server
    proxy_set_header Host $host; # setting the Host header to original hostname
    proxy_set_header X-Real-IP $remote_addr; # passing client's real IP address
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # passing client's IP address history
    proxy_set_header X-Forwarded-Proto $scheme; # passing the protocol used by client
    proxy_connect_timeout 300s; # setting timeout for establishing connection with upstream server
    proxy_read_timeout 300s; # setting timeout for reading the response from upstream server
  }
  
  # Location block for handling requests to static files
  location /static/ {
    root /var/www/example.com; # setting the root directory for static files
    try_files $uri $uri/ =404; # checking if file exists or returning 404 error
  }
}
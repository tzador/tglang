# Proxy configuration

server {
    listen 80;
    server_name example.com www.example.com;

    location / {
        proxy_pass http://127.0.0.1:8000; # Where requests should be forwarded
        proxy_set_header Host $http_host; # Set the host header to the original request
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Add the client IP address to the 'X-Forwarded-For' header to track the original client IP
        proxy_set_header X-Forwarded-Proto $scheme; # Add the protocol used by the client to the 'X-Forwarded-Proto' header
        proxy_redirect off; # Disable automatic redirection of headers
        proxy_buffering off; # Disable buffering for responses from the proxied server
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 1d; # Set caching time to 1 day for static assets
        add_header Cache-Control "public, must-revalidate, proxy-revalidate"; # Set caching headers for static assets
        access_log off; # Disable logging for requests for static assets
    }

    location /api {
        proxy_pass http://127.0.0.1:8001; # Where API requests should be forwarded
        proxy_set_header Host $http_host; # Set the host header to the original request
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Add the client IP address to the 'X-Forwarded-For' header to track the original client IP
        proxy_set_header X-Forwarded-Proto $scheme; # Add the protocol used by the client to the 'X-Forwarded-Proto' header
        proxy_redirect off; # Disable automatic redirection of headers
        proxy_buffering off; # Disable buffering for responses from the proxied server
    }

    error_page 404 /404.html; # Set custom 404 page
    location = /40x.html {
        internal; # Ensure that only internal requests can access the 40x.html page
    }

    error_page 500 502 503 504 /50x.html; # Set custom 500 page
    location = /50x.html {
        internal; # Ensure that only internal requests can access the 50x.html page
    }
}
server {
    # listen on port 80
    listen 80;

    # server name
    server_name www.example.com;

    # root directory for website files
    root /var/www/html;

    # enable gzip compression for faster page load times
    gzip on;
    gzip_comp_level 5;

    # set cache expiration time for static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 7d;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # enable caching for specific file types
    location ~* \.(pdf|doc|xml)$ {
        expires 30d;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # set server headers for security
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    # set up error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }

    # enable SSL
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_dhparam /etc/nginx/ssl/dhparams.pem;

    # set up SSL protocols and ciphers
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_dhparam /etc/nginx/ssl/dhparams.pem;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000";

    # enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/trusted.pem;

    # enable HTTP/2
    listen 443 ssl http2;

    # redirect non-www to www
    server_name example.com;
    return 301 https://www.example.com$request_uri;

    # redirect http to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}
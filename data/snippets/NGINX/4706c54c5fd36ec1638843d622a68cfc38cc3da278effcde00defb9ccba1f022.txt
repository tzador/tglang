# set file limits for NGINX
worker_rlimit_nofile 100000;

# load balancing configuration
upstream backend {
    server 192.168.1.1:80 weight=3 max_fails=3 fail_timeout=10s;
    server 192.168.1.2:80 weight=2;
    server 192.168.1.3:80 backup;
}

# basic server configuration
server {
    listen 80;
    server_name example.com;

    # redirect all requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl;
    server_name example.com;

    # SSL certificate and key
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # enable SSL session caching
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # enable SSL stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    # HTTP Strict Transport Security
    add_header Strict-Transport-Security max-age=31536000;

    # enable OCSP stapling
    ssl_trusted_certificate /etc/nginx/ssl/ca_bundle.crt;
    ssl_stapling_file /etc/nginx/ssl/ocsp_response.crt;

    # enable HTTP/2
    http2_max_field_size 16384;
    http2_max_header_size 16384;
    http2_max_requests 100;
    http2_push_preload on;

    # set default root directory
    root /var/www/html;

    # enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/javascript;
    gzip_min_length 1000;

    # enable brotli compression
    brotli on;
    brotli_types text/plain text/css application/javascript;
    brotli_min_length 1000;

    # enable caching
    expires 1d;
    add_header Cache-Control "public, max-age=86400";

    # proxy cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=backend_cache:10m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 60m;
    proxy_cache_valid 404 10m;
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;
    proxy_cache_min_uses 1;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

    # enable rate limiting
    limit_req zone=backend burst=5 nodelay;

    # basic authentication
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # restrict access to specific IP addresses
    allow 127.0.0.1;
    deny all;

    # load balancing configurations
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        proxy_read_timeout 90s;
    }

    # disable access to hidden files
    location ~ /\. {
        deny all;
    }

    # enable server-side includes
    location /ssi/ {
        ssi on;
    }

    # enable Gzip static compression
    gzip_static on;

    # enable automatic index generation
    autoindex on;
    autoindex_exact_size off;
    autoindex_format html;

    # prevent clients from requesting uppercase paths
    if ($request_uri ~* [A-Z]) {
        return 301 http://$host$request_uri;
    }
}
server {
  # listen on port 80
  listen 80;
  # serve files from the /var/www/example.com directory
  root /var/www/example.com;
  # enable gzip compression
  gzip on;
  # set gzip compression level to 9
  gzip_comp_level 9;
  # enable the brotli compression
  brotli on;
  
  # redirect all requests to HTTPS
  return 301 https://$host$request_uri;
}

server {
  # listen on port 443
  listen 443 ssl http2;
  # serve files from the /var/www/example.com directory
  root /var/www/example.com;
  # specify server name
  server_name example.com;
  
  ssl_certificate /etc/nginx/ssl/example.com.crt;
  ssl_certificate_key /etc/nginx/ssl/example.com.key;
  
  # configure SSL protocols and ciphers
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_session_cache shared:SSL:10m;
  # enable strict transport security
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  
  # configure location blocks
  location / {
    # return 403 forbidden response for any request to example.com/private directory
    location /private {
      return 403;
    }
    
    # reverse proxy to backend server
    proxy_pass http://backend_server;
    # set HTTP headers
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    # enable caching
    proxy_cache_key "$scheme$request_method$host$request_uri";
    # set cache expiration time to 1 hour
    proxy_cache_valid 200 1h;
    # enable persistent connections
    proxy_http_version 1.1;
    proxy_set_header Connection "";
  }
}

# block requests to specific IP address
deny 123.456.789.01/32;
# allow requests only from specific IP address
allow 987.654.321.01/32;
# block all other requests
deny all;
server {
  # listen on port 80
  listen 80;
  # serve files from the html directory
  root html;
  # redirect to https
  return 301 https://$server_name$request_uri;
}

server {
  # listen on port 443
  listen 443 ssl http2;
  # serve files from the html directory
  root html;
  # specify SSL certificate and key
  ssl_certificate /etc/nginx/ssl/certificate.crt;
  ssl_certificate_key /etc/nginx/ssl/private_key.key;
  # enable OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  # specify trusted CA certificates
  ssl_trusted_certificate /etc/nginx/ssl/trusted_ca.crt;
  # enable HSTS
  add_header Strict-Transport-Security "max-age=31536000" always;
  # deny access to files in the .well-known directory
  location /.well-known/ {
    deny all;
  }
  # return 404 if file not found
  location = /404.html {
    internal;
  }
  # reverse proxy configuration
  location / {
    # define upstream server
    proxy_pass http://localhost:3000;
    # enable gzip compression
    gzip on;
    # define which file types to compress
    gzip_types text/plain text/css application/json;
    # define buffer size
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    # enable SSL
    proxy_ssl on;
    proxy_ssl_certificate /etc/nginx/ssl/certificate.crt;
    proxy_ssl_certificate_key /etc/nginx/ssl/private_key.key;
    # enable keepalive
    proxy_http_version 1.1;
    proxy_set_header Connection "Keep-Alive";
    # allow websocket connections
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    # set timeout for proxy connections
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    # specify HTTP error codes to ignore
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
  }
}

server {
  # listen on port 80
  listen 80;
  
  server_name mydomain.com;
  
  # redirect to https
  return 301 https://$server_name$request_uri;
}

server {
  # listen on port 443
  listen 443 ssl http2;
  # serve files from the html directory
  root html;
  # specify domain name
  server_name mydomain.com;
  # specify SSL certificate and key
  ssl_certificate /etc/nginx/ssl/certificate.crt;
  ssl_certificate_key /etc/nginx/ssl/private_key.key;
  # enable OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  # specify trusted CA certificates
  ssl_trusted_certificate /etc/nginx/ssl/trusted_ca.crt;
  # enable HSTS
  add_header Strict-Transport-Security "max-age=31536000" always;
  # deny access to files in the .well-known directory
  location /.well-known/ {
    deny all;
  }
  # return 404 if file not found
  location = /404.html {
    internal;
  }
  # reverse proxy configuration
  location / {
    # define upstream server
    proxy_pass http://localhost:3000;
    # enable gzip compression
    gzip on;
    # define which file types to compress
    gzip_types text/plain text/css application/json;
    # define buffer size
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    # enable SSL
    proxy_ssl on;
    proxy_ssl_certificate /etc/nginx/ssl/certificate.crt;
    proxy_ssl_certificate_key /etc/nginx/ssl/private_key.key;
    # enable keepalive
    proxy_http_version 1.1;
    proxy_set_header Connection "Keep-Alive";
    # allow websocket connections
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    # set timeout for proxy connections
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    # specify HTTP error codes to ignore
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
  }
}
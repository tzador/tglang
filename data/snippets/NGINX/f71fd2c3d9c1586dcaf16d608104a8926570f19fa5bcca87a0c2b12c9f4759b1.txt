server {
    listen 80;
    server_name example.com;
    root /var/www/example.com;

    # Include additional configuration files
    include /etc/nginx/mime.types;
    include /etc/nginx/conf.d/*;
    include /etc/nginx/sites-enabled/*;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Enable caching
    location ~* .(jpg|jpeg|png|gif|ico|html|xml|txt)$ {
        expires 30d;
    }

    # Restrict access to certain directories
    location /admin/ {
        deny all;
        return 404;
    }

    # Handle errors
    error_page 404 /404.html;
    location = /404.html {
        internal;
        root /var/www/error_pages;
    }

    # Enable secure connections and redirect HTTP to HTTPS
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/example.crt;
    ssl_certificate_key /etc/nginx/ssl/example.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # Enable server-side caching
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache_zone:10m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 301 302 304 30m;
    proxy_cache_valid 404 1m;
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;
    proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;

    # Server for API endpoints
    location /api/ {
        # Enable proxying to backend server
        proxy_pass http://localhost:8080;

        # Rewrite URL before passing it to backend
        rewrite ^/api/(.*)$ /$1 break;

        # Configure timeouts and buffers for proxy
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    # Server for static files
    location /static/ {
        root /var/www/example.com;
        expires max;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
}
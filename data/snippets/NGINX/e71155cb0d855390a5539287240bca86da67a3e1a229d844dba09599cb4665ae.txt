server {
    #listen on port 80
    listen 80;

    #set the server name to example.com
    server_name example.com;

    #create location block for the root directory
    location / {
        
        #use gzip compression
        gzip on;
        
        #define the allowed methods
        allow GET;
        allow POST;
        
        #enable rate limiting with a limit of 100 requests per minute
        limit_rate 100r/m;
        
        #set the root directory for the server
        root /var/www/example;
        
        #define additional MIME types
        include mime.types;
        
        #define error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        #rewrite urls
        rewrite ^/(.*)\.html$ /$1 permanent;
        
        #define caching rules for certain file types
        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires 2d;
            add_header Cache-Control "public";
        }
        
        #prevent directory listings
        autoindex off;
    }
    
    #define location block for the "admin" path
    location /admin {
        #restrict access to specific IP addresses
        allow 192.168.1.1;
        allow 10.5.5.2;
        deny all;
        
        #set up basic authentication
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        #set up proxy for backend server
        proxy_pass http://127.0.0.1:8000;
        
        #use WebSocket protocol
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        
        #set the appropriate content type
        proxy_set_header Content-Type "application/json";
        
        #set timeouts for proxy connections
        proxy_connect_timeout 5s;
        proxy_read_timeout 60s;
        proxy_send_timeout 20s;
        
        #enable buffering of responses
        proxy_buffering on;
        proxy_buffer_size 8k;
        
        #enable HTTP/2
        http2_push_preload on;
        
        #use server-side CDN for static files
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m;
        proxy_cache_valid 200 1h;
    }
    
    #serve error pages from separate directory
    error_page 404 /errors/404.html;
    error_page 500 /errors/50x.html;
    location = /errors/404.html {
        internal;
    }
    location = /errors/50x.html {
        internal;
    }
    
    #forward all other paths to the index file
    location / {
        try_files $uri $uri/ /index.html;
    }
}
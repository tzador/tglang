#The following code block sets the configuration for a website using NGINX.

#Sets the user and group the NGINX worker processes will be run as
#In this case, the user is set to www-data and the group to www-data
#This is important for security reasons and should be set to a non-root user

user www-data;
worker_processes auto;

#Specifies the number of worker connections per CPU
#This should be set based on the expected traffic for the website
#Here we set it to 1024, but it can be adjusted accordingly
#Higher values may increase performance but can also result in high server load

worker_connections 1024;

#Specifies the location of the error log file generated by NGINX
#We set it to /var/log/nginx/error.log, but it can be changed based on system preferences

error_log /var/log/nginx/error.log;

#Specifies the location of the access log file generated by NGINX
#We set it to /var/log/nginx/access.log, but it can be changed based on system preferences

access_log /var/log/nginx/access.log;

#Sets the path to the PID file for NGINX master process
#This is used for controlling and monitoring the NGINX process
#We set it to /var/run/nginx.pid, but it can be changed as needed

pid /var/run/nginx.pid;

#Specifies the timeout in seconds for keep-alive connections with clients
#When set to 0, keep-alive connections are not allowed
#We set it to 65 for optimum performance, but it can be adjusted as needed

keepalive_timeout 65;

#Sets the maximum request body size that NGINX will accept
#Requests larger than this size will result in a 413 error
#We set it to 4MB, but it can be adjusted as needed

client_max_body_size 4M;

#Sets the types of files that will be compressed by NGINX
#This can help improve website performance by reducing file size
#We set it to html, css, js, and svg, but it can be adjusted as needed

gzip_types text/html text/css application/javascript image/svg+xml;

#Sets the root directory for the website files
#We set it to /var/www/html, but it can be changed based on system preferences

root /var/www/html;

#Specifies the server configurations for the website
#In this example, we configure the server to listen on port 80 and server_name to example.com
#Requests to example.com will be directed to the configured root directory for the website

server {
    listen 80;
    server_name example.com;

    #Sets the location of the index file
    #Requests to the root directory or directories without a specified file will
    #be directed to the index file located in the root directory

    index index.html;

    #Sets the location for static files
    #Requests for files with the specified extensions will be directed to the
    #root directory for the website

    location /static/ {
        alias /var/www/html/static/;
        #Specify the types of files to be served from this location
        #In this example, we set it to only serve CSS files
        serve css files only;
    }

    #Specifies the location for proxy configurations
    #Requests for the specified location will be forwarded to the configured proxy server

    location /api {
        proxy_pass http://api.example.com;
        #Sets the proxy processing timeout
        #Timeout can be adjusted as needed
        proxy_timeout 30s;
    }
}
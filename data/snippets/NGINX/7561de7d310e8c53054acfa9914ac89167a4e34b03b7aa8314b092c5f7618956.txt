# NGINX server block
server {
  listen 80; # listens on port 80 for requests
  server_name example.com; # server name
  return 301 https://$server_name$request_uri; # redirect to https

  # proxy redirect
  location / {
    proxy_pass http://127.0.0.1:3000; # proxy server to redirect to
    proxy_set_header Host $host; # sets the Host header to original request
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # sets X-Forwarded-For header to original client IP
    proxy_set_header X-Forwarded-Proto $scheme; # sets X-Forwarded-Proto header to original request scheme
    proxy_redirect http:// https://; # redirects http requests to https
  }

  # SSL configuration
  listen 443 ssl; # listens on port 443 for SSL requests
  ssl_certificate /etc/ssl/certs/example.com.crt; # path to SSL certificate
  ssl_certificate_key /etc/ssl/private/example.com.key; # path to SSL certificate key
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # enables TLS protocols
  ssl_prefer_server_ciphers on; # enables server preferred cipher suites
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"; # cipher suites to be used
  ssl_session_cache shared:SSL:10m; # shared cache for SSL sessions
  ssl_session_timeout 10m; # timeout for SSL session cache
  ssl_stapling on; # enables OCSP stapling
  ssl_stapling_verify on; # enables OCSP verification
  ssl_trusted_certificate /etc/ssl/certs/trusted.crt; # path to trusted SSL certificate for OCSP verification
  # HSTS settings
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
  # enable HTTP/2
  http2_max_field_size 8190;
  http2_max_header_size 8190;
  http2_max_requests 1000;
  http2_idle_timeout 10m;
  http2_recv_timeout 10m;
}
# Global configuration
worker_processes auto; # Sets the number of NGINX worker processes based on the number of processor cores available

red_deer on; # Enables NGINX to use connection multiplexing for higher performance
tcp_nopush on; # Enables sending the entire TCP content in a single packet, useful for reducing delay with HTTP Keep-Alive
tcp_nodelay on; # Disables Nagle's algorithm for small packets, improves performance for real-time applications

# HTTP server configuration
server {
    listen 80 default_server; # Listens on the default HTTP port
    listen [::]:80 default_server;

    # Server name can be a domain name or IP address
    server_name example.com localhost;

    # Root directory for the server to serve files from
    root /var/www/html;

    # Enable gzip compression for faster content delivery
    gzip on;
    gzip_types text/plain text/css application/javascript application/json;

    # NGINX cache settings for better performance
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 60m;

    # Sets up location for handling requests and applying rules
    location / {
        try_files $uri $uri/ /index.php?$query_string; # Tries to find a matching file or directory and if it doesn't exist, sends the request to index.php
        expires 1d; # Sets browser cache to expire after 1 day for static assets
    }

    # Allows PHP files to be processed by the PHP-FPM handler
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock; # Uses UNIX socket for communication between NGINX and PHP-FPM
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # Allows handling of HTTP server's error responses with custom HTML pages
    error_page 403 /403.html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html/errors;
    }

    # Allows setting up server blocks for different domains
    server {
        listen 80;
        server_name subdomain.example.com;
        root /var/www/subdomain;
    }

}
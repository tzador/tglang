server {
  # listen for requests on port 80
  listen 80;
  # define server name
  server_name www.example.com;

  # redirect all http traffic to https
  return 301 https://$server_name$request_uri;
}

server {
  # listen for requests on port 443
  listen 443 ssl;

  # define server name
  server_name www.example.com;

  # define ssl certificate and key
  ssl_certificate /path/to/cert.pem;
  ssl_certificate_key /path/to/key.pem;

  # define ssl protocols and ciphers
  ssl_protocols TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!MD5;

  # set a timeout for ssl handshake
  ssl_handshake_timeout 10s;

  # define location block for root directory
  location / {
    # define root directory to serve content from
    root /var/www/html;
    # enable gzip compression
    gzip on;
    # set gzip compression level
    gzip_comp_level 5;
    # define types of files to gzip
    gzip_types text/plain text/css application/json;
    # set cache expiration time for static files
    expires 1d;
  }

  # define location block for api
  location /api/ {
    # define proxy pass to api server
    proxy_pass http://localhost:8000;
    # enable proxying of web socket connections
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }

  # define location block for secure admin area
  location /admin/ {
    # define basic http authentication
    auth_basic "Restricted Access";
    # define file path for basic http authentication
    auth_basic_user_file /etc/nginx/passwd/admins;
    # define proxy pass to node server
    proxy_pass http://localhost:3000;
  }
}
server {
    listen 80; #listens on port 80
    server_name example.com; #server name
    location / {
        proxy_pass http://localhost:3000; #proxy to localhost on port 3000
        proxy_set_header Host $host; #sets the host header
        proxy_set_header X-Real-IP $remote_addr; #sets the real IP address of the client
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #appends the client's IP address to the X-Forwarded-For header
        proxy_set_header X-Forwarded-Proto $scheme; #sets the scheme of the request (http/https)
        proxy_connect_timeout 300s; #sets the timeout for connecting to the proxied server
        proxy_send_timeout 300s; #sets the timeout for sending data to the proxied server
        proxy_read_timeout 300s; #sets the timeout for reading data from the proxied server
        client_max_body_size 10m; #sets the maximum allowed size of client request body
    }

    location /static/ {
        alias /var/www/static/; #serves static files from the specified directory
        expires 1d; #sets the cache expiry time for static files
        access_log off; #disables access logging for this location
    }

    gzip on; #enables gzip compression
    gzip_types text/plain text/css application/json; #specifies which file types should be gzipped
    gzip_proxied any; #enables gzipping for all proxied requests
    gzip_comp_level 5; #compression level (1 being the fastest and 9 being the best compression)
    gzip_min_length 1000; #sets the minimum length for a response to be gzipped
    
    error_page 404 /404.html; #defines the page to display when a 404 error occurs
    
    location = /404.html {
        internal; #returns a 404 error internally without redirecting to a different URL
    }

    error_page 500 502 503 504 /50x.html; #defines the page to display when a 500, 502, 503, or 504 error occurs

    location = /50x.html {
        internal; #returns a 50x error internally without redirecting to a different URL
    }
}
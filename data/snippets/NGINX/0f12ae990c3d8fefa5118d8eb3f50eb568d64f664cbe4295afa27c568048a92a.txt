server {

     # listen on port 80
     listen 80;
     
     # define server name
     server_name example.com;
     
     # redirect all traffic to https
     return 301 https://$server_name$request_uri;
}

server {

     # listen on port 443
     listen 443 ssl;
     
     # define server name
     server_name example.com;
     
     # configure SSL certificate
     ssl_certificate /path/to/certificate;
     ssl_certificate_key /path/to/certificate/key;
     
     # enable SSL
     ssl on;
     
     # disable SSLv2 and SSLv3
     ssl_protocols TLSv1.2;
     
     # enable HTTP/2
     http2_push_preload on;
     
     # configure security headers
     add_header X-Frame-Options "SAMEORIGIN";
     add_header X-XSS-Protection "1; mode=block";
     add_header X-Content-Type-Options "nosniff";
     add_header Referrer-Policy "no-referrer";
     
     # enable HSTS with a 1 year max-age
     add_header Strict-Transport-Security "max-age=31536000";
     
     # enable OCSP stapling
     ssl_stapling on;
     ssl_stapling_verify on;
     
     # configure server root and index file
     root /var/www/html;
     index index.html;
     
     # configure cache settings
     location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
          expires 1y;
          access_log off;
          add_header Cache-Control "public";
     }
     
     # handle all other requests
     location / {
          proxy_set_header        Host $host;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header        X-Forwarded-Proto $scheme;
          
          proxy_pass              http://localhost:8080;
          
          # enable caching for static assets
          proxy_cache_bypass      $http_pragma;
          proxy_no_cache          $http_pragma;
          expires 1d;
     }
}
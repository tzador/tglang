http {
    server {
        listen 80; # defines the port the server will listen on

        location / { # specifies the base URL
            proxy_pass http://backend; # sends all requests under the base URL to a backend server
            proxy_http_version 1.1; # specifies the HTTP version used for proxy connections
            proxy_set_header Upgrade $http_upgrade; # adds an "Upgrade" header to the request based on the client's request
            proxy_set_header Connection "upgrade"; # sets the value of the "Connection" header to "upgrade"
            proxy_set_header Host $host; # sets the value of the "Host" header to the requested host
        }

        location /api { # specifies a different base URL for API requests
            proxy_pass http://api_backend; # sends all requests to this base URL to a different backend server
            proxy_http_version 1.1; # specifies the HTTP version used for proxy connections
            proxy_set_header X-Real-IP $remote_addr; # sets the value of the "X-Real-IP" header to the client's IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # sets the value of the "X-Forwarded-For" header to the client's IP address
            proxy_set_header Host $host; # sets the value of the "Host" header to the requested host
        }
    }

    upstream backend { # defines the backend server used for requests sent to the base URL
        server 127.0.0.1:8080; # specifies the IP address and port of the backend server
        keepalive 32; # specifies the maximum number of idle connections to keep open to this server
    }

    upstream api_backend { # defines the backend server used for requests sent to the "/api" base URL
        server 127.0.0.1:8000; # specifies the IP address and port of the backend server
        keepalive 32; # specifies the maximum number of idle connections to keep open to this server
    }
}
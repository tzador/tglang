# Generic upstream server pool for load balancing
#
# The `upstream` block defines a group of servers that will receive
# traffic from the `server` block below. Here, we have named our upstream
# "myapp" and configured three servers to be load balanced.
#
upstream myapp {
    # The `server` directive defines a server in the upstream pool
    # and assigns a weight to it. The weight will determine the
    # proportion of traffic it will receive. 
    server 10.0.1.1 weight=3;
    server 10.0.1.2 weight=4;
    server 10.0.1.3 weight=2;
}

# Virtual server configuration for myapp
#
# The `server` block defines a virtual server that will receive
# traffic from the upstream servers in the `upstream` block above.
#
server {

    # The `listen` directive specifies the port and optional IP address
    # that this virtual server will listen on.
    listen 80;

    # The `server_name` directive specifies the domain name
    # that this virtual server will respond to.
    server_name myapp.example.com;

    # The `location` block specifies the URI path to be matched
    # and any directives that should be applied if it is matched.
    location / {
        # The `proxy_pass` directive defines the upstream server group
        # to forward requests to.
        proxy_pass http://myapp;

        # The `proxy_set_header` directs allows for custom headers
        # to be set for requests being passed through.
        proxy_set_header Host $http_host;

        # The `proxy_redirect` directive specifies how redirects
        # from the upstream server should be handled.
        # In this case, we want to redirect to the same virtual server.
        proxy_redirect off;

        # The `proxy_http_version` directive specifies the HTTP protocol
        # that will be used when communicating with the upstream server.
        proxy_http_version 1.1;

        # The `proxy_set_header` directive allows for additional headers
        # to be set for requests being passed through. In this case,
        # we will pass through the client's IP address in the X-Real-IP header.
        proxy_set_header X-Real-IP $remote_addr;

        # The `proxy_set_header` directive allows for additional headers
        # to be set for requests being passed through. In this case,
        # we will pass through the client's IP address in the X-Forwarded-For header.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
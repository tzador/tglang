# This server block redirects all traffic from www.example.com to example.com:
server {

    # Listen on port 80 for HTTP requests:
    listen 80;

    # Set the server name as www.example.com:
    server_name www.example.com;

    # Enable permanent redirect to the non-www version of the domain:
    return 301 https://example.com$request_uri;
}

# This server block handles all traffic on port 443 (HTTPS):
server {

    # Listen on port 443 for HTTPS requests:
    listen 443 ssl;

    # Set the server name as example.com:
    server_name example.com;

    # Configure SSL certificate and key:
    ssl_certificate /etc/ssl/example.crt;
    ssl_certificate_key /etc/ssl/example.key;

    # Enable OCSP stapling for improved performance:
    ssl_stapling on;
    ssl_stapling_verify on;

    # Enable HSTS (HTTP Strict Transport Security) with a max age of 1 year:
    add_header Strict-Transport-Security "max-age=31536000";

    # Enable HTTP/2 for improved performance:
    http2_push_preload on;

    # Configure a cache zone with a size of 10MB and a maximum TTL of 1 day:
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=example_cache:10m inactive=1d;

    # Configure proxy cache settings:
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 1h;

    # Set proxy headers and timeouts:
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_read_timeout 30s;
    proxy_connect_timeout 5s;

    # Configure location for handling requests:
    location / {
        # Enable proxy caching:
        proxy_cache example_cache;
        # Set cache bypass based on request headers:
        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authorization;
        # Forward requests to the upstream server:
        proxy_pass https://upstream_server;
    }

    # Configure error pages:
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Enable Gzip compression for all types of content:
    gzip on;
    gzip_types *;
    gzip_comp_level 5;

    # Enable server-side caching for images, CSS, and JS files:
    location ~* \.(gif|jpg|jpeg|png|css|js)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authorization;
    }

    # Serve static files directly without passing them to upstream server:
    location ~* ^.+\..+$ {
        try_files $uri =404;
    }
}
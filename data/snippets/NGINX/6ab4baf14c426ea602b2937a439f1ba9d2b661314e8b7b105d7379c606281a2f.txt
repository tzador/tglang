server {
    # server configuration

    # port
    listen 80;

    # server name
    server_name example.com;

    # root directory
    root /usr/share/nginx/html;

    # index file
    index index.html;

    # allow and deny
    location /api/ {
        # allow only GET requests
        allow GET;
        deny all;
    }

    # redirect all requests to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    # server configuration

    # port
    listen 443 ssl;

    # server name
    server_name example.com;

    # root directory
    root /usr/share/nginx/html;

    # index file
    index index.html;

    # SSL certificate and key
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # SSL configuration
    # enable only strong protocols
    ssl_protocols TLSv1.2 TLSv1.3;
    # enable only strong ciphers
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384: ECDHE-RSA-AES256-GCM-SHA384: \
        ECDHE-ECDSA-CHACHA20-POLY1305: ECDHE-RSA-CHACHA20-POLY1305: \
        ECDHE-ECDSA-AES256-SHA384: ECDHE-RSA-AES256-SHA384;
    
    # deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # proxy pass
    location /users/ {
        proxy_pass http://example.com/api/users/;
    }

    # error pages
    error_page 404 /404.html;
    error_page 500 502 504 /50x.html;

    # custom error pages
    location = /404.html {
        internal;
        root /usr/share/nginx/html;
    }

    # cache static files
    location ~* \.(jpg|jpeg|png|gif|ico)$ {
        expires 1d;
        add_header Cache-Control "public";
    }

    # cache dynamic content
    location ~ \.php$ {
        expires off;
        add_header Cache-Control "private, no-cache, no-store, proxy-revalidate, max-age=0";
    }

    # rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;

    # prevent clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN" always;
}
#Defines a server block that listens on port 80.
server {
    listen 80;

    #Defines the server_name directive, which specifies the domain name or IP address of the server.
    server_name example.com;

    #Defines the location block, which allows configuring directives based on a request URI.
    #The ~ modifier makes the location case-sensitive.
    location ~ ^/images/ {
        #Defines the root directory where all files for this location will be searched for.
        root /var/www/html/images;

        #Enables HTTP/1.1 support and allows setting of some HTTP headers from the upstream server.
        proxy_pass http://backend_server;

        #Sets the cache time for this location in seconds.
        proxy_cache_valid 200 1d;

        #Sets the maximum size of a cached response for this location.
        proxy_cache_max_size 10m;

        #Sets the cache zone and key for this location.
        #The proxy_cache_bypass directive defines when the cached response should not be used.
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_bypass $http_pragma;
    }

    #Defines the location for the root directory, which is where the index.html file is stored.
    location / {
        #Sets the root directory where all files for this location will be searched for.
        root /var/www/html;

        #Defines the index files that will be served if a request is made to the root of the server.
        index index.html index.htm;
    }

    #Defines an error page for 404 Not Found errors.
    error_page 404 /404.html;
    location = /404.html {
        internal;
        #Sets the root directory where the 404.html file is located.
        root /usr/share/nginx/html;
    }

    #Defines a named location to be used by other location blocks.
    location @backend {
        #Enables HTTP/1/1 support and allows setting of some HTTP headers from the upstream server.
        proxy_pass http://backend_server;
    }
}
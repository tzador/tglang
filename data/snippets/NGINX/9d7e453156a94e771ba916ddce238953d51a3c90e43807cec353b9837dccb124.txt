# Define proxy server configuration
server {
    listen 80; # Listen for incoming connections on port 80
    server_name example.com; # Domain name for the server
    root /var/www/example.com; # Root directory for server files

    # Configure caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1d; # Set cache expiration to 1 day
        add_header Cache-Control "public"; # Set caching type to public
    }

    # Configure proxy settings
    location / {
        proxy_pass http://127.0.0.1:8080; # Proxy requests to localhost on port 8080
        proxy_set_header X-Real-IP $remote_addr; # Set X-Real-IP header to client's IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Set X-Forwarded-For header to include all client IPs
        proxy_set_header Host $host; # Pass the original hostname in the Host header
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the original protocol in the X-Forwarded-Proto header
        proxy_set_header X-Forwarded-Ssl on; # Flag that the connection is secure for clients behind a proxy
    }

    # Configure custom error pages
    error_page 404 /404.html; # Define custom 404 error page
    location = /404.html {
        internal; # Specify that this page can only be accessed from within the server
    }

    error_page 500 502 503 504 /50x.html; # Define custom 50x error pages
    location = /50x.html {
        internal; # Specify that this page can only be accessed from within the server
    }

    # Configure server logs
    access_log /var/log/nginx/example.com-access.log; # Log all successful requests to this file
    error_log /var/log/nginx/example.com-error.log; # Log all error and warning messages to this file
}

# Configure HTTPS server
server {
    listen 443 ssl; # Listen for incoming connections on port 443 using HTTPS
    server_name example.com; # Domain name for the server
    ssl_certificate /etc/ssl/certs/example.com.crt; # Path to SSL certificate
    ssl_certificate_key /etc/ssl/private/example.com.key; # Path to SSL private key

    # Configure caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1d; # Set cache expiration to 1 day
        add_header Cache-Control "public"; # Set caching type to public
    }

    # Configure proxy settings
    location / {
        proxy_pass http://127.0.0.1:8080; # Proxy requests to localhost on port 8080
        proxy_set_header X-Real-IP $remote_addr; # Set X-Real-IP header to client's IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Set X-Forwarded-For header to include all client IPs
        proxy_set_header Host $host; # Pass the original hostname in the Host header
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the original protocol in the X-Forwarded-Proto header
        proxy_set_header X-Forwarded-Ssl on; # Flag that the connection is secure for clients behind a proxy
    }

    # Configure custom error pages
    error_page 404 /404.html; # Define custom 404 error page
    location = /404.html {
        internal; # Specify that this page can only be accessed from within the server
    }

    error_page 500 502 503 504 /50x.html; # Define custom 50x error pages
    location = /50x.html {
        internal; # Specify that this page can only be accessed from within the server
    }

    # Configure server logs
    access_log /var/log/nginx/example.com-access.log; # Log all successful requests to this file
    error_log /var/log/nginx/example.com-error.log; # Log all error and warning messages to this file
}
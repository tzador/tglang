location / {
     proxy_pass http://localhost:8000; #setting the proxy, or server that will handle requests for this location
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #adding the client's IP address to the request before forwarding it
     proxy_set_header Host $host; #setting the Host header to the current request's hostname
     proxy_set_header X-Real-IP $remote_addr; #setting the X-Real-IP header with the client's IP address
     proxy_set_header X-Forwarded-Proto $scheme; #setting the X-Forwarded-Proto header to the protocol used for the current request
     proxy_buffering off; #disabling buffering of responses from the proxied server
     proxy_http_version 1.1; #using HTTP/1.1 for proxy connections to the backend server
     proxy_set_header Upgrade $http_upgrade; #setting the Upgrade header to allow upgrades of the connection to WebSocket protocol
     proxy_set_header Connection "Upgrade"; #setting the Connection header to keep the connection open for WebSocket connections
     proxy_connect_timeout 90; #setting a timeout of 90 seconds for connecting to the proxied server
     proxy_read_timeout 90; #setting a timeout of 90 seconds for reading data from the proxied server
     proxy_redirect off; #disabling redirects from the proxied server
     proxy_ssl_server_name on; #enabling verification of the hostname on the secure link
     proxy_ssl_protocols TLSv1.2 TLSv1.3; #specifying the TLS protocols to use for secure connections
     proxy_ssl_certificate /path/to/certificate.crt; #setting the path to the SSL certificate file
     proxy_ssl_certificate_key /path/to/certificate.key; #setting the path to the SSL certificate key file
}
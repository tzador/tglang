user nginx; # sets the user that the NGINX worker processes will run as, to improve security
worker_processes auto; # automatically sets the number of NGINX worker processes based on the number of CPU cores
pid /run/nginx.pid; # sets the file for storing the NGINX process ID

events {
  worker_connections 1024; # sets the maximum number of simultaneous connections per worker process
}

http {
  include /etc/nginx/mime.types; # sets the file containing MIME types and their associated file extensions
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" ' # configures the format of the access log
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main; # sets the file for storing the access log

  sendfile on; # enables the use of sendfile() to transmit files when possible
  tcp_nopush on; # enables the use of the TCP_NOPUSH socket option

  keepalive_timeout 65; # sets the maximum number of seconds that a connection can remain idle before being closed

  server {
    listen 80; # sets the TCP port on which NGINX will accept connections
    server_name example.com; # sets the name of the server

    location / {
      root /srv/http; # sets the root directory for requests
      index index.html; # sets the default file to serve when a directory is requested
    }

    error_page 404 /404.html; # sets the specified response as the error page for a given status code
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
      root /usr/share/nginx/html;
    }
    
    location ~ \.(gif|jpg|png)$ { # sets the location for handling requests for image files
      root /data/images; # sets the root directory for requests
    }
  }
}
#This is a complex NGINX configuration file with multiple server blocks and different locations defined

#Defining a server block for the website example.com
server {

listen 80; #listening on port 80

server_name example.com; #server name

location / {
root /var/www/example.com; #the root directory for the website
index index.html; #the default file to display if no file is specified in the URL
}
}

#Defining another server block for the website blog.example.com
server {

listen 80; #listening on port 80

server_name blog.example.com; #server name

location / {
root /var/www/blog.example.com; #the root directory for the website
index index.php; #the default file to display if no file is specified in the URL
}

#Defining a special location within the server block
location /blog {
alias /var/www/blog.example.com/blog; #using the alias directive to specify a different location for the URL with /blog
access_log /var/log/nginx/blog_access.log; #logging access to this specific location
}

#Defining a third server block for a different website
server {

listen 80; #listening on port 80

server_name otherwebsite.com; #server name

location / {
root /var/www/otherwebsite.com; #the root directory for the website
}

#Defining a special location within the server block
location ~ \.php$ { 
root /var/www/otherwebsite.com; #using the ~ modifier to specify a regex match for any URL ending in .php
fastcgi_pass unix:/run/php/php7.4-fpm.sock; #using fastcgi_pass to process PHP files with PHP-FPM
}

#Defining a location that requires authentication
location /admin {
auth_basic "Restricted"; #using auth_basic to require authentication
auth_basic_user_file /etc/nginx/.htpasswd; #specifying the location of the password file
}

#Defining a location that only allows certain IP addresses to access
location /admin/files {
allow 192.168.1.1; #allowing access for specific IP addresses
deny all; #denying access for any other IP addresses
}

#Defining a special location for error pages
error_page 403 404 500 502 503 504 /error.html;

#Defining a custom error page in HTML
location /error.html {
root /var/www/html;
internal; #using the internal modifier to prevent external access to this location
}

#Defining a gzip compression configuration
gzip on; #turning gzip compression on
gzip_vary on; #adding vary header for proper caching
gzip_types text/plain text/css application/json; #specifying the types of files that should be compressed
gzip_proxied any; #enabling gzip compression for all proxied requests
gzip_comp_level 6; #specifying the compression level
gzip_buffers 16 8k; #setting the buffer size for gzip compression
gzip_disable "MSIE [1-6]\.(?!.*SV1)";
return 301 https://www.example.com$request_uri; #redirecting all HTTP traffic to HTTPS with a 301 redirect
}
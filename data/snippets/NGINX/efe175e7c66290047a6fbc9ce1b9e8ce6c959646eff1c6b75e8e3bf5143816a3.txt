server {
        listen 80;
        server_name example.com www.example.com;
        
        charset utf-8;
        
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
}

server {
        listen 443 ssl;
        server_name example.com;
        
        ssl_certificate /path/to/certificate.crt;
        ssl_certificate_key /path/to/certificate.key;
        
        # Enable HTTP/2 support
        http2_push_preload on;
        
        # Enable OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Add HSTS header 
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Set default root and index
        root /var/www/example.com/public;
        index index.html;
        
        location / {
                # Enable Gzip compression
                gzip on;
                gzip_types text/plain application/json;
                
                # Enable caching
                expires 1d;
                add_header Cache-Control "public";
        }
        
        # Enable client-side caching for static assets
        location ~* \.(?:jpg|jpeg|gif|png|svg|css|js|ttf|woff)$ {
                expires 7d;
                add_header Cache-Control "public";
        }
        
        # Enable server-side caching for assets that don't change often
        location ~* \.(?:psd|ico|xml)$ {
                expires 30d;
                add_header Cache-Control "public";
        }
        
        # Deny access to .htaccess files
        location ~ /\.ht {
                deny all;
        }
        
        # Enable rate limiting for malicious requests
        limit_req zone=szone burst=10 nodelay;
        limit_req_status 429;
        
        # Proxy requests to application server
        location /api/ {
                proxy_pass http://localhost:8000/;
        }
        
        # Error pages
        error_page 404 /404.html;
        # Custom error page for 500 errors
        error_page 500 502 503 504 /500.html;
        
        # Enable Gzip compression on error pages
        gzip_static on;
        
        # Hide nginx version
        server_tokens off;
        
        # Enable cross-origin resource sharing (CORS)
        add_header Access-Control-Allow-Origin * always;
        
        # Protect against clickjacking attack
        add_header X-Frame-Options SAMEORIGIN;
        
        # Enable XSS protection
        add_header X-XSS-Protection "1; mode=block";
        
        # Enable MIME type sniffing protection
        add_header X-Content-Type-Options nosniff;
}
# HTTP server

# setting worker processes
worker_processes auto;

# configuring error log
error_log /var/log/nginx/error.log;

# setting number of connections per worker process
events {
  worker_connections 1024;
}

http {
  # configuring MIME types
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # setting log format
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  # defining custom server error pages
  error_page 500 502 503 504 /50x.html;

  # configuring server error log
  location = /50x.html {
    root html;
  }

  # setting upstream servers
  upstream backend {
    server backend1.example.com;
    server backend2.example.com;
  }

  # defining server configuration
  server {
    # listening on port 80
    listen 80;

    # setting server name
    server_name example.com www.example.com;

    # allowing file uploads up to 100MB in size
    client_max_body_size 100M;

    # setting gzip compression
    gzip on;

    # setting response buffer size
    open_file_cache max=100 inactive=20s;

    # redirecting requests to HTTPS
    if ($scheme = http) {
      return 301 https://$server_name$request_uri;
    }

    # handling requests to /api
    location /api {
      # proxying requests to upstream servers
      proxy_pass http://backend;

      # setting proxy headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # handling requests to /static
    location /static/ {
      # serving static files from local directory
      alias /var/www/example/static/;
    }

    # handling requests to root
    location / {
      # proxying requests to backend servers
      proxy_pass http://backend;
    }
  }

  # including additional configuration files
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
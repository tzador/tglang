# specify a resolver for external DNS lookups
resolver 8.8.8.8;
# configure a load balancer with round-robin balancing algorithm
upstream myapp {
    server 192.168.1.1;
    server 192.168.1.2;
}
# set additional HTTP headers for all server responses
add_header X-Frame-Options "SAMEORIGIN";
add_header X-XSS-Protection "1; mode=block";
add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
# define a location for serving static files
location /static {
    root /var/www/myapp;
}
# enable gzip compression for supported content types
gzip on;
gzip_types text/plain application/xml text/css;
# configure a server block for the myapp.com domain
server {
    listen 80;
    server_name myapp.com;
    # redirect all traffic to HTTPS
    return 301 https://$server_name$request_uri;
}
# configure a server block for the secure myapp.com domain
server {
    listen 443 ssl http2;
    server_name myapp.com;
    # specify SSL/TLS certificates and enable OCSP stapling
    ssl_certificate /etc/nginx/ssl/myapp.crt;
    ssl_certificate_key /etc/nginx/ssl/myapp.key;
    ssl_stapling on;
    # enable and configure HTTP/2 support
    http2_push_preload on;
    http2_recv_timeout 3m;
    # define a location for the myapp API
    location /api/ {
        proxy_pass http://myapp;
        # enable CORS headers
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    }
    # define a location for the myapp frontend
    location / {
        # serve static index.html file
        try_files $uri /index.html;
        # set root directory for serving frontend files
        root /var/www/myapp;
    }
}
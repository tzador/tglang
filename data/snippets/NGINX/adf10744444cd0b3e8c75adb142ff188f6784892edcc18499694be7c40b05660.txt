server {
    # sets the server name and port
    listen 80;
    server_name www.example.com;

    # sets the root directory for requests to this server
    root /var/www/example.com;

    # defines the default index file for this server
    index index.html;

    # sets the access log file and format
    access_log /var/log/nginx/www.example.com.log;
    log_format combined '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    # sets the error log file and level
    error_log /var/log/nginx/www.example.com_error.log debug;

    # handles requests for static files
    location ~* \.(jpg|jpeg|gif|png|css|js|ico)$ {
        expires max;
    }

    # handles requests for dynamic files
    location /api/ {
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Host $http_host;
	    proxy_set_header X-NginX-Proxy true;
	    proxy_pass http://127.0.0.1:8000/;
    }

    # redirect to HTTPS if request is made with HTTP
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }

    # enables gzip compression for response
    gzip on;
    gzip_types text/plain text/css application/json;

    # enables caching with specific rules
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=cache:10m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";

    # sets the max body size for client request
    client_max_body_size 10M;

    # sets the timeout for the server connections
    keepalive_timeout 60s;

    # hide server signature from response headers
    server_tokens off;

    # allow only selected user agents to access server
    if ($http_user_agent ~* (BadBot|EvilBot|MaliciousBot) ) {
        return 403;
    }
}
# Set the worker processes to match the number of available CPU cores
worker_processes auto;

# Create a variable for the document root directory
root /var/www/example.com/public;

# Define an upstream server pool for load balancing
upstream backend {
    server 127.0.0.1:8000;
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
}

# Configure the server to listen on port 80
server {
    listen 80;

    # Set the server name as example.com
    server_name example.com;

    # Define the location for the main application
    location / {
        # Reverse proxy requests to the upstream server pool
        proxy_pass http://backend;

        # Set the HTTP version to 1.1 for better performance
        proxy_http_version 1.1;

        # Enable HTTP keepalive connections for better performance
        proxy_set_header Connection "keep-alive";

        # Set headers to improve caching and compression
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        # Enable caching for faster response times
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 1m;

        # Enable gzip compression for smaller file sizes
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_types application/json text/css application/javascript;
        gzip_vary on;
    }
}

# Configure the server to listen on port 443 for HTTPS requests
server {
    listen 443;

    # Set the server name as example.com
    server_name example.com;

    # Enable the use of SSL
    ssl on;

    # Specify the SSL certificate and key
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # Define the location for the main application
    location / {
        # Reverse proxy requests to the upstream server pool
        proxy_pass http://backend;

        # Set the HTTP version to 1.1 for better performance
        proxy_http_version 1.1;

        # Enable HTTP keepalive connections for better performance
        proxy_set_header Connection "keep-alive";

        # Set headers to improve caching and compression
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        # Enable caching for faster response times
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 1m;

        # Enable gzip compression for smaller file sizes
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_types application/json text/css application/javascript;
        gzip_vary on;
    }
}
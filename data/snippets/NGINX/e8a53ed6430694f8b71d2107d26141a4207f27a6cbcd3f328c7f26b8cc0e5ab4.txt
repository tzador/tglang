server {
    listen 443 ssl; # listen for incoming SSL connections on port 443
    server_name example.com; # sets the host name for this server block

    # defines the SSL certificate and key to use for SSL/TLS connections
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    # enable SSL sessions reuse to improve performance
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;

    # enable TLSv1.3 and TLSv1.2 by default
    ssl_protocols TLSv1.3 TLSv1.2;

    # whitelist ciphers based on their strength
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256';

    # specify the types of Diffie-Hellman parameters to use
    # generate a strong one using "openssl dhparam" command
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # enable OCSP stapling to verify SSL certificate status
    ssl_stapling on;
    ssl_stapling_verify on;

    # improve SSL performance by enabling session tickets
    # requires the TLS support in NGINX build
    ssl_session_tickets off;

    # enable HSTS header to protect against attacks
    # only enable this if you have a valid SSL certificate for all subdomains of your domain
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # specify the location of the website root directory
    root /var/www/example.com/;

    # specify which directory and files to look for when a client requests a specific URL
    location / {
        index index.html;
        try_files $uri $uri/ =404;
    }
}
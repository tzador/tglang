# This is an example of a basic NGINX server configuration

# Set the user and group for running NGINX
user www-data;
worker_processes auto;
pid /run/nginx.pid;

# Specify the location of error log and access log files
error_log /var/log/nginx/error.log;
events {
  worker_connections 768;
  # Set the maximum number of open connections per worker process
  # A higher value will allow NGINX to handle more concurrent requests
  # But will also use more resources
  # Choose a value that suits your server's capabilities
  multi_accept on;
}
http {
  server_tokens off; # Disable server tokens to enhance security
  # Specify the MIME types to be served by NGINX
  types {
    text/html html;
    text/css css;
    application/javascript js;
    image/jpeg jpeg jpg;
    image/png png;
  }
  include /etc/nginx/mime.types;
  # Set the default type for a resource if the requested file extension
  # is not found in the MIME types list
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent"';
  # Set the path and format for the access log file
  access_log /var/log/nginx/access.log main;
  # Set the buffer size for the access log
  # A higher value will allow for longer logs and reduce disk writes
  # But will also use more memory
  # Choose a value that suits your server's capabilities
  access_log_buffer_size 64k;
  # Configure server block for the default virtual host
  server {
    listen 80 default_server; # Listen for HTTP requests on port 80
    server_name _; # Default virtual server, respond to any hostname
    # Set the root directory for serving files
    root /usr/share/nginx/html;
    # Set the default page to serve for requests to "/"
    index index.html index.htm index.nginx-debian.html;
    location / {
      try_files $uri $uri/ =404; # Return a 404 error if file not found
    }
    # Configure error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /var/www/html;
    }
    # Enable gzip compression for responses
    gzip on;
    # Set the desired compression level
    gzip_comp_level 6;
    # Enable caching of assets
    # Expires headers will be set to "access plus 1 month"
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }
  }
}
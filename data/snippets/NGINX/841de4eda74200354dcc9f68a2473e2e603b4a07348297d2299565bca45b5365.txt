# location block for serving static files
location /static/ {
    alias /var/www/html/static/; # set the location of the directory containing static files
    expires 1d; # set caching header to expire after 1 day
    add_header Cache-Control public; # set Cache-Control header to allow caching
    access_log off; # disable access log for static files
    log_not_found off; # disable error logging for missing files
}

# location block for handling server errors
error_page 500 502 503 504 /error.html; # define error page to be displayed for specified errors
location = /error.html { # location block for error page
    root /var/www/html; # set root directory for error page
    internal; # internal directive prevents clients from accessing error page directly
}

# HTTPS server block
server {
    listen 443 ssl; # listen on port 443 for HTTPS requests
    server_name www.example.com; # set server name

    ssl_certificate /etc/nginx/ssl/www.example.com.crt; # set path to SSL certificate
    ssl_certificate_key /etc/nginx/ssl/www.example.com.key; # set path to SSL private key

    location / {
        proxy_pass https://127.0.0.1:8000/; # set reverse proxy to pass requests to specified address and port
        proxy_ssl_trusted_certificate /etc/nginx/ssl/ca.crt; # specify path to trusted CA certificate
        proxy_set_header Host $host; # set Host header with original server name
        proxy_set_header X-Real-IP $remote_addr; # set X-Real-IP header with client's real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # set X-Forwarded-For header with client's original IP address
        proxy_ssl_verify on; # enable verification of backend server's SSL certificate
        proxy_ssl_certificate /etc/nginx/ssl/backend.crt; # set path to backend server's SSL certificate
        proxy_ssl_certificate_key /etc/nginx/ssl/backend.key; # set path to backend server's SSL private key
    }

    # location block for handling API requests
    location /api/ {
        proxy_pass http://127.0.0.1:8001/; # set reverse proxy to pass requests to specified address and port
        proxy_set_header Host $host; # set Host header with original server name
        proxy_set_header X-Real-IP $remote_addr; # set X-Real-IP header with client's real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # set X-Forwarded-For header with client's original IP address
    }
}
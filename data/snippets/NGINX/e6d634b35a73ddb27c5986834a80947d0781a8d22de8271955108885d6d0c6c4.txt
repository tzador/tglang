server {
    # listen on port 80 for http requests
    listen 80;
    
    # specify the domain name for the server
    server_name example.com;
    
    # set the root directory for the server
    root /var/www/example;
    
    # define location block for handling requests to the /images/ directory
    location /images/ {
        # set the location of the static content for this location block
        # and disable access logs for this location
        alias /var/www/example/images/;
        access_log off;
    }
    
    # define location block for handling php requests
    location ~ \.php$ {
        # pass requests to php-fpm service and set fastcgi parameters
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # enable fastcgi caching for this location block and set cache key
        fastcgi_cache my_fastcgi_cache;
        fastcgi_cache_key "$scheme$request_method$host$request_uri";
        
        # specify the duration to cache responses for (1 hour)
        fastcgi_cache_valid 200 301 302 1h;
        
        # enable and set headers to include in the cache key
        fastcgi_cache_bypass $http_pragma;
        fastcgi_cache_bypass $http_authenticate;
        fastcgi_cache_bypass $http_if_modified_since;
        fastcgi_cache_bypass $http_cache_control;
        
        # set cache zone and cache settings
        fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache_zone:10m inactive=60m;
    }
    
    # define location block for handling requests to the /api/ directory
    location /api/ {
        # pass requests to upstream server and disable caching
        proxy_pass http://api.example.com;
        proxy_cache off;
        
        # enable gzip compression and set minimum file size for compression
        gzip on;
        gzip_min_length 1000;
        
        # set headers to include in the response
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # enable caching for upstream responses and set cache key
        proxy_cache my_proxy_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        
        # specify the duration to cache responses for (10 minutes)
        proxy_cache_valid 200 301 302 10m;
    }
    
    # define location block for handling requests to the /admin/ directory
    location /admin/ {
        # pass requests to upstream server and enable caching
        proxy_pass http://admin.example.com;
        proxy_cache my_proxy_cache;
        
        # set cache key
        proxy_cache_key "$scheme$request_method$host$request_uri";
        
        # enable caching only for responses with status codes 200, 301, and 302
        proxy_cache_valid 200 301 302;
        
        # set headers to include in the cache key
        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authenticate;
        proxy_cache_bypass $http_if_modified_since;
        proxy_cache_bypass $http_cache_control;
    }
    
    # location block for handling requests to the /blog/ directory
    location /blog/ {
        # pass requests to the wordpress app
        try_files $uri $uri/ /index.php$is_args$args;
    }
    
    # specify location block for handling requests for static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        # enable caching for these static files and set cache key
        # set cache duration to 1 year
        expires 1y;
        add_header Cache-Control "public";
        add_header X-Frame-Options NONE;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }
    
    # return a 404 error for any requests that do not match a location block
    location / {
        return 404;
    }
}
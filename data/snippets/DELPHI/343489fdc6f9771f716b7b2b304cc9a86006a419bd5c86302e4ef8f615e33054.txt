unit MyUnit;

interface

type
  // Defines a record type with two string fields
  MyRecord = record
    Field1: string;
    Field2: string;
  end;

  // Defines a class type with a private integer field and public methods
  MyClass = class
  private
    FInteger: Integer;
  public
    constructor Create;
    procedure SetInteger(const Value: Integer);
    function GetInteger: Integer;
    procedure PrintInteger;
  end;

implementation

{ MyClass }

// Constructor of the MyClass class
constructor MyClass.Create;
begin
  // Initialize the private integer field
  FInteger := 0;
end;

// Setter method for the private integer field
procedure MyClass.SetInteger(const Value: Integer);
begin
  FInteger := Value;
end;

// Getter method for the private integer field
function MyClass.GetInteger: Integer;
begin
  Result := FInteger;
end;

// Method that prints the value of the private integer field
procedure MyClass.PrintInteger;
begin
  // Uses the Format function to format the string output
  WriteLn(Format('The value of FInteger is %d', [FInteger]));
end;

end.
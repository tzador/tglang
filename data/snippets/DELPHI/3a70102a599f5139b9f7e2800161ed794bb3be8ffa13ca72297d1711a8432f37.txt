procedure Sort(var Arr: array of Integer; Low, High: Integer);
var
  I, P, T: Integer;
begin
  //check if array is empty or only has one element
  if High > Low then
  begin
    //pick a pivot element in the middle of the array
    P := Arr[(Low + High) div 2];
    I := Low;
    T := High;
    //partition the array into two subarrays, with elements greater than the pivot on one side and elements lesser than the pivot on the other side
    while I <= T do
    begin
      while Arr[I] < P do
        Inc(I);
      while Arr[T] > P do
        Dec(T);
      if I <= T then
      begin
        //swap elements at indices I and T
        Arr[I] := Arr[I] + Arr[T];
        Arr[T] := Arr[I] - Arr[T];
        Arr[I] := Arr[I] - Arr[T];
        Inc(I);
        Dec(T);
      end;
    end;
    //recursive calls to sort subarrays
    Sort(Arr, Low, T);
    Sort(Arr, I, High);
  end;
end;
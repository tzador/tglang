procedure MergeSort(var A : array of Integer; l,r : Integer);
var
  i,j,k,m,n : integer;
  Temp : array of Integer;
begin
  m := (l+r) div 2; //finding middle index
  if (r-l) > 1 then //check if the array has more than 1 element
    begin
      MergeSort(A,l,m); //recursively split array into smaller parts
      MergeSort(A,m+1,r);
      //merge two sorted arrays into a temp array
      i := l; //start index for first array
      j := m+1; //start index for second array
      k := 0; //start index for temp array
      while (i<=m) and (j<=r) do //loop until one of the arrays is fully merged
        begin
          if A[i] < A[j] then //compare elements from both arrays
            begin
              Temp[k] := A[i]; //add smaller element to temp array
              i := i+1; //increment index for first array
            end
          else
            begin
              Temp[k] := A[j];
              j := j+1;
            end;
          k := k+1; //increment index for temp array
        end;
      //copy remaining elements from first array to temp array
      while i<=m do 
        begin
          Temp[k] := A[i];
          i := i+1;
          k := k+1;
        end;
      //copy remaining elements from second array to temp array
      while j<=r do
        begin
          Temp[k] := A[j];
          j := j+1;
          k := k+1;
        end;
      //copy temp array back to original array
      for n := 0 to (r-l) do
        A[l+n] := Temp[n];
    end;
end;
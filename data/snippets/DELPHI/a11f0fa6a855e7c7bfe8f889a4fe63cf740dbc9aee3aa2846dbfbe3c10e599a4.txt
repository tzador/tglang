//This program uses a brute force method to find the nth prime number
program FindNthPrimeNumber;

uses crt;

var
  n, primeCount, currentNumber, i: integer;
  isPrime: boolean;
begin
  clrscr;

  //Prompt user to enter a positive integer
  write('Enter a positive integer: ');
  readln(n);

  //Validate input
  while n < 1 do
  begin
    writeln('Invalid input. Please enter a positive integer.');
    write('Enter a positive integer: ');
    readln(n);
  end;

  //initialize primeCount to 0
  primeCount := 0;

  //initialize currentNumber to 2 (first prime number)
  currentNumber := 2;

  //loop until primeCount is equal to n
  while primeCount < n do
  begin
    //Assume currentNumber is prime
    isPrime := true;

    //check if currentNumber is divisible by any number from 2 to currentNumber - 1
    //if it is, then it's not prime
    for i := 2 to currentNumber - 1 do
    begin
      if currentNumber mod i = 0 then
      begin
        isPrime := false;
        break;
      end;
    end;

    //if currentNumber is prime, increment primeCount
    if isPrime then
    begin
      primeCount := primeCount + 1;
    end;

    //increment currentNumber by 1 for next iteration
    currentNumber := currentNumber + 1;
  end;

  //Output nth prime number
  writeln('The ', n, 'th prime number is ', currentNumber - 1, '.');

  readln;
end.
//This code snippet creates a class named Employee with properties and methods

type
  //Declares a class named 'Employee'
  Employee = class
  private
    //Defines private properties for the class
    name: string;
    employeeID: integer;
    salary: double;
  public
    //Defines public getter and setter methods for the properties
    function GetName: string;
    procedure SetName(value: string);
    function GetID: integer;
    procedure SetID(value: integer);
    function GetSalary: double;
    procedure SetSalary(value: double);
    //Defines a method that prints out the employee's information
    procedure PrintInfo;
    //Defines a constructor to initialize the properties
    constructor Create(newName: string; newID: integer; newSalary: double);
  end;
  
//Defines the implementation of the methods for the Employee class
implementation

//Getter method for the name property
function Employee.GetName: string;
begin
  Result := name;
end;

//Setter method for the name property
procedure Employee.SetName(value: string);
begin
  name := value;
end;

//Getter method for the employeeID property
function Employee.GetID: integer;
begin
  Result := employeeID;
end;

//Setter method for the employeeID property
procedure Employee.SetID(value: integer);
begin
  employeeID := value;
end;

//Getter method for the salary property
function Employee.GetSalary: double;
begin
  Result := salary;
end;

//Setter method for the salary property
procedure Employee.SetSalary(value: double);
begin
  salary := value;
end;

//Method that prints out the employee's information
procedure Employee.PrintInfo;
begin
  writeln('Employee Name: ', name);
  writeln('Employee ID: ', employeeID);
  writeln('Salary: ', salary:0:2);
end;

//Constructor to initialize the properties
constructor Employee.Create(newName: string; newID: integer; newSalary: double);
begin
  name := newName;
  employeeID := newID;
  salary := newSalary;
end;

//Creates an instance of the Employee class
var
  emp: Employee;

//Sets the properties for the employee instance
emp := Employee.Create('John Smith', 1234, 50000);

//Calls the PrintInfo method to output the employee's information
emp.PrintInfo;
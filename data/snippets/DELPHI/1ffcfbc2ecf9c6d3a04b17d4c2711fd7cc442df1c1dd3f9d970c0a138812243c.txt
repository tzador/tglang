// This code snippet is a complex function that takes in an array of numbers and returns a new array
// that contains the square root of each number in the original array.

function SquareRootArray(arr : Array of Integer) : Array of Real;
var
  i : Integer;
begin
  // Initialize a new array with the same size as the input array
  SetLength(result, Length(arr));

  // Loop through the input array
  for i := 0 to Length(arr) - 1 do
  begin
    // Calculate the square root of the current number in the array
    result[i] := Sqrt(arr[i]);
  end;

  // Return the new array with square root values
  Result := result;
end;

// Example usage
var
  input : Array of Integer;
  output : Array of Real;
begin
  // Assign values to input array
  input := [4, 9, 16, 25, 36];

  // Pass input array to SquareRootArray function and assign the returned array to output
  output := SquareRootArray(input);

  // Output the contents of the output array, which should contain [2, 3, 4, 5, 6]
  for i := 0 to Length(output) - 1 do
  begin
    // Output the square root value with 2 decimal places
    WriteLn(Format('%.2f', [output[i]]));
  end;
end.
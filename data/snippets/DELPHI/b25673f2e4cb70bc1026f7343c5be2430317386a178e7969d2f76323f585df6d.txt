unit Main;

interface

uses
  System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Grids, Vcl.DBGrids, Data.DB, Datasnap.DBClient, Datasnap.Provider,
  Vcl.DBActns, System.Actions, Vcl.ActnList, Vcl.ComCtrls, Vcl.DBCtrls,
  Data.Win.ADODB, Winapi.ActiveX, ShellAPI;

type
  TMainForm = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    DBGrid1: TDBGrid;
    DataSource1: TDataSource;
    ClientDataSet1: TClientDataSet;
    ClientDataSet1ID: TIntegerField;
    ClientDataSet1Name: TStringField;
    ClientDataSet1Age: TIntegerField;
    ClientDataSet1Address: TStringField;
    ClientDataSet1PhoneNumber: TStringField;
    ClientDataSet1Email: TStringField;
    ClientDataSet1Notes: TMemoField;
    DBNavigator1: TDBNavigator;
    ActionList1: TActionList;
    DataSetFirst1: TDataSetFirst;
    DataSetNext1: TDataSetNext;
    DataSetPrior1: TDataSetPrior;
    DataSetLast1: TDataSetLast;
    DataSetInsert1: TDataSetInsert;
    DataSetDelete1: TDataSetDelete;
    DataSetEdit1: TDataSetEdit;
    DataSetCancel1: TDataSetCancel;
    DataSetApplyUpdates1: TDataSetApplyUpdates;
    DataSetRefresh1: TDataSetRefresh;
    Panel3: TPanel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit5: TEdit;
    Memo1: TMemo;
    procedure FormCreate(Sender: TObject);
    procedure DBNavigator1BeforeAction(Sender: TObject;
      Button: TNavigateBtn);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure ClientDataSet1BeforePost(DataSet: TDataSet);
  private
    { Private declarations }
    FConnection: TADOConnection;
    procedure Connect;
    procedure Disconnect;
    procedure LoadData;
    procedure AddRecord;
    procedure DeleteRecord;
    procedure EditRecord;
  public
    { Public declarations }
  end;

var
  MainForm: TMainForm;

implementation

{$R *.dfm}

procedure TMainForm.FormCreate(Sender: TObject);
begin
  Connect;
  LoadData;
end;

procedure TMainForm.Connect;
begin
  FConnection := TADOConnection.Create(Self);
  FConnection.ConnectionString :=
    'Provider=Microsoft.Jet.OLEDB.4.0;Data Source=' +
    ExtractFilePath(ParamStr(0)) + 'Data.mdb';
  FConnection.LoginPrompt := False;
  FConnection.Connected := True;
end;

procedure TMainForm.Disconnect;
begin
  if FConnection.Connected then
    FConnection.Connected := False;
  FConnection.Free;
end;

procedure TMainForm.LoadData;
begin
  ClientDataSet1.Active := False;
  ClientDataSet1.Active := True;
end;

procedure TMainForm.AddRecord;
begin
  ClientDataSet1.Append;
end;

procedure TMainForm.DeleteRecord;
begin
  ClientDataSet1.Delete;
end;

procedure TMainForm.EditRecord;
begin
  ClientDataSet1.Edit;
end;

procedure TMainForm.DBNavigator1BeforeAction(Sender: TObject;
  Button: TNavigateBtn);
begin
  case Button of
    nbInsert: AddRecord;
    nbDelete: DeleteRecord;
    nbEdit: EditRecord;
  end;
end;

procedure TMainForm.DBGrid1DblClick(Sender: TObject);
var
  url: string;
begin
  url := ClientDataSet1.FieldByName('Email').AsString;
  ShellExecute(Self.Handle, 'open', PChar(url), nil, nil, SW_SHOWNORMAL);
end;

procedure TMainForm.ClientDataSet1BeforePost(DataSet: TDataSet);
begin
  if ClientDataSet1.State = dsInsert then
    ClientDataSet1ID.AsInteger := GetNewID;
end;

function GetNewID: Integer;
begin
  //Code to get new ID from database
end;

end.
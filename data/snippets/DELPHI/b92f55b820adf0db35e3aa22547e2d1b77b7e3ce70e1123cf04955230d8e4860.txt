// This is a code snippet in DELPHI
// It creates a class named "Rectangle" with properties for its height, width, and color

type
    Rectangle = class     // creating a class
    private
        fWidth: Integer;    // declaring private fields for width and height
        fHeight: Integer;
        fColor: TColor;
    public
        constructor Create(aWidth, aHeight: Integer);    // creating a constructor that takes in width and height parameters
        property Width: Integer read fWidth write fWidth;    // defining properties for width, height, and color
        property Height: Integer read fHeight write fHeight;
        property Color: TColor read fColor write fColor;
        function GetArea: Integer;    // declaring a function to calculate the area of the rectangle
        function GetPerimeter: Integer;    // declaring a function to calculate the perimeter of the rectangle
    end;
    
constructor Rectangle.Create(aWidth, aHeight: Integer);    // implementing the constructor
begin
    Width := aWidth;    // setting the value of the width property
    Height := aHeight;    // setting the value of the height property
    Color := clBlack;    // setting the default color of the rectangle to black
end;

function Rectangle.GetArea: Integer;    // implementing the GetArea function
begin
    Result := Width * Height;
end;

function Rectangle.GetPerimeter: Integer;    // implementing the GetPerimeter function
begin
    Result := 2 * (Width + Height);
end;

// Sample usage of the Rectangle class
var
    myRectangle: Rectangle;    // declaring an instance of the Rectangle class
begin
    myRectangle := Rectangle.Create(5, 10);    // creating a new rectangle object with a width of 5 and height of 10
    myRectangle.Color := clRed;    // setting the color of the rectangle to red
    WriteLn('The area of my rectangle is: ', myRectangle.GetArea);    // outputting the area of the rectangle
    WriteLn('The perimeter of my rectangle is: ', myRectangle.GetPerimeter);    // outputting the perimeter of the rectangle
end.
// Declaration of a record type
type
  TStudent = record
    name: string; // name of the student
    age: integer; // age of the student
    courses: array of string; // array of courses enrolled
    GPA: real; // grade point average of the student
  end;
  
// Creation of an array of TStudent
var
  students: array of TStudent;
  
// Loop through the array and fill in student information
for i := 0 to Length(students) - 1 do
begin
  Write('Enter name of student ' + IntToStr(i + 1) + ': ');
  ReadLn(students[i].name);
  
  Write('Enter age of student ' + IntToStr(i + 1) + ': ');
  ReadLn(students[i].age);
  
  Write('Enter number of courses enrolled by student ' + IntToStr(i + 1) + ': ');
  numCourses := 0;
  ReadLn(numCourses);
  
  // Set length of courses array to number of courses entered
  SetLength(students[i].courses, numCourses);
  
  // Loop through courses array and fill in with course names
  for j := 1 to Length(students[i].courses) do
  begin
    Write('Enter name of course ' + IntToStr(j) + ': ');
    ReadLn(students[i].courses[j-1]);
  end;
  
  Write('Enter GPA of student ' + IntToStr(i + 1) + ': ');
  ReadLn(students[i].GPA);
end;
  
// Output all student information in a tabular form
Write('-----------------------------------');
Write('Name' + Chr(9) + 'Age' + Chr(9) + 'Courses Enrolled' + Chr(9) + 'GPA');
Write('-----------------------------------');
for i := 0 to Length(students) - 1 do
begin
  Write(students[i].name + Chr(9) + IntToStr(students[i].age) + Chr(9) + String.Join(', ', students[i].courses) + Chr(9) + FloatToStr(students[i].GPA));
end;
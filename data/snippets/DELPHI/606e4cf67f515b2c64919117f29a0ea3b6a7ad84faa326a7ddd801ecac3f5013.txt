unit MyUnit;

interface

uses
  SysUtils,
  Classes;

type
  // This is a custom exception class
  EMyException = class(Exception);

  // This is a generic interface
  IGenericInterface <T> = interface
    procedure GenericMethod(Value: T);
  end;

  // This is a generic class
  TGenericClass <T> = class(TInterfacedObject, IGenericInterface <T>)
    procedure GenericMethod(Value: T);
  end;

implementation

// Implementation of the generic method
procedure TGenericClass <T>.GenericMethod(Value: T);
begin
  // add validation for different types of 'Value'
  if Value is Integer then
  begin
    Writeln('This is an Integer: ' + IntToStr(Integer(Value)));
  end
  else if Value is String then
  begin
    Writeln('This is a String: ' + String(Value));
  end
  else if Value is Boolean then
  begin
    Writeln('This is a Boolean: ' + BoolToStr(Boolean(Value), True));
  end
  else
  begin
    // Throw an exception if the type is not supported
    raise EMyException.Create('This type is not supported!');
  end;
end;

end.
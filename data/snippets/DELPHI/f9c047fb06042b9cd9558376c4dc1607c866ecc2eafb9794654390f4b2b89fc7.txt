// This code snippet shows how to implement bubble sort algorithm in Delphi

// Define an array of integers
var
  numbers: array[1..10] of Integer;
  i, j, temp: Integer;

// Use a loop to randomly populate the array with values
for i := Low(numbers) to High(numbers) do
    numbers[i] := Random(100);

// Use another loop to iterate through the array and swap the values if necessary
for i := Low(numbers) to High(numbers) - 1 do
  for j := Low(numbers) to High(numbers) - i - 1 do
    if numbers[j] > numbers[j + 1] then
    begin
      // Swap the values using a temporary variable
      temp := numbers[j];
      numbers[j] := numbers[j + 1];
      numbers[j + 1] := temp;
    end;

// Print the sorted array
for i := Low(numbers) to High(numbers) do
  Write(numbers[i], ' ');
// This code snippet is a function that checks if a given number is prime
// The input parameter num is an integer
function isPrime(num: integer): boolean;

//Initializing the output variable
var
  is_num_prime: boolean;

//Initializing a variable to keep track of the number of factors the number has
var
  factor_count: integer;

begin
  // Setting the output variable to true by default
  is_num_prime := true; 

  // Looping through possible factors from 2 to the square root of num
  for i := 2 to Trunc(sqrt(num)) do 
  begin
    // Checking if the current number is a factor of num
    if num mod i = 0 then 
    begin
      // Increasing factor_count by 1 if the number is a factor
      factor_count := factor_count + 1; 
      
      // Exiting the loop if more than 2 factors are found
      if factor_count > 2 then 
      begin
        // Setting the output variable to false and exiting the loop 
        is_num_prime := false;
        break;
      end;
    end;
  end;

  Result := is_num_prime; // Returning the output variable
end;
// This is a complex code snippet in DELPHI
program CodeSnippet;

// Define a record type with four fields
type
 MyRecord = record
  Field1: Integer;
  Field2: String;
  Field3: Real;
  Field4: Boolean;
 end;

// Initialize an array of MyRecord type
var
 MyRecords: array[0..9] of MyRecord;

// A function to calculate the sum of all fields in the record
function CalculateSum(Rec: MyRecord): Real;
var
 Sum: Real;
begin
 Sum := Rec.Field1 + StrToFloat(Rec.Field2) + Rec.Field3;
 if Rec.Field4 then
  Sum := Sum * -1;
 CalculateSum := Sum;
end;

begin
 // Loop through the array of records and assign random values to each field
 for i := 0 to 9 do
 begin
  MyRecords[i].Field1 := Random(100);
  MyRecords[i].Field2 := IntToStr(Random(1000));
  MyRecords[i].Field3 := Random * 100;
  MyRecords[i].Field4 := Boolean(Random(2));
 end;

 // Print the values of each record and the sum of its fields
 for i := 0 to 9 do
 begin
  // Print the index of the current record
  WriteLn('Record ' + IntToStr(i));

  // Print the values of each field
  WriteLn('Field1: ' + IntToStr(MyRecords[i].Field1));
  WriteLn('Field2: ' + MyRecords[i].Field2);
  WriteLn('Field3: ' + FloatToStr(MyRecords[i].Field3));
  if MyRecords[i].Field4 then
   WriteLn('Field4: True')
  else
   WriteLn('Field4: False');

  // Calculate and print the sum of all fields in the record
  WriteLn('Sum of fields: ' + FloatToStr(CalculateSum(MyRecords[i])));

  // Print a blank line for formatting
  WriteLn;
 end;
end.
procedure QuickSort(var Items: array of Integer; iLo, iHi: Integer);
//QuickSort procedure using recursion to sort an array of Integers
var
  Lo, Hi, Mid, Pivot, Temp: Integer;
begin
  Lo := iLo;
  Hi := iHi;
  Mid := (Lo + Hi) div 2; //set mid point
  Pivot := Items[Mid]; //set pivot value
  //divide into two lists
  repeat
    while Items[Lo] < Pivot do
      Inc(Lo);
    while Items[Hi] > Pivot do
      Dec(Hi);
    if Lo <= Hi then //swap values
    begin
      Temp := Items[Lo];
      Items[Lo] := Items[Hi];
      Items[Hi] := Temp;
      Inc(Lo);
      Dec(Hi);
    end;
  until Lo > Hi;
  //recursive call
  if Hi > iLo then
    QuickSort(Items, iLo, Hi);
  if Lo < iHi then
    QuickSort(Items, Lo, iHi);
end;
unit Calculator;

//This unit contains functions for basic mathematical calculations

interface

//PUBLIC functions and variables

//This function takes in two numbers as input
//and returns their sum as output
function AddNumbers(a, b: Integer): Integer;

//This function takes in two numbers as input
//and returns their difference as output
function SubtractNumbers(a, b: Integer): Integer;

//This function takes in two numbers as input
//and returns their product as output
function MultiplyNumbers(a, b: Integer): Integer;

//This function takes in two numbers as input
//and returns their quotient as output
function DivideNumbers(a, b: Integer): Integer;

implementation

//PRIVATE functions and variables

//Function to check if the input is valid
function ValidateInput(a, b: Integer): Boolean;
begin
  if (b = 0) then //checking if second input is not equal to 0
    Result := False
  else
    Result := True;
end;

//Function to swap the values of two variables
procedure Swap(var a, b: Integer);
var
  temp: Integer;
begin
  temp := a;
  a := b;
  b := temp;
end;

//Function to find the greatest common divisor of two numbers
function FindGCD(a, b: Integer): Integer;
var
  r: Integer;
begin
  if (b = 0) then //checking if second input is 0
    Result := a
  else
  begin
    while (b <> 0) do //loop until second input is 0
    begin
      r := a mod b;
      a := b;
      b := r;
    end;
    Result := a;
  end;
end;

//Function to find the least common multiple of two numbers
function FindLCM(a, b: Integer): Integer;
begin
  Result := (a * b) div FindGCD(a, b); //formula for LCM using GCD
end;

//Function to perform addition of two numbers
function AddNumbers(a, b: Integer): Integer;
begin
  Result := a + b;
end;

//Function to perform subtraction of two numbers
function SubtractNumbers(a, b: Integer): Integer;
begin
  Result := a - b;
end;

//Function to perform multiplication of two numbers
//using recursive addition
function MultiplyNumbers(a, b: Integer): Integer;
var
  i, prod: Integer;
begin
  prod := a;
  for i := 1 to b - 1 do //loop b-1 times
  begin
    prod := AddNumbers(prod, a); //recursive calls to AddNumbers function
  end;
  Result := prod;
end;

//Function to perform division of two numbers
function DivideNumbers(a, b: Integer): Integer;
begin
  if (ValidateInput(a, b)) then //checking if input is valid
    Result := a div b
  else
    Result := 0; //if input is not valid, return 0 as output
end;

end.
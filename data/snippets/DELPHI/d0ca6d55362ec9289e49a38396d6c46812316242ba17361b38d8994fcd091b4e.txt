procedure TMyForm.ButtonClick(Sender: TObject);  // This is the procedure declaration
var                                          // This is the variable declaration section
  i, j, result: Integer;                     // Declaring three integers - i, j, and result

begin                                        // "begin" statement marks the beginning of the procedure
  i := 5;                                    // Assigning the value 5 to the variable i
  j := 7;                                    // Assigning the value 7 to the variable j
  result := i + j;                           // Adding the values of i and j and assigning the result to the variable result

  if result > 10 then                        // "if" statement checks if the value of result is greater than 10
  begin                                      // "begin" statement marks the beginning of the block of code to be executed if the condition is met
    ShowMessage('The result is greater than 10.');  // Displaying a message to the user using the built-in ShowMessage function
  end                                        // "end" statement marks the end of the block of code

  else                                       // "else" statement executes if the condition of the "if" statement is not met
  begin                                      // "begin" statement marks the beginning of the block of code to be executed if the condition is not met
    ShowMessage('The result is less than or equal to 10.');   // Displaying a message to the user
  end                                        // "end" statement marks the end of the block of code

  for i := 1 to 10 do                        // "for" loop declaration with the variable i starting from 1 and looping until 10
  begin                                      // "begin" statement marks the beginning of the block of code to be executed each loop
    result := result * i;                    // Multiplying the value of result by the value of i and assigning the result to the variable result
  end;                                       // "end" statement marks the end of the loop

  while result < 100 do                      // "while" loop declaration with the condition that the value of result is less than 100
  begin                                      // "begin" statement marks the beginning of the block of code to be executed each loop
    result := result + 10;                   // Adding 10 to the value of result and assigning the result to the variable result
  end;                                       // "end" statement marks the end of the loop

  repeat                                     // "repeat" loop declaration which will execute at least once and continue until the condition is met
    result := result - 5;                    // Subtracting 5 from the value of result and assigning the result to the variable result
  until result <= 0;                         // "until" statement marks the end of the loop and sets the condition for the loop to end

  Memo1.Lines.Add('The final result is ' + IntToStr(result));  // Adding a line of text to a memo control, displaying the value of result converted to a string using the built-in IntToStr function
end;                                         // "end" statement marks the end of the procedure
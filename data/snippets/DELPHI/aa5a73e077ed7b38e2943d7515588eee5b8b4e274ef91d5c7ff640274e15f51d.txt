// This code snippet generates a random graph using the Delphi programming language
// It implements the Erdos-Renyi model to generate the random edges in the graph
program GenerateRandomGraph;

// Define variables used in generating the graph
var
    n, m, i, j, k, l: Integer;
    AdjMatrix: array of array of Integer;
    prob: Double;

// Function to generate random edges in the graph based on probability
function RandomEdges(nd, ed: Integer; p: Double): Integer;
var
	k, choose: Integer;
begin
	choose := 0;
	for k := 0 to nd-2 do
	begin
		if Random < p then
		begin
			Inc(ed);
			AdjMatrix[choose, k] := 1;
			AdjMatrix[k, choose] := 1;
		end;
		Inc(choose);
	end;
	Result := ed;
end;

// Main program
begin
	// Get input from user for number of nodes and probability
	WriteLn('Enter number of nodes: ');
	ReadLn(n);
	WriteLn('Enter probability (between 0 and 1): ');
	ReadLn(prob);

	// Initialize adjacency matrix with all zeros
	SetLength(AdjMatrix, n, n);
	for i := 0 to n-1 do
		for j := 0 to n-1 do
			AdjMatrix[i][j] := 0;

	// Generate random edges in the graph
	m := RandomEdges(n, 0, prob);

	// Print adjacency matrix representation of the graph
	for k := 0 to n-1 do
	begin
		WriteLn();
		for l := 0 to n-1 do
			Write(AdjMatrix[k][l], ' ');
	end;
end.
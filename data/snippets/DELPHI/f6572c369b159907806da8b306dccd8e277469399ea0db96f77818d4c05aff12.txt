unit Unit1; { Delphi unit declaration }

interface { Unit interface section }

uses
  SysUtils, Classes, Windows; { Unit uses clause }

type
  TMyClass = class(TObject) { Class declaration }
  private { Private declarations }
    FMyInt: Integer;
    FMyString: string;
  public { Public declarations }
    constructor Create(AInt: Integer; AString: string); { Constructor declaration }
    function GetInt: Integer; { Getter method declaration }
    function GetString: string; { Getter method declaration }
  end;

implementation { Unit implementation section }

{ Constructor initializations }
constructor TMyClass.Create(AInt: Integer; AString: string); { Constructor definition }
begin
  inherited Create; { Call parent constructor }
  FMyInt := AInt;
  FMyString := AString;
end;

{ Getter method definitions }
function TMyClass.GetInt: Integer; { Getter method definition }
begin
  Result := FMyInt;
end;
function TMyClass.GetString: string; { Getter method definition }
begin
  Result := FMyString;
end;

var { Global variable declaration }
  MyClass: TMyClass; { Instance of TMyClass }

begin { Main program }
  { Initialize MyClass with parameters }
  MyClass := TMyClass.Create(42, 'This is a string');
  { Print results to console }
  Writeln('My integer value is: ', MyClass.GetInt);
  Writeln('My string value is: ', MyClass.GetString);
end.
unit Main;

interface

uses
  Windows, SysUtils, Classes, Graphics, Controls, Forms, Dialogs;

type
  TMainForm = class(TForm)
    Button1: TButton;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  MainForm: TMainForm;

{
  This procedure validates user input and raises an exception if the input is not valid.
  @param InputString - the user input to be validated
}
procedure ValidateInput(InputString: String);

implementation

{$R *.dfm}

{ TMainForm }

procedure TMainForm.Button1Click(Sender: TObject);
var
  InputStr: String; // variable to hold user input
begin
  InputStr := Memo1.Lines.Text; // get input from textbox
  // validate input
  try
    ValidateInput(InputStr);
  except
    on E: Exception do
      ShowMessage('Input is not valid: ' + E.Message);
  end;
end;

procedure ValidateInput(InputString: String);
begin
  // check if input is empty
  if InputString = '' then
    raise Exception.Create('Input cannot be empty.');
  
  // check if input contains only numbers
  if not TryStrToInt(InputString) then
    raise Exception.Create('Input must be a number.');
  
  // check if input is less than 10
  if StrToInt(InputString) < 10 then
    raise Exception.Create('Input must be greater than 10.');
end;

end.
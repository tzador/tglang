uses // Predefined units or routines
  Windows, //for accessing Windows APIs
  Messages, //for handling Windows messages
  SysUtils, //for string and memory operations
  Variants, //for handling variant data types
  Classes, //for defining classes and objects
  Graphics, //for accessing graphics functions
  Controls, //for UI controls such as buttons and labels
  Forms, //for creating and managing forms
  Dialogs, //for displaying dialogs
  StdCtrls; //for standard controls such as edit boxes and list boxes

type // Declaring a custom class
  TMyClass = class(TForm) //Inheriting from the TForm class
  private //Private section contains fields and methods only accessible within the class
    FMyString: string; //Declaring a string field
    FMyInteger: Integer; //Declaring an Integer field
  public //Public section contains methods accessible from outside the class
    constructor Create(AOwner: TComponent); override; //Constructor method, called when object is created
    procedure DoSomething; //Custom method to perform some action
    property MyString: string read FMyString write FMyString; //Property to get and set FMyString field
  end;

var //Variables section
  MyObject: TMyClass; //Declaring a variable of type TMyClass

implementation //Implementation section contains actual code for the class
{$R *.dfm} //Links to the form's resource file, contains UI design

constructor TMyClass.Create(AOwner: TComponent); //Constructor method definition
begin
  inherited Create(AOwner); //Calling the inherited constructor
  FMyString := 'Hello World'; //Initializing the FMyString field
  FMyInteger := 10; //Initializing the FMyInteger field
end;

procedure TMyClass.DoSomething; //Custom method definition
begin
  ShowMessage(FMyString); //Using ShowMessage to display the value of FMyString field
end;

begin //Main program execution begins
  MyObject := TMyClass.Create(nil); //Creating an instance of TMyClass
  try //Using try-finally to handle program flow
    MyObject.DoSomething; //Calling the DoSomething method
  finally //Finally is always executed, even if an exception is raised
    MyObject.Free; //Freeing the instance of TMyClass
  end;
end.
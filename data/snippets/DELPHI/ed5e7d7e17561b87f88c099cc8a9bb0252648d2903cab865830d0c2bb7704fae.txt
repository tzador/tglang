procedure SearchFib(num: Integer);
var
  f1: Integer;
  f2: Integer;
  temp: Integer;
begin
  f1 := 1; // initialize the first number in the Fibonacci sequence as 1
  f2 := 1; // initialize the second number in the Fibonacci sequence as 1
  temp := 0; // temporary variable to store the sum of f1 and f2
  while f1 < num do // loop continues until f1 is equal or greater than num
  begin
    temp := f1 + f2; // adds f1 and f2 to generate the next number in the sequence
    f1 := f2; // assigns the current value of f2 to f1
    f2 := temp; // assigns the current value of temp to f2
  end;
  if f1 = num then // checks if f1 is equal to num
  begin
    WriteLn('Number ', num, ' is a Fibonacci number'); // outputs a message if num is a Fibonacci number
  end
  else
  begin
    WriteLn('Number ', num, ' is not a Fibonacci number'); // outputs a message if num is not a Fibonacci number
  end;
end;
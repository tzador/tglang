{
This code snippet uses the TDataSet component to connect to a database and retrieve data
}

// import required libraries
uses
  DB, DBClient, DBTables;

// declare variables
var
  DataSet: TDataSet;
  DBTable: TDBTable;
  DBClient: TDBClient;
  DBField: TField;
  Data: string;
begin
  // create a new dataset and set its database name
  DataSet := TDataSet.Create(nil);
  DataSet.DatabaseName := 'ExampleDatabase';

  // connect to the database
  DataSet.Open;

  // create a new dbtable and set its dataset
  DBTable := TDBTable.Create(nil);
  DBTable.DataSet := DataSet;

  // retrieve data from the database
  DBTable.First;
  while not DBTable.EOF do
  begin
    // create a new dbclient
    DBClient := TDBClient.Create(nil);
    // set the dbclient's dataset
    DBClient.DataSet := DataSet;
    // loop through all fields in the dbtable
    for DBField in DBTable.Fields do
    begin
      // retrieve the data from the field
      Data := DBField.AsString;
      // do any necessary processing on the data
      // ...
      // output the data
      WriteLn('Value: ' + Data);
    end;
    DBTable.Next;
    // free the dbclient from memory
    DBClient.Free;
  end;

  // close the dataset
  DataSet.Close;

  // free the dataset from memory
  DataSet.Free;
end.
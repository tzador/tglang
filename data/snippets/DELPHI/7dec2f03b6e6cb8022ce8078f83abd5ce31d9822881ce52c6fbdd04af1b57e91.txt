unit Main;

// This is a unit declaration used to group functions, procedures, and variables together

interface // Indicates this is an interface section

uses // Uses keyword used to specify the units needed for the program
  SysUtils, // System unit is always needed
  Classes; // Classes unit provides class definitions for object-oriented programming

type
  // Types used to define a new type that can store a specific type of information
  // In this case, we are creating a record type to store information about a person

  TPerson = record
    Name: string; // The name of the person
    Age: integer; // The age of the person
    Address: string; // The address of the person
  end;

  // A class is a template for creating objects with similar properties and behavior
  // In this class, we will create a custom exception

  EPersonException = class(Exception);

  // In Delphi, all functions, procedures, and methods have a return type declared before their name
  // Here we are declaring a function that takes in a person record and returns a string

  function GetPersonInfo(person: TPerson): string;
  begin
    // The 'Result' keyword refers to the return value of a function, in this case a string
    Result := 'Name: ' + person.Name + #13#10 +
              'Age: ' + IntToStr(person.Age) + #13#10 +
              'Address: ' + person.Address;
  end;

// This is a procedure, which is a block of code that performs a specific task
// In this procedure, we will create a new person object and print their information to the screen

procedure PrintPersonInfo;
var
  newPerson: TPerson; // Declaring a new variable of type TPerson
begin
  // Assigning values to the fields of the new person object
  newPerson.Name := 'John Doe';
  newPerson.Age := 25;
  newPerson.Address := '123 Main Street';

  // Using the 'WriteLn' function to print the person's information to the screen
  WriteLn(GetPersonInfo(newPerson));
end;

// The 'initialization' section is used to perform any setup tasks before the program starts
initialization
  // Calling the PrintPersonInfo procedure to print the information to the screen
  PrintPersonInfo;

end.

// The 'finalization' section is used to perform any cleanup tasks before the program ends
// In this case, there are no cleanup tasks needed so we do not include any code in this section
{ This program demonstrates how to implement a sorting algorithm in Delphi }

program SortingAlgorithm;

type
  // Define a record type to hold the data for each item to be sorted
  ItemRecord = record
    data: Integer; // the data of the item
    index: Integer; // the original index of the item
  end;

var
  items: array of ItemRecord; // an array to store the items to be sorted
  numItems, i, j: Integer; // variables for storing the number of items and loop counters
  tempItem: ItemRecord; // a temporary variable for swapping items during sorting

begin
  { User input: enter the number of items to be sorted }
  Write('Enter the number of items:');
  Readln(numItems);

  { Allocate memory for the array based on user input }
  SetLength(items, numItems);

  { User input: enter the data for each item }
  for i := 0 to numItems-1 do
  begin
    Write('Enter data for item ', i+1, ':');
    Readln(items[i].data);
    items[i].index := i; // set the original index of the item
  end;

  { Sort the items using bubble sort algorithm }
  for i := 0 to numItems-2 do
  begin
    for j := 0 to numItems-2-i do
    begin
      if items[j].data > items[j+1].data then // swap if the current item is greater than the next item
      begin
        tempItem := items[j];
        items[j] := items[j+1];
        items[j+1] := tempItem;
      end;
    end;
  end;

  { Output: print the sorted items' data and indices }
  Writeln('Sorted items:');
  for i := 0 to numItems-1 do
  begin
    Write(items[i].data, ' (original index: ', items[i].index, ') ');
  end;
end.
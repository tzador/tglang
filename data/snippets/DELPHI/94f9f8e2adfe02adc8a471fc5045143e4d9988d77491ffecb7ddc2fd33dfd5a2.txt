unit MyUnit;

interface

uses
  System.SysUtils, System.Classes, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls;

type
  TMyClass = class(TForm)
    Button1: TButton;
    Label1: TLabel;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function MyFunction(const AString: string): string;
  end;

var
  MyClass: TMyClass;

implementation

{$R *.dfm} // Resource file that contains the layout of form and its components

procedure TMyClass.Button1Click(Sender: TObject);
begin
  ShowMessage(MyFunction('Hello, World!')); // Displays a message box with the return value of MyFunction
end;

function TMyClass.MyFunction(const AString: string): string;
begin
  Result := UpperCase(AString); // Converts the input string to uppercase and returns it
end;

end.

// Output:
unit MyUnit;

interface

uses // Uses clause, allows you to include other units in your code
  System.SysUtils, // System unit provides basic data types and functions
  System.Classes, // Classes unit provides classes and class-related types and functions
  Vcl.Controls, // Vcl (Visual Component Library) unit provides visual control components for Windows
  Vcl.Forms, // Forms unit provides classes for creating and handling forms
  Vcl.Dialogs, // Dialogs unit provides standard dialogs for user interaction
  Vcl.ExtCtrls; // ExtCtrls unit provides specialized graphical components for Windows

type
  TMyClass = class(TForm) // Declares a class named TMyClass, inheriting from the TForm class
    Button1: TButton; // Declares a visual component of type TButton with the name Button1
    Label1: TLabel; // Declares a visual component of type TLabel with the name Label1
    procedure Button1Click(Sender: TObject); // Declares a procedure called Button1Click that takes a TObject as parameter
  private
    { Private declarations } // Private declarations section, used to declare variables and routines that are only accessible within the same class
  public
    { Public declarations } // Public declarations section, used to declare variables and routines that can be accessed by other classes
    function MyFunction(const AString: string): string; // Declares a function called MyFunction that takes a string as input and returns a string as output
  end;

var
  MyClass: TMyClass; // Declares a global variable named MyClass of type TMyClass that can be accessed from any unit

implementation

{$R *.dfm} // Resource file that contains the layout of form and its components

procedure TMyClass.Button1Click(Sender: TObject); // Implements the Button1Click procedure
begin
  ShowMessage(MyFunction('Hello, World!')); // Calls the ShowMessage function to display a message box with the return value of MyFunction
end;

function TMyClass.MyFunction(const AString: string): string; // Implements the MyFunction function
begin
  Result := UpperCase(AString); // Assigns the uppercase version of AString to the function's output parameter Result
end;

end. // End of unit block
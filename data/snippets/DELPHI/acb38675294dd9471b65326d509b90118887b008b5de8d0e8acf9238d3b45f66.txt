//This code snippet demonstrates object-oriented programming in Delphi
//We create a class 'Person' with properties and methods
//Then we create an instance of the class and call its methods
unit Main;

interface

type
  //declaring the 'Person' class
  Person = class
    private
      //declaring private properties
      name: string;
      age: integer;

    public
      //declaring public properties
      property getName: string read name write name;
      property getAge: integer read age write age;

      //constructor method for the 'Person' class
      constructor Create(newName: string; newAge: integer);
      
      //method to get the full name of the person
      function getFullName(): string;

      //method to check if the person is an adult or not
      function isAdult(): boolean;
  end;

implementation

//implementing the constructor method for the 'Person' class
constructor Person.Create(newName: string; newAge: integer);
begin
  self.name := newName;
  self.age := newAge;
end;

//implementing the 'getFullName' method
function Person.getFullName(): string;
begin
  result := self.name; //returning the person's name
end;

//implementing the 'isAdult' method
function Person.isAdult(): boolean;
begin
  result := (self.age >= 18); //checking if age is equal to or greater than 18
end;

//main program
begin
  //creating an instance of the 'Person' class
  var person: Person := Person.Create('John Smith', 25); //passing in values for name and age
    
  //calling the methods from the 'Person' class
  writeln(person.getFullName()); //outputs "John Smith"
  writeln(person.isAdult()); //outputs "True"
end.
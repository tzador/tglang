unit MyUnit; // creating a new unit called MyUnit

interface // declaring the public interface
uses // importing necessary units
  Windows, SysUtils, Classes, Controls;

type // creating a new object type
  TMyObject = class(TObject)
  private // declaring private properties
    FCount: Integer;
    FList: TList;
    FMaxValue: Integer;
  protected // declaring protected properties
    procedure DoSomething; virtual;
  public // declaring public properties
    constructor Create(MaxValue: Integer); // constructor with parameter
    destructor Destroy; override; // destructor
    procedure AddToList(Value: Integer); // public method to add value to list
    property Count: Integer read FCount; // public property with read only access to FCount
  end;

implementation // implementing the unit

constructor TMyObject.Create(MaxValue: Integer);
begin // constructor implementation
  inherited Create; // calling the constructor of parent class
  FList := TList.Create; // creating a new instance of TList
  FMaxValue := MaxValue; // assigning value to FMaxValue
end;

destructor TMyObject.Destroy;
begin // destructor implementation
  FList.Free; // freeing the TList instance
  inherited; // calling the destructor of parent class
end;

procedure TMyObject.AddToList(Value: Integer);
begin // method implementation
  if FCount < FMaxValue then // checking if the count is less than the maximum value
  begin
    FList.Add(Pointer(Value)); // adding the value to the list using type casting to Pointer
    FCount := FCount + 1; // incrementing the count
  end;
end;

procedure TMyObject.DoSomething;
begin // virtual method implementation
  // do nothing
end;
unit Main;

interface

uses
  SysUtils, Classes, TypInfo, Math, Variants; // Importing necessary libraries

type
  {$M+}
  TMyClass = class(TObject) // Defining a class
  private
    FField: string; // Private field of the class
  public
    property Field: string read FField write FField; // Public getter and setter for the field
    constructor Create(const AField: string); // Constructor for the class
    function GetFieldLength: Integer; // Public function to get the length of the field
  end;

implementation

{ TMyClass }

constructor TMyClass.Create(const AField: string); // Implementation of the constructor
begin
  FField := AField; // Assigning the passed value to the field
end;

function TMyClass.GetFieldLength: Integer;
begin
  Result := Length(FField); // Using built-in function to get the length of the field
end;

begin
  // Main program
  var MyObject := TMyClass.Create('Hello World'); // Creating an instance of the class and passing a value
  try
    Writeln(MyObject.Field); // Printing the value of the field using the getter
    Writeln(MyObject.GetFieldLength); // Printing the length of the field using the public function
  finally
    MyObject.Free; // Freeing the instance to prevent memory leaks
  end;
end.
unit Main;

interface

uses
  SysUtils, Classes, Dialogs;

type
  // Define a new record type
  TPerson = record
    Name: string;
    Age: Integer;
    Address: string;
  end;

  // Define a new class type
  TDatabase = class(TObject)
  private
    // Internal field of type TStringList
    FPeople: TStringList;
  public
    // Constructor of the TDatabase class
    constructor Create;
    // Add a person to the database
    procedure AddPerson(Person: TPerson);
    // Get the number of people in the database
    function GetNumPeople: Integer;
  end;

implementation

// Constructor for the TDatabase class
constructor TDatabase.Create;
begin
  // Initialize the TStringList and assign it to the internal field
  FPeople := TStringList.Create;
end;

// Add a person to the database
procedure TDatabase.AddPerson(Person: TPerson);
begin
  // Use the TStringList Add method to add the person's information as a new string
  FPeople.Add(Format('%s, %d, %s', [Person.Name, Person.Age, Person.Address]));
end;

// Get the number of people in the database
function TDatabase.GetNumPeople: Integer;
begin
  // Return the number of items in the TStringList
  Result := FPeople.Count;
end;

var
  // Create a new instance of the TDatabase class
  Database: TDatabase;
  // Define a new TPerson record and assign values to its fields
  Person: TPerson;
begin
  // Create a new TDatabase
  Database := TDatabase.Create;
  // Assign values to the TPerson record's fields
  Person.Name := 'John Smith';
  Person.Age := 25;
  Person.Address := '123 Main Street';
  // Add the person to the database
  Database.AddPerson(Person);
  // Show a dialog with the number of people in the database
  ShowMessage(Format('Number of people in database: %d', [Database.GetNumPeople]));
end.
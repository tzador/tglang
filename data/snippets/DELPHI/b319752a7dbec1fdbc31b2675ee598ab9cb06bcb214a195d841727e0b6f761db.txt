unit MainUnit;  {Begin declaration of main unit}

interface {Begin declaration of interface section}

uses
  SysUtils, Classes, Graphics, Forms, Controls, StdCtrls, Dialogs,
  {Imports necessary libraries for the unit}
  Math, {Import for performing mathematical calculations}
  StrUtils; {Import for manipulating strings}

const
  PI = 3.141592653589793;  {Declares a constant for PI}

type
  TPerson = class {Class definition for Person}
  private
    FName: string;    {Private member variable for storing first name}
    LName: string;    {Private member variable for storing last name}
    Age: Integer;     {Private member variable for storing age}
    SSN: string;      {Private member variable for storing social security number}
  public
    constructor Create(First, Last: string; AgeVal: Integer); {Constructor method for creating new Person object}
    function GetFullName: string; {Public method for retrieving full name}
    function GetAge: Integer; {Public method for retrieving age}
    procedure SetSSN(NewSSN: string); {Public method for setting social security number}
  end;

var
  MainForm: TForm1; {Variable for storing the main form}

implementation {Begin implementation section}

{$R *.dfm} {Imports the form design file}

{ TPerson }

constructor TPerson.Create(First, Last: string; AgeVal: Integer);
begin
  FName := First; {Assigns the given first name to the FName variable}
  LName := Last;  {Assigns the given last name to the LName variable}
  Age := AgeVal;  {Assigns the given age to the Age variable}
end;

function TPerson.GetFullName: string;
begin
  Result := FName + ' ' + LName; {Returns the full name by combining the first and last name}
end;

function TPerson.GetAge: Integer;
begin
  Result := Age; {Returns the age value}
end;

procedure TPerson.SetSSN(NewSSN: string);
begin
  if Length(NewSSN) = 9 then // Checks if given SSN is 9 digits
  begin
    SSN := NewSSN; // Assigns the new SSN value if it meets criteria
  end
  else
  begin
    raise Exception.Create('Invalid SSN input'); {Raises an exception if SSN is not 9 digits}
  end;
end;

{$REGION 'Event Handlers'} {Declares a region for grouping event handlers}

procedure TForm1.FormCreate(Sender: TObject);
var
  Person: TPerson; {Variable for storing a Person object}
begin
  Person := TPerson.Create('John', 'Doe', 35); {Creates a new Person object with given values}
  ShowMessage(Person.GetFullName + ' is ' + IntToStr(Person.GetAge) + ' years old.'); {Displays a message with the Person's full name and age}
end;

// More event handlers can be added here

{$ENDREGION} {End of event handler region}

end.
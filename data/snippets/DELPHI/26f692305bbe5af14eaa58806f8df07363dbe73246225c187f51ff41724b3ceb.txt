// This code snippet is a sample of a class definition in DELPHI

unit Unit1; // declares the unit name
interface // defines the interface section

type
  TMyClass = class(TObject) // creates the class TMyClass, inheriting from TObject
  private // defines the private section of the class
    FProp: Integer; // declares a private property of type Integer
    procedure SetProp(const Value: Integer); // declares a private procedure to set the property
    function GetProp: Integer; // declares a private function to get the property
  public // defines the public section of the class
    constructor Create(const AProp: Integer); // declares a constructor for the class
    property Prop: Integer read GetProp write SetProp; // defines a property for accessing and modifying FProp
  end; // ends the class definition
implementation // defines the implementation section

{ TMyClass } // indicates the beginning of the implementation of the class

constructor TMyClass.Create(const AProp: Integer); // implementation of the constructor
begin
  FProp := AProp; // sets the private property FProp to the value passed in as AProp
end;

procedure TMyClass.SetProp(const Value: Integer); // implementation of the private procedure
begin
  FProp := Value; // sets the private property FProp to the value passed in as Value
end;

function TMyClass.GetProp: Integer; // implementation of the private function
begin
  Result := FProp; // returns the value of the private property FProp
end;

end // ends the implementation section
// This code snippet generates a Pascal's triangle with user-defined number of rows

// Initialize variables
var
  i, j, k, num, val: Integer;

// Ask user for the number of rows
WriteLn('Enter the number of rows:');
ReadLn(num);

// Create a two-dimensional array
// First dimension represents the row number
// Second dimension represents the values in each row
var
  triangle: array of array of Integer;

// Loop through each row
for i := 0 to num-1 do
begin
  // Set the length of the current row
  SetLength(triangle[i], i+1);

  // Loop through each value in the current row
  // Values at the edges are always 1
  for j := 0 to i do
  begin
    if (j = 0) or (j = i) then
      triangle[i,j] := 1
    else
    begin
      // Calculate the value using the previous row
      val := triangle[i-1,j-1] + triangle[i-1,j];
      triangle[i,j] := val;
    end;
  end;
end;

// Print the triangle
for i := 0 to num-1 do
begin
  // Calculate the number of spaces needed to center the row
  // Total number of rows minus current row number, divided by 2
  // Example: For 5 rows, first row has 4 spaces on each side, second row has 3 spaces on each side, and so on
  for k := 1 to (num-i) div 2 do
    Write(' ');
  // Print each value in the row separated by spaces
  for j := 0 to i do
    Write(triangle[i,j]:2, ' ');
  WriteLn;
end;
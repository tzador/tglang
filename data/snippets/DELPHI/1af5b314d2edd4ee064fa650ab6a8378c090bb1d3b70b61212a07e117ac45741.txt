// This code snippet creates a function that calculates the greatest common divisor of two integers
// It uses recursion to keep dividing the two numbers until the remainder is 0

function GCD(num1: Integer; num2: Integer): Integer;
begin
    if (num2 = 0) then  // base case when the remainder is 0
        GCD := num1
    else 
        GCD := GCD(num2, num1 mod num2); // recursive call, dividing num1 by the remainder of num1/num2
end;

begin
    // this is the main program that calls the GCD function on two user input integers
    var input1, input2: Integer;
    writeln('Enter the first integer:');
    readln(input1);
    writeln('Enter the second integer:');
    readln(input2);

    var result: Integer := GCD(input1, input2);
    
    writeln('The greatest common divisor of ', input1, ' and ', input2, ' is: ', result);
end.
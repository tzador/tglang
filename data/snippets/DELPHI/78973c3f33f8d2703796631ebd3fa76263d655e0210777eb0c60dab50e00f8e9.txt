// This code snippet shows how to implement a binary search algorithm in Delphi

// declaring a function that takes an array of integers and a target value as parameters
function binarySearch(values: array of Integer; target: Integer): Integer;
var
  min, max, mid: Integer;
begin
  // setting the minimum and maximum index values
  min := 0;
  max := Length(values) - 1;

  // loop until the entire array has been searched
  while (min <= max) do
  begin
    // finding the index of the middle element
    mid := (min + max) div 2;

    // if target value is equal to middle element, return its index
    if target = values[mid] then
      Result := mid
    else
    begin
      // if target value is greater than middle element, search the right half of array
      if target > values[mid] then
        min := mid + 1
      // if target value is lesser than middle element, search the left half of array
      else
        max := mid - 1;
    end;
  end;

  // if target value is not found, return -1
  Result := -1;
end;
//Create a custom component
unit MyComponent;

interface

uses
  Vcl.Controls, Vcl.Graphics, System.SysUtils, System.Classes, Vcl.Forms, Vcl.Dialogs;

type
  TMyComponent = class(TCustomControl)
  private
    FBackgroundColor: TColor;
    procedure SetBackgroundColor(const Value: TColor);
  protected
    procedure Paint; override;
  public
    constructor Create(AOwner: TComponent); override;
  published
    property BackgroundColor: TColor read FBackgroundColor write SetBackgroundColor default clSilver;
  end;
  
implementation

constructor TMyComponent.Create(AOwner: TComponent);
begin
  inherited;
  FBackgroundColor := clSilver;
  ParentColor := False;
  Width := 100;
  Height := 100;
end;

procedure TMyComponent.Paint;
begin
  Canvas.Brush.Color := FBackgroundColor;
  Canvas.FillRect(ClientRect);
  Canvas.Pen.Color := clBlack;
  Canvas.Rectangle(ClientRect);
end;

procedure TMyComponent.SetBackgroundColor(const Value: TColor);
begin
  FBackgroundColor := Value;
  Invalidate;
end;

end.
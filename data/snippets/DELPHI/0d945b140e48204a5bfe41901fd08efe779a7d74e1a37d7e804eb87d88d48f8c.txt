// This is a function that takes in two parameters, a string and an integer,
// and returns a new string with the original string repeated the specified number of times.

function RepeatString(str: string; num: integer): string;
var
  i: integer;
begin
  Result := '';
  for i := 0 to num-1 do
    Result := Result + str;
end;

// This is a procedure that takes in an array of integers and prints out their cumulative sum.

procedure CumulativeSum(arr: array of integer);
var
  i, sum: integer;
begin
  sum := 0;
  for i := 0 to High(arr) do
  begin
    sum := sum + arr[i];
    WriteLn(sum);
  end;
end;

// This is a class with a private field and a public method that calculates the area of a circle.

type
  TCircle = class
  private
    FRadius: double;
  public
    constructor Create(radius: double);
    function CalculateArea: double;
  end;

constructor TCircle.Create(radius: double);
begin
  FRadius := radius;
end;

function TCircle.CalculateArea: double;
begin
  Result := Pi * Sqr(FRadius);
end;

// This is a main program that uses the above functions and procedures.

var
  str: string;
  num: integer;
  arr: array of integer;
  i: integer;
  circle: TCircle;
begin
  // RepeatString function
  str := 'Hello, ';
  num := 3;
  WriteLn(RepeatString(str, num)); // Output: Hello, Hello, Hello,

  // CumulativeSum procedure
  SetLength(arr, 5); // create an array of length 5
  arr[0] := 1;
  arr[1] := 2;
  arr[2] := 3;
  arr[3] := 4;
  arr[4] := 5;
  CumulativeSum(arr); // Output: 1, 3, 6, 10, 15

  // Create a circle object and calculate its area
  circle := TCircle.Create(2.5);
  WriteLn(circle.CalculateArea); // Output: 19.634954084936208
end. // End of main program.
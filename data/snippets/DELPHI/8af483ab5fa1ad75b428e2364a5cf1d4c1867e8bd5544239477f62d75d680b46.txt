unit Main;

{$mode objfpc}{$H+}  // Uses Object Pascal with Extended Syntax
{$LongStrings on}  // Enable Long String Support

interface 

uses
  Classes, SysUtils; // Uses Classes and SysUtils libraries

{ This function creates a linked list and adds elements to it }
function CreateLinkedList: TList;
var
  LinkedList: TList;  // Declares a TList variable
  Element: Integer;  // Declares an Integer variable
begin
  LinkedList := TList.Create;  // Initializes the linked list
  LinkedList.Add(Pointer(10));  // Adds an element to the list
  LinkedList.Add(Pointer(20));  // Adds another element to the list

  { Loops through a range of numbers and adds them to the list }
  for Element := 1 to 5 do
  begin
    LinkedList.Add(Pointer(Element)); // Adds the current number to the list
  end;

  Result := LinkedList;  // Assigns the created list to the function's result
end;

{ This procedure prints out the elements of the linked list }
procedure PrintLinkedList(LinkedList: TList);
var
  Index: Integer;  // Declares an Integer variable
begin
  { Loops through the list and prints out each element }
  for Index := 0 to LinkedList.Count - 1 do
  begin
    WriteLn(LinkedList[Index]); // Prints out the current element
  end;
end;

{ This is the main program }
begin
  WriteLn('Creating a linked list...');
  var LinkedList := CreateLinkedList; // Assigns the created list to a variable
  WriteLn('Printing the elements of the linked list:');
  PrintLinkedList(LinkedList); // Calls the procedure to print the list
end.
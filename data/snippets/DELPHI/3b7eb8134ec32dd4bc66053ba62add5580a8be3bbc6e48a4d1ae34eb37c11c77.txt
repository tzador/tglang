unit Unit1;

interface

uses
  System.SysUtils, System.Classes, System.Generics.Collections;

type
  TCustomList<T> = class(TList<T>)
  private
    FOnBeforeAdd: TNotifyEvent;
    FOnAfterAdd: TNotifyEvent;
    FOnBeforeRemove: TNotifyEvent;
    FOnAfterRemove: TNotifyEvent;
  public
    procedure Add(const Value: T); override;
    procedure Remove(const Value: T); override;
    property OnBeforeAdd: TNotifyEvent read FOnBeforeAdd write FOnBeforeAdd;
    property OnAfterAdd: TNotifyEvent read FOnAfterAdd write FOnAfterAdd;
    property OnBeforeRemove: TNotifyEvent read FOnBeforeRemove write FOnBeforeRemove;
    property OnAfterRemove: TNotifyEvent read FOnAfterRemove write FOnAfterRemove;
  end;

implementation

{TCustomList}

procedure TCustomList<T>.Add(const Value: T);
begin
  if Assigned(FOnBeforeAdd) then //Check if event handler is assigned
    FOnBeforeAdd(Self); //Execute event handler passing the object itself
  inherited Add(Value); //Create the new item
  if Assigned(FOnAfterAdd) then //Check if event handler is assigned
    FOnAfterAdd(Self); //Execute event handler passing the object itself
end;

procedure TCustomList<T>.Remove(const Value: T);
begin
  if Assigned(FOnBeforeRemove) then //Check if event handler is assigned
    FOnBeforeRemove(Self); //Execute event handler passing the object itself
  inherited Remove(Value); //Remove the specified item
  if Assigned(FOnAfterRemove) then //Check if event handler is assigned
    FOnAfterRemove(Self);  //Execute event handler passing the object itself
end;

end.
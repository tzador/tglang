unit Main;
 
interface
 
uses
  System.SysUtils, System.Classes;
 
type
  TData = class(TObject)
  private
    FValue: Integer;
  public
    constructor Create(AValue: Integer); //constructor with one parameter
    procedure SetValue(AValue: Integer);
    function GetValue(): Integer;
    property Value: Integer read GetValue write SetValue; //property for accessing value
  end;
 
  TDatabase = class(TObject)
  private
    FName: string;
    FDataList: TList;
  public
    constructor Create(AName: string); //constructor with one parameter
    procedure AddData(AData: TData);
    procedure RemoveData(AIndex: Integer);
    procedure ClearData();
    function GetDataCount(): Integer;
    property Name: string read FName write FName; //property for accessing name
    property DataList: TList read FDataList; //property for accessing data list
  end;
 
implementation
 
{ TData }
 
constructor TData.Create(AValue: Integer);
begin
  FValue := AValue;
end;
 
procedure TData.SetValue(AValue: Integer);
begin
  FValue := AValue;
end;
 
function TData.GetValue(): Integer;
begin
  Result := FValue;
end;
 
{ TDatabase }
 
constructor TDatabase.Create(AName: string);
begin
  FName := AName;
  FDataList := TList.Create; //initialize data list
end;
 
procedure TDatabase.AddData(AData: TData);
begin
  FDataList.Add(AData); //add data to list
end;
 
procedure TDatabase.RemoveData(AIndex: Integer);
begin
  if AIndex < FDataList.Count then
    FDataList.Delete(AIndex); //remove data from list
end;
 
procedure TDatabase.ClearData();
begin
  FDataList.Clear; //clear all data from list
end;
 
function TDatabase.GetDataCount(): Integer;
begin
  Result := FDataList.Count; //get total number of data in list
end;
 
end.
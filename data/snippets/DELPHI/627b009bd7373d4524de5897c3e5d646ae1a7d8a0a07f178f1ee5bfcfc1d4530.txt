{$APPTYPE CONSOLE}  // Indicates that this program will be a console application
Uses // Keyword used to specify all the units that will be used in this program
  System.SysUtils, // Unit with general system functions
  System.Classes; // Unit with basic class definitions
Var // Variables used in the program
  i: Integer; // Integer variable for looping
  s: String; // String variable for holding user input
  l: TList; // Object of TList class for storing items in a list
Begin // Beginning of main program
  Try // Keyword used to specify a try-catch block for error handling
    Writeln('Enter a number: '); // Prompts the user to enter a number
    Readln(s); // Reads the user input and assigns it to the string variable
    If StrToInt(s) < 0 Then // Checks if the input is a negative number
      Raise Exception.Create('Number must be positive'); // Throws an exception if the input is negative
    l := TList.Create; // Initializes the TList object
    For i := 0 To StrToInt(s) - 1 Do // Looping from 0 to the input number minus 1
      l.Add(i); // Adds the current number to the list
    Writeln('Numbers added to list: '); // Prompts the user that the numbers have been added
    For i := 0 To l.Count - 1 Do // Looping through the list
      Writeln(l[i]); // Prints the current number in the list
  Except // Catch block for the exception raised earlier
    On E: Exception Do // Specifies the exception type to catch
      Writeln('Error: ' + E.Message); // Prints the error message
  End; // End of try-catch block
End. // End of main program
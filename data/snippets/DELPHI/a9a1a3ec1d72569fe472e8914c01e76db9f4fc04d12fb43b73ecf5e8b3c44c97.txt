/// This code snippet demonstrates how to sort an array of integers in Delphi, using bubble sort algorithm
/// The outer for loop iterates through the array n-1 times, where n is the length of the array
/// The inner for loop compares adjacent elements and swaps them if they are in the wrong order
/// At the end of each iteration, the largest number will "bubble" to the end of the array
/// The process is repeated until the array is fully sorted in ascending order
procedure BubbleSort(var arrayToSort: array of Integer);
var
  i, j: Integer;
begin
  for i := 0 to Length(arrayToSort) - 2 do
  begin
    for j := 0 to Length(arrayToSort) - 2 - i do
    begin
      if arrayToSort[j] > arrayToSort[j + 1] then
      begin
        // Swap the elements
        arrayToSort[j] := arrayToSort[j] + arrayToSort[j + 1];
        arrayToSort[j + 1] := arrayToSort[j] - arrayToSort[j + 1];
        arrayToSort[j] := arrayToSort[j] - arrayToSort[j + 1];
      end;
    end;
  end;
end;

/// Example usage:
var
  myArray: array[0..9] of Integer = (5, 2, 8, 1, 3, 9, 7, 4, 6, 10);
begin
  BubbleSort(myArray);
  // The array is now sorted in ascending order: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
end.
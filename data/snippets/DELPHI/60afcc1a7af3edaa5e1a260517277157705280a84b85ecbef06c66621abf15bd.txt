procedure QuickSort(var A: array of Integer; iLo, iHi: Integer); // procedure header
var
  i, j, x, y: Integer; // declaring variables
begin
  i := iLo; // setting variables
  j := iHi; // setting variables
  x := A[(iLo + iHi) div 2]; // getting middle element
  repeat
    while A[i] < x do // comparing elements
      Inc(i); // incrementing i
    while A[j] > x do // comparing elements
      Dec(j); // decrementing j
    if i <= j then // checking if swap is needed
    begin
      y := A[i]; // storing value of A[i]
      A[i] := A[j]; // swapping values
      A[j] := y; // assigning stored value to A[j]
      Inc(i); // incrementing i
      Dec(j); // decrementing j
    end;
  until i > j; // end of loop
  if iLo < j then // checking if recursive call is needed for left side
    QuickSort(A, iLo, j); // recursive call
  if i < iHi then // checking if recursive call is needed for right side
    QuickSort(A, i, iHi); // recursive call
end; // end of procedure
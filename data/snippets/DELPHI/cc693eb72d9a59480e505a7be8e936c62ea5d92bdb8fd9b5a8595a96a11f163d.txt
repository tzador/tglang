unit Unit1;
{This is a unit declaration that defines the scope of a program}

interface
{Interface section declares public variables and functions}

uses
  Forms, //Uses a unit from the Delphi standard library
  Classes, //Uses a unit from the Delphi standard library
  SysUtils; //Uses a unit from the Delphi standard library

type
  TMyClass = class(TObject) //Defines a class called 'TMyClass' that inherits from TObject
  private
    FName: string; //Private variable declaration
    FValue: Integer; //Private variable declaration

  protected
    function GetValue: Integer; //Protected function declaration
    procedure SetValue(const AValue: Integer); //Protected procedure declaration

  public
    property Name: string read FName write FName; //Public property declaration with getter and setter methods
    property Value: Integer read GetValue write SetValue; //Public property declaration with getter and setter methods

    constructor Create(const AName: string; const AValue: Integer); //Public constructor declaration
    destructor Destroy; override; //Public destructor declaration
  end;

implementation
{Implementation section defines the inner workings of the program}

{Constructor definition}
constructor TMyClass.Create(const AName: string; const AValue: Integer);
begin
  FName := AName; //Assigns input to the private variable 'FName'
  FValue := AValue; //Assigns input to the private variable 'FValue'
end;

{Destructor definition}
destructor TMyClass.Destroy;
begin
  inherited; //Calls the destructor of the inherited class
end;

{Protected function definition}
function TMyClass.GetValue: Integer;
begin
  Result := FValue; //Returns the private variable 'FValue'
end;

{Protected procedure definition}
procedure TMyClass.SetValue(const AValue: Integer);
begin
  FValue := AValue; //Sets the private variable 'FValue' to the input
end;

end.
{End of unit declaration}
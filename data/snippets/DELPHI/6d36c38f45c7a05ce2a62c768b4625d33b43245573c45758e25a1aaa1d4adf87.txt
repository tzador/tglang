// Declare a class named "Car"
type
  Car = class
  private
    // Private fields
    brand: string;
    model: string;
    year: integer;
  
  public
    // Constructor method
    constructor Create(newBrand, newModel: string; newYear: integer);
  
    // Methods
    procedure Drive;
    function GetBrand: string;
    function GetModel: string;
    function GetYear: integer;
  
  end;
  
// Constructor method
constructor Car.Create(newBrand, newModel: string; newYear: integer);
begin
  brand := newBrand;
  model := newModel;
  year := newYear;
end;

// Methods
procedure Car.Drive;
begin
  writeln('Driving ' + brand + ' ' + model + ' ' + IntToStr(year));
end;

function Car.GetBrand: string;
begin
  Result := brand;
end;

function Car.GetModel: string;
begin
  Result := model;
end;

function Car.GetYear: integer;
begin
  Result := year;
end;

// Create a new instance of the class "Car"
var
  myCar: Car;
begin
  // Initialize the instance with the constructor
  myCar := Car.Create('Ford', 'Mustang', 2020);
  
  // Call the methods on the instance
  myCar.Drive;
  writeln('Brand: ' + myCar.GetBrand);
  writeln('Model: ' + myCar.GetModel);
  writeln('Year: ' + IntToStr(myCar.GetYear));
end.
// This code snippet creates a dynamic array of integers and sorts it using the quicksort algorithm
procedure Quicksort(var Data: TArray<integer>; Left, Right: Integer);
var
  I, J, P: Integer;
  Temp: Integer;
begin
  P := Data[(Left + Right) div 2];
  I := Left;
  J := Right;
  repeat
    while Data[I] < P do
      Inc(I);
    while Data[J] > P do
      Dec(J);
    if I <= J then
    begin
      Temp := Data[I];
      Data[I] := Data[J];
      Data[J] := Temp;
      Inc(I);
      Dec(J);
    end;
  until I > J;
  if Left < J then
    Quicksort(Data, Left, J);
  if Right > I then
    Quicksort(Data, I, Right);
end;

// Initializing the dynamic array
var
  DataArray: TArray<integer> := [15, 3, 6, 10, 9, 2, 7, 8, 5, 1, 14, 4, 12, 11, 13];

// Calling the quicksort procedure
Quicksort(DataArray, Low(DataArray), High(DataArray));

// Printing the sorted array
for var I := Low(DataArray) to High(DataArray) do
  WriteLn(DataArray[I]);
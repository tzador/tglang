unit Main;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls;

type
  // A custom exception class
  EMyException = class(Exception)
  private
    FMessage: String;
  public
    // Construct EMyException with custom message
    constructor Create(const AMessage: String);
    // Property to get the custom message from exception
    property ErrorMessage: String read FMessage;
  end;

type
  // A record to hold information about a person
  TPerson = record
    FirstName: String;
    LastName: String;
    Age: Integer;
  end;

type
  // A class for managing a list of people
  TPeopleList = class(TObject)
  private
    FPeople: array of TPerson;
    FNumPeople: Integer;
  public
    // Add a new person to the list
    procedure AddPerson(const AFirstName, ALastName: String; AAge: Integer);
    // Get the number of people in the list
    function GetNumPeople: Integer;
    // Get the information for a specific person
    function GetPersonInfo(AIndex: Integer): TPerson;
  end;

var
  // A global instance of TPeopleList
  PeopleList: TPeopleList;

implementation

{$R *.dfm}

{ EMyException }

constructor EMyException.Create(const AMessage: String);
begin
  inherited Create;
  FMessage := AMessage;
end;

{ TPeopleList }

procedure TPeopleList.AddPerson(const AFirstName, ALastName: String; AAge: Integer);
begin
  // Increment the number of people
  Inc(FNumPeople);
  // Set the length of the FPeople array to hold the new person
  SetLength(FPeople, FNumPeople);
  // Store the information for the new person in the array
  FPeople[FNumPeople - 1].FirstName := AFirstName;
  FPeople[FNumPeople - 1].LastName := ALastName;
  FPeople[FNumPeople - 1].Age := AAge;
end;

function TPeopleList.GetNumPeople: Integer;
begin
  Result := FNumPeople;
end;

function TPeopleList.GetPersonInfo(AIndex: Integer): TPerson;
begin
  // Check if the index is within the range of the array
  if (AIndex < 0) or (AIndex >= FNumPeople) then
    // If not, raise a custom exception
    raise EMyException.Create('Index out of range');
  // If index is valid, return the information for the person at that index
  Result := FPeople[AIndex];
end;

end.
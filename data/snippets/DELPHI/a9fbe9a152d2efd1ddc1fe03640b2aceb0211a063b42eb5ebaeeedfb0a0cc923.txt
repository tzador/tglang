unit MainUnit;

{ This is the main unit of the program, it handles the main functionality.}
interface

uses
  SysUtils, Forms, Dialogs, StdCtrls, ExtCtrls, Classes, Graphics, Windows;

const
  MAX_VALUE = 100; // constant variable with maximum value of 100

type
  TMyClass = class(TObject) // custom class
  private
    FNumber: Integer;
    FList: TStringList;
    FEnabled: Boolean;
  public
    constructor Create; // class constructor
    destructor Destroy; override; // class destructor
    procedure DisplayNumber; // method to display number
    property Number: Integer read FNumber write FNumber; // property to access FNumber
    property List: TStringList read FList write FList; // property to access FList
    property Enabled: Boolean read FEnabled write SetEnabled; // property to access FEnabled
  end;

var
  Form1: TForm1; // global variable of type TForm1

implementation

{$R *.dfm}

constructor TMyClass.Create;
begin
  inherited; // call parent's constructor
  FNumber := 0; // set initial value of FNumber to 0
  FList := TStringList.Create; // initialize FList
  FEnabled := True; // set initial value of FEnabled to True
end;

destructor TMyClass.Destroy;
begin
  FList.Free; // free FList from memory
  inherited; // call parent's destructor
end;

procedure TMyClass.DisplayNumber;
begin
  ShowMessage(IntToStr(FNumber)); // display the value of FNumber as a string
end;

procedure TMyClass.SetEnabled(AValue: Boolean);
begin
  FEnabled := AValue; // set the value of FEnabled to the specified value
end;

begin
  Form1 := TForm1.Create(Application); // create the form1 object
  Form1.Caption := 'My Program'; // set the caption of form1
  if FEnabled then // check if FEnabled is True
    Form1.Visible := True; // set form1 to visible
  while FNumber < MAX_VALUE do // loop until FNumber reaches MAX_VALUE
  begin
    Inc(FNumber); // increment FNumber by 1
    Sleep(100); // wait for 100 milliseconds
  end;
  Form1.ShowModal; // display form1 as a modal dialog
  Form1.Free; // free form1 from memory
end.
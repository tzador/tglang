{ This code snippet is a sorting function that takes in an array of integers and sorts them in ascending order using the bubble sort algorithm. }

{ Begin by declaring the sorting function with the name "BubbleSort" and passing in the unsorted integer array as a parameter. }
procedure BubbleSort(arrayToSort: array of Integer);

{ Declare variables to be used in the function }
var 
  i, j, temp: integer;

{ Begin the sorting algorithm by setting the variable "swapped" to False }
  swapped := False;
  
{ Begin a for-loop on the length of the array to iterate through each element }
for i := 1 to Length(arrayToSort) do 
begin
  { Begin a nested for-loop to compare each element to its adjacent element in the array }
  for j := 1 to Length(arrayToSort)-i do 
  begin
    { If the current element is larger than its next element, swap them and set "swapped" to True }
    if arrayToSort[j] > arrayToSort[j+1] then 
    begin
      temp := arrayToSort[j];
      arrayToSort[j] := arrayToSort[j+1];
      arrayToSort[j+1] := temp;
      swapped := True;
    end
  end
  
  { If no swaps were made in the previous iteration, the array is already sorted so we can exit the function }
  if not swapped then 
    exit;
end

{ After all iterations are complete, the array should be sorted in ascending order }
end;
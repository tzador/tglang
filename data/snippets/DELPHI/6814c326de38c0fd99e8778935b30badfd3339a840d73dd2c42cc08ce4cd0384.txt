//This code snippet is an example of a complex mathematical function in Delphi

function CalculateSumOfFibonacciNumbers(n: Integer): Integer;
{Given an integer n, this function calculates the sum of the first n terms in the Fibonacci sequence}
var
   i: Integer;
begin
    //Initialize the first two terms in the sequence
    Result := 0;
    if (n = 1) or (n = 2) then
        Result := 1
    else
    begin
        //Loop through the sequence and calculate the sum
        for i := 3 to n do
            Result := Result + Fibonacci(i);
    end;
end;

function Fibonacci(n: Integer): Integer;
{This function returns the nth term in the Fibonacci sequence}
begin
    if (n = 1) or (n = 2) then
        Result := 1
    else
        Result := Fibonacci(n-1) + Fibonacci(n-2); //Recursive calculation
end;

//Example usage of the function
var
    n: Integer;
begin
    //Prompt user for input
    Write('Enter a value for n: ');
    Readln(n);

    //Call the function to calculate the sum of the first n terms in the sequence
    Result := CalculateSumOfFibonacciNumbers(n);

    //Display the result
    WriteLn('The sum of the first ', n, ' terms in the Fibonacci sequence is: ', Result);
end.
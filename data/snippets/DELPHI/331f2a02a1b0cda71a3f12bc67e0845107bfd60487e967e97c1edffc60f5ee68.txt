{ This program performs a binary search on a sorted array }

program BinarySearch;

var
  arr: array[1..10] of Integer; { define an array of size 10 with integer elements }
  target, index: Integer; { declare variables for target value and index }

{function for performing binary search}
function binarySearch(arr: array of Integer; target: Integer): Integer;
var
  low, high, mid: Integer; { declare variables for low, high and mid values }
begin
  low := 0;
  high := Length(arr) - 1; { set initial values for low and high }
  mid := (low + high) div 2; { find the midpoint of the array }

  while (low <= high) do { loop until low becomes greater than high }
  begin
    if (arr[mid] = target) then 
    begin
      Result := mid; { if target is found, return the index }
      exit; { exit the function }
    end
    else if (target > arr[mid]) then 
      low := mid + 1 { if target is greater than the midpoint, search in the upper half }
    else 
      high := mid - 1; { if target is lesser than the midpoint, search in the lower half }
    mid := (low + high) div 2; { recalculate midpoint }
  end;

  Result := -1; { if target is not found, return -1 }
end;

begin
  { initialize sorted array }
  arr[1] := 2;
  arr[2] := 3;
  arr[3] := 5;
  arr[4] := 8;
  arr[5] := 10;
  arr[6] := 14;
  arr[7] := 16;
  arr[8] := 19;
  arr[9] := 22;
  arr[10] := 27;

  { get target value from user }
  Write('Enter target value: ');
  Readln(target);

  { perform binary search }
  index := binarySearch(arr, target);

  if (index <> -1) then { check if target was found }
    WriteLn('Target value found at index: ', index + 1)
  else
    WriteLn('Target value not found.');

end.
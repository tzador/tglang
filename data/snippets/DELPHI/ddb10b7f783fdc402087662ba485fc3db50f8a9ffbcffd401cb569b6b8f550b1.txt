unit Main;

interface

uses
  SysUtils, Classes, Math;

type
  TDisplay = class(TObject)
    private
      FWidth: Integer;
      FHeight: Integer;
      FFont: TFont;
      FColor: TColor;
      FText: String;
    public
      constructor Create(AWidth, AHeight: Integer; AFont: TFont; AColor: TColor; AText: String);
      procedure Draw;
      procedure Clear;
    published
      property Width: Integer read FWidth write FWidth;
      property Height: Integer read FHeight write FHeight;
      property Font: TFont read FFont write FFont;
      property Color: TColor read FColor write FColor;
      property Text: String read FText write FText;
  end;

implementation

constructor TDisplay.Create(AWidth, AHeight: Integer; AFont: TFont; AColor: TColor; AText: String);
begin
  FWidth := AWidth;
  FHeight := AHeight;
  FFont := AFont;
  FColor := AColor;
  FText := AText;
end;

procedure TDisplay.Draw;
var
  i, j: Integer;
begin
  for i := 1 to FHeight do // loop through rows
  begin
    for j := 1 to FWidth do // loop through columns
    begin
      if (i <> j) and (i + j <> FWidth + FHeight + 1) then // check if current position is not on diagonal
        Write(FText) // print text
      else
        Write(' '); // otherwise print space
    end;
    WriteLn; // go to next row
  end;
end;

procedure TDisplay.Clear;
begin
  for i := 1 to FHeight do
  begin
    for j := 1 to FWidth do
    begin
      Write(' '); // print spaces to clear the display
    end;
    WriteLn;
  end;
end;

end.
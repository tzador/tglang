{
    Procedure that checks if a given integer is a prime number

    Parameters:
        number - the integer to check

    Returns:
        Boolean - True if number is prime, False if not
}

function IsPrime(number: Integer): Boolean;
var
    i: Integer;
    isPrime: Boolean;
begin
    isPrime := True; // Assume number is prime until proven otherwise
    if (number < 2) then begin
        // Any number less than 2 is not prime
        isPrime := False;
    end else if (number > 2) then begin
        // Check if number is divisible by any number between 2 and number-1
        for i := 2 to number-1 do begin
            if (number mod i = 0) then begin
                // If number is divisible, it is not prime
                isPrime := False;
                Break;
            end;
        end;
    end;
    Result := isPrime;
end;

{ Example usage }
begin
    { Check if 7 is a prime number - should return True }
    IsPrime(7);
    { Check if 10 is a prime number - should return False }
    IsPrime(10);
end.
function GetNextPrimeNumber(startingNumber: integer): integer;
var
  i: integer;
  isPrime: boolean;
begin
  i := startingNumber + 1; //set the next number to check as one more than the starting number
  isPrime := false; //set the prime flag to false initially
  while not isPrime do //loop until a prime number is found
  begin
    isPrime := true; //assume the number is prime unless proven otherwise
    for j := 2 to i-1 do //check all numbers between 2 and the current number
    begin
      if i mod j = 0 then //if the current number is divisible by any number between 2 and itself, it is not prime
      begin
        isPrime := false;
        break; //break out of the for loop
      end;
    end;
    if not isPrime then //if the current number is not prime, increment it by 1 and start again
    begin
      i := i + 1;
    end;
  end;
  //once a prime number is found, return it as the output of the function
  Result := i;
end;
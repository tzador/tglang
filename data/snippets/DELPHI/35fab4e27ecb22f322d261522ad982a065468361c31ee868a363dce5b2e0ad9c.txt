unit Main;
{ This unit contains the main functionality of the program }
interface

uses
  Classes, SysUtils, Dialogs;

type
  TCustomCalculator = class(TObject)
  private
    FHistory: TStrings;
  protected
    function Add(A, B: Integer): Integer; virtual;
    procedure ShowResult(Result: String); virtual;
  public
    constructor Create;
    destructor Destroy; override;
    procedure Calculate(A, B: Integer);
  end;
  
implementation

constructor TCustomCalculator.Create;
{ Constructor - creates a new instance of TCustomCalculator }
begin
  FHistory := TStringList.Create;
end;

destructor TCustomCalculator.Destroy;
{ Destructor - frees the memory occupied by TCustomCalculator}
begin
  FHistory.Free;
end;

function TCustomCalculator.Add(A, B: Integer): Integer;
{ Adds two integers and returns the result }
begin
  Result := A + B;
  FHistory.Add(Format('%d + %d = %d', [A, B, Result]));
end;

procedure TCustomCalculator.ShowResult(Result: String);
{ Displays the result in a dialog box }
begin
  ShowMessage('The result is: ' + Result);
end;

procedure TCustomCalculator.Calculate(A, B: Integer);
{ Uses the Add function to calculate and display the result }
var
  Result: Integer;
begin
  Result := Add(A, B);
  ShowResult(IntToStr(Result));
end;

end.
{ Example code in Delphi using Object-Oriented Programming }

program OOP;

type
  { Creating a class called "Employee" }
  Employee = class
  private
    { Encapsulated fields }
    FName: string;
    LName: string;

    { Encapsulated methods }
    procedure setFirstName(name: string);
    procedure setLastName(name: string);
  public
    { Constructor that takes in first and last name as parameters }
    constructor Create(firstName, lastName: string);
    { Method to return full name }
    function GetFullName: string;
  end;

{ Implementation of methods }
procedure Employee.setFirstName(name: string);
begin
    // set first name
    FName := name;
end;

procedure Employee.setLastName(name: string);
begin
    // set last name
    LName := name;
end;

constructor Employee.Create(firstName, lastName: string);
begin
    // call the set methods to initialize the fields
    setFirstName(firstName);
    setLastName(lastName);
end;

function Employee.GetFullName: string;
begin
    // concat first and last name and return
    Result := FName + ' ' + LName;
end;

{ Main program }
var
  employee: Employee; // creating an object from Employee class

begin
    { Creating an instance of Employee class with values for first and last name }
    employee := Employee.Create('John', 'Smith');
    { Calling the GetFullName method and printing the result }
    WriteLn(employee.GetFullName);
end.
unit MyUnit;  //this is a unit declaration in Delphi

interface  //this is the interface section

uses
  SysUtils, Classes;  //adding the necessary library files for the unit

type
  TMyClass = class(TObject)  //defining a class named TMyClass which inherits from TObject
  private
    FMyString: string;  //private variable of type string
    FMyInteger: Integer;  //private variable of type Integer
  public
    constructor Create(AStr: string; AInt: Integer);  //constructor of the class
    destructor Destroy; override;  //destructor of the class
    function GetMyString: string; //public function to get the value of FMyString
    function GetMyInteger: Integer; //public function to get the value of FMyInteger
  end;

implementation  //implementation section of the unit

constructor TMyClass.Create(AStr: string; AInt: Integer);  //implementation of the constructor
begin
  inherited Create; //calling the constructor of the TObject class
  FMyString := AStr; //assigning the value of AStr to FMyString
  FMyInteger := AInt; //assigning the value of AInt to FMyInteger
end;

destructor TMyClass.Destroy; //implementation of the destructor
begin
  //clean up code
  inherited Destroy; //calling the destructor of the TObject class
end;

function TMyClass.GetMyString: string; //implementation of the GetMyString function
begin
  Result := FMyString; //returning the value of FMyString
end;

function TMyClass.GetMyInteger: Integer; //implementation of the GetMyInteger function
begin
  Result := FMyInteger; //returning the value of FMyInteger
end;

begin
  //this is the start of the main program
  //creating an object of TMyClass with arguments "Hello World" and 123
  var MyObject: TMyClass := TMyClass.Create("Hello World", 123);
  try
    //printing the value of FMyString and FMyInteger using the public functions
    Writeln(MyObject.GetMyString);
    Writeln(MyObject.GetMyInteger);
  finally
    MyObject.Free; //freeing the memory occupied by the object
  end;
end.
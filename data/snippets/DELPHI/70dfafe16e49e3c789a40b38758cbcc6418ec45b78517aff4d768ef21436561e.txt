unit Main; //creates a unit called Main
interface //specifies the external interface of the unit

uses //specifies units that are being imported
  SysUtils, //system utilities unit
  Classes, //classes unit
  Windows, //Windows specific routines unit
  Graphics, //graphics unit used for drawing
  Dialogs; //dialogs unit for creating pop-up messages
  
type //defines a new data type

  TMyClass = class(TObject) //defines a class called TMyClass which is a child of TObject class
  private //specifies private member variables and methods
    FMyInt: Integer; //private integer variable
    procedure PrivateMethod; //private procedure that can only be accessed within the class
  protected //specifies protected member variables and methods
    FMyStr: string; //protected string variable
    procedure ProtectedMethod; //protected procedure that can be accessed within the class and its descendants
  public //specifies public member variables and methods
    constructor Create; //public constructor which is automatically called when an instance of the class is created
    procedure PublicMethod; //public procedure that can be called by any unit that uses the Main unit
    property MyInt: Integer read FMyInt write FMyInt; //property that provides read and write access to FMyInt variable
    property MyStr: string read FMyStr write FMyStr; //property that provides read and write access to FMyStr variable
  end;

var //specifies global variables

  MyObject: TMyClass; //declares an instance of TMyClass
  
implementation //specifies implementation of the unit

{$R *.dfm} //links the unit to a binary resource file

{ TMyClass } //implementation of TMyClass

constructor TMyClass.Create; //implementation of TMyClass constructor
begin
  inherited; //calls the constructor of the TObject class
  FMyInt := 0; //initializes FMyInt variable to 0
  FMyStr := ''; //initializes FMyStr variable to empty string
end;

procedure TMyClass.PrivateMethod; //implementation of TMyClass private method
begin
  ShowMessage('This is a private method.'); //displays a pop-up message
end;

procedure TMyClass.ProtectedMethod; //implementation of TMyClass protected method
begin
  ShowMessage('This is a protected method.'); //displays a pop-up message
end;

procedure TMyClass.PublicMethod; //implementation of TMyClass public method
begin
  ShowMessage('This is a public method.'); //displays a pop-up message
end;

begin //main program

  MyObject := TMyClass.Create; //creates an instance of TMyClass
  MyObject.MyInt := 10; //assigns a value to MyInt property
  MyObject.MyStr := 'Hello World!'; //assigns a value to MyStr property
  MyObject.PrivateMethod; //calls PrivateMethod
  MyObject.ProtectedMethod; //calls ProtectedMethod
  MyObject.PublicMethod; //calls PublicMethod
  
  MyObject.Free; //frees the memory used by MyObject

end. //end of program
procedure Fibonacci(var n: integer);
begin
  if (n = 0) or (n = 1) then
    WriteLn(n)
  else
    begin
      var first := 0;
      var second := 1;
      var current := 0;

      if n > 1 then
      begin
        for var i := 2 to n do
        begin
          current := first + second;
          first := second;
          second := current;
        end;
      end
      else
      begin
        for var i := -2 downto n do
        begin
          current := first - second;
          first := second;
          second := current;
        end;
      end;

      WriteLn(current);
    end;
end;
# This is a procedure that calculates the nth fibonacci number
# The parameter n is passed by reference and will contain the result
{
  # If n is equal to 0 or 1
  if (n = 0) or (n = 1) then
    # Output n
    WriteLn(n)
  # Otherwise, perform the fibonacci algorithm
  else
    # Create variables to store the initial values
    var first := 0;
    var second := 1;
    var current := 0;

    # Check if n is greater than 1
    if n > 1 then
      # Loop through n to calculate the fibonacci number
      for var i := 2 to n do
      begin
        current := first + second;
        first := second;
        second := current;
      end;
    # If n is less than or equal to 1, perform the algorithm with downto instead
    else
      # Loop through n in reverse
      for var i := -2 downto n do
      begin
        current := first - second;
        first := second;
        second := current;
      end;
    # Output the final calculated fibonacci number
    WriteLn(current);
  end;
end;
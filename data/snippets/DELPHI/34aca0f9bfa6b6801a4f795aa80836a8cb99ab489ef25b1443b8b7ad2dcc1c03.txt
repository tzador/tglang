unit Main;

interface

uses
  Forms, Controls, StdCtrls, Dialogs, ExtCtrls, SysUtils, Classes, Graphics;

type
  //This is a custom TPanel component that will be used in our form
  TCustomPanel = class(TPanel)
  private
    FCustomColor: TColor;
    //This is a private field for the panel's custom color
    FCustomText: string;
    //This is a private field for the panel's custom text
    FCustomFont: TFont;
    //This is a private field for the panel's custom font
    procedure SetCustomColor(Value: TColor);
    //Setter method for the custom color field
    procedure SetCustomText(Value: string);
    //Setter method for the custom text field
    procedure SetCustomFont(Value: TFont);
    //Setter method for the custom font field
  protected
    procedure Paint; override;
    //Paint method that will be used to draw the panel with its custom properties
  public
    constructor Create(AOwner: TComponent); override;
    //Constructor for the custom panel component
    destructor Destroy; override;
    //Destructor for the custom panel component
    property CustomColor: TColor read FCustomColor write SetCustomColor;
    //Public property for the custom color field
    property CustomText: string read FCustomText write SetCustomText;
    //Public property for the custom text field
    property CustomFont: TFont read FCustomFont write SetCustomFont;
    //Public property for the custom font field
  end;

implementation

{ TCustomPanel }

constructor TCustomPanel.Create(AOwner: TComponent);
//Constructor for the custom panel component
begin
  inherited;
  FCustomColor := clRed;
  //Set the default custom color to Red
  FCustomText := 'Default Text';
  //Set the default custom text to 'Default Text'
  FCustomFont := TFont.Create;
  //Create a new font object for the custom font field
  FCustomFont.Name := 'Arial';
  //Set the default font name to Arial
  FCustomFont.Size := 12;
  //Set the default font size to 12
end;

destructor TCustomPanel.Destroy;
//Destructor for the custom panel component
begin
  FCustomFont.Free;
  //Free the custom font object
  inherited;
end;

procedure TCustomPanel.Paint;
//Paint method that will be used to draw the panel with its custom properties
begin
  //Set the panel's color to the custom color field
  Canvas.Brush.Color := FCustomColor;
  //Set the font to the custom font field
  Canvas.Font := FCustomFont;
  //Draw the custom text on the panel
  Canvas.TextOut(10, 10, FCustomText);
end;

procedure TCustomPanel.SetCustomColor(Value: TColor);
//Setter method for the custom color field
begin
  //If the new color is different from the current one, update it and redraw the panel
  if FCustomColor <> Value then
  begin
    FCustomColor := Value;
    Invalidate;
  end;
end;

procedure TCustomPanel.SetCustomText(Value: string);
//Setter method for the custom text field
begin
  //If the new text is different from the current one, update it and redraw the panel
  if FCustomText <> Value then
  begin
    FCustomText := Value;
    Invalidate;
  end;
end;

procedure TCustomPanel.SetCustomFont(Value: TFont);
//Setter method for the custom font field
begin
  //If the new font is different from the current one, update it and redraw the panel
  if FCustomFont <> Value then
  begin
    FCustomFont.Assign(Value);
    Invalidate;
  end;
end;

end.
//This is a complex code snippet in DELPHI
//It includes a class with properties and methods
//and shows how to use them in a loop
unit Test;

interface

type
  //This is a class named TCalculator
  TCalculator = class
  private
    //Private properties for storing the input numbers
    x: Integer;
    y: Integer;
  public
    //Public properties for accessing the input numbers
    property num1: Integer read x write x;
    property num2: Integer read y write y;
    //Method for addition
    function Add: Integer;
    //Method for subtraction
    function Subtract: Integer;
  end;

implementation

{ TCalculator }

//Function to add the input numbers
function TCalculator.Add: Integer;
begin
  Result := num1 + num2;
end;

//Function to subtract the input numbers
function TCalculator.Subtract: Integer;
begin
  Result := num1 - num2;
end;

//Main program
var
  //Loop counter variable
  i: Integer;
  //Creating an instance of TCalculator class
  calc: TCalculator;
begin
  //Initializing the instance
  calc := TCalculator.Create;
  //Loop for getting input from user and performing calculations
  for i := 1 to 10 do
  begin
    //Setting values for input numbers
    calc.num1 := i;
    calc.num2 := i+1;
    //Calculating and displaying result
    writeln('Result of addition:', calc.Add);
    writeln('Result of subtraction:', calc.Subtract);
  end;
  //Freeing the instance
  calc.Free;
end.
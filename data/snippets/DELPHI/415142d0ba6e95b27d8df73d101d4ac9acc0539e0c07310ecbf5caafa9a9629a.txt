type
  TPerson = record          // Creating a record type named 'TPerson'
    Name: string;           // String field for person's name
    Age: Integer;           // Integer field for person's age
    Occupation: string;     // String field for person's occupation
  end;
  
procedure UpdatePerson(var Person: TPerson); // Procedure to update the fields of the record
var
  newName: string;         // Variable to store new name input by user
  newAge: Integer;         // Variable to store new age input by user
  newOccupation: string;   // Variable to store new occupation input by user
begin
  // Prompt user to enter new values for the fields of the record
  WriteLn('Enter a new name for the person:');
  ReadLn(newName);
  WriteLn('Enter a new age for the person:');
  ReadLn(newAge);
  WriteLn('Enter a new occupation for the person:');
  ReadLn(newOccupation);
  
  // Update the fields of the record with the user input
  Person.Name := newName;
  Person.Age := newAge;
  Person.Occupation := newOccupation;
end;

// Main program
var
  Person: TPerson;         // Creating an instance of the TPerson record
begin
  // Initialize the fields of the record
  Person.Name := 'John';
  Person.Age := 35;
  Person.Occupation := 'Teacher';
  
  // Call the procedure to update the fields of the record
  UpdatePerson(Person);
  
  // Output the updated values
  WriteLn('Updated name: ' + Person.Name);
  WriteLn('Updated age: ' + IntToStr(Person.Age));      // Converting integer to string using IntToStr function
  WriteLn('Updated occupation: ' + Person.Occupation);
end.
// This program sorts an array of numbers using the bubble sort algorithm
program BubbleSort;

// Define a procedure to swap two numbers in an array
procedure Swap(var num1, num2: Integer);
var
  temp: Integer;
begin
  temp := num1;
  num1 := num2;
  num2 := temp;
end;

// Define a bubble sort function
function BubbleSort(var numbers: array of Integer): array of Integer;
var
  i, j, len: Integer;
begin
  len := Length(numbers); // Get the length of the array
  for i := 0 to len - 1 do // Loop through the array
  begin
    for j := 0 to len - i - 1 do // Compare adjacent elements and swap if necessary
    begin
      if numbers[j] > numbers[j + 1] then
        Swap(numbers[j], numbers[j + 1]);
    end;
  end;
  Result := numbers; // Return the sorted array
end;

// Main program
var
  numbers: array of Integer; // Define an array of numbers
  i: Integer;
begin
  // Initialize the array with random numbers
  SetLength(numbers, 10);
  for i := 0 to Length(numbers) - 1 do
    numbers[i] := Random(100); // Generate a random number between 0 and 100
  // Print the unsorted array
  Writeln('Unsorted array:');
  for i := 0 to Length(numbers) - 1 do
    Write(numbers[i], ' ');
  // Sort the array using bubble sort
  numbers := BubbleSort(numbers);
  // Print the sorted array
  Writeln;
  Writeln('Sorted array:');
  for i := 0 to Length(numbers) - 1 do
    Write(numbers[i], ' ');
end.
// This is a complex code snippet in the Delphi programming language.

unit ComplexUnit; // declaring a unit

interface // declaring the interface

uses
  System.Classes, // importing the System.Classes unit
  System.SysUtils; // importing the System.SysUtils unit

type
  TMyClass = class(TObject) // declaring a class

  private
    FName: string;
    FAge: integer;
    FAddress: string;
  public
    constructor Create(AName: string; AAge: integer; AAddress: string); // declaring a constructor
    procedure SetName(AName: string); // declaring a public procedure
    function GetAge: integer; // declaring a public function
    property Name: string read FName write SetName; // declaring a property
    property Age: integer read FAge; // declaring a property without a write option
    property Address: string read FAddress write FAddress; // declaring a property with a private variable as its backing field
  end;

implementation // declaring the implementation

constructor TMyClass.Create(AName: string; AAge: integer; AAddress: string); // implementing the constructor
begin
  FName := AName;
  FAge := AAge;
  FAddress := AAddress;
end;

procedure TMyClass.SetName(AName: string); // implementing the SetName procedure
begin
  FName := AName;
end;

function TMyClass.GetAge: integer; // implementing the GetAge function
begin
  Result := FAge;
end;

{ Some useful functions }

function AddNumbers(a, b: integer): integer; // declaring a function with parameters
begin
  Result := a + b;
end;

function MultiplyNumbers(a, b: integer): integer;
begin
  Result := a * b;
end;

begin // start of the main program
  // creating an instance of TMyClass
  var MyClass := TMyClass.Create('John', 25, '123 Main Street');
  
  // accessing and setting properties
  MyClass.Name := 'Jane';
  MyClass.Address := '456 Main Street';
  
  // calling functions
  var sum := AddNumbers(10, 5);
  var product := MultiplyNumbers(5, 5);
end. // end of the main program
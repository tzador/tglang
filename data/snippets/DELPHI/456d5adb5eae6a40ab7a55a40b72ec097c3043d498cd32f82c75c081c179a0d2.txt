``unit Unit1; //Creates a new unit called "Unit1"`

`interface //Declares the public interface for the unit`

`uses //Instructs the compiler to include other units in the current unit's namespace`

`SysUtils, //Includes the SysUtils unit`

`Classes, //Includes the Classes unit`

`Dialogs; //Includes the Dialogs unit`

`type //Defines a new type`

`TMyClass = class(TObject) //Defines a new class "TMyClass" and inherits from the "TObject" class`

`private //Defines the private section for the class`

`FMyInteger: Integer; //Defines a private variable called "FMyInteger" of type Integer`

`FMyString: String; //Defines a private variable called "FMyString" of type String`

`public //Defines the public section for the class`

`constructor Create; //Defines a constructor for the class`

`procedure SetMyInteger(Value: Integer); //Defines a public procedure to set the value of "FMyInteger"`

`function GetMyString: String; //Defines a public function to get the value of "FMyString"`

`end; //Ends the class definition`

`implementation //Implementation section for the unit`

`constructor TMyClass.Create; //Defines the constructor for the class`

`begin //Starts the constructor's body`

`FMyInteger := 0; //Initializes the value of "FMyInteger" to 0`

`FMyString := 'Hello, world!'; //Initializes the value of "FMyString" to 'Hello, world!'`

`ShowMessage('A new instance of TMyClass has been created!'); //Displays a message to the user`

`end; //Ends the constructor's body`

`procedure TMyClass.SetMyInteger(Value: Integer); //Defines the procedure to set the value of "FMyInteger"`

`begin //Starts the procedure's body`

`FMyInteger := Value; //Sets the value of "FMyInteger" to the value passed in as "Value"`

`end; //Ends the procedure's body`

`function TMyClass.GetMyString: String; //Defines the function to get the value of "FMyString"`

`begin //Starts the function's body`

`Result := FMyString; //Sets the return value to the value of "FMyString"`

`end; //Ends the function's body`

`end. //Ends the unit's body`
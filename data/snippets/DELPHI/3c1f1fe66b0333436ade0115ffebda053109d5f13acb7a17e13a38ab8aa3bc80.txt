unit Unit1; // This is the main unit of the program

interface

uses
  // The following units are needed for the program to function properly
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, ComCtrls, jpeg, Math;

type
  TForm1 = class(TForm)
    // Define the components to be used in the form
    Button1: TButton;
    Edit1: TEdit;
    Image1: TImage;
    Label1: TLabel;
    Memo1: TMemo;
    Timer1: TTimer;
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
  private
    { Private declarations }
    // Internal variables
    num1, num2: Integer;
    ind1: Integer;
    arr1: array of Integer;
    str1: string;
    float1: Real;
    bool1: Boolean;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
begin
  // Set initial values for variables
  num1 := 0;
  num2 := 10;
  ind1 := 1;
  SetLength(arr1, 5);
  arr1[0] := 5;
  arr1[1] := 10;
  arr1[2] := 15;
  arr1[3] := 20;
  arr1[4] := 25;
  str1 := 'Hello World';
  float1 := 3.14159;
  bool1 := True;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  // Generate a random number between num1 and num2
  num1 := RandomRange(num1, num2);
  // Display the number in the edit box
  Edit1.Text := IntToStr(num1);
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
  // Increment index
  ind1 := ind1 + 1;
  // Check if index is within the array bounds
  if (ind1 > High(arr1)) then
    ind1 := 0;
  // Display the current value in the array in the memo box
  Memo1.Text := IntToStr(arr1[ind1]);
  // Check if the current value in the array is divisible by 2
  if (arr1[ind1] mod 2 = 0) then
  begin
    // If it is even, display the image
    Image1.Picture.LoadFromFile('images/even.png');
  end
  else
  begin
    // If it is odd, display the image
    Image1.Picture.LoadFromFile('images/odd.png');
  end;
  // Convert the current value in the array to a string and display it in the label
  Label1.Caption := IntToStr(arr1[ind1]);
  // Check if the current value in the array is a prime number
  if (IsPrime(arr1[ind1])) then
  begin
    // If it is a prime number, change the background color to green
    Form1.Color := clGreen;
  end
  else
  begin
    // If it is not a prime number, change the background color to red
    Form1.Color := clRed;
  end;
end;
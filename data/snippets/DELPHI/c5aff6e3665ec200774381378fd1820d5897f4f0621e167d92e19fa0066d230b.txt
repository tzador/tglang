/// This code snippet is an example of a function in DELPHI that calculates the factorial of a number using recursion.
/// It takes in an integer as a parameter and returns the factorial of that number.
/// It also includes error handling in case a negative number is inputted.
/// Author: [Your Name]

function Factorial(num: Integer): Integer;
begin
  // Error handling for negative numbers
  if num < 0 then
    raise EInvalidArgument.Create('Factorial input cannot be negative!');
  
  // Base case
  if num = 0 then
    Result := 1
  // Recursive case
  else
    Result := num * Factorial(num - 1);
end;

// Main function
begin
  // Input number
  var num: Integer;
  Write('Enter a number: ');
  ReadLn(num);
  
  // Call to Factorial function
  WriteLn('Factorial of ', num, ' is: ', Factorial(num));
end.
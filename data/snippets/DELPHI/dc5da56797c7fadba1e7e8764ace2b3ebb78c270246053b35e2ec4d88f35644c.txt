{This code snippet creates a class called 'Rectangle' and defines properties and methods associated with it.}

type
  Rectangle = class                      {Defining the class 'Rectangle'}
  private                                
    FWidth: Integer;                     {Private property to store the width of the rectangle}
    FHeight: Integer;                    {Private property to store the height of the rectangle}
  public                                 
    constructor Create(Width, Height: Integer);  {Public constructor that takes input for width and height}
    function GetArea: Integer;         {Public method to calculate and return the area of the rectangle}
    function GetPerimeter: Integer;    {Public method to calculate and return the perimeter of the rectangle}
  end;

{Constructor implementation}
constructor Rectangle.Create(Width, Height: Integer);
begin
  FWidth := Width;
  FHeight := Height;
end;

{GetArea method implementation}
function Rectangle.GetArea: Integer;
begin
  Result := FWidth * FHeight;         {Calculating and storing the area in the 'Result' variable}
end;

{GetPerimeter method implementation}
function Rectangle.GetPerimeter: Integer;
begin
  Result := 2 * (FWidth + FHeight);   {Calculating and storing the perimeter in the 'Result' variable}
end;

var
  MyRectangle: Rectangle;             {Declaring an instance of the 'Rectangle' class}
begin
  MyRectangle := Rectangle.Create(10, 5);   {Initializing the instance with width of 10 and height of 5}
  Writeln('Area of rectangle: ', MyRectangle.GetArea);         {Printing the area of the rectangle}
  Writeln('Perimeter of rectangle: ', MyRectangle.GetPerimeter);   {Printing the perimeter of the rectangle}
end.
type
  TMyClass = class
  private
    FPrivateVar: Integer;
    procedure PrivateMethod;
  public
    property PublicProp: Integer read FPrivateVar write FPrivateVar;
    constructor Create;
    destructor Destroy; override;
    procedure PublicMethod;
  end;
  
constructor TMyClass.Create;
begin
  inherited Create;
  // Initialize variables and objects here
  FPrivateVar := 0;
end;

destructor TMyClass.Destroy;
begin
  // Free memory and clean up here
  inherited Destroy;
end;

procedure TMyClass.PrivateMethod;
begin
  // Do something with private variables
  FPrivateVar := FPrivateVar + 1;
end;

procedure TMyClass.PublicMethod;
begin
  // Call private method
  PrivateMethod;
  // Print value of private variable
  WriteLn('Private variable value: ', FPrivateVar);
end;

// Main program
var
  Obj: TMyClass; // Declare object of TMyClass type
begin
  Obj := TMyClass.Create; // Initialize object
  Obj.PublicProp := 5; // Set public property value
  Obj.PublicMethod; // Call public method
  Obj.Free; // Deallocate object memory
end.
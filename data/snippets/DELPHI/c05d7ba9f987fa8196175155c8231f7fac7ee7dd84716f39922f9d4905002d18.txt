// This section of code includes a function that takes in two arrays and returns a sorted merged array
// The two input arrays are assumed to already be sorted in ascending order

function MergeArrays(arr1: array of Integer; arr2: array of Integer): array of Integer;
var
  mergedArray: array of Integer;
  i, j, k: Integer;
begin
  // Initialize the size of the merged array to the size of both arrays combined
  SetLength(mergedArray, Length(arr1) + Length(arr2));
  // Set the initial values of i, j, and k
  i := 0; j := 0; k := 0;
  // Loop through both arrays and compare each element in order to determine the value to add to the merged array
  while (i < Length(arr1)) and (j < Length(arr2)) do 
  begin
    if arr1[i] < arr2[j] then 
    begin
      mergedArray[k] := arr1[i];
      i := i + 1;
    end
    else 
    begin
      mergedArray[k] := arr2[j];
      j := j + 1;
    end;
    k := k + 1;
  end;
  // Add any remaining elements from arr1 to the merged array
  while i < Length(arr1) do
  begin
    mergedArray[k] := arr1[i];
    i := i + 1;
    k := k + 1;
  end;
  // Add any remaining elements from arr2 to the merged array
  while j < Length(arr2) do
  begin
    mergedArray[k] := arr2[j];
    j := j + 1;
    k := k + 1;
  end;
  // Return the sorted merged array
  Result := mergedArray;
end;
program ComplexCode;

{$APPTYPE CONSOLE}

uses
  SysUtils;

// Define a record type to hold information
// about a person
type
  TPerson = record
    Name: string[30]; // Maximum length of 30 characters
    Age: Integer;
    IsMarried: Boolean;
  end;

// Define a dynamic array of TPerson
var
  People: array of TPerson;

// Define a function to create a new TPerson
// and add it to the array
function CreatePerson(Name: string; Age: Integer; IsMarried: Boolean): TPerson;
var
  NewPerson: TPerson;
begin
  NewPerson.Name := Name;
  NewPerson.Age := Age;
  NewPerson.IsMarried := IsMarried;
  Result := NewPerson;

  // Increase the size of the array and add the new person
  SetLength(People, Length(People) + 1);
  People[Length(People) - 1] := NewPerson;
end;

begin
  // Add three new people to the array
  CreatePerson('John Smith', 35, True);
  CreatePerson('Jane Doe', 28, False);
  CreatePerson('Adam Jones', 42, True);

  // Print out all the people in the array
  for var i := 0 to Length(People) - 1 do
  begin
    // Check if the person is married
    if People[i].IsMarried then
      // Print a message saying they are married
      writeln(People[i].Name, ' is married.')
    else
      // Print a message saying they are not married
      writeln(People[i].Name, ' is not married.');
  end;
end.
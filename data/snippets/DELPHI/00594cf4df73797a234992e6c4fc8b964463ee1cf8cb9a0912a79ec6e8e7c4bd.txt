// This program simulates a bank account management system

program BankAccount;

type
    TTransactionType = (Deposit, Withdrawal, Interest);

var
    accountBalance : Double; // stores the current balance in the account
    transactionAmount : Double; // stores the amount to be deposited or withdrawn
    transactionType : TTransactionType; // stores the type of transaction to be performed

// function to calculate interest based on account balance
function CalculateInterest(balance : Double) : Double;
begin
    Result := balance * 0.05; // assuming a fixed yearly interest rate of 5%
end;

// function to make a deposit
procedure MakeDeposit(amount : Double);
begin
    accountBalance := accountBalance + amount; // updating the account balance
end;

// function to make a withdrawal
procedure MakeWithdrawal(amount : Double);
begin
    if amount <= accountBalance then // checking if the withdrawal amount is less than or equal to the current balance
        accountBalance := accountBalance - amount // updating the account balance
    else
        writeln('Withdrawal amount exceeds account balance'); // printing an error message if the withdrawal amount is greater than the current balance
end;

begin
    accountBalance := 1000; // initializing the account balance to 1000
    MakeDeposit(500); // making a deposit of 500
    MakeWithdrawal(200); // making a withdrawal of 200
    transactionType := Interest; // setting the transaction type to Interest
    transactionAmount := CalculateInterest(accountBalance); // calculating the interest amount
    MakeDeposit(transactionAmount); // depositing the interest amount into the account
    writeln('Total account balance: ', accountBalance); // printing the total account balance
end.
// A complex code snippet in DELPHI
program Complex_Code;

// Import necessary libraries
uses
  SysUtils;

// Create a function to calculate the factorial of a given number
function Factorial(num: Integer): Integer;
begin
  // Initialize a variable to store the result
  var result := 1;
  
  // Loop through the numbers from 1 to num
  for var i := 1 to num do
  begin
    // Multiply the current result with the current number
    result := result * i;
  end;
  
  // Return the final result
  Result := result;
end;

// Create a procedure to display the factorial of a given number
procedure PrintFactorial(num: Integer);
begin
  // Calculate the factorial using the Factorial function
  var factorial := Factorial(num);
  
  // Display the result
  WriteLn('The factorial of ', num, ' is: ', factorial);
end;

// Main program
begin
  // Prompt the user to enter a number
  Write('Enter a number: ');
  var num := StrToInt(ReadLn);
  
  // Check if the number is negative
  if num < 0 then
  begin
    // Display an error message if the number is negative
    WriteLn('Error: Cannot calculate factorial of a negative number');
  end
  else
  begin
    // Call the PrintFactorial procedure to display the result
    PrintFactorial(num);
  end;
end.
unit SimpleCalculator;

interface

type
    { 
    A class representing a simple calculator.
    }
    TSimpleCalculator = class
    private
        FNum1: Integer; { Stores the first operand }
        FNum2: Integer; { Stores the second operand }

    public
        { 
        Calculates the sum of FNum1 and FNum2.
        Returns the result as an Integer.
        }
        function Sum: Integer;

        { 
        Calculates the difference between FNum1 and FNum2.
        Returns the result as an Integer.
        }
        function Difference: Integer;

        { 
        Calculates the product of FNum1 and FNum2.
        Returns the result as an Integer.
        }
        function Product: Integer;

    published
        { 
        Property for accessing or modifying FNum1.
        }
        property Num1: Integer read FNum1 write FNum1;

        { 
        Property for accessing or modifying FNum2.
        }
        property Num2: Integer read FNum2 write FNum2;

    end;
    
implementation

function TSimpleCalculator.Sum: Integer;
begin
    Result := FNum1 + FNum2;
end;

function TSimpleCalculator.Difference: Integer;
begin
    Result := FNum1 - FNum2;
end;

function TSimpleCalculator.Product: Integer;
begin
    Result := FNum1 * FNum2;
end;

end.
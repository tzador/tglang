// This code snippet generates a random encrypted password using the EnDeCrypt
// function in Delphi.

// Define an array of characters for the password generation
var 
  chars: array[1..26] of Char;

// Generate a random number for the length of the password
var
  randomLength: Integer;

// Initialize the array with the characters for the password
chars[1] := 'a';
chars[2] := 'b';
chars[3] := 'c';
chars[4] := 'd';
chars[5] := 'e';
chars[6] := 'f';
chars[7] := 'g';
chars[8] := 'h';
chars[9] := 'i';
chars[10] := 'j';
chars[11] := 'k';
chars[12] := 'l';
chars[13] := 'm';
chars[14] := 'n';
chars[15] := 'o';
chars[16] := 'p';
chars[17] := 'q';
chars[18] := 'r';
chars[19] := 's';
chars[20] := 't';
chars[21] := 'u';
chars[22] := 'v';
chars[23] := 'w';
chars[24] := 'x';
chars[25] := 'y';
chars[26] := 'z';

// Generate a random length between 6 and 12 characters
randomLength := RandomRange(6, 13);

// Initialize a string variable for the password
var
  password: string;

// Loop through the characters array and add a random character to the password
// until it reaches the random length
for var i := 1 to randomLength do
begin
  password := password + chars[RandomRange(1, 27)];
end;

// Convert the password to an ASCII string
var
  asciiPassword: AnsiString;
  passLength: Integer;
begin
  passLength := Length(password);
  for var i := 1 to passLength do
  begin
    asciiPassword := asciiPassword + Chr(Ord(password[i]) + 5);
  end;
end;

// Encrypt the ASCII password using the EnDeCrypt function
var
  encryptedPassword: string;
begin
  encryptedPassword := EnDeCrypt(asciiPassword, passLength);
end;

// Output the encrypted password
Writeln('Your encrypted password is: ', encryptedPassword);

// Function to encrypt and decrypt using XOR operation
function EnDeCrypt(InStr: AnsiString; InLen: LongInt): AnsiString;
var
  randomKey: array[1..10] of Byte; // Initialize a key array for the XOR operation
  Temp_Str: AnsiString; // Temporary string variable
begin
  Randomize;
  for var i := 1 to 10 do
  begin
    randomKey[i] := RandomRange(1, 256); // Randomly generate key values between 1 and 256
  end;
  Temp_Str := InStr;
  for var i := 1 to InLen do
  begin
    Temp_Str [i] := Chr(Ord(InStr[i]) xor randomKey[i mod 10 + 1]); // XOR each character with a different key value
  end;
  Result := Temp_Str
end;
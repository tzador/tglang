/// This procedure takes in an array of integers and a search key
/// It uses binary search to find the index of the key in the array
/// If the key is not present, it returns -1
procedure BinarySearch(arr: array of Integer; key: Integer): Integer;
var
  left, right, mid: Integer;
begin
  left := 0; // initialize left pointer to beginning of array
  right := Length(arr) - 1; // initialize right pointer to end of array
  while left <= right do
  begin
    mid := (left + right) div 2; // calculate midpoint
    if arr[mid] = key then // check if key is equal to midpoint
    begin
      Result := mid; // return midpoint index as result
      Exit; // exit procedure
    end
    else if arr[mid] < key then // if key is greater than midpoint, adjust left pointer
      left := mid + 1
    else // if key is less than midpoint, adjust right pointer
      right := mid - 1;
  end;
  Result := -1; // key not found, return -1 as result
end;
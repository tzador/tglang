unit uCustomer;

interface

type
  TCustomer = class(TObject)
  private
    FCustID: Integer;
    FName: string;
    FAddress: string;
    FPhone: string;
    FEmail: string;
    FLoyaltyPoints: Integer;
    FOrderHistory: TStringList;
  public
    constructor Create(); //constructor method
    destructor Destroy;override; //destructor method
    procedure AddOrderToHistory(order: string); //method to add order to order history
    property CustID: Integer read FCustID write FCustID; //property to access and modify customer ID
    property Name: string read FName write FName; //property to access and modify customer name
    property Address: string read FAddress write FAddress; //property to access and modify customer address
    property Phone: string read FPhone write FPhone; //property to access and modify customer phone number
    property Email: string read FEmail write FEmail; //property to access and modify customer email
    property LoyaltyPoints: Integer read FLoyaltyPoints write FLoyaltyPoints; //property to access and modify customer loyalty points
    property OrderHistory: TStringList read FOrderHistory write FOrderHistory; //property to access and modify customer order history
  end;

implementation

{ TCustomer }

constructor TCustomer.Create();
begin
  inherited;
  FCustID := 0;
  FName := '';
  FAddress := '';
  FPhone := '';
  FEmail := '';
  FLoyaltyPoints := 0;
  FOrderHistory := TStringList.Create;
end;

destructor TCustomer.Destroy;
begin
  FOrderHistory.Free; //free memory allocated for order history
  inherited;
end;

procedure TCustomer.AddOrderToHistory(order: string);
begin
  FOrderHistory.Add(order); //add order to order history list
end;

end.
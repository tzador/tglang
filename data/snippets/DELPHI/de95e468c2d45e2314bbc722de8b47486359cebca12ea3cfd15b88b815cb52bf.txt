// This code snippet is a complex function in DELPHI.
// It takes in two parameters, an array and target value.
// It returns the index of the target value in the array or -1 if not found.
function searchTarget(arr: array of Integer; target: Integer): Integer;
var
    low, high, mid: Integer; // Variables for lower bound, upper bound, and middle index of the array
begin
    low := 0; // Initialize lower bound
    high := Length(arr) - 1; // Initialize upper bound
    // Keep searching until lower bound becomes greater than upper bound
    while low <= high do
    begin
        mid := (low + high) div 2; // Calculate middle index
        // Check if target is equal to element at middle index
        if arr[mid] = target then
        begin
            Result := mid; // Set function's result as middle index
            Exit; // Exit the function
        end
        // If target is greater than element at middle index,
        // change lower bound to next element
        else if target > arr[mid] then
            low := mid + 1
        // If target is less than element at middle index,
        // change upper bound to previous element
        else
            high := mid - 1;
    end;
    Result := -1; // Set function's result as -1 when target is not found
end;
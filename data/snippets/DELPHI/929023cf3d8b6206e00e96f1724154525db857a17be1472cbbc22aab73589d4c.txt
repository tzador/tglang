// This code snippet creates a class called "Student" with four properties and three methods

type
  // Define the class "Student"
  Student = class
    private //Only accessible within the class
      id: Integer;
      name: String;
      age: Integer;
      major: String;
    public //Accessible from outside the class
      // Constructor method to initialize the class
      constructor Create(aId: Integer; aName: String; anAge: Integer; aMajor: String);
      // Getter methods to access the private properties
      function GetId: Integer;
      function GetName: String;
      function GetAge: Integer;
      function GetMajor: String;
      // Setter methods to update the private properties
      procedure SetId(aId: Integer);
      procedure SetName(aName: String);
      procedure SetAge(anAge: Integer);
      procedure SetMajor(aMajor: String);
  end;

implementation

// Constructor method to initialize the class
constructor Student.Create(aId: Integer; aName: String; anAge: Integer; aMajor: String);
begin
  inherited Create; //Calls the inherited Create method of the parent class
  id := aId;
  name := aName;
  age := anAge;
  major := aMajor;
end;

// Getter method to access the private property "id"
function Student.GetId: Integer;
begin
  Result := id;
end;

// Getter method to access the private property "name"
function Student.GetName: String;
begin
  Result := name;
end;

// Getter method to access the private property "age"
function Student.GetAge: Integer;
begin
  Result := age;
end;

// Getter method to access the private property "major"
function Student.GetMajor: String;
begin
  Result := major;
end;

// Setter method to update the private property "id"
procedure Student.SetId(aId: Integer);
begin
  id := aId;
end;

// Setter method to update the private property "name"
procedure Student.SetName(aName: String);
begin
  name := anName;
end;

// Setter method to update the private property "age"
procedure Student.SetAge(anAge: Integer);
begin
  age := anAge;
end;

// Setter method to update the private property "major"
procedure Student.SetMajor(aMajor: String);
begin
  major := aMajor;
end;
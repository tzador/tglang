//This code snippet creates a class for a simple calculator
//with basic arithmetic operations

type
  //class for calculator
  TCalculator = class
    //private variables
    private
      FValue1: Integer; //input value 1
      FValue2: Integer; //input value 2
      FResult: Integer; //result of calculation
    //public properties
    public
      property Value1: Integer read FValue1 write FValue1; //allows access to input value 1
      property Value2: Integer read FValue2 write FValue2; //allows access to input value 2
      property Result: Integer read FResult; //allows read-only access to result
    //public methods
    public
      //function for addition
      function Add: Integer;
      //function for subtraction
      function Subtract: Integer;
      //function for multiplication
      function Multiply: Integer;
      //function for division
      function Divide: Integer;
  end;

//implementation of Add function
function TCalculator.Add: Integer;
begin
  //adds value 1 and value 2 and assigns result to Result variable
  FResult := FValue1 + FValue2;
  //returns value of Result variable
  Result := FResult;
end;

//implementation of Subtract function
function TCalculator.Subtract: Integer;
begin
  //subtracts value 2 from value 1 and assigns result to Result variable
  FResult := FValue1 - FValue2;
  //returns value of Result variable
  Result := FResult;
end;

//implementation of Multiply function
function TCalculator.Multiply: Integer;
begin
  //multiplies value 1 and value 2 and assigns result to Result variable
  FResult := FValue1 * FValue2;
  //returns value of Result variable
  Result := FResult;
end;

//implementation of Divide function
function TCalculator.Divide: Integer;
begin
  //divides value 1 by value 2 and assigns result to Result variable
  FResult := FValue1 / FValue2;
  //returns value of Result variable
  Result := FResult;
end;

//create an instance of TCalculator class
var
  Calc: TCalculator;
begin
  //initialize values for input
  Calc.Value1 := 5;
  Calc.Value2 := 3;
  //call functions and store results in variables
  var addResult := Calc.Add;
  var subResult := Calc.Subtract;
  var mulResult := Calc.Multiply;
  var divResult := Calc.Divide;
  //display results
  Writeln('Addition: ', addResult); //output: 8
  Writeln('Subtraction: ', subResult); //output: 2
  Writeln('Multiplication: ', mulResult); //output: 15
  Writeln('Division: ', divResult); //output: 1.67
end.
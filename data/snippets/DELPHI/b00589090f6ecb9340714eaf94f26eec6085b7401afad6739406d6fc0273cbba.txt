//This code snippet shows how to perform a binary search in an array of integers
program BinarySearch;

//create a function that performs the binary search
//the function takes in an array of integers and the number to be searched for
function binarySearch(arr: array of integer; num: integer): integer;

  //set the starting index to 0
  var start: integer := 0;
  
  //set the ending index to the length of the array - 1
  var ending: integer := Length(arr) - 1;
  
  //loop until the starting index is less than or equal to the ending index
  while (start <= ending) do
  begin
  
    //find the middle index by adding the starting and ending index and dividing by 2
    var mid: integer := (start + ending) div 2;
    
    //check if the number at the middle index is equal to the number being searched for
    if (arr[mid] = num) then
    begin
      //return the index of the number
      Result := mid;
      //stop the loop
      Exit;
    end
    //if the number at the middle index is less than the number being searched for
    //set the starting index to the next index
    else if (arr[mid] < num) then
      start := mid + 1
    //if the number at the middle index is greater than the number being searched for
    //set the ending index to the previous index
    else
      ending := mid - 1;
  end;

  //if the number is not found, return -1
  Result := -1;
  
end;

//main program
begin
  //define an array of integers
  var arr: array of integer := [1, 3, 5, 7, 9];
  
  //search for the number 7 in the array using binary search
  var index: integer := binarySearch(arr, 7);
  
  //output the result
  writeln('The index of 7 is ', index);
end.
var
  i: Integer;
begin
  // Initialize array with random values
  Randomize;
  for i := 1 to 10 do
  begin
    myArray[i] := Random(100);
  end;
  
  // Sort the array using quicksort algorithm
  QuickSort(myArray, 1, 10);
  
  // Print the sorted array
  for i := 1 to 10 do
  begin
    WriteLn(myArray[i]); // Output each element in a new line
  end;
end;

function QuickSort(var A: array of Integer; l, r: Integer): Integer;
// Function for quicksort algorithm
// A - array to be sorted
// l - leftmost index of the array
// r - rightmost index of the array
var
  i, j, pivot, temp: Integer;
begin
  i := l;
  j := r;
  pivot := A[(l + r) div 2]; // Choose the pivot element as the middle element in the array
  while i <= j do
  begin
    while A[i] < pivot do // Find an element on the left that is greater than the pivot
      i := i + 1;
    while A[j] > pivot do // Find an element on the right that is smaller than the pivot
      j := j - 1;
    if i <= j then // Swap the elements if they are not in the correct order
    begin
      temp := A[i];
      A[i] := A[j];
      A[j] := temp;
      i := i + 1;
      j := j - 1;
    end;
  end;

  // Sort the left and right subarrays
  if l < j then
    QuickSort(A, l, j);
  if i < r then
    QuickSort(A, i, r);

  Result := 0;
end;
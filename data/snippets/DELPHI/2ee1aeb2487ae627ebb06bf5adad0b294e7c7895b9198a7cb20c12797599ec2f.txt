unit Unit1;

interface

uses
    System.Classes, System.SysUtils, System.IOUtils;

type
    TLogger = class
    private
        FLogFile: TStringList;
        FLogFileName: string;
        procedure SaveLogToFile(const ALog: string);
    public
        constructor Create(const ALogFileName: string);
        destructor Destroy; override;
        procedure LogMessage(const AMessage: string);
    end;

implementation

constructor TLogger.Create(const ALogFileName: string);
begin
    inherited Create;
    FLogFile := TStringList.Create;
    FLogFileName := ALogFileName;
    if TFile.Exists(FLogFileName) then
    begin
        FLogFile.LoadFromFile(FLogFileName);
    end;
end;

destructor TLogger.Destroy;
begin
    FLogFile.Free;
    inherited;
end;

procedure TLogger.LogMessage(const AMessage: string);
begin
    FLogFile.Add(Format('[%s]: %s', [DateTimeToStr(Now), AMessage]));
    SaveLogToFile(FLogFileName);
end;

procedure TLogger.SaveLogToFile(const ALog: string);
begin
    FLogFile.SaveToFile(ALog);
end;

end.
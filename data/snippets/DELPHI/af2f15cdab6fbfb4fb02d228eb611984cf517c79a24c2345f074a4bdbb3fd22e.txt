unit Unit1;

interface

uses
  System.Classes, System.SysUtils;

type
  TMyClass = class
  private
    FMyInteger: Integer; { this is a private integer field }
    FMyString: string; { this is a private string field }

    function AddTwoNumbers(a, b: Integer): Integer; { this is a private function that adds two numbers }
    procedure PrintMessage(message: string); { this is a private procedure that prints a message }

  public
    constructor Create(); { this is a public constructor that sets the values for the private fields }
    destructor Destroy(); override; { this is a public destructor }

    function GetString(): string; { this is a public function that returns the private string field }
    procedure SetString(value: string); { this is a public procedure that sets the value for the private string field }

    property MyInteger: Integer read FMyInteger write FMyInteger; { this is a public property for the private integer field }
    property MyString: string read FMyString write SetString; { this is a public property for the private string field }
  end;

implementation

constructor TMyClass.Create();
begin
  FMyInteger := 0;
  FMyString := '';
end;

destructor TMyClass.Destroy();
begin
  // do any cleanup here
end;

function TMyClass.AddTwoNumbers(a, b: Integer): Integer;
begin
  Result := a + b;
end;

procedure TMyClass.PrintMessage(message: string);
begin
  writeln(message);
end;

function TMyClass.GetString(): string;
begin
  Result := FMyString;
end;

procedure TMyClass.SetString(value: string);
begin
  FMyString := value;
end;

end.
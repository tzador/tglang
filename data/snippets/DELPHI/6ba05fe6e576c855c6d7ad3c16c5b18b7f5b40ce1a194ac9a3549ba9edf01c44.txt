//This code snippet creates a class called "Person" with various properties and methods.

type
  Person = class
    private
      FName: string; //This property holds the first name of the person.
      LName: string; //This property holds the last name of the person.
      Age: integer; //This property holds the age of the person.
    public
      //Constructor that takes in the first name, last name, and age of the person.
      constructor Create(AFirstName, ALastName: string; AAge: integer);
      //Method that returns the full name of the person.
      function GetFullName: string;
      //Method that increments the age of the person by 1.
      procedure IncrementAge;
  end;

//Implementation of the constructor.
constructor Person.Create(AFirstName, ALastName: string; AAge: integer);
begin
  FName := AFirstName; //Sets the first name property to the input value.
  LName := ALastName; //Sets the last name property to the input value.
  Age := AAge; //Sets the age property to the input value.
end;

//Implementation of the GetFullName method.
function Person.GetFullName: string;
begin
  Result := FName + ' ' + LName; //Concatenates the first and last name properties and returns it.
end;

//Implementation of the IncrementAge method.
procedure Person.IncrementAge;
begin
  Age := Age + 1; //Increments the age property by 1.
end;

//Example usage of the Person class.
var
  person: Person;
begin
  person := Person.Create('John', 'Doe', 25); //Creates a new instance of the Person class.
  WriteLn(person.GetFullName); //Outputs "John Doe".
  person.IncrementAge; //Calls the IncrementAge method.
  WriteLn(person.Age); //Outputs "26".
end.
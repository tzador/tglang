unit Unit1;

interface

uses
  SysUtils,
  Classes,
  Controls,
  Forms,
  Dialogs,
  StdCtrls,
  ExtCtrls;

type
  // This is a custom component that extends TPanel class
  TCustomPanel = class(TPanel)
  private
    FBackgroundColor: TColor;
    // This variable stores the current mouse position
    FMousePosition: TPoint;
    // Private function to set the background color
    procedure SetBackgroundColor(AValue: TColor);
    // Event that triggers when the mouse enters the panel
    procedure PanelMouseEnter(Sender: TObject);
    // Event that triggers when the mouse leaves the panel
    procedure PanelMouseLeave(Sender: TObject);
  protected
    // Overridden method to handle paint event
    procedure Paint; override;
  published
    // Property to change the background color of the panel
    property BackgroundColor: TColor read FBackgroundColor write SetBackgroundColor;
  public
    constructor Create(AOwner: TComponent); override;
  end;

  // Main form that will contain the custom panel
  TForm1 = class(TForm)
    // Property that sets the custom panel as the parent of the form
    CustomPanel1: TCustomPanel;
    // Button to change the background color
    Button1: TButton;
    // Label to show the current mouse position
    Label1: TLabel;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm} // Specifies the name of the binary resource file

// Constructor for the custom panel component
constructor TCustomPanel.Create(AOwner: TComponent);
begin
  inherited;
  // Set default background color
  FBackgroundColor := clWhite;
  // Assign event handlers for mouse events
  OnMouseEnter := PanelMouseEnter;
  OnMouseLeave := PanelMouseLeave;
end;

// Private function to set the background color
procedure TCustomPanel.SetBackgroundColor(AValue: TColor);
begin
  // Check if new value is different than current value
  if FBackgroundColor <> AValue then
  begin
    FBackgroundColor := AValue;
    // Repaint the panel to apply the color change
    Repaint;
  end;
end;

// Event that triggers when the mouse enters the panel
procedure TCustomPanel.PanelMouseEnter(Sender: TObject);
begin
  // Get current mouse position
  FMousePosition := Mouse.CursorPos;
end;

// Event that triggers when the mouse leaves the panel
procedure TCustomPanel.PanelMouseLeave(Sender: TObject);
begin
  // Set the label text to show the current mouse position
  (Owner as TForm1).Label1.Caption := 'Mouse left at: ' + IntToStr(FMousePosition.X) + ',' + IntToStr(FMousePosition.Y);
end;

// Overridden method to handle paint event
procedure TCustomPanel.Paint;
begin
  // Call parent method to handle background
  inherited;
  // Set canvas brush property to the background color
  Canvas.Brush.Color := FBackgroundColor;
  // Draw filled rectangle on the panel
  Canvas.FillRect(ClientRect);
end;

// Event handler for button click
procedure TForm1.Button1Click(Sender: TObject);
begin
  // Call custom panel property to change background color
  CustomPanel1.BackgroundColor := clRed;
end;

end.
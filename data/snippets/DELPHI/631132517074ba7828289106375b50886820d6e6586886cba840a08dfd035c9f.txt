// This code snippet is a function that solves a quadratic equation
// It takes in three parameters - a, b, and c - representing the coefficients of the equation
// The function returns two values - the two possible solutions for x
function solveQuadraticEquation(a, b, c: Integer): (Double, Double);
begin
    // Calculate the discriminant (b^2-4ac)
    // The discriminant determines the number of solutions for the equation
    let discriminant := (b * b) - (4 * a * c);

    // If the discriminant is negative, there are no real solutions
    // Return an error value to indicate this
    if (discriminant < 0) then
        exit (-1, -1);

    // If the discriminant is zero, there is only one solution (x = -b/2a)
    // Calculate and return this single solution
    if (discriminant = 0) then
        exit ((-b) / (2 * a), (-b) / (2 * a));

    // If the discriminant is positive, there are two solutions
    // Calculate and return both solutions
    let solution1 := ((-b) + Sqrt(discriminant)) / (2 * a);
    let solution2 := ((-b) - Sqrt(discriminant)) / (2 * a);

    exit (solution1, solution2);
end;
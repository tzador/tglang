// This code snippet generates a list of prime numbers up to a given limit

procedure GeneratePrimes(const Limit: integer);
var
  Numbers: array of boolean; // create an array to store the numbers
  I, J: integer; // variables for looping
begin
  SetLength(Numbers, Limit + 1); // set the length of the array to the limit + 1

  // set all elements of the array to true, indicating they are potentially prime
  for I := 2 to Limit do
    Numbers[I] := True;

  // loop through all numbers up to the square root of the limit
  for I := 2 to Trunc(Sqrt(Limit)) do
  begin
    // if the number is still potentially prime
    if Numbers[I] then
    begin
      // loop through all multiples of the number
      for J := I * I to Limit do
      begin
        // set the multiple to false, indicating it is not prime
        Numbers[J] := False;
      end;
    end;
  end;

  // output all the remaining true elements, which correspond to prime numbers
  for I := 2 to Limit do
  begin
    if Numbers[I] then
      Writeln(I);
  end;
end;
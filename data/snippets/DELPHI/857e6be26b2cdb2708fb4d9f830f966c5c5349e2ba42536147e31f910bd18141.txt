{ This code snippet creates a class called 'TInterface'. }
{ TInterface: A class that encapsulates a specific interface. }
{ Properties: }
{ Name - stores the name of the interface as a string }
{ Methods: }
{ GetName - returns the name of the interface as a string }
{ SetName - sets the name of the interface to a given string }
unit InterfaceClass;

interface

type
  TInterface = class
  private
    FName: string; // name of the interface
  public
    { Constructor }
    constructor Create;
    { Destructor }
    destructor Destroy; override;

    { Methods }
    function GetName: string;
    procedure SetName(const AName: string);

    { Properties }
    property Name: string read FName write FName;
  end;

implementation

{ TInterface }

constructor TInterface.Create;
begin
  FName := ''; // initialize Name to empty string
end;

destructor TInterface.Destroy;
begin
  inherited;
end;

function TInterface.GetName: string;
begin
  Result := FName;
end;

procedure TInterface.SetName(const AName: string);
begin
  FName := AName;
end;

end.
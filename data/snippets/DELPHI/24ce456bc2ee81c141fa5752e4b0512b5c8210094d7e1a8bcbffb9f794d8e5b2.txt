// Use the 'TMemTable' component to create a in-memory dataset
var 
  MemTable1: TMemTable;
begin
  MemTable1 := TMemTable.Create(nil);        // Create an instance of the TMemTable
  MemTable1.FieldDefs.Add('EmployeeName', ftString, 50); // Add field definition for EmployeeName
  MemTable1.FieldDefs.Add('Salary', ftCurrency);         // Add field definition for Salary
  MemTable1.CreateDataSet;                               // Create the dataset
  MemTable1.Append;                                      // Begin appending records
  MemTable1.FieldByName('EmployeeName').AsString := 'John Smith';  // Set EmployeeName field value
  MemTable1.FieldByName('Salary').AsCurrency := 50000;             // Set Salary field value
  MemTable1.Post;                                        // Post the record
  MemTable1.Append;                                      // Begin appending another record
  MemTable1.FieldByName('EmployeeName').AsString := 'Jane Doe';    // Set EmployeeName field value
  MemTable1.FieldByName('Salary').AsCurrency := 60000;             // Set Salary field value
  MemTable1.Post;                                        // Post the record
  MemTable1.First;                                       // Set the cursor to the first record
  while not MemTable1.Eof do                              // Loop through all records
  begin
    ShowMessage('Employee Name: ' + MemTable1.FieldByName('EmployeeName').AsString +
                ' Salary: ' + FloatToStr(MemTable1.FieldByName('Salary').AsCurrency)); // Show record values
    MemTable1.Next;                                      // Move to next record
  end;
  MemTable1.Free;                                        // Free the memory used by the TMemTable instance
end;
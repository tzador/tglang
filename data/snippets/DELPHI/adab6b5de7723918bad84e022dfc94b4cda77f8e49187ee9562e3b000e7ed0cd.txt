procedure SortArray(var arr : array of Integer; l, r : Integer);
var
  i, j : Integer;
  pivot, tmp : Integer;
begin

  i := l;
  j := r;
  pivot := arr[(l + r) / 2]; //selects pivot element

  repeat
    while (arr[i] < pivot) do //finds element on left that should be on right
      i := i + 1;

    while (pivot < arr[j]) do //finds element on right that should be on left
      j := j - 1;

    if (i <= j) then
    begin
      tmp := arr[i]; //swap elements
      arr[i] := arr[j];
      arr[j] := tmp;
      i := i + 1;
      j := j - 1;
    end;
  until (i > j);

  if (l < j) then
    SortArray(arr, l, j); //recursively sort left side of array
  
  if (i < r) then
    SortArray(arr, i, r); //recursively sort right side of array
end;
// This code snippet shows how to create a complex record type in DELPHI.
type
  // Define a record type named TPerson
  TPerson = record
    // Add fields to the record
    Name: string; // A string for the person's name
    Age: integer; // An integer for the person's age
    Address: string; // A string for the person's address
    PhoneNumbers: array[1..3] of string; // An array to store phone numbers
    Email: string; // A string for the person's email
  end;
  
  // Define a variable named Person of type TPerson
  Person: TPerson;
  
// To assign values to the record fields, use the dot notation
Person.Name := 'John Doe';
Person.Age := 30;
Person.Address := '123 Main St';
Person.PhoneNumbers[1] := '555-555-5555';
Person.PhoneNumbers[2] := '555-123-4567';
Person.PhoneNumbers[3] := '555-987-6543';
Person.Email := 'johndoe@example.com';

// To access the values stored in the record, use the dot notation as well
WriteLn(Person.Name); // Output: John Doe
WriteLn(Person.Age); // Output: 30
WriteLn(Person.Address); // Output: 123 Main St
WriteLn(Person.PhoneNumbers[1]); // Output: 555-555-5555
WriteLn(Person.PhoneNumbers[2]); // Output: 555-123-4567
WriteLn(Person.PhoneNumbers[3]); // Output: 555-987-6543
WriteLn(Person.Email); // Output: johndoe@example.com
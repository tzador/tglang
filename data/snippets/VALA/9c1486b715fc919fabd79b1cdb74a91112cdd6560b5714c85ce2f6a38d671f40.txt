/* An example of a complex code snippet in VALA */

/* A method that takes in a list of integers and returns
   the sum of the first half of the list */
public int sum_first_half(int[] nums)
{
    int sum = 0;
    if (nums.length % 2 == 0) // checks if the list is even
    {
        for (int i = 0; i < nums.length / 2; i++) // loops through the first half of the list
        {
            sum += nums[i]; // adds the current number to the total sum
        }
    }
    else // if the list is odd
    {
        for (int i = 0; i < (nums.length + 1) / 2; i++) // loops through the first half of the list, including the middle number
        {
            sum += nums[i];
        }
    }

    return sum; // returns the calculated sum
}

/* An example of a class with multiple constructors and methods */
public class Person
{
    private string name;
    private int age;
    private string occupation;

    // default constructor
    public Person()
    {
        this.name = "John Doe";
        this.age = 0;
        this.occupation = "Unemployed";
    }

    // parameterized constructor
    public Person(string name, int age, string occupation)
    {
        this.name = name;
        this.age = age;
        this.occupation = occupation;
    }

    // method to print out the name and occupation of a person
    public string get_name_and_occupation()
    {
        string info = this.name + " is " + this.age + " years old and works as a(n) " + this.occupation;
        return info;
    }
}

/* Example usage of all the previously defined elements */
int[] numbers = { 3, 5, 2, 8, 1, 4 }; // creates an array of integers
int result = sum_first_half(numbers); // calculates the sum of the first half of the array
print("The sum of the first half of the array is " + result); // prints out the result

Person default_person = new Person(); // creates a Person object using the default constructor
print(default_person.get_name_and_occupation()); // prints out the information of the default person

Person custom_person = new Person("Jane Doe", 28, "Software Engineer"); // creates a Person object using the parameterized constructor
print(custom_person.get_name_and_occupation()); // prints out the information of the custom person
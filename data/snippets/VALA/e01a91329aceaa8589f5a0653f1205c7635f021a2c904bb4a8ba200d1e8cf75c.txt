public class ComplexNumber : Object
{
    public double real_part { get; private set; }
    public double imag_part { get; private set; }

    public ComplexNumber(double real, double imag)
    {
        real_part = real;
        imag_part = imag;
    }

    public static ComplexNumber operator+ (ComplexNumber num1, ComplexNumber num2)
    {
        return new ComplexNumber(num1.real_part + num2.real_part, num1.imag_part + num2.imag_part);
    }

    public static ComplexNumber operator- (ComplexNumber num1, ComplexNumber num2)
    {
        return new ComplexNumber(num1.real_part - num2.real_part, num1.imag_part - num2.imag_part);
    }

    public static ComplexNumber operator* (ComplexNumber num1, ComplexNumber num2)
    {
        return new ComplexNumber((num1.real_part * num2.real_part) - (num1.imag_part * num2.imag_part),
            (num1.real_part * num2.imag_part) + (num1.imag_part * num2.real_part));
    }

    public static ComplexNumber operator/ (ComplexNumber num1, ComplexNumber num2)
    {
        double real = (num1.real_part * num2.real_part) + (num1.imag_part * num2.imag_part);
        double imag = (num2.real_part * num1.imag_part) - (num1.real_part * num2.imag_part);
        double denominator = (num2.real_part * num2.real_part) + (num2.imag_part * num2.imag_part);
        return new ComplexNumber(real / denominator, imag / denominator);
    }

    public override string to_string()
    {
        string sign = " + ";
        if (imag_part < 0) sign = " - ";
        return real_part + sign + imag_part + "i";
    }

    public static int main()
    {
        ComplexNumber num1 = new ComplexNumber(3.0, 4.0);
        ComplexNumber num2 = new ComplexNumber(5.0, -2.0);
        ComplexNumber sum = num1 + num2;
        ComplexNumber difference = num1 - num2;
        ComplexNumber product = num1 * num2;
        ComplexNumber quotient = num1 / num2;
        num1.to_string();
        return 0;
    }
}
using GLib; //import the GLib library for built-in functions
using Gtk; //import the Gtk library for graphical user interface

//define a new class named "MyClass" that inherits from the Object class
public class MyClass : Object {

    private string name; //declare a private string variable called "name"

    //define a constructor for the class that takes in a string parameter called "input_name"
    public MyClass (string input_name){
        name = input_name; //assign the input_name value to the name variable
    }

    //define a method called "get_name" that returns a string value
    public string get_name(){
        return name; //return the value of the name variable
    }

    //define a main function that will be called when the program is run
    public static int main(string[] args){

        //create a new instance of the MyClass class and pass in a string value
        var obj = new MyClass("John Doe"); 

        //use the get_name method to retrieve the value of the name variable and store it in a new string variable
        string name = obj.get_name();

        //print out the value of the name variable to the console
        stdout.printf("Name: %s", name);

        //create a new window object from the Gtk library
        var window = new Window();

        //set the title of the window
        window.set_title("Hello World");

        //create a button widget
        var button = new Button.with_label("Click Me!");

        //add the button widget to the window object
        window.add(button);

        //connect a callback function to the button widget's "clicked" signal
        button.clicked.connect((_) => {
            //print out a message to the console when the button is clicked
            stdout.printf("Button clicked!");
        });

        //show the window and all its child widgets
        window.show_all();

        //start the main loop for the Gtk library
        Gtk.main();

        return 0; //return 0 to indicate successful execution
    }
}
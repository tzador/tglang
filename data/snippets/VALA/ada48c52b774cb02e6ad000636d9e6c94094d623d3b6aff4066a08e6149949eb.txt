// This is a comment in VALA

// This is a multi-line comment in VALA that spans across multiple lines
/*
 * This is a variable declaration in VALA
 * 'int' is the data type
 * 'num' is the name of the variable
 * '25' is the initial value assigned to the variable
 */
int num = 25;

// This is a function in VALA
// 'double' is the return type
// 'square' is the name of the function
// 'int' num is a parameter of type 'int'
double square(int num) {
    // 'result' is a variable declared inside the function
    // 'num' is used as an argument to complete the calculation
    double result = num * num;

    // Return statement to return the result
    return result;
}

// This is a conditional statement in VALA
// 'if' checks if a condition is true
// 'else' executes if the condition is false
if (num > 10) {
    // Print statement to output a message to the console
    print("The number is greater than 10");
} else {
    print("The number is less than or equal to 10");
}

// This is a loop in VALA
// 'while' will iterate as long as the condition is true
int i = 0;
while (i < num) {
    // 'i' will increment by 1 for each iteration
    // Print statement to output the value of 'i'
    print("%d", i);
    i++;
}

// This is a class in VALA
class Animal {
    // 'name' and 'type' are properties of the class
    string name, type;

    // This is a constructor to initialize the properties of the class
    public Animal(string name, string type) {
        this.name = name;
        this.type = type;
    }

    // This is a method in the class
    // 'void' is the return type for a method that does not return anything
    void introduce() {
        // Print statement to output a message with the properties of the animal
        print("Hi, my name is %s and I am a %s", name, type);
    }
}

// This is an instance/object of the class 'Animal'
// 'dog' is the name and 'mammal' is the type
Animal dog = new Animal("dog", "mammal");

// Call the method 'introduce' on the object 'dog'
dog.introduce();
using GLib;
using Gtk;

/**
 * A sample class that implements a binary search algorithm
 */
class BinarySearch : Object {

    /**
     * The main binary search function
     * @param array an array of integers
     * @param target the integer to be searched
     * @return the index of the target in the array, -1 if not found
     */
    public static int binary_search(int[] array, int target) {
        int min = 0;
        int max = array.length - 1;
        int mid = (max + min) / 2;

        while (min <= max) {
            // Check if target is at the middle of the array
            if (array[mid] == target) {
                return mid;
            }
            // If target is smaller, search left half of array
            else if (array[mid] > target) {
                max = mid - 1;
            }
            // If target is larger, search right half of array
            else {
                min = mid + 1;
            }
            // Recalculate middle index
            mid = (max + min) / 2;
        }

        // If target not found, return -1
        return -1;
    }

    /**
     * Sample main function to test binary search
     */
    public static void main(string[] args) {
        // Create an array of integers
        int[] array = {1, 3, 5, 7, 8, 10, 15, 20};

        // Search for target integer
        int target = 8;
        int index = binary_search(array, target);

        // Print index of target
        stdout.printf("Target %d found at index %d", target, index);
    }
}
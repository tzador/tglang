// This is a Vala program showcasing classes, interfaces, and properties

// Define a class named "Animal"
public class Animal {

    // Create a property for the animal's name
    public string name { get; set; }

    // Define a constructor that takes in the animal's name as an argument
    public Animal (string animalName) {
        name = animalName;
    }

    // Define a method for the animal to introduce itself
    public string introduce () {
        return "Hello, my name is " + name + "!";
    }
}

// Define an interface for animals that can fly
public interface IFly {

    // Create a property for the animal's wing length
    public int wing_length { get; set; }

    // Define a method for the animal to fly
    public void fly ();
}

// Define a subclass of Animal that implements the IFly interface
public class Bird : Animal, IFly {

    // Add a constructor that takes in the bird's name and wing length as arguments
    public Bird (string birdName, int birdWingLength) : base (birdName) {
        wing_length = birdWingLength;
    }

    // Implement the IFly interface's fly method
    public void fly () {
        print (name + " is flying with a wing length of " + wing_length + " cm!");
    }
}

// Create an instance of a Bird named "Eagle" with a wing length of 50 cm
var eagle = new Bird ("Eagle", 50);

// Call the introduce method on the eagle instance and print the output
print (eagle.introduce ());

// Call the fly method on the eagle instance
eagle.fly ();

// Output:
// Hello, my name is Eagle!
// Eagle is flying with a wing length of 50 cm!
// Fibonacci sequence using Dynamic Programming

// Function to find the nth Fibonacci number
// Takes input as an integer
int fibonacci(int n) {

    // Initialize an array to store previously calculated values
    int[] fib_array = new int[n+2];

    // First two elements of the array are initialized to 0 and 1
    // These are the base cases for the sequence
    fib_array[0] = 0;
    fib_array[1] = 1;

    // Loop to calculate the Fibonacci numbers
    // Starts from the third element of the array
    for (int i = 2; i <= n; i++) {
        // The Fibonacci number at position i is the sum of the previous two numbers
        fib_array[i] = fib_array[i-1] + fib_array[i-2];
    }

    // Return the nth Fibonacci number
    return fib_array[n];
}

// Main function to print the Fibonacci sequence up to the nth number
int main() {

    // Get user input for the number of terms
    stdout.printf("Enter the number of terms: ");
    int n = int.parse(stdin.read_line());

    // Loop to print the Fibonacci sequence up to the nth term
    for (int i = 0; i < n; i++) {
        // Call the fibonacci function and print the result
        stdout.printf("%d ", fibonacci(i));
    }

    // Print a new line at the end
    stdout.printf("\n");

    // End the program
    return 0;
}
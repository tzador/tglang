/* This program uses the Clutter API to display a spinning rectangle */
class SpinningRectangle : Clutter.Actor {
  public int WIDTH = 200;
  public int HEIGHT = 200;
  public double ANGLE = 0.0;
 
  /* Constructor to initialize the rectangle and add it to the stage */
  construct {
    this.width = WIDTH;
    this.height = HEIGHT;
    Clutter.Stage stage = Clutter.Stage.get_default ();
    stage.add_child (this);
    this.show ();
  }
 
  /* Update function to rotate the rectangle every 50 milliseconds */
  public bool update () {
    ANGLE += 100 * Clutter. Timeline. frame_time () / 1000;
    if (ANGLE >= 360.0) {
      ANGLE = 0.0;
    }
    this.save_easing_state ();
    this.set_rotation (Clutter.RotateAxis.Z_AXIS, ANGLE, WIDTH / 2, HEIGHT / 2, 0);
    this.restore_easing_state ();
    return true;
  }
}

/* Main function to create an instance of SpinningRectangle and start the update loop */
int main (string[] args) {
  Clutter.init (ref args);
  SpinningRectangle rectangle = new SpinningRectangle ();
  rectangle.set_size (rectangle.WIDTH, rectangle.HEIGHT);
  Clutter. Timeline.create (50, 0, (Clutter. timeline callback) rectangle.update).start ();
  Clutter.main ();
  return 0;
}
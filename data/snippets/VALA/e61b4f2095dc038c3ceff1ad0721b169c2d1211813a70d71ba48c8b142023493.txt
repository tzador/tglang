/*
 * This is a complex code using Vala programming language.
 * It creates a class with a constructor and multiple methods,
 * including a static method and an asynchronous method.
 */

class ComplexCode {
    // class variables
    private int var1;
    private string var2;
    
    // constructor with parameters
    public ComplexCode(int arg1, string arg2) {
        this.var1 = arg1;
        this.var2 = arg2;
    }
    
    // basic method to print class variables
    public void print_vars() {
        print("Variable 1: " + var1);
        print("Variable 2: " + var2);
    }
    
    // static method to perform a calculation based on class variables
    public static int calculate(int num1, int num2) {
        return num1 + num2;
    }
    
    // asynchronous method to print a message after a delay
    public async void delay_print(string message, int delay) {
        // using async code block
        async {
            // wait for specified delay
            yield wait_for_seconds(delay);
            // print message
            print(message);
        }
    }
}

// main function to create an instance of ComplexCode class
int main() {
    // create an instance with constructor arguments
    var complex_obj = new ComplexCode(5, "Hello");
    // call basic method to print variables
    complex_obj.print_vars();
    
    // call static method to perform calculation
    int result = ComplexCode.calculate(2, 3);
    print("Result: " + result);
    
    // call asynchronous method to print a message after a delay
    complex_obj.delay_print("Delayed Message", 2);
    
    // return 0 to indicate successful execution
    return 0;
}
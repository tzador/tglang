/* Function to merge two sorted arrays */
int[] merge(int[] a, int[] b, int size_a, int size_b) {
  int i = 0; //initializing the counter
  int j = 0;
  int k = 0;
  int[] c = new int[size_a + size_b]; //creating a new array to store merged values
  
  /* Looping till one of the arrays reaches its end */
  while (i < size_a && j < size_b) {
    /* Comparing values at current index of both arrays */
    if (a[i] < b[j]) {
      c[k++] = a[i++]; //if value in a is less, add it to the merged array
    }
    else {
      c[k++] = b[j++]; //else add value from b
    }
  }
  
  /* If any elements are remaining in array a, add them to merged array */
  while (i < size_a) {
    c[k++] = a[i++];
  }
  
  /* If any elements are remaining in array b, add them to merged array */
  while (j < size_b) {
    c[k++] = b[j++];
  }
  
  return c; //return the merged sorted array
}

/* Example usage to merge two sorted arrays and print the result */
void main() {
  int[] array1 = {1, 4, 6, 9}; //first sorted array
  int[] array2 = {2, 3, 5, 8}; //second sorted array
  int size1 = array1.length;
  int size2 = array2.length;
  int[] merged_array;
  
  /* Calling the merge function */
  merged_array = merge(array1, array2, size1, size2);
  
  /* Printing the merged sorted array in a formatted manner */
  print("Merged Sorted Array: ");
  for (int i = 0; i < merged_array.length; i++) {
    print("%d ", merged_array[i]);
  }
}
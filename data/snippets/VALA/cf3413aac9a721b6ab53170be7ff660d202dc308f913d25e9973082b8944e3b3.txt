// This is a long and complex code snippet in VALA

// Create a new class called "MyClass"
public class MyClass : Object {
    
    // Create a new variable "number" of type int
    private int number;
    
    // Create a constructor that sets the initial value of number
    // and takes in an integer as a parameter
    public MyClass (int num) {
        number = num;
    }
    
    // Create a method called "printNumber" that prints the number variable
    public void printNumber() {
        stdout.printf("The number is %d", number);
    }
    
    // Create a virtual method called "multiply" that takes in an integer
    // and multiplies it with the number variable
    public virtual int multiply(int num) {
        return num * number;
    }
    
    // Create a new subclass called "MySubclass" that extends "MyClass"
    public class MySubclass : MyClass {
        
        // Create a new variable "string" of type string
        private string text;
        
        // Create a constructor that sets the initial value of text
        // and takes in a string as a parameter
        public MySubclass(string txt) {
            text = txt;
        }
        
        // Override the "printNumber" method to print the text variable instead
        public override void printNumber() {
            stdout.printf("The text is: %s", text);
        }
    }
}

// Create a new instance of "MySubclass" and pass in "Hello world" as a parameter
var my_obj = new MyClass.MySubclass("Hello world");

// Call the "printNumber" method on the object
my_obj.printNumber();

// Call the "multiply" method and store the result in a variable
int result = my_obj.multiply(5);

// Print the result
stdout.printf("The result is %d", result);
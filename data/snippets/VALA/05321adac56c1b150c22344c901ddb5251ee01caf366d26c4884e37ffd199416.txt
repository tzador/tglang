// Example of a class in VALA with multiple methods and properties
public class Person {
    private string name; // private property
    private int age; // private property
    private string[] hobbies; // private property
    public string nickname; // public property

    // constructor with name and age parameters
    public Person(string name, int age) {
        this.name = name;
        this.age = age;
    }

    // setter method for hobbies property
    public void set_hobbies(string[] new_hobbies) {
        hobbies = new_hobbies;
    }

    // getter method for name property
    public string get_name() {
        return name;
    }

    // method to print person's information
    public void print_person() {
        stdout.printf("Name: %s\nAge: %d\nHobbies: ", name, age);
        for (int i = 0; i < hobbies.length; i++) {
            stdout.printf("%s, ", hobbies[i]);
        }
        stdout.printf("\nNickname: %s\n", nickname);
    }
}

// Main function to instantiate Person object, set properties, and call methods
public int main(string[] args) {
    var person = new Person("John", 25); // instantiate Person object
    person.nickname = "Johnny"; // set nickname property

    string[] hobbies = {"reading", "hiking", "cooking"}; // array of hobbies
    person.set_hobbies(hobbies); // call set_hobbies method
    person.print_person(); // call print_person method

    return 0;
}
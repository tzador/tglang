public class ComplexNumber : Object {

    // Private instance variables
    private double real_part; // Real part of the complex number
    private double imag_part; // Imaginary part of the complex number

    // Public properties
    public double RealPart { // Real part property
        get { // Getter for real part
            return this.real_part;
        }
        set { // Setter for real part
            this.real_part = value;
        }
    }

    public double ImagPart { // Imaginary part property
        get { // Getter for imaginary part
            return this.imag_part;
        }
        set { // Setter for imaginary part
            this.imag_part = value;
        }
    }

    // Constructor for initializing complex number with given real and imaginary parts
    public ComplexNumber (double real_part, double imag_part) {
        this.real_part = real_part;
        this.imag_part = imag_part;
    }

    // Override ToString() method to print out complex number in a readable format
    public override string ToString() {
        if (imag_part < 0) { // Check if imaginary part is negative
            return $"{real_part} - {-imag_part}i"; // Format for negative imaginary part
        } else {
            return $"{real_part} + {imag_part}i"; // Format for positive imaginary part
        }
    }

    // Method to add two complex numbers and return the result as a new ComplexNumber object
    public ComplexNumber add(ComplexNumber other) {
        double sum_real = this.real_part + other.real_part; // Compute sum of real parts
        double sum_imag = this.imag_part + other.imag_part; // Compute sum of imaginary parts
        return new ComplexNumber(sum_real, sum_imag); // Create and return new ComplexNumber object
    }

    // Method to subtract two complex numbers and return the result as a new ComplexNumber object
    public ComplexNumber subtract(ComplexNumber other) {
        double diff_real = this.real_part - other.real_part; // Compute difference of real parts
        double diff_imag = this.imag_part - other.imag_part; // Compute difference of imaginary parts
        return new ComplexNumber(diff_real, diff_imag); // Create and return new ComplexNumber object
    }

}
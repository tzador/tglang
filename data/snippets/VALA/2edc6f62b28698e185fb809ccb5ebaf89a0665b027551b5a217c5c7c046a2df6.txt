using GLib;

public class SomeClass : Object {
    // A private field of type string
    private string _field;

    // A constructor that takes in a string parameter
    // and sets the field to its value
    public SomeClass(string str) {
        _field = str;
    }

    // A method that reverses the string stored in the field
    // and returns the reversed string
    public string reverse_string() {
        // Convert the string to a char array
        char[] char_array = _field.get_chars();

        // Initialize an empty array to store the reversed characters
        char[] reversed_array = new char[char_array.length];

        // Loop through the original array in reverse
        for (int i = char_array.length-1, j = 0; i >= 0; i--, j++) {
            // Store the characters in the reversed array
            reversed_array[j] = char_array[i];
        }

        // Convert the reversed array back to a string
        string reversed_string = GLib.String.new(reversed_array);

        // Return the reversed string
        return reversed_string;
    }
}

// Create an instance of the SomeClass object
SomeClass object = new SomeClass("Hello");

// Call the reverse_string method on the object and print the result
stdout.printf("Reversed string: %s\n", object.reverse_string());
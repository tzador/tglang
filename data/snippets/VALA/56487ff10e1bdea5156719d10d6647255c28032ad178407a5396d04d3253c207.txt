/* Example program

This is a long and complex code snippet in VALA that demonstrates variable declaration and usage, conditional statements, and loops using a linked list data structure.

*/

// Declare a node structure for the linked list
struct LinkedListNode {
    public int data;
    public LinkedListNode? next;
}

void main () {
    // Initialize empty linked list
    LinkedListNode head = null;

    // Populate linked list with data
    for (int i = 0; i < 5; i++) {
        // Create new node with i as data
        LinkedListNode new_node = new LinkedListNode();
        new_node.data = i;

        // Insert new node at the head of the linked list
        new_node.next = head;
        head = new_node;
    }

    // Print linked list
    print ("Linked list: ");

    // Set current node to head
    LinkedListNode current_node = head;

    // Loop through linked list
    while (current_node != null) {
        // Print current node's data
        print ("%d ", current_node.data);

        // Set current node to next node in linked list
        current_node = current_node.next;
    }

    // Check if linked list contains a certain value
    int check_value = 3;
    bool is_contained = false;

    // Set current node to head again
    LinkedListNode current_node2 = head;

    // Loop through linked list
    while (current_node2 != null) {
        // Check if current node's data matches desired value
        if (current_node2.data == check_value) {
            // Set boolean to true if value is found
            is_contained = true;
        }

        // Move on to next node in linked list
        current_node2 = current_node2.next;
    }

    // Print if value is contained in linked list
    if (is_contained) {
        print ("\nLinked list contains value %d", check_value);
    } else {
        print ("\nLinked list does not contain value %d", check_value);
    }
}

/* Expected output: 

Linked list: 4 3 2 1 0
Linked list contains value 3

*/
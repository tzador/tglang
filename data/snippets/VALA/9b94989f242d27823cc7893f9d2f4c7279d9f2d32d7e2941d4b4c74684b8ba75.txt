// This code snippet demonstrates the use of structs and recursion in VALA

// Define a custom struct named 'Node' with an integer value and a pointer to the next node
struct Node {
    public int value;
    public Node* next;
}

// A recursive function to traverse the linked list and print out the values
void printList(Node head) {
    // Check for null pointer
    if(head == null) {
        return;
    }
    // Print out the value of the current node
    print("%d\n", head.value);
    // Recursively call the function for the next node
    printList(head.next);
}

// Main function
int main(string[] args) {
    // Create an instance of the Node struct
    Node node = Node();
    // Assign a value to the first node
    node.value = 5;
    // Create a new node and assign it as the next node
    node.next = Node();
    // Assign a value to the second node
    node.next.value = 10;
    // Create a third node and assign it as the next node
    node.next.next = Node();
    // Assign a value to the third node
    node.next.next.value = 15;
    // Print out the values in the linked list using our recursive function
    printList(node);

    return 0;
}
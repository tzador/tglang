/**
 * This is a complex code snippet in the VALA programming language.
 * It creates a class called "ComplexCode" with a constructor and two methods.
 * The first method calculates the factorial of a given number using a recursive function.
 * The second method calculates the nth term of the Fibonacci sequence using a iterative loop.
 */

// Class creation with the name "ComplexCode"
public class ComplexCode {
    // Private member variable to store the result of the factorial
    private int factorial_result;

    // Constructor to initialize the private member variable
    public ComplexCode(int num) {
        factorial_result = 1;
        // Calling the factorial method
        factorial(num);
    }

    // Method to calculate the factorial of a number using recursion
    private void factorial(int num) {
        // Base case - if num is 0 or 1, the factorial is 1
        if (num == 0 || num == 1) {
            factorial_result = 1;
        } else {
            // Recursive call to calculate the factorial of num-1
            factorial(num - 1);
            // Updating the factorial_result variable with the current factorial value
            factorial_result = factorial_result * num;
        }
    }

    // Method to calculate the nth term of the Fibonacci sequence using iterative loop
    private int fibonacci(int num) {
        // Variables to store the current and previous terms of the sequence
        int current = 1;
        int previous = 0;

        // Looping through the sequence until the nth term
        for (int i = 1; i <= num; i++) {
            // Swapping the values of current and previous terms and calculating the next term
            int temp = current;
            current = current + previous;
            previous = temp;
        }
        // Returning the nth term of the sequence
        return current;
    }
}

// Creating an instance of the ComplexCode class with the argument of 5
ComplexCode obj = new ComplexCode(5);

// Printing the result of the factorial and nth term of the Fibonacci sequence
stdout.printf("Factorial of 5: %d\n", obj.factorial_result);
stdout.printf("5th term of Fibonacci sequence: %d\n", obj.fibonacci(5));
// Define a test class with 3 properties
public class TestClass : Object {
    // private properties
    private int prop1;
    private string prop2;
    private bool prop3;

    // public constructor
    public TestClass (int p1, string p2, bool p3) {
        prop1 = p1;
        prop2 = p2;
        prop3 = p3;
    }

    // public method to calculate sum of properties
    public int calc_sum() {
        return prop1 + prop2.length + (prop3 ? 1 : 0);
    }

    // setter method for prop1 with input validation
    public void set_prop1(int input) {
        if (input > 0) {
            prop1 = input;
        }
        else {
            // throw an error if input is invalid
            throw new InvalidInputError("Property must be a positive integer.");
        }
    }

    // getter method for prop2
    public string get_prop2() {
        return prop2;
    }

    // override ToString method to print all properties as a string
    public override string ToString() {
        return "Property 1: " + prop1.ToString() + "\nProperty 2: " + prop2 
                + "\nProperty 3: " + prop3.ToString();
    }
} 

// Create an instance of the TestClass
var my_test = new TestClass(5, "Hello", true);

// Use the getter method to access and print prop2
print("Prop 2 value: " + my_test.get_prop2());

// Use the setter method to change prop1 and print the updated sum
my_test.set_prop1(10);
print("Sum of properties: " + my_test.calc_sum());

// Print all properties using the overridden ToString method
print(my_test.ToString());
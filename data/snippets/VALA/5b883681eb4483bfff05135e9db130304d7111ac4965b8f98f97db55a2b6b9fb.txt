using GLib; // Import GLib library for threading functions

public static async int fibonacci(int n) {
    if (n == 0 || n == 1) 
        return n; // Base case
    
    // Create new thread to calculate fibonacci of n-1
    var thread_1 = new Thread< int >(() => { return fibonacci(n-1); });
    
    // Create new thread to calculate fibonacci of n-2
    var thread_2 = new Thread< int >(() => { return fibonacci(n-2); });
    
    // Start both threads
    thread_1.start();
    thread_2.start();
    
    int result_1, result_2;
    // Wait for both threads to finish and save their results
    thread_1.join(out result_1);
    thread_2.join(out result_2);
    
    // Return the sum of both thread results
    return result_1 + result_2;
}

public static void main() {
    // Calculate fibonacci of 10 using threading
    var result = await fibonacci(10); 
    
    // Print result
    stdout.printf("Fibonacci(10) = %d\n", result);
}
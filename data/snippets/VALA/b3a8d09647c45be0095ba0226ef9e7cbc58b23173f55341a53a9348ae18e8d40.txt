/*
* This is a function that checks if a given number is a prime number.
*
* @param num: the number to be checked
* @return true if the number is prime, otherwise false
*/

bool check_prime (int num) {
    // the number 1 and 0 are not prime numbers
    if (num < 2) {
        return false;
    }
    // loop through numbers from 2 to num-1
    for (int i = 2; i < num; i++) {
        // if num is divisible by any of the numbers in the loop, it is not prime
        if (num % i == 0) {
            // return false to indicate the number is not prime
            return false;
        }
    }
    // if the loop does not find any divisors, the number is prime
    // return true to indicate the number is prime
    return true;
}

/*
* This is a function that prints the first n prime numbers.
*
* @param n: the number of prime numbers to be printed
* @return void
*/

void print_primes (int n) {
    // track the number of prime numbers found
    int count = 0;
    // track the current number to be checked
    int current_num = 2;
    // loop until n prime numbers are found
    while (count < n) {
        // check if the current number is prime
        if (check_prime(current_num)) {
            // if it is prime, print it out
            print ("%d ", current_num);
            // increment count
            count++;
        }
        // increment current_num to check the next number
        current_num++;
    }
}
/* This is a long and complex code snippet in VALA */

/* Import necessary libraries */
using GLib;
using Gtk;

/* Define a class for GUI application */
class MyApplication : Gtk.Application {

  /* Declare main window and its components */
  Window main_window;
  Button button1;
  Entry entry;
  Label label;

  /* Constructor for MyApplication class */
  public MyApplication () {
    Object (
      application_id: "com.example.myapplication",
      flags: ApplicationFlags.FLAGS_NONE
    );

    /* Connect signals */
    this.activate.connect (on_activate);
    this.shutdown.connect (on_shutdown);
  }

  /* Function to create and show main window */
  private void create_window() {
    /* Create main window */
    this.main_window = new Window ("My Application");

    /* Set default size and position */
    this.main_window.set_default_size (400, 300);
    this.main_window.set_position (WindowPosition.CENTER);

    /* Create button */
    this.button1 = new Button.with_label ("Click me!");

    /* Create entry field */
    this.entry = new Entry ();

    /* Create label */
    this.label = new Label ("Enter your name:");

    /* Add components to main window */
    this.main_window.add (this.label);
    this.main_window.add (this.entry);
    this.main_window.add (this.button1);

    /* Show main window and its components */
    this.main_window.show_all ();
  }

  /* Function to handle activate signal */
  private void on_activate (Gio.Application sender) {
    this.create_window (); // Create and show main window
  }

  /* Function to handle shutdown singal */
  private void on_shutdown (Gio.Application sender) {
    stdout.printf ("Application shutting down...\n"); // Print message to terminal
    this.exit (); // Exit application
  }

  /* Main function to run application */
  int main (string[] args) {
    var app = new MyApplication (); // Create instance of MyApplication class
    return app.run (args); // Run application
  }
}

int main(string[] args) {
  return 0;
}
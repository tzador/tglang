/*
This snippet is an example of a binary search algorithm
in the VALA programming language.
It performs a search for a given element in an array
and returns its index if found.
If the element is not found, it returns -1.
*/

int binary_search(int[] arr, int low, int high, int target){
    // Check if the array is empty
    if (high < low) return -1;
    
    // Calculate the middle index
    int mid = (low + high) / 2;
    
    // Check if the element at the middle index is the target
    if (arr[mid] == target) return mid;
    
    // If element is greater than target, search in left subarray
    else if (arr[mid] > target) return binary_search(arr, low, mid - 1, target);
    
    // If element is less than target, search in right subarray
    else return binary_search(arr, mid + 1, high, target);
}

// Example usage
void main() {
    // Initialize sorted array
    int[] arr = { 2, 5, 7, 9, 13, 18, 25, 32 };
    
    // Search for element 13 in the array
    int result = binary_search(arr, 0, arr.length - 1, 13);
    
    // Output index of element if found, else -1
    print("Index of element 13: %d", result);
}
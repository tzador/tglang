// Generics are type-agnostic templates that can be used with different types of data
// This snippet shows how to create a generic function for finding the minimum value in an array

// Define the function, taking in a type parameter 'T' and an array of that type as a parameter
public T find_min<T> (T[] array) {
    // Initialize variable to store the minimum value, assuming the first element is the minimum
    // Note: This code snippet assumes that the array has at least one element
    T min = array[0];
    
    // Loop through the array, starting at the second element
    for (int i = 1; i < array.length; i++) {
        // If the current element is smaller than the current minimum, update the minimum value
        if (array[i] < min) {
            min = array[i];
        }
    }
    
    // Return the minimum value
    return min;
}

// Example usage of the function
string[] names = {"John", "Alice", "Bob"};
int[] numbers = {5, 2, -10, 0, 13};

// Find the minimum value in the 'names' and 'numbers' arrays
string min_name = find_min<string>(names);
int min_number = find_min<int>(numbers);

// Print the results
print ("The minimum name is " + min_name);
print ("The minimum number is " + min_number);
// This is a code snippet in VALA
// It is a long and complex code
// It involves a sorting algorithm using bubble sort

// Define the class
public class Sorting {

    // Define the method to perform bubble sort
    public void bubble_sort(int[] list) {
        // Define variables to keep track of comparisons and swaps
        int comparisons = 0;
        int swaps = 0;

        // Loop through the list
        for (int i = 0; i < list.length - 1; i++) {
            // Define a boolean to check whether there have been any swaps in the current iteration
            bool swapped = false;

            // Inner loop to compare adjacent elements and swap if necessary
            for (int j = 0; j < list.length - i - 1; j++) {
                // Compare the current element with the next one
                if (list[j] > list[j+1]) {
                    // Swap the elements
                    int temp = list[j];
                    list[j] = list[j+1];
                    list[j+1] = temp;

                    // Increment the swaps counter
                    swaps++;

                    // Set the swapped boolean to true
                    swapped = true;
                }

                // Increment the comparisons counter
                comparisons++;
            }

            // If there were no swaps in the current iteration, the list is already sorted
            if (!swapped) {
                break;
            }
        }

        // Print the number of comparisons and swaps
        message("Number of comparisons: " + comparisons);
        message("Number of swaps: " + swaps);

        // Print the sorted list
        message("Sorted list: ");
        foreach (int item in list) {
            message(item);
        }
    }

    // Define the method to output a message
    private void message(string msg) {
        stdout.printf("%s\n", msg);
    }

    // Main method
    public static int main(string[] args) {
        // Define an example list
        int[] list = {5, 2, 8, 1, 3, 7, 4, 6};

        // Instantiate the Sorting class and call the bubble_sort method
        Sorting sorting = new Sorting();
        sorting.bubble_sort(list);

        // Return 0 since this is a void method
        return 0;
    }

}
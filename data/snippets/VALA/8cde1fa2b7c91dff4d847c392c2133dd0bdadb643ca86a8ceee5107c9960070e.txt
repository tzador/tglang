// This code snippet uses the 'Unique' data type in VALA

// Define a unique data type
public class Bag<T> {

  // Private variables
  private T[] items;
  private int size;
  
  // Constructor that sets the initial size of the bag
  public Bag(int initial_size) {
    size = initial_size;
    items = new T[size];
  }
  
  // Method to add items to the bag
  public void add(T item) {
  
    // Check if the bag is full
    if (size == items.length) {
    
      // Create a new array with double the size
      T[] temp = new T[size * 2];
      
      // Copy all existing items to the new array
      for (int i = 0; i < size; i++) {
        temp[i] = items[i];
      }
      
      // Set the 'items' variable to the new array
      items = temp;
      
      // Update the size variable
      size *= 2;
    }
    
    // Add the new item to the bag
    items[size] = item;
    size++;
  }
  
  // Method to remove items from the bag
  public void remove(int index) {
  
    // Check if the index is within the bounds of the bag's size
    if (index < size && index >= 0) {
    
      // Shift all items after the index to the left by one position
      for (int i = index; i < size - 1; i++) {
        items[i] = items[i+1];
      }
      
      // Decrease the size of the bag
      size--;
    }
  }
  
  // Method to retrieve an item from the bag
  public T get(int index) {
  
    // Check if the index is within the bounds of the bag's size
    if (index < size && index >= 0) {
    
      // Return the item at the given index
      return items[index];
    }
    else {
    
      // Return null if the index is out of bounds
      return null;
    }
  }

// End of Bag class
}
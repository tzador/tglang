// This code snippet implements a binary search algorithm

// Define array of numbers
int[] numbers = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};

// Define desired number to search for
int target = 11;

// Define starting and ending positions of array
int start = 0;
int end = numbers.length-1;

// Define middle index of array
int mid;

// Repeat search until start position is equal to or greater than end position
while (start <= end) {

    // Find middle index of current array section
    mid = (start+end)/2;

    // If target is equal to middle value, return index
    if (target == numbers[mid]) {
        return mid;
    }

    // If target is greater than middle value, search in upper half of array
    else if (target > numbers[mid]) {
        start = mid+1;
    }

    // If target is less than middle value, search in lower half of array
    else {
        end = mid-1;
    }
}

// If target is not found, return -1
return -1;
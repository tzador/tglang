//This program uses the Bubble Sort algorithm to sort an array of integers in ascending order

class SortingExample : GLib.Object {

    //Method to perform Bubble Sort on an array
    //Params:
    //  array: The array to be sorted
    //  len: The length of the array
    public void bubble_sort (int[] array, int len) {

        //Variables used in the sorting process
        int temp;
        bool swapped;

        //Loop through the array and compare each element to the next
        for (int i = 0; i < len - 1; i++) {

            //Set swapped to false at the beginning of each pass
            swapped = false;

            //Compare each element to the next
            for (int j = 0; j < len - i - 1; j++) {

                //If the current element is greater than the next, swap them
                if (array[j] > array[j + 1]) {
                    temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;

                    //Set swapped to true to indicate a swap occurred
                    swapped = true;
                }
            }

            //If no swaps occurred, the array is already sorted
            //Break out of the loop
            if (!swapped) {
                break;
            }
        }
    }

    //Main method
    public static int main (string[] args) {

        //Create an array to be sorted
        int[] array = {9, 4, 3, 7, 1, 2};

        //Get the length of the array
        int len = array.length;

        //Instantiate an instance of the SortingExample class
        SortingExample example = new SortingExample();

        //Call the bubble_sort method to sort the array
        example.bubble_sort(array, len);

        //Print the sorted array to the console
        for (int i = 0; i < len; i++) {
            print("%d ", array[i]);
        }

        //Return 0 to indicate successful completion
        return 0;
    }
}
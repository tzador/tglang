/*
This is a complex code snippet written in VALA programming language.
It uses classes, arrays, and conditional statements to generate a list of prime numbers.
*/

// Create a class to hold our prime number generator
class PrimeGenerator {
    // Declare an array to store the prime numbers
    int[] primes;

    // Constructor to initialize the array with the first two primes (2 and 3)
    public PrimeGenerator() {
        primes = new int[2];
        primes[0] = 2;
        primes[1] = 3;
    }

    // Function to check if a given number is prime
    public bool is_prime(int num) {
        bool prime = true; // Initialize a boolean variable to track if the number is prime
        for (int i = 2; i <= (num/2); i++) { // Loop through all numbers from 2 to half of the given number
            if (num % i == 0) { // If the given number is divisible by any of the numbers in the loop, it is not prime
                prime = false; // Set the boolean variable to false
                break; // Break out of the loop
            }
        }
        return prime; // Return the boolean variable
    }

    // Function to generate prime numbers up to a given limit
    public void generate_primes(int limit) {
        for (int i = 5; i <= limit; i+=2) { // Loop through all odd numbers from 5 up to the limit
            if (is_prime(i)) { // Check if the current number is prime
                // Create a new array with the current number appended to the end of the existing prime numbers array
                int[] new_primes = new int[primes.length + 1]; 
                for (int j = 0; j < primes.length; j++) { // Loop through the existing prime numbers array
                    new_primes[j] = primes[j]; // Copy the prime numbers into the new array
                }
                new_primes[new_primes.length - 1] = i; // Append the current number to the end of the new array
                primes = new_primes; // Set the old prime numbers array to the new one
            }
        }
    }

    // Print out the list of prime numbers
    public void print_primes() {
        stdout.printf("List of prime numbers: \n");
        for (int i = 0; i < primes.length; i++) { // Loop through the prime numbers array
            stdout.printf("%d, ", primes[i]); // Print out each element with a comma
        }
    }
}

void main() {
    var generator = new PrimeGenerator(); // Instantiate a new PrimeGenerator object
    generator.generate_primes(100); // Generate prime numbers up to 100
    generator.print_primes(); // Print out the list of prime numbers
}
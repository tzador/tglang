/*
   The following code snippet defines a custom class "Person" with properties
   such as name, age, and hobby. It also contains a method to change the person's
   hobby and a helper function to print out the person's information.
*/

class Person {
    public string name; // The person's name
    public int age; // The person's age
    private string hobby; // The person's hobby, private so it can only be changed through the "set_hobby" method

    /*
        The class constructor takes in the person's name and age as parameters and sets
        the corresponding properties.
    */
    public Person(string name, int age) {
        this.name = name;
        this.age = age;
    }

    // The "set_hobby" method takes in the new hobby as a parameter and changes the person's hobby to it
    public void set_hobby(string new_hobby) {
        this.hobby = new_hobby;
    }

    // The "print_information" method prints out the person's name, age, and hobby in a formatted manner
    public void print_information() {
        string output = "%s is %d years old and their hobby is %s".printf(this.name, this.age, this.hobby);
        stdout.printf(output); // Using "stdout.printf" to print out the formatted output
    }
}

// Helper function to create a new instance of the "Person" class and call the "print_information" method
Person create_person(string name, int age, string hobby) {
    var person = new Person(name, age); // Creating a new instance of the "Person" class
    person.set_hobby(hobby); // Calling the "set_hobby" method to change the person's hobby
    person.print_information(); // Calling the "print_information" method to print out the person's information
    return person; // Returning the created person object
}

/*
   Calling the "create_person" helper function to create a new person and printing out their
   information using the "print_information" method.
*/
create_person("John", 25, "playing guitar");
using GLib;

// Declare a new class called "Person" that inherits from the GObject class
public class Person : Object {

    // Declare private variables for the person's name and age
    private string name;
    private int age;

    // Constructor that sets the person's name and age
    public Person(string _name, int _age) {

        // Use conditional statements to check if the input values are valid
        if (_name.length > 0) {
            name = _name;
        } else {
            // Throw an error if the name is empty
            throw Error("Name cannot be empty");
        }

        if (_age > 0) {
            age = _age;
        } else {
            // Throw an error if the age is invalid
            throw Error("Age must be a positive value");
        }

        // Print a welcome message to the console
        print("Welcome to the 'Person' class!");
    }

    // Method to get the person's name
    public string get_name() {

        // Return the name variable
        return name;
    }

    // Method to get the person's age
    public int get_age() {

        // Return the age variable
        return age;
    }

    // Method to set a new name for the person
    public void set_name(string _new_name) {

        // Check if the new name is valid
        if (_new_name.length > 0) {
            name = _new_name;
        } else {
            // Throw an error if the new name is empty
            throw Error("New name cannot be empty");
        }
    }

    // Method to set a new age for the person
    public void set_age(int _new_age) {

        // Check if the new age is valid
        if (_new_age > 0) {
            age = _new_age;
        } else {
            // Throw an error if the new age is invalid
            throw Error("New age must be a positive value");
        }
    }
}

// Main function to create an instance of the Person class
public int main() {

    // Create a new object of the Person class with name "John" and age 25
    Person john = new Person("John", 25);

    // Use the get_name method to retrieve the person's name
    string name = john.get_name();

    // Use the get_age method to retrieve the person's age
    int age = john.get_age();

    // Print the person's information in the console
    print("Name: " + name + " | Age: " + age);

    // Change the person's name using the set_name method
    john.set_name("Jane");

    // Change the person's age using the set_age method
    john.set_age(30);

    // Print the updated information in the console
    print("Name: " + john.get_name() + " | Age: " + john.get_age());

    // Return 0 to indicate successful execution
    return 0;
}
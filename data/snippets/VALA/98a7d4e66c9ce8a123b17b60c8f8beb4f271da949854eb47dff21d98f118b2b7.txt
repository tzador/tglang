// Class definition
public class Person : Object {

    // Properties
    protected string name; // stores the name of the person
    private int age; // stores the age of the person
    private List<string> hobbies; // stores a list of the person's hobbies

    // Constructor
    public Person (string name, int age, List<string> hobbies) {

        // Assigning values to properties
        this.name = name;
        this.age = age;
        this.hobbies = hobbies;
    }

    // Method to get the person's name
    public string get_name () {

        // Return the name property
        return this.name;
    }

    // Method to set the person's age
    public void set_age (int new_age) {

        // Set the age property to the new value
        this.age = new_age;
    }

    // Method to add a hobby to the person's list of hobbies
    public void add_hobby (string hobby) {

        // Check if the hobby is already in the list
        if (!this.hobbies.contains(hobby)) {
        
            // If not, add it to the list
            this.hobbies.append(hobby);
        }
    }
}

// Main function
public static int main () {

    // Create a new person object
    Person person = new Person("John", 25, {"reading", "hiking"});

    // Get the person's name
    string person_name = person.get_name();

    // Set the person's age to 30
    person.set_age(30);

    // Add a new hobby
    person.add_hobby("cooking");

    // Print out the person's name, age, and hobbies
    stdout.printf("Name: %s \nAge: %d \nHobbies: %s", person_name, person.age, person.hobbies.join(", "));

    // Return 0 to signify successful execution
    return 0;
}
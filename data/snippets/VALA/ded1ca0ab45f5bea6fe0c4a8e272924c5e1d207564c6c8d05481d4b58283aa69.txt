/* A complex class that implements sorting algorithms */
class Sorter<T> : Object {
    /* A private field for storing the list to be sorted */
    private T[] list;

    /* A public property for accessing and modifying the list */
    public T[] List {
        get { return this.list; }
        set { this.list = value; }
    }

    /* A constructor that takes in the initial list */
    public Sorter(T[] initial_list) {
        this.list = initial_list;
    }

    /* A private method for swapping two elements in the list */
    private void swap(int index1, int index2) {
        T temp = this.list[index1];
        this.list[index1] = this.list[index2];
        this.list[index2] = temp;
    }

    /* A public method for implementing the bubble sort algorithm */
    public void bubble_sort() {
        int length = this.list.length;
        
        /* Loop through the list and compare adjacent elements */
        for (int i = 0; i < length - 1; i++) {
            for (int j = 0; j < length - i - 1; j++) {
                /* If the element at index j is larger than the one at index j+1, swap them */
                if (this.list[j] > this.list[j+1]) {
                    swap(j, j+1);
                }
            }
        }
    }

    /* A public method for implementing the insertion sort algorithm */
    public void insertion_sort() {
        int length = this.list.length;

        /* Loop through the list starting at index 1 */
        for (int i = 1; i < length; i++) {
            T current = this.list[i];
            int j = i - 1;

            /* Move elements of the subarray that are greater than the current element to the right */
            while (j >= 0 && this.list[j] > current) {
                this.list[j+1] = this.list[j];
                j = j - 1;
            }

            /* Insert the current element at the correct position */
            this.list[j+1] = current;
        }
    }
}

/* Example usage: Create a Sorter object with an array of integers, then sort the list using bubble sort */
Sorter<int> integer_sorter = new Sorter<int>(new int[] {5, 3, 1, 2, 4});
integer_sorter.bubble_sort();

/* Output: [1, 2, 3, 4, 5] */
//This code snippet shows a basic class in VALA that implements an interface and utilizes a nested class

using GLib;

//Definition of interface
public interface IAnimal
{
    //Abstract method
    public abstract void Eat(string food);
}

//Class implementing interface
public class Cat : IAnimal
{
    private int age;
    private string name;
    private string breed;

    //Constructor with parameters
    public Cat(int _age, string _name, string _breed)
    {
        this.age = _age;
        this.name = _name;
        this.breed = _breed;
    }

    //Override method from interface
    public override void Eat(string food)
    {
        print("%s is eating %s", this.name, food);
    }

    //Nested class
    public class Kitten
    {
        private int age;
        private string name;
        private string color;

        //Constructor with parameters
        public Kitten(int _age, string _name, string _color)
        {
            this.age = _age;
            this.name = _name;
            this.color = _color;
        }

        //Method in nested class
        public void Play()
        {
            print("%s is playing", this.name);
        }
    }

    public static int main()
    {
        //Creating an instance of Cat class
        Cat cat = new Cat(5, "Fluffy", "Siamese");

        //Using the Eat method
        cat.Eat("fish");

        //Creating instance of nested class
        Kitten kitten = new Kitten(1, "Mittens", "grey");

        //Using method in nested class
        kitten.Play();

        //Returns 0 if code executes without errors
        return 0;
    }
}
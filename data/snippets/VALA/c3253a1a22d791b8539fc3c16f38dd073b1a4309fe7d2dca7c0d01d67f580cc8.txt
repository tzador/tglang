/* This is a complex function that
returns a sorted list of integers
using the quicksort algorithm */
public int[] quicksort(int[] list, int low, int high) {
    // Base case
    if(low >= high) {
        return list;
    }

    // Choose a pivot element
    int pivot = list[high];

    // Partition the list into smaller and larger values
    int i = low - 1;
    for(int j = low; j <= high - 1; j++) {
        if(list[j] < pivot) {
            i++;
            // Swap elements
            int temp = list[i];
            list[i] = list[j];
            list[j] = temp;
        }
    }

    // Place pivot in correct position
    int temp = list[i + 1];
    list[i + 1] = list[high];
    list[high] = temp;

    // Recursively call quicksort on smaller and larger partitions
    quicksort(list, low, i);
    quicksort(list, i + 2, high);

    // Return sorted list
    return list;
}
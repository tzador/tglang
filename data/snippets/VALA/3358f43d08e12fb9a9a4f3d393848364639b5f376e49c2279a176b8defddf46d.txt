/* This code snippet generates a list of prime numbers
using the Sieve of Eratosthenes algorithm. */

class Main : Object {

    public static void main (string[] args) {

        // Define range of numbers
        int start = 2;
        int end = 100;

        // Create an array to store boolean values indicating if a number is prime or composite
        var prime_flags = new bool[end + 1];

        // Set all values in array to true (indicating prime)
        for (int i = 0; i <= end; i++) {
            prime_flags[i] = true;
        }

        // Set 0 and 1 to false (not prime)
        prime_flags[0] = false;
        prime_flags[1] = false;

        /* Loop through the array and set values to false if they are multiples of a previous
        prime number */
        for (int i = start; i <= end; i++) {
            if (prime_flags[i]) {
                for (int j = i * i; j <= end; j += i) {
                    prime_flags[j] = false;
                }
            }
        }

        // Print list of prime numbers
        print ("\nList of prime numbers from 2 to 100:\n");

        for (int i = start; i <= end; i++) {
            if (prime_flags[i]) {
                print ("%i\n", i);
            }
        }
    }
}
/*
* This is a complex code snippet in the VALA programming language
* It generates a Stock Item object with a name, quantity, and price
* The code also includes a loop to update the quantity of the stock item
*/

// Define the Stock Item class
public class StockItem {

    // Variables to hold the name, quantity, and price
    private string name;
    private int quantity;
    private double price;

    // Constructor function to initialize the variables
    public StockItem(string name, int quantity, double price) {
        this.name = name;
        this.quantity = quantity;
        this.price = price;
    }

    // Getter and setter functions for the variables
    public string get_name() { return this.name; }
    public int get_quantity() { return this.quantity; }
    public double get_price() { return this.price; }
    public void set_quantity(int new_quantity) { this.quantity = new_quantity; }

    // Function to update the quantity of the stock item
    public void update_quantity(int new_quantity) {
        // Loop through each quantity change
        for (int i = this.quantity; i < new_quantity; i++) {
            // Add or remove an item from the stock based on the change
            if (i < this.quantity) {
                this.quantity--;
            } else {
                this.quantity++;
            }
        }
    }
}

// Create a new Stock Item object with name, quantity, and price specified
var item = new StockItem("Apple", 10, 1.50);

// Update the quantity of the item by adding 5 more
item.update_quantity(15);

// Output the current quantity and price of the stock item
print("Current Quantity: " + item.get_quantity());
print("Price per Item: " + item.get_price());
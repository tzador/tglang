#include <glib.h>

// Define a custom GObject class called 'Person'
// that implements the 'GInitable' interface.
// The class will have two private fields, 'name' and 'age',
// and a public method called 'introduce' that prints out the person's name and age.
// The class also overrides the 'finalize' method to free any allocated memory.

// Define the 'Person' class
public class Person : GLib.Object, GInitable {

    // Private fields
    private string name;
    private int age;

    // Public constructor
    public Person (string name, int age) {
        this.name = name;
        this.age = age;
    }

    // Implement the 'int init (out string? error)' method from GInitable interface
    public int init (out string? error) {
        // We do not have any additional initialization logic, so we return SUCCESS here
        return GLib.Initable.SUCCESS;
    }

    // Implement the 'finalize' method to free allocated memory
    public void finalize () {
        // Free the name field
        if (this.name != null) {
            this.name = null;
        }
        // Free the age field
        this.age = 0;

        // Call the parent finalize method
        // This will free any resources allocated by the parent class
        base.finalize ();
    }

    // Public method for introducing the person
    public void introduce () {
        // Print out the person's name and age
        stdout.printf ("%s is %d years old\n", this.name, this.age);
    }
}

// Main function
int main (string[] args) {
    // Create a new instance of the Person class
    Person person = new Person ("John", 25);

    // Call the introduce method
    person.introduce ();

    // Call the parent class's finalize method
    person.finalize ();

    // Exit with status code 0
    return 0;
}
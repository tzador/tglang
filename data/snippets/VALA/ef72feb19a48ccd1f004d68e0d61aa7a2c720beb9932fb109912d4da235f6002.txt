// This code snippet is a simple function in VALA that implements a bubble sort algorithm on an array of integers
static void bubble_sort(int[] nums) {
    // Loop through the array
    for (int i = 0; i < nums.length - 1; i++) {
        // Keep track of whether any swaps occur in the current iteration
        bool swapped = false;
        
        // Nested loop to compare adjacent elements and swap if necessary
        for (int j = 0; j < nums.length - i - 1; j++) {
            // Compare current element with next element
            if (nums[j] > nums[j + 1]) {
                // Swap the elements
                int temp = nums[j+1];
                nums[j+1] = nums[j];
                nums[j] = temp;
                // Record that a swap has occurred
                swapped = true;
            }
        }
        
        // If no swaps occurred in the current iteration, the array is already sorted
        if (swapped == false) {
            // Exit the loop
            break;
        }
    }
}
public class ItemList<T> : GLib.List<T>
// The above line declares a public class named ItemList which extends the GLib.List class in VALA. 'T' represents the generic type of the list.

{
    private T[] list; // Declares a private array of type 'T' to store the items in the list.

    private int size; // Declares a private integer variable to store the size of the list.

    public ItemList() // Constructor for the ItemList class.
    {
        list = new T[10]; // Initializes the list array with a default size of 10 items.
        size = 0; // Sets the size of the list to 0.
    }

    public void add_item(T item) // Method to add an item of type 'T' to the list.
    {
        if (size < 10) // Checks if the list is not full.
        {
            list[size] = item; // Adds the item to the end of the list.
            size++; // Increases the size of the list by 1.
        }
        else // If the list is full, increase the size of the array and add the item.
        {
            T[] new_list = new T[size + 10]; // Creates a new array with a larger size.
            for (int i = 0; i < size; i++) // Loops through the original list.
            {
                new_list[i] = list[i]; // Copies the items from the original list to the new list.
            }
            new_list[size] = item; // Adds the new item to the end of the list.
            size++; // Increases the size of the list by 1.
            list = new_list; // Replaces the original list with the new list.
        }
    }

    public int get_size() // Method to get the size of the list.
    {
        return size; // Returns the size variable.
    }

    public T get_item(int index) // Method to get an item at a specific index.
    {
        if (index >= 0 && index < size) // Checks if the index is within the range of the list.
        {
            return list[index]; // Returns the item at the specified index.
        }
        else // If the index is out of bounds, throw an exception.
        {
            throw new IndexOutOfBoundsException("Index out of range!");
        }
    }
}
public class ComplexNumber : Object {
  private double real;
  private double imag;
  public ComplexNumber(double real, double imag) {
    this.real = real;
    this.imag = imag;
  }
  /* This method adds two complex numbers and returns the result */
  public ComplexNumber add(ComplexNumber other) {
    return new ComplexNumber(real + other.real, imag + other.imag);
  }
  /* This method subtracts two complex numbers and returns the result */
  public ComplexNumber subtract(ComplexNumber other) {
    return new ComplexNumber(real - other.real, imag - other.imag);
  }
  /* This method multiplies two complex numbers and returns the result */
  public ComplexNumber multiply(ComplexNumber other) {
    return new ComplexNumber(real * other.real - imag * other.imag, real * other.imag + imag * other.real);
  }
  /* This method divides two complex numbers and returns the result */
  public ComplexNumber divide(ComplexNumber other) {
    double divisor = other.real * other.real + other.imag * other.imag;
    return new ComplexNumber((real * other.real + imag * other.imag) / divisor, (imag * other.real - real * other.imag) / divisor);
  }
  /* This method raises a complex number to a power and returns the result */
  public ComplexNumber power(int exponent) {
    ComplexNumber result = new ComplexNumber(1.0, 0.0);
    for (int i = 0; i < exponent; i++) {
      result = result.multiply(this);
    }
    return result;
  }
  /* This method checks if two complex numbers are equal */
  public bool equal(ComplexNumber other) {
    return (real == other.real) && (imag == other.imag);
  }
}
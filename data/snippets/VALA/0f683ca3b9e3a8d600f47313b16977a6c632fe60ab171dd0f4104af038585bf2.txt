public class MathHelpers : GLib.Object // Defining a public class with inheritance from GLib.Object
{
    // Private fields and constants
    //ATanh() function
    private const double ATANH_THRESHOLD = 25.0; // Defining a private constant with the value of 25.0

    // Private methods
    // Exponential function
    private double exponential (double x) 
    {
        return x * x; // Return the value of x squared
    }

    // Public methods
    // ATanh() function
    public double atanh (double x) 
    {
        if (Math.abs (x) > ATANH_THRESHOLD) // Check if the absolute value of x is greater than the threshold
        {
            return x > 0 ? (Math.PI / 2.0) : (-Math.PI / 2.0); // Return either pi/2 or -pi/2 depending on the sign of x
        }
        else 
        {
            double y, y1 = 199.0 / 384.0, y2 = 201.0 / 1152.0, y3 = 605.0 / 2304.0, y4 = 2927.0 / 21504.0; // Initializing y and its coefficients for approximation

            y = x / 5.0 * y1; // Calculate the first term in the approximation
            y = y + x * y * y * y / 3.0 * y2; // Add the second term to the approximation
            y = y + x * y * y * y / 5.0 * y3; // Add the third term to the approximation
            y = y + x * y * y * y / 7.0 * y4; // Add the fourth term to the approximation

            return y; // Return the final value of the approximation
        }
    }

    // Main method
    public static int main ()
    {
        MathHelpers helpers = new MathHelpers(); // Create an instance of the MathHelpers class

        double result = helpers.atanh(0.5); // Call the ATanh function with an argument of 0.5

        stdout.printf ("The inverse hyperbolic tangent of %f is %f\n", 0.5, result); // Print the result
        return 0; // Return 0 to indicate successful execution
    }
}
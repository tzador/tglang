// This code snippet generates a random password of specified length
// and complexity using VALA programming language

using GLib;
using Gee;

char[] generate_password(int length, int complexity) {
    // Declare variables to store the different character sets
    var lowercase = "abcdefghijklmnopqrstuvwxyz".toList();
    var uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".toList();
    var numbers = "1234567890".toList();
    var symbols = "!@#$%^&*()_+~`{}[]:;<>,.?/".toList();

    // Generate a list that stores all the character sets based on complexity
    var char_set = new ArrayList<char[]>();
    switch (complexity) {
        case 1:
            char_set.add(lowercase);
            break;
        case 2:
            char_set.add(lowercase);
            char_set.add(uppercase);
            break;
        case 3:
            char_set.add(lowercase);
            char_set.add(uppercase);
            char_set.add(numbers);
            break;
        case 4:
            char_set.add(lowercase);
            char_set.add(uppercase);
            char_set.add(numbers);
            char_set.add(symbols);
            break;
        default:
            break;
    }

    // Shuffle the characters within each character set
    for (int i = 0; i < char_set.size(); i++) {
        char_set[i].sort((a, b) => Random.int_range(-1, 1));
    }

    // Generate a list that stores all the characters to use in the password
    var password_chars = new ArrayList<char>();

    // Keep generating random characters until the desired length is reached
    while (password_chars.size() < length) {
        // Choose a random character set from the list
        var random_set = char_set[Random.int_range(0, char_set.size())];
        // Choose a random character from the character set
        var random_char = random_set[Random.int_range(0, random_set.size())];
        // Append the character to the password list
        password_chars.add(random_char);
    }

    // Convert the list to an array and return it as a string
    return password_chars.to_array().to_string();
}

// Example usage:
// var password = generate_password(12, 3);
// print("Password: " + password);  // Output: Password: qE8vRk5n2L6T

// Note: This code snippet is for demonstration purposes only and should not be used to generate secure passwords. It is recommended to use a proper password generator library for security purposes.
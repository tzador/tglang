public class DataProcessor : Object {
    private JsonParser parser; // private attribute of type JsonParser
    private Data[] data_array; // private attribute of type Data array

    // constructor
    public DataProcessor (string filename) {
        // initialize parser with file
        this.parser = new JsonParser();
        this.parser.load_from_file(filename);
    }

    // method to add data to array
    public void add_data (Data new_data) {
        // make a copy of current array
        var updated_array = this.data_array;

        // resize array to accomodate new data
        updated_array = (Data[]) updated_array.resize(updated_array.length + 1);

        // assign new data to last element of array
        updated_array[updated_array.length - 1] = new_data;

        // assign updated array back to private attribute
        this.data_array = updated_array;
    }

    // method to process data
    public void process_data () {
        // loop through data array
        for (int i = 0; i < this.data_array.length; i++) {
            // check if data matches desired criteria
            if (this.data_array[i].has_valid_date() && this.data_array[i].has_valid_value()) {

                // perform calculations on valid data
                double result = this.data_array[i].value * 5.2;

                // print out result
                print("%d data processed. Result: %f", i + 1, result);

                /* more complex logic can be added here
                   to manipulate or store the processed data */
            }
        }
    }
}
/* This is a long and complex code snippet in VALA
   It implements a binary search algorithm to find
   a specific element in a sorted array */
public int binary_search(int[] arr, int start, int end, int target) {
    /* Define variables for middle index and target element */
    int middle;
    int middle_element;

    while (start <= end) {
        /* Find middle index */
        middle = (start + end) / 2;
        /* Get element at middle index */
        middle_element = arr[middle];

        if (target == middle_element) {
            /* Return index of target element */
            return middle;
        } else if (target < middle_element) {
            /* Continue search in first half of array */
            end = middle - 1;
        } else {
            /* Continue search in second half of array */
            start = middle + 1;
        }
    }

    /* If target element is not found, return -1 */
    return -1;
}

/* Example use of the binary_search function */
int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
int target = 6;

/* Call binary_search function and store result in variable */
int result = binary_search(numbers, 0, numbers.length - 1, target);

/* Print result to console */
print("Index of target element: " + result);
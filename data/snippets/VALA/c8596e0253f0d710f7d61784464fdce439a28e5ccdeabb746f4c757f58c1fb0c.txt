// This is a Vala program that implements a binary search algorithm

// Define a class named BinarySearch
class BinarySearch {
	// Define an integer array to store the elements
	private int [] array;

	// Define a constructor to initialize the array
	public BinarySearch (int [] arr) {
		// Copy the elements of given array into the class array
		array = arr;
	}

	// Define a method to perform binary search
	public int search (int key) {
		// Initialize variables for low and high of the array
		int low = 0;
		// `Math.floor` is used to round down the division result
		int high = Math.floor (array.length - 1);
		// Keep dividing the array in half until the low and high indices meet
		while (low <= high) {
			// Calculate the middle index of the array
			int mid = (low + high) / 2;
			// Check if the key is present at the middle index
			if (array[mid] == key) {
				// Return the index where the key is found
				return mid;
			} else if (array[mid] > key) {
				// If key is smaller than the middle element, search in the left half of the array
				high = mid - 1;
			} else {
				// If key is greater than the middle element, search in the right half of the array
				low = mid + 1;
			}
		}
		// Return -1 if key is not found in the array
		return -1;
	}

	// main function to test the binary search algorithm
	public static int main () {
		// Create an instance of the BinarySearch class with a sorted array of integers
		BinarySearch binary_search = new BinarySearch ([1, 5, 12, 23, 45, 67, 89]);
		// Call the search method with a key to search for
		int key = 12;
		// Perform binary search and store the return value in a variable
		int result = binary_search.search (key);

		// Check if the result is not equal to -1
		if (result != -1) {
			// Print the index where the key is found
			stdout.printf ("%d is found at index %d\n", key, result);
		} else {
			// Print a message if key is not found
			stdout.printf ("%d is not found in the array\n", key);
		}
		// Return 0 to indicate successful execution
		return 0;
	}
}

// Call the main function to run the program
BinarySearch.main ();
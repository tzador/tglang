/** Simple version of a binary search
 *  @param int[] arr - the array to be searched
 *  @param int n - the value to be found
 *  @return int - index of the value in the array, or -1 if not found
 */
int binary_search(int[] arr, int n) {
    // initialize variables
    int low = 0;
    int high = arr.length - 1;
    int mid = 0;

    // loop until low becomes higher than high
    while (low <= high) {
        // calculate the middle index
        mid = low + (high - low) / 2;

        // check if the value at the middle index is equal to n
        if (arr[mid] == n)
            return mid;

        // if the value is smaller than n, then the value must be in the upper half of the array
        if (arr[mid] < n)
            low = mid + 1;
        // if the value is greater than n, then the value must be in the lower half of the array
        else
            high = mid - 1;
    }

    // if the value is not found, return -1
    return -1;
}
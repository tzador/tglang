class Car : Vehicle { // Declare a class named Car which inherits from the Vehicle class
    string make; // Declare a string variable named 'make'
    string model; // Declare a string variable named 'model'
    int year; // Declare an integer variable named 'year'
    
    public Car (string make, string model, int year) { // Constructor for the Car class
        this.make = make; // Set the value of the class variable 'make' to the value passed in as a parameter
        this.model = model; // Set the value of the class variable 'model' to the value passed in as a parameter
        this.year = year; // Set the value of the class variable 'year' to the value passed in as a parameter
    }
    
    void start_engine () { // Declare a method named 'start_engine' with no parameters
        print ("Starting "+make+" "+model+" "+year+"..."); // Output a string with the values of the class variables 'make', 'model', and 'year'
    }
    
    public int get_year () { // Declare a public method named 'get_year' with no parameters and an integer return type
        return year; // Return the value of the class variable 'year'
    }
    
    public string to_string () { // Declare a public method named 'to_string' with no parameters and a string return type
        return "Make: "+make+"\nModel: "+model+"\nYear: "+year; // Return a string with the values of the class variables 'make', 'model', and 'year'
    }
    
    public static void main () { // Main method
        Car my_car = new Car("Ford", "Mustang", 2020); // Create a new instance of the Car class and assign it to the variable 'my_car'
        my_car.start_engine(); // Call the 'start_engine' method on the 'my_car' instance
        print ("Year: "+my_car.get_year()); // Output the value returned by the 'get_year' method on the 'my_car' instance
        print (my_car.to_string()); // Output the value returned by the 'to_string' method on the 'my_car' instance
    }
}
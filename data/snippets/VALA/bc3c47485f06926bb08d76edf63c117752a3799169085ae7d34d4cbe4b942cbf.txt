/**
 * This is a demonstration of a complex code snippet in VALA.
 *
 * It creates a Greeter class with a greet method that prints a personalized greeting message.
 *
 * Next, it creates two instances of the Greeter class and calls the greet method on both.
 *
 * It also uses the built-in List data structure to store multiple greetings and prints them out.
 */

class Greeter : Object {
    private string name;

    /** 
     * Constructor for the Greeter class.
     * @param new_name the name that will be used in the greetings
     */
    public Greeter(string new_name) {
        name = new_name;
    }

    /**
     * Method to print a personalized greeting.
     */
    public void greet() {
        stdout.printf("Hello %s!\n", name);
    }
}

void main() {
    // Creating instances of the Greeter class
    Greeter greeter1 = new Greeter("John");
    Greeter greeter2 = new Greeter("Sarah");

    // Calling the greet method on both instances
    greeter1.greet();
    greeter2.greet();

    // Using the List data structure to store multiple greetings
    List<string> greetings = new List<string>();
    greetings.append("Nice to meet you, " + greeter1.name);
    greetings.append("Pleasure to meet you, " + greeter2.name);

    // Printing out the greetings
    stdout.printf("Additional greetings:\n");
    foreach (var greeting in greetings) {
        stdout.printf("%s\n", greeting);
    }
}
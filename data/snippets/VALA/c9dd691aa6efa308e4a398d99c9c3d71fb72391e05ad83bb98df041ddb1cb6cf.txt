// This is a complex code snippet in VALA
// It creates a class called "Person" with properties and methods

// Declaring the class
class Person : Object {

    // Properties (fields) of the class
    private string name;
    private int age;
    private string gender;
    private string occupation;
    private string[] hobbies;

    // Constructor method
    public Person(string name, int age, string gender, string occupation, string[] hobbies) {

        this.name = name;
        this.age = age;
        this.gender = gender;
        this.occupation = occupation;
        this.hobbies = hobbies;
    }

    // Getter and Setter methods for the properties
    public string get_name() {
        return name;
    }

    public void set_name(string name) {
        this.name = name;
    }

    public int get_age() {
        return age;
    }

    public void set_age(int age) {
        this.age = age;
    }

    public string get_gender() {
        return gender;
    }

    public void set_gender(string gender) {
        this.gender = gender;
    }

    public string get_occupation() {
        return occupation;
    }

    public void set_occupation(string occupation) {
        this.occupation = occupation;
    }

    public string[] get_hobbies() {
        return hobbies;
    }

    public void set_hobbies(string[] hobbies) {
        this.hobbies = hobbies;
    }

    // Method to introduce the person
    public void introduce() {
        print("Hello, my name is " + name + ". I am " + age + " years old and I identify as " + gender + ". I work as a " + occupation + " and my hobbies include " + hobbies.join(", ") + ".");
    }
}

// Instantiating a person object
var person = new Person("John", 30, "male", "software engineer", {"reading", "coding", "hiking"});

// Calling the introduce method
person.introduce();
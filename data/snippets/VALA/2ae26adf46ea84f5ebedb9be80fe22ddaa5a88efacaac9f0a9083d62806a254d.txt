// This is a complex class with multiple properties and methods

class ComplexClass : Object {

    // Properties
    private string name;
    private int id;

    // Constructor
    public ComplexClass (string name, int id) {
        this.name = name;
        this.id = id;
    }

    // Methods

    // Setter method for name property
    public void setName(string newName) {
        this.name = newName;
    }

    // Getter method for name property
    public string getName() {
        return this.name;
    }

    // Setter method for id property
    public void setID(int newID) {
        this.id = newID;
    }

    // Getter method for id property
    public int getID() {
        return this.id;
    }

    // A method that calculates the sum of two integers
    public int calculateSum(int num1, int num2) {
        int sum = num1 + num2;
        return sum;
    }

    // A method that checks if a string is a palindrome
    public bool checkPalindrome(string word) {
        bool isPalindrome = true;

        for (int i=0; i<word.length/2; i++) {
            if (word[i] != word[word.length-1-i]) {
                isPalindrome = false;
                break;
            }
        }

        return isPalindrome;
    }

    // A method that recursively calculates the nth Fibonacci number
    public int calculateFibonacci(int n) {
        if (n <= 1)
            return n;
        else
            return calculateFibonacci(n-1) + calculateFibonacci(n-2);
    }
}

// Creating an instance of the ComplexClass
ComplexClass myComplexClass = new ComplexClass("John", 123);

// Changing the name property using the setter method
myComplexClass.setName("Jane");

// Getting the updated name property using the getter method
string currentName = myComplexClass.getName();

// Calculating the sum of two numbers using the calculateSum method
int sum = myComplexClass.calculateSum(5, 7);

// Checking if a string is a palindrome using the checkPalindrome method
bool isPalindrome = myComplexClass.checkPalindrome("level");

// Calculating the 10th Fibonacci number using the calculateFibonacci method
int fibonacci10 = myComplexClass.calculateFibonacci(10);
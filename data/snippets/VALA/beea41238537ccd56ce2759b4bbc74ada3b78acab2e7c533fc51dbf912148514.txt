using Gee;
/*Declaring and initializing a new array with values*/
int[] numbers_arr = {5, 3, 7, 9, 1};

/*Creating a new hash table and adding key-value pairs*/
HashTable<string, int> grades = new HashTable<string, int>
{
    {"John", 90},
    {"Sarah", 80},
    {"Michael", 95},
    {"Jane", 85}
};

/*Accessing and printing a specific value from the array*/
int first_value = numbers_arr[0];
stdout.printf("The first value in the array is %d\n", first_value);

/*Iterating through the hash table and printing all key-value pairs*/
foreach (var key in grades.keys())
{
    stdout.printf("Name: %s\n", key);
    stdout.printf("Grade: %d\n\n", grades.get(key));
}

/*Inserting a new value into the array*/
numbers_arr.insert(2, 6);

/*Removing a key-value pair from the hash table*/
grades.remove("Michael");

/*Sorting the array in ascending order*/
numbers_arr.sort((a, b) => a - b);

/*Reversing the order of the array*/
numbers_arr.reverse();

/*Printing the updated array*/
stdout.printf("The updated sorted and reversed array is: ");
foreach (var element in numbers_arr)
{
    stdout.printf("%d ", element);
}
stdout.printf("\n");

/*Clearing all elements from the hash table*/
grades.clear();

/*Checking if the array is empty*/
if (numbers_arr.length == 0)
{
    stdout.printf("The array is empty.\n");
}
else
{
    stdout.printf("The array is not empty.\n");
}
/***
 * This program implements a Binary Search algorithm in VALA
***/

#include <stdio.h>

int binary_search(int[] arr, int low, int high, int target) {
    // Check if the array is empty
    if (low > high) {
        return -1;
    }

    // Find the middle index
    int mid = (low + high) / 2;

    // Check if the middle element is the target
    if (arr[mid] == target) {
        return mid;
    }
    // Check if the target is smaller than the middle element
    else if (target < arr[mid]) {
        // Recursively search the left half of the array
        return binary_search(arr, low, mid - 1, target);
    }
    // If target is greater than the middle element
    else {
        // Recursively search the right half of the array
        return binary_search(arr, mid + 1, high, target);
    }
}

int main() {
    // Initialize an array
    int[] arr = {2, 4, 6, 8, 10, 12, 14, 16, 18, 20};

    // Set the target element to search for
    int target = 12;

    // Find the index of the target element
    int index = binary_search(arr, 0, arr.length - 1, target);

    // Print the result
    if (index == -1) {
        print("Target element not found in array.");
    }
    else {
        print("Target element found at index: %i", index);
    }
    
    return 0;
}
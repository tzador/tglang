using GLib; // Importing the GLib library

public class MyExample // Defining a class called MyExample
{
    public static void main() // Defining a main function
    {
        // Declaring and initializing a string variable
        string my_string = "Hello, world!";

        // Printing the string to the console
        stdout.printf("The string is: %s\n", my_string);

        // Declaring and initializing an integer variable
        int my_int = 42;

        // Printing the integer to the console
        stdout.printf("The integer is: %d\n", my_int);

        // Declaring and initializing a boolean variable
        bool my_bool = true;

        // Printing the boolean to the console
        stdout.printf("The boolean is: %b\n", my_bool);

        // Declaring and initializing an array of integers
        int[] my_array = {1, 2, 3, 4, 5};

        // Printing the elements of the array to the console
        // Using a for loop
        for (int i = 0; i < my_array.length; i++)
        {
            stdout.printf("The element at index %d is: %d\n", i, my_array[i]);
        }

        // Declaring and initializing a key-value map
        // Using the GLib library
        HashMap<string, int> my_map = new HashMap<string, int>();

        // Adding key-value pairs to the map
        my_map["key1"] = 10;
        my_map["key2"] = 20;
        my_map["key3"] = 30;

        // Accessing and printing the values of the map
        stdout.printf("The value of key1 is: %d\n", my_map["key1"]);
        stdout.printf("The value of key2 is: %d\n", my_map["key2"]);
        stdout.printf("The value of key3 is: %d\n", my_map["key3"]);

        // Declaring and initializing a struct
        struct MyStruct
        {
            // Struct fields
            string field1;
            int field2;
            bool field3;
        }

        // Creating an instance of the struct
        MyStruct my_struct = new MyStruct();

        // Initializing the struct fields
        my_struct.field1 = "Struct field";
        my_struct.field2 = 100;
        my_struct.field3 = false;

        // Printing the struct fields to the console
        stdout.printf("The struct field1 is: %s\n", my_struct.field1);
        stdout.printf("The struct field2 is: %d\n", my_struct.field2);
        stdout.printf("The struct field3 is: %b\n", my_struct.field3);
    }
}
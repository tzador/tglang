/*
 * This is a long and complex code snippet in VALA
 */
class ComplexSnippet : Object { // class declaration
    private int number; // private variable declaration

    /**
     * Prints the nth number in the Fibonacci sequence using recursion 
     * @param n the index of the number to be printed
     */
    public void print_fibonacci(int n) {
        if (n == 0 || n == 1) { // base case
            print("1");
        }
        else {
            int num1 = 1; // initialize first number
            int num2 = 1; // initialize second number
            int result; // declare result variable

            for (int i = 2; i < n; i++) { // loop to calculate fibonacci sequence
                result = num1 + num2;
                num1 = num2;
                num2 = result;
            }

            print("%d", result);
        }
    }

    /**
     * Validates the user's input and calls the print_fibonacci() function
     * @param args command line arguments
     */
    public static int main(string[] args) {
        int n; // declare user input variable
        print("Enter the index of the number in the Fibonacci sequence to be printed: ");
        scanf("%d", out n); // get user input

        if (n < 0) { // validate input
            print("Invalid input. Input must be a positive integer.");
        }
        else {
            ComplexSnippet fibonacci = new ComplexSnippet(); // create new instance of class
            fibonacci.print_fibonacci(n); // call print_fibonacci() function
        }

        return 0;
    }
}
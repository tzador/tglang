// This code snippet demonstrates the use of classes and objects in VALA

// A class declaration with a constructor and properties
class Person {
    private string name = "John";
    private int age = 25;

    // Constructor
    public Person(string _name, int _age) {
        name = _name;
        age = _age;
    }

    // Getters and setters for the properties
    public string get_name() {
        return name;
    }

    public void set_name(string new_name) {
        name = new_name;
    }

    public int get_age() {
        return age;
    }

    public void set_age(int new_age) {
        age = new_age;
    }
}

// Create an instance of the Person class
Person person = new Person("Jane", 30);

// Print out the information of the person object
stdout.printf("Name: %s\nAge: %i\n", person.get_name(), person.get_age());

// A generic class with a generic method
class Container<T> {
    private T[] data;

    // Constructor
    public Container(T[] _data) {
        data = _data;
    }

    // Method to print out the array elements
    public void print() {
        stdout.printf("Array elements: ");
        foreach (var element in data) {
            stdout.printf("%d, ", element);
        }
        stdout.printf("\n");
    }
}

// Create an instance of the Container class with an array of integers
int[] array = { 1, 2, 3, 4, 5 };
Container<int> container = new Container<int>(array);

// Call the print method on the container object
container.print();
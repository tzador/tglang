using Gtk;

// Define a new class called "WidgetBuilder" with a parent class of "Gtk.VBox"
public class WidgetBuilder : Gtk.VBox {
    
    // Define a private variable "button" of type "Gtk.Button"
    private Gtk.Button button;
    
    // Define a constructor for the class that takes in a string parameter "label"
    public WidgetBuilder (string label) {
        // Set the label of the button to the value passed in as a parameter
        button = new Gtk.Button.with_label(label);
        
        // Add the button to the vbox
        this.add (button);
        
        // Define a signal handler for the "clicked" signal of the button
        button.clicked.connect (() => {
            // Create a new message dialog with the specified label
            var msg = new MessageDialog (null, Gtk.DialogFlags.MODAL, 
                Gtk.MessageType.INFO, ButtonsType.OK,
                "You have clicked the button with label: {0}", label);
            
            // Run the message dialog and wait for a response
            msg.run ();
            
            // Close the message dialog
            msg.destroy ();
        });
    }
    
    // Define a method "get_button" that returns the button variable
    public Gtk.Button get_button () {
        return this.button;
    }
}

// Create a new instance of the WidgetBuilder class with the label "Click Me!"
var widget = new WidgetBuilder("Click Me!");

// Retrieve the button from the widget and add it to a window
var window = new Gtk.Window ();
window.add (widget.get_button());

// Show the window and all of its contents
window.show_all ();

// Start the Gtk main loop, waiting for user input
Gtk.main ();
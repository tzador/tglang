/* Example of a complex code snippet in VALA */

// Declaration of a class
public class MyComplexClass : Object {

    // Declaration of private properties
    private int a;
    private int b;
    private int c;

    /* Creation of constructor with parameters
     * Parameters:
     *      a: the value for property a
     *      b: the value for property b
     *      c: the value for property c
     */
    public MyComplexClass (int a, int b, int c) {
        this.a = a;
        this.b = b;
        this.c = c;
    }

    /* Method to perform complex operation
     * Parameters:
     *      x: the value to be added to property a
     *      y: the value to be multiplied with property b
     *      z: the value to be subtracted from property c
     * Returns:
     *      The result of the complex operation (a + x) * (b * y) - z
     */
    public int performComplexOperation (int x, int y, int z) {
        int result;

        result = (a + x) * (b * y) - z;

        return result;
    }

    /* Method to update property a
     * Parameters:
     *      new_a: the new value for property a
     */
    public void updateA (int new_a) {
        a = new_a;
    }

    /* Method to update property b
     * Parameters:
     *      new_b: the new value for property b
     */
    public void updateB (int new_b) {
        b = new_b;
    }

    /* Method to update property c
     * Parameters:
     *      new_c: the new value for property c
     */
    public void updateC (int new_c) {
        c = new_c;
    }
}

// Declaration of main function
public int main () {
    // Create an instance of the MyComplexClass and initialize the properties
    MyComplexClass my_class = new MyComplexClass (1, 2, 3);

    // Call the performComplexOperation method and store the result in a variable
    int result = my_class.performComplexOperation (4, 5, 6);

    // Output the result to the console
    print ("The result of the complex operation is: " + result);

    // Update the property a of my_class
    my_class.updateA (7);

    // Call the performComplexOperation method again with the updated property value
    result = my_class.performComplexOperation (4, 5, 6);

    // Output the updated result to the console
    print ("The updated result of the complex operation is: " + result);

    // Exit the program with a success status code
    return 0;
}
/** This program creates a matrix and performs various operations on it */

// Define variables and constants
int rows = 3;
int cols = 3;
int[][] matrix = new int[rows][cols];
int[][] result_matrix = new int[rows][cols];
const int scalar = 5;

// Function to initialize matrix with random values
void initialize_matrix (int[][] mat) {
    // Iterate through rows and columns
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Generate random value and assign it to matrix element
            mat[i][j] = rand() % 10;
        }
    }
}

// Function to print matrix
void print_matrix (int[][] mat) {
    // Iterate through rows and columns
    for (int i = 0; i < rows; i++) {
       for (int j = 0; j < cols; j++) {
            // Print element at current index
            stdout.printf("%d ", mat[i][j]);
       }
       // Print new line after each row is completed
       stdout.printf("\n");
    }
}

// Function to multiply a matrix with a scalar
void scalar_multiply (int[][] mat, int scalar) {
    // Iterate through rows and columns
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Multiply matrix element with scalar and assign to corresponding element in result matrix
            result_matrix[i][j] = mat[i][j] * scalar;
        }
    }
}

// Function to add two matrices
void matrix_addition (int[][] mat1, int[][] mat2) {
    // Iterate through rows and columns
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Add elements at current index from both matrices and assign to corresponding element in result matrix
            result_matrix[i][j] = mat1[i][j] + mat2[i][j];
        }
    }
}

// Function to subtract one matrix from another
void matrix_subtraction (int[][] mat1, int[][] mat2) {
    // Iterate through rows and columns
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Subtract element at current index of second matrix from element at current index of first matrix and assign to corresponding element in result matrix
            result_matrix[i][j] = mat1[i][j] - mat2[i][j];
        }
    }
}

/** Main function */

// Initialize first matrix with random values
initialize_matrix(matrix);

// Print first matrix
stdout.printf("Matrix:\n");
print_matrix(matrix);

// Multiply first matrix with scalar
scalar_multiply(matrix, scalar);

// Print result matrix
stdout.printf("Matrix multiplied by scalar:\n");
print_matrix(result_matrix);

// Initialize second matrix with random values
initialize_matrix(matrix);

// Print second matrix
stdout.printf("Second matrix:\n");
print_matrix(matrix);

// Add first and second matrix
matrix_addition(result_matrix, matrix);

// Print result matrix
stdout.printf("Result of matrix addition:\n");
print_matrix(result_matrix);

// Subtract second matrix from first matrix
matrix_subtraction(result_matrix, matrix);

// Print result matrix
stdout.printf("Result of matrix subtraction:\n");
print_matrix(result_matrix);
/**
* This is a complex code snippet in VALA.
* It contains multiple functions, variables, and loops.
*/
public class Main : Object {

    public int main (string[] args) {
	
	    // Initialize variables
	    int count = 0;
	    string message = "Hello World!";
	
	    // Loop through message and print each character
	    for (int i = 0; i < message.length; i++) {
		    print("%c", message[i]);
		    count++;
	    }
	
	    // Print total count of characters
	    print("Total characters: %d", count);
	
	    // Call function to check if message is a palindrome
	    bool isPalindrome = check_palindrome(message);
	
	    // Check if message is a palindrome
	    if (isPalindrome) {
		    print("Message is a palindrome.");
	    } else {
		    print("Message is not a palindrome.");
	    }
	
	    // Return success
	    return 0;
    }

    /**
    * This function checks if a string is a palindrome by comparing the first and last letter of the string,
    * then moving towards the middle of the string.
    * @param message the string to check
    * @return true if the string is a palindrome, false otherwise
    */
    public bool check_palindrome (string message) {
	
	    // Initialize variables
	    int left = 0;
	    int right = message.length - 1;
	
	    // Loop through string until left and right indexes meet
	    while (left < right) {
		    // Compare characters at left and right indexes
		    if (message[left] != message[right]) {
			    // If they are not equal, return false
			    return false;
		    }
		    // Move left index to the right
		    left++;
		    // Move right index to the left
		    right--;
	    }
	
	    // If the loop finishes without returning false, the string is a palindrome
	    return true;
    }
}
/** 
 * This is a code snippet demonstrating the use of classes and inheritance in VALA.
**/
// Defining a base class
class Shape {
    // Properties of the class
    public int x, y;
    // Constructor for initializing properties
    public Shape(int _x, int _y) {
        x = _x;
        y = _y;
    }
    // Method to calculate area
    public virtual void calculate_area() {
        return;
    }
}
// Inheriting from base class
class Rectangle : Shape {
    // Properties of the class
    public int width, height;
    // Constructor for initializing properties
    public Rectangle(int _x, int _y, int _width, int _height) : base(_x, _y) {
        width = _width;
        height = _height;
    }
    // Override method to calculate area
    public override void calculate_area() {
        // Calculating area and storing in a variable
        int area = width * height;
        // Printing the result using string interpolation
        stdout.printf("The area of the rectangle is ${area}.\n");
    }
}
// Instantiating objects from derived class
Rectangle rectangle1 = new Rectangle(5, 10, 8, 12);
Rectangle rectangle2 = new Rectangle(2, 3, 5, 7);
// Calling the calculate_area method on the objects
rectangle1.calculate_area();
rectangle2.calculate_area();
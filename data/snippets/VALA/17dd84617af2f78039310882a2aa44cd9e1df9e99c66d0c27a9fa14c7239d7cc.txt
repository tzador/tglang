public class ComplexNumber : Number { // Creates a class called ComplexNumber that inherits from the Number class in VALA
    private int real; // Declares a private integer variable to store the real part of the complex number
    private int imaginary; // Declares a private integer variable to store the imaginary part of the complex number
    
    public ComplexNumber (int real, int imaginary) { // Constructor for the ComplexNumber class that takes in a real and imaginary integer value
        this.real = real; // Assigns the parameter value to the real variable of the class
        this.imaginary = imaginary; // Assigns the parameter value to the imaginary variable of the class
    }
    
    public void display () { // Method to display the complex number in standard form
        stdout.printf ("(%d + %di)", real, imaginary); // Prints the complex number in the format (real + imaginary i)
    }
    
    public int getReal () { // Method to get the real part of the complex number
        return real; // Returns the value of the real variable
    }
    
    public int getImaginary () { // Method to get the imaginary part of the complex number
        return imaginary; // Returns the value of the imaginary variable
    }
    
    public double magnitude () { // Method to calculate the magnitude of the complex number
        return Math.sqrt (Math.pow (real, 2) + Math.pow (imaginary, 2)); // Returns the square root of the sum of the squares of the real and imaginary parts
    }
    
    public ComplexNumber add (ComplexNumber other) { // Method to add two complex numbers
        return new ComplexNumber (real + other.getReal (), imaginary + other.getImaginary ()); // Creates a new ComplexNumber object with the sum of the two complex numbers
    }
    
    public ComplexNumber subtract (ComplexNumber other) { // Method to subtract two complex numbers
        return new ComplexNumber (real - other.getReal (), imaginary - other.getImaginary ()); // Creates a new ComplexNumber object with the difference of the two complex numbers
    }
    
    public ComplexNumber multiply (ComplexNumber other) { // Method to multiply two complex numbers
        int newReal = (real * other.getReal ()) - (imaginary * other.getImaginary ()); // Calculates the real part of the new complex number
        int newImaginary = (real * other.getImaginary ()) + (imaginary * other.getReal ()); // Calculates the imaginary part of the new complex number
        return new ComplexNumber (newReal, newImaginary); // Creates a new ComplexNumber object with the product of the two complex numbers
    }
}
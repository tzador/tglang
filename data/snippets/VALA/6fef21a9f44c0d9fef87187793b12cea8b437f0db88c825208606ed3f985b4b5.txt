//* This is a program that performs binary search on a sorted array

//* Define a class named BinarySearch
class BinarySearch {
    //* Define a method named search that takes in an array of integers, the value to search for, and the starting and ending index of the array
    public int search(int[] arr, int value, int start, int end) {
        //* Check if the starting index is less than or equal to the ending index
        if (start <= end) {
            //* Calculate the middle index of the array
            int mid = start + (end - start) / 2;

            //* Check if the value at the middle index is equal to the value we are searching for, if yes then return the middle index
            if (arr[mid] == value)
                return mid;

            //* Check if the value at the middle index is less than the value we are searching for, if yes then recursively call search on the right half of the array
            if (arr[mid] < value)
                return search(arr, value, mid + 1, end);

            //* If none of the above conditions are met, then recursively call search on the left half of the array
            return search(arr, value, start, mid - 1);
        }

        //* If the starting index is greater than the ending index, then the value is not in the array, so return -1
        return -1;
    }

    //* Define a method named main that takes in no arguments
    public void main() {
        //* Define an array of integers
        int[] arr = { 2, 4, 6, 8, 10, 12, 14 };

        //* Search for the value 8 in the array
        int result = search(arr, 8, 0, arr.length - 1);

        //* Print the result of the search
        stdout.printf("Index of 8 is %d", result);
    }
}

//* Instantiate the BinarySearch class and call the main method
var binarySearch = new BinarySearch();
binarySearch.main();
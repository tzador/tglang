#define NUM 10 // defining a constant called NUM with a value of 10

class MyArray<T> { // defining a generic class called MyArray with type parameter T
    T[] data; // declaring a private array called data that stores values of type T
    uint length; // declaring a private unsigned int called length to keep track of array length

    public MyArray () { // defining a default constructor for the class
        data = new T[NUM]; // initializing data array with size of NUM constant
        length = 0; // setting initial length to 0
    }

    public void add (T value) { // defining a method called add, which takes in a value of type T
        if (length == NUM) { // checking if array is already at maximum capacity
            error ("Array is full!"); // throwing an error if array is full
        } else {
            data[length] = value; // adding value to data array at index of current length
            length++; // increasing length by 1
        }
    }

    public T get (uint index) { // defining a method called get, which takes in an unsigned int index
        if (index >= length) { // checking if index is within range of current length
            error ("Index out of bounds!"); // throwing an error if index is out of bounds
        }
        return data[index]; // returning value at specified index in data array
    }

    public void remove (uint index) { // defining a method called remove, which takes in an unsigned int index
        if (index >= length) { // checking if index is within range of current length
            error ("Index out of bounds!"); // throwing an error if index is out of bounds
        }
        for (uint i = index; i < length - 1; i++) { // looping through values from specified index to second to last value
            data[i] = data[i + 1]; // shifting values to the left by 1
        }
        length--; // decreasing length by 1
    }
}

int main () { // defining main function
    MyArray<int> myArray = new MyArray<int>(); // initializing a new instance of MyArray with type int
    myArray.add(5); // adding value 5 to array
    myArray.add(10); // adding value 10 to array
    myArray.add(15); // adding value 15 to array

    int value = myArray.get(1); // retrieving value at index 1 and storing it in a variable

    myArray.remove(0); // removing value at index 0 from array

    stdout.printf("Value at index 1 is %d", value); // printing value at index 1 to console

    return 0; // returning 0 to indicate successful execution
}
int main() {
    // Declare an array of strings
    string[] names = {"John", "Jane", "Bob", "Alice"};
    
    // Loop through the array and print each element
    for (int i = 0; i < names.length; i++) {
        stdout.printf("Name: %s\n", names[i]);
    }
    
    // Declare a variable
    int num = 5;
    
    // Use a conditional statement
    if (num > 10) {
        stdout.printf("The number is greater than 10");
    } else {
        stdout.printf("The number is less than or equal to 10");
    }
    
    // Create a function that returns the sum of two numbers
    int sum(int num1, int num2) {
        return num1 + num2;
    }
    
    // Call the function and store the result in a variable
    int result = sum(3, 5);
    
    // Print the result
    stdout.printf("Result: %d\n", result);
    
    // Create a class
    class Person {
        // Declare properties
        private string name;
        private int age;
        
        // Constructor with default values
        public Person(string n = "Unknown", int a = 0) {
            name = n;
            age = a;
        }
        
        // Getter and setter methods
        public string get_name() {
            return name;
        }
        
        public int get_age() {
            return age;
        }
        
        public void set_name(string n) {
            name = n;
        }
        
        public void set_age(int a) {
            age = a;
        }
        
        // Define a method that prints the person's information
        public void print_info() {
            stdout.printf("Name: %s\n", name);
            stdout.printf("Age: %d\n", age);
        }
    }
    
    // Instantiate a Person object
    Person person = new Person("Sarah", 25);
    
    // Print the person's information
    person.print_info();
    
    // Change the person's name and age using setters
    person.set_name("Tom");
    person.set_age(32);
    
    // Print the updated information
    person.print_info();
    
    // Create an interface with a method
    interface Greeting {
        public void say_hello();
    }
    
    // Implement the interface in a class
    class EnglishGreeting : Greeting {
        // Implement the method
        public void say_hello() {
            stdout.printf("Hello, how are you today?\n");
        }
    }
    
    // Instantiate the EnglishGreeting class
    EnglishGreeting english_greeting = new EnglishGreeting();
    
    // Use the method defined in the interface
    english_greeting.say_hello();
    
    return 0;
}
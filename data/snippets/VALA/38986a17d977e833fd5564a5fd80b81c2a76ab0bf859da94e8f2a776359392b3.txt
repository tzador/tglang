/* This code snippet generates a spiral of numbers from 1 to 25 */

int main() {

    // Define variables to store the starting and ending points of spiral
    int start = 1;
    int end = 25;

    // Create an empty 2D array to store the spiral numbers
    int[][] spiral = {};

    // Set the initial direction of the spiral (right)
    int direction = 0;

    // Keep track of the current position in the spiral
    int row = 0;
    int col = 0;

    // Loop through all numbers from start to end
    for (int i = start; i <= end; i++) {

        // Add the current number to the spiral at the current position
        spiral[row][col] = i;

        // Increment the current position based on the current direction
        if (direction == 0) {
            col++;
        } else if (direction == 1) {
            row++;
        } else if (direction == 2) {
            col--;
        } else {
            row--;
        }

        // Check if the next position is out of bounds or already filled
        if (row < 0 || row >= spiral.length || col < 0 || col >= spiral[row].length || spiral[row][col] != 0) {

            // Change the direction based on the current direction
            if (direction == 0) {
                direction = 1;
            } else if (direction == 1) {
                direction = 2;
            } else if (direction == 2) {
                direction = 3;
            } else {
                direction = 0;
            }

            // Adjust the current position based on the new direction
            if (direction == 0) {
                col--;
            } else if (direction == 1) {
                row--;
            } else if (direction == 2) {
                col++;
            } else {
                row++;
            }
        }
    }

    // Print out the spiral
    for (int[] row_numbers: spiral) {
        for (int number: row_numbers) {
            stdout.printf("%d ", number);
        }
        stdout.printf("\n");
    }

    return 0;
}
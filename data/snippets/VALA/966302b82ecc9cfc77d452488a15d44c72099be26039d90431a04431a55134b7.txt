/* This is a complex code snippet written in VALA.
   It performs a sorting algorithm on a given array,
   using the QuickSort method. */

/* QuickSort Algorithm Function */
public static void quicksort<Type>(Type[] arr, int left, int right)
{
    int i, j;
    Type pivot, tmp;
    
    i = left;
    j = right;
    pivot = arr[(left + right) / 2];
    
    while (i <= j)
    {
        while (arr[i] < pivot)
            i++;
        while (arr[j] > pivot)
            j--;
        if (i <= j)
        {
            tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
            i++;
            j--;
        }
    }
    if (left < j)
        quicksort(arr, left, j);
    if (i < right)
        quicksort(arr, i, right);
}

/* Main function to test the algorithm */
public static int main()
{
    /* Generate an array of random integers */
    int[] arr = new int[20];
    
    Random rand = new Random();
    for (int i = 0; i < 20; i++)
        arr[i] = rand.next_int(100);
    
    /* Print the unsorted array */
    stdout.printf("Unsorted Array: %s\n\n", arr.to_string());
    
    /* Sort the array using QuickSort */
    quicksort(arr, 0, arr.length - 1);
    
    /* Print the sorted array */
    stdout.printf("Sorted Array: %s\n", arr.to_string());
    
    return 0;
}
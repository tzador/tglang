/* This code snippet shows a class in VALA that implements a binary search algorithm for a sorted array */

// Declaring a class named BinarySearch
class BinarySearch {

    // Declaring a public static method named search with parameters for an integer array and the target value
    public static int search(int[] arr, int target) {

        // Initializing variables for the start and end indices of the array
        int start = 0;
        int end = arr.length - 1;

        // While loop to continue until the start index is less than or equal to the end index
        while (start <= end) {

            // Finding the middle index of the array
            int mid = (start + end) / 2;

            // If statement to check if the target value is equal to the value at the middle index
            if (arr[mid] == target) {

                // Return statement to return the index of the target value
                return mid;
            }

            // Else if statement to check if the target value is less than the value at the middle index
            else if (arr[mid] > target) {

                // Update the end index to be the index before the middle index
                end = mid - 1;
            }

            // Else statement to update the start index to be the index after the middle index
            else {

                // Update the start index to be the index after the middle index
                start = mid + 1;
            }
        }

        // If the target value is not found, return -1
        return -1;
    }

    // Main method to test the binary search algorithm
    public static int main(string[] args) {

        // Declaring a sorted array of integers
        int[] arr = {2, 5, 7, 9, 11, 14, 16, 19, 22};

        // Declaring a variable to store the index of the target value
        int index;

        // Calling the search method with the sorted array and target value of 11
        index = BinarySearch.search(arr, 11);

        // Printing the result
        stdout.printf("11 is located at index %d\n", index);

        // Calling the search method with the sorted array and target value of 12
        index = BinarySearch.search(arr, 12);

        // Printing the result
        stdout.printf("12 is located at index %d\n", index);

        // Return statement
        return 0;
    }
}
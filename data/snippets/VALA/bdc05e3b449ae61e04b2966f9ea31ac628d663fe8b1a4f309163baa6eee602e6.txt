using GLib; // importing the GLib library
using Gtk; // importing the Gtk library

public class ExampleApplication : Gtk.Application {
    // creating a new class that inherits from Gtk.Application
    public ExampleApplication () {
    // defining the constructor method
        Object(object: "Example", registration: ApplicationFlags.FLAGS_NONE);
        // instantiating a new instance of the class using the parent class's constructor method
    }

    protected override void activate () {
    // overriding the parent class's activate method
        var window = new Gtk.ApplicationWindow (this);
        // creating a new application window from the Gtk library
        window.set_title ("Hello World");
        // setting the title of the window
        window.set_default_size (400, 400);
        // setting the default size of the window
        var label = new Gtk.Label ("Hello World");
        // creating a label with the text "Hello World"
        window.add (label);
        // adding the label to the window
        window.show_all ();
        // displaying all elements within the window
    }

    public static int main (string[] args) {
    // creating a main method with string array argument
        var app = new ExampleApplication ();
        // instantiating a new instance of the ExampleApplication class
        return app.run (args);
        // calling the run method from the parent class and returning its value
    }
}
;; This is a function that checks if a list is sorted in ascending order
(define (sorted? lst)
  (cond ((null? lst) #t) ; check if list is empty
        ((null? (cdr lst)) #t) ; check if list has 1 element
        (else
         (cond ((< (car lst) (cadr lst)) ; compare first 2 elements
                (sorted? (cdr lst))) ; recursively check remaining list
               (else #f))))) ; if first element not less than second, list is not sorted
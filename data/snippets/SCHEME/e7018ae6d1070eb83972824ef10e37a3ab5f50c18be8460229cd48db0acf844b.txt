(define (multiplier n)
  (lambda (x) (* n x)))
  
(define (addn-to-each lst n)
  (map (multiplier n) lst))
  
(define (curried-add a b c)
  (+ a b c))
  
(define (curried-add-n n)
  (lambda (a b c) (curried-add a b c n)))
  
;; Calls the curried function with parameters 1 and 2, and then adds 3 to the result
((curried-add-n 3) 1 2)
(define (min-max lst)
  (if (null? lst)
      '()
      (let ((min (car lst))
            (max (car lst)))
        (let loop ((rest (cdr lst)))
          (cond ((null? rest) (list min max))
                ((< (car rest) min)
                 (begin
                   (set! min (car rest))
                   (loop (cdr rest))))
                ((> (car rest) max)
                 (begin
                   (set! max (car rest))
                   (loop (cdr rest))))
                (else (loop (cdr rest))))))))
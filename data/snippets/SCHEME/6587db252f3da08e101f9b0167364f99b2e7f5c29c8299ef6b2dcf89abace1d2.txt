;; Define a function that takes in a list of integers and returns the sum of all even numbers in the list
(define (sum-even lst)
  (let ((sum 0)) ;; Initialize a sum variable
    (cond ((null? lst) sum) ;; If the list is empty, return the current sum
          ((= 0 (modulo (car lst) 2)) ;; If the first element is even, add it to sum and call the function again with rest of list
           (set! sum (+ sum (car lst))) 
           (sum-even (cdr lst)))
          (else (sum-even (cdr lst)))) ;; If not, just call the function again with rest of list
  ))

(sum-even '(1 2 3 4 5 6 7)) ;; Output: 12 (2+4+6)
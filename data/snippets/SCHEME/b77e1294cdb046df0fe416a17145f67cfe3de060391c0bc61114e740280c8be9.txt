;; Define a function that checks if a list contains a given element
(define (contains? lst elt)
  ;; Check the base case first
  (cond ((null? lst) #f)
        ;; Check if the first element in the list is the given element
        ((equal? (car lst) elt) #t)
        ;; If not, recursively call the function on the rest of the list
        (else (contains? (cdr lst) elt))))
;; Define a macro that creates a function with a variable number of arguments
(define-syntax define-multi
  (syntax-rules ()
    ((_ (name) exp)
     (define (name . args) exp))
    ((_ (name rest . others) exp)
     (define-multi (name rest) (define-multi (rest . others) exp)))))
  
;; Define a function using the created macro
(define-multi (sum a b)
  (if (null? b)
      a
      (sum (+ a (car b)) (cdr b))))

;; Call the function with different number of arguments
(sum)           ; => undefined
(sum 5)         ; => 5
(sum 2 3)       ; => 5
(sum 1 2 3)     ; => 6
(sum 1 2 3 4)   ; => 10
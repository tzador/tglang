(define (merge-sort list)
  (cond ((null? list) list) ; base case
        ((null? (cdr list)) list) ; another base case
        (else (let ((midpoint (length list))) ; recursive case
                (let ((left (sublist list 0 (- midpoint 1))))
                  (let ((right (sublist list midpoint (- (length list) 1))))
                    (merge (merge-sort left) ; merge left and right halves
                           (merge-sort right))))))))
(define (find-max-numbers lst)                 ; Defining a function called find-max-numbers that takes in a list 
  (if (null? lst)                             ; Checks if the list is empty
      #f                                      ; Returns false if the list is empty
      (let loop ((max #f)                      ; Creates a loop with a max variable initialized to false
                  (rest lst))                  ; The loop takes in the rest of the list each time it iterates
        (if (null? rest)                       ; Checks if the rest of the list is empty
            max                                ; Returns the max variable if it is empty
            (if (or (not max)                  ; Checks if max is false or not defined yet
                    (> (car rest) max))        ; Checks if the current element in the list is greater than the max variable
                (loop (car rest) (cdr rest))   ; If true, reassigns max to the current element and continues the loop
                (loop max (cdr rest)))))))      ; If false, continues the loop without changing the max variable

(find-max-numbers '(3 6 2 9 1 7))              ; Calls the function and passes in a list of numbers to find the maximum number.
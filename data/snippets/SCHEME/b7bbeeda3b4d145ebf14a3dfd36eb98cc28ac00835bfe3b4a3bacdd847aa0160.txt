;; Define a recursive function to calculate the factorial of a number
(define (factorial n)
  (if (= n 1)
      1
      (* n (factorial (- n 1)))))

;; Define a function to find the maximum of two numbers
(define (max num1 num2)
  (if (> num1 num2)
      num1
      num2))

;; Define a function to check if a number is prime
(define (is-prime? n)
  (if (= n 2)
      #t
      (cond [(< n 2) #f]
            [(= (remainder n 2) 0) #f]
            [else 
              (define (iter i)
                (cond [(= i n) #t]
                      [(= (remainder n i) 0) #f]
                      [else (iter (+ i 1))]))
              (iter 3)])))

;; Define a function to generate a list of prime numbers less than or equal to n
(define (prime-list n)
  (define (iter i lst)
    (if (= i n)
        lst
        (if (is-prime? i)
            (iter (+ i 1) (cons i lst))
            (iter (+ i 1) lst))))
  (reverse (iter 2 '()))) ;; Pass in an empty list '()

;; Call the functions and print the results
(display (factorial 5))
(newline)
(display (max 10 20))
(newline)
(display (is-prime? 7))
(newline)
(display (prime-list 10))
;; This function takes in a list of numbers and returns the average

(define (average list)                         ; Define a function called 'average'
  (let ((sum 0)                                ; Initialize a sum variable to 0
        (count 0))                             ; Initialize a count variable to 0
    (define (helper lst)                       ; Define a helper function to iterate through list
      (if (not (null? lst))                    ; If the list is not empty
          (begin (set! sum (+ sum (car lst)))   ; Add the value at car position to sum
                 (set! count (+ count 1))       ; Increment count by 1
                 (helper (cdr lst)))            ; Recursively call helper with rest of list
          (/ sum count)))                       ; If the list is empty, return the average as sum/count
    (helper list)))                             ; Call helper function on input list as parameter
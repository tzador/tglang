(define (merge-lists lst1 lst2) ; defines a function "merge-lists" with 2 parameters, lst1 and lst2
  (cond ((null? lst1) lst2) ; checks if lst1 is empty, returns lst2 if it is
        ((null? lst2) lst1) ; checks if lst2 is empty, returns lst1 if it is
        ((< (car lst1) (car lst2)) ; checks if the first element of lst1 is less than the first element of lst2
        (cons (car lst1) (merge-lists (cdr lst1) lst2)) ; if true, adds the first element of lst1 to the merged list and recursively calls the function with the remaining elements of lst1 and lst2
        (else (cons (car lst2) (merge-lists lst1 (cdr lst2)))))) ; if false, adds the first element of lst2 to the merged list and recursively calls the function with the remaining elements of lst1 and lst2. This ensures that the merged list is in ascending order.
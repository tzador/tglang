(lambda (lst) ; This is a lambda function that takes in a list as a parameter
  (let ((i 0)) ; This creates a variable "i" and initializes it to 0
    (define (incr) ; This is a helper function "incr" used to increment "i"
      (set! i (+ i 1))) ; This sets the value of "i" to itself plus 1
    (map (lambda (x) ; This is another lambda function that takes in a parameter "x"
           (incr) ; Calls the helper function "incr" to increment "i"
           (* x i)) ; Multiplies "x" with the current value of "i"
         lst))) ; Applies the lambda function to each element in the input list
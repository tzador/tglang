(let ((n 10) ; defines a variable n with the value 10
      (sum 0)) ; defines a variable sum with the value 0
  (if (<= n 0) ; checks if n is less than or equal to 0
      sum ; returns the current value of sum if n is 0 or negative
      (begin ; else, start a new statement and evaluate the following expressions in order
        (set! sum (+ sum n)) ; updates the value of sum by adding n to it
        (set! n (- n 1)) ; updates the value of n by subtracting 1 from it
        (display sum) ; prints the current value of sum
        (newline) ; prints a new line
        (sum-numbers n sum)))) ; recursively calls the function with updated n and sum values
(define (fibonacci n) ; Creates a function named "fibonacci" that takes in one argument "n"
  (if (or (= n 0) (= n 1)) ; Checks if "n" is equal to either 0 or 1
      n ; If "n" is equal to either 0 or 1, return its value
      (+ (fibonacci (- n 1)) ; If "n" is not equal to either 0 or 1, call the "fibonacci" function recursively with argument "n - 1" and add it to
        (fibonacci (- n 2))))) ; the result of calling the "fibonacci" function recursively with argument "n - 2"

(fibonacci 10) ; Calls the "fibonacci" function with argument 10, which will calculate and return the 10th number in the Fibonacci sequence
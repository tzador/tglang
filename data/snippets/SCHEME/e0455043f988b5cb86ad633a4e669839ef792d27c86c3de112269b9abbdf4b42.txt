;; Function that returns the first n elements of a list
(define (first-n-elements n lst)
  ;; Define an empty list to store the first n elements
  (define first-n '())
  ;; Define a counter variable
  (define count 0)

  ;; Helper function to add elements to the first-n list
  ;; Takes in a current list, a list of remaining elements, and the counter
  (define (helper current remaining c)
    ;; Base case: when counter reaches n or remaining list is empty
    (cond ((= c n) current)
          ((null? remaining) current)
          ;; Recursive case: add first element of remaining to first-n list
          ;; Increment counter and call helper function on updated lists
          (else (helper (append current (list (car remaining)))
                  (cdr remaining) (+ c 1)))))

  ;; Call helper function with empty initial list, original list, and counter
  (helper first-n lst count))
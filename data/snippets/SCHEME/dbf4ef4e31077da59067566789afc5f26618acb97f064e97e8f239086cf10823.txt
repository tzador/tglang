; An example function to compute the nth Fibonacci number using a recursive procedure
(define (fibonacci n)
  ; Variable to store the result
  (let ((result 0))
    ; Recursive procedure to compute the fibonacci number
    (if (or (= n 0) (= n 1))
        ; Base cases: the first two Fibonacci numbers are 0 and 1
        (set! result n)
        ; Other cases: recursively call the function to get the nth Fibonacci number
        (set! result (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))
  ; Return the result
  result)
  
; An example call to the fibonacci function
(fibonacci 10) ; output: 55
;; checks if a given list is sorted in ascending order
(define (is-sorted lst)
  (cond ((null? lst) #t) ; if list is empty, it is sorted
        ((null? (cdr lst)) #t) ; if list has only one element, it is sorted
        (else (and (<= (car lst) (cadr lst)) ; checks if the first element is less than or equal to the second element
                   (is-sorted (cdr lst)))))) ; recursively checks the remainder of the list if it is sorted
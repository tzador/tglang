;; Define a function that checks if a given number is prime
(define (is-prime num)
  ;; Base case: if number is less than 2, it is not prime
  (cond ((< num 2) #f)
        ;; Further base case: if number is 2, it is prime
        ((= num 2) #t)
        ;; Loop through numbers from 2 to the square root of num
        (else (let loop ((i 2))
                ;; Check if i is a factor of num
                (cond ((= i (sqrt num)) #t)
                      ;; If i is a factor, number is not prime
                      ((= (mod num i) 0) #f)
                      ;; Otherwise, continue looping
                      (else (loop (+ i 1))))))))
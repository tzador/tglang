(define (list-add lst n)  ; Define a function that takes in a list and a number
  (if (null? lst)
      lst  ; If the list is empty, return the empty list
      (cons (+ n (car lst)) (list-add (cdr lst) n))))  ; Otherwise, add the number to the first element of the list and recursively call the function with the rest of the list 
(list-add '(1 2 3) 5)  ; Call the function with a list (1 2 3) and the number 5 as arguments, which should return the list (6 7 8)
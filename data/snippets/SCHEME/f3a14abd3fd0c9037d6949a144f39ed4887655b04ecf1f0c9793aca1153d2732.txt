;;A code snippet written in the SCHEME programming language

;;Define a function that takes in a list of numbers and returns the sum of the squares of those numbers

(define (sum-of-squares lst)
  ;;Base case: empty list returns 0
  (if (null? lst)
      0
      ;;Use recursion to sum squares of remaining numbers
      (+ (sqr (car lst)) (sum-of-squares (cdr lst)))))

;;Define a helper function to compute the square of a given number
(define (sqr x)
  (* x x))

;;Example usage:
(sum-of-squares '(1 2 3 4)) ;Returns 30
(sum-of-squares '(5 10 15)) ;Returns 350
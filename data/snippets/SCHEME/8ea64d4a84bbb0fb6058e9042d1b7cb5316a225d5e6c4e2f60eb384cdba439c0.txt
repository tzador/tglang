(define (fib n) ; Defines a function named 'fib' that takes in an argument 'n'
  (cond ; Conditional flow statement
    ((= n 0) 0) ; If 'n' is equal to 0, return 0
    ((= n 1) 1) ; If 'n' is equal to 1, return 1
    (else
      (+ (fib (- n 1)) ; Recursively calls the 'fib' function with a decremented 'n'
         (fib (- n 2))))) ; Recursively calls the 'fib' function with a decremented 'n' by 2, and adds the two results together
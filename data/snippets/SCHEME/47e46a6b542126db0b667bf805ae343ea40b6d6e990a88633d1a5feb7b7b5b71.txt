;;;This code snippet takes in a list of numbers and returns the sum of the numbers.
(define (sum list)
  (if (null? list) ;;;checks if list is empty
      0 ;;;base case, return 0
      (+ (car list) (sum (cdr list))))) ;;;recursively add first element of list to sum of rest of the list
(sum '(1 2 3 4 5)) ;;;output: 15
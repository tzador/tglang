;; Define a function `is-prime` that takes in a number `n` and returns `#t` if `n` is prime and `#f` otherwise
(define (is-prime n)
  (if (< n 2)             ; check if n is less than 2, all numbers less than 2 are not prime
      #f                  ; if n is less than 2, return false
      (let loop ((i 2))   ; for all other numbers, use a loop to check if any numbers between 2 and n-1 divides n evenly
        (cond ((= n i)    ; if i equals n, then n must be prime
               #t)        ; return true
              ((= (remainder n i) 0)  ; check if i divides n evenly
               #f)        ; if i divides n evenly, n is not prime, return false
              (else        ; if i does not divide n evenly, increment i by 1 and continue the loop
               (loop (+ i 1)  ; continue the loop with the updated i value
                     ))))))
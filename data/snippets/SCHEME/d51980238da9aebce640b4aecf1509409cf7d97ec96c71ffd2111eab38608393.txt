(module fibmod
;; Define helper function to compute the fibonacci sequence
(define (fib n)
	(cond 
		((= n 0) 0) ; Base case, return 0 when n is 0
		((= n 1) 1) ; Base case, return 1 when n is 1
		(else (+ (fib (- n 1)) (fib (- n 2)))) ; If n is greater than 1, recursively call the fib function with n-1 and n-2 and add them together
	)
)

;; Define a function that uses the helper function to return the nth element of the fibonacci sequence
(define (fibonacci n)
	(if (< n 2)
		n ; Return n when it is less than 2
		(fib n)) ; Otherwise, call the fib helper function to compute the fibonacci sequence
)

;; Output the first 10 elements of the fibonacci sequence
(display "The first 10 elements of the fibonacci sequence are:")
(display (fibonacci 0))
(display " ")
(display (fibonacci 1))
(display " ")
(display (fibonacci 2))
(display " ")
(display (fibonacci 3))
(display " ")
(display (fibonacci 4))
(display " ")
(display (fibonacci 5))
(display " ")
(display (fibonacci 6))
(display " ")
(display (fibonacci 7))
(display " ")
(display (fibonacci 8))
(display " ")
(display (fibonacci 9))
(display " ")
(display (fibonacci 10))
)
;; Defines a function to calculate the factorial of a given number
(define (factorial n)
  (if (= n 0)
      1
      (* n (factorial (- n 1))))
  )

;; Defines a function to calculate the sum of a list of numbers
(define (sum lst)
  (if (null? lst)
      0
      (+ (car lst) (sum (cdr lst))))
  )

;; Defines a function to check if a given number is a prime number
(define (is-prime n)
  (cond ((<= n 1) #f)
        ((= n 2) #t)
        ((and (> n 2) (even? n)) #f)
        (else (define (iter x)
                (if (= x n)
                    #t
                    (if (= (modulo n x) 0)
                        #f
                        (iter (+ x 2)))))
              (iter (+ 3 (floor (sqrt n))) #t)))
  )

;; Generates a list of prime numbers from 1 to n
(define (generate-primes n)
  (define (helper k acc)
    (if (> k n)
        acc
        (if (is-prime k)
            (helper (+ k 1) (cons k acc))
            (helper (+ k 1) acc))))
  (reverse (helper 1 '())))

;; Calculates the factorial of 5
(factorial 5)

;; Calculates the sum of the first 10 numbers
(sum (range 1 10))

;; Checks if 7 is a prime number
(is-prime 7)

;; Generates a list of prime numbers from 1 to 100
(generate-primes 100)
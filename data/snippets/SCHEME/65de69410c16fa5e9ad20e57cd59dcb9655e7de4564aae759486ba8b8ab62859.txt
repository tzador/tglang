;; This function takes in a list of integers and returns
;; a list of their squares
(define (square-list lst)
  (cond ((null? lst) '())                   ; if the list is empty, return empty list
        ((not (integer? (car lst))) '())    ; if first element is not an integer, return empty list
        (else (cons (square (car lst))       ; otherwise, square the first element
                    (square-list (cdr lst)))))) ; and recursively call function on the rest of the list

;; Helper function to square a number
(define (square x)
  (* x x))

;; Example usage
(square-list '(1 2 3 4 5)) ; Output: (1 4 9 16 25)
(square-list '(1 2 "hey" 4 5)) ; Output: ()
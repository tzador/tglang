(define (recursive-merge l r)
    ;; function to recursively merge two lists
    (if (null? l) r             ;; if left list is empty, return right list
    (if (null? r) l             ;; if right list is empty, return left list
    (if (> (car l) (car r))     ;; if first element of left list is greater than right list
        (cons (car r) (recursive-merge l (cdr r)))     ;; add first element of right list to result, call function on remaining elements
        (cons (car l) (recursive-merge (cdr l) r)))) ;; add first element of left list to result, call function on remaining elements
(define (merge-lists list1 list2)
  (if (null? list1) list2
  (if (null? list2) list1
  (if (> (car list1) (car list2))
      (cons (car list2) (merge-lists list1 (cdr list2)))
      (cons (car list1) (merge-lists (cdr list1) list2))))))

(define (merge-sort list)
  (if (null? (cdr list))
      list
      (let ((split (quotient (length list) 2)))
        (let ((left (take list split))
              (right (drop list split)))
          (merge-lists (merge-sort left)
                       (merge-sort right))))))

(define numbers '(4 3 6 2 9 8 1 7 5))
(merge-sort numbers)
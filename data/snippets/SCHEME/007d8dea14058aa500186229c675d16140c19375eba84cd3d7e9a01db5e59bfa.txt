;; This function checks if a list contains any duplicate values
(define (contains-duplicate list)
  (if (null? list) ;; check if list is empty
      #f ;; if list is empty, return false
      (let ((first-value (car list))) ;; set first-value to first element in list
        (if (member first-value (cdr list)) ;; check if first-value is in the rest of the list
            #t ;; if first-value is in the rest of the list, return true
            (contains-duplicate (cdr list))))) ;; otherwise, recursively call contains-duplicate with the rest of the list
      )
  )

;; Example usage:
(contains-duplicate '(1 2 3)) ;; returns #f
(contains-duplicate '(1 2 3 3)) ;; returns #t
(contains-duplicate '(a b c c)) ;; returns #t
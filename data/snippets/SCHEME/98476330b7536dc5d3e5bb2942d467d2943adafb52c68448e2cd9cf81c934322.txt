(define (tree-sum tree) ;creates a function called tree-sum with parameter tree
  (cond ((null? tree) 0) ;if tree is null, return 0
        ((pair? tree) ;if tree is a pair
         (+ (tree-sum (car tree)) ;recursively call tree-sum on the first element of the pair and
            (tree-sum (cdr tree)))) ;recursively call tree-sum on the second element of the pair and add them
        (else tree))) ;if tree is not null or a pair, return the tree itself
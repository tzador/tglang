(define fibonacci
  (lambda (n)
    (if (<= n 1)
        n
        (+ (fibonacci (- n 1))
           (fibonacci (- n 2))))))

(define (square x)
   (* x x))

(define (total-sum lst)
   (if (null? lst)
       0
       (+ (car lst) (total-sum (cdr lst)))))

(define (find-max lst)
   (if (null? (cdr lst))
       (car lst)
       (if (> (car lst) (find-max (cdr lst)))
           (car lst)
           (find-max (cdr lst)))))
;; This code snippet calculates the sum of odd nums from a list using recursion

(define (sum-odd lst) ; defines a function called 'sum-odd' that takes one parameter named 'lst'
  (if (null? lst) ; checks if 'lst' is an empty list
      0 ; if 'lst' is empty, returns 0
      (+ (if (odd? (car lst)) ; if the first element of 'lst' is odd
             (car lst) ; returns the first element of 'lst'
             0) ; if the first element is not odd, returns 0
         (sum-odd (cdr lst))))) ; recursively calls 'sum-odd' function, passing in the rest of 'lst'

(sum-odd '(1 2 3 4 5 6 7 8 9)) ; calls 'sum-odd' function with a list of numbers and prints the result
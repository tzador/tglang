;; Define a procedure that checks if a given list contains only numbers, and if so, returns the sum
;; of those numbers. Otherwise, it returns false.
(define (sum-of-numbers lst)
  (cond ((null? lst) false) ;; if list is empty, return false
        ((not (number? (car lst))) false) ;; if the first element is not a number, return false
        ((null? (cdr lst)) (car lst)) ;; if there is only one element, return that element
        (else (+ (car lst) (sum-of-numbers (cdr lst)))))) ;; otherwise, add the first element to the sum of the rest of the list
(define (primes n)                        ; define a function to find prime numbers up to n
  (define (factors k)                     ; define a function to find factors of a number k
    (define (divides a b)                 ; define a helper function to check if a divides b
      (= (remainder b a) 0))              ; check if remainder is 0, returns true if a divides b
      
    (filter divides (range 2 (sqrt k))))  ; use filter function to find all factors of k between 2 and sqrt of k
    
  (define (prime? x)                      ; define a helper function to check if a number is prime
    (or (= x 2) (= x 3) (= x 5) (= x 7))) ; check if number is equal to 2, 3, 5, or 7 (known primes)
  
  (filter prime? (filter-not equal 1      ; use filter function to remove 1 from list of numbers
                                    (range 2 n)))) ; create a list of numbers from 2 to n and remove 1

(primes 100)                              ; call the function with an input of 100 to find primes up to 100
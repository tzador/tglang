;; Function to sum the squares of three numbers
(define (sum-squares a b c)
  (+ (* a a) (* b b) (* c c)))
  
;; Function to find the average of a list of numbers
(define (average numbers)
  (/ (apply + numbers) (length numbers)))
  
;; Function to find the delta between two numbers
(define (delta num1 num2)
  (- num1 num2))
  
;; Function to calculate the absolute value of a number
(define (absolute-value num)
  (cond ((< num 0) (- num))
        (else num)))
        
;; Function to find the factorial of a number using recursion
(define (factorial num)
  (if (= num 0)
      1
      (* num (factorial (- num 1)))))
      
;; Function to reverse a list using tail recursion
(define (reverse-list numbers)
  (define (reverse-tail numbers result)
    (if (null? numbers)
        result
        (reverse-tail (cdr numbers) (cons (car numbers) result))))
  (reverse-tail numbers '()))
  
;; Function to check if a number is prime
(define (is-prime num)
  (define (is-divisible? divisor)
    (= (remainder num divisor) 0))
  (define (smallest-divisor num)
    (define (iter test-divisor)
      (cond ((> test-divisor (square num)) num)
            ((is-divisible? test-divisor) test-divisor)
            (else (iter (+ test-divisor 1)))))
  (= (smallest-divisor num) num))
  
;; Function to check if a word is a palindrome
(define (is-palindrome word)
  (define (reverse-string str)
    (if (null? str)
        '()
        (cons (car str) (reverse-string (cdr str)))))
  (equal? word (list->string (reverse-string (string->list word)))))
;; Define a function `factorial` that takes in a number `n` and returns
;; the factorial of that number
(define (factorial n) 
  ;; Define an inner function `helper` that takes in two parameters: `n` and `acc`
  (define (helper n acc)
    (if (= n 0)
        ;; If `n` is equal to 0, return the accumulated value
        (acc)
        ;; Otherwise, call `helper` recursively with `n` decremented by 1 and multiplied by the accumulated value
        (helper (- n 1) (* acc n)))
  ;; Call the `helper` function with the initial values of `n` and 1 for the accumulated value
  (helper n 1))
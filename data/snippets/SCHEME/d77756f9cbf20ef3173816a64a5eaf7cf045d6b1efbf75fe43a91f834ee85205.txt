(define (quicksort lst) ; defines a procedure named quicksort that takes in a list as its argument
  (if (null? lst) ; checks for empty list
      '() ; returns empty list if input is empty
      (let ((pivot (car lst)) ; binds the first element of the list to variable pivot
            (lower (quicksort (filter (lambda (x) (>= x pivot)) (cdr lst)))) ; sorts elements greater than the pivot and binds them to variable lower
            (upper (quicksort (filter (lambda (x) (< x pivot)) (cdr lst))))) ; sorts elements less than the pivot and binds them to variable upper
        (append lower (cons pivot upper))))) ; combines the sorted lower list with the pivot and the sorted upper list and returns the result
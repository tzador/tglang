;; Define a procedure that takes in a list of numbers
(define (multiply-list lst)
  ;; Define a helper procedure to calculate the product of two numbers
  (define (helper acc lst)
    (if (null? lst) ; base case: check if the list is empty
        acc ; return the accumulated result
        (helper (* acc (car lst)) (cdr lst)) ; recursive step: multiply accumulator with first element and continue with the rest of the list
    )
  )
  (helper 1 lst) ; call helper procedure with accumulator set to 1
)

;; Call the procedure with a sample list
(multiply-list '(2 3 4 5))

;; Expected Output: 120 (product of all numbers in the list)
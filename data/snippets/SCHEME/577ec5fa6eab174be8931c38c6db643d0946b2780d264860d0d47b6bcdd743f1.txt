;;This is a list function that uses recursion to add all the numbers in a given list
(define (sum-list lst)
  (if (null? lst)                              ;checks if the list is empty
      0                                         ;if so, return 0
      (+ (car lst) (sum-list (cdr lst)))))      ;otherwise, adds the first element of the list to the sum of the rest of the list

(sum-list '(5 2 6 1))                           ;call the function with a given list as the parameter
;Output: 14                                    ;the sum of all numbers in the list is returned as the output
(define (sum-list lst) ;Defines a function called sum-list that takes a list as its parameter
  (cond ;Conditional statement to check given conditions
    ((null? lst) 0) ;Checks if the list is empty and returns 0 as the sum
    ((not (list? (car lst))) (+ (car lst) (sum-list (cdr lst)))) ;Checks if the first element in the list is not a list itself and adds it to the sum of the rest of the elements
    (else (+ (sum-list (car lst)) (sum-list (cdr lst)))))) ;Recursively calls the sum-list function on both the first and rest of the elements in the list and adds the sums together

;Example input and output
(sum-list '(1 2 3 4)) ;Output: 10
(sum-list '(1 (2 3) (4))) ;Output: 10
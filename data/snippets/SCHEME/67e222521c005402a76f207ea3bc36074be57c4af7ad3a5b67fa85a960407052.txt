;;; Predicate that checks if a given number is prime
(define (is-prime num)
  (cond ((<= num 1) #f) ; if num is less than or equal to 1, it is not prime
        ((= num 2) #t) ; 2 is the only even prime number
        ((even? num) #f) ; if num is even, it is not prime
        (else ; otherwise, check if num is divisible by any number between 3 and its square root
          (define (check-divisor divisor)
            (cond ((> divisor (sqrt num)) #t) ; if divisor is greater than the square root of num, it is prime
                  ((= (remainder num divisor) 0) #f) ; if num is divisible by divisor, it is not prime
                  (else (check-divisor (+ divisor 2))))) ; check next odd divisor
          (check-divisor 3))))
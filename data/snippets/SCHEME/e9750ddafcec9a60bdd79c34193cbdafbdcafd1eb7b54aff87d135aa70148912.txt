(define (factorial n)	;defines a function that calculates the factorial of a given number
	(if (= n 0)		;if the number is 0, return 1
		1
		(* n (factorial (- n 1)))	;otherwise, multiply the number with the factorial of (n-1)
	)
)

(define (fibonacci n)	;defines a function that calculates the nth fibonacci number
	(if (or (= n 0) (= n 1))	;if n is 0 or 1, return n
		n
		(+ (fibonacci (- n 1)) (fibonacci (- n 2)))	;otherwise, add the previous 2 fibonacci numbers
	)
)

(define (power x n)	;defines a function that calculates x^n
	(if (= n 0)	;if n is 0, return 1
		1
		(* x (power x (- n 1)))	;otherwise, multiply x with x^(n-1)
	)
)

(define (calc-circle-area radius)	;defines a function that calculates the area of a circle given its radius
	(* pi (* radius radius))	;multiply pi with radius squared
)

(define (calc-square-area side)	;defines a function that calculates the area of a square given its side length
	(* side side)	;multiply side with itself
)

;test cases
(define fact (factorial 5))	;calculates factorial of 5 and assigns it to variable "fact"
(define fib (fibonacci 7))	;calculates 7th fibonacci number and assigns it to variable "fib"
(define pw (power 4 3))	;calculates 4^3 and assigns it to variable "pw"
(define c_area (calc-circle-area 3))	;calculates area of circle with radius 3 and assigns it to variable "c_area"
(define s_area (calc-square-area 5))	;calculates area of square with side length 5 and assigns it to variable "s_area"

;print results
(displayln fact)	;display factorial of 5
(displayln fib)	;display 7th fibonacci number
(displayln pw)	;display 4^3
(displayln c_area)	;display area of circle with radius 3
(displayln s_area)	;display area of square with side length 5
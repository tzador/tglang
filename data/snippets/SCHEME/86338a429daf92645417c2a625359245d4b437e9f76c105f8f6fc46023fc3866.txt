;;; Define a recursive function to compute the factorial of a given number
(define (factorial n)              ;;; Defines a function named "factorial" taking one parameter 'n'
  (if (zero? n)                    ;;; Checks if n is 0
      1                            ;;; If so, return 1 as the base case for factorial
      (* n (factorial (- n 1)))))  ;;; If not, call factorial recursively with n-1 and multiply the result with n


;;; Print the factorial of 10
(display (factorial 10))           ;;; Display the result of calling factorial with 10 as the argument


;;; Output:
3628800                           ;;; The output should be the factorial of 10, which is 3628800
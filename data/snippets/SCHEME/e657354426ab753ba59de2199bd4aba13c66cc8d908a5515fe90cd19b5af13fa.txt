(define fibonacci
  (lambda (n)
    (if (or (equal? n 0) (equal? n 1))
      n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))
    )
  )
)

; This defines a procedure called "fibonacci" that takes in one parameter, "n"

; The "lambda" keyword is used to create an anonymous function with the parameters specified after it.

; The "if" statement checks if the current value of "n" is equal to either 0 or 1.

; If either condition is true, the value of "n" is returned.

; If none of the conditions are met, the procedure recursively calls itself, passing in the previous two numbers in the Fibonacci sequence and adds them together as the return value.

; This results in the calculation of the Fibonacci sequence up to the specified number "n".

; Example usage:
; (fibonacci 5)  ; Returns 5, as it is the 5th number in the Fibonacci sequence.
;; **Finds the length of a list**
(define (length lst)
  (if (null? lst)  ;; if the list is empty, length = 0
      0             
      (+ 1 (length (cdr lst)))))  ;; else add 1 and recursively call the function on the rest of the list

;; **Finds the sum of squares of numbers in a list**
(define (sum-of-squares lst)
  (if (null? lst)  ;; if the list is empty, sum = 0
      0
      (+ (sqr (car lst)) ;; square the first element of the list and add it to the sum
         (sum-of-squares (cdr lst))))) ;; recursively call the function on the rest of the list and add it to the sum

;; **Finds the factorial of a number**
(define (factorial n)
  (if (= n 0) ;; if the number is 0, factorial = 1
      1
      (* n (factorial (- n 1))))) ;; else multiply the number by the factorial of n-1
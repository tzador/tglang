(define (list-filter f lst) ; defines a function with two parameters: f and lst
  (cond ; starts a conditional statement
    ((null? lst) '()) ; if lst is an empty list, return an empty list
    ((f (car lst)) ; if the function f is true for the first element of lst,
     (cons (car lst) (list-filter f (cdr lst)))) ; add the first element to the filtered list and recurse with the remaining elements
    (else (list-filter f (cdr lst))))) ; else, recurse with the remaining elements without adding the first element
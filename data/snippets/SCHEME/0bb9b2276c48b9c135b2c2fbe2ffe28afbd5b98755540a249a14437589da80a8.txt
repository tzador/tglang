;; Define a function that checks if a list is sorted in ascending order
(define (is-sorted lst)
  (cond
    ((null? lst) #t) ; If the list is empty, it is sorted
    ((null? (cdr lst)) #t) ; If the list has only one element, it is sorted
    ((< (car lst) (cadr lst)) ; Compare the first two elements
     (is-sorted (cdr lst))) ; Recursively check the rest of the list
    (else #f))) ; If the first two elements are not in ascending order, return false
;; This function calculates the n-th Fibonacci number using memoization

(define (fib-memo n)
  (let ((table (make-vector (+ n 1) #f))) ; this creates a vector of size n+1 initialized to #f (false)
    (define (fib-memo-helper n)
      (if (or (= n 1) (= n 2))
          1
          (if (vector-ref table n) ; checks if the value has been calculated and stored in the vector already
              (vector-ref table n) ; if yes, just return that value
              (+ (fib-memo-helper (- n 1)) (fib-memo-helper (- n 2)))))) ; if not, calculate and store the value in the vector
    (fib-memo-helper n)))
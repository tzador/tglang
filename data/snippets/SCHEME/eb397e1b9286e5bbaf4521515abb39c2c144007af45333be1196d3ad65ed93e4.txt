(define (count-palindromes lst) ; this function counts the number of palindrome words in a list
  (define (is-palindrome str) ; this function checks if a word is a palindrome
    (equal? str (reverse str))) ; uses the reverse function to check for equality
  (cond ((null? lst) 0) ; if list is empty, return 0
        ((is-palindrome (car lst)) ; check if first element in list is a palindrome
         (+ 1 (count-palindromes (cdr lst)))) ; if true, add 1 to count and move to next element
        (else (count-palindromes (cdr lst))))) ; if not a palindrome, move to next element
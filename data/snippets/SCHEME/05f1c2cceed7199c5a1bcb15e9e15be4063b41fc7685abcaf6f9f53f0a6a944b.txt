;;Simple function that calculates the Fibonacci sequence
(define (fib n)
  (if (< n 2) n
    (+ (fib (- n 1)) (fib (- n 2)))))
      
;;Function that uses memoization to improve the performance of the Fibonacci function
(define (fast-fib n)
  (define memo-table (make-vector (+ n 1) 0)) ;create a vector to store results in
  (define (fibHelper n)
    (cond ((= n 0) 0)
          ((= n 1) 1)
          ((= (vector-ref memo-table n) 0) ;if value is not memoized, calculate and store it
           (vector-set! memo-table n (+ (fibHelper (- n 1)) (fibHelper (- n 2)))))
          (else (vector-ref memo-table n))))
  (fibHelper n)) ;call the helper function
;; Define a procedure that recursively computes the factorial of a given number
(define (factorial n)
  (cond ((= n 0) 1) 
        (else (* n (factorial (- n 1))))))

;; Define a helper procedure to keep track of the running total
(define (factorial-helper n current)
  (if (= n 1)
    current
    (factorial-helper (- n 1) (* current n))))

;; Define a procedure that uses tail recursion to compute the factorial of a given number
(define (factorial-tail n)
  (factorial-helper n 1))

;; Call the factorial-tail procedure with the input 5
(factorial-tail 5) ;; returns 120
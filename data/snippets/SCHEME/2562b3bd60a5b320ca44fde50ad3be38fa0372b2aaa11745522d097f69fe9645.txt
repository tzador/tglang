;; Function that recursively calculates the factorial of a given number
(define (factorial n)
  (if (= n 1)
      1
      (* n (factorial (- n 1)))))

;; Function that takes in a list of numbers and returns the sum of the squares of those numbers
(define (sum-of-squares lst)
  (define (help lst acc)
    (if (null? lst)
        acc
        (help (cdr lst) (+ acc (* (car lst) (car lst))))))
  (help lst 0))

;; Function that calculates the nth Fibonacci number using recursion
(define (fibonacci n)
  (if (or (= n 0) (= n 1))
      n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

;; Create a list of numbers to test the functions
(define nums (list 2 3 4 5))

;; Output the factorial of 5
(display (factorial 5))
;; Output: 120

;; Output the sum of squares of the list of numbers
(display (sum-of-squares nums))
;; Output: 54

;; Output the 10th Fibonacci number
(display (fibonacci 10))
;; Output: 55
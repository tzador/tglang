;; Define a procedure that takes in two parameters, a list of numbers and a number
;; and returns a list of all numbers in the list greater than the given number
(define (greater-than lst num)
  ;; Initialize an empty list to store the numbers that are greater
  (define result '())
  ;; Define a helper function that checks if a number is greater than the given number
  (define (check-greater? n)
    (if (> n num) ; if the number is greater than the given number
        (set! result (cons n result))) ; add the number to the result list
  ;; Call the helper function on each element in the list
  (map check-greater? lst)
  ;; Return the result list
  result)
;;This is a function that returns the largest element in a given list
(define (find-max lst) 
  (cond
    ((null? lst) #f) ;if the list is empty, return false
    ((null? (cdr lst)) (car lst)) ;if there is only one element, return that element
    ((> (car lst) (find-max (cdr lst))) (car lst)) ;if the first element is larger than the largest element in the rest of the list, return the first element
    (else (find-max (cdr lst)))) ;if the first element is not the largest, recursively call the function with the rest of the list
)
;;Example input and output:
(find-max '(5 3 1 9 4)) ;return 9
(find-max '(10 5 7 2 8)) ;return 10
(find-max '()) ;return #f
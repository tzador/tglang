;;function to calculate the factorial of a number
(define (factorial n)
  (if (= n 0)                 ;;if n is equal to 0
      1                       ;;return 1 
      (* n (factorial (- n 1)))     ;;otherwise multiply n with factorial of n-1
  )
)

;;function to print the first n numbers in the fibonacci sequence
;;(assuming n is greater than or equal to 0)
(define (fibonacci n)
  (if (or (= n 0) (= n 1))        ;;if n is equal to 0 or 1
      n                           ;;return n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))        ;;otherwise, add the two previous fibonacci numbers
  )
)

;;function to check if a given number is prime
(define (is-prime? n)
  (define (iter i)           ;;internal function to iterate through potential divisors
    (if (= i 1)
        #t
        (and (not (= (remainder n i) 0))            ;;check if the remainder of n/i is 0
             (iter (- i 1))                         ;;if not, continue iterating with the next potential divisor
        )
    )
  )
  (iter (- n 1))              ;;start iterating with the largest potential divisor, n-1
)

;;example call to the functions
(display (factorial 5))         ;;outputs 120
(display (fibonacci 7))         ;;outputs 13
(display (is-prime? 23))        ;;outputs #t
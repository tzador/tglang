(define (factorial n) ; Define a function named 'factorial' that takes in an argument 'n'
  (if (= n 0) ; Use 'if' conditional statement to check if the argument is equal to 0
      1 ; If true, return 1 as the factorial of 0 is 1
      (* n (factorial (- n 1))))) ; If false, use recursion to multiply n with the factorial of n-1 and return the result

;(factorial 5) ; Uncomment this line to test the function with the argument 5
; Output: 120, as 5! = 5*4*3*2*1 = 120
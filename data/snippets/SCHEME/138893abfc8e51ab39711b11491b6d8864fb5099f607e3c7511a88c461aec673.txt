;; Define a function that takes in a list and returns the last element
(define (last-element lst)
  (cond ((null? lst) '())                   ; if the list is empty, return empty list
        ((null? (cdr lst)) (car lst))       ; if the list only has one element, return that element
        (else (last-element (cdr lst)))))   ; recursively call last-element on the rest of the list

(last-element '(1 2 3 4 5))     ; returns 5

(last-element '((1 2) (3 4) (5 6)))    ; returns '(5 6)
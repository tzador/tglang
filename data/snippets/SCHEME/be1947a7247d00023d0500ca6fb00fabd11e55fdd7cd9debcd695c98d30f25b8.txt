(define (sum num1 num2) ;defines a function with two parameters
  (+ num1 num2)) ;returns the sum of the two parameters

(define size 10) ;defines a variable with initial value of 10
(define (multiply-by-ten num) ;defines a function with one parameter
  (* num 10)) ;returns the product of the parameter and 10

(if (> size 20) ;conditional statement, checks if size is greater than 20
    (let ((doubled-size (multiply-by-ten size))) ;uses `let` to define a new variable with the product of size and 10
      (begin ;begins a sequence of expressions
        (display "Size is greater than 20") ;displays a message
        (display doubled-size))) ;displays the value of the new variable
    (begin ;else statement
      (display "Size is less than or equal to 20") ;displays a message
      (display (sum size 5)))) ;displays the sum of size and 5 (since size is less than or equal to 20)
      
;output: Size is less than or equal to 20
;        15
(let ((x #f))                                   ; Defining a variable x initialized to false
  (define (check x)                              ; Defining a function to check if x is false
    (cond ((eq? x #f) #t)                        ; Using conditional statement to check if x is false
          (else #f)))                            ; If x is not false, return false
  (if (check x)                                  ; Using the check function to check x's value
      (display "X is false")                      ; If x is false, print a message
      (begin                                    ; If x is not false, execute the following statements
        (define (count n)                        ; Defining a function to count from n to 0
          (if (eq? n 0) '()                       ; If n is 0, return empty list
              (cons n (count (- n 1)))))         ; If n is not 0, add n to the list and call count with n-1
        (display (count 10))                     ; Calling the count function with 10 as the starting value
        (display "Counting completed"))))         ; Print a completion message after counting is done
; Define function to calculate sum of two numbers
(define (sum x y)
  (if (= x 0)
      y
      (sum (- x 1) (+ y 1))))

; Call the function and pass in two numbers
(sum 3 4) ; Output: 7

; Define list of numbers
(define nums '(1 2 3 4 5))

; Define function to calculate product of a list of numbers
(define (product lst)
  (if (null? (cdr lst))
      (car lst)
      (* (car lst) (product (cdr lst)))))

; Call the function with the list of numbers
(product nums) ; Output: 120

; Define function to check if a number is prime
(define (is-prime? n)
  (define (iter i)
    (if (= i n)
        #t
        (if (= (modulo n i) 0)
            #f
            (iter (+ i 1)))))
  (iter 2))

; Call the function and pass in a number
(is-prime? 13) ; Output: #t

; Define function to create a list of prime numbers within a given range
(define (sieve start end)
  (define (iterate i lst)
    (if (= i end)
        lst
        (if (is-prime? i)
            (iterate (+ i 1) (append lst (list i)))
            (iterate (+ i 1) lst))))
  (iterate start '()))

; Call the function with start and end values
(sieve 1 20) ; Output: (2 3 5 7 11 13 17 19)
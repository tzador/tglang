;; Define a macro for creating an anonymous function
(define-syntax anonymous
  (syntax-rules ()
    ((_ param body)
     (lambda (param) body))))

;; Define a helper macro for checking if a number is even
(define-syntax even?
  (syntax-rules ()
    ((_ num)
     (= (remainder num 2) 0))))

;; Define a macro for creating a fibonacci function with a twist
(define-syntax fibonacci-twist
  (syntax-rules ()
    ((_ n)
     (letrec
      ((calc-fib
        (anonymous n
          (if (zero? n)
              0
              (if (= n 1)
               1
               (+ (even? n)
                  (calc-fib (- n 2)))))))
      (begin
       (if (zero? n)
           0
           (if (= n 1)
            1
            (+ (calc-fib (- n 1))
               (calc-fib (- n 2)))))))))
; This is a comment in Scheme
(define (sumlist list)
  ; Helper function takes in a list and accumulator
  (define (helper list acc)
    (if (null? list)
        acc
        (helper (cdr list) (+ (car list) acc))))
  (helper list 0)) ; Call helper function with initial accumulator 0
; Main program
(sumlist '(1 2 3 4 5)) ; Output: 15
(define (pythagorean-triples n)
  (let loop ((a 1)
             (b 1)
             (c 1)
             (output '()))
    (cond
      ((= a n) output)
      ((< a n)
       (cond
         ((= c 1) ; first iteration
          (loop a (+ b 1) (sqrt (- (* n n) (* a a))) output))
         ((= b c) ; new b value, check if it's a triple
          (if (integer? c)
              (loop a (+ b 1) (sqrt (- (* n n) (* a a))) (cons (list a b c) output))
              (loop a b (- c 1) output)))
         (else (loop a b (- c 1) output)))))
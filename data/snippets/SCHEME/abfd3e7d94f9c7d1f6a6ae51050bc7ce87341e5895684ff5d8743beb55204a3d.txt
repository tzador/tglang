;; Define a procedure that takes in a list of numbers and 
;; returns the sum of all the even numbers in the list.
(define (sum-even-numbers lst)
  (if (null? lst)             ; checks if list is empty
      0                       ; returns 0 if list is empty
      (+ (if (even? (car lst)) ; checks if first element is even
             (car lst)         ; if even, add to accumulator
             0)                ; if odd, add 0 to accumulator
         (sum-even-numbers (cdr lst))))) ;recursively calls procedure on remaining list
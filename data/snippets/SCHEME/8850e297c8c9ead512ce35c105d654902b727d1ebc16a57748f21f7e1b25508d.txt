;; Define a recursive function to calculate the factorial of a given number
(define (factorial n)
  (if (<= n 1) ; If the number is 0 or 1, return 1 as their factorial
    1
    (* n (factorial (- n 1))))) ; Otherwise, multiply n with the factorial of n-1

;; Output the factorial of 6
(factorial 6) ; Expected output: 720

;; Define a function to check if a given number is even or odd
(define (even? n)
  (if (= n 0) ; If the number is 0, return true as it is even
    #t
    (odd? (- n 1)))) ; Otherwise, check if the number is odd by subtracting 1 and calling the odd? function

(define (odd? n)
  (if (= n 0) ; If the number is 0, return false as it is even
    #f
    (even? (- n 1)))) ; Otherwise, check if the number is even by subtracting 1 and calling the even? function

;; Output the result of checking if 17 is even or odd
(even? 17) ; Expected output: #f (false)
(odd? 17) ; Expected output: #t (true)
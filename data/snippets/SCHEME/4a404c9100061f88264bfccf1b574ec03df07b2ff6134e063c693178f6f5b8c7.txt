;;Create a function that checks whether a number is prime or not

(define (check-prime num) ;;define function that takes in 'num' as parameter
  (cond ;;use 'cond' to evaluate multiple conditions in sequence
    ((= num 1) #f) ;;check if num is equal to 1, return false
    ((= num 2) #t) ;;check if num is equal to 2, return true
    ((= (modulo num 2) 0) #f) ;;check if num is even, return false
    (else ;;if none of the above conditions are met
      (let loop ((i 3)) ;;use 'let' to define local variable i and initialize to 3
        (cond ;;nested 'cond' to evaluate conditions within loop
          ((= i num) #t) ;;if i is equal to num, return true
          ((= (modulo num i) 0) #f) ;;if num is divisible by i, return false
          (else (loop (+ i 2)))))))) ;;if none of the above conditions are met, call loop function recursively and increment i by 2

(check-prime 17) ;;call function to check if 17 is prime, returns #t (true)
(check-prime 20) ;;call function to check if 20 is prime, returns #f (false)
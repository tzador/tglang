;; Define a function that takes in a list and returns the sum of the squares of its elements
(define (sum-of-squares lst)
    (if (null? lst)  ; If the list is empty, return 0
        0  
        (+ (square (car lst)) (sum-of-squares (cdr lst))))) ; Square the first element and add it to the sum of squares of the rest of the list

;; Define a helper function to calculate the square of a number
(define (square x)
    (* x x))  ; Multiply the number by itself to get the square

;; Define a list of numbers to test the function
(define test-list '(1 2 3 4 5))

;; Call the function and print the result
(display "The sum of squares of the elements in the list is: ")
(display (sum-of-squares test-list))

;; Output: The sum of squares of the elements in the list is: 55
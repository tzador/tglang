#lang r6rs ;defines the programming language as Scheme

;defines a function that checks if a number is prime
(define (is-prime? n)
  (cond ((<= n 1) #f) ;if number is less than or equal to 1, it is not prime
        ((= n 2) #t) ;if number is 2, it is prime
        ((= n 3) #t) ;if number is 3, it is prime
        ((and (even? n) (not (= n 2))) #f) ;if number is even and not equal to 2, it is not prime
        ((and (odd? n) (not (= n 3))) #f) ;if number is odd and not equal to 3, it is not prime
        (else ;otherwise, check for divisors starting from 3
          (define (check-divisors d)
            (if (> d (sqrt n)) #t ;if divisor is greater than square root of number, it is prime
                (if (= (modulo n d) 0) #f ;if number is divisible by divisor, it is not prime
                    (check-divisors (+ d 2))))) ;increment divisor by 2 to only check odd divisors
          (check-divisors 3))))
          
;defines a list of prime numbers
(define prime-list (filter is-prime? (range 100000)))

;prints the first 10 prime numbers in formatted output
(for ([i 10])
  (printf "Prime number ~a is ~a.~%" (+ i 1) (list-ref prime-list i)))
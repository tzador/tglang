(define (selection-sort lst) ; defines a function that takes in a list and sorts it using the selection sort algorithm
  (define (find-min lst) ; defines a helper function that finds the minimum element in a list
    (if (null? (cdr lst)) ; checks if the list has only one element left
        (car lst) ; if yes, it is the minimum element
        (let ((min (find-min (cdr lst)))) ; otherwise, recursively find the minimum element in the rest of the list
          (if (< (car lst) min) ; compares the current element with the minimum element
              (car lst)
              min))))
  (if (null? lst) ; checks if the list is empty
      '() ; if yes, return an empty list
      (let ((min (find-min lst))) ; otherwise, find the minimum element in the list
        (cons min (selection-sort (remove min lst)))))) ; adds the minimum element to the sorted list and recursively calls the function with the minimum element removed from the original list. This continues until the original list is emptied and the sorted list is returned.
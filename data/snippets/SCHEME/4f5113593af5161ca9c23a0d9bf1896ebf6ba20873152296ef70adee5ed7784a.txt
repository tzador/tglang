;; This function calculates the square of a number
(define (square x)
  (* x x))

;; Function which calculates the sum of squares of two numbers
(define (sum-of-squares x y)
  (+ (square x) (square y)))

;; Function which calculates the difference of squared sums of two numbers
(define (diff-of-squared-sums x y)
  (- (square (+ x y)) (+ (square x) (square y))))

;; Function which calculates the sum of the first n natural numbers
(define (sum-of-first-n n)
  (if (= n 0)
      0
      (+ n (sum-of-first-n (- n 1)))))

;; Function which calculates the product of two numbers using recursion
(define (product x y)
  (if (= y 0)
      0
      (+ x (product x (- y 1)))))

;; Function which converts a list of numbers into a list of even numbers
(define (even-list lst)
  (cond ((null? lst) '())
        ((even? (car lst)) (cons (car lst) (even-list (cdr lst))))
        (else (even-list (cdr lst)))))

;; Function which generates a list of Fibonacci numbers up to n
(define (fib-list n)
  (if (< n 2)
      '()
      (cons 1 (cons 1 (fib-list (- n 1))))))

;; Function which checks if a given number is prime
(define (is-prime? n)
  (define (prime-helper div)
    (if (= div 1)
        #t
        (if (= (modulo n div) 0)
            #f
            (prime-helper (- div 1)))))
  (prime-helper (- n 1)))
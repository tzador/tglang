(define (check-numbers num-list)
  (let* (
      (evens (filter even? num-list))
      (odds (filter odd? num-list))
      (sum (foldl + 0 evens))
      (product (foldl * 1 odds)))
    (cond
      ((= sum 0) "All numbers are even")
      ((= product 1) "All numbers are odd")
      (else "Mixed numbers"))))
; This code snippet creates a function called "check-numbers" that takes in a list of numbers (:num-list) as its input and performs calculations to determine if the numbers are all even, all odd, or mixed.
; The "let*" syntax is used to define local variables within the function.
; The "filter" function is used to create new lists containing only the even and odd numbers from the original list.
; The "foldl" function is used to iterate through the lists and perform calculations (in this case, summing and multiplying).
; Finally, the "cond" statement is used to output different strings depending on the results of the calculations.
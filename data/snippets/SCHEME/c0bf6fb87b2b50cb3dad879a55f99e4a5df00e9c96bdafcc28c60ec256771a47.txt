;; define and apply a higher-order function to a list of numbers
;; `map` takes a procedure and a list as arguments,
;; and applies the procedure to each element in the list
(define (square x)(* x x))
(define (triple x)(* x 3))
(define (apply-all proc lst)
    (map proc lst))
(apply-all square (list 1 2 3 4))
;;
;; Output: (1 4 9 16)
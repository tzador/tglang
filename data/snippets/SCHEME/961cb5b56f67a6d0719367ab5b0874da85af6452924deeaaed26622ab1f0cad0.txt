(define (count-pairs nested-list) ; Define a function to count the total number of pairs in a nested list
  (if (null? nested-list) ; Check if the given list is empty
      0                  ; If it is empty, then return 0 as the base case
      (if (pair? (car nested-list)) ; Check if the first element of the list is a pair
          (+ 1 (count-pairs (cdr nested-list))) ; If it is a pair, increment the count by 1 and call the function recursively on the rest of the list
          (count-pairs (cdr nested-list))))) ; If it is not a pair, call the function recursively on the rest of the list
;; declare a function that finds the largest element in a list
(define (find-largest lst) 
    ;; base case: if list is empty, return zero
    (if (null? lst) 
        0 
        ;; recursive case: if list has more than one element
        (let ((largest (car lst))) 
            ;; loop through each element in list
            (cond ((null? (cdr lst)) largest) 
                  ;; if current element is larger, set as largest
                  ((> (car (cdr lst)) largest) 
                    (set! largest (car (cdr lst)))) 
                  ;; continue to next element
                  (else 
                    (set! largest (car lst))) 
                  ;; call function again with smaller list
                  (find-largest (cdr lst))))))
(define (fib n)
    (if (or (= n 0) (= n 1))
        n
        (+ (fib (- n 1)) (fib (- n 2)))))

(define (sum-list lst)
    (cond ((null? lst) 0)
        (else (+ (car lst) (sum-list (cdr lst))))))

(define-syntax delay
    (syntax-rules ()
        ((_ expression)
            (lambda ()
                expression))))
                
(define (diverge)
    (diverge))

(define (take-stream stream n)
    (if (or (null? stream) (= n 0))
        ()
        (cons (car stream) (take-stream (cdr stream) (- n 1)))))

(define-syntax delay-stream
    (syntax-rules ()
        ((_ expression)
            (delay (stream expression)))))
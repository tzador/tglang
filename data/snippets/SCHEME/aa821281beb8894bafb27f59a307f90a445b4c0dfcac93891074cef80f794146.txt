(define (my-function n) ;Function definition with parameter n
  (cond ((zero? n) 0) ;If n is 0, return 0
        ((= n 1) 1) ;If n is 1, return 1
        ((= n 2) 1) ;If n is 2, return 1
        (else (+ (my-function (- n 1)) (my-function (- n 2))))) ;If n is neither 0, 1, or 2, return the sum of recursive calls of my-function with n-1 and n-2 as arguments
) ;End of function definition

(my-function 5) ;Output: 5
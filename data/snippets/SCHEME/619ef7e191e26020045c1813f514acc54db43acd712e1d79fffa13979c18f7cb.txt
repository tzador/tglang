; Define a procedure that takes in a list of numbers and returns the sum of all even numbers in the list
(define (sum-even-numbers lst)
  ; Recursive helper function to iterate through the list
  (define (helper lst sum)
    ; Base case: if list is empty, return the sum
    (if (null? lst)
        sum
        ; Recursive case: if first element is even, add it to the sum and call helper function on remaining elements
        ; If first element is odd, just call helper function on remaining elements
        (if (even? (car lst))
            (helper (cdr lst) (+ sum (car lst)))
            (helper (cdr lst) sum))))
  ; Call helper function with initial sum of 0
  (helper lst 0))
;; Function to check if a list is a palindrome

(define (palindrome? lst)
  (if (null? lst) ; check if list is empty
    #t ; empty list is a palindrome
    (let ((x (car lst)) ; create local variable for first element
          (y (last lst))) ; create local variable for last element
      (if (eq? x y)  ; check if first and last elements are equal
        (palindrome? (cdr (butlast lst)))  ; recursively call function to check remaining elements
        #f) ; if first and last are not equal, return false
        )
    )
  )

;; Example inputs/output:
(palindrome? '(1 2 3 2 1)) ;; returns #t
(palindrome? '(1 2 3 4 5)) ;; returns #f
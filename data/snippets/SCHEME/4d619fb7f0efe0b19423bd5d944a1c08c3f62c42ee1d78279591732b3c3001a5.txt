;; define a function to calculate the factorial of a given number
(define (factorial num)
  (if (= num 0) 1 (* num (factorial (- num 1)))))

;; define a function to check if a number is prime
(define (is-prime? n)
  (cond ((<= n 1) #f)
        ((= n 2) #t)
        ((even? n) #f)
        (else
         (let loop ((i 3))
           (cond ((<= n i) #t)
                 ((zero? (remainder n i)) #f)
                 (else (loop (+ i 2))))))))
                 
;; define a function to generate a list of all prime numbers up to a given limit
(define (generate-primes limit)
  (let loop ((num 2)
             (primes '(2)))
    (if (> num limit) primes
        (if (is-prime? num)
            (loop (+ num 1) (append primes (list num)))
            (loop (+ num 1) primes)))))
            
;; display the first 20 prime numbers using the generate-primes function
(display (generate-primes 20))
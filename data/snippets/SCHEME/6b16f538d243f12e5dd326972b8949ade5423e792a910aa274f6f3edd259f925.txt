;; Defines a function that takes in a list of numbers and returns their sum
(define (sum-list num-list) 
    (if (null? num-list) 
        0 ;; Base case, if list is empty, return 0
        (+ (car num-list) (sum-list (cdr num-list))))) ;; Recursive case, adds first element with sum of remaining elements

;; Example call of sum-list function with list containing numbers 1, 2, and 3
(sum-list '(1 2 3)) ;; Output: 6
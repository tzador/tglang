(define (binary-search lst val)
	(letrec
		[(loop
			(lambda (low high)
				(if (> low high)
					-1
					(let*
						((mid (/ (+ low high) 2))
							(midval (list-ref lst mid)))
						(cond
							[(= midval val) mid]
							[(< midval val) (loop (+ mid 1) high)]
							[(> midval val) (loop low (- mid 1))])))))]
		(loop 0 (- (length lst) 1))))
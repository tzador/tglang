(define my-list (list 1 2 3 4 5)) ; Defines a variable named my-list and assigns it a list of integers 1 through 5

; This function takes in a list and returns a new list with all the elements multiplied by 2
(define (multiply-by-2 lst)
  (if (null? lst) ; Checks if the list is empty
      '() ; If empty, return empty list
      (cons (* (car lst) 2) (multiply-by-2 (cdr lst))))) ; Otherwise, multiply the first element by 2 and cons it with the result of recursively calling the function on the rest of the list

(multiply-by-2 my-list) ; Calls the function on the previously defined list and returns the new list [2 4 6 8 10]
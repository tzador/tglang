; This function takes in a list of numbers and outputs the average of those numbers
(define (find-average lst)
  ; Initializes variables for sum and count
  (define sum 0)
  (define count (length lst))
  ; Helper function to calculate sum of list elements
  (define (helper sum lst)
    (if (null? lst) ; Base case: when list is empty
        sum ; returns final sum value
        (helper (+ sum (car lst)) (cdr lst)))) ; recursively adds current element to sum and calls function on rest of list
  ; Uses helper function to find sum of list elements
  (set! sum (helper sum lst))
  ; Computes average and returns it
  (/ sum count))

; Example usage
(find-average '(4 6 8 10)) ; Outputs 7
(find-average '(1 2 3 4 5)) ; Outputs 3
;; Define a function to calculate the factorial of a number
(define (factorial n)
  (if (= n 0)
      1
      (* n (factorial (- n 1)))))
      
;; Define a function to find the nth element in a list
(define (nth-element n lst)
  (if (zero? n)
      (car lst)
      (nth-element (- n 1) (cdr lst))))
      
;; Define a function to apply a function to each element in a list and return a new list
(define (map function lst)
  (if (null? lst)
      '()
      (cons (function (car lst)) (map function (cdr lst)))))
      
;; Define a function to remove duplicate elements from a list
(define (remove-duplicates lst)
  (if (null? lst)
      '()
      (cons (car lst) (remove-duplicates (filter (lambda (x) (not (= x (car lst)))) (cdr lst))))))
      
;; Define a function to merge two sorted lists
(define (merge list1 list2)
  (if (null? list1)
      list2
      (if (null? list2)
          list1
          (if (< (car list1) (car list2))
              (cons (car list1) (merge (cdr list1) list2))
              (cons (car list2) (merge list1 (cdr list2)))))))
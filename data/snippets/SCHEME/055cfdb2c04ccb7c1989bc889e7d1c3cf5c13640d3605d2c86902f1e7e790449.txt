;; Define a function that checks if a number is prime
(define (is-prime? n)
  ;; Base case: If the number is less than 2, return false
  (if (< n 2)
      #f
      ;; Loop through all numbers from 2 to the square root of the number
      (let loop ((i 2))
        (if (< i (sqrt n))
            ;; If the number is divisible by any of the numbers, return false
            (if (= (remainder n i) 0)
                #f
                ;; If not, recursively call the function with the next number
                (loop (+ i 1)))
            ;; If the number is not divisible by any numbers, return true
            #t))))
;; Define a function called 'sum-divisible' that takes in two parameters: 'list' and 'n'
(define (sum-divisible list n)
  ;; Set 'total' variable to 0
  (let ((total 0))
    ;; Loop through 'list' using 'for-each'
    (for-each
      ;; Define lambda function that takes in an element from 'list'
      (lambda (x)
        ;; Check if the element is divisble by 'n'
        (if (= (remainder x n) 0)
          ;; If divisible, add it to 'total'
          (set! total (+ total x))
          ;; If not, do nothing
          ))
      list)
    ;; Return the 'total' value
    total))
    
;; Example call: 
(sum-divisible '(1 2 3 4 5) 2)
;; Output: 6 (2 + 4 = 6)
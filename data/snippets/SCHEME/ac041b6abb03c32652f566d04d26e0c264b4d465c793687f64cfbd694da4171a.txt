;; This is a function that takes in a list of numbers and returns a list of their squares
;; Example: (square-list '(1 2 3)) => (1 4 9)

(define (square-list list)
    (if (null? list)   ; checks if the list is empty
        '()             ; if empty, return an empty list
        (cons           ; if not empty, add first element of the list
            (expt (car list) 2)  ; square the first element
            (square-list (cdr list)))))    ; recursively call the function with the rest of the list as parameter
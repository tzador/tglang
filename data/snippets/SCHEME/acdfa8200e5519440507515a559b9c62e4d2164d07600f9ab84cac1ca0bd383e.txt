; Define a recursive function to calculate the factorial of a number
(define (factorial num)
    (if (= num 0) 1
        (* num (factorial (- num 1)))
    )
)

; Define a helper function to calculate the power of a given number
(define (power base exp)
    (if (= exp 0) 1
        (* base (power base (- exp 1)))
    )
)

; Define a function to calculate the binomial coefficient using the factorial and power functions
(define (binomial-coefficient n k)
    (/ (factorial n) (* (factorial k) (factorial (- n k))))
)

; Define a function to print the Pascal's Triangle up to a given number of rows
(define (pascals-triangle num)
    (define (pascals-triangle-helper row col)
        (if (= col 0) 1
            (if (= row col) 1
                (+ (pascals-triangle-helper (- row 1) (- col 1)) (pascals-triangle-helper (- row 1) col))
            )
        )
    )
    (do ((row 0 (+ row 1)))
        ((= row num)) ; Iterate through number of rows
        (do ((col 0 (+ col 1)))
            ((> col row)) ; Iterate through number of columns in each row
            (display (pascals-triangle-helper row col)) ; Display the value at that row and column
            (display " ")
        )
        (newline) ; Move to next row
    )
)
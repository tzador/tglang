;;This is a complex function that takes in two lists as parameters
;;and returns a list of every combination of elements from the two lists.
(define (list-combinations lst1 lst2)
    ;;Initialize an empty list to store the combinations
    (define result '())
    ;;Loop through the first list
    (for-each
        (lambda (x)
            ;;Loop through the second list
            (for-each
                (lambda (y)
                    ;;Append the two elements to a list and add it to the result list
                    (set! result (cons (list x y) result)))
                lst2))
        lst1)
    ;;Return the result list
    result)
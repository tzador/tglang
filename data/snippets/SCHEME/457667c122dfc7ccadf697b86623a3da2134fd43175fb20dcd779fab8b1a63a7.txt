(define (f recursion) ; Defines a recursive function
    (lambda (x) ; Takes in a parameter x
        (if (null? x) ; Checks if x is an empty list
            '() ; If so, returns an empty list
            (append (f recursion (cdr x)) ; Recursively calls the function f on the rest of the list
                (list (* (car x) (car x)))))) ; Multiplies the first element of the list with itself and adds it to the end of the list
((f recursion '(1 2 3 4))) ; Calls the function f on a list of numbers and returns the final result
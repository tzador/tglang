(define (odd-even-list lst)
  "Takes a list of integers and returns two lists, one containing odd integers and one containing even integers"
  (cond ((null? lst) '(() ()))
        ((even? (car lst))
          (let ((b (odd-even-list (cdr lst))))
            (list cons (car lst) (car b)) (cadr b)))
        (else
          (let ((b (odd-even-list (cdr lst))))
            (list (car b) cons (car lst) (cadr b))))))
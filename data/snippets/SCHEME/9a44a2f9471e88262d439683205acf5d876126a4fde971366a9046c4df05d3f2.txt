;; Define a function to calculate the nth Fibonacci number
(define (fibonacci n)
  (if (< n 2) n (+ (fibonacci (- n 1)) (fibonacci (- n 2)))) ;; Base case: n is 0 or 1
  )
  
;; Define a function to calculate the factorial of a given number
(define (factorial n)
  (if (= n 0) 1 (* n (factorial (- n 1)))) ;; Base case: n is 0
  )

;; Define a function to find the sum of all numbers in a given list
(define (sum lst)
  (if (null? lst) 0 (+ (car lst) (sum (cdr lst))))
  )
  
;; Define a function to check if a given number is prime
(define (prime? n)
  (define (check-prime n k)
    (if (= k 1) #t ;; Base case: k is 1, number is prime
        (if (= (modulo n k) 0) #f ;; Check if k divides n, if yes then not prime
            (check-prime n (- k 1))
            )
        )
    )
  (check-prime n (- n 1)) ;; Start checking from n-1
  )

;; Define a function to find the maximum element in a given list
(define (max lst)
  (if (null? (cdr lst)) (car lst) ;; Base case: list has only one element
      (if (> (car lst) (max (cdr lst))) (car lst) (max (cdr lst))) ;; Compare with max of rest of list
      )
  )
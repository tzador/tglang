; This code calculates the nth Fibonacci number using an iterative approach
(define (fib-iter n)
  (define (iter a b n)
    (if (= n 0) a       ; base case is n = 0, return a
        (iter b (+ a b) (- n 1)))) ; recursive case is n > 0, update a and b and decrease n by 1
  (iter 0 1 n))     ; initialize a = 0, b = 1, and n = desired Fibonacci number

; Example usage: 
(fib-iter 6) ; returns 8
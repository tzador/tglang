(define (factorial n)
    (if (= n 0)
        1
        (* n (factorial (- n 1)))))

(define (fibonacci n)
    (if (<= n 1)
        n
        (+ (fibonacci (- n 1))
           (fibonacci (- n 2)))))

(define (quicksort lst)
    (if (null? lst)
        '()
        (let ((pivot (car lst))
              (rest (cdr lst)))
            (append (quicksort (filter (lambda (x) (< x pivot)) rest))
                    (list pivot)
                    (quicksort (filter (lambda (x) (>= x pivot)) rest))))))
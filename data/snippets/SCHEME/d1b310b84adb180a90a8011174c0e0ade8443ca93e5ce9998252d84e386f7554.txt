(define (make-counter)
  (let ((count 0))
    (define (next)
      (set! count (+ count 1))
      count)
    (define (reset)
      (set! count 0))
    (define (current)
      count)
    (define (dispatch m)
      (cond ((eq? m 'next) (next))
            ((eq? m 'reset) (reset))
            ((eq? m 'current) (current))
            (else (error "unknown operation -- RAW SCHEME IMPLEMENTATION"))))
  dispatch)
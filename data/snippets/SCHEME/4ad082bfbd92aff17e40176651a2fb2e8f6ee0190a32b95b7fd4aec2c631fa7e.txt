;; This function takes in a list of numbers and returns the product of all the numbers in the list
(define (product num-list) 
   (if (null? num-list) ;; condition to check if list is empty
       1 ;; base case, return 1 when list is empty
       (* (car num-list) (product (cdr num-list))) ;; multiply the first number in the list with the result of recursively calling the function on the rest of the list
       )
   )
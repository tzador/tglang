(define (reverse lst) ; define a function that takes in a list as parameter
  (define (helper lst acc) ; define a helper function with two parameters: the list and accumulator
    (if (null? lst) ; if the list is empty
        acc ; return the accumulator
        (helper (cdr lst) (cons (car lst) acc)))) ; recursive call, removing first element and adding it to the accumulator
  (helper lst '())) ; call the helper function with the list and empty list as initial accumulator
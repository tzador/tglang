;; This is a Scheme function that calculates the factorial of a given number
(define (factorial n)
  (if (or (zero? n) (eq? n 1)) 
    1
    (* n (factorial (- n 1))))) 
  ;;; If the given number is 0 or 1, return 1
  ;;; Otherwise, multiply the number by the factorial of the number -1 and continue recursively until n reaches 1 or 0 
  ;; This function has an O(n) time complexity and O(n) space complexity, as it calls itself n times and uses n stack frames.
  ;;; Example call: (factorial 5) => 120
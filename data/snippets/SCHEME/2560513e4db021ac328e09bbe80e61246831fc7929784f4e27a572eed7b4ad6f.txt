; This is a function that checks if a given input number is a prime number
(define (is-prime? n)
    ; Checks if the input is less than or equal to 1, which is not a prime number
    (if (<= n 1)
        ; If the input is less than or equal to 1, returns #f, which stands for false
        #f
        ; If the number is greater than 1, checks if it is divisible by any number less than or equal to its square root
        (do ((i 2 (+ i 1)))
            ; The loop continues until i is greater than its square root, at which point it stops
            ((> (* i i) n))
            ; If the input number is divisible by any number less than or equal to its square root, it is not a prime number, so returns #f
            (if (= (modulo n i) 0)
                (return #f)))
        ; If the loop finishes without returning #f, then the number is a prime number, so returns #t, which stands for true
        #t))
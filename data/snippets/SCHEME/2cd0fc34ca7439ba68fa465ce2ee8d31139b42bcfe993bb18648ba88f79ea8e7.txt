`(define (merge-lists list1 list2) ; Define a function to merge two lists
   (cond ((null? list1) list2) ; If list1 is empty, return list2
         ((null? list2) list1) ; If list2 is empty, return list1
         ((< (car list1) (car list2)) 
          (cons (car list1) (merge-lists (cdr list1) list2)))
          ; If the first element in list1 is smaller than the first element in list2,
          ; add the first element of list1 to the merged list and repeat the process
         (else (cons (car list2) (merge-lists list1 (cdr list2))))`
          ; Otherwise, add the first element of list2 to the merged list and repeat the process
)
; Example usage:
(merge-lists '(1 3 5 7) '(2 4 6 8)) ; Output: (1 2 3 4 5 6 7 8)
;; ==========================
;;  RECURSIVE LIST GENERATION
;; ==========================

;; define procedure for generating a list of n elements
;; each element is equal to the sum of the previous two elements
(define (generate-list n)
  ;; base case: if n is 0, return empty list
  (if (= n 0)
      '()
      ;; recursive case: generate a list with n elements
      ;; using helper procedure two-elements-sum
      (cons
       ;; use two-elements-sum to get first element
       (two-elements-sum (- n 1) (- n 2))
       ;; recursively call generate-list to get remaining elements
       (generate-list (- n 1)))))

;; define helper procedure for getting the sum of two elements
(define (two-elements-sum a b)
  (+ a b))

;; test the procedure by generating a list of 10 elements
(generate-list 10)

;; expected output: (0 1 1 2 3 5 8 13 21 34)
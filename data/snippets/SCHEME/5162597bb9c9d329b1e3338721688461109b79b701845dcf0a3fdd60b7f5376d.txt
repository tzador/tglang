(define-syntax-rule (my-map func lst)
  (if (null? lst)
      '()
      (cons (func (car lst)) (my-map func (cdr lst)))))

;This is a recursive function that takes in a function and a list as parameters.
'func' is the function that will be applied to each element of the list.
'lst' is the list that will be iterated through.
There is a base case where if the list is empty, '()'(an empty list) is returned.
Else, the function is applied to the first element of the list and concatenated with the function recursively applied to the rest of the list.
The output of this function is a list of the results of applying the function to each element in the input list.

;Example usage:
(my-map add1 '(1 2 3))
;Output: (2 3 4)
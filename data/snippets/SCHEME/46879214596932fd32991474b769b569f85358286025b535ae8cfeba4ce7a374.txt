(define (convert-binary-to-decimal binary) ; defines a function with one parameter
  (let loop ((i 0) ; initializes a counter for the loop
             (sum 0)) ; initializes a sum variable
    (if (= i (string-length binary)) ; checks if counter is equal to the string length of binary
        sum ; base case: return the sum
        (let ((digit (- (string-ref binary i) 48))) ; assigns the digit to be converted
          (loop (+ i 1) (+ sum (* digit (expt 2 (- (string-length binary) i 1)))))))) ; recursively calls the loop function, updating counter and sum variables
;; This is a commented line in SCHEME

(define (is-prime x)
  ;; This function takes in a number, x, and checks if it is a prime number
  ;; It returns a boolean value
  (cond ((<= x 1) #f) ;; If x is less than or equal to 1, it is not a prime number
        ((= x 2) #t) ;; If x is equal to 2, it is a prime number
        ((even? x) #f) ;; If x is even, it is not a prime number
        (else
         (define (check-divisors divisor)
           (if (= divisor x) ;; If the divisor is equal to x, then x is a prime number
               #t ;; Return true
               (if (= (remainder x divisor) 0) ;; If the remainder of x divided by divisor is 0, then x is not a prime number
                   #f ;; Return false
                   (check-divisors (+ divisor 1))))) ;; Otherwise, check the next possible divisor
         (check-divisors 3)))) ;; Start checking divisors from 3
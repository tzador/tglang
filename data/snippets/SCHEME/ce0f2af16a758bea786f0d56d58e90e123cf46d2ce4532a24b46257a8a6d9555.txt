;; defining an anonymous function to take in two parameters
(lambda (x y)
  ;; initializing a variable to store the sum of the two parameters
  (define sum (+ x y))
  
  ;; using the 'cond' function for conditional branching
  (cond
    ;; if 'sum' is greater than 100, print "Sum is large" and return 'sum'
    ((> sum 100)
      (begin
        (display "Sum is large")
        sum))
        
    ;; if 'sum' is greater than 50 but less than or equal to 100, print "Sum is medium" and return 'sum'
    ((and (> sum 50) (<= sum 100))
      (begin
        (display "Sum is medium")
        sum))
    
    ;; if 'sum' is less than or equal to 50, print "Sum is small" and return 'sum'
    (else
      (begin
        (display "Sum is small")
        sum))))
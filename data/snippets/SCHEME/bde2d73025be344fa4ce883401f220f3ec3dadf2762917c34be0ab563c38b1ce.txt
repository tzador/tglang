;;This function checks if a list is sorted in ascending order
(define (is-sorted lst)
  ;;Helper function that checks if a list is sorted in ascending order
  ;;Takes in a previously seen element, current element, and list to recurse through
  (define (sorted-helper seen current lst)
    (cond ((null? lst) ;if list is empty, then it's sorted
           #t)
          ((<= seen current) ;if current element is less than or equal to seen element
           (sorted-helper current (car lst) (cdr lst))) ;recurse with current element now seen
          (else ;if current element is greater than seen element
           #f))) ;return false
  (sorted-helper (car lst) (cadr lst) (cddr lst))) ;call helper function with first two elements skipped
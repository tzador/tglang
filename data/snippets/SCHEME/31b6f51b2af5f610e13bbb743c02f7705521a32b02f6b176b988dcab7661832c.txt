;; Define a function that checks if a number is prime
(define (is-prime num)
  ;; Use a helper function to check for prime number
  (define (check-prime n divisor)
    ;; Base cases, if divisor is 1 or equal to number, then number is prime
    (cond ((= divisor 1) #t)
          ((> divisor n) #t)
          ;; If number is divisible by divisor, then not prime
          ((= (remainder n divisor) 0) #f)
          ;; Otherwise, recursively check next divisor
		  (else (check-prime n (+ divisor 1)))))
  ;; Call helper function starting with divisor of 2
  (check-prime num 2))
  
;; Sample function call
(is-prime 17)
;; Output: #t (17 is a prime number)
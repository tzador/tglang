(let* ((num (read))) ; Take user input and bind it to the variable "num"
  (let* ((list (build-list num (lambda (x) (* x num))))) ; Create a list of length "num" where each element is the result of multiplying the index by "num"
    (letrec
      ((sum-list (lambda (lst index) ; Define a recursive function that takes in a list and an index and returns the sum of all the elements up to that index
        (if (< index 0) ; Base case: if index is less than 0, return 0 
            0
            (+ (list-ref lst index) ; Otherwise, recursively add the current element to the sum of all previous elements
               (sum-list lst (- index 1))))))
      (sum (sum-list list (- num 1)))) ; Call the recursive function on our list, starting with the last index
    (displayln sum))) ; Display the final sum
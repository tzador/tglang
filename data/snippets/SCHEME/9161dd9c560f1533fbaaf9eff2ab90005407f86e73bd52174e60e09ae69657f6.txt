;; define a higher-order procedure that takes in a list of functions
;; and applies each function to a given input, returning a list of results

(define (apply-functions-to-input functions input)
    ;; helper procedure to recursively apply functions
    (define (apply-functions-to-input-helper functions input lst)
        ;; check if all functions have been applied
        (if (null? functions)
            lst
            ;; recurse by applying first function to input
            (apply-functions-to-input-helper (cdr functions) input (append lst (list ((car functions) input))))
        )
    )
    ;; pass in list of functions and empty list for results
    (apply-functions-to-input-helper functions input '())
)
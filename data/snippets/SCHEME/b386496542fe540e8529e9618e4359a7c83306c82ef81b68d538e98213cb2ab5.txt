(define (factorial n) ;defines a function named 'factorial' that accepts one parameter 'n'
    (define (aux acc x) ;defines a helper function named 'aux' that takes two parameters 'acc' and 'x'
        (if (<= x 0) ;checks if 'x' is less than or equal to 0
            acc ;returns the accumulated value
            (aux (* acc x) (- x 1)))) ;if 'x' is greater than 0, calls 'aux' recursively with updated values
    (aux 1 n)) ;calls 'aux' function with initial value of 1 and value of 'n' passed to the 'factorial' function

(factorial 5) ;calling the 'factorial' function with the value 5 as the argument, should return 120
; This is a code snippet in SCHEME
; It generates the first few numbers in the Fibonacci sequence
; Using a recursive function definition
(define (fib n)
  ; Set up the base cases for n = 0 and n = 1
  (cond
  [(equal? n 0) 0]
  [(equal? n 1) 1]
  ; Otherwise, use the recursive definition to calculate the nth Fibonacci number
  [else (+ (fib (- n 1)) (fib (- n 2)))]
  )
)

; Call the function with a parameter of 10 and store the result in a variable
(define result (fib 10))

; Print out the result
(display result)

; Output: 55
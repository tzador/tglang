;; Define a procedure that accepts two arguments, a list and a number.
(define (add-to-list list num)
  ;; Create a new list that contains the given number as the first element.
  (define new-list (cons num '()))
  ;; Loop through the given list and add each element to the new list.
  (do ((i 0 (+ i 1))) ((>= i (length list)))
    (define element (list-ref list i))
    (set! new-list (cons element new-list)))
  ;; Return the new list with the given number added to the beginning.
  new-list)

;; Example usage of the procedure.
(add-to-list '(1 2 3 4) 5)

;; Output: (5 4 3 2 1)
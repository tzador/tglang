(define lst '(1 2 3 4 5)) ; Defines a list of numbers from 1 to 5

;; This function multiplies each element in the list by 2 and returns a new list with the results
(define (multiply-by-two lst)
  (if (null? lst) ; Base case: if the list is empty, return an empty list
      '()
      (cons (* (car lst) 2) (multiply-by-two (cdr lst))))) ; Recursively call the function with the rest of the list

(display (multiply-by-two lst)) ; Outputs the result: (2 4 6 8 10)
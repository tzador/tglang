;;defines a job listings database with company names, job titles, and required skills
(define job-listings
 '((company-name: ABC Corp)
   (job-title: Software Engineer)
   (required-skills: 
    '(programming languages: (C++ Java Python)
      front-end: (HTML CSS JavaScript)
      back-end: (Node.js Ruby on Rails)
      database management: (MySQL MongoDB)
      soft skills: (communication teamwork problem-solving)))))

;;defines a function that checks if a job listing matches a candidate's skills
(define (match-job candidate-job-listing job-listing)
  (if (equal? (job-title job-listing) (job-title candidate-job-listing))
      (and (subset? (required-skills job-listing) (required-skills candidate-job-listing))
           (subset? (required-skills candidate-job-listing) (required-skills job-listing)))
      #f))

;;defines a function that checks if a candidate is qualified for a job listing
(define (is-qualified? candidate job-listing)
  (if (equal? (company-name job-listing) (company-name candidate))
      (if (match-job (skills candidate) job-listing)
          #t
          #f)
      #f))

;;example candidate and job listing
(define candidate
  '((company-name: ABC Corp)
    (job-title: Software Engineer)
    (skills:
     '(programming languages: (C++ Python)
       front-end: (HTML CSS)
       back-end: (Node.js)
       database management: (MySQL)
       soft skills: (communication teamwork problem-solving)))))

(define job-1
  '((company-name: ABC Corp)
    (job-title: Software Engineer)
    (required-skills:
     '(programming languages: (Java Python)
       front-end: (HTML CSS JavaScript)
       back-end: (Node.js Ruby on Rails)
       database management: (MySQL MongoDB)
       soft skills: (communication teamwork problem-solving)))))

;;checks if candidate is qualified for job-1
(is-qualified? candidate-job-listing job-1)

;;output: #f (candidate lacks required programming languages skill)
;; Define a function to check if a list is sorted in increasing order
(define (sorted? lst)
  (cond ((null? lst) #t) ;; If list is empty, return true
        ((null? (cdr lst)) #t) ;; If list only has one element, return true
        ((< (car lst) (car (cdr lst))) ;; If first element is smaller than second
         (sorted? (cdr lst))) ;; Recursively call function on rest of list
        (else #f))) ;; If none of the above conditions match, return false
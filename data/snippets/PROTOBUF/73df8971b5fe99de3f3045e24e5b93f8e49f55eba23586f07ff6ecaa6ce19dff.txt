syntax = "proto3"; // set the syntax to protocol buffer version 3

// create a message called Person that contains information about a person
message Person {
  string name = 1; // field with unique identifier 1 and data type string
  int32 age = 2; // field with unique identifier 2 and data type int32
  repeated string education = 3; // field with unique identifier 3 and data type repeated string
  repeated JobHistory job = 4; // field with unique identifier 4 and data type repeated message
  message JobHistory { // nested message JobHistory to store information about a person's job history
    string company_name = 1; // field with unique identifier 1 and data type string
    string job_title = 2; // field with unique identifier 2 and data type string
    int32 years_of_experience = 3; // field with unique identifier 3 and data type int32
  }
}

// create an enum that represents different types of phone numbers
enum PhoneType {
  MOBILE = 0; // enum value with unique identifier 0
  HOME = 1; // enum value with unique identifier 1
  WORK = 2; // enum value with unique identifier 2
}

// create a message called Contact that contains information about a person's contact information
message Contact {
  repeated PhoneNumber phone = 1; // field with unique identifier 1 and data type repeated message
  message PhoneNumber { // nested message PhoneNumber to store information about a phone number
    string number = 1; // field with unique identifier 1 and data type string
    PhoneType type = 2; // field with unique identifier 2 and data type enum
  }
  string email = 2; // field with unique identifier 2 and data type string
}

// create a message called Address that contains information about a person's address
message Address {
  string street_name = 1; // field with unique identifier 1 and data type string
  string city = 2; // field with unique identifier 2 and data type string
  string state = 3; // field with unique identifier 3 and data type string
  int32 zip_code = 4; // field with unique identifier 4 and data type int32
}

// create a message called FullInfo that contains all the information about a person
message FullInfo {
  Person person = 1; // field with unique identifier 1 and data type message Person
  Contact contact = 2; // field with unique identifier 2 and data type message Contact
  repeated Address address = 3; // field with unique identifier 3 and data type repeated message
  string occupation = 4; // field with unique identifier 4 and data type string
  int32 salary = 5; // field with unique identifier 5 and data type int32
  bool is_married = 6; // field with unique identifier 6 and data type bool
}
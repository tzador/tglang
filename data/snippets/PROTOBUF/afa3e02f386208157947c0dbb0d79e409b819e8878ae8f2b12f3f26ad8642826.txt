syntax = "proto3"; // sets the syntax for the proto file
package example; // sets the package name for the proto file

// defines a message called Person
message Person {
  string name = 1; // field number and data type of the field
  int32 age = 2; // field number and data type of the field
  repeated string hobbies = 3; // field number and repeated keyword
  Address address = 4; // field number and data type of the field (nested message)
  map<string, int32> phone_numbers = 5; // field number, map type, and data types for key and value
  oneof employee_status { // oneof keyword for mutually exclusive fields
    bool is_full_time = 6; // field number and data type of the field
    bool is_contractor = 7; // field number and data type of the field
  }
  enum Gender { // enum keyword for defining a set of named constants
    MALE = 0;
    FEMALE = 1;
    OTHER = 2;
  }
  Gender gender = 8; // field number and data type of the field (enum)
}

// defines a message called Address
message Address {
  string street = 1; // field number and data type of the field
  string city = 2; // field number and data type of the field
  string state = 3; // field number and data type of the field
  int32 zip_code = 4; // field number and data type of the field
}

// defines a message called Employee that extends Person
message Employee {
  extend Person { // extend keyword to inherit from another message
    string position = 9; // field number and data type of the field
  }
}

// defines a service called EmployeeService
service EmployeeService {
  rpc GetEmployee (GetEmployeeRequest) returns (Employee) {} // rpc keyword to declare a remote procedure call
  rpc UpdateEmployee (Employee) returns (UpdateEmployeeResponse) {} // rpc keyword to declare a remote procedure call
}

// defines a message called GetEmployeeRequest
message GetEmployeeRequest {
  string employee_id = 1; // field number and data type of the field
}

// defines a message called UpdateEmployeeResponse
message UpdateEmployeeResponse {
  bool success = 1; // field number and data type of the field
  string message = 2; // field number and data type of the field
}
syntax = "proto3";
// defining a message type with a unique ID
message Person {
  int32 id = 1;
  string name = 2;
  string email = 3;
  int32 age = 4;
}
// defining an enum to represent gender
enum Gender {
  MALE = 0;
  FEMALE = 1;
  OTHER = 2;
}
// defining a message type with nested message and enum
message Student {
  int32 id = 1;
  string name = 2;
  Gender gender = 3;
  int32 age = 4;
  // nested message type for address
  message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string zip_code = 4;
  }
  // defining a repeated field for multiple addresses
  repeated Address addresses = 5;
}
// defining a message type with oneof field
message Employee {
  int32 id = 1;
  string name = 2;
  oneof job_type {
    string title = 3;
    int32 salary = 4;
  }
}
// defining a service with RPC methods
service UserService {
  // defining a simple RPC method to get user by ID
  rpc GetUserById (UserRequest) returns (UserResponse) {}
  // defining a server streaming RPC method to get all users
  rpc GetAllUsers (EmptyRequest) returns (stream UserResponse) {}
  // defining a client streaming RPC method to add multiple users
  rpc AddUsers (stream UserRequest) returns (AddUsersResponse) {}
  // defining a bidirectional streaming RPC method to update users
  rpc UpdateUsers (stream UpdateUserRequest) returns (stream UpdateUserResponse) {}
}
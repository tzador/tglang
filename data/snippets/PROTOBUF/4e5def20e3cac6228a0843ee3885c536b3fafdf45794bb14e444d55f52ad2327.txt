syntax = "proto3";

// Message for a user
message User {
  string name = 1; // Name of the user
  int32 age = 2; // Age of the user
  repeated string interests = 3; // List of interests for the user

  // Nested message for address
  message Address {
    string city = 1; // City of the address
    string country = 2; // Country of the address
  }

  Address address = 4; // Address of the user
  map<string, string> phone_numbers = 5; // Map of phone numbers for the user
  repeated User friends = 6; // List of friends for the user
}

// Message for a post
message Post {
  string content = 1; // Content of the post
  int64 timestamp = 2; // Timestamp for when the post was made

  // Nested message for comments
  message Comment {
    string content = 1; // Content of the comment
    int64 timestamp = 2; // Timestamp for when the comment was made
  }

  repeated Comment comments = 3; // List of comments on the post
  User author = 4; // Author of the post
  User target_user = 5; // User that the post is targeted towards
}

// Message for a search query
message SearchQuery {
  string query = 1; // Query string
  enum Language { // Enum for language options
    ENGLISH = 0;
    SPANISH = 1;
    FRENCH = 2;
  }
  Language language = 2; // Language of the query
  repeated string filters = 3; // List of filters to apply to the search
}

// Message for a search result
message SearchResult {
  repeated Post posts = 1; // List of posts matching the search query
  repeated User users = 2; // List of users matching the search query
  repeated string hashtags = 3; // List of hashtags matching the search query
  repeated string pages = 4; // List of pages matching the search query
}

// Message for a notification
message Notification {
  string content = 1; // Content of the notification
  Post post = 2; // Post related to the notification
  User user = 3; // User related to the notification
  repeated User other_users = 4; // List of other users involved in the notification
  repeated string hashtags = 5; // List of hashtags related to the notification
}

// Message for a reaction
message Reaction {
  enum Type { // Enum for reaction options
    LIKE = 0;
    LOVE = 1;
    LAUGH = 2;
    SAD = 3;
    ANGRY = 4;
  }
  Type type = 1; // Type of reaction
  User user = 2; // User who reacted
  Post post = 3; // Post that was reacted to
}

// Message for a conversation
message Conversation {
  string title = 1; // Title of the conversation
  repeated User members = 2; // List of members in the conversation
  string last_message = 3; // Content of the last message in the conversation
  int64 timestamp = 4; // Timestamp for when the last message was sent
}

// Message for a message
message Message {
  string content = 1; // Content of the message
  User sender = 2; // User who sent the message
  Conversation conversation = 3; // Conversation that the message is a part of
}

// Message for a chat
message Chat {
  repeated Conversation conversations = 1; // List of conversations
  repeated Message messages = 2; // List of messages in the chat
  User current_user = 3; // User currently using the chat
}
syntax = "proto3";

package codeSnippet;

// Import the google.protobuf library for use
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";

// Define a message type called Car
message Car {
    // Enum for car make
    enum Make {
        TOYOTA = 0;
        BMW = 1;
        HONDA = 2;
    }

    // Field for car make, type enum Make
    Make make = 1;

    // Field for car model, type string
    string model = 2;

    // Field for car year, type int32
    int32 year = 3;

    // Field for car color, type string
    string color = 4;

    // Field for car price, type double
    double price = 5;

    // Field for car specifications, type google.protobuf.Any
    google.protobuf.Any specifications = 6;

    // Field for car features, repeated type string
    repeated string features = 7;

    // Field for car owner, nested message type Owner
    Owner owner = 8;

    // Nested message type for car owner
    message Owner {
        string name = 1;
        int32 age = 2;
    }
}

// Define a message type called CarList
message CarList {
    // Field for list of cars, repeated type Car
    repeated Car cars = 1;
}

// Generate a file called "car.proto" with the defined message types
option java_package = "com.example.car";
option java_outer_classname = "CarProto";
option optimize_for = CODE_SIZE;

// Use the google.protobuf.Any functionality to pack a Car message into a Any type
Car car = Car {
    make: TOYOTA;
    model: "Camry";
    year: 2018;
    color: "White";
    price: 25000.00;
    owner: Owner {
        name: "John Smith";
        age: 40;
    }
};

// Pack the Car message into an Any type
google.protobuf.Any packed_car = any.pack(car);

// Unpack the Any type back into a Car message
Car unpacked_car = any.unpack(packed_car);

// Print out the information of the unpacked car
print("Unpacked Car:\nMake: " + unpacked_car.make + "\nModel: " + unpacked_car.model + "\nYear: " + unpacked_car.year.toString() + 
    "\nColor: " + unpacked_car.color + "\nPrice: " + unpacked_car.price.toString() + "\nOwner Name: " + unpacked_car.owner.name + 
    "\nOwner Age: " + unpacked_car.owner.age.toString());
syntax = "proto3"; // declare syntax version of protobuf

message Order { // create Order message
  string order_id = 1; // add order_id field with tag number 1 and string data type
  repeated Item items = 2; // add items field with tag number 2 and repeated data type

  message Item { // create nested Item message
    int32 item_id = 1; // add item_id field with tag number 1 and int32 data type
    string name = 2; // add name field with tag number 2 and string data type
    float price = 3; // add price field with tag number 3 and float data type
  }
}

message PurchaseStatus { // create PurchaseStatus message
  string order_id = 1; // add order_id field with tag number 1 and string data type
  PurchaseState state = 2; // add state field with tag number 2 and enum data type (defined below)

  enum PurchaseState { // declare PurchaseState enum
    PENDING = 0; // add PENDING value with corresponding number
    SUCCESS = 1; // add SUCCESS value with corresponding number
    FAILURE = 2; // add FAILURE value with corresponding number
  }
}

service PurchaseService { // create PurchaseService RPC service
  rpc CreateOrder (Order) returns (PurchaseStatus); // add CreateOrder RPC method that takes in Order message and returns PurchaseStatus message
  rpc GetOrder (PurchaseStatus) returns (Order); // add GetOrder RPC method that takes in PurchaseStatus message and returns Order message
}
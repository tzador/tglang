syntax = "proto3";

message Person { // Defines a message called Person
  string name = 1; // Defines a field called name with field number 1 of type string
  int32 age = 2; // Defines a field called age with field number 2 of type int32
  repeated string hobbies = 3; // Defines a repeated field called hobbies with field number 3 of type string
  Enum Gender { // Defines an Enum nested within the Person message
    FEMALE = 0; // Enum value
    MALE = 1; // Enum value
    NON_BINARY = 2; // Enum value
  }
  Gender gender = 4; // Defines a field called gender with field number 4 of type Gender
}

message Address { // Defines a message called Address
  string city = 1; // Defines a field called city with field number 1 of type string
  string state = 2; // Defines a field called state with field number 2 of type string
  string country = 3; // Defines a field called country with field number 3 of type string
}

message PersonAddress { // Defines a message called PersonAddress
  Person person = 1; // Defines a field called person with field number 1 of type Person
  Address address = 2; // Defines a field called address with field number 2 of type Address
}

service PersonService { // Defines a service called PersonService
  rpc AddPerson (Person) returns (Person); // Defines an RPC method called AddPerson that takes in a Person message and returns a Person message
  rpc GetPerson (PersonAddress) returns (Person); // Defines an RPC method called GetPerson that takes in a PersonAddress message and returns a Person message
}
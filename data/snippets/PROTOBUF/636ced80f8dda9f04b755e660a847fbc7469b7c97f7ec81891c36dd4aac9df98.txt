// Define message type
message Person {
  string name = 1; // Name field with tag 1
  int32 id = 2; // ID field with tag 2
  string email = 3; // Email field with tag 3
  
  // Message type for phone numbers
  message PhoneNumber {
    string number = 1; // Number field with tag 1
    PhoneType type = 2; // PhoneType enum field with tag 2
  }
  
  repeated PhoneNumber phones = 4; // Repeated field for phone numbers
}

// Enum for phone types
enum PhoneType {
  MOBILE = 0;
  HOME = 1;
  WORK = 2;
}

// Encode a person message
Person person = { 
  name: "John Doe",
  id: 123456,
  email: "johndoe@example.com",
  phones: [
    {number: "123-456-7890", type: HOME},
    {number: "456-789-0123", type: MOBILE}
  ]
};

// Serialize the person message
bytes serialized_person = person.SerializeAsString();

// Print the serialized message
std::cout << serialized_person << std::endl;
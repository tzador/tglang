// Define a message for a Person
message Person {
  string name = 1;
  int32 id = 2;
  string email = 3;

  // Define an enum for the Person's occupation
  enum Occupation {
    UNKNOWN = 0;
    STUDENT = 1;
    TEACHER = 2;
    ENGINEER = 3;
  }

  // Define a message for the Person's address
  message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string country = 4;
    int32 zip_code = 5;
  }

  // Define a message for the Person's hobbies
  message Hobbies {
    repeated string hobbies = 1;
  }

  // Add repeated fields for the Person's occupation, address, and hobbies
  Occupation occupation = 4;
  Address address = 5;
  Hobbies hobbies = 6;
}

// Define a message for a list of Persons
message PersonList {
  repeated Person persons = 1;
}

// Create an instance of PersonList with three Person objects
PersonList persons = {
  persons: [
    {
      name: "John",
      id: 1,
      email: "john@email.com",
      occupation: Person.Occupation.STUDENT,
      address: {
        street: "123 Main St",
        city: "New York City",
        state: "New York",
        country: "USA",
        zip_code: 10001
      },
      hobbies: {
        hobbies: [
          "reading",
          "watching movies"
        ]
      }
    },
    {
      name: "Jane",
      id: 2,
      email: "jane@email.com",
      occupation: Person.Occupation.ENGINEER,
      address: {
        street: "456 Broadway",
        city: "San Francisco",
        state: "California",
        country: "USA",
        zip_code: 94102
      },
      hobbies: {
        hobbies: [
          "playing basketball",
          "traveling"
        ]
      }
    },
    {
      name: "Bob",
      id: 3,
      email: "bob@email.com",
      occupation: Person.Occupation.TEACHER,
      address: {
        street: "789 Main St",
        city: "Chicago",
        state: "Illinois",
        country: "USA",
        zip_code: 60611
      },
      hobbies: {
        hobbies: [
          "gardening",
          "painting"
        ]
      }
    }
  ]
};

// Encode the PersonList to bytes using Protobuf encoding
bytes encoded = persons.encode();

// Decode the bytes back into a PersonList object
PersonList decoded = PersonList.decode(encoded);
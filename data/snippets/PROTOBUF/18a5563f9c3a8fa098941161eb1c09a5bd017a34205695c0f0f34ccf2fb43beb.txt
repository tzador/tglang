syntax = "proto3";

message User { // creates message type "User"
  string name = 1; // adds field "name" at index 1
  int32 age = 2; // adds field "age" at index 2
  repeated string hobbies = 3; // adds repeated field "hobbies" at index 3
}

message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  int32 zip_code = 4;
}

message UserProfile { // creates message type "UserProfile"
  User user = 1; // adds field "user" of type User at index 1
  Address address = 2; // adds field "address" of type Address at index 2
  repeated string favorite_books = 3; // adds repeated field "favorite_books" at index 3
  map<string, string> social_media = 4; // adds map field "social_media" at index 4, with key and value as strings
}

enum Gender { // creates enum type "Gender"
  MALE = 0;
  FEMALE = 1;
  NON_BINARY = 2;
}

service UserService { // creates service type "UserService"
  rpc GetUserProfile(User) returns (UserProfile) {} // defines rpc method "GetUserProfile" that takes in a User and returns a UserProfile
  rpc UpdateUser(Address) returns (User) {} // defines rpc method "UpdateUser" that takes in an Address and returns a User
  rpc GetGender() returns (Gender) {} // defines rpc method "GetGender" that returns a Gender
}
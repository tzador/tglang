package employee; //setting the package for the protobuf file

//set the syntax for the protobuf file
syntax = "proto2";

//create the message for Employee
message Employee {
    required int32 id = 1; //set id as a required field of type int32
    required string name = 2; //set name as a required field of type string
    optional int32 age = 3; //set age as an optional field of type int32
    repeated string department = 4; //set department as a repeated field of type string
    enum Gender { //create enum for gender
        MALE = 0;
        FEMALE = 1;
    }
    optional Gender gender = 5; //set gender as an optional field of type Gender enum
    optional bool is_active = 6; //set is_active as an optional field of type bool
}

//create the message for Company
message Company {
    required string name = 1; //set name as a required field of type string
    optional string location = 2; //set location as an optional field of type string
    repeated Employee employees = 3; //set employees as a repeated field of type Employee
}

//create the service for Employee management
service EmployeeService {
    rpc GetEmployees(Empty) returns (EmployeeList); //rpc method to get all employees
    rpc GetEmployee(EmployeeId) returns (Employee); //rpc method to get a specific employee by id
    rpc AddEmployee(Employee) returns (AddEmployeeResponse); //rpc method to add a new employee
    rpc UpdateEmployee(Employee) returns (UpdateEmployeeResponse); //rpc method to update an existing employee
    rpc DeleteEmployee(EmployeeId) returns (DeleteEmployeeResponse); //rpc method to delete an employee
}

//create the message for Empty
message Empty {}

//create the message for EmployeeId
message EmployeeId {
    required int32 id = 1; //set id as a required field of type int32
}

//create the message for EmployeeList
message EmployeeList {
    repeated Employee employees = 1; //set employees as a repeated field of type Employee
}

//create the message for AddEmployeeResponse
message AddEmployeeResponse {
    bool success = 1; //set success as a bool field
    string message = 2; //set message as a string field
}

//create the message for UpdateEmployeeResponse
message UpdateEmployeeResponse {
    bool success = 1; //set success as a bool field
    string message = 2; //set message as a string field
}

//create the message for DeleteEmployeeResponse
message DeleteEmployeeResponse {
    bool success = 1; //set success as a bool field
    string message = 2; //set message as a string field
}
// Define a proto message called "Person"
    message Person {
      string name = 1; // Field with tag "1" of type string
      int32 age = 2; // Field with tag "2" of type int32
      string address = 3; // Field with tag "3" of type string
      repeated string phone_numbers = 4; // Repeated field with tag "4" of type string
      map<string, string> emails = 5; // Map field with tag "5" of type string to string
      oneof employment_status { // Oneof field for employment status
        string employed = 6; // Subfield for employed
        string unemployed = 7; // Subfield for unemployed
      }
      enum Gender { // Enum for gender
        MALE = 0;
        FEMALE = 1;
        NONBINARY = 2;
      }
      Gender gender = 8; // Field with tag "8" of type Gender
      google.protobuf.Timestamp last_updated = 9; // Field with tag "9" of type Timestamp from Google Protobuf
    }

    // Define a proto message called "Address"
    message Address {
      string street = 1; // Field with tag "1" of type string
      string city = 2; // Field with tag "2" of type string
      string state = 3; // Field with tag "3" of type string
      int32 zip_code = 4; // Field with tag "4" of type int32
    }

    // Define a proto message called "Email"
    message Email {
      string email = 1; // Field with tag "1" of type string
      string label = 2; // Field with tag "2" of type string
    }

    // Define a proto message called "PhoneNumber"
    message PhoneNumber {
      string number = 1; // Field with tag "1" of type string
      string label = 2; // Field with tag "2" of type string
    }

    // Define a proto message called "Company"
    message Company {
      string name = 1; // Field with tag "1" of type string
      Address address = 2; // Field with tag "2" of type Address
      repeated PhoneNumbers phone_numbers = 3; // Repeated field with tag "3" of type PhoneNumber
    }

    // Define a proto message called "PersonDetails"
    message PersonDetails {
      Person person = 1; // Field with tag "1" of type Person
      Company company = 2; // Field with tag "2" of type Company
    }
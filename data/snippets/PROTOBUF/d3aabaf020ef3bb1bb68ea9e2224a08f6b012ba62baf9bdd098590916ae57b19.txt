syntax = "proto2"; // indicates use of protobuf version 2 syntax

option optimize_for = LITE_RUNTIME; // optimization option for compact code size

package employee; // declares the package name

/* defines the Employee message type */
message Employee {
  required int32 id = 1; // field with unique identifier
  optional string name = 2; // field with optional string value
  optional float salary = 3; // field with optional float value
  repeated string skills = 4; // repeated field with list of strings
  enum Role { // defines an enum named Role
    UNKNOWN = 0;
    DEVELOPER = 1;
    MANAGER = 2;
  }
  optional Role role = 5; // optional field with enum value
  map<string, string> contacts = 6; // map field with key-value pairs of strings
}

/* defines the Company message type */
message Company {
  required string name = 1; // field with required string value
  repeated Employee employees = 2; // repeated field with list of Employee types
  enum Location { // defines an enum named Location
    UNKNOWN = 0;
    NEW_YORK = 1;
    LONDON = 2;
  }
  optional Location headquarters = 3; // optional field with enum value
}

/* creates a service named EmployeeManagement */
service EmployeeManagement {
  rpc AddEmployee(Employee) returns (Employee); // defines an rpc method that takes in an Employee and returns an Employee
  rpc GetEmployees(Company) returns (stream Employee); // defines an rpc method that takes in a Company and returns a stream of Employees
  rpc UpdateSalary(Employee) returns (Employee); // defines an rpc method that takes in an Employee and returns an Employee
}
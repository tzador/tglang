// Define a message type
message Person {
  string name = 1;
  int32 age = 2;
  repeated string emails = 3;
  Address address = 4;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

  message PhoneNumber {
    string number = 1;
    PhoneType type = 2;
  }

  repeated PhoneNumber phones = 5;
  map<string, string> nicknames = 6;
  bool is_verified = 7;
}

// Define a message type for Address
message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  int32 zip_code = 4;
}

// Create a new Person message
Person new_person1 = {
  name: "Jane Doe",
  age: 30,
  emails: ["janedoe@example.com", "jane.doe@gmail.com"],
  address: {
    street: "123 Main St",
    city: "New York",
    state: "NY",
    zip_code: 10001
  },
  phones: [
    {number: "555-1234", type: PERSON.HOME},
    {number: "555-5678", type: PERSON.WORK},
  ],
  nicknames: {
    "John": "Johnny",
    "Jennifer": "Jenny"
  },
  is_verified: true
};

// Serialize the Person message
bytes serialized_person = new_person1.SerializeToString();

// Parse the serialized message
Person parsed_person = Person.ParseFromString(serialized_person);
syntax = "proto3"; //specifies the syntax of the protobuf code
package example; //declares the package name for the code

message Person { //defines a message called "Person"
  string name = 1; //defines a field called "name" with tag number 1
  int32 age = 2; //defines a field called "age" with tag number 2
  repeated string address = 3; //defines a repeated field called "address" with tag number 3
  enum Gender { //defines an enum for Gender with allowed values MALE and FEMALE
    MALE = 0;
    FEMALE = 1;
  }
  Gender gender = 4; //defines a field called "gender" with tag number 4 that can only take values from the Gender enum
  message Contact { //defines a nested message called "Contact"
    string phone = 1; //defines a nested field called "phone" with tag number 1
    string email = 2; //defines a nested field called "email" with tag number 2
  }
  Contact contact = 5; //defines a field called "contact" with tag number 5 that contains nested fields from the Contact message
  map<string, string> education = 6; //defines a map field with key as string and value as string with tag number 6
}

service ExampleService { //defines a service called "ExampleService"
  rpc CreatePerson (Person) returns (Person) {} //defines a method called "CreatePerson" that takes in a "Person" message as input and returns a "Person" message as output
  rpc GetPerson (Person) returns (Person) {} //defines a method called "GetPerson" that takes in a "Person" message as input and returns a "Person" message as output
  rpc UpdatePerson (Person) returns (Person) {} //defines a method called "UpdatePerson" that takes in a "Person" message as input and returns a "Person" message as output
  rpc DeletePerson (Person) returns (Person) {} //defines a method called "DeletePerson" that takes in a "Person" message as input and returns a "Person" message as output
}
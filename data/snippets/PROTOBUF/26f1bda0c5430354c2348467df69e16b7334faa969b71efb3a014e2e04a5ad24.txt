syntax = "proto3"; // Specifies version of Protobuf used

message Person { // Defines 'Person' message
  string name = 1; // Field 'name' of type string and tag number 1
  int32 age = 2; // Field 'age' of type int32 and tag number 2
  Address address = 3; // Field 'address' of type Address message and tag number 3

  message Address { // Defines 'Address' message
    string street = 1; // Field 'street' of type string and tag number 1
    string city = 2; // Field 'city' of type string and tag number 2
    string state = 3; // Field 'state' of type string and tag number 3
    string country = 4; // Field 'country' of type string and tag number 4
  }

  repeated Job job = 4; // Field 'job' of type Job message, tag number 4, and repeated

  message Job { // Defines 'Job' message
    string title = 1; // Field 'title' of type string and tag number 1
    string company = 2; // Field 'company' of type string and tag number 2
    int32 years_experience = 3; // Field 'years_experience' of type int32 and tag number 3
  }
}

message AddressBook { // Defines 'AddressBook' message
  repeated Person contacts = 1; // Field 'contacts' of type Person, tag number 1, and repeated
  string category = 2; // Field 'category' of type string and tag number 2
  map<int32, Job> jobs = 3; // Field 'jobs' of type map with key of type int32 and value of type Job, tag number 3
}

// Example of how to use Protobuf to encode a person's information
Person person = Person { // Creates a new Person object
  name: "John Smith", // Sets name field to "John Smith"
  age: 35, // Sets age field to 35
  address: Address { // Creates a new Address object
    street: "123 Main Street", // Sets street field to "123 Main Street"
    city: "New York", // Sets city field to "New York"
    state: "NY", // Sets state field to "NY"
    country: "USA" // Sets country field to "USA"
  },
  job: [ // Creates a list of jobs for the person
    Job { // Creates a new Job object
      title: "Software Engineer", // Sets title field to "Software Engineer"
      company: "Google", // Sets company field to "Google"
      years_experience: 10 // Sets years_experience field to 10
    },
    Job { // Creates another new Job object
      title: "Data Analyst", // Sets title field to "Data Analyst"
      company: "Facebook", // Sets company field to "Facebook"
      years_experience: 5 // Sets years_experience field to 5
    }
  ]
};

AddressBook address_book = AddressBook { // Creates a new AddressBook object
  contacts: [person], // Adds person to contacts list
  category: "Friends", // Sets category field to "Friends"
  jobs: { // Creates a map of jobs
    1: Job { // Adds job with key 1 and values "title: "Sales Associate", company: "Amazon", years_experience: 2"
      title: "Sales Associate",
      company: "Amazon",
      years_experience: 2
    },
    2: Job { // Adds job with key 2 and values "title: "Marketing Manager", company: "Apple", years_experience: 8"
      title: "Marketing Manager",
      company: "Apple",
      years_experience: 8
    }
  }
};

byte[] encoded_person = person.SerializeToString(); // Encodes person object into bytes
syntax = "proto2"; //specify the syntax for protobuf
package example; //specify the name of the package

//define message type for user
message User { 
	required string name = 1; //name of the user
	optional int32 age = 2; //age of the user (optional)
	repeated string hobbies = 3; //hobbies of the user (can have multiple)
}

//define message type for post
message Post { 
	required string title = 1; //title of the post
	optional User author = 2; //author of the post (optional)
	repeated string tags = 3; //tags for the post (can have multiple)
	optional string content = 4; //content of the post (optional)
}

//define service for handling posts
service PostService { 
	rpc CreatePost(Post) returns (Post); //method for creating a post
	rpc GetPostById(int64) returns (Post); //method for retrieving a post by its id
	rpc UpdatePostById(Post) returns (Post); //method for updating a post by its id
	rpc DeletePostById(int64) returns (bool); //method for deleting a post by its id
}

//define rpc server for handling requests
message Empty {} //empty message type
service PostService { 
	rpc CreatePost(Post) returns (Post); //method for creating a post
	rpc GetPostById(int64) returns (Post); //method for retrieving a post by its id
	rpc UpdatePostById(Post) returns (Post); //method for updating a post by its id
	rpc DeletePostById(int64) returns (bool); //method for deleting a post by its id
}

//define client for sending requests to the server
service PostService { 
	rpc CreatePost(Post) returns (Post); //method for creating a post
	rpc GetPostById(int64) returns (Post); //method for retrieving a post by its id
	rpc UpdatePostById(Post) returns (Post); //method for updating a post by its id
	rpc DeletePostById(int64) returns (bool); //method for deleting a post by its id
}

//sample request for creating a post
Post post = Post {
	title: "My First Post",
	author: User { name: "John", age: 30, hobbies: ["Reading", "Cooking"] },
	tags: ["Programming", "Technology"],
	content: "Welcome to my blog! This is my very first post."
};

//sample response from server after creating a post
Post newPost = Post {
	title: "My First Post",
	author: User { name: "John", age: 30, hobbies: ["Reading", "Cooking"] },
	tags: ["Programming", "Technology"],
	content: "Welcome to my blog! This is my very first post.",
	id: 1
};

//sample request for updating a post
Post updatedPost = Post {
	id: 1,
	title: "My First Post",
	author: User { name: "John", age: 30, hobbies: ["Reading", "Cooking", "Soccer"] },
	tags: ["Programming", "Technology", "Sports"],
	content: "Welcome to my blog! This is my updated first post."
};

//sample response from server after updating a post
Post updatedPost = Post {
	id: 1,
	title: "My First Post",
	author: User { name: "John", age: 30, hobbies: ["Reading", "Cooking", "Soccer"] },
	tags: ["Programming", "Technology", "Sports"],
	content: "Welcome to my blog! This is my updated first post."
};
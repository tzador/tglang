// Create a Person message
message Person {
  required string name = 1;
  required int32 age = 2;
  optional string address = 3;
  repeated string interests = 4;

  // Nested message for contact information
  message ContactInfo {
    required string email = 1;
    optional string phone_number = 2;
  }

  // Nested message for employment history
  message EmploymentHistory {
    required string company = 1;
    required string position = 2;
    optional string start_date = 3;
    optional string end_date = 4;
  }

  // Optional field for contact information
  optional ContactInfo contact_info = 5;

  // Repeated field for employment history
  repeated EmploymentHistory employment_history = 6;
}

// Create a new Person object with required fields
Person person = Person {
  name: "John Smith",
  age: 30
};

// Update optional fields
person.address = "123 Main Street";
person.interests = ["hiking", "cooking", "reading"];

// Create a new ContactInfo object
Person.ContactInfo contact_info = Person.ContactInfo {
  email: "johnsmith@example.com"
};

// Assign contact_info to person object
person.contact_info = contact_info;

// Create a new EmploymentHistory object
Person.EmploymentHistory employment_history = Person.EmploymentHistory {
  company: "ABC Company",
  position: "Software Engineer"
};

// Add multiple employment history to person object
person.employment_history = [employment_history, {company: "XYZ Company", position: "Web Developer"}];

// Encode the person object to a byte array
byte[] person_bytes = person.SerializeToArray();

// Decode the byte array back to a Person object
Person new_person = Person.ParseFrom(person_bytes);
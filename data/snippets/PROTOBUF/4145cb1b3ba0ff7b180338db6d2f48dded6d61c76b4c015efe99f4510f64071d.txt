message SearchRequest {
  // Unique request identifier
  string request_id = 1;
  // Search query string
  string query = 2;
  // Number of results to return
  int32 result_count = 3;
  // Flag to indicate if results should be sorted
  bool sort_results = 4;
  // Optional filters for search results
  repeated Filter filters = 5;
  // Optional timestamp for search request
  google.protobuf.Timestamp request_time = 6;
}

message Filter {
  enum Operator {
    EQUAL = 0;
    NOT_EQUAL = 1;
    LESS_THAN = 2;
    GREATER_THAN = 3;
    CONTAINS = 4;
  }

  string field = 1;
  Operator operator = 2;
  string value = 3;
}

syntax = "proto3";

service SearchService {
  // Search function that returns matching results
  rpc Search (SearchRequest) returns (stream SearchResponse);
}

message SearchResponse {
  // Unique identifier for result item
  string result_id = 1;
  // Title of the result item
  string title = 2;
  // Description of the result item
  string description = 3;
  // URL of the result item
  string url = 4;
  // Timestamp for when the result was created
  google.protobuf.Timestamp creation_time = 5;
  // Score that indicates relevance of the result
  float score = 6;
}
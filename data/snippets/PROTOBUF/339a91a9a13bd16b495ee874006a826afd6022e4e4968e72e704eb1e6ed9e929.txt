syntax = "proto3";

//Defining a message type
message Person {
  int32 id = 1;
  string name = 2;
  repeated string languages = 3; //allowing multiple values for languages

  enum Gender { //creating an enum for gender options
    MALE = 0;
    FEMALE = 1;
  }
  Gender gender = 4;

  Address address = 5; //embedding another message type inside Person

  map<string, string> contact_info = 6; //allowing key-value pairs for contact info
  repeated Job job_history = 7; //allowing multiple values for job history
}

//Defining a message type for address
message Address {
  string country = 1;
  string city = 2;
  string street = 3;
  int32 zip_code = 4;
}

//Defining a message type for job history
message Job {
  string company = 1;
  string position = 2;
  int32 years_worked = 3;
}

//Defining a service to add new person
service PersonService {
  rpc AddPerson (Person) returns (Person) {}
}
syntax = "proto3"; 
// sets the syntax as proto3 for protobuf messages
 
message Student { 
    string name = 1; 
    // sets name field as string with field number 1 
    int32 age = 2; 
    // sets age field as int32 with field number 2 
    string address = 3; 
    // sets address field as string with field number 3 
    repeated string courses = 4; 
    // sets courses field as a repeated string with field number 4 
    enum Grade { 
        // defines the Grade enum 
        A = 0; 
        B = 1; 
        C = 2; 
        D = 3; 
        E = 4; 
        F = 5; 
    } 
    Grade grade = 5; 
    // sets grade field as Grade enum with field number 5 
    map<string, int32> grades_by_course = 6; 
    // sets grades_by_course field as a map of string keys and int32 values with field number 6 
    Student previous_school = 7; 
    // sets previous_school field as a nested Student message with field number 7 
    oneof contact { 
        // defines the contact oneof 
        string phone_number = 8; 
        // sets phone_number field as string with field number 8 
        string email = 9; 
        // sets email field as string with field number 9 
    } 
    Student[] classmates = 10; 
    // sets classmates field as an array of Student messages with field number 10 
}

// to encode a Student message, first create an instance and set its values
Student student = {
    name: "John Smith",
    age: 18,
    address: "123 Main Street",
    courses: ["Math", "Science", "English"],
    grade: Student.Grade.B,
    grades_by_course: {
        "Math": 95,
        "Science": 90,
        "English": 85
    },
    previous_school: {
        name: "ABC High School",
        address: "456 Park Avenue",
        grade: Student.Grade.A
    },
    contact: {
        email: "john.smith@email.com"
    },
    classmates: [
        { 
            name: "Jane Doe", 
            age: 18, 
            address: "456 Main Street", 
            grade: Student.Grade.B 
        }, 
        { 
            name: "Bob Smith", 
            age: 18, 
            address: "789 Main Street", 
            grade: Student.Grade.C 
        }
    ]
};

// then use the encode function to convert the message into bytes
bytes encoded_student = student.encode();

// to decode a Student message from bytes, use the decode function and specify the message type
Student decoded_student = Student.decode(encoded_student);

// access the fields of the decoded message
string name = decoded_student.name;
int32 age = decoded_student.age;
map<string, int32> grades_by_course = decoded_student.grades_by_course;

// nested messages and oneofs can also be accessed similarly
string previous_school_name = decoded_student.previous_school.name;
string contact_phone_number = decoded_student.contact.phone_number;
Student[] classmates = decoded_student.classmates;
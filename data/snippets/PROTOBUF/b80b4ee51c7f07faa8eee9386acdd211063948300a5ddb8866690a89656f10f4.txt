// Defining a message type named Person
message Person {
  string name = 1;  // field labeled 1
  int32 id = 2;  // field labeled 2
  string email = 3;  // field labeled 3
  repeated PhoneNumber phones = 4; // repeated message field with nested PhoneNumber message
}

// Defining a message type named PhoneNumber
message PhoneNumber {
  string number = 1; // field labeled 1
  PhoneType type = 2; // field labeled 2, contains enum type PhoneType
}

// Defining an enum type for phone types
enum PhoneType {
  HOME = 0;
  WORK = 1;
  MOBILE = 2;
}

// Creating a new Person message
Person newPerson = Person {
  name: "John Doe";
  id: 12345;
  email: "johndoe@mail.com";
  
  // Creating repeated PhoneNumber messages
  phones: [
    PhoneNumber {
      number: "123-456-7890";
      type = PhoneType.HOME;
    },
    PhoneNumber {
      number: "098-765-4321";
      type = PhoneType.MOBILE;
    }
  ];
};

// Encoding the newPerson message into a byte array
bytes newPersonBytes = newPerson.toByteArray();

// Decoding a Person message from a byte array
Person decodedPerson = Person.parseFrom(newPersonBytes);

// Creating a new Person message with required fields only
Person requiredPerson = Person {
  name: "Jane Smith";
  id: 54321;
  // email field is not included, will result in an error
};

// Encoding the requiredPerson message into a byte array
bytes requiredPersonBytes = requiredPerson.toByteArray();
message Person {
  // person's information
  string name = 1; // name of person
  int32 age = 2; // age of person
  repeated string email = 3; // list of emails
  Address address = 4; // person's address
}

message Address {
  // address information
  string street = 1; // street name
  string city = 2; // city name
  string state = 3; // state
}

syntax = "proto3";

service PeopleService {
  // people CRUD operations
  rpc GetPersonById(GetPersonRequest) returns (Person) {}
  rpc AddPerson(AddPersonRequest) returns (AddPersonResponse) {}
  rpc UpdatePerson(UpdatePersonRequest) returns (UpdatePersonResponse) {}
  rpc DeletePerson(DeletePersonRequest) returns (DeletePersonResponse) {}
}

message GetPersonRequest {
  // request for getting person
  int32 id = 1; // person's ID
}

message PersonResponse {
  // response for getting person
  Person person = 1; // retrieved person data
}

message AddPersonRequest {
  // request for adding person
  Person person = 1; // person data to be added
}

message AddPersonResponse {
  // response for adding person
  string message = 1; // success message
  int32 person_id = 2; // ID of added person
}

message UpdatePersonRequest {
  // request for updating person
  Person person = 1; // updated person data
}

message UpdatePersonResponse {
  // response for updating person
  string message = 1; // success message
}

message DeletePersonRequest {
  // request for deleting person
  int32 id = 1; // ID of person to be deleted
}

message DeletePersonResponse {
  // response for deleting person
  string message = 1; // success message
}

// wrapper for list of people
message PeopleList {
  repeated Person people = 1; // list of people
}

// wrapper for list of addresses
message AddressesList {
  repeated Address addresses = 1; // list of addresses
}
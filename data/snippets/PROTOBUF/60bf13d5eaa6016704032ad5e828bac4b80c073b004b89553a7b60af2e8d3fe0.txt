syntax = "proto3"; //set syntax to Protobuf version 3
message Book { //create a message type called "Book"
  string title = 1; //add field "title" with tag number 1
  repeated string author = 2; //add repeated field "author" with tag number 2
  int32 pages = 3; //add field "pages" with tag number 3, of type int32
  message Genre { //create a nested message type called "Genre"
    string name = 1; //add field "name" with tag number 1
    repeated string subgenres = 2; //add repeated field "subgenres" with tag number 2
  }
  repeated Genre genres = 4; //add repeated field "genres" of nested message type "Genre" with tag number 4
  map<string, string> extra_info = 5; //add map field "extra_info" with tag number 5, of type string keys and string values
  oneof Format { //create a "oneof" field called "Format"
    string paperback = 6; //add option "paperback" with tag number 6
    string hardcover = 7; //add option "hardcover" with tag number 7
    string ebook = 8; //add option "ebook" with tag number 8
  }
  google.protobuf.Timestamp publish_date = 9; //add field "publish_date" of type google.protobuf.Timestamp with tag number 9 from the Protobuf standard library
  enum Language { //create an enum type called "Language"
    ENGLISH = 0; //add enum option "ENGLISH" with value 0
    FRENCH = 1; //add enum option "FRENCH" with value 1
    GERMAN = 2; //add enum option "GERMAN" with value 2
  }
  Language language = 10; //add field "language" of type "Language" with tag number 10
}

message Library { //create a message type called "Library"
  repeated Book books = 1; //add repeated field "books" of type "Book" with tag number 1
  string location = 2; //add field "location" with tag number 2
  int32 capacity = 3; //add field "capacity" with tag number 3, of type int32
  map<int32, string> librarians = 4; //add map field "librarians" with tag number 4, of type int32 keys and string values
  enum LibraryType { //create an enum type called "LibraryType"
    PUBLIC = 0; //add enum option "PUBLIC" with value 0
    PRIVATE = 1; //add enum option "PRIVATE" with value 1
    ACADEMIC = 2; //add enum option "ACADEMIC" with value 2
  }
  LibraryType type = 5; //add field "type" of type "LibraryType" with tag number 5
}

service BookCatalog { //create a service called "BookCatalog"
  rpc AddBook (Book) returns (Book) {}; //add a method called "AddBook" that takes in a "Book" message and returns a "Book" message
  rpc GetBook (Book) returns (Book) {}; //add a method called "GetBook" that takes in a "Book" message and returns a "Book" message
  rpc DeleteBook (Book) returns (Book) {}; //add a method called "DeleteBook" that takes in a "Book" message and returns a "Book" message
  rpc ListBooks (Library) returns (Library) {}; //add a method called "ListBooks" that takes in a "Library" message and returns a "Library" message
}
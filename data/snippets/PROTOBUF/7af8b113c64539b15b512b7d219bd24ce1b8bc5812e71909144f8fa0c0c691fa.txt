syntax = "proto3"; // the protocol buffer version being used

package tutorial; // the package name used for organization

message Person { // creates a message type called Person

  int32 id = 1; // creates a numeric integer field with identifier "id"

  string name = 2; // creates a string field with identifier "name"

  repeated string nicknames = 3; // creates a repeated string field with identifier "nicknames"

  bool active = 4; // creates a boolean field with identifier "active"

  enum TshirtSize { // creates an enum type called TshirtSize
    SMALL = 0; // assigns a value of 0 to SMALL
    MEDIUM = 1; // assigns a value of 1 to MEDIUM
    LARGE = 2; // assigns a value of 2 to LARGE
    EXTRA_LARGE = 3; // assigns a value of 3 to EXTRA_LARGE
  }

  TshirtSize shirt_size = 5; // creates a field of type TshirtSize with identifier "shirt_size" and assigned a value of SMALL, MEDIUM, LARGE, or EXTRA_LARGE

  oneof pet { // creates a oneof field called pet
    string dog = 6; // creates a string field with identifier "dog"
    string cat = 7; // creates a string field with identifier "cat"
  }

  map<string, int32> phone_numbers = 8; // creates a map field with keys of type string and values of type int32 with identifier "phone_numbers"

  message Address { // creates an embedded message type called Address
    string street = 1; // creates a string field with identifier "street"
    string city = 2; // creates a string field with identifier "city"
    string state = 3; // creates a string field with identifier "state"
    int32 zip = 4; // creates an integer field with identifier "zip"
  }

  Address home_address = 9; // creates a field of type Address with identifier "home_address"

  repeated Address work_addresses = 10; // creates a repeated field of type Address with identifier "work_addresses"

} // end of Person message type
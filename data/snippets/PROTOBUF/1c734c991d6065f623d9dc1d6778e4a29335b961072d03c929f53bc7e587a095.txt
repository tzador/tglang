syntax = "proto3";       //set syntax to version 3

//define a message for a person
message Person {
    string name = 1;     //field for person's name
    int32 age = 2;       //field for person's age
    repeated string hobbies = 3;  //repeated field for person's hobbies
    enum Gender {        //define an enum for person's gender
        MALE = 0;
        FEMALE = 1;
        OTHER = 2;
    }
    Gender gender = 4;   //field for person's gender
    bool isMarried = 5;  //field for person's marriage status
}

//define a message for a company
message Company {
    string name = 1;     //field for company name
    int32 employee_count = 2;  //field for number of employees
    Person owner = 3;    //field for owner of the company, using the Person message defined above
    map<string, string> contacts = 4;  //map field for company's contacts, with key-value pairs for name and email
    repeated Person employees = 5;     //repeated field for all employees, using the Person message defined above
}

/* define a service for managing companies
   with functions for adding, updating and deleting company information */
service CompanyService {
    rpc AddCompany (Company) returns (google.protobuf.Empty);    //method for adding a new company, takes in a Company message and returns an Empty message
    rpc UpdateCompany (Company) returns (google.protobuf.Empty); //method for updating a company's information, takes in a Company message and returns an Empty message
    rpc DeleteCompany (google.protobuf.StringValue) returns (google.protobuf.Empty);   //method for deleting a company, takes in a StringValue (company name) and returns an Empty message
}
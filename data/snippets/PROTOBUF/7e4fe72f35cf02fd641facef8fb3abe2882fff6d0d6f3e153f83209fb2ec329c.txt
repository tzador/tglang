// Define a Message Type
message Person {
    // Fields (properties) of the Message
    string name = 1; // field with a unique identifier
    int32 age = 2; // field with a unique identifier

    enum Gender { // enum for gender options
        MALE = 0;
        FEMALE = 1;
        NON_BINARY = 2;
    }

    // Field for gender, using the enum defined above
    Gender gender = 3;

    // Field for address, defined as a sub-message
    message Address {
        string street = 1;
        string city = 2;
        string country = 3;
    }

    Address address = 4;

    // Field for phone numbers, defined as a repeated field
    repeated string phone_numbers = 5;

    // Field for interests, defined as a repeated field of strings
    repeated string interests = 6;

    // Field for education, defined as a map (key-value pair)
    map<string, string> education = 7;
}

// Create a new Person message and set values for its fields
Person person = new Person();
person.name = "John Doe";
person.age = 28;
person.gender = Person.Gender.MALE;
person.address.street = "123 Main St";
person.address.city = "New York";
person.address.country = "USA";
person.phone_numbers.add("123-456-7890");
person.interests.add("Programming");
person.interests.add("Reading");
person.education["Bachelor's Degree"] = "Computer Science";
person.education["Master's Degree"] = "Data Science";

// Serialize the Person message
byte[] serializedPerson = person.toByteArray();

// Deserialize the Person message
Person deserializedPerson = Person.parseFrom(serializedPerson);
syntax = "proto2"; // declaring the version of protocol buffer
package example; // declaring the package name

 /* defining a message type
  * this message is called Person and it contains 3 fields
  */
message Person {
  required string name = 1; // name field of type string and its field number is 1
  required int32 id = 2; // id field of type int32 and its field number is 2
  optional string email = 3; // email field of type string and its field number is 3
}

// defining a message type that contains a repeated field of type Person
message People {
  repeated Person person = 1; // repeated field of type Person with field number 1
}

// code for serializing a Person into a byte array
extend Person {
  optional bytes serialized_data = 1000; // optional field for storing serialized data
}

// code for deserializing a Person from a byte array
extend Person {
  optional bool is_deserialized = 1001; // optional field for checking if Person is deserialized
}

// defining an enum for different phone types
enum PhoneType {
  MOBILE = 0;
  HOME = 1;
  WORK = 2;
}

// defining a message type that contains a nested enum
message PhoneNumber {
  required string number = 1; // number field of type string and its field number is 1
  optional PhoneType type = 2 [default = HOME]; // type field of type enum PhoneType with default value HOME and field number 2
}

// defining a message type that contains a map of phone numbers
message PhoneBook {
  map<int32, PhoneNumber> phone_book = 1; // map field with key as int32 and value as PhoneNumber with field number 1
}
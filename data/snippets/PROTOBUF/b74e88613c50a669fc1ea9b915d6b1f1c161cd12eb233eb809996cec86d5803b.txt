syntax = "proto3";
/* The syntax line specifies the version of the Protobuf language used. It's important to specify as different versions have minor syntactical differences that can cause issues. */
package addressbook;

/* The package declaration helps organize and differentiate different message types. In this case, we are declaring the addressbook package. */
option optimize_for = SPEED;

/* The optimize_for option specifies how Protobuf should optimize the encoding and decoding of messages. In this case, we are optimizing for speed, but other options include CODE_SIZE and LITE_RUNTIME. */
import "google/protobuf/timestamp.proto";

/* The import statement allows us to use different message types that are defined in other .proto files. In this case, we are importing the timestamp message type from the timestamp.proto file. */
message Person {
  /* This is the Person message type, which will be used to store information about a single person in an address book. */
  string name = 1;
  /* The name field is a string type with a field number of 1. Field numbers are used to identify fields in the encoded message and must be unique within a message type. */
  int32 id = 2;
  /* The id field is an int32 type with a field number of 2. */
  string email = 3;
  /* The email field is a string type with a field number of 3. */
  repeated string phone_numbers = 4;
  /* The phone_numbers field is a repeated string type with a field number of 4. This means it can hold multiple phone numbers for a single person. */
  google.protobuf.Timestamp last_updated = 5;
  /* The last_updated field is a timestamp type from the imported timestamp.proto file with a field number of 5. This field will store the last time the Person message was updated. */
}

/* A message type can also contain nested message types for more complex data structures. */
message AddressBook {
  /* This is the AddressBook message type, which will contain a list of Person message types. */
  repeated Person people = 1;
  /* The people field is a repeated Person type with a field number of 1. This means it can hold multiple Person message types. */
}
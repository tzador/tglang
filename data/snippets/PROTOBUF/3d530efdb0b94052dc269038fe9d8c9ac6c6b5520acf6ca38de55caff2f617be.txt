syntax = "proto3"; 
// sets the syntax to proto3 for defining messages and services

// defines a message for a user
message User {
  string name = 1; // field with tag number 1 for storing user's name
  int32 age = 2; // field with tag number 2 for storing user's age
  repeated string interests = 3; // repeated field with tag number 3 for storing user's interests
  Address address = 4; // field with tag number 4 for storing user's address
}

// defines a message for user's address
message Address {
  string street = 1; // field with tag number 1 for storing street name
  int32 number = 2; // field with tag number 2 for storing house number
  string city = 3; // field with tag number 3 for storing city name
  string state = 4; // field with tag number 4 for storing state name
  string country = 5; // field with tag number 5 for storing country name
}

// defines a service for user management
service UserManager {
  rpc AddUser(User) returns (User) {} // rpc function for adding a user, takes a User message as input and returns a User message as output
  rpc GetUser(string) returns (User) {} // rpc function for getting a user, takes a string (username) as input and returns a User message as output
  rpc DeleteUser(string) returns (User) {} // rpc function for deleting a user, takes a string (username) as input and returns a User message as output
  rpc UpdateUser(User) returns (User) {} // rpc function for updating a user, takes a User message as input and returns a User message as output
}
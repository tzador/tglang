// Define a complex message with nested fields
message ComplexMessage {
    required string name = 1;                        // Name of the message
    required int32 id = 2;                           // ID of the message
    optional int64 timestamp = 3;                    // Timestamp of the message
    repeated string tags = 4;                        // List of tags for the message
    repeated ComplexChildMessage children = 5;       // List of child messages
}

// Define a nested message
message ComplexChildMessage {
    optional string child_name = 1;                  // Name of the child message
    repeated string values = 2;                      // List of values for the child message
}

// Serialize a ComplexMessage object into a byte array
ComplexMessage myMessage = {                        // Create a new ComplexMessage object
    name: "My Message",
    id: 1,
    timestamp: 1593638638,
    tags: ["important", "urgent"],
    children: [                                     // Add child messages to the children field
        {
            child_name: "Child 1",
            values: ["foo", "bar"]
        },
        {
            child_name: "Child 2",
            values: ["hello", "world"]
        }
    ]
};

bytes myMessageBytes = myMessage.SerializeToString();  // Serialize the object into a byte array

// Deserialize a byte array into a ComplexMessage object
ComplexMessage deserializedMessage;
deserializedMessage.ParseFromString(myMessageBytes);    // Parse the byte array into a ComplexMessage object
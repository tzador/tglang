// Define a message 'Person'
message Person {
  string name = 1; // Field name 'name' with tag number 1
  int32 id = 2; // Field name 'id' with tag number 2
  string email = 3; // Field name 'email' with tag number 3
}

// Define a message 'Address'
message Address {
  string street = 1; // Field name 'street' with tag number 1
  string city = 2; // Field name 'city' with tag number 2
  string state = 3; // Field name 'state' with tag number 3
}

// Define a message 'Company'
message Company {
  string name = 1; // Field name 'name' with tag number 1
  Address address = 2; // Field name 'address' with tag number 2
  repeated Person employees = 3; // Field name 'employees' with tag number 3, allows for multiple values
}

// Create a Person object with name, id, and email
Person person = Person {
  name: "John Smith",
  id: 123,
  email: "johnsmith@example.com"
};

// Serialize the person object into a byte array
bytes serialized_person = person.SerializeAsString();

// Create an Address object with street, city, and state
Address address = Address {
  street: "123 Main St.",
  city: "New York",
  state: "NY"
};

// Serialize the address object into a byte array
bytes serialized_address = address.SerializeAsString();

// Create a Company object with name, address, and employees
Company company = Company {
  name: "ABC Inc.",
  address: address,
  employees: [person] // Add the previously created person object as an employee
};

// Serialize the company object into a byte array
bytes serialized_company = company.SerializeAsString();

// Deserialize a person object from the byte array
Person deserialized_person = Person{};

// Parse the byte array into the person object
deserialized_person.ParseFromString(serialized_person);

// Print the name of the deserialized person
print(deserialized_person.name); // Output: John Smith
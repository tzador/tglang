// Example .proto file for address book

syntax = "proto3";

// Define a message type for a person
message Person {
  string name = 1; // Unique integer field number
  int32 id = 2;
  string email = 3;

  enum Gender {
    MALE = 0;
    FEMALE = 1;
    UNKNOWN = 2;
  }

  Gender gender = 4;

  // Define a message type for a phone number
  message PhoneNumber {
    string number = 1;
    string type = 2; // Describes the type of phone number

    enum PhoneType {
      MOBILE = 0;
      HOME = 1;
      WORK = 2;
      UNKNOWN = 3;
    }

    PhoneType phone_type = 3;
  }

  // Field for a repeated list of phone numbers
  repeated PhoneNumber phones = 5;

  // Field for a sub-message type that is nested within the Person message
  message SubMessage {
    string data = 1;
    int32 num = 2;
  }

  // Field for a map of strings to sub-message types
  map<string, SubMessage> sub_messages = 6;

  // Field for an optional sub-message type
  SubMessage optional_message = 7;
}

// Define a message type for an address book containing a repeated list of people
message AddressBook {
  repeated Person people = 1;
}

// Example protocol buffer message object
Person person = {
  name: "John";
  id: 123;
  email: "john@example.com";
  gender: MALE;
  phones: {
    number: "555-1234";
    type: HOME;
    phone_type: MOBILE;
  }
  phones: {
    number: "555-5678";
    type: WORK;
    phone_type: HOME;
  }
  sub_messages: {
    key: "key1";
    value: {
      data: "data1";
      num: 1;
    }
  }
  sub_messages: {
    key: "key2";
    value: {
      data: "data2";
      num: 2;
    }
  }
  optional_message: {
    data: "optional data";
    num: 3;
  }
};

// Serializing the message to a byte array
bytes serialized_person = person.serialize();

// Deserializing the byte array back into a Person object
Person deserialized_person = Person.deserialize(serialized_person);
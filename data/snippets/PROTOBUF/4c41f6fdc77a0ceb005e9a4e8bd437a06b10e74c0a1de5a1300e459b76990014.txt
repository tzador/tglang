// Define a message type for a car
message Car {
  string make = 1; // first field, used for make of car
  string model = 2; // second field, used for model of car
  int32 year = 3; // third field, used for year of car
  repeated string features = 4; // fourth field, used for list of car features
  map<string, float> prices = 5; // fifth field, used for mapping prices to car features

  // nested message type for car owner
  message Owner {
    string name = 1; // first field, used for name of car owner
    int32 age = 2; // second field, used for age of car owner
    repeated string contact = 3; // third field, used for list of contact information for car owner
  }

  Owner owner = 6; // sixth field, used for the car's owner
  enum Condition { // enum for car condition
    USED = 0;
    NEW = 1;
    BROKEN = 2;
  }

  Condition condition = 7; // seventh field, used for car condition
}
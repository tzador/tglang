// Example of how to define a message in PROTOBUF syntax
message Person {
    string name = 1; // field of type string with field number 1
    int32 age = 2; // field of type int32 with field number 2
    repeated string favorite_colors = 3; // repeated field of type string with field number 3
    Address address = 4; // nested message field with field number 4

    // Optional fields can be marked with the keyword "optional"
    optional string phone_number = 5;

    // Required fields can be marked with the keyword "required"
    required string email = 6;

    // Enum fields can be defined using the "enum" keyword
    enum Gender {
        MALE = 0;
        FEMALE = 1;
        OTHER = 2;
    }

    optional Gender gender = 7; // optional field of type enum with field number 7

    // Oneof fields can be defined using the "oneof" keyword
    // Oneof fields can only have one of the specified subfields set at a time
    oneof AddressType {
        string home_address = 8;
        string work_address = 9;
    }

    // Maps can be defined using the "map" keyword
    map<string, int32> favorite_numbers = 10; // map with key type string and value type int32 with field number 10
}

// Example of how to define a service in PROTOBUF syntax
service Greeter {
    // Unary rpc method
    rpc SayHello(HelloRequest) returns (HelloResponse);

    // Server streaming rpc method
    rpc GetRandomNumbers(RandomNumbersRequest) returns (stream RandomNumber);

    // Client streaming rpc method
    rpc RecordData(stream DataRecord) returns (DataRecordStatus);

    // Bidirectional streaming rpc method
    rpc Chat(stream ChatMessage) returns (stream ChatMessage);
}
// Define a message type
message Person {
  string name = 1;          // field number 1
  int32 age = 2;            // field number 2
  repeated string hobbies = 3;   // field number 3, repeated for multiple hobbies
  Address address = 4;      // field number 4, representing nested message type Address
  enum Gender {             // defining an enum type
    MALE = 0;
    FEMALE = 1;
  }
  Gender gender = 5;        // field number 5, representing enum type Gender
}

// Define a message type for nested message Address
message Address {
  string street = 1;        // field number 1
  string city = 2;          // field number 2
  repeated string phone_numbers = 3;     // field number 3, repeated for multiple phone numbers
}

// Sample message instance
Person person = {
  name: "John",
  age: 25,
  hobbies: ["hiking", "reading", "coding"],
  address: {
    street: "123 Main St",
    city: "New York",
    phone_numbers: ["123-456-7890", "987-654-3210"]
  },
  gender: MALE
}

// Encoding the message instance into a byte array
Person personTwo = {
  name: "Jane",
  age: 30,
  hobbies: ["painting", "cooking"],
  address: {
    street: "456 Maple Ave",
    city: "Los Angeles",
    phone_numbers: ["999-888-7777"]
  },
  gender: FEMALE
}

// Serializing the message using Protobuf encoder
byte[] encodedPerson = personTwo.SerializeToByteArray();

// Decoding the byte array to get back the original message instance
Person decodedPerson = Person.ParseFrom(encodedPerson);
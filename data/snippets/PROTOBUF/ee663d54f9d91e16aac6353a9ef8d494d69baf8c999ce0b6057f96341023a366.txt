package example; // defining the package for the protocol buffer

syntax = "proto2"; // defining the syntax version of protocol buffer used in this file

message Person { // defining a message
  required string name = 1; // defining a required string field with tag number 1
  required int32 id = 2; // defining a required integer field with tag number 2
  optional string email = 3; // defining an optional string field with tag number 3
}

message AddressBook { // defining another message
  repeated Person people = 1; // defining a repeated field which contains multiple instances of the Person message
}

// encoding example:
Person person = Person(); // creating an instance of the Person message
person.name = "John Smith"; // setting the name field
person.id = 12345; // setting the id field
person.email = "john.smith@example.com"; // setting the email field

AddressBook address_book = AddressBook(); // creating an instance of the AddressBook message
address_book.people.add(person); // adding the person to the AddressBook

// serializing the message
string serialized_message = address_book.SerializeAsString(); // converting the message to a string using Serialization method

// decoding example:
AddressBook address_book_decoded = AddressBook(); // creating an instance of the AddressBook message
address_book_decoded.ParseFromString(serialized_message); // converting the string back to a message using the ParseFromString method

Person decoded_person = address_book_decoded.people[0]; // accessing the first element in the repeated field
// printing the values of the fields
System.out.println("Name: " + decoded_person.name);
System.out.println("ID: " + decoded_person.id);
System.out.println("Email: " + decoded_person.email);
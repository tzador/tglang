syntax = "proto3";

message User {
    string name = 1;
    int32 age = 2;
    repeated string hobbies = 3;
    repeated Address addresses = 4; // custom message type

    enum Gender { // nested enum declaration
        UNKNOWN = 0;
        MALE = 1;
        FEMALE = 2;
    }

    Gender gender = 5;
    map<int32, string> phone_numbers = 6; // map field
}

message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string country = 4;
}

// example of a service definition
service UserService {
    // server-side streaming method
    rpc GetUsers (Empty) returns (stream User) {}

    // client-side streaming method
    rpc AddUser (stream AddUserRequest) returns (User) {}

    // bidirectional streaming method
    rpc ModifyUser (stream ModifyUserRequest) returns (stream User) {}
}

// example of an enum declaration
enum ErrorCode {
    OK = 0;
    INVALID_REQUEST = 1;
    SERVER_ERROR = 2;
    PERMISSION_DENIED = 3;
    NOT_FOUND = 4;
}

// example of a oneof declaration
message Book {
    oneof book_details {
        string title = 1;
        string author = 2;
        string isbn = 3;
    }
}
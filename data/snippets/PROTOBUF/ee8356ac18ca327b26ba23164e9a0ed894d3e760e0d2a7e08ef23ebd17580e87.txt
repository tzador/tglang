***// Define a message that represents a person***

message Person {
    string name = 1; // field number 1
    int32 age = 2; // field number 2
    repeated string hobbies = 3; // field number 3, can have multiple values
    map<string, string> contact_info = 4; // field number 4, key-value pairs for contact information
    enum Gender { // nested enum for gender
        FEMALE = 0;
        MALE = 1;
        OTHER = 2;
    }
    Gender gender = 5; // field number 5, enum type
}

***// Define a message that represents a company***
message Company {
    string name = 1; // field number 1
    repeated Person employees = 2; // field number 2, can have multiple values of type Person
    map<string, string> departments = 3; // field number 3, key-value pairs for department names and IDs
    oneof Benefits { // nested oneof for employee benefits
        string health_insurance = 4; // can have a string value for health insurance provider
        float pension_plan = 5; // can have a float value for pension plan percentage
    }
    repeated string locations = 6; // field number 6, can have multiple values for company locations
}

***// Define a field mask for partial updates***
// In this case, only the name and age fields of a person can be updated
// Cannot update the hobby or contact_info fields
message PersonFieldMask {
    bool update_name = 1; // field number 1
    bool update_age = 2; // field number 2
    // other fields can be added here for more specific updates
}
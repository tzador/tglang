// Creating a message type
message Employee { 
  int32 id = 1; // unique ID for employee
  string name = 2; // employee's full name
  string department = 3; // employee's department
  repeated int32 phone_numbers = 4; // employee's phone numbers, can have multiple 
  enum Status { // employee's status
    ACTIVE = 0;
    INACTIVE = 1;
    ON_VACATION = 2;
  } 
  Status current_status = 5;
}

// Encoding data into the message
Employee employee = Employee(); // create an employee message
employee.id = 12345; // set employee's ID to 12345
employee.name = "John Smith"; // set employee's name to John Smith
employee.department = "Sales"; // set employee's department to Sales
employee.phone_numbers = [5551111, 5552222]; // add two phone numbers to employee
employee.current_status = Employee.Status.ACTIVE; // set employee's status to ACTIVE

// Serializing the message into byte data
byte[] encoded_data = employee.SerializeToString(); // serialize employee message into byte array

// Deserializing the data into a message
Employee decoded_employee = Employee(); // create an employee message
decoded_employee.ParseFromString(encoded_data); // deserialize the byte data into the employee message
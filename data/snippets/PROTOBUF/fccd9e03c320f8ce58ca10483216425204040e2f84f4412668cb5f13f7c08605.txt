syntax = "proto3";     // specifying the syntax version of the protobuf
package myPackage;     // declaring the package name for the generated code

// defining a message named "User"
message User {
    string name = 1;   // field named "name" with a field number of 1 and data type string
    int32 age = 2;     // field named "age" with a field number of 2 and data type int32
    repeated string hobbies = 3;    // field named "hobbies" which is a repeated field of strings with a field number of 3
    enum Gender {       // declaring an enum type named "Gender"
        MALE = 0;
        FEMALE = 1;
    }
    Gender gender = 4;   // field named "gender" with a field number of 4 and data type Gender
    map<string, string> address = 5;   // field named "address" mapped to key-value pairs of strings with a field number of 5
}

// defining a request message for creating a user
message CreateUserRequest {
    User user = 1;    // field named "user" with a field number of 1 and data type User
}

// defining a response message for creating a user
message CreateUserResponse {
    string message = 1;    // field named "message" with a field number of 1 and data type string
    bool success = 2;      // field named "success" with a field number of 2 and data type bool
}

// defining a service named "UserService" for handling CRUD operations on users
service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);   // defining a unary rpc method for creating a user. "returns" specifies the response message type
    rpc GetUser(GetUserRequest) returns (GetUserResponse);   // defining a unary rpc method for getting a user
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);   // defining a unary rpc method for updating a user
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);   // defining a unary rpc method for deleting a user
}

// defining a message for retrieving a user
message GetUserRequest {
    string user_id = 1;   // field named "user_id" with a field number of 1 and data type string
}

// defining a response message for retrieving a user
message GetUserResponse {
    User user = 1;   // field named "user" with a field number of 1 and data type User
}

// defining a message for updating a user
message UpdateUserRequest {
    string user_id = 1;   // field named "user_id" with a field number of 1 and data type string
    User updatedUser = 2;    // field named "updatedUser" with a field number of 2 and data type User
}

// defining a response message for updating a user
message UpdateUserResponse {
    string message = 1;    // field named "message" with a field number of 1 and data type string
    bool success = 2;      // field named "success" with a field number of 2 and data type bool
}

// defining a message for deleting a user
message DeleteUserRequest {
    string user_id = 1;   // field named "user_id" with a field number of 1 and data type string
}

// defining a response message for deleting a user
message DeleteUserResponse {
    string message = 1;    // field named "message" with a field number of 1 and data type string
    bool success = 2;      // field named "success" with a field number of 2 and data type bool
}
message Person { // define a message named Person

  string name = 1; // field (tag number of 1) for storing a string value
  int32 age = 2;   // field (tag number of 2) for storing an integer value

  // oneof Keyword
  oneof data { // define a oneof field named data
    string country = 3; // subfield for storing a string value
    repeated string interests = 4;  // subfield for storing an array of strings
  }

  message Address { // define a nested message named Address
    string street = 1; // field (tag number of 1) for storing a string value
    string city = 2; // field (tag number of 2) for storing a string value
  }

  repeated Address addresses = 5; // field (tag number of 5) for storing an array of Address messages
}

// serialization code
Person person = new Person(); // create a new Person message
person.name = "John Doe"; // set name field to "John Doe"
person.age = 25; // set age field to 25
person.country = "USA"; // set country field to "USA"
person.interests = ["hiking", "reading"]; // set interests field to an array of strings
Person.Address address1 = new Person.Address(); // create a new Address message
address1.street = "123 Main St"; // set street field to "123 Main St"
address1.city = "New York"; // set city field to "New York"
person.addresses.push(address1); // add address1 to addresses array
Person.Address address2 = new Person.Address(); // create a new Address message
address2.street = "456 Park Ave"; // set street field to "456 Park Ave"
address2.city = "Los Angeles"; // set city field to "Los Angeles"
person.addresses.push(address2); // add address2 to addresses array
byte[] serializedPerson = person.Serialize(); // serialize Person message into a byte array

// deserialization code
Person deserializedPerson = Person.ParseFrom(serializedPerson); // deserialize byte array into a new Person message
string name = deserializedPerson.name; // retrieve name field from deserializedPerson
int32 age = deserializedPerson.age; // retrieve age field from deserializedPerson
string country = deserializedPerson.country; // retrieve country field from deserializedPerson
repeated string interests = deserializedPerson.interests; // retrieve interests field from deserializedPerson
foreach (Person.Address address in deserializedPerson.addresses) { // loop through addresses array
  string street = address.street; // retrieve street field from address
  string city = address.city; // retrieve city field from address
}
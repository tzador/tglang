message Person { // defines a `Person` data structure 
  string name = 1; // defines a field `name` of type string with a tag of 1 for identification 
  int32 age = 2; // defines a field `age` of type `int32` with a tag of 2 
  repeated string address = 3; // defines a repeated field `address` of type string with a tag of 3 
  enum DataType { // defines an enum `DataType` 
    UNKNOWN = 0; // assigns the value of 0 to `UNKNOWN` 
    TEXT = 1; // assigns the value of 1 to `TEXT`
    NUMERIC = 2; // assigns the value of 2 to `NUMERIC`
    BOOLEAN = 3; // assigns the value of 3 to `BOOLEAN`
  }
  map<string, DataType> attributes = 4; // defines a map `attributes` with key of type string and value of type `DataType` with a tag of 4

  oneof value { // defines a oneof `value` for mutually exclusive fields
    string text = 5; // defines a field `text` of type string with a tag of 5, exclusive with fields `number` and `boolean`
    int32 number = 6; // defines a field `number` of type `int32` with a tag of 6, exclusive with fields `text` and `boolean`
    bool boolean = 7; // defines a field `boolean` of type `bool` with a tag of 7, exclusive with fields `text` and `number`
  }

  extensions 100 to max; // defines extension ranges for future compatibility, starting at tag 100 
}
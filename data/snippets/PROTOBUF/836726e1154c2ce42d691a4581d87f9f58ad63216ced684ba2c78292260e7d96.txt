syntax = "proto3";

// defining the message type
message Student {
  string first_name = 1;
  string last_name = 2;
  int32 age = 3;
  repeated string courses = 4;
  map<string, int32> grades = 5;
}

// defining the enum
enum Grade {
  A = 0;
  B = 1;
  C = 2;
  D = 3;
  F = 4;
}

// creating a service
service StudentService { 
  rpc AddStudent (Student) returns (string) {} 
}

// main function for adding a student
function AddStudent (firstName, lastName, age, courses, grades) {
  const student = Student {
    first_name = firstName;
    last_name = lastName;
    age = age;
    courses = courses;
    grades = grades;
  }
  // encode the data to protobuf format
  const protoData = Student.encode(student).finish();
  // send the data through gRPC to the StudentService AddStudent method
  StudentService.AddStudent(protoData, (err, response) => {
    if (err) {
      console.log(err);
    } else {
      console.log(response);
    }
  })
}
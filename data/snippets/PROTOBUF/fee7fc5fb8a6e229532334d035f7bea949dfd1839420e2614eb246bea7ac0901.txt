// Defining a message type for a user

message User {
  string name = 1; // name field with tag number 1
  int32 age = 2; // age field with tag number 2
  repeated string hobbies = 3; // repeated hobbies fields with tag number 3
  Address address = 4; // nested message type 'Address' with tag number 4

  enum Role { // enum type for user's role
    DEFAULT = 0; // default role with value 0
    ADMIN = 1; // admin role with value 1
    MANAGER = 2; // manager role with value 2
  }

  Role role = 5; // field for user's role with tag number 5
  map<string, int> friends = 6; // map field with key type string and value type int with tag number 6
}

// Nested message type for user's address
message Address {
  string street = 1; // street field with tag number 1
  string city = 2; // city field with tag number 2
  string state = 3; // state field with tag number 3
}

// Generating a protobuf message for a user
User myUser = {
  name: "John",
  age: 30,
  hobbies: ["coding", "reading"],
  address: {
    street: "Main Street",
    city: "New York",
    state: "NY"
  },
  role: ADMIN,
  friends: {
    "Jane": 12345,
    "Bob": 67890
  }
};

// Encoding the message into a byte array
bytes[] userBytes = myUser.Serialize();

// Decoding the byte array back into a protobuf message
User newuser = User.Parse(userBytes);
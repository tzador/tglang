syntax = "proto3";

// definition of a student message
message Student {

  // fields of student message
  string name = 1; // field number 1 of type string
  int32 age = 2; // field number 2 of type int32
  string address = 3; // field number 3 of type string

  // nested message for courses
  message Course {
    string title = 1; // field number 1 of type string
    string code = 2; // field number 2 of type string
  }

  // repeated field for courses
  repeated Course courses = 4; // field number 4 of type repeated with nested message Course

  // enum for grade
  enum Grade {
    A = 0; // enum value 0
    B = 1; // enum value 1
    C = 2; // enum value 2
    D = 3; // enum value 3
    F = 4; // enum value 4
  }

  // map field for grades with keys as strings and values as Grade enum
  map<string, Grade> grades = 5; // field number 5 of type map with key type string and value type Grade enum
}
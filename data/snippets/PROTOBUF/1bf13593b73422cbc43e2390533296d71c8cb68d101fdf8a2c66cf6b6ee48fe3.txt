syntax = "proto3";

// creating a message type 'Person'
message Person { 
    string name = 1; // string field 'name' with tag number 1
    int32 age = 2; // integer field 'age' with tag number 2
    repeated string email = 3; // repeated string field 'email' with tag number 3 (can have multiple values)
    enum Occupation { // enum field 'occupation'
        STUDENT = 0; 
        TEACHER = 1;
        ENGINEER = 2;
    }
    Occupation occupation = 4; // occupation field with tag number 4
    map<string, int32> favorite_numbers = 5; // map field 'favorite_numbers' with tag number 5 (key type: string, value type: int32)
    oneof Digits { // oneof field 'Digits' (can only have one of the following fields)
        int32 lucky_number = 6; // integer field 'lucky_number' with tag number 6
        string phone_number = 7; // string field 'phone_number' with tag number 7
    }
}

// creating a message type 'Address'
message Address {
    string street = 1; // string field 'street' with tag number 1
    string city = 2; // string field 'city' with tag number 2
    string state = 3; // string field 'state' with tag number 3
    int32 zip_code = 4; // integer field 'zip_code' with tag number 4
}

// creating a message type 'Contact'
message Contact {
    Person person = 1; // person field with tag number 1
    Address address = 2; // address field with tag number 2
    repeated Person family_members = 3; // repeated person field 'family_members' with tag number 3 (can have multiple values)
    oneof Communication { // oneof field 'Communication' (can only have one of the following fields)
        string email = 4; // string field 'email' with tag number 4
        string phone_number = 5; // string field 'phone_number' with tag number 5
    }
}

// creating a message type 'ContactList'
message ContactList {
    repeated Contact contacts = 1; // repeated contact field 'contacts' with tag number 1 (can have multiple values)
}
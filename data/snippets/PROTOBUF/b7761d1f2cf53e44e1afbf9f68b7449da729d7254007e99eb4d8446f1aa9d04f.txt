syntax = "proto3";                    // set syntax to proto3
package example;                      // set package name

message Person {                      // define message type Person

  required string name = 1;           // define required field 'name' of type string with field number 1
  optional int32 age = 2;             // define optional field 'age' of type int32 with field number 2
  repeated string interests = 3;      // define repeated field 'interests' of type string with field number 3
  
  oneof job_info {                    // define oneof group 'job_info' which contains one and only one field
    string current_job = 4;           // define field 'current_job' of type string with field number 4
    Job previous_job = 5;             // define field 'previous_job' of type Job with field number 5 (Job is a defined message type)
  }                                   // end of oneof group 'job_info'
  
  message Job {                       // define message type Job
    required string company = 1;      // define required field 'company' of type string with field number 1
    optional int32 years = 2;         // define optional field 'years' of type int32 with field number 2
  }                                   // end of message type Job
  
  map<string, Address> addresses = 6; // define map field 'addresses' of type Address with field number 6 
                                      // (Address is a defined message type, string is the key type)
}                                     // end of message type Person

message Address {                     // define message type Address
  required string street = 1;         // define required field 'street' of type string with field number 1
  optional string city = 2;           // define optional field 'city' of type string with field number 2
  optional string country = 3;        // define optional field 'country' of type string with field number 3
  optional string zip_code = 4;       // define optional field 'zip_code' of type string with field number 4
}                                     // end of message type Address

enum PhoneType {                      // define enum type PhoneType
  MOBILE = 0;                         // define options with assigned values
  HOME = 1;
  WORK = 2;
}

message PhoneNumber {                 // define message type PhoneNumber
  string number = 1;                  // define field 'number' of type string with field number 1
  PhoneType type = 2;                 // define field 'type' of type PhoneType (enum) with field number 2
}                                     // end of message type PhoneNumber

message ContactList {                 // define message type ContactList
  repeated Person contacts = 1;       // define repeated field 'contacts' of type Person with field number 1
  repeated PhoneNumber phoneNumbers = 2; // define repeated field 'phoneNumbers' of type PhoneNumber with field number 2
}                                     // end of message type ContactList
syntax = "proto2"; //set syntax to proto2

message Person { //create message object Person
  required string name = 1; //set required field "name" with tag number 1
  required int32 age = 2; //set required field "age" with tag number 2
  optional string address = 3; //set optional field "address" with tag number 3
  repeated string interests = 4; //set repeated field "interests" with tag number 4
}

message Address { //create message object Address
  required string street = 1; //set required field "street" with tag number 1
  required string city = 2; //set required field "city" with tag number 2
  required string state = 3; //set required field "state" with tag number 3
}

message Friends { //create message object Friends
  repeated Person friend = 1; //set repeated inner message "Person" with tag number 1
  required int32 total_friends = 2; //set required field "total_friends" with tag number 2
  optional Address current_location = 3; //set optional inner message "Address" with tag number 3
}

enum Gender { //create enum for gender
  MALE = 0; //set enum value for MALE to 0
  FEMALE = 1; //set enum value for FEMALE to 1
  OTHER = 2; //set enum value for OTHER to 2
}

extend Person { //extend Person message object
  optional Gender gender = 4; //add optional field "gender" of type enum Gender with tag number 4
}

service PersonService { //create service object PersonService
  rpc AddPerson(Person) returns (Person); //create rpc method AddPerson with input and output of type Person
  rpc UpdatePerson(Person) returns (Person); //create rpc method UpdatePerson with input and output of type Person
  rpc GetPersonByName(string) returns (Person); //create rpc method GetPersonByName with input of type string and output of type Person
  rpc GetPersonByAge(int32) returns (repeated Person); //create rpc method GetPersonByAge with input of type int32 and output of type repeated Person
}
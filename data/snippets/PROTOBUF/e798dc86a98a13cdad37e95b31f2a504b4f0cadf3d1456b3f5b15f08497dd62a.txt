// Define message to store user information
message User {
  string name = 1; // user's name
  int32 age = 2; // user's age
  repeated string interests = 3; // list of user's interests
  repeated Education education = 4; // list of user's education background

  // Define nested message for education
  message Education {
    string degree = 1; // degree level
    string major = 2; // major studied
    repeated string courses = 3; // list of relevant courses
  }
}

// Define message for sending user data
message UserData {
  repeated User users = 1; // list of users to send data for
  string message = 2; // optional message to include with data
  repeated string categories = 3; // list of data categories to include
}

// Create instance of UserData and add user data
UserData userData = new UserData();
User user1 = new User();
user1.name = "John Doe";
user1.age = 25;
user1.interests.push("Hiking");
user1.interests.push("Cooking");

User.Education education1 = new User.Education();
education1.degree = "Bachelor's";
education1.major = "Computer Science";
education1.courses.push("Programming");
education1.courses.push("Database Management");
user1.education.push(education1);

userData.users.push(user1);

// Serialize userData to send over network
byte[] serializedData = userData.SerializeToString();

// Deserialize received data
UserData receivedData = new UserData();
receivedData.ParseFrom(serializedData);

// Access user data in receivedData
for (int i = 0; i < receivedData.users.size(); i++) {
  User user = receivedData.users[i];
  string name = user.name;
  int32 age = user.age;
  repeated string interests = user.interests;
  repeated User.Education education = user.education;
}
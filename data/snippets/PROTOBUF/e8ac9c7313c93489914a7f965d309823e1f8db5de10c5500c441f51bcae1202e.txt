// Example of a proto file containing a message type
syntax = "proto3";

message Person {
  string name = 1; // The person's full name
  int32 age = 2; // Optional age field
  repeated string hobbies = 3; // List of hobbies
  Address address = 4; // Nested message type for person's address
  enum Gender { // Enum type for person's gender
    MALE = 0;
    FEMALE = 1;
  }
  map<string, string> contact_info = 5; // Map of contact information
}

// Nested message type for person's address
message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  int32 zip_code = 4;
}

// Example of a proto file containing a service definition
service Calculator {
  rpc Add (Numbers) returns (Result) {}
  rpc Subtract (Numbers) returns (Result) {}
  rpc Multiply (Numbers) returns (Result) {}
  rpc Divide (Numbers) returns (Result) {}
}

// Message type for request and response data
message Numbers {
  int32 num1 = 1;
  int32 num2 = 2;
}

// Message type for result data
message Result {
  int32 result = 1;
}
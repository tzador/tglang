syntax = "proto3"; // specifies the syntax used for the proto file
package sample; // specifies the package name for the generated code

// creates a message called Person containing fields for name, age, and address
message Person {
    string name = 1; // specifies that the name field is of type string and has a field number of 1
    int32 age = 2; // specifies that the age field is of type int32 and has a field number of 2
    string address = 3; // specifies that the address field is of type string and has a field number of 3
}

// creates a message called House containing fields for owner and address
message House {
    Person owner = 1; // specifies that the owner field is of type Person and has a field number of 1
    string address = 2; // specifies that the address field is of type string and has a field number of 2
}

// creates a message called Family containing fields for parents and children
message Family {
    repeated Person parents = 1; // specifies that the parents field is a repeated field of type Person and has a field number of 1
    repeated Person children = 2; // specifies that the children field is a repeated field of type Person and has a field number of 2
}

// creates an enum called Color with values for red, blue, and green
enum Color {
    red = 0; // specifies that red has a value of 0
    blue = 1; // specifies that blue has a value of 1
    green = 2; // specifies that green has a value of 2
}

// creates a service called UserService with methods for adding, updating, and deleting users
service UserService {
    rpc AddUser (Person) returns (House); // specifies that the AddUser method takes in a Person message and returns a House message
    rpc UpdateUser (Person) returns (House); // specifies that the UpdateUser method takes in a Person message and returns a House message
    rpc DeleteUser (Person) returns (House); // specifies that the DeleteUser method takes in a Person message and returns a House message
}
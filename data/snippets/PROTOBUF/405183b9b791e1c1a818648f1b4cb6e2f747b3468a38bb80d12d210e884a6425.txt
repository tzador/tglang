//Define Employee message
message Employee {
  string first_name = 1; //field for first name
  string last_name = 2; //field for last name
  int32 age = 3; //field for age
  float salary = 4; //field for salary
  repeated string hobbies = 5; //field for hobbies (can have multiple values)
  enum Department {
    SALES = 0;
    MARKETING = 1;
    IT = 2;
  }
  Department department = 6; //field for department, using enum type
  map<string, string> contact_info = 7; //field for contact information, using map type
}

//Serialize employee object to binary format
Employee employee = new Employee();
employee.first_name = "John";
employee.last_name = "Smith";
employee.age = 30;
employee.salary = 50000.00;
employee.hobbies = ["hiking", "reading"];
employee.department = Employee.Department.IT;
employee.contact_info["email"] = "john.smith@email.com";
employee.contact_info["phone"] = "123-456-7890";

//Encode employee object using Protobuf library
byte[] serialized_employee = employee.Serialize(); //output

//Deserialize employee object from binary format
Employee new_employee = Employee.Deserialize(serialized_employee);

//Print employee information
Console.WriteLine($"First name: {new_employee.first_name}");
Console.WriteLine($"Last name: {new_employee.last_name}");
Console.WriteLine($"Age: {new_employee.age}");
Console.WriteLine($"Salary: {new_employee.salary}");
Console.WriteLine("Hobbies: ");
foreach (string hobby in new_employee.hobbies) {
  Console.WriteLine(hobby);
}
Console.WriteLine($"Department: {new_employee.department}");
Console.WriteLine("Contact information:");
foreach (KeyValuePair<string, string> contact in new_employee.contact_info) {
  Console.WriteLine($"{contact.Key}: {contact.Value}");
}
// Define a message
message Person {
  string name = 1; // name field with tag number 1
  int32 age = 2; // age field with tag number 2
  repeated string hobbies = 3; // hobbies field as a repeated string
  map<string, string> phone_numbers = 4; // phone_numbers field as a map with string keys and values
  enum Gender { // enum type for gender
    MALE = 0;
    FEMALE = 1;
    OTHER = 2;
  }
  Gender gender = 5; // gender field with enum type
  bool is_active = 6; // is_active field with boolean type
}

//Encode message into a byte array
Person myPerson = {
  name: "John",
  age: 25,
  hobbies: ["reading", "running", "gaming"],
  phone_numbers: {
    "home": "+1-123-456-7890",
    "work": "+1-987-654-3210"
  },
  gender: MALE,
  is_active: true
};
bytes encodedPerson = myPerson.Serialize(); // serialize the message

//Decode byte array back into a message
Person decodedPerson = Person.ParseFrom(encodedPerson);

// Print the decoded person's information
System.out.println("Name: " + decodedPerson.name); // output: Name: John
System.out.println("Age: " + decodedPerson.age); // output: Age: 25 
System.out.println("Hobbies: " + decodedPerson.hobbies); // output: Hobbies: reading, running, gaming
System.out.println("Phone Numbers: " + decodedPerson.phone_numbers); // output: Phone Numbers: home: +1-123-456-7890, work: +1-987-654-3210
System.out.println("Gender: " + decodedPerson.gender); // output: Gender: MALE
System.out.println("Is Active: " + decodedPerson.is_active); // output: Is Active: true
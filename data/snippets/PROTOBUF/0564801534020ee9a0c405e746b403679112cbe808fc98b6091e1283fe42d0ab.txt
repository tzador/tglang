message Person {
  string name = 1; // field number: 1, type: string
  int32 id = 2; // field number: 2, type: int32
  string email = 3; // field number: 3, type: string
  repeated string phone_numbers = 4; // field number: 4, type: repeated string
  message Location { // nested message
    float latitude = 1; // field number: 1, type: float
    float longitude = 2; // field number: 2, type: float
  }
  Location address = 5; // field number: 5, type: Location
  map<string, string> interests = 6; // field number: 6, type: map of strings to strings
  oneof message_type {
    string message = 7; // field number: 7, type: string
    int32 message_id = 8; // field number: 8, type: int32
  }
}

// example code to use the defined Person message
Person person = Person.newBuilder()
  .setName("John Doe") // set the name field
  .setId(12345) // set the id field
  .setEmail("johndoe@email.com") // set the email field
  .addPhoneNumbers("555-555-5555") // add a phone number to the repeated field
  .setAddress( // set the address field using the nested Location message
    Person.Location.newBuilder()
      .setLatitude(37.7749) // set the latitude field
      .setLongitude(-122.4194) // set the longitude field
      .build()
  )
  .putInterests("hiking", "camping") // add an entry to the interests map
  .setMessage("Hello world!") // set the message field
  .build(); // build the Person message
  
// example code to write the Person message to a file
FileOutputStream output = new FileOutputStream("person.pb"); // create a new output stream to write to a file
person.writeTo(output); // write the Person message to the output stream
output.close(); // close the output stream

// example code to read the Person message from a file
FileInputStream input = new FileInputStream("person.pb"); // create a new input stream to read from a file
Person person2 = Person.parseFrom(input); // parse the input stream and create a new Person message
input.close(); // close the input stream

// example code to access fields and values from the Person message
String name = person2.getName(); // get the value of the name field
int id = person2.getId(); // get the value of the id field
String email = person2.getEmail(); // get the value of the email field
List<String> phoneNumbers = person2.getPhoneNumbersList(); // get the values from the repeated phone_numbers field
float latitude = person2.getAddress().getLatitude(); // get the value of the nested latitude field from the address field
float longitude = person2.getAddress().getLongitude(); // get the value of the nested longitude field from the address field
Map<String, String> interests = person2.getInterestsMap(); // get the values from the interests map
String message = person2.getMessage(); // get the value of the message field
int messageId = person2.getMessageId(); // get the value of the message_id field (if the oneof was set to message_id)
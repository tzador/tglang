// Define a person message
message Person {
  string name = 1; // unique field number
  int32 age = 2;   // field number and data type
  repeated string hobbies = 3; // repeated field using array
  oneof gender { // define gender as a oneof
      string male = 4; // subfield
      string female = 5; // subfield
  }
  map<string,string> contact_info = 6; // map field with key-value pairs
  enum EyeColor { // define an enum for eye colors
      UNKNOWN = 0;
      BROWN = 1;
      BLUE = 2;
      GREEN = 3;
  }
  EyeColor eye_color = 7; // enum field with assigned field number
}

// Create a new person object
Person newPerson = Person {
  name : "John", // set values for fields in the object
  age : 25,
  hobbies : ["running", "cooking"],
  gender : "male", // set value for oneof field
  contact_info : { // set values for map field
      "email" : "john@example.com",
      "phone" : "555-1234"
  },
  eye_color : Person.EyeColor.BROWN // set value for enum field
};

// Encode the person object into a byte array
byte[] encoded = newPerson.serializeToBytes();

// Decode the byte array into a person object
Person decoded = Person.parseFrom(encoded);

// Print out the person's name and hobbies
System.out.println("Name: " + decoded.name);
System.out.println("Hobbies: " + decoded.hobbies);

// Output:
Name: John
Hobbies: [running, cooking]
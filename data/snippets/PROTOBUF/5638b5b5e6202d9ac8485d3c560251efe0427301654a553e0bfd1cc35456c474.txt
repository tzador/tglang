syntax = "proto3";

// Defines a message type, containing nested fields
message Person {
  string name = 1; // field number and data type
  int32 age = 2;
  Address address = 3; // nested message
  repeated string phone_numbers = 4; // repeated field
}

// Defines a message type for address
message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  string country = 4;
}

// Generates a service for sending and receiving data
service PersonService {
  // Sends a single Person message and receives a response
  rpc SendPerson (Person) returns (SendPersonResponse) {}

  // Sends a stream of Person messages and receives a response
  rpc SendMultiplePersons (stream Person) returns (SendMultiplePersonsResponse) {}

  // Receives a stream of Person messages and sends a response
  rpc ReceivePersons (stream Person) returns (stream ReceivePersonsResponse) {}
}

// Defines a message type for response to sending a single Person
message SendPersonResponse {
  bool success = 1; // indicates if the person was sent successfully
  string message = 2; // contains any additional information or error messages
}

// Defines a message type for response to sending multiple Person messages
message SendMultiplePersonsResponse {
  bool success = 1; // indicates if all persons were sent successfully
  repeated string names = 2; // contains the names of any failed persons
}

// Defines a message type for response to receiving a stream of Person messages
message ReceivePersonsResponse {
  int32 count = 1; // number of Person messages received
  repeated string names = 2; // contains the names of all received persons
}
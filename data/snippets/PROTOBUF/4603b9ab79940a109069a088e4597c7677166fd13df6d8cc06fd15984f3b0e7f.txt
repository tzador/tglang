// importing necessary libraries
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// define a message
message User {
  string name = 1;
  int32 age = 2;
  repeated string interests = 3;
}

// define enum
enum Status {
  UNVERIFIED = 0;
  ACTIVE = 1;
  BLOCKED = 2;
}

// define a nested message
message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  string country = 4;
}

// define a oneof field
message Person {
  oneof PersonType {
    Employee employee = 1;
    Manager manager = 2;
    Client client = 3;
  }
}

// define a wrapper message
message PersonWrapper {
  google.protobuf.StringValue first_name = 1;
  google.protobuf.StringValue last_name = 2;
  google.protobuf.UInt32Value age = 3;
  google.protobuf.BoolValue is_verified = 4;
  google.protobuf.Timestamp last_login = 5;
  repeated google.protobuf.StringValue interests = 6;
  repeated PersonType positions = 7;
}

// adding annotations
syntax = "proto3";
option java_package = "com.example.users";
option java_outer_classname = "UsersProto";
option objc_class_prefix = "PC";

// defining a service
service UserService {
  rpc GetUser (GetUserRequest) returns (User) {}
  rpc AddUser (AddUserRequest) returns (AddUserResponse) {}
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {}
}

// defining nested services
service AnalyticsService {
  rpc GetActiveUsers (GetActiveUsersRequest) returns (User) {
    option (google.api.http) = {
      get: "/activeUsers"
    };
  }

  rpc GetBlockedUsers (GetBlockedUsersRequest) returns (User) {
    option (google.api.http) = {
      get: "/blockedUsers"
    };
  }
}
syntax = "proto3"; // declares that we are using protocol buffer version 3
import "google/protobuf/util/time_util.proto"; // import statement for google protobuf time utility
package mypackage; // declaring the package name for our protocol buffer file

// defining the message for a user in our database
message User {
  int32 id = 1; // unique identifier for the user
  string first_name = 2; // user's first name
  string last_name = 3; // user's last name
  google.protobuf.util.Timestamp creation_time = 4; // timestamp for when user was created
  repeated string interests = 5; // list of user's interests
  map<string, string> contact_info = 6; // map for storing user's contact information
}

// defining the message for a post in our application
message Post {
  int32 id = 1; // unique identifier for the post
  int32 user_id = 2; // id of the user who created the post
  string content = 3; // content of the post
  google.protobuf.util.Timestamp creation_time = 4; // timestamp for when post was created
  repeated string tags = 5; // list of tags associated with the post
  map<string, int32> reactions = 6; // map for storing the types of reactions (like, love, etc.) and their respective counts
}

// defining the service for our application
service MyApp {
  rpc GetUser (GetUserRequest) returns (User) {} // endpoint for retrieving user information
  rpc CreatePost (CreatePostRequest) returns (Post) {} // endpoint for creating a new post
  rpc UpdatePost (UpdatePostRequest) returns (Post) {} // endpoint for updating an existing post
  rpc DeletePost (DeletePostRequest) returns (Empty) {} // endpoint for deleting a post
}

// defining the request message for retrieving user information
message GetUserRequest {
  int32 user_id = 1; // id of user we want to retrieve information for
}

// defining the request message for creating a new post
message CreatePostRequest {
  int32 user_id = 1; // id of user who is creating the post
  string content = 2; // content of the new post
  repeated string tags = 3; // list of tags to associate with the post
}

// defining the request message for updating an existing post
message UpdatePostRequest {
  int32 post_id = 1; // id of the post we want to update
  string new_content = 2; // new content for the post
}

// defining the request message for deleting a post
message DeletePostRequest {
  int32 post_id = 1; // id of the post we want to delete
}

// defining the empty response for deleting a post
message Empty {}
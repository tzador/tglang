syntax = "proto3"; //specifies the syntax version of protobuf

package employee; //sets the name of the package to "employee"

message Employee { //defines a protocol buffer message named "Employee"
    string name = 1; //assigns a field to the message with a field number of 1 and type string
    int32 id = 2; //assigns another field to the message with a field number of 2 and type int32
    string email = 3; //assigns a third field to the message with a field number of 3 and type string
    repeated string skills = 4; //assigns a repeated field to the message with a field number of 4 and type string

    enum Role { //defines an enum named "Role"
        ENGINEER = 0; //sets the first enum value to 0
        MANAGER = 1; //sets the second enum value to 1
        HR = 2; //sets the third enum value to 2
    }

    Role role = 5; //assigns a field to the message with a field number of 5 and type Role (defined enum)
}

message Company { //defines another protocol buffer message named "Company"
    string name = 1; //assigns a field to the message with a field number of 1 and type string
    repeated Employee employees = 2; //assigns a repeated field to the message with a field number of 2 and type Employee (nested message)
}

//example instance of the Company message
Company company = {
    name: "ABC Inc.",
    employees: [{
        name: "John Smith",
        id: 123,
        email: "john@example.com",
        skills: ["Java", "JavaScript", "SQL"],
        role: Employee.Role.ENGINEER
    }, {
        name: "Jane Doe",
        id: 456,
        email: "jane@example.com",
        skills: ["C++", "Python"],
        role: Employee.Role.MANAGER
    }, {
        name: "Bob Smith",
        id: 789,
        email: "bob@example.com",
        skills: ["HTML", "CSS", "JavaScript"],
        role: Employee.Role.HR
    }]
};
syntax = "proto3";

package myPackage;

/* This is a message type, used to define a custom data structure */
message User {
  /* Each field in the message must have a unique field number.
  * This field set as optional, which means that it's not required to be present,
  * it will default to its default value, which is empty string "" for the string type.
  */
  optional string name = 1;
  /* This field is set as required, which means that it must be present in the message */
  required int32 age = 2;
  /* This field is an enum, which means it can only have one of the predefined values */
  enum Gender {
    MALE = 0;
    FEMALE = 1;
  }
  optional Gender gender = 3;
  /* This field is a repeated field, which means it can have multiple values */
  repeated string interests = 4;
  /* This field is a nested message, which means it can have its own set of fields */
  message Address {
    optional string street = 1;
    optional string city = 2;
    optional string state = 3;
    optional string country = 4;
  }
  optional Address address = 5;
}

/* This is an RPC service, which defines the operations that can be performed */
service UserService {
  /* This is an RPC method, which defines an operation to create a user */
  rpc CreateUser (User) returns (User) {}
  /* This is an RPC method, which defines an operation to get a user by their ID */
  rpc GetUser (GetUserRequest) returns (User) {}
}

/* This is a message type, used to define the request for the GetUser operation */
message GetUserRequest {
  required int64 user_id = 1;
}
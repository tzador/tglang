message Person {
  string name = 1; // field with name and number
  int32 age = 2; // field with number
  repeated PhoneNumber phone_numbers = 3; // repeated field with custom type
  Job job = 4; // singular field with custom enum type

  enum Job {
    UNKNOWN = 0;
    ENGINEER = 1;
    TEACHER = 2;
    DOCTOR = 3;
  }

  message PhoneNumber { // nested message type
    string number = 1;
    string type = 2;
  }
}

// code to serialize a Person message
Person person = Person.newBuilder()
    .setName("John Doe")
    .setAge(30)
    .addPhoneNumbers(
        PhoneNumber.newBuilder()
            .setNumber("1234567890")
            .setType("home")
            .build())
    .setJob(Person.Job.ENGINEER)
    .build();

// write serialized message to a file
OutputStream output = new FileOutputStream("person.proto");
person.writeTo(output);
output.close();

// code to deserialize a Person message
InputStream input = new FileInputStream("person.proto");
Person newPerson = Person.parseFrom(input);
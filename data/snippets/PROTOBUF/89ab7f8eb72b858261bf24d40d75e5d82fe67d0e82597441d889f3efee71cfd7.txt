message Person {
  string name = 1; // specifying field name and its numbering
  int32 id = 2; // specifying field type and its numbering
  string email = 3; // specifying field type and its numbering
  repeated string phone_numbers = 4; // specifying repeated field with data type
  enum PhoneType { // defining enum type
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }
  message Address {
    string street = 1; // specifying field name and its numbering
    string city = 2; // specifying field name and its numbering
    string state = 3; // specifying field name and its numbering
    int32 zip = 4; // specifying field type and its numbering
  }
  repeated Address addresses = 5; // specifying repeated field with custom message type
  map<string, Address> address_book = 6; // specifying map field with key and value types
  oneof favorite_contact { // defining oneof group
    string email = 7;
    string phone_number = 8;
  }
  bool is_active = 9; // specifying field type and its numbering
}

message AddressBook { // defining message type
  repeated Person people = 1; // specifying repeated field with custom message type
  int32 count = 2; // specifying field type and its numbering
  map<int32, string> id_to_name = 3; // specifying map field with key and value types
}

syntax = "proto3"; // setting protocol buffer version

option java_package = "com.example"; // setting Java package for generated code
option java_outer_classname = "AddressBook"; // setting Java outer class name for generated code

service Messaging { // defining service
  rpc SendMessage (Person) returns (AddressBook); // specifying RPC method with input and output message types
  rpc GetNewMessages (stream Person) returns (stream AddressBook); // specifying streaming RPC method with input and output message types
}
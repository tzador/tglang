syntax = "proto3"; // specify version of protocol buffer format

message Person { // define message type named "Person"
  string name = 1; // field number and data type
  int32 age = 2;
  string address = 3;
  repeated string hobbies = 4; // repeated field

  enum Gender {
    MALE = 0;
    FEMALE = 1;
  }
  Gender gender = 5; // enum field

  message Phone { // nested message
    string number = 1;
    string type = 2;
  }
  repeated Phone phones = 6; // repeated nested message

  map<string, string> relatives = 7; // map field
}

// generate code for Person type
message PersonInput {
  Person person = 1; // field number and data type

  enum Relationship {
    FATHER = 0;
    MOTHER = 1;
    SIBLING = 2;
  }
  repeated Relationship relations = 2; // repeated enum field
}

// serialize the PersonInput message
// can be used to send data over the network or store it in a file
bytes serialized_person = PersonInput(person: {
  name: "Jane Doe",
  age: 25,
  address: "123 Main St",
  hobbies: ["reading", "painting", "hiking"],
  gender: MALE, // use enum value
  phones: [{number: "555-1234", type: "home"}, {number: "555-9876", type: "mobile"}],
  relatives: { // use map
    FATHER: "John Doe",
    MOTHER: "Mary Doe",
    SIBLING: "John Doe Jr."
  }
}).to_bytes();
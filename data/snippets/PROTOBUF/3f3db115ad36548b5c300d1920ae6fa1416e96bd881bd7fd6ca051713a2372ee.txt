syntax = "proto3"; // sets the syntax for protobuf to be "proto3"

package tutorial; // sets the package name to "tutorial"

message Person { // defines a message type called "Person"
    string name = 1; // defines a field called "name" with field number "1" and data type "string"
    int32 id = 2; // defines a field called "id" with field number "2" and data type "int32"
    string email = 3; // defines a field called "email" with field number "3" and data type "string"
    repeated Phone phones = 4; // defines a repeated field called "phones" with field number "4" and data type "Phone"
}

message Phone { // defines a message type called "Phone"
    string number = 1; // defines a field called "number" with field number "1" and data type "string"
    PhoneType type = 2; // defines a field called "type" with field number "2" and data type "PhoneType"
}

enum PhoneType { // defines an enum type called "PhoneType"
    MOBILE = 0; // sets the enum value for "MOBILE" to "0" 
    HOME = 1; // sets the enum value for "HOME" to "1" 
    WORK = 2; // sets the enum value for "WORK" to "2" 
}

service PersonService { // defines a service called "PersonService"
    rpc GetPerson(PersonRequest) returns (PersonResponse); // defines an RPC method called "GetPerson" with input message type "PersonRequest" and output message type "PersonResponse"
}

message PersonRequest { // defines a message type called "PersonRequest"
    int32 id = 1; // defines a field called "id" with field number "1" and data type "int32"
}

message PersonResponse { // defines a message type called "PersonResponse"
    Person person = 1; // defines a field called "person" with field number "1" and data type "Person"
}
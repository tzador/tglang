// Define a message type with multiple fields
message Person {
  string name = 1;
  int32 age = 2;
  repeated string hobbies = 3;
  enum Gender {
    MALE = 0;
    FEMALE = 1;
    OTHER = 2;
  }
  Gender gender = 4;
}

// Create an instance of the Person message
Person person = Person {
  name: "Jane",
  age: 25,
  hobbies: ["Reading", "Hiking", "Painting"],
  gender: Person.Gender.FEMALE
};

// Serialize the message into a byte array
bytes serializedPerson = person.SerializeToString();

// Deserialize the byte array back into a Person message instance
Person deserializedPerson = Person();
deserializedPerson.ParseFromString(serializedPerson);

// Accessing individual fields of the Person message
string name = person.name;
int32 age = person.age;
string firstHobby = person.hobbies[0];
Person.Gender gender = person.gender;

// The output should be in annotated markdown code snippet.
// Here is the code in triple backticks:
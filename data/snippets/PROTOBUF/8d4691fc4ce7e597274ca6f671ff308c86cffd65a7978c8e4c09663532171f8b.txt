syntax = "proto3";

// create a message type for a user
message User {
  string name = 1; // user's name 
  int32 age = 2; //user's age
  repeated string hobbies = 3; // list of user's hobbies
  map<string, string> contact_info = 4; //user's contact information
  enum CareerLevel {
    BEGINNER = 0; // value of beginner career level
    INTERMEDIATE = 1; // value of intermediate career level
    ADVANCED = 2; // value of advanced career level
  }
  CareerLevel career_level = 5; // user's career level
  bytes profile_picture = 6; // user's profile picture in byte form
  bool is_active = 7; // flag for whether user is currently active
}

// create a message type for a list of users
message UserList {
  repeated User users = 1; // list of user objects
  string filter = 2; // filter for narrowing down users
  bool has_more = 3; // flag for whether there are more users to retrieve
}

// create a service definition for user management
service UserManagement {
  // method for adding a new user
  rpc AddUser (User) returns (bool) {}
  // method for updating an existing user
  rpc UpdateUser (User) returns (bool) {}
  // method for retrieving a list of users
  rpc GetUsers (UserList) returns (UserList) {}
}
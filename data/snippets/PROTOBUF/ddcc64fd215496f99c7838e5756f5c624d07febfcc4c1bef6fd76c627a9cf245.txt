syntax = "proto3";
// Define a message called Location
message Location {
    // Embed another message called Point inside Location
    message Point {
        sint32 x = 1; // integer field with tag 1
        sint32 y = 2; // integer field with tag 2
    }
    // string field with tag 3
    string name = 3;
    // float field with tag 4
    float latitude = 4;
    // float field with tag 5
    float longitude = 5;
    
    // repeated nested message with tag 6
    repeated Point points = 6;
    // optional bool field with tag 7
    optional bool visited = 7;
}

// Generate getters and setters for Location message
option java_package = "com.example.location";
option java_outer_classname = "LocationProto";

// Generate getters and setters for Point message
option java_package = "com.example.location";
option java_outer_classname = "PointProto";

// Export the code snippet
message Location {
    // repeated nested message with tag 6
    repeated Point points = 6;
    // optional bool field with tag 7
    optional bool visited = 7;

    // Generate getters and setters for Location message
    get_points() returns(repeated Point);
    set_points(points);
    get_visited() returns(bool);
    set_visited(visited);

    // Export the code snippet
    message Point {
        // integer field with tag 1
        sint32 x = 1;
        // integer field with tag 2
        sint32 y = 2;

        // Generate getters and setters for Point message
        get_x() returns(sint32);
        set_x(x);
        get_y() returns(sint32);
        set_y(y);
    }
}

// Serialize a Location message to byte array
LocationProto.Location.serializeToByteArray(Location);

// Deserialize a Location message from byte array
LocationProto.Location.parseFrom(byteArray);

// Get the size of a serialized Location message in bytes
LocationProto.Location.getSerializedSize();
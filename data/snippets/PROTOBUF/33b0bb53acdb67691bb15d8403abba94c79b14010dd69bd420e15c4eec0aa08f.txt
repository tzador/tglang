// The following code snippet is an example of a message type definition in Protobuf syntax. 
// It creates a Student message that contains the student's name, ID number, and a list of their grades.

message Student {
  // Name is a string type field that is required
  string Name = 1;

  // ID is an integer type field that is required and must be unique
  int32 ID = 2 [unique = true];

  // Grades is a repeated field of type integer that is optional
  repeated int32 Grades = 3;

  // These are enum types that specify the level of the student's academic year and their major
  enum Year {
    FRESHMAN = 0;
    SOPHOMORE = 1;
    JUNIOR = 2;
    SENIOR = 3;
  }

  enum Major {
    COMPUTER_SCIENCE = 0;
    BIOLOGY = 1;
    PSYCHOLOGY = 2;
    ENGLISH = 3;
    HISTORY = 4;
  }

  // Year is an enum type field that is required
  Year year = 4;

  // Major is an enum type field that is optional
  Major major = 5;
}

// The following code snippet shows the serialization of a Student message into binary format.
// This allows the message to be easily transmitted and de-serialized on the receiving end.

Student student = new Student();

student.Name = "John Doe";
student.ID = 12345;
student.Grades = [95, 87, 91, 82];
student.year = Student.Year.JUNIOR;
student.major = Student.Major.COMPUTER_SCIENCE;

// The Student message is then serialized into a byte array
byte[] studentBytes = student.toByteArray();

// This byte array can then be transmitted and received on the other end
// Once received, the message can be de-serialized back into a Student object
Student receivedStudent = Student.parseFrom(studentBytes);
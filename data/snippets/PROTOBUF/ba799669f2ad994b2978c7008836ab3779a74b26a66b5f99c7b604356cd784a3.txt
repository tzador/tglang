// Example protocol buffer message definition
// Starts with the 'message' keyword followed by the message name
message Person {
  // Fields containing different types of data
  string name = 1;
  int32 age = 2;
  float height = 3;
  bool is_female = 4;
  
  // A nested message definition
  message Address {
    string street = 1;
    string city = 2;
  }
  
  // Repeated field for multiple address entries
  repeated Address addresses = 5;
  
  // Enumerations
  enum HairColor {
    BROWN = 0;
    BLONDE = 1;
    BLACK = 2;
  }
  
  // Optional field with a default value
  optional HairColor hair_color = 6 [default = BROWN];
}

// Encoding and decoding a message using the protobuf library
// In this example, we create a Person message and set its fields
Person person = new Person();
person.name = "John";
person.age = 30;
person.height = 1.8;
person.is_female = false;

// Adding multiple addresses to the person message
Person.Address address1 = new Person.Address();
address1.street = "Main Street";
address1.city = "New York";
person.addresses.add(address1);

Person.Address address2 = new Person.Address();
address2.street = "Park Avenue";
address2.city = "Los Angeles";
person.addresses.add(address2);

// Encoding the person message to a byte array
byte[] data = person.toByteArray();

// Decoding the byte array to a new person message
Person decodedPerson = Person.parseFrom(data);

// Printing out the decoded data
System.out.println("Name: " + decodedPerson.name);
System.out.println("Age: " + decodedPerson.age);
System.out.println("Height: " + decodedPerson.height + "m");
System.out.println("Is Female: " + decodedPerson.is_female);
System.out.println("Address 1: " + decodedPerson.addresses.get(0).street + ", " + decodedPerson.addresses.get(0).city);
System.out.println("Address 2: " + decodedPerson.addresses.get(1).street + ", " + decodedPerson.addresses.get(1).city);
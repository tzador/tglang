message Person {
  string name = 1; // using field numbers for identification
  int32 id = 2; // each field must have a unique number
  repeated string interests = 3; // repeated indicates a list of values
  enum Gender { MALE = 0; FEMALE = 1; } // defining an enumeration type
  Gender gender = 4; // using the enumeration type as a field
  message Address { // defining a nested message
    string street = 1;
    string city = 2;
    string state = 3;
    string country = 4;
  }
  Address address = 5; // using the nested message as a field
  map<string, string> contact_info = 6; // defining a map field
  // the key and value can be any type, as long as they are consistent throughout the map
  oneof status { // defining a oneof field, where only one value can be set at a time
    int32 age = 7;
    bool is_student = 8;
    string occupation = 9;
  }
  // this message also has the additional options such as reserved, extensions, and custom options
}
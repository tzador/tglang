// Define a message
message Person {
  string name = 1;
  int32 age = 2;
  repeated string hobbies = 3;
  Address address = 4;
  enum Gender {
     MALE = 0;
     FEMALE = 1;
  }
  optional Gender gender = 5 [default = MALE];
  map<int32, string> phone_numbers = 6;
}

// Define an inner message
message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  string country = 4;
}

// Create a new Person message instance
Person person = Person {
  name: "John",
  age: 25,
  hobbies: ["coding", "reading", "gaming"],
  address: Address {
    street: "123 Main St.",
    city: "New York",
    state: "NY",
    country: "USA"
  },
  gender: Gender.MALE,
  phone_numbers: {
    1: "123-456-7890",
    2: "456-789-0123"
  }
};

// Encode the message into binary format
bytes encoded_person = person.encode();

// Decode the binary data back into a Person message
Person decoded_person = Person.decode(encoded_person);

// Print out the values of the decoded message
print("Name: " + decoded_person.name);
print("Age: " + decoded_person.age);
if (decoded_person.gender == 0) {
  print("Gender: MALE");
} else {
  print("Gender: FEMALE");
}
foreach (string hobby in decoded_person.hobbies) {
  print("Hobby: " + hobby);
}
print("Address: " + decoded_person.address.street + ", " + decoded_person.address.city + ", " + decoded_person.address.state + ", " + decoded_person.address.country);
foreach (pair<int32, string> phone_number in decoded_person.phone_numbers) {
  print("Phone Number: " + phone_number.first + " - " + phone_number.second);
}
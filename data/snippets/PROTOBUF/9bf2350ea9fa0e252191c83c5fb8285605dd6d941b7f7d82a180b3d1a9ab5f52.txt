message Person { // creates a person message
  required string name = 1; // field for name with required attribute and ID 1
  required int32 age = 2; // field for age with required attribute and ID 2
  repeated string hobbies = 3; // field for hobbies with repeated attribute and ID 3

  enum Gender { // creates an enum type for gender
    MALE = 0; // enum value for male with a value of 0
    FEMALE = 1; // enum value for female with a value of 1
    OTHER = 2; // enum value for other with a value of 2
  }

  optional Gender gender = 4; // field for gender with optional attribute and ID 4
  map<string, int32> friends = 5; // field for friends with map type and ID 5
  oneof place { // creates a oneof field that can only have one value out of its fields
    string residence = 6; // field for residence with string type and ID 6
    string work_place = 7; // field for work place with string type and ID 7
  }

  extensions 100 to 200; // sets the range of extension IDs

  reserved 201, 205; // specifies that IDs 201 and 205 cannot be used
}

message Address { // creates an address message
  required string street = 1; // field for street with required attribute and ID 1
  required string city = 2; // field for city with required attribute and ID 2
  required string state = 3; // field for state with required attribute and ID 3
  required string country = 4; // field for country with required attribute and ID 4
}

message Contact { // creates a contact message
  required Person person = 1; // field for person with required attribute and ID 1
  map<string, Address> addresses = 2; // field for addresses with map type and ID 2
  repeated string emails = 3; // field for emails with repeated attribute and ID 3
  int32 phone_number = 4; // field for phone number with int32 type and ID 4
}

oneof ContactType { // creates a oneof field for contact type that can only have one value out of its fields
  Person person = 1; // field for a person with ID 1
  Contact contact = 2; // field for a contact with ID 2
}
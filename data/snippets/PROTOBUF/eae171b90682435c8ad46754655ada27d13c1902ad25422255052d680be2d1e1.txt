syntax = "proto3"; //indicates the Protobuf syntax being used

enum Color { //creates an enum type called Color
  RED = 0; //enums start at 0 and can have multiple options
  BLUE = 1;
  GREEN = 2;
}

message Shape { //creates a message called Shape
  string name = 1; //string field with unique field number 1
  int32 sides = 2; //int field with unique field number 2
  repeated float lengths = 3; //repeated float field with unique field number 3

  enum Type { //nested enum type called Type
    CIRCLE = 0; //enums start at 0 and can have multiple options
    TRIANGLE = 1;
    SQUARE = 2;
  }

  oneof shape_type { //allows only one of the fields to be set
    Type type = 4; //field with unique field number 4
    string custom_type = 5; //field with unique field number 5
  }

  map<string, Color> colors = 6; //creates a map field with unique field number 6
}

service ShapeService { //creates a service called ShapeService
  rpc GetShape (ShapeRequest) returns (ShapeResponse) {} //creates a RPC call GetShape with input and output message types
}

message ShapeRequest { //creates an input message type called ShapeRequest
  Shape.ShapeType shape_type = 1; //field with unique field number 1 and uses Shape's nested enum
  repeated Shape.Color colors = 2; //repeated field with unique field number 2 and uses Shape's enum
}

message ShapeResponse { //creates an output message type called ShapeResponse
  Shape shape = 1; //field with unique field number 1 and uses Shape message type
}
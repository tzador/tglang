syntax = "proto3";

message FruitCatalog { // Message is used to define a data structure.
  string vendor = 1; // string is a built-in type in protobuf, each field has a unique number.
  int32 vendor_id = 2; // int32 is a built-in type in protobuf, the number after the field name is its unique number.
  repeated Fruit fruits = 3; // repeated is used for repeated fields, in this case, a list of Fruit.
}

message Fruit {
  FruitType type = 1; // Custom enum type FruitType with unique number 1.
  string name = 2; // string type with unique number 2.
  float price = 3; // float type with unique number 3.
  int32 quantity = 4; // int32 type with unique number 4.
}

enum FruitType {
  APPLE = 0; // Each enum value is assigned a number.
  BANANA = 1;
  ORANGE = 2;
}

// Output message to a file.
FruitCatalog catalog = new FruitCatalog();
catalog.vendor = "Fruit Co.";
catalog.vendor_id = 12345;
Fruit apple = new Fruit();
apple.type = FruitType.APPLE;
apple.name = "Red Delicious";
apple.price = 1.99;
apple.quantity = 10;
Fruit banana = new Fruit();
banana.type = FruitType.BANANA;
banana.name = "Cavendish";
banana.price = 0.99;
banana.quantity = 5;
catalog.fruits.add(apple);
catalog.fruits.add(banana);

FileWriter writer = new FileWriter("fruit_catalog.pb");
catalog.writeTo(writer);

// Parse message from a file.
FileInputStream input = new FileInputStream("fruit_catalog.pb");
FruitCatalog parsedCatalog = FruitCatalog.parseFrom(input);
// Get the name of the first fruit in the list.
string firstName = parsedCatalog.fruits[0].name;
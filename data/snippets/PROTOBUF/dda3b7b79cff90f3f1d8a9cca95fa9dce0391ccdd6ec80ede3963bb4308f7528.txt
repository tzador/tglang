syntax = "proto3"; //Specifies the version of Protobuf used

message Person {  //Defines a message with the name "Person"
  string name = 1; //Field with name "name" and field number 1
  int32 age = 2; //Field with name "age" and field number 2
  repeated string hobbies = 3; //Repeated field "hobbies" with field number 3
  enum Gender { //Defines an enum for the gender
    MALE = 0; //Enum value "MALE" with value 0
    FEMALE = 1; //Enum value "FEMALE" with value 1
    OTHER = 2; //Enum value "OTHER" with value 2
  }
  Gender gender = 4; //Field of type "Gender" with field number 4
  message Address { //Defines a nested message for the address
    string street = 1; //Field for street with field number 1
    string city = 2; //Field for city with field number 2
  }
  Address address = 5; //Field of type "Address" with field number 5
}

message PersonList { //Defines a message with the name "PersonList"
  repeated Person people = 1; //Repeated field "people" of type "Person" with field number 1
}

service PersonService { //Defines a service with the name "PersonService"
  rpc GetPerson (PersonId) returns (Person); //Defines a remote procedure "GetPerson" that takes a "PersonId" parameter and returns a "Person" message
  rpc AddPerson (Person) returns (PersonId); //Defines a remote procedure "AddPerson" that takes a "Person" message and returns a "PersonId" message
  rpc UpdatePerson (UpdatePersonRequest) returns (Person); //Defines a remote procedure "UpdatePerson" that takes an "UpdatePersonRequest" message and returns a "Person" message
  rpc DeletePerson (PersonId) returns (DeleteStatus); //Defines a remote procedure "DeletePerson" that takes a "PersonId" parameter and returns a "DeleteStatus" message
}

message PersonId { //Defines a message with the name "PersonId"
  int32 id = 1; //Field with name "id" and field number 1
}

message UpdatePersonRequest { //Defines a message with the name "UpdatePersonRequest"
  int32 id = 1; //Field with name "id" and field number 1
  Person newPerson = 2; //Field with name "newPerson" and field number 2 of type "Person"
}

message DeleteStatus { //Defines a message with the name "DeleteStatus"
  bool success = 1; //Field with name "success" and field number 1 of type "bool"
  string message = 2; //Field with name "message" and field number 2 of type "string"
}
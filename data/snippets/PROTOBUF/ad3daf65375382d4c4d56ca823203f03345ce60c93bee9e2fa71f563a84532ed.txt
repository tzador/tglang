syntax = "proto3";

// Defining a message
message Person {

    // Defining fields with types
    string name = 1;
    int32 age = 2;
    repeated string hobbies = 3;
    bool has_children = 4;

    // Nested message field
    message Address {
        string street = 1;
        string city = 2;
        string state = 3;
        int32 zip_code = 4;
    }

    Address address = 5;

    // Defining an enum
    enum Gender {
        MALE = 0;
        FEMALE = 1;
        OTHER = 2;
    }

    Gender gender = 6;
}

// Defining another message with a nested message inside
message Employee {
    string name = 1;
    Person.Address address = 2;
    repeated Person hobbies = 3;
    int64 salary = 4;

    // Defining a oneof field
    // A oneof field can only have one of its fields set at a time
    oneof job_title {
        string programmer = 5;
        string designer = 6;
        string manager = 7;
    }
}

// Defining a request and response message
message EmployeeRequest {
    int32 employee_id = 1;
}

message EmployeeResponse {
    Employee employee = 1;
}

// Defining a service
service EmployeeService {

    // Defining unary RPC method
    rpc GetEmployee(EmployeeRequest) returns (EmployeeResponse) {}

    // Defining server streaming RPC method
    rpc GetEmployees(EmployeeRequest) returns (stream Employee) {}

    // Defining client streaming RPC method
    rpc UpdateEmployee(stream Employee) returns (EmployeeResponse) {}

    // Defining bidirectional streaming RPC method
    rpc Chat(stream EmployeeRequest) returns (stream EmployeeResponse) {}
}

// Enclosing message and service in a package
package employee_system;

// Defining multiple messages in one file
message Company {
    string name = 1;
    repeated Employee employees = 2;
    repeated Person.Address locations = 3;
}

// Defining a map field
message JobList {
    // Defining the key and value types
    map<int32, string> available_jobs = 1;
}
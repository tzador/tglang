// Define a Person message with fields for name, age, and address
message Person {
  string name = 1; // Field number 1, type string
  int32 age = 2; // Field number 2, type int32
  Address address = 3; // Field number 3, type Address

  // Address message definition for address field
  message Address {
    string street = 1; // Field number 1, type string
    string city = 2; // Field number 2, type string
    string state = 3; // Field number 3, type string
    string zip_code = 4; // Field number 4, type string
  }

  repeated PhoneNumber phone_numbers = 4; // Field number 4, type repeated PhoneNumber

  // PhoneNumber message definition for phone_numbers field
  message PhoneNumber {
    string number = 1; // Field number 1, type string
    string type = 2; // Field number 2, type string
  }

  // Create a nested message for email addresses
  repeated EmailAddress email_addresses = 5; // Field number 5, type repeated EmailAddress
  message EmailAddress {
    string email = 1; // Field number 1, type string
    string type = 2; // Field number 2, type string
  }

  // Create a oneof field for either primary phone or primary email
  oneof PrimaryContact {
    string primary_phone = 6; // Field number 6, type string
    string primary_email = 7; // Field number 7, type string
  }
}

// Example Person object
Person example_person = Person {
  name: "John Doe",
  age: 28,
  address: Address {
    street: "123 Main Street",
    city: "New York",
    state: "NY",
    zip_code: "10001"
  },
  phone_numbers: [
    PhoneNumber {
      number: "555-555-1234",
      type: "Home"
    },
    PhoneNumber {
      number: "555-555-5678",
      type: "Work"
    }
  ],
  email_addresses: [
    EmailAddress {
      email: "john.doe@example.com",
      type: "Personal"
    },
    EmailAddress {
      email: "jdoe@example.com",
      type: "Work"
    }
  ],
  primary_phone: "555-555-1234"
};
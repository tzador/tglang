syntax = "proto3";
// This syntax declaration specifies the version of the Protocol Buffers language being used.

message Person {
  // A message is a defined data structure, similar to a class in object-oriented programming.

  string name = 1;
  // 'string' is one of the available data types in Protobuf.
  // '= 1' assigns an index number to the field, which is required for all fields in a message.
  // This number must be unique, and should never be changed once it has been assigned.

  int32 age = 2;
  // 'int32' is another data type, representing a 32-bit integer.

  repeated string hobbies = 3;
  // 'repeated' indicates that this field can be repeated any number of times, similar to an array.
  // This can be useful for fields that may have multiple values, such as a person's hobbies or interests.
  // The index number for repeated fields should always be consecutive and follow the order in which they are declared.

  message Address {
    // More complex data types, like messages, can be nested within other messages.

    string street = 1;
    string city = 2;
    string state = 3;
    string zip_code = 4;
  }

  Address home_address = 4;
  // This field specifies a person's home address, by using the nested Address message.

  repeated Address work_addresses = 5;
  // Similar to hobbies, this field can also be repeated to represent multiple work addresses.

  enum Gender {
    // Enums can be used to represent a set of predefined values for a field.

    MALE = 0;
    FEMALE = 1;
    OTHER = 2;
  }

  Gender gender = 6;
  // This field uses the Gender enum to specify a person's gender.
  // The index numbers used for enum values should start at 0 and increment by 1.
  // The first value in the enum will be assigned index number 0 by default, unless specified otherwise.

  map<string, string> phone_numbers = 7;
  // Maps can be used to represent key-value pairs.
  // In this case, the key and value are both strings.
  // The index number for maps should always be unique and follow the same rules as other fields.
}
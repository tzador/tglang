// This is a comment in protobuf format
// This code snippet demonstrates the use of protobuf to create a complex data structure
syntax = "proto3";

// Import google protobuf package
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto"

// Define a message called Person
message Person {
  string name = 1;
  string email = 2;
  int32 age = 3;
  google.protobuf.Any address = 4;
  repeated google.protobuf.Struct hobbies = 5;
}

// Define a message called Address
message Address {
  string street = 1;
  string city = 2;
  string state = 3;
}

// Define a message called Hobby
message Hobby {
  string name = 1;
  bool is_active = 2;
}

// Create a new person
Person person = Person{
  name: "John Smith",
  email: "john@gmail.com",
  age: 32,
  address: Any{
    type_url: "type.googleapis.com/address",
    value: Address{
      street: "123 Main St",
      city: "New York",
      state: "NY"
    }
  },
  hobbies: [
    Struct{
      fields: {
        name: {
          kind: STRING,
          number: 1,
          string_value: "Painting"
        },
        is_active: {
          kind: BOOL,
          number: 2,
          bool_value: true
        }
      }
    },
    Struct{
      fields: {
        name: {
          kind: STRING,
          number: 1,
          string_value: "Reading"
        },
        is_active: {
          kind: BOOL,
          number: 2,
          bool_value: false
        }
      }
    }
  ]
};

// Encode the person object into binary format
bytes encoded_person = person.serialize();

// Decode the person object from binary format
Person decoded_person = Person.deserialize(encoded_person);

// Print the person's name
print(decoded_person.name);
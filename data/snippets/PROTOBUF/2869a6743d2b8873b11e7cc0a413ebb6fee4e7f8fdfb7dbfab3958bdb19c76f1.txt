// --- Define a protobuf message ---
message Person {
  required string name = 1; //field with unique tag number
  required int32 age = 2; //field with unique tag number
  optional string email = 3; //optional field
  repeated string interests = 4; //repeated field (can have multiple values)

  // --- Define a nested protobuf message inside Person ---
  message Address {
    required string street = 1;
    required string city = 2;
    optional int32 zip = 3;
  }

  optional Address address = 5; //optional nested message field
  repeated string phone_numbers = 6; //repeated field for phone numbers
}

// --- Encode a Person using protobuf ---
Person person = Person.newBuilder()
                    .setName("John")
                    .setAge(30)
                    .setEmail("john@email.com")
                    .addInterests("programming")
                    .addInterests("hiking")
                    .addInterests("cooking")
                    .setAddress(Address.newBuilder()
                                    .setStreet("Main Street")
                                    .setCity("New York")
                                    .setZip(12345))
                    .addPhoneNumbers("555-1234")
                    .addPhoneNumbers("555-5678")
                    .build();

// --- Decode a Person from a protobuf ---
byte[] data = person.toByteArray(); //convert person to byte array

Person decodedPerson = Person.parseFrom(data); //decode byte array back to person object

// --- Update a Person using protobuf ---
Person updatedPerson = Person.newBuilder(person) //use existing person as starting point
                             .setAge(32) //update age field
                             .addInterests("reading") //add new interest
                             .setAddress(Address.newBuilder()
                                             .setCity("London")) //update nested Address field
                             .build();

// --- Serialize to JSON using protobuf ---
String json = JsonFormat.printer().print(person); //converts person to JSON format

// --- Deserialize from JSON using protobuf ---
Person fromJson = Person.newBuilder().mergeFrom(json); //returns a person object from JSON data
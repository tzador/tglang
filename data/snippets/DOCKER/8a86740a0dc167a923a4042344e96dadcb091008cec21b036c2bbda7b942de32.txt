FROM node AS build-env
// This creates a build environment using the node image
WORKDIR /app
// This sets the working directory to /app inside the container
COPY package.json yarn.lock ./
// This copies the package.json and yarn.lock files to the working directory
RUN yarn install
// This runs the yarn install command to install dependencies
COPY . ./
// This copies all remaining files to the working directory
RUN yarn build
// This runs the yarn build command to build the project
FROM nginx
// This creates a new image using the nginx base image
COPY --from=build-env /app/dist /usr/share/nginx/html
// This copies the built project from the build environment to the nginx folder
EXPOSE 80
// This exposes port 80 to allow incoming traffic
CMD ["nginx", "-g", "daemon off;"]
// This sets the command that will be run when the container is launched, in this case the nginx server using the "daemon off" option to run in the foreground
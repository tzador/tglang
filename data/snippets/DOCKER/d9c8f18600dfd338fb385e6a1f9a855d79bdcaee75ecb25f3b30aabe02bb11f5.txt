# This is a multi-stage Dockerfile

# Stage 1: Build the application image
FROM golang:alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy the source code into the container
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .

# Stage 2: Create the final image based on a scratch image
FROM scratch

# Copy the built binary from the previous stage
COPY --from=builder /app/app /

# Set the entry point
ENTRYPOINT ["/app"]

# Set the default port to expose
EXPOSE 8080
# Create a custom Docker network
# Specify the network name, IP range, and subnet mask
docker network create -d bridge --subnet 192.168.0.0/24 --gateway 192.168.0.1 my_custom_network

# Create a Docker container with a custom network
# Specify the network name and container name
docker run -d --name my_container --network my_custom_network my_image

# Add a new network interface to the container
# Specify the container name and network name
docker network connect my_custom_network my_container

# Inspect the network settings for the container
# Specify the container name and format the output as JSON for easy parsing
docker network inspect -f '{{json .Containers}}' my_container

# Set up port forwarding for the container
# Specify the container port and host port
docker run -d --name my_container -p 80:8080 my_image

# Mount a local file or directory to the container
# Specify the local path and container path
docker run -d --name my_container -v /path/to/local/file:/path/to/container/file my_image

# Build a Docker image from a Dockerfile
# Specify the path to the directory containing the Dockerfile and tag the image
docker build -t my_image:latest /path/to/Dockerfile/directory
version: '3.8'

# Defines the network to be created for the containers
networks:
  my_network:
    driver: bridge

# Defines the services/containers to be created and their configurations
services:
  # Defines the PostgreSQL container
  postgres:
    container_name: postgres_db # Setting a custom name for the container
    image: postgres:latest # Specifies the image to use for the container
    restart: always # Specifies to always restart the container if it crashes or stops
    environment: # Defines environment variables to be set for the container
      POSTGRES_DB: my_database # Sets the name of the PostgreSQL database to be created
      POSTGRES_USER: my_username # Sets the username for the PostgreSQL database
      POSTGRES_PASSWORD: my_password # Sets the password for the PostgreSQL database
    ports: # Specifies the ports to expose for the container
      - "5432:5432" # Maps the container's port 5432 to the host's port 5432
    networks: # Specifies the network to be used for the container
      - my_network # Uses the previously defined network

  # Defines the Node.js container
  nodejs:
    container_name: nodejs_server # Setting a custom name for the container
    build: # Specifies the build configuration for the container
      context: . # Specifies the directory where the Dockerfile is located
      dockerfile: Dockerfile # Specifies the name of the Dockerfile to use
    restart: always # Specifies to always restart the container if it crashes or stops
    environment: # Defines environment variables to be set for the container
      POSTGRES_DB: my_database # Specifies the same database name set for the PostgreSQL container
      POSTGRES_USER: my_username # Specifies the same username set for the PostgreSQL container
      POSTGRES_PASSWORD: my_password # Specifies the same password set for the PostgreSQL container
    ports: # Specifies the ports to expose for the container
      - "3000:3000" # Maps the container's port 3000 to the host's port 3000
    depends_on: # Specifies the services/containers to start before this container
      - postgres # Starts the PostgreSQL container before starting this container
    networks: # Specifies the network to be used for the container
      - my_network # Uses the previously defined network
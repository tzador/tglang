# This code snippet creates a Dockerfile for a simple Node.js web application.
# It installs Node and npm, copies the application files into the container, 
# and starts the application using npm.

# Use the official node image as the base image
FROM node:alpine

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json into the container
COPY package*.json ./

# Install dependencies using npm
RUN npm install

# Copy the rest of the application files into the container
COPY . .

# Start the application using npm
CMD ["npm", "start"]

# Expose port 3000 for the application to listen on
EXPOSE 3000

# Add a healthcheck to ensure the application is running properly
HEALTHCHECK --interval=30s --timeout=3s \
  CMD wget -qO- http://localhost:3000 || exit 1

# Add labels for metadata
LABEL maintainer="John Doe <johndoe@example.com>"
LABEL version="1.0.0"
LABEL description="A simple Node.js web application"

# Set a default environment variable for the application
ENV NODE_ENV=production

# Set a build argument for customizing the port
ARG PORT=3000

# Create a volume to store application data
VOLUME /data

# Set a custom entrypoint script to run before the command
ENTRYPOINT echo "Starting application..." &&

# Set the default command to start the application
CMD ["npm", "start"]
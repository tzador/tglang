# Starts with the base Python image
FROM python:3.8

# Adds a new directory to be used as the working directory
WORKDIR /app

# Copies all the files from the current directory to the working directory in the container
COPY . /app

# Installs all the required dependencies using pip
RUN pip install -r requirements.txt

# Sets the environment variable FLASK_APP to the app.py file
ENV FLASK_APP="app.py"

# Exposes port 5000 in the container to be accessed from the host machine
EXPOSE 5000

# Runs the command to start the Flask application
CMD ["flask", "run", "--host=0.0.0.0"]

# Annotates the code snippet to explain the purpose of each line
# This Dockerfile is used to build an image for a Flask application
# Start with the base Python image
FROM python:3.8

# Set the working directory to /app
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app

# Install any dependencies using pip
# The required dependencies are listed in the requirements.txt file
RUN pip install -r requirements.txt

# Set the environment variable FLASK_APP to the app.py file
# This tells Flask which file to use as the entry point for the application
ENV FLASK_APP="app.py"

# Expose port 5000 for the Flask application to run on 
EXPOSE 5000

# Set the command to start the Flask application
# This is the command that will be executed when the container is started
CMD ["flask", "run", "--host=0.0.0.0"]
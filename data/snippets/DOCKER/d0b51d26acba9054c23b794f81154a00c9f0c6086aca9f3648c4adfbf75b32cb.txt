# Define a custom network for our containers
# This creates a network named "my-network" with a bridge driver
docker network create my-network

# Start a Redis server container
# This runs a Redis container named "redis-server" with the alpine image
# and exposes port 6379 to the containers in "my-network"
docker run -d --name redis-server --network my-network -p 6379:6379 redis:alpine

# Start a Node.js application container
# This runs a Node.js container named "node-app" with the app.js file
# and attaches it to the "my-network" network
# The container also mounts a local volume for development
docker run -d --name node-app --network my-network -p 3000:3000 -v /path/to/app:/code node:latest node app.js

# Start a MySQL database container
# This runs a MySQL container named "mysql-db" with the latest image
# and attaches it to the "my-network" network
# The container also sets the root password and mounts a local volume for data persistence
docker run -d --name mysql-db --network my-network -e MYSQL_ROOT_PASSWORD=rootpass -v /path/to/data:/var/lib/mysql mysql:latest
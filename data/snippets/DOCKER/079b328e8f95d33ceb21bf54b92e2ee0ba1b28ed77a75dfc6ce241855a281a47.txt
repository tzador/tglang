# create a multi-stage build for a Python Flask application
FROM python:3.7-alpine as base # start with a lightweight Alpine Linux image and name it 'base'

# add necessary dependencies for building Python packages
RUN apk add --no-cache build-base

# create and set working directory
WORKDIR /app

# copy over requirements.txt and install dependencies
COPY requirements.txt .
RUN pip install -r requirements.txt

# copy over the source code
COPY . .

# start building the production image
FROM base as production

# set environment variables
ENV FLASK_APP=app.py
ENV FLASK_ENV=production

# expose the port on which the Flask application runs
EXPOSE 5000

# specify entrypoint for the production image
ENTRYPOINT ["python"]

# specify the command to run the Flask application
CMD ["app.py"]

# start building the development image
FROM base as development

# set environment variables
ENV FLASK_RUN_PORT=5000
ENV FLASK_ENV=development

# expose the port on which the Flask application runs
EXPOSE 5000

# specify entrypoint for the development image
ENTRYPOINT ["python"]

# specify the command to run the Flask application with the auto-reload flag for development
CMD ["-m", "flask", "run", "--reload"]
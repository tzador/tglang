# The following code snippet creates a Dockerfile for a Node.js application
# This file will be used to build a Docker image that runs the application

# Set the base image to use for this container
FROM node:alpine

# Set the working directory inside the container
WORKDIR /app

# Copy the package.json and package-lock.json files to the container's working directory
COPY package*.json ./

# Install the dependencies
RUN npm install

# Copy all the source code to the container's working directory
COPY . .

# Set the port number to be exposed by the container
EXPOSE 3000

# Set the command to run when the container is started
CMD ["node", "index.js"]

# Build the Docker image using the Dockerfile in the current directory
# Replace [IMAGE_NAME] with a name of your choice
# The tag [latest] is used to indicate the latest version of the image
# The period (.) at the end of the command represents the current directory
docker build -t [IMAGE_NAME]:latest .

# Run a container using the image that was just built
# Replace [CONTAINER_NAME] with a name of your choice
# The -p flag maps the exposed port (3000) to a port on the host machine (3000)
docker run -it -p 3000:3000 --name [CONTAINER_NAME] [IMAGE_NAME]
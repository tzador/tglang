\\ -------- DOCKER MULTI-STAGE BUILD --------

# Build Stage:
FROM node:lts AS build
WORKDIR /app
COPY ./package.json /app
RUN npm install
COPY . /app
RUN npm run build

# Production Stage:
FROM nginx:alpine
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/build /usr/share/nginx/html
EXPOSE 80
CMD [ "nginx", "-g", "daemon off;" ]

/* Explanation:
- This is a multi-stage build that allows for a clean production image without any development dependencies.
- The first stage uses the node:lts image as a base and sets the working directory to /app.
- The package.json file is copied into the working directory and the dependencies are installed using npm install.
- The entire project is then copied into the working directory on top of the installed dependencies.
- The project build commences using the npm run build command.
- The second stage uses the nginx:alpine image as a base and removes the default nginx files from /usr/share/nginx/html.
- The build directory from the first stage is copied into the nginx html directory.
- Port 80 is exposed for incoming connections.
- The final command runs nginx in the foreground to serve the production build. */
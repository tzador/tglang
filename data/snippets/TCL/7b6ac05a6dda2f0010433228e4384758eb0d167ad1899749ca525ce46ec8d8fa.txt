# This code snippet generates a graph using the Tk package in TCL #

# Import the Tk package #
package require Tk

# Create a new Tcl interpreter #
set interp [interp create]

# Define a canvas to draw the graph on #
canvas .c -width 500 -height 500

# Create a data set to plot #
set data [list 1.6 2.3 4.5 1.2 3.6]

# Define the labels for the x-axis #
set xlabels [list "Jan" "Feb" "Mar" "Apr" "May"]

# Define the scaling factors #
set xscale 450.0
set yscale 400.0

# Function to map data points to pixels #
proc map {value scale} {
	return [expr {$value * $scale}]
}

# Function to draw a line on the canvas #
proc drawLine {x1 y1 x2 y2} {
	global .c
	.c create line $x1 $y1 $x2 $y2
}

# Function to draw a filled rectangle on the canvas #
proc drawRect {x1 y1 x2 y2} {
	global .c
	.c create rectangle $x1 $y1 $x2 $y2 -fill black
}

# Function to plot the data on the graph #
proc plotData {data xlabels} {
	global xscale yscale
	set x 50
	foreach label $xlabels data $data {
		# Calculate the pixel values for the data point #
		set x1 [map $x $xscale]
		set y1 [map $data $yscale]
		
		# Draw a rectangle as the bar for the data point #
		drawRect $x1 0 [expr {$x1 + 40}] $y1
		
		# Draw a label for the data point #
		.c create text [expr {($x1 + 40) / 2.0} -20] -text $label
		
		# Increment x value for the next data point #
		set x [expr {$x + 50}]
	}
}

# Function to draw the axes and labels for the graph #
proc drawAxes {xlabels} {
	global .c xscale yscale
	# Draw the x-axis #
	drawLine 20 [map 0 $yscale] [expr {[llength $xlabels] * 50 + 30}] [map 0 $yscale]
	
	# Draw the y-axis #
	drawLine 20 [map 0 $yscale] 20 20
	
	# Add tick marks and labels on the x-axis #
	set x [expr {50 + 20 * [llength $xlabels]}]
	foreach label $xlabels {
		drawLine $x [map 0 $yscale] $x [map 0.02 $yscale]
		.c create text [expr {($x + $x - 20) / 2.0} -text $label]
		set x [expr {$x + 50}]
	}
}

# Draw the axes and labels for the graph #
drawAxes $xlabels

# Plot the data on the graph #
plotData $data $xlabels

# Map the Tcl interpreter to a window and set its title #
interp alias {} .c {} canvas .c
wm title .c "Graph using TCL"

# Start the event loop to display the graph #
pack .c
update
interp eval $interp {while 1 {vwait canvas_update}}
# This is a comment in TCL
# Create a dictionary variable with key-value pairs
set colors {red #FF0000 green #00FF00 blue #0000FF}
# Iterate through the dictionary and print each key-value pair
foreach {key value} $colors {
    puts "$key has hexadecimal value $value"
}

# This is a list with elements of different data types
set data {Programming {Language} [list TCL Programming] 12.5 3.14 true}
# Loop through the list and print the data type of each element
foreach element $data {
    puts [list The data type of $element is [string trimleft [string trimright [lrange [split [info type $element] " "] 0 0]] "["] "]"
}

# Define a procedure that adds two numbers and returns the sum
proc add {num1 num2} {
    return [expr {$num1 + $num2}]
}
# Call the procedure and print the result
puts "The sum of 10 and 5 is [add 10 5]"

# Create a class named "Person" with properties "name" and "age"
oo::class create Person {
    variable name
    variable age
    # Constructor method to initialize the object's properties
    method initialize {name age} {
        set this name $name
        set this age $age
    }
    # Method to print the person's name and age
    method printInfo {} {
        puts "Name: [set this name], Age: [set this age]"
    }
}
# Instantiate an object of the "Person" class
set person [Person new]
# Use the initialize method to set the object's properties
$person initialize "John" 25
# Use the printInfo method to print the person's information
$person printInfo

# Create a coroutine that counts from 1 to 10
coroutine count {
    # Use a variable to keep track of the count
    set i 1
    # Use a loop to increment the count and yield the value
    while {$i < 11} {
        yield $i
        incr i
    }
}
# Use a loop to print the count from the coroutine
foreach num [list {*}[count]] {
    puts $num
}
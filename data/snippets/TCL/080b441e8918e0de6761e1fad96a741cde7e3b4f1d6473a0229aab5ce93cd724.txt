# This code snippet checks for palindrome numbers in a given list and returns those numbers

set numbers_list {123 242 456 323 987}

proc check_palindrome {number} { # Define a procedure to check if a number is palindrome
    set num $number # Store the input number in a variable
    set rev 0 # Initialize a variable to store the reverse of the input number
    while {$num != 0} { # Use a while loop to reverse the input number
        set digit [expr $num % 10] # Get the last digit of the number using modulo operator
        set rev [expr {($rev * 10) + $digit}] # Multiply the reverse number by 10 and add the last digit to get the reverse number
        set num [expr {$num / 10}] # Remove the last digit from the input number
    }
    if {$number == $rev} { # Check if the input number is equal to its reverse, if yes, then it is a palindrome
        return 1
    } else {
        return 0
    }
}

set palindrome_nums [list] # Initialize an empty list to store the palindrome numbers
foreach num $numbers_list { # Use a foreach loop to iterate through the input list of numbers
    if {[check_palindrome $num]} { # Call the check_palindrome procedure to check if the number is palindrome or not
        lappend palindrome_nums $num # If the number is palindrome, then add it to the palindrome_nums list
    }
}

puts "Palindrome numbers in the list are: $palindrome_nums" # Print the list of palindrome numbers
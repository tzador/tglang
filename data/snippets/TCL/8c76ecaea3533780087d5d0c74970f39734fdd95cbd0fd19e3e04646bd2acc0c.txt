## The following code demonstrates how to create a custom procedure that sorts a list of numbers in ascending order
proc sort_asc {lst} {
    
    # Create empty list for sorted numbers
    set sorted_lst {}
    
    # Iterate through input list
    foreach num $lst {
        
        # Initialize flag variable to keep track of sorted numbers
        set flag 0
        
        # Iterate through sorted list and insert each number in correct position
        for {set i 0} {$i < [llength $sorted_lst]} {incr i} {
            
            # Check if the current number is smaller than the number in the sorted list
            if {$num < [lindex $sorted_lst $i]} {
                
                # Insert number at current position in the sorted list
                linsert $sorted_lst $i $num
                
                # Set flag to 1 to indicate that a number has been sorted
                set flag 1
                
                # Break out of loop
                break
            }
        }
        
        # If no number has been sorted, append it to the end of the sorted list
        if {$flag == 0} {
            lappend sorted_lst $num
        }
    }
    
    # Return the sorted list
    return $sorted_lst
}

# Generate a list of random numbers
set lst {9 4 6 2 8 1 5 7 3}

# Sort the list in ascending order
set sorted_lst [sort_asc $lst]

# Print the sorted list
puts "Sorted List: $sorted_lst"

# Output:
# Sorted List: {1 2 3 4 5 6 7 8 9}
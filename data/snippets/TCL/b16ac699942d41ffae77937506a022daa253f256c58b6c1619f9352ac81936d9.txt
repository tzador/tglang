# This is a function to sort a list of numbers in ascending order
proc sortList {inputList} {
    # Declare a variable to store the sorted list
    set sortedList {}
    
    # Loop through each number in the input list
    foreach num $inputList {
        # Use the llength command to check if the sorted list is empty
        if {[llength $sortedList] == 0} {
            # If it is, add the first number to the sorted list
            lappend sortedList $num
        } else {
            # Otherwise, loop through the sorted list to find the correct position for the number
            for {set i 0} {$i < [llength $sortedList]} {incr i} {
                # Use the lindex command to compare the numbers
                if {$num < [lindex $sortedList $i]} {
                    # If the number is smaller, insert it at the current position
                    linsert sortedList $i $num
                    # Break out of the loop
                    break
                } else {
                    # If the number is larger, continue to the next position
                    continue
                }
            }
            # If the number is larger than all the numbers in the sorted list, append it at the end
            lappend sortedList $num
        }
    }
    
    # Return the sorted list
    return $sortedList
}

# Example input list
set numbers {5 2 8 1 10 4}

# Call the sortList function and store the result in a variable
set sortedNumbers [sortList $numbers]

# Print the sorted list
puts "Sorted list: $sortedNumbers"
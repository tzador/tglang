# The following code snippet is a function that defines a custom sort algorithm
# in the Tcl programming language.
proc customSort {firstList secondList} {

    # Create a new list to store the sorted elements
    set sortedList {}

    # Loop through the first list and compare each element with the second list
    foreach element1 $firstList {
        # Keep track of the number of elements in the second list that are smaller than the current element
        set smallerElements 0

        foreach element2 $secondList {
            # If the current element in the second list is smaller, increment the counter
            if {$element2 < $element1} {
                incr smallerElements
            }
        }

        # Calculate the index at which the current element should be inserted in the sorted list
        set index [expr {$smallerElements + [llength $sortedList]}]

        # Insert the element at the calculated index
        linsert $sortedList $index $element1
    }

    # Return the sorted list
    return $sortedList
}

# Example usage:
set list1 {3 1 6 2 8}
set list2 {7 5 4 9 0}

# Call the customSort function and pass the two lists as arguments
set sortedList [customSort $list1 $list2]

# Print the sorted list
puts $sortedList
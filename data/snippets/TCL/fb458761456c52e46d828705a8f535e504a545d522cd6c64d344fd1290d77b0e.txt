# This code snippet implements a binary search function in TCL
proc binarySearch {list key} {
    set low 0                        # initialize low to 0
    set high [llength $list]         # initialize high to the length of the list
    while {$low <= $high} {           # loop until low is less than or equal to high
        set mid [expr {($low + $high) / 2}]  # calculate middle index
        set pivot [lindex $list $mid]        # get element at middle index
        if {$pivot > $key} {                 # if pivot is greater than key
            set high [expr $mid - 1]         # set high to one less than middle index
        } elseif {$pivot < $key} {            # if pivot is less than key
            set low [expr $mid + 1]          # set low to one more than middle index
        } else {                              # if pivot is equal to key
            return $mid                        # return middle index
        }
    }
    return -1                                 # return -1 if key is not found
}
# Example usage
set numList [list 1 5 8 14 19]
set index [binarySearch $numList 14]
puts "Index of 14 is $index"
# Output: Index of 14 is 3
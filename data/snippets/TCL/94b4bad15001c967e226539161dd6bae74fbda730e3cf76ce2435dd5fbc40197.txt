# This is a code snippet for generating a Fibonacci sequence using recursive functions in TCL

# Define the recursive function to generate the Fibonacci sequence
proc fibonacci {n} {
    # Check if n is equal to 0 or 1
    if {$n < 2} {
        return $n
    }
    # Call the fibonacci function recursively to generate the sequence
    return [expr [fibonacci [expr {$n-1}]] + [fibonacci [expr {$n-2}]]]
}

# Define the variable for sequence length
set seq_length 10

# Initialize the sequence list
set fib_seq {}

# Loop through the sequence length and call the fibonacci function
for {set i 0} {$i < $seq_length} {incr i} {
    # Append the result to the sequence list
    lappend fib_seq [fibonacci $i]
}

# Print the generated sequence
puts "Fibonacci Sequence of length $seq_length: $fib_seq"
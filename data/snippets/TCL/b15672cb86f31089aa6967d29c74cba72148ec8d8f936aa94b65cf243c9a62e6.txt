# This code snippet generates a custom sorting algorithm

# Define a list of numbers to be sorted
set numbers [list 1 10 5 3 9 8]

# Define a function to compare two numbers and swap them if necessary
proc compare {num1 num2} {
    if {$num1 > $num2} {
        set temp $num2
        set num2 $num1
        set num1 $temp
    }
}

# Define a procedure to perform the sorting algorithm
proc custom_sort {list} {
    set final_list [list]
    # Loop through the list
    foreach num1 $list {
        # Initialize a variable to keep track of the index of the largest number
        set largest_index 0
        # Loop through all remaining numbers in the list
        foreach num2 [lrange $list 1 end] {
            # Compare current number with the largest number
            compare $num2 [lindex $final_list $largest_index]
            incr largest_index
        }
        # Append the largest number to the final list and remove it from the original list
        lappend final_list $num1
        set list [lreplace $list $largest_index $largest_index]
    }
    return $final_list
}

# Call the custom_sort procedure
set sorted_list [custom_sort $numbers]

# Print the sorted list
puts "Sorted List: $sorted_list"
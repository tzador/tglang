# A complex code snippet in TCL

# Set a list variable with multiple values
set my_list {apple orange banana}

# Loop through the list and print each value
foreach item $my_list {
    puts $item
}

# Define a function with multiple arguments
proc my_function {arg1 arg2 arg3} {
    # Print the arguments
    puts "Argument 1: $arg1"
    puts "Argument 2: $arg2"
    puts "Argument 3: $arg3"

    # Calculate the sum of the arguments and return it
    set sum [expr {$arg1 + $arg2 + $arg3}]
    return $sum
}

# Call the function with values and print the result
set result [my_function 5 10 15]
puts "Result: $result"

# Create a dictionary with key-value pairs
set my_dict {
    name "John Doe"
    age 32
    occupation "Software Engineer"
}

# Print the values of specific keys in the dictionary
puts "Name: $my_dict(name)"
puts "Age: $my_dict(age)"
puts "Occupation: $my_dict(occupation)"

# Use a conditional statement to check if a number is even or odd
set number 12
if {$number % 2 == 0} {
    puts "$number is even"
} else {
    puts "$number is odd"
}

# Define a while loop with a counter
set count 0
while {$count < 10} {
    puts "Count: $count"
    incr count
}

# Create a custom error and throw it
set my_error "Oops, an error occurred!"
error $my_error

# Output:
# apple
# orange
# banana
# Argument 1: 5
# Argument 2: 10
# Argument 3: 15
# Result: 30
# Name: John Doe
# Age: 32
# Occupation: Software Engineer
# 12 is even
# Count: 0
# Count: 1
# Count: 2
# Count: 3
# Count: 4
# Count: 5
# Count: 6
# Count: 7
# Count: 8
# Count: 9
# Error: Oops, an error occurred!
# This code snippet implements a bubble sort algorithm in TCL

# Define a procedure for bubble sort
proc bubble_sort {list} {
    
    # Get the length of the list
    set len [llength $list]
    
    # Loop through the list
    for {set i 0} {$i < $len - 1} {incr i} {
        
        # Set a flag to track if any swaps are made
        set swapped 0
        
        # Loop through the unsorted portion of the list
        for {set j 0} {$j < $len - 1 - $i} {incr j} {
            
            # Compare two adjacent elements and swap them if necessary
            if {[lindex $list $j] > [lindex $list [expr {$j + 1}]]} {
                lset list $j [lindex $list [expr {$j + 1}]]
                lset list [expr {$j + 1}] [lindex $list $j]
                set swapped 1
            }
        }
        
        # If no swaps were made, the list is already sorted
        if {!$swapped} {
            break
        }
    }
    
    # Return the sorted list
    return $list
}

# Example usage of bubble sort
set unsorted_list {5 2 9 1 3}
set sorted_list [bubble_sort $unsorted_list]

# Print the sorted list
puts "Sorted list: $sorted_list"
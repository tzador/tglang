proc main {array} {
    # This procedure performs a quick sort on a given array
    set len [array size $array]  # Get the length of the array
    if {$len <= 1} {  # If array only has one element, it is already sorted
        return $array
    } else {  # Otherwise, perform quick sort
        set pivot [lindex $array 0]  # Choose the first element as pivot
        # Initialize variables for left and right subarrays
        set left [list]
        set right [list]
        # Loop through remaining elements in array
        for {set i 1} {$i < $len} {incr i} {
            # Check if element is smaller or larger than pivot
            if {[lindex $array $i] < $pivot} {
                # Add smaller element to left subarray
                lappend left [lindex $array $i]
            } else {
                # Add larger element to right subarray
                lappend right [lindex $array $i]
            }
        }
        # Recursively call main procedure on left and right subarrays
        set left [main $left]
        set right [main $right]
        # Combine sorted subarrays with pivot in the middle
        set sorted [concat $left [list $pivot] $right]
        return $sorted
    }
}

# Example usage:
set array {9 5 2 7 1 8 3}
set sorted [main $array]  # Call main procedure on array
puts "Sorted array: $sorted"  # Output: Sorted array: {1 2 3 5 7 8 9}
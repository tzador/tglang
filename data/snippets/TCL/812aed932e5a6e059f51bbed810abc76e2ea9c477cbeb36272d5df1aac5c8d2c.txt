#This code snippet will generate a list of numbers and then perform various mathematical operations on them
#The list will contain numbers from 1 to 10

set numList [list]
for {set i 1} {$i<=10} {incr i} { #Creating a for loop to iterate from 1 to 10
    lappend numList [expr $i] #Adding each number to the list using lappend
}

puts "The numbers in the list are: $numList" #Printing the list of numbers

#Finding the maximum and minimum values in the list
set maxVal [lindex $numList [expr [llength $numList] - 1]] #Finding the maximum value by using lindex and llength commands
set minVal [lindex $numList 0] #Finding the minimum value by using lindex command

puts "The maximum value in the list is: $maxVal" #Printing the maximum value
puts "The minimum value in the list is: $minVal" #Printing the minimum value

#Calculating the sum of all the numbers in the list
set sum 0 #Initializing the sum variable to 0
foreach num $numList { #Using foreach loop to iterate through the list
    incr sum $num #Adding each number to the sum variable
}
puts "The sum of all numbers in the list is: $sum" #Printing the sum

#Finding the average of all the numbers in the list
set avg [expr $sum/[llength $numList.0]] #Using llength command to find the length of the list, and then dividing the sum by it
puts "The average of all numbers in the list is: $avg" #Printing the average

#Sorting the list in ascending and descending order
set sortedList [lsort -real $numList] #Using lsort command to sort the list in ascending order
set revSortedList [lsort -real -decreasing $numList] #Using lsort command with -decreasing flag to sort the list in descending order

puts "The list in ascending order is: $sortedList" #Printing the list in ascending order
puts "The list in descending order is: $revSortedList" #Printing the list in descending order

#Performing arithmetic operations on the list elements
foreach num $numList { #Using foreach loop to iterate through the list
    set square [expr {$num*$num}] #Calculating the square of each number
    set cube [expr {$num*$num*$num}] #Calculating the cube of each number
    set factorial [expr {1}] #Initializing the factorial variable to 1
    for {set j 1} {$j<=$num} {incr j} { #Creating a for loop to iterate from 1 to the current number
        set factorial [expr {$factorial*$j}] #Calculating the factorial of the current number
    }
    puts "The square of $num is: $square" #Printing the square of the current number
    puts "The cube of $num is: $cube" #Printing the cube of the current number
    puts "The factorial of $num is: $factorial" #Printing the factorial of the current number
}

#Example output:
#The numbers in the list are: 1 2 3 4 5 6 7 8 9 10
#The maximum value in the list is: 10
#The minimum value in the list is: 1
#The sum of all numbers in the list is: 55
#The average of all numbers in the list is: 5.5
#The list in ascending order is: 1 2 3 4 5 6 7 8 9 10
#The list in descending order is: 10 9 8 7 6 5 4 3 2 1
#The square of 1 is: 1
#The cube of 1 is: 1
#The factorial of 1 is: 1
#The square of 2 is: 4
#The cube of 2 is: 8
#The factorial of 2 is: 2
#The square of 3 is: 9
#The cube of 3 is: 27
#The factorial of 3 is: 6
#The square of 4 is: 16
#The cube of 4 is: 64
#The factorial of 4 is: 24
#The square of 5 is: 25
#The cube of 5 is: 125
#The factorial of 5 is: 120
#The square of 6 is: 36
#The cube of 6 is: 216
#The factorial of 6 is: 720
#The square of 7 is: 49
#The cube of 7 is: 343
#The factorial of 7 is: 5040
#The square of 8 is: 64
#The cube of 8 is: 512
#The factorial of 8 is: 40320
#The square of 9 is: 81
#The cube of 9 is: 729
#The factorial of 9 is: 362880
#The square of 10 is: 100
#The cube of 10 is: 1000
#The factorial of 10 is: 3628800
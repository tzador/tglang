# This is a code snippet in TCL

package require Tk
#Importing Tk package for GUI functionalities

# Defining a procedure to create a simple text editor
proc SimpleTextEditor {} {
   # Creating a window for the text editor
   set editor [tk::text .myEditor]
   pack $editor

   # Creating a menu bar for the text editor
   set menubar [tk::menu .myMenubar -type menubar]
   # Creating the 'File' menu
   set fileMenu [tk::menu $menubar -tearoff false]
   $fileMenu add command -label "New" -command { $editor delete 1.0 end }
   $fileMenu add command -label "Open" -command { openFile $editor }
   $fileMenu add command -label "Save" -command { saveFile $editor }
   $fileMenu add command -label "Save As" -command { saveAsFile $editor }
   $fileMenu add separator
   $fileMenu add command -label "Exit" -command { exit }
   # Creating the 'Edit' menu
   set editMenu [tk::menu $menubar -tearoff false]
   $editMenu add command -label "Undo" -command { $editor edit undo }
   $editMenu add command -label "Redo" -command { $editor edit redo }
   $editMenu add separator
   $editMenu add command -label "Cut" -command { $editor edit cut }
   $editMenu add command -label "Copy" -command { $editor edit copy }
   $editMenu add command -label "Paste" -command { $editor edit paste }
   # Adding the menus to the menu bar
   $menubar add cascade -label "File" -menu $fileMenu
   $menubar add cascade -label "Edit" -menu $editMenu
   # Displaying the menu bar
   . config -menu $menubar

   # Adding a tag for highlighting the selected text
   $editor tag configure sel -bg "#ADD8E6"
}
# Defining a procedure to open a file in the text editor
proc openFile {editor} {
   # Asking for the file name through a dialog box
   set fileName [tk::getOpenFile -filetypes {{Text files} {.txt}}]
   if {$fileName != ""} {
      # Deleting any existing content in the editor
      $editor delete 1.0 end
      # Opening the selected file and inserting its content into the editor
      set file [open $fileName r]
      $editor insert 1.0 [read $file]
      close $file
   }
}
# Defining a procedure to save the current file
proc saveFile {editor} {
   # Checking if the file has been previously saved
   if {[file exists $editor(savedFile)]} {
      # Saving the changes made to the existing file
      set file [open $editor(savedFile) w]
      puts -nonewline $file [$editor get 1.0 end]
      close $file
   } else {
      # If the file has not been previously saved, call the procedure to save it as a new file
      saveAsFile $editor
   }
}
# Defining a procedure to save the file as a new file
proc saveAsFile {editor} {
   # Asking for the file name through a dialog box
   set fileName [tk::getSaveFile -filetypes {{Text files} {.txt}}]
   if {$fileName != ""} {
      # Saving the content of the editor in the selected file
      set file [open $fileName w]
      puts -nonewline $file [$editor get 1.0 end]
      close $file
      # Setting the file name as a global variable
      set editor(savedFile) $fileName
   }
}

# Calling the procedure to create the simple text editor
SimpleTextEditor
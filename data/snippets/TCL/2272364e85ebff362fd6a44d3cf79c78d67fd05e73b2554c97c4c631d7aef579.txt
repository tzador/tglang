# This code snippet is a demonstration of a complex procedure written in the TCL programming language
# It generates a Fibonacci sequence up to a user defined limit

# This variable holds the limit of the sequence given by the user
set limit 20
# The initial values of the sequence
set first 0
set second 1
# The counter variable
set i 0

# Defining the recursive procedure to calculate the next number in the sequence
proc fibonacci {first second i} {
    # Until the counter reaches the limit, the procedure will be called recursively
    if {$i <= $limit} {
        # Calculate the next number in the sequence and print it
        set next [expr {$first + $second}]
        puts $next
        # Swap the values for the next iteration
        set first $second
        set second $next
        # Increment the counter
        set i [expr {$i + 1}]
        # Call the procedure again with the updated values
        fibonacci $first $second $i
     }
}

# Call the procedure with the initial values
fibonacci $first $second $i
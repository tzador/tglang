# This is a comment in TCL

# Define a variable "my_list" containing a list of numbers
set my_list [list 2 5 7 9 3 1]

# Loop through the list and print out the square of each number
foreach num $my_list {
    puts "The square of $num is [expr {$num*$num}]"
}

# Function to check if a number is prime
proc isPrime {n} {
    for {set i 2} {$i < $n} {incr i} {
        if {$n % $i == 0} {
            return 0
        }
    }
    return 1
}

# Print out whether each number in the list is prime or not
foreach num $my_list {
    set result [isPrime $num]
    if {$result == 1} {
        puts "$num is a prime number"
    } else {
        puts "$num is not a prime number"
    }
}

# Create a new list of even numbers using list comprehensions
set even_numbers [lmap x $my_list {if {($x % 2) == 0} {set x}}]

# Calculate the sum of the even numbers in the list using recursion
proc sum {lst} {
    if {[llength $lst] == 0} {
        return 0
    } else {
        return [lindex $lst 0] + [sum [lrange $lst 1 end]]
    }
}
set even_sum [sum $even_numbers]

# Print out the sum of the even numbers
puts "The sum of the even numbers is $even_sum"
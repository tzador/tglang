# This is a comment in TCL
proc getFibonacci {n} {     # create a procedure named "getFibonacci" that takes in a parameter n
    set fibonacci [list 0 1] # create a list variable to store the fibonacci sequence, starting with 0 and 1
    set i 2                 # initialize a variable i to keep track of the index of the sequence
    
    while {$i <= $n} {      # while loop to iterate through the desired fibonacci sequence length
        set num1 [lindex $fibonacci end]    # get the last element in the fibonacci list
        set num2 [lindex $fibonacci end-1]  # get the second last element in the fibonacci list
        set sum [expr {$num1 + $num2}]      # calculate the next fibonacci number by adding the last two numbers
        lappend fibonacci $sum              # add the new number to the fibonacci list
        incr i                              # increment the index counter
    }
    
    set result [list]                           # create an empty list to store the final result
    for {set j 0} {$j < $n} {incr j} {          # for loop to iterate through the fibonacci list
        lappend result [lindex $fibonacci $j]   # append each fibonacci number to the result list
    }
    
    return $result                             # return the final fibonacci sequence as a list
}

puts [getFibonacci 10]  # print the fibonacci sequence with 10 numbers
# Initialize a dictionary
set dictionary [dict create]

# Populate the dictionary with key-value pairs
dict set dictionary "apple" "fruit"
dict set dictionary "carrot" "vegetable"
dict set dictionary "dog" "animal"
dict set dictionary "pen" "writing instrument"

# Define a procedure to access and print the value corresponding to a given key
proc accessValue {key} {
    puts "The value corresponding to $key is [dict get $dictionary $key]"
}

# Define a procedure to add a new key-value pair to the dictionary
proc addKeyValuePair {newKey newValue} {
    # Check if the key already exists in the dictionary
    if {[dict exists $dictionary $newKey]} {
        puts "$newKey already exists in the dictionary."
    } else {
        # Add the new key-value pair to the dictionary
        dict set dictionary $newKey $newValue
        puts "New key-value pair $newKey: $newValue added to dictionary."
    }
}

# Call the accessValue procedure for a given key
accessValue "carrot"

# Call the addKeyValuePair procedure for a new key-value pair
addKeyValuePair "chair" "furniture"

# Print the updated dictionary
puts "Updated dictionary: $dictionary"
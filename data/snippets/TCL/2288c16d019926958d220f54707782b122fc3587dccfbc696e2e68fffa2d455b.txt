# This code snippet creates and manipulates a TCL list
set my_list {1 2 3 4}
puts "Original list: $my_list" # Output: Original list: 1 2 3 4

# Append a value to the list
lappend my_list 5
puts "Appended list: $my_list" # Output: Appended list: 1 2 3 4 5

# Finding the length of the list
set list_length [llength $my_list]
puts "List length: $list_length" # Output: List length: 5

# Inserting a value at a specific index
linsert $my_list 2 "new"
puts "Inserted list: $my_list" # Output: Inserted list: 1 "new" 2 3 4 5

#Removing a value from the list
lremove my_list 4
puts "Removed list: $my_list" # Output: Removed list: 1 "new" 2 3 5

# Reversing the list
set reversed_list [lreverse $my_list]
puts "Reversed list: $reversed_list" # Output: Reversed list: 5 3 2 "new" 1

# Sorting the list in ascending order
set sorted_list [lsort $my_list]
puts "Sorted list: $sorted_list" # Output: Sorted list: 1 "new" 2 3 4 5

# Converting the list into a string
set list_as_string [join $my_list ", "]
puts "List as string: $list_as_string" # Output: List as string: 1, "new", 2, 3, 5

# Looping through the list and printing each value
foreach item $my_list {
  puts "List item: $item" # Output: List item: 1, List item: "new", List item: 2, etc.
}

# Creating a nested list
set nested_list {{1 2 3} {4 5 6} {7 8 9}}
puts "Nested list: $nested_list" # Output: Nested list: {{1 2 3} {4 5 6} {7 8 9}}

# Accessing values in a nested list
puts "First nested list: [lindex $nested_list 0]" # Output: First nested list: {1 2 3}
puts "Last value of the second nested list: [lindex [lindex $nested_list 1] end]" # Output: Last value of the second nested list: 6

# Combining multiple lists into one
set list1 {a b c}
set list2 {1 2 3}
set combined [concat $list1 $list2]
puts "Combined list: $combined" # Output: Combined list: {a b c, 1 2 3}

# Searching for a value in a list
set index [lsearch $combined "b"]
puts "Index of 'b': $index" # Output: Index of 'b': 1

# Clearing a list
set empty_list {}
puts "Empty list: $empty_list" # Output: Empty list: {}
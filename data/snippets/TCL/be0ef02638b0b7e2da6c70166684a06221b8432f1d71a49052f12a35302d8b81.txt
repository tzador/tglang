# Tcl language
# This code snippet creates a tic-tac-toe game using Tcl arrays and procedures

# Initialize the game board as a Tcl array
array set board {
    1 " "
    2 " "
    3 " "
    4 " "
    5 " "
    6 " "
    7 " "
    8 " "
    9 " "
}

# Function to print out the current game board
proc print_board {} {
    puts "
    Board:
    $board(1) $board(2) $board(3)
    $board(4) $board(5) $board(6)
    $board(7) $board(8) $board(9)"
}

# Function to check if a player has won the game
proc check_win {player} {
    if {$board(1) == $player && $board(2) == $player && $board(3) == $player} {
        return true
    } elseif {$board(4) == $player && $board(5) == $player && $board(6) == $player} {
        return true
    } elseif {$board(7) == $player && $board(8) == $player && $board(9) == $player} {
        return true
    } elseif {$board(1) == $player && $board(4) == $player && $board(7) == $player} {
        return true
    } elseif {$board(2) == $player && $board(5) == $player && $board(8) == $player} {
        return true
    } elseif {$board(3) == $player && $board(6) == $player && $board(9) == $player} {
        return true
    } elseif {$board(1) == $player && $board(5) == $player && $board(9) == $player} {
        return true
    } elseif {$board(3) == $player && $board(5) == $player && $board(7) == $player} {
        return true
    } else {
        return false
    }
}

# Function to handle a player's move
proc player_move {player} {
    puts "\nPlayer $player's turn:"
    puts "Enter a board position (1-9):"
    gets stdin position

    # Check if the input is valid and the position is available
    if {[info exists position] && $position in 1 2 3 4 5 6 7 8 9 && $board($position) == " "} {
        set board($position) $player
    } else {
        puts "Invalid input. Please try again."
        player_move $player
    }
}

# Function to start and run the game
proc play_game {} {
    # Keep track of the current player
    set current_player "X"

    # Keep playing until someone wins or the board is full
    while {!check_win("X") && !check_win("O") && [array names board] != {}} {

        # Alternate between the two players
        if {$current_player == "X"} {
            set current_player "O"
        } else {
            set current_player "X"
        }

        # Print the current game board
        print_board

        # Handle the current player's move
        player_move $current_player
    }

    # Check if the game ended in a tie
    if {[array names board] == {}} {
        print_board
        puts "The game ended in a tie."
    } else {
        # Print the final game board
        print_board
        # Declare the winner
        if {check_win("X")} {
            puts "Congratulations X! You have won the game."
        } else {
            puts "Congratulations O! You have won the game."
        }
    }
}

# Start the game
play_game
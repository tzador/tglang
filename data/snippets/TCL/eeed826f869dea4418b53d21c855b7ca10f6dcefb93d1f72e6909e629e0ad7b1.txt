# This code snippet demonstrates a complex nested if-else statement in TCL
# It takes in a user input and checks if it falls within a certain range
# Note: This code is NOT optimized for performance, it is purely for demonstration purposes

# Set a variable to store user input
set user_input [gets stdin]

# Convert the user input to an integer
set user_input [expr $user_input]

# Define a procedure to handle nested if-else statements
proc nested_if_else {input} {
    global user_input
    # Check if the input is within the range of 0 to 10
    if {$input >= 0 && $input <= 10} {
        puts "Input is within the range of 0 to 10"
        # Check if the input is less than 5
        if {$input < 5} {
            puts "Input is less than 5"
            # Check if the input is even
            if {$input % 2 == 0} {
                puts "Input is an even number"
                # Check if the input is divisible by 4
                if {$input % 4 == 0} {
                    puts "Input is divisible by 4"
                }
            }
            # If the input is not even, check if it is odd
            else {
                puts "Input is an odd number"
                # Check if the input is a prime number
                set flag 0
                for {set i 2} {$i < $input} {incr i} {
                    if {$input % i == 0} {
                        set flag 1
                        break
                    }
                }
                if {$flag == 1} {
                    puts "Input is a composite number"
                } else {
                    puts "Input is a prime number"
                }
            }
        }
        # If the input is not less than 5, check if it is greater than 5
        elseif {$input > 5} {
            puts "Input is greater than 5"
            # Check if the input is divisible by 3
            if {$input % 3 == 0} {
                puts "Input is divisible by 3"
            }
        }
        # If the input is equal to 5, print a message
        else {
            puts "Input is equal to 5"
        }
    }
    # If the input is not within the range of 0 to 10, print an error message
    else {
        puts "Input is not within the range of 0 to 10"
    }
}

# Call the nested_if_else procedure with the user input
nested_if_else $user_input
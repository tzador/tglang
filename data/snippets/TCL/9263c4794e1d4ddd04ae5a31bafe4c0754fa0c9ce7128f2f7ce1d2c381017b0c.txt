# This is a comment in TCL that begins with a '#'
proc factorial {n} {
    # This is a procedure that calculates the factorial of a given number
    if {$n == 0} {
        # if statement checking if n equals 0
        return 1
    } else {
        return [expr {$n * [factorial [expr $n-1]]}]
        # recursively calls the factorial procedure with n-1
    }
}

# This is a TCL list with 5 elements
set list {Hello world, TCL, code, snippet, Algo}
puts "List before sorting: $list"

# Sorting the list in alphabetical order
set sorted_list [lsort -dictionary $list]
puts "Sorted list: $sorted_list"

# This is a loop that iterates through a list and prints each value
foreach item $sorted_list {
    # the variable 'item' contains each element in the list
    puts "The current item is: $item"
}

# This is a TCL dictionary with key-value pairs
set dictionary [dict create
    alpha 1
    beta 2
    gamma 3
    delta 4
    epsilon 5
]

# This is a loop that iterates through the dictionary and prints the values
foreach key [dict keys $dictionary] {
    # the variable 'key' contains the key of each dictionary pair
    set value [dict get $dictionary $key]
    # the variable 'value' contains the corresponding value of the key
    puts "The value of $key is $value"
}

# This is a loop that iterates through numbers from 1 to 10 and prints their squares
for {set i 1} {$i <= 10} {incr i} {
    # the variable 'i' starts at 1 and increments by 1 until it reaches 10
    puts "The square of $i is [expr $i * $i]"
}
# This is a comment in TCL
proc fibonacci {n} { # Defining a procedure with input parameter n
    set a 0 # Initializing variable a with value 0
    set b 1 # Initializing variable b with value 1
    set c $a # Initializing variable c with value of a
    set d $b # Initializing variable d with value of b
    set result "0 1" # Initializing result variable with sequence starting from 0 and 1, separated by space
    while {$n > 2} { # While loop to generate Fibonacci sequence till n numbers
        set c [expr {$a + $b}] # Calculating the sum of previous two numbers
        set result "$result $c" # Appending current number to the result variable
        set a $b # Assigning value of b to a
        set b $c # Assigning value of c to b
        incr n -1 # Decrementing the value of n by 1
    }
    return $result # Returning the result
}

# Example call to fibonacci procedure
fibonacci 10
# This is a comment indicating the purpose of the following code

# Set a variable with a string value
set str "Hello world!"

# Print the value to the console
puts $str

# Create a list containing multiple values
set my_list [list 1 2 "three" "four"]

# Use a loop to print each value in the list
for {set i 0} {$i < [llength $my_list]} {incr i} {
    puts [lindex $my_list $i]
}

# Define a procedure that takes in two parameters
proc multiply {num1 num2} {
    # Multiply the two numbers and store in a variable
    set result [expr $num1 * $num2]

    # Return the result
    return $result
}

# Call the procedure with two arguments and print the result
puts [multiply 5 10]

# Use conditional statements to check a boolean value
set age 25
if {$age > 18} {
    puts "You are an adult"
} else {
    puts "You are not an adult"
}

# Create a dictionary to store key-value pairs
set my_dict [dict create name "John" age 30 occupation "Developer"]

# Print the value for a specific key in the dictionary
puts [dict get $my_dict age]

# Use a try-catch block to handle potential errors
set num "five"
try {
    # Try to convert the string to an integer
    set num_int [expr {$num * 2}]

    # Print the result
    puts $num_int
} on error {
    # Catch the error and print a message
    puts "Error: $num is not a valid integer"
}
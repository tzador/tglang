set name "John Smith" ;# this variable stores a string value
set id 12345 ;# this variable stores an integer value
set age 35 ;# this variable stores another integer value
puts "Hello, my name is $name and my ID number is $id." ;# prints out a message using the variables
if {$age > 30} { ;# checks if the age variable is greater than 30
    puts "I am over 30 years old." ;# prints out a message if the condition is true
} else { ;# executes this block if the condition is false
    puts "I am under 30 years old." ;# prints out a message if the condition is false
}
for {set i 0} {$i < $age} {incr i} { ;# executes loop for the number of times defined by the age variable
    puts "I have lived $i years." ;# prints out a message for each iteration of the loop
}
array set grades {math 80 science 90 english 85} ;# creates an array with subject names as keys and corresponding grades as values
foreach subject [array names grades] { ;# iterates through the array
    puts "My grade in $subject is $grades($subject)." ;# prints out a message for each key-value pair in the array
}
proc sayHello {name} { ;# creates a procedure that takes in a name parameter
    puts "Hello, $name!" ;# prints out a greeting using the parameter
}
set friends [list "Jane" "Mark" "Anna"] ;# creates a list of strings
foreach friend $friends { ;# iterates through the list
    sayHello $friend ;# calls the sayHello procedure for each item in the list
}
# Define a proc to check if a number is prime
proc isPrime {num} {
  # Check if num is equal to 1
  if {$num == 1} {
    return 0
  }
  # Check if num is equal to 2
  if {$num == 2} {
    return 1
  }
  # Use a for loop to check if num is divisible by any numbers less than it
  for {set i 2} {$i < $num} {incr i} {
    # Check if num is divisible by i
    if {$num % $i == 0} {
      return 0
    }
  }
  # If no divisor is found, num is prime
  return 1
}

# Define a proc to generate a list of prime numbers up to a given number
proc primeList {limit} {
    # Initialize an empty list to store prime numbers
    set primes {}
    # Use a for loop to check all numbers up to the given limit
    for {set i 1} {$i <= $limit} {incr i} {
      # Check if i is prime using the isPrime proc
      if {[isPrime $i] == 1} {
          # If i is prime, add it to the primes list
          lappend primes $i
      }
    }
    # Return the list of prime numbers
    return $primes
  }
  
# Call the primeList proc with a limit of 10 and print the result
puts [primeList 10]

# Output: 2 3 5 7
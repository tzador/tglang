#[This code snippet generates a list of prime numbers up to a given limit]
proc primes {limit} { #[function to generate prime numbers]
    set result [list] #[initialize empty list to store prime numbers]
    set composites [array create composites] #[initialize empty array to store composite numbers]
    for {set i 2} {$i <= $limit} {incr i} { #[loop from 2 to limit]
        if {![info exists composites($i)]} { #[check if current number is a composite]
            lappend result $i #[if not, add to list of primes]
            for {set j [expr {$i * 2}]} {$j <= $limit} {incr j $i} { #[loop through multiples of current number]
                set composites($j) 1 #[mark multiples as composite]
            }
        }
    }
    return $result #[return list of primes]
}
#Example usage:
puts "Enter a limit: "
flush stdout
gets stdin limit
set prime_list [primes $limit]
puts "List of primes up to $limit:"
puts $prime_list
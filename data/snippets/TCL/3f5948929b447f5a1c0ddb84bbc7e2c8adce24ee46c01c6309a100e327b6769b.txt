# TCL code to sort a list of numbers in ascending order using merge sort
proc merge {list} {

    # Base case
    if {[llength $list] < 2} {
        return $list
    }

    # Divide the list into two sublists
    set middle [expr {[llength $list] / 2}]
    set left [merge [lrange $list 0 $middle-1]]
    set right [merge [lrange $list $middle end]]

    # Initialize variables
    set i 0
    set j 0
    set k 0
    set result [list]

    # Compare the elements in sublists and combine them
    while {$i < [llength $left] && $j < [llength $right]} {
        if {[lindex $left $i] < [lindex $right $j]} {
            lappend result [lindex $left $i]
            incr i
        } else {
            lappend result [lindex $right $j]
            incr j
        }
        incr k
    }

    # Add any remaining elements from left sublist
    while {$i < [llength $left]} {
        lappend result [lindex $left $i]
        incr i
        incr k
    }

    # Add any remaining elements from right sublist
    while {$j < [llength $right]} {
        lappend result [lindex $right $j]
        incr j
        incr k
    }

    # Return the sorted list
    return $result
}

# Example list to sort
set unsorted [list 7 3 9 5 1 6 2 8 4]

# Call the merge procedure and save result
set sorted [merge $unsorted]

# Print the sorted list
puts "Sorted List: $sorted"
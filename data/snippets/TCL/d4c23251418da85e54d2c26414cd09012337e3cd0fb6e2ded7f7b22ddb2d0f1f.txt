#[TCL Code Snippet]
namespace eval Math {
	
	#Define a procedure for calculating the factorial of a given number
	proc factorial {num} {
		
		#Use an if statement to handle negative numbers
		if {$num < 0} {
			puts "Can't calculate factorial for negative numbers."
			return
		}
		
		#Use nested if statements to handle numbers 0 and 1
		if {$num == 0 || $num == 1} {
			return 1
		}
		
		#Initialize a variable to store the factorial value
		set result 1
		
		#Use a for loop to calculate factorial for numbers greater than 1
		for {set i 2} {$i <= $num} {incr i} {
			set result [expr $result * $i]
		}
		
		#Return the factorial value
		return $result
	}
	
	#Define a procedure for calculating the combination of two numbers
	proc combination {n r} {
		
		#Check if n is smaller than r, if so return 0
		if {$n < $r} {
			return 0
		}
		
		#Calculate the factorial of n and store it in a variable
		set n_fac [factorial $n]
		
		#Calculate the factorial of r and store it in a variable
		set r_fac [factorial $r]
		
		#Calculate the factorial of n-r and store it in a variable
		set n_r_fac [factorial [expr $n - $r]]
		
		#Calculate the combination value using the formula n!/(r!(n-r)!)
		set result [expr $n_fac/($r_fac * $n_r_fac)]
		
		#Return the combination value
		return $result
	}
}

#[Example usage]
set n 10
set r 4
puts "The combination of $n choose $r is [Math::combination $n $r]"
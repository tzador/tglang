# This is a comment in TCL

# Define a function named "fibonacci" that takes in a number "n"
proc fibonacci {n} {
    # Initialize variables "a" and "b"
    set a 0
    set b 1

    # Check if "n" is equal to or less than 0
    if {$n <= 0} {
        # If so, return "a"
        return $a
    }

    # Check if "n" is equal to 1
    if {$n == 1} {
        # If so, return "b"
        return $b
    }

    # Initialize a variable "result" and set it to 0
    set result 0

    # Use a "for" loop to calculate the Fibonacci sequence
    for {set i 2} {$i <= $n} {incr i} {
        # Calculate the next number in the sequence
        set result [expr {$a + $b}]

        # Update "a" and "b" to continue the sequence
        set a $b
        set b $result
    }

    # Return the final result
    return $result
}

# Call the "fibonacci" function with the input "10" and print the result
puts "The 10th Fibonacci number is [fibonacci 10]"

# Output:
# The 10th Fibonacci number is 55
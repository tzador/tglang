# This is a tcl code snippet that creates a multi-dimensional array and performs calculations on it

# Create a 3D array with 3 rows, 4 columns, and 2 layers

set array3D [array resize {} [list 3 4 2]]

# Populate the array with random integers between 0 and 9

for {set i 0} {$i < 3} {incr i} {
    for {set j 0} {$j < 4} {incr j} {
        for {set k 0} {$k < 2} {incr k} {
            set array3D($i,$j,$k) [expr int(rand() * 10)]
        }
    }
}

# Print out the array values in a formatted table

puts "Array Values:"
for {set i 0} {$i < 3} {incr i} {
    for {set j 0} {$j < 4} {incr j} {
        for {set k 0} {$k < 2} {incr k} {
            puts [format {%4d} $array3D($i,$j,$k)]
        }
        puts ""
    }
    puts ""
}

# Calculate and print the sum of all the values in the array

set sum 0
for {set i 0} {$i < 3} {incr i} {
    for {set j 0} {$j < 4} {incr j} {
        for {set k 0} {$k < 2} {incr k} {
            set sum [expr $sum + $array3D($i,$j,$k)]
        }
    }
}

puts "Sum of all values in array: $sum"

# Calculate and print the maximum value in each layer of the array

puts "Maximum values in each layer:"
for {set k 0} {$k < 2} {incr k} {
    set max $array3D(0,0,$k)
    for {set i 0} {$i < 3} {incr i} {
        for {set j 0} {$j < 4} {incr j} {
            if {$array3D($i,$j,$k) > $max} {
                set max $array3D($i,$j,$k)
            }
        }
    }
    puts "Layer $k: $max"
}
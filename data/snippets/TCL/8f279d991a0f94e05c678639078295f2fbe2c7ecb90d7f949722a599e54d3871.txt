# Basic hello world program in TCL
set msg "Hello, world!"       ;# create variable with message
puts $msg                     ;# print message to console

# Functions in TCL
proc add {x y} {             ;# define function 'add' with two parameters
    return [expr {$x + $y}]  ;# perform addition using TCL's 'expr' command
}

set result [add 3 5]         ;# call function and store result in variable
puts "The result is $result" ;# print result to console

# Advanced string manipulation
set text "This is a long sentence with several words"

# Split string into a list
set words [split $text " "]         ;# split string by spaces into a list
puts "The number of words is [llength $words]"              ;# counts number of words

# Remove duplicates from list
set uniqueWords [lsort -unique $words]  ;# uses 'lsort' command to sort and remove duplicates
puts "The unique words are: $uniqueWords"      ;# prints list of unique words

# Advanced control flow using 'foreach' loop
set numbers {1 2 3 4 5}      ;# create a list of numbers
foreach num $numbers {        ;# loop through each number in the list
    if {$num % 2 == 0} {      ;# check if number is even
        puts "$num is even"   ;# if so, print message
    } else {
        puts "$num is odd"    ;# otherwise, print different message
    }
}

# Object-oriented programming in TCL
oo::class create Animal     ;# create a class named 'Animal'

Animal instproc move {} {    ;# define class method 'move'
    puts "The animal is moving"
}

Animal instproc makeSound {sound} {     ;# define class method 'makeSound' with parameter
    puts "The animal makes $sound sound"
}

set dog [Animal new]   ;# create an instance of 'Animal' class called 'dog'
$dog move              ;# call 'move' method on 'dog' instance
$dog makeSound "woof"  ;# call 'makeSound' method on 'dog' instance with parameter
# This is a code snippet in TCL
# It creates a linked list and reverses its elements

# Define a proc to create a node
proc make_node {value} {
    set node [list]
    lappend node value
    lappend node 0
    return node
}

# Define a proc to insert a node at the beginning of a linked list
proc insert_first {node list} {
    if {[llength $list] == 0} {
        lappend list $node
        lappend list $node
    } else {
        set next [lindex $list 0]
        lset node 1 $next
        lset list 0 $node
    }
}

# Define a proc to reverse a linked list
proc reverse_list {list} {
    set current [lindex $list 0]
    set prev 0
    while {$current != 0} {
        set next [lindex $current 1]
        lset current 1 $prev
        set prev $current
        set current $next
    }
    lset list 0 [lindex $prev 0]
    lset list 1 [lindex $prev 1]
}

# Create an empty linked list
set linked_list {}

# Insert nodes at the beginning of the linked list
insert_first [make_node 1] $linked_list
insert_first [make_node 2] $linked_list
insert_first [make_node 3] $linked_list
insert_first [make_node 4] $linked_list
insert_first [make_node 5] $linked_list

# Print the original list
puts "Original Linked List: $linked_list"

# Reverse the linked list
reverse_list $linked_list

# Print the reversed list
puts "Reversed Linked List: $linked_list"
# This is a comment in TCL
proc fibonacci {n} { # creating a procedure called fibonacci that takes in a parameter n
    if {$n <= 1} { # checking if n is less than or equal to 1
        set result $n # if true, set result to n
    } else { # otherwise
        set a 0 # set a to 0
        set b 1 # set b to 1
        set i 2 # set i to 2
        while {$i <= $n} { # while loop that runs while i is less than or equal to n
            set result [expr {$a + $b}] # calculating the next fibonacci number and storing it in result
            set a $b # updating a with the value of b
            set b $result # updating b with the new fibonacci number
            incr i # incrementing i by 1
        }
    }
    return $result # returning the final fibonacci number
}


# Example code to call the fibonacci procedure and print the results
set n 10 # setting n to 10
puts "Fibonacci number at position $n is [fibonacci $n]" # calling the fibonacci procedure and printing the result
# Output: "Fibonacci number at position 10 is 55"
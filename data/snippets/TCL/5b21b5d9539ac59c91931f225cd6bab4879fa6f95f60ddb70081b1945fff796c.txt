proc matrixMultiply {matrix1 matrix2} {
    #Create empty list for the resulting matrix
    set result {}
    
    #Loop through rows of matrix1
    for {set i 0} {$i < [llength $matrix1]} {incr i} {
        #Create empty list for the next row in the resulting matrix
        set row {}
        #Loop through columns of matrix2
        for {set j 0} {$j < [llength [lindex $matrix2 0]]} {incr j} {
            #Initialize variable to store the dot product of current row in matrix1 and current column in matrix2
            set dotProduct 0
            
            #Calculate dot product by multiplying each element in the current row of matrix1 with the corresponding element in the current column of matrix2 and adding them to dotProduct
            for {set k 0} {$k < [llength [lindex $matrix1 $i]]} {incr k} {
                set dotProduct [expr {$dotProduct + ([lindex [lindex $matrix1 $i] $k] * [lindex [lindex $matrix2 $k] $j])}]
            }
            
            #Add the dot product to the current row in the resulting matrix
            lappend row $dotProduct
        }
        
        #Add the row to the resulting matrix list
        lappend result $row
    }
    
    #Return the resulting matrix list
    return $result
}

#Example input matrices
set matrix1 {{1 2 3} {4 5 6} {7 8 9}}
set matrix2 {{9 8 7} {6 5 4} {3 2 1}}

#Multiply the matrices using the function
set result [matrixMultiply $matrix1 $matrix2]

#Print the resulting matrix
puts "Result: $result"
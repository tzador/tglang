# This is a code snippet that defines a function to calculate the Fibonacci sequence
# using iteration instead of recursion
# It takes in the number of terms to be calculated and returns the sequence as a list

proc fib_iter {n} {
    # define a list to store the sequence
    set sequence {}

    # base cases for the first two terms
    if {$n == 1} {
        lappend sequence 0
    } elseif {$n == 2} {
        lappend sequence 0 1
    } else {
        # initialize the first two terms
        set a 0
        set b 1

        # loop from third term until the given number of terms
        for {set i 2} {$i < $n} {incr i} {
            # calculate the next term by adding the previous two terms
            set c [expr $a + $b]

            # add the next term to the sequence list
            lappend sequence $c

            # update the previous two terms for the next iteration
            set a $b
            set b $c
        }
    }

    # return the sequence list
    return $sequence
}

# call the function with 10 as the number of terms
puts [fib_iter 10] # Output: {0 1 1 2 3 5 8 13 21 34}
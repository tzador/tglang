### This code snippet uses a procedure to generate a random password ###

proc generatePassword {length} {
  set charLength 10
  set minLength 6
  set password ""

  while {[string length $password] < $length} {
    
    # randomly generate a number between 0 and 1
    set num [expr {ceil(rand() * 10) % 2}]

    # if num is 0, generate a lowercase letter
    if {$num == 0} {
      # randomly choose a lowercase letter using ASCII codes
      set lower [expr {rand()*26 + 97}]
      append password [format %c $lower]
    } else {
      # randomly choose an uppercase letter using ASCII codes
      set upper [expr {rand()*26 + 65}]
      append password [format %c $upper]
    }
  }

  # check if password length is less than the minimum length, add random numbers to make it longer
  if {[string length $password] < $minLength} {
    set nums{}
    while {[string length $nums] < ($minLength - [string length $password])} {
    
      # randomly generate a number between 0 and 9
      set num [expr {ceil(rand() * 10)}]
      append nums [format %d $num]
    }
    append password $nums
  }
  return $password
}

# call the generatePassword procedure
set password [generatePassword 10]

# print the generated password
puts $password
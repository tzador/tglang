proc get_primes {n} {

# This procedure takes in a number, n, and returns a list of prime numbers up to n.
# It uses the Sieve of Eratosthenes algorithm to generate the list of primes.
# Source: https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes

    set primes [list] ;# initialize empty list to store primes
    set sieve [list] ;# initialize empty list to use as sieve

    for {set i 2} {$i <= n} {incr i} { ;# loop from 2 to n
        lappend sieve 1 ;# populate the sieve with 1s
    }

    for {set i 2} {$i <= n} {incr i} { ;# loop through numbers up to n
        if {[lindex $sieve $i] == 1} { ;# if current number is marked as prime
            lappend primes $i ;# add it to the list of primes
            for {set j [expr {$i*$i}]} {$j <= n} {incr j $i} { ;# loop through multiples of current number
                lset sieve $j 0 ;# mark multiples as not prime in the sieve
            }
        }
    }

    return $primes ;# return list of primes
}

# Example usage: get_primes 10 ;# returns {2 3 5 7}
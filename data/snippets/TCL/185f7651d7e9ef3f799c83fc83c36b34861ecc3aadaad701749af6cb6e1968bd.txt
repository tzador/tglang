# This is a TCL code snippet that creates a function to calculate the Fibonacci sequence
proc fibonacci {n} {
  # First, we check if the input value is equal to 0 or 1, as these are the base cases for the sequence
  if {$n == 0 || $n == 1} {
    # If so, we simply return the value as it is
    return $n
  } else {
    # Otherwise, we recursively call the function to calculate the two previous values in the sequence and add them together
    # This is the main algorithm behind the Fibonacci sequence
    return [expr {[fibonacci [expr $n-1]] + [fibonacci [expr $n-2]]}]
  }
}

# Now, we can call the function and pass in the desired input value to get the corresponding fibonacci number
puts [fibonacci 10] ; # Output: 55
puts [fibonacci 0] ; # Output: 0
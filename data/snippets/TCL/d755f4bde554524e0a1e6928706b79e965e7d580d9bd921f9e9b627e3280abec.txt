proc fib {n} { #creates a procedure called fib that takes in a variable n
	set result 0 #creates a variable result with initial value 0
	if {[info exists ::fib(n)]} { #checks if the procedure already exists
		set result $::fib(n) #if it does, use the existing value for result
	} else { #if not, calculate the Fibonacci sequence
		if {$n == 0 || $n == 1} { #base case, n = 0 or n = 1
			set result $n #set result to n
		} else { #if n > 1, use recursion to calculate the Fibonacci sequence
			set result [expr {[fib [expr $n-1]] + [fib [expr $n-2]]}] #uses the fib procedure to calculate the Fibonacci sequence
		}
		set ::fib(n) $result #stores the result in a global variable for future use
	}
	return $result #returns the value of result
}

fib 10 #calls the fib procedure with n = 10, should return 55
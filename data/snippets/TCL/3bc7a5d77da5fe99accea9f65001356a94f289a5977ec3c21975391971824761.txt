# Create a new TCL procedure that takes in two arguments, performs a recursive call on itself, and then returns the final result
proc recurse {arg1 arg2} {
    if {$arg1 <= 0} { # Base case
        return $arg2
    } else { # Recursive case
        return [recurse [expr $arg1 - 1] [expr $arg2 + 1]]
    }
}

# Call the procedure and print the result
puts [recurse 5 10] # Output: 15

# Create a list variable with some elements
set myList {1 2 3 4 5}

# Iterate through the list and print each element
foreach element $myList {
    puts $element # Output: 1, 2, 3, 4, 5
}

# Create a new dictionary with some key-value pairs
set myDict {
    name "John"
    age 25
    occupation "Software Engineer"
}

# Print the value associated with the "name" key
puts [dict get $myDict name] # Output: John

# Add a new key-value pair to the dictionary
dict set myDict city "New York"

# Remove the "age" key from the dictionary
dict unset myDict age

# Check if the dictionary contains a specific key
if {[dict exists $myDict name]} {
    puts "Name exists in dictionary"
} else {
    puts "Name does not exist in dictionary"
} # Output: Name exists in dictionary
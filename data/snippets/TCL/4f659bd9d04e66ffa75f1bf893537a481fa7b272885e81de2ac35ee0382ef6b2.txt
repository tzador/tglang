#!/usr/bin/env tclsh

# This is a comment in TCL
# We are defining some variables here
set var1 "This is a string variable"
set var2 12.5
set var3 [list one two three]
set var4 [dict create a 1 b 2 c 3]

# We can access the variables using '$' sign
puts $var1

# We can do arithmetic operations on variables
set var5 [expr $var2 * 2]
puts $var5

# We can use conditional statements
if {$var2 < 10} {
  puts "$var2 is less than 10"
} else {
  puts "$var2 is greater than or equal to 10"
}

# We can use for loops to iterate through a list
foreach element $var3 {
  puts $element
}

# We can also use foreach loops to iterate through dictionaries
foreach {key value} [array get var4] {
  puts "Key: $key, Value: $value"
}

# We can define procedures to reuse code
proc factorial {n} {
  if {$n == 0} {
    return 1
  } else {
    return [expr $n * [factorial [expr $n - 1]]]
  }
}

# Calling the factorial procedure
set var6 [factorial 5]
puts $var6

# We can also use 'switch' statements
switch -- $var1 {
  "This is a string variable" {
    puts "String variable found"
  }
  "This is an integer variable" {
    puts "Integer variable found"
  }
  default {
    puts "Variable type not recognized"
  }
}
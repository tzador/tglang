# This code snippet performs a binary search on a sorted list.

proc binarySearch {list value} {
    # Initialize variables
    set left 0
    set right [llength $list]-1
    set found 0
    set index -1

    # Loop until value is found or left exceeds right
    while { $found == 0 && $left <= $right } {
        # Calculate middle index
        set middle [expr ($left+$right)/2]

        # Check if middle element contains value
        if { [lindex $list $middle] == $value } {
            # Set index to middle if element is found
            set found 1
            set index $middle
        } else {
            # Update left or right based on value's position
            if { [lindex $list $middle] < $value } {
                set left [expr $middle+1]
            } else {
                set right [expr $middle-1]
            }
        }
    }

    # Print results
    if { $found == 1 } {
        puts "Found value $value at index $index"
    } else {
        puts "Value $value not found"
    }
}

# Example usage
set my_list [list 1 3 5 7 9]
binarySearch $my_list 5
# Output: Found value 5 at index 2
binarySearch $my_list 8
# Output: Value 8 not found
#--------------------------------------------------------------------------------------------------------------------------------#
# This is a complex code snippet written in TCL programming language.
# It showcases the use of multiple control structures and command executions.
# The following code snippet is a simple program that simulates a small market system.
#--------------------------------------------------------------------------------------------------------------------------------#

# Create an array to hold the different products and their respective prices.
set products {
    apple 1
    banana 2
    orange 3
}

# Create a variable to keep track of the total cost.
set total 0

# Prompt user for their name.
puts "Welcome to the market! Please enter your name:"
gets stdin name

# Display menu to user.
puts "Hello $name! Here are the available products:"

# Loop through the products array and display their names and prices.
foreach {product price} $products {
    set formatted_price [format "$%.2f" $price]
    puts "$product - $formatted_price"
}

# Prompt user to enter the desired product and quantity.
puts "Enter the product you would like to purchase:"
gets stdin desired_product
puts "Enter the quantity:"
gets stdin quantity

# Use if-else statement to check if the desired product is available.
if {$desired_product in $products} {
    # Use switch statement to handle prices of different products.
    switch -- $desired_product {
        "apple" {
            set cost [expr $quantity * $products(apple)]
        }
        "banana" {
            set cost [expr $quantity * $products(banana)]
        }
        "orange" {
            set cost [expr $quantity * $products(orange)]
        }
    }

    # Display the cost of the desired product and add it to the total cost.
    set formatted_cost [format "$%.2f" $cost]
    puts "The total cost of $quantity $desired_product(s) is $formatted_cost."
    set total [expr $total + $cost]
} else {
    # Prompt user to enter a valid product.
    puts "Please enter a valid product."
}

# If there were any purchased products, display the total cost and thank the user.
if {$total > 0} {
    set formatted_total [format "$%.2f" $total]
    puts "Thank you for shopping with us! Your total cost is $formatted_total."
} else {
    # If no products were purchased, display a message.
    puts "You did not make any purchases. Thank you for visiting!"
}
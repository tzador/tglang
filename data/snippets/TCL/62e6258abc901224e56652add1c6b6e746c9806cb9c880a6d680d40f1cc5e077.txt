# This code snippet creates a User class and methods for setting and getting user information

# Create the User class using the `class` keyword
class User {

    # Create an init method with self as the parameter
    # This method will be used to initialize a new User object with a name and email
    proc init {self} {
        
        # Use `upvar` to create variables in the scope of the new User object
        # The variables will have the same name as the parameters passed into the init method
        upvar name self.name
        upvar email self.email
    }

    # Create a method to set a user's name
    proc setName {self newName} {
        # Use the `upvar 0` command to access the variables in the parent scope
        # In this case, we are accessing the variables of the User object
        upvar 0 name userName

        # Use string functions to validate the new name
        if {[string length $newName] < 3 || [string length $newName] > 30} {
            puts "Name must be between 3 and 30 characters."
        } else {
            # Set the new name if it passes validation
            set userName $newName
        }
    }

    # Create a method to get a user's name
    proc getName {self} {
        # Use `upvar 0` to access the name variable in the parent scope
        upvar 0 name userName
        # Return the name variable
        return $userName
    }

    # Create a method to set a user's email
    proc setEmail {self newEmail} {
        # Use `upvar 0` to access the email variable in the parent scope
        upvar 0 email userEmail

        # Use string functions to validate the new email
        if {[string first "@" $newEmail] == -1} {
            puts "Invalid email address."
        } else {
            # Set the new email if it passes validation
            set userEmail $newEmail
        }
    }

    # Create a method to get a user's email
    proc getEmail {self} {
        # Use `upvar 0` to access the email variable in the parent scope
        upvar 0 email userEmail
        # Return the email variable
        return $userEmail
    }
}

# Create a new User object
set newUser [User new]

# Use the setName method to set the user's name
$newUser setName "John Doe"

# Use the setEmail method to set the user's email
$newUser setEmail "johndoe@example.com"

# Use the getName method to get the user's name
puts "User's name: [$newUser getName]"

# Use the getEmail method to get the user's email
puts "User's email: [$newUser getEmail]"
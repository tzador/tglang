# This is a code snippet in TCL.
# It defines a function that calculates the area of a triangle.
# The function takes in a list of three sides as parameters.
# It also includes error handling for invalid inputs.

# Define the function
proc triangle_area {sides} {
    # Check for invalid inputs
    if {[llength $sides] != 3} {
        puts "Invalid input: must provide three sides."
        return
    } elseif {[expr [lindex $sides 0] + [lindex $sides 1] <= [lindex $sides 2] || [lindex $sides 0] + [lindex $sides 2] <= [lindex $sides 1] || [lindex $sides 1] + [lindex $sides 2] <= [lindex $sides 0]]} {
        puts "Invalid input: triangle cannot be formed from given sides."
        return
    }

    # Calculate the semi-perimeter
    set s [expr {([lindex $sides 0] + [lindex $sides 1] + [lindex $sides 2]) / 2}]

    # Calculate the area using Heron's formula
    set area [expr {sqrt($s * ($s - [lindex $sides 0]) * ($s - [lindex $sides 1]) * ($s - [lindex $sides 2]))}]

    # Return the area
    return $area
}

# Call the function and store the result in a variable
set sides [list 3 4 5]
set result [triangle_area $sides]

# Print the output
puts "The area of the triangle with sides $sides is $result."
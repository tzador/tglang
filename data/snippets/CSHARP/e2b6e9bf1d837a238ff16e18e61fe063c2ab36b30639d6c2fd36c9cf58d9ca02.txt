/// <summary>
/// This method checks if a given string is a palindrome.
/// </summary>
/// <param name="str">The string to check.</param>
/// <returns>True if the string is a palindrome, false otherwise.</returns>
public static bool IsPalindrome(string str)
{
    // Remove all whitespaces from the string
    str = str.Replace(" ", "");
    
    // Convert the string to lowercase for case-insensitive comparison
    str = str.ToLower();
    
    // Create a character array from the string
    char[] charArray = str.ToCharArray();
    
    // Create a new array for reversed characters
    char[] reversedArray = new char[charArray.Length];
    
    // Loop through the character array
    for (int i = 0; i < charArray.Length; i++)
    {
        // Add characters to the reversed array in reverse order
        reversedArray[i] = charArray[charArray.Length - i - 1];
    }
    
    // Create a string from the reversed character array
    string reversedString = new string(reversedArray);
    
    // Check if the reversed string is equal to the original string
    if (reversedString == str)
    {
        // Return true if they are equal
        return true;
    }
    else
    {
        // Return false if they are not equal
        return false;
    }
}
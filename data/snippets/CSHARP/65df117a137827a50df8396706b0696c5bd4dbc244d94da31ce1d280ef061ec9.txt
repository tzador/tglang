/*
  This is a multiline comment in C#.
  It is used to provide information about the code.
  The code below is a complex class with properties and methods.
*/

public class Person
{
    /* 
      The 'FirstName' property stores the first name of the person.
      It has a private setter and a public getter.
    */
    public string FirstName { get; private set; }

    /* 
      The 'LastName' property stores the last name of the person.
      It has a private setter and a public getter.
    */
    public string LastName { get; private set; }

    /* 
      The 'Age' property stores the age of the person.
      It has a private setter and a public getter.
    */
    public int Age { get; private set; }

    /* 
      The 'FullName' property stores the full name of the person.
      It is a read-only property that combines the first and last name.
    */
    public string FullName
    {
        get
        {
            return $"{FirstName} {LastName}";
        }
    }

    /* 
      The constructor takes in first name, last name, and age and 
      sets the corresponding properties.
    */
    public Person(string firstName, string lastName, int age)
    {
        FirstName = firstName;
        LastName = lastName;
        Age = age;
    }

    /* 
      The 'GetGreeting' method returns a greeting based on the person's age.
      If the person is less than 18 years old, it returns "Hello, youngster!".
      If the person is between 18 and 50, it returns "Hello, [FirstName]!".
      If the person is older than 50, it returns "Hello, [FullName]! You are [Age] years old.".
    */
    public string GetGreeting()
    {
        if (Age < 18)
        {
            return "Hello, youngster!";
        }
        else if (Age >= 18 && Age <= 50)
        {
            return $"Hello, {FirstName}!";
        }
        else
        {
            return $"Hello, {FullName}! You are {Age} years old.";
        }
    }
}

// Example of creating a new instance of the Person class
Person johnDoe = new Person("John", "Doe", 25);

// Example of accessing properties and calling methods on the Person instance
string firstName = johnDoe.FirstName; // returns "John"
int age = johnDoe.Age; // returns 25
string greeting = johnDoe.GetGreeting(); // returns "Hello, John!"
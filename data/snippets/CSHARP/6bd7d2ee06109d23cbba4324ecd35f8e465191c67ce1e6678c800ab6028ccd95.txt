/// <summary>
/// Generates a Fibonacci sequence of a given length and returns the sequence as a List.
/// </summary>
/// <param name="length">Desired length of the sequence.</param>
/// <returns>The generated Fibonacci sequence as a List.</returns>
public static List<int> GenerateFibonacciSequence(int length)
{
    var sequence = new List<int> { 0, 1 }; // initialize with first two numbers in sequence
    if (length < 0)
    {
        throw new ArgumentException("Length must be a positive integer.");
    }
    else if (length == 0)
    {
        // return an empty sequence
        return new List<int>();
    }
    else if (length == 1)
    {
        // return sequence with first number only
        return new List<int> { 0 };
    }
    else if (length == 2)
    {
        // return sequence with first two numbers only
        return sequence;
    }
    else
    {
        // loop through to generate the rest of the sequence
        for (int i = 2; i < length; i++)
        {
            // add the sum of the two previous numbers to the sequence
            sequence.Add(sequence[i - 1] + sequence[i - 2]);
        }
        return sequence;
    }
}
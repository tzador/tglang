// This is a complex code snippet in CSHARP

// Class representing a person
public class Person
{
    // Private fields
    private string firstName;
    private string lastName;

    // Constructor with parameters
    public Person(string firstName, string lastName)
    {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    // Public properties for fields
    public string FirstName
    {
        get { return this.firstName; }
        set { this.firstName = value; }
    }

    public string LastName
    {
        get { return this.lastName; }
        set { this.lastName = value; }
    }

    // Method to get full name
    public string GetFullName()
    {
        return $"{this.firstName} {this.lastName}";
    }

    // Static method to combine two Person objects
    public static Person Combine(Person p1, Person p2)
    {
        return new Person($"{p1.FirstName} {p2.LastName}", $"{p1.LastName} {p2.LastName}");
    }

    // Main method
    static void Main(string[] args)
    {
        // Create two Person objects
        Person person1 = new Person("John", "Doe");
        Person person2 = new Person("Jane", "Smith");

        // Call GetFullName method on person1
        string fullName = person1.GetFullName();
        Console.WriteLine(fullName); // Output: John Doe

        // Call static Combine method
        Person combinedPerson = Person.Combine(person1, person2);

        // Print full name of combined Person
        Console.WriteLine(combinedPerson.GetFullName()); // Output: John Smith

        // Print static property of Person class
        Console.WriteLine(Person.Combine); // Output: Person.Combine
    }
}
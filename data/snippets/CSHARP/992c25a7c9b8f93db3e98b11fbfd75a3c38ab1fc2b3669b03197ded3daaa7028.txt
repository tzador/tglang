/// <summary>
/// This class represents a car with a make, model, and year.
/// </summary>
public class Car
{
    /// <summary>
    /// The make of the car.
    /// </summary>
    public string Make { get; set; }
    
    /// <summary>
    /// The model of the car.
    /// </summary>
    public string Model { get; set; }
    
    /// <summary>
    /// The year of the car.
    /// </summary>
    public int Year { get; set; }
    
    /// <summary>
    /// Constructs a new instance of the Car class with the given parameters.
    /// </summary>
    /// <param name="make">The make of the car.</param>
    /// <param name="model">The model of the car.</param>
    /// <param name="year">The year of the car.</param>
    public Car(string make, string model, int year)
    {
        Make = make;
        Model = model;
        Year = year;
    }
    
    /// <summary>
    /// Prints the make, model, and year of the car.
    /// </summary>
    public void PrintCarInfo()
    {
        Console.WriteLine($"Make: {Make}");
        Console.WriteLine($"Model: {Model}");
        Console.WriteLine($"Year: {Year}");
    }

    /// <summary>
    /// Compares two Car objects and returns a boolean indicating if they are equal.
    /// </summary>
    /// <param name="obj">The object to compare to.</param>
    /// <returns>True if the objects are equal, false if they are not.</returns>
    public override bool Equals(object obj)
    {
        if (obj == null || !this.GetType().Equals(obj.GetType()))
        {
            return false;
        }
        
        Car car = (Car)obj;
        return (this.Make == car.Make && this.Model == car.Model && this.Year == car.Year);
    }
    
    /// <summary>
    /// Calculates the hash code for the Car object.
    /// </summary>
    /// <returns>The hash code for the Car object.</returns>
    public override int GetHashCode()
    {
        // Use prime numbers to generate a unique hash code for the Car object
        return (17 * Make.GetHashCode()) + (23 * Model.GetHashCode()) + (37 * Year.GetHashCode());
    }
}
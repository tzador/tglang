//This code snippet is for generating a Fibonacci sequence using recursion
//First, create a class called Fibonacci
public class Fibonacci
{
    //Create a function to generate the sequence
    //The function takes in an integer as the position of the desired number in the sequence
    public int GenerateSequence(int position)
    {
        //If the position is 0 or 1, return 0 or 1 respectively
        if (position == 0)
        {
            return 0;
        }
        else if (position == 1)
        {
            return 1;
        }
        //If the position is not 0 or 1, recursively call the function to generate the number
        //The number is calculated by adding the previous two numbers in the sequence
        else
        {
            return GenerateSequence(position - 1) + GenerateSequence(position - 2);
        }
    }
}

//To use the Fibonacci class and generate the sequence
//Create an instance of the class
Fibonacci fibonacci = new Fibonacci();
//Call the GenerateSequence function and pass in the desired position as an argument
int sequenceNumber = fibonacci.GenerateSequence(6);
//Print the result
Console.WriteLine(sequenceNumber); //Output: 8
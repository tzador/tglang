/// <summary>
/// This method checks if a given number is prime.
/// It uses a basic algorithm to check for divisibility.
/// </summary>
/// <param name="num">The number to be checked.</param>
/// <returns>True if the number is prime, false if not.</returns>
public bool CheckPrime(int num)
{
    // Checks if the number is less than or equal to 1,
    // as 1 is not a prime number.
    if (num <= 1)
    {
        return false;
    }

    // Checks if the number is equal to 2,
    // as 2 is the only even prime number.
    if (num == 2)
    {
        return true;
    }

    // Checks if the number is even,
    // as no even number greater than 2 can be prime.
    if (num % 2 == 0)
    {
        return false;
    }

    // Checks for divisibility by odd numbers
    // from 3 up to the square root of the number.
    // If any number is found to be divisible,
    // then the number is not prime.
    for (int i = 3; i <= Math.Sqrt(num); i += 2)
    {
        if (num % i == 0)
        {
            return false;
        }
    }

    // If none of the above conditions are met,
    // then the number is prime.
    return true;
}
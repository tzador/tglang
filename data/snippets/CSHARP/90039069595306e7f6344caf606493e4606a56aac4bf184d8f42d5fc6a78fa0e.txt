// This code snippet creates a custom class named "Person" with various properties and methods.
class Person
{
    // Private fields
    private string name;
    private int age;
    private string occupation;

    // Public properties
    public string Name
    {
        get
        {
            return name;
        }
        set
        {
            name = value;
        }
    }

    public int Age
    {
        get
        {
            return age;
        }
        set
        {
            age = value;
        }
    }

    public string Occupation
    {
        get
        {
            return occupation;
        }
        set
        {
            occupation = value;
        }
    }

    // Method to introduce the person
    public void Introduce()
    {
        Console.WriteLine("Hello, my name is " + name + ", I am " + age + " years old and I work as a " + occupation + ".");
    }

    // Method to check if the person is older than a certain age
    public bool IsOlder(int year)
    {
        if (age > year)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}

// Example usage of the Person class
class Program
{
    static void Main()
    {
        // Creating a new instance of Person
        Person person = new Person();

        // Assigning values to the properties
        person.Name = "John Doe";
        person.Age = 35;
        person.Occupation = "Engineer";

        // Calling the Introduce method
        person.Introduce();

        // Checking if the person is older than 40 years
        bool olderThanForty = person.IsOlder(40);
        if (olderThanForty)
        {
            Console.WriteLine("John Doe is older than 40 years.");
        }
        else
        {
            Console.WriteLine("John Doe is younger than 40 years.");
        }
    }
}
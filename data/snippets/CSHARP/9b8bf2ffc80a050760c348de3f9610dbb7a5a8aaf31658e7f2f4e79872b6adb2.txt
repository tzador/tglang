/// <summary>
/// Class for handling complex numbers
/// </summary>
public class ComplexNumber
{
    /// <summary>
    /// Real part of the complex number
    /// </summary>
    public double Real { get; set; }

    /// <summary>
    /// Imaginary part of the complex number
    /// </summary>
    public double Imaginary { get; set; }

    /// <summary>
    /// Constructor for creating a complex number
    /// </summary>
    /// <param name="real">Real part of the complex number</param>
    /// <param name="imaginary">Imaginary part of the complex number</param>
    public ComplexNumber(double real, double imaginary)
    {
        Real = real;
        Imaginary = imaginary;
    }

    /// <summary>
    /// Adds two complex numbers and returns the result
    /// </summary>
    /// <param name="complex1">First complex number</param>
    /// <param name="complex2">Second complex number</param>
    /// <returns>Sum of the two complex numbers</returns>
    public static ComplexNumber operator +(ComplexNumber complex1, ComplexNumber complex2)
    {
        return new ComplexNumber(complex1.Real + complex2.Real, complex1.Imaginary + complex2.Imaginary);
    }

    /// <summary>
    /// Subtracts two complex numbers and returns the result
    /// </summary>
    /// <param name="complex1">First complex number</param>
    /// <param name="complex2">Second complex number</param>
    /// <returns>Difference of the two complex numbers</returns>
    public static ComplexNumber operator -(ComplexNumber complex1, ComplexNumber complex2)
    {
        return new ComplexNumber(complex1.Real - complex2.Real, complex1.Imaginary - complex2.Imaginary);
    }

    /// <summary>
    /// Multiplies two complex numbers and returns the result
    /// </summary>
    /// <param name="complex1">First complex number</param>
    /// <param name="complex2">Second complex number</param>
    /// <returns>Product of the two complex numbers</returns>
    public static ComplexNumber operator *(ComplexNumber complex1, ComplexNumber complex2)
    {
        return new ComplexNumber((complex1.Real * complex2.Real - complex1.Imaginary * complex2.Imaginary), (complex1.Real * complex2.Imaginary + complex1.Imaginary * complex2.Real));
    }

    /// <summary>
    /// Divides two complex numbers and returns the result
    /// </summary>
    /// <param name="complex1">First complex number</param>
    /// <param name="complex2">Second complex number</param>
    /// <returns>Quotient of the two complex numbers</returns>
    public static ComplexNumber operator /(ComplexNumber complex1, ComplexNumber complex2)
    {
        double divisor = complex2.Real * complex2.Real + complex2.Imaginary * complex2.Imaginary; 
        return new ComplexNumber((complex1.Real * complex2.Real + complex1.Imaginary * complex2.Imaginary) / divisor, (complex1.Imaginary * complex2.Real - complex1.Real * complex2.Imaginary) / divisor);
    }

    /// <summary>
    /// Converts the complex number to a string representation
    /// </summary>
    /// <returns>The string representation of the complex number</returns>
    public override string ToString()
    {
        if (Imaginary < 0)
        {
            return $"{Real} - {Math.Abs(Imaginary)}i";
        }
        return $"{Real} + {Imaginary}i";
    }
}
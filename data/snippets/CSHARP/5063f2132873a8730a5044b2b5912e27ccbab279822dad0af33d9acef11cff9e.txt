using System;

// An abstract class representing a geometric shape
abstract class Shape
{
    // Every shape has a unique name
    public string Name
    {
        get;
        private set;
    }

    // Constructor to set the name of the shape
    public Shape(string name)
    {
        this.Name = name;
        Console.WriteLine($"Creating a shape with the name: {this.Name}");
    }

    // Abstract method to calculate the area of the shape
    public abstract double CalculateArea();

    // Abstract method to calculate the perimeter of the shape
    public abstract double CalculatePerimeter();
}

// A class representing a circle, inherits from the Shape class
class Circle : Shape
{
    // Radius of the circle
    private double Radius
    {
        get;
        set;
    }

    // Constructor to set the name and radius of the circle
    public Circle(string name, double radius) : base(name)
    {
        this.Radius = radius;
    }

    // Implementation of the CalculateArea method for the circle
    public override double CalculateArea()
    {
        return Math.PI * Math.Pow(this.Radius, 2);
    }

    // Implementation of the CalculatePerimeter method for the circle
    public override double CalculatePerimeter()
    {
        return 2 * Math.PI * this.Radius;
    }
}

// A class representing a square, inherits from the Shape class
class Square : Shape
{
    // Length of one side of the square
    private double Side
    {
        get;
        set;
    }

    // Constructor to set the name and length of the square
    public Square(string name, double side) : base(name)
    {
        this.Side = side;
    }

    // Implementation of the CalculateArea method for the square
    public override double CalculateArea()
    {
        return Math.Pow(this.Side, 2);
    }

    // Implementation of the CalculatePerimeter method for the square
    public override double CalculatePerimeter()
    {
        return 4 * this.Side;
    }
}

// Main method to create and use instances of the classes
public static void Main()
{
    // Creating a circle with a radius of 5
    Circle circle = new Circle("Circle", 5);

    // Calculating area and perimeter of the circle
    double circleArea = circle.CalculateArea();
    double circlePerimeter = circle.CalculatePerimeter();

    // Displaying the results
    Console.WriteLine("----- Circle -----\n");
    Console.WriteLine($"Name: {circle.Name}");
    Console.WriteLine($"Radius: {circle.Radius}");
    Console.WriteLine($"Area: {circleArea}");
    Console.WriteLine($"Perimeter: {circlePerimeter}");

    // Creating a square with a side length of 7
    Square square = new Square("Square", 7);

    // Calculating area and perimeter of the square
    double squareArea = square.CalculateArea();
    double squarePerimeter = square.CalculatePerimeter();

    // Displaying the results
    Console.WriteLine("\n----- Square -----\n");
    Console.WriteLine($"Name: {square.Name}");
    Console.WriteLine($"Side: {square.Side}");
    Console.WriteLine($"Area: {squareArea}");
    Console.WriteLine($"Perimeter: {squarePerimeter}");
}
`
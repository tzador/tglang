// This code snippet simulates a game of blackjack
using System;

// Define a custom class for a playing card
public class Card
{
    private string Suit; // The suit of the card (clubs, diamonds, hearts, spades)
    private int Value; // The numerical value of the card (2-10, 11 for Jack, 12 for Queen, 13 for King, 14 for Ace)

    // Constructor for a Card object
    public Card(string suit, int value)
    {
        // Set the suit and value of the card using passed in parameters
        Suit = suit;
        Value = value;
    }

    // Getters and setters for private variables
    public string GetSuit()
    {
        return Suit;
    }

    public void SetSuit(string suit)
    {
        this.Suit = suit;
    }

    public int GetValue()
    {
        return Value;
    }

    public void SetValue(int value)
    {
        this.Value = value;
    }

    // Method to print out the card's suit and value
    public void PrintCard()
    {
        Console.WriteLine("{0} of {1}", Value, Suit);
    }
}

// Main method to run the game
public static void Main()
{
    // Create a deck of cards as a list
    List<Card> deck = new List<Card>();

    // Initialize the deck with all 52 cards
    foreach (string suit in new string[] { "clubs", "diamonds", "hearts", "spades" })
    {
        for (int value = 2; value <= 14; value++)
        {
            // Create a new card object using the current suit and value
            Card newCard = new Card(suit, value);
            // Add the card to the deck
            deck.Add(newCard);
        }
    }

    // Shuffle the deck by randomly swapping cards
    Random rnd = new Random();
    for (int i = deck.Count - 1; i > 0; i--)
    {
        int randomIndex = rnd.Next(0, i + 1);
        // Swap the card at the current index with a random card
        Card temp = deck[i];
        deck[i] = deck[randomIndex];
        deck[randomIndex] = temp;
    }

    // Deal two cards to the player and dealer
    Card playerCard1 = deck[0];
    Card dealerCard1 = deck[1];
    Card playerCard2 = deck[2];
    Card dealerCard2 = deck[3];

    // Print out the player's two cards
    Console.WriteLine("Player's cards:");
    playerCard1.PrintCard();
    playerCard2.PrintCard();

    // Calculate the player's hand value
    int playerValue = playerCard1.GetValue() + playerCard2.GetValue();

    // Print out the dealer's first card
    Console.WriteLine("Dealer's face up card:");
    dealerCard1.PrintCard();

    // Calculate the dealer's hand value
    int dealerValue = dealerCard1.GetValue() + dealerCard2.GetValue();

    // Check for blackjack or bust
    if (playerValue == 21)
    {
        // Player has blackjack - print out win message and end the game
        Console.WriteLine("Blackjack! You win!");
        return;
    }
    else if (dealerValue == 21)
    {
        // Dealer has blackjack - print out lose message and end the game
        Console.WriteLine("Dealer has blackjack. You lose.");
        return;
    }
    else if (playerValue > 21)
    {
        // Player has busted - print out message and end the game
        Console.WriteLine("Bust! You lose.");
        return;
    }

    // As long as the player hasn't busted or gotten blackjack, give them the option to hit or stand
    while (playerValue < 21)
    {
        // Prompt the player to choose hit or stand
        Console.WriteLine("Would you like to hit or stand? (h/s)");
        char choice = Console.ReadKey().KeyChar;

        // If the player chooses hit, give them another card
        if (choice == 'h')
        {
            // Get the next card in the deck and add its value to the player's hand
            Card nextCard = deck[playerValue];
            playerValue += nextCard.GetValue();

            // Print out the new card and the updated hand value
            Console.WriteLine("New card:");
            nextCard.PrintCard();
            Console.WriteLine("New hand value: {0}", playerValue);

            // Check for bust or blackjack
            if (playerValue > 21)
            {
                // Player has busted - print out message and end the game
                Console.WriteLine("Bust! You lose.");
                return;
            }
            else if (playerValue == 21)
            {
                // Player has blackjack - print out win message and end the game
                Console.WriteLine("Blackjack! You win!");
                return;
            }
        }
        else if (choice == 's')
        {
            // Player chooses to stand - exit the loop and move on to the dealer's turn
            break;
        }
    }

    // Dealer's turn
    // Print out the dealer's face down card and their current hand value
    Console.WriteLine("Dealer's face down card:");
    dealerCard2.PrintCard();
    Console.WriteLine("Dealer hand value: {0}", dealerValue);

    // Continue dealing cards to the dealer until their hand value reaches at least 17
    while (dealerValue < 17)
    {
        // Get the next card in the deck and add its value to the player's hand
        Card nextCard = deck[dealerValue];
        dealerValue += nextCard.GetValue();

        // Print out the new card and the updated hand value
        Console.WriteLine("Dealer's new card:");
        nextCard.PrintCard();
        Console.WriteLine("Dealer hand value: {0}", dealerValue);

        // Check for bust or blackjack
        if (dealerValue > 21)
        {
            // Dealer has busted - print out message and end the game
            Console.WriteLine("Dealer bust! You win!");
            return;
        }
        else if (dealerValue == 21)
        {
            // Dealer has blackjack - print out lose message and end the game
            Console.WriteLine("Dealer has blackjack. You lose.");
            return;
        }
    }

    // Compare final hand values and determine the winner
    if (playerValue > dealerValue)
    {
        // Player has higher hand value - print out win message
        Console.WriteLine("Your hand value ({0}) is higher than the dealer's hand value ({1}). You win!", playerValue, dealerValue);
    }
    else if (dealerValue > playerValue)
    {
        // Dealer has higher hand value - print out lose message
        Console.WriteLine("The dealer's hand value ({0}) is higher than your hand value ({1}). You lose.", dealerValue, playerValue);
    }
    else
    {
        // Both players have the same hand value - print out tie message
        Console.WriteLine("Tie! Both players have a hand value of {0}.", playerValue);
    }
}
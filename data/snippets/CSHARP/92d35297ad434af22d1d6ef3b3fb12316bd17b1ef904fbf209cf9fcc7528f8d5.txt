/// <summary>
/// This method checks if a given number is prime or not
/// </summary>
/// <param name="num">The number to be checked</param>
/// <returns>True if the number is prime, False if the number is not prime</returns>
public bool IsPrime(int num)
{
    // Check if the number is equal to 1
    if (num == 1)
    {
        // Return false since 1 is not prime
        return false;
    }

    // Check if the number is equal to 2
    if (num == 2)
    {
        // Return true since 2 is the only even prime number
        return true;
    }

    // Check if the number is even
    if (num % 2 == 0)
    {
        // Return false since even numbers (except 2) are not prime
        return false;
    }

    // Iterate through odd numbers from 3 to the square root of the number
    // We only need to check odd numbers because all even divisors have been checked above
    for (int i = 3; i <= Math.Sqrt(num); i += 2)
    {
        // Check if the number is divisible by the current number in the loop
        if (num % i == 0)
        {
            // Return false since the number is not prime
            return false;
        }
    }

    // If the number is not divisible by any numbers, it is prime
    return true;
}
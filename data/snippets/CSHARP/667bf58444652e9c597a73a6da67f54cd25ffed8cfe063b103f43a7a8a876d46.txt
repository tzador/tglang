// This code snippet shows a class with multiple properties and methods 
public class Person
{
    // Private fields for personal information
    private string name;
    private int age;
    // Public properties for accessing the private fields
    public string Name
    {
        get { return name; }
        set { name = value; }
    }
    public int Age
    {
        get { return age; }
        set { age = value; }
    }
    // Constructor method that takes in a name and age
    public Person(string name, int age)
    {
        this.name = name;
        this.age = age;
    }
    // Public method for checking if person is an adult
    public bool IsAdult()
    {
        if (age >= 18)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    // Public method for introducing the person
    public string Introduce()
    {
        return "Hi, my name is " + name + " and I am " + age + " years old.";
    }
}
// Instantiating a new Person object
Person person1 = new Person("John", 25);
// Accessing person's properties and methods
Console.WriteLine(person1.Name); // Output: John
Console.WriteLine(person1.Age); // Output: 25
Console.WriteLine(person1.IsAdult()); // Output: True
Console.WriteLine(person1.Introduce()); // Output: Hi, my name is John and I am 25 years old.
// Define a class named Person with properties for name, age, and occupation
public class Person
{
    public string Name { get; set; }
    
    // Use a private field to access the age property
    private int age;
    public int Age
    {
        // Use a getter to return the value of age
        get { return age; }
        
        // Use a setter to validate and set the value of age
        set 
        {
            // Check if the new age value is greater than 0
            if (value > 0)
            {
                age = value;
            }
            // If not, throw an exception
            else
            {
                throw new Exception("Age must be greater than 0.");
            }
        }
    }
    
    // Use an auto-implemented property for occupation
    public string Occupation { get; set; }
    
    // Create a parameterless constructor
    public Person() { }
    
    // Create a constructor with parameters for name, age, and occupation
    public Person(string name, int age, string occupation)
    {
        Name = name;
        Age = age;
        Occupation = occupation;
    }
    
    // Add a method to the class: introduce yourself
    public void Introduce()
    {
        Console.WriteLine("Hi, my name is {0}. I am {1} years old, and I work as a {2}.", Name, Age, Occupation);
    }
}

// Create a new instance of the Person class
Person person1 = new Person();
// Set the properties using the setter method
person1.Name = "John";
person1.Age = 30;
person1.Occupation = "Software Engineer";

// Create another instance using the parameterized constructor
Person person2 = new Person("Jane", 25, "Teacher");

// Call the Introduce method on both instances
person1.Introduce();
person2.Introduce();
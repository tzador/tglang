// This code snippet uses LINQ to query and manipulate a list of users and their information

// Create a class for a user with properties for name, age, and city
public class User
{
    public string Name { get; set; }
    public int Age { get; set; }
    public string City { get; set; }
}

// Create a list of users
List<User> userList = new List<User>();
userList.Add(new User { Name = "John", Age = 30, City = "New York" });
userList.Add(new User { Name = "Mary", Age = 25, City = "Los Angeles" });
userList.Add(new User { Name = "Bob", Age = 42, City = "Boston" });

// Use LINQ to query and filter the list of users by age and city
var filteredUsers = from user in userList
                    where user.Age > 25 && user.City != "New York"
                    select user;

// Use LINQ to order the resulting list by name in descending order
var sortedUsers = from user in filteredUsers
                  orderby user.Name descending
                  select user;

// Use LINQ to select only the name and age of the users and format it as strings
var userStrings = from user in sortedUsers
                  select String.Format("Name: {0}, Age: {1}", user.Name, user.Age);

// Print out the resulting list of user strings
foreach (var userString in userStrings)
{
    Console.WriteLine(userString);
}

/* Output:
    Name: Mary, Age: 25
    Name: Bob, Age: 42
*/
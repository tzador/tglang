/// <summary>
/// Defines a class that represents a student.
/// </summary>
public class Student
{
    // private fields
    private string name;
    private int age;
    
    /// <summary>
    /// Gets or sets the name of the student.
    /// </summary>
    public string Name
    {
        get => name;
        set => name = value;
    }
    
    /// <summary>
    /// Gets or sets the age of the student.
    /// </summary>
    public int Age
    {
        get => age;
        set => age = value;
    }
    
    /// <summary>
    /// Converts the student information into a string representation.
    /// </summary>
    /// <returns>The string representation of the student.</returns>
    public override string ToString()
    {
        return $"Name: {Name}, Age: {Age}";
    }
    
    /// <summary>
    /// Calculates the average grade of the student based on a list of grades.
    /// </summary>
    /// <param name="grades">List of grades to calculate the average from.</param>
    /// <returns>The average grade of the student.</returns>
    public double CalculateAverageGrade(List<double> grades)
    {
        double sum = 0;
        foreach (var grade in grades)
        {
            sum += grade;
        }
        return sum / grades.Count;
    }
    
    /// <summary>
    /// Indicates whether the student is eligible for graduation based on their average grade.
    /// </summary>
    /// <param name="averageGrade">The average grade of the student.</param>
    /// <returns>True if the student is eligible for graduation, otherwise false.</returns>
    public bool IsEligibleForGraduation(double averageGrade)
    {
        if (averageGrade >= 60)
        {
            return true;
        }
        return false;
    }
}
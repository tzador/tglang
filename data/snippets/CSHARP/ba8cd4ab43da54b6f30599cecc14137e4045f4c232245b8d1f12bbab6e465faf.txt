// This code snippet creates a class named 'Person' with various properties and methods.
public class Person
{
    private string name;
    private int age;

    // Constructor method that takes in a name and age and sets them as properties.
    public Person(string name, int age)
    {
        this.name = name;
        this.age = age;
    }

    // Property for getting and setting the person's name.
    public string Name
    {
        get { return name; }
        set { name = value; }
    }

    // Property for getting and setting the person's age.
    public int Age
    {
        get { return age; }
        set { age = value; }
    }

    // Method to display the person's name and age.
    public void DisplayInfo()
    {
        Console.WriteLine("Name: {0}, Age: {1}", name, age);
    }

    // Static method to compare the ages of two Person objects and return the older person's age.
    public static int CompareAges(Person person1, Person person2)
    {
        int olderAge;
        if (person1.age > person2.age)
        {
            olderAge = person1.age;
        }
        else
        {
            olderAge = person2.age;
        }

        return olderAge;
    }
}

// Example of using the Person class and its properties and methods.
public class Program
{
    public static void Main()
    {
        Person john = new Person("John", 25);
        Person mary = new Person("Mary", 32);

        Console.WriteLine("John's age: {0}", john.Age);
        Console.WriteLine("Mary's name: {0}", mary.Name);

        mary.Age = 30;
        Console.WriteLine("Mary's updated age: {0}", mary.Age);

        john.DisplayInfo();
        mary.DisplayInfo();

        int olderAge = Person.CompareAges(john, mary);
        Console.WriteLine("{0} is older.", olderAge);
    }
}
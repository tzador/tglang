// This is a complex code snippet in C#

// Creating a class called Person
public class Person
{
    // Private fields for name, age, and occupation
    private string name;
    private int age;
    private string occupation;

    // Constructor for Person class with parameters for name, age, and occupation
    public Person(string n, int a, string o)
    {
        name = n;
        age = a;
        occupation = o;
    }

    // Getter and setter methods for the private fields
    public string Name
    {
        get { return name; }
        set { name = value; }
    }

    public int Age
    {
        get { return age; }
        set 
        { 
            if (value >= 0) // Age cannot be negative
            {
                age = value; 
            }
            else
            {
                throw new ArgumentException("Age cannot be negative");
            }
        }
    }

    public string Occupation
    {
        get { return occupation; }
        set { occupation = value; }
    }

    // Method to introduce the person by printing their name, age, and occupation
    public void Introduce()
    {
        Console.WriteLine("Hi, my name is " + name + ", I am " + age + " years old, and I am a " + occupation + ".");
    }
}

// Main method to create and use objects of Person class
public static void Main(string[] args)
{
    // Creating an instance of Person class and passing in values for parameters
    Person person1 = new Person("John Smith", 25, "Software Developer");

    // Using getter method to print person's name
    Console.WriteLine(person1.Name); // Output: John Smith

    // Using setter method to change person's age
    person1.Age = 30;

    // Using getter method to print person's age
    Console.WriteLine(person1.Age); // Output: 30

    // Using method to introduce the person
    person1.Introduce(); // Output: Hi, my name is John Smith, I am 30 years old, and I am a Software Developer.
}
// This code snippet generates a list of prime numbers up to a specified limit using the Sieve of Eratosthenes algorithm.

// Define the limit for the list of prime numbers
int limit = 100;

// Create a boolean array of size limit+1 to keep track of which numbers are prime
bool[] isPrime = new bool[limit+1];

// Initialize all values in the array to true as we assume all numbers are prime at first
for(int i = 0; i <= limit; i++){
    isPrime[i] = true;
}

// Start iterating through the numbers, staring from 2 as it is the first prime number
for(int i = 2; i*i <= limit; i++){

    // If the current number is marked as prime, then all its multiples are not prime
    if(isPrime[i]){

        // Start marking the multiples of a prime number as non-prime
        for(int j = i*i; j <= limit; j += i){
            isPrime[j] = false;
        }
    }
}

// Print all the prime numbers within the limit
for(int i = 2; i <= limit; i++){
    
    // If the current number is marked as prime, then print it
    if(isPrime[i]){
        Console.WriteLine(i);
    }
}
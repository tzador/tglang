/// <summary>
/// This method calculates the factorial of a given number.
/// </summary>
/// <param name="num">The number to calculate the factorial of.</param>
/// <returns>The factorial of the given number.</returns>
public static int Factorial(int num)
{
    if (num == 0)
    {
        return 1;
    }
    else
    {
        int result = 1;

        for (int i = 1; i <= num; i++)
        {
            result *= i;
        }

        return result;
    }
}

/// <summary>
/// This method checks if a given string is a palindrome.
/// </summary>
/// <param name="str">The string to check.</param>
/// <returns>True if the string is a palindrome, false if it is not.</returns>
public static bool IsPalindrome(string str)
{
    // Convert the string to lowercase for case insensitivity
    str = str.ToLower();

    // Initialize pointers to the start and end of the string
    int start = 0;
    int end = str.Length - 1;

    while (start < end)
    {
        // Skip any non-alphanumeric characters from the start
        while (!char.IsLetterOrDigit(str[start]))
        {
            start++;
        }

        // Skip any non-alphanumeric characters from the end
        while (!char.IsLetterOrDigit(str[end]))
        {
            end--;
        }

        // If the characters at the start and end are not equal, the string is not a palindrome
        if (str[start] != str[end])
        {
            return false;
        }

        // Move the pointers towards the center of the string
        start++;
        end--;
    }

    // If the loop completed without returning false, the string is a palindrome
    return true;
}
// This is a code snippet that generates a list of prime numbers using a Sieve of Eratosthenes algorithm

//Initialize variables
int limit = 100; // The upper limit of the prime number list
bool[] isPrime = new bool[limit + 1]; // Initialize a boolean array to keep track of prime numbers, set all to true initially
List<int> primeNumbers = new List<int>(); // Initialize a list to store the prime numbers

// Use Sieve of Eratosthenes algorithm to determine prime numbers
for (int i = 2; i < Math.Sqrt(limit); i++) // Loop through numbers from 2 to the square root of the limit
{
    if (isPrime[i]) // If the current number is marked as prime
    {
        for (int j = i * i; j <= limit; j += i) // Update multiples of the current number to not be prime
        {
            isPrime[j] = false;
        }
    }
}

// Add all prime numbers to the primeNumbers list
for (int i = 2; i <= limit; i++)
{
    if (isPrime[i]) // Check if current number is prime
    {
        primeNumbers.Add(i); // If so, add to list
    }
}

// Print out the list of prime numbers
Console.WriteLine("List of prime numbers up to " + limit + ":");
Console.WriteLine(string.Join(", ", primeNumbers)); // Join the prime numbers in the list using a delimiter and print out to console
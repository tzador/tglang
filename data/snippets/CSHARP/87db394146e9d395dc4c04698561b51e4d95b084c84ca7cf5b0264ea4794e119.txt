// This code snippet demonstrates the use of LINQ to query a list of employees

// Define a class for Employee with properties for Name, ID, and Department
public class Employee
{
    public string Name { get; set; }
    public int ID { get; set; }
    public string Department { get; set; }
}

// Create a list of employees
List<Employee> employees = new List<Employee>()
{
    new Employee{Name = "John", ID = 1234, Department = "Marketing"},
    new Employee{Name = "Jane", ID = 5678, Department = "Human Resources"},
    new Employee{Name = "Bob", ID = 9012, Department = "Sales"},
    new Employee{Name = "Sally", ID = 3456, Department = "IT"},
    new Employee{Name = "Frank", ID = 7890, Department = "Finance"}
};

// Use LINQ query syntax to filter the list for employees in the Sales department and select their names in alphabetical order
var salesEmployees = from emp in employees
                     where emp.Department == "Sales"
                     orderby emp.Name ascending
                     select emp.Name;

// Print the results
foreach (var emp in salesEmployees)
{
    Console.WriteLine(emp);
}

// Output:
// Bob
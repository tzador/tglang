// This is a C# code snippet

/* 
This program takes in a sentence and counts the occurrences of each unique 
letter in the sentence. It then outputs the result in ascending order based
on the number of occurrences.
*/

// Initialize the sentence variable
string sentence = "Hello world";

// Convert the sentence to lowercase for case-insensitive counting
string lowercaseSentence = sentence.ToLower();

// Create a dictionary to store the letters and their occurrences
Dictionary<char, int> letterOccurrences = new Dictionary<char, int>();

// Loop through each character in the sentence
foreach (char c in lowercaseSentence)
{
  // Check if the character is a letter
  if (Char.IsLetter(c))
  {
    // Check if the dictionary contains the letter as a key
    if (letterOccurrences.ContainsKey(c))
    {
      // If it does, increment the occurrence count by 1
      letterOccurrences[c]++;
    }
    else
    {
      // If it does not, add the letter and set occurrence count to 1
      letterOccurrences.Add(c, 1);
    }
  }
}

// Sort the dictionary in ascending order based on occurrence count
var sortedLetterOccurrences = letterOccurrences.OrderBy(x => x.Value);

// Loop through the sorted dictionary and print the result
Console.WriteLine("Letter Occurrences in '" + sentence + "':");
foreach (var entry in sortedLetterOccurrences)
{
  Console.WriteLine(entry.Key + ": " + entry.Value);
}

// Output:
Letter Occurrences in 'Hello world':
d: 1
r: 1
w: 1
e: 1
h: 1
l: 3
o: 2
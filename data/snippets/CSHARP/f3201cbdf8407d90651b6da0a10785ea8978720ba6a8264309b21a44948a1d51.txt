// This is a complex class with properties, constructors, methods, and a nested class
public class ComplexClass
{
    // Private fields
    private int _intField;
    private string _strField;

    // Public properties
    public int IntProperty { get; set; }
    public string StrProperty { get; set; }

    // Constructor with parameters
    public ComplexClass(int intField, string strField)
    {
        _intField = intField;
        _strField = strField;
    }

    // Method that returns a string
    public string GetString()
    {
        // String interpolation to include class fields and properties
        return $"The values of the class are: IntField = {_intField}, StrField = {_strField}, IntProperty = {IntProperty}, StrProperty = {StrProperty}";
    }

    // Nested class
    public class NestedClass
    {
        // Private field
        private bool _boolField;

        // Constructor with parameter
        public NestedClass(bool boolField)
        {
            _boolField = boolField;
        }

        // Method that returns a boolean value
        public bool GetBool()
        {
            return _boolField;
        }
    }
}

// Create an instance of ComplexClass
var complexClass = new ComplexClass(10, "Hello World");

// Call the GetString method and print the returned string
Console.WriteLine(complexClass.GetString());

// Create an instance of the NestedClass and pass in a boolean value
var nestedClass = new ComplexClass.NestedClass(true);

// Call the GetBool method and print the returned boolean value
Console.WriteLine(nestedClass.GetBool());
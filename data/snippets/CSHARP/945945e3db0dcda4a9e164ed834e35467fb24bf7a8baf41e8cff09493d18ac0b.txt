//This code snippet uses LINQ to select elements from a list based on a condition
//and then sorts and groups them before printing out the results.
using System;
using System.Linq;
using System.Collections.Generic;

//Create a class for a generic item
public class Item
{
    public string Name { get; set; }
    public int Quantity { get; set; }
    public double Price { get; set; }

    //Constructor
    public Item(string name, int quantity, double price)
    {
        Name = name;
        Quantity = quantity;
        Price = price;
    }
}

//Create a list of items
List<Item> items = new List<Item>();

//Add items to the list
items.Add(new Item("Shirt", 3, 19.99));
items.Add(new Item("Pants", 1, 29.99));
items.Add(new Item("Shoes", 2, 49.99));
items.Add(new Item("Hat", 2, 9.99));
items.Add(new Item("Gloves", 4, 14.99));

//Use LINQ to select items with a quantity of 2 or more and order them by price in descending order
var selectedItems = items.Where(item => item.Quantity >= 2)
                         .OrderByDescending(item => item.Price);

//Group the selected items by price range (under $20, $20-$40, $40 and above)
var groupedItems = selectedItems.GroupBy(item => item.Price < 20 ? "Under $20" : (item.Price >= 20 && item.Price < 40) ? "$20-$40" : "Above $40");

//Print out the selected and grouped items with their quantity, name, and price
foreach (var group in groupedItems)
{
    Console.WriteLine("{0} Items:", group.Key);
    foreach (var item in group)
    {
        Console.WriteLine("{0} {1} - ${2}", item.Quantity, item.Name, item.Price);
    }
}
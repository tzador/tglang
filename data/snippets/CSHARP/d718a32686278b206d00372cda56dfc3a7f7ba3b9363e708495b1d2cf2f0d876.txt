/// <summary>
/// This is a class named Student that represents a student in a school.
/// </summary>
public class Student
{
    /// <summary>
    /// This is a private field that stores the student's name.
    /// </summary>
    private string name;

    /// <summary>
    /// This is a public property that allows access to the student's name.
    /// </summary>
    public string Name 
    {
        get { return name; }
        set { name = value; } 
    }

    /// <summary>
    /// This is a private field that stores the student's age.
    /// </summary>
    private int age;

    /// <summary>
    /// This is a public property that allows access to the student's age.
    /// </summary>
    public int Age 
    { 
        get { return age; }
        set 
        {
            // Age should not be negative
            if (value < 0)
            {
                throw new ArgumentException("Age cannot be negative.");
            }
            age = value;
        } 
    }

    /// <summary>
    /// This is a private field that stores the student's class standing.
    /// </summary>
    private int classStanding;

    /// <summary>
    /// This is a public property that allows access to the student's class standing.
    /// </summary>
    public int ClassStanding 
    { 
        get { return classStanding; }
        set 
        {
            // Class standing should be between 1 and 12
            if (value < 1 || value > 12)
            {
                throw new ArgumentException("Class standing should be between 1 and 12.");
            }
            classStanding = value;
        } 
    }

    /// <summary>
    /// This is a private constructor that creates a new instance of the Student class.
    /// </summary>
    /// <param name="name">The student's name.</param>
    /// <param name="age">The student's age.</param>
    /// <param name="classStanding">The student's class standing.</param>
    private Student(string name, int age, int classStanding)
    {
        this.name = name;
        this.age = age;
        this.classStanding = classStanding;
    }

    /// <summary>
    /// This is a static method that creates a new instance of Student with default values.
    /// </summary>
    /// <returns>A new instance of the Student class with default values.</returns>
    public static Student CreateDefaultStudent()
    {
        return new Student("John Doe", 18, 12);
    }
}

// Example usage:
var student = Student.CreateDefaultStudent();
Console.WriteLine($"Student name: {student.Name}");
Console.WriteLine($"Student age: {student.Age}");
Console.WriteLine($"Student class standing: {student.ClassStanding}");

// Output:
// Student name: John Doe
// Student age: 18
// Student class standing: 12
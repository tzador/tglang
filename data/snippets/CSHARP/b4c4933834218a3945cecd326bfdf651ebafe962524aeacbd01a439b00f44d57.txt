// This program takes in two integers and finds the greatest common divisor using Euclid's algorithm

public static int GCD(int num1, int num2)
{
    // Base case: if either number is 0, return the other number
    if (num1 == 0)
        return num2;
    if (num2 == 0)
        return num1;

    // Initialize variables for storing the current and previous remainders
    int remainder, prevRemainder = 0;

    // Loop until the remainder is 0
    while (num2 != 0)
    {
        // Calculate the remainder of num1 divided by num2
        remainder = num1 % num2;

        // Set the value of num2 to num1 and the value of the remainder to num2
        num1 = num2;
        num2 = remainder;

        // Update the previous remainder
        prevRemainder = remainder;
    }

    // Return the previous remainder, which is the greatest common divisor
    return prevRemainder;
}

// Driver code to test the GCD function
public static void Main()
{
    // Take in two integers from the user
    Console.WriteLine("Enter the first number: ");
    int num1 = Convert.ToInt32(Console.ReadLine());
    Console.WriteLine("Enter the second number: ");
    int num2 = Convert.ToInt32(Console.ReadLine());

    // Call the GCD function and store the result in a variable
    int gcd = GCD(num1, num2);

    // Print the result to the console
    Console.WriteLine($"The greatest common divisor of {num1} and {num2} is {gcd}.");
}

// Output:
// Enter the first number:
// 12
// Enter the second number:
// 6
// The greatest common divisor of 12 and 6 is 6.
using System;

// This class represents a complex number
class ComplexNumber
{
    private double realPart;
    private double imaginaryPart;

    // Constructor for creating a complex number
    // Takes in values for the real and imaginary parts
    public ComplexNumber(double real, double imaginary)
    {
        this.realPart = real;
        this.imaginaryPart = imaginary;
    }

    // Method to add two complex numbers
    // Takes in a complex number as a parameter and returns a new complex number with the sum
    public ComplexNumber Add(ComplexNumber other)
    {
        double newReal = this.realPart + other.realPart;
        double newImaginary = this.imaginaryPart + other.imaginaryPart;
        return new ComplexNumber(newReal, newImaginary);
    }

    // Method to multiply two complex numbers
    // Takes in a complex number as a parameter and returns a new complex number with the product
    public ComplexNumber Multiply(ComplexNumber other)
    {
        double newReal = (this.realPart * other.realPart) - (this.imaginaryPart * other.imaginaryPart);
        double newImaginary = (this.realPart * other.imaginaryPart) + (this.imaginaryPart * other.realPart);
        return new ComplexNumber(newReal, newImaginary);
    }

    // Override method for the ToString() method to print out the complex number in a readable format
    public override string ToString()
    {
        if (this.imaginaryPart >= 0)
        {
            return this.realPart + " + " + this.imaginaryPart + "i";
        }
        else
        {
            return this.realPart + " - " + Math.Abs(this.imaginaryPart) + "i";
        }
    }

    // Main method for testing out the ComplexNumber class
    static void Main()
    {
        // Create two complex numbers
        ComplexNumber num1 = new ComplexNumber(3, 4);
        ComplexNumber num2 = new ComplexNumber(2, -5);

        // Add the two complex numbers and print out the result
        ComplexNumber sum = num1.Add(num2);
        Console.WriteLine("Sum: " + sum);

        // Multiply the two complex numbers and print out the result
        ComplexNumber product = num1.Multiply(num2);
        Console.WriteLine("Product: " + product);

        // Keep the console window open until a key is pressed
        Console.ReadKey();
    }
}
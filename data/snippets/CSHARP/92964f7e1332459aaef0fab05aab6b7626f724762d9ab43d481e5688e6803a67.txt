/**
 * This code snippet demonstrates a nested class structure in C#
 */

public class OuterClass  // outer class
{
    public int OuterClassVariable; // variable in outer class

    public OuterClass(int parameter) // constructor for outer class
    {
        OuterClassVariable = parameter;
    }

    public void OuterClassMethod() // method in outer class
    {
        Console.WriteLine("This is a method in the outer class");
    }

    public class InnerClass // inner class
    {
        public int InnerClassVariable; // variable in inner class

        public InnerClass(int parameter) // constructor for inner class
        {
            InnerClassVariable = parameter;
        }

        public void InnerClassMethod() // method in inner class
        {
            Console.WriteLine("This is a method in the inner class");
        }
    }
}

// code to create objects and access members of outer and inner class

var outerObj = new OuterClass(5); // create new object of outer class
Console.WriteLine(outerObj.OuterClassVariable); // access variable in outer class
outerObj.OuterClassMethod(); // call method in outer class

var innerObj = new OuterClass.InnerClass(10); // create new object of inner class
Console.WriteLine(innerObj.InnerClassVariable); // access variable in inner class
innerObj.InnerClassMethod(); // call method in inner class
/*
 * This code snippet is a basic implementation of a binary search algorithm in C#
 * It takes in an array of integers and a target value to search for
 * Returns the index of the target value if found, otherwise returns -1
 */

// Function to perform binary search on an array
static int BinarySearch(int[] arr, int target)
{
    int low = 0; 
    int high = arr.Length - 1;

    // Loop until low and high index are equal
    while (low <= high)
    {
        // Calculate mid index
        int mid = (low + high) / 2;

        // If target is found at mid index, return mid
        if (target == arr[mid])
        {
            return mid;
        }
        // If target is smaller than value at mid index, search on left subarray
        else if (target < arr[mid])
        {
            high = mid - 1;
        }
        // If target is larger than value at mid index, search on right subarray
        else
        {
            low = mid + 1;
        }
    }
    // Target value not found, return -1
    return -1;
}

// Example usage
int[] arr = { 1, 3, 5, 7, 9, 11, 13, 15 }; // Sorted array
int target = 7; // Target value to search for
int result = BinarySearch(arr, target); // Search for target value
Console.WriteLine("Index of target value ({0}) is {1}", target, result); // Output: Index of target value (7) is 3
// This is a comment
/* This is a multiline comment that can span
   multiple lines */

// This is a class declaration with a private field
public class Person
{
    private string name;

    // This is a constructor with a parameter
    public Person(string n)
    {
        name = n;
    }

    // This is a method that returns the name field
    public string GetName()
    {
        return name;
    }
}

// This is a struct declaration with two fields
public struct Point
{
    public int x, y;

    // This is a constructor with two parameters
    public Point(int xCoord, int yCoord)
    {
        x = xCoord;
        y = yCoord;
    }

    // This is a method that calculates the distance between two points
    public double CalculateDistance(Point p)
    {
        int dx = x - p.x;
        int dy = y - p.y;
        return Math.Sqrt(dx * dx + dy * dy);
    }
}

// This is an interface declaration with one method
public interface IShape
{
    double CalculateArea();
}

// This is a class that implements the IShape interface
public class Rectangle : IShape
{
    // These are private fields for the length and width
    private double length;
    private double width;

    // This is a constructor with two parameters
    public Rectangle(double l, double w)
    {
        length = l;
        width = w;
    }

    // This is the implementation of the CalculateArea method from the interface
    public double CalculateArea()
    {
        return length * width;
    }
}

// This is an example of using the above classes and struct
class Program
{
    static void Main()
    {
        // Create a new Person object and call the GetName method
        Person p = new Person("John");
        Console.WriteLine("Name: " + p.GetName());

        // Create a new Point struct and call the CalculateDistance method
        Point a = new Point(1, 2);
        Point b = new Point(4, 6);
        Console.WriteLine("Distance between points: " + a.CalculateDistance(b));

        // Create a new Rectangle object and call the CalculateArea method
        Rectangle r = new Rectangle(3.5, 4.2);
        Console.WriteLine("Area of rectangle: " + r.CalculateArea());
    }
}
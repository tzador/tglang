// This is an example of a complex code snippet in C# that uses LINQ to perform multiple operations on a list.

// Example class to be used in LINQ statements
class Student
{
    public string Name { get; set; }
    public int Age { get; set; }
    public int[] Scores { get; set; }
}

// List of students
List<Student> students = new List<Student>()
{
    new Student { Name = "John", Age = 20, Scores = new int[] { 80, 90, 95 } },
    new Student { Name = "Sarah", Age = 22, Scores = new int[] { 85, 95, 90 } },
    new Student { Name = "Tom", Age = 19, Scores = new int[] { 75, 85, 80 } }
};

// Using LINQ to select students with scores above 90 and order by name
var topStudents = from s in students
                  where s.Scores.Average() > 90
                  orderby s.Name
                  select s;

// Outputting the names of the top students
foreach(var student in topStudents)
{
    Console.WriteLine(student.Name);
}

// Using LINQ to calculate the average age of all students
var averageAge = students.Average(s => s.Age);

// Outputting the average age
Console.Write("Average age of students: " + averageAge);
//This code snippet creates a class named "Person" with private fields for name, age, and job title
public class Person
{
    private string name; //private string field for name
    private int age; //private int field for age
    private string jobTitle; //private string field for jobTitle

    //Parameterized constructor for Person class that takes in name, age, and jobTitle as arguments
    public Person(string n, int a, string jt)
    {
        name = n; //initialize name field with value of n
        age = a; //initialize age field with value of a
        jobTitle = jt; //initialize jobTitle field with value of jt
    }

    //Public method to get the person's name
    public string GetName()
    {
        return name; //return the value of the name field
    }

    //Public method to set the person's name
    public void SetName(string n)
    {
        name = n; //reassign the value of the name field with the value of n
    }

    //Public method to get the person's age
    public int GetAge()
    {
        return age; //return the value of the age field
    }

    //Public method to set the person's age
    public void SetAge(int a)
    {
        age = a; //reassign the value of the age field with the value of a
    }

    //Public method to get the person's job title
    public string GetJobTitle()
    {
        return jobTitle; //return the value of the jobTitle field
    }

    //Public method to set the person's job title
    public void SetJobTitle(string jt)
    {
        jobTitle = jt; //reassign the value of the jobTitle field with the value of jt
    }

    //Public method to print out information about the person
    public void PrintInfo()
    {
        Console.WriteLine("Name: " + name); //print out the person's name
        Console.WriteLine("Age: " + age); //print out the person's age
        Console.WriteLine("Job Title: " + jobTitle); //print out the person's job title
    }
}

//Example usage of the Person class
Person john = new Person("John Smith", 30, "Software Developer"); //create a new instance of Person and assign it to the variable john

john.PrintInfo(); //call the PrintInfo method to print out John's information
john.SetName("John Smith Jr."); //call the SetName method to change John's name
john.SetAge(31); //call the SetAge method to change John's age
john.SetJobTitle("Senior Software Developer"); //call the SetJobTitle method to change John's job title

john.PrintInfo(); //call the PrintInfo method again to print out John's updated information

//Output:
//Name: John Smith
//Age: 30
//Job Title: Software Developer

//Name: John Smith Jr.
//Age: 31
//Job Title: Senior Software Developer
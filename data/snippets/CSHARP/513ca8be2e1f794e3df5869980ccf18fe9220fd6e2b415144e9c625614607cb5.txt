/// <summary>
/// This is a class that represents a bank account.
/// It contains properties for account number, balance, and owner name.
/// </summary>
public class BankAccount
{
    /// <summary>
    /// Gets or sets the account number.
    /// </summary>
    public int AccountNumber { get; set; }

    /// <summary>
    /// Gets or sets the balance of the account.
    /// </summary>
    public double Balance { get; set; }

    /// <summary>
    /// Gets or sets the name of the account owner.
    /// </summary>
    public string OwnerName { get; set; }

    /// <summary>
    /// Constructor for the BankAccount class.
    /// </summary>
    /// <param name="accountNumber">The account number for the account.</param>
    /// <param name="balance">The initial balance for the account.</param>
    /// <param name="ownerName">The name of the account owner.</param>
    public BankAccount(int accountNumber, double balance, string ownerName)
    {
        // Set the properties of the account using the provided parameters
        this.AccountNumber = accountNumber;
        this.Balance = balance;
        this.OwnerName = ownerName;
    }

    /// <summary>
    /// Method to deposit money into the account.
    /// </summary>
    /// <param name="amount">The amount of money to be deposited.</param>
    public void Deposit(double amount)
    {
        // Add the amount to the current balance
        this.Balance += amount;
    }

    /// <summary>
    /// Method to withdraw money from the account.
    /// </summary>
    /// <param name="amount">The amount of money to be withdrawn.</param>
    public void Withdraw(double amount)
    {
        // Check if the amount is greater than the current balance
        if (amount > this.Balance)
        {
            // If so, throw an exception
            throw new Exception("Insufficient funds.");
        }
        else
        {
            // Otherwise, subtract the amount from the current balance
            this.Balance -= amount;
        }
    }

}
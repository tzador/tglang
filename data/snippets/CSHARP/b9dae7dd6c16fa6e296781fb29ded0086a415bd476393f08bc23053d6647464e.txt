// Defining an abstract class with a constructor
public abstract class Vehicle
{
    // Properties
    public string Model { get; set; }
    public int Year { get; set; }

    // Constructor
    public Vehicle(string model, int year)
    {
        // Assigning values to properties
        this.Model = model;
        this.Year = year;
    }

    // Abstract method 
    public abstract void Drive();
}

// Inheriting from Vehicle class
public class Car : Vehicle
{
    // Property
    public bool HasSunroof { get; set; }

    // Constructor
    public Car(string model, int year, bool hasSunroof) : base(model, year)
    {
        // Assigning value to property
        this.HasSunroof = hasSunroof;
    }

    // Overriding abstract method
    public override void Drive()
    {
        Console.WriteLine("This car is driving.");
    }
}

// Creating an instance of Car class
Car myCar = new Car("Toyota", 2021, true);
// Calling the Drive method on myCar
myCar.Drive();
// Output: This car is driving.
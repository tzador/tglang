// This is a complex code snippet in C#
// It contains multiple classes, methods, loops, and conditional statements
// This code snippet generates a random password with specified length and character types

using System; // Importing the System namespace

namespace PasswordGenerator // Creating a namespace called "PasswordGenerator"
{
    class Program // Main class where the code execution begins
    {
        static void Main(string[] args) // Entry point of the program
        {
            Console.WriteLine("Welcome to the Password Generator!"); // Print welcome message to console
            Console.WriteLine("Please enter the desired length of your password: "); // Prompt user for password length
            int length = Convert.ToInt32(Console.ReadLine()); // Store user input as integer length


            // Create arrays for different character types
            char[] lowerLetters = "abcdefghijklmnopqrstuvwxyz".ToCharArray();
            char[] upperLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
            char[] numbers = "0123456789".ToCharArray();
            char[] specialChars = "!@#$%^&*()_+-=".ToCharArray();

            // Create an empty char array to store generated password
            char[] password = new char[length];

            // Generate a random instance
            Random rand = new Random();

            // Loop through password length and add random characters from different arrays
            for (int i = 0; i < length; i++)
            {
                // Randomly choose character type (lowercase, uppercase, number, special character)
                int randType = rand.Next(4);

                // Select a character from the corresponding array based on random type
                switch (randType)
                {
                    case 0:
                        // Pick a random lowercase letter and add it to the password array
                        int randLow = rand.Next(lowerLetters.Length);
                        password[i] = lowerLetters[randLow];
                        break;
                    case 1:
                        // Pick a random uppercase letter and add it to the password array
                        int randUp = rand.Next(upperLetters.Length);
                        password[i] = upperLetters[randUp];
                        break;
                    case 2:
                        // Pick a random number and add it to the password array
                        int randNum = rand.Next(numbers.Length);
                        password[i] = numbers[randNum];
                        break;
                    case 3:
                        // Pick a random special character and add it to the password array
                        int randSpec = rand.Next(specialChars.Length);
                        password[i] = specialChars[randSpec];
                        break;
                }
            }

            // Convert the password char array to string and print it to console
            string passwordString = new string(password);
            Console.WriteLine($"Your generated password is: {passwordString}");
        }
    }
}
/// <summary>
/// This method checks if the given string is a palindrome.
/// </summary>
/// <param name="str">The string to check.</param>
/// <returns>True if the string is a palindrome, false otherwise.</returns>
public bool IsPalindrome(string str)
{
    // Convert the string to lowercase and remove all non-alphabetic characters.
    str = str.ToLower();
    str = Regex.Replace(str, @"[^a-z]", "");

    // Use two pointers to compare characters from opposite ends of the string.
    int left = 0;
    int right = str.Length - 1;

    while (left < right)
    {
        // If the characters at the current positions do not match, return false.
        if (str[left] != str[right])
        {
            return false;
        }

        // Move the pointers towards the middle of the string.
        left++;
        right--;
    }

    // If the loop finishes without returning false, then the string is a palindrome.
    return true;
}
// Declare and initialize an array of integers
int[] numbers = new int[] {1, 2, 3, 4, 5};

// Use LINQ to filter even numbers from the array and store in a new array
int[] evenNumbers = numbers.Where(x => x % 2 == 0).ToArray();

// Reverse the even numbers array
Array.Reverse(evenNumbers);

// Create a dictionary with even numbers as keys and their corresponding square root as values
Dictionary<int, double> squaredRoots = new Dictionary<int, double>();

// Use a foreach loop to populate the dictionary
foreach (int num in evenNumbers)
{
    squaredRoots.Add(num, Math.Sqrt(num));
}

// Sort the dictionary by the square root values in descending order
var sortedSquaredRoots = squaredRoots.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);

// Use a for loop to print out the sorted dictionary
for (int i = 0; i < sortedSquaredRoots.Count; i++)
{
    Console.WriteLine($"{sortedSquaredRoots.Keys.ElementAt(i)}: {sortedSquaredRoots.Values.ElementAt(i)}");
}
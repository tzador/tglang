// This is a complex and lengthy code snippet in CSHARP

public class ComplexClass
{
    // This is a private field in the complex class
    private int _privateField = 10;

    // This is a public property with a private setter
    public int PublicProperty
    {
        get { return _privateField * 2; }
        private set { _privateField = value; }
    }

    // This is a constructor with a parameter
    public ComplexClass(int value)
    {
        // Set the private field to the value passed in
        _privateField = value;
    }

    // This is a public method with a nested for loop
    public void NestedForLoopMethod()
    {
        // Start of outer for loop
        for (int i = 0; i < 5; i++)
        {
            // Start of inner for loop
            for (int j = 0; j < i; j++)
            {
                // Perform a calculation with the two counters
                int result = i * j;

                // Print out the result
                Console.WriteLine(result);
            }

            // Print out the final value of i
            Console.WriteLine($"Final value of i: {i}");
        }
    }
}

// This is a static class containing helper methods
public static class HelperClass
{
    // This is a static method that takes in a string and converts it to uppercase
    public static string ToUpper(string input)
    {
        return input.ToUpper();
    }
}

// This is the main method
public static void Main()
{
    // Create a new instance of the ComplexClass with a value of 5
    ComplexClass complexObject = new ComplexClass(5);
    
    // Call the NestedForLoopMethod on the complexObject
    complexObject.NestedForLoopMethod();
    
    // Call the ToUpper method from the HelperClass and print out the result
    string uppercaseString = HelperClass.ToUpper("hello");
    Console.WriteLine(uppercaseString);
}
/// <summary>
/// This method takes in a string input, splits it into words, and returns a
/// dictionary with the words as keys and their frequency as values.
/// </summary>
/// <param name="input">The input string to be processed</param>
/// <returns>A dictionary with word-frequency pairs</returns>
public Dictionary<string, int> CountWords(string input)
{
    // create an empty dictionary to store the results
    Dictionary<string, int> wordFreqs = new Dictionary<string, int>();

    // split the input string into an array of words
    string[] words = input.Split(' ');

    // loop through the array of words
    foreach (string word in words)
    {
        // if the word is already in the dictionary, increase its frequency by 1
        if (wordFreqs.ContainsKey(word))
        {
            wordFreqs[word] += 1;
        }
        // if the word is not in the dictionary, add it with a frequency of 1
        else
        {
            wordFreqs.Add(word, 1);
        }
    }

    // return the dictionary with word-frequency pairs
    return wordFreqs;
}

// example usage:
string input = "This is a test string to demonstrate the word count functionality.";
Dictionary<string, int> wordFreqs = CountWords(input);

// output:
// wordFreqs = { "This": 1, "is": 1, "a": 1, "test": 1, "string": 1, "to": 1, "demonstrate": 1, "the": 1, "word": 1, "count": 1, "functionality": 1 }
// This code snippet uses c# to implement a basic binary search algorithm

public int BinarySearch(int[] arr, int num)
{
  // Creating variables for high and low point of search range
  int low = 0;
  int high = arr.Length - 1;

  // Looping until high point is higher than low point
  while (high >= low)
  {
    // Calculating midpoint of search range
    int mid = (low + high) / 2;

    // If the midpoint value is the number we are searching for, return its index
    if (arr[mid] == num)
    {
      return mid;
    }
    // If the midpoint value is smaller than the number, update low point to search only the higher half of the range
    else if (arr[mid] < num)
    {
      low = mid + 1;
    }
    // If the midpoint value is larger than the number, update high point to search only the lower half of the range
    else
    {
      high = mid - 1;
    }
  }

  // If the number is not found in the array, return -1
  return -1;
}

// Example usage
int[] arr = { 2, 5, 8, 12, 15, 22, 30 };
int num = 15;

int index = BinarySearch(arr, num);
// Output: 4
/// <summary>
/// A class representing a person with a name and age.
/// </summary>
public class Person
{
    // private fields for name and age
    private string _name;
    private int _age;

    /// <summary>
    /// Gets or sets the person's name.
    /// </summary>
    public string Name
    {
        // getter method for name
        get
        {
            return _name;
        }

        // setter method for name
        set
        {
            // check if name is empty and throw an exception if it is
            if (string.IsNullOrEmpty(value))
                throw new ArgumentNullException("Name cannot be empty");

            // if name is not empty, set it as the new name
            _name = value;
        }
    }

    /// <summary>
    /// Gets or sets the person's age.
    /// </summary>
    public int Age
    {
        // getter method for age
        get
        {
            return _age;
        }

        // setter method for age
        set
        {
            // check if age is less than 0 and throw an exception if it is
            if (value < 0)
                throw new ArgumentException("Age cannot be less than zero");

            // if age is greater than 0, set it as the new age
            _age = value;
        }
    }
}
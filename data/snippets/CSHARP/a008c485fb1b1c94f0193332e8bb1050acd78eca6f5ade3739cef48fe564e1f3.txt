/// <summary>
/// This is a function that performs binary search on an array
/// </summary>
/// <param name="arr">The array to be searched</param>
/// <param name="target">The target element to search for</param>
/// <returns>The index of the target element in the array, -1 if not found</returns>
public int BinarySearch(int[] arr, int target)
{
    // Set left pointer to first index of array
    int left = 0;
    // Set right pointer to last index of array
    int right = arr.Length - 1;

    // Loop while left pointer is less than or equal to right pointer
    while (left <= right)
    {
        // Find the middle index of the array
        int mid = left + (right - left) / 2;

        // If middle element is equal to target, return its index
        if (arr[mid] == target)
        {
            return mid;
        }
        // If middle element is greater than target, ignore right half of array
        else if (arr[mid] > target)
        {
            right = mid - 1;
        }
        // If middle element is less than target, ignore left half of array
        else
        {
            left = mid + 1;
        }
    }

    // Target element was not found, return -1
    return -1;
}
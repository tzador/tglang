/* This is a multi-line comment in C# */
// This is a single-line comment in C#

using System; // Importing the System namespace

// Creating a class named "ExampleClass"
public class ExampleClass
{
    // Declaring a private string variable named "name"
    private string name;
    
    // Initializing the constructor for ExampleClass
    public ExampleClass(string n)
    {
        // Assigning the value of parameter 'n' to the 'name' variable
        name = n;
    }
    
    // Declaring a public method named "GetName"
    public string GetName()
    {
        // Returning the value of the 'name' variable
        return name;
    }
    
    /* The Main method is the entry point for our program,
    where the execution starts */
    public static void Main()
    {
        // Creating an object of type "ExampleClass" with the parameter "John" 
        ExampleClass example = new ExampleClass("John");
        
        // Calling the GetName method on the example object and printing the output
        Console.WriteLine(example.GetName()); // Output: John
        
        // Creating an array of type integer named "numbers"
        int[] numbers = {1, 2, 3, 4, 5};
        
        // Using a for loop to iterate through the numbers array
        for(int i = 0; i < numbers.Length; i++)
        {
            // Printing out each number in the array
            Console.Write(numbers[i] + " "); // Output: 1, 2, 3, 4, 5
        }
        
        // Declaring and initializing a string variable named "message"
        string message = "Hello, world!";
        
        // Using the String.Format method to concatenate the message with the current date and time
        string formattedMessage = String.Format("{0} It is currently {1}", message, DateTime.Now);
        
        // Printing out the formatted message
        Console.WriteLine(formattedMessage); // Output: Hello, world! It is currently 9/29/2021 12:00:00 AM
        
        // Creating a try-catch block to handle exceptions
        try
        {
            // Dividing a number by 0 to trigger a DivideByZeroException
            int result = 10 / 0;
            
            // Printing out the result (this line will not be executed)
            Console.WriteLine(result);
        }
        catch(DivideByZeroException e)
        {
            // Catching the exception and printing out the error message
            Console.WriteLine("Error: " + e.Message); // Output: Error: Attempted to divide by zero.
        }
        
        // Using the "is" operator to check if an object is of a certain type
        object obj = "CSHARP";
        if(obj is string)
        {
            // If the object is a string, we can safely cast it as a string and use its methods
            string str = (string)obj;
            Console.WriteLine(str.ToLower()); // Output: csharp
        }
    }
}

/* Output:
John
1 2 3 4 5
Hello, world! It is currently 9/29/2021 12:00:00 AM
Error: Attempted to divide by zero.
csharp
*/
using System;

// define abstract class Person
public abstract class Person
{
    // define properties
    public string Name { get; set; }
    public int Age { get; set; }

    // define constructor
    public Person(string name, int age)
    {
        Name = name;
        Age = age;
    }

    // define abstract method to be implemented in child classes
    public abstract void Greet();

    // define virtual method with default implementation
    public virtual void Introduce()
    {
        Console.WriteLine($"Hi, my name is {Name}. I am {Age} years old.");
    }
}

// define child class Student inheriting from Person
public class Student : Person
{
    // define properties
    public string Major { get; set; }
    public int Year { get; set; }

    // define constructor using base constructor
    public Student(string name, int age, string major, int year) : base(name, age)
    {
        Major = major;
        Year = year;
    }

    // override Greet method from parent class
    public override void Greet()
    {
        Console.WriteLine($"Hello, my name is {Name}. I am a {Year} year {Major} major at school.");
    }

    // override Introduce method from parent class
    public override void Introduce()
    {
        Console.WriteLine($"Hi, my name is {Name}. I am {Age} years old and I am studying {Major} in my {Year} year at school.");
    }
}

// define child class Employee inheriting from Person
public class Employee : Person
{
    // define properties
    public string Company { get; set; }
    public string Position { get; set; }

    // define constructor using base constructor
    public Employee(string name, int age, string company, string position) : base(name, age)
    {
        Company = company;
        Position = position;
    }

    // override Greet method from parent class
    public override void Greet()
    {
        Console.WriteLine($"Hey there, my name is {Name}. I work for {Company} as a {Position}.");
    }

    // override Introduce method from parent class
    public override void Introduce()
    {
        Console.WriteLine($"Hi, my name is {Name}. I am {Age} years old and I work for {Company} as a {Position}.");
    }
}

// create new instance of Student class
Student student = new Student("John", 20, "Computer Science", 3);

// create new instance of Employee class
Employee employee = new Employee("Jane", 25, "XYZ Company", "Software Developer");

// call Greet method for both objects
student.Greet();
employee.Greet();

// call Introduce method for both objects
student.Introduce();
employee.Introduce();
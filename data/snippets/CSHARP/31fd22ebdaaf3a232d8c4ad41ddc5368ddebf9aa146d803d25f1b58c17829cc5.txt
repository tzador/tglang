// This is a complex code snippet in C#

// Class declaration with constructor that takes in two parameters
public class Complex {
	
	// Private variables for the complex number's real and imaginary parts
	private double real;
	private double imaginary;
	
	// Constructor that sets the real and imaginary parts
	public Complex(double r, double i) {
		real = r;
		imaginary = i;
	}
	
	// Method to add two complex numbers and return a new complex number
	public Complex Add(Complex other) {
		
		// Create a new complex number object
		Complex result = new Complex(0,0);
		
		// Add the real parts of the two numbers
		result.real = this.real + other.real;
		
		// Add the imaginary parts of the two numbers
		result.imaginary = this.imaginary + other.imaginary;
		
		// Return the result
		return result;
	}
	
	// Method to subtract two complex numbers and return a new complex number
	public Complex Subtract(Complex other) {
		
		// Create a new complex number object
		Complex result = new Complex(0,0);
		
		// Subtract the real parts of the two numbers
		result.real = this.real - other.real;
		
		// Subtract the imaginary parts of the two numbers
		result.imaginary = this.imaginary - other.imaginary;
		
		// Return the result
		return result;
	}
	
	// Override the ToString() method to return a formatted string
	// that represents the complex number in the form 'real + imaginary i'
	public override string ToString() {
		return $"{real} + {imaginary}i";
	}
	
	// Main method for testing the Complex class
	public static void Main() {
		
		// Create two complex numbers
		Complex c1 = new Complex(2,3);
		Complex c2 = new Complex(4,5);
		
		// Add the two numbers and store the result in a new complex number
		Complex c3 = c1.Add(c2);
		
		// Print out the results using the ToString() method
		Console.WriteLine("c1 = " + c1.ToString());
		Console.WriteLine("c2 = " + c2.ToString());
		Console.WriteLine("c1 + c2 = " + c3.ToString());
		
		// Subtract the two numbers and store the result in a new complex number
		Complex c4 = c1.Subtract(c2);
		
		// Print out the results using the ToString() method
		Console.WriteLine("c1 - c2 = " + c4.ToString());
	}
}
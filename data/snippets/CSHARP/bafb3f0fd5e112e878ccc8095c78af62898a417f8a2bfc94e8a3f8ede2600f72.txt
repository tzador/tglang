// create a generic class with multiple type parameters
public class MultiType<T1, T2>
{
    // declare private fields of the specified types
    private T1 item1;
    private T2 item2;
    
    // create constructor that initializes the fields
    public MultiType(T1 item1, T2 item2)
    {
        this.item1 = item1;
        this.item2 = item2;
    }
    
    // create properties to access the private fields
    public T1 Item1
    {
        get { return this.item1; }
        set { this.item1 = value; }
    }
    
    public T2 Item2
    {
        get { return this.item2; }
        set { this.item2 = value; }
    }
}
// create an instance of the generic class with specified types
var multiTypes = new MultiType<string, int>("Hello", 123);
// access and modify the properties of the instance
multiTypes.Item1 = "World";
multiTypes.Item2 = 456;
// print the values of the properties
Console.WriteLine(multiTypes.Item1 + " " + multiTypes.Item2);
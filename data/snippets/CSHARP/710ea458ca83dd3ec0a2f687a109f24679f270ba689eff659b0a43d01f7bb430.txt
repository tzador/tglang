using System;
using System.Collections.Generic;

// This is a class definition
public class ExampleClass
{
    // Private field of type int
    private int _myInt;

    // Constructor that takes in an int and sets it to the private field
    public ExampleClass(int num)
    {
        _myInt = num;
    }

    // Public method that prints the current value of the private field
    public void PrintInt()
    {
        Console.WriteLine("My integer value is: " + _myInt);
    }

    // Public method that takes in a list of strings and returns the reversed list
    public List<string> ReverseList(List<string> strList)
    {
        List<string> reversedList = new List<string>();

        // Loops through the original list in reverse order and adds each item to the new list
        for (int i = strList.Count - 1; i >= 0; i--)
        {
            reversedList.Add(strList[i]);
        }

        return reversedList;
    }
}

// Example of using the ExampleClass
public class Program
{
    public static void Main()
    {
        // Creates an instance of ExampleClass with an int value of 5
        ExampleClass myClass = new ExampleClass(5);

        // Calls the PrintInt method to print the value of _myInt (5)
        myClass.PrintInt();

        // Creates a list of strings and adds three items to it
        List<string> myStrList = new List<string>();
        myStrList.Add("Hello");
        myStrList.Add("World");
        myStrList.Add("!");

        // Prints the original list
        Console.WriteLine("Original list: ");
        foreach (string str in myStrList)
        {
            Console.WriteLine(str);
        }

        // Calls the ReverseList method to reverse the list
        List<string> reversedList = myClass.ReverseList(myStrList);

        // Prints the reversed list
        Console.WriteLine("Reversed list: ");
        foreach (string str in reversedList)
        {
            Console.WriteLine(str);
        }
    }
}
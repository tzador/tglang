/// <summary> 
/// This method uses a nested for loop to find all prime numbers up to a given limit.
/// </summary> 
/// <param name="limit">The maximum number to check for prime numbers.</param> 
/// <returns>A list of all prime numbers found within the given limit.</returns> 
public List<int> FindPrimes(int limit)
{
    // Instantiate a list to store the prime numbers
    List<int> primes = new List<int>();

    // Loop through numbers from 2 to the limit
    for (int i = 2; i <= limit; i++)
    {
        // Assume that the current number i is a prime number
        bool isPrime = true;

        // Loop through numbers from 2 to i-1 to check for prime factors
        for (int j = 2; j < i; j++)
        {
            // If i is divisible by any number j, it is not a prime number
            if (i % j == 0)
            {
                // Set the isPrime flag to false
                isPrime = false;

                // Exit the for loop as soon as a factor is found
                break;
            }
        }

        // If isPrime is still true, add i to the list of prime numbers
        if (isPrime)
        {
            primes.Add(i);
        }
    }

    // Return the list of prime numbers
    return primes;
}
/// <summary>
/// This class represents a shopping cart for an online store.
/// </summary>
public class ShoppingCart
{
    // Private variables to store cart items and total cost
    private List<Item> items;
    private decimal totalCost;

    // Constructor to initialize items list and total cost
    public ShoppingCart()
    {
        items = new List<Item>();
        totalCost = 0;
    }

    /// <summary>
    /// Adds an item to the cart and updates the total cost.
    /// </summary>
    /// <param name="item">The item to be added.</param>
    public void AddItem(Item item)
    {
        items.Add(item);
        totalCost += item.Price;
    }

    /// <summary>
    /// Removes an item from the cart and updates the total cost.
    /// </summary>
    /// <param name="item">The item to be removed.</param>
    public void RemoveItem(Item item)
    {
        items.Remove(item);
        totalCost -= item.Price;
    }

    /// <summary>
    /// Clears the cart by removing all items and resetting the total cost to 0.
    /// </summary>
    public void ClearCart()
    {
        items.Clear();
        totalCost = 0;
    }

    /// <summary>
    /// Retrieves the total cost of all items in the cart.
    /// </summary>
    /// <returns>The total cost as a decimal.</returns>
    public decimal GetTotalCost()
    {
        return totalCost;
    }

    /// <summary>
    /// Overrides the default ToString method to display information about the cart.
    /// </summary>
    /// <returns>A string containing the number of items and total cost of the cart.</returns>
    public override string ToString()
    {
        return $"Shopping cart with {items.Count} items, total cost: {totalCost:C}";
    }
}
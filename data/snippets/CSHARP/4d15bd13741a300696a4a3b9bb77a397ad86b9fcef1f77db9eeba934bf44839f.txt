/// <summary>
/// This method takes in an integer and checks if it is a prime number
/// </summary>
/// <param name="n">The integer to be checked</param>
/// <returns>True if the integer is a prime number, otherwise false</returns>
public bool isPrime(int n)
{
    // If the integer is less than 2, it cannot be a prime number
    if (n < 2)
    {
        return false;
    }

    // Loop through all integers from 2 to the square root of n
    // Only need to check up to the square root because any factors
    // above the square root will already have a corresponding factor below it
    for (int i = 2; i <= Math.Sqrt(n); i++)
    {
        // If n is divisible by i, then it is not a prime number
        // Therefore, return false
        if (n % i == 0)
        {
            return false;
        }
    }

    // If the loop does not return false at any point, then n is a prime number
    // Return true
    return true;
}
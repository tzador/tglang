/// <summary>
/// This is a class for creating and manipulating shapes.
/// </summary>
public class Shape
{
    private int sides; // number of sides of the shape
    private string color; // color of the shape

    /// <summary>
    /// This is a constructor for creating a new shape with given number of sides and color.
    /// </summary>
    /// <param name="sides">Number of sides for the shape</param>
    /// <param name="color">Color of the shape</param>
    public Shape(int sides, string color)
    {
        this.sides = sides;
        this.color = color;
    }

    /// <summary>
    /// This method returns the area of the shape.
    /// </summary>
    /// <returns>The area of the shape</returns>
    public double CalculateArea()
    {
        // declare and initialize variables
        double area = 0;
        const double PI = 3.14159;

        // calculate area based on number of sides
        switch (sides)
        {
            case 3: // triangle
                area = (Math.Sqrt(3) / 4) * (sides * sides);
                break;
            case 4: // square or rectangle
                area = sides * sides;
                break;
            case 5: // pentagon
                area = (Math.Sqrt(5 * (5 + 2 * Math.Sqrt(5)))) / 4 * (sides * sides);
                break;
            default:
                Console.WriteLine("Unsupported sides for calculating area.");
                break;
        }

        // return area
        return area;
    }

    /// <summary>
    /// This method changes the color of the shape.
    /// </summary>
    /// <param name="newColor">New color to change to.</param>
    public void ChangeColor(string newColor)
    {
        this.color = newColor;
    }
}

// create a new shape object
Shape myShape = new Shape(4, "red");

// calculate and print the area
Console.WriteLine("The area of the shape is: " + myShape.CalculateArea());

// change the color of the shape to blue
myShape.ChangeColor("blue");

// print the new color of the shape
Console.WriteLine("The new color of the shape is: " + myShape.color);
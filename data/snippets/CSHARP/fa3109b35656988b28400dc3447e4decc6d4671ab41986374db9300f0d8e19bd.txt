/// <summary>
/// This class represents a Bank Account.
/// </summary>
public class BankAccount
{
    // private fields
    private string accountNumber;
    private decimal balance;
    private string accountHolder;

    // public properties for fields
    public string AccountNumber
    {
        get { return accountNumber; }
        set { accountNumber = value; }
    }

    public decimal Balance
    {
        get { return balance; }
        set { balance = value; }
    }

    public string AccountHolder
    {
        get { return accountHolder; }
        set { accountHolder = value; }
    }

    // constructor
    public BankAccount(string accountNumber, decimal balance, string accountHolder)
    {
        this.accountNumber = accountNumber;
        this.balance = balance;
        this.accountHolder = accountHolder;
    }

    /// <summary>
    /// Withdraws an amount from the account balance.
    /// </summary>
    /// <param name="amount">The amount to withdraw.</param>
    public void Withdraw(decimal amount)
    {
        if (amount > balance)
        {
            Console.WriteLine("Insufficient funds.");
            return;
        }
        balance -= amount;
        Console.WriteLine("Withdraw successful. New balance: " + balance);
    }

    /// <summary>
    /// Deposits an amount into the account balance.
    /// </summary>
    /// <param name="amount">The amount to deposit.</param>
    public void Deposit(decimal amount)
    {
        balance += amount;
        Console.WriteLine("Deposit successful. New balance: " + balance);
    }

    /// <summary>
    /// Transfers an amount from this account to another account.
    /// </summary>
    /// <param name="amount">The amount to transfer.</param>
    /// <param name="recipient">The recipient's bank account.</param>
    public void Transfer(decimal amount, BankAccount recipient)
    {
        if (amount > balance)
        {
            Console.WriteLine("Insufficient funds.");
            return;
        }
        Withdraw(amount);
        recipient.Deposit(amount);
        Console.WriteLine("Transfer successful.");
    }

    /// <summary>
    /// Returns a string representation of the bank account details.
    /// </summary>
    /// <returns>The account number, balance, and account holder.</returns>
    public override string ToString()
    {
        return "Account Number: " + accountNumber + "\nBalance: " + balance + "\nAccount Holder: " + accountHolder;
    }
}
// This code snippet is a C# program that demonstrates a complex dictionary structure and access to its values.

// Create a Dictionary object
Dictionary<int, Dictionary<string, List<string>>> personalInfo = new Dictionary<int, Dictionary<string, List<string>>>();

// Add key-value pairs to the dictionary
personalInfo.Add(
  1, new Dictionary<string, List<string>> // First level key (int)
  {
    // Second level key-value pairs (string, List<string>)
    {"Name", new List<string>{"John", "Smith"} },
    {"Age", new List<string>{"30"} },
    {"Address", new List<string>{"123 Main Street", "Apartment 1B"} }
  }
);

// Accessing the value for a specified key
string name = personalInfo[1]["Name"][0]; // Returns "John"

// Modifying the value for a specified key
personalInfo[1]["Address"][1] = "Apartment 2C"; // Changes "Apartment 1B" to "Apartment 2C"

// Updating the value if the key already exists, or adding a new key-value pair if the key does not exist
personalInfo[2] = new Dictionary<string, List<string>>{
  {"Name", new List<string>{"Jane", "Doe"} },
  {"Age", new List<string>{"25"} },
};

// Output the entire dictionary
Console.WriteLine("Personal information:");
foreach (KeyValuePair<int, Dictionary<string, List<string>>> entry in personalInfo)
{
  Console.WriteLine("ID: " + entry.Key);
  Console.WriteLine("Name: " + entry.Value["Name"][0] + " " + entry.Value["Name"][1]);
  Console.WriteLine("Age: " + entry.Value["Age"][0]);
  Console.WriteLine("Address: " + entry.Value["Address"][0] + " " + entry.Value["Address"][1]);
}
// Output:
// Personal information:
// ID: 1
// Name: John Smith
// Age: 30
// Address: 123 Main Street Apartment 2C
// ID: 2
// Name: Jane Doe
// Age: 25
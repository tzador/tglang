//Define a function that takes in an integer parameter
//and returns a string representing the number's binary form
string ConvertToBinary(int number)
{
    string binary = ""; //Create an empty string to hold the binary form of the number
    while (number > 0) //While loop to keep dividing the number by 2 until it reaches 0
    {
        binary = (number % 2) + binary; //Add the remainder to the beginning of the binary string
        number = number / 2; //Divide the number by 2 to get the next digit in the binary form
    }
    return binary; //Return the binary string
}

//Define a function that takes in a string parameter
//and checks if the string is a palindrome (reads the same backwards and forwards)
bool IsPalindromeString(string str)
{
    int start = 0; //Variable to keep track of first index in string
    int end = str.Length - 1; //Variable to keep track of last index in string

    while (start < end) //While loop to check if start index is still smaller than end index
    {
        //Compare the characters at the start and end indices
        if (str[start] != str[end]) 
        {
            return false; //If they are not equal, the string is not a palindrome
        }
        start++; //Increment start index
        end--; //Decrement end index
    }
    return true; //If the loop finishes without returning false, the string is a palindrome
}

//Define a class called "Car" with properties for make, model, and year
class Car
{
    string make; //Property to hold the make of the car
    string model; //Property to hold the model of the car
    int year; //Property to hold the year the car was made

    //Constructor for the "Car" class that takes in the make, model, and year as parameters
    public Car(string make, string model, int year)
    {
        this.make = make; //Set the "make" property to the input parameter
        this.model = model; //Set the "model" property to the input parameter
        this.year = year; //Set the "year" property to the input parameter
    }

    //Method to print out the car's info
    public void PrintInfo()
    {
        Console.WriteLine("Make: " + make); //Print out the make of the car
        Console.WriteLine("Model: " + model); //Print out the model of the car
        Console.WriteLine("Year: " + year); //Print out the year the car was made
    }
}

//Create a new instance of the "Car" class
Car myCar = new Car("Honda", "Civic", 2010);
myCar.PrintInfo(); //Call the "PrintInfo" method on the car object to print out its info

//Define a function that takes in a list of integers and returns the sum of all the numbers
int SumList(List<int> numbers)
{
    int sum = 0; //Variable to hold the sum of the numbers
    foreach (int num in numbers) //Loop through each number in the list
    {
        sum += num; //Add the number to the sum variable
    }
    return sum; //Return the final sum
}

//Create a new list of numbers
List<int> numList = new List<int> { 1, 2, 3, 4, 5 };
Console.WriteLine(SumList(numList)); //Call the "SumList" function on the list and print out the result (15)
/// <summary>
/// This is a basic implementation of binary search algorithm
/// that searches for a given value in a sorted array
/// </summary>
/// <param name="arr">The sorted array to be searched</param>
/// <param name="value">The value to be searched for</param>
/// <returns>The index of the value in the array, or -1 if the value is not found</returns>
public static int BinarySearch(int[] arr, int value)
{
    // set initial low and high values
    int lowIndex = 0;
    int highIndex = arr.Length - 1;
    
    // while low index is less than or equal to high index
    while (lowIndex <= highIndex)
    {
        // calculate middle index
        int midIndex = (lowIndex + highIndex) / 2;
        
        // check if value is at middle index
        if (arr[midIndex] == value)
        {
            // return middle index
            return midIndex;
        }
        
        // if value is greater than middle index value,
        // restrict search to upper half of array
        if (value > arr[midIndex])
        {
            lowIndex = midIndex + 1;
        }
        // if value is less than middle index value,
        // restrict search to lower half of array
        else
        {
            highIndex = midIndex - 1;
        }
    }
    
    // return -1 if value is not found
    return -1;
}
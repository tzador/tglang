// Example of a complex class with methods, properties, and constructors
class Car
{
    // Static property to track total number of cars instantiated
    private static int totalCars = 0;

    // Constructor with parameters to initialize property values
    public Car(string make, string model, int year, bool isElectric)
    {
        this.Make = make;
        this.Model = model;
        this.Year = year;
        this.IsElectric = isElectric;
        Car.totalCars++; // Increment totalCars property every time a new car is instantiated
    }

    // Read-only property to get make of car
    public string Make { get; }

    // Read-only property to get model of car
    public string Model { get; }

    // Read-only property to get year of car
    public int Year { get; }

    // Read-only property to check if car is electric
    public bool IsElectric { get; }

    // Method to start car's engine
    public void StartEngine()
    {
        Console.WriteLine("Vroom Vroom!");
    }

    // Method to stop car's engine
    public void StopEngine()
    {
        Console.WriteLine("Engine stopped.");
    }

    // Method to get total number of cars instantiated
    public static int GetTotalCars()
    {
        return Car.totalCars;
    }
}

// Example of implementing the Car class
public static void Main()
{
    // Instantiate 3 cars with different properties
    Car electricCar = new Car("Tesla", "Model 3", 2020, true);
    Car gasCar = new Car("Honda", "Civic", 2018, false);
    Car hybridCar = new Car("Toyota", "Prius", 2019, true);

    // Print out each car's properties and start/stop engines
    Console.WriteLine($"Electric car: {electricCar.Make} {electricCar.Model} ({electricCar.Year}), isElectric: {electricCar.IsElectric}");
    electricCar.StartEngine();
    electricCar.StopEngine();
    Console.WriteLine($"Gas car: {gasCar.Make} {gasCar.Model} ({gasCar.Year}), isElectric: {gasCar.IsElectric}");
    gasCar.StartEngine();
    gasCar.StopEngine();
    Console.WriteLine($"Hybrid car: {hybridCar.Make} {hybridCar.Model} ({hybridCar.Year}), isElectric: {hybridCar.IsElectric}");
    hybridCar.StartEngine();
    hybridCar.StopEngine();

    // Get total number of cars instantiated from static method
    int totalCars = Car.GetTotalCars();
    Console.WriteLine($"Total number of cars instantiated: {totalCars}");
}
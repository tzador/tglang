// This code snippet uses LINQ to perform a group join on two lists.
// The output is a list of objects with a nested list of items from the second list that match the join condition.

List<Category> categories = new List<Category>()
{
    new Category { CategoryId = 1, Name = "Electronics" },
    new Category { CategoryId = 2, Name = "Clothing" },
    new Category { CategoryId = 3, Name = "Home Goods" }
};

List<Product> products = new List<Product>()
{
    new Product { ProductId = 1, Name = "TV", CategoryId = 1 },
    new Product { ProductId = 2, Name = "Shirt", CategoryId = 2 },
    new Product { ProductId = 3, Name = "Couch", CategoryId = 3 },
    new Product { ProductId = 4, Name = "Phone", CategoryId = 1 },
    new Product { ProductId = 5, Name = "Pants", CategoryId = 2 },
    new Product { ProductId = 6, Name = "Bed", CategoryId = 3 }
};

var results = from c in categories
              join p in products on c.CategoryId equals p.CategoryId into productsByCategory
              select new { Category = c, Products = productsByCategory.ToList() };

foreach (var result in results)
{
    Console.WriteLine($"Category: {result.Category.Name}");
    
    foreach (var product in result.Products)
    {
        Console.WriteLine($" - Product Name: {product.Name}");
    }
}
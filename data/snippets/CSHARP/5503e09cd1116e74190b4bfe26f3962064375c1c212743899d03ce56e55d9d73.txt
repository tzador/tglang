//This code snippet creates a Person class and uses it to instantiate a new object
public class Person
{
    //private fields for the class
    private string name;
    private int age;
    
    //public properties for the class
    public string Name 
    { 
        get
        {
            return name;
        }
        
        set
        {
            //checks if name is not null or empty
            if(!string.IsNullOrEmpty(value))
            {
                name = value;
            }
            else 
            {
                throw new Exception("Name cannot be null or empty");
            }
        }
    }
    
    public int Age 
    { 
        get
        {
            return age;
        }
        
        set
        {
            //checks if age is greater than 0
            if(value > 0)
            {
                age = value;
            }
            else 
            {
                throw new Exception("Age must be greater than 0");
            }
        }
    }
    
    //parameterized constructor for the Person class
    public Person(string name, int age)
    {
        //uses properties to set the values
        Name = name;
        Age = age;
    }
    
    //method to greet the person
    public void Greet()
    {
        Console.WriteLine("Hello, my name is " + name + " and I am " + age + " years old.");
    }
}

//creating a new Person object and calling the Greet method
Person person = new Person("John", 25);
person.Greet();
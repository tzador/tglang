/// <summary>
/// This is a Student class that represents a student in a school.
/// </summary>
public class Student
{
    // properties
    private string _firstName;
    private string _lastName;
    private int _age;
    private string _studentID;

    // constructor
    public Student(string firstName, string lastName, int age, string studentID)
    {
        _firstName = firstName;
        _lastName = lastName;
        _age = age;
        _studentID = studentID;
    }

    // method to get student's full name
    /// <summary>
    /// This method returns the student's full name.
    /// </summary>
    /// <returns>The student's full name.</returns>
    public string GetFullName()
    {
        return string.Format("{0} {1}", _firstName, _lastName);
    }

    // method to check if student is of legal age
    /// <summary>
    /// This method checks if the student is of legal age (18 years old or above).
    /// </summary>
    /// <returns>True if the student is of legal age, False otherwise.</returns>
    public bool IsLegalAge()
    {
        if (_age >= 18)
        {
            return true;
        }
        
        return false;
    }

    // method to generate student ID
    /// <summary>
    /// This method generates a unique student ID for the student.
    /// </summary>
    /// <returns>The student's unique ID.</returns>
    public string GenerateStudentID()
    {
        Random rnd = new Random();

        // generate random numbers and append them to the student's name
        string studentID = _firstName.Substring(0, 1).ToUpper() + _lastName.Substring(0, 1).ToUpper();
        studentID += rnd.Next(100, 999) + rnd.Next(100, 999);

        return studentID;
    }
}
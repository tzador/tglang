using System;

// This is a comment in C#

namespace MyNamespace
{
    // This is a nested namespace
    namespace SubNamespace
    {
        // This is a class with inheritance
        public class ParentClass : BaseClass
        {
            // This is a private field
            private int privateField = 0;

            // This is a public property with a getter and setter
            public int PublicProperty 
            {
                get { return privateField; }
                set 
                { 
                    if(value >= 0) 
                        privateField = value;
                    else
                        privateField = 0;
                }
            }

            // This is a constructor
            public ParentClass(int value)
            {
                PrivateField = value;
            }

            // This is a method that takes in a generic type argument
            public void GenericMethod<T>(T argument)
            {
                Console.WriteLine($"The argument type is: {typeof(T)}");
                Console.WriteLine($"The argument value is: {argument}");
            }

            // This is an override method
            public override void OverrideMethod()
            {
                base.OverrideMethod();
                Console.WriteLine("This is an overridden method");
            }
        }

        // This is a base class
        public class BaseClass
        {
            //This is a virtual method
            public virtual void OverrideMethod()
            {
                Console.WriteLine("This is a virtual method");
            }
        }
    }
}
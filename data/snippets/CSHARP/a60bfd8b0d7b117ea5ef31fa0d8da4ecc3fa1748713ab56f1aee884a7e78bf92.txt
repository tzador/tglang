// Method that performs a binary search on a sorted array of integers
int BinarySearch(int[] array, int target)
{
    // Keep track of the left and right bounds of the subarray we are searching in
    int left = 0;
    int right = array.Length - 1;

    // Continue searching while the left bound is less than or equal to the right bound
    while (left <= right)
    {
        // Calculate the middle index of the subarray
        int middle = (left + right) / 2;

        // If the target value is equal to the middle element of the subarray, return its index
        if (target == array[middle])
        {
            return middle;
        }
        // If the target value is less than the middle element, change the right bound to the middle - 1
        else if (target < array[middle])
        {
            right = middle - 1;
        }
        // If the target value is greater than the middle element, change the left bound to the middle + 1
        else
        {
            left = middle + 1;
        }
    }

    // If the target value is not found, return -1
    return -1;
}
// This code snippet shows a function that performs a binary search on a sorted array

// Input parameters:
// - arr: The sorted array to be searched
// - target: The value to be searched for in the array
// - start: The starting index of the current subarray being searched
// - end: The ending index of the current subarray being searched

public static int BinarySearch(int[] arr, int target, int start, int end)
{
    // Check for base case
    if (end >= start)
    {
        // Calculate the middle index of the subarray
        int mid = start + (end - start) / 2;

        // If the target is found at the middle index, return the index
        if (arr[mid] == target)
        {
            return mid;
        }

        // If the target is smaller than the value at the middle index,
        // recursively search the left subarray
        if (arr[mid] > target)
        {
            return BinarySearch(arr, target, start, mid - 1);
        }

        // If the target is larger than the value at the middle index,
        // recursively search the right subarray
        return BinarySearch(arr, target, mid + 1, end);
    }

    // If the target is not found in the array, return -1
    return -1;
}
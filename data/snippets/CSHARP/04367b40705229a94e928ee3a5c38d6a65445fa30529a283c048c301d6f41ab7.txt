// This code snippet uses the CSHARP programming language to create a complex class named Student
// It contains various properties and methods related to a student's information and grades
public class Student 
{
    // Private fields to store the student's information and grades
    private string name;
    private int age;
    private int[] grades;

    // Constructor to initialize the student's name and age
    public Student(string name, int age) 
    {
        this.name = name;
        this.age = age;
    }

    // Getter and setter for the Name property
    public string Name 
    {
        get 
        {
            return this.name;
        }
        set 
        {
            this.name = value;
        }
    }

    // Getter and setter for the Age property
    public int Age 
    {
        get 
        {
            return this.age;
        }
        set 
        {
            this.age = value;
        }
    }

    // Method to add grades for the student
    public void AddGrade(int grade) 
    {
        // Check if grades array is null, if so create a new array with one element
        if (grades == null) 
        {
            grades = new int[1];
            grades[0] = grade;
        } 
        else // If not null, create a new array with double the size of the original and copy over the elements
        {
            int[] newGrades = new int[grades.Length * 2];
            for (int i = 0; i < grades.Length; i++) 
            {
                newGrades[i] = grades[i];
            }
            newGrades[grades.Length] = grade;
            grades = newGrades;
        }
    }

    // Method to calculate the average grade for the student
    public double CalculateAverage() 
    {
        // Check if grades array is null, if so return 0
        if (grades == null) 
        {
            return 0;
        }

        // Calculate the sum of all the grades
        int sum = 0;
        for (int i = 0; i < grades.Length; i++) 
        {
            sum += grades[i];
        }

        // Calculate the average by dividing the sum by the number of grades
        return (double)sum / grades.Length;
    }

    // Method to print out the student's information and grades
    public void PrintInfo() 
    {
        // Print out the student's name and age
        Console.WriteLine($"Name: {name}, Age: {age}");

        // Check if grades array is null, if so return
        if (grades == null) 
        {
            return;
        }

        // Print out each individual grade
        Console.Write("Grades: ");
        for (int i = 0; i < grades.Length; i++) 
        {
            Console.Write($"{grades[i]} ");
        }
        Console.WriteLine();

        // Print out the average grade and a message depending on if it is passing or failing
        double average = CalculateAverage();
        Console.WriteLine($"Average Grade: {average}");
        if (average >= 70) 
        {
            Console.WriteLine("Passing");
        } 
        else 
        {
            Console.WriteLine("Failing");
        }
    }
}
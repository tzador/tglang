// This snippet is an example of how to use an exception handling block in C#

try
{
    // Code that may cause an exception is placed within the try block
    int num1 = 10;
    int num2 = 0;
    int result = num1 / num2;
    
    // If an exception occurs, the code within the try block will stop executing
    // and the control will pass to the catch block
}
catch(DivideByZeroException e)
{
    // Code to handle the specific exception is placed within the catch block
    Console.WriteLine("An error has occurred: " + e.Message);
}
catch(Exception e)
{
    // Code to handle any other exceptions is placed within the catch block
    Console.WriteLine("An unhandled exception has occurred: " + e.Message);
}
finally
{
    // Optional finally block is used to execute code whether or not an exception occurs
    Console.WriteLine("Program has finished executing.");
}
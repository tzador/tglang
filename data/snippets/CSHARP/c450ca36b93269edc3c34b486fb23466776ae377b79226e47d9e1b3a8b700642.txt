// This code sample demonstrates how to implement inheritance in C#

// Base class
public class Vehicle
{
    // Fields
    private string make;
    private string model;
    protected int year;
    protected double price;

    // Constructor
    public Vehicle(string make, string model, int year, double price)
    {
        this.make = make;
        this.model = model;
        this.year = year;
        this.price = price;
    }

    // Getters and setters
    public string Make
    {
        get { return make; }
        set { make = value; }
    }

    public string Model
    {
        get { return model; }
        set { model = value; }
    }

    public int Year
    {
        get { return year; }
        set { year = value; }
    }

    public double Price
    {
        get { return price; }
        set { price = value; }
    }

    // Method to display vehicle information
    public virtual string DisplayInfo()
    {
        return $"Make: {make}\nModel: {model}\nYear: {year}\nPrice: {price:C}";
    }
}

// Derived class
public class Car : Vehicle
{
    // Fields
    private int numDoors;
    private string engineType;

    // Constructor
    public Car(string make, string model, int year, double price, int numDoors, string engineType) : base(make, model, year, price)
    {
        this.numDoors = numDoors;
        this.engineType = engineType;
    }

    // Getters and setters
    public int NumDoors
    {
        get { return numDoors; }
        set { numDoors = value; }
    }

    public string EngineType
    {
        get { return engineType; }
        set { engineType = value; }
    }

    // Method to display car information
    public override string DisplayInfo()
    {
        return base.DisplayInfo() + $"\nNumber of Doors: {numDoors}\nEngine Type: {engineType}";
    }
}

// Main method
public static void Main()
{
    // Creating a car object
    Car car = new Car("Toyota", "Camry", 2021, 25000, 4, "Gasoline");

    // Calling displayInfo method to print car information
    Console.WriteLine(car.DisplayInfo());
}
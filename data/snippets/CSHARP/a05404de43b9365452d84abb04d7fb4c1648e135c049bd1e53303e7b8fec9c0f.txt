// This code snippet creates a class called "Person" with properties for first and last name, age, and list of favorite foods
public class Person 
{
    // First and last name properties with private backing fields
    private string _firstName;
    private string _lastName;
    
    // Age property with private backing field
    private int _age;
    
    // Favorite foods property with private backing field and public getter/setter
    private List<string> _favoriteFoods;
    public List<string> FavoriteFoods 
    {
        get { return _favoriteFoods; }
        set { _favoriteFoods = value; }
    }
    
    // Constructor method to set initial values for first and last name, age, and favorite foods
    public Person(string firstName, string lastName, int age, List<string> favoriteFoods) 
    {
        _firstName = firstName;
        _lastName = lastName;
        _age = age;
        _favoriteFoods = favoriteFoods;
    }
    
    // Method to add a new favorite food to the list
    public void AddFavoriteFood(string food) 
    {
        _favoriteFoods.Add(food);
    }
    
    // Method to print out the person's information
    public void PrintInfo() 
    {
        Console.WriteLine("Name: " + _firstName + " " + _lastName);
        Console.WriteLine("Age: " + _age);
        Console.WriteLine("Favorite Foods:");
        foreach (string food in _favoriteFoods) 
        {
            Console.WriteLine(food);
        }
    }
}

// Instantiate a new Person object with initial values
Person person = new Person("John", "Smith", 25, new List<string> {"Pizza", "Sushi"});

// Add a new favorite food
person.AddFavoriteFood("Pasta");

// Print out the person's information
person.PrintInfo();
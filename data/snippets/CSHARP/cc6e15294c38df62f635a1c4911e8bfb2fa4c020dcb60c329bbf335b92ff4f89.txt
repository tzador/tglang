/// <summary>
/// This method checks if a string input is a palindrome.
/// </summary>
/// <param name="input">The input string to be checked.</param>
/// <returns>True if input is a palindrome, False otherwise.</returns>
public bool IsPalindrome(string input)
{
    // Convert input to lowercase
    input = input.ToLower();

    // Remove all non-alphanumeric characters
    input = Regex.Replace(input, @"[^a-z0-9]", "");

    // Check if input is an empty string or a single character
    if (input.Length < 2)
    {
        return true;
    }

    // Loop through the first half of the string 
    for (int i = 0; i < input.Length / 2; i++)
    {
        // Compare first and last characters, then move towards the center
        if (input[i] != input[input.Length - i - 1])
        {
            // If at any point the characters do not match, return False
            return false;
        }
    }

    // If the loop completes without returning False, input is a palindrome
    return true;
}

// Example input and output
string exampleInput = "Racecar";
bool exampleOutput = IsPalindrome(exampleInput); // Returns True
string exampleInput2 = "Palindrome";
bool exampleOutput2 = IsPalindrome(exampleInput2); // Returns False
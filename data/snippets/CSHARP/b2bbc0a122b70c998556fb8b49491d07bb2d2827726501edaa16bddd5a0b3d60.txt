// Declaration of an Animal class
public class Animal
{
    private string name; // private field for animal's name

    // public property for accessing animal's name
    public string Name
    {
        get { return name; }
        set { name = value; }
    }

    // constructor that takes in a name parameter
    public Animal(string name)
    {
        this.name = name;
    }

    // method for making animal noises
    public void MakeNoise(string noise)
    {
        Console.WriteLine("{0} says {1}!", name, noise);
    }
}

// Inheritance from Animal class to create a Dog class
public class Dog : Animal
{
    private string breed; // private field for dog's breed

    // public property for accessing dog's breed
    public string Breed
    {
        get { return breed; }
        set { breed = value; }
    }

    // constructor that takes in name and breed parameters
    public Dog(string name, string breed) : base(name)
    {
        this.breed = breed;
    }

    // override method for making animal noises specific to dogs
    public override void MakeNoise(string noise)
    {
        Console.WriteLine("{0} the {1} barks {2}!", Name, Breed, noise);
    }

    // method for performing dog-specific actions
    public void Fetch(string item)
    {
        Console.WriteLine("{0} runs to get the {1}. Good dog!", Name, item);
    }
}

// Example usage of the Dog class
Dog myDog = new Dog("Buddy", "Golden Retriever"); // creating an instance of Dog
myDog.MakeNoise("Woof"); // output: Buddy the Golden Retriever barks Woof!
myDog.Fetch("ball"); // output: Buddy runs to get the ball. Good dog!
// This code snippet is a C# program that calculates the nth number in the Fibonacci sequence using recursion.

// Define a function to calculate the Fibonacci number using recursion
public int FibonacciRecursion(int n)
{
    // Check for base cases
    if (n == 0)
        return 0;
    else if (n == 1)
        return 1;
    // Recursive case - use the previous two Fibonacci numbers to calculate the current number
    else
        return FibonacciRecursion(n - 1) + FibonacciRecursion(n - 2);
}

// Prompt user to enter the number of terms in the sequence
Console.WriteLine("Enter the number of terms in the Fibonacci sequence: ");
// Read user input and convert it to an integer
int numTerms = Convert.ToInt32(Console.ReadLine());

// Loop through each term and calculate the Fibonacci number using recursion
for (int i = 0; i < numTerms; i++)
{
    // Call the FibonacciRecursion function and pass in the current term
    int fibonacciNum = FibonacciRecursion(i);
    // Print out the term and its corresponding Fibonacci number
    Console.WriteLine($"Term {i}: {fibonacciNum}");
}
public class MyClass // creates a public class called "MyClass"
{
    private int myInt; // creates a private integer variable called "myInt"

    public int MyInt // creates a public property called "MyInt"
    {
        get // defines the getter for the property
        {
            return myInt; // returns the value of "myInt"
        }
        set // defines the setter for the property
        {
            if (value > 0) // checks if the input value is greater than 0
            {
                myInt = value; // sets the value of "myInt" to the input value
            }
            else // if the input value is not greater than 0
            {
                throw new Exception("Invalid input"); // throws an exception
            }
        }
    }

    public string MyMethod(string name) // creates a public method called "MyMethod" that takes in a string parameter called "name"
    {
        string message = "Welcome, " + name + "!"; // initializes a string variable called "message" with a welcome message
        return message; // returns the message
    }

    private void MyOtherMethod() // creates a private method called "MyOtherMethod" with no return value
    {
        Console.WriteLine("This is a private method"); // prints a message to the console
    }

    public static void Main() // creates a public static method called "Main"
    {
        MyClass myObj = new MyClass(); // creates an instance of the "MyClass" class
        myObj.MyInt = 5; // calls the setter for the "myInt" property and sets it to 5
        string output = myObj.MyMethod("John"); // calls the "MyMethod" method and passes in "John" as the parameter.
        Console.WriteLine(output); // prints the output to the console
        myObj.MyOtherMethod(); // calls the private method "MyOtherMethod"
    }
}
/// <summary>
/// This is a BankAccount class that represents a user's account.
/// It has properties for account number, owner name, balance,
/// and a list of transactions.
/// </summary>
class BankAccount
{
  // Private fields
  private double _balance;
  private List<double> _transactions = new List<double>();

  // Properties
  public string AccountNumber { get; set; }
  public string Owner { get; set; }
  public double Balance
  {
    get { return _balance; }
    set 
    { 
      _balance = value;
      AddTransaction(value); // Adds balance as a transaction to list
    }
  }
  public List<double> Transactions
  {
    get { return _transactions; }
    set { _transactions = value; }
  }

  // Constructor - Initializes account number and owner name
  public BankAccount(string accountNumber, string owner)
  {
    AccountNumber = accountNumber;
    Owner = owner;
  }

  // Adds a transaction to the list of transactions and updates balance
  private void AddTransaction(double amount)
  {
    Transactions.Add(amount);
    Balance += amount;
  }

  // Withdraws specified amount from the account
  public void Withdraw(double amount)
  {
    if (amount > Balance)
    {
      // If amount is greater than balance, throw an exception
      throw new Exception("Insufficient funds in account.");
    }
    else
    {
      // Otherwise, subtract amount from balance and add as a transaction
      Balance -= amount;
      AddTransaction(-amount);
    }
  }

  // Deposits specified amount into the account
  public void Deposit(double amount)
  {
    // Add amount to balance and add as a transaction
    Balance += amount;
    AddTransaction(amount);
  }

  // Prints out the account's transaction history
  public void PrintTransactionHistory()
  {
    Console.WriteLine("Transaction History for Account " + AccountNumber + ":");

    // Iterate through list of transactions and print each one
    foreach (double transaction in Transactions)
    {
      if (transaction < 0)
      {
        Console.WriteLine("Withdraw: " + Math.Abs(transaction));
      }
      else
      {
        Console.WriteLine("Deposit: " + transaction);
      }
    }
  }
}
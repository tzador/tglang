using System;

namespace ComplexCalculator
{
    /// <summary>
    /// Class that represents a complex number with real and imaginary parts.
    /// </summary>
    public class ComplexNumber
    {
        // Private variables to store real and imaginary parts
        private double real;
        private double imaginary;


        // Constructor with optional parameters (default values are 0)
        public ComplexNumber(double realPart = 0, double imaginaryPart = 0)
        {
            this.real = realPart;
            this.imaginary = imaginaryPart;
        }

        // Properties to access the private variables
        public double Real
        {
            get { return this.real; }
            set { this.real = value; }
        }

        public double Imaginary
        {
            get { return this.imaginary; }
            set { this.imaginary = value; }
        }

        // Method to add two complex numbers
        public static ComplexNumber operator +(ComplexNumber num1, ComplexNumber num2)
        {
            return new ComplexNumber(num1.Real + num2.Real, num1.Imaginary + num2.Imaginary);
        }

        // Method to multiply two complex numbers
        public static ComplexNumber operator *(ComplexNumber num1, ComplexNumber num2)
        {
            double realPart = (num1.Real * num2.Real) - (num1.Imaginary * num2.Imaginary);
            double imaginaryPart = (num1.Real * num2.Imaginary) + (num1.Imaginary * num2.Real);

            return new ComplexNumber(realPart, imaginaryPart);
        }

        // Method to check if two complex numbers are equal
        public static bool operator ==(ComplexNumber num1, ComplexNumber num2)
        {
            return (num1.Real == num2.Real) && (num1.Imaginary == num2.Imaginary);
        }

        // Method to check if two complex numbers are not equal
        public static bool operator !=(ComplexNumber num1, ComplexNumber num2)
        {
            return (num1.Real != num2.Real) || (num1.Imaginary != num2.Imaginary);
        }

        // Override ToString() method to display complex number in appropriate format
        public override string ToString()
        {
            return this.real + " + " + this.imaginary + "i";
        }

        // Main method to test the functionality
        public static void Main()
        {
            // Creating two complex numbers
            ComplexNumber num1 = new ComplexNumber(2, 3);
            ComplexNumber num2 = new ComplexNumber(4, 5);

            // Adding two complex numbers
            ComplexNumber sum = num1 + num2;

            // Multiplying two complex numbers
            ComplexNumber product = num1 * num2;

            // Printing the results
            Console.WriteLine("Sum: " + sum);
            Console.WriteLine("Product: " + product);
        }
    }
}
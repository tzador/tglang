/// <summary>
/// This code snippet demonstrates a complex algorithm in C#.
/// It has several nested loops and conditional statements.
/// </summary>
/// <param name="inputList">The list of integers to be processed.</param>
/// <returns>A modified list with the input numbers multiplied by two if they are even, 
/// or divided by two if they are odd.</returns>
public List<int> ComplexAlgorithm(List<int> inputList)
{
    List<int> outputList = new List<int>();
    for (int i = 0; i < inputList.Count; i++)
    {
        // Check if the number is even
        if (inputList[i] % 2 == 0)
        {
            // Multiply by two and add to the output list
            int evenNumber = inputList[i] * 2;
            outputList.Add(evenNumber);
        }
        else
        {
            // Divide by two and add to the output list
            int oddNumber = inputList[i] / 2;
            outputList.Add(oddNumber);
        }
    }

    // Nested loop to check for duplicates in the output list
    for (int i = 0; i < outputList.Count; i++)
    {
        for (int j = i + 1; j < outputList.Count; j++)
        {
            // Check if there is a duplicate number
            if (outputList[j] == outputList[i])
            {
                // Replace the duplicate number with the sum of itself and the next number
                int sum = outputList[j] + outputList[j + 1];
                outputList[j] = sum;
            }
        }
    }

    // Conditional statement to remove all numbers above 100 from the output list
    for (int i = 0; i < outputList.Count; i++)
    {
        if (outputList[i] > 100)
        {
            outputList.Remove(outputList[i]);
        }
    }

    // Reverse the output list
    outputList.Reverse();

    // Return the modified output list
    return outputList;
}
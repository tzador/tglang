// Creating a class named "Person"
public class Person
{
    // Declaring private variables for name and age
    private string Name;
    private int Age;

    // Creating a constructor to set initial values
    public Person(string name, int age)
    {
        this.Name = name;
        this.Age = age;
    }

    // Creating a method to get the person's name
    public string GetName()
    {
        return this.Name;
    }

    // Creating a method to set the person's age
    public void SetAge(int age)
    {
        this.Age = age;
    }

    // Creating a method to print out the person's name and age
    public void PrintInfo()
    {
        Console.WriteLine("Name: {0}, Age: {1}", this.Name, this.Age);
    }
}

// Creating a subclass named "Student" that inherits from "Person"
public class Student : Person
{
    // Declaring a private variable for student's major
    private string Major;

    // Creating a constructor that calls the parent class constructor and sets initial values
    public Student(string name, int age, string major) : base(name, age)
    {
        this.Major = major;
    }

    // Creating a method to get the student's major
    public string GetMajor()
    {
        return this.Major;
    }

    // Overriding the PrintInfo method from the parent class to print out student's major as well
    public override void PrintInfo()
    {
        base.PrintInfo();
        Console.WriteLine("Major: " + this.Major);
    }

    // Creating a method to enroll the student in a course
    public void Enroll(string course)
    {
        Console.WriteLine("Enrolling {0} in course: {1}", this.GetName(), course);
    }
}

// Creating an instance of the Student class and using methods to set and print information
Student student = new Student("John Doe", 20, "Computer Science");
student.PrintInfo();
student.SetAge(21);
Console.WriteLine("New age: " + student.GetAge());
student.Enroll("Introduction to Programming");
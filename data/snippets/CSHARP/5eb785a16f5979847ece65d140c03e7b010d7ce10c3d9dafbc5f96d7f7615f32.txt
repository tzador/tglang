/// <summary>
/// This method takes in two arrays of integers and returns a merged array with all the elements sorted in ascending order.
/// </summary>
/// <param name="arr1">The first array to be merged.</param>
/// <param name="arr2">The second array to be merged.</param>
/// <returns>The merged array with elements sorted in ascending order.</returns>
public int[] MergeArrays(int[] arr1, int[] arr2)
{
    //check if either of the arrays is empty
    if(arr1.Length == 0)
    {
        return arr2;
    }

    if(arr2.Length == 0)
    {
        return arr1;
    }

    //create new array to store the merged array
    int[] mergedArr = new int[arr1.Length + arr2.Length];

    //initialize counters for each array
    int i = 0;
    int j = 0;
    int k = 0;

    //merge the arrays
    while(i < arr1.Length && j < arr2.Length)
    {
        if(arr1[i] < arr2[j])
        {
            mergedArr[k] = arr1[i];
            i++;
        }
        else
        {
            mergedArr[k] = arr2[j];
            j++;
        }
        k++;
    }

    //add remaining elements from each array
    while(i < arr1.Length)
    {
        mergedArr[k] = arr1[i];
        i++;
        k++;
    }

    while(j < arr2.Length)
    {
        mergedArr[k] = arr2[j];
        j++;
        k++;
    }

    //return the merged array
    return mergedArr;
}
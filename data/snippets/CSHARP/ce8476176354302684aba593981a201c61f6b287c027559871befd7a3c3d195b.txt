// This program demonstrates the use of inheritance in C#
using System;

// The Person class represents a generic person
public class Person
{
    // Person properties
    protected string firstName;
    protected string lastName;
    protected int age;

    // Person constructor with parameters
    public Person(string firstName, string lastName, int age)
    {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }

    // PrintInfo is a method that prints the information about the person
    public void PrintInfo()
    {
        Console.WriteLine($"Name: {firstName} {lastName} | Age: {age}");
    }
}

// The Student class extends the Person class
public class Student : Person
{
    // Student properties
    private int studentNumber;

    // Student constructor that calls the base class constructor
    public Student(string firstName, string lastName, int age, int studentNumber) : base(firstName, lastName, age)
    {
        this.studentNumber = studentNumber;
    }

    // PrintInfo is overridden with additional information unique to a student
    public override void PrintInfo()
    {
        base.PrintInfo(); // calls the base class method first
        Console.WriteLine($"Student Number: {studentNumber}");
    }
}

// The Teacher class extends the Person class
public class Teacher : Person
{
    // Teacher properties
    private string subject;

    // Teacher constructor that calls the base class constructor
    public Teacher(string firstName, string lastName, int age, string subject) : base(firstName, lastName, age)
    {
        this.subject = subject;
    }

    // PrintInfo is overridden with additional information unique to a teacher
    public override void PrintInfo()
    {
        base.PrintInfo(); // calls the base class method first
        Console.WriteLine($"Teaches: {subject}");
    }
}

// Main function to test the program
public static void Main(string[] args)
{
    // Create a new student object
    Student student = new Student("John", "Smith", 18, 123456);

    // Call the overridden method to print the student's information
    student.PrintInfo();

    // Create a new teacher object
    Teacher teacher = new Teacher("Jane", "Doe", 35, "Math");

    // Call the overridden method to print the teacher's information
    teacher.PrintInfo();
}

//Output:
/// <summary>
/// This is a method that calculates the factorial of a given integer.
/// </summary>
/// <param name="num">The integer to find factorial of</param>
/// <returns>The factorial of the given integer</returns>
public int Factorial(int num)
{
    // If the integer is 0 or 1, the factorial is 1
    if (num == 0 || num == 1)
    {
        return 1;
    }
    else
    {
        // Otherwise, use recursion to find the factorial
        return num * Factorial(num - 1);
    }
}

// Example usage:
int num = 5;
Console.WriteLine("The factorial of {0} is {1}.", num, Factorial(num));
// Output: The factorial of 5 is 120.

// The following code uses LINQ to find the sum of all odd numbers in an array.
int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
int oddSum = numbers.Where(n => n % 2 != 0).Sum();
Console.WriteLine("The sum of all odd numbers in the array is {0}.", oddSum);
// Output: The sum of all odd numbers in the array is 25.
/// <summary>
/// This class represents a car with its properties and methods.
/// </summary>
public class Car
{
    // Private fields
    private string _color;
    private int _year;
    private string _make;
    private string _model;

    // Properties
    public string Color
    {
        get { return _color; }
        set
        {
            if (value.ToLower() == "red" || value.ToLower() == "green" || value.ToLower() == "blue")
            {
                _color = value;
            }
            else
            {
                throw new Exception("Invalid color! Must be red, green, or blue.");
            }
        }
    }

    public int Year
    {
        get { return _year; }
        set
        {
            if (value >= 1900 && value <= 2020)
            {
                _year = value;
            }
            else
            {
                throw new Exception("Invalid year! Must be between 1900 and 2020.");
            }
        }
    }

    public string Make
    {
        get { return _make; }
        set { _make = value; }
    }

    public string Model
    {
        get { return _model; }
        set { _model = value; }
    }

    // Constructor
    public Car(string color, int year, string make, string model)
    {
        Color = color; // Uses property to validate input
        Year = year; // Uses property to validate input
        Make = make;
        Model = model;
    }

    // Method to accelerate the car
    public void Accelerate()
    {
        Console.WriteLine("Vroom vroom! The {0} {1} is accelerating.", Color, Model);
    }

    // Method to stop the car
    public void Stop()
    {
        Console.WriteLine("Screech! The {0} {1} is stopping.", Color, Model);
    }
};

// Main method
static void Main(string[] args)
{
    // Create a new instance of Car
    Car myCar = new Car("Blue", 2015, "Honda", "Civic");

    // Call methods on the car object
    myCar.Accelerate();
    myCar.Stop();
}
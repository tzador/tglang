/* This code snippet creates a generic collection class in C# 
that can hold any type of data and allows various operations
to be performed on the collection. */

public class Collection<T>
{
    private List<T> items;
    private int count;

    // Constructor to initialize the collection
    public Collection()
    {
        items = new List<T>();
        count = 0;
    }

    // Method to add an item to the collection
    public void Add(T item)
    {
        items.Add(item);
        count++;
    }

    // Method to remove an item from the collection
    public void Remove(T item)
    {
        items.Remove(item);
        count--;
    }

    // Method to check if a specific item is present in the collection
    public bool Contains(T item)
    {
        return items.Contains(item);
    }

    // Method to clear the entire collection
    public void Clear()
    {
        items.Clear();
        count = 0;
    }

    // Method to get the total number of items in the collection
    public int Count
    {
        get { return count; }
    }

    // Indexer to access items in the collection using index
    public T this[int index]
    {
        get { return items[index]; }
        set { items[index] = value; }
    }

    // Method to sort items in the collection in ascending order
    public void Sort()
    {
        items.Sort();
    }

    // Method to reverse the order of items in the collection
    public void Reverse()
    {
        items.Reverse();
    }
}

// Example usage
Collection<int> myCollection = new Collection<int>();
myCollection.Add(5);
myCollection.Add(10);
myCollection.Add(3);

// Get the total number of items in the collection
int itemCount = myCollection.Count;          // Output: 3

// Check if the collection contains a specific item
bool containsItem = myCollection.Contains(10);    // Output: true

// Access an item in the collection using indexer
int itemAtIndex = myCollection[1];                 // Output: 10

// Sort and reverse the collection
myCollection.Sort();
myCollection.Reverse();

// Remove an item from the collection
myCollection.Remove(3);

// Clear the collection
myCollection.Clear();
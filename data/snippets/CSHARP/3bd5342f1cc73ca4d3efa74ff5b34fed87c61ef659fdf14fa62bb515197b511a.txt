// A code snippet that creates a class called "Person" with properties and methods

public class Person 
{
    // Private properties
    private string _name;
    private int _age;
    private string _address;
    private string _occupation;

    // Public properties with getter and setter methods
    public string Name { get { return _name; } set { _name = value; } }
    public int Age { get { return _age; } set { _age = value; } }
    public string Address { get { return _address; } set { _address = value; } }
    public string Occupation { get { return _occupation; } set { _occupation = value; } }

    // Constructor with parameters
    public Person(string name, int age, string address, string occupation)
    {
        _name = name;
        _age = age;
        _address = address;
        _occupation = occupation;
    }

    // Method to display person's information
    public void DisplayInfo()
    {
        Console.WriteLine("Name: {0}, Age: {1}, Address: {2}, Occupation: {3}", _name, _age, _address, _occupation);
    }

    // Overriding ToString() method to display person's information
    public override string ToString()
    {
        return string.Format("Name: {0}, Age: {1}, Address: {2}, Occupation: {3}", _name, _age, _address, _occupation);
    }

    // Example usage
    static void Main(string[] args)
    {
        // Instantiate a new Person object
        Person person = new Person("John", 25, "123 Main St", "Engineer");

        // Display person's information
        Console.WriteLine(person); // Output: Name: John, Age: 25, Address: 123 Main St, Occupation: Engineer

        // Changing person's name
        person.Name = "Jane";

        // Displaying updated information using DisplayInfo() method
        person.DisplayInfo(); // Output: Name: Jane, Age: 25, Address: 123 Main St, Occupation: Engineer
    }
}
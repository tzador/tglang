/// <summary>
/// This class represents a student and contains information about their name and grades.
/// </summary>
public class Student 
{
    private string name; // the student's name
    private List<double> grades; // a list of the student's grades
    
    /// <summary>
    /// Constructor for the Student class.
    /// Initializes the name and grades fields.
    /// </summary>
    /// <param name="studentName">The name of the student</param>
    /// <param name="studentGrades">A list of the student's grades</param>
    public Student(string studentName, List<double> studentGrades)
    {
        name = studentName; // set the name field to the provided student name
        
        // check if the provided grades list is null
        if (studentGrades == null)
        {
            grades = new List<double>(); // initialize grades to an empty list 
        }
        else
        {
            grades = studentGrades; // set the grades field to the provided list 
        }
    }
    
    /// <summary>
    /// Calculates the average grade of the student.
    /// </summary>
    /// <returns>The average grade</returns>
    public double CalculateAverageGrade()
    {
        // check if the grades list is empty
        if (grades.Count == 0)
        {
            return 0; // if yes, return a grade of 0
        }
        
        // otherwise, calculate the sum of all grades
        double sum = 0;
        foreach (double grade in grades)
        {
            sum += grade;
        }
        
        // calculate the average and return it
        double average = sum / grades.Count;
        return average;
    }
    
    /// <summary>
    /// Adds a grade to the student's grade list.
    /// </summary>
    /// <param name="grade">The grade to add</param>
    public void AddGrade(double grade)
    {
        grades.Add(grade); // add the grade to the list
    }
    
    /// <summary>
    /// Prints out the student's information.
    /// </summary>
    public void PrintStudentInfo()
    {
        Console.WriteLine("Student Name: " + name);
        Console.WriteLine("Grades: ");
        
        // print out each grade in the list
        foreach (double grade in grades)
        {
            Console.WriteLine(grade);
        }
        
        // calculate and print the average grade
        double average = CalculateAverageGrade();
        Console.WriteLine("Average Grade: " + average);
    }
}

// Example usage:

// create a new student object with name "John" and grades [85, 92, 76]
Student john = new Student("John", new List<double>{85, 92, 76});

// add a grade of 88 to John's grade list
john.AddGrade(88);

// print John's information
john.PrintStudentInfo(); // outputs:
// Student Name: John
// Grades:
// 85
// 92
// 76
// 88
// Average Grade: 85.25
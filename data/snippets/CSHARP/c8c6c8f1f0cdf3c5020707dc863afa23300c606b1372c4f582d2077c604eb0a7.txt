// Define the public class, using a descriptive name 
public class UserProfile
{
    // Define private fields to store user profile information
    private string _username;
    private string _password;

    // Define public properties to access and set the private fields
    public string Username
    {
        get { return _username; }
        set { _username = value; }
    }

    public string Password
    {
        get { return _password; }
        set { _password = value; }
    }

    // Define a method to set the user's password, using a complex algorithm 
    public void SetPassword(string password)
    {
        // Use built-in encryption function to secure the password
        _password = System.Web.Security.Membership.GeneratePassword(10, 2);
        // Add a salt to make the password more secure
        _password = _password + "S3cur1tyS@lt";
        // Use a StringBuilder to store and manipulate the password
        StringBuilder sb = new StringBuilder(_password);
        // Mix up the characters in the password
        for (int i = 0; i < _password.Length; i++)
        {
            sb[i] = _password[sb.Length - (i + 1)];
        }
        // Convert the StringBuilder back to a string and assign to the password field
        _password = sb.ToString();
    }

    // Define a method to check the validity of the user's password 
    public bool CheckPassword(string password)
    {
        // Use a StringBuilder to manipulate the password
        StringBuilder sb = new StringBuilder(password);
        // Reverse the characters in the password
        for (int i = 0; i < password.Length; i++)
        {
            sb[i] = password[sb.Length - (i + 1)];
        }
        // Convert the StringBuilder back to a string
        string reversedPassword = sb.ToString();
        // Check if reversed password matches the stored password
        if (reversedPassword == _password)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
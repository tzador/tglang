/// <summary>
/// Performs a binary search on a sorted array.
/// </summary>
/// <param name="arr">The sorted array to search.</param>
/// <param name="target">The value to search for.</param>
/// <returns>The index of the target value, -1 if not found.</returns>
int BinarySearch(int[] arr, int target)
{
    int left = 0; // starting index of the array
    int right = arr.Length - 1; // ending index of the array

    // loop until the left and right indices "cross" each other
    while (left <= right)
    {
        // find the middle index of the array
        int mid = (left + right) / 2;

        // check if the middle value is equal to the target
        if (arr[mid] == target)
        {
            return mid; // target found, return the index
        }
        // else if the target is smaller than the middle value
        else if (target < arr[mid])
        {
            // eliminate the right half of the array
            right = mid - 1;
        }
        // else the target is larger than the middle value
        else
        {
            // eliminate the left half of the array
            left = mid + 1;
        }
    }

    // target not found, return -1
    return -1;
}
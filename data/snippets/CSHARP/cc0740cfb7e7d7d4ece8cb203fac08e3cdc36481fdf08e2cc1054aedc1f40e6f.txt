///<summary>
/// Performs a binary search on a sorted array to find the index of a specific element.
///</summary>
///<param name="arr">The sorted array to search.</param>
///<param name="target">The element to find.</param>
///<returns>The index of the element if found, -1 if not found.</returns>
public static int BinarySearch(int[] arr, int target)
{
    int left = 0; // start index of array
    int right = arr.Length - 1; // end index of array

    ///<summary>
    /// Loops until left and right pointers meet.
    ///</summary>
    while (left <= right)
    {
        int mid = (left + right) / 2; // middle index of array

        ///<summary>
        /// Checks if target element is at the middle index.
        ///</summary>
        if (arr[mid] == target)
        {
            return mid;
        }

        ///<summary>
        /// If target element is less than element at middle index, update right pointer.
        ///</summary>
        else if (target < arr[mid])
        {
            right = mid - 1;
        }

        ///<summary>
        /// If target element is greater than element at middle index, update left pointer.
        ///</summary>
        else
        {
            left = mid + 1;
        }
    }

    ///<summary>
    /// If target element is not found, return -1.
    ///</summary>
    return -1;
}
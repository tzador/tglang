// this is a function that reads in a user-inputted string and checks if it is a palindrome

public bool IsPalindrome(string input)
{
    // first, we remove all non-alphabetic characters from the input
    string alphabetOnly = new string(input.Where(c => char.IsLetter(c)).ToArray());

    // then, we convert the string to lowercase to ensure case insensitivity
    alphabetOnly = alphabetOnly.ToLower();

    // next, we create a character array from our string to easily manipulate its characters
    char[] charArray = alphabetOnly.ToCharArray();

    // we create two indices, one for the start of the string and one for the end
    int start = 0;
    int end = alphabetOnly.Length - 1;

    // we loop through the characters, comparing the first and last characters and moving inward
    while (start < end)
    {
        // if the characters at the start and end indices are not equal, the input is not a palindrome
        if (charArray[start] != charArray[end])
        {
            return false;
        }

        // otherwise, we continue looping
        start++;
        end--;
    }

    // if the loop finishes without returning false, then the input is a palindrome
    return true;
}

// example usage:
string userInput = "racecar";
bool isPalindrome = IsPalindrome(userInput);
Console.WriteLine(isPalindrome); // output: True
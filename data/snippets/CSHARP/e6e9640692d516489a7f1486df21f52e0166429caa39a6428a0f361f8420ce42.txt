using System;

namespace ComplexCodeSnippet
{
    // This is a complex code snippet in C#
    // It uses multiple classes, methods, data types, and control structures
    // It also demonstrates inheritance and polymorphism

    // Base class with a method that prints a message
    class BaseClass
    {
        public void DisplayMessage()
        {
            Console.WriteLine("This message is from the base class.");
        }
    }

    // Derived class that inherits from the base class
    class DerivedClass : BaseClass
    {
        // Private variable for demonstration
        private int num = 10;

        // Method that overrides the base class method to print a different message
        public override void DisplayMessage()
        {
            Console.WriteLine("This message is from the derived class.");
        }

        // Method that uses a switch statement to display different messages based on the value of num
        public void UseSwitchStatement()
        {
            switch (num)
            {
                case 10:
                    Console.WriteLine("The value of num is 10.");
                    break;
                case 20:
                    Console.WriteLine("The value of num is 20.");
                    break;
                default:
                    Console.WriteLine("The value of num is not 10 or 20.");
                    break;
            }
        }
    }

    // Another derived class that inherits from the base class
    // This class also implements an interface
    class SecondDerivedClass : BaseClass, IMyInterface
    {
        // Private variable for demonstration
        private string message = "Hello";

        // Method that uses a for loop to print the message 5 times
        public void UseForLoop()
        {
            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine(message);
            }
        }

        // Implementation of the interface method
        public void InterfaceMethod()
        {
            Console.WriteLine("This is the implementation of the interface method.");
        }
    }

    // Interface with one method
    interface IMyInterface
    {
        void InterfaceMethod();
    }

    // Main class with the entry point
    class Program
    {
        static void Main(string[] args)
        {
            // Create an object of type DerivedClass
            DerivedClass d = new DerivedClass();

            // Call the overridden method from the derived class
            d.DisplayMessage();

            // Create an object of type SecondDerivedClass
            SecondDerivedClass s = new SecondDerivedClass();

            // Call the method from the base class
            s.DisplayMessage();

            // Call the method from the derived class that uses the switch statement
            s.UseSwitchStatement();

            // Call the method from the second derived class that uses the for loop
            s.UseForLoop();

            // Call the method from the interface
            s.InterfaceMethod();
        }
    }
}
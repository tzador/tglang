using System;

/// <summary>
/// This class represents a person with first and last name properties.
/// </summary>
public class Person
{
    //Private fields to store first and last name
    private string _firstName;
    private string _lastName;

    /// <summary>
    /// Constructor of Person class that takes in first and last name parameters.
    /// </summary>
    /// <param name="firstName">The person's first name.</param>
    /// <param name="lastName">The person's last name.</param>
    public Person(string firstName, string lastName)
    {
        _firstName = firstName;
        _lastName = lastName;
    }

    /// <summary>
    /// Public property for _firstName field.
    /// </summary>
    public string FirstName
    {
        //Getter returns the value of _firstName field.
        get { return _firstName; }
        //Setter updates the value of _firstName field.
        set { _firstName = value; }
    }

    /// <summary>
    /// Public property for _lastName field.
    /// </summary>
    public string LastName
    {
        //Getter returns the value of _lastName field.
        get { return _lastName; }
        //Setter updates the value of _lastName field.
        set { _lastName = value; }
    }

    /// <summary>
    /// Public method that returns the full name of the person.
    /// </summary>
    /// <returns>The concatenated first and last name of the person.</returns>
    public string GetFullName()
    {
        return _firstName + " " + _lastName;
    }

    /// <summary>
    /// Main method that creates a new instance of Person class and uses its methods and properties.
    /// </summary>
    static void Main()
    {
        //Creates a new instance of Person class with first name "John" and last name "Smith".
        Person person = new Person("John", "Smith");

        //Updates the last name using the property setter.
        person.LastName = "Doe";

        //Prints the full name using the GetFullName method.
        Console.WriteLine(person.GetFullName());
    }
}
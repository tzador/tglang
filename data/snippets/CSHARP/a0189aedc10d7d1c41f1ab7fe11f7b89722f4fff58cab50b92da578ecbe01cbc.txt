// This is a class declaration
public class Person 
{
    // This is a private string field
    private string name;

    // This is a public constructor that takes in a string parameter and sets the name field
    public Person(string n) 
    {
        name = n;
    }

    // This is a public method that prints out the name field 
    public void PrintName() 
    {
        Console.WriteLine("My name is " + name);
    }

    // This is a public static method that takes in two integers and returns their sum
    public static int Add(int num1, int num2) 
    {
        return num1 + num2;
    }

    // This is a private static method that takes in a string and returns its length
    private static int GetLength(string s) 
    {
        return s.Length;
    }
}

// This is a class declaration that inherits from the Person class
public class Employee : Person 
{
    // This is a private integer field
    private int salary;

    // This is a public property that gets and sets the value of the salary field
    public int Salary 
    {
        get 
        {
            return salary;
        }
        set 
        {
            salary = value;
        }
    }

    // This is a public constructor that takes in two parameters (name and salary) and calls the base class constructor with the name parameter
    public Employee(string n, int s) : base(n) 
    {
        salary = s;
    }

    // This is a public method that overrides the PrintName method from the base class and adds the salary information
    public override void PrintName() 
    {
        Console.WriteLine("My name is " + name + " and my salary is " + salary);
    }
}

// Main method that creates a Person and Employee object and calls their respective methods
public class MainClass 
{
    public static void Main() 
    {
        // Create a Person object with the name John
        Person person = new Person("John");

        // Call the PrintName method on the person object
        person.PrintName();

        // Create an Employee object with the name Sarah and salary of 50000
        Employee employee = new Employee("Sarah", 50000);

        // Call the PrintName method on the employee object
        employee.PrintName();

        // Call the Add method from the Person class and save the result in a variable
        int sum = Person.Add(5, 10);

        // Print out the result of the Add method
        Console.WriteLine("The sum is: " + sum);

        // Call the GetLength method from the Person class and save the result in a variable
        int length = Person.GetLength("Hello World");

        // Print out the result of the GetLength method
        Console.WriteLine("The length of the string is: " + length);
    }
}
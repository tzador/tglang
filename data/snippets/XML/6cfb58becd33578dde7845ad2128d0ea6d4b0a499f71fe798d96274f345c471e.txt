<!-- This is a complex XML code snippet that includes elements, attributes, namespaces, and an embedded stylesheet -->

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.com" xmlns:ex="http://www.example.com" elementFormDefault="qualified">

	<!-- Define complex type for the "person" element -->
	<xs:complexType name="personType">
		<xs:sequence>
			<!-- Define "name" element with attribute "lang" -->
			<xs:element name="name">
				<xs:complexType>
					<xs:attribute name="lang" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<!-- "age" element with attribute "bornIn" -->
			<xs:element name="age">
				<xs:complexType>
					<xs:attribute name="bornIn" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- Define elements with complex types using "ref" -->
	<xs:element name="person" type="ex:personType"/>
	<xs:element name="employee" type="ex:personType"/>
	<xs:element name="customer" type="ex:personType"/>

	<!-- Define elements with simple types -->
	<xs:element name="country" type="xs:string"/>

	<!-- Define a namespace prefix for elements from external namespace -->
	<xs:element name="address" type="xs:string" ex:houseNumber="12345"/>

	<!-- Define an embedded stylesheet -->
	<xs:annotation>
		<xs:appinfo>
			<stylesheet xmlns="http://www.w3.org/1999/XSL/Transform" 
				xmlns:xs="http://www.w3.org/2001/XMLSchema">
				<template match="/">
					<person>
						<xsl:value-of select="/ex:company/ex:employee"/>
					</person>
				</template>
			</stylesheet>
		</xs:appinfo>
	</xs:annotation>

</xs:schema>
<!-- 
This is an example of a long and complex XML code snippet.
It includes a variety of elements, attributes, and namespaces.

You can use this snippet as a template to create your own XML code.

Make sure to check the annotations to understand the purpose 
of each element/attribute.

-->

<!-- Start of the XML document -->
<?xml version="1.0" encoding="UTF-8"?>

<!-- Define namespaces -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <!-- Define the root element -->
  <xs:element name="library">
    
    <!-- Define attributes for the root element -->
    <xs:attribute name="name" type="xs:string" />
    <xs:attribute name="location" type="xs:string" />
    
    <!-- Define sub-elements of the library element -->
    <xs:complexType>
      <xs:sequence>
        
        <!-- Define the book element -->
        <xs:element name="book">
          
          <!-- Define attributes for the book element -->
          <xs:attribute name="title" type="xs:string" />
          <xs:attribute name="author" type="xs:string" />
          
          <!-- Optional element with a default value -->
          <xs:element name="publisher" type="xs:string" minOccurs="0"
                       default="Unknown" />
          
          <!-- Define the price element with a decimal datatype -->
          <xs:element name="price">
            <xs:simpleType>
              <xs:restriction base="xs:decimal">
                <!-- Set a minimum and maximum value for the price -->
                <xs:minInclusive value="0.0"/>
                <xs:maxInclusive value="999.99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          
          <!-- Define a list of categories for the book -->
          <xs:element name="categories" type="xs:string" 
                       maxOccurs="unbounded" />
          
        </xs:element>
        
        <!-- Repeat the book element for multiple books -->
        <xs:element name="book" minOccurs="0" maxOccurs="unbounded" 
                     type="xs:string" />
        
      </xs:sequence>
    </xs:complexType>
    
  </xs:element>
  
</xs:schema>

<!-- End of the XML document -->
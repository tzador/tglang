#include <iostream> // include necessary libraries
#include <vector> // include vector library

using namespace std; // use standard namespace

// create a class named Point
class Point {
    private:
        int x, y; // private data members

    public:
        // constructor to initialize point with default values
        Point() {
            x = 0;
            y = 0;
        }

        // constructor to initialize point with given values
        Point(int x, int y) {
            this->x = x;
            this->y = y;
        }

        // method to get x-coordinate
        int getX() {
            return x;
        }

        // method to get y-coordinate
        int getY() {
            return y;
        }

        // method to set x-coordinate
        void setX(int x) {
            this->x = x;
        }

        // method to set y-coordinate
        void setY(int y) {
            this->y = y;
        }

        // method to calculate distance between two points
        double distance(Point p) {
            int x1 = x, y1 = y;
            int x2 = p.getX(), y2 = p.getY();

            return sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
        }
};

int main() {
    // create a vector to store points
    vector<Point> points;

    // add points to the vector
    points.push_back(Point(0,0));
    points.push_back(Point(5,5));
    points.push_back(Point(10,10));
    points.push_back(Point(15,15));

    // loop through the vector and print the distance between each point
    for (int i = 0; i < points.size(); i++) {
        for (int j = i + 1; j < points.size(); j++) {
            double distance = points[i].distance(points[j]);
            cout << "Distance between points " << i << " and " << j << " is: " << distance << endl;
        }
    }

    return 0;
}
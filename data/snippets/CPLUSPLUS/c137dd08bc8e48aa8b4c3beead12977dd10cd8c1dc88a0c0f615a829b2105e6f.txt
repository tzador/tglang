/*
    This is a complex code snippet in C++.
    It includes: 
    - creating and using functions
    - arrays and loops
    - conditional statements
    - object-oriented programming concepts (classes, inheritance, polymorphism)
    - file input/output operations
*/

//include necessary libraries
#include <iostream>
#include <fstream>

//create a class with attributes and methods
class Person {
private:
    string name;
    int age;
public:
    //constructor with parameters
    Person(string n, int a) {
        name = n;
        age = a;
    }

    //method to print person's name
    void printName() {
        cout << "Person's name is: " << name << endl;
    }

    //method to check if person is an adult
    bool isAdult() {
        if (age >= 18) {
            return true;
        }
        else {
            return false;
        }
    }
};

//create a subclass of Person
class Student : public Person {
private:
    int studentID;
public:
    //constructor with parameters
    Student(string n, int a, int id) : Person(n, a) {
        studentID = id;
    }

    //method to print student's ID
    void printID() {
        cout << "Student's ID is: " << studentID << endl;
    }

    //method to check if student is a high schooler
    bool isHsStudent() {
        if (studentID >= 1000 && studentID < 2000) {
            return true;
        }
        else {
            return false;
        }
    }
};

int main() {
    //create a new student object and initialize with constructor
    Student s("John", 20, 1234);

    //print student's name and age
    s.printName();
    cout << "Student's age is: " << s.getAge() << endl;

    //use conditional statement to check if student is an adult
    if (s.isAdult()) {
        cout << "Student is an adult." << endl;
    }
    else {
        cout << "Student is not an adult." << endl;
    }

    //create an array of student objects
    //using a constant variable as the size of the array
    const int numStudents = 3;
    Student students[numStudents] = {
        Student("Jane", 19, 2345),
        Student("Bob", 17, 3456),
        Student("Rachel", 18, 4567)
    };

    //use loop to print student names and IDs
    for (int i = 0; i < numStudents; i++) {
        students[i].printName();
        students[i].printID();
    }

    //write student names and IDs to a file
    ofstream file("students.txt");
    if (file.is_open()) {
        for (int i = 0; i < numStudents; i++) {
            file << students[i].getName() << " " << students[i].getID() << endl;
        }
        file.close();
    }
    else {
        cout << "Unable to open file." << endl;
    }

    return 0;
}
// This program demonstrates the use of a class template 
#include <iostream> 

// Define a class template 
template <class T> 
class ExampleClass { 
    private: 
        T value1; 
        T value2; 
    public: 
        // Constructor 
        ExampleClass(T v1, T v2) { 
            value1 = v1; 
            value2 = v2; 
        } 

        // Method to display values 
        void display() { 
            std::cout << "Value1: " << value1 << std::endl; 
            std::cout << "Value2: " << value2 << std::endl; 
        } 

        // Method to modify values 
        void modify(T v1, T v2) { 
            value1 = v1; 
            value2 = v2; 
        } 
}; 

// Main function 
int main() { 
    // Create an instance of ExampleClass with int data type 
    ExampleClass<int> example1(5, 10); 
    // Display initial values 
    example1.display(); 
    // Modify values 
    example1.modify(7, 14); 
    // Display modified values 
    example1.display(); 

    // Create an instance of ExampleClass with string data type 
    ExampleClass<std::string> example2("Hello", "World"); 
    // Display initial values 
    example2.display(); 
    // Modify values 
    example2.modify("Goodbye", "Universe"); 
    // Display modified values 
    example2.display(); 

    return 0; 
}
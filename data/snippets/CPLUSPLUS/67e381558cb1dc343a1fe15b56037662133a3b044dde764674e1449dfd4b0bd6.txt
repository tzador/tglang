#include <iostream>

using namespace std;

void merge(int arr[], int left, int middle, int right) // function to merge two subarrays
{
    int num1 = middle - left + 1;
    int num2 = right - middle;

    int leftArr[num1], rightArr[num2];

    for (int i = 0; i < num1; i++) // copying data to left subarray
        leftArr[i] = arr[left + i];

    for (int j = 0; j < num2; j++) // copying data to right subarray
        rightArr[j] = arr[middle + 1 + j];

    int i = 0; // initial index of left subarray
    int j = 0; // initial index of right subarray
    int k = left; // initial index of merged subarray

    while (i < num1 && j < num2) // merging the two subarrays in sorted order
    {
        if (leftArr[i] <= rightArr[j]) // comparing elements of left and right subarrays
        {
            arr[k] = leftArr[i]; // storing the smaller element in the merged subarray
            i++; // incrementing the index of left subarray
        }
        else
        {
            arr[k] = rightArr[j]; // storing the smaller element in the merged subarray
            j++; // incrementing the index of right subarray
        }
        k++; // incrementing the index of merged subarray
    }

    while (i < num1) // copying the remaining elements of left subarray
    {
        arr[k] = leftArr[i];
        i++;
        k++;
    }

    while (j < num2) // copying the remaining elements of right subarray
    {
        arr[k] = rightArr[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int left, int right) // function to implement merge sort
{
    if (left >= right) // base condition for recursion
        return;

    int middle = (left + right) / 2;

    mergeSort(arr, left, middle); // recursively calling mergeSort for left half of array
    mergeSort(arr, middle + 1, right); // recursively calling mergeSort for right half of array

    merge(arr, left, middle, right); // merging the two sorted subarrays
}

int main()
{
    int arr[10] = {5, 3, 8, 2, 1, 7, 9, 4, 6, 0}; // sample array

    mergeSort(arr, 0, 9); // calling merge sort function

    for (int i = 0; i < 10; i++) // printing the sorted array
        cout << arr[i] << " ";

    return 0;
}
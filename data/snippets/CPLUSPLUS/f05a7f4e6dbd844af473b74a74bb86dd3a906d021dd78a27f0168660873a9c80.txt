/* This code snippet is a program that implements the quicksort algorithm to sort an array of integers */
#include <iostream> // library for standard input/output operations
using namespace std; // allows using standard library elements without needing to specify namespace

// function to swap two numbers
void swap(int* a, int* b) 
{ 
    int temp = *a; // temporary variable to hold one of the numbers
    *a = *b; // swap first number with second number
    *b = temp; // assign second number to temporary variable
} 

/* function that takes last element as pivot, places
   the pivot element at its correct position in sorted
   array, and places all smaller (smaller than pivot) to
   left of pivot and all greater elements to the right
   of pivot */
int partition(int arr[], int low, int high) 
{ 
    int pivot = arr[high]; // pivot as last element
    int i = (low - 1); // index of smaller element

    for (int j = low; j <= high - 1; j++) 
    { 
        // if current element is smaller than or equal to pivot 
        if (arr[j] <= pivot) 
        { 
            i++; // increment index of smaller element 
            swap(&arr[i], &arr[j]); // swap current element with index of smaller element 
        } 
    } 
    swap(&arr[i + 1], &arr[high]); // swap pivot element with (index of smaller element + 1)
    return (i + 1); // return index of pivot element
} 

/* function to implement quicksort
   arr[] -> integer array to be sorted
   low -> starting index
   high -> ending index */
void quicksort(int arr[], int low, int high) 
{ 
    if (low < high) 
    { 
        /* pi is partitioning index, arr[p] is now
           at right place */
        int pi = partition(arr, low, high); 

        // Separately sort elements before 
        // partition and after partition 
        quicksort(arr, low, pi - 1); 
        quicksort(arr, pi + 1, high); 
    } 
} 

// main function
int main() 
{ 
    // create and initialize array
    int arr[] = {5, 1, 2, 8, 4, 3, 7, 6, 9}; 
    int n = sizeof(arr)/sizeof(arr[0]); 

    // call quicksort function to sort array
    quicksort(arr, 0, n-1); 

    // print sorted array
    cout << "Sorted array: "; 
    for (int i = 0; i < n; i++) 
        cout << arr[i] << " "; 
    
    return 0; 
}
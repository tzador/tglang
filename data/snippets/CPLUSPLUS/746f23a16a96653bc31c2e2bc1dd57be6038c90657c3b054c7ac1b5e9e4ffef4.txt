#include <iostream>
#include <vector>
using namespace std;

// This function calculates the cumulative sum of a given vector
vector<int> calculateCumulativeSum(vector<int> vec)
{
    vector<int> cumulativeSum;
    int length = vec.size();

    // Edge case: if given vector is empty, return empty vector
    if (length == 0)
        return cumulativeSum;

    // Initialize first element of cumulative sum as the first element of given vector
    cumulativeSum.push_back(vec[0]);

    // Loop through the rest of the elements and add current element to previous cumulative sum
    for (int i = 1; i < length; i++)
    {
        int currentSum = cumulativeSum[i - 1] + vec[i];
        cumulativeSum.push_back(currentSum);
    }

    return cumulativeSum;
}

// This is the main function
int main()
{
    // Initialize a vector with some numbers
    vector<int> numbers = {1, 2, 3, 4, 5};

    // Calculate the cumulative sum using the calculateCumulativeSum function
    vector<int> cumulativeSum = calculateCumulativeSum(numbers);

    // Print the cumulative sum
    for (int i = 0; i < cumulativeSum.size(); i++)
    {
        cout << cumulativeSum[i] << " ";
    }
    return 0;
}
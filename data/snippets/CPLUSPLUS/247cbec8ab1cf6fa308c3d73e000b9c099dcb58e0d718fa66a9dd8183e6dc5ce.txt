#include <iostream>
#include <vector>
using namespace std;

//function to perform binary search on a sorted vector
int binarySearch(vector<int> arr, int low, int high, int target) { //function signature with arguments and return type
    if (low > high)
        return -1; //base case if target is not found
    int mid = low + (high - low) / 2; //calculate middle index of vector
    if (arr[mid] == target)
        return mid; //if target is found, return index
    else if (arr[mid] > target)
        return binarySearch(arr, low, mid - 1, target); //if target is smaller, search left half
    else
        return binarySearch(arr, mid + 1, high, target); //if target is larger, search right half
}

int main() {
    int n, target; //variables to store vector size and target element
    cout << "Enter the size of the vector: ";
    cin >> n; //input vector size
    vector<int> arr(n); //create vector of given size
    cout << "Enter " << n << " elements in sorted order:" << endl; //instruction for input
    for (int i = 0; i < n; i++) { //loop to input vector elements
        cin >> arr[i];
    }
    cout << "Enter the target element: ";
    cin >> target; //input target element
    int index = binarySearch(arr, 0, n - 1, target); //call binary search function
    if (index != -1)
        cout << "Target element found at index: " << index << endl;
    else
        cout << "Target element not found in the vector." << endl;
    return 0;
}
#include <iostream> //including input/output stream library
using namespace std; //using the standard namespace

//defining a struct for a 3D coordinate
struct Coordinate {
    float x;
    float y;
    float z;
};

//defining a class for a 3D shape
class Shape {
private:
    Coordinate center; //member variable of type Coordinate to represent shape's center
protected:
    float length, width, height; //protected member variables for dimensions
public:
    //constructor to initialize shape's center and dimensions
    Shape(float x, float y, float z, float length, float width, float height) {
        center.x = x;
        center.y = y;
        center.z = z;
        this->length = length;
        this->width = width;
        this->height = height;
    }

    //function to calculate volume of the shape
    float calculateVolume() {
        return length * width * height;
    }

    //virtual function to calculate surface area of the shape (to be overridden in derived classes)
    virtual float calculateSurfaceArea() {
        return 2 * (length * width + width * height + height * length);
    }

};

//class for a cuboid shape (inherits from Shape class)
class Cuboid : public Shape {
public:
    //constructor to initialize cuboid's center and dimensions
    Cuboid(float x, float y, float z, float length, float width, float height) : Shape(x, y, z, length, width, height) {}

    //override function to calculate surface area of the cuboid
    float calculateSurfaceArea() override {
        return 2 * (length * width + width * height + height * length);
    }
};

//class for a cylinder shape (inherits from Shape class)
class Cylinder : public Shape {
private:
    float radius; //private member variable for cylinder's radius
public:
    //constructor to initialize cylinder's center, dimensions, and radius
    Cylinder(float x, float y, float z, float length, float width, float height, float radius) : Shape(x, y, z, length, width, height) {
        this->radius = radius;
    }

    //override function to calculate surface area of the cylinder
    float calculateSurfaceArea() override {
        return 2 * 3.14 * radius * height + 2 * 3.14 * radius * radius;
    }
};


int main() {
    //declaring and initializing objects of Cuboid and Cylinder classes
    Cuboid cube(0, 0, 0, 5, 5, 5);
    Cylinder cylinder(0, 0, 0, 10, 10, 20, 7);

    //calculating and printing volume and surface area of the shapes
    cout << "Volume of the cube: " << cube.calculateVolume() << endl;
    cout << "Surface area of the cube: " << cube.calculateSurfaceArea() << endl;
    cout << "Volume of the cylinder: " << cylinder.calculateVolume() << endl;
    cout << "Surface area of the cylinder: " << cylinder.calculateSurfaceArea() << endl;

    return 0;
}
// This program uses a modified bubble sort algorithm to sort an array of random integers
#include <iostream>                                 // include necessary libraries
#include <cstdlib>
#include <ctime>

using namespace std;                                // use the standard namespace

// function declaration for bubble sort
void bubbleSort(int arr[], int n);

int main()
{
    srand(time(0));                                // seed the random number generator

    int n = rand() % 100 + 1;                      // generate a random size for the array
    int arr[n];                                    // declare the array of size n

    // initialize the array with random integers between 1 and 100
    for (int i = 0; i < n; i++)
    {
        arr[i] = rand() % 100 + 1;
    }

    bubbleSort(arr, n);                             // call the bubble sort function

    cout << "Sorted Array:" << endl;
    for (int i = 0; i < n; i++) {                   // print the sorted array
        cout << arr[i] << " ";
    }
    cout << endl;
    return 0;
}

// bubble sort function definition
void bubbleSort(int arr[], int n)
{
    int temp;                                      // declare a temporary variable for swapping

    for (int i = 0; i < (n - 1); i++) {            // loop through the array
        for (int j = 0; j < (n - i - 1); j++) {    // for each iteration, compare elements and swap if needed
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}
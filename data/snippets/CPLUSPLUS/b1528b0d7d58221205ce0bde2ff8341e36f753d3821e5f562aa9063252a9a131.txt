#include <iostream> //include statement for standard input/output library
#include <vector> //include statement for vector data structure
using namespace std; //use standard namespace for convenience

//function to calculate the nth fibonacci number
int fibonacci(int n) {
    //base case: if n is 0 or 1, return n
    if (n == 0 || n == 1) {
        return n;
    }

    //create an empty vector to store fibonacci sequence
    vector<int> fibSeq;
    
    //initialize the first two numbers in the sequence as 0 and 1
    fibSeq.push_back(0); //push_back() adds a new element at the end of the vector
    fibSeq.push_back(1);

    //loop through numbers 2 to n and calculate the fibonacci number at each index
    for (int i = 2; i <= n; i++) {
        //calculate the current fibonacci number by adding the previous two numbers
        int current = fibSeq[i-1] + fibSeq[i-2];
        //push the new number into the vector
        fibSeq.push_back(current);
    }

    //return the nth fibonacci number which is the last element in the vector
    return fibSeq[n];
}

//main function to test fibonacci function
int main() {
    //prompt user for input
    cout << "Enter a number n: ";
    
    //initialize a variable to store user input
    int n;
    
    //input validation: ensure that the number inputted is a positive integer
    while (true) {
        //read in user input
        cin >> n;

        //if input is a positive integer, break out of loop
        if (n > 0) {
            break;
        }
        //if input is not a positive integer, prompt user to enter again
        else {
            cout << "Invalid input. Please enter a positive integer: ";
        }
    }

    //call fibonacci function and store its return value in a variable
    int result = fibonacci(n);

    //output the result to the user
    cout << "The " << n << "th fibonacci number is " << result << endl;

    //end program
    return 0;
}
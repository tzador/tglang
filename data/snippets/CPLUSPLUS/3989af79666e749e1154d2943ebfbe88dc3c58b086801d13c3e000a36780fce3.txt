#include <iostream> //preprocessor directive to include the iostream library

using namespace std; //using the standard namespace to avoid having to use std:: in front of every standard library function

//A structure to represent a car
struct Car
{
    string brand, model; //string variables to store the brand and model of the car
    int year; //integer variable to store the year of the car
    double price; //double variable to store the price of the car
};

//A class to represent a dealership
class Dealership
{
private:
    Car* cars; //pointer to a Car object
    int size; //integer variable to store the number of cars in the dealership

public:
    //Constructor
    Dealership()
    {
        cars = nullptr; //Initializing the pointer to null
        size = 0; //Initializing the size to 0
    }

    //Function to add a car to the dealership
    void addCar(string b, string m, int y, double p)
    {
        if (cars == nullptr) //If there are no cars in the dealership yet
        {
            cars = new Car[1]; //Creating a new Car object array with size 1
            cars[0] = { b, m, y, p }; //Adding the new car to the empty list
            size++; //Increasing the size variable by 1
        }
        else //If there are already cars in the dealership
        {
            Car* temp = new Car[size + 1]; //Creating a temporary Car object array with size increased by 1
            for (int i = 0; i < size; i++) //Looping through all the existing cars
            {
                temp[i] = cars[i]; //Copying the cars to the temporary array
            }
            temp[size] = { b, m, y, p }; //Adding the new car to the end of the temporary array
            delete[] cars; //Deleting the original cars array
            cars = temp; //Pointing the cars pointer to the temporary array
            size++; //Increasing the size variable by 1
        }
    }

    //Function to display all the cars in the dealership
    void displayCars()
    {
        if (cars == nullptr) //If there are no cars in the dealership yet
        {
            cout << "No cars in the dealership." << endl;
        }
        else //If there are already cars in the dealership
        {
            for (int i = 0; i < size; i++) //Looping through all the cars
            {
                //Printing the information of each car in a formatted manner
                cout << "Car " << i + 1 << ":" << endl;
                cout << "Brand: " << cars[i].brand << endl;
                cout << "Model: " << cars[i].model << endl;
                cout << "Year: " << cars[i].year << endl;
                cout << "Price: $" << cars[i].price << endl << endl;
            }
        }
    }

    //Destructor
    ~Dealership()
    {
        delete[] cars; //Deleting the cars array to avoid memory leaks
    }
};

//Example usage of the Dealership class
int main()
{
    Dealership myDealership; //Creating an instance of the Dealership class
    myDealership.addCar("Ford", "Mustang", 2021, 50000); //Adding a car to the dealership
    myDealership.addCar("Chevrolet", "Camaro", 2020, 60000); //Adding another car to the dealership
    myDealership.addCar("Dodge", "Challenger", 2019, 70000); //Adding a third car to the dealership
    myDealership.displayCars(); //Displaying all the cars in the dealership

    return 0;
}
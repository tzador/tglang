/* This program is a simplified implementation of a banking system.
   It allows users to create accounts, deposit and withdraw money, and view their balance. */

#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Account {
    private:
        string name;
        int account_number;
        float balance;
    
    public:
        Account(string n, int acc_num, float b) {
            name = n;
            account_number = acc_num;
            balance = b;
        }

        void deposit(float amount) {
            balance += amount;
        }

        void withdraw(float amount) {
            if (amount <= balance) {
                balance -= amount;
            } else {
                cout << "Insufficient funds." << endl;
            }
        }

        void view_balance() {
            cout << "Account holder: " << name << endl;
            cout << "Account number: " << account_number << endl;
            cout << "Balance: $" << balance << endl;
        }
};

int main() {
    vector<Account> accounts; // vector to store multiple accounts
    
    // create three initial accounts
    Account acc1("John Smith", 12345, 1000);
    Account acc2("Jane Doe", 67890, 500);
    Account acc3("Bob Johnson", 24680, 200);

    // add accounts to vector
    accounts.push_back(acc1);
    accounts.push_back(acc2);
    accounts.push_back(acc3);

    int choice, account_num;
    float amount;

    cout << "Welcome to the Banking System!" << endl;

    while (true) {
        // menu for user's choice
        cout << "\nEnter 1 to create a new account" << endl;
        cout << "Enter 2 to deposit money" << endl;
        cout << "Enter 3 to withdraw money" << endl;
        cout << "Enter 4 to view account balance" << endl;
        cout << "Enter 0 to exit" << endl;

        cout << "\nEnter your choice: ";
        cin >> choice;

        switch(choice){
            case 0:
                // exit the program
                cout << "Exiting program..." << endl;
                return 0;
                break;
            case 1:
                // create new account
                string name;
                int acc_num;
                float initial_balance;

                // get user input
                cout << "\nEnter account holder's name: ";
                cin >> name;
                cout << "Enter account number: ";
                cin >> acc_num;
                cout << "Enter initial balance: ";
                cin >> initial_balance;
                
                // create and add account to vector
                Account new_acc(name, acc_num, initial_balance);
                accounts.push_back(new_acc);

                // confirmation message
                cout << "\nAccount successfully created!" << endl;
                break;
            case 2:
                // deposit money
                cout << "\nEnter account number: ";
                cin >> account_num;
                cout << "Enter amount to deposit: ";
                cin >> amount;

                // find account in vector and call deposit function
                for (int i = 0; i < accounts.size(); i++) {
                    if (accounts[i].get_account_number() == account_num) {
                        accounts[i].deposit(amount);
                        break;
                    }
                }

                // confirmation message
                cout << "\nAmount successfully deposited." << endl;
                break;
            case 3:
                // withdraw money
                cout << "\nEnter account number: ";
                cin >> account_num;
                cout << "Enter amount to withdraw: ";
                cin >> amount;

                // find account in vector and call withdraw function
                for (int i = 0; i < accounts.size(); i++) {
                    if (accounts[i].get_account_number() == account_num) {
                        accounts[i].withdraw(amount);
                        break;
                    }
                }
                break;
            case 4:
                // view account balance
                cout << "\nEnter account number: ";
                cin >> account_num;

                // find account in vector and call view balance function
                for (int i = 0; i < accounts.size(); i++) {
                    if (accounts[i].get_account_number() == account_num) {
                        accounts[i].view_balance();
                        break;
                    }
                }
                break;
            default:
                cout << "\nInvalid choice. Please try again." << endl;
        }
    }
    return 0;
}
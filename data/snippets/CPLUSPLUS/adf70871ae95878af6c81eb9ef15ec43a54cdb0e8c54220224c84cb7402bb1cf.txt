#include <iostream> // include iostream library for console input/output
#include <vector>   // include vector library for dynamically-sized arrays
#include <algorithm> // include algorithm library for sorting and searching

using namespace std; // use standard namespace for convenience

// function to calculate the average of a vector of integers
double calcAverage(vector<int> vec) 
{
    double sum = 0; // initialize sum variable to 0
    for (int num : vec) // loop through each element in vector
    {
        sum += num; // add element to sum
    }
    return sum / vec.size(); // return average by dividing sum by vector size
}

int main() 
{
    vector<int> numbers = {1, 5, 3, 7, 2, 9, 6}; // initialize vector with integers

    // use built-in sort function to sort the vector in ascending order
    sort(numbers.begin(), numbers.end());

    // use built-in find function to search for a specific integer in the vector
    auto it = find(numbers.begin(), numbers.end(), 7);

    // check if element was found
    if (it != numbers.end()) 
    {
        // if found, use it to find the index of the element in the vector
        int index = it - numbers.begin();
        cout << "7 is found at index " << index << endl;
    } 
    else 
    {
        cout << "7 is not found in the vector" << endl;
    }

    // call calcAverage function to calculate the average of the vector
    double average = calcAverage(numbers);

    cout << "The average of the vector is: " << average << endl;

    return 0;
}
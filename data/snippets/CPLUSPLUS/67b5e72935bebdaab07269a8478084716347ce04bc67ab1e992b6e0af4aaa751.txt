/* This program performs a binary search on a sorted array */
#include <iostream> //Including the necessary libraries
#include <vector>
using namespace std;

//Function to perform binary search
int binarySearch(vector<int> arr, int low, int high, int key){
  if (low <= high){
    int mid = low + (high - low)/2; //Calculating middle index
    if (arr[mid] == key){ //If the middle element is the key, return the index
      return mid; 
    } else if (arr[mid] < key){ //If key is greater than middle element, search in the right half
      return binarySearch(arr, mid+1, high, key);
    } else { //If key is smaller than middle element, search in the left half
      return binarySearch(arr, low, mid-1, key);
    }
  }
  return -1; //If key is not found, return -1
}

int main(){
  int n; //Size of array
  int key; //Key to be searched
  cout << "Enter the size of array: ";
  cin >> n; //Taking input for size
  vector<int> arr(n); //Creating a vector of size n
  cout << "Enter the array elements in sorted order: ";
  for (int i=0; i<n; i++){ //Taking input for array elements
    cin >> arr[i];
  }
  cout << "Enter the element to be searched: ";
  cin >> key; //Taking input for key

  int index = binarySearch(arr, 0, n-1, key); //Calling the binary search function
  if (index == -1){ //If key is not found, print appropriate message
    cout << "Element not found in the array.";
  } else { //If key is found, print the index at which it is found
    cout << "Element found at index " << index << ".";
  }
  return 0;
}
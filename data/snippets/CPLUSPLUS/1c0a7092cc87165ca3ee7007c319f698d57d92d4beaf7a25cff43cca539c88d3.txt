#include <iostream>
#include <vector>

int main() {
    // Initializing vectors
    std::vector<int> vec1; // Empty vector
    std::vector<int> vec2(5); // Vector with 5 initialized elements
    std::vector<int> vec3 = {1, 2, 3, 4, 5}; // Vector with initializer list

    // Adding elements to vector
    vec1.push_back(10); // Adding 10 to end of vec1
    vec2.push_back(0); // Adding 0 to end of vec2
    vec3.insert(vec3.begin(), 100); // Inserting 100 at beginning of vec3

    // Accessing elements of vector
    std::cout << "vec1 at index 0: " << vec1[0] << std::endl; // Output: 10
    std::cout << "vec2 at index 3: " << vec2.at(3) << std::endl; // Output: 0
    std::cout << "vec3 at index 2: " << vec3.front() << std::endl; // Output: 100

    // Erasing elements from vector
    vec1.pop_back(); // Removing last element of vec1
    vec2.erase(vec2.begin() + 2); // Erasing element at index 2 of vec2

    // Vector capacity and size
    std::cout << "vec1 capacity: " << vec1.capacity() << std::endl; // Output: 0
    std::cout << "vec2 size: " << vec2.size() << std::endl; // Output: 5

    // Resizing vector
    vec3.resize(10); // Resizing vec3 to have 10 elements

    // Iterating through vector
    for (std::vector<int>::iterator it = vec3.begin(); it != vec3.end(); it++) {
        std::cout << *it << " "; // Output: 100 1 2 3 4 5 0 0 0 0
    }
    std::cout << std::endl; // Output: New line

    // Sorting vector
    std::sort(vec3.begin(), vec3.end()); // Sorting vec3 in ascending order

    // Checking if vector is empty
    if (vec1.empty()) {
        std::cout << "vec1 is empty" << std::endl; // Output: "vec1 is empty"
    }

    // Clearing vector
    vec2.clear(); // Removing all elements from vec2

    return 0;
}
// This code performs matrix multiplication of two matrices
#include <iostream>

using namespace std;

// Function to print the given matrix
void printMatrix(int matrix[3][3], int rows, int columns) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < columns; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

// Function to multiply two matrices
void matrixMultiplication(int firstMatrix[3][3], int secondMatrix[3][3], int resultMatrix[3][3]) {
    // Looping through the rows of the first matrix
    for (int i = 0; i < 3; i++) {
        // Looping through the columns of the second matrix
        for (int j = 0; j < 3; j++) {
            // Initializing the value of the current cell
            resultMatrix[i][j] = 0;
            // Looping through the columns of the first matrix and the rows of the second matrix
            for (int k = 0; k < 3; k++) {
                // Multiplying corresponding elements and adding to the current cell
                resultMatrix[i][j] += firstMatrix[i][k] * secondMatrix[k][j];
            }
        }
    }
}

int main() {
    // Initializing the first matrix
    int firstMatrix[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
    // Initializing the second matrix
    int secondMatrix[3][3] = {{9, 8, 7}, {6, 5, 4}, {3, 2, 1}};
    // Initializing the result matrix
    int resultMatrix[3][3];
    
    // Printing the first matrix
    cout << "First Matrix:" << endl;
    printMatrix(firstMatrix, 3, 3);
    
    // Printing the second matrix
    cout << "Second Matrix:" << endl;
    printMatrix(secondMatrix, 3, 3);
    
    // Performing matrix multiplication
    matrixMultiplication(firstMatrix, secondMatrix, resultMatrix);
    
    // Printing the result matrix
    cout << "Result Matrix:" << endl;
    printMatrix(resultMatrix, 3, 3);
    
    return 0;
}
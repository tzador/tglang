// This is a complex code snippet in C++
#include <iostream>
#include <vector>

using namespace std;

class Shape {
    private:
        string color;
    public:
        Shape(string c) {
            color = c;
        }

        virtual double getArea() = 0; // Virtual function to calculate area

        string getColor() {
            return color;
        }
};

class Rectangle : public Shape {
    private:
        double length;
        double width;
    public:
        Rectangle(string c, double l, double w) : Shape(c) {
            length = l;
            width = w;
        }

        double getArea() {
            return length * width;
        }
};

class Circle : public Shape {
    private:
        double radius;
        const double pi = 3.14159;
    public:
        Circle(string c, double r) : Shape(c) {
            radius = r;
        }

        double getArea() {
            return pi * radius * radius;
        }
};

int main() {
    // Create vector to store shapes
    vector<Shape*> shapes;
    
    // Create shapes and add them to vector
    Rectangle rectangle("red", 5, 3);
    Circle circle("blue", 2);
    shapes.push_back(&rectangle);
    shapes.push_back(&circle);

    // Loop through shapes and print area and color
    for (Shape* s : shapes) {
        cout << "Shape color: " << s->getColor() << endl;
        cout << "Shape area: " << s->getArea() << endl;
    }

    return 0;
}
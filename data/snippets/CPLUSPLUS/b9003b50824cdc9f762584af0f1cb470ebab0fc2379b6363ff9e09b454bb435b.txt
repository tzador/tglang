// This code snippet is a complex function that sorts an array of integers in ascending order using the bubble sort algorithm
// Bubble sort is a simple comparison-based sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order
// The algorithm takes O(n^2) time to sort n elements
#include <iostream>
using namespace std;

void bubbleSort(int arr[], int n){
    int i, j;
    for (i = 0; i < n-1; i++){ // loop through the array
        // Last i elements are already in place
        for (j = 0; j < n-i-1; j++){
            // Checking if current element is greater than next element
            if (arr[j] > arr[j+1]){
                // Swapping elements if they are in the wrong order
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

int main(){
    int arr[5] = {5, 2, 1, 3, 4}; // creating an array of integers to be sorted
    int n = sizeof(arr)/sizeof(arr[0]); // calculating the size of the array
    bubbleSort(arr, n); // calling the bubbleSort function to sort the array
    // Printing the sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < n; i++){
        cout << arr[i] << " ";
    }
    return 0;
}
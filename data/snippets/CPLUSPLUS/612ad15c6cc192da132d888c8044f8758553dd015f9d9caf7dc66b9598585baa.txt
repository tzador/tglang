// This is a function that checks whether a given number is prime or not
// It uses the Sieve of Eratosthenes algorithm for efficiency
bool isPrime(int n) {
    // create a boolean array of size n+1, initialized to true
    bool primes[n+1];
    for (int i = 0; i <= n; i++) {
        primes[i] = true;
    }

    // mark multiples of each number as false
    for (int p = 2; p * p <= n; p++) {
        // check if current number is prime
        if (primes[p] == true) {
            // mark all multiples of p as false
            for (int i = p * p; i <= n; i += p) {
                primes[i] = false;
            }
        }
    }

    // check if n is prime
    if (primes[n] == true) {
        // return true if n is prime
        return true;
    } else {
        // otherwise, return false
        return false;
    }
}
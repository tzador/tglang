#include <iostream>
using namespace std;

// This code snippet creates a class named Person with a constructor and virtual destructor
class Person {
private:
    string name;
    int age;

public:
    // Constructor with default values
    Person(string n = "John", int a = 30) {
        name = n;
        age = a;
    }

    // Virtual destructor
    virtual ~Person() {}

    // Getter methods
    string getName() {
        return name;
    }

    int getAge() {
        return age;
    }

    // Setter methods
    void setName(string n) {
        name = n;
    }

    void setAge(int a) {
        age = a;
    }

    // Print method to print out name and age
    void printInfo() {
        cout << "Name: " << name << endl;
        cout << "Age: " << age << endl;
    }
};

// This code snippet also creates a subclass of Person named Student
class Student : public Person {
private:
    int studentID;
    string major;

public:
    // Constructor with default values
    Student(int sid = 0, string m = "Undecided") {
        studentID = sid;
        major = m;
    }

    // Getter methods
    int getStudentID() {
        return studentID;
    }

    string getMajor() {
        return major;
    }

    // Setter methods
    void setStudentID(int sid) {
        studentID = sid;
    }

    void setMajor(string m) {
        major = m;
    }

    // Override print method from Person class to also print student ID and major
    void printInfo() {
        cout << "Name: " << getName() << endl;
        cout << "Age: " << getAge() << endl;
        cout << "Student ID: " << studentID << endl;
        cout << "Major: " << major << endl;
    }
};

// This code snippet creates an array of Person objects and calls the print method for each one
int main() {
    // Create array of 3 Person objects
    Person arr[3];

    // Use set methods to set values for each object
    arr[0].setName("Jane");
    arr[0].setAge(25);

    arr[1].setName("Bob");
    arr[1].setAge(35);

    arr[2].setName("Sara");
    arr[2].setAge(45);

    // Call print method for each object
    for (int i = 0; i < 3; i++) {
        arr[i].printInfo();
    }

    return 0;
}
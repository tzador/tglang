#include <iostream>        // include iostream library, used for input/output operations
#include <vector>          // include vector library, used for dynamic arrays

using namespace std;       // use the standard namespace to avoid typing std:: before library functions

/*  This function performs selection sort on a given vector of integers.
    Selection sort works by repeatedly finding the minimum element from the unsorted part
    and placing it at the beginning of the sorted portion.  */

void selectionSort(vector<int>& arr) {
    int n = arr.size();     // store the size of the vector in a variable

    /*  Iterate through the unsorted part of the vector. 
        The last element of the unsorted part will be at index n-1. */
    for (int i = 0; i < n - 1; i++) {
        int min_index = i;  // set min_index as the current index

        /*  Find the minimum element in the unsorted part by iterating through it.
            If a smaller element is found, update the value of min_index. */
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[min_index]) {
                min_index = j;
            }
        }

        /*  Swap the minimum element with the first element of the unsorted part.
            This places the minimum element in the sorted portion. */
        int temp = arr[min_index];
        arr[min_index] = arr[i];
        arr[i] = temp;
    }
}

int main() {
    vector<int> unsorted = { 5, 2, 8, 12, 3 };    // create a vector of unsorted integers with initial values

    // call selectionSort function and pass the unsorted vector by reference
    selectionSort(unsorted);

    // print the sorted vector
    for (int i = 0; i < unsorted.size(); i++) {
        cout << unsorted[i] << " ";
    }

    return 0;   // indicate successful execution of the program
}
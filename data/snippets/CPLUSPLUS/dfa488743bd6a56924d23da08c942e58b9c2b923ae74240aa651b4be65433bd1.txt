#include <iostream>

using namespace std;

// This function uses dynamic programming to calculate the nth fibonacci number
int fib(int n) {
    // Check for base case
    if (n <= 1) {
        return n;
    }

    // Create a dynamic array to store previously calculated values
    int *fib_array = new int[n + 1];

    // Initialize the first two values
    fib_array[0] = 0;
    fib_array[1] = 1;

    // Use a for loop to iterate through the remaining values
    // Each value is calculated using the previous two values
    for (int i = 2; i <= n; i++) {
        fib_array[i] = fib_array[i - 1] + fib_array[i - 2];
    }

    // Store the result in a variable
    int result = fib_array[n];

    // Free the dynamically allocated memory
    delete[] fib_array;

    // Return the result
    return result;
}

int main()
{
    // Prompt user for input
    cout << "Enter a number: ";

    // Read input from user
    int n;
    cin >> n;

    // Call the fib function and store the result
    int result = fib(n);

    // Print the result
    cout << "The " << n << "th fibonacci number is: " << result;

    return 0;
}
// This code snippet uses an advanced sorting algorithm to sort a given array in descending order

#include <iostream>
using namespace std;

// Function to merge two subarrays of the given array
// First subarray is arr[l..m]
// Second subarray is arr[m+1..r]
void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 =  r - m;

    // create temporary arrays
    int L[n1], R[n2];

    // copy data to temporary arrays
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];

    // merge the temporary arrays back into arr[l..r]
    i = 0; // initial index of first subarray
    j = 0; // initial index of second subarray
    k = l; // initial index of merged subarray
    while (i < n1 && j < n2)
    {
        if (L[i] >= R[j]) // compare elements of the subarrays
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    // copy the remaining elements of L[], if there are any
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }

    // copy the remaining elements of R[], if there are any
    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}

// Function to perform merge sort recursively
void mergeSort(int arr[], int l, int r)
{
    if (l < r)
    {
        // find the middle point
        int m = l+(r-l)/2;

        // recursive calls
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);

        // merge the sorted subarrays
        merge(arr, l, m, r);
    }
}

// main function
int main()
{
    // array to be sorted
    int arr[] = {10, 7, 8, 12, 5};

    // calculate size of array
    int arr_size = sizeof(arr)/sizeof(arr[0]);

    // print original array
    cout << "Original array: ";
    for (int i = 0; i < arr_size; i++)
        cout << arr[i] << " ";
    cout << endl;

    // perform merge sort
    mergeSort(arr, 0, arr_size-1);

    // print sorted array
    cout << "Sorted array in descending order: ";
    for (int i = 0; i < arr_size; i++)
        cout << arr[i] << " ";
    cout << endl;

    return 0;
}
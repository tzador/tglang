#include <iostream> // includes the standard input-output stream header file

using namespace std; // allows us to use C++ standard library without prefixing each function or object

class Shape { // creates a class named Shape
  private:
    int length; // private variable for length of shape
    int width; // private variable for width of shape
  public:
    Shape(); // default constructor for Shape class
    Shape(int l, int w); // parameterized constructor for Shape class
    ~Shape(); // destructor for Shape class
    void setLength(int l); // public function to set the length of the shape
    void setWidth(int w); // public function to set the width of the shape
    int getArea(); // public function to calculate and return the area of the shape
};

Shape::Shape() { // definition of default constructor for Shape class
  length = 0;
  width = 0;
}

Shape::Shape(int l, int w) { // definition of parameterized constructor for Shape class
  length = l;
  width = w;
}

Shape::~Shape() { // definition of destructor for Shape class
  // do something here if needed
}

void Shape::setLength(int l) { // definition of setLength function
  length = l;
}

void Shape::setWidth(int w) { // definition of setWidth function
  width = w;
}

int Shape::getArea() { // definition of getArea function
  return length * width;
}

int main() { // main function of the program
  Shape myShape; // instantiation of Shape class using default constructor
  myShape.setLength(5); // using setLength function to set the length of the shape to 5
  myShape.setWidth(10); // using setWidth function to set the width of the shape to 10
  cout << "The area of my shape is: " << myShape.getArea() << endl; // outputting the calculated area using getArea function
  return 0;
}
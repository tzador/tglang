#include <iostream>
using namespace std;

// Defining a class named "Complex" for handling complex numbers
class Complex {
    private:
        float real; // variable for real part of complex number
        float imag; // variable for imaginary part of complex number
    public:
        // Constructor to initialize complex number with real and imaginary part
        Complex(float r, float i) {
            real = r;
            imag = i;
        }
        // Method to add two complex numbers
        Complex add(Complex &c) {
            float real_result = real + c.real; // adding the real parts of both numbers
            float imag_result = imag + c.imag; // adding the imaginary parts of both numbers
            return Complex(real_result, imag_result);
        }
        // Method to subtract two complex numbers
        Complex subtract(Complex &c) {
            float real_result = real - c.real; // subtracting the real parts of both numbers
            float imag_result = imag - c.imag; // subtracting the imaginary parts of both numbers
            return Complex(real_result, imag_result);
        }

};

int main()
{
    // Creating two complex numbers
    Complex c1(3, 5);
    Complex c2(2, 7);

    // Adding two complex numbers and storing the result in a new complex number
    Complex sum = c1.add(c2);

    // Subtracting two complex numbers and storing the result in a new complex number
    Complex difference = c1.subtract(c2);

    // Printing the original and resulting complex numbers
    cout << "c1 = " << c1.real << " + " << c1.imag << "i" << endl;
    cout << "c2 = " << c2.real << " + " << c2.imag << "i" << endl;
    cout << "Sum = " << sum.real << " + " << sum.imag << "i" << endl;
    cout << "Difference = " << difference.real << " + " << difference.imag << "i" << endl;

    return 0;
}
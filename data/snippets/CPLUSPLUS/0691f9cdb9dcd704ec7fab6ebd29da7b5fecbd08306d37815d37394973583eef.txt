/*
 * This is a complex code snippet in C++.
 * It demonstrates the use of classes, objects, inheritance, and polymorphism.
 */

#include <iostream>
#include <string>

using namespace std;

// Base class "Shape"
class Shape {
protected:
  int length;
  int width;
public:
  // Constructor
  Shape(int l, int w) {
    length = l;
    width = w;
  }
  // Method to calculate area
  virtual int calculate_area() = 0; // Pure virtual function

  // Method to get length and width values
  void get_values() {
    cout << "Length: " << length << endl;
    cout << "Width: " << width << endl;
  }
};

// Derived class "Rectangle" inheriting from base class "Shape"
class Rectangle : public Shape {
public:
  // Constructor
  Rectangle(int l, int w) : Shape(l, w) {}
  // Override method for calculating area
  int calculate_area() {
    return length * width;
  }
};

// Inherits from "Rectangle"
class Square : public Rectangle {
public:
  // Constructor
  Square(int side) : Rectangle(side, side) {} // Calls parent constructor with same value for length and width
};

// Derived class "Circle" inheriting from base class "Shape"
class Circle : public Shape {
private:
  double radius;
public:
  // Constructor
  Circle(int r) : Shape(r, r) {
    radius = r;
  }
  // Override method for calculating area
  int calculate_area() {
    return 3.14 * radius * radius; // Using Pi as 3.14 for simplicity
  }
};

// Main function
int main() {
  // Creating objects of different shapes
  Rectangle rectangle(5, 4);
  Square square(6);
  Circle circle(7);
  
  // Calling the get_values method for each shape to show length and width
  cout << "Rectangle:" << endl;
  rectangle.get_values();
  cout << "Square:" << endl;
  square.get_values();
  cout << "Circle:" << endl;
  circle.get_values();
  
  // Calling the calculate_area method for each shape to show the area
  // Since the method is virtual, the appropriate method for each shape will be called
  cout << "Area of rectangle: " << rectangle.calculate_area() << endl;
  cout << "Area of square: " << square.calculate_area() << endl;
  cout << "Area of circle: " << circle.calculate_area() << endl;
  
  return 0;
}

/* Output:
Rectangle:
Length: 5
Width: 4
Square:
Length: 6
Width: 6
Circle:
Length: 7
Width: 7
Area of rectangle: 20
Area of square: 36
Area of circle: 153.86
*/
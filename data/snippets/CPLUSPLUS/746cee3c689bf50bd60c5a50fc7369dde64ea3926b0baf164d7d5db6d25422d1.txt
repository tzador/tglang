/* This is a long and complex code snippet in C++ */
#include <iostream> // standard input/output library
#include <vector> // vector library for dynamic arrays
#include <algorithm> // algorithm library for sorting
using namespace std; // using standard namespace

// Function to merge two sorted arrays
// Takes in two vectors as parameters and returns a vector as output
vector<int> merge(vector<int> v1, vector<int> v2) {

    // Initialize a vector to store the merged array
    // Sets the size of the vector to the sum of the sizes of the two input vectors
    vector<int> merged(v1.size() + v2.size());

    // Using iterators to loop through both input vectors
    auto v1_iter = v1.begin();
    auto v2_iter = v2.begin();

    // Loop until one of the vectors reaches its end
    while (v1_iter != v1.end() && v2_iter != v2.end()) {

        // If the current element in v1 is smaller, add it to the merged vector
        // and increment v1 iterator
        if (*v1_iter < *v2_iter) {
            merged.push_back(*v1_iter);
            v1_iter++;
        }
        // Otherwise, add the v2 element to the merged vector and increment v2 iterator
        else {
            merged.push_back(*v2_iter);
            v2_iter++;
        }
    }

    // If there are elements left in v1, add them to the end of merged vector
    while (v1_iter != v1.end()) {
        merged.push_back(*v1_iter);
        v1_iter++;
    }

    // If there are elements left in v2, add them to the end of merged vector
    while (v2_iter != v2.end()) {
        merged.push_back(*v2_iter);
        v2_iter++;
    }

    // Return the final merged vector
    return merged;
}

int main() {

    // Initialize two arrays to be merged
    vector<int> arr1 = { 2, 4, 7, 10 };
    vector<int> arr2 = { 1, 3, 8, 9 };

    // Call the merge function and store the result in a new vector
    vector<int> merged_arr = merge(arr1, arr2);

    // Print the merged array
    cout << "Merged array: ";
    for (int i = 0; i < merged_arr.size(); i++) {
        cout << merged_arr[i] << " ";
    }

    cout << "\n";

    // Sort the merged array using the algorithm library
    sort(merged_arr.begin(), merged_arr.end());

    // Print the sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < merged_arr.size(); i++) {
        cout << merged_arr[i] << " ";
    }

    return 0;
}
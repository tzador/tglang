#include <iostream> //include necessary libraries
#include <string>

using namespace std; //use standard namespace

//define base class 'Shape'
class Shape {
    protected:
        float length; //length of the shape
        float width; //width of the shape
        string color; //color of the shape

    public:
        //constructor for Shape class
        Shape(float l, float w, string c) {
            length = l; //set length
            width = w; //set width
            color = c; //set color
        }
        
        //virtual function to calculate area of shape
        virtual float getArea() {
            return length * width; //return area of rectangle
        }
        
        //function to print color of shape
        void printColor() {
            cout << "The color of this shape is: " << color << endl;
        }
};

//define derived class 'Rectangle', inheriting from 'Shape'
class Rectangle : public Shape {
    public:
        //constructor for Rectangle class
        Rectangle(float l, float w, string c) : Shape(l, w, c) {}
        
        //override getArea() for rectangle shape
        float getArea() {
            return length * width; //return area of rectangle
        }
};

//define derived class 'Circle', inheriting from 'Shape'
class Circle : public Shape {
    private:
        float radius; //radius of the circle
    
    public:
        //constructor for Circle class
        Circle(float r, string c) : Shape(0, 0, c) {
            radius = r; //set radius
        }
        
        //override getArea() for circle shape
        float getArea() {
            return 3.14159265 * radius * radius; //return area of circle
        }
};

int main() {
    //create rectangle object 'rect' with length of 5, width of 3, and color red
    Rectangle rect(5, 3, "red");
    
    //print area of rectangle
    cout << "Area of rectangle: " << rect.getArea() << endl;
    //print color of rectangle
    rect.printColor();
    
    //create circle object 'circ' with radius of 2 and color blue
    Circle circ(2, "blue");
    
    //print area of circle
    cout << "Area of circle: " << circ.getArea() << endl;
    //print color of circle
    circ.printColor();
    
    return 0;
}
// This is a complex code snippet in C++
#include <iostream>
using namespace std;

// Define a function to calculate the factorial of a number
int factorial(int num) {
    if (num == 0) {
        return 1;
    }
    else {
        return num * factorial(num - 1);
    }
}

// Define a template class for a mathematical sequence
template <class T>
class Sequence {
private:
    T first, second; // Declare private variables for the first two numbers of the sequence
public:
    Sequence(T f, T s) { // Constructor to set the initial values for the sequence
        first = f;
        second = s;
    }
    void printSequence(int n) { // Function to print the first n numbers of the sequence
        T a = first, b = second, c; // Declare variables for the current and previous two numbers in the sequence
        cout << a << " " << b << " ";
        for (int i = 2; i < n; i++) {
            c = a + b;
            cout << c << " ";
            a = b;
            b = c;
        }
    }
};

int main() {
    int start = 1, end = 10; // Declare variables for the starting and ending points of the sequence
    Sequence<int> fib(start, end); // Create a Fibonacci sequence object
    int result = factorial(end); // Calculate the factorial of the ending point
    cout << "First " << end << " numbers of Fibonacci sequence:" << endl << endl;
    fib.printSequence(end); // Print the first 10 numbers of the sequence
    cout << endl << endl;
    cout << "Factorial of " << end << " is: " << result; // Print the calculated factorial
    return 0;
}
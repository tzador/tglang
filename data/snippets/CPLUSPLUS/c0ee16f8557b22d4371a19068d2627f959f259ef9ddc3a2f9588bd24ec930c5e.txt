#include <iostream>
#include <cstdlib>
using namespace std;
 
// Binary search function
int binarySearch(array<int, 10> arr, int key) { // Function header
    int left = 0; // Initialize left pointer
    int right = arr.size() - 1; // Initialize right pointer 

    while (left <= right) { // Loop condition
        int mid = left + (right - left) / 2; // Calculate middle index
        if (arr[mid] == key) { // Check if middle element is equal to key 
            return mid; // Return index if found
        } else if (arr[mid] > key) { // Check if middle element is greater than key
            right = mid - 1; // Update right pointer
        } else { 
            left = mid + 1; // Update left pointer
        }
    }
    return -1; // Return -1 if key is not found in array
}

// Main function
int main() {
    array<int, 10> arr = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100}; // Initialize array
    int key = 50; // Initialize key 
    int result = binarySearch(arr, key); // Call binarySearch function 
    if (result == -1) { // Check if key is not found
        cout << "Key not found in array\n"; // Print error message
    } else {
        cout << "Key found at index " << result << "\n"; // Print index of key
    }
    return 0;
}
//This is a complex function in C++

/*This function takes in three parameters: 
1. A reference to an integer variable num1
2. A pointer to a character array str1
3. An integer constant num2*/

void function(int& num1, char* str1, const int num2) {
    
    //Initialize a constant integer variable
    const int size = 10;
    
    //Create an integer pointer pointing to a dynamically allocated array of size 10
    int* arr = new int[size];
    
    //Loop through the array and assign each element with num2 squared
    for(int i = 0; i < size; i++) {
        arr[i] = num2 * num2;
    }
    
    //Print out the contents of the array using a range-based for loop
    for(int x : arr) {
        std::cout << x << " ";
    }
    
    //Update the value of num1 by adding num2 to it
    num1 += num2;
    
    //Print out the value of num1 using a pointer dereferencing operator
    std::cout << "\nnum1: " << *(&num1) << std::endl;
    
    //Print out the value of str1 using a pointer dereferencing operator
    std::cout << "str1: " << *str1 << std::endl;
    
    //Delete the dynamically allocated array to avoid memory leaks
    delete[] arr;
}

int main() {
    //Initialize a variable num with value 5 and a character array str with value "Hello"
    int num = 5;
    char str[] = "Hello";
    
    //Call the function with num as a reference, str as a pointer, and 10 as a constant value
    function(num, str, 10);
    
    //Output:
    //100 100 100 100 100 100 100 100 100 100
    //num1: 15
    //str1: H
    
    return 0;
}
// This is a complex structure example in C++

#include <iostream>
#include <vector>

using namespace std;

// Defining a structure that holds information about employees
struct Employee {
  string name;
  int id;
  string department;
};

// Creating a complex structure to manage employee data
struct EmployeeDatabase {
  vector<Employee> employees; // A vector of Employee objects
  int key_count; // Keeps track of the number of employees in the database
  
  // Function to add a new employee to the database
  void addEmployee(string name, int id, string department) {
    Employee new_employee; // Creating a new Employee object
    new_employee.name = name; // Assigning name, id, and department to the new object
    new_employee.id = id;
    new_employee.department = department;
    employees.push_back(new_employee); // Adding the new employee to the vector
    key_count++; // Incrementing the key count
  }
  
  // Function to print out all the employees in the database
  void printEmployees() {
    for(Employee e : employees) {
      cout << "Name: " << e.name << endl;
      cout << "ID: " << e.id << endl;
      cout << "Department: " << e.department << endl << endl;
    }
  }
};

// Main function
int main() {
  // Creating an EmployeeDatabase object
  EmployeeDatabase company_database;
  
  // Adding employees to the database
  company_database.addEmployee("John Smith", 1234, "IT");
  company_database.addEmployee("Jane Doe", 5678, "HR");
  
  // Printing out all employees in the database
  company_database.printEmployees();
  
  return 0;
}
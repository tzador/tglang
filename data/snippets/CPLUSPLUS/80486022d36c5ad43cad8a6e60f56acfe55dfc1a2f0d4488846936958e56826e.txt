#include <iostream>

// Defining a class for a complex number
class Complex {
private:
    double real;
    double imaginary;

public:
    // Constructor
    Complex(double r, double i): real(r), imaginary(i) {}

    // Overloading the addition operator
    Complex operator+(const Complex& num) const {
        Complex temp(real + num.real, imaginary + num.imaginary);
        return temp;
    }

    // Overloading the subtraction operator
    Complex operator-(const Complex& num) const {
        Complex temp(real - num.real, imaginary - num.imaginary);
        return temp;
    }

    // Overloading the multiplication operator
    Complex operator*(const Complex& num) const {
        Complex temp(real * num.real - imaginary * num.imaginary, real * num.imaginary + imaginary * num.real);
        return temp;
    }

    // Overloading the division operator
    Complex operator/(const Complex& num) const {
        double denominator = (num.real * num.real) + (num.imaginary * num.imaginary);
        Complex temp(((real * num.real) + (imaginary * num.imaginary)) / denominator,
                     ((imaginary * num.real) - (real * num.imaginary)) / denominator);
        return temp;
    }

    // Overloading the equal operator
    bool operator==(const Complex& num) const {
        return (real == num.real) && (imaginary == num.imaginary);
    }

    // Overloading the not equal operator
    bool operator!=(const Complex& num) const {
        return !(*this == num);
    }

    // Overloading the assignment operator
    Complex operator=(const Complex& num) {
        real = num.real;
        imaginary = num.imaginary;
        return *this;
    }

    // Overloading the output stream operator to print the complex number
    friend std::ostream& operator<<(std::ostream& os, const Complex& num) {
        if (num.imaginary < 0) { // If the imaginary part is negative
            os << num.real << " - " << (-num.imaginary) << "i";
        }
        else {
            os << num.real << " + " << num.imaginary << "i";
        }
        return os;
    }
};

int main() {
    // Creating two complex numbers
    Complex num1(5, -2);
    Complex num2(3, 4);

    // Performing operations on the complex numbers
    Complex sum = num1 + num2;
    Complex difference = num1 - num2;
    Complex product = num1 * num2;
    Complex quotient = num1 / num2;

    // Printing the results
    std::cout << "Sum: " << sum << std::endl;
    std::cout << "Difference: " << difference << std::endl;
    std::cout << "Product: " << product << std::endl;
    std::cout << "Quotient: " << quotient << std::endl;
    return 0;
}
/* Output:
Sum: 8 + 2i
Difference: 2 - 6i
Product: 23 + 14i
Quotient: 0.1 + 1.4i
*/
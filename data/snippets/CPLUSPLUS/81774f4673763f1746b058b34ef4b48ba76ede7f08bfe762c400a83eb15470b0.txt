/**
* This is a complex function that takes in three parameters, performs calculations, 
* and returns a sorted list based on the calculations.
* @param list1 The first list to be used in the calculations.
* @param list2 The second list to be used in the calculations.
* @param list3 The third list to be used in the calculations.
* @return A sorted list of the three lists provided.
*/
vector<int> calculate(vector<int> list1, vector<int> list2, vector<int> list3) {
    // Declare a vector to store the calculated values
    vector<int> sortedList;
    // Loop through each element in list1
    for (int i = 0; i < list1.size(); i++) {
        // Multiply the element by 2
        int value = list1[i] * 2;
        // Add the value to the sortedList
        sortedList.push_back(value);
    }
    // Loop through each element in list2
    for (int i = 0; i < list2.size(); i++) {
        // Divide the element by 3
        int value = list2[i] / 3;
        // Add the value to the sortedList
        sortedList.push_back(value);
    }
    // Loop through each element in list3
    for (int i = 0; i < list3.size(); i++) {
        // Subtract 5 from the element
        int value = list3[i] - 5;
        // Add the value to the sortedList
        sortedList.push_back(value);
    }
    // Sort the final list in ascending order
    sort(sortedList.begin(), sortedList.end());
    // Return the sorted list
    return sortedList;
}
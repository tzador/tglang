#include <iostream>

// Function to perform bubble sort
// Input: array of integers
// Output: None (array will be sorted in-place)
void bubbleSort(int arr[], int size) {

  // Outer loop to iterate through all elements in the array
  // Starts from the last element and goes till the second element
  for (int i = size - 1; i > 0; i--) {

    // Inner loop to compare each element with its adjacent element
    // Starts from the first element and goes till the i-1th element
    for (int j = 0; j < i; j++) {

      // Check if the current element is greater than the next element
      if (arr[j] > arr[j + 1]) {

        // Swap the elements
        int temp = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
      }
    }
  }
}

// Driver code to test the bubbleSort function
int main() {

  // Input array of integers
  int arr[] = {2, 8, 5, 3, 9, 4, 1};

  // Calculate the size of the array
  int size = sizeof(arr)/sizeof(arr[0]);

  // Print the original array
  std::cout << "Original array: ";
  for (int i = 0; i < size; i++) {
    std::cout << arr[i] << " ";
  }

  // Sort the array using bubbleSort
  bubbleSort(arr, size);

  // Print the sorted array
  std::cout << "\nSorted array: ";
  for (int i = 0; i < size; i++) {
    std::cout << arr[i] << " ";
  }

  return 0;
}
/**
 * This is a program that implements a bubble sort algorithm.
 */

#include <iostream>
using namespace std;

// Function to perform bubble sort
void bubbleSort(int array[], int size)
{
  int temp;
  // Loop through array elements
  for (int i = 0; i < size - 1; i++)
  {
    // Last i elements are already in place
    for (int j = 0; j < size - i - 1; j++)
    {
      // Compare adjacent array elements
      if (array[j] > array[j + 1])
      {
        // Swap array elements
        temp = array[j];
        array[j] = array[j + 1];
        array[j + 1] = temp;
      }
    }
  }
}

// Driver code
int main()
{
  int array[] = {64, 34, 25, 12, 22, 11, 90};
  int size = sizeof(array) / sizeof(array[0]);
  // Print unsorted array
  cout << "Unsorted array: ";
  for (int i = 0; i < size; i++)
  {
    cout << array[i] << " ";
  }
  cout << endl;
  // Call bubble sort function
  bubbleSort(array, size);
  // Print sorted array
  cout << "Sorted array: ";
  for (int i = 0; i < size; i++)
  {
    cout << array[i] << " ";
  }
  return 0;
}
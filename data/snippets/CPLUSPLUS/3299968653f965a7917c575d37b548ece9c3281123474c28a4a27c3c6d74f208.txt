#include <iostream> //include header file for input/output stream
#include <vector> //include header file for vector container
using namespace std; //use standard namespace
 
//function to remove duplicates from a vector 
vector<int> removeDuplicates(vector<int> v){
    
    vector<int> result; //create a new vector to store the result
    
    //loop through the input vector
    for(int i=0; i<v.size(); i++){
        
        //variable to keep track of duplicates
        bool isDuplicate = false;
        
        //loop through result vector to check for duplicates
        for(int j=0; j<result.size(); j++){
            
            //if duplicate is found, set flag to true and break loop
            if(v[i] == result[j]){
                isDuplicate = true;
                break;
            }
        }
        
        //if no duplicate is found, add element to result vector
        if(!isDuplicate){
            result.push_back(v[i]);
        }
    }
    
    //return the result vector
    return result;
}

//main function
int main(){
    
    //declare and initialize vector with duplicate elements
    vector<int> v = {1, 2, 3, 3, 4, 4, 5};
    
    //print original vector
    cout << "Original Vector: ";
    for(int i=0; i<v.size(); i++){
        cout << v[i] << " ";
    }
    cout << endl;
    
    //call removeDuplicates function and store result in new vector
    vector<int> newV = removeDuplicates(v);
    
    //print new vector with duplicates removed
    cout << "Vector with Duplicates Removed: ";
    for(int i=0; i<newV.size(); i++){
        cout << newV[i] << " ";
    }
    cout << endl;
    
    return 0;
}

/* Output:
Original Vector: 1 2 3 3 4 4 5
Vector with Duplicates Removed: 1 2 3 4 5
*/
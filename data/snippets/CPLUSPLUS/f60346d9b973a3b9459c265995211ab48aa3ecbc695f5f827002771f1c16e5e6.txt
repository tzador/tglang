// This is a C++ program to perform a binary search
#include <iostream> // include input/output library
using namespace std; // use standard namespace

int binarySearch(int arr[], int start, int end, int key) { // function to perform binary search
    int mid = (start + end) / 2; // calculate mid point
    while (start <= end) { // loop until start index is smaller or equal to end index
        if (arr[mid] == key) // check if middle element is the key
            return mid; // return index of key
        else if (key < arr[mid]) // if key is smaller than middle element
            end = mid - 1; // ignore right half of array
        else // if key is larger than middle element
            start = mid + 1; // ignore left half of array
        mid = (start + end) / 2; // recalculate mid point
    }
    return -1; // return -1 if key is not found
}

int main() { // main function
    int arr[] = { 2, 5, 7, 10, 23, 45, 67, 89 }; // sorted array to perform binary search on
    int size = sizeof(arr) / sizeof(arr[0]); // calculate size of array
    int key = 23; // key element to search for
    int index = binarySearch(arr, 0, size - 1, key); // call binary search function and store return value in index
    if (index == -1) // check if key was not found
        cout << "Element not found in array"; // print error message
    else // if key was found
        cout << "Element found at index " << index; // print index of key
    return 0; // return statement
}
#include <iostream>
#include <vector>

// function template to find the average of a vector of numbers
template <typename T>
T get_average(std::vector<T>& vec){
    T sum = static_cast<T>(0); // initialize sum variable to 0
    for (auto const& num: vec){ // iterate through vector
        sum += num; // add each number to the sum
    }
    return sum/static_cast<T>(vec.size()); // calculate and return average
}

int main(){
    // create a vector of integers
    std::vector<int> int_vec = {1, 2, 3, 4, 5}; 
    
    // use the function template to find the average of the vector
    int avg_int = get_average(int_vec); 
    
    // print out the average
    std::cout << "The average of the vector is: " << avg_int << std::endl; 

    // create a vector of doubles
    std::vector<double> double_vec = {2.5, 3.7, 4.2, 5.1, 6.8}; 
    
    // use the function template to find the average of the vector
    double avg_double = get_average(double_vec); 
    
    // print out the average
    std::cout << "The average of the vector is: " << avg_double << std::endl; 

    return 0;
}
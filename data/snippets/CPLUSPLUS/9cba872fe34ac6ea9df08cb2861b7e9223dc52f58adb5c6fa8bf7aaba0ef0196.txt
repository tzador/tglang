#include <iostream> //include standard input/output library
using namespace std; //use standard namespace

/**
* A class representing a mathematical vector.
* Contains private attributes x and y representing the x and y components of the vector.
*/
class Vector{
private:
    float x; //attribute x representing x component
    float y; //attribute y representing y component
public:
    /**
    * Default constructor for the Vector class.
    * Sets x and y to 0.
    */
    Vector(){
        x = 0;
        y = 0;
    }
    /**
    * Parameterized constructor for the Vector class.
    * @param xVal value to be assigned to x component
    * @param yVal value to be assigned to y component
    */
    Vector(float xVal, float yVal){
        x = xVal;
        y = yVal;
    }
    /**
    * Function to calculate the magnitude of the vector.
    * @return the magnitude of the vector as a float value
    */
    float getMagnitude(){
        //magnitude = sqrt(x^2 + y^2)
        return sqrt(x*x + y*y);
    }
    /**
    * Function to calculate the dot product of two vectors.
    * @param otherVector the other vector to be multiplied with
    * @return the dot product as a float value
    */
    float dotProduct(Vector otherVector){
        //dot product = x1*x2 + y1*y2
        return x*otherVector.x + y*otherVector.y;
    }

};

//main function
int main(){
    //create two vectors using different constructors
    Vector vector1; //default constructor, x and y are 0
    Vector vector2(3, 4); //parameterized constructor, x = 3 and y = 4

    //print the magnitude of vector1
    cout << "Magnitude of vector1 is: " << vector1.getMagnitude() << endl; //output: Magnitude of vector1 is: 0

    //print the dot product of vector1 and vector2
    cout << "Dot product of vector1 and vector2 is: " << vector1.dotProduct(vector2) << endl; //output: Dot product of vector1 and vector2 is: 0

    return 0;
}
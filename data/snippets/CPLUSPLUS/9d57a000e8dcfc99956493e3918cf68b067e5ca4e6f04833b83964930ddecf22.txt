//Declaration of a templated class
template <class T> 
class MyClass 
{ 
    private: 
        T myVariable; 
    public: 
        //Default constructor
        MyClass() 
        { 
            myVariable = T(); 
        } 
        //Parameterized constructor
        MyClass(T value) 
        { 
            myVariable = value; 
        } 
        //Function to set the value of myVariable
        void setValue(T value) 
        { 
            myVariable = value; 
        } 
        //Function to get the value of myVariable
        T getValue() 
        { 
            return myVariable; 
        } 
        //Function to print the value of myVariable
        void printValue() 
        { 
            std::cout << "Value of myVariable: " << myVariable << "\n"; 
        } 
}; 

//Example of using the templated class
int main() 
{ 
    //Initialize object with integer type
    MyClass<int> obj(5); 
    //Set value of myVariable to 10
    obj.setValue(10); 
    //Print value of myVariable
    obj.printValue(); 

    //Initialize object with string type
    MyClass<std::string> obj2("Hello"); 
    //Set value of myVariable to "World"
    obj2.setValue("World"); 
    //Print value of myVariable
    obj2.printValue(); 

    return 0; 
}
#include <iostream> //include input/output library
using namespace std; //use standard namespace
//Create base class Shape
class Shape {
  protected:
      //Protected member variables
      double width;
      double height;
  public:
      //Default constructor
      Shape(){
          width = 0.0;
          height = 0.0;
      }
      //Constructor with parameters
      Shape(double w, double h){
          width = w;
          height = h;
      }
      //Virtual function to calculate area
      virtual double calcArea(){
          //Throw error if not overridden by derived class
          throw "Cannot calculate area for base shape!";
      }
      //Virtual function to calculate perimeter
      virtual double calcPerimeter(){
          //Throw error if not overridden by derived class
          throw "Cannot calculate perimeter for base shape!";
      }
};
//Create derived class Rectangle from base class Shape
class Rectangle : public Shape {
  public:
      //Call base class constructor to initialize width and height
      Rectangle(double w, double h) : Shape(w, h){}
      //Override calcArea function to calculate area of rectangle
      double calcArea(){
          return width * height;
      }
      //Override calcPerimeter function to calculate perimeter of rectangle
      double calcPerimeter(){
          return 2 * (width + height);
      }
};
//Create derived class Triangle from base class Shape
class Triangle : public Shape {
  public:
      //Call base class constructor to initialize width and height
      Triangle(double w, double h) : Shape(w, h){}
      //Override calcArea function to calculate area of triangle
      double calcArea(){
          return (width * height) / 2;
      }
      //Override calcPerimeter function to calculate perimeter of triangle
      double calcPerimeter(){
          return width + height + sqrt(pow(width,2) + pow(height,2));
      }
};
int main(){
    //Create an instance of a Rectangle
    Rectangle rectangle(5.5, 4.2);
    //Calculate and print the area of the rectangle
    cout << "Rectangle Area: " << rectangle.calcArea() << endl;
    //Calculate and print the perimeter of the rectangle
    cout << "Rectangle Perimeter: " << rectangle.calcPerimeter() << endl;

    //Create an instance of a Triangle
    Triangle triangle(3.0, 5.0);
    //Calculate and print the area of the triangle
    cout << "Triangle Area: " << triangle.calcArea() << endl;
    //Calculate and print the perimeter of the triangle
    cout << "Triangle Perimeter: " << triangle.calcPerimeter() << endl;
    return 0;
}
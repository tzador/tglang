// This is a function that takes in two strings and returns the number of common characters between them
int commonCharCount(std::string s1, std::string s2) {

    // Create an array to store the count of each character
    int char_count[26] = {0};

    // Loop through the first string and increment the count for each character
    for (int i = 0; i < s1.length(); i++) {
        // Get the index of the character by subtracting the ASCII value of 'a' from its own value
        int index = s1.at(i) - 'a';
        // Increment the count at that index
        char_count[index]++;
    }

    // Variable to store the total number of common characters
    int common_count = 0;

    // Loop through the second string and check if the count of each character is greater than 0
    for (int j = 0; j < s2.length(); j++) {
        // Get the index of the character by subtracting the ASCII value of 'a' from its own value
        int index = s2.at(j) - 'a';
        // If the count at that index is greater than 0, decrement it and increment the common count
        if (char_count[index] > 0) {
            char_count[index]--;
            common_count++;
        }
    }

    // Return the total number of common characters
    return common_count;
}
// Example output:
// commonCharCount("apple", "banana") âžž 3 // common characters are a, p, and e
// This is a complex function that takes in two arrays and returns the sum of their elements

int sumOfArrays(int arr1[], int arr2[], int size1, int size2) {
  // Initializing variables for sum and loop counters
  int sum = 0;
  int i = 0;
  int j = 0;
  
  // Loop through both arrays and add their elements to the sum
  while (i < size1 && j < size2) {
    sum += arr1[i] + arr2[j];
    i++;
    j++;
  }
  
  // If one array is longer than the other, loop through the remaining elements and add them to the sum
  while (i < size1) {
    sum += arr1[i];
    i++;
  }
  
  while (j < size2) {
    sum += arr2[j];
    j++;
  }
  
  // Return the final sum
  return sum;
}

// Example usage of the function
int array1[] = {1, 2, 3, 4};
int array2[] = {5, 6, 7, 8, 9};
int array1_size = 4;
int array2_size = 5;
int result = sumOfArrays(array1, array2, array1_size, array2_size);
cout << result << endl; // Output: 45
#include <iostream>

// Define a function called "fibonacci" that takes in an integer parameter "n"
// and returns an int array with the first "n" numbers of the Fibonacci sequence

int* fibonacci(int n) {
    // Create an int array of size "n" to store the Fibonacci sequence
    int* sequence = new int[n];

    // Initialize the first two elements of the array with the values 0 and 1
    sequence[0] = 0;
    sequence[1] = 1;

    // Loop through the remaining elements of the array starting at index 2
    for (int i = 2; i < n; i++) {
        // Calculate the next element in the Fibonacci sequence by adding the
        // two previous elements
        sequence[i] = sequence[i - 1] + sequence[i - 2];
    }

    // Return the array containing the Fibonacci sequence
    return sequence;
}

int main() {
    // Get input from user for the number of elements in the Fibonacci sequence
    int num_elements;
    std::cout << "Enter the number of elements in the Fibonacci sequence: ";
    std::cin >> num_elements;

    // Call the "fibonacci" function with "num_elements" as the parameter
    int* sequence = fibonacci(num_elements);

    // Print the Fibonacci sequence
    std::cout << "The first " << num_elements << " elements of the Fibonacci sequence are: ";
    for (int i = 0; i < num_elements; i++) {
        std::cout << sequence[i] << " ";
    }

    // Delete the dynamically allocated memory for the array
    delete[] sequence;

    return 0;
}
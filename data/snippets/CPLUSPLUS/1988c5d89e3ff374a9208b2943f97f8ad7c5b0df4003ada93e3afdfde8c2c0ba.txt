/*
This is a program that takes in a sorted array and performs binary search to find a given element.
*/

#include <iostream>
using namespace std;

// Function to perform binary search on a sorted array
int binarySearch(int arr[], int low, int high, int key)
{
    // Repeat the process until the high pointer crosses the low pointer
    while (low <= high) {
        // Calculate the middle index
        int mid = low + (high - low) / 2;
	
        // Check if the middle element is equal to the key element
        if (arr[mid] == key) {
            // Return the index of the key element
            return mid;
        }
        
        // If the middle element is greater than the key element, then search in the left subarray
        if (arr[mid] > key) {
            high = mid - 1;
        }
        // If the middle element is less than the key element, then search in the right subarray
        else {
            low = mid + 1;
        }
    }
	
    // If the key element is not found, return -1 
    return -1;
}


int main()
{
    // Initializing an array in sorted order
    int arr[] = {1, 5, 13, 24, 36, 47, 53, 68};

    // Size of the array
    int size = sizeof(arr) / sizeof(arr[0]);

    // Key element to be searched
    int key = 47;

    // Performing binary search on the array
    int result = binarySearch(arr, 0, size - 1, key);

    // Print the result
    if (result == -1) {
        cout << "Element not found";
    }
    else {
        cout << "Element found at index " << result;
    }

    return 0;
}
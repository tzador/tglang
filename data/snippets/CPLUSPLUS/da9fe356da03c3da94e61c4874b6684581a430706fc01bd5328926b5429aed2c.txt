// This program implements a binary search algorithm
#include <iostream>
using namespace std;

int binarySearch(int arr[], int low, int high, int target){
  while (low <= high){
    int mid = low + (high - low)/2; // calculating the mid index
    if (arr[mid] == target){ // if middle element is the target, return its index
      return mid;
    }
    else if (arr[mid] < target){ 
      low = mid + 1; // target is in the upper half, update low index
    }
    else{
      high = mid - 1; // target is in the lower half, update high index
    }
  }
  return -1; // target not found in array, return -1
}

int main(){
  int arr[] = {1, 3, 4, 6, 7, 9, 10, 14, 16, 18}; // sorted array to search from
  int target = 7; // target element to search for
  int low = 0; // starting index of array
  int high = sizeof(arr)/sizeof(arr[0]) - 1; // ending index of array

  // calling binarySearch function and storing result in result variable
  int result = binarySearch(arr, low, high, target);

  // checking if result is not -1, meaning target was found
  if (result != -1){
    cout << "Target element " << target << " found at index " << result << endl;
  }
  else{
    cout << "Target element not found in array" << endl;
  }

  return 0;
}
// This code snippet generates a fibonacci series using recursion

#include <iostream>
using namespace std;

// Function to generate fibonacci series
// Input: number n, indicating the length of the series
// Output: returns the fibonacci series as an array
int* generateFibonacci(int n) 
{
    // Initializing an array to store the fibonacci series
    static int series[1000];
    // Base cases
    if (n == 1) 
    {
        series[0] = 0;
        return series;
    }
    else if (n == 2) 
    {
        series[0] = 0;
        series[1] = 1;
        return series;
    }
    // Recursive call to generate the remaining series
    else 
    {
        series[n-1] = generateFibonacci(n-1)[n-2] + generateFibonacci(n-1)[n-3];
        return series;
    }
}

// Main function
int main() 
{
    // Variable to store the length of the fibonacci series
    int length;
    cout << "Enter the length of the fibonacci series: ";
    // Takes user input for the length of the series
    cin >> length;
    // Function call to generate the fibonacci series
    int* series = generateFibonacci(length);
    // Printing the series
    cout << "The fibonacci series is: ";
    for (int i = 0; i < length; i++) 
    {
        cout << series[i] << " ";
    }
    return 0;
}
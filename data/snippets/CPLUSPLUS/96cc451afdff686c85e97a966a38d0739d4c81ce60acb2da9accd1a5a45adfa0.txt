// This code snippet is a program that implements a binary search in C++

#include <iostream>
using namespace std;

// Function to perform binary search
int binarySearch(int arr[], int start, int end, int key) {
    // If start is greater than end, element not found
    if (start > end) {
        return -1;
    }
    
    // Calculate mid element of the array
    int mid = (start + end) / 2;
    
    // If key is found at mid, return mid
    if (arr[mid] == key) {
        return mid;
    }
    
    // If key is less than mid element, search in the left half of the array
    if (arr[mid] > key) {
        return binarySearch(arr, start, mid-1, key);
    }
    
    // If key is greater than mid element, search in the right half of the array
    if (arr[mid] < key) {
        return binarySearch(arr, mid+1, end, key);
    }
    
    // If element is not found, return -1
    return -1;
}

// Driver code
int main() {
    // Initialize sorted array
    int arr[] = {1, 4, 7, 9, 12, 17, 22, 25, 30};
    
    // Get size of the array
    int size = sizeof(arr) / sizeof(arr[0]);
    
    // Input key to search for
    int key;
    cout << "Enter the key to search for: ";
    cin >> key;
    
    // Perform binary search
    int result = binarySearch(arr, 0, size-1, key);
    
    // Check if element was found or not
    if (result == -1) {
        cout << "Element not found";
    } else {
        cout << "Element found at index " << result;
    }
    
    return 0;
}
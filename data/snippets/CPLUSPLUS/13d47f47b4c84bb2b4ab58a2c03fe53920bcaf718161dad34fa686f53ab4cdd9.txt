// This code snippet creates a class called "Shapes"
// It includes various functions for shape manipulation
// and a constructor to initialize the shape's dimensions
class Shapes {
    private:
        int length; // stores the length of the shape
        int width; // stores the width of the shape
    public:
        // Constructor to initialize a shape with given dimensions
        Shapes(int l, int w) {
            length = l;
            width = w;
        }

        // Function to calculate the perimeter of the shape
        int calculatePerimeter() {
            return 2 * (length + width);
        }

        // Function to calculate the area of the shape
        int calculateArea() {
            return length * width;
        }

        // Function to check if the shape is a square or rectangle
        bool isSquare() {
            if (length == width) {
                return true;
            } else {
                return false;
            }
        }

        // Function to resize the shape by a given factor
        void resize(double factor) {
            length = length * factor;
            width = width * factor;
        }
};

// Create an instance of the Shapes class with length 5 and width 7
Shapes myShape(5, 7);

// Calculate the perimeter and area of the shape
int perimeter = myShape.calculatePerimeter();
int area = myShape.calculateArea();

// Output the results
cout << "The perimeter of the shape is: " << perimeter << endl;
cout << "The area of the shape is: " << area << endl;

// Check if the shape is a square and output the result
if (myShape.isSquare()) {
    cout << "The shape is a square." << endl;
} else {
    cout << "The shape is a rectangle." << endl;
}

// Resize the shape by a factor of 2 and output the new dimensions
myShape.resize(2);
cout << "The new length of the shape is: " << myShape.getLength() << endl;
cout << "The new width of the shape is: " << myShape.getWidth() << endl;
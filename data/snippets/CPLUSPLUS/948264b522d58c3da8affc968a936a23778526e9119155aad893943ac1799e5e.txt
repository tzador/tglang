#include <iostream>
#include <vector>
using namespace std;

// Define a class template
template <typename T>
class GenericClass {
private:
    vector<T> data;
public:
    // Constructor that takes in a vector and sets it as the data member
    GenericClass(vector<T> input) {
        data = input;
    }

    // Method that adds an element to the end of the vector
    void addElement(T element) {
        data.push_back(element);
    }

    // Method that returns the sum of all elements in the vector
    double sum() {
        double result = 0.0;
        
        // Loop through the vector and add each element to the result
        for (int i = 0; i < data.size(); i++) {
            result += data[i];
        }
        
        return result;
    }
};

int main() {
    // Create a GenericClass object with a vector of integers
    vector<int> intVector = {1, 2, 3, 4, 5};
    GenericClass<int> intClass(intVector);
    
    // Call addElement method to add a new element to the vector
    intClass.addElement(6);
    
    // Print out the sum of the vector using the sum method
    cout << "The sum of the vector is: " << intClass.sum();

    return 0;
}
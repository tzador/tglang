// This is a complex code snippet in C++

// Define a class named "Complex"
class Complex {
    private:
        double real; // private variable to hold real value of complex number
        double imaginary; // private variable to hold imaginary value of complex number
        
    public:
        // Constructor with two double parameters for real and imaginary values
        Complex(double real, double imaginary) {
            this->real = real; // sets private variable equal to passed in value for real
            this->imaginary = imaginary; // sets private variable equal to passed in value for imaginary
        }
        
        // Getter method for private variable real
        double getReal() {
            return real;
        }
        
        // Getter method for private variable imaginary
        double getImaginary() {
            return imaginary;
        }
        
        // Function to add two complex numbers
        Complex operator+(const Complex& other) {
            double newReal = this->real + other.real; // creates new variable to hold real result
            double newImaginary = this->imaginary + other.imaginary; // creates new variable to hold imaginary result
            return Complex(newReal, newImaginary); // returns new Complex object with added values
        }
        
        // Function to subtract two complex numbers
        Complex operator-(const Complex& other) {
            double newReal = this->real - other.real; // creates new variable to hold real result
            double newImaginary = this->imaginary - other.imaginary; // creates new variable to hold imaginary result
            return Complex(newReal, newImaginary); // returns new Complex object with subtracted values
        }
        
        // Function to multiply two complex numbers
        // Uses formula (a + bi) * (c + di) = (ac - bd) + (ad + bc)i
        Complex operator*(const Complex& other) {
            double newReal = (this->real * other.real) - (this->imaginary * other.imaginary); // calculates real part
            double newImaginary = (this->real * other.imaginary) + (this->imaginary * other.real); // calculates imaginary part
            return Complex(newReal, newImaginary); // returns new Complex object with multiplied values
        }
        
        // Function to divide two complex numbers
        // Uses formula (a + bi) / (c + di) = ((ac + bd) / (c^2 + d^2)) + ((bc - ad) / (c^2 + d^2))i
        Complex operator/(const Complex& other) {
            double denominator = pow(other.real, 2) + pow(other.imaginary, 2); // calculates denominator
            double newReal = ((this->real * other.real) + (this->imaginary * other.imaginary)) / denominator; // calculates real part
            double newImaginary = ((this->imaginary * other.real) - (this->real * other.imaginary)) / denominator; // calculates imaginary part
            return Complex(newReal, newImaginary); // returns new Complex object with divided values
        }
        
        // Function to print out complex number in standard form (a + bi)
        void print() {
            cout << this->real << " + " << this->imaginary << "i" << endl;
        }
};
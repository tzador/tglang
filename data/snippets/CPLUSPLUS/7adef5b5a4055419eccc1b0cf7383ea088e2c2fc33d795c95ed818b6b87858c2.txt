// This code snippet takes in a vector of integers and sorts it using the bubble sort algorithm
// Time complexity: O(n^2)
// Space complexity: O(1)
// Input: vector of integers
// Output: sorted vector of integers

#include <iostream>
#include <vector>
using namespace std;

// Function for bubble sort
void bubbleSort(vector<int> &data) {
    int n = data.size(); // get length of the vector
    for (int i = 0; i < n-1; i++) { // loop through each element in the vector
        for (int j = 0; j < n-i-1; j++) { // loop through unsorted elements
            if (data[j] > data[j+1]) { // if current element is greater than the next element
                // swap the values
                int temp = data[j];
                data[j] = data[j+1];
                data[j+1] = temp;
            }
        }
    }
}

int main() {
    // initialize a vector of integers
    vector<int> nums = {5, 2, 9, 3, 1, 6, 4, 8, 7};

    // print unsorted vector
    cout << "Unsorted Vector: ";
    for (auto num : nums) {
        cout << num << " ";
    }
    cout << endl;

    // sort the vector using bubble sort
    bubbleSort(nums);

    // print sorted vector
    cout << "Sorted Vector: ";
    for (auto num : nums) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
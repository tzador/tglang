// This program creates an interactive Tic-Tac-Toe game
#include <iostream> // include necessary libraries
#include <string>

using namespace std;

// function to print the Tic-Tac-Toe board
void printBoard(char board[3][3])
{
    for (int i = 0; i < 3; i++) // loop through rows
    {
        for (int j = 0; j < 3; j++) // loop through columns
        {
            cout << board[i][j] << " "; // print each element with a space
            if (j != 2) cout << "| "; // add a vertical separator between columns
        }
        cout << endl; // go to next line after printing each row
        if (i != 2) cout << "----------" << endl; // add a horizontal separator between rows
    }
}

// function to check if the game is over
bool gameOver(char board[3][3], char player)
{
    // check for three in a row
    if (board[0][0] == player && board[0][1] == player && board[0][2] == player) return true;
    if (board[1][0] == player && board[1][1] == player && board[1][2] == player) return true;
    if (board[2][0] == player && board[2][1] == player && board[2][2] == player) return true;
    
    // check for three in a column
    if (board[0][0] == player && board[1][0] == player && board[2][0] == player) return true;
    if (board[0][1] == player && board[1][1] == player && board[2][1] == player) return true;
    if (board[0][2] == player && board[1][2] == player && board[2][2] == player) return true;
    
    // check for diagonal
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) return true;
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) return true;
    
    return false; // if no win conditions are met, the game is not over
}

int main()
{
    char board[3][3] = { // initialize the Tic-Tac-Toe board
        {' ', ' ', ' '},
        {' ', ' ', ' '},
        {' ', ' ', ' '}
    };
    
    bool game_over = false; // flag to keep track of game status
    int turn = 1; // variable to switch turns between players
    char player = 'X'; // starting player (can be changed to 'O')
    
    while(!game_over)
    {
        printBoard(board); // print the board at the beginning of each turn
        cout << "Player " << player << " is choosing a position." << endl;
        int row, col;
        do // loop to ask for user input until a valid position is entered
        {
            cout << "Enter the row and column numbers (1-3): ";
            cin >> row >> col;
        } while (row < 1 || row > 3 || col < 1 || col > 3 || board[row-1][col-1] != ' '); // conditions to check for valid position
        
        board[row-1][col-1] = player; // place player's symbol at the chosen position
        if (gameOver(board, player)) // check if the game is over
        {
            printBoard(board); // print the final board
            cout << "Player " << player << " wins!" << endl;
            game_over = true; // change the game_over flag to end the game
        }
        else if (turn == 9) // check if all positions have been filled (maximum 9 turns)
        {
            printBoard(board); // print the final board
            cout << "It's a tie!" << endl;
            game_over = true; // change the game_over flag to end the game
        }
        else // if game is not over and there are still positions available
        {
            turn++; // increment turn counter
            if (player == 'X') player = 'O'; // switch players
            else player = 'X';
        }
    }
    
    return 0;
}
/* This is a complex function that calculates the nth Fibonacci number
   Inputs: n - the index of the desired Fibonacci number
   Outputs: The nth Fibonacci number, or -1 for invalid input */
int fibonacci(int n) {
  if (n < 0) { // check for invalid input
    return -1; // return -1
  }
  else if (n == 0) {
    return 0; // return 0 for the 0th Fibonacci number
  }
  else if (n == 1) {
    return 1; // return 1 for the 1st and 2nd Fibonacci numbers
  }
  else {
    // initialize arrays to store previous 2 Fibonacci numbers
    int arr[2];
    arr[0] = 0; // set the 0th position to store the (n-2)th Fibonacci number
    arr[1] = 1; // set the 1st position to store the (n-1)th Fibonacci number
    for (int i = 2; i <= n; i++) {
      int newFib = arr[0] + arr[1]; // calculate the new Fibonacci number
      arr[0] = arr[1]; // update the array to store the previous 2 Fibonacci numbers
      arr[1] = newFib;
    }
    return arr[1]; // the final position of the array holds the nth Fibonacci number
  }
}
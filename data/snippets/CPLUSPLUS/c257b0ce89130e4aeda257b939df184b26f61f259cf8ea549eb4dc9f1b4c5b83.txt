// This code snippet generates a random binary tree using recursion

// Define a struct for the tree nodes
struct Node {
    int data;
    Node* left;
    Node* right;
};

// Function to generate a random binary tree
Node* generateTree(int size) {
    
    // Check for base case
    if (size <= 0) {
        return NULL;
    }
    
    // Create a new node with a random value
    Node* newNode = new Node; 
    newNode->data = rand(); 
    
    // Recursively generate left and right subtrees with decreasing size
    newNode->left = generateTree(size/2);
    newNode->right = generateTree(size/2);
    
    return newNode; 
}

// Driver code to test the function
int main() {
    // Initialize the random seed
    srand(time(NULL));
    
    // Generate a random binary tree with 10 nodes
    Node* root = generateTree(10);
    
    return 0;
}
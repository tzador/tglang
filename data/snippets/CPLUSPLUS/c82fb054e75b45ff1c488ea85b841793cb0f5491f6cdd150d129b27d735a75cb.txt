#include<iostream>

using namespace std;

// Class declaration
class ComplexNumber {
    private:
        float real; // private member variable for real part
        float imaginary; // private member variable for imaginary part
    public:

        // Constructor to initialize the complex number
        ComplexNumber(float real = 0.0, float imaginary = 0.0) {
            this->real = real;
            this->imaginary = imaginary;
        }

        // Overloading + operator to add two complex numbers
        ComplexNumber operator+(const ComplexNumber& c) {
            ComplexNumber temp;
            temp.real = this->real + c.real;
            temp.imaginary = this->imaginary + c.imaginary;
            return temp;
        }

        // Overloading * operator to multiply two complex numbers
        ComplexNumber operator*(const ComplexNumber& c) {
            ComplexNumber temp;
            temp.real = this->real * c.real - this->imaginary * c.imaginary;
            temp.imaginary = this->real * c.imaginary + this->imaginary * c.real;
            return temp;
        }

        // Function to print the complex number in the form of a + bi
        void print() {
            cout << this->real << " + " << this->imaginary << "i" << endl;
        }
};

int main() {

    // Creating two objects of class ComplexNumber
    ComplexNumber num1(5.0, 3.0);
    ComplexNumber num2(2.5, 6.0);

    // Adding and multiplying the two complex numbers using the overloaded operators
    ComplexNumber sum = num1 + num2;
    ComplexNumber product = num1 * num2;

    // Printing the sum and product of the two complex numbers
    cout << "Sum of the two complex numbers: ";
    sum.print();
    cout << "Product of the two complex numbers: ";
    product.print();

    return 0;
}
// Declaring a class
class ComplexNumber {
    private:
        double real;
        double imaginary;
    public:
        // Constructor
        ComplexNumber(double r, double i) {
            real = r;
            imaginary = i;
        }

        // Overloading + operator to add two ComplexNumber objects
        ComplexNumber operator +(ComplexNumber obj) {
            ComplexNumber temp;
            temp.real = real + obj.real;
            temp.imaginary = imaginary + obj.imaginary;
            return temp;
        }

        // Overloading * operator to multiply two ComplexNumber objects
        ComplexNumber operator *(ComplexNumber obj) {
            ComplexNumber temp;
            temp.real = (real * obj.real) - (imaginary * obj.imaginary);
            temp.imaginary = (real * obj.imaginary) + (imaginary * obj.real);
            return temp;
        }

        // Check if two ComplexNumber objects are equal
        bool operator ==(ComplexNumber obj) {
            if(real == obj.real && imaginary == obj.imaginary) {
                return true;
            }
            else {
                return false;
            }
        }

        // Printing the ComplexNumber object in the format "a + bi"
        void print() {
            cout << real << " + " << imaginary << "i" << endl;
        }
};

// Creating two ComplexNumber objects
ComplexNumber num1(3.5, 2.5);
ComplexNumber num2(2.7, 1.9);

// Adding the two objects using operator overloading
ComplexNumber result1 = num1 + num2;
result1.print(); // Output: 6.2 + 4.4i

// Multiplying the two objects using operator overloading
ComplexNumber result2 = num1 * num2;
result2.print(); // Output: 5.7 + 12.1i

// Checking if the two objects are equal using operator overloading
if(num1 == num2) {
    cout << "The objects are equal." << endl;
} else {
    cout << "The objects are not equal." << endl;
} // Output: The objects are not equal.
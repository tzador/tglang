#include <iostream>

// Declare a global constant named 'PI' with value of 3.14159
const double PI = 3.14159;

// Declare a class named 'Circle'
class Circle {
    // Declare private data member 'radius' of type double
    private:
        double radius;
    
    // Declare public constructor
    public:
        // Default constructor
        Circle() {
            radius = 0.0;
        }
        // Parameterized constructor with 'r' as parameter
        Circle(double r) {
            // Assign parameter 'r' to 'radius'
            radius = r;
        }
        
        // Declare public function named 'getArea' that takes no parameters and returns a double
        double getArea() {
            // Return the area of the circle using the formula pi*r^2
            return PI * radius * radius;
        }
        
        // Declare public function named 'getCircumference' that takes no parameters and returns a double
        double getCircumference() {
            // Return the circumference of the circle using the formula 2*pi*r
            return 2 * PI * radius;
        }
        
        // Define public destructor to release memory
        ~Circle() {
            std::cout << "Circle object destroyed" << std::endl;
        }
};

int main() {
    // Create an object of class Circle with radius 5
    Circle circle(5);
    
    // Print the area of the circle using the 'getArea' function
    std::cout << "Area of circle: " << circle.getArea() << std::endl;
    
    // Print the circumference of the circle using the 'getCircumference' function
    std::cout << "Circumference of circle: " << circle.getCircumference() << std::endl;
    
    // Destroy the circle object
    return 0;
}
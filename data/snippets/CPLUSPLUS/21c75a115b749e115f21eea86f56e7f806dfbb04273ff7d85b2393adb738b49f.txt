// This code snippet generates a dynamic array with user-specified capacity and performs various operations on it.

#include <iostream>

using namespace std;

// Class representing dynamic array
class DynamicArray {
  private:
	int* arr; // pointer to the array
	int capacity; // capacity of the array
	int size; // number of elements in the array
  
  public:
	// Constructor
	DynamicArray(int capacity) {
		this->capacity = capacity;
		size = 0;
		arr = new int[capacity];
	}
  
	// Destructor
	~DynamicArray() {
		delete[] arr;
	}
  
	// Function to add element to the array
	void add(int num) {
		// if array is full, double the capacity
		if (size == capacity) {
			capacity *= 2; 
			int* newArr = new int[capacity];
      
			// copy elements from old array to new array
			for (int i = 0; i < size; i++) {
				newArr[i] = arr[i];
			}
      
			// delete old array and point to new array
			delete[] arr;
			arr = newArr;
		}
    
		// add element to the end of the array and increment size
		arr[size] = num;
		size++;
	}
  
	// Function to remove element from the array
	void remove(int index) {
		// index out of bounds check
		if (index < 0 || index >= size) {
			cout << "Index out of bounds." << endl;
			return;
		}
    
		// shift elements to the left starting from index
		for (int i = index; i < size - 1; i++) {
			arr[i] = arr[i + 1];
		}
    
		// decrement size
		size--;
    
		// if size is less than half of capacity, halve the capacity
		if (size < capacity / 2) {
			capacity /= 2;
			int* newArr = new int[capacity];
      
			// copy elements from old array to new array
			for (int i = 0; i < size; i++) {
				newArr[i] = arr[i];
			}
      
			// delete old array and point to new array
			delete[] arr;
			arr = newArr;
		}
	}
  
	// Function to get element from the array
	int get(int index) {
		// index out of bounds check
		if (index < 0 || index >= size) {
			cout << "Index out of bounds." << endl;
			return -1;
		}
    
		return arr[index];
	}
  
	// Function to print the array
	void print() {
		for (int i = 0; i < size; i++) {
			cout << arr[i] << " ";
		}
		cout << endl;
	}
};

int main() {
	// initialize dynamic array with capacity of 5
	DynamicArray arr(5);
  
	// add elements to the array
	arr.add(1);
	arr.add(2);
	arr.add(3);
  
	// print array
	arr.print();
  
	// remove element with index 1
	arr.remove(1);
  
	// print array
	arr.print();
  
	// get element with index 0
	int element = arr.get(0);
	cout << "Element at index 0: " << element << endl;
  
	// output:
	// 1 2 3
	// 1 3
	// Element at index 0: 1
  
	return 0;
}
// Import libraries
#include <iostream>
#include <vector>

using namespace std;

// Define struct
struct Point
{
    int x;
    int y;

    // Constructor
    Point(int xCoor, int yCoor) : x(xCoor), y(yCoor){};

    // Function to calculate distance from origin
    double distance()
    {
        return sqrt(double(x * x + y * y));
    }
};

// Templated function to find average
template <typename T>
T average(vector<T> vec)
{
    T sum = 0;
    for (T t : vec)
    {
        sum += t;
    }
    return sum / vec.size();
}

int main()
{
    // Initialize vector of Points
    vector<Point> points = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}};

    // Calculate average distance from origin
    vector<double> dist;
    for (Point p : points)
    {
        dist.push_back(p.distance());
    }
    double avg = average(dist);

    // Print results
    cout << "Average distance from origin: " << avg << endl;

    return 0;
}
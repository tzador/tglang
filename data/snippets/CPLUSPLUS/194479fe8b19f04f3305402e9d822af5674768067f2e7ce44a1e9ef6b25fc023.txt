#include <iostream>

//Function: printMessage
//Parameters: none
//Return Type: void
//Description: Prints a message to the console
void printMessage() {
    std::cout << "Hello, world!" << std::endl;
}

//Class: Animal
//Description: Represents an animal with a name and age
class Animal {
private:
    std::string name;   //variable to store name of animal
    int age;            //variable to store age of animal
public:
    //Constructor
    //Parameters: animalName (string), animalAge (int)
    Animal(std::string animalName, int animalAge) {
        name = animalName;  //assign name parameter to name variable
        age = animalAge;    //assign age parameter to age variable
    }

    //Function: getName
    //Parameters: none
    //Return Type: string
    //Description: Returns the name of the animal
    std::string getName() {
        return name;
    }

    //Function: getAge
    //Parameters: none
    //Return Type: int
    //Description: Returns the age of the animal
    int getAge() {
        return age;
    }

    //Function: makeNoise
    //Parameters: none
    //Return Type: void
    //Description: Prints a noise to the console based on the type of animal
    virtual void makeNoise() = 0;    //pure virtual function, must be overridden by child classes
};

//Class: Dog
//Description: Represents a dog, inherits from Animal class
class Dog : public Animal {
public:
    //Constructor
    //Parameters: dogName (string), dogAge (int)
    Dog(std::string dogName, int dogAge) : Animal(dogName, dogAge) {}

    //Function: makeNoise
    //Parameters: none
    //Return Type: void
    //Description: Prints a bark to the console
    void makeNoise() override {
        std::cout << "Bark!" << std::endl;
    }
};

//Class: Cat
//Description: Represents a cat, inherits from Animal class
class Cat : public Animal {
public:
    //Constructor
    //Parameters: catName (string), catAge (int)
    Cat(std::string catName, int catAge) : Animal(catName, catAge) {}

    //Function: makeNoise
    //Parameters: none
    //Return Type: void
    //Description: Prints a meow to the console
    void makeNoise() override {
        std::cout << "Meow!" << std::endl;
    }
};

//Function: main
//Parameters: none
//Return Type: int
//Description: Entry point of the program
int main() {
    //Create a Dog object with name "Rex" and age 5
    Dog rex("Rex", 5);
    //Create a Cat object with name "Luna" and age 3
    Cat luna("Luna", 3);

    //Print their names and ages using the respective getters
    std::cout << rex.getName() << " is " << rex.getAge() << " years old." << std::endl;
    std::cout << luna.getName() << " is " << luna.getAge() << " years old." << std::endl;

    //Have them make their respective noises
    rex.makeNoise();
    luna.makeNoise();

    return 0;
}
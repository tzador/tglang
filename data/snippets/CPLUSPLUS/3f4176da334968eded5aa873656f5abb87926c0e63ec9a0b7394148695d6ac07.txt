#include <iostream>
using namespace std;

//Declaring a class named "Person"
class Person {
	private:
		string name;
		int age;
	//Encapsulation: making variables private and creating methods to access them
	public:
		//Constructors: used to initialize class objects with values
		Person() {
			name = "John Doe";
			age = 0;
		}
		Person(string n, int a) {
			name = n;
			age = a;
		}
		
		//Destructor: used to free up memory when class objects are destroyed
		~Person() {
			cout << "Object destroyed." << endl;
		}
		
		//Getter and Setter methods for name and age variables
		string getName() {
			return name;
		}
		void setName(string n) {
			name = n;
		}
		int getAge() {
			return age;
		}
		void setAge(int a) {
			age = a;
		}
		
		//Method to print out information about the Person
		void printInfo() {
			cout << "Name: " << name << endl;
			cout << "Age: " << age << endl;
		}
};

//Main function
int main() {
	//Creating a Person object
	Person person1;
	//Printing out default information
	cout << "Default Information: " << endl;
	person1.printInfo();
	
	//Setting new values for the Person object using setters
	person1.setName("Jane Smith");
	person1.setAge(25);
	
	//Printing updated info
	cout << "Updated Information: " << endl;
	person1.printInfo();
	
	//Creating a new Person object with parameterized constructor
	Person person2("Mike Johnson", 30);
	
	//Printing out info for second object
	cout << "Second Person Information: " << endl;
	person2.printInfo();
	
	//Destructing objects
	person1.~Person();
	person2.~Person();
	
	return 0;
}
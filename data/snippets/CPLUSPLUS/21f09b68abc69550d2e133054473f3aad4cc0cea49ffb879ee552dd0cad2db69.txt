//This is a multi-line comment in C++

//Declaring a function with return type int
int myFunc(int num1, int num2) 
{
  //Initializing a variable
  int result = 0;

  //Performing addition and assigning result to variable
  result = num1 + num2;

  //Returning the final result
  return result;
}

//Declaring a main function
int main()
{
  //Initializing two variables
  int x = 5;
  int y = 10;

  //Calling myFunc with the two variables as arguments and storing the return value in a new variable
  int sum = myFunc(x, y);

  //Printing the result
  printf("The sum of %d and %d is %d", x, y, sum);

  //Declaring a character array
  char str[] = "This is a string";

  //Printing the string
  printf("%s", str);

  //Declaring a pointer to an integer and assigning it a value
  int *ptr = &x;

  //Printing the value stored at the memory address pointed to by the pointer
  printf("%d", *ptr);

  //Looping through an array
  for (int i = 0; i < 5; i++)
  {
    printf("%d", i);
  }

  //Declaring a structure
  struct Person {
    char name[20];
    int age;
  };

  //Initializing and assigning values to a variable of type Person
  Person person = {"John", 25};

  //Accessing and printing the values
  printf("Name: %s", person.name);
  printf("Age: %d", person.age);

  //Declaring and initializing a multidimensional array
  int matrix[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

  //Printing the elements of the matrix
  for (int i = 0; i < 3; i++) 
  {
    for (int j = 0; j < 3; j++)
    {
      printf("%d ", matrix[i][j]);
    }
    printf("\n");
  }

  //Declaring a reference to an integer and assigning it the value of another integer
  int &ref = y;

  //Printing the values
  printf("y: %d", y); //y: 10
  printf("ref: %d", ref); //ref: 10

  //Changing the value of the reference variable
  ref = 20;

  //Printing the updated values
  printf("y: %d", y); //y: 20
  printf("ref: %d", ref); //ref: 20

  return 0;
}
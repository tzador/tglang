// This program uses Sieve of Eratosthenes algorithm to find all primes less than or equal to a given number
#include <iostream>
using namespace std;

// Function to find all primes less than or equal to given number
void findPrimes(int num) 
{ 
    // Create a boolean array "prime[0..num]" and initialize all entries it as true
    bool prime[num+1]; 
    memset(prime, true, sizeof(prime)); 

    // Loop through all numbers from 2 to num 
    for (int p = 2; p*p <= num; p++) 
    { 
        // If prime[p] is true, then it is a prime number 
        if (prime[p] == true) 
        { 
            // Update all multiples of p greater than or equal to p*p to be false 
            for (int i = p*p; i <= num; i += p) 
                prime[i] = false; 
        } 
    } 

    // Print all prime numbers 
    for (int p = 2; p <= num; p++) 
        if (prime[p]) 
            cout << p << " ";
} 

// Driver program to test above function 
int main() 
{ 
	// Input a number 
    int n;
	cout << "Enter a number: ";
	cin >> n;

	// Call the function to find all primes less than or equal to the given number
    findPrimes(n); 

	return 0; 
}
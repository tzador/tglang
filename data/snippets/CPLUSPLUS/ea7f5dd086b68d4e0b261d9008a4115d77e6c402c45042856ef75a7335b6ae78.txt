// This code snippet uses a class called "BankAccount" to create and manage bank accounts
class BankAccount {
private:
    int accountNumber; // This is the account number of the bank account
    double balance; // This is the current balance of the bank account
    string ownerName; // This is the name of the owner of the bank account

public:
    // Constructor method that takes in the owner's name and initializes a new account with a randomly generated account number and a starting balance of $1000
    BankAccount(string name){
        ownerName = name;
        accountNumber = rand()%10000; 
        balance = 1000;
    }

    // Method that returns the current balance of the bank account
    double getBalance(){
        return balance;
    }

    // Method that allows a user to deposit money into the bank account and updates the balance accordingly
    void deposit(double amount){
        balance += amount;
    }

    // Method that allows a user to withdraw money from the bank account if there are sufficient funds available
    void withdraw(double amount){
        // Checks if the amount to be withdrawn is greater than the current balance
        if(amount > balance){
            // Outputs an error message if there are insufficient funds
            cout << "Insufficient funds in account " << accountNumber << endl;
        } else{
            // Otherwise, updates the balance and outputs a success message
            balance -= amount;
            cout << "$" << amount << " successfully withdrawn from account " << accountNumber << endl;
        }
    }

    // Method that allows a user to transfer money from one bank account to another if there are sufficient funds available
    void transfer(double amount, BankAccount& account){
        // Checks if the amount to be transferred is greater than the currentbalance
        if(amount > balance){
            // Outputs an error message if there are insufficient funds
            cout << "Insufficient funds in account " << accountNumber << endl;
        } else{
            // Otherwise, updates the balance of both accounts and outputs a success message
            balance -= amount;
            account.balance += amount;
            cout << "$" << amount << " successfully transferred from account " << accountNumber << " to account " << account.accountNumber << endl;
        }
    }
};

// Sample code showing how a user can create and use a BankAccount object
int main(){
    // Creates a new BankAccount object named "John's Account"
    BankAccount account("John's Account");

    // Retrieves and outputs the current balance of the account
    cout << "Current balance: $" << account.getBalance() << endl;

    // Deposits $500 into the account and retrieves and outputs the updated balance
    account.deposit(500);
    cout << "New balance after deposit: $" << account.getBalance() << endl;

    // Withdraws $200 from the account and retrieves and outputs the updated balance
    account.withdraw(200);
    cout << "New balance after withdrawal: $" << account.getBalance() << endl;

    // Creates a new BankAccount object named "Jane's Account"
    BankAccount account2("Jane's Account");

    // Transfers $100 from "John's Account" to "Jane's Account" and retrieves and outputs the updated balances of both accounts
    account.transfer(100, account2);
    cout << "New balance of John's Account after transfer: $" << account.getBalance() << endl;
    cout << "New balance of Jane's Account after transfer: $" << account2.getBalance() << endl;

    return 0;
}
#include <iostream> // include iostream library
using namespace std;

// define a template class with two data types
template <class T, class U>
class Pair {
private:
    T first; // private data member 'first', of type T
    U second; // private data member 'second', of type U
public:
    // constructor with two parameters, of type T and U respectively
    Pair(T f, U s) {
        first = f; // assign first parameter to private data member 'first'
        second = s; // assign second parameter to private data member 'second'
    }
    // public function that returns the greater of the two data members
    T getGreater() {
        if (first < second) { // if first data member is less than the second
            return second; // return second data member
        }
        else { // else (if first data member is greater than or equal to second)
            return first; // return first data member
        }
    }
};

int main() {
    // create a Pair object with String as first data type and int as second data type
    Pair<String, int> myPair("Hello", 5); 
    // call the getGreater function of myPair and store the result in a variable
    int result = myPair.getGreater(); 
    // output the result to the console
    cout << result << endl; 
    // output: 5
    return 0;
}
// Declaring a class named "Person"
class Person {
    private: // Private members of the class
        string name;
        int age;
    public: // Public members of the class
        // Constructor with default values for parameters
        Person(string n = "John Doe", int a = 30) {
            name = n;
            age = a;
        }
        // Method to display the information of the person
        void display() {
            cout << "Name: " << name << endl;
            cout << "Age: " << age << endl;
        }
};

// Declaring a derived class named "Student" which inherits from "Person"
class Student : public Person {
    private: // Private members of the derived class
        int studentId;
    public: // Public members of the derived class
        // Constructor with default values for parameters
        Student(string n = "Jane Smith", int a = 25, int s = 123456) : Person(n, a) {
            studentId = s;
        }
        // Method to display the information of the student
        void display() {
            // First, call the base class display method to display the person's information
            Person::display();
            // Then, display the student's information
            cout << "Student ID: " << studentId << endl;
        }
};

// Main function to test the above classes
int main() {
    // Create an object of Person using default constructor
    Person person;
    // Display the information using the display method
    person.display();

    // Create an object of Student using constructor with parameters
    Student student("Jack Smith", 20, 654321);
    // Display the information using the display method
    student.display();
    
    return 0;
}

/* 
Expected Output:
Name: John Doe
Age: 30
Name: Jack Smith
Age: 20
Student ID: 654321
*/
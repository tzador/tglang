// This is a header file for a custom math library
// It contains various mathematical functions

#ifndef MATH_LIB_H // Include guard to prevent duplicate inclusion
#define MATH_LIB_H

#include <iostream> // Include for basic I/O operations
#include <cmath> // Include for mathematical functions

// Function to find the factorial of a number
// Takes an integer as parameter and returns its factorial
int factorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

// Function to find the absolute value of a number
// Takes a double as parameter and returns its absolute value
double abs(double num) {
    if (num < 0) {
        return -num;
    } else {
        return num;
    }
}

// Function to find the square root of a number using Newton's method
// Takes a double as parameter and returns its square root
double sqrt(double num) {
    double guess = 1.0; // Initial guess for square root
    double error = 0.0001; // Desired error for accuracy
    while (abs(num - guess * guess) > error) {
        guess = (guess + num / guess) / 2.0;
    }
    return guess;
}

// Function to calculate the power of a number
// Takes a double as base and an integer as exponent and returns the result
double pow(double base, int exp) {
    double result = 1.0;
    for (int i = 0; i < exp; i++) {
        result *= base;
    }
    return result;
}

#endif // End of include guard
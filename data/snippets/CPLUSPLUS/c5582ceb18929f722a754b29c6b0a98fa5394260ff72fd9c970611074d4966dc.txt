#include <iostream> //include iostream library

using namespace std; //use standard namespace

void merge(int arr[], int l, int m, int r){ //create function to merge arrays
    int n1 = m - l + 1; //calculate length of first subarray
    int n2 = r - m; //calculate length of second subarray

    int L[n1], R[n2]; //create temporary arrays

    for (int i = 0; i < n1; i++) //copy first subarray to temporary array
        L[i] = arr[l + i];
    for (int j = 0; j < n2; j++) //copy second subarray to temporary array
        R[j] = arr[m + 1 + j];

    int i = 0, j = 0, k = l; //initialize variables for merging

    while (i < n1 && j < n2){ //loop until one of the subarrays is fully stored in sorted order
        if (L[i] <= R[j]){ //compare elements of the two subarrays and store smallest to final merged array
            arr[k] = L[i]; 
            i++; 
        } else {
            arr[k] = R[j];
            j++;
        }
        k++; //move to next position in final merged array
    }

    while (i < n1){ //copy remaining elements of first subarray to final merged array
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2){ //copy remaining elements of second subarray to final merged array
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int l, int r){ //function for merge sort
    if (l < r){ //only divide array if it has more than one element
        int m = l + (r - l) / 2; //calculate middle index
        mergeSort(arr, l, m); //recursive call to sort first half of array
        mergeSort(arr, m + 1, r); //recursive call to sort second half of array
        merge(arr, l, m, r); //merge the two sorted halves
    }
}

int main(){ //main function
    int arr[] = {38, 27, 43, 3, 9}; //example unsorted array
    int arr_size = sizeof(arr) / sizeof(arr[0]); //calculate array size

    cout << "Unsorted array: "; //print initial unsorted array
    for (int i = 0; i < arr_size; i++)
        cout << arr[i] << " ";

    mergeSort(arr, 0, arr_size - 1); //call merge sort function

    cout << "\nSorted array: "; //print sorted array
    for (int i = 0; i < arr_size; i++)
        cout << arr[i] << " ";

    return 0; //end program
}
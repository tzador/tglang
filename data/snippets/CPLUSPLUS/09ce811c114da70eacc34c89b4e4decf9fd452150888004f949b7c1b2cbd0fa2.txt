// This program finds the maximum element in an array using divide and conquer approach
#include <iostream> 
using namespace std;

// Function to find the maximum number in an array using divide and conquer approach
int findMax(int arr[], int low, int high) { 
    if (low == high) // Base case: array contains only 1 element 
        return arr[low]; 

    else if (high - low == 1) // Base case: array contains only 2 elements 
        return max(arr[low], arr[high]); 

    else { 
        int mid = (low + high) / 2; 
        int maxLeft = findMax(arr, low, mid); // Recursive call to find maximum in left subarray 
        int maxRight = findMax(arr, mid + 1, high); // Recursive call to find maximum in right subarray 
        return max(maxLeft, maxRight); 
    } 
} 

// Main function to test the above function
int main() { 
    int arr[] = { 5, 7, 2, 9, 3, 1, 6 }; 
    int n = sizeof(arr) / sizeof(arr[0]); 
    int max = findMax(arr, 0, n - 1); 
    cout << "Maximum element in the array is " << max << endl; 
    return 0; 
}
#include <iostream> //include iostream library
#include <vector> //include vector library
using namespace std; //use standard namespace

//create a function named merge_sort with vector parameter
vector<int> merge_sort(vector<int> arr) {

	//check if vector has only one element
	if (arr.size() == 1) {
		return arr; //return vector as it is
	}

	//calculate middle index of vector
	int mid = arr.size() / 2;

	//create left and right vectors to store divided elements
	vector<int> left, right;

	//divide vector into left and right vectors
	for (int i = 0; i < mid; i++) {
		left.push_back(arr[i]); //store elements from index 0 to mid-1 in left vector
	}
	for (int i = mid; i < arr.size(); i++) {
		right.push_back(arr[i]); //store elements from index mid to end in right vector
	}

	//recursively call merge_sort function on left and right vectors and store the returned vectors
	left = merge_sort(left); 
	right = merge_sort(right); 

	//create a new vector to store sorted elements
	vector<int> sorted;

	//initialize index variables
	int i = 0, j = 0, k = 0;

	//while both left and right vectors have elements
	while (i < left.size() && j < right.size()) {
		if (left[i] <= right[j]) { //if element in left vector is smaller
			sorted.push_back(left[i]); //push it into sorted vector
			i++; //increment index of left vector
		}
		else { //if element in right vector is smaller
			sorted.push_back(right[j]); //push it into sorted vector
			j++; //increment index of right vector
		}
	}

	//push remaining elements in left and right vectors (if any) into sorted vector
	while (i < left.size()) {
		sorted.push_back(left[i]); 
		i++;
	}
	while (j < right.size()) {
		sorted.push_back(right[j]); 
		j++;
	}

	//return sorted vector
	return sorted;
}

//main function
int main() {

	//ask user for number of elements in vector
	int n;
	cout << "Enter number of elements: ";
	cin >> n;

	//create a vector to store input elements
	vector<int> arr;

	//ask user for elements to be stored in vector
	cout << "Enter " << n << " elements:\n";
	for (int i = 0; i < n; i++) {
		int element;
		cin >> element;
		arr.push_back(element);
	}

	//call merge_sort function on input vector and store the sorted vector
	vector<int> sorted = merge_sort(arr);

	//print sorted vector
	cout << "Sorted vector: [";
	for (int i = 0; i < sorted.size(); i++) {
		cout << sorted[i] << " ";
	}
	cout << "]\n";

	return 0;
}
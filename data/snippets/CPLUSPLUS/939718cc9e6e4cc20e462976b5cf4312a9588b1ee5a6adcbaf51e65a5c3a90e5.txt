// This code snippet generates a random encryption key of length 16 characters
#include <iostream>
#include <string>
#include <ctime>

// Function to generate a random encryption key
// Uses current time as seed for srand function
std::string generateKey()
{
    // Array of characters for key
    char keyArr[16];

    // Loop to generate random characters for key using ASCII values
    for (int i = 0; i < 16; i++)
    {
        // Generates a random number between 0 and 25
        int randNum = rand() % 26;

        // Adds 97 to the random number to get lowercase alphabet ASCII value
        randNum += 97;

        // Converts ASCII value to corresponding character and adds it to array
        keyArr[i] = (char) randNum;
    }

    // Converts array to string for final key output
    std::string finalKey(keyArr);

    // Returns generated encryption key
    return finalKey;
}

int main()
{
    // Sets seed for srand function to current time
    // Ensures that function generates different keys each time program is run
    srand(time(0));

    // Calls generateKey function and saves output to variable
    std::string key = generateKey();

    // Outputs generated encryption key
    std::cout << "Generated Encryption Key: " << key << std::endl;

    return 0;
}
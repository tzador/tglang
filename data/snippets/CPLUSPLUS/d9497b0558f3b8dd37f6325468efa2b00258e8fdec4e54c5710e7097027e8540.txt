// This program implements a sorting algorithm
#include <iostream>
using namespace std;

// Function to perform bubble sort
void bubbleSort(int arr[], int n)
{
    // Variable to store temporary value
    int temp;

    // Loop through array elements
    for(int i = 0; i < n - 1; i++)
    {
        // Flag to keep track if swapping has occurred or not
        bool swapped = false;

        // Loop through remaining unsorted elements
        for(int j = 0; j < n - i - 1; j++)
        {
            // Check if current element is greater than next element
            if(arr[j] > arr[j + 1])
            {
                // Swap the elements
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;

                // Update flag to true indicating swapping has occurred
                swapped = true;
            }
        }

        // If no swapping has occurred, break out of loop as array is already sorted
        if(!swapped)
            break;
    }
}

// Function to print array elements
void printArray(int arr[], int n)
{
    // Loop through array elements and print them
    for(int i = 0; i < n; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Main function
int main()
{
    // Array to be sorted
    int arr[] = { 14, 53, 2, 9, 17, 5};

    // Size of array
    int n = sizeof(arr) / sizeof(arr[0]);

    // Print unsorted array
    cout << "Unsorted Array: ";
    printArray(arr, n);

    // Perform bubble sort
    bubbleSort(arr, n);

    // Print sorted array
    cout << "Sorted Array: ";
    printArray(arr, n);

    return 0;
}
#include <iostream>
using namespace std;

class Car{
    // Private variables
    private:
        string make;
        string model;
        int year;
    // Public variables and functions
    public:
        // Default constructor
        Car();
        // Parameterized constructor
        Car(string make, string model, int year);
        // Member function to print car details
        void printCarDetails();
        // Accessor functions to get/set private variables
        string getMake();
        void setMake(string make);
        string getModel();
        void setModel(string model);
        int getYear();
        void setYear(int year);
};

// Default constructor implementation
Car::Car(){
    make = "";
    model = "";
    year = 0;
}

// Parameterized constructor implementation
Car::Car(string make, string model, int year){
    this->make = make;
    this->model = model;
    this->year = year;
}

// Member function to print car details
void Car::printCarDetails(){
    cout << "Make: " << make << endl;
    cout << "Model: " << model << endl;
    cout << "Year: " << year << endl;
}

// Accessor function to get private variable 'make'
string Car::getMake(){
    return make;
}

// Accessor function to set private variable 'make'
void Car::setMake(string make){
    this->make = make;
}

// Accessor function to get private variable 'model'
string Car::getModel(){
    return model;
}

// Accessor function to set private variable 'model'
void Car::setModel(string model){
    this->model = model;
}

// Accessor function to get private variable 'year'
int Car::getYear(){
    return year;
}

// Accessor function to set private variable 'year'
void Car::setYear(int year){
    this->year = year;
}

int main(){
    // Create an instance of Car using default constructor
    Car defaultCar;
    // Set values using accessor functions
    defaultCar.setMake("Toyota");
    defaultCar.setModel("Camry");
    defaultCar.setYear(2015);
    // Print car details
    defaultCar.printCarDetails();

    // Create an instance of Car using parameterized constructor
    Car customCar("Ford", "Mustang", 2020);
    // Print car details
    customCar.printCarDetails();

    return 0;
}
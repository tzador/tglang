/* This program performs Merge Sort on an array of integers */

#include <iostream>
using namespace std;

// Function to merge two subarrays of arr. 
// First subarray is arr[l..m] 
// Second subarray is arr[m+1..r] 
void merge(int arr[], int l, int m, int r) 
{ 
    int n1 = m - l + 1; // Length of first subarray
    int n2 = r - m; // Length of second subarray 
  
    // Create temp arrays  
    int L[n1], R[n2]; 
  
    // Copy data to temp arrays L[] and R[] 
    for (int i = 0; i < n1; i++) 
        L[i] = arr[l + i]; 
    for (int j = 0; j < n2; j++) 
        R[j] = arr[m + 1 + j]; 
  
    // Merge the temp arrays back into arr[l..r]
    int i = 0; // Index of first subarray 
    int j = 0; // Index of second subarray 
    int k = l; // Index of merged subarray 
    while (i < n1 && j < n2) { 
        if (L[i] <= R[j]) { 
            arr[k] = L[i]; 
            i++; 
        } 
        else { 
            arr[k] = R[j]; 
            j++; 
        } 
        k++; 
    } 
  
    // Copy the remaining elements of L[], if any 
    while (i < n1) { 
        arr[k] = L[i]; 
        i++; 
        k++; 
    } 
  
    // Copy the remaining elements of R[], if any 
    while (j < n2) { 
        arr[k] = R[j]; 
        j++; 
        k++; 
    } 
} 
  
// Main function to recursively divide and conquer the array using merge() function
void mergeSort(int arr[], int l, int r) 
{ 
    if (l < r) { 
        int m = l + (r - l) / 2; // Same as (l+r)/2, avoids overflow 
        mergeSort(arr, l, m); // Sort first half 
        mergeSort(arr, m + 1, r); // Sort second half 
        merge(arr, l, m, r); // Merge sorted halves 
    } 
} 
  
// Function to print an array
void printArray(int arr[], int size) 
{ 
    for (int i = 0; i < size; i++) 
        cout << arr[i] << " "; 
    cout << endl; 
} 
  
// Main function
int main() 
{ 
    int arr[] = { 38, 27, 43, 3, 9, 82, 10 }; 
    int size = sizeof(arr) / sizeof(arr[0]); 
  
    cout << "Given array is \n"; 
    printArray(arr, size); 
  
    mergeSort(arr, 0, size - 1); 
  
    cout << "\nSorted array is \n"; 
    printArray(arr, size); 
    return 0; 
}
/* This code snippet is a simple implementation of the quicksort algorithm in C++. 
 * It takes in an array of integers and sorts them in ascending order.
 * The quicksort algorithm works by splitting the array into two subarrays and recursively sorting them.
 */

#include <iostream> 

// Function to swap two elements
void swap(int* a, int* b) 
{ 
    int temp = *a; 
    *a = *b; 
    *b = temp; 
} 

// Function to partition the array and return the pivot index
int partition(int arr[], int low, int high) 
{ 
    // Select the pivot element (in this case, it is the last element)
    int pivot = arr[high]; 
    
    // Index of smaller element 
    int i = (low - 1); 
  
    // Loop through the array and swap elements if they are smaller than the pivot
    for (int j = low; j <= high - 1; j++) 
    { 
        // If current element is smaller than or equal to pivot 
        if (arr[j] <= pivot) 
        { 
            // Increment index of smaller element 
            i++; 
            // Swap current element with index of smaller element
            swap(&arr[i], &arr[j]); 
        } 
    } 
    // Swap the pivot element with the index of smaller element 
    swap(&arr[i + 1], &arr[high]); 
    // Return the index of pivot element
    return (i + 1); 
} 

// Function to implement quicksort algorithm
void quicksort(int arr[], int low, int high) 
{ 
    if (low < high) 
    { 
        // Get the pivot index 
        int pivot_index = partition(arr, low, high); 
  
        // Recursively sort the subarrays 
        quicksort(arr, low, pivot_index - 1); 
        quicksort(arr, pivot_index + 1, high); 
    } 
} 

// Driver code to test the quicksort algorithm 
int main() 
{ 
    // Input array (can also be taken from user)
    int arr[] = { 5, 2, 7, 1, 9, 3 }; 
    
    // Calculate the size of the array
    int size = sizeof(arr) / sizeof(arr[0]); 
    
    // Print the unsorted array 
    std::cout << "Unsorted array:" << std::endl;
    for (int i = 0; i < size; i++)
        std::cout << arr[i] << " "; 
    
    // Sort the array using quicksort
    quicksort(arr, 0, size - 1); 
    
    // Print the sorted array 
    std::cout << std::endl << "Sorted array in ascending order:" << std::endl;
    for (int i = 0; i < size; i++) 
        std::cout << arr[i] << " "; 
    return 0; 
}
#include <iostream>
using namespace std;

// creating a class named ComplexNumber
class ComplexNumber {
private:
  double real;
  double imag;

public:
  // constructor with default values
  ComplexNumber(double r = 0.0, double i = 0.0) {
    real = r;
    imag = i;
  }

  // copy constructor
  ComplexNumber(const ComplexNumber& comp) {
    real = comp.real;
    imag = comp.imag;
  }

  // overload operator+
  ComplexNumber operator+(const ComplexNumber& comp) {
    ComplexNumber res;
    res.real = real + comp.real;
    res.imag = imag + comp.imag;
    return res;
  }

  // overload operator-
  ComplexNumber operator-(const ComplexNumber& comp) {
    ComplexNumber res;
    res.real = real - comp.real;
    res.imag = imag - comp.imag;
    return res;
  }

  // overload operator*
  ComplexNumber operator*(const ComplexNumber& comp) {
    ComplexNumber res;
    res.real = real * comp.real - imag * comp.imag;
    res.imag = real * comp.imag + imag * comp.real;
    return res;
  }

  // overload operator/
  ComplexNumber operator/(const ComplexNumber& comp) {
    ComplexNumber res;
    double temp = comp.real * comp.real + comp.imag * comp.imag;
    res.real = (real * comp.real + imag * comp.imag) / temp;
    res.imag = (imag * comp.real - real * comp.imag) / temp;
    return res;
  }

  // overload operator==
  bool operator==(const ComplexNumber& comp) {
    if (real == comp.real && imag == comp.imag) {
      return true;
    }
    return false;
  }

  // overload operator!=
  bool operator!=(const ComplexNumber& comp) {
    if (real != comp.real || imag != comp.imag) {
      return true;
    }
    return false;
  }

  // method to display the complex number
  void display() {
    cout << real << " + " << imag << "i" << endl;
  }
};

int main() {
  // creating two instances of ComplexNumber
  ComplexNumber num1(2.5, 3.0);
  ComplexNumber num2(1.5, 4.0);

  // finding sum, difference and product
  ComplexNumber sum = num1 + num2;
  ComplexNumber diff = num1 - num2;
  ComplexNumber prod = num1 * num2;

  // displaying results
  cout << "Sum: ";
  sum.display();
  cout << "Difference: ";
  diff.display();
  cout << "Product: ";
  prod.display();

  // checking equality and inequality
  if (num1 == num2) {
    cout << "Equal" << endl;
  } else {
    cout << "Not Equal" << endl;
  }
  if (num1 != num2) {
    cout << "Not Equal" << endl;
  } else {
    cout << "Equal" << endl;
  }

  return 0;
}
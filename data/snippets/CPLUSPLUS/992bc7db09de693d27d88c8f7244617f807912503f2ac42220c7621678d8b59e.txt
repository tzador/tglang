// This is a complex function that takes in two integers and returns the larger of the two
int max(int a, int b)
{
    // First, we check if a is larger than b
    if(a > b)
    {
        // If it is, we return a
        return a;
    }
    else
    {
        // If not, we return b
        return b;
    }
}

// This is a class called Person
class Person
{
private:
    // Private member variables
    int age;
    string name;

public:
    // Public member functions

    // Constructor that takes in age and name parameters
    Person(int age, string name)
    {
        // Assign age and name to the respective member variables
        this->age = age;
        this->name = name;
    }

    // Getter function for age
    int getAge()
    {
        // Return the age of the person
        return this->age;
    }

    // Setter function for age
    void setAge(int age)
    {
        // Assign new age value to age member variable
        this->age = age;
    }

    // Getter function for name
    string getName()
    {
        // Return the name of the person
        return this->name;
    }

    // Setter function for name
    void setName(string name)
    {
        // Assign new name value to name member variable
        this->name = name;
    }
};

// This is a function that takes in a Person object and returns a string with their details
string getPersonDetails(Person person)
{
    // Declare a string variable to hold the details
    string details;

    // Add the person's name to the details string
    details += "Name: " + person.getName() + "\n";

    // Add the person's age to the details string
    details += "Age: " + to_string(person.getAge()) + "\n";

    // Return the details string
    return details;
}

// This is the main function
int main()
{
    // Create two Person objects with different age and name values
    Person person1(25, "John");
    Person person2(30, "Jane");

    // Call the getPersonDetails function on each person object and print the results
    cout << getPersonDetails(person1) << endl;
    cout << getPersonDetails(person2) << endl;

    // Create a third Person object with the same name as person1 but with a different age
    Person person3(40, person1.getName());

    // Set the age of person3 to be the same as person2
    person3.setAge(person2.getAge());

    // Print the details of person3
    cout << getPersonDetails(person3) << endl;

    return 0;
}
#include <iostream> // including the input/output library
#include <string> // including the string library

using namespace std; // using the standard namespace

// defining a class named MyComplex
class MyComplex {
private:
    double real; // declaring a private attribute 'real' of type double
    double img; // declaring a private attribute 'img' of type double

public:
    // constructor with default parameters
    MyComplex(double r = 0.0, double i = 0.0) { 
        real = r; // setting the value of 'real' attribute to the parameter 'r'
        img = i; // setting the value of 'img' attribute to the parameter 'i'
    }

    // declaring a friend function named 'operator+'
    friend MyComplex operator+(const MyComplex& comp1, const MyComplex& comp2);

    // declaring a friend function named 'operator*'
    friend MyComplex operator*(const MyComplex& comp1, const MyComplex& comp2);

    // declaring a function named 'print'
    void print() {
        cout << real << " + " << img << "i" << endl; // printing the value of 'real' attribute and 'img' attribute in the format 'real + imagi'
    }
};

// definition of the friend function 'operator+'
MyComplex operator+(const MyComplex& comp1, const MyComplex& comp2) {
    // creating a new MyComplex object with the sum of the real and imaginary parts of the two complex numbers
    MyComplex result(comp1.real + comp2.real, comp1.img + comp2.img); 
    return result; // returning the result
}

// definition of the friend function 'operator*'
MyComplex operator*(const MyComplex& comp1, const MyComplex& comp2) {
    // creating a new MyComplex object with the product of the real and imaginary parts of the two complex numbers
    MyComplex result((comp1.real * comp2.real) - (comp1.img * comp2.img), (comp1.real * comp2.img) + (comp1.img * comp2.real)); 
    return result; // returning the result
}

int main() {
    // creating three instances of MyComplex
    MyComplex comp1(5.2, 3.7); // with values (5.2, 3.7)
    MyComplex comp2(2.1, 4.9); // with values (2.1, 4.9)
    MyComplex comp3; // with default values (0.0, 0.0)

    // assigning the sum of comp1 and comp2 to comp3
    comp3 = comp1 + comp2;

    // printing the initial values and the sum
    cout << "Comp1: ";
    comp1.print();

    cout << "Comp2: ";
    comp2.print();

    cout << "Comp3 (sum): ";
    comp3.print();

    // assigning the product of comp1 and comp2 to comp3
    comp3 = comp1 * comp2;

    // printing the initial values and the product
    cout << "Comp1: ";
    comp1.print();

    cout << "Comp2: ";
    comp2.print();

    cout << "Comp3 (product): ";
    comp3.print();

    return 0; // exiting the program
}
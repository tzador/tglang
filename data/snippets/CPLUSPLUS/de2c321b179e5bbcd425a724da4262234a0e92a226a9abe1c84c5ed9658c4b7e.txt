#include <iostream>

//This is a function template that implements a binary search algorithm
template<typename T> 
int binarySearch(T arr[], int start, int end, T key) 
{ 
    //This line calculates the middle index
	int mid = (start + end) / 2; 

    //If the middle element is equal to the key, return its index
	if (arr[mid] == key) 
		return mid; 

	//If the key is greater than the middle element, call the function again with the right half of the array
	if (arr[mid] < key) 
		return binarySearch(arr, mid + 1, end, key); 

    //If the key is less than the middle element, call the function again with the left half of the array
	else
		return binarySearch(arr, start, mid - 1, key); 
} 

int main() 
{ 
    int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 }; 
    int size = sizeof(arr) / sizeof(arr[0]); 
    
    //This line prompts the user to input the key that they want to search for
    int key;
    std::cout << "Enter a number to search for: ";
    std::cin >> key;
    
    //This line calls the binarySearch function, passing in the array, starting index, ending index, and the key
    int result = binarySearch(arr, 0, size - 1, key);
    
    //If the result is -1, the key was not found
    if (result == -1) {
        std::cout << "Key not found";
    }
    //If the result is not -1, the key was found and its index is printed
    else {
        std::cout << "Key found at index " << result;
    }
    
	return 0; 
}
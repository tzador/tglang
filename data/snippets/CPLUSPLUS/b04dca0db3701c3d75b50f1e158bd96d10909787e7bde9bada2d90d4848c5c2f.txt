// A function that calculates the n-th Fibonacci number
// using recursion and dynamic programming techniques
int fib(int n)
{
    // create a cache to store previously calculated Fibonacci numbers
    // initialize the cache with the first two Fibonacci numbers
    static vector<int> cache = {0, 1};

    // check if the n-th Fibonacci number is already in the cache
    if (cache.size() > n)
    {
        // if it is, return the cached value
        return cache[n];
    }
    else
    {
        // if not, calculate the n-th Fibonacci number using recursion
        // and store the result in the cache
        int result = fib(n-1) + fib(n-2);
        cache.push_back(result);
        return result;
    }
}

// Example usage:
// calculate the 10th Fibonacci number
int n = 10;
int result = fib(n); // result will be 55
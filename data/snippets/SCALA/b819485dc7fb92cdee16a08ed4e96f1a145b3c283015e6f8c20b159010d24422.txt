/* Define a case class to represent a Book with attributes for title, author, and price */
case class Book(title: String, author: String, price: Double)

/* Create a list of books */
val books = List(
  Book("Pride and Prejudice", "Jane Austen", 12.99),
  Book("To Kill a Mockingbird", "Harper Lee", 10.99),
  Book("The Great Gatsby", "F. Scott Fitzgerald", 14.99),
  Book("1984", "George Orwell", 11.99)
)

/* Define a function to calculate the total price of all books in a list */
def getTotalPrice(books: List[Book]): Double = {
  /* Use recursion to iterate through the list and add up all the prices */
  def loop(books: List[Book], acc: Double): Double = {
    /* Check if the list is empty, if so return the accumulated total */
    if (books.isEmpty)
      acc
    else {
      /* Otherwise, add the price of the current book to the accumulated total
      and recursively call the function with the remaining books in the list */
      loop(books.tail, acc + books.head.price)
    }
  }
  /* Call the loop function with the initial accumulated total of 0.0 */
  loop(books, 0.0)
}

/* Call the function and print the total price */
val totalPrice = getTotalPrice(books)
println(s"The total price of all books is $$$totalPrice")
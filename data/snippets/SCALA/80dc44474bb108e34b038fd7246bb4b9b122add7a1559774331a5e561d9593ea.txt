object ComplexNumbers {
  
  // This class represents a complex number with a real and imaginary part
  class Complex(real: Double, imaginary: Double) {
    
    // Overriding the addition operator for complex numbers
    def +(that: Complex): Complex =
      new Complex(this.real + that.real, this.imaginary + that.imaginary)
    
    // Overriding the subtraction operator for complex numbers
    def -(that: Complex): Complex =
      new Complex(this.real - that.real, this.imaginary - that.imaginary)
    
    // Overriding the multiplication operator for complex numbers
    def *(that: Complex): Complex =
      new Complex(this.real * that.real - this.imaginary * that.imaginary,
                  this.real * that.imaginary + this.imaginary * that.real)
    
    // Overriding the division operator for complex numbers
    def /(that: Complex): Complex = {
      val denominator = that.real * that.real + that.imaginary * that.imaginary
      val numeratorReal = this.real * that.real + this.imaginary * that.imaginary
      val numeratorImaginary = this.imaginary * that.real - this.real * that.imaginary
      new Complex(numeratorReal / denominator, numeratorImaginary / denominator)
    }
    
    // Overriding the modulus operator for complex numbers
    def %(that: Complex): Double = {
      math.sqrt(this.real * this.real + this.imaginary * this.imaginary)
    }
    
    // Overriding the equality operator for complex numbers
    override def equals(other: Any): Boolean = other match {
      case that: Complex => this.real == that.real && this.imaginary == that.imaginary
      case _ => false
    }
    
    // Overriding the toString method to print a complex number
    override def toString: String = s"$real + ${imaginary}i"
  }

  def main(args: Array[String]): Unit = {
    // Creating two complex numbers
    val c1 = new Complex(5.0, 6.0)
    val c2 = new Complex(3.0, 2.0)
    
    // Performing basic operations on the complex numbers
    val c3 = c1 + c2 // c3 is (8.0, 8.0i)
    val c4 = c1 - c2 // c4 is (2.0, 4.0i)
    val c5 = c1 * c2 // c5 is (3.0, 36.0i)
    val c6 = c1 / c2 // c6 is (1.7692307692307692, 0.6153846153846154i)
    
    // Printing the modulus of c1 and c2
    println(c1 % c2) // prints 7.810249675906654
    
    // Checking if c1 is equal to c2
    println(c1 == c2) // prints false
    
    // Printing the complex numbers
    println(c1) // prints 5.0 + 6.0i
    println(c2) // prints 3.0 + 2.0i
    println(c3) // prints 8.0 + 8.0i
    println(c4) // prints 2.0 + 4.0i
    println(c5) // prints 3.0 + 36.0i
    println(c6) // prints 1.7692307692307692 + 0.6153846153846154i
  }
}
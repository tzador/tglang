//defining a list of colors
val colors = List("red", "green", "blue", "yellow")
// using pattern matching to print out each color in upper case
colors.foreach {
  case "red"   => println("RED")
  case "green" => println("GREEN")
  case "blue"  => println("BLUE")
  case "yellow"=> println("YELLOW")
}
// defining a map of colors and corresponding hex codes
val colorsToHex = Map(
  "red"    -> "#FF0000",
  "green"  -> "#00FF00",
  "blue"   -> "#0000FF",
  "yellow" -> "#FFFF00"
)
// using for loop to iterate through the map and print out each key-value pair
for ((color, hex) <- colorsToHex) {
  println(s"The hex code for $color is $hex")
}
// creating a function that takes in a color and returns the hex code if it exists in the map
def findHexCode(color: String): Option[String] = colorsToHex.get(color)
// calling the function with a color and printing out the result if it exists
val myColor = "red"
findHexCode(myColor) match {
  case Some(hex) => println(s"The hex code for $myColor is $hex")
  case None => println("No hex code found")
}
// Define a class Person
class Person(var name: String, var age: Int) {
  // Define a method to greet the person
  def greet(): Unit = println(s"Hello, my name is ${this.name} and I am ${this.age} years old")
}

// Create an instance of the Person class
val person1 = new Person("John", 35)

// Call the greet method
person1.greet()

// Create a list of Persons
val people = List(new Person("Jane", 28), new Person("Mike", 42), new Person("Sarah", 20))

// Sort the list of Persons by age in ascending order
val sortedPeople = people.sortBy(_.age)

// Filter the list of Persons to only include people under 30 years old
val filteredPeople = people.filter(_.age < 30)

// Print out the names of the filtered people
filteredPeople.foreach(person => println(person.name))

// Create a case class for a Book with a title, author, and year published
case class Book(title: String, author: String, yearPublished: Int)

// Create a list of Books
val books = List(
  Book("Pride and Prejudice", "Jane Austen", 1813),
  Book("To Kill a Mockingbird", "Harper Lee", 1960),
  Book("1984", "George Orwell", 1949),
  Book("The Great Gatsby", "F. Scott Fitzgerald", 1925)
)

// Use pattern matching to loop through the list of books and print out titles and authors
books.foreach {
  case Book(title, author, _) => println(s"$title by $author")
}

// Define a function to calculate the factorial of a number
def factorial(num: Int): Int = {
  if (num == 0) 1
  else num * factorial(num - 1)
}

// Call the factorial function for a number
val fact = factorial(5)

// Print out the factorial
println(fact)
object ComplexNumbers {
  // This class represents a complex number
  class Complex(real: Double, imag: Double) {
    // This method adds two complex numbers
    def +(that: Complex): Complex = new Complex(real + that.real, imag + that.imag)
    // This method multiplies two complex numbers
    def *(that: Complex): Complex = new Complex(real * that.real - imag * that.imag, real * that.imag + imag * that.real)
    // This method returns the modulus of the complex number
    def modulus: Double = math.sqrt(real * real + imag * imag)
    // This method returns the conjugate of the complex number
    def conjugate: Complex = new Complex(real, -imag)
    // This method returns the argument of the complex number
    def argument: Double = math.atan2(imag, real)
    // This method prints the complex number in a nice format
    override def toString: String = if(imag > 0) {
      real + " + " + imag + "i"
    } else {
      real + " - " + (-imag) + "i"
    }
  }
  // This main method generates two complex numbers and performs various operations on them
  def main(args: Array[String]): Unit = {
    // Creating the first complex number with real = 2.0 and imag = 3.0
    val c1 = new Complex(2.0, 3.0)
    // Creating the second complex number with real = 5.0 and imag = -2.0
    val c2 = new Complex(5.0, -2.0)
    // Adding the two complex numbers
    val sum = c1 + c2
    // Multiplying the two complex numbers
    val product = c1 * c2
    // Printing the sum of the complex numbers
    println("Sum: " + sum)
    // Printing the product of the complex numbers
    println("Product: " + product)
    // Printing the modulus of the first complex number
    println("Modulus of c1: " + c1.modulus)
    // Printing the conjugate of the second complex number
    println("Conjugate of c2: " + c2.conjugate)
    // Printing the argument of the first complex number
    println("Argument of c1: " + c1.argument)
  }
}
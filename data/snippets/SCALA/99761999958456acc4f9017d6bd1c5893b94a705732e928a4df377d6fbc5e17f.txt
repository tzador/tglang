def checkPrime(num: Int): Boolean = { // defining a function called 'checkPrime' which takes in an integer 'num' and returns a boolean value
    if (num <= 1) return false // if num is less than or equal to 1, it is not prime, so return false
    if (num == 2) return true // if num is equal to 2, it is prime, so return true
    if (num % 2 == 0) return false // if num is divisible by 2, it is not prime, so return false
    for (i <- 3 to (math.sqrt(num).toInt) by 2) { // looping through all odd numbers from 3 to the square root of num, incrementing by 2 each time
        if (num % i == 0) return false // if num is divisible by any odd number, it is not prime, so return false
    }
    true // if none of the previous conditions were met, num is prime, so return true
}

val num = 23 // declaring a variable 'num' and initializing it to the value 23
if (checkPrime(num)) println("$num is a prime number") // using string interpolation to print a message if 'num' is prime
else println("$num is not a prime number") // using string interpolation to print a message if 'num' is not prime
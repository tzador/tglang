// This is a complex code snippet in SCALA

object ComplexCodeSnippet {
  
  def main(args: Array[String]): Unit = {
  
    // Define a map to hold words and their frequencies
    var wordsMap = collection.mutable.Map[String, Int]()
    
    // Define a list of words
    val wordsList = List("Hello", "Hello", "World", "Scala", "Programming", "Programming", "Language", 
    "Language", "Code", "Snippet")
    
    // Loop through the words in the list
    for(word <- wordsList) {
      
      // Check if the word already exists in the map
      if(wordsMap.contains(word)) {
      
        // If it exists, increment its value by 1
        wordsMap(word) += 1
      
      } else {
      
        // If it does not exist, initialize its value to 1
        wordsMap += (word -> 1)
      }
    }
    
    // Sort the map in descending order by value
    val sortedMap = wordsMap.toSeq.sortWith(_._2 > _._2)
    
    // Print the top 3 most frequent words
    for(i <- 0 until 3) {
      
      // Get the word and its frequency from the sorted map
      val topWord = sortedMap(i)._1
      val topWordFreq = sortedMap(i)._2
      
      // Print the word and its frequency
      println(s"$topWord: $topWordFreq")
    }
  }
}
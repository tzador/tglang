//defines a class called "Person" with two parameters
class Person(val name: String, val age: Int) {
  //defines a method called "greet" that takes in a string parameter
  def greet(message: String) {
    //prints out the message with the person's name and age
    println(message + " " + name + "! You are " + age + " years old.")
  }
}

//defines a trait (similar to an interface) called "Worker"
trait Worker {
  //abstract method that must be implemented by classes that mix in this trait
  def work(): Unit
}

//defines a case class called "Employee" that takes in a name and salary as parameters
case class Employee(name: String, salary: Int) extends Worker {
  //implements the "work" method from the "Worker" trait
  def work(): Unit = {
    //prints out the employee's name and current task
    println(name + " is working on a project. Salary: $" + salary)
  }
}

//creates an instance of the "Person" class and calls the "greet" method with a message
val person = new Person("John", 30)
person.greet("Hello")

//creates an instance of the "Employee" case class and calls the "work" method
val employee = Employee("Jane", 5000)
employee.work()

/* output:
Hello John! You are 30 years old.
Jane is working on a project. Salary: $5000
*/
// Create a list of numbers
val numbers = List(1, 2, 3, 4, 5)

// Use pattern matching to filter out even numbers
val evens = numbers.collect { case n if n % 2 == 0 => n }

// Print out the even numbers
evens.foreach(println)

// Create a function to multiply a number by 2
def multiplyByTwo(x: Int): Int = x * 2

// Use map function to apply the function to every element in the list
val multipliedNumbers = numbers.map(multiplyByTwo)

// Print out the multiplied numbers
multipliedNumbers.foreach(println)

// Create a case class for a Person with name and age
case class Person(name: String, age: Int)

// Create a list of Person objects
val people = List(Person("John", 25), Person("Mary", 30), Person("David", 40))

// Use filter function to filter out people over the age of 35
val over35 = people.filter(_.age > 35)

// Print out the names of people over 35
over35.foreach(p => println(p.name))

// Implement a recursive function to calculate the factorial of a number
def factorial(n: Int): Int = {
  // Base case when n is 0
  if (n == 0) 1 
  // Recursive call
  else n * factorial(n-1)
}

// Use fold function to calculate the sum of numbers in a list
val sum = numbers.fold(0)((acc, n) => acc + n)

// Print out the sum
println(sum)
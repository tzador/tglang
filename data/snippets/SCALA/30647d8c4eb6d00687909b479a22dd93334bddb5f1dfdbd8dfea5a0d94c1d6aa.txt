// This is a simple function that checks if a number is prime
def isPrime(number: Int): Boolean = {
  // Check if number is less than 2
  if (number < 2) {
    return false
  }

  // Check if number is divisible by any number less than it
  for (i <- 2 until number) {
    if (number % i == 0) {
      return false
    }
  }

  // If none of the conditions are met, number is prime
  return true
}

// This is a higher-order function that returns a list of primes within a given range
def listPrimes(min: Int, max: Int, primeCheck: Int => Boolean): List[Int] = {
  // Initialize an empty list
  var primeList: List[Int] = List()

  // Loop through numbers within the given range
  for (num <- min to max) {
    // Check if number is prime using the isPrime function
    if (primeCheck(num)) {
      // Append prime number to list
      primeList = primeList :+ num
    }
  }

  return primeList
}

// Call the listPrimes function with a range of 1 to 20 and using the isPrime function to check for primes
val primes = listPrimes(1, 20, isPrime)

// Print the list of primes
println(primes) // Output: List(2, 3, 5, 7, 11, 13, 17, 19)
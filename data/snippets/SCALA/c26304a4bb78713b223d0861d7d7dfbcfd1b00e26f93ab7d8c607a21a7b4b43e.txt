// Define abstract class Animal with a constructor that takes in a name
abstract class Animal(name: String) {
  // Define an abstract method that prints out the animal's sound
  def speak: String
  // Define a method for the animal to introduce itself
  def introduce: Unit = println(s"Hello, my name is $name and I am a ${this.getClass.getSimpleName}.")
}

// Define a subclass of Animal called Dog
class Dog(name: String) extends Animal(name) {
  // Implement the speak method for dogs
  def speak: String = "Woof!"
}

// Define a subclass of Animal called Cat
class Cat(name: String) extends Animal(name) {
  // Implement the speak method for cats
  def speak: String = "Meow!"
}

// Create a list of animals including dogs and cats
val animals: List[Animal] = List(
  new Dog("Buddy"),
  new Cat("Whiskers"),
  new Dog("Max"),
  new Cat("Fluffy")
)

// Loop through the list and have each animal introduce itself and speak
for(animal <- animals) {
  animal.introduce
  println(animal.speak)
}
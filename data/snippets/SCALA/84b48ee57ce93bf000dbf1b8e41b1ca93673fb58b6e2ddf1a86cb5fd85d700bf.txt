// This is a function that takes in a list and a function as parameters
// It returns a new list with the result of applying the given function to each element in the list
def map[A, B](list: List[A])(function: A => B): List[B] = {
  list match {
    case Nil => Nil // If the list is empty, return an empty list
    case head::tail => function(head)::map(tail)(function) // Apply the function to the head of the list and add it to the new list, then recursively call map on the tail of the list
  }
}

// This is a function that takes in a list of integers and returns the sum of all even numbers in the list
def sumEven(list: List[Int]): Int = {
  list.filter(_ % 2 == 0).reduce(_ + _) // Uses the filter function to filter out all odd numbers, then uses the reduce function to add all remaining numbers together
}

// This is a class that represents a person with a name and age
case class Person(name: String, age: Int)

// This is a function that takes in a list of Person objects and returns a list of their ages
def getAges(people: List[Person]): List[Int] = {
  map(people)(person => person.age) // Uses the map function defined earlier to apply a function to each element in the list and return a new list with the result
}
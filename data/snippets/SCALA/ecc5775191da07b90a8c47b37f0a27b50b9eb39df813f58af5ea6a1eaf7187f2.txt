// This code snippet demonstrates a BankAccount class in Scala

class BankAccount(number: Int, holder: String, var balance: Double) {
  // Constructor with parameters for account number, holder name, and balance

  // Method to deposit money into the account
  def deposit(amount: Double): Double = {
    println(s"Depositing $amount into account number $number")
    balance += amount
    balance
  }

  // Method to withdraw money from the account
  def withdraw(amount: Double): Double = {
    if (amount > balance) {
      println(s"Insufficient funds for withdrawal from account number $number")
      balance
    } else {
      println(s"Withdrawing $amount from account number $number")
      balance -= amount
      balance
    }
  }

  // Method to transfer money from this account to another account
  def transfer(amount: Double, account: BankAccount): Double = {
    if (amount > balance) {
      println(s"Insufficient funds for transfer from account number $number")
      balance
    } else {
      println(s"Transferring $amount from account number $number to account number ${account.number}")
      withdraw(amount)
      account.deposit(amount)
    }
  }
}

// Create two BankAccount instances
val account1 = new BankAccount(12345, "John Doe", 500.00)
val account2 = new BankAccount(67890, "Jane Smith", 1000.00)

// Use the methods to deposit, withdraw, and transfer money between the accounts
account1.deposit(250.00)
account2.deposit(500.00)
account1.withdraw(100.00)
account1.transfer(200.00, account2)
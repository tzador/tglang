def randomNumberGenerator(seed: Int): Iterator[Int] = new Iterator[Int] { //Defines a function that takes in an integer as 'seed' parameter and returns an Iterator
    val rand = new scala.util.Random(seed) //Creates a new instance of the Random class from scala.util package with the given seed
    def next(): Int = rand.nextInt() //Defines a method 'next' that generates a random integer using the Random class and returns it
    def hasNext: Boolean = true //Defines a method 'hasNext' that always returns true, indicating that the Iterator will always have a next value
}

val generator = randomNumberGenerator(12345) //Creates a new instance of the randomNumberGenerator function with a seed of 12345
val numbers: List[Int] = generator.take(10).toList //Uses the generator to create a list of 10 random integers and assigns it to the 'numbers' variable
println(numbers) //Prints the list of random integers to the console
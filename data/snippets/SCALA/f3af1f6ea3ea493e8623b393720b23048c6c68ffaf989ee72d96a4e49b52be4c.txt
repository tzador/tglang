// Create a case class for representing a Person with name and age fields
case class Person(name: String, age: Int)

// Create a list of Persons
val people = List(Person("John", 30), Person("Mary", 25), Person("David", 35))

// Use pattern matching to filter out people over the age of 30
val peopleOver30 = people.filter {
  case Person(_, age) => age > 30
}

// Use foldLeft to calculate the average age of the people
val averageAge = people.foldLeft(0) {
  (sum, person) => sum + person.age
} / people.size.toFloat
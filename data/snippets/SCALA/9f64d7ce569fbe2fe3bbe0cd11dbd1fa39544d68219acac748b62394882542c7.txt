//Declare and initialize a mutable list of integers
var numbers: collection.mutable.List[Int] = collection.mutable.List(1, 2, 3, 4, 5)

//Declare and initialize a map with integers as keys and strings as values
val map: Map[Int, String] = Map(1 -> "Hello", 2 -> "World")

//Create a function that takes in a string and returns its length
def getLength(str: String): Int = {
   str.length
}

//Create a for loop that iterates through the list and prints out each integer multiplied by 2
for (num <- numbers) {
    println(num * 2)
}

//Use pattern matching to check if the map contains a key
map match {
  case m if m.contains(1) => println("Key 1 exists!")
  case _ => println("Key 1 does not exist!")
}

//Create a higher-order function that takes in a list and a function and applies the function to each element in the list
def mapList(list: List[Int], func: Int => Int): List[Int] = {
  list.map(func)
}

//Call the higher-order function with a list of numbers and passing in the getLength function
val result: List[Int] = mapList(numbers, getLength)
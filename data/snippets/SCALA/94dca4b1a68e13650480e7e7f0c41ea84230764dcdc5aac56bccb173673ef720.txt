// Defines a function called "merge" that takes in two arrays of type "Int" and returns an array of type "Int"
def merge(arr1: Array[Int], arr2: Array[Int]): Array[Int] = {
  // Defines an empty array of type "Int" to store the merged array
  var mergedArr = Array[Int]()
  // Uses a while loop to iterate through both arrays simultaneously
  var i = 0
  var j = 0
  while (i < arr1.length && j < arr2.length) {
    // Compares the current elements of both arrays and adds the smaller one to the merged array
    if (arr1(i) <= arr2(j)) {
      mergedArr :+= arr1(i)
      i += 1
    } else {
      mergedArr :+= arr2(j)
      j += 1
    }
  }
  // Appends the remaining elements of the first array if any
  while (i < arr1.length) {
    mergedArr :+= arr1(i)
    i += 1
  }
  // Appends the remaining elements of the second array if any
  while (j < arr2.length) {
    mergedArr :+= arr2(j)
    j += 1
  }
  // Returns the merged array
  mergedArr
}

// Example usage
val arr1 = Array(1, 3, 5, 7, 9)
val arr2 = Array(2, 4, 6, 8, 10)
val mergedArr = merge(arr1, arr2)
println(mergedArr) // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
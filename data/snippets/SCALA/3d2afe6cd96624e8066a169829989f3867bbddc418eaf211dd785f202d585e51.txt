// This is a Scala code snippet that uses functional programming concepts
// and higher-order functions to manipulate lists of numbers.

// Define a function that takes in a list of numbers and returns a list of doubled numbers
def doubleList(nums: List[Int]): List[Int] = {
  // Use the `map` higher-order function to apply the `double` function to each number in the list
  nums.map(double)
}

// Define a function that takes in a number and returns the number doubled
def double(num: Int): Int = {
  num * 2
}

// Define a list of numbers
val nums = List(1, 2, 3, 4, 5)

// Call the `doubleList` function on the list of numbers and save the result to a new variable
val doubledNums = doubleList(nums)

// Print out the original list and the doubled list using the `println` function
println("Original List: " + nums)
println("Doubled List: " + doubledNums)

// Output: Original List: List(1, 2, 3, 4, 5)
// Doubled List: List(2, 4, 6, 8, 10)
object Main {

  // Creates a function that checks if a given list of integers contains odd numbers
  def containsOdd(list: List[Int]): Boolean = {
    // Filters the list, leaving only odd numbers
    val oddList = list.filter(_ % 2 != 0)
    
    // Checks if the filtered list is empty, return true if not
    if (oddList.isEmpty) false
    else true
  }

  // Creates a case class to represent a person
  case class Person(name: String, age: Int)

  // Creates a list of Person objects
  val personList = List(
    Person("John", 35),
    Person("Jane", 27),
    Person("Mark", 42),
    Person("Lisa", 19)
  )

  // Creates a function that checks if a person's age is between 18 and 30
  def isYoung(person: Person): Boolean = {
    if (person.age >= 18 && person.age <= 30) true
    else false
  }

  // Uses map and filter to create a new list of Person objects containing only young people
  val youngPeopleList = personList
    .map(isYoung) // maps each person to their age check
    .zip(personList) // combines the age check with the original person object
    .filter(_._1) // filters out false age checks
    .map(_._2) // returns only the person objects

  // Prints the names of the young people in the list
  youngPeopleList.foreach(person => println(person.name))

}

/* Output:
Jane
Lisa
*/
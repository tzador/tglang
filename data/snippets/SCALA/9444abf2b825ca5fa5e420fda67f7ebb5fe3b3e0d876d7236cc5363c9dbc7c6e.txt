// Define a case class for a person with name, age, and occupation
case class Person(name: String, age: Int, occupation: String)

// Create a list of Person objects
val people = List(Person("John", 35, "Teacher"), Person("Mary", 29, "Engineer"), Person("Bob", 42, "Doctor"))

// Define a function to filter out people above a certain age and with a certain occupation
def filterPeople(people: List[Person], age: Int, occupation: String): List[Person] = {
    // Use the filter method on the list and provide a predicate function
    people.filter(person => person.age > age && person.occupation == occupation)
}

// Call the function with a specified age and occupation
val filteredPeople = filterPeople(people, 30, "Teacher")

// Print out the filtered list
for (person <- filteredPeople) {
    println(s"${person.name} is a ${person.occupation} above the age of ${person.age}.")
}
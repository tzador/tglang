object BookShop { /* define an object named BookShop */
  def main (args: Array[String]) { /* define main function with arguments as array of strings */
    val books = List("Python in Action", "Java in a Nutshell", "Scala for the Impatient") /* create a list of books */
    val prices = Map("Python in Action" -> 25.99, "Java in a Nutshell" -> 39.99, "Scala for the Impatient" -> 29.99) /* create a map of book prices */

    println("Welcome to the Book Shop!") /* print a welcome message to the user */
    println("Here is a list of our available books:") /* print a list of available books */

    books.foreach(book => println(book)) /* use the foreach function to iterate through the list of books and print each one */

    println("Please enter the name of the book you would like to purchase:") /* prompt the user to enter the name of the book they want to purchase */

    val input = scala.io.StdIn.readLine() /* take user input and store it in a variable */

    prices.get(input) match { /* use the get method to retrieve the price from the map based on user input and perform a pattern match */
      case Some(price) => println(s"The price of $input is $$${price}") /* if the book is found, print the price in the correct format */
      case None => println("Sorry, that book is not available at this time.") /* if the book is not found, print an error message */
    }

    val totalPrice = books.filter(book => book != input).map(book => prices.get(book).get).sum /* calculate the total price of all the books except for the one the user entered */

    println(s"The total cost of your purchase is $$${totalPrice}") /* print the total cost of the purchase */

    val averagePrice = totalPrice / books.length /* calculate the average price of the books */

    println(s"The average price of the books is $$${averagePrice}") /* print the average price */
  }
}
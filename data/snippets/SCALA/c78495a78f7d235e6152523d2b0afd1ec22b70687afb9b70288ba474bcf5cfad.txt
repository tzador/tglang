import scala.util.{Try, Success, Failure}

object ExceptionHandling {
  def main(args: Array[String]): Unit = {
    
    // create a divide function that takes in two numbers and returns the result
    def divide(x: Int, y: Int): Int = {
      // check if the denominator is zero to avoid runtime error
      if (y == 0) {
        throw new ArithmeticException("Cannot divide by zero")
      } else {
        x / y
      }
    }
    
    // call the divide function with different input parameters
    Try(divide(10, 0)) match {
      case Success(result) => println(s"The result is: $result")
      // handle any thrown exceptions
      case Failure(exception) => println(s"Error occurred: ${exception.getMessage}")
    }
    
    Try(divide(20, 5)) match {
      case Success(result) => println(s"The result is: $result")
      // handle any thrown exceptions
      case Failure(exception) => println(s"Error occurred: ${exception.getMessage}")
    }
  }
}
// Function to find all permutations of a given list
def findPermutations(list: List[Int]): List[List[Int]] = {
  // Helper function to generate permutations
  def generate(list: List[Int], acc: List[List[Int]]): List[List[Int]] = {
    list match {
      case Nil => acc
      case x :: xs =>
        val updated = for {
          i <- 0 to acc(0).size
          perm <- acc.map(p => p.take(i) ::: List(x) ::: p.drop(i))
        } yield perm
        generate(xs, updated.toList)
    }
  }
  generate(list, List(List()))
}
findPermutations(List(1, 2, 3, 4))
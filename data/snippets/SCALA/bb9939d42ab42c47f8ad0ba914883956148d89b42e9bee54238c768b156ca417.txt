/**
* This function takes in a list of integers and a target sum, and returns a new list of tuples
* where each tuple contains two integers from the original list that add up to the target sum.
*
* @param nums: List[Int] -> list of integers
* @param target: Int -> target sum
* @return List[(Int, Int)] -> list of tuples containing pairs of integers that sum up to target
*/
def findPairs(nums: List[Int], target: Int): List[(Int, Int)] = {

  // create an empty list to hold the tuples
  var result: List[(Int, Int)] = List()

  // loop through each element in the list
  for (i <- 0 until nums.length) {
    // loop through the remaining elements in the list
    for (j <- i+1 until nums.length) {
      // check if the sum of current element and next element is equal to target
      if (nums(i) + nums(j) == target) {
        // if yes, create a tuple of the two elements and add it to the result list
        result = result :+ (nums(i), nums(j))
      }
    }
  }
  // return the result list
  result
}

// example usage
val nums = List(1, 2, 3, 4, 5, 6)
val target = 7

findPairs(nums, target) // returns List((1, 6), (2, 5), (3, 4))
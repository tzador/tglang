/**
 * This is a complex code snippet written in Scala
 */

// Create a case class to represent a book
case class Book(title: String, author: String, yearPublished: Int, pages: Int, price: Double)

// Create a list of books
val books = List(
  Book("The Alchemist", "Paulo Coelho", 1988, 197, 15.99),
  Book("To Kill a Mockingbird", "Harper Lee", 1960, 281, 12.50),
  Book("Pride and Prejudice", "Jane Austen", 1813, 611, 10.99),
  Book("1984", "George Orwell", 1949, 328, 13.99),
  Book("The Great Gatsby", "F. Scott Fitzgerald", 1925, 180, 11.99)
)

// Define a class for a library
class Library(books: List[Book]) {

  // Method to get total number of pages in the library
  def getTotalPages: Int = {
    books.map(_.pages).sum
  }

  // Method to sort books in ascending order by year published
  def sortByYear: List[Book] = {
    books.sortBy(_.yearPublished)
  }

  // Method to get average price of books in the library
  def getAveragePrice: Double = {
    books.map(_.price).sum / books.length
  }

}

// Create an instance of the library class
val library = new Library(books)

// Print total number of pages in the library
println("Total pages in the library: " + library.getTotalPages)

// Sort books by year published and print the list
val sortedBooks = library.sortByYear
println("Books sorted by year published:")
sortedBooks.foreach(book => println(book.title + " by " + book.author))

// Print average price of books in the library
println("Average price of books in the library: $" + library.getAveragePrice)
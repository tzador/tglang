Scala

/**
 * This is a generic function that takes in a list of type A and a function of type A to B,
 * and returns a new list of type B by applying the given function to each element in the list.
 *
 * @param list input list of type A
 * @param func function of type A to B
 * @return new list of type B
 */
def map[A, B](list: List[A], func: A => B): List[B] = {
  def loop(list: List[A], acc: List[B]): List[B] = {
    list match {
      case Nil => acc
      case head :: tail => loop(tail, acc :+ func(head))
    }
  }

  loop(list, List.empty[B])
}

// Example usage
val numbers: List[Int] = List(1, 2, 3, 4, 5)
val doubledNumbers: List[Int] = map(numbers, x => x * 2) // yields List(2, 4, 6, 8, 10)
// Define a case class and companion object for a person
case class Person(name: String, age: Int, occupation: String)

object Person {
  // Create a method to check if the person is eligible to vote based on their age
  def isEligibleToVote(person: Person): Boolean = {
    if (person.age >= 18) true
    else false
  }

  // Create a method to greet a person based on their occupation
  def greet(person: Person): Unit = {
    person.occupation match {
      case "Student" => println(s"Hello ${person.name}, are you ready for class?")
      case "Teacher" => println(s"Good morning ${person.name}, are you ready to teach?")
      case "Doctor" => println(s"Hello Dr. ${person.name}, how can I help you today?")
      case _ => println(s"Hello ${person.name}, what do you do for a living?")
    }
  }

  // Create an instance of a Person
  val alice = Person("Alice", 25, "Doctor")

  // Print whether Alice is eligible to vote or not
  println(s"Is ${alice.name} eligible to vote? ${isEligibleToVote(alice)}")

  // Greet Alice based on her occupation
  greet(alice)
}
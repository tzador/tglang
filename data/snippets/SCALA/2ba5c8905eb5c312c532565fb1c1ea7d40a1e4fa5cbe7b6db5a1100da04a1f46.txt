// Define a function to calculate the factorial of a given number
def factorial(n: Int): Int = {
  if (n == 0) 1
  else n * factorial(n - 1)  // recursive call to calculate factorial
}

// Generate a list of random numbers using Scala's Random library
val random = scala.util.Random
val randomList = List.fill(10)(random.nextInt(10))  // fill list with 10 random numbers

// Define a case class representing a person
case class Person(name: String, age: Int)

// Create a list of Person objects
val personList = List(Person("John", 30), Person("Emily", 25), Person("Mark", 40))

// Use pattern matching to filter out Person objects older than 30
val filteredList = personList.filter{
  case Person(name, age) if age > 30 => true
  case _ => false
}

// Define a higher-order function that takes in a function and applies it to a list of numbers
def applyFunction(numbers: List[Int], f: Int => Int): List[Int] = {
  numbers.map(f)  // apply function to each element in the list
}

// Use function currying to create a new function that adds a given number to a given list of numbers
def addToNumberList(number: Int)(numbers: List[Int]): List[Int] = {
  numbers.map(_ + number)  // add number to each element in the list
}

// Generate a new list by adding 5 to each element in the randomList
val newList = addToNumberList(5)(randomList)
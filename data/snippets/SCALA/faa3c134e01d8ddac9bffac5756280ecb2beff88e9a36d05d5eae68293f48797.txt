import scala.io.Source

object Main extends App {

  // create a list of tuples containing names and ages
  val people = List(("John", 35), ("Maria", 28), ("Peter", 42))

  // filter the list to only include people under 30 years old
  val youngPeople = people.filter(_._2 < 30)

  // create a map of names and their corresponding initials
  // using the map method and pattern matching
  val initialsMap = youngPeople.map {
    case (name, age) => (name, name.charAt(0))
  }.toMap

  // print out each pair in the map
  initialsMap.foreach(pair => println(s"${pair._1} has initial ${pair._2}."))

  // create a class for a person
  case class Person(name: String, age: Int)

  // create a list of Person objects
  val peopleWithAges = List(Person("Lisa", 24), Person("David", 38), Person("Sarah", 31))

  // pattern match on the list to find people under 35 years old
  val youngPeopleObjects = peopleWithAges.collect { 
    case Person(name, age) if age < 35 => Person(name, age)
  }

  // print out the names of the young people using a for loop
  for (person <- youngPeopleObjects) {
    println(person.name)
  }

}
import scala.util.{Try, Success, Failure}
import scala.concurrent.duration._
import scala.concurrent.{Await, Future}
import scala.concurrent.ExecutionContext.Implicits.global

val future = Future { // creates a Future
  Thread.sleep(5000) // simulates a long running computation
  "Hello, World!" // return successful result
}

future.onComplete { // registers a callback to be called on completion
  case Success(result) => println(result) // handles successful result
  case Failure(exception) => println(exception.getMessage) // handles error
}

val result = Await.result(future, 10.seconds) // waits for the future to complete
println(result) // prints the result

// Output:
// Hello, World!
// Hello, World!
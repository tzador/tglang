// This is a comment in Scala
object Main extends App {
  // This is a simple function that takes two integers as parameters and returns their sum
  // The function is called add and is defined using the def keyword
  def add(x: Int, y: Int): Int = {
    // The function body consists of a single expression, which is the sum of the two parameters
    x + y
  }

  // This is an example of a Scala class that defines a person
  // The class has three properties: name, age, and gender
  // The properties are defined using the val keyword and are immutable
  // The class also has a method called printInfo which prints out the person's information
  class Person(val name: String, val age: Int, val gender: String) {
    // This is the constructor of the Person class, which initializes the properties
    // The this keyword is used to refer to the current instance of the class
    this.name = name
    this.age = age
    this.gender = gender

    // This is the printInfo method, which uses string interpolation to print the person's information
    def printInfo(): Unit = {
      println(s"Name: ${this.name}\nAge: ${this.age}\nGender: ${this.gender}")
    }
  }

  // This is an example of creating an instance of the Person class and calling its printInfo method
  val person = new Person("John", 25, "Male")
  person.printInfo()

  // This is a higher-order function that takes a function as a parameter
  // The function takes two integers as parameters and applies the add function to them
  // The function returns the result of the add function
  def applyFunction(f: (Int, Int) => Int, x: Int, y: Int): Int = {
    f(x, y)
  }

  // This is an example of using the applyFunction function with the add function
  val result = applyFunction(add, 10, 20)
  println(s"Result: $result")
}
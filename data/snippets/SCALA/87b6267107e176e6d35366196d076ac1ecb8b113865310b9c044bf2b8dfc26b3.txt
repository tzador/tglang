//This code snippet demonstrates the use of higher-order functions in Scala

//Define a higher-order function that takes in two functions as parameters
def higherOrderFunc(func1:Int=>Int, func2:Int=>Int):Int=>Int = {
  //Define a new function that combines the two parameters
  def newFunction(x:Int):Int = func1(func2(x))
  //Return the new combined function
  newFunction
}

//Define two functions to pass as parameters
def increment(x:Int):Int = x + 1
def multiplyByTwo(x:Int):Int = x * 2

//Call the higher-order function with the two functions as parameters
val combinedFunc = higherOrderFunc(increment, multiplyByTwo)

//Call the combined function with an input
val result = combinedFunc(5)

//Print the result
println(result) // Output: 12
/** This code snippet is an advanced matrix multiplication function written in SCALA. It takes in two matrices and returns the resulting product matrix.
 * @param a - the first input matrix
 * @param b - the second input matrix
 * @return the product matrix
 */
def matrixMultiplication(a: Array[Array[Double]], b: Array[Array[Double]]): Array[Array[Double]] = {
  val rowsA = a.length
  val columnsA = a(0).length
  val columnsB = b(0).length
  val result = Array.ofDim[Double](rowsA, columnsB)
  for (i <- 0 until rowsA) {
    for (j <- 0 until columnsB) {
      var sum = 0.0
      for (k <- 0 until columnsA) {
        sum += a(i)(k) * b(k)(j)
      }
      result(i)(j) = sum
    }
  }
  result
}
// Output:
def matrixMultiplication(a: Array[Array[Double]], b: Array[Array[Double]]): Array[Array[Double]] = {
  val rowsA = a.length
  val columnsA = a(0).length
  val columnsB = b(0).length
  val result = Array.ofDim[Double](rowsA, columnsB)
  for (i <- 0 until rowsA) {
    for (j <- 0 until columnsB) {
      var sum = 0.0
      for (k <- 0 until columnsA) {
        sum += a(i)(k) * b(k)(j)
      }
      result(i)(j) = sum
    }
  }
  result
}
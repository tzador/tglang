// Scala function to find the length of a list using tail recursion
def lengthList[A](list: List[A]): Int = {
  @scala.annotation.tailrec
  def loop(acc: Int, list: List[A]): Int =
    list match {
      case Nil => acc
      case head :: tail => loop(acc + 1, tail)
    }
  loop(0, list) // call to loop function with initial accumulator value of 0
}

// Example list
val myList = List(1, 2, 3, 4, 5)

// Call to function to find length of list
val length = lengthList(myList) 

// Output: 5
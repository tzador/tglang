def flatten[A](list: List[List[A]]): List[A] = list match {
    case Nil => Nil
    case head :: tail => head ++ flatten(tail)
    // This function takes in a list of lists and recursively flattens it into a single list
}

val nestedList = List(List(1, 2), List(3, 4), List(5, 6, 7))
// Example of a nested list

val flattenedList = flatten(nestedList)
// Output: [1, 2, 3, 4, 5, 6, 7]
// Calling the flatten function on the nested list to flatten it
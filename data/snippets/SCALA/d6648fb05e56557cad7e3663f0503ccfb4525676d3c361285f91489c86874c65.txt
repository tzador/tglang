// Define a case class for a person
case class Person(name: String, age: Int)

// Create a list of Person objects
val peopleList = List(Person("John", 25), Person("Mary", 30), Person("Tom", 40))

// Filter the list by age > 30
val filteredList = peopleList.filter(_.age > 30)

// Create a higher-order function to map over the list and add 5 years to each person's age
def addAge(people: List[Person], f: Person => Person): List[Person] = {
  people.map(f)
}

// Use the higher-order function to add 5 years to each person's age
val updatedList = addAge(filteredList, (person: Person) => person.copy(age = person.age + 5))

// Print the updated list
updatedList.foreach(person => println(person.name + " is now " + person.age + " years old"))
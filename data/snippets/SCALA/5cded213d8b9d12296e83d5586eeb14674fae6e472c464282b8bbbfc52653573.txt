// Define a case class for a Person
case class Person(name: String, age: Int, occupation: String)

// Create a list of Person objects
val peopleList = List(
  Person("John", 30, "Software Engineer"),
  Person("Jane", 25, "Data Analyst"),
  Person("Alex", 35, "Project Manager"),
  Person("Sarah", 28, "Product Designer")
)

// Use pattern matching to print out the occupation of each person in the list
peopleList.foreach(person => person match {
  case Person(name, age, "Software Engineer") => println(s"${name} is a software engineer.")
  case Person(name, age, "Data Analyst") => println(s"${name} is a data analyst.")
  case Person(name, age, "Project Manager") => println(s"${name} is a project manager.")
  case Person(name, age, "Product Designer") => println(s"${name} is a product designer.")
})

// Create a function that calculates the average age of the people in the list
def calculateAverageAge(people: List[Person]): Int = {
  var totalAge = 0
  var count = 0

  // Loop through each person in the list and add their ages to totalAge
  for (person <- people) {
    totalAge += person.age
    count += 1
  }

  // Calculate the average age
  val average = totalAge / count

  // Return the average age
  average
}

// Call the function and print out the average age
println(s"The average age of the people in the list is ${calculateAverageAge(peopleList)}.")
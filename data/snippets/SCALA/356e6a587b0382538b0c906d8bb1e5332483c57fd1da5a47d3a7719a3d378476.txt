//This code snippet demonstrates the use of higher-order functions and closures in Scala.

//A higher-order function that takes in a function as a parameter
def stringManipulator(string: String, func: String => String): String = {
  func(string)
}

//A closure that concatenates a prefix to a given string and returns it
val prefixer = (prefix: String) => (string: String) => s"$prefix $string"

//Using the higher-order function to apply the closure for a specific prefix
val helloManipulated = stringManipulator("World", prefixer("Hello"))

//Printing the manipulated string
println(helloManipulated)
// This is a comment in SCALA

// Defining a class with a constructor
class Person(var name: String, var age: Int) {

  // Declaring a method
  def greet() = {
    println(s"Hello, my name is $name and I am $age years old.")
  }

  // Defining a companion object
  object Person {
  
    // Declaring a constant value
    val MAX_AGE = 100
    
    // Defining a method that accepts a Person object as a parameter
    def compareAges(person1: Person, person2: Person): Unit = {
      if (person1.age > person2.age) {
        println(s"${person1.name} is older than ${person2.name}.")
      } else if (person1.age < person2.age) {
        println(s"${person1.name} is younger than ${person2.name}.")
      } else {
        println(s"${person1.name} and ${person2.name} are the same age.")
      }
    }
  }
}

// Creating an instance of the Person class
val person1 = new Person("John", 25)

// Calling the greet method
person1.greet()

// Creating another instance of the Person class
val person2 = new Person("Jane", 30)

// Calling the compareAges method from the companion object
Person.compareAges(person1, person2)
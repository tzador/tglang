trait Shape { //define a trait called Shape
  def getColor(): String //define an abstract method getColor that returns a String
}

class Rectangle(val length: Double, val width: Double, val color: String) extends Shape {
  def getArea(): Double = { //define a method getArea that returns a Double
    length * width //return the area of the rectangle
  }
  override def getColor(): String = { //implement the abstract method getColor
    color //return the color of the rectangle
  }
}

class Circle(val radius: Double, val color: String) extends Shape {
  val pi: Double = 3.14 //define a constant variable pi
  override def getColor(): String = { //implement the abstract method getColor
    color //return the color of the circle
  }
  def getCircumference(): Double = { //define a method getCircumference that returns a Double
    2 * pi * radius //return the circumference of the circle
  }
}

val rect = new Rectangle(5, 3, "blue") //create a new Rectangle object with length 5, width 3, and color "blue"
println(s"The area of the rectangle is ${rect.getArea()}") //print the area of the rectangle using string interpolation
val circle = new Circle(2, "red") //create a new Circle object with radius 2 and color "red"
println(s"The circumference of the circle is ${circle.getCircumference()}") //print the circumference of the circle using string interpolation
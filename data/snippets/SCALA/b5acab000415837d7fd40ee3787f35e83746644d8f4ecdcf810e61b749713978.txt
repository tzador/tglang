/*
This is a complex code snippet in Scala.
It creates a class called "Person" with a few properties and methods.
The first line imports the necessary packages. 
*/
import scala.collection.immutable.{HashMap, HashSet}
import scala.concurrent.duration.Duration

class Person(private val name: String, private var age: Int) {
  /*
  This method checks if the person's name contains a specific string.
  If it does, it returns true. Otherwise, it returns false.
  */
  def checkNameContains(str: String): Boolean = {
    name.contains(str)
  }

  /*
  This method updates the person's age by a given amount.
  If the new age is less than 0, it throws an exception.
  If the new age is greater than 100, it prints a warning.
  */
  def updateAge(amount: Int): Unit = {
    age += amount
    if (age < 0) {
      throw new IllegalArgumentException("Age cannot be less than 0.")
    } else if (age > 100) {
      println("Warning: Age is greater than 100.")
    }
  }

  /*
  This method returns a string representation of the person's name and age.
  */
  def getInfo(): String = {
    "This person's name is " + name + " and their age is " + age + "."
  }
}

// Example usage:
// Create a new person with name "John" and age 30
val john = new Person("John", 30)
// Check if their name contains "o"
val isNameContainsO = john.checkNameContains("o")
// Update their age by 20
john.updateAge(20)
// Get the person's info
val personInfo = john.getInfo()

/*
Expected output:
isNameContainsO: Boolean = true
personInfo: String = This person's name is John and their age is 50.
*/
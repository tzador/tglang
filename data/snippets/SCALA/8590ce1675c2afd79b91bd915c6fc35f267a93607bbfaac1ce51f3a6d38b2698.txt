// This is a complex code snippet written in Scala

// Defining a case class for a car
case class Car(make: String, model: String, year: Int, color: String, mileage: Int)

// Creating an empty list to store cars
var carList = List[Car]()

// Creating an instance of the case class
val toyotaCamry = Car("Toyota", "Camry", 2020, "Silver", 0)

// Adding the newly created car to the list
carList = toyotaCamry :: carList

// Printing out the list of cars using a for loop
for(car <- carList) {
  println(s"${car.make} ${car.model} - ${car.color} (${car.year}), ${car.mileage} miles")
}

// Defining a function to calculate the average mileage of cars in the list
def getAverageMileage(cars: List[Car]): Double = {
  var totalMileage = 0
  for(car <- cars) {
    totalMileage += car.mileage
  }
  totalMileage.toDouble / cars.length.toDouble
}

// Printing out the average mileage of cars in the list
println("\nAverage mileage of cars in list: " + getAverageMileage(carList))

// Sorting the list of cars by year using the sortBy method
val sortedList = carList.sortBy(_.year)

// Printing out the sorted list of cars
println("\nSorted list of cars by year:\n")
for(car <- sortedList) {
  println(s"${car.make} ${car.model} - ${car.color} (${car.year}), ${car.mileage} miles")
}
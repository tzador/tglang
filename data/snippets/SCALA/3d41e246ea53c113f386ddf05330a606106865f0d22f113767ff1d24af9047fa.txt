/**
 * A class representing a 2-dimensional point.
 * @param x the x-coordinate of the point
 * @param y the y-coordinate of the point
 */
class Point2D(val x: Double, val y: Double) {
  
  /**
   * A method to determine the distance between this point and another point.
   * @param other the other point
   * @return the distance between the two points
   */
  def distanceTo(other: Point2D): Double = {
    val dx = this.x - other.x
    val dy = this.y - other.y
    math.sqrt(dx * dx + dy * dy)
  }
  
  /**
   * A method to move this point by a specified amount.
   * @param deltaX the amount to move in the x-direction
   * @param deltaY the amount to move in the y-direction
   * @return the new updated point after moving
   */
  def move(deltaX: Double, deltaY: Double): Point2D = {
    new Point2D(this.x + deltaX, this.y + deltaY)
  }
  
  /**
   * A method to rotate this point around the origin by the given angle.
   * @param angle the angle of rotation in radians
   * @return the new updated point after rotation
   */
  def rotate(angle: Double): Point2D = {
    val newX = this.x * math.cos(angle) - this.y * math.sin(angle)
    val newY = this.x * math.sin(angle) + this.y * math.cos(angle)
    new Point2D(newX, newY)
  }
  
  /**
   * A method to create a new point by adding the components of this point and another point.
   * @param other the other point
   * @return the sum of the two points
   */
  def +(other: Point2D): Point2D = {
    new Point2D(this.x + other.x, this.y + other.y)
  }
}
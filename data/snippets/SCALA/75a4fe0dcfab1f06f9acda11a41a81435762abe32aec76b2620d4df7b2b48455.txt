/**
 * This is a function that calculates the factorial of a given integer.
 * It uses tail recursion to avoid stack overflow for large numbers.
 *
 * @param num The input number whose factorial is to be calculated.
 * @return The factorial of the input number.
 */
def factorial(num: Int): Int = {
  @scala.annotation.tailrec
  def factorialHelper(counter: Int, result: Int): Int = {
    if (counter == 0) result
    else factorialHelper(counter - 1, result * counter)
  }

  factorialHelper(num, 1)
}

println(factorial(10)) // Output: 3628800
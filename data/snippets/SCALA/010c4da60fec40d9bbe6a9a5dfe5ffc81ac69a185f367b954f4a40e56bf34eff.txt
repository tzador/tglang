// This is a function that calculates the sum of two numbers
// Parameters: num1 - first number, num2 - second number
// Returns: the sum of the two numbers
def sum(num1: Int, num2: Int): Int = {
  return num1 + num2
}

// This is a for loop that iterates through a list of numbers
// Parameters: numbers - list of numbers
// Returns: nothing
for (number <- numbers) {
  println(number)
}

// This is a class representing a person
// Parameters: name - name of the person, age - age of the person, occupation - occupation of the person
class Person(var name: String, var age: Int, var occupation: String) {
  // This is a method that prints out the information of the person
  // Parameters: none
  // Returns: nothing
  def getInfo(): Unit = {
    println(s"Name: $name, Age: $age, Occupation: $occupation")
  }
}

// This is a case class representing a student
// Parameters: name - name of the student, age - age of the student, major - major of the student
case class Student(name: String, age: Int, major: String)

// This is a list of students
var studentsList: List[Student] = List(Student("John", 20, "Computer Science"), Student("Jane", 22, "Engineering"), Student("Tom", 21, "Mathematics"))

// This is a function that filters out students based on their major
// Parameters: students - list of students, major - major to filter by
// Returns: filtered list of students with the given major
def filterStudents(students: List[Student], major: String): List[Student] = {
  return students.filter(_.major == major)
}

// This is a higher-order function that takes in a list and a function as parameters
// Parameters: list - list of elements, func - function that operates on elements of the list
// Returns: list with elements operated on by the given function
def operateOnList[A](list: List[A], func: A => A): List[A] = {
  return list.map(func)
}

// This is a partial function that multiplies an integer by 2
// Parameters: num - input integer
// Returns: multiplication result
val multiplyByTwo: PartialFunction[Int, Int] = {
  case num: Int => num * 2
}

// This is an implicit class that adds a capitalize method to Strings
implicit class StringImprovements(s: String) {
  // This is a method that capitalizes the first letter of a string
  // Parameters: none
  // Returns: capitalized string
  def capitalize: String = s.head.toUpper + s.tail
}
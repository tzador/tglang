// This program calculates the sum of all even Fibonacci numbers below a given limit

// Function to check if a number is even
def isEven(number: Int): Boolean = {
  if (number % 2 == 0) true else false
}

// Function to generate the Fibonacci sequence below a given limit
def generateFibonacciSequence(limit: Int): List[Int] = {
  var sequence = List(1, 2) // initialize the starting sequence
  var next = sequence.tail.sum // calculate the next number in the sequence
  while (next < limit) { // keep adding numbers to the sequence until the limit is reached
    sequence = sequence :+ next
    next = sequence.tail.sum
  }
  sequence
}

// Function to calculate the sum of even numbers in a list
def calculateEvenSum(numbers: List[Int]): Int = {
  var sum = 0
  for (number <- numbers) { // iterate through the list
    if (isEven(number)) sum += number // add number to sum if it is even
  }
  sum
}

// Main function to call other functions and print the output
def main(): Unit = {
  val limit = 100 // limit for the Fibonacci sequence
  val sequence = generateFibonacciSequence(limit) // generate the sequence
  val evenSum = calculateEvenSum(sequence) // calculate the sum of even numbers
  println(s"The sum of even Fibonacci numbers below $limit is: $evenSum") // print output
}

main() // call main function
/**
 * This is a complex code snippet in SCALA
 * It is a function that takes in two strings as parameters
 * and returns a list of strings
 */
def stringConcat(stringOne: String, stringTwo: String): List[String] = {
  // using pattern matching to check for empty strings
  (stringOne, stringTwo) match {
    case("", _) => List(stringTwo) // if the first string is empty, return a list with the second string
    case(_, "") => List(stringOne) // if the second string is empty, return a list with the first string
    case(_, _) => { // if both strings are not empty
      val stringList = List(stringOne, stringTwo) // create a list with both strings
      stringList.map(_.toUpperCase()) // map over the list and convert all strings to uppercase
    }
  }
}

// calling the function and printing the result
val result = stringConcat("hello", "world")
print(result) // output: List(HELLO, WORLD)
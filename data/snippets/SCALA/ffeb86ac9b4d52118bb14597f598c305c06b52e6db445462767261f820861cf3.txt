//This is a function that takes in an integer and returns a list of its prime factors
def primeFactors(n: Int): List[Int] = {
    //Initialize an empty list to store the factors
    var factors: List[Int] = List()
    
    //Check from 2 to the input number, as 1 is not a prime number
    var num = 2
    while (num <= n) {
        //If number is a factor, add it to the list
        if (n % num == 0) {
            factors = factors :+ num
            //Divide the input number by the current factor
            n = n / num
            //Continue looping until input number is no longer divisible by the current factor
            while (n % num == 0) {
                //Add the factor to the list
                factors = factors :+ num
                //Divide the input number by the current factor
                n = n / num
            }
        }
        //Increment the number for the next iteration
        num += 1
    }
    //Return the list of factors
    factors
}

//Example input and output
primeFactors(60) //List(2, 2, 3, 5)
primeFactors(13195) //List(5, 7, 13, 29)
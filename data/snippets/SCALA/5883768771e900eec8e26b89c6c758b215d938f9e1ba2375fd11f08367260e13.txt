object SortingAlgorithm extends App {
  // Define a function to perform quicksort
  def quicksort(list: List[Int]): List[Int] = list match {
    // If the list is empty, return an empty list
    case Nil => Nil
    // If the list has at least one element
    case x :: xs =>
      // Split the list into two sublists
      val (smaller, larger) = xs.partition(_ < x)
      // Sort the sublists
      quicksort(smaller) ::: x :: quicksort(larger)
  }
  // Define a list of integers
  val numbers = List(10, 5, 3, 8, 2, 4)
  // Print the original list and the sorted list using the quicksort function
  println(s"Original List: $numbers")
  println(s"Sorted List: ${quicksort(numbers)}")
}

// Output:
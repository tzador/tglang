// Define a case class for a person
case class Person(name: String, age: Int)

// Create a list of person objects
val people = List(Person("John", 25), Person("Mary", 30), Person("Bob", 40))

// Use pattern matching and recursion to calculate the average age of the people
def averageAge(people: List[Person], total: Int = 0, count: Int = 0): Double = {
  people match {
    // Base case: empty list
    case Nil => total.toDouble / count
    // Recursive case: calculate total age and count of people
    case Person(_, age) :: tail => averageAge(tail, total + age, count + 1)
  }
}

// Call the averageAge function on the list of people and print the result
println(s"Average age: ${averageAge(people)}")
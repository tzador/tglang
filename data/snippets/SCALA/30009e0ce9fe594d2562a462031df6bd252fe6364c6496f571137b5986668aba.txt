object ComplexNumbers extends App {

  /**
   * A complex number in the form of a + bi
   *
   * @param realPart the real part of the complex number
   * @param imaginaryPart the imaginary part of the complex number
   */
  case class Complex(realPart: Double, imaginaryPart: Double) {
    def +(other: Complex): Complex = Complex(this.realPart + other.realPart, this.imaginaryPart + other.imaginaryPart)

    def -(other: Complex): Complex = Complex(this.realPart - other.realPart, this.imaginaryPart - other.imaginaryPart)

    def *(other: Complex): Complex =
      Complex(this.realPart * other.realPart - this.imaginaryPart * other.imaginaryPart,
        this.realPart * other.imaginaryPart + this.imaginaryPart * other.realPart)

    def /(other: Complex): Complex =
      Complex((this.realPart * other.realPart + this.imaginaryPart * other.imaginaryPart) / (Math.pow(other.realPart, 2) + Math.pow(other.imaginaryPart, 2)),
        (this.imaginaryPart * other.realPart - this.realPart * other.imaginaryPart) / (Math.pow(other.realPart, 2) + Math.pow(other.imaginaryPart, 2)))
  }

  val complexNumber1 = Complex(4, 3) // 4 + 3i
  val complexNumber2 = Complex(2, 5) // 2 + 5i

  val sum = complexNumber1 + complexNumber2 // 6 + 8i
  println(s"The sum of the two complex numbers is $sum")

  val difference = complexNumber1 - complexNumber2 // 2 - 2i
  println(s"The difference between the two complex numbers is $difference")

  val product = complexNumber1 * complexNumber2 // -7 + 26i
  println(s"The product of the two complex numbers is $product")

  val quotient = complexNumber1 / complexNumber2 // 0.7 - 0.4i
  println(s"The quotient of the two complex numbers is $quotient")

}
// This is a complex code snippet using Scala programming language
object ComplexCodeSnippet {
    def main(args: Array[String]): Unit = {
        // Create a list of numbers
        val numbers = List(1, 2, 3, 4, 5)
        
        // Filter the numbers to only include even numbers
        val evens = numbers.filter(_ % 2 == 0) 
        
        // Add 1 to all the numbers in the list using map function
        val incremented = numbers.map(_ + 1)
        
        // Use list comprehension to create a list of tuples
        val tuples = for {
            num1 <- numbers // Iterate through the list
            num2 <- numbers // Iterate through the list again
            if num1 != num2 // Only add tuples where numbers are not equal
        } yield (num1, num2)
        
        // Fold the list of numbers using a custom function
        val folded = numbers.fold(0)((total, num) => total + num)
        
        // Print the results
        println(s"List of numbers: $numbers")
        println(s"Even numbers: $evens")
        println(s"Numbers incremented by 1: $incremented")
        println(s"List of tuples: $tuples")
        println(s"Numbers folded: $folded")
    }
}

// Output:
// List of numbers: List(1, 2, 3, 4, 5)
// Even numbers: List(2, 4)
// Numbers incremented by 1: List(2, 3, 4, 5, 6)
// List of tuples: List((1,2), (1,3), (1,4), (1,5), (2,1), (2,3), (2,4), (2,5), (3,1), (3,2), (3,4), (3,5), (4,1), (4,2), (4,3), (4,5), (5,1), (5,2), (5,3), (5,4))
// Numbers folded: 15
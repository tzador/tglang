// Define a case class with a string and an integer field
case class TestData(str: String, num: Int)

// Define a function that takes in a list of TestData objects
// and returns the sum of the num field for all TestData objects
def sumList(list: List[TestData]): Int = {
  // Use pattern matching to handle the case of an empty list
  list match {
    // If list is empty, return 0
    case Nil => 0
    // If list is not empty, use recursion to calculate sum
    case head :: tail => head.num + sumList(tail)
  }
}

// Create a list of TestData objects
val testDataList = List(TestData("Hello", 1), TestData("World", 2), TestData("!", 3))

// Call the sumList function on the testDataList
val totalSum = sumList(testDataList)

// Print the total sum
println(totalSum)
/**
 * This is a complex class that performs various operations on a list of strings.
 *
 * @constructor Creates a new instance of the StringOperations class.
 * @param strList The list of strings to perform operations on.
 */
class StringOperations(strList: List[String]) {

  /**
   * Returns the total number of characters in the list of strings.
   *
   * @return The total number of characters.
   */
  def getTotalCharacters(): Int = {
    var total = 0
    strList.foreach(str => total += str.length())
    total
  }

  /**
   * Returns a new list with all strings sorted in alphabetical order.
   *
   * @return The sorted list of strings.
   */
  def getSortedStrings(): List[String] = {
    strList.sortWith((str1, str2) => str1.compareTo(str2) < 0)
  }

  /**
   * Returns a new list with all strings converted to uppercase.
   *
   * @return The list of uppercase strings.
   */
  def getUppercaseStrings(): List[String] = {
    strList.map(_.toUpperCase())
  }

  /**
   * Returns a new list with all strings filtered based on a given predicate.
   *
   * @param predicate The condition each string must satisfy.
   * @return The filtered list of strings.
   */
  def filterStrings(predicate: String => Boolean): List[String] = {
    strList.filter(predicate)
  }
}

// Example usage
val strList = List("Hello", "World", "Scala")
val stringOperations = new StringOperations(strList)

println(s"Total number of characters: ${stringOperations.getTotalCharacters()}")
// Output: Total number of characters: 16

println(s"Sorted strings: ${stringOperations.getSortedStrings()}")
// Output: Sorted strings: List(Hello, Scala, World)

println(s"Uppercase strings: ${stringOperations.getUppercaseStrings()}")
// Output: Uppercase strings: List(HELLO, WORLD, SCALA)

println(s"Filtered strings: ${stringOperations.filterStrings(_.length > 5)}")
// Output: Filtered strings: List(World, Scala)
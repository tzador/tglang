object Complex {
  // A class representing complex numbers
  class Complex(real: Double, imaginary: Double) {
    def re = real
    def im = imaginary

    // Addition operator for complex numbers
    def +(that: Complex) =
      new Complex(re + that.re, im + that.im)

    // Subtraction operator for complex numbers
    def -(that: Complex) =
      new Complex(re - that.re, im - that.im)

    // Multiplication operator for complex numbers
    def *(that: Complex) =
      new Complex(re * that.re - im * that.im,
                  re * that.im + im * that.re)

    // Division operator for complex numbers
    def /(that: Complex) = {
      val denom = that.re * that.re + that.im * that.im
      new Complex((re * that.re + im * that.im) / denom,
                  (im * that.re - re * that.im) / denom)
    }

    // String representation of complex numbers
    override def toString =
      re + (if (im < 0) "-" + (-im) else "+" + im) + "*i"
  }

  // Create two complex numbers
  val complex1 = new Complex(4, 5)
  val complex2 = new Complex(2, -3)

  // Print the addition of the two complex numbers
  println("The addition of " + complex1 + " and " + complex2 + " is: " + (complex1 + complex2))

  // Print the subtraction of the two complex numbers
  println("The subtraction of " + complex1 + " and " + complex2 + " is: " + (complex1 - complex2))

  // Print the multiplication of the two complex numbers
  println("The multiplication of " + complex1 + " and " + complex2 + " is: " + (complex1 * complex2))

  // Print the division of the two complex numbers
  println("The division of " + complex1 + " and " + complex2 + " is: " + (complex1 / complex2))
}
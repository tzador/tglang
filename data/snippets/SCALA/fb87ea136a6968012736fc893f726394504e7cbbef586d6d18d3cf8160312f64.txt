// Function to check if a number is prime or not 
def isPrime(num: Int) : Boolean = {
    // Base cases
    if (num <= 1) false
    else if (num == 2) true
    else if (num % 2 == 0) false
    else {
        var i: Int = 3
        // Loop until the square root of the number
        while (i * i <= num) {
            // Check if the number is divisible by current value of i
            if (num % i == 0) false
            i += 2
        }
        true
    }
}

// Function to generate a list of prime numbers up to a given limit 
def generatePrimes(limit: Int) : List[Int] = {
    // List to store prime numbers
    var primes: List[Int] = List()
    // Check numbers from 2 to the limit
    for (num <- 2 to limit) {
        // If the number is prime, add it to the list
        if (isPrime(num)) {
            primes = num :: primes        
        }
    }
    primes
}

// Example usage
val primesList: List[Int] = generatePrimes(100)
println(primesList) // Output: List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)
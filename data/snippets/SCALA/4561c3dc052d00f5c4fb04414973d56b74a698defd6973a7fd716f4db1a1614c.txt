// Function to check for prime numbers
def isPrime(num: Int): Boolean = {
  // Edge cases for 1 and 2
  if (num <= 1) false
  else if (num == 2) true
  else {
    // Loop from 2 to square root of num
    for (i <- 2 to Math.sqrt(num).toInt) {
      // If any number divides num evenly, return false
      if (num % i == 0) return false
    }
    // If loop completes without returning false, number is prime
    true
  }
}

// Function to print nth prime number using recursion
def printNthPrime(n: Int, currentNum: Int = 1, currentPrimeCount: Int = 0) {
  // If current number is prime and it is the nth prime number, print it and stop recursion
  if (isPrime(currentNum) && currentPrimeCount == n) println(currentNum)
  else {
    // If current number is prime, increase prime count by 1
    if (isPrime(currentNum)) printNthPrime(n, currentNum + 1, currentPrimeCount + 1)
    // If current number is not prime, check next number
    else printNthPrime(n, currentNum + 1, currentPrimeCount)
  }
}

// Call printNthPrime function with n value
printNthPrime(10)
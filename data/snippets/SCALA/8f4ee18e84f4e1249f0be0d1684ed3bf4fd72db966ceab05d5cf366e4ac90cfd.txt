// Create a class named 'BankAccount' with a constructor
class BankAccount(accountNumber: Int, holderName: String, var balance: Double) {
  // Define a method to deposit money into the account
  def deposit(amount: Double): Unit = {
    balance += amount
    println("$" + amount + " deposited into account #$accountNumber")
  }

  // Define a method to withdraw money from the account
  def withdraw(amount: Double): Unit = {
    if (balance < amount) {
      println("Insufficient funds to withdraw $" + amount + " from account #" + accountNumber)
    } else {
      balance -= amount
      println("$" + amount + " withdrawn from account #" + accountNumber + ", remaining balance: $" + balance)
    }
  }

  override def toString: String = s"Account #$accountNumber - Balance: $$$balance"
}

// Create an object to test the BankAccount class
object BankAccountTest {
  def main(args: Array[String]): Unit = {
    // Create a bank account object with account number, holder name, and starting balance
    val account = new BankAccount(123456, "John Smith", 5000.0)
    
    // Print account details
    println(account)

    // Deposit money into account
    account.deposit(1000.0)

    // Withdraw money from account
    account.withdraw(3000.0)

    // Try to withdraw more money than the balance
    account.withdraw(5000.0)

  }
}

// Output:
// Account #123456 - Balance: $5000.0
// $1000.0 deposited into account #123456
// $3000.0 withdrawn from account #123456, remaining balance: $3000.0
// Insufficient funds to withdraw $5000.0 from account #123456
//creating a case class "Person" with name and age as parameters
case class Person(name: String, age: Int)

//creating a list of Person objects
val peopleList = List(
  Person("John", 20),
  Person("Anna", 25),
  Person("Lily", 18),
  Person("Mike", 30),
  Person("Emma", 22)
)

//using pattern matching to filter out people 25 years or younger
val filteredPeople = peopleList.filter {
  //pattern matching using "case" keyword
  case Person(_, age) => age <= 25 //underscore used for wildcards, matches any name
}

//mapping through the filtered list to generate a list of names
val namesList = filteredPeople.map {
  //pattern matching again to extract "name" parameter from Person objects
  case Person(name, _) => name
}

//outputting the list of names
println(namesList) //output: List("John", "Lily", "Emma")
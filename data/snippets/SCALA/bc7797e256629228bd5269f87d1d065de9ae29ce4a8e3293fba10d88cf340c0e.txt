// Define a trait with an abstract method
trait Shape {
  def area(): Double
}

// Define a case class implementing the trait
case class Circle(radius: Double) extends Shape {
  // Implement the abstract method
  def area(): Double = Math.PI * radius * radius
}

// Define an object to test the implementation
object Test {
  def main(args: Array[String]): Unit = {
    // Create a Circle instance and call the area method
    val circle = Circle(5.0)
    val area = circle.area()
    println(s"Area of circle with radius 5: $area")
  }
}

// Output: Area of circle with radius 5: 78.53981633974483
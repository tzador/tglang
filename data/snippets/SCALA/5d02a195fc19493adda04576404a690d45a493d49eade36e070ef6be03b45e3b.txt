object ComplexFilter {
    // define a case class to represent an item in the dataset
    case class Item(id: Int, name: String, category: String, price: Double)
    
    // define a list of items
    val items = List(
        Item(1, "Apple", "Fruit", 1.99),
        Item(2, "Milk", "Dairy", 2.99),
        Item(3, "Bread", "Bakery", 3.99),
        Item(4, "Pasta", "Grocery", 4.99),
        Item(5, "Beef", "Meat", 5.99),
        Item(6, "Carrots", "Vegetables", 0.99),
        Item(7, "Soap", "Household", 1.49),
        Item(8, "Water", "Beverages", 0.50),
        Item(9, "Eggs", "Dairy", 2.49),
        Item(10, "Onions", "Vegetables", 0.79),
        Item(11, "Chicken", "Meat", 6.99),
        Item(12, "Cereal", "Breakfast", 3.99),
        Item(13, "Toilet Paper", "Household", 6.99),
        Item(14, "Soda", "Beverages", 1.99),
        Item(15, "Yogurt", "Dairy", 1.99),
        Item(16, "Bananas", "Fruit", 0.89),
        Item(17, "Cheese", "Dairy", 3.99),
        Item(18, "Steak", "Meat", 10.99),
        Item(19, "Spinach", "Vegetables", 1.49),
        Item(20, "Crackers", "Grocery", 2.99)
    )
    
    // filter the list of items by category and price
    val filteredItems = items.filter(item => item.category == "Dairy" && item.price < 3.00)
    
    // print out the filtered items
    println(s"Filtered Items: ${filteredItems}")
}
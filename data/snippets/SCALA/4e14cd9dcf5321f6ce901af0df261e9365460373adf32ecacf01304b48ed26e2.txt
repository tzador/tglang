// declaring a case class
case class Person(name: String, age: Int, address: String)

// creating an empty list of type Person
val personList = List[Person]()

// adding three instances of Person to the list
val newPersonList = personList ++ List(
Person("John", 25, "123 Main Street"),
Person("Jane", 30, "456 Oak Avenue"),
Person("Bob", 40, "789 Pine Road")
)

// filtering the list to only include people under the age of 35
val filteredList = newPersonList.filter(_.age < 35)

// mapping over the filtered list to create a new list of tuples
// the first element will be the person's name and the second element will be their address
val tupleList = filteredList.map(person => (person.name, person.address))

// sorting the tuple list by the person's name in descending order
val sortedList = tupleList.sortWith(_._1 > _._1)

// converting the list of tuples back into a list of Person case classes
val finalList = sortedList.map(tuple => Person(tuple._1, 0, tuple._2))

// printing out the final list of Person case classes
println(finalList)
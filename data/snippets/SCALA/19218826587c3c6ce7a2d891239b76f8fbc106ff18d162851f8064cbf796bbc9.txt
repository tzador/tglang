/**
 * This is a class that implements the Merge Sort algorithm
 * @param arr the array to be sorted
 * @tparam T the type of elements in the array
 */
class MergeSort[T: Ordering](arr: Array[T]) {

  /**
   * Helper function to merge two subarrays in sorted order
   * @param left the left subarray
   * @param right the right subarray
   * @return the merged sorted array
   */
  private def merge(left: Array[T], right: Array[T]): Array[T] = {
    val result = Array.ofDim[T](left.length + right.length)
    
    // initial index for left and right subarrays
    var i = 0
    var j = 0
    
    // initial index for merged array
    var k = 0
    
    // merging elements in sorted order
    while (i < left.length && j < right.length) {
      if (implicitly[Ordering[T]].lt(left(i), right(j))) { // check if element in left subarray is less than element in right subarray
        result(k) = left(i)
        i += 1
      } else {
        result(k) = right(j)
        j += 1
      }
      k += 1
    }
    
    // add remaining elements from left subarray
    while (i < left.length) {
      result(k) = left(i)
      i += 1
      k += 1
    }
    
    // add remaining elements from right subarray
    while (j < right.length) {
      result(k) = right(j)
      j += 1
      k += 1
    }
    
    result
  }

  /**
   * Main function to perform Merge Sort on the given array
   * @return the sorted array
   */
  def sort(): Array[T] = {
    // base case, return original array if it only has one element
    if (arr.length < 2) {
      arr
    } else {
      // find the middle index of the array
      val mid = arr.length / 2
      
      // split the array into two subarrays
      val (left, right) = arr.splitAt(mid)
      
      // recursively sort the two subarrays
      val sortedLeft = new MergeSort(left).sort()
      val sortedRight = new MergeSort(right).sort()
      
      // merge the two sorted subarrays using the merge helper function
      merge(sortedLeft, sortedRight)
    }
  }
}

// example usage
val arr = Array(5, 2, 8, 1, 3)
val sorted = new MergeSort(arr).sort()
println(sorted.mkString(", ")) // output: 1, 2, 3, 5, 8
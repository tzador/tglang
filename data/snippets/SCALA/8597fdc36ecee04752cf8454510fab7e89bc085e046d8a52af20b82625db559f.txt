/** This is a class that represents a car */
class Car(val year: Int, val make: String, val model: String, var color: String, var speed: Double) {
  // Speed limit in miles per hour
  private val speedLimit = 70.0

  /**
   * This method increases the car's speed by the given amount.
   * If new speed exceeds the speed limit, the speed is set to the speed limit.
   *
   * @param increaseValue The amount to increase the car's speed
   */
  def accelerate(increaseValue: Double): Unit = {
    val newSpeed = speed + increaseValue
    if (newSpeed > speedLimit) {
      speed = speedLimit
    } else {
      speed = newSpeed
    }
  }

  /**
   * This method decreases the car's speed by the given amount.
   * If new speed is less than 0, the speed is set to 0.
   *
   * @param decreaseValue The amount to decrease the car's speed
   */
  def brake(decreaseValue: Double): Unit = {
    val newSpeed = speed - decreaseValue
    if (newSpeed < 0) {
      speed = 0.0
    } else {
      speed = newSpeed
    }
  }

  /**
   * This method prints out the car's information
   * formatted as "year make model, color: speed MPH".
   */
  def printInfo(): Unit = {
    println(s"$year $make $model, color: $color - $speed MPH")
  }
}

// Create a new instance of Car class
val myCar = new Car(2020, "Toyota", "Corolla", "Red", 50)

// Call printInfo() method to display car's information
myCar.printInfo()

// Increase car's speed by 25 MPH
myCar.accelerate(25)

// Call printInfo() method again to display updated speed
myCar.printInfo()

// Decrease car's speed by 10 MPH
myCar.brake(10)

// Call printInfo() method again to display updated speed
myCar.printInfo()
object Fibonacci extends App {  // creates an object named Fibonacci and extends the app
  var first = 0  // declares a variable named first and assigns it a value of 0
  var second = 1  // declares a variable named second and assigns it a value of 1

  def calculateFibonacci(n: Int): Int = {  // creates a function named calculateFibonacci which takes in an integer and returns an integer
    if (n <= 1)  // checks if n is less than or equal to 1
      return n  // returns n if the condition is met
    else
      return calculateFibonacci(n - 1) + calculateFibonacci(n - 2)  // recursively calls the function with values n-1 and n-2 and adds the results together
  }

  println("Enter a number:")  // prints a message asking for input
  val input = scala.io.StdIn.readInt()  // reads in an integer input from the user

  if (input <= 0)  // checks if the input is less than or equal to 0
    println("Invalid input, please enter a positive number.")  // prints an error message
  else {  // executes the following code if the condition is not met
    println("The Fibonacci sequence up to " + input + " terms:")  // prints a message with the input value
    for (i <- 0 to input)  // creates a for loop that iterates from 0 to the input value
      println(calculateFibonacci(i))  // calls the calculateFibonacci function and prints the result for each iteration
  }
}
// Define an empty List variable
var list: List[Int] = List()
// Add elements to the list
list = 1 :: list
list = 2 :: list
list = 3 :: list
// Create a function to square each element of the list
def squareList(numbers: List[Int]): List[Int] = {
  // Use pattern matching to split the list into head and tail
  numbers match {
    case head :: tail => // Recursively call the function on the tail and prepend the square of the head to the result
      squareList(tail) ::: List(head * head)
    case Nil => Nil // Handle empty list case
  }
}
// Call the function on our list and capture the result in a new variable
val squaredList = squareList(list)
// Print the result
println(squaredList)
// Output: List(9, 4, 1)
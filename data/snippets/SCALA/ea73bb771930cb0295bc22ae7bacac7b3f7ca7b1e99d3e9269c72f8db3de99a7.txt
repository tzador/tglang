/*
* This is a function that takes in two parameters, a list of integers and a function.
* It applies the given function to each element in the list and returns the resulting list.
* @param list - the list of integers
* @param f - the function to be applied
* @return resultingList - the list resulting from applying the function to each element of the input list.
*/
def mapList(list: List[Int], f: Int => Int): List[Int] = {
  def helper(list: List[Int], result: List[Int]): List[Int] = list match {
    case Nil => result
    case x :: xs => helper(xs, f(x) :: result)
  }
  helper(list, Nil).reverse
}

val inputList = List(1, 2, 3, 4, 5)

// Example 1: apply the square function to the input list
mapList(inputList, x => x * x) //Output: List(1, 4, 9, 16, 25)

// Example 2: apply the double function to the input list
mapList(inputList, x => x * 2) //Output: List(2, 4, 6, 8, 10)
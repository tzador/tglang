// This code snippet uses a functional approach to generate the first n numbers in the Fibonacci sequence
// and return the sum of those numbers.
def fibonacci(n: Int): Int = {
  if (n <= 1)
    return n
  fibonacci(n-1) + fibonacci(n-2)
}

def generateFibonacciNumbers(n: Int): List[Int] = {
  if (n == 0)
    List()
  else
    fibonacci(n) :: generateFibonacciNumbers(n-1)
}

val n = 8
val fibonacciNumbers = generateFibonacciNumbers(n)
val sum = fibonacciNumbers.sum

println(s"The first $n Fibonacci numbers are: $fibonacciNumbers")
println(s"The sum of the first $n Fibonacci numbers is: $sum")

/* 
Output:
The first 8 Fibonacci numbers are: List(21, 13, 8, 5, 3, 2, 1, 1)
The sum of the first 8 Fibonacci numbers is: 54
*/
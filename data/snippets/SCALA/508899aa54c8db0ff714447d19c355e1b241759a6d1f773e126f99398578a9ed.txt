def mergeSort[T <% Ordered[T]](xs: List[T]): List[T] = {
  def merge(xs: List[T], ys: List[T]): List[T] = (xs, ys) match {
    case (Nil, ys) => ys
    case (xs, Nil) => xs
    case (x :: xs1, y :: ys1) =>
      if (x < y) x :: merge(xs1, ys)
      else y :: merge(xs, ys1)
  }

  val middle = xs.length / 2
  if (middle == 0) xs
  else {
    val (left, right) = xs splitAt middle
    merge(mergeSort(left), mergeSort(right))
  }
}
// This code snippet creates a custom class in Scala with inheritance and method overloading

// Creating a parent class named Vehicle
class Vehicle {
  // defining variables
  var make: String = ""
  var model: String = ""
  var year: Int = 0
  var color: String = ""

  // defining a method to print vehicle information
  def printInfo(): Unit = {
    println(s"Vehicle Information: Make- $make, Model- $model, Year- $year, Color- $color")
  }
}

// creating a child class named Car that inherits from Vehicle
class Car(make: String, model: String, year: Int, color: String, numOfDoors: Int, engineType: String) extends Vehicle {
  // defining new variables specific to the Car class
  var doors: Int = numOfDoors
  var engine: String = engineType

  // overloading printInfo() method to print additional car information
  override def printInfo(): Unit = {
    super.printInfo()
    println(s"Additional Car Information: Num of Doors- $doors, Engine Type- $engine")
  }
}

// creating an instance of the Car class and calling printInfo() method
val car = new Car("Ford", "Mustang", 2020, "Red", 2, "V8")
car.printInfo()
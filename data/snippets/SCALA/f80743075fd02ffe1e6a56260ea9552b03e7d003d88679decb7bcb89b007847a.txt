// Define a case class named "Person" with two parameters, name and age
case class Person(name: String, age: Int)

// Create a list of Person objects
val people = List(
   Person("John", 25),
   Person("Mary", 30),
   Person("Jane", 28),
   Person("Bob", 40)
)

// Create a function to filter the list by age, only keeping people over 30
val filteredPeople = people.filter(_.age > 30)

// Create a function to map over the list and return a tuple of the person's name and their age multiplied by 2
val mappedPeople = people.map(person => (person.name, person.age * 2))

// Create a function to reduce the list, adding up all the ages of the people in the list
val reducedPeople = people.reduce((person1, person2) => Person(person1.name + "-" + person2.name, person1.age + person2.age))

// Print the results of the filtered, mapped, and reduced lists
println(s"Filtered People: $filteredPeople")
println(s"Mapped People: $mappedPeople")
println(s"Reduced People: $reducedPeople")
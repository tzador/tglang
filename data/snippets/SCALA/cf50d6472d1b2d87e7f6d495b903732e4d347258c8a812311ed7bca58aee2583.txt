// This is a simple Scala program
// that uses functional programming concepts

// Define a list of numbers
val numbers = List(1, 2, 3, 4, 5)

// Define a function to transform the list by multiplying each number by 2
def transformNumbers(list: List[Int]): List[Int] = list.map(_ * 2)

// Call the function on the defined list
val transformedList = transformNumbers(numbers)

// Print the transformed list
println("Transformed list: " + transformedList)

// Define a function to filter the list, only keeping numbers greater than 3
def filterNumbers(list: List[Int]): List[Int] = list.filter(_ > 3)

// Call the function on the original list
val filteredList = filterNumbers(numbers)

// Print the filtered list
println("Filtered list: " + filteredList)

// Define a function to find the sum of the list
def sum(list: List[Int]): Int = list.reduce(_ + _)

// Call the function on the original list
val sumOfList = sum(numbers)

// Print the sum
println("Sum of list: " + sumOfList)

// Define a function to calculate the average of the list
def average(list: List[Int]): Double = list.foldLeft(0.0)(_ + _) / list.size

// Call the function on the original list
val averageOfList = average(numbers)

// Print the average
println("Average of list: " + averageOfList)
// This is a function that takes in a list of integers and sorts them using the Bubble Sort algorithm

def bubbleSort(numbers: List[Int]): List[Int] = {
    // Start with the list of numbers
    var sortedList = numbers
    // Set a boolean flag to check if any swaps were made
    var flag = true
    // Loop until no more swaps are made
    while (flag) {
        // Assume no swaps were made in this iteration
        flag = false
        // Loop through the list
        for (i <- 0 until sortedList.length - 1) {
            // Compare adjacent numbers and swap if necessary
            if (sortedList(i) > sortedList(i+1)) {
                val temp = sortedList(i)
                sortedList = sortedList.updated(i, sortedList(i+1))
                sortedList = sortedList.updated(i+1, temp)
                // A swap was made, so set flag to true
                flag = true
            }
        }
    }
    // Return the sorted list
    sortedList
}
// Example usage
val unsortedList = List(4, 2, 7, 1, 5)
val sortedList = bubbleSort(unsortedList)
println(sortedList) // output: List(1, 2, 4, 5, 7)
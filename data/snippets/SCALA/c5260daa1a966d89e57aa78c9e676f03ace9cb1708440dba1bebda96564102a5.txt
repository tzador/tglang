// Define a customizable data structure
case class CustomStructure[T] (var value: T, val index: Int, var name: String = "") {
  def modifyValue(f: T => T): CustomStructure[T] = {
    // Method to modify the value
    this.value = f(value)
    this
  }

  // Method to insert a value in the current index
  def insertValue(newValue: T): CustomStructure[T] = {
    // Checks if the current index is greater than or equal to 0
    if (index >= 0) {
      // Replaces the current value with the new value
      this.value = newValue
    }
    this
  }

  // Method to concatenate the name to the current value
  def concatenateName(newName: String): CustomStructure[T] = {
    // Combines the name with the current value
    this.name = this.value.toString + newName
    this
  }
}

// Create an instance of the custom structure with a string value, index of 5, and name "example"
val customInstance = CustomStructure[String]("Hello", 5, "example")

// Modify the value of the instance using the modifyValue method
customInstance.modifyValue(_.toUpperCase)

// Insert a new string value of "World" at the current index
customInstance.insertValue("World")

// Concatenate the name "Scala" to the current value
customInstance.concatenateName("Scala")

// Print the modified value, index, and name
println("Value: " + customInstance.value)
println("Index: " + customInstance.index)
println("Name: " + customInstance.name)
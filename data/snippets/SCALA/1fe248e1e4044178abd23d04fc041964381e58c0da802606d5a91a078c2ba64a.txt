//define case class for a student
case class Student(id: Int, name: String, age: Int, major: String)

//create a list of students
val studentList = List(Student(1, "John", 19, "Computer Science"), Student(2, "Jane", 20, "Biology"), Student(3, "Mike", 18, "Chemistry"), Student(4, "Lily", 21, "Mathematics"))

//use filter function to get students above 20 years old
val oldStudents = studentList.filter(_.age > 20)

//use map function to convert student names to uppercase
val upperCaseNames = studentList.map(_.name.toUpperCase)

//create a tuple of (id, name) for each student
val idAndName = studentList.map(s => (s.id, s.name))

//use foldLeft to calculate the average age of students
val averageAge = studentList.foldLeft(0)((sum, s) => sum + s.age) / studentList.length

//sort students by major in descending order
val sortedStudents = studentList.sortBy(_.major)(Ordering[String].reverse)

//use groupBy to group students by their majors
val groupedStudents = studentList.groupBy(_.major)
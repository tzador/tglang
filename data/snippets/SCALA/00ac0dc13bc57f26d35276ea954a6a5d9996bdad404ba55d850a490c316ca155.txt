// This is a complex code snippet in Scala

// Import necessary libraries
import scala.collection.mutable.ListBuffer
import scala.math.pow
import scala.util.{Try, Success, Failure}

// Define a case class
case class Person(name: String, age: Int, occupation: String)

// Define a list of Persons
val personList = List(
  Person("John", 25, "Engineer"),
  Person("Sarah", 30, "Teacher"),
  Person("Mark", 20, "Student"),
  Person("Lisa", 35, "Lawyer"),
  Person("Mike", 28, "Doctor")
)

// Create a Map of name to occupation
val occupationMap = personList.map(person => person.name -> person.occupation).toMap

// Define a function to calculate the average age of Persons in the list
def calculateAverageAge(persons: List[Person]): Double = {
  // Use a try block to handle potential exceptions
  Try {
    // Using foldLeft to calculate the sum of ages
    val sum = persons.foldLeft(0)((acc, person) => acc + person.age)
    // Calculate the total number of persons in the list
    val count = persons.length
    // Calculate the average age
    sum/count.toDouble
  } match {
    // If calculation is successful, return the result
    case Success(averageAge) => averageAge
    // If an exception occurs, print the error and return 0
    case Failure(ex) => println("Error calculating average age: " + ex.getMessage); 0
  }
}

// Call the function and store the result in a variable
val averageAge = calculateAverageAge(personList)

// Output the result
println("Average age of persons in the list: " + averageAge)

// Create a function to convert a number into its square
def square(x: Int): Int = {
  val result = pow(x, 2) // Using the pow function from math library
  result.toInt
}

// Create a list of numbers
val numList = List(1, 2, 3, 4, 5)

// Use map to square each number in the list
val squaredList = numList.map(num => square(num))

// Output the squared list
println("Squared list: " + squaredList)

// Create a list buffer to store strings
val strList = new ListBuffer[String]()

// Append "Hello" to the list buffer
strList.append("Hello")

// Use foreach to append "World" to each string in the list buffer
strList.foreach(str => strList.append(str + "World"))

// Output the final list
println("Final list: " + strList.toList)
// Defining a case class to represent a student
case class Student(name: String, id: Int, courses: List[String], grades: List[Int])

 // Creating a list of students
val students: List[Student] = List(
  Student("John Smith", 1001, List("Math", "English", "History"), List(85, 92, 78)),
  Student("Jane Doe", 1002, List("Science", "Art", "Music"), List(91, 87, 95)),
  Student("Mark Johnson", 1003, List("Geography", "Economics", "Computer Science"), List(79, 88, 94))
)

// Function to calculate the average grade for a specific course
def calculateAverageGrade(course: String, students: List[Student]): Double = {
  // Filter the list of students to only those taking the specified course
  val courseStudents: List[Student] = students.filter(_.courses.contains(course))

  // Map through the filtered list and extract the grades for the specified course
  val courseGrades: List[Int] = courseStudents.map(_.grades(courseStudents.indexOf(_))).filter(_ != 0)

  // Calculate the average grade by adding all grades and dividing by the number of grades
  val averageGrade: Double = courseGrades.sum / courseGrades.length

  averageGrade // Return the average grade
}

// Printing the average grade for Math
println(s"The average grade for Math is ${calculateAverageGrade("Math", students)}")
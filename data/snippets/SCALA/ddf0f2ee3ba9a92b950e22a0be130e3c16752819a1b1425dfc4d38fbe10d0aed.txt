// Define a case class to represent a person with name and age
case class Person(name: String, age: Int)

// Create instances of the person class with different names and ages
val person1 = Person("John", 30)
val person2 = Person("Mary", 25)

// Define a list of person
val peopleList = List(person1, person2)

// Create a function that calculates the average age of a list of people
def calculateAverageAge(people: List[Person]): Double = {
  // Use pattern matching to handle empty list case
  people match {
    case Nil => 0.0 // Return 0 if list is empty
    case head :: tail => // Uses recursion to iterate through the list
      val sum = head.age + calculateAverageAge(tail) // Calculate sum of ages
      sum / people.length.toDouble // Return average age
  }
}

// Print the average age of the people list
println(s"The average age is ${calculateAverageAge(peopleList)}")
def mergeSort[T](list: List[T])(implicit ord: Ordering[T]): List[T] = {
  val n = list.length / 2
  if (n == 0) list
  else {
    def merge(xs: List[T], ys: List[T]): List[T] =
      (xs, ys) match {
        case(Nil, ys) => ys
        case(xs, Nil) => xs
        case(x :: xs1, y :: ys1) =>
          if (ord.lt(x, y)) x :: merge(xs1, ys)
          else y :: merge(xs, ys1)
      }

    val (fst, snd) = list splitAt n
    merge(mergeSort(fst), mergeSort(snd))
  }
}
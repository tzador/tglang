// Declaring a case class with multiple parameters
case class Person(name: String, age: Int, nationality: String) 

// Creating an object of the case class
val person = Person("John", 25, "American")

// Declaring a function that takes in a list of Persons and returns the average age
def getAverageAge(persons: List[Person]): Double = {
  // Using pattern matching to extract the ages from the list of Persons
  val ages = persons.map {
    case Person(name, age, nationality) => age
  }
  // Calculating the average age using built-in method
  val averageAge = ages.sum.toDouble / ages.size
  
  // Returning the result
  averageAge
}

// Sample list of Persons
val personsList = List(
  Person("Jane", 30, "British"),
  Person("Lisa", 20, "Canadian"),
  Person("Adam", 40, "Australian")
)

// Calling the function and printing the result
println(getAverageAge(personsList))

// Output: 30.0
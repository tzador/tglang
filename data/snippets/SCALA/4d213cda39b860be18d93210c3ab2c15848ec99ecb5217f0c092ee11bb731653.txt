// Define a function that takes in two integers and returns their sum
def getSum(num1: Int, num2: Int): Int = {
    return num1 + num2
}

// Call the function and store the result in a variable
val result = getSum(5, 10)

// Print the result
println(result)

// Create a list of numbers
val numList = List(1, 2, 3, 4, 5)

// Use a for loop to iterate through the list and print each number multiplied by 2
for (num <- numList) {
    println(num * 2)
}

// Define a class called "Person" with properties for name, age, and occupation
class Person(val name: String, val age: Int, val occupation: String)

// Create an instance of the "Person" class
val person1 = new Person("John", 25, "Software Engineer")

// Print the person's name
println(person1.name)

// Define a case class called "Car" with properties for make, model, and year
case class Car(make: String, model: String, year: Int)

// Create a list of car objects
val carList = List(Car("Toyota", "Corolla", 2012), Car("Honda", "Civic", 2015), Car("Ford", "Mustang", 2018))

// Use pattern matching to print the make of each car in the list
carList.foreach {
    case Car(make, _, _) => println(make)
}

// Define a higher order function that takes in a list of integers and a function as parameters and applies the function to each element in the list, returning a list of results
def applyFunctionToIntList(intList: List[Int], function: Int => Int): List[Int] = {
    intList.map(function)
}

// Define a function that multiplies a number by 2
def multiplyBy2(num: Int): Int = {
    return num * 2
}

// Call the higher order function with a list of numbers and the multiplyBy2 function as parameters
val resultList = applyFunctionToIntList(List(1, 2, 3, 4, 5), multiplyBy2)

// Print the result
println(resultList)
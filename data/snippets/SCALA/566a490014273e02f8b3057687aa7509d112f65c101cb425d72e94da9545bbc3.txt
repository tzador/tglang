// Define a class called "Person" with constructor parameters "name" and "age"
class Person(name: String, age: Int) {
  // Define a method "introduce" that returns a string
  def introduce(): String = {
    // Concatenate the name and age to create introduction string
    s"My name is $name and I am $age years old."
  }
}

// Define a class called "Student" that extends from "Person" with constructor parameters "name", "age", and "major"
class Student(name: String, age: Int, major: String) extends Person(name, age) {
  // Define a method "study" that returns a string
  def study(): String = {
    // Concatenate the name and major to create study string
    s"I am a student named $name majoring in $major."
  }
}

// Define a class called "Teacher" that extends from "Person" with constructor parameters "name", "age", and "subject"
class Teacher(name: String, age: Int, subject: String) extends Person(name, age) {
  // Define a method "teach" that returns a string
  def teach(): String = {
    // Concatenate the name and subject to create teaching string
    s"I am a teacher named $name teaching $subject."
  }
}

// Create an instance of "Student" class and call "introduce" and "study" methods on it
val student = new Student("Jane", 20, "Computer Science")
println(student.introduce())
println(student.study())

// Create an instance of "Teacher" class and call "introduce" and "teach" methods on it
val teacher = new Teacher("John", 35, "Mathematics")
println(teacher.introduce())
println(teacher.teach())
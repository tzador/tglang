// Import necessary packages
import scala.util.Random
import scala.annotation.tailrec

// Define a case class Person with name and age as parameters
case class Person(name: String, age: Int)

// Create a list of Person objects
val people = List(
  Person("John", 21),
  Person("Jane", 25),
  Person("Jack", 30),
  Person("Jill", 28)
)

// Define a function to check if a person is over 25 years old
def isOver25(person: Person): Boolean = person.age > 25

// Filter the list of people based on the isOver25 function
val over25 = people.filter(isOver25)

// Define a higher-order function to calculate the average age of a list of people
def averageAge(people: List[Person], func: Person => Int): Int = {
  // Use a tail-recursive helper function to calculate the sum of all ages
  @tailrec
  def sumAges(remainingPeople: List[Person], sum: Int): Int = {
    if (remainingPeople.isEmpty) sum
    else sumAges(remainingPeople.tail, sum + func(remainingPeople.head))
  }

  // Calculate the average age
  val totalAges = sumAges(people, 0)
  val average = totalAges / people.length

  // Return the average age
  average
}

// Use the averageAge function to calculate the average age of the over 25s
val averageOver25 = averageAge(over25, (person: Person) => person.age)

// Print out the average age of the over 25s
println(s"The average age of the over 25s is $averageOver25")
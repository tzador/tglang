/**
* This is a program that reads in a list of integers from the console,
* calculates the sum and average of the numbers, and prints out the result.
**/

import scala.io.StdIn
import scala.annotation.tailrec

object SumAndAvgCalculator {

  def main(args: Array[String]): Unit = {
    // reads in the list of integers from the console and splits them into an array
    val numbers = StdIn.readLine("Enter a list of integers, separated by space:").split(" ").map(_.toInt)

    // calculates the sum and average using tail recursion
    val (sum, count) = sumAndCount(numbers)
    val avg = sum.toDouble / count

    // prints out the result
    println(s"The sum of the numbers is: $sum")
    println(s"The average of the numbers is: $avg")
  }

  /**
  * This function uses tail recursion to calculate the sum and count of a list of integers.
  * @param numbers the list of integers to calculate the sum and count from
  * @return a tuple containing the sum and count of the list of integers
  **/
  @tailrec
  def sumAndCount(numbers: Array[Int], currentSum: Int = 0, currentCount: Int = 0): (Int, Int) = {
    if (numbers.isEmpty) (currentSum, currentCount) // base case: list is empty, return the current sum and count
    else sumAndCount(numbers.tail, currentSum + numbers.head, currentCount + 1) // recursive call with updated sum and count
  }

}
// Declare a function that takes in two integers and returns their sum
def add(x: Int, y: Int): Int = {
    // Create a variable that holds the sum of the two integers
    val sum = x + y
    // Return the sum as the output of the function
    return sum
} 

// Call the function with the values 10 and 5
val result = add(10, 5)
// Print the result to the console
println(result)

// Create a list of integers
val numbers = List(1, 2, 3, 4, 5)
// Use a for loop to iterate through each number in the list
for(num <- numbers) {
    // Multiply the number by 2 and print the result
    println(num * 2)
}

// Create a class called "Person" with the parameters "name" and "age"
class Person(name: String, age: Int) {
    // Define a method to print the name and age of the person
    def printInfo() = { 
        println("Name: " + name)
        println("Age: " + age)
    }
}

// Create an instance of the Person class with the name "John" and age 25
val john = new Person("John", 25)
// Call the printInfo() method on the John object
john.printInfo()

// Declare a variable with a function as its value
val subtract = (x: Int, y: Int) => x - y
// Call the function and store the result in a variable
val result2 = subtract(8, 3)
// Print the result to the console
println(result2)

// Create a map with string keys and integer values
val map = Map("a" -> 1, "b" -> 2, "c" -> 3)
// Use pattern matching to handle different cases for each key-value pair in the map
map.foreach { case (key, value) =>
    key match {
        case "a" => println("Letter a has value: " + value)
        case "b" => println("Letter b has value: " + value)
        case "c" => println("Letter c has value: " + value)
        case _ => println("Unknown key")
    }
}

// Declare a trait with a method to print a message
trait Greeting {
    def greet(name: String): Unit = println("Hello, " + name + "!")
}

// Create a class "Greeter" that extends the Greeting trait
class Greeter extends Greeting {
    override def greet(name: String): Unit = println("Hey, " + name + "!")
}

// Create an instance of the Greeter class and call its greet method
val greeter = new Greeter()
greeter.greet("Bob")
class Person(name: String, age: Int) extends Human with Identifiable {
  // This is a Scala class that represents a person with a name and age.
  // It inherits from the Human class and implements the Identifiable trait.

  var gender: String = _ // declare the gender variable without assigning a value using the wildcard operator

  def sayHello(): Unit = { // define a method that prints a greeting to the person 
    println(s"Hello, my name is $name and I am $age years old.")
  }

  override def getID: String = s"${name.take(3)}$age" // implement the getID method from the Identifiable trait

  def canDrinkAlcohol: Boolean = age >= 21 // define a method that checks whether the person can drink alcohol based on their age

  private val hobbies: List[String] = List("reading", "hiking", "cooking") // declare a private value that contains a list of hobbies

  private def printHobbies(): Unit = { // define a private method that prints out the person's hobbies
    println("My hobbies include:")
    hobbies.foreach(hobby => println(s"- $hobby"))
  }

  def introduce(): Unit = { // define a method that introduces the person
    println(s"Hi, my name is $name and I am $age years old.")
    gender match {
      case "male" => println("I am a man.")
      case "female" => println("I am a woman.")
    }
    println("Nice to meet you!")
    if (canDrinkAlcohol) println("I am old enough to drink alcohol.")
    else println("I am not old enough to drink alcohol yet.")
    printHobbies() // call the private method to print the person's hobbies
  }
}
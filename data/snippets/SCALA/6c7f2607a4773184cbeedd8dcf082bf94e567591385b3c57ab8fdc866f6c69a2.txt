// This is a Scala code snippet

// Defining a class
class Person(val name: String, var age: Int) {
  def greet() = println(s"Hello, my name is $name and I am $age years old")
}

// Creating an instance of the class
val person = new Person("John", 30)

// Calling the greet() method
person.greet()

// Defining a function
def add(x: Int, y: Int): Int = {
  x + y
}

// Calling the function
val result = add(5, 10)

// Printing the result
println(result)

// Defining a list
val numbers = List(1, 3, 5, 7, 9)

// Using map and filter functions on the list
val filteredList = numbers.map(_ * 2).filter(_ > 5)

// Printing the result
println(filteredList)

// Creating a tuple and extracting its values
val personInfo = ("Jane", 25, "Student")
val (name, age, profession) = personInfo

// Printing the values
println(name)
println(age)
println(profession)

// Defining a case class
case class Car(brand: String, year: Int)

// Creating a list of cars
val cars = List(Car("Toyota", 2015), Car("Honda", 2018), Car("Ford", 2020))

// Filtering the list of cars
val filteredCars = cars.filter(_.year > 2016)

// Printing the result
println(filteredCars)

// Using pattern matching to print different messages based on input
def printMessage(message: Any): Unit = {
  message match {
    case str: String => println(s"Input is a string: $str")
    case num: Int => println(s"Input is an integer: $num")
    case _ => println("Input is something else")
  }
}

// Calling the function with different inputs
printMessage("Hello")
printMessage(10.5)
printMessage(true)
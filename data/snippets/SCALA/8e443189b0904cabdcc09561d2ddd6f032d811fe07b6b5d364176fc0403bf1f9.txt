// a function that checks if a given number is a perfect square
def isPerfectSquare(n: Int): Boolean = {
  // first, check if the number is negative
  if (n < 0) false
  // if the number is 0 or 1, it is a perfect square
  else if (n == 0 || n == 1) true
  else {
    // initialize variables to keep track of the squared root and the number of iterations
    var sqrt = 1
    var iterations = 0
    // loop through all possible values of sqrt, starting from 2
    while (sqrt * sqrt <= n) {
      // update sqrt by adding 1 to it
      sqrt += 1
      // increase the number of iterations
      iterations += 1
    }
    // the squared root of n will never be greater than sqrt - 1, so decrease sqrt by 1
    sqrt -= 1
    // check if the squared root multiplied by itself is equal to n
    if (sqrt * sqrt == n) {
      // print the number of iterations it took to find the perfect square
      println(s"Found the perfect square in $iterations iterations.")
      // return true if n is a perfect square
      true
    } else {
      // if n is not a perfect square, print an error message and return false
      println("The number is not a perfect square.")
      false
    }
  }
}

// examples of how to use the function
isPerfectSquare(25)  // outputs: Found the perfect square in 4 iterations.
isPerfectSquare(37)  // outputs: The number is not a perfect square.
isPerfectSquare(81)  // outputs: Found the perfect square in 9 iterations.
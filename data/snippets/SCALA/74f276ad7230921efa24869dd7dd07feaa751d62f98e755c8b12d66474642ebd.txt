import scala.collection.mutable
object Main extends App {
    // Define a case class representing a student
    case class Student(name: String, age: Int, major: String)

    // Create a mutable map that maps student names to their respective student objects
    val studentMap: mutable.Map[String, Student] = mutable.Map(
        "John" -> Student("John", 21, "Computer Science"),
        "Sarah" -> Student("Sarah", 20, "Biology"),
        "Michael" -> Student("Michael", 22, "Psychology")
    )

    // Loop through the student map and print out the student's name and major
    for ((name, student) <- studentMap) {
        println(s"Student name: $name | Major: ${student.major}")
    }

    // Add a new student to the map
    studentMap.put("Lisa", Student("Lisa", 19, "Mathematics"))

    // Sort the map by the students' ages in descending order
    val sortedMap = mutable.LinkedHashMap(studentMap.toSeq.sortWith(_._2.age > _._2.age):_*)

    // Update the major of the first student in the map
    sortedMap.update("John", Student("John", 21, "Electrical Engineering"))

    // Remove the student with the oldest age from the map
    sortedMap.remove(sortedMap.last._1)

    // Print out the final map
    println("Final Student Map:")
    for ((name, student) <- sortedMap) {
        println(s"Student name: $name | Age: ${student.age} | Major: ${student.major}")
    }
}
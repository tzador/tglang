object ComplexExample {
  // A case class representing a complex number with real and imaginary parts
  case class Complex(real: Double, imag: Double) {
    // A method to add two complex numbers
    def +(other: Complex): Complex = {
      Complex(real + other.real, imag + other.imag)
    }
    // A method to subtract two complex numbers
    def -(other: Complex): Complex = {
      Complex(real - other.real, imag - other.imag)
    }
    // A method to multiply two complex numbers
    def *(other: Complex): Complex = {
      Complex(real * other.real - imag * other.imag, real * other.imag + imag * other.real)
    }
    // A method to divide two complex numbers
    def /(other: Complex): Complex = {
      Complex((real * other.real + imag * other.imag) / (math.pow(other.real, 2) + math.pow(other.imag, 2)), 
      (imag * other.real - real * other.imag) / (math.pow(other.real, 2) + math.pow(other.imag, 2)))
    }
  }
  
  // Example usage
  val comp1 = Complex(3, 4) // Create a complex number with real part 3 and imaginary part 4
  val comp2 = Complex(2, 1) // Create another complex number with real part 2 and imaginary part 1
  
  // Perform operations on the complex numbers
  val additionResult = comp1 + comp2 // Add comp1 and comp2 together
  val subtractionResult = comp1 - comp2 // Subtract comp2 from comp1
  val multiplicationResult = comp1 * comp2 // Multiply comp1 and comp2
  val divisionResult = comp1 / comp2 // Divide comp1 by comp2
  
  // Print the results to the console
  println(s"The result of $comp1 + $comp2 is: $additionResult")
  println(s"The result of $comp1 - $comp2 is: $subtractionResult")
  println(s"The result of $comp1 * $comp2 is: $multiplicationResult")
  println(s"The result of $comp1 / $comp2 is: $divisionResult")
}
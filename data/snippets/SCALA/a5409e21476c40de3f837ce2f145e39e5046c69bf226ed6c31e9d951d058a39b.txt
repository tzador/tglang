// Define a class called "Person" with two parameters, "name" of type String and "age" of type Int
class Person(name: String, age: Int) {
  // Define a method within the class that returns a string 
  // with the person's name and age, using string interpolation
  def getNameAndAge: String = s"The person's name is $name and they are $age years old"
  // Define a method within the class that checks if the person is over 18 years old
  def isAdult: Boolean = {
    if(age >= 18) true else false
  }
}

// Create an instance of the Person class with the name "John" and age 25
val john = new Person("John", 25)
// Call the getNameAndAge method on the instance and print the output
println(john.getNameAndAge)

// Define a case class called "Employee" with three parameters, "name" of type String, 
// "age" of type Int, and "position" of type String
case class Employee(name: String, age: Int, position: String)

// Create a list of employees using the Employee case class
val employees = List(
  Employee("Jane", 30, "Manager"),
  Employee("Alex", 26, "Developer"),
  Employee("Sarah", 29, "Designer")
)

// Use the map function to add a new parameter "years of experience" to each employee, 
// with a default value of 0
val employeesWithExperience = employees.map(emp => emp.copy(yearsOfExperience = 0))

// Use the filter function to get a list of all employees over the age of 25
val experiencedEmployees = employeesWithExperience.filter(_.age > 25)

// Print the names and positions of the experienced employees using string interpolation
experiencedEmployees.foreach(emp => println(s"${emp.name} - ${emp.position}"))
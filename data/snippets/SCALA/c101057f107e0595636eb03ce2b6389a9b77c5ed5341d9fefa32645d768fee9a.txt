object Coordinates {
  // This class represents a geographical coordinate with latitude and longitude values
  class Coordinate(val latitude: Double, val longitude: Double) {

    // Method to calculate the distance between two coordinates using the Haversine formula
    def distanceTo(other: Coordinate) = {
      val earthRadius = 6371 // Radius of Earth in kilometers
      val deltaLatitude = Math.toRadians(other.latitude - this.latitude)
      val deltaLongitude = Math.toRadians(other.longitude - this.longitude)

      val a = Math.pow(Math.sin(deltaLatitude / 2), 2) + Math.cos(Math.toRadians(this.latitude)) * Math.cos(Math.toRadians(other.latitude)) * Math.pow(Math.sin(deltaLongitude / 2), 2)
      val c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))
      val distance = earthRadius * c * 1000 // Convert to meters
      distance
    }
  }

  // Method to find the average of a list of coordinates
  def findAverage(coordinates: List[Coordinate]): Coordinate = {
    // Calculate the sum of the latitudes and longitudes
    val (sumLatitude, sumLongitude) = coordinates.foldLeft(0.0, 0.0) {
      (result, coordinate) =>
        (result._1 + coordinate.latitude, result._2 + coordinate.longitude)
    }

    // Calculate the average by dividing the sum by the number of coordinates
    val averageLatitude = sumLatitude / coordinates.length
    val averageLongitude = sumLongitude / coordinates.length

    new Coordinate(averageLatitude, averageLongitude)
  }

  // Main method to test the functions
  def main(args: Array[String]): Unit = {
    // List of coordinates
    val coordinates = List(
      new Coordinate(37.7749, -122.4194),
      new Coordinate(34.0522, -118.2437),
      new Coordinate(41.8781, -87.6298)
    )

    // Calculate distance between two coordinates
    val distance = coordinates(0).distanceTo(coordinates(2))
    println(s"Distance between coordinates 1 and 3: $distance meters")

    // Find the average coordinates
    val averageCoordinates = findAverage(coordinates)
    println(s"Average coordinates: ${averageCoordinates.latitude}, ${averageCoordinates.longitude}")
  }
}
import scala.collection.mutable

// Define a function that takes in two integer values and returns the sum
def sum(x: Int, y: Int): Int = {
  x + y
}

/* Create a mutable list and add some elements to it */
val fruits: mutable.MutableList[String] = mutable.MutableList("apple", "banana", "orange")
fruits += "grapes"
fruits += "pineapple"

// Define a trait for a shape with a method to calculate area
trait Shape {
  def calculateArea(): Double
}

// Define a class for a rectangle that extends the Shape trait
class Rectangle(length: Double, width: Double) extends Shape {
  override def calculateArea(): Double = {
    length * width
  }
}

// Create an instance of the Rectangle class with length 5 and width 3
val rectangle = new Rectangle(5, 3)

// Print the area of the rectangle
println("The area of the rectangle is: " + rectangle.calculateArea())

// Define a case class for a student with name, age, and grade
case class Student(name: String, age: Int, grade: String)

/* Create a list of students and filter out those who are under 18 years old and have a grade of A */
val students: List[Student] = List(Student("John", 16, "A"), Student("Mary", 17, "B"), Student("Bob", 19, "A"), Student("Jane", 15, "C"))
val filteredStudents = students.filter(student => student.age < 18 && student.grade == "A")

// Print the names of the filtered students
for (student <- filteredStudents) {
  println(student.name)
}

// Define an object with a method to calculate the factorial of a number
object Factorial {
  def factorial(n: Int): Int = {
    if (n <= 1)
      1
    else
      n * factorial(n - 1)
  }
}

// Calculate the factorial of 5 and store it in a variable
val result = Factorial.factorial(5)

// Print the result
println("The factorial of 5 is: " + result)
trait Animal //defining the trait Animal
case class Dog(name: String) extends Animal //defining a case class Dog that extends trait Animal
case class Cat(name: String) extends Animal //defining a case class Cat that extends trait Animal

def showAnimalName(animal: Animal): Unit = { //defining a function to show name of animal
  animal match {
    case Dog(name) => println(s"This animal is a dog named $name")
    case Cat(name) => println(s"This animal is a cat named $name")
    case _ => println("Unknown animal") //for any other animal type, print "Unknown animal"
  }
}

val dog = Dog("Max") //creating an instance of Dog
val cat = Cat("Fluffy") //creating an instance of Cat

showAnimalName(dog) //prints "This animal is a dog named Max"
showAnimalName(cat) //prints "This animal is a cat named Fluffy"

//Classes in Scala can extend traits and can have their own constructors, making Scala a mix of object-oriented and functional programming language.
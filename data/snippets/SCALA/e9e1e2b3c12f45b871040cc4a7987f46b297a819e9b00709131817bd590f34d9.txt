// Define a function that takes in two parameters, a list of integers and a function that returns an integer 
def sumFunc(list: List[Int], func: Int => Int): Int = {
    // Use map to apply the function to each element in the list, returning a new list of transformed values
    val transformedList = list.map(func) 
    // Use reduce to add all elements in the transformed list, returning the sum of the transformed values
    val sum = transformedList.reduce((x, y) => x + y) 
    // Return the sum as the output of the function
    sum
}

// Define a list of integers
val numbers = List(1, 2, 3, 4, 5) 

// Define a function that returns the square of a given integer
def square(num: Int): Int = {
    val squaredNum = num * num 
    squaredNum
}

// Call the sumFunc function with the list of integers and the square function
val output = sumFunc(numbers, square) 

// Print the output
println(output) 


/* Output:
55
*/
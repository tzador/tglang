// Define case class Person with name, age, and occupation fields
case class Person(name: String, age: Int, occupation: String)

// Create a list of Person objects
val people: List[Person] = List(
  Person("John", 35, "Software Engineer"),
  Person("Emily", 28, "Data Scientist"),
  Person("Michael", 42, "Project Manager"),
  Person("Sarah", 31, "Marketing Manager")
)

// Define a function that filters out people above a certain age and returns a new list with only their names
def filterByAge(people: List[Person], age: Int): List[String] = {
  // Filter out people above the specified age
  val filteredPeople = people.filter(_.age > age)
  // Convert the remaining people to a list of names
  val names = filteredPeople.map(_.name)
  // Return the list of names
  names
}

// Call the function to filter out people above the age of 30 and print the result
println(filterByAge(people, 30))
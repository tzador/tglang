// Function to calculate factorial using tail recursion
def factorial(n: Int): Int = {
    // Define inner helper function with accumulator parameter
    def factHelper(x: Int, accumulator: Int): Int = {
         if (x == 0) accumulator // Base case, return the accumulator
         else factHelper(x - 1, accumulator * x) // Recursive call with updated accumulator
    }

    factHelper(n, 1) // Call helper function with initial accumulator value
}

val result = factorial(5) // Call factorial function and store result in variable

println(s"Factorial of 5 is: $result") // Print result using string interpolation
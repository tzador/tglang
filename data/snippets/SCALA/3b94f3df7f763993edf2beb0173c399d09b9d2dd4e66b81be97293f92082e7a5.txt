//declare a class named Person with two properties: name and age
class Person(var name: String, var age: Int)

//create a list of Person objects
val peopleList = List(new Person("John", 25), new Person("Mary", 31), new Person("David", 42))

//define a higher-order function that takes in a function (f) and a list of Persons, and then applies function (f) to each element in the list
def mapPerson[A, B](f: Person => B, people: List[Person]): List[B] = {
  //declare an empty list to store the results
  var results = List[B]()
  //use a for loop to iterate through each person in the list
  for (person <- people) {
    //call function (f) on each person and add the result to the results list
    results = f(person) :: results
  }
  //return the results list
  results
}

//define a function that calculates the average age of a list of Persons
def calcAverageAge(people: List[Person]): Int = {
  //initialize a variable to store the sum of ages
  var sum = 0
  //use a for loop to iterate through each person in the list
  for (person <- people) {
    //add the age of each person to the sum
    sum += person.age
  }
  //calculate the average age by dividing the sum by the number of people in the list
  sum / people.length
}

//call the mapPerson function and pass in the calcAverageAge function as the first argument
val avgAgeList = mapPerson(calcAverageAge, peopleList)

//print the results of the mapPerson function
println(avgAgeList)
/** 
 * This class represents a custom calculator with various mathematical operations.
 * It uses functional programming concepts and supports both integer and double calculations.
 */
class Calculator(val num: Double) {
  // variable to store the current number
  private val number: Double = num 
  
  /**
   * Method to add a given number to the current number and return the result.
   * 
   * @param num2 the number to be added to the current number
   * @return the sum of the current number and the given number
   */
  def add(num2: Double): Double = {
    num1 + num2
  }

  /**
   * Method to subtract a given number from the current number and return the result.
   * 
   * @param num2 the number to be subtracted from the current number
   * @return the difference between the current number and the given number
   */
  def subtract(num2: Double): Double = {
    num1 - num2
  }

  /**
   * Method to multiply a given number with the current number and return the result.
   * 
   * @param num2 the number to be multiplied with the current number
   * @return the product of the current number and the given number
   */
  def multiply(num2: Double): Double = {
    num1 * num2
  }

  /**
   * Method to divide the current number by a given number and return the result.
   * 
   * @param num2 the divisor
   * @return the quotient of dividing the current number by the given number
   */
  def divide(num2: Double): Double = {
    if (num2 == 0) {
      throw new IllegalArgumentException("Divisor cannot be zero! Please enter a non-zero value for num2.")
    } else {
      num1 / num2
    }
  }

  /**
   * Method to find the square root of the current number.
   * 
   * @return the square root of the current number
   */
  def sqrt(): Double = {
    math.sqrt(num1)
  }

  /**
   * Method to raise the current number to a given power and return the result.
   * 
   * @param power the power to raise the current number to 
   * @return the result of raising the current number to the given power
   */
  def power(power: Int): Double = {
    math.pow(num1, power)
  }
}
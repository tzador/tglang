// This is a complex code snippet in Scala
object ComplexSnippet {

  def main(args: Array[String]): Unit = {
    // Define a Map with integer keys and values
    val numbers = Map(1 -> "one", 2 -> "two", 3 -> "three")
    
    // Define a list of strings
    val colors = List("red", "blue", "yellow")
    
    // Use pattern matching to print the values from the map and list
    numbers.foreach { case (key, value) =>
      println(s"Number $key is $value") 
    }
    
    colors.foreach { color => println(s"I love $color") }
    
    // Define a higher-order function that takes in a list and a function as parameters
    def modifyWithFunction[A, B](ls: List[A], f: A => B): List[B] = {
      ls.map(f(_))
    }
    
    // Use the higher-order function to transform the list of strings into uppercase
    val uppercaseColors = modifyWithFunction(colors, (s: String) => s.toUpperCase())
    
    // Print the transformed list
    println(uppercaseColors)
    
    // Compare two strings using the string interpolation feature
    val str1 = "Hello"
    val str2 = "hello"
    println(s"$str1 equals $str2? ${str1.equalsIgnoreCase(str2)}")
  }
}
/*
This code snippet is a simple function that generates a list of prime numbers within a given range.
It takes in two arguments - 'start' and 'end' - which represent the start and end of the range respectively.
The function then uses a 'for' loop and an 'if' statement to check if each number within the range is a prime number or not.
If the number is prime, it is added to the list and the loop continues until the end of the range.
Finally, the list of prime numbers is returned as the output of the function.
*/

def generatePrimesInRange(start: Int, end: Int): List[Int] = {

    // Initialize an empty list for storing prime numbers
    var primesList: List[Int] = List()

    // Loop through each number within the given range
    for (num <- start to end) {

        // Check if the current number is prime or not
        var isPrime: Boolean = true
        for (i <- 2 to num/2) {
            if (num % i == 0) {
                isPrime = false
            }
        }

        // If the number is prime, add it to the list
        if (isPrime) {
            primesList = primesList :+ num
        }
    }

    // Return the list of prime numbers
    primesList
}

// Call the function with a range of 1 to 20
generatePrimesInRange(1, 20) // Output: List(2, 3, 5, 7, 11, 13, 17, 19)
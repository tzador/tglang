/*
  This is a comment
*/

// Define a variable
val num = 10

// Define a function
def multiplyBy2(x: Int): Int = {
  x * 2
}

// Define a class
class Person(name: String, age: Int) {
  // Define a method
  def introduce(): String = {
    s"Hi, my name is $name and I am $age years old."
  }
}

// Create an instance of the Person class
val person1 = new Person("John", 25)

// Call the introduce method on the person instance
val intro = person1.introduce()

// Conditional statement
if (num > 0) {
  println(s"The number $num is positive")
} else if (num < 0) {
  println(s"The number $num is negative")
} else {
  println(s"The number is equal to zero")
}

// Looping through a collection
val list = List(1, 2, 3, 4, 5)

for (num <- list) {
  println(multiplyBy2(num))
}

// Pattern matching
val student = "John"

student match {
  case "John" => println("Student's name is John")
  case "Jane" => println("Student's name is Jane")
  case _ => println("Student's name is not John or Jane")
}
// Define an abstract class
abstract class Shape {
  var color: String              // Define a variable
  def area: Double               // Define an abstract method
  def perimeter: Double          // Define another abstract method

  // Define a concrete method
  def setColor(c: String): Unit = {
    color = c
    println("Shape color has been set to " + c)
  }
}

// Define a class that inherits from the abstract class
class Rectangle(var width: Double, var height: Double) extends Shape {
  // Implement the abstract methods
  override def area: Double = width * height
  override def perimeter: Double = 2 * (width + height)
}

// Create an instance of the Rectangle class and set the color
val rectangle = new Rectangle(5, 10)
rectangle.setColor("blue")

// Print the area and perimeter of the rectangle
println("Rectangle area: " + rectangle.area)
println("Rectangle perimeter: " + rectangle.perimeter)
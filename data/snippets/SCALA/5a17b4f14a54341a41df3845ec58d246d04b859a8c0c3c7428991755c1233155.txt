/**
 * A case class is a special kind of class that is optimized for 
 * immutability.
 * In this example, we define a case class called Person with 
 * three parameters: name, age, and address.
 * We also define a companion object with a method to create 
 * instances of the Person case class.
 */
case class Person(name: String, age: Int, address: String)

object Person {
  /**
   * This method creates a new instance of the Person case class 
   * and returns it.
   * @param name The name of the person
   * @param age The age of the person
   * @param address The address of the person
   * @return A new instance of the Person case class
   */
  def apply(name: String, age: Int, address: String): Person = {
    println("Creating a new person...")
    new Person(name, age, address)
  }
}

// Creating a new instance of the Person case class
val john = Person("John", 30, "123 Main Street")

// Printing the values of the instance
println(s"Name: ${john.name} | Age: ${john.age} | Address: ${john.address}")

// Updating the age of the instance
val johnUpdated = john.copy(age = 35)

// Printing the updated values
println(s"Name: ${johnUpdated.name} | Age: ${johnUpdated.age} | Address: ${johnUpdated.address}")
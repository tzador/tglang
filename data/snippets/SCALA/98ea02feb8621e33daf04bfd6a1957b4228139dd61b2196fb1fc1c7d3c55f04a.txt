/** This object represents a fruit stand where customers can buy various types of fruits. */

object FruitStand {
  private var inventory: Map[String, Int] = Map()

  /** Adds a specified number of a particular fruit to the inventory.
   * 
   * @param fruit the type of fruit being added
   * @param quantity the number of fruits being added
   */
  def addToInventory(fruit: String, quantity: Int): Unit = {
    if (inventory.contains(fruit)) {
      val currentQuantity: Int = inventory(fruit)
      inventory = inventory + (fruit -> (currentQuantity + quantity))
    } else {
      inventory = inventory + (fruit -> quantity)
    }
  }

  /** Removes a specified number of a particular fruit from the inventory.
   *
   * @param fruit the type of fruit being removed
   * @param quantity the number of fruits being removed
   */
  def removeFromInventory(fruit: String, quantity: Int): Unit = {
    if (inventory.contains(fruit)) {
      val currentQuantity: Int = inventory(fruit)
      if (currentQuantity < quantity) {
        println("Insufficient amount of fruit in inventory.")
      } else {
        inventory = inventory + (fruit -> (currentQuantity - quantity))
      }
    } else {
      println(s"$fruit is not in inventory.")
    }
  }

  /** Prints the current inventory of fruits and their quantities.
   *
   * @return a string representing the current inventory
   */
  def printInventory(): String = {
    var inventoryString: String = ""
    for ((fruit, quantity) <- inventory) {
      inventoryString += s"$fruit: $quantity\n"
    }
    inventoryString
  }
}

// Example usage:
FruitStand.addToInventory("apple", 10)
FruitStand.addToInventory("banana", 5)
FruitStand.addToInventory("orange", 8)
FruitStand.printInventory() // Prints "apple: 10, banana: 5, orange: 8"

FruitStand.removeFromInventory("apple", 3)
FruitStand.printInventory() // Prints "apple: 7, banana: 5, orange: 8"
FruitStand.removeFromInventory("mango", 2) // Prints "mango is not in inventory."
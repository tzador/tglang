// First define a case class
case class Student(name: String, age: Int, subjects: List[String])

// Create a list of students
val students = List(
  Student("John", 18, List("Maths", "Science")),
  Student("Jane", 20, List("English", "History")),
  Student("Bob", 17, List("Geography", "Physics"))
)

// Use foreach loop to print the names of all students
students.foreach(student => println(s"Student name: ${student.name}"))

// Use filter to get students with age greater than 18
val oldStudents = students.filter(_.age > 18)

// Use map to create a new list of students with incremented age
val newStudents = students.map(student => Student(student.name, student.age + 1, student.subjects))

// Use reduce to get the total age of all students
val totalAge = students.map(_.age).reduce(_ + _)

// Sort the students based on their name in ascending order.
val sortedStudents = students.sortWith((student1, student2) => student1.name < student2.name)

// Use pattern matching to check if any student has Maths in their subjects
val hasMaths = students.exists {
  case Student(_, _, subjects) => subjects.contains("Maths")
}
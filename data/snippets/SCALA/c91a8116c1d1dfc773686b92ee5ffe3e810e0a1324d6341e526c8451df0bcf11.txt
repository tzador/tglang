// This is a multiline comment

/* This is a
   multiline comment 
   with multiple lines */

// Define a class with a constructor
class Person(name: String, age: Int) { 

  // Define attributes
  var name: String = name 
  var age: Int = age 
  
  // Define a method
  def printInfo(): Unit = { 
    println("Name: " + name) 
    println("Age: " + age) 
  }
  
  // Define a companion object
  object Person { 
    
    // Define a factory method
    def apply(name: String, age: Int): Person = new Person(name, age) 
  }
} 

// Define a trait
trait Animal { 

  // Define an abstract method
  def makeSound(): Unit 
}

// Define a case class
case class Dog(name: String) extends Animal { 

  // Define a method
  def makeSound(): Unit = { 
    println(name + " barks!") 
  } 
} 

// Define a list of Person objects
val people = List(Person("John", 30), Person("Jane", 25), Person("Mike", 35), Person("Sarah", 20))

// Define a partial function
val personName: PartialFunction[Person, String] = { 
  case Person(name, _) => name 
}

// Print the names of people in the list
people.collect(personName).foreach(println) 

// Output:
John
Jane
Mike
Sarah
// Define a case class for a Person with two parameters: name and age
case class Person(name: String, age: Int)

// Create an object for storing and accessing Person objects
object PersonManager {
    // Initialize an empty list to store Person objects
    var personList = List[Person]()

    // Method to add a new Person object to the list
    def addPerson(person: Person): Unit = {
        personList = personList :+ person
    }

    // Method to retrieve a Person's name based on their age
    def getNameByAge(age: Int): String = {
        // Filter the personList to find a Person with matching age
        val filteredList = personList.filter(_.age == age)
        // Retrieve the name from the first (and only) Person in the filtered list
        filteredList(0).name
    }
}

// Create two Person objects and add them to the list using the addPerson method
val person1 = Person("John", 25)
val person2 = Person("Jane", 30)
PersonManager.addPerson(person1)
PersonManager.addPerson(person2)

// Retrieve the name of the Person with age 25 using the getNameByAge method
val name = PersonManager.getNameByAge(25)
// Print the name to the console
println(name) // Prints "John"
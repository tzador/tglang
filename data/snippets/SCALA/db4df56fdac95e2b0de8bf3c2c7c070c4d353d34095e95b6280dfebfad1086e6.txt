import scala.collection.mutable

// Create a class called Person with two properties, name and age
class Person(val name: String, val age: Int)

// Define a case class Student with three properties, name, age, and major. 
case class Student(name: String, age: Int, major: String)

// Create a mutable list of type Student 
val students = mutable.ListBuffer[Student]()

// Add four Student objects to the list
students += Student("John", 20, "Physics")
students += Student("Sarah", 22, "Math")
students += Student("Max", 19, "Biology")
students += Student("Emily", 21, "Computer Science")

// Define a function that takes in a list of Students and returns a list of Strings
def getNames(students: mutable.ListBuffer[Student]): List[String] = {
  // Create an empty list of Strings
  var names = List[String]()
  
  // Loop through each Student object in the list
  for (student <- students) {
    // Add the student's name to the list
    names = names :+ student.name
  }
  // Return the list of names
  names
}

// Call the function with the students list as the argument
val names = getNames(students)

// Print the list of names
println(names)
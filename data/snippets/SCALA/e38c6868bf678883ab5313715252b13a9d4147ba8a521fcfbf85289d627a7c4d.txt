// Create an abstract class called Shape
abstract class Shape

// Create a case class for a rectangle that extends Shape
case class Rectangle(width: Double, height: Double) extends Shape

// Create a case class for a circle that extends Shape
case class Circle(radius: Double) extends Shape

// Create a method to calculate the area of a shape
def calculateArea(shape: Shape): Double = {
  shape match {
    case Rectangle(width, height) => width * height
    case Circle(radius) => Math.PI * radius * radius
  }
}

// Create an instance of a rectangle
val rectangle = Rectangle(5, 10)

// Create an instance of a circle
val circle = Circle(10)

// Calculate the area of the rectangle
val rectangleArea = calculateArea(rectangle)

// Calculate the area of the circle
val circleArea = calculateArea(circle)

// Print the area of the rectangle and circle
println(s"The area of the rectangle is $rectangleArea. The area of the circle is $circleArea.")
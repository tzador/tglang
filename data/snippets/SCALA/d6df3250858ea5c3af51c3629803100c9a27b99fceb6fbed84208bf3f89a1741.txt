// Define a function that takes in a list of integers and returns the sum of all even numbers in the list
def sumEvenNumbers(list: List[Int]): Int = {
  // Use functional programming to filter out odd numbers
  val evenNumbers = list.filter(num => num % 2 == 0)
  // Use pattern matching to handle empty list case
  evenNumbers match {
    case Nil => 0 // If list is empty, return 0
    case head :: tail => head + sumEvenNumbers(tail) // Take head of list and add it to recursive call with tail of list
  }
}

// Define a list of integers
val nums = List(1, 2, 3, 4, 5, 6, 7, 8, 9)

// Call the function and print the result
println(sumEvenNumbers(nums)) // Output: 20
object Main extends App {
  // Define a case class representing a person
  case class Person(name: String, age: Int)
  
  // Create a list of Person objects
  val people = List(
    Person("John", 30),
    Person("Sarah", 25),
    Person("Mike", 40)
  )
  
 // Define a function to filter for people above a certain age
 def filterPeople(people: List[Person], minAge: Int): List[Person] = {
   // Use pattern matching to filter for people above the minAge
    people match {
      case Nil => Nil
      case head :: tail => {
        if (head.age >= minAge) head :: filterPeople(tail, minAge)
        else filterPeople(tail, minAge)
      }
    }
 }

 // Call the filterPeople function and print the result
 val filteredPeople = filterPeople(people, 30)
 println(filteredPeople)
}
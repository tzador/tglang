/* This is a SAS code snippet for data cleansing and manipulation */
/* The following code reads in a dataset and performs various data cleaning operations */

/* Set the directory location of your input dataset */
LIBNAME myinputlibrary '/path/to/input/dataset';

/* Create a new SAS dataset to store the cleaned data */
DATA mycleaneddataset;

/* Set the input dataset and rename variables if needed */
SET myinputlibrary.inputdataset (RENAME=(oldvar1=newvar1 oldvar2=newvar2));

/* Keep only the needed variables */
KEEP newvar1 newvar2 newvar3;

/* Replace any missing values with a specified value */
IF missing(newvar1) THEN newvar1 = 'Not available';

/* Convert character variables to numeric */
newvar2 = input(newvar2, 8.);

/* Drop any duplicate observations */
PROC SORT data=mycleaneddataset nodupkey;
BY newvar1 newvar2 newvar3;
RUN;

/* Create a new variable based on a condition */
IF newvar1 = 'Yes' THEN newvar3 = 'High';
ELSE IF newvar1 = 'No' THEN newvar3 = 'Low';
ELSE newvar3 = 'Unknown';

/* Convert numeric variable to categorical */
IF newvar2 < 50 THEN newvar2 = 'Low';
ELSE IF newvar2 >= 50 AND newvar2 <= 100 THEN newvar2 = 'Medium';
ELSE newvar2 = 'High';

/* Generate summary statistics */
PROC MEANS data=mycleaneddataset mean median min max;
VAR newvar2;

/* Get a random sample of 100 observations */
DATA myfinaldataset;
SET mycleaneddataset nobs=totalobs;
call streaminit(1234); /* Set a seed for reproducibility */
DO i = 1 TO 100;
    randomnum = RAND('UNIFORM');
    obsnum = floor(randomnum * totalobs) + 1;
    output;
END;
RUN;

/* Save the cleaned and sampled dataset in a new location */
LIBNAME myoutputlibrary '/path/to/output/dataset';
DATA myoutputlibrary.finaldataset;
SET myfinaldataset;
RUN;
/* This code snippet uses a variety of functions and logic to manipulate data and create new variables */

/* Create a new variable, 'total_sales', which sums the values from the 'product_sales' and 'service_sales' variables */
data sales_data;
    set input_data;
    total_sales = sum(product_sales, service_sales);

/* Use a conditional statement to create a new variable, 'high_sales', which identifies which products had sales greater than 500 */
    if product_sales > 500 then high_sales = 1;
    else high_sales = 0;

/* Use the 'proc means' procedure to calculate the mean and standard deviation of the 'total_sales' variable */
    proc means data = sales_data mean std;
    var total_sales;

/* Create a new variable, 'sales_ratio', which calculates the ratio of 'product_sales' to 'total_sales' */
    sales_ratio = product_sales / total_sales;

/* Use the 'proc sql' procedure to join the sales_data table with the product_info table on the product ID */
    proc sql;
    create table merged_data as
    select sales_data.*, product_info.product_name, product_info.category
    from sales_data
    left join product_info on sales_data.product_id = product_info.product_id;

/* Use the 'proc sort' procedure to sort the data in descending order based on the 'total_sales' variable */
    proc sort data = merged_data;
    by descending total_sales;

/* Use the 'proc print' procedure to print the first 10 observations of the sorted data */
    proc print data = merged_data(obs = 10);
run;
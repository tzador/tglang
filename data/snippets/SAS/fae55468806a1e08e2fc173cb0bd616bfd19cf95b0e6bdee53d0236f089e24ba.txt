/* This code snippet creates a dataset called 'employee_info' that combines the data from two existing datasets and includes new variables */

/* First, create the employee_info dataset */
data employee_info;

/* Define the variables and their attributes */
input EmployeeID $ Salary HireDate :mmddyy10. Status $;

/* Set the format for the HireDate variable */
format HireDate mmddyy10.;

/* Add two new variables, YearsEmployed and FullTime, to the dataset */
length YearsEmployed 3;
if Status = "Full Time" then FullTime = 1;
else FullTime = 0;

/* Merge data from the 'employee_data' and 'salary_data' datasets */
merge employee_data (keep = EmployeeID Salary) salary_data (keep = EmployeeID HireDate Status);

/* Use the 'EmployeeID' variable as the key for the merge */
by EmployeeID;

/* Calculate the YearsEmployed variable by subtracting the HireDate from today's date */
if Status = "Active" then YearsEmployed = intck('year', HireDate, today());
else YearsEmployed = intck('year', HireDate, today()) - 1;

/* Sort the dataset by the EmployeeID in ascending order */
proc sort data=employee_info;
by EmployeeID;
run;

/* Print the resulting dataset */
proc print data=employee_info;
run;

/* Output:
 The resulting dataset 'employee_info' will contain the variables EmployeeID, Salary, HireDate, Status, YearsEmployed, and FullTime. The data will be sorted by the EmployeeID and the YearsEmployed variable will be calculated based on the status of the employee. If the employee is active, the number of whole years between their hire date and today's date will be calculated. If the employee is not active, the number of whole years minus one will be calculated.
*/
/* Annotated SAS code snippet to create macro variables from a dataset */

/* Create a macro variable with a list of values from a dataset */
data _null_;
    /* Use the SET statement to read the dataset */
    set mydata;
    /* Use the RETAIN statement to retain the values in the macro variable */
    retain var_list;
    /* Use the IF statement to only include certain values */
    if var1 = 1 and var2 ne ' ' then
        /* Use the CATX function to concatenate values with a comma delimiter */
        var_list = catx(',', var_list, var3, var4);
    /* Use the MACRO statement to define a macro variable */
    call symputx('var_list', var_list);
run;

/* Create a macro variable with the number of observations in a dataset */
data _null_;
    /* Use the OPEN function to open the dataset */
    dsid = open('mydata');
    /* Use the ATTRN function to retrieve the number of observations in the dataset */
    nobs = ATTRN(dsid, 'NOBS');
    /* Use the CLOSE function to close the dataset */
    close(dsid);
    /* Use the MACRO statement to define a macro variable */
    call symputx('nobs', nobs);
run;

/* Create a macro variable with the names of variables in a dataset */
data _null_;
    /* Use the ATTRN function to retrieve the number of variables in the dataset */
    numvars = ATTRN(dsid, 'NVARS');
    /* Use a DO loop to iterate through each variable */
    do i = 1 to numvars;
        /* Use the VARNAME function to retrieve the variable name */
        var_name = VARNAME(dsid, i);
        /* Use the CATX function to concatenate variable names with a comma delimiter */
        var_names = catx(',', var_names, var_name);
    end;
    /* Use the MACRO statement to define a macro variable */
    call symputx('var_names', var_names);
run;
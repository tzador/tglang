/* Create a macro variable that contains the maximum date in a given dataset */

%let maxdate = %sysfunc(intnx(month, %sysfunc(today()), -1, end), date9.);
/* This %let statement creates a macro variable named maxdate, 
and uses the intnx function to find the maximum date in the current month in the dataset. 
It uses the today() function to get the current date, 
and then subtracts 1 month (-1) and specifies the end of the month as the interval.
The date is formatted using the date9. format. */

/* Create a macro to count the number of records where the date is equal to the maximum date */
%macro count_records(maxdate, dataset);
    %let count = 0; /* Set the counter variable to 0 */
    data _null_;
        set &dataset (where=(date=&maxdate)); /* Subset the dataset where the date is equal to the maximum date */
        call symput('count', symget('count') + 1); /* Increment the counter variable by 1 for each record */
    run;
%mend count_records;
/* This %macro statement creates a macro named count_records that takes in two parameters: 
maxdate (the maximum date macro variable created earlier) and dataset (the name of the dataset to be counted).
It then sets the count variable to 0, and uses the data _null_ step to select and count the records where the date is equal to the maximum date.
The call symput function is used to store the count variable as a macro variable named count. */

/* Call the count_records macro and pass in the maxdate macro variable and the dataset to be counted */
%count_records(&maxdate, Sales_Data);
/* This %count_records statement calls the previously created macro and passes in the maxdate macro variable and the Sales_Data dataset.
The result is a new macro variable named count, which contains the number of records where the date is equal to the maximum date. */
/** This code snippet shows how to preprocess and clean a dataset in SAS. **/

/* Importing the dataset */
DATA mydata;
	INFILE 'C:\Users\mydata.csv'
	DLM=',' /*specifying that the data is delimited by comma*/
	DSD; /*indicates that the data set has values separated by delimiters*/

	/* Defining the variables and their attributes */
	LENGTH var1-var5 $20. /*specifying the length of character variables*/
	INFORMAT var6 MMDDYY10.;  /*converting variable from character to date format*/
	FORMAT var6 DATE9.; /*specifying the output format of the date variable*/

	/* Inputting the data */
	INPUT var1 $ var2-var5 var6 ; /*specifying the variables to read and their order*/
RUN;

/* Removing null values */
DATA mydata;
	SET mydata; /*using SET statement to modify the data set*/

	/* Checking for null values in each variable */
	IF MISSING(var1) THEN var1='NA'; /*if the value for var1 is missing, replace with 'NA'*/

RUN;

/* Renaming variables */
DATA mydata;
	SET mydata; /*using SET statement to modify the data set*/

	RENAME var2 = newvar2; /*renaming var2 to newvar2*/

RUN;

/* Removing duplicate rows */
PROC SORT data=mydata out=newdata nodupkey; /*sorting the data set and removing duplicates*/
	/*key variables are all variables in the data set*/
	BY _ALL_;
RUN;

/* Converting data types */
DATA mydata;
	SET mydata; /*using SET statement to modify the data set*/

	/* Converting character variables to numeric */
	AGE = INPUT(AGE_CHAR, 8.); /*converting variable from character to numeric using INPUT function*/
	LENGTH AGE 8.; /*specifying the length of the numeric variable*/

	/* Converting numeric variables to character */
	PRODUCT_CODE_CHAR = PUT(PRODUCT_CODE, 3.); /*converting variable from numeric to character using PUT function*/
	LENGTH PRODUCT_CODE_CHAR 3.; /*specifying the length of the character variable*/
RUN;

/* Creating new variables and transforming existing ones */
DATA mydata;
	SET mydata; /*using SET statement to modify the data set*/

	/* Creating a new variable */
	NEW_VAR = var2 * 2; /*multiplying var2 by 2 and assigning the result to a new variable*/

	/* Using existing variables to transform data */
	AGE_RANGE = CATS('Age: ', PUT(AGE, 3.), ' - ', PUT(AGE+10, 3.)); /*concatenating strings and numeric variables using CATS function*/

RUN;
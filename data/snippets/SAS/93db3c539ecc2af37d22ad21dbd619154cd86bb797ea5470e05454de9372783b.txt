/*

This code snippet creates a dataset called "sample_dataset" and populates it with randomly generated data using PROC SQL and data step commands. It also includes conditional statements and functions to manipulate the data.

*/

/* Create a new SAS library called "mylib" */ 
libname mylib "C:\sasdata";

/* Generate a random number between 0 and 1 for each observation in the dataset */
data sample_dataset;
   do i = 1 to 1000;
      x = ranuni(0);
      output;
   end;
run;

/* Set the format for the variable "x" to display up to 6 decimal places */
proc format;
   picture xformat
   low-high = '000.000000';
run;

/* Rename the variable "x" to "random_number" */
proc sql;
   alter table sample_dataset
   rename x = random_number;
quit;

/* Add a new variable "y" to the dataset, where y = log(random_number) */
data sample_dataset;
   set sample_dataset;
   y = log(random_number);
run;

/* Create a new dataset called "sample_data" by selecting specific variables from "sample_dataset" */
data sample_data;
   set sample_dataset (keep = random_number y);

   /* Only include observations where random_number is less than 0.5 */
   if random_number < 0.5;

   /* Create a new variable "z" with values based on the value of "random_number" */
   if random_number < 0.25 then z = 0;
   else if random_number < 0.5 then z = 1;
   else if random_number < 0.75 then z = 2;
   else z = 3;
run;

/* Sort the observations in "sample_data" in descending order of "random_number" */
proc sort data = sample_data;
   by descending random_number;
run;

/* Create a new variable "w" with values based on the value of "random_number" using the lag function */
data sample_data;
   set sample_data;

   /* Use the lag function to access the previous observation's value of "random_number" */
   prev_random_number = lag(random_number);

   /* Compare the current and previous values of "random_number" to determine the value of "w" */
   if random_number > prev_random_number then w = 1;
   else if random_number < prev_random_number then w = -1;
   else w = 0;
run;

/* Calculate the mean and standard deviation of "random_number" using PROC MEANS */
proc means data = sample_data;
   var random_number;
run;

/* Print the first 10 observations of "sample_data" to the SAS log */
data _null_;
   set sample_data (obs = 10);
   put _all_;
run;

/* Create a bar chart of the distribution of "random_number" using PROC SGPLOT */
proc sgplot data = sample_data;
   vbar random_number;
run;
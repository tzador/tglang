/*This is a complex code snippet in SAS for data manipulation*/

/*Creating a new dataset from an existing dataset*/
data new_dataset;
    /*Creating new variables based on conditions using the if-then-else statement*/
    set existing_dataset;
    if age < 18 then underage_flag = 'Y';
    else underage_flag = 'N';
    
    /*Renaming variables using the rename statement*/
    rename orig_income = original_income;
    
    /*Dropping variables using the drop statement*/
    drop first_name last_name;
    
    /*Sorting the data in descending order based on a variable*/
    /*and keeping only the first 100 observations using the firstobs and obs options*/
    /*Adding a label to the variable*/
    set existing_dataset (keep = customer_id income_label)
    firstobs = 1 obs = 100
    rename = (customer_id = ID)
    label customer_id = 'Unique Customer ID'
    ordered by descending income;
    
    /*Creating a new variable using the sum function*/
    new_income = sum(original_income, bonus_income);
    
    /*Creating a new variable using the ifn function*/
    new_status = ifn(income > 100000, 'High', 'Low');
    
    /*Calculating the mean and standard deviation of a variable using the mean and std functions*/
    mean_age = mean(age);
    std_income = std(income);
    
    /*Creating a new dataset with only certain observations using the where statement*/
    /*and only certain variables using the keep statement*/
    data subset_dataset;
        set existing_dataset (keep = customer_id income)
        where age >= 25 and age <= 40;
run;

/*Merging two datasets based on a common variable using the merge statement*/
data merged_dataset;
    merge existing_dataset1 (in = a) existing_dataset2 (in = b);
    by customer_id;
    
    /*Creating a new variable based on the merged datasets using the sum function*/
    total_income = sum(original_income1, original_income2);
run;

/*Creating a pivot table using the proc tabulate procedure*/
proc tabulate data = existing_dataset;
    /*Creating a classification variable for rows using the age group format*/
    class age / style = [background = pink];
    /*Creating a classification variable for columns using the income group format*/
    class income / style = [background = lightblue];
    /*Calculating the mean and standard deviation for each combination of age and income group*/
    var age income / mean std;
    /*Adding a title and footnotes to the table*/
    title 'Mean Age and Income by Age and Income Group';
    footnote 'Data Source: Existing Dataset';
run;

/*Creating a scatter plot using the proc sgplot procedure*/
proc sgplot data = existing_dataset;
    /*Plotting age on the x-axis and income on the y-axis*/
    scatter x = age y = income;
    /*Adding a title and footnotes to the plot*/
    title 'Scatter Plot of Age and Income';
    footnote 'Data Source: Existing Dataset';
run;

/*Creating a frequency distribution using the proc univariate procedure*/
proc univariate data = existing_dataset;
    /*Creating a histogram of the age variable*/
    histogram age;
    /*Calculating the mean and standard deviation of the age variable*/
    var age / mean std;
    /*Adding a title and footnotes to the plot*/
    title 'Age Distribution';
    footnote 'Data Source: Existing Dataset';
run;
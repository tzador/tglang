/* This is a SAS code snippet that reads in data from a CSV file and performs various data cleaning and analysis tasks */
/* First, we define the path of the CSV file and specify the delimiter */
FILENAME mycsv '/users/data/mydata.csv' delimiter=',';

/* Next, we use the INFILE statement to specify the input file and read in the data */
INFILE mycsv;

/* We then use the INPUT statement to define the variables in the data and their formats */
INPUT 
    ID $char10. /* ID variable with character format of length 10 */ 
    Age num8. /* Age variable with numeric format of length 8 */ 
    Gender $char1. /* Gender variable with character format of length 1 */ 
    Income num8. /* Income variable with numeric format of length 8 */ 
    Product $char20. /* Product variable with character format of length 20 */ 
    Sales num8. /* Sales variable with numeric format of length 8 */ 
    ;

/* Now, we use the WHERE statement to filter the data based on specific conditions */
WHERE Age >= 18 /* Keep only records where Age is greater than or equal to 18 */
    AND Gender = 'F' /* Keep only records where Gender is equal to 'F' */
    AND Income > 50000; /* Keep only records where Income is greater than 50000 */

/* We then use the SORT procedure to sort the data by ID in ascending order */
PROC SORT data=mydata;
    BY ID;
RUN;

/* Next, we use the FORMAT procedure to create custom formats for the Income and Sales variables */
PROC FORMAT;
    VALUE incomefmt /* Custom format for Income variable */ 
        50000-high = 'High Income' /* Values greater than 50,000 are labeled as 'High Income' */ 
        30000-49999 = 'Medium Income' /* Values between 30,000 and 49,999 are labeled as 'Medium Income' */ 
        low-29999 = 'Low Income'; /* Values less than 30,000 are labeled as 'Low Income' */
    VALUE salesfmt /* Custom format for Sales variable */
        0-999.99 = 'Low Sales' /* Values between 0 and 999.99 are labeled as 'Low Sales' */
        1000-4999.99 = 'Medium Sales' /* Values between 1000 and 4999.99 are labeled as 'Medium Sales' */
        5000-high = 'High Sales'; /* Values greater than 5000 are labeled as 'High Sales' */
RUN;

/* Finally, we use the MEANS procedure to calculate the mean Income and Sales for each Product */
PROC MEANS data=mydata mean;
    CLASS Product;
    VAR Income Sales;
    FORMAT Income incomefmt. /* Apply custom formats to Income and Sales variables */
    FORMAT Sales salesfmt.;
RUN;

/* The MEANS procedure will output tables with the mean Income and Sales for each Product, based on our specified conditions and custom formats */ 
/* The code snippet ends here */
# Create a class named Car with properties brand, model, and color
class Car:
	"""A class to represent a car with brand, model, and color properties"""
	def __init__(self, brand, model, color):
		"""Initialize the car object with the specified brand, model, and color"""
		self.brand = brand
		self.model = model
		self.color = color
	
	def __str__(self):
		"""Return a string representation of the car object"""
		return f"This car is a {self.color} {self.brand} {self.model}"
		
	def drive(self):
		"""Simulate driving the car by printing a message"""
		print("Vroom vroom! Driving towards the destination...")
		
	# Define a child class ElectricCar that inherits from Car
class ElectricCar(Car):
	"""A child class of the Car class that inherits its properties and methods"""
	def __init__(self, brand, model, color, battery_capacity):
		"""Initialize the electric car object with additional property battery capacity"""
		super().__init__(brand, model, color)
		self.battery_capacity = battery_capacity
	
	def __str__(self):
		"""Return a string representation of the electric car object"""
		return f"This electric car is a {self.color} {self.brand} {self.model} with a {self.battery_capacity} kWh battery."
		
	# Create an instance of the ElectricCar class
	my_car = ElectricCar("Tesla", "Model 3", "red", 75)
	print(my_car)  # Output: This electric car is a red Tesla Model 3 with a 75 kWh battery.
	my_car.drive()  # Output: Vroom vroom! Driving towards the destination...
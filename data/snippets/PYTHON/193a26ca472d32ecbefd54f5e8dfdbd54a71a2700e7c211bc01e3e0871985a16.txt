# This code snippet finds the maximum sum of a subarray in a given array

def max_subarray_sum(arr): # Define a function that takes in an array
    n = len(arr) # Find the length of the array
    max_so_far = 0 # Initialize the maximum sum so far to 0
    max_ending_here = 0 # Initialize the maximum sum ending at current index to 0

    for i in range(n): # Loop through the array
        max_ending_here = max_ending_here + arr[i] # Add the current element to the maximum sum ending at current index
        if max_ending_here < 0: # If the maximum sum ending at current index is less than 0
            max_ending_here = 0 # Update it to 0 as it indicates the sum is not enough
        elif max_so_far < max_ending_here: # Check if the maximum sum so far is less than the maximum sum ending at current index
            max_so_far = max_ending_here # If yes, update the maximum sum so far to the maximum sum ending at current index
    
    return max_so_far # Return the maximum sum so far

arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4] # Sample array
max_sum = max_subarray_sum(arr) # Call the function and store the maximum sum in a variable
print(max_sum) # Print the maximum sum
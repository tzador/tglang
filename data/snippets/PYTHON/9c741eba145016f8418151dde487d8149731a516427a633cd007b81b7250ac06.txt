#Import necessary libraries
import pandas as pandas
import numpy as np
import matplotlib.pyplot as plt

#Read in dataset from CSV file
df = pandas.read_csv('data.csv')

#Preprocess data
#Fill in missing values with mean
mean = df['Age'].mean()
df['Age'] = df['Age'].fillna(mean)

#Convert categorical variables to numerical
gender_map = {'male': 1, 'female': 0}
df['Sex'] = df['Sex'].map(gender_map)

#Split data into training and validation sets
X = df[['Age', 'Sex', 'Pclass']].values
y = df['Survived'].values
X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2)

#Create decision tree classifier
from sklearn.tree import DecisionTreeClassifier
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

#Evaluate model performance on validation set
y_pred = model.predict(X_valid)
accuracy = model.score(X_valid, y_valid)
print("Accuracy:", accuracy)

#Generate confusion matrix
from sklearn.metrics import confusion_matrix
confusion_matrix(y_valid, y_pred)

#Plot decision tree
from sklearn.tree import export_graphviz
from IPython.display import Image
export_graphviz(model, out_file='tree.dot',
                feature_names=['Age', 'Sex', 'Pclass'],
                class_names=['Not Survived', 'Survived'],
                rounded=True, proportion=False, precision=2, filled=True)
!dot -Tpng tree.dot -o tree.png
Image(filename='tree.png')

#Save model
import pickle
with open('decision_tree.pkl', 'wb') as f:
    pickle.dump(model, f)
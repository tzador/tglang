# import necessary libraries
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# read dataset
df = pd.read_csv('data.csv')

# preprocess data
df = df.fillna(0)
df = df.drop_duplicates()
df['age'] = df['age'].astype('int')
df['salary'] = df['salary'].apply(lambda x: round(x/1000, 2))

# split data into training and testing sets
X = df.drop('salary', axis=1)
y = df['salary']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# train model
model = LinearRegression()
model.fit(X_train, y_train)

# make predictions
y_pred = model.predict(X_test)

# calculate metrics
mae = np.mean(abs(y_test - y_pred))
rmse = np.sqrt(np.mean((y_test - y_pred)**2))
r2 = model.score(X_test, y_test)

# print results
print("Model Coefficients:")
print(model.coef_)
print("Mean Absolute Error:", mae)
print("Root Mean Squared Error:", rmse)
print("R-squared:", r2)
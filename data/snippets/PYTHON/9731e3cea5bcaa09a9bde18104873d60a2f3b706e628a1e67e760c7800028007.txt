# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Define a function for calculating the mean squared error
def mean_squared_error(y_true, y_pred):
    """
    Calculates the mean squared error between two arrays

    Parameters:
        y_true (array): Ground truth values
        y_pred (array): Predicted values
    
    Returns:
        mse (float): Mean squared error
    """
    # Calculate the difference between true and predicted values
    diff = y_true - y_pred

    # Square the differences
    squared_diff = diff ** 2

    # Sum the squared differences
    sum_squared_diff = np.sum(squared_diff)

    # Calculate the mean squared error
    mse = sum_squared_diff / len(y_true)
    
    return mse

# Generate random data
x = np.random.random(100)
y_true = 2*x + np.random.normal(0, 0.1, 100)

# Create a scatter plot of the data
plt.scatter(x, y_true)
plt.title("Random Data")
plt.xlabel("X")
plt.ylabel("Y")
plt.show()

# Create a linear regression model using scipy's linregress function
slope, intercept, r_value, p_value, std_err = stats.linregress(x, y_true)

# Calculate the predicted values using the linear model
y_pred = slope*x + intercept

# Calculate the mean squared error
mse = mean_squared_error(y_true, y_pred)
print("Mean Squared Error: ", mse)
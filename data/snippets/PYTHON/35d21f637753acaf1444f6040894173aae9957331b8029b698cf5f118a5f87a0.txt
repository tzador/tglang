# This is a complex code snippet that uses a recursive function to calculate the Fibonacci sequence
# The Fibonacci sequence is a mathematical sequence where each number is the sum of the two preceding ones
# This code snippet takes in the length of the sequence and returns a list of the corresponding Fibonacci numbers
def fibonacci(length):
    # Base case: if the length is 1, return [0]
    if length == 1:
        return [0]
    # Base case: if the length is 2, return [0, 1]
    if length == 2:
        return [0, 1]
    # Otherwise, recursively calculate the previous two numbers in the sequence and add them to form the next number
    else:
        # Call fibonacci function with length-1 to get list with previous number
        prev = fibonacci(length-1)
        # Calculate previous number in sequence by getting the last (length-2)th element in the list
        prev_num = prev[length-2]
        # Calculate the second to last (length-3th) element in the list
        prev_prev = prev[length-3]
        # Calculate the next number in the sequence by adding the previous two numbers
        next_num = prev_num + prev_prev
        # Add the new number to the end of the list
        prev.append(next_num)
        # Return the list of Fibonacci numbers
        return prev
# Take input from user for length of Fibonacci sequence
length = int(input("Enter the length of the Fibonacci sequence: "))
# Call fibonacci function with the input length and store the resulting list in a variable
fibonacci_list = fibonacci(length)
# Print the list of Fibonacci numbers
print(fibonacci_list)
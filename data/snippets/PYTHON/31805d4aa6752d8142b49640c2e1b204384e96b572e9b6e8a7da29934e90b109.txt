# This code snippet uses classes and functions to generate a deck of cards and shuffle them
# Importing the necessary libraries
import random
from enum import Enum

# Defining a class for the card suit
class Suit(Enum):
    CLUBS = 'Clubs'
    DIAMONDS = 'Diamonds'
    HEARTS = 'Hearts'
    SPADES = 'Spades'

# Defining a class for the card rank
class Rank(Enum):
    ACE = 'Ace'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    JACK = 'Jack'
    QUEEN = 'Queen'
    KING = 'King'

# Defining a class for the individual card
class Card:
    def __init__(self, suit, rank):
        self.suit = suit
        self.rank = rank

    # Overriding the default __str__ function to display the card in the format 'Rank of Suit'
    def __str__(self):
        return f'{self.rank.value} of {self.suit.value}'

# Defining a class for the deck of cards
class Deck:
    def __init__(self):
        # Creating a list to hold the cards
        self.cards = []
        # Looping through every suit and rank combination to create a deck of 52 cards
        for suit in Suit:
            for rank in Rank:
                self.cards.append(Card(suit, rank))
    
    # Function to shuffle the deck using the random library
    def shuffle(self):
        random.shuffle(self.cards)
    
    # Function to deal a specific number of cards from the top of the deck and remove them from the deck
    def deal_cards(self, num):
        dealt_cards = []
        # Looping through the number of cards to deal
        for i in range(num):
            dealt_cards.append(self.cards.pop(0))
        return dealt_cards

# Creating an instance of the deck
my_deck = Deck()

# Shuffling the deck
my_deck.shuffle()

# Dealing 5 cards from the top of the deck
dealt_cards = my_deck.deal_cards(5)
# Printing the dealt cards
print('Dealt cards:')
for card in dealt_cards:
    print(str(card))
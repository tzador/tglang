# This code implements a recursive binary search algorithm to search for a specific element in a sorted list

# Binary search function
def binary_search(arr, low, high, target):
    # Check if low is greater than high
    if low > high:
        # If yes, target is not present in the list
        return -1
    else:
        # Find the middle index
        mid = (low + high) // 2
        # Check if element at mid is equal to target
        if arr[mid] == target:
            # If yes, return the index of the element
            return mid
        # Check if element at mid is greater than target
        elif arr[mid] > target:
            # If yes, recursively call binary search on the left sublist
            return binary_search(arr, low, mid - 1, target)
        # Otherwise, recursively call binary search on the right sublist
        else:
            return binary_search(arr, mid + 1, high, target)

# Sample sorted list to search
arr = [1, 3, 5, 7, 9, 11, 13, 15]
# Element to search for
target = 9
# Call binary search function with initial low and high indices
result = binary_search(arr, 0, len(arr) - 1, target)
# Print the result
print("Index of element", target, "in the list is:", result)
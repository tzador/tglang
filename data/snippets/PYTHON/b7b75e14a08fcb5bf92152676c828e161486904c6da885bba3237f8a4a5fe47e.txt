# This code snippet takes in a list of numbers, finds the longest increasing subsequence, 
# and returns the length of the subsequence
def longest_increasing_subsequence(nums):
    # create a list to store the longest increasing subsequence ending at each index
    LIS = [1] * len(nums)
    # loop through the list of numbers starting at the second index
    for i in range(1, len(nums)):
        # loop through the previous indices to check if a number is smaller than the current number
        for j in range(0, i):
            # if the number is smaller, check if the LIS value at the current index is less than
            # the LIS value at the previous index plus 1
            if nums[i] > nums[j] and LIS[i] < LIS[j] + 1:
                # if it is, update the LIS value at the current index
                LIS[i] = LIS[j] + 1
    # return the maximum LIS value from the list
    return max(LIS)
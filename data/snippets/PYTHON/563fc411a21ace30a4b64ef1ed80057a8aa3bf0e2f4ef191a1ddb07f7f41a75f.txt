# Importing necessary libraries
import numpy as np  # numpy library for efficient array manipulations
import pandas as pd  # pandas library for data analysis and manipulation
from sklearn.linear_model import LinearRegression  # scikit-learn library for machine learning algorithms
from sklearn.model_selection import train_test_split  # scikit-learn library for splitting data into train and test sets

# Loading dataset
df = pd.read_csv("data.csv")  # reading data from csv file into a dataframe

# Preprocessing data
# Removing any null values and converting categorical variables into numerical using one-hot encoding
df = df.dropna()  # dropping rows with null values
df = pd.get_dummies(df)  # converting categorical variables into numerical using one-hot encoding

# Splitting data into train and test sets
X = df.drop(columns=["target"])  # separating features from target variable
y = df["target"]  # extracting target variable
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)  # splitting data into 80% train and 20% test sets

# Training Linear Regression model
lr = LinearRegression()  # instantiating linear regression model
lr.fit(X_train, y_train)  # training model on train data

# Evaluating model on test data
test_predictions = lr.predict(X_test)  # predicting target variable on test data
test_score = lr.score(X_test, y_test)  # calculating model score on test data

# Printing results
print("Test predictions:", test_predictions)  # printing predicted values for target variable on test data
print("Model score:", test_score)  # printing model score on test data
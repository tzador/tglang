#This is a code for creating a class called "Vehicle" with various properties and functions

class Vehicle:
    #declaring class variables
    gears = 5  #number of gears
    speed = 50   #current speed in kmph
    weight = 1000   #weight of the vehicle in kg
    fuel = 50   #remaining fuel in liters
    
    #declaring constructor function
    def __init__(self, manufacturer, model, color):
        self.manufacturer = manufacturer   #assigning manufacturer passed in as a parameter
        self.model = model   #assigning model passed in as a parameter
        self.color = color   #assigning color passed in as a parameter
    
    #declaring methods for changing gear and accelerating
    def change_gear(self, is_up):
        if is_up:   #if true, then increase the gear
            self.gears += 1
        else:   #if false, then decrease the gear
            self.gears -= 1
            
    def accelerate(self, acceleration):
        self.speed += acceleration   #increase the speed by the amount passed in as a parameter
    
    #declaring method for calculating fuel efficiency
    def fuel_efficiency(self):
        return self.speed / self.fuel   #return the speed divided by the remaining fuel in kmpl
    
    #declaring static method for converting kmph to mph
    @staticmethod
    def to_mph(speed_kmph):
        return speed_kmph * 0.621371   #multiply kmph by 0.621371 to get mph
    
    #declaring class method for creating a new vehicle object with default properties
    @classmethod
    def new_vehicle(cls):
        return cls("Ford", "Mustang", "red")   #create a new vehicle object with default properties
        
#creating a new instance of the Vehicle class
car = Vehicle("Toyota", "Camry", "white")

#accessing and changing instance variables
car.speed = 60
car.change_gear(True)

#calling instance methods
car.accelerate(10)
print("Current speed in mph:", Vehicle.to_mph(car.speed))

#calling class methods
default_car = Vehicle.new_vehicle()
print("Manufacturer:", default_car.manufacturer)
print("Model:", default_car.model)
print("Color:", default_car.color)
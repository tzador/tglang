def quicksort(arr):  # define a function for performing quicksort on an array
    if len(arr) <= 1:  # check if the array is empty or has only one element, then return the array
        return arr
    pivot = arr[int(len(arr)/2)]  # choose a pivot element, here we choose the middle element
    less = [x for x in arr if x < pivot]  # create a new array with elements less than the pivot
    equal = [x for x in arr if x == pivot]  # create a new array with elements equal to the pivot
    greater = [x for x in arr if x > pivot]  # create a new array with elements greater than the pivot
    return quicksort(less) + equal + quicksort(greater)  # recursively call the quicksort function on the three arrays and concatenate them

my_arr = [4, 1, 6, 3, 2, 5]  # create an array to test the quicksort function
sorted_arr = quicksort(my_arr)  # call the quicksort function on the array
print(sorted_arr)  # print the sorted array
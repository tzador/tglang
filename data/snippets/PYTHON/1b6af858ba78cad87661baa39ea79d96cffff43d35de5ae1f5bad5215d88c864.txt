# Import necessary libraries
import math
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from keras.models import Sequential
from keras.layers import Dense, Activation

# Define the data
data = np.random.rand(1000,5)
labels = np.random.randint(2,size=1000)

# Split data into training and testing set
X_train, X_test, y_train, y_test = train_test_split(data, labels, test_size=0.2)

# Build the model
model = Sequential() # Initialize sequential model
model.add(Dense(32, input_dim=5, activation='relu')) # Add input layer with 32 nodes and relu activation
model.add(Dense(64, activation='relu')) # Add first hidden layer with 64 nodes and relu activation
model.add(Dense(1, activation='sigmoid')) # Add output layer with 1 node and sigmoid activation
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) # Compile the model with binary cross-entropy loss and adam optimizer
model.fit(X_train, y_train, epochs=50, batch_size=32, validation_data=(X_test, y_test)) # Train the model for 50 epochs with batch size of 32

# Evaluate the model
loss, accuracy = model.evaluate(X_test, y_test) # Evaluate the model on the test set
print("Test loss:", loss) # Print the test loss
print("Test accuracy:", accuracy) # Print the test accuracy
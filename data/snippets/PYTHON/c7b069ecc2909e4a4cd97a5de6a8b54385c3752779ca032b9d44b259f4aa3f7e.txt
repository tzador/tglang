# import necessary libraries
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, classification_report

# load dataset
df = pd.read_csv('iris.csv')

# extract features and target variable
X = df.drop('Species', axis=1)
y = df['Species']

# split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# initialize random forest classifier with 100 decision trees
rfc = RandomForestClassifier(n_estimators=100)

# train the model on the training sets
rfc.fit(X_train, y_train)

# make predictions on the testing set
y_pred = rfc.predict(X_test)

# evaluate the model performance
tn, fp, fn, tp = confusion_matrix(y_test, y_pred).ravel()
print('True Negatives: {}, False Positives: {}, False Negatives: {}, True Positives: {}'.format(tn, fp, fn, tp))
print(classification_report(y_test, y_pred))
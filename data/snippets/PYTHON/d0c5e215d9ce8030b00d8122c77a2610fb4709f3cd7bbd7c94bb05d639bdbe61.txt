# This code snippet is an example of a function that calculates the nth prime number
def nth_prime(n):
    # Initialize a list to store prime numbers
    primes = [2]
    # Start from 3 as the next possible prime number
    num = 3
    # Loop until the length of the primes list is equal to the input number
    while len(primes) != n:
        # Flag variable to determine if a number is prime or not
        is_prime = True
        # Loop through all the numbers from 2 to the square root of the current number
        for i in range(2, int(num ** 0.5) + 1):
            # Check if the current number is divisible by any of the previous prime numbers
            if num % i == 0:
                # If it is divisible, then it is not a prime number
                is_prime = False
                # Break from the loop since we already know the number is not prime
                break
        # If the number is prime, add it to the primes list
        if is_prime:
            primes.append(num)
        # Move on to the next possible prime number
        num += 1
    # Return the nth prime number
    return primes[n-1]

# Call the function and print the output
print(nth_prime(1000))
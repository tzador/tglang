# import necessary libraries
import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# read in dataset
dataset = pd.read_csv('dataset.csv')

# use label encoder to encode categorical columns
le = LabelEncoder()
for column in dataset.columns:
    if dataset[column].dtype == "object":
        dataset[column] = le.fit_transform(dataset[column])

# split data into features and target
X = dataset.drop('target', axis=1).values
y = dataset['target'].values

# split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# one-hot encode categorical features
ohe = OneHotEncoder(sparse=False)
X_train_ohe = ohe.fit_transform(X_train[:, :3])
X_test_ohe = ohe.transform(X_test[:, :3])

# create linear regression model
lr = LinearRegression()

# fit model on training data
lr.fit(X_train_ohe, y_train)

# make predictions on test data
y_pred = lr.predict(X_test_ohe)

# calculate MSE on test data
mse = mean_squared_error(y_test, y_pred)

# print results
print("Mean squared error:", mse)
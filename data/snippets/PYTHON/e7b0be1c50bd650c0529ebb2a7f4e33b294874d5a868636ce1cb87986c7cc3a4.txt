def quicksort(arr, low, high):
    '''  
    This function takes an array,  
    a low index, and a high index 
    and implements the quicksort algorithm 
    '''
    if low < high:
        # Select a pivot element
        pivot = arr[high]
        # Set the partition index
        i = low - 1 

        for j in range(low, high):
            # If current element is smaller than or equal to pivot 
            if arr[j] <= pivot:
                # Increment the partition index
                i += 1
                # Swap the elements
                arr[i], arr[j] = arr[j], arr[i]

        # Swap the pivot element to the correct position
        arr[i+1], arr[high] = arr[high], arr[i+1] 

        # Divide the array into two subarrays and recursively sort them 
        quicksort(arr, low, i)
        quicksort(arr, i+2, high)

    return arr

# Example Usage
arr = [5, 13, 2, 17, 11, 4, 9]
sorted_arr = quicksort(arr, 0, len(arr)-1)
print(sorted_arr)

# Output: [2, 4, 5, 9, 11, 13, 17]
from collections import deque
import math

# Creates a Square class with attributes for side length and area
class Square:
    def __init__(self, sidelength):
        self.side = sidelength
        self.area = self.side ** 2
    
    # Calculates the perimeter of the square
    def perimeter(self):
        return self.side * 4

# Creates two instances of the Square class with different side lengths
square1 = Square(5)
square2 = Square(10)

# A function that checks if a given number is prime or not
def is_prime(num):
    # 0 and 1 are not prime numbers
    if num == 0 or num == 1:
        return False
    # Check for factors starting from 2 up to the square root of the number
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False
    return True

# A deque object that holds all the prime numbers between 1 and 100
prime_numbers = deque()

# Checks numbers from 2 to 100 if they are prime or not
for num in range(2, 101):
    if is_prime(num):
        prime_numbers.append(num)

# Prints the prime numbers in reverse order
print(list(prime_numbers)[::-1])
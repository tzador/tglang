# This code snippet calculates the prime factorization of a number using recursion.
# It takes in an integer as the input and outputs a list of prime factors.

# Define a recursive function to calculate prime factors
def prime_factors(number):
    # Create an empty list to store the prime factors
    factors = []

    # Loop through all possible numbers starting from 2 (since 1 is not considered a prime number)
    for i in range(2, number + 1):
        # Check if the number is divisible by the current number being looped through
        if number % i == 0:
            # If it is divisible, add the current number to the list of prime factors
            factors.append(i)
            # Call the function recursively with the quotient of the number and the current number being looped through
            factors.extend(prime_factors(number // i))
            # Break out of the loop to avoid unnecessary iterations
            break
    
    # Check if the prime factors list is empty (which means the input number is a prime number)
    if factors == []:
        # In this case, just add the input number itself to the list of prime factors
        factors.append(number)
    
    # Return the list of prime factors
    return factors

# Ask the user for an input number
number = int(input("Enter a positive integer: "))

# Call the prime_factors function with the input number and store the output in a variable
output = prime_factors(number)

# Print the final output
print("The prime factors of", number, "are:", output)
# This code snippet creates a simple game using the PyGame library
# Import necessary libraries
import pygame
import sys
import random

# Initialize PyGame and set game window size
pygame.init()
screen = pygame.display.set_mode((800, 600))

# Define colors to be used in game
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)

# Create player class with attributes such as position, speed, and image
class Player(pygame.sprite.Sprite):
    # Define class constructor
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((50, 50)) # Create a square image for player
        self.image.fill(blue) # Fill the image with blue color
        self.rect = self.image.get_rect() # Get the rectangular bounds of the image
        self.rect.center = (400, 500) # Set the initial position of the player
        self.speedx = 0 # Set initial x speed to 0

    # Define update method to move the player based on user input
    def update(self):
        # Get user input from keyboard
        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_LEFT]: # If left arrow key is pressed
            self.speedx = -5 # Set negative x speed to move left
        elif keystate[pygame.K_RIGHT]: # If right arrow key is pressed
            self.speedx = 5 # Set positive x speed to move right
        else:
            self.speedx = 0 # If no key pressed, set x speed to 0
        # Update the player's position based on speed
        self.rect.x += self.speedx
        # Keep player within the game window
        if self.rect.right > 800:
            self.rect.right = 800
        if self.rect.left < 0:
            self.rect.left = 0

# Create enemy class with attributes such as position, speed, and image
class Enemy(pygame.sprite.Sprite):
    # Define class constructor
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((50, 50)) # Create a square image for enemy
        self.image.fill(red) # Fill the image with red color
        self.rect = self.image.get_rect() # Get the rectangular bounds of the image
        self.rect.x = random.randrange(0, 800) # Set initial x position randomly
        self.rect.y = random.randrange(-100, -40) # Set initial y position randomly
        self.speedx = 0 # Set initial x speed to 0
        self.speedy = random.randrange(1, 8) # Set random y speed for enemy

    # Define update method to move the enemy downward and reset position if it goes off screen
    def update(self):
        # Move enemy downward based on speed
        self.rect.y += self.speedy
        # Reset enemy position and speed if it goes off screen
        if self.rect.top > 600 or self.rect.left > 800 or self.rect.right < 0:
            self.rect.x = random.randrange(0, 800)
            self.rect.y = random.randrange(-100, -40)
            self.speedy = random.randrange(1, 8)

# Create group for all sprites in the game
all_sprites = pygame.sprite.Group()
# Add player and enemy sprites to the group
player = Player()
all_sprites.add(player)
enemy = Enemy()
all_sprites.add(enemy)

# Game loop
running = True
while running:
    # Check for events such as closing the game window
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    # Update all the sprites in the game
    all_sprites.update()
    # Fill the game window with white color
    screen.fill(white)
    # Draw all the sprites onto the game window
    all_sprites.draw(screen)
    # Update the display with the changes made
    pygame.display.update()

# Quit the game
pygame.quit()
sys.exit()
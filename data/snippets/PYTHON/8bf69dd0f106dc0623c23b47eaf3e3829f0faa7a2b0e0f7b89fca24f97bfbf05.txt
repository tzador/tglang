def merge_sort(arr): 
    # This function performs merge sort on a given array

    if len(arr) > 1: 
        
        # Finding the middle point for splitting the array 
        mid = len(arr)//2 
        
        # Dividing the array into two halves
        left = arr[:mid] 
        right = arr[mid:] 
        
        # Recursive call on each half until base case is reached
        merge_sort(left) 
        merge_sort(right) 

        # Merging the two sorted halves
        i = j = k = 0

        while i < len(left) and j < len(right): 
            if left[i] < right[j]: 
                arr[k] = left[i] 
                i+=1
                
            else: 
                arr[k] = right[j] 
                j+=1
            k+=1

        # Checking for any remaining elements in left half
        while i < len(left): 
            arr[k] = left[i] 
            i+=1
            k+=1

        # Checking for any remaining elements in right half
        while j < len(right): 
            arr[k] = right[j] 
            j+=1
            k+=1

# Driver code
if __name__ == '__main__': 
    # Creating an unsorted array 
    arr = [6, 3, 8, 2, 9, 1, 4] 
    
    # Printing the unsorted array
    print("Unsorted array:", arr) 
    
    # Calling the merge sort function
    merge_sort(arr) 
    
    # Printing the sorted array
    print("Sorted array:", arr)
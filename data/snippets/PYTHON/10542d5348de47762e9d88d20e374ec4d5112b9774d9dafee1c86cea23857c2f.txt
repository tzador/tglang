# Import necessary libraries for data handling and visualization
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Load and preprocess dataset from CSV file
data = pd.read_csv("dataset.csv")
data.dropna(inplace=True)
data.reset_index(drop=True, inplace=True)

# Extract features and target variable
X = data.drop("target", axis=1).values
y = data["target"].values

# Split data into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)

# Train model using Random Forest Classifier
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate model on testing set
accuracy = model.score(X_test, y_test)

# Visualize feature importances
feature_importances = model.feature_importances_
plt.bar(np.arange(len(X_train[0])), feature_importances)
plt.xticks(np.arange(len(X_train[0])), data.columns[:-1], rotation=45)
plt.ylabel("Feature Importances")
plt.show()

# Make predictions on new data
new_data = [[5.1, 3.5, 1.4, 0.2], [7.0, 3.2, 4.7, 1.4]]
predictions = model.predict(new_data)

# Print accuracy and predictions
print("Accuracy: {}".format(accuracy))
print("Predictions: {}".format(predictions))
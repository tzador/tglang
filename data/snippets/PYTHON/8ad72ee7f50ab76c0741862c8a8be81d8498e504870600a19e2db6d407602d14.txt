# This code snippet is an implementation of the bubble sort algorithm in Python.
# Bubble sort is a simple sorting algorithm that repeatedly steps through the list,
# compares adjacent elements and swaps them if they are in the wrong order.
# The pass_num variable represents the number of passes required to fully sort the list.
# The range of the for loop is calculated based on the pass_num variable and the length of the list.
# The inner for loop compares adjacent elements and swaps them if needed, using the temporary variable temp.
# After each pass, the largest element will be moved to the end of the list.
# This process continues until the list is fully sorted.
def bubble_sort(list):
    pass_num = len(list) - 1
    for i in range(pass_num):
        for j in range(pass_num - i):
            if list[j] > list[j+1]:
                temp = list[j]
                list[j] = list[j+1]
                list[j+1] = temp
    return list
    
# Example usage of the bubble_sort function:
unsorted_list = [7, 2, 4, 1, 5]
sorted_list = bubble_sort(unsorted_list)
print(sorted_list)
# Output: [1, 2, 4, 5, 7]
# This code snippet demonstrates how to implement a binary search
# in Python using recursion
# Define a function for binary search using recursion
def binary_search(arr, low, high, target):
    if high >= low:
        # Calculate the middle index
        mid = (high + low) // 2
        # Check if the middle element is the target
        if arr[mid] == target:
            return mid
        # If the middle element is greater than the target,
        # search the left half of the array
        elif arr[mid] > target:
            return binary_search(arr, low, mid - 1, target)
        # If the middle element is less than the target,
        # search the right half of the array
        else:
            return binary_search(arr, mid + 1, high, target)
    else:
        # If the target is not present in the array,
        # return -1
        return -1

# Example usage
arr = [2, 4, 7, 13, 25, 37]
target = 7
result = binary_search(arr, 0, len(arr) - 1, target)
if result != -1:
    print("Target found at index", result)
else:
    print("Target not found")
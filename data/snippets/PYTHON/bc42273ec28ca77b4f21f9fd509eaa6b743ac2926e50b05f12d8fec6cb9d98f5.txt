#!/usr/bin/env python
# -*- coding: utf-8 -*-

#Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Define class for creating a custom dataset
class CustomDataset:
    def __init__(self, name, data):
        self.name = name
        self.data = np.array(data)
    
    def get_name(self):
        return self.name
    
    def get_data(self):
        return self.data
    
    def set_data(self, new_data):
        self.data = np.array(new_data)
    
    def plot_data(self):
        #Plot a scatter plot of the data
        plt.scatter(range(len(self.data)), self.data)
        plt.title("Data Visualization")
        plt.xlabel("Index")
        plt.ylabel("Value")
        plt.show()

#Create an instance of the CustomDataset class
my_dataset = CustomDataset("My Data", [2, 5, 8, 11, 14, 17, 20])

#Print the name of the dataset
print(my_dataset.get_name())

#Print the data
print(my_dataset.get_data())

#Change the data
my_dataset.set_data([1, 4, 9, 16, 25, 36, 49])

#Plot the updated data
my_dataset.plot_data()

#Convert the data to a pandas dataframe
df = pd.DataFrame({'Index': range(len(my_dataset.get_data())), 'Value': my_dataset.get_data()})

#Print the first 5 rows of the dataframe
print(df.head())

#Create a new column in the dataframe
df['Squared Value'] = df['Value'] ** 2

#Print the updated dataframe
print(df)

#Calculate the mean of the squared values
mean = np.mean(df['Squared Value'])

#Print the mean
print("The mean of the squared values is:", mean)

#Create a new column in the dataframe
df['Cubed Value'] = df['Value'] ** 3

#Print the updated dataframe
print(df)

#Calculate the standard deviation of the cubed values
std_dev = np.std(df['Cubed Value'])

#Print the standard deviation
print("The standard deviation of the cubed values is:", std_dev)

#Create a histogram of the cubed values
sns.distplot(df['Cubed Value'], kde=False, rug=True)
plt.title("Histogram of Cubed Values")
plt.xlabel("Cubed Values")
plt.ylabel("Frequency")
plt.show()
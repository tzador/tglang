# Importing necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Creating a class for a simple linear regression model
class SimpleLinearRegression:
    
    # Initializing the model parameters
    def __init__(self, learning_rate=0.01, num_iterations=1000):
        self.learning_rate = learning_rate
        self.num_iterations = num_iterations
        self.weights = None
        self.bias = None
    
    # Function to train the model
    def train(self, X, y):
        # Initializing the weights and bias randomly
        self.weights = np.random.randn(X.shape[1])
        self.bias = np.random.randn()
        
        # Running gradient descent for specified number of iterations
        for i in range(self.num_iterations):
            # Calculating the predicted values
            y_pred = self.predict(X)
            
            # Calculating the cost/loss using mean squared error
            cost = np.mean((y - y_pred)**2)
            
            # Calculating the gradients for weights and bias
            d_weights = (-2/len(X)) * np.dot(X.T, (y - y_pred))
            d_bias = (-2/len(X)) * np.sum(y - y_pred)
            
            # Updating the weights and bias using gradient descent
            self.weights -= self.learning_rate * d_weights
            self.bias -= self.learning_rate * d_bias
    
    # Function to make predictions on new data
    def predict(self, X):
        return np.dot(X, self.weights) + self.bias

# Generating dummy data for training and testing the model
X_train = np.arange(10).reshape(-1, 1)
y_train = np.arange(10)*2 + 3

# Initializing and training the model
model = SimpleLinearRegression()
model.train(X_train, y_train)

# Making predictions on test data
X_test = np.arange(10, 20).reshape(-1, 1)
y_pred = model.predict(X_test)

# Plotting the predicted values against the original data
plt.scatter(X_train, y_train, label="Original Data")
plt.plot(X_test, y_pred, label="Predicted Line", color='r')
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.show()
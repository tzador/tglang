# This snippet uses a custom encoder to convert a dictionary to a JSON string
import json

class CustomEncoder(json.JSONEncoder):
    def default(self, obj):
        # If the object is a dictionary, convert it to a JSON string
        if isinstance(obj, dict):
            return json.dumps(obj)
        # If the object is a list, convert each item to a JSON string and join them
        elif isinstance(obj, list):
            return "[" + ", ".join([self.default(item) for item in obj]) + "]"
        # For all other objects, use the default encoder
        else:
            return super().default(obj)

# Example dictionary
my_dict = { "name": "John", "age": 25, "hobbies": ["reading", "gaming", "coding"] }

# Convert dictionary to JSON string using custom encoder
my_json = json.dumps(my_dict, cls=CustomEncoder)

# Print JSON string
print(my_json)

# Output: {"name": "John", "age": 25, "hobbies": ["reading", "gaming", "coding"]}
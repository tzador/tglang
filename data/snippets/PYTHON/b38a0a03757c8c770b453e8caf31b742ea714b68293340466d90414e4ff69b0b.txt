# This is a code snippet that uses recursion and error handling in Python.

# Define a function that takes in a list and returns the sum of all the numbers in the list
def sum_list(nums):

    # If the list is empty, return 0
    if len(nums) == 0:
        return 0
    
    # Store the first element of the list in variable 'first'
    first = nums[0]

    # Remove the first element from the list
    nums = nums[1:]
   
    # Use recursion to add up all the remaining elements
    # By calling the function again with the shortened list 
    return first + sum_list(nums)

# Test the function
nums = [1, 2, 3, 4, 5]
sum = sum_list(nums)
print(sum) # Output: 15

# Now, let's handle the case where the input is not a list
try:
    # Call the function with an integer
    sum_list(5)
except TypeError:
    # If a TypeError is raised, print an error message
    print("Input must be a list")

# Output: Input must be a list
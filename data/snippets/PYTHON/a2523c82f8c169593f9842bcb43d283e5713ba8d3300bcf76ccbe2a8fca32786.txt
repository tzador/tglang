# This function uses recursion to calculate the factorial of a given number
# Input: num - integer
# Output: fact - integer
def factorial(num):
    # Base case
    if num == 0:
        return 1
    
    # Recursive case
    else:
        return num * factorial(num - 1)
    
# This function prints the nth Fibonacci number
# Input: n - integer
# Output: fib_num - integer
def fibonacci(n):
    # Base case
    if n == 0 or n == 1:
        return n
    
    # Recursive case
    else:
        # Calls the fibonacci function on the two previous numbers in the sequence
        # and adds them together to get the current number
        return fibonacci(n-1) + fibonacci(n-2)

# This function checks if a number is prime
# Input: num - integer
# Output: prime - boolean
def is_prime(num):
    # Checks if num is 2 or 3, as these are the only prime numbers less than 5
    if num <= 3:
        return num > 1
    
    # Checks if num is divisible by any number from 2 to its square root
    # If it is, then it is not prime
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    
    # If the loop completes without returning False, then num is prime
    return True
#This code snippet generates a random encryption key and uses it to encrypt a given string
#Importing necessary modules
import random
import string
import base64

#Defining function to generate random key
def generate_key():
    #List of possible characters for key
    key_chars = string.ascii_letters + string.digits + string.punctuation
    #Shuffling the list to make it random
    random.shuffle(key_chars)
    #Choosing first 16 characters as key
    key = ''.join(key_chars[:16])
    return key

#Defining function to encrypt string with given key
def encrypt_string(key, string):
    #Converting string to bytes for encryption
    string_bytes = string.encode()
    #Creating AES cipher with key
    cipher = AES.new(key, AES.MODE_EAX)
    #Encrypting the bytes
    encrypted_bytes, tag = cipher.encrypt_and_digest(string_bytes)
    #Encoding the encrypted bytes with base64 for storage
    encrypted_string = base64.b64encode(encrypted_bytes)
    return encrypted_string

#Generating random key
encryption_key = generate_key()
#Printing key for reference
print("Encryption key: ", encryption_key)

#Getting string input from user to encrypt
string_input = input("Enter string to encrypt: ")

#Encrypting the string using the generated key
encrypted_string = encrypt_string(encryption_key, string_input)
#Printing the encrypted string
print("Encrypted string: ", encrypted_string.decode())
# This code snippet creates a class named Car with attributes for make, model, and year
class Car:
    # The __init__ method is the constructor that sets the initial values for the class attributes
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
        self.year = year

    # Method that prints out the car's make and model
    def print_car_info(self):
        print(f"This car is a {self.make} {self.model}")

    # Method that calculates the car's age based on the current year
    def get_age(self):
        current_year = 2021
        age = current_year - self.year
        print(f"This car is {age} years old")

    # Method that updates the car's year, checks for valid input
    def update_year(self, new_year):
        if new_year < 1900 or new_year > 2021:
            print("Please enter a valid year")
        else:
            self.year = new_year
            print("Car's year has been updated")

    # Method that converts the car's make to uppercase
    def convert_to_upper(self):
        self.make = self.make.upper()
        print(f"The car's make has been converted to {self.make}")

# Creating an instance of the Car class with the following initial attributes
my_car = Car("Ford", "Mustang", 2010)

# Printing the car's make and model by calling the print_car_info method
my_car.print_car_info()

# Calling the get_age method to calculate and print the car's age
my_car.get_age()

# Updating the car's year attribute by calling the update_year method
my_car.update_year(2020)

# Converting the car's make to uppercase by calling the convert_to_upper method
my_car.convert_to_upper()
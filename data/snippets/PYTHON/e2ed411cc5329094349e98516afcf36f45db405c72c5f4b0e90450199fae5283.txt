# This code snippet generates a random password with specified length and character types

# Import necessary modules
import random
import string

# Define function to generate password
def generate_password(length, uppercase, lowercase, digits, special_chars):
    
    # Create empty list to store password characters
    password = []
    
    # Create lists of character types
    upper_chars = list(string.ascii_uppercase)
    lower_chars = list(string.ascii_lowercase)
    digits_list = list(string.digits)
    special_chars_list = list(string.punctuation)
    
    # If statement to check if uppercase characters are needed
    if uppercase:
        # Append random uppercase character to password list
        password.append(random.choice(upper_chars))
    
    # If statement to check if lowercase characters are needed
    if lowercase:
        # Append random lowercase character to password list
        password.append(random.choice(lower_chars))
    
    # If statement to check if digits are needed
    if digits:
        # Append random digit character to password list
        password.append(random.choice(digits_list))
    
    # If statement to check if special characters are needed
    if special_chars:
        # Append random special character to password list
        password.append(random.choice(special_chars_list))
    
    # Calculate remaining length of password required
    remaining_len = length - len(password)
    
    # Use for loop to generate remaining characters of password
    for i in range(remaining_len):
        # Create list of all possible characters based on previous character types
        possible_chars = upper_chars + lower_chars + digits_list + special_chars_list
        
        # Append random character from possible characters list to password
        password.append(random.choice(possible_chars))
        
    # Shuffle password list to randomize character order
    random.shuffle(password)
    
    # Join password list into string
    final_password = "".join(password)
    
    # Return generated password
    return final_password

# Get user inputs for password requirements
pass_length = int(input("Enter desired password length: "))
print("Include uppercase characters? (Y/N)")
upper = input()
print("Include lowercase characters? (Y/N)")
lower = input()
print("Include digits? (Y/N)")
digits = input()
print("Include special characters? (Y/N)")
special = input()

# Convert user inputs to boolean
if upper == "Y":
    uppercase = True
else:
    uppercase = False
    
if lower == "Y":
    lowercase = True
else:
    lowercase = False
    
if digits == "Y":
    digits = True
else:
    digits = False
    
if special == "Y":
    special_chars = True
else:
    special_chars = False
    
# Call generate_password function with user inputs
password = generate_password(pass_length, uppercase, lowercase, digits, special_chars)

# Print generated password to console
print("Your random password is:", password)
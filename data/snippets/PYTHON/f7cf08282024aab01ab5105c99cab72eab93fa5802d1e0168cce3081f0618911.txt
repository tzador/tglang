# Function to find the minimum number of coins needed to make a specific amount of change
def min_coins(coins, amount):
    # Initialize a list to store the minimum number of coins needed for each amount up to the desired amount
    min_coins = [float("inf")] * (amount + 1)
    # Set the first value to 0 since we need 0 coins to make 0 amount of change
    min_coins[0] = 0
    # Iterate through each coin value in the given list of coins
    for coin in coins:
        # For each coin value, iterate through all amounts from 1 to the desired amount
        for i in range(1, amount + 1):
            # If the current amount is greater than or equal to the coin value
            # Subtract the coin value from the current amount and add 1 to the minimum number of coins for the new amount
            if i >= coin:
                min_coins[i] = min(min_coins[i], min_coins[i - coin] + 1)
    # Return the minimum number of coins needed for the desired amount
    return min_coins[amount]

# Driver code to test the function
coins = [1, 5, 10, 25] # Example list of coins
amount = 63 # Example amount of change to make
result = min_coins(coins, amount) # Call the function
print(result) # Print the result
# Import necessary modules 
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import RidgeCV
import matplotlib.pyplot as plt

# Load data
X, y = load_data()

# Split the data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Create a RidgeCV model with different alpha values to search
alphas = np.logspace(-3, 3, 100)
model = RidgeCV(alphas=alphas)

# Fit the model on the training data
model.fit(X_train, y_train)

# Evaluate the model on the test data
score = model.score(X_test, y_test)

# Print the best alpha value and the model's score
print("Best alpha value:", model.alpha_)
print("Model score:", score)

# Plot the coefficients of the model
plt.figure(figsize=(8,6))
plt.plot(alphas, model.coef_, 'o')
plt.xlabel('Alpha')
plt.ylabel('Coefficients')
plt.title('Ridge coefficients as a function of the regularization')
plt.axis('tight')
plt.show()
# Import necessary libraries
import numpy as np
import pandas as pd

# Define a function to calculate the mean squared error
def mean_squared_error(predictions, actual):
    """
    Calculates the mean squared error between predicted and actual values
    
    Args:
        predictions (array-like): Array of predicted values
        actual (array-like): Array of actual values
        
    Returns:
        float: Mean squared error
    """
    return np.square(np.subtract(predictions, actual)).mean()

# Generate some sample data
sample_data = {"Day": [1, 2, 3, 4, 5],
               "Sales": [1000, 1200, 1500, 2000, 2500],
               "Marketing_Spend": [500, 800, 1000, 1200, 1500]}

# Convert data into a dataframe
df = pd.DataFrame(sample_data)

# Create a linear regression model
model = LinearRegression()

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(df[["Day", "Marketing_Spend"]], df["Sales"], test_size=0.2, random_state=42)

# Fit the model on training data
model.fit(X_train, y_train)

# Make predictions on test data
predictions = model.predict(X_test)

# Calculate mean squared error
mse = mean_squared_error(predictions, y_test)
print(f"Mean Squared Error: {mse}")
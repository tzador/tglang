# Import the necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline

# Define a function to calculate the mean
def mean(numbers):
    sum = 0
    for num in numbers:
        sum += num
    return sum / len(numbers)

# Generate a random dataset
x = np.random.randint(0, 100, 50)
y = np.random.randint(0, 100, 50)

# Create a dataframe from the dataset
data = pd.DataFrame({'x': x, 'y': y})

# Calculate the mean of x and y
mean_x = mean(data['x'])
mean_y = mean(data['y'])

# Calculate the deviations from the mean
data['x_dev'] = data['x'] - mean_x
data['y_dev'] = data['y'] - mean_y

# Calculate the sum of squared deviations
sum_sq_dev = (data['x_dev']**2).sum()

# Calculate the correlation coefficient
corr_coef = sum_sq_dev / ((data['x_dev']**2).sum() * (data['y_dev']**2).sum())**0.5

# Plot the data and add a line of best fit
plt.figure(figsize=(10,6))
plt.scatter(data['x'], data['y'])
plt.plot([0,100], [mean_y, mean_y + corr_coef * 100], color='red')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Data with line of best fit')
plt.show()
# Define a class that inherits from two parent classes
class Student(Person, StudentDetails): 
    # Define the constructor method
    def __init__(self, name, age, id, major, gpa): 
        # Call the constructors of the parent classes
        Person.__init__(self, name, age) 
        StudentDetails.__init__(self, id) 
        # Define attributes specific to the Student class
        self.major = major 
        self.gpa = gpa 
    
    # Define a method to get the student's name and age
    def get_name_age(self): 
        return f"{self.name} is {self.age} years old." 
    
    # Define a method to update the student's major
    def change_major(self, new_major): 
        self.major = new_major 
        
    # Define a method to calculate the student's final grade
    def calculate_grade(self): 
        # Create a dictionary with grade weights
        weights = {'midterm': 0.3, 'final': 0.5, 'homework': 0.2} 
        # Calculate the weighted average of grades
        weighted_avg = self.midterm * weights['midterm'] + self.final * weights['final'] + self.homework * weights['homework'] 
        # Check if the student needs to retake the class
        if weighted_avg < 60: 
            return "You will need to retake the class." 
        else: 
            return "Congratulations, you passed the class!" 
    # Define a method to print the student's information
    def print_info(self): 
        print(f"Name: {self.name}, Age: {self.age}, ID: {self.id}, Major: {self.major}, GPA: {self.gpa}")
        
# Create an instance of the Student class
student1 = Student('John Smith', 19, '1234', 'Biology', 3.8) 
# Call the get_name_age method and print the output
print(student1.get_name_age()) 
# Update the student's major
student1.change_major('Chemistry') 
# Call the print_info method to print the updated information
student1.print_info() 
# Calculate the student's final grade and print the output
print(student1.calculate_grade())
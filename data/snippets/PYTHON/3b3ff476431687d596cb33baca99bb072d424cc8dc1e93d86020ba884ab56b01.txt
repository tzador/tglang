#Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Generate random data
x = np.random.uniform(0, 10, 1000)
y = np.random.normal(0, 1, 1000)

#Create a dataframe with x and y as columns
df = pd.DataFrame({'x': x, 'y': y})

#Create a scatter plot using matplotlib
plt.scatter(x, y, color = 'red')
plt.xlabel('X Axis')
plt.ylabel('Y Axis')
plt.title('Random Data Scatter Plot')
plt.show()

#Calculate the mean of x
x_mean = np.mean(x)

#Calculate the standard deviation of y
y_std = np.std(y)

#Print out the mean and standard deviation
print("Mean of x:", x_mean)
print("Standard Deviation of y:", y_std)

#Create a new column in the dataframe with the squared values of x
df['x_squared'] = df['x']**2

#Create a function to calculate the log of y values
def calc_log(x):
    return np.log(x)

#Apply the function to the y column and create a new column with the log values
df['y_log'] = df['y'].apply(calc_log)

#Create a box plot of the logged y values
plt.boxplot(df['y_log'])
plt.xlabel('Log of Y')
plt.title('Box Plot of Log(y)')
plt.show()

#Create a new dataframe with only values where x is greater than 3
df_subset = df[df['x'] > 3]

#Calculate the correlation coefficient between x and y values
corr_coeff = df_subset['x'].corr(df_subset['y'])

#Print out the correlation coefficient
print("Correlation Coefficient:", corr_coeff)

#Create a lambda function to multiply x by 2
multiply_x = lambda x: x*2

#Apply the lambda function to the x column and create a new column with the multiplied values
df['x_multiplied'] = df['x'].apply(multiply_x)

#Print out the first 10 rows of the dataframe
print(df.head(10))

#Export the dataframe to a csv file
df.to_csv('random_data.csv', index = False)
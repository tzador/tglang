def mergeSort(arr):
    """
    This function performs the merge sort algorithm to sort an array of integers.
    Input:
    - arr: an array of integers
    Output:
    - sortedArr: the sorted array of integers
    """

    if len(arr) > 1:
        # finding the mid of the array
        mid = len(arr) // 2
        
        # dividing the array into two halves
        left = arr[:mid]
        right = arr[mid:]

        # recursively calling mergeSort() on the two halves
        mergeSort(left)
        mergeSort(right)

        # merging the two halves into a sorted array
        i = 0  # index for left subarray
        j = 0  # index for right subarray
        k = 0  # index for sorted array

        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                arr[k] = left[i]
                i += 1
            else:
                arr[k] = right[j]
                j += 1
            k += 1

        # checking for any remaining elements in left subarray
        while i < len(left):
            arr[k] = left[i]
            i += 1
            k += 1

        # checking for any remaining elements in right subarray
        while j < len(right):
            arr[k] = right[j]
            j += 1
            k += 1

    # returning the sorted array
    sortedArr = arr
    return sortedArr

# example input
arr = [5, 2, 7, 1, 9, 3]

# calling mergeSort() function
sortedArr = mergeSort(arr)

# printing the sorted array
print(sortedArr)
# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression

# Read in data from csv file
df = pd.read_csv('data.csv')

# Clean data by removing null values
df = df.dropna()

# Convert categorical data into numerical data using one-hot encoding
df = pd.get_dummies(df)

# Select feature columns
features = ['age', 'weight', 'height', 'gender_F', 'gender_M']

# Create feature matrix and target vector
X = df[features].values
y = df['income'].values

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Initialize and fit linear regression model
lr = LinearRegression()
lr.fit(X_train, y_train)

# Make predictions on test set
y_pred = lr.predict(X_test)

# Calculate mean squared error
mse = mean_squared_error(y_test, y_pred)

# Print out results
print('Mean squared error:', mse)
print('Coefficients:', lr.coef_)
print('Intercept:', lr.intercept_)

# Visualize predictions vs. actual values
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel('Actual income')
plt.ylabel('Predicted income')
plt.show()
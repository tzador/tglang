def binary_search(array, target):  # define a function for binary search
    start = 0  # initialize a start variable as 0
    end = len(array) - 1 # initialize an end variable as the length of the given array minus 1

    while start <= end:  # use a while loop to traverse the array
        mid = (start + end) // 2  # find the middle index of the array
        if array[mid] == target:  # if the middle element is equal to the target, return the index
            return mid
        elif array[mid] < target:  # if the middle element is smaller than the target, update the start index to the middle index + 1
            start = mid + 1
        else:  # if the middle element is larger than the target, update the end index to the middle index - 1
            end = mid - 1
    
    return -1 # if target is not found in the array, return -1 to indicate not found

# example usage of the binary_search function

# initialize an array of numbers in ascending order
numbers = [1, 3, 5, 7, 9]

# target to search for
target = 5

# call the binary_search function and store the result in a variable
result = binary_search(numbers, target)

# print the result of the binary_search function
print(result)

# expected output: 2 as 5 is found at index 2 in the given array
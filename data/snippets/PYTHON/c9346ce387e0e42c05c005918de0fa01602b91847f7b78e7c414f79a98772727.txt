# Create a function that takes in a list of numbers and returns the sum of all prime numbers in the list
# Function to check if a number is prime
def check_prime(num):
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                return False
        else:
            return True
    else:
        return False

# Function to return the sum of all prime numbers in a list
def sum_of_primes(num_list):
    prime_sum = 0
    for num in num_list:
        if check_prime(num):
            prime_sum += num
    return prime_sum

# Test case
num_list = [6, 11, 15, 5, 17, 23, 32, 17]
print(sum_of_primes(num_list))

# Output: 56

# In this code snippet, we define two functions.
# The first function, check_prime(), takes in a number and checks if it is prime.
# It does this by iterating through all numbers from 2 to the number itself and checking if the remainder is 0 when divided.
# If the remainder is 0 for any number, the function returns False, indicating that the number is not prime.
# If the remainder is not 0 for any number, the function returns True, indicating that the number is prime.
# The second function, sum_of_primes(), takes in a list of numbers and uses the check_prime() function to determine which numbers are prime.
# It then adds all the prime numbers together and returns the sum.
# In the test case, we create a list of numbers and pass it to the sum_of_primes() function to get the sum of all prime numbers in the list.
# The expected output is 56, which is the sum of 11, 5, 17, and 23, the prime numbers in the list.
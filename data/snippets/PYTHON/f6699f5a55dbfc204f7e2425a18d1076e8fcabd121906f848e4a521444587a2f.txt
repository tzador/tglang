# Import required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Define a class to preprocess the data
class DataPreprocessing:
    """
    Class to perform data preprocessing on a given dataset
    """

    def __init__(self, filename):
        """
        Initialize the class with a given CSV file
        :param filename: Name of the CSV file to be processed
        """
        self.filename = filename
        self.data = None

    def load_data(self):
        """
        Load the data from the CSV file
        """
        self.data = pd.read_csv(self.filename)

    def clean_data(self):
        """
        Clean the data by removing missing values and outliers
        """
        self.data = self.data.dropna()
        self.data = self.data[self.data['col'] < 1000]

    def preprocess_data(self):
        """
        Perform various preprocessing steps on the data
        """
        self.load_data()
        self.clean_data()
        
        # Perform feature scaling
        self.data['col1'] = (self.data['col1'] - self.data['col1'].mean()) / self.data['col1'].std()
        
        # Perform one-hot encoding
        self.data = pd.get_dummies(self.data, columns=['category'], drop_first=True)
        
        # Remove highly correlated features
        self.data = self.data.drop(columns=['col2', 'col3'])
        
        # Normalize data
        self.data = self.data.apply(lambda x: (x - np.min(x)) / (np.max(x) - np.min(x)))

# Instantiate the DataPreprocessing class with the filename
dp = DataPreprocessing("data.csv")

# Preprocess the data
dp.preprocess_data()

# Print the first 5 rows of the cleaned and preprocessed data
print(dp.data.head(5))
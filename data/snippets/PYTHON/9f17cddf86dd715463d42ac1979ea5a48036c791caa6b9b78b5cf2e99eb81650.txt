# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Define function for polynomial regression
def poly_regression(x, y, degree):
    # Create polynomial features 
    poly_features = np.zeros((len(x), degree+1))
    for i in range(degree+1):
        poly_features[:,i] = x**i
    
    # Calculate coefficients
    coef = np.linalg.inv(poly_features.T.dot(poly_features)).dot(poly_features.T).dot(y)
    
    # Predict using coefficients
    y_pred = poly_features.dot(coef)

    # Plot original data and predicted curve
    fig, ax = plt.subplots()
    ax.scatter(x, y, color='blue', label='original')
    ax.plot(x, y_pred, color='red', label='predicted')
    ax.legend()
    plt.show()
    
    # Return coefficients and predicted values
    return coef, y_pred

# Generate random data for x and y
x = np.random.rand(100)
y = 2*x**2 + 3*x + 5 + np.random.randn(100)*2

# Call function with degree = 2
coef, y_pred = poly_regression(x, y, 2)

# Print coefficients and first 10 predicted values
print('Coefficients: ', coef)
print('Predicted values: ', y_pred[:10])
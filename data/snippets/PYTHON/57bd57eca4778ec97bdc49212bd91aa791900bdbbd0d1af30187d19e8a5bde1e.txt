# Function to calculate the square root of a number
def square_root(number):
    """
    This function calculates the square root of a given number using Newton's method.
    Input: number - a positive integer
    Output: square root of the given number  
    """
    # Initialize the initial guess
    guess = number / 2
    # Set the maximum number of iterations
    max_iter = 1000
    # Set the tolerance
    toler = 0.0001
    # Perform iterations until the difference between the guess squared and the number is less than the tolerance
    for i in range(max_iter):
        if abs(guess ** 2 - number) < toler:
            # If the difference is within the tolerance, return the current guess as the square root
            return guess
        else:
            # Otherwise, update the guess using Newton's method
            guess = (guess + number / guess) / 2
    # If the maximum number of iterations is exceeded, print an error message
    print("Error: maximum number of iterations exceeded.")
    
# Example usage
# Calculate the square root of 9 and store it in a variable
result = square_root(9)
# Print the result
print(result)
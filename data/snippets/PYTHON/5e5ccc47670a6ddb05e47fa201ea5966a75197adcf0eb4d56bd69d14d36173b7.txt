# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Define function to generate random data
def generate_data(size):
    # Create array of x values
    X = np.arange(size)
    # Generate random noise
    noise = np.random.rand(size)
    # Calculate y values using formula
    y = 3*X**2 + 5*X + 10 + noise
    return X, y

# Generate data with size of 100
X, y = generate_data(100)

# Convert data into pandas dataframe
df = pd.DataFrame({'X': X, 'y': y})

# Create a scatter plot of the data
plt.scatter(df['X'], df['y'])
plt.xlabel('X')
plt.ylabel('y')
plt.title('Random Data')
plt.show()

# Fit a polynomial regression model
coefs = np.polyfit(df['X'], df['y'], 2)

# Create a range of x values for visualization
x_vals = np.linspace(0, 100, 100)

# Calculate predicted y values using model coefficients
y_vals = coefs[0]*x_vals**2 + coefs[1]*x_vals + coefs[2]

# Plot the regression line
plt.plot(x_vals, y_vals, color='red')
plt.show()

# Calculate R-squared value to evaluate model performance
r_squared = 1 - np.sum((df['y'] - coefs[0]*df['X']**2 - coefs[1]*df['X'] - coefs[2])**2) / np.sum((df['y'] - np.mean(df['y']))**2)
print(r_squared)
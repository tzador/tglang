#Import necessary modules
import math
from itertools import permutations

#Define a function to calculate the factorial of a number
def factorial(n):
    #Base case
    if n == 0 or n == 1:
        return 1
    #Recursive case
    else:
        return n * factorial(n-1)

#Define a function to calculate the binomial coefficient
def binomial_coef(n, k):
    # Using the formula nCk = n!/((n-k)!*k!)
    return factorial(n) // (factorial(n-k) * factorial(k))

#Take user input for values of n and k
n = int(input("Enter a value for n: "))
k = int(input("Enter a value for k: "))

#Calculate the binomial coefficient and print the result
print("The binomial coefficient of", n, "choose", k, "is:", binomial_coef(n, k))

#Find all possible permutations of a given input list
input_list = [1, 2, 3]
permutations_list = list(permutations(input_list))

#Print the list of all possible permutations
print("All possible permutations of the input list are:", permutations_list)

#Calculate the value of pi using the Monte Carlo method
def calculate_pi(num_trials):
    #Initialize variables to keep track of points within a circle and total points
    points_within_circle = 0
    total_points = 0
    #Loop through the specified number of trials
    for i in range(num_trials):
        #Generate random x and y coordinates between -1 and 1
        x = random.uniform(-1, 1)
        y = random.uniform(-1, 1)
        #Calculate the distance from the origin
        distance = math.sqrt(math.pow(x,2) + math.pow(y,2))
        #If distance is less than or equal to 1, the point is within the circle
        if distance <= 1:
            points_within_circle += 1
        #Increment total points
        total_points += 1 
    #Calculate the value of pi from the ratio of points within the circle to total points
    return 4 * (points_within_circle / total_points)

#Take user input for number of trials
num_trials = int(input("Enter the number of trials: "))

#Print the estimated value of pi
print("The estimated value of pi using the Monte Carlo method is:", calculate_pi(num_trials))
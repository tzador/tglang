def merge_sort(arr):
    """
    This is a function that implements the merge sort algorithm
    to sort a given array in ascending order.

    Parameters:
        arr (list): The array to be sorted

    Returns:
        sorted_arr (list): The sorted array in ascending order
    """

    if len(arr) > 1:
        # Find the middle index of the array
        mid = len(arr) // 2

        # Divide the array into two subarrays
        left_arr = arr[:mid]
        right_arr = arr[mid:]

        # Recursively call merge_sort function on subarrays
        left_arr = merge_sort(left_arr)
        right_arr = merge_sort(right_arr)

        # Initialize pointers for left and right subarrays
        i = j = 0

        # Initialize pointer for sorted array
        k = 0

        # Merge the subarrays in sorted order
        while i < len(left_arr) and j < len(right_arr):
            if left_arr[i] < right_arr[j]:
                arr[k] = left_arr[i]
                i += 1
            else:
                arr[k] = right_arr[j]
                j += 1
            k += 1

        # Handle remaining elements in subarrays
        while i < len(left_arr):
            arr[k] = left_arr[i]
            i += 1
            k += 1

        while j < len(right_arr):
            arr[k] = right_arr[j]
            j += 1
            k += 1

    # Return the sorted array
    return arr
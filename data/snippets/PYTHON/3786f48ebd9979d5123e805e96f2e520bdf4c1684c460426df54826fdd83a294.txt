# This is a code snippet in Python that generates a list of prime numbers
# using the Sieve of Eratosthenes algorithm.

# Define a function that takes in a number and returns a list of all prime numbers up to that number.
def prime_numbers(n):
    sieve = [True] * (n+1) # create a boolean list of size n+1 and set all values to True
    result = [] # create an empty list to store the prime numbers

    # iterate through the list starting from 2 (the first prime number)
    for i in range(2, n+1):
        if sieve[i]: # if the value at the current index is True, it is a prime number
            result.append(i) # append it to the result list
            for j in range(i*i, n+1, i): # mark all multiples of the current prime number as False
                sieve[j] = False
    
    return result

# Prompt the user to enter a number and convert it to an integer
n = int(input("Enter a number: "))

# Call the function and print the result
print(prime_numbers(n))

# Output:
# Enter a number: 20
#[2, 3, 5, 7, 11, 13, 17, 19] # list of prime numbers up to 20
# Importing necessary libraries and packages
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
 
# Generating random data for training
x_train = np.linspace(0,10,100)
y_train = np.sin(x_train) + np.random.normal(0,0.1,100)
 
# Reshaping the data
X_train = x_train.reshape(-1,1)
Y_train = y_train.reshape(-1,1)
 
# Creating the polynomial features with degree 3
poly = PolynomialFeatures(degree=3, include_bias=False)
 
# Transforming the training data
X_train_poly = poly.fit_transform(X_train)
 
# Creating and training the linear regression model
model = LinearRegression()
model.fit(X_train_poly, Y_train)
 
# Generating predictions on test data
x_test = np.linspace(10,20,50)
X_test = x_test.reshape(-1,1)
X_test_poly = poly.transform(X_test)
predictions = model.predict(X_test_poly)
 
# Plotting the data and the model
plt.scatter(x_train, y_train, label='training data')
plt.plot(x_test, predictions, color='red', label='model predictions')
plt.legend()
plt.show()
# importing required libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# define a function to calculate the root mean squared error
def rmse(y_true, y_pred):
    """
    This function takes in two arrays (y_true and y_pred) and calculates the root mean squared error.
    :param y_true: An array containing the true values.
    :param y_pred: An array containing the predicted values.
    :return: The root mean squared error (RMSE) score.
    """
    diff = y_true - y_pred  # calculate the difference between true and predicted values
    squared_diff = np.square(diff)  # square the differences
    mean_squared_diff = np.mean(squared_diff)  # calculate the mean of squared differences
    rmse = np.sqrt(mean_squared_diff)  # calculate the root mean squared error
    return rmse

# create a dataframe with sample data
data = {'x': [1, 2, 3, 4, 5],
        'y': [2, 4, 6, 8, 10]}
df = pd.DataFrame(data)

# plot the dataframe as a scatter plot
plt.scatter(df['x'], df['y'])
plt.xlabel('x')
plt.ylabel('y')
plt.title('Scatter Plot')
plt.show()

# calculate the RMSE score for the data
true_values = df['y']
predicted_values = [1, 3, 5, 7, 9]
rmse_score = rmse(true_values, predicted_values)

print("The RMSE score is:", rmse_score)
# Importing necessary libraries and modules
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from scipy.stats import pearsonr

# Reading the dataset
data = pd.read_csv("dataset.csv")

# Preparing the data for training
X = data.drop(columns=['target']) # features
y = data['target'] # labels

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Defining a function to calculate Pearson correlation between two variables
def calculate_pearson(x, y):
    correlation, p_value = pearsonr(x, y)
    return correlation, p_value

# Applying the function to each feature and the target label
for feature in X.columns:
    correlation, p_value = calculate_pearson(X[feature], y)
    print("Pearson correlation between", feature, "and target:", correlation)

# Initializing a decision tree classifier
from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier()

# Training the model
clf.fit(X_train, y_train)

# Predicting on test data
y_pred = clf.predict(X_test)

# Calculating the accuracy of the model
from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test, y_pred)

# Printing the accuracy of the model
print("Accuracy of decision tree classifier:", accuracy)
# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Define a function for Gaussian distribution
def gaussian(x, mu, sigma):
    # Calculate exponent term
    exponent = (x - mu)**2 / (2 * sigma**2)
    # Calculate Gaussian probability
    prob = np.exp(-exponent) / (sigma * np.sqrt(2*np.pi))
    return prob

# Generate a random dataset
num_points = 1000
x = np.random.uniform(-10, 10, num_points)
y = gaussian(x, 0, 2)
# Add noise to the dataset
y = y + np.random.normal(0, 0.1, num_points)

# Create a DataFrame for the data
df = pd.DataFrame({'x': x, 'y': y})

# Define the linear regression model
def linear_regression(x, y):
    # Calculate the slope and intercept using least squares method
    slope = ((np.mean(x) * np.mean(y)) - np.mean(x*y)) / ((np.mean(x)**2) - np.mean(x**2))
    intercept = np.mean(y) - (slope * np.mean(x))
    # Define the predicted y values
    y_pred = (slope * x) + intercept
    return y_pred

# Plot the data and regression line
plt.scatter(x, y, label = 'Data')
plt.plot(x, linear_regression(x, y), color = 'red', label = 'Regression Line')
plt.legend()
plt.show()
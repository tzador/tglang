# This is a comment
# Importing necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Defining a function to calculate the mean squared error
def mean_squared_error(actual, predicted):
    """
    Calculates the mean squared error between the actual data and predicted data.

    Parameters:
        actual (numpy array): array containing actual data
        predicted (numpy array): array containing predicted data

    Returns:
        mse (float): mean squared error between the actual and predicted data
    """
    # Calculating the difference between actual and predicted values
    diff = actual - predicted
    # Squaring the difference
    sq_diff = np.square(diff)
    # Calculating the mean of squared differences
    mse = np.mean(sq_diff)
    return mse

# Generating random data
x = np.random.rand(100)
y = np.random.rand(100)

# Fitting a linear regression model to the data
model = np.polyfit(x, y, 1)

# Calculating the predicted values
predicted = np.polyval(model, x)

# Calculating the mean squared error between actual and predicted data
mse = mean_squared_error(y, predicted)

# Plotting the data and the regression line
plt.scatter(x, y, label="data")
plt.plot(x, predicted, 'r', label="regression line")
plt.xlabel("x")
plt.ylabel("y")
plt.title("Linear Regression with Mean Squared Error")
plt.legend()
plt.show()
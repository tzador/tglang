# Import necessary libraries
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import numpy as np

# Load dataset
boston = datasets.load_boston()

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(boston.data, boston.target, test_size=0.2)

# Initialize and train model
model = RandomForestRegressor()
model.fit(X_train, y_train)

# Make predictions on testing data
pred = model.predict(X_test)

# Calculate mean squared error
mse = mean_squared_error(y_test, pred)
print("Mean Squared Error:", mse)

# Get feature importances
importances = model.feature_importances_

# Sort feature importances in descending order
sorted_indices = np.argsort(importances)[::-1]

# Print feature importance ranking
print("Feature ranking:")
for f in range(len(sorted_indices)):
    print("%d. feature %d (%f)" % (f + 1, sorted_indices[f], importances[sorted_indices[f]]))
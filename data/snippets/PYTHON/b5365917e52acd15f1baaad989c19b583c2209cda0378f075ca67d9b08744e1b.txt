# This is a comment
import numpy as np  # importing numpy library for advanced mathematical functions

# Class definition
class Animal:
    def __init__(self, name, color, age):
        self.name = name  # instance variable
        self.color = color  # instance variable
        self.age = age  # instance variable

    def eat(self, food):
        """Method to simulate animal eating behavior"""
        print(self.name + " is eating " + food)

    def sleep(self):
        """Method to simulate animal sleeping behavior"""
        print(self.name + " is sleeping")

# Inheritance
class Dog(Animal):
    def __init__(self, name, color, age, breed):
        super().__init__(name, color, age)  # calling parent's constructor
        self.breed = breed  # instance variable
        self.tricks = []  # instance variable to store learned tricks

    def add_trick(self, trick):
        """Method to add a new trick to the list of learned tricks"""
        self.tricks.append(trick)

    def fetch(self, obj):
        """Method to simulate dog fetching an object"""
        print(self.name + " is fetching " + obj)

# Creating instances of the classes
cat = Animal("Mittens", "black", 8)
dog = Dog("Buddy", "brown", 3, "Golden Retriever")

# Calling methods
cat.eat("fish")  # output: Mittens is eating fish
dog.fetch("ball")  # output: Buddy is fetching ball

# Numpy array creation
array = np.array([[1, 2, 3, 4],
                  [5, 6, 7, 8],
                  [9, 10, 11, 12]])

# Fancy indexing
print(array[1, [0, 3]])  # output: [5, 8]

# Element-wise multiplication
new_array = array * 2

# Looping through the array
for row in new_array:
    for element in row:
        print(element)  # output: 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24
# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Read in data from CSV file
data = pd.read_csv("data.csv")

# Clean and prepare data
data.dropna(inplace=True) # Removing rows with null values
data["col1"] = data["col1"].apply(lambda x: x.strip().lower()) # Removing whitespace and converting to lowercase
data["col2"] = data["col2"].apply(lambda x: str(x).replace("$", "")) # Removing dollar sign from column
data["col3"] = pd.to_datetime(data["col3"]) # Converting column to datetime format
data["col4"] = data["col4"] / 100000 # Scaling values in column by dividing by 100000

# Create scatter plot
plt.scatter(data["col2"], data["col4"]) # Plotting columns 2 and 4
plt.title("Data Visualization")
plt.xlabel("Column 2")
plt.ylabel("Column 4")
plt.show()

# Define function for calculating mean
def calculate_mean(nums):
  return sum(nums) / len(nums)

# Calculate mean of column 1 and print result
col1_mean = calculate_mean(data["col1"])
print("Mean of column 1: ", col1_mean)

# Calculate correlation coefficient between columns 1 and 4
col1_col4_corr = np.corrcoef(data["col1"], data["col4"])[0, 1]
print("Correlation coefficient between columns 1 and 4: ", col1_col4_corr)

# Create conditional statement based on values in column 1
if col1_mean > 10 or col1_col4_corr < -0.5:
  print("Column 1 values are significantly higher than average or have a strong negative correlation with column 4.")
else:
  print("Column 1 values are not significantly higher than average and do not have a strong negative correlation with column 4.")
# Importing necessary libraries
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

# Loading dataset
df = pd.read_csv('data.csv')

# Dropping unnecessary columns
df.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)

# Handling missing values
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)

# Encoding categorical features
df = pd.get_dummies(df, columns=['Sex', 'Embarked'])

# Scaling numerical features
scaler = StandardScaler()
df[['Age', 'Fare']] = scaler.fit_transform(df[['Age', 'Fare']])

# Splitting dataset into training and testing sets
X = df.drop('Survived', axis=1)
y = df['Survived']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Training the model
model = LogisticRegression()
model.fit(X_train, y_train)

# Evaluating the model
print(model.score(X_test, y_test))

# Making predictions
predictions = model.predict(X_test)

# Saving the model
import joblib
joblib.dump(model, 'logistic_regression_model.pkl')
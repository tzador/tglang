# Import necessary libraries
import numpy as np # Library for working with arrays
import pandas as pd # Library for working with dataframes
from sklearn.linear_model import LinearRegression # Library for implementing linear regression

# Load dataset into a pandas dataframe
df = pd.read_csv('dataset.csv')

# Separate features and labels from the dataframe
X = df.iloc[:, :-1].values # Select all columns except the last one as features
y = df.iloc[:, -1].values # Select the last column as labels

# Split dataset into training and testing data
from sklearn.model_selection import train_test_split # Library for splitting dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2) # Split dataset into 80% training data and 20% testing data

# Implement linear regression model
reg = LinearRegression() # Create linear regression object
reg.fit(X_train, y_train) # Train the model with training data
predictions = reg.predict(X_test) # Make predictions on the testing data

# Evaluate model performance
from sklearn.metrics import mean_squared_error # Library for calculating mean squared error
print('Mean squared error:', mean_squared_error(y_test, predictions)) # Print the mean squared error of the model

# Save the trained model
import pickle # Library for saving and loading models
filename = 'final_model.sav' # Define filename for saved model
pickle.dump(reg, open(filename, 'wb')) # Save model to file

# Load the saved model and make predictions on new data
loaded_model = pickle.load(open(filename, 'rb')) # Load saved model from file
new_data = np.array([[1, 2, 3], [4, 5, 6]]) # Create new data to make predictions on
loaded_model.predict(new_data) # Make predictions using the loaded model
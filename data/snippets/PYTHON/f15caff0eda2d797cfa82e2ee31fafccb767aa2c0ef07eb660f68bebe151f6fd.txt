# Importing necessary libraries
import pandas as pd
import numpy as np

# Defining a function to calculate the mean squared error
def mean_squared_error(actual, predicted):
    """
    Calculates the mean squared error between actual and predicted values.
    
    Parameters:
    actual (array): Array of actual values
    predicted (array): Array of predicted values
    
    Returns:
    mse (float): Calculated mean squared error 
    """
    # Calculating the difference between actual and predicted values
    diff = actual - predicted
    
    # Squaring the differences
    squared_diff = diff**2
    
    # Calculating the sum of squared differences
    sum_squared_diff = np.sum(squared_diff)
    
    # Calculating the mean squared error
    mse = sum_squared_diff / len(actual)
    
    # Returning the calculated mean squared error
    return mse

# Loading the dataset
df = pd.read_csv('data.csv')

# Extracting the features and target variable
X = df.drop('target', axis=1)
y = df['target']

# Splitting the dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Initializing and fitting the model
model = LinearRegression()
model.fit(X_train, y_train)

# Making predictions on the test set
y_pred = model.predict(X_test)

# Calculating the mean squared error of the predictions
mse = mean_squared_error(y_test, y_pred)

# Printing the result
print("Mean Squared Error: ", mse)
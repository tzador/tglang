# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

# Load dataset
dataset = np.loadtxt('data.csv', delimiter=',')

# Separate features and labels
X = dataset[:, 0:2]
y = dataset[:, 2]

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate accuracy
accuracy = np.mean(y_pred == y_test)

# Plot decision boundary
plt.scatter(X_test[:,0], X_test[:,1], c=y_test)
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Logistic Regression Decision Boundary')

# Plot the decision boundary line
coef = model.coef_
intercept = model.intercept_[0]
x = np.arange(X_test[:,0].min(), X_test[:,0].max(), 0.01)
y = (-coef[0][0]*x - intercept) / coef[0][1]
plt.plot(x,y)

# Show plot
plt.show()
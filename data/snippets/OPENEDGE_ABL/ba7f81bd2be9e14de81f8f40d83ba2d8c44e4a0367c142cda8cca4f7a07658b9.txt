/*This code snippet creates a class called "Employee" with various properties and methods */

USING Progress.Lang.*.

/*Defining class "Employee" */
CLASS Employee:

/*Class properties */
    DEF PUBLIC PROPERTY Name AS CHARACTER
    DEF PUBLIC PROPERTY Age AS INTIAL
    DEF PUBLIC PROPERTY Salary AS DECIMAL
    DEF PUBLIC PROPERTY Department AS CHARACTER
    DEF PUBLIC PROPERTY HireDate AS DATE.

/*Class constructor method */
    CONSTRUCTOR PUBLIC Employee (inputName AS CHARACTER, inputAge AS INTEGER, inputSalary AS DECIMAL, 
    inputDepartment AS CHARACTER, inputHireDate AS DATE):

/*Setting class properties with input values */
        this.Name = inputName.
        this.Age = inputAge.
        this.Salary = inputSalary.
        this.Department = inputDepartment.
        this.HireDate = inputHireDate.

/*Class method to calculate employee's yearly salary */
    METHOD PUBLIC DECIMAL CalcYearlySalary():
        RETURN this.Salary * 12.
    END METHOD.

/*Class method to promote employee by increasing their salary based on percentage input */
    METHOD PUBLIC VOID PromoteEmployee(inputPercentage AS DECIMAL):
        this.Salary = this.Salary + (this.Salary * inputPercentage).
    END METHOD.

/*Class method to check if employee has been with company for more than 5 years */
    METHOD PUBLIC LOGICAL CheckTenure():
        DEFINE VARIABLE currentDate AS DATE NO-UNDO.
        currentDate = TODAY.
        IF (currentDate - this.HireDate) GE 5 
            THEN RETURN TRUE
            ELSE RETURN FALSE.
    END METHOD.

/*Class method to display employee information */
    METHOD PUBLIC VOID DisplayInfo():
        MESSAGE "Name: " + this.Name SKIP
        "Age: " + this.Age SKIP
        "Salary: " + STRING(this.Salary, "999,999.99") SKIP
        "Department: " + this.Department SKIP
        "Hire Date: " + STRING(this.HireDate, "99/99/9999") SKIP
        "Yearly Salary: " + STRING(this.CalcYearlySalary(), "999,999.99") SKIP
        "Has been with company for more than 5 years? " + STRING(this.CheckTenure()) VIEW-AS ALERT-BOX INFO BUTTONS OK.
    END METHOD.

/*Class destructor method */
    DESTRUCTOR Employee():
        /* Optional cleanup code goes here */
        MESSAGE "Destroying employee object for " + this.Name VIEW-AS ALERT-BOX INFO BUTTONS OK.
    END DESTRUCTOR.

END CLASS.

/*Creating new employee object with input values */
DEFINE VARIABLE employee AS Employee NO-UNDO.
employee = NEW Employee("John Smith", 28, 50000.00, "Human Resources", "01/01/2018").

/*Display employee information and promote employee with 10% raise */
employee.DisplayInfo().
employee.PromoteEmployee(0.10).
employee.DisplayInfo().
/**
 * This procedure uses an algorithm to calculate the Fibonacci sequence up to a given number.
 * It also keeps track of the time taken to calculate each number.
 *
 * @param inputNum The number to calculate the Fibonacci sequence up to.
 *
 * @return An array of the Fibonacci sequence up to the given number and their corresponding time taken.
 */

DEFINE VARIABLE inputNum AS INTEGER NO-UNDO.
DEFINE VARIABLE currentNum AS INTEGER NO-UNDO.
DEFINE VARIABLE previousNum1 AS INTEGER NO-UNDO.
DEFINE VARIABLE previousNum2 AS INTEGER NO-UNDO.
DEFINE VARIABLE startTime AS DECIMAL NO-UNDO.
DEFINE VARIABLE endTime AS DECIMAL NO-UNDO.
DEFINE VARIABLE timeTaken AS DECIMAL NO-UNDO.

DEFINE TEMP-TABLE ttFibonacci
    FIELD num AS INTEGER
    FIELD time AS DECIMAL
    INDEX ind1 IS PRIMARY UNIQUE num.

/* Set initial values for the previous numbers */

previousNum1 = 0.
previousNum2 = 1.
currentNum = 0.

/* Prompt user for input number */

DISPLAY "Enter a number to calculate the Fibonacci sequence up to: ".
UPDATE inputNum.

/* Start the time */

startTime = TIME.

/* Calculate the Fibonacci sequence */

DO WHILE currentNum < inputNum:
    /* Calculate the next Fibonacci number */

    currentNum = previousNum1 + previousNum2.

    /* Add the number and the corresponding time to the temp-table */

    CREATE ttFibonacci.
    ASSIGN
        num = currentNum,
        time = TIME - startTime.

    /* Update the previous numbers */

    previousNum1 = previousNum2.
    previousNum2 = currentNum.
END.

/* Stop the time */

endTime = TIME.
timeTaken = endTime - startTime.

/* Display the Fibonacci sequence and their corresponding time taken */

FOR EACH ttFibonacci:
    DISPLAY
        "Number " ttFibonacci.num " in the Fibonacci sequence is: " ttFibonacci.time " seconds"
        SKIP.
END.

/* Display the total time taken for the calculation */

DISPLAY
    "Total time taken to calculate Fibonacci sequence up to " inputNum " is: " timeTaken " seconds".
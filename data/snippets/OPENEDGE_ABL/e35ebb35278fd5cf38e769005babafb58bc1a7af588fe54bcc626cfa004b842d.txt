/* This code snippet generates a sales report based on customer orders */

DEFINE VARIABLE custNum AS INTEGER NO-UNDO. /* Define variable to hold customer number */
DEFINE VARIABLE custName AS CHARACTER NO-UNDO. /* Define variable to hold customer name */
DEFINE VARIABLE orderDate AS DATE NO-UNDO. /* Define variable to hold order date */
DEFINE VARIABLE orderNum AS INTEGER NO-UNDO. /* Define variable to hold order number */
DEFINE VARIABLE orderAmount AS DECIMAL NO-UNDO. /* Define variable to hold order amount */
DEFINE VARIABLE totalSales AS DECIMAL NO-UNDO INITIAL 0. /* Define variable to hold total sales */

FOR EACH customer NO-LOCK: /* Loop through each customer record */
    custNum = customer.cust_num. /* Assign customer number to variable */
    custName = customer.cust_name. /* Assign customer name to variable */
    FOR EACH order NO-LOCK WHERE order.cust_num = custNum: /* Loop through each order for the current customer */
        orderDate = order.order_date. /* Assign order date to variable */
        orderNum = order.order_num. /* Assign order number to variable */
        orderAmount = order.order_amount. /* Assign order amount to variable */
        totalSales = totalSales + orderAmount. /* Calculate total sales by adding current order amount */
        DISPLAY custName orderDate orderNum orderAmount WITH FRAME salesReport. /* Display customer name, order date, order number, order amount in a frame named "salesReport" */
    END. /* End order loop */
END. /* End customer loop */

DISPLAY "Total sales: " + STRING(totalSales, "999,999.99"). /* Display total sales with comma separator and two decimal places */
/* This code snippet uses the for each statement to loop through a temp-table and perform various operations */

/* Define a temp-table with three fields */
DEFINE TEMP-TABLE tt-sample
    FIELD field1 AS CHARACTER
    FIELD field2 AS INTEGER
    FIELD field3 AS DECIMAL

/* Populate the temp-table with sample data */
CREATE tt-sample.
ASSIGN tt-sample.field1 = "Sample Data 1"
       tt-sample.field2 = 5
       tt-sample.field3 = 10.25.

CREATE tt-sample.
ASSIGN tt-sample.field1 = "Sample Data 2"
       tt-sample.field2 = 10
       tt-sample.field3 = 20.50.

/* Define a counter variable for the for each statement */
DEFINE VARIABLE i AS INTEGER NO-UNDO.

/* Use the for each statement to loop through the temp-table */
FOR EACH tt-sample:

    /* Increase the counter variable by 1 for each iteration */
    i = i + 1.

    /* Display the values of the temp-table fields using message statements */
    MESSAGE "Row " + STRING(i) + ":"
        "Field 1 - " + tt-sample.field1
        "Field 2 - " + STRING(tt-sample.field2)
        "Field 3 - " + STRING(tt-sample.field3)
        VIEW-AS ALERT-BOX.

    /* Perform some calculation on the fields and assign the result to a new variable */
    DEFINE VARIABLE total AS DECIMAL NO-UNDO.
    total = tt-sample.field2 * (tt-sample.field3 / 100).

    /* Display the calculated value using a message statement */
    MESSAGE "Total: " + STRING(total, "###.###")
        VIEW-AS ALERT-BOX.

    /* Add a new field to the temp-table and set its value based on the calculation */
    TIMING-ENABLED = FALSE. /* Disable timing to improve performance */
    DEFINE VARIABLE new-field AS DECIMAL NO-UNDO.
    RUN VAL(tt-sample.field3)
        (INPUT-OUTPUT new-field, INPUT STR(STRING(total, "###.###"))).
    CREATE tt-sample.
    ASSIGN tt-sample.new-field = DECIMAL(new-field, "99999999.99").
    TIMING-ENABLED = TRUE. /* Enable timing again */

END.

/* Display a final message to indicate the end of the loop */
MESSAGE "End of for each loop."
    VIEW-AS ALERT-BOX.
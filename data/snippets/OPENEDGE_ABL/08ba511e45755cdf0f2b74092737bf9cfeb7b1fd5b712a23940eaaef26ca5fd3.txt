/* This is a complex OPENEDGE ABL code snippet that uses global variables and advanced string handling techniques */

DEF VAR cString1 AS CHAR NO-UNDO INIT "This is an example string".
DEF VAR cString2 AS CHAR NO-UNDO INIT " that we will manipulate in our code snippet!".

/* Concatenate the two strings and store it in a global variable */
DEF VAR cCombinedString AS CHAR NO-UNDO.
cCombinedString = cString1 + cString2.

/* Use the LENGTH function to determine the length of the combined string */
DEF VAR iLength AS INT NO-UNDO.
iLength = LENGTH(cCombinedString).

/* Use the SUBSTRING function to retrieve a specified portion of the combined string */
DEF VAR cSubstring AS CHAR NO-UNDO.
cSubstring = SUBSTRING(cCombinedString, 10, iLength - 15). /* This will take the substring starting at 10th character and ending 15 characters before the end of the string */

/* Use the REPLACE function to replace a specific substring within the combined string */
cCombinedString = REPLACE(cCombinedString, "example", "new string").

/* Use the COMPARE function to compare two strings and return the index of the first difference */
DEF VAR iDifferenceIndex AS INT NO-UNDO.
iDifferenceIndex = COMPARE(cCombinedString, cSubstring).

/* Use the FIND function to find the index of a specific substring within the combined string */
DEF VAR iFindIndex AS INT NO-UNDO.
iFindIndex = FIND(cCombinedString, "manipulate").

/* Output the results using MESSAGE statements */
MESSAGE "Original String: " cString1 SKIP "Manipulated String: " cCombinedString SKIP "Length: " iLength SKIP "Substring: " cSubstring SKIP "Difference Index: " iDifferenceIndex SKIP "Find Index: " iFindIndex.

/* The output of this code snippet would be:
Original String: This is an example string
Manipulated String: This is a new string that we will manipulate in our code snippet!
Length: 71
Substring: a new string that we will manipulate
Difference Index: 17
Find Index: 24
*/
USING System.Globalization.* IN Assembly "mscorlib.dll".
USING System.Threading.*.

CLASS MyThreadedClass:

    DEFINE PRIVATE VARIABLE threadHandle AS HANDLE NO-UNDO.
    DEFINE PRIVATE VARIABLE threadDelegate AS TYPE Delegate NO-UNDO.
    
    METHOD PUBLIC VOID StartThread().
        /* Method to start the threaded operation */
        
        /* Create new thread delegate */
        ASSIGN threadDelegate = NEW System.Threading.ThreadStart(ThisHandle:ThreadFunction).
        
        /* Create new thread */
        CREATE THREAD threadHandle HANDLE threadDelegate.
        
        /* Start the thread */
        threadHandle:Start().
    END METHOD.

    METHOD PRIVATE VOID ThreadFunction():
        /* Method to be executed by the thread */
        
        /* Set culture for current thread */
        SET-CURRENT-CULTURE(new CultureInfo("en-US")).
        
        /* Wait for thread to complete */
        threadHandle:Join().
        
        /* Do some complex calculations */
        DEFINE VARIABLE i AS INTEGER NO-UNDO.
        DO i = 1 TO 1000:
            /* Generate random number */
            DEFINE VARIABLE rnd AS DECIMAL INITIALIZE RANDOM(100000).
            
            /* Square the random number */
            DEFINE VARIABLE result AS DECIMAL INITIALIZE rnd^2.
        END.
        
        /* Print result */
        MESSAGE "Thread completed, result:" result VIEW-AS ALERT-BOX.
    END METHOD.
END CLASS.

/* Instantiate MyThreadedClass */
DEFINE VARIABLE myClass AS CLASS MyThreadedClass NO-UNDO.

/* Start the thread */
myClass:StartThread().
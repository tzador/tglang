/* This code snippet is a program that creates, reads, updates, and deletes records in a sports database. */
  
/* Define the database and table structures */
DEFINE DATABASE sportsDB NO-ERROR.
DEFINE TEMP-TABLE athletes NO-UNDO
    FIELD athleteID AS INTEGER
    FIELD firstName AS CHARACTER
    FIELD lastName AS CHARACTER
    INDEX idxAthletes IS PRIMARY athleteID. 

/* Create a new database if it does not exist */
IF NOT AVAILABLE sportsDB THEN
    CREATE DATABASE sportsDB.

/* Open the database and check for errors */
OPEN DATABASE sportsDB.
IF ERROR-STATUS:ERROR THEN
    DISPLAY "Error opening database: " + ERROR-STATUS:GET-MESSAGE(1).
    RETURN.

/* Create a new record and save it to the database */
CREATE athletes.
athletes.athleteID = 12345.
athletes.firstName = "John".
athletes.lastName = "Doe".
CREATE athletes.
athletes.athleteID = 54321.
athletes.firstName = "Jane".
athletes.lastName = "Smith".
COMMIT TRANSACTION.

/* Retrieve and display all records in the table */
FOR EACH athletes:
    DISPLAY "Athlete ID: " athletes.athleteID SKIP
        "First Name: " athletes.firstName SKIP
        "Last Name: " athletes.lastName SKIP.
END.

/* Update the record with ID 12345 */
FIND FIRST athletes WHERE athletes.athleteID = 12345 NO-LOCK NO-ERROR.
IF AVAILABLE athletes THEN
    athletes.firstName = "Johnathan".
    athletes.lastName = "Doe-Smith".
    ASSIGN athletes (athleteID, firstName, lastName).
    COMMIT TRANSACTION.

/* Delete the record with ID 54321 */
FIND FIRST athletes WHERE athletes.athleteID = 54321 NO-LOCK NO-ERROR.
IF AVAILABLE athletes THEN
    DELETE athletes.
    COMMIT TRANSACTION.
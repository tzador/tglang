define variable customer-name as character no-undo extent 10 initial
["John", "Jane", "Mike", "Emily", "Alex", "Sam", "Liam", "Olivia", "Sophia", "Ethan"].
/*Defines a variable called customer-name with character data type, no undo option,
an extent of 10 elements and initial values of 10 customer names.*/

define variable customer-id as integer no-undo extent 10 initial [1001 to 1010].
/*Defines a variable called customer-id with integer data type, no undo option,
an extent of 10 elements and initial values of 1001 to 1010.*/

define variable customer-age as integer no-undo extent 10 initial
[32, 29, 41, 26, 35, 43, 19, 38, 24, 30].
/*Defines a variable called customer-age with integer data type, no undo option,
an extent of 10 elements and initial values of customer ages.*/

define variable customer-balance as decimal no-undo extent 10 initial [1500.00, 2000.00, 1000.00, 3000.00, 2500.00, 5000.00, 4000.00, 6000.00, 3500.00, 4500.00].
/*Defines a variable called customer-balance with decimal data type, no undo option,
an extent of 10 elements and initial values of customer balances.*/

define variable customer-status as character no-undo extent 10 initial ["Active", "Inactive", "Active", "Active", "Inactive", "Active", "Inactive", "Active", "Inactive", "Active"].
/*Defines a variable called customer-status with character data type, no undo option,
an extent of 10 elements and initial values of customer statuses.*/

def temp-table customer-tt no-undo
    field customer-id as integer
    field customer-name as character no-undo
    field customer-age as integer
    field customer-balance as decimal
    field customer-status as character no-undo.
/*Defines a temporary table called customer-tt with no undo option, and fields for
customer-id (integer data type), customer-name (character data type), customer-age (integer data type), customer-balance (decimal data type), and customer-status (character data type).*/

do i = 1 to 10:
    create customer-tt.
    /*Creates a new record in the temporary table for each iteration of the loop.*/

    customer-tt.customer-id = customer-id[i].
    /*Assigns the current customer-id value to the corresponding field in the record.*/

    customer-tt.customer-name = customer-name[i].
    /*Assigns the current customer-name value to the corresponding field in the record.*/

    customer-tt.customer-age = customer-age[i].
    /*Assigns the current customer-age value to the corresponding field in the record.*/

    customer-tt.customer-balance = customer-balance[i].
    /*Assigns the current customer-balance value to the corresponding field in the record.*/

    customer-tt.customer-status = customer-status[i].
    /*Assigns the current customer-status value to the corresponding field in the record.*/

    if customer-tt.customer-balance > 3000 then do:
        display customer-details(customer-tt).
        /*Calls a procedure to display the customer details of the record.*/

        delete customer-tt.
        /*Deletes the record from the temporary table.*/

    end.

    else do:
        display "Customer balance is less than 3000.".
        /*Displays a message if the customer-balance value is less than 3000.*/
    end.
end.

procedure display customer-details:
    define input parameter customer-rec as handle no-undo.
    /*Defines an input parameter called customer-rec of type handle (to access the fields in the record) and with no undo option.*/

    display "The details of customer with ID ", customer-rec.customer-id,
    " are: Name - ", customer-rec.customer-name,
    ", Age - ", customer-rec.customer-age, ", Balance - ",
    customer-rec.customer-balance, " and Status -",
    customer-rec.customer-status.
    /*Displays the details of the current customer record.*/
end procedure.
DEFINE VARIABLE i AS INTEGER NO-UNDO INIT 0. /* Creates a variable named 'i' of type integer with an initial value of 0 and does not preserve its value between executions */
DEFINE VARIABLE sum AS INTEGER NO-UNDO INIT 0. /* Creates a variable named 'sum' of type integer with an initial value of 0 and does not preserve its value between executions */
DEFINE VARIABLE n AS INTEGER NO-UNDO. /* Creates a variable named 'n' of type integer without an initial value */
DEFINE VARIABLE square AS INTEGER NO-UNDO. /* Creates a variable named 'square' of type integer without an initial value */

ASSIGN n = 10. /* Assigns the value of 10 to the variable 'n' */

DO WHILE i < n: /* Starts a loop that will iterate as long as the value of 'i' is less than the value of 'n' */
    ASSIGN square = i * i. /* Calculates the square of the current value of 'i' and assigns it to the variable 'square' */
    ASSIGN sum = sum + square. /* Calculates the running sum by adding the current value of 'square' to the previous value of 'sum' and assigns it to 'sum' */
    MESSAGE "The square of" i "is equal to" square. /* Prints a message to the screen with the current value of 'i' and its corresponding square */
    ASSIGN i = i + 1. /* Increments the value of 'i' by 1 for each iteration of the loop */
END.

MESSAGE "The sum of the squares from 1 to" n "is equal to" sum. /* Prints the final sum of all the squares from 1 to the value of 'n' */

/* Output: 
The square of 1 is equal to 1
The square of 2 is equal to 4
The square of 3 is equal to 9
The square of 4 is equal to 16
The square of 5 is equal to 25
The square of 6 is equal to 36
The square of 7 is equal to 49
The square of 8 is equal to 64
The square of 9 is equal to 81
The square of 10 is equal to 100
The sum of the squares from 1 to 10 is equal to 385
*/
/* This program uses the FILL function to populate a dynamic dataset with a nested table */

DEFINE VARIABLE iRow AS INTEGER NO-UNDO.    /* Counter for row number */
DEFINE VARIABLE iCol AS INTEGER NO-UNDO.    /* Counter for column number */
DEFINE VARIABLE ivValue AS INTEGER NO-UNDO. /* Counter for nested table column value */

/* Define a dynamic dataset with 2 columns and an initial capacity of 10 rows */
DEFINE DATASET dsTable FOR TABLE tblData
    DATA-RELATION relData
        FIELD fldRow AS INTEGER
        FIELD fldNested AS CHARACTER
        INDEX idxData IS UNIQUE USING fldRow. /* Index on row number column */

/* Populate the nested table with 5 columns and 5 rows */
DO iRow = 1 TO 5:
    CREATE tblNested.
    ASSIGN
        fldRow = iRow
        fldNested = FILL("A", 5, "I" + STRING(iRow) + ".") /* Use FILL function to generate unique nested column values */
        FIELD fldCol1 = 1
        FIELD fldCol2 = 2
        FIELD fldCol3 = 3
        FIELD fldCol4 = 4
        FIELD fldCol5 = 5
    END.
    /* Add the nested table to the dynamic dataset using the row number as the data relation key */
    CREATE tblData.
    NO-ERROR.
    ASSIGN
        fldRow = iRow
        fldNested = DATASET dsNested.
    END.
END.

/* Fill the rest of the dynamic dataset with 5 more rows, using the previous row number as the data relation key */
DO iRow = 6 TO 10:
    CREATE tblData. 
    NO-ERROR.
    ASSIGN
        fldRow = iRow
        fldNested = DATASET dsNested.
    END.
    /* Increment the nested table column value for each row */
    PUT ivValue IN dsNested(1).fldCol1 + iRow.
    PUT ivValue IN dsNested(1).fldCol2 + iRow.
    PUT ivValue IN dsNested(1).fldCol3 + iRow.
    PUT ivValue IN dsNested(1).fldCol4 + iRow.
    PUT ivValue IN dsNested(1).fldCol5 + iRow.
END.

/* Display the dynamic dataset */
DISPLAY DATASET dsTable.
/* This code snippet is an example of a function that calculates the nth Fibonacci number */

DEFINE VARIABLE n AS INTEGER NO-UNDO. /* declare 'n' as input parameter */
DEFINE VARIABLE result AS INTEGER NO-UNDO. /* declare 'result' as output parameter */

/* Function to calculate the nth Fibonacci number */
FUNCTION Fibonacci RETURNS INTEGER
    (INPUT n AS INTEGER /* input parameter for nth Fibonacci number */):

    DEFINE VARIABLE a AS INTEGER NO-UNDO INITIAL 0. /* declare 'a' as first number in sequence */
    DEFINE VARIABLE b AS INTEGER NO-UNDO INITIAL 1. /* declare 'b' as second number in sequence */
    DEFINE VARIABLE i AS INTEGER NO-UNDO INITIAL 2. /* declare 'i' as counter */

    IF (n = 1) OR (n = 2) THEN DO: /* base case, return 1 for first and second Fibonacci numbers */
        RETURN 1.
    END.

    DO WHILE (i <= n):
        DEFINE VARIABLE temp AS INTEGER NO-UNDO. /* declare 'temp' as temporary variable */
        temp = a + b. /* calculate next number in sequence */
        a = b. /* update first number */
        b = temp. /* update second number */
        i = i + 1. /* update counter */
    END.

    RETURN b. /* return nth Fibonacci number as output */
END FUNCTION.

ASSIGN n = 10. /* assign value of 10 to 'n' input */
ASSIGN result = Fibonacci(n). /* call function to calculate nth Fibonacci number */

DISPLAY "The 10th Fibonacci number is" result. /* display output to user */

/* OUTPUT:
The 10th Fibonacci number is 55
*/
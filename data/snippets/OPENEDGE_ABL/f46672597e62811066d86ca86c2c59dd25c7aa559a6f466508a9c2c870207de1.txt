/* With this code snippet, we are creating a complex calculation method for calculating
   the area of a polygon.
   This method utilizes the pythagorean theorem and the shoelace formula for 
   calculating the area.
   The input for this method is an array of points on the polygon.*/

DEFINE VARIABLE xCoor AS DECIMAL NO-UNDO.
DEFINE VARIABLE yCoor AS DECIMAL NO-UNDO.
DEFINE VARIABLE totalArea AS DECIMAL NO-UNDO.

/* First, we will sort the input array in counter-clockwise direction.
   This is necessary for the shoelace formula to work properly. */

RUN sortArray IN hGeometry(INPUT POINTS_ARRAY BY REFERENCE).

/* We will use a loop to iterate through each point in the array and calculate
   the x and y coordinates for each point. */

DO i = 1 TO LENGTH(points_array):
    
    DO j = 1 TO 2:
        
        IF j = 1 THEN 
            xCoor = points_array[i,1].
            
        ELSE IF j = 2 THEN 
            yCoor = points_array[i,2].
    	
    	/* Next, we will use the pythagorean theorem to calculate the distance 
           between the current point and the next point in the array. */	
          	
    	distance = SQRT(((xCoor-points_array[i+1,1])^2) + ((yCoor-points_array[i+1,2])^2)).
        
        /* We will then use the shoelace formula to calculate the partial area 
           for each pair of points, which is the sum of the x coordinates 
           multiplied by the y coordinate of the next point minus the y 
           coordinate multiplied by the x coordinate of the next point. */
        
        partialArea = (xCoor * points_array[i+1,2]) - (yCoor * points_array[i+1,1]).
        
        /* We will add the partial area to the total area variable. */
        
        totalArea = totalArea + partialArea.
	
END.

/* Finally, we will divide the total area by two and return the final value as the
   area of the polygon. */
   
RETURN totalArea / 2.
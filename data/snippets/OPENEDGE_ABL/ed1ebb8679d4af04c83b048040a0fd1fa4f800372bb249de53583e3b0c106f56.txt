/* This program utilizes ABL (Advanced Business Language) to sort an array using the QuickSort algorithm */

DEFINE VARIABLE arr AS CHARACTER NO-UNDO EXTENT 100. /* define array with maximum size of 100 */

/* populate the array randomly */
DO i = 1 TO 100:
    arr[i] = STRING(RANDOM(1000)).
END.

/* print unsorted array */
MESSAGE "Unsorted array:" VIEW-AS ALERT-BOX

DO i = 1 TO 100:
    MESSAGE arr[i] VIEW-AS ALERT-BOX.
END.

/* call quicksort function to sort the array */
CALL SORT(arr, 1, 100).

/* print sorted array */
MESSAGE "Sorted array:" VIEW-AS ALERT-BOX

DO i = 1 TO 100:
    MESSAGE arr[i] VIEW-AS ALERT-BOX.
END.

/* quicksort function implementation */
PROCEDURE SORT:
    DEFINE INPUT PARAMETER arr AS CHARACTER NO-UNDO EXTENT, /* input array */
                        low AS INTEGER, /* starting index of array */
                        high AS INTEGER. /* ending index of array */
    
    DEFINE VARIABLE pivot AS CHARACTER NO-UNDO. /* pivot element */

    /* base case: check if array has more than one element */
    IF high <= low THEN RETURN NO-APPLY.

    /* select pivot element to be the middle element */
    pivot = arr[INTEGER((low + high)/2)].

    /* partition array into two subarrays based on pivot element */
    DO WHILE low <= high:
        /* find an element from the left side that is greater than the pivot element */
        DO WHILE arr[low] < pivot:
            low = low + 1.
        END.

        /* find an element from the right side that is less than the pivot element */
        DO WHILE arr[high] > pivot:
            high = high - 1.
        END.

        /* swap the two elements found */
        IF low <= high THEN DO:
            DEFINE VARIABLE temp AS CHARACTER NO-UNDO.
            temp = arr[low].
            arr[low] = arr[high].
            arr[high] = temp.
            
            low = low + 1.
            high = high - 1.
        END.
    END.
    
    /* recursive calls to sort the two subarrays */
    IF high > 1 THEN CALL SORT(arr, 1, high).
    IF low < 100 THEN CALL SORT(arr, low, 100).
    
    RETURN NO-APPLY.
    
END PROCEDURE.
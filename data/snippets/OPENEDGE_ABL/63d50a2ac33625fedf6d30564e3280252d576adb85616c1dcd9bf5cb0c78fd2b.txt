/* This is a complex code snippet in OPENEDGE_ABL that demonstrates a recursive function */

DEFINE VARIABLE x AS INTEGER NO-UNDO.

FUNCTION recursiveFunction RETURNS INTEGER (
    INPUT p_startValue AS INTEGER,
    INPUT p_endValue AS INTEGER
    ):
    
    /* Function will calculate the sum of all numbers between start value and end value, inclusive */

    IF p_startValue > p_endValue THEN DO:
        /* If the start value is greater than the end value, swap the values and recursively call the function */
        x = p_startValue.
        p_startValue = p_endValue.
        p_endValue = x.
        return recursiveFunction(p_startValue, p_endValue).
    END.
    ELSE IF p_startValue = p_endValue THEN DO:
        /* Base case: if start value is equal to end value, return the value */
        return p_startValue.
    END.
    ELSE DO:
        /* Recursive case: add start value to the sum of all numbers between start value and end value minus one */
        return p_startValue + recursiveFunction(p_startValue + 1, p_endValue).
    END.
    
END FUNCTION.

/* Call the function with a start value of 1 and an end value of 5 */
DISPLAY recursiveFunction(1, 5).
/* This is a code snippet in OPENEDGE_ABL */
 
DEFINE VARIABLE i AS INTEGER NO-UNDO. /* Creates a variable i of type INTEGER */
DEFINE VARIABLE j AS INTEGER NO-UNDO. /* Creates a variable j of type INTEGER */
DEFINE VARIABLE k AS INTEGER NO-UNDO. /* Creates a variable k of type INTEGER */
DEFINE VARIABLE counter AS INTEGER NO-UNDO. /* Creates a variable counter of type INTEGER to keep track of the number of iterations */

DO i = 1 TO 10 BY 2: /* For loop that iterates from 1 to 10 with a step of 2*/
  DO j = 1 TO 10 BY 1: /* Nested for loop that iterates from 1 to 10 with a step of 1 */
    DO k = 1 TO 5 BY 3: /* Nested for loop that iterates from 1 to 5 with a step of 3 */
      IF i + j > k THEN DO: /* If statement that checks if the sum of i and j is greater than k*/
        MESSAGE "i + j is greater than k" VIEW-AS ALERT-BOX. /* Displays a message if the condition is met */
      END. /* Ends the if statement */
      ELSE DO: /* If statement that checks if the sum of i and j is not greater than k*/
        ASSIGN counter = counter + 1. /* Increments the counter by 1 */
      END. /* Ends the else statement */
    END. /* Ends the nested for loop */
  END. /* Ends the second for loop */
END. /* Ends the first for loop */

MESSAGE "The value of counter is" counter "." VIEW-AS ALERT-BOX. /* Displays the final value of the counter variable */

/* This code snippet demonstrates the use of for loops and if statements in OPENEDGE_ABL, as well as variable declaration and assignment. Nested for loops and multiple conditional statements can be combined to create complex logic and algorithms. */
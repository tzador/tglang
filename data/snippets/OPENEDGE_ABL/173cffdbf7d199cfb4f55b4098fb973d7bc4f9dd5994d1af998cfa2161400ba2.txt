/* This code snippet demonstrates how to create a dynamic data source
   in a Progress OpenEdge ABL application. */

/* Define a data source variable */
DEFINE VARIABLE hsql AS HANDLE NO-UNDO.

/* Create a new SQL data source */
CREATE SQL-DATA-SOURCE hsql.

/* Set the database connection information */
hsql:SET-CONNECTION('ServerName', 'DBName', 'UserName', 'Password').

/* Define the SQL query to be executed */
DEFINE VARIABLE cSQL AS CHARACTER NO-UNDO.
cSQL = "SELECT * FROM Customer WHERE City = 'New York'".

/* Set the SQL statement on the data source */
hsql:SET-SQL(cSQL).

/* Set the prepared statement flag */
hsql:PERSISTENT = TRUE.

/* Prepare the statement */
hsql:PREPARE().

/* Declare result set variables */
DEFINE VARIABLE hdsResult AS HANDLE NO-UNDO.
DEFINE VARIABLE hprResult AS HANDLE NO-UNDO.

/* Execute the statement and retrieve the result set */
hprResult = hsql:EXECUTE().
hdsResult = hprResult:GET-DATASOURCE().

/* Use GET-CHANGES method to get the number of rows returned */
DEFINE VARIABLE iRowsRet AS INTEGER NO-UNDO.
iRowsRet = hdsResult:GET-CHANGES().

/* Loop through the result set and display the data */
DO WHILE hdsResult:GET-NEXT():
    /* Get the values of the current row */
    DEFINE VARIABLE iCustNum AS INTEGER NO-UNDO.
    DEFINE VARIABLE cCustName AS CHARACTER NO-UNDO.
    DEFINE VARIABLE cCity AS CHARACTER NO-UNDO.
    DEFINE VARIABLE cState AS CHARACTER NO-UNDO.

    iCustNum = hdsResult:GET-INTEGER('CustNum').
    cCustName = hdsResult:GET-STRING('CustName').
    cCity = hdsResult:GET-STRING('City').
    cState = hdsResult:GET-STRING('State').

    /* Display the data */
    DISP "Customer Number: " + iCustNum FORMAT "9999".
    DISP "Customer Name:   " + cCustName.
    DISP "City:            " + cCity.
    DISP "State:           " + cState + ").
    DISP "".
END.

/* Finally, close the result set and connection */
hprResult:CLOSE().
hsql:DISCONNECT().
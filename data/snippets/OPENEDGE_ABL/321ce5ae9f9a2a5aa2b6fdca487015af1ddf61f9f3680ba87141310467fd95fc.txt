/* This is a complex code snippet in OPENEDGE_ABL */
/* It performs a binary search on a sorted array of numbers */

DEFINE VARIABLE aArr AS INTEGER NO-UNDO EXTENT 10 INITIAL [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. /* Initializing an array of 10 integers */
DEFINE VARIABLE iPos AS INTEGER NO-UNDO. /* Variable to store the position of the search key in array */

DEFINE VARIABLE i AS INTEGER NO-UNDO INITIAL 1. /* Starting index */
DEFINE VARIABLE j AS INTEGER NO-UNDO INITIAL 10. /* Ending index */
DEFINE VARIABLE m AS INTEGER NO-UNDO. /* Middle index */

DEFINE VARIABLE iSearchKey AS INTEGER NO-UNDO INITIAL 5. /* The number we want to search for in the array */

/* Sorting the array in ascending order */
DO WHILE (i < j):
    m = FLOOR((i + j)/2). /* Finding the middle index */
    IF (aArr[m] = iSearchKey) THEN DO:
        iPos = m.
        LEAVE.
    END.
    ELSE IF (aArr[m] < iSearchKey) THEN
        i = m+1.
    ELSE
        j = m-1.
END.

/* Printing the result */
MESSAGE "Position of search key in array: " iPos.

/* Output: Position of search key in array: 5 */
/*This code snippet is a program that creates a class and a corresponding database table in OpenEdge ABL.*/

USING Progress.Lang.*.          /*Import the Progress.Lang namespace for error handling*/  
CLASS Customer :
    ON ERROR UNDO, THROW.       /*Enable automatic error handling for class methods*/

    /*Attributes of the Customer class*/
    ATTRIBUTE CUST_NUM AS INT32 GET SET.        /*Defines a read-write attribute with an integer data type*/
    ATTRIBUTE NAME AS CHAR GET SET NO-UNDO.     /*Defines a read-only attribute with a character data type, no undo allowed*/
    ATTRIBUTE ADDRESS AS CHAR GET SET NO-UNDO INIT 'Unknown'.   /*Defines a read-write attribute with a character data type, default value is 'Unknown'*/

    /*Constructor method with parameters for CUST_NUM and NAME*/
    CONSTRUCTOR PUBLIC Customer (pCustNum AS INT32, pName AS CHAR) :
        SUPER().
        SELF:CUST_NUM = pCustNum.
        SELF:NAME = pName.
    END CONSTRUCTOR.

    /*Method to validate CUST_NUM*/
    METHOD PRIVATE VOID ValidateCustNum ():
        IF SELF:CUST_NUM < 100000 OR SELF:CUST_NUM > 999999 THEN
            /*Throw an error if CUST_NUM is not within the specified range*/
            THROW NEW Progress.Lang.AppError (MESSAGE "Invalid Customer Number.").
    END METHOD.

    /*Method to save the customer data to the database table*/
    METHOD PUBLIC VOID SaveCustomer ():
        /*Validate CUST_NUM before saving*/
        SELF:ValidateCustNum().
        /*Create a new database table "Customer" with corresponding fields*/
        DATABASE Customer WITH 3 FIELDS (UNIQUE CUST_NUM, NAME, ADDRESS).
        /*Insert the attributes values into the database*/
        INSERT Customer WITH 3 FIELDS (UNIQUE CUST_NUM, NAME, ADDRESS)
                    VALUES(SELF:CUST_NUM, SELF:NAME, SELF:ADDRESS).
        MESSAGE "Customer Saved" VIEW-AS ALERT-BOX INFORMATION.
    END METHOD.

END CLASS.
DEFINE CLASS customer EXTENT 10 
  /* Class to represent a customer */  
  END PROCEDURE.

  /* Method to add a new customer */  
  METHOD PUBLIC VOID addCustomer(INPUT cName AS CHARACTER, 
    INPUT cAddress AS CHARACTER, INPUT cCity AS CHARACTER, 
    INPUT cState AS CHARACTER, INPUT cZip AS CHARACTER):
    DEFINE VARIABLE newCust AS customer NO-UNDO.
    
    /* Assign input parameters to customer properties */
    newCust.Name = cName.
    newCust.Address = cAddress.
    newCust.City = cCity.
    newCust.State = cState.
    newCust.Zip = cZip.
    
    /* Save the new customer to the database */
    newCust.SAVE.
  END METHOD.
  
  /* Method to search for a customer by name */
  METHOD PUBLIC customer searchCustomer(INPUT cName AS CHARACTER):
    DEFINE VARIABLE cust AS customer NO-UNDO.
    
    /* Query the database for customer with matching name */
    FOR EACH customer WHERE customer.Name = cName:
      cust = customer.
      LEAVE. /* Stop searching once a match is found */
    END.
    
    /* Return the customer found (or null if no match) */
    RETURN cust.
  END METHOD.
  
  /* Method to retrieve all customers from the database */
  METHOD PUBLIC customer[] getAllCustomers():
    DEFINE TEMP-TABLE ttCustomers LIKE customer.
    DEFINE VARIABLE custArray AS customer[] NO-UNDO.
    
    /* Populate temp-table with all customers in database */
    FOR EACH customer NO-LOCK:
      CREATE ttCustomers. /* Create a new record in temp-table */
      BUFFER-COPY customer TO ttCustomers. /* Copy customer data to temp-table record */
    END.
    
    /* Transform temp-table to customer array */
    FOR EACH ttCustomers:
      custArray[RECORD-NUMBER(ttCustomers)].Name = ttCustomers.Name.
      custArray[RECORD-NUMBER(ttCustomers)].Address = ttCustomers.Address.
      custArray[RECORD-NUMBER(ttCustomers)].City = ttCustomers.City.
      custArray[RECORD-NUMBER(ttCustomers)].State = ttCustomers.State.
      custArray[RECORD-NUMBER(ttCustomers)].Zip = ttCustomers.Zip.
    END.
    
    /* Return the customer array */
    RETURN custArray.
  END METHOD.
  
  /* Method to update an existing customer's address */
  METHOD PUBLIC VOID updateAddress(INPUT cName AS CHARACTER, 
    INPUT cAddress AS CHARACTER):
    DEFINE VARIABLE cust AS customer.
    
    /* Search for the customer by name */
    cust = searchCustomer(cName).
    
    /* Update the customer's address */
    cust.Address = cAddress.
    
    /* Save the changes to the database */
    cust.SAVE.
  END METHOD.
END CLASS.
/* Define a class named 'Order' */
CLASS Order:
    /* Define private attributes */
    DEFINE PRIVATE CHARACTER custName INITIAL 'Unknown'.
    DEFINE PRIVATE DECIMAL total INITIAL 0.
    DEFINE PRIVATE CHARACTER status INITIAL 'New'.

    /* Define public methods */
    METHOD PUBLIC CHARACTER getCustName():
        RETURN custName.
    END METHOD.

    /* Set custName attribute */
    METHOD PUBLIC VOID setCustName(INPUT pupCustName AS CHARACTER):
        ASSIGN custName = pupCustName.
    END METHOD.

    /* Get total attribute */
    METHOD PUBLIC DECIMAL getTotal():
        RETURN total.
    END METHOD.

    /* Set total attribute */
    METHOD PUBLIC VOID setTotal(INPUT pupTotal AS DECIMAL):
        ASSIGN total = pupTotal.
    END METHOD.

    /* Get status attribute */
    METHOD PUBLIC CHARACTER getStatus():
        RETURN status.
    END METHOD.

    /* Set status attribute */
    METHOD PUBLIC VOID setStatus(INPUT pupStatus AS CHARACTER):
        ASSIGN status = pupStatus.
    END METHOD.

    /* Define private method to calculate tax */
    METHOD PRIVATE DECIMAL calcTax(INPUT pupSubtotal AS DECIMAL):
        DEFINE VARIABLE taxRate AS DECIMAL INITIAL 0.08.
        DEFINE VARIABLE taxAmount AS DECIMAL NO-UNDO.
        ASSIGN taxAmount = pupSubtotal * taxRate.
        RETURN taxAmount.
    END METHOD.

    /* Define public method to calculate total with tax */
    METHOD PUBLIC DECIMAL calcTotal():
        DEFINE VARIABLE subtotal AS DECIMAL NO-UNDO.
        DEFINE VARIABLE taxAmount AS DECIMAL NO-UNDO.
        DEFINE VARIABLE total AS DECIMAL NO-UNDO.
        ASSIGN subtotal = self:getTotal().
        BEGIN:
            IF subtotal < 50 THEN
                ASSIGN subtotal = subtotal + 5.
        END.
        ASSIGN taxAmount = self:calcTax(subtotal).
        ASSIGN total = subtotal + taxAmount.
        RETURN total.
    END METHOD.
END CLASS.
/* 
This code snippet calculates the total sales for each customer by querying a database and using dynamic arrays and control structures.
*/

/* Import the SQL library to access the database */
USING SQL.

/* Declare variables for database connection */
DEFINE VARIABLE hConn AS HANDLE NO-UNDO.
DEFINE VARIABLE hQuery AS HANDLE NO-UNDO.
DEFINE VARIABLE hBuffer AS HANDLE NO-UNDO.

/* Establish connection to the database */
CREATE "SQL.Connect" hConn.

/* Prepare SQL statement to select customer name and total sales */
CREATE "SQL.Statement" hQuery hConn.
hQuery:SET-SQL("SELECT CUSTOMER.name, SUM(ORDER.amount) AS total_sales FROM CUSTOMER INNER JOIN ORDERS ON CUSTOMER.id = ORDER.customer_id GROUP BY CUSTOMER.name").

/* Execute the query and store results in a buffer */
hQuery:QUERY-OPEN().
hQuery:FETCH-BROWSE(TRUE).

/* Declare dynamic arrays for storing customer names and total sales */
DEFINE VARIABLE aNames AS CHARACTER NO-UNDO.
DEFINE VARIABLE aSales AS DECIMAL NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.

/* Loop through the query results and store data in the dynamic arrays */
DO WHILE hQuery:FETCH-NEXT() = TRUE:
    aNames[i] = hQuery:Get-Result("CUSTOMER.name").
    aSales[i] = hQuery:Get-Result("total_sales").
    i = i + 1.
END.

/* Loop through the arrays and print out the results */
DO i = 1 TO aNames:LENGT
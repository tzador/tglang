/*This code snippet uses a DO loop to generate a series of numbers
based on a user-provided starting value, ending value, and increment.*/
DEF VAR start_val AS INT. /*Variable to hold starting value*/
DEF VAR end_val AS INT. /*Variable to hold ending value*/
DEF VAR increment AS INT. /*Variable to hold increment value*/
DEF VAR i AS INT. /*Variable to use for loop iteration*/

/*Accept user input for starting value, ending value, and increment*/
MESSAGE "Enter starting value: ".
UPDATE start_val.
MESSAGE "Enter ending value: ".
UPDATE end_val.
MESSAGE "Enter increment: ".
UPDATE increment.

/*Ensure increment is a positive integer*/
IF increment <= 0 THEN DO:
    MESSAGE "Increment must be a positive integer. Defaulting to 1.".
    increment = 1.
END.

/*DO loop to generate and output numbers*/
DO i = start_val TO end_val BY increment:

    /*Check if current value is divisible by 2*/
    IF MOD(i,2) = 0 THEN DO:

        /*Output value and annotate as even number*/
        MESSAGE "The number is" i ". It is an even number.".

    END ELSE DO:

        /*Output value and annotate as odd number*/
        MESSAGE "The number is" i ". It is an odd number.".
    END.

    /*Check if current value is a perfect square*/
    IF ROUND(SQRT(i)) * ROUND(SQRT(i)) = i THEN DO:

        /*Annotate as a perfect square*/
        MESSAGE "This number is a perfect square.".
    END.

    /*Check if current value is a prime number*/
    IF i > 1 THEN DO:
        j = 2.
        flag = 1.
    
        WHILE (j < i) DO:

            /*If remainder is 0, number is not prime*/
            IF MOD(i,j) = 0 THEN DO:
                flag = 0.
            END.

            /*Increment j by 1*/
            j = j + 1.
        END.

        /*If flag remains 1, number is prime*/
        IF flag = 1 THEN DO:

            /*Annotate as a prime number*/
            MESSAGE "This number is a prime number.".
        END.
    END.

/*End DO loop*/
END.
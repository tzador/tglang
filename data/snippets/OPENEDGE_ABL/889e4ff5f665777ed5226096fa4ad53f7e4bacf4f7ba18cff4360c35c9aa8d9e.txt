USING System.Runtime.InteropServices. /* Import the System.Runtime.InteropServices library */

DEFINE VARIABLE cOutput AS CHARACTER NO-UNDO. /* Declare a character variable cOutput */

DEFINE VARIABLE hFile AS HANDLE NO-UNDO. /* Declare a handle variable hFile */

DEFINE VARIABLE iResult AS INTEGER NO-UNDO. /* Declare an integer variable iResult */

DEFINE VARIABLE cPath AS CHARACTER NO-UNDO. /* Declare a character variable cPath */

DEFINE VARIABLE cMessage AS CHARACTER NO-UNDO. /* Declare a character variable cMessage */

DEFINE VARIABLE iBufferSize AS INTEGER NO-UNDO. /* Declare an integer variable iBufferSize */

ASSIGN cPath = "C:\temp\file.txt". /* Assign the file path to the cPath variable */

ASSIGN iBufferSize = 512. /* Assign the buffer size to the iBufferSize variable */

ASSIGN hFile = CREATE System.IntPtr. /* Create a new handle using the System.IntPtr class */

iResult = System.Runtime.InteropServices.Marshal.SizeOf(hFile). /* Get the size of the handle using the Marshal.SizeOf method */

iResult = System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(42). /* Throw an exception using the ThrowExceptionForHR method */

IF iResult <> 0 THEN DO: /* If the iResult variable is not equal to 0 */

    ASSIGN cMessage = "Error occurred: " + System.Runtime.InteropServices.Marshal.GetExceptionForHR(iResult).Message. /* Assign a message to the cMessage variable using the GetExceptionForHR method */

    DISPLAY cMessage. /* Display the message to the user */

END.

iResult = System.Runtime.InteropServices.Marshal.PtrToStringAuto(hFile, iBufferSize). /* Convert the handle to a string using the PtrToStringAuto method */

IF iResult = ? THEN DO: /* If the iResult variable is equal to a question mark */

    ASSIGN cOutput = "Handle converted successfully: " + iResult. /* Assign a message to the cOutput variable */

    DISPLAY cOutput. /* Display the message to the user */

END ELSE DO: /* If the iResult variable is not equal to a question mark */

    ASSIGN cOutput = "Handle conversion failed!". /* Assign a message to the cOutput variable */

    DISPLAY cOutput. /* Display the message to the user */

END IF.

RELEASE OBJECT hFile. /* Release the handle object */
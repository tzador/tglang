USING System.BufferedStream.
RUN canCopy.x.
/* This code snippet creates a listener object and starts listening for incoming messages on the specified port */
DEFINE VARIABLE listener AS System.Net.Sockets.TcpListener NO-UNDO.
DEFINE VARIABLE port AS INTEGER NO-UNDO.
DEFINE VARIABLE buffer AS RAW NO-UNDO FORMAT "X(1)".
DEFINE VARIABLE stream AS STREAM NO-UNDO.
DEFINE VARIABLE reader AS System.IO.StreamReader NO-UNDO.
DEFINE VARIABLE msg AS CHARACTER NO-UNDO.

/* Set the target port for the listener */
port = 8080.
	
/* Create a new TcpListener object using the specified port */
listener = NEW System.Net.Sockets.TcpListener(port).
	
/* Start listening for incoming messages */
listener:Start().
	
/* Wait for a client to connect and establish a connection */
stream = listener:AcceptTcpClient():GetStream(). 

/* Create a StreamReader to read incoming messages */
reader = NEW System.IO.StreamReader(stream).

/* Use a loop to continuously listen for incoming messages */
DO WHILE TRUE:
    /* Read one character at a time from the incoming message */
    buffer = stream:Read(buffer, 0, 1).
	
    /* Convert the raw character data to a string */
    msg = STRING(buffer, "UTF-8").
	
    /* Process the incoming message */
    RUN canCopy.p(msg).
END.

/* Close the listener and release resources */
listener:Stop().
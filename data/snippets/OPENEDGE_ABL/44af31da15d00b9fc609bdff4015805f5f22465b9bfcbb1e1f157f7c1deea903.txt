/*=====================*
 *                      *
 *  PROGRESS ABL CODE   *
 *                      *
 *======================*/

/* This section declares and initializes variables */

DEFINE VARIABLE myNumber AS INTEGER NO-UNDO.
DEFINE VARIABLE myString AS CHARACTER NO-UNDO.
DEFINE VARIABLE myDate AS DATE NO-UNDO.
DEFINE VARIABLE myLogical AS LOGICAL NO-UNDO.

myNumber = 10.
myString = "Hello World!".
myDate = TODAY.
myLogical = TRUE.

/* This section contains a FOR loop */

DO i = 1 TO 10:
    MESSAGE "Loop iteration:" i.
END.

/* This section contains a CASE statement */

CASE myNumber:
    WHEN 1 THEN DO:
        MESSAGE "Number is equal to 1".
    END.
    WHEN 2 THEN DO:
        MESSAGE "Number is equal to 2".
    END.
    OTHERWISE DO:
        MESSAGE "Number is not 1 or 2".
    END.
END CASE.

/* This section contains a user-defined function */

FUNCTION calculateSum RETURNS INTEGER (INPUT num1 AS INTEGER, INPUT num2 AS INTEGER):

    DEFINE VARIABLE sum AS INTEGER NO-UNDO.

    sum = num1 + num2.
    RETURN sum.
    
END FUNCTION.

/* This section captures user input and handles errors */

DO ON ERROR UNDO, THROW:
    myString = INPUT VALIDATE-EXPR("Please enter a string: ", "A...Z").
    MESSAGE "You entered:" myString.
    CATCH e AS Progress.Lang.Error:
        MESSAGE "Error occurred:" e:GetMesasge(1).
END.

/* This section writes to a file */

OUTPUT TO c:\myFile.txt.
FOR EACH Customer:
    PUT Customer.Name Customer.Phone.
END.

/* This section contains a class definition */

CLASS Person:

    DEFINE PRIVATE PROPERTY Name AS CHARACTER GET NAME SET NAME.
    DEFINE PRIVATE PROPERTY Age AS INTEGER GET AGE SET AGE.

    CONSTRUCTOR PUBLIC Person (INPUT name AS CHARACTER, INPUT age AS INTEGER):
        THIS-OBJECT:Name = name.
        THIS-OBJECT:Age = age.
    END CONSTRUCTOR.

    METHOD PUBLIC CHARACTER getName ():
        RETURN THIS-OBJECT:Name.
    END METHOD.

    /* Other methods can be added here */
    
END CLASS.

/* This section creates an instance of the Person class */

DEFINE VARIABLE myPerson AS Person NO-UNDO.

myPerson = NEW Person("John Doe", 30).
MESSAGE "Person's name:" myPerson:getName().

/* This section calls an external procedure */

RUN myExternalProcedure.p(input1, input2).
/* This code snippet creates a class for managing customer data
and includes methods for adding, updating, and deleting customers */
 
/* Class declaration */
CLASS CustomerManager:
 
    /* Datamembers */
    DEFINE PRIVATE VARIABLE cCustomerTable AS CHARACTER INIT "Customer". /* variable for holding the customer table name */
    DEFINE PRIVATE VARIABLE hCustomerTable AS HANDLE. /* handle for accessing the customer table */
 
    /* Methods */
 
    /* Method for adding a new customer to the database */
    METHOD PUBLIC VOID addCustomer:
        DEFINE INPUT PARAMETER cName AS CHARACTER.
        DEFINE INPUT PARAMETER cAddress AS CHARACTER.
        DEFINE INPUT PARAMETER cPhone AS CHARACTER.
 
        /* Create a new instance of the customer table */
        CREATE "Customer" IN hCustomerTable.
 
        /* Assign values to the fields */
        hCustomerTable."CustomerName" = cName.
        hCustomerTable."CustomerAddress" = cAddress.
        hCustomerTable."CustomerPhone" = cPhone.
 
        /* Saves the new customer record */
        hCustomerTable:SAVE().
 
    END METHOD.
 
    /* Method for updating an existing customer's information */
    METHOD PUBLIC VOID updateCustomer:
        DEFINE INPUT PARAMETER cCustomerName AS CHARACTER.
        DEFINE INPUT PARAMETER cNewName AS CHARACTER.
        DEFINE INPUT PARAMETER cNewAddress AS CHARACTER.
        DEFINE INPUT PARAMETER cNewPhone AS CHARACTER.
 
        /* Find the customer in the database */
        FIND FIRST hCustomerTable WHERE "CustomerName" = cCustomerName NO-ERROR.
 
        /* If customer is found, update their information */
        IF AVAILABILITY(hCustomerTable) THEN DO:
            ASSIGN
                hCustomerTable."CustomerName" = cNewName
                hCustomerTable."CustomerAddress" = cNewAddress
                hCustomerTable."CustomerPhone" = cNewPhone.
            hCustomerTable:SAVE().
        END.
    END METHOD.
 
    /* Method for deleting a customer from the database */
    METHOD PUBLIC VOID deleteCustomer:
        DEFINE INPUT PARAMETER cCustomerId AS CHARACTER.
 
        /* Find the customer to delete */
        FIND FIRST hCustomerTable WHERE "CustomerId" = cCustomerId NO-ERROR.
 
        /* If customer is found, delete their record */
        IF AVAILABILITY(hCustomerTable) THEN DO:
            hCustomerTable:DELETE().
        END.
    END METHOD.
END CLASS.
/*This code snippet focuses on creating a stock management system in OPENEDGE_ABL*/
/*Class definition for the StockItem class*/
CLASS StockItem:

/*Private variables to store item details*/
PRIVATE:
    DEFINE VARIABLE itemCode AS CHARACTER NO-UNDO.
    DEFINE VARIABLE itemName AS CHARACTER.
    DEFINE VARIABLE supplier AS CHARACTER.
    DEFINE VARIABLE quantity AS INTEGER.
    DEFINE VARIABLE price AS DECIMAL.

/*Constructor for the StockItem class*/
CONSTRUCTOR StockItem (pcItemCode AS CHARACTER,
                      pcItemName AS CHARACTER,
                      pcSupplier AS CHARACTER,
                      piQuantity AS INTEGER,
                      pdPrice AS DECIMAL):

    /*Assign input values to private variables*/
    THIS-OBJECT:itemCode = pcItemCode.
    THIS-OBJECT:itemName = pcItemName.
    THIS-OBJECT:supplier = pcSupplier.
    THIS-OBJECT:quantity = piQuantity.
    THIS-OBJECT:price = pdPrice.
END CONSTRUCTOR.

/*Public method to update quantity of a stock item*/
METHOD PUBLIC VOID updateQuantity (piQuantity AS INTEGER):
    /*Check if input quantity is positive*/
    IF piQuantity > 0 THEN
        /*Update quantity and display success message*/
        THIS-OBJECT:quantity = piQuantity.
        MESSAGE "Quantity updated successfully." VIEW-AS ALERT-BOX INFORMATION.
    ELSE
        /*Display error message if input is negative or zero*/
        MESSAGE "Invalid quantity entered." VIEW-AS ALERT-BOX ERROR.
END METHOD.

/*Public method to calculate total price based on quantity*/
METHOD PUBLIC DECIMAL calculateTotalPrice ():
    /*Calculate total price by multiplying quantity with price*/
    RETURN (THIS-OBJECT:quantity * THIS-OBJECT:price).
END METHOD.
/* This code snippet creates a dynamic array with a nested progress procedure */

DEFINE VARIABLE hdl AS HANDLE NO-UNDO.                      /* define a handle variable */
DEFINE VARIABLE i AS INTEGER NO-UNDO.                       /* define an integer variable */
DEFINE VARIABLE arr_data AS MEMPTR NO-UNDO.                 /* define a variable for storing data in the array */
DEFINE VARIABLE int_size AS INTEGER NO-UNDO.                /* define a variable for the size of the array */
DEFINE VARIABLE c_proc_name AS CHARACTER NO-UNDO.           /* define a variable to hold the name of the nested procedure */

ASSIGN hdl = TEMP-TABLE tt_array:HANDLE.                    /* assign a handle to the temporary table tt_array */
ASSIGN arr_data = {&ARRAY_MEMPTR}.                          /* initialize the array data variable with the ARRAY_MEMPTR delimiter */
ASSIGN int_size = 10.                                       /* set the size of the array to 10 */
ASSIGN c_proc_name = "nested_progress_proc".                /* set the nested progress procedure name */

DEFINE FRAME fr ARRAY                                      /* define the frame for displaying the array data */
    WITH CAN-FREE-FIELDS CLOSABLE  
    NO-BOX  
    COLUMN-LABELS "Index" "Data" 
    AT 1 1
    ROW 5
    SIZE 60 BY 20.
    
DEFINE BUTTON btnClose LABEL "Close"                         /* define a button for closing the frame */
    WITH FRAME fr SIDE-LABELS 3.24 DOWN 1
    ROW 20.                                                 

DO ON btnClose WITH FRAME fr:
    DELETE OBJECT fr.
END.

RUN PROCEDURE nested_progress_proc.                         /* run the nested progress procedure */

PROCEDURE nested_progress_proc:
    DEFINE VARIABLE j AS INTEGER INITIAL 1 NO-UNDO.          /* define a nested variable */
    
    DO WHILE (j <= int_size):
        ASSIGN arr_data = FILL("", j).
        ASSIGN hdl[j] = REHANDLE(arr_data).                  /* reassign the handle to the array data variable */
        
        ASSIGN fr:WIDTH = INTEGER(RANDOM(20, 60)).           /* randomly set the width of the frame */ 
        ASSIGN fr:FRAME-NAME = "Frame for Array Index " + STRING(j). /* set the frame name */
        ASSIGN fr:ROW = INTEGER(RANDOM(2, 5)).               /* randomly set the row of the frame */
        ASSIGN fr:CHOICEROW = j.                            /* select the frame's choicerow according to the index */

        ASSIGN j = j + 1.
    END.
    
    BUTTON FRAME fr RETURN "".
END PROCEDURE.
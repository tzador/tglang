/* This code snippet is an example of a function that checks the validity of a credit card number */

FUNCTION isValidCreditCard RETURNS LOGICAL (
  INPUT creditCardNumber AS CHARACTER):
  
  DEFINE VARIABLE i AS INTEGER NO-UNDO.
  DEFINE VARIABLE sum AS INTEGER NO-UNDO.
  DEFINE VARIABLE digit AS INTEGER NO-UNDO.
  DEFINE VARIABLE product AS INTEGER NO-UNDO.
  DEFINE VARIABLE addend AS INTEGER NO-UNDO.
  DEFINE VARIABLE regex AS CHARACTER NO-UNDO.
  DEFINE VARIABLE regexMatch AS LOGICAL NO-UNDO.
  
  /* Check if credit card number matches the expected format */
  SET regex = '\d{13,17}'.
  regexMatch = MATCH(creditCardNumber, regex).
  IF NOT regexMatch THEN
    RETURN FALSE. /* If it doesn't match, return false */
  
  /* Loop through each digit from right to left */
  FOR i = LENGTH(creditCardNumber) DOWNTO 1:
    digit = INTEGER(SUBSTRING(creditCardNumber,i,1)).
    
    /* Check if the current digit needs to be doubled or not */
    IF MODULO(i, 2) = 1 THEN
      digit = digit * 2.
      
    /* If the doubled digit is greater than 9, subtract 9 from it */
    IF digit > 9 THEN
      digit = digit - 9.
      
    /* Add the current digit to the sum variable */
    sum = sum + digit.
  END.
  
  /* If the sum is divisible by 10, the credit card number is valid */
  IF MODULO(sum, 10) = 0 THEN
    RETURN TRUE. /* Valid credit card number */
  ELSE 
    RETURN FALSE. /* Invalid credit card number */
    
  /* Note: This function does not take into account any specific credit card company's algorithm for generating valid numbers */
END FUNCTION.
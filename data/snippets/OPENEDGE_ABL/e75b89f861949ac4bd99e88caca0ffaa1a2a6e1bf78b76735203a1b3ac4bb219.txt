DEF VAR list1 AS CHARACTER EXTENT 5.
/* This is a variable definition for a character array with a size of 5 */

DEF VAR list2 AS INTEGER EXTENT 10.
/* This is a variable definition for an integer array with a size of 10 */

DEF VAR list3 AS DECIMAL EXTENT 3.
/* This is a variable definition for a decimal array with a size of 3 */

DEF VAR record1 AS RECID EXTENT 1 NO-UNDO.
/* This is a variable definition for a single record with NO-UNDO option */

DEF VAR record2 AS RECID EXTENT 10.
/* This is a variable definition for a record array with a size of 10 */

DEF VAR temp-name AS CHARACTER FORMAT "X(10)".
/* This is a variable definition for a character variable with a specified format */

DEF VAR temp-date AS DATE FORMAT "99/99/9999".
/* This is a variable definition for a date variable with a specified format */

DEF VAR temp-num AS DECIMAL FORMAT ">>>,>>>,>>>.99".
/* This is a variable definition for a decimal variable with a specified format */

DO WHILE list1[1] < 10:
    /* This is a do while loop that checks if the first element in list1 is less than 10 */
    list1[1] = list1[1] + 1.
    /* This adds 1 to the first element in list1 */
    list2[5] = list2[5] + 10.
    /* This adds 10 to the fifth element in list2 */
    list3[3] = list3[3] + 5.5.
    /* This adds 5.5 to the third element in list3 */
END.

REPEAT i = 1 TO 10:
    /* This is a repeat loop that runs 10 times */
    record2[i]:NAME = "John".
    /* This assigns the value "John" to the NAME attribute of the ith record in record2 */
    record2[i]:AGE = i * 5.
    /* This assigns the value of i*5 to the AGE attribute of the ith record in record2 */
END.

DEFINE VARIABLE num-one AS DECIMAL NO-UNDO INITIAL 20.
DEFINE VARIABLE num-two AS DECIMAL NO-UNDO INITIAL 30.
DEFINE VARIABLE result AS DECIMAL NO-UNDO.
/* These are variable definitions for decimal variables with initial values */

ASSIGN result = num-one + num-two.
/* This assigns the sum of num-one and num-two to the result variable */

IF result > 50 THEN DO:
    /* This is an if statement that checks if result is greater than 50 */
    DISPLAY "Result is greater than 50".
    /* This displays a message if the condition is true */
END ELSE IF result < 50 THEN DO:
    /* This is an else if statement that checks if result is less than 50 */
    DISPLAY "Result is less than 50".
    /* This displays a message if the condition is true */
END ELSE DO:
    /* This is an else statement that runs if neither of the above conditions are true */
    DISPLAY "Result is equal to 50".
    /* This displays a message if the condition is true */
END.
DEFINE VARIABLE numDay AS INTEGER NO-UNDO INIT TODAY:DAY. /*Declares a variable 'numDay' of type integer and assigns the value of the current day*/

/*Checks if the day is a weekday or weekend*/
IF numDay >= 2 AND numDay <= 6 THEN 
    MESSAGE "It's a weekday!".
ELSE IF numDay = 1 OR numDay = 7 THEN
    MESSAGE "It's a weekend!".
ELSE 
    MESSAGE "Invalid day! Please enter a valid day number.".
    
/*Declares a temp-table to store employee data*/
DEFINE TEMP-TABLE ttEmployee
    FIELD empID AS INTEGER
    FIELD empName AS CHAR
    FIELD empSalary AS DECIMAL
    INDEX empID PRIMARY empID.

/*Defines a procedure to calculate and return the total monthly salary of employees*/
PROCEDURE calculateMonthlySalary:
    DEFINE INPUT PARAMETER employeeID AS INTEGER.
    DEFINE OUTPUT PARAMETER monthlySalary AS DECIMAL.

    FIND ttEmployee WHERE ttEmployee.empID = employeeID EXCLUSIVE-LOCK NO-ERROR.
    /*Checks if employee exists in the temp-table*/
    IF AVAILABLE(ttEmployee) THEN 
        DO:
            /*Calculates the monthly salary by multiplying the daily salary with number of working days*/
            monthlySalary = ttEmployee.empSalary * 22.
            RETURN monthlySalary.
        END.
    /*If employee is not found, returns a default salary value*/
    ELSE 
        RETURN 5000.
        
END PROCEDURE.

/*Declares an array of employee IDs*/
DEFINE VARIABLE empIds AS INTEGER ARRAY.
empIds[1] = 1234.
empIds[2] = 5678.
empIds[3] = 9101.

/*Iterates through the array and calls the calculateMonthlySalary procedure for each employee*/
DO i = 1 TO LENGTH(empIds):

    /*Declares a variable to store the calculated monthly salary*/
    DEFINE VARIABLE empMonthlySalary AS DECIMAL NO-UNDO.
    /*Calls the procedure by passing the current employee ID*/
    RUN calculateMonthlySalary(INPUT empIds[i], OUTPUT empMonthlySalary).
    
    /*Displays the employee ID and calculated monthly salary*/
    DISPLAY empIds[i] "has a monthly salary of" empMonthlySalary.
    
END.
/* This is a complex code snippet in OPENEDGE_ABL */

/* Define a class named Employee */
CLASS Employee:

    /* Private variables for the Employee class */
    DEFINE PRIVATE VARIABLE employeeID AS INTEGER NO-UNDO.
    DEFINE PRIVATE VARIABLE firstName AS CHARACTER NO-UNDO.
    DEFINE PRIVATE VARIABLE lastName AS CHARACTER NO-UNDO.
    DEFINE PRIVATE VARIABLE age AS INTEGER NO-UNDO.
    DEFINE PRIVATE VARIABLE department AS CHARACTER NO-UNDO.

    /* Constructor method for the Employee class */
    CONSTRUCTOR PUBLIC Employee(inputID AS INTEGER,
        inputFirstName AS CHARACTER,
        inputLastName AS CHARACTER,
        inputAge AS INTEGER,
        inputDepartment AS CHARACTER):
        
        /* Set the values for the employee's properties */
        employeeID = inputID.
        firstName = inputFirstName.
        lastName = inputLastName.
        age = inputAge.
        department = inputDepartment.
    END CONSTRUCTOR.

    /* Method to return the employee's full name */
    METHOD PUBLIC CHARACTER getFullName():
        RETURN firstName + " " + lastName.
    END METHOD.

    /* Method to check if employee is eligible for retirement */
    METHOD PUBLIC CHARACTER checkRetirement():
        /* Check if employee is over 65 years old */
        IF age > 65 THEN DO:
            /* If true, return a message stating eligibility for retirement */
            RETURN "Employee " + getFullName() + " is eligible for retirement.".
        END.
        ELSE DO:
            /* If false, return a message stating not eligible for retirement */
            RETURN "Employee " + getFullName() + " is not eligible for retirement.".
        END.
    END METHOD.

    /* Method to update employee's department */
    METHOD PUBLIC CHARACTER updateDepartment(newDept AS CHARACTER):
        /* Set the new department for the employee */
        department = newDept.
        /* Return a message confirming the update */
        RETURN "Employee " + getFullName() + "'s department has been updated to " + newDept + "."
    END METHOD.
    
    /* Method to delete an employee */
    METHOD PUBLIC DELETE():
        /* Delete the employee object */
        DELETE OBJECT THIS.
    END METHOD.

END CLASS.

/* Create 3 instances of the Employee class */
DEFINE VARIABLE employee1 AS CLASS Employee NO-UNDO.
DEFINE VARIABLE employee2 AS CLASS Employee NO-UNDO.
DEFINE VARIABLE employee3 AS CLASS Employee NO-UNDO.

/* Instantiate the first employee with input values */
employee1 = NEW Employee(12345, "John", "Smith", 45, "Finance").

/* Instantiate the second employee with input values */
employee2 = NEW Employee(23456, "Jane", "Doe", 55, "Human Resources").

/* Instantiate the third employee with input values */
employee3 = NEW Employee(34567, "Bob", "Johnson", 70, "IT").

/* Print each employee's full name and eligibility for retirement */
MESSAGE "Employee 1: " + employee1.getFullName() + ", " + employee1.checkRetirement().
MESSAGE "Employee 2: " + employee2.getFullName() + ", " + employee2.checkRetirement().
MESSAGE "Employee 3: " + employee3.getFullName() + ", " + employee3.checkRetirement().

/* Update employee 3's department and print the confirmation message */
MESSAGE employee3.updateDepartment("Marketing").
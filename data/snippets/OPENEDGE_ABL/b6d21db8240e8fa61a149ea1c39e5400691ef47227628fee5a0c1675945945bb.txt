/* This code snippet demonstrates the use of nested FOR loops to create a matrix and perform calculations on its elements */
DEFINE VARIABLE numRows AS INTEGER NO-UNDO. /* define variable to hold the number of rows in the matrix */
DEFINE VARIABLE numColumns AS INTEGER NO-UNDO. /* define variable to hold the number of columns in the matrix */

/* get user input for the number of rows and columns */
PROMPT-FOR numRows LABEL "Enter the number of rows in the matrix: ".
PROMPT-FOR numColumns LABEL "Enter the number of columns in the matrix: ".

DEFINE VARIABLE matrix AS CHARACTER NO-UNDO. /* define variable to hold the matrix */
DEFINE VARIABLE i AS INTEGER NO-UNDO. /* define variable for outer loop index */
DEFINE VARIABLE j AS INTEGER NO-UNDO. /* define variable for inner loop index */

/* initialize matrix with empty values */
DO i = 1 TO numRows:
  DO j = 1 TO numColumns:
    ASSIGN matrix[i,j] = "".
  END.
END.

/* populate matrix with randomly generated numbers between 1 and 10 */
DO i = 1 TO numRows:
  DO j = 1 TO numColumns:
    ASSIGN matrix[i,j] = STRING(RANDOM(10) + 1). /* RANDOM function generates a random integer between 1 and 10, STRING function converts it to string type */
  END.
END.

/* print out the matrix */
DO i = 1 TO numRows:
  DO j = 1 TO numColumns:
    DISPLAY matrix[i,j].
  END.
  DISPLAY ?.
END.

/* calculate the sum of each row and column in the matrix */
/* first calculate the sum of each row and store it in an array */
DEFINE VARIABLE rowSums AS INTEGER ARRAY NO-UNDO.
DO i = 1 TO numRows:
  DEFINE VARIABLE sum AS INTEGER NO-UNDO INITIAL 0.
  DO j = 1 TO numColumns:
    ASSIGN sum = sum + INTEGER(matrix[i,j]). /* convert string value to integer using INTEGER function before adding to sum */
  END.
  ASSIGN rowSums[i] = sum.
END.

/* now calculate the sum of each column and store it in an array */
DEFINE VARIABLE columnSums AS INTEGER ARRAY NO-UNDO.
DO j = 1 TO numColumns:
  DEFINE VARIABLE sum AS INTEGER NO-UNDO INITIAL 0.
  DO i = 1 TO numRows:
    ASSIGN sum = sum + INTEGER(matrix[i,j]).
  END.
  ASSIGN columnSums[j] = sum.
END.

/* print out the row and column sums */
DO i = 1 TO numRows:
  DISPLAY "Sum of row " i " is: " rowSums[i].
END.

DO j = 1 TO numColumns:
  DISPLAY "Sum of column " j " is: " columnSums[j].
END.
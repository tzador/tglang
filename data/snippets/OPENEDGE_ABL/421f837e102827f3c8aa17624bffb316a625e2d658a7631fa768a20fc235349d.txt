/* Declare class variable to hold list of customers */
DEFINE VARIABLE customerList AS CLASS List NO-UNDO.

/* Create new instance of class List and assign to variable */
CREATE customerList.

/* Add new customer records to list */
customerList:ADD-FIRST(new Customer("John Doe", "123 Main St.", "555-1234")).
customerList:ADD-LAST(new Customer("Jane Smith", "456 Oak Ave.", "555-5678")).
customerList:ADD-LAST(new Customer("Bob Johnson", "789 Maple St.", "555-9012")).

/* Loop through list and display customer name and address */
FOR EACH customer IN customerList:
    /* Print customer name */
    MESSAGE "Customer: " + customer:NAME VIEW-AS ALERT-BOX.

    /* Print customer address */
    MESSAGE "Address: " + customer:ADDRESS VIEW-AS ALERT-BOX.
END.

/* Define class to hold customer information */
CLASS Customer:

    /* Define private variables */
    DEFINE PRIVATE VARIABLE name AS CHARACTER NO-UNDO.
    DEFINE PRIVATE VARIABLE address AS CHARACTER NO-UNDO.
    DEFINE PRIVATE VARIABLE phone AS CHARACTER NO-UNDO.

    /* Create constructor to initialize variables */
    CONSTRUCTOR PUBLIC Customer(INPUT name AS CHARACTER, INPUT address AS CHARACTER, INPUT phone AS CHARACTER):
        SELF.name    = name.
        SELF.address = address.
        SELF.phone   = phone.
    END CONSTRUCTOR.

    /* Define methods to get and set variables */
    METHOD PUBLIC CHARACTER GET-NAME():
        RETURN SELF.name.
    END METHOD.

    METHOD PUBLIC CHARACTER GET-ADDRESS():
        RETURN SELF.address.
    END METHOD.

    METHOD PUBLIC CHARACTER GET-PHONE():
        RETURN SELF.phone.
    END METHOD.

    METHOD PUBLIC VOID SET-NAME(INPUT name AS CHARACTER):
        SELF.name = name.
    END METHOD.

    METHOD PUBLIC VOID SET-ADDRESS(INPUT address AS CHARACTER):
        SELF.address = address.
    END METHOD.

    METHOD PUBLIC VOID SET-PHONE(INPUT phone AS CHARACTER):
        SELF.phone = phone.
    END METHOD.

END CLASS.
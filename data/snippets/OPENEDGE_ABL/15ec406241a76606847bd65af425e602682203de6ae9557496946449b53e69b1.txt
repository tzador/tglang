/* This code snippet is an example of a recursive function in OpenEdge ABL */

FUNCTION fibonacci:
    DEFINE INPUT PARAMETER p_num AS INTEGER NO-UNDO.
    DEFINE RETURN PARAMETER r_result AS INTEGER NO-UNDO.
    
    IF p_num < 2 THEN DO:
        /* base case */
        r_result = p_num.
    END.
    ELSE DO:
        /* recursive case */
        r_result = fibonacci(p_num - 1) + fibonacci(p_num - 2).
    END.
    
    RETURN r_result.
    
END FUNCTION.

/* This block of code calls the fibonacci function and prints the first 10 numbers in the sequence */

DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE result AS INTEGER NO-UNDO.

DO i = 1 to 10:
    result = fibonacci(i).
    MESSAGE "Number " i "in the Fibonacci sequence is:" result.
END.

/* Output:
Number 1 in the Fibonacci sequence is: 1
Number 2 in the Fibonacci sequence is: 1
Number 3 in the Fibonacci sequence is: 2
Number 4 in the Fibonacci sequence is: 3
Number 5 in the Fibonacci sequence is: 5
Number 6 in the Fibonacci sequence is: 8
Number 7 in the Fibonacci sequence is: 13
Number 8 in the Fibonacci sequence is: 21
Number 9 in the Fibonacci sequence is: 34
Number 10 in the Fibonacci sequence is: 55
*/
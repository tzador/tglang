/* This code snippet demonstrates a complex algorithm for finding prime numbers */
/* Declare input and output variables */
DEFINE VARIABLE num AS INTEGER NO-UNDO.
DEFINE VARIABLE primeFound AS LOGICAL NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE j AS INTEGER NO-UNDO.
DEFINE VARIABLE remainder AS INTEGER NO-UNDO.
DEFINE VARIABLE primeNums AS CHARACTER NO-UNDO.
/* Initialize prime numbers array */
primeNums = "".
/* Ask user for input */
INPUT FROM CONSOLE num.
/* Loop through all numbers between 2 and input number */
DO i = 2 TO num:
    /* Reset primeFound flag */
    primeFound = FALSE.
    /* Check if current number is prime */
    DO j = 2 TO i - 1:
        /* Find remainder of division */
        remainder = i MOD j.
        /* If remainder is 0, then number is not prime */
        IF remainder = 0 THEN DO:
            /* Set primeFound flag to true */
            primeFound = TRUE.
            /* Exit inner loop */
            LEAVE.
        END.
    END.
    /* If primeFound flag is still false, then number is prime */
    IF NOT primeFound THEN DO:
        /* Add prime number to string for output */
        primeNums = primeNums + STRING(i) + ",".
    END.
END.
/* Output list of prime numbers */
DISPLAY "Prime numbers between 2 and " num "are:" SKIP primeNums.
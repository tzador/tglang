/* This code snippet is written in OPENEDGE_ABL, a high-level programming language used in business applications. It generates a random password using a combination of uppercase and lowercase letters, numbers, and special characters. */

/* Define a character array to store the characters for the password */
DEFINE VARIABLE char_array AS CHARACTER NO-UNDO.

/* Generate random numbers for each type of character and convert them to their ASCII values */
DEFINE VARIABLE rand_num_upper AS INTEGER NO-UNDO.
DEFINE VARIABLE rand_num_lower AS INTEGER NO-UNDO.
DEFINE VARIABLE rand_num_num AS INTEGER NO-UNDO.
DEFINE VARIABLE rand_num_spec AS INTEGER NO-UNDO.

rand_num_upper = RANDOM(-1, 26) + 65. /* ASCII value for uppercase letters is from 65-90 */
rand_num_lower = RANDOM(-1, 26) + 97. /* ASCII value for lowercase letters is from 97-122 */
rand_num_num = RANDOM(-1, 10) + 48. /* ASCII value for numbers is from 48-57 */
rand_num_spec = RANDOM(-1, 15) + 33. /* ASCII value for special characters is from 33-47 and 58-64 */

/* Add the characters to the character array */
char_array[1] = CHR(rand_num_upper).
char_array[2] = CHR(rand_num_lower).
char_array[3] = CHR(rand_num_num).
char_array[4] = CHR(rand_num_spec).

/* Use a loop to generate the remaining characters for the password */
/* Loop will run 8 times to generate a password with a total of 12 characters */
DO i = 1 TO 8:
    /* Generate a random number between 1 and 4 to determine which type of character to add next */
    DEFINE VARIABLE rand_index AS INTEGER NO-UNDO.
    rand_index = TRUNCATE(RANDOM(1, 4), 0).

    /* Use a CASE statement to determine which type of character to add based on the random number */
    CASE rand_index:
        WHEN 1 THEN /* Add an uppercase letter */
            char_array[i+4] = CHR(RANDOM(-1, 26) + 65).

        WHEN 2 THEN /* Add a lowercase letter */
            char_array[i+4] = CHR(RANDOM(-1, 26) + 97).

        WHEN 3 THEN /* Add a number */
            char_array[i+4] = CHR(RANDOM(-1, 10) + 48).

        WHEN 4 THEN /* Add a special character */
            char_array[i+4] = CHR(RANDOM(-1, 15) + 33).

        OTHERWISE /* In case none of the above conditions are met, add a random character */
            char_array[i+4] = CHR(RANDOM(-1, 94) + 33). /* Total number of characters between 33 and 126 is 94 */

    END CASE.
END.

/* Convert the character array to a string and display the generated password */
DEFINE VARIABLE password AS CHARACTER NO-UNDO.
password = STRING(char_array).
MESSAGE "Generated Password: " password VIEW-AS ALERT-BOX.
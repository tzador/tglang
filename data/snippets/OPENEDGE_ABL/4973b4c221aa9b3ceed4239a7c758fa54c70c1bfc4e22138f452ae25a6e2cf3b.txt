/* 
* This is a complex code snippet in OPENEDGE_ABL that generates a random string of characters 
* and checks if it is a palindrome.
*/

DEFINE VARIABLE str AS CHARACTER NO-UNDO.
DEFINE VARIABLE reversedStr AS CHARACTER NO-UNDO.
DEFINE VARIABLE randomStr AS CHARACTER NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE j AS INTEGER NO-UNDO.
DEFINE VARIABLE isPalindrome AS LOGICAL NO-UNDO.

/* Function to generate a random string of characters */

FUNCTION generateRandomString RETURNS CHARACTER (INPUT numChars AS INTEGER):
    DEFINE VARIABLE chars AS CHARACTER FORMAT "x(10)" NO-UNDO.
    DEFINE VARIABLE random AS INTEGER NO-UNDO.
    DEFINE VARIABLE k AS INTEGER NO-UNDO.
    DO k = 1 TO numChars:
        /* Generating a random integer between 97 and 122 to represent lowercase letters */
        random = RANDOM(26) + 97.
        /* Converting the random integer to equivalent ASCII character */
        ASSIGN chars = SUBSTRING(CHR(random), 1, 1).
        /* Concatenating the new character to the random string */
        ASSIGN randomStr = randomStr + chars.
    END.

    RETURN randomStr.
END FUNCTION.

/* Function to check if a string is a palindrome */

FUNCTION isStringPalindrome RETURNS LOGICAL (INPUT str AS CHARACTER):
    DEFINE VARIABLE strLength AS INTEGER NO-UNDO.
    DEFINE VARIABLE midIndex AS INTEGER NO-UNDO.
    
    /* Finding the length of the string */
    ASSIGN strLength = LENGTH(str).
    
    /* Finding the middle index of the string */
    ASSIGN midIndex = CEILING(strLength / 2).
    
    /* Reversing the first half of the string and storing it in a new variable */
    ASSIGN reversedStr = REVERSE(SUBSTRING(str, 1, midIndex)).
    
    /* Checking if the string is odd or even length */
    IF MOD(strLength, 2) = 0 THEN DO:
        /* If even length, checking if the first and second half of the string are equal */
        IF SUBSTRING(str, midIndex + 1, midIndex) = reversedStr THEN
            ASSIGN isPalindrome = TRUE.
    END.
    ELSE DO:
        /* If odd length, checking if the first and second half of the string (excluding middle character) are equal */
        IF SUBSTRING(str, midIndex + 2, midIndex - 1) = reversedStr THEN
            ASSIGN isPalindrome = TRUE.
    END.
    
    RETURN isPalindrome.
END FUNCTION.

/* Generating a random string of 15 characters */
ASSIGN str = generateRandomString(15).

/* Checking if the string is a palindrome */
ASSIGN isPalindrome = isStringPalindrome(str).

/* Outputting the random string and whether it is a palindrome or not */
DISPLAY "Random string: " str SKIP(1).
DISPLAY "Is palindrome? " isPalindrome.
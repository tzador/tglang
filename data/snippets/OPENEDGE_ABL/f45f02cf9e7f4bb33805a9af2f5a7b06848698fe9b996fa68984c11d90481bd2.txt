DEFINE TEMP-TABLE tt_customers
FIELD customer_id AS INTEGER
FIELD first_name AS CHARACTER
FIELD last_name AS CHARACTER
FIELD phone_number AS CHARACTER
FIELD email AS CHARACTER
INDEX pk_customer_id IS PRIMARY customer_id.

DEFINE VARIABLE cCustomerID AS CHARACTER NO-UNDO.
DEFINE VARIABLE cEmail AS CHARACTER NO-UNDO.
DEFINE VARIABLE cNewCustomerID AS CHARACTER NO-UNDO.
DEFINE VARIABLE cNewEmail AS CHARACTER NO-UNDO.

/* This code snippet defines a temporary table to store customer information, including their ID, first name, last name, phone number, and email.
It also defines four variables to hold customer ID and email information for use in the program. */

FOR EACH customer NO-LOCK:
    /* This loop retrieves all records from the customer table without locking them. */
    cCustomerID = customer.customer_id.
    cEmail = customer.email.
    /* This code snippet assigns the customer ID and email values to the corresponding variables. */

    IF cCustomerID <> "" THEN DO:
        /* This IF statement checks if the customer ID is not empty. */

        /* This code snippet generates a new customer ID using the function GEN-UUID and assigns it to the variable cNewCustomerID. */
        cNewCustomerID = GEN-UUID.

        /* This code snippet validates the email address using the function VALIDATE-EMAIL and assigns the result to the variable cNewEmail. */
        cNewEmail = VALIDATE-EMAIL(cEmail).

        /* This code snippet updates the customer table with the new customer ID and email address. */
        UPDATE customer
        SET customer_id = cNewCustomerID, email = cNewEmail
        WHERE customer_id = cCustomerID.

        /* This code snippet displays a message indicating that the customer ID and email have been updated for the current record. */
        MESSAGE "Customer ID and email have been updated for record with ID" cCustomerID
            VIEW-AS ALERT-BOX.
    END.
END.

/* This code snippet closes the database connection. */
DATABASE CLOSE.
{&Scoped-DEFINE someVar AS CHARACTER NO-UNDO} /* Defines a scoped variable as a character type with no undo capabilities */

OUTPUT TO "output.txt". /* Specifies the output file name for the current session */

FOR EACH customer NO-LOCK:
    IF customer.status = "Active" THEN DO:
        ASSIGN someVar = customer.name + " is an active customer". /* Assigns a value to the scoped variable using string concatenation */
        MESSAGE someVar VIEW-AS ALERT-BOX INFO.
    END.
END. /* Loops through all active customers and displays a message with their name and status */

{&Scoped-DEFINE anotherVar AS LOGICAL NO-UNDO} /* Defines a second scoped variable as a logical type with no undo capabilities */

DO I = 1 TO 10:
    FOR EACH employee WHERE employee.salary > 50000 NO-LOCK:
        IF employee.team = "Sales" THEN DO:
            ASSIGN anotherVar = TRUE.
            EXIT. /* Ends the innermost loop when a sales employee with a salary greater than 50000 is found */
        END.
    END.
    IF anotherVar = TRUE THEN DO:
        MESSAGE "There is at least one sales employee with a salary greater than $50,000".
    END ELSE DO:
        MESSAGE "No sales employees with a salary greater than $50,000 were found".
    END.
END. /* Loops through 10 iterations, checking if there is at least one sales employee with a high salary and displaying a message accordingly */

{&Scoped-DEFINE thirdVar AS INTEGER NO-UNDO} /* Defines a third scoped variable as an integer type with no undo capabilities */

DEFINE VARIABLE result AS INTEGER NO-UNDO. /* Defines a global variable to store the result of a calculation */

DO c = 1 TO 5:
    FOR EACH order NO-LOCK:
        thirdVar = (order.quantity * 0.1) + (order.price * 0.05).
        result = result + thirdVar.
    END.
END. /* Loops through all orders and calculates a value based on quantity and price, then adds it to the global variable 'result' */

RELEASE result. /* Releases the global variable 'result' from memory to avoid potential memory leaks */
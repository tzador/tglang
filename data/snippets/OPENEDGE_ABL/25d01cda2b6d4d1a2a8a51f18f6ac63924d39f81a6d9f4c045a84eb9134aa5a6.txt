/* This program will reverse a given string and check if it is a palindrome */

/* Define variables */
DEFINE VARIABLE originalString AS CHARACTER NO-UNDO.
DEFINE VARIABLE reversedString AS CHARACTER NO-UNDO.
DEFINE VARIABLE length AS INTEGER NO-UNDO.
DEFINE VARIABLE start AS INTEGER NO-UNDO.
DEFINE VARIABLE end AS INTEGER NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE palindrome AS LOGICAL NO-UNDO.

/* Prompt user for input */
PROMPT-FOR originalString LABEL "Enter a string to reverse: " WITH FRAME {&FRAME-NAME}.

/* Calculate string length */
length = LENGTH(originalString).

/* Set starting and ending points for loop */
start = 1.
end = length.

/* Loop through string */
DO i = 1 TO (length / 2):

    /* Swap characters at start and end positions */
    reversedString[start] = originalString[end].
    reversedString[end] = originalString[start].

    /* Increment start position and decrement end position */
    start = start + 1.
    end = end - 1.

    /* Check for even number of characters */
    IF (length MOD 2 = 0) THEN
        /* Exit loop if start and end positions meet */
        IF (start = (length / 2)) THEN LEAVE.
    /* Check for odd number of characters */
    ELSE IF (length MOD 2 = 1) THEN
        /* Exit loop if start and end positions cross over */
        IF (start = (length - 1) / 2) THEN LEAVE.

END.

/* Display reversed string */
MESSAGE "Reversed string:" SKIP reversedString.

/* Check if reversed string is a palindrome */
IF (originalString = reversedString) THEN
    palindrome = TRUE.
ELSE
    palindrome = FALSE.

/* Display result */
IF (palindrome = TRUE) THEN
    MESSAGE "The original string is a palindrome.".
ELSE
    MESSAGE "The original string is not a palindrome.".
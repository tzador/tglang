/* This code snippet creates a class for handling bank accounts in the OPENEDGE_ABL programming language */

USING Progress.Lang.*.

/* Define the class */
CLASS BankAccount:

  /* Define private variables */
  PRIVATE BANK-NAME AS CHARACTER INITIAL "ABC Bank".
  PRIVATE ACCOUNT-NUMBER AS CHARACTER INITIAL "123456789".
  PRIVATE BALANCE AS DECIMAL INITIAL 0.
  PRIVATE TRANSACTIONS AS TABLE LIKE TransactionTable.

  /* Define methods */
  METHOD PUBLIC VOID deposit(inp_amt AS DECIMAL):
    /* Updates the balance by adding the input amount to it */
    BALANCE = BALANCE + inp_amt.

    /* Creates a new transaction and adds it to the table for tracking */
    TRANSACTION = NEW Transaction(INP_AMT, "Deposit").
    TRANSACTIONS:ADD-LAST(TRANSACTION).

    /* Displays a success message */
    MESSAGE "Deposit successful!" VIEW-AS ALERT-BOX INFO BUTTONS OK.

  METHOD PUBLIC VOID withdraw(inp_amt AS DECIMAL):
    /* Checks if the input amount is greater than or equal to the balance */
    IF inp_amt >= BALANCE THEN DO:

      /* Updates the balance by subtracting the input amount from it */
      BALANCE = BALANCE - inp_amt.

      /* Creates a new transaction and adds it to the table for tracking */
      TRANSACTION = NEW Transaction(INP_AMT, "Withdrawal").
      TRANSACTIONS:ADD-LAST(TRANSACTION).

      /* Displays a success message */
      MESSAGE "Withdrawal successful!" VIEW-AS ALERT-BOX INFO BUTTONS OK.

    END.
    ELSE DO:

      /* Displays an error message if the input amount is greater than the balance */
      MESSAGE "Insufficient funds!" VIEW-AS ALERT-BOX ERROR BUTTONS OK.

    END.

  METHOD PUBLIC VOID displayTransactions():
    /* Prints out all the transactions in the table */
    DO TRANSACTION-INDEX = 1 TO TRANSACTIONS:NUM-ENTRIES:

      /* Gets the current transaction */
      TRANSACTION = TRANSACTIONS:GET-ENTRY(TRANSACTION-INDEX).

      /* Prints out the details of the transaction */
      DISPLAY TRANSACTION:PRINT-DETAILS().
      
    END.

  /* Define nested class for Transaction */
  CLASS Transaction:
    PRIVATE AMOUNT AS DECIMAL.
    PRIVATE TYPE AS CHARACTER.
    PRIVATE DATE AS CHARACTER INITIAL NOW.

    /* Define constructor method */
    CONSTRUCTOR PUBLIC Transaction(inp_amt AS DECIMAL, inp_type AS CHARACTER):
      AMOUNT = inp_amt.
      TYPE = inp_type.

    /* Define method to print transaction details */
    METHOD PUBLIC CHARACTER PRINT-DETAILS():
      RETURN ENTRY(1) + ": " + ENTRY(2) + " amount " + STRING(AMOUNT) + " on " + DATE.
  END CLASS.
END CLASS.

/* Create an instance of the BankAccount class */
DEFINE VARIABLE MY-BANK-ACCOUNT AS BankAccount NO-UNDO.

/* Deposit $100 to the bank account */
MY-BANK-ACCOUNT:DEPOSIT(100).

/* Withdraw $50 from the bank account */
MY-BANK-ACCOUNT:WITHDRAW(50).

/* Display all transactions */
MY-BANK-ACCOUNT:DISPLAYTRANSACTIONS().
/*
    Program Name: ExampleProgram.p
    Description: This program demonstrates the use of various control structures in OPENEDGE ABL
    Author: John Doe
    Date: 08/18/2021
*/

DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE j AS INTEGER NO-UNDO.

/* Loop using FOR statement */
FOR i = 1 TO 5:
    MESSAGE "The value of i is " i.
END.

/* Loop using REPEAT statement */
REPEAT i = 1 TO 5:
    MESSAGE "The value of i is " i.
END.

/* Loop using DO statement */
DO i = 1 TO 5:
    MESSAGE "The value of i is " i.
END. 

/* Loop using WHILE statement */
WHILE i < 5 DO:
    MESSAGE "The value of i is " i.
    i = i + 1.
END.

/* Switch statement */
DO j = 1 TO 5:
    CASE j:
        WHEN 1 THEN
            MESSAGE "The value of j is 1".
        WHEN 2 THEN
            MESSAGE "The value of j is 2".
        WHEN 3 THEN
            MESSAGE "The value of j is 3".
        OTHERWISE
            MESSAGE "The value of j is greater than 3".
    END CASE.
END.

/* IF statement */
IF i = 5 THEN DO:
    MESSAGE "The value of i is 5".
END.
ELSE IF i > 5 THEN DO:
    MESSAGE "The value of i is greater than 5".
END.
ELSE DO:
    MESSAGE "The value of i is less than 5".
END.

/* TRY...CATCH statement */
TRY:
    IF i = 5 THEN DO:
        MESSAGE "The value of i is 5".
    END.
    ELSE DO:
        MESSAGE "The value of i is not 5".
    END.
    
    /* Force an error to be thrown */
    DO j = 1 TO 5:
        IF j = 5 THEN DO:
            UNDEFINE myVariable. /* myVariable is undefined, causing an error */
        END.
    END.
    
CATCH e AS Progress.Lang.Error:
    MESSAGE "An error has occurred: " e:GetMessage(1).
END CATCH.

/* DECLARE statement with variables */
DEFINE VARIABLE custNum AS INTEGER NO-UNDO VIEW-AS "Customer Number".
DEFINE VARIABLE custName AS CHARACTER NO-UNDO VIEW-AS "Customer Name".
DEFINE VARIABLE custCity AS CHARACTER NO-UNDO VIEW-AS "Customer City".

/* Input statement */
INPUT FROM VALUE("CustRecord.txt").
REPEAT:
    CREATE Customer.
    IMPORT custNum, custName, custCity.
    FIND FIRST Customer WHERE Customer.custNum = custNum NO-LOCK NO-ERROR.

    IF NOT AVAILABLE Customer THEN DO:
        CREATE Customer.
        ASSIGN
            Customer.custNum = custNum
            Customer.custName = custName
            Customer.custCity = custCity.
    END.
END.
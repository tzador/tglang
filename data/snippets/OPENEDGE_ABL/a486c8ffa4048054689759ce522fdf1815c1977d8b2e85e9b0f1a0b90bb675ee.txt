/* This code snippet shows how to create a class with properties, methods, and a constructor */
 
/* Define the class with a name and any inheritance */
CLASS Employee INHERITS Person:
 
/* Define properties with their data types */
DEFINE PUBLIC PROPERTY empID AS INTEGER NO-UNDO GET PRIVATE SET PRIVATE.
DEFINE PUBLIC PROPERTY first_name AS CHARACTER NO-UNDO GET PRIVATE SET PRIVATE.
DEFINE PUBLIC PROPERTY last_name AS CHARACTER NO-UNDO GET PRIVATE SET PRIVATE.
DEFINE PUBLIC PROPERTY hire_date AS DATE NO-UNDO GET PRIVATE SET PRIVATE.
DEFINE PUBLIC PROPERTY salary AS DECIMAL NO-UNDO GET PUBLIC SET PROTECTED.
 
/* Define methods with their return types and parameters */
METHOD PUBLIC CHARACTER displayInfo(INPUT p_message AS CHARACTER):
 
   /* Define local variables */
   DEFINE VARIABLE outputMessage AS CHARACTER NO-UNDO.
   DEFINE VARIABLE fullName AS CHARACTER NO-UNDO.
 
   /* Construct the full name from the first and last name properties */
   fullName = first_name + " " + last_name.
 
   /* Construct the output message with the given parameter and the full name */
   outputMessage = p_message + " " + fullName.
 
   /* Return the output message */
   RETURN outputMessage.
 
END METHOD.
 
/* Define the constructor to initialize the properties */
CONSTRUCTOR PUBLIC Employee(
   INPUT p_empID AS INTEGER,
   INPUT p_firstName AS CHARACTER,
   INPUT p_lastName AS CHARACTER,
   INPUT p_hireDate AS DATE,
   INPUT p_salary AS DECIMAL):
 
   SUPER:
   SET empID = p_empID.
   SET first_name = p_firstName.
   SET last_name = p_lastName.
   SET hire_date = p_hireDate.
   SET salary = p_salary.
 
END CONSTRUCTOR.
 
/* Create an object and call the displayInfo method with a given message */
DEFINE VARIABLE newEmployee AS Employee NO-UNDO.
newEmployee = NEW Employee(1234, "John", "Smith", TODAY, 5000.00).
MESSAGE newEmployee:displayInfo("Hello") VIEW-AS ALERT-BOX.
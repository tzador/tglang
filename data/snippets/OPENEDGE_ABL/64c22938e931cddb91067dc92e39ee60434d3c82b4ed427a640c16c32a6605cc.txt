DEFINE VARIABLE i AS INTEGER EXTENT 10 INITIAL ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]. //defines an integer variable 'i' with an initial value array of 10 elements
DEFINE VARIABLE j AS INTEGER NO-UNDO. //defines an integer variable 'j' without undo capability
DEFINE VARIABLE k AS INTEGER NO-UNDO INITIAL 20. //defines an integer variable 'k' without undo capability and with an initial value of 20
DEFINE VARIABLE l AS CHARACTER EXTENT 5 INITIAL ["A", "B", "C", "D", "E"]. //defines a character variable 'l' with an initial value array of 5 elements
DEFINE VARIABLE m AS DECIMAL EXTENT 3 BY 2 INITIAL ["1.1111", "2.2222", "3.3333"]. //defines a decimal variable 'm' with an initial value array of 3 elements by 2 decimals
DEFINE VARIABLE n AS LOGICAL EXTENT 2 INITIAL [FALSE, TRUE]. //defines a logical variable 'n' with an initial value array of 2 elements with values of false and true
DEFINE VARIABLE o AS INTEGER VIEW-AS MEMPTR INITIAL QUOTER("hello world"). //defines an integer variable 'o' as a memory pointer with an initial value of the ASCII representation of "hello world"
DEFINE VARIABLE p AS HANDLE NO-UNDO. //defines a handle variable 'p' without undo capability
DEFINE VARIABLE q AS CHARACTER FORMAT "x(25)". //defines a character variable 'q' with a format of 25 alphanumeric characters
DEFINE BUFFER student FOR student TABLE student. //defines a buffer named 'student' for the database table 'student'
FOR EACH student WHERE student.age < 18: //loops through each record in the 'student' buffer where the age is less than 18
    FIND FIRST student WHERE student.name = "John" NO-ERROR. //tries to find the first record in the 'student' buffer where the name is John without throwing an error
    DISPLAY student.name WITH FRAME student-frame. //displays the student's name in a designated frame on the user interface
    MESSAGE "Student's grade is: " + student.grade VIEW-AS ALERT-BOX. //displays a confirmation message with the student's grade included
END. //ends the for loop
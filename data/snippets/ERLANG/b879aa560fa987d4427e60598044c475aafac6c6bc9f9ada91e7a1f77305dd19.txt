-module(greeter).  % creates a module called "greeter"

-export([hello/1, goodbye/1]).  % exports two functions: hello and goodbye

-spec hello(::string()) -> ::string().  % specifies the type of input and output for the hello function

hello(Name) ->  % defines the hello function and takes in a Name
    Greeting = "Hello, " ++ Name,  % creates a greeting string using the given Name
    io:format("~s~n", [Greeting]),  % prints the greeting to the console using IO format
    Greeting.  % returns the greeting string

-spec goodbye(::string()) -> ::string().  % specifies the type of input and output for the goodbye function

goodbye(Name) ->  % defines the goodbye function and takes in a Name
    Goodbye = "Goodbye, " ++ Name,  % creates a goodbye string using the given Name
    io:format("~s~n", [Goodbye]),  % prints the goodbye string to the console using IO format
    Goodbye.  % returns the goodbye string
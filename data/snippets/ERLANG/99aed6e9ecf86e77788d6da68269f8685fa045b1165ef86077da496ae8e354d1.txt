-module(tree).
%% A module called tree

-export([insert/2, find/2, delete/2]).
%% Exports 3 functions called insert, find and delete

insert(Key, Value) ->
%% Defines a function named insert with two arguments - Key and Value
    case gb_sets:update(Key, Value, tree_dict:get(Key)) of
    %% Checks the gb_sets dictionary to see if a value exists for the specified key
        {Name1, _, _} ->
        %% If a value exists, the value is updated
            {ok, [{Name1, tree_dict:replace(Key, Value)}]};
            %% The gb_sets dictionary is updated with the new value
        _ ->
        %% If no value exists, a new key-value pair is inserted
            {ok, [{Key, Value} | tree_dict:to_list()]}
            %% The new key-value pair is added to the dictionary and converted to a list
    end.

find(Key, tree_dict:from_list([{Key, Value} | tree_dict:to_list()])) ->
%% Defines a function named find with two arguments - Key and Dictionary
    case gb_sets:is_element(Key, tree_dict:get(Key)) of
    %% Checks if the specified key exists in the gb_sets dictionary
        true ->
            {ok, Value};
        false -> 
            {error, not_found}
    end.

delete(Key, tree_dict:from_list([{Key, tree_dict:get(Key)} | tree_dict:delete(Key)])) ->
%% Defines a function named delete with two arguments - Key and Dictionary
    case gb_sets:is_element(Key, tree_dict:get(Key)) of
    %% Checks if the specified key exists in the gb_sets dictionary
        true ->
            {ok, tree_dict:erase(Key)};
            %% If the key exists, it is erased from the dictionary
        false ->
            {error, not_found}
    end.
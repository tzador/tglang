-module(math).
%% This is a module declaration in ERLANG.

-export([add/2, multiply/2]).
%% This is the function export declaration in ERLANG.
%% It lists the functions that can be accessed from outside the module.

%% Function: add
%% Parameters: X (integer), Y (integer)
add(X, Y) ->
    X + Y.
%% This is a function that adds two integers in ERLANG.
%% It has the name 'add' and takes two parameters, both of which are integers.
%% The function has a single statement, which adds the two numbers together and returns the result.

%% Function: multiply
%% Parameters: X (integer), Y (integer)
multiply(X, Y) ->
    if
        X =:= 0 -> 0;
        Y =:= 0 -> 0;
        Y =:= 1 -> X;
        true -> X + multiply(X, Y - 1)
    end.
%% This is a recursive function in ERLANG.
%% It multiplies two integers by repeatedly adding one of the numbers to itself.
%% The function first checks if either parameter is 0, in which case the result is 0.
%% If Y is 1, then the result is simply X.
%% Otherwise, the function adds X to the result of calling itself with X and Y-1 as parameters.
%% This continues until Y reaches 0, at which point the recursion stops and the final result is returned.
-module(my_module).
-export([my_function/1]).

%% This function takes in a list of integers and returns the sum of all even numbers in the list.
my_function(List) ->
    %% Initialize accumulator to store sum of even numbers.
    Acc = 0,
    %% Loop through the list.
    my_function_helper(List, Acc).

%% Helper function to perform the actual sum calculation.
my_function_helper([Head|Tail], Acc) ->
    %% Check if current element is even.
    case Head rem 2 of
        0 -> 
            %% If even, add it to the accumulator.
            NewAcc = Acc + Head,
            %% Recursive call with updated accumulator.
            my_function_helper(Tail, NewAcc);
        _ ->
            %% If not even, continue to next element.
            my_function_helper(Tail, Acc)
    end;
%% Base case when list is empty, return accumulated sum.
my_function_helper([], Acc) ->
    Acc.
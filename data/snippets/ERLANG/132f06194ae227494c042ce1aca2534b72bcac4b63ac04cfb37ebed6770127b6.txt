-module(quick_sort). %% Defines a module named 'quick_sort'
-export([sort/1]). %% Exports the 'sort' function to be accessed by other modules.

%% This is a helper function for the quick sort algorithm
partition(_, [], [], []) ->
    [];
partition(Pivot, [Head|Tail], Left, Right) when Head =< Pivot -> %% Checks if Head is less than or equal to the Pivot
    [Head | Left] = partition(Pivot, Tail, Left, Right);
partition(Pivot, [Head|Tail], Left, Right) when Head > Pivot -> %% Checks if Head is greater than the Pivot
    [Head | Right] = partition(Pivot, Tail, Left, Right).

%% This is the main sorting function using the quick sort algorithm
sort([]) ->
    []; %% Empty list
sort([Head|Tail]) ->
    {Left, Right} = partition(Head, Tail, [], []),
    sort(Left) ++ [Head] ++ sort(Right). %% Makes recursive calls and appends the result to form the sorted list
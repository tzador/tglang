-module(movement).
-export([move/1]).

% This function takes in a list of moves (represented by atoms) and outputs the resulting position (represented as a tuple with x and y coordinates)

move(Moves) ->
    {X, Y} = process_moves({0, 0}, Moves),
    {X, Y}.

% This helper function recursively goes through the list of moves and updates the position accordingly
process_moves({X, Y}, []) ->
    {X, Y};
process_moves({X, Y}, [move_up | T]) ->
    process_moves({X, Y + 1}, T);
process_moves({X, Y}, [move_down | T]) ->
    process_moves({X, Y - 1}, T);
process_moves({X, Y}, [move_left | T]) ->
    process_moves({X -1, Y}, T);
process_moves({X, Y}, [move_right | T]) ->
    process_moves({X + 1, Y}, T);
process_moves({X, Y}, [_ | T]) ->
    process_moves({X, Y}, T).
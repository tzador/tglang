%% Module for creating, parsing, and validating email addresses

-module(email).
-author("John Doe").

%% Defines a record for storing email addresses with the format `<mailbox>"@"<domain>`
-record(email, {
    mailbox = "",
    domain = ""
}).

%% Function for parsing an email address string into a record
%% Returns `{ok, Email}` if valid or `{error, Reason}` if invalid
parse(Addr) ->
    case valid_address(Addr) of
        false ->
            {error, "Invalid email address"};
        true ->
            E = string:split(Addr, "@"),
            Email = #email{mailbox = lists:nth(1, E), domain = lists:nth(2, E)},
            {ok, Email}
    end.

%% Function for validating an email address string
valid_address(Addr) ->
    case string:substr(Addr, "/", 0) of
        0 ->
            E = string:split(Addr, "@"),
            case length(E) of
                2 ->
                    check_mailbox(lists:nth(1, E)) andalso check_domain(lists:nth(2, E));
                _ ->
                    false
            end;
        _ ->
            false
    end.

%% Helper function for checking the local-part (mailbox) of an email address
check_mailbox(Mailbox) ->
    case string:substr(Mailbox, "/", 0) of
        0 ->
            true;
        _ ->
            false
    end.

%% Helper function for checking the domain of an email address
check_domain(Domain) ->
    case string:substr(Domain, "/", 0) of
        0 ->
            true;
        _ ->
            false
    end.
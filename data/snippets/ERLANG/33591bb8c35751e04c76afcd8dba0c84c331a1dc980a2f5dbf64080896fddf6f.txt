%% This is a module that calculates the average of a list of numbers

-module(average).

%% Public functions

%% Calculates the average of a list of numbers
average(List) ->
    {Sum, Length} = lists:foldl(fun (Num, {SumAcc, LengthAcc}) ->
        {SumAcc + Num, LengthAcc + 1}
    end, {0, 0}, List),
    Sum / Length.

%% Private functions

%% Raises an error if the list is empty
check_list(List) ->
    case List of
        [] -> error(empty_list);
        _ -> ok
    end.

%% Tests

%% Tests for average function
-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").

%% Test for empty list
average_empty_list_test() ->
    ?assertEqual(error, average([])).

%% Test for non-empty list
average_non_empty_list_test() ->
    ?assertEqual(3.0, average([1, 2, 3])).
-endif.
-module(math_functions). % defines the module 'math_functions'

-export([add/2, subtract/2, multiply/2, divide/2, power/2]). % exports the following functions: add, subtract, multiply, divide, and power 

-spec add(number(), number()) -> number(). % function specification for 'add' function - takes in two numbers and outputs a number
add(X, Y) ->
    X + Y. % adds the two numbers and returns the result 
    
-spec subtract(number(), number()) -> number(). % function specification for 'subtract' function - takes in two numbers and outputs a number
subtract(X, Y) ->
    X - Y. % subtracts the second number from the first and returns the result 
    
-spec multiply(number(), number()) -> number(). % function specification for 'multiply' function - takes in two numbers and outputs a number
multiply(X, Y) ->
    X * Y. % multiplies the two numbers and returns the result 
    
-spec divide(number(), number()) -> number() | {error, divide_by_zero}. % function specification for 'divide' function - takes in two numbers and outputs a number or an error if the second number is 0
divide(_, 0) ->
    {error, divide_by_zero}; % if second number is 0, return error
divide(X, Y) ->
    X / Y. % divides the first number by the second and returns the result 
    
-spec power(number(), pos_integer()) -> number(). % function specification for 'power' function - takes in a number and a positive integer and outputs a number 
power(_, 0) ->
    1; % anything raised to 0 is 1
power(X, Y) ->
    X * power(X, Y-1). % recursively multiplies the number by itself Y times and returns the result
%% This code snippet generates a list of random numbers between 1 and 100
-module(random). 
-export([generate_list/1]). % function to be exported
-import(lists, [map/2]). % import the map/2 function from the lists module
 
%% Function to generate a list of random numbers
%% @input Count - the number of random numbers to generate
%% @output Numbers - a list of random numbers
generate_list(Count) ->
    Seed = {system_time(), self()}, % generate a seed based on current system time and process id
    Stream = random:seed(Seed), % create a random number stream using the seed
    {ok, Numbers} = lists:foldl(fun(_I, {S, Acc}) -> % use fold to iterate through the stream and generate numbers
        {ok, A} = random:uniform(S), % generate a random number between 0 and 1
        {[A|Acc], S}
    end, {Stream, []}, lists:seq(1, Count)), % use lists:foldl to iterate over a list of numbers from 1 to Count
    map(fun(X) -> X * 100 end, Numbers). % use lists:map to multiply each number by 100 and return the final list
-module(complex_module).
%% This module contains a function that calculates the square root of a number
-export([sqrt/1]).
%% sqrt(Number) -> SquareRoot
%% Calculates the square root of a number using the Newton's method and returns the result
sqrt(Number) ->
    Iterations = 20, % Set the number of iterations for accuracy
    InitialGuess = Number / 2, % Set the initial guess for the square root
    NewtonRaphson(Iterations, InitialGuess, Number).

%% NewtonRaphson(Iterations, Approximation, Number) -> Result
%% Uses the Newton's method to calculate the square root of a number
NewtonRaphson(0, Approximation, Number) ->
    Approximation; % Return the approximation as the final result
NewtonRaphson(Iterations, Approximation, Number) ->
    NewApproximation = (Approximation + (Number / Approximation)) / 2, % Calculate the new approximation
    NewIterations = Iterations - 1, % Decrement the number of iterations
    NewtonRaphson(NewIterations, NewApproximation, Number). % Recursively call the function with the new parameters
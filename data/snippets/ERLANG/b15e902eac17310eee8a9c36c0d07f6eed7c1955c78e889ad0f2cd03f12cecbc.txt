%% A function that calculates the running total of a list of integers

-module(running_total).

-export([calculate_running_total/1]).

%% Function that takes in a list of integers and returns the running total
calculate_running_total(Ints) ->
	%% Call the helper function with the list and an initial total of 0
	calculate_running_total_helper(Ints, 0).

%% Helper function that does the recursive calculation
%% Returns the final running total
calculate_running_total_helper([Int | Rest], Total) ->
	%% Add the current integer to the total
	NewTotal = Total + Int,
	%% Print out the current running total
	io:format("Current running total: ~p~n", [NewTotal]),
	%% Call the helper function again with the remaining list and the new total
	calculate_running_total_helper(Rest, NewTotal);

%% Base case for the recursive function
%% Returns the final running total
calculate_running_total_helper([], Total) ->
	%% Print out the final running total
	io:format("Final running total: ~p~n", [Total]),
	%% Return the final total
	Total.
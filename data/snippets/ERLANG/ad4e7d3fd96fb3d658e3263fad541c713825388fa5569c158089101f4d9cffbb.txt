-module(my_module). % Creates a new module called "my_module"

-export([function1/1, function2/2]). % Exports the functions "function1" and "function2"

%%% Function 1 %%%

function1([]) -> % Function 1 takes in a list
    [];
function1([H | T]) -> % Pattern matches on the first element (H) and the rest of the list (T)
    [H | function1(T)]. % Returns the first element and recursively calls function1 on the rest of the list

%%% Function 2 %%%

function2(Value1, Value2) ->
    NewValue = Value1 + Value2, % Sets the variable "NewValue" to the sum of Value1 and Value2
    io:format("The new value is ~p", [NewValue]). % Prints the value using the "io:format" function
%% Message-passing functions
-module(message_passing).
-export([send_message/2, receive_message/1, handle_message/1]).

%% Function for sending a message to a process
send_message(Pid, Message) ->
    Pid ! Message.

%% Function for receiving a message from a process
receive_message(Pid) ->
    receive
        %% Pattern match on the message
        Message -> 
            handle_message(Message)
    end.

%% Function for handling a received message
handle_message(Message) -> 
    %% Perform some actions based on the message received
    case Message of
        {add, Num1, Num2} -> 
            %% Add the two numbers and return the result
            Result = Num1 + Num2,
            %% Print the result to the console
            io:format("The result of adding ~w and ~w is ~w.~n", [Num1, Num2, Result]),
            %% Return the result
            Result;
        {subtract, Num1, Num2} -> 
            %% Subtract the second number from the first and return the result
            Result = Num1 - Num2,
            %% Print the result to the console
            io:format("The result of subtracting ~w from ~w is ~w.~n", [Num2, Num1, Result]),
            %% Return the result
            Result;
        {_, _, _} -> 
            %% If the message does not match any patterns, print an error
            io:format("Invalid message.~n"),
            %% Return an error code
            -1
    end.
%% A module that implements a simple message counter
-module(message_counter).

%% Exported functions
-export([start/0, increment/1, reset/0]).

%% Private state variable to keep track of count
-define(COUNT, count).

%% Public functions

%% Starting the counter by initializing the state to 0
start() ->
    {ok, #message_counter{?COUNT = 0}}.

%% Function to increment the counter by 1
increment(Counter) ->
    Counter#message_counter{?COUNT = Counter#message_counter.count + 1}.

%% Function to reset the counter back to 0
reset() ->
    Counter#message_counter{?COUNT = 0}.

%% Internal functions

%% Helper function to get the value of the count
count(Counter) ->
    Counter#message_counter.count.

%% Internal record definition
-record(message_counter, {
    count :: integer()
}).
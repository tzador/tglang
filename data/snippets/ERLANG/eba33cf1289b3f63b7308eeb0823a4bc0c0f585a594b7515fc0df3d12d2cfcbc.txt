-module(my_mod).
%% Define a function
-export([my_function/1]).
%% This function takes in a list and returns the sum of all elements
my_function(List) ->
  Sum = lists:foldl(fun(X, Acc) -> X + Acc end, 0, List),
  %% Nested function to filter the list and only keep even numbers
  EvenList = lists:filter(fun(X) -> X rem 2 == 0 end, List),
  %% Pattern matching to check if the sum is greater than or equal to 10
  case Sum >= 10 of
  	%% If true, returns the even list as a tuple with ok message
    true -> {ok, EvenList};
    %% If false, returns the sum as a string with error message
    false -> {error, integer_to_list(Sum) ++ " is less than 10."}
  end.
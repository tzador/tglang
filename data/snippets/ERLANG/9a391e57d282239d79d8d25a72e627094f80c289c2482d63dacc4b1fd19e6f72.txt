-module(sort).
-export([bubble_sort/1]).

%% @doc
%% Bubble sorting algorithm in Erlang
%% @end
bubble_sort(List) ->
    SortedList = bubble_sort(List, length(List)),
    SortedList
    %% @doc
	%% Recursive function to sort the list
	%% @end
bubble_sort(List, Length) when Length > 1 ->
    Sorted = bubble(List),
    bubble_sort(Sorted, Length - 1);
bubble_sort(List, _) ->
    List.

%% @doc
%% Helper function to compare and swap elements
%% @end
bubble([]) ->
    [];
bubble([X]) ->
    [X];
bubble([X, Y | Rest]) when X > Y ->
    [Y | bubble([X | Rest])];
bubble([X, Y | Rest]) ->
    [X | bubble([Y | Rest])].
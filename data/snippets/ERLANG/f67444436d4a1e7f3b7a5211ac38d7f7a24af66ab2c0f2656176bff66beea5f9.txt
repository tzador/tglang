-module(secret_code). %% Creates a module named "secret_code"
-export([encrypt/2, decrypt/2]). %% Exporting the functions "encrypt" and "decrypt"

%% encrypt/2 function takes in two parameters (Message and Key) and returns the encrypted message
encrypt(Message, Key) ->
    EncryptedMessage = xor(Message, Key), %% "xor" function performs bitwise XOR operation on the parameters
    io:format("Encrypted message: ~p~n", [EncryptedMessage]), %% Prints the encrypted message
    EncryptedMessage. %% Returns the encrypted message as the function output

%% decrypt/2 function takes in two parameters (EncryptedMessage and Key) and returns the decrypted message
decrypt(EncryptedMessage, Key) ->
    DecryptedMessage = xor(EncryptedMessage, Key), %% "xor" function performs bitwise XOR operation on the parameters
    io:format("Decrypted message: ~p~n", [DecryptedMessage]), %% Prints the decrypted message
    DecryptedMessage. %% Returns the decrypted message as the function output

%% A helper function to perform XOR operation
xor(A, B) ->
    A ^ B. %% The "^" operator performs bitwise XOR operation
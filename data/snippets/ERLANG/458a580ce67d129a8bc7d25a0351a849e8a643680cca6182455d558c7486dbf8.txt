%% This is an example of a function that finds the largest element in a list

-module(find_max).
-export([find_max/1]).

% Helper function to compare two numbers and return the larger one
-compare(X, Y) when X >= Y -> X;
compare(_, Y) -> Y.

% Function that takes in a list of numbers and recursively finds the largest element
find_max(List) ->
  find_max(List, 0).

find_max([Head|Tail], CurrentMax) ->
  Max = compare(Head, CurrentMax),
  find_max(Tail, Max);
find_max([], CurrentMax) ->
  CurrentMax.

% Example usage
find_max([2, 5, 1, 8, 3]). % Returns 8 as the largest element
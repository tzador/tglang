-module(multiple).

%% A simple module that calculates the product of two numbers
%%
%% usage:
%%
%%   multiple:product(2, 3).
%%   => 6
%%

%% Export the product function
-export([product/2]).

%% Function to calculate the product of two numbers
product(A, B) ->
    %% Use pattern matching to handle edge cases
    case {A, B} of
        {0, _} -> 0;
        {_, 0} -> 0;
        {1, B} -> B;
        {A, 1} -> A;
         
        %% Recursively calculate the product by adding A to itself B times
        {A, B} when B > 0 ->
            sum(A, B, 0);
        {A, B} when B < 0 ->
            sum(A, B, 0) * (-1);
            
    %% If a negative number is passed in as one of the arguments
    _ -> 
        %% Error thrown
        {error, "Invalid input, both arguments must be integers"}
    end.

%% Helper function to recursively sum A to itself for B times
sum(A, B, Acc) ->
    case B of 
        %% Base case
        0 -> Acc;
        %% Add A to the accumulator and recursively call sum function
        _ -> sum(A, B - 1, Acc + A)
    end.
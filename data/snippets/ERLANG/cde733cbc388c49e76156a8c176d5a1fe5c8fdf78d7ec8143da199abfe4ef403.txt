-module(crypto).
-export([init/0, generate_key/0, encrypt/2, decrypt/3]).

% Function to initialize the crypto library
% Returns ok if initialization is successful
init() ->
    crypto:start().

% Function to generate a 128-bit random key using the crypto library
generate_key() ->
    Key = crypto:strong_rand_bytes(16),
    <<Key:128>>.

% Function to encrypt a message using a given key and AES-128 algorithm
% Returns a binary with the encrypted message in Base64 format
encrypt(Message, Key) ->
    Cipher = crypto:cipher(aes, cbc, Key, <<0:128>>),
    Encrypted = crypto:encrypt(cipher, Message),
    base64:encode(Encrypted).

% Function to decrypt a message using a given key and AES-128 algorithm
% Returns the original message in binary format
decrypt(Encrypted, Key, IV) ->
    Cipher = crypto:cipher(aes, cbc, Key, IV),
    Decrypted = crypto:decrypt(cipher, Encrypted),
    base64:decode(Decrypted).
%% This function performs a binary search on a sorted list
%% and returns the index of the desired element if found, otherwise returns -1

-module(binary_search).
-export([search/2]).

%% @doc Helper function to perform the actual binary search
%% @param List the sorted list to be searched
%% @param Element the desired element to be found
%% @param StartIndex the starting index of the list
%% @param EndIndex the ending index of the list
%% @return the index of the desired element, or -1 if not found
search_helper(List, Element, StartIndex, EndIndex) ->
    if StartIndex =:= EndIndex ->
        if lists:nth(StartIndex, List) =:= Element ->
            StartIndex;
        true ->
            -1
        end;
    true ->
        MidIndex = StartIndex + ((EndIndex - StartIndex) div 2),
        case lists:nth(MidIndex, List) < Element of
            true ->
                search_helper(List, Element, MidIndex + 1, EndIndex);
            false ->
                search_helper(List, Element, StartIndex, MidIndex)
        end
    end.

%% @doc Main function that calls the search helper function
%% @param List the sorted list to be searched
%% @param Element the desired element to be found
%% @return the index of the desired element, or -1 if not found
search(List, Element) ->
    search_helper(List, Element, 1, length(List)).
%% Module definition
-module(my_module).
%% Exported functions
-export([my_function/1]).

%% Function definition
my_function(Arg1) ->
    %% Pattern matching
    [First | Rest] = Arg1,
    %% Head and tail of list
    Head = hd(Rest),
    Tail = tl(Rest),
    %% List comprehension
    [X*2 || X <- Tail, is_integer(X)],
    %% Case statement
    case Head of
        %% Matching specific value
        <<"hello">> -> <<"world">>;
        %% Catch-all clause
        _ -> <<"not hello">>
    end.

%% Function call
my_function([1, hello, 2, 3]).
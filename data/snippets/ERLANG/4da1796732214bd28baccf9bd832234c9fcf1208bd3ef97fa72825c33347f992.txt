%% This is a module in Erlang that creates a stack data structure 
-module(my_stack).

-export([init/0, push/2, pop/1, peek/1]).

%% Function to initialize an empty stack with an empty list
init() -> 
    [].

%% Function to push an element onto the stack
push(Elem, Stack) -> 
    [Elem | Stack].

%% Function to remove and return the top element of the stack 
pop(Stack) -> 
    case Stack of
        %% If the stack is empty, return an error
        [] -> 
            {error, empty_stack};
        %% If the stack has at least one element, remove and return the first element
        [Elem | Rest] ->
            {ok, Elem, Rest}
    end.

%% Function to return the top element of the stack without removing it
peek(Stack) -> 
    case Stack of
        %% If the stack is empty, return an error
        [] -> 
            {error, empty_stack};
        %% If the stack has at least one element, return the first element
        [Elem | _] -> 
            {ok, Elem}
    end.
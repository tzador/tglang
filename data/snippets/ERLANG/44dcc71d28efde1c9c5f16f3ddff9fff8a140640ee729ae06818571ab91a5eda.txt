-module(my_module).
%This is a sample module for demonstration purposes.

-export([add_numbers/2, factorial/1]).

%% Function to add two numbers together
add_numbers(X,Y) ->
    % Checks if X is an integer
    case is_integer(X) of 
        % If it is, adds X and Y and returns the result
        true -> 
            log_info("Adding two numbers");
            X + Y;
        % If X is not an integer, throws an error
        _ -> 
            log_error(X + "is not an integer");
            error
    end.

%% Recursive function to calculate factorial of a number
%% Takes one argument, the number to calculate factorial for
factorial(0) ->
    log_info("Factorial of 0 is 1");
    1;
factorial(N) when N > 0 ->
    log_info("Calculating factorial of: " + N);
    N * factorial(N-1).

% Helper function to log messages
% Takes one argument, the message to be logged
log_info(Message) ->
    io:format("~p~n", [Message]).

% Helper function to log errors
% Takes one argument, the error message
log_error(Error) ->
    io:format("ERROR: ~p~n", [Error]).
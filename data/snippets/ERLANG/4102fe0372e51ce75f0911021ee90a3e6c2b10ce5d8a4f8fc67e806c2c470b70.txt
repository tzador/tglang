-module(module_name).

-export([function_name/1]).

-spec add_numbers(List :: [integer()]) -> integer() | {'error', term()}.
add_numbers(List) ->
    add(List, 0).

-spec add(List :: [integer()], integer()) -> integer() | {'error', term()}.
add([], Acc) ->
    Acc;
add([H|T], Acc) ->
    add(T, Acc + H).

-spec get_mean(List :: [integer()]) -> float() | {'error', term()}.
get_mean(List) ->
    Sum = add_numbers(List),
    Length = length(List),
    if
        Length =:= 0 ->
            {error, divide_by_zero};
        true ->
            Sum / Length
    end.
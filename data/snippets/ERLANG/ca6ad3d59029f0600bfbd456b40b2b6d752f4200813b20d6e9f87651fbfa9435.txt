%% This module defines functions for verifying the reliability of a network
-module(network_reliability).

%% Function for calculating the reliability of a network
%% Takes in a list of hosted nodes and returns the calculated reliability
calculate_reliability(HostedNodes) ->
  %% Gets the total number of nodes in the network
  TotalNodes = length(HostedNodes),
  
  %% Calculates the probability of node failure
  NodeFailureProbability = 0.01 * TotalNodes,
  
  %% Calculates the probability of a node being successfully hosted
  NodeSuccessProbability = 1 - NodeFailureProbability,
  
  %% Initializes the reliability value with a base value of 1
  Reliability = 1,
  
  %% Loops through each node in the list
  [Node || Node <- HostedNodes,
    %% Checks if the node is successfully hosted
    case math:random() of
      Probability when Probability =< NodeSuccessProbability ->
        %% Node is successfully hosted, update reliability
        Reliability = Reliability * NodeSuccessProbability;
      _ ->
        %% Node fails, update reliability
        Reliability = Reliability * NodeFailureProbability
    end
  ],
  
  %% Returns the final calculated reliability
  Reliability.
  
%% Function for checking if a network is reliable
%% Takes in a reliability threshold and the list of hosted nodes
%% Returns true if the calculated reliability is above the threshold, false otherwise
is_reliable(ReliabilityThreshold, HostedNodes) ->
  calculate_reliability(HostedNodes) > ReliabilityThreshold.
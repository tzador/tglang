%% Implementation of a binary search function

%% Function definition
binary_search(List, Key) ->
    binary_search(List, Key, 1, length(List)).

%% Error handling for empty or single element list
binary_search([], _, _, _) ->
    not_found;
binary_search([_], Key, Start, _) when Start =:= Key ->
    Start;
binary_search([_], _, _, _) ->
    not_found.

%% Recursive search function
binary_search(List, Key, Start, End) when End < Start ->
    not_found;
binary_search(List, Key, Start, End) ->
    Mid = (Start + End) div 2,
    case lists:nth(Mid, List) < Key of
        true ->
            binary_search(List, Key, (Mid + 1), End);
        false ->
            binary_search(List, Key, Start, (Mid - 1))
    end.
%%% this is a module that implements a simple chat system %%%

-module(chat).
-export([start/0, add_user/2, remove_user/1, send_message/2, create_room/2]).

%%% list to store user names %%%
-record(state, {users=[]}).

%%% start/0 function to initialize the chat system and return the initial state %%%
start() ->
    #state{}.

%%% add_user/2 function to add a user to the chat system %%%
add_user(UserName, State) ->
    NewUsers = State#state.users ++ [UserName],
    State#state{users=NewUsers}.

%%% remove_user/1 function to remove a user from the chat system %%%
remove_user(UserName, State) ->
    NewUsers = lists:delete(UserName, State#state.users),
    State#state{users=NewUsers}.

%%% send_message/2 function to send a message to all users in the chat system %%%
send_message(Message, State) ->
    lists:foreach(fun(User) -> io:format("~p: ~s~n", [User, Message]) end, State#state.users).

%%% create_room/2 function to create a new chat room and add users to it %%%
create_room(RoomName, Users) ->
    io:format("Created a new room: ~p~n", [RoomName]),
    lists:foreach(fun(User) -> io:format("Added ~p to room ~p~n", [User, RoomName]) end, Users).
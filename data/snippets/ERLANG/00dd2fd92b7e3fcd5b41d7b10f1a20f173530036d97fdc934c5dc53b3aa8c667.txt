%% This module defines the functions for calculating prime numbers using the Sieve of Eratosthenes algorithm
-module(primes).

%% Defines the public functions that can be called outside the module
-export([sieve/1, primes/1, range/2]).

%% Function that returns a list of prime numbers up to a given number
sieve(N) ->
    Collect = lists:seq(2, N),
    sieve_rec(N, Collect, []).

%% Helper function that recursively removes multiples of the current number
sieve_rec(0, _, Prime) ->
    lists:reverse(Prime);
sieve_rec(N, Collect, Prime) ->
    [H|T] = Collect,
    sieve_rec(N-1, [X || X <- T, X rem H =/= 0], [H|Prime]).
    
%% Function that generates a list of prime numbers within a given range
primes(Start, End) when Start =< End ->
    sieve(End)--sieve(Start-1);
primes(_, _) ->
    [].

%% Function that generates a list of numbers within a given range
range(Min, Max) when Min =< Max ->
    lists:seq(Min, Max);
    
range(_, _) ->
    0.
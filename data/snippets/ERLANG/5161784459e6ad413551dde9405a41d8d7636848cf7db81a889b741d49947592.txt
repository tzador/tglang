-module(database).
%% This is a module in ERLANG, which is a functional programming language.
%% It is used to create a database with key-value pairs.

-export([create_table/2, insert/3, delete/2, update/3, search/2]).
%% This line is used to export the functions from this module.

%% Function to create a table in the database with specified name and columns
create_table(Name, Columns) ->
  ets:new(Name, [named_table, set, protected]),
%% This line creates the table in the database using the ets:new function.
  create_columns(Name, Columns).
%% This line calls the create_columns function to add the specified columns to the table.

%% Function to create columns in the table with specified name and data types
create_columns(Name, []) ->
  ok;
create_columns(Name, [Head|Tail]) ->
  ets:insert(Name, {Head, []}),
%% This line inserts the column name and an empty list as the initial value into the table.
  create_columns(Name, Tail).
%% This line recursively adds the remaining columns to the table.

%% Function to insert a record into the table with specified key and values
insert(Name, Key, Values) ->
  ets:insert(Name, {Key, Values}).
%% This line inserts the record into the table using the ets:insert function.

%% Function to delete a record from the table with specified key
delete(Name, Key) ->
  ets:delete(Name, Key).
%% This line deletes the record from the table using the ets:delete function.

%% Function to update a record in the table with specified key and values
update(Name, Key, NewValues) ->
  OldValues = ets:lookup(Name, Key),
%% This line retrieves the old values for the specified record from the table.
  ets:insert(Name, {Key, lists:merge(OldValues, NewValues)}).
%% This line merges the old and new values together and inserts them into the table.

%% Function to search for a record in the table with specified key
search(Name, Key) ->
  ets:lookup(Name, Key).
%% This line retrieves the record with the specified key from the table using the ets:lookup function.
-module(my_list_utils).

%% Function to get the length of a list.
get_length(List) ->
    get_length(List, 0).

%% Helper function to recursively iterate through the list.
get_length([], Acc) ->
    Acc;
get_length([_|Rest], Acc) ->
    get_length(Rest, Acc + 1).

%% Function to reverse a list.
reverse(List) ->
    reverse(List, []).

%% Helper function to recursively reverse the list.
reverse([], Acc) ->
    Acc;
reverse([Head|Rest], Acc) ->
    reverse(Rest, [Head|Acc]).

%% Function to find the minimum value in a list.
min(List) ->
    min(List, hd(List)).

%% Helper function to recursively find the minimum value.
min([], Min) ->
    Min;
min([Head|Rest], Min) when Head < Min ->
    min(Rest, Head);
min([_|Rest], Min) ->
    min(Rest, Min).

%% Function to find the maximum value in a list.
max(List) ->
    max(List, hd(List)).

%% Helper function to recursively find the maximum value.
max([], Max) ->
    Max;
max([Head|Rest], Max) when Head > Max ->
    max(Rest, Head);
max([_|Rest], Max) ->
    max(Rest, Max).
-module(mapping).
-compile(export_all).

%% This function maps a list of integers to their square values
map_squares(List) ->
    lists:map(fun(X) -> X*X end, List).

%% This function calculates the factorial of a given number
factorial(0) ->
    1;
factorial(N) ->
    N * factorial(N-1).

%% This is a recursive function that checks if a given list contains a specific value
contains(List, Value) ->
    case List of
        [] ->
            false;
        [H|T] ->
            if H == Value ->
                true;
            true ->
                contains(T, Value)
            end
    end.

%% This is a higher-order function that takes a function as an argument and applies it to a given list
higher_order(Fun, List) ->
    lists:map(fun(X) -> Fun(X) end, List).

%% This function calculates the nth Fibonacci number using dynamic programming
fibonacci(N) ->
    fib(N, 0, 1).

%% Helper function for the fibonacci function
fib(0, A, _) ->
    A;
fib(N, A, B) ->
    fib(N-1, B, A+B).

%% This is a module attribute that specifies the author's name
-author("John Smith").
%% The following code defines a module named 'math' which contains functions for various mathematical operations.

-module(math).   %% creates a new module

-export([sq/1, cube/1, gcd/2, lcm/2]).   %% exports the functions to be used outside the module

sq(N) ->   %% defines the function sq which takes one parameter
  N*N.   %% computes the square of the parameter and returns it

cube(N) ->
  N*N*N.

gcd(X, Y) when X > Y ->   %% defines the function gcd with guards
  gcd(X-Y, Y);   %% recursively calls the function with smaller parameter
gcd(X, Y) when X < Y ->
  gcd(Y-X, X);
gcd(X, Y) ->
  X.

lcm(X, Y) ->
  X*Y // gcd(X, Y).

%%% How to use the functions %%%

math:sq(4).   %% will return 16
math:cube(3).   %% will return 27
math:gcd(9, 12).   %% will return 3
math:lcm(4, 6).   %% will return 12
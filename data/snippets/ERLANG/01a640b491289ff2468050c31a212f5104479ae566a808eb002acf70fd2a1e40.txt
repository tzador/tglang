-module(factorial).  % Defines a module named 'factorial'
-export([factorial/1]).  % Exports the function 'factorial' with an arity of 1

%% The 'factorial' function takes in a single argument 'N' and computes its factorial recursively 
%% If the argument is 0, the result is 1
%% If the argument is negative, the result is undefined
%% If the argument is positive, the function calls itself with the argument decremented by 1 and multiplies it with itself, until it reaches 1 
%% Eg: factorial(5) will compute 5*4*3*2*1 and return 120

factorial(0) -> 1;  % Pattern matching for when the argument is 0
factorial(N) when N > 0 -> N * factorial(N-1);  % Pattern matching for when the argument is positive
factorial(_) -> undefined.  % Pattern matching for any other input, returns undefined

%% Example usage:
%% factorial(5) returns 120
%% factorial(0) returns 1
%% factorial(-1) returns undefined
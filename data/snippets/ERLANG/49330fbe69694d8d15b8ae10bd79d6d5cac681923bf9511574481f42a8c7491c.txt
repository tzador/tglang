%%%% Beginner's code snippet in Erlang %%%

%% Function to calculate the factorial of a given number %%
 
factorial(N) -> 
  if 
    N == 0 -> 1;   %% Base case: factorial of 0 is 1 %%
    N > 0 -> N * factorial(N-1)   %% Recursive case: factorial of N is N times factorial of N-1 %%
  end. 
  
%% Function to check if a given number is prime %%
 
is_prime(N) when N == 2 ->		    
  true;	    %% 2 is the only even prime number, so if N is 2, it is prime %% 

is_prime(N) when N > 2, N rem 2 == 0 ->	    
  false.    %% Any even number greater than 2 is not prime, so if N is even, it is not prime %%
  
is_prime(N) when N > 2, N rem 2 /= 0 ->	
  is_prime(N, 3). %% Call helper function with increment value of 3 %%
  
is_prime(_N, Max) when Max * Max > N -> 
  true; %% Termination condition: if Max * Max is greater than N, then N is prime %%
  
is_prime(N, Max) when N rem Max == 0 ->	
  false; %% If N is divisible by Max without remainder, then N is not prime %%
  
is_prime(N, Max) ->	
  is_prime(N, Max+2). %% Recursive call with incremented value of Max by 2 (skipping all even numbers) %%
  
%% Example code to calculate the factorial of 5 %%
Factorial = factorial(5).	  
%% Output: 120 %% 

%% Example code to check if a number is prime %%
is_prime(67).	
%% Output: true %% 

is_prime(102).	
%% Output: false %%
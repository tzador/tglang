%% This is a module in ERLANG that implements a basic stack data structure

-module(stack).
-export([new/0, push/2, peek/1, pop/1]).

%% The new/1 function creates a new stack and returns an empty list
new() -> 
    [].

%% The push/2 function takes in an element and a stack and returns a stack with the element added to the top
push(Element, Stack) -> 
    [Element | Stack].

%% The peek/1 function takes in a stack and returns the top element without removing it from the stack
%% It also checks for any errors, such as an empty stack
peek(Stack) ->
    case Stack of
        [] ->
            {error, empty_stack};
        [Top | _] ->
            {ok, Top}
    end.

%% The pop/1 function takes in a stack and returns a tuple with the top element removed and the updated stack
%% It also checks for any errors, such as an empty stack
pop(Stack) ->
    case Stack of
        [] ->
            {error, empty_stack};
        [Top | Rest] ->
            {ok, Top, Rest}
    end.
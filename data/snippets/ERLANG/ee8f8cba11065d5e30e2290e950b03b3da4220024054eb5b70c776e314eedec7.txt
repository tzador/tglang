-module(math).
-export([factorial/1, fibonacci/1]).

% This function calculates the factorial of a given integer n
% by using tail recursion in Erlang.

factorial(N) when N == 0 -> 1; % factorial of 0 is 1
factorial(N) when N > 0 -> N * factorial(N-1). % factorial of N is N times factorial of N-1

% This function calculates the nth term in the Fibonacci sequence
% by using dynamic programming in Erlang.

fibonacci(N) when N == 0 -> 0; % first term of Fibonacci sequence is 0
fibonacci(N) when N == 1 -> 1; % second term of Fibonacci sequence is 1
fibonacci(N) when N > 1 -> fibonacci(N-1) + fibonacci(N-2). % Nth term is sum of previous two terms

% Example usage:
% math:factorial(5). % returns 120
% math:fibonacci(8). % returns 21
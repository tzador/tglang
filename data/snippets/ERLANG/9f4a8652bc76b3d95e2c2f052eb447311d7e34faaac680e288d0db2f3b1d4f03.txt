% Define a function that takes in two lists of integers and returns a list of booleans
f(List1, List2) ->
    % Use list comprehension to iterate through the lists simultaneously
    [Bool || {X, Y} <- lists:zip(List1, List2),
            % Check if the sum of the integers in the tuple is even
            X + Y rem 2 =:= 0,
            % Check if both integers are greater than 10
            X > 10 andalso Y > 10,
            % Check if both integers have a remainder of 1 when divided by 3
            X rem 3 =:= 1 andalso Y rem 3 =:= 1,
            % Check if X is a multiple of Y
            X rem Y =:= 0,
            % Check if Y is a multiple of X
            Y rem X =:= 0,
            % Check if either of the integers is prime
            is_prime(X) orelse is_prime(Y)
            % If all conditions are satisfied, set the boolean to true
            -> true || Bool <- lists:seq(1, length(List1))].

% Function to check if a number is prime
is_prime(N) ->
    % Call the helper function with N and 2 as parameters
    is_prime(N, 2).

% Helper function to check if a number is prime
is_prime(N, D) ->
    % Base case: if D is greater than half of N, then N is prime
    if D > N div 2 ->
        true;
    % If N is divisible by D, then it is not prime
    N rem D =:= 0 ->
        false;
    % Otherwise, recursively call the helper function with D incremented by 1
    true ->
        is_prime(N, D + 1).
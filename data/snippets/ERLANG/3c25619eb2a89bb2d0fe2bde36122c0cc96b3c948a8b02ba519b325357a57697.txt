-module(my_module). % Defines the module
-export([function1/1, function2/0, function3/2]). % Exported functions

-define(PI, 3.14159265359). % Defines a macro constant

function1(X) -> % Defines a function with one parameter
    Y = X * 5, % Local variable assignment
    Y + 10. % Returns the value

function2() -> % Defines a function with no parameters
    io:format("Hello World!~n"). % Prints "Hello World!" to console

function3(X, Y) -> % Defines a function with two parameters
    case X of 
        "even" -> % Matching pattern
            Y + 5; % Returns Y + 5
        "odd" -> % Matching pattern
            Y * 2 % Returns Y * 2
    end. % Ends case expression

%% INPUT:
%% function1(3).
%% OUTPUT:
%% 25
%% function2().
%% OUTPUT:
%% Hello World!
%% function3("odd", 10).
%% OUTPUT:
%% 20
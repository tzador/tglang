%% This code snippet calculates the average of a list of numbers in ERLANG
-module(average). %% Creating a module named 'average'

%% Exporting the functions that will be available to other modules
-export([calculate_average/1, sum_list/1, length_list/1]).

%% Function to calculate the average of a list of numbers
%% Input: List of numbers
%% Output: Average of the list
calculate_average(List) ->
    Sum = sum_list(List), %% Calling the sum_list function to get the sum of the list
    Length = length_list(List), %% Calling the length_list function to get the length of the list
    Sum / Length. %% Calculating the average by dividing the sum by the length of the list

%% Function to calculate the sum of a list of numbers
%% Input: List of numbers
%% Output: Sum of the list
sum_list([]) ->
    0; %% If the list is empty, return 0
sum_list([H|T]) ->
    H + sum_list(T). %% Recursively call the function to add the first element to the sum of the remaining elements

%% Function to calculate the length of a list
%% Input: List
%% Output: Length of the list
length_list(List) ->
    length(List). %% Built-in function in ERLANG to calculate the length of the list
%% This function takes in a list and a substring as parameters and checks if the substring
%% is present in any of the elements in the list, returning true if it is and false if not.
-module(example).
-export([check_substring/2]).

%% The main function, called with check_substring(List, Substring).
check_substring(List, Substring) ->
    %% This function will recursively go through each element in the list.
    check_each(List, Substring).

%% This helper function takes in a single element and the substring as parameters and checks
%% if the substring is present in the element.
check_each([], _) ->
    %% Base case, return false since the substring was not found.
    false;
check_each([Element|Rest], Substring) ->
    %% If the substring is present in the current element, return true.
    if
        string:substr(Element, Substring) /= 0 -> true;
        %% Otherwise, recursively call the function with the rest of the list.
        true -> check_each(Rest, Substring)
    end.
%% Erlang Module to Generate a List of Prime Numbers
-module(prime_numbers).

%% Exporting the 'generate_prime_numbers' function
-export([generate_prime_numbers/1]).

%% Function to generate a list of prime numbers up to a given limit
%% Parameters:
%%   Limit - Upper limit for the prime numbers list
%% Returns:
%%   List of prime numbers up to the limit
generate_prime_numbers(Limit) ->
    %% If Limit is less than 2, an empty list is returned
    if Limit < 2 ->
        [];
    %% If Limit is equal to 2, the list containing 2 is returned
    Limit =:= 2 ->
        [2];
    %% If Limit is greater than 2, the list of all prime numbers
    %% up to the limit is generated using the helper function
    true ->
        generate_prime_numbers(Limit, 2, [], [2]).
    
%% Helper function to check if a number is prime
%% Parameters:
%%   Number - Number to be checked
%%   Factors - List of factors of the number
%% Returns:
%%   true or false depending on whether the number is prime or not
is_prime(Number, Factors) ->
    %% If the list of factors is empty, the number is prime
    if Factors == [] ->
        true;
    %% If the number is divisible by any of the factors, it is not prime
    [H|T] -> 
        case Number rem H == 0 of
            true ->
                false;
            false ->
                is_prime(Number, T)
        end.

%% Helper function to generate the list of prime numbers recursively
%% Parameters:
%%   Limit - Upper limit for the prime numbers list
%%   N - Number to be checked for primality
%%   Primes - List of prime numbers generated so far
%%   Numbers - List of all numbers considered
%% Returns:
%%   List of prime numbers up to the limit
generate_prime_numbers(Limit, N, Primes, Numbers) ->
    %% If the number is not prime, it is skipped
    if is_prime(N, Primes) == false ->
        generate_prime_numbers(Limit, N+1, Primes, Numbers);
    %% If the number is prime, it is added to the list
    %% and the function is recursively called with the next number
    true ->
        NewPrimes = Primes ++ [N],
        if N < Limit ->
            generate_prime_numbers(Limit, N+1, NewPrimes, Numbers);
        %% Once the limit is reached, the list of prime numbers is returned
        true ->
            NewPrimes
        end.
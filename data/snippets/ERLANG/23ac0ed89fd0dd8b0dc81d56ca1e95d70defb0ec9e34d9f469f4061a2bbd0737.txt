%% Module name: math_functions
-module(math_functions).

%% Public function: add_nums
%% Returns the sum of two numbers
-spec add_nums(number(), number()) -> number().
add_nums(Num1, Num2) ->
    Num1 + Num2.

%% Public function: multiply_nums
%% Returns the product of two numbers
-spec multiply_nums(number(), number()) -> number().
multiply_nums(Num1, Num2) ->
    Num1 * Num2.

%% Public function: calculate_sum
%% Takes in a list of numbers and returns the sum
-spec calculate_sum([number()]) -> number().
calculate_sum(List) ->
    lists:foldl(fun(X, Acc) -> X + Acc end, 0, List).

%% Public function: reverse_list
%% Takes in a list and returns the reversed list
-spec reverse_list([any()]) -> [any()].
reverse_list(List) ->
    lists:reverse(List).

%% Private function: is_even
%% Returns true if number is even, false otherwise
-spec is_even(number()) -> boolean().
is_even(Num) ->
    case Num rem 2 of
        0 -> true;
        _ -> false
    end.

%% Private function: is_odd
%% Returns true if number is odd, false otherwise
-spec is_odd(number()) -> boolean().
is_odd(Num) ->
    case Num rem 2 of
        1 -> true;
        _ -> false
    end.
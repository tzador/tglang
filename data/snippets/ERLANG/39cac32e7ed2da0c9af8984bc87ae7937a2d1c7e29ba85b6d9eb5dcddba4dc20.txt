%% Annotated code snippet demonstrating pattern matching in ERLANG

% Define a function that takes in two arguments and returns their sum
sum(A, B) ->
    % Pattern match for when A and B are both integers
    {IntA, IntB} = {A, B},
    % Return the sum of the two integers
    IntA + IntB;

    % Pattern match for when A and B are both floating point numbers
    {FloatA, FloatB} = {{A, _}, {B, _}},
    % Return the sum of the two floating point numbers
    FloatA + FloatB;

    % Pattern match for when A and B are both lists
    {ListA, ListB} = {A, B},
    % Return the concatenated list
    ListA ++ ListB.

% Call the function with different types of arguments
sum(3, 5). % Returns 8
sum(1.2, 3.5). % Returns 4.7
sum([1, 2, 3], [4, 5, 6]). % Returns [1, 2, 3, 4, 5, 6]
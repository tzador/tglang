-module(multifunction_module). % defining a module in Erlang

-export([  % defining the functions that can be accessed from outside the module
  add/2,   % a function named 'add' that takes 2 arguments
  multiply/2,   % a function named 'multiply' that takes 2 arguments
  hello/1,      % a function named 'hello' that takes 1 argument
  concat_and_reverse/2   % a function named 'concat_and_reverse' that takes 2 arguments
]).

% a function named 'add' that takes two numbers and returns their sum
add(A, B) ->
  A + B.

% a function named 'multiply' that takes two numbers and returns their product
multiply(A, B) ->
  A * B.

% a function named 'hello' that prints a greeting with the given name
hello(Name) ->
  io:format("Hello ~s!~n", [Name]).

% a function named 'concat_and_reverse' that takes two strings and concatenates them in reverse order
concat_and_reverse(A, B) ->
  lists:reverse(string:join([A, B])).
%% Function that calculates the exponential of a given number
-module(math_functions).

-export([exponential/1]).

%% The exponential function has a base of 'e' and a power of 'x'
%% where e is a mathematical constant approximately equal to 2.71828
%% and x is the power to raise e to
-exoprt([e/0]).

%% Function to calculate the power x raised to the exponential base e
exponential(X) -> 
    %% calculates the value of e raised to the power x using the math library function 'exp'
    E = math:exp(X),
    
    %% defines a function to calculate the factorial of a given number
    %% the factorial is used to calculate the taylor series expansion of e^x
    factorial(N) -> 
        if 
            %% if N is 0, the factorial is 1, as 1 is the identity for multiplication
            N == 0 -> 1;
            
            %% if N is a positive integer, the factorial is equal to the product of all numbers from N to 1
            N > 0 -> N * factorial(N-1)
        end,
        
    %% sets the number of terms in the taylor series expansion, in this case 20 terms
    Terms = 20,
    
    %% calculates the factorial of each term in the taylor series expansion using the factorial function  
    Factorials = [factorial(Index) || Index <- lists:seq(1,Terms)],
    
    %% calculates the e^x term for each factorial using the list comprehension
    Terms = [E^X/F || X <- lists:seq(1,Terms)],
    
    %% calculates the final sum of the taylor series expansion using the 'lists' library function 'sum'
    Sum = lists:sum(Terms),
    
    %% returns the final result of e^x computed using the taylor series expansion
    Sum.
-module(quick_sort).
%%% Module Documentation - Quick Sort Algorithm
-export([sort/1]).
%%% Function Documentation - Sort Function
%%% Input: List to be sorted
%%% Output: Sorted List
sort(List) -> quicksort(List, 1, length(List)).

%%% Function Documentation - Quick Sort Function
%%% Input: List to be sorted, Start index, End index
%%% Output: Sorted List
quicksort([], _, _) -> [];
quicksort(List, Start, End) ->
    case Start >= End of
        true -> List;
        false ->
            Pivot = list:nth(Start, List),
            Pivot_index = partition(Pivot, List, Start, End),
            quicksort(List, Start, Pivot_index-1),
            quicksort(List, Pivot_index+1, End)
    end.

%%% Function Documentation - Partition Function
%%% Input: Pivot element, List to be partitioned, Start index, End index
%%% Output: Pivot element index
partition(Pivot, List, Start, End) ->
    case Start >= End of
        true -> Start;
        false ->
            case list:nth(End, List) < Pivot of
                true ->
                    list:swap(End, Start, List),
                    partition(Pivot, List, Start+1, End);
                false ->
                    partition(Pivot, List, Start, End-1)
            end
    end.
-module(my_module).                % Declaring module name
-author("Jane Doe").               % Adding author name
-export([apply/2]).                % Exporting apply function with 2 arguments

%% Function that applies a function to a list of elements
apply(F, Ls) ->                    % Function declaration with two parameters
    apply(F, Ls, []).

%% Helper function that applies a function to each element in the list,
%% and stores the result in a new list
apply(F, [X | Xs], Acc) ->         % Pattern matching for non-empty list
    apply(F, Xs, [F(X) | Acc]);    % Appending the result for current element to accumulator
apply(_, [], Acc) ->               % Pattern matching for empty list
    lists:reverse(Acc).            % Reversing the accumulator to get the final result
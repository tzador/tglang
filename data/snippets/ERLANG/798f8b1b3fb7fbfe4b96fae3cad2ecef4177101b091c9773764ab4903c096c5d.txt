%%% Module Definition %%%
-module(bank_account).

%%% Exported Functions %%%
-export([create_account/0, deposit/2, withdraw/2, check_balance/1]).

%%% Internal Functions %%%
-export([get_balance/0, update_balance/1]).

%%% State Record Definition %%%
-record(account, {balance}).

%%% Public Functions %%%

%% Create a new bank account with initial balance of 0
create_account() ->
    #account{balance = 0}.

%% Deposit specified amount into given account
deposit(Amount, Account) ->
    NewBalance = get_balance(Account) + Amount,
    update_balance(Account, NewBalance).

%% Withdraw specified amount from given account
withdraw(Amount, Account) ->
    OldBalance = get_balance(Account),
    case Amount > OldBalance of
        true -> {error, "Insufficient Funds"};
        false -> 
            NewBalance = OldBalance - Amount,
            update_balance(Account, NewBalance)
    end.

%% Check the balance of given account
check_balance(Account) ->
    {ok, get_balance(Account)}.

%%% Internal Functions %%%

%% Get balance from state record
get_balance(Account) ->
    Account#account.balance.

%% Update state record with new balance
update_balance(Account, NewBalance) ->
    Account#account{balance = NewBalance}.
-module(my_module). %defines a module
-export([function1/1, function2/1, function3/1]). %specifies exported functions

function1(Param) -> %defines function1 with one parameter
    case Param of
        [] -> %checks if parameter is an empty list
            "Parameter is an empty list";
        [_|_] -> %checks if parameter is a non-empty list
            "Parameter is a non-empty list"
    end. %ends case statement

function2(Param) ->
    case Param of
        {} -> %checks if parameter is an empty tuple
            "Parameter is an empty tuple";
        {_} -> %checks if parameter is a tuple with one element
            "Parameter is a tuple with one element"
    end.

function3(Param) ->
    case Param of
        0 -> %checks if parameter is 0
            0;
        _ -> %if parameter is not 0, call another function
            function4(Param)
    end.

function4(Param) ->
    Param * Param. %defines function that squares the parameter
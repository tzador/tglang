-module(my_module).

-export([fib/1]).

%% Calculates the nth term in the fibonacci sequence
%% Input: n, the value of the term to be calculated
%% Output: The calculated term
fib(0) -> 0;  % Base case where 0th term is 0
fib(1) -> 1;  % Base case where 1st term is 1
fib(N) when is_integer(N) -> fib(N-1) + fib(N-2).  % Recursively calculates the nth term 

%% Optional function for printing out the fibonacci sequence up to the nth term
%% Input: n, the value of the term to be calculated
%% Output: None (prints the fibonacci sequence)
fib_seq(N) ->
    Loop = fun(N, I, Acc) when I =< N ->
        io:format("~w~n", [fib(I)]),
        Loop(N, I+1, [fib(I)|Acc]);
    Loop(_, _, _) -> ok
    end,
    Loop(N, 0, [1]).  % Starts the sequence from 1 as the first term has already been printed
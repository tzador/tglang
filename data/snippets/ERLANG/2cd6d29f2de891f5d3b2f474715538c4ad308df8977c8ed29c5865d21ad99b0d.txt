%% This function takes in a list and returns the sum of all even numbers in the list
-module(math).

-export([sum_even/1]).

%% Helper function to check if a number is even
is_even(Number) when Number rem 2 == 0 -> true;
is_even(_) -> false.

%% Actual function that calculates the sum of even numbers in a list
sum_even(List) -> sum_even(List, 0).

%% Base case: When the list is empty, return the sum
sum_even([], Sum) -> Sum;

%% Recursive case: Check if the head element is even, if so add it to the sum and call the function on the rest of the list
sum_even([Head|Tail], Sum) when is_even(Head) -> sum_even(Tail, Sum + Head);

%% Recursive case: If the head element is not even, call the function on the rest of the list without adding anything to the sum
sum_even([_Head|Tail], Sum) -> sum_even(Tail, Sum).
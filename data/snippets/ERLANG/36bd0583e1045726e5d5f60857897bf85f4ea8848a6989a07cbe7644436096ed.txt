-module(lists).
-export([manipulate/2]).
%% This module contains functions to manipulate lists
%% @param List the list to be manipulated
%% @param N the number of elements to be manipulated
manipulate(List, N) ->
    %% check if N is a positive integer
    case N =< 0 of
        true ->
            %% if N is negative or 0, return the original list
            List;
        false ->
            %% if N is positive, call a helper function to manipulate the list
            %% @param List the list to be manipulated
            %% @param N the number of elements to be manipulated
            manipulate_helper(List, N)
    end.

%% helper function to manipulate the list by taking elements from the front and putting them at the back
%% @param List the list to be manipulated
%% @param N the number of elements to be manipulated
manipulate_helper(List, N) ->
    %% check if N is 1, indicating only the first element should be moved
    case N =:= 1 of
        true ->
            %% move the first element to the back of the list
            [hd(List) | tl(List)];
        false ->
            %% if N is greater than 1, recursively call this function with N-1 and the manipulated list
            [hd(manipulate_helper(List, N-1)) | tl(manipulate_helper(List, N-1))]
    end.
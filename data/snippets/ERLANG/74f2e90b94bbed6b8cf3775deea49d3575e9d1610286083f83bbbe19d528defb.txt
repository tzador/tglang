-module(my_module). #%Module declaration
-compile(export_all). #%Compile directive to export all functions
-type my_rec() :: #{ #%Define a map type
    id => pos_integer(), #%Key-value pair for ID 
    name => string(), #%Key-value pair for name
    age => pos_integer() #%Key-value pair for age
    }.
    
-spec add_person(my_rec()) -> ok | error. #%Function specification for adding a person
add_person(Person) -> #%Function definition
    case validate_person(Person) of #%Case statement to check if person is valid
        true -> #%If person is valid, add to database
            ok;
        false -> #%If person is not valid, return error
            error
    end.
    
-spec validate_person(my_rec()) -> true | false. #%Function specification for validating a person
validate_person(#my_rec{id = I, name = N, age = A}) when is_integer(I), is_binary(N), A >= 0 -> true; 
validate_person(_) -> false. #%Fallback clause to return false if person is not valid
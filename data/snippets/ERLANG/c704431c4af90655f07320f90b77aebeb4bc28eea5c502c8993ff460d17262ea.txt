%% This module defines a queue data structure
-module(queue).
-export([new/0, push/2, pop/1, is_empty/1]).

%% The queue is represented as a tuple of two lists, where 
%% the first list represents the front of the queue 
%% and the second list represents the back of the queue 
%% Note: We implement a FIFO (First-In-First-Out) queue
new() -> %% Create a new queue
    {[], []}.

push(Item, {Front, Back}) -> %% Add an item to the back of the queue
    {Front, [Item | Back]}.

pop({[Item | Front], Back}) -> %% Remove an item from the front of the queue and return it
    {Item, {Front, Back}};
pop({[], Back}) -> %% If the queue is empty, return {error, empty}
    {error, empty}.

is_empty({[], []}) -> %% Check if the queue is empty
    true;
is_empty(_) -> false. %% If the queue is not empty, return false
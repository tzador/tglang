-module(tree).

%% Define tree data structure
-record(tree, {value, left = nil, right = nil}).

%% Define function to insert a value into the tree
insert(Tree, Value) ->
    case Tree#tree.value < Value of
        true ->
            case Tree#tree.right of
                nil ->
                    Tree#tree{right = #tree{value = Value}};
                _ ->
                    insert(Tree#tree.right, Value)
            end;

        _ ->
            case Tree#tree.left of
                nil ->
                     Tree#tree{left = #tree{value = Value}};
                _ ->
                    insert(Tree#tree.left, Value)
            end
    end.

%% Function to find the height of the tree
height(Tree) ->
    case Tree of
        nil ->
            0;
        _ ->
            1 + max(height(Tree#tree.left), height(Tree#tree.right))
    end.

%% Function to check if a value is present in the tree
contains(Tree, Value) ->
    case Tree of 
        nil ->
            false;
        _ ->
            case Tree#tree.value =:= Value of
                true ->
                    true;
                _ ->
                    case Tree#tree.value < Value of
                        true ->
                            contains(Tree#tree.right, Value);
                        _ ->
                            contains(Tree#tree.left, Value)
                    end
            end
    end.
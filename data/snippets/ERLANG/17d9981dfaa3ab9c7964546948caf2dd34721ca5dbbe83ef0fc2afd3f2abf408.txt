%% Initialize a list of tuples
ItemList = [{apple, 5}, {banana, 4}, {orange, 3}, {grape, 6}, {peach, 2}],
%% Sort the list based on the second element in each tuple
SortedItemList = lists:sort(fun({_, A}, {_, B}) -> A < B end, ItemList),
%% Filter out items that have a quantity greater than 4
FilteredItemList = lists:filter(fun({_, X}) -> X =< 4 end, SortedItemList),
%% Calculate the total cost by multiplying the quantity with the cost of each item
TotalCost = lists:foldl(fun({Fruit, Quantity}, Acc) -> Acc + (Quantity * FruitCost), 0, FilteredItemList),
%% Print the sorted and filtered list
io:fwrite("Sorted and filtered list: ~p~n", [FilteredItemList]),
%% Print the total cost
io:fwrite("Total cost: ~p~n", [TotalCost]).
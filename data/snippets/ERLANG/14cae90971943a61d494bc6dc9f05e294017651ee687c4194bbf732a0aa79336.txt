-module(dictionary).
-export([init/0, insert/2, remove/1, lookup/1]).

% function to initialize an empty dictionary
init() ->
    dict:new().

insert(Key, Value) ->
    case dict:is_key(Key, D) of
        true ->
            {ok, D1} = dict:update(Key, Value, D),
            D1;
        false ->
            dict:store(Key, Value, D)
    end.

remove(Key) ->
    {ok, D1} = dict:erase(Key, D),
    D1.

lookup(Key) ->
    case dict:find(Key, D) of
        {ok, Value} ->
            Value;
        error ->
            "Key does not exist in dictionary."
    end.
-module(list_comprehension).
-export([main/0]).

% Declaration of a list of numbers
Numbers = [1, 2, 3, 4, 5, 6].

main() ->
    % List comprehension to double the numbers in the list Numbers
    DoubledNumbers = [Num * 2 || Num <- Numbers],
    % List comprehension to get only the even numbers from DoubledNumbers
    EvenNumbers = [Num || Num <- DoubledNumbers, Num rem 2 =:= 0],
    % Function call to sum the numbers in EvenNumbers list
    Sum = sum(EvenNumbers),
    % Printing the sum of even numbers
    io:format("The sum of even numbers is ~p.~n", [Sum]).

% Function to calculate sum of a list of numbers
sum(List) ->
    sum(List, 0).

sum([H|T], Acc) ->
    NewAcc = H + Acc,
    sum(T, NewAcc);

sum([], Acc) ->
    Acc.
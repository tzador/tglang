%%% Module declaration
-module(example).

%%% Exported functions
-export([main_function/1, helper_function/2]).

%%% Main function
main_function(List) ->

    %%% Recursion base case
    case List of
        [] ->
            %% Output base case
            io:format("List is empty, ending function.~n");
        [Head|Rest] ->
            %% Output recursion step
            io:format("Printing head of list: ~w~n", [Head]),
            
            %%% Call to helper function
            NewList = helper_function(Head, Rest),
            
            %%% Recursive call
            main_function(NewList)
    end.

%%% Helper function
helper_function(Head, List) ->
    case List of
        [] ->
            %% Output base case
            io:format("List is empty, ending helper function.~n"),
            
            %%% Return updated list
            [Head];
        [Next|Rest] ->
            %% Output recursion step
            io:format("Updating head of list: ~w to ~w~n", [Head, Next]),
            
            %%% Update head of list
            UpdatedList = [Next|List],
            
            %%% Tail recursive call
            helper_function(Head, Rest, UpdatedList)
    end.
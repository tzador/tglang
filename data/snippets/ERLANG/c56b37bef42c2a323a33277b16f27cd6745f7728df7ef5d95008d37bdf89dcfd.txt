% This function takes in a list of integers and returns the sum of all even numbers within the list
-module(sum_even).
-export([sum_even/1]).

% Function to recursively sum up all even numbers in a list
sum_even(List) ->
    case List of
        [] -> 0;  % Base case: if list is empty, return 0
        [Head|Tail] when Head rem 2 == 0 ->  % If head of list is even, add it to the sum from the tail of the list
            Head + sum_even(Tail);
        [_|Tail] -> sum_even(Tail)  % If head of list is odd, ignore it and continue with the tail of the list
    end.
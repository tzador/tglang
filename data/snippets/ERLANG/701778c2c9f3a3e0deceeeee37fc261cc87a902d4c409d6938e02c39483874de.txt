%%% The `user` module allows for user data to be stored and manipulated. 
-module(user).

%%% The `-export` statement allows these functions to be accessible by other modules.
-export([create_user/3, update_user/2, delete_user/1]).

%%% This function creates a new user with a unique ID and stores their data in a tuple.
create_user(Username, Email, Password) ->
    ID = #uuid{},
    User = {ID, Username, Email, Password},
    {ok, User}.

%%% This function allows for updating a user's information. 
%%% It takes in the user's ID and a list of key-value pairs to update.
update_user(ID, Data) ->
    case db:get(ID) of
        {ok, User} ->
            UpdatedUser = update_user(User, Data),
            db:put(ID, UpdatedUser);
        {error, _Reason} ->
            {error, not_found}
    end.

%%% This helper function updates the user's information based on the list of key-value pairs.
update_user(User, []) ->
    User;
update_user(User, [{_key,Value}|Rest]) ->
    UpdatedUser = set_value(User, _Key, Value),
    update_user(UpdatedUser, Rest).

%%% This function deletes a user based on their ID.
delete_user(ID) ->
    db:delete(ID).
-module(example). %Defines a module called 'example'
-compile(export_all). %Compiles all functions for external use

%Function that finds the maximum value in a list
maximum([H | T]) ->
    maximum(T, H). %Calls the maximum function with head of the list as the current maximum

maximum([], Max) -> %Base case, empty list
    Max; %Returns the maximum value found so far

maximum([H | T], Max) -> %Recursive case
    if
        H > Max ->
            maximum(T, H); % If head is greater than current maximum, call function again with new maximum
        true ->
            maximum(T, Max) %Else, call function again with current maximum
    end.

%Example call:
maximum([5, 3, 9, 2, 6, 1]). %Outputs 9 as the maximum value in the list
-module(mapreduce).

-export([map_reduce/2]).

%% map_reduce/2 takes a list and a function
%% and applies the function to every element in the list,
%% then reduces the list to a single value
map_reduce(List, Function) ->

%% First, map the list and apply the function to each element
    Results = lists:map(
        fun(Item) -> Function(Item) end,
        List
    ),
    
%% Then, reduce the list by summing all the results
    lists:foldl(
        fun(Elem, Acc) -> Elem + Acc end,
        0,
        Results
    ).
-module(my_module).
-author("John Doe").

-import(lists, [foldl/3, map/2]).

%% Public API functions
-export([add/2, subtract/2, multiply/2, divide/2]).

%% Adds two numbers
add(X, Y) ->
	R = X + Y,
	io:format("~p + ~p = ~p~n", [X, Y, R]),
	R.

%% Subtracts two numbers
subtract(X, Y) ->
	R = X - Y,
	io:format("~p - ~p = ~p~n", [X, Y, R]),
	R.

%% Multiplies two numbers
multiply(X, Y) ->
	R = X * Y,
	io:format("~p * ~p = ~p~n", [X, Y, R]),
	R.

%% Divides two numbers
divide(X, Y) when Y =/= 0 ->
	R = X / Y,
	io:format("~p / ~p = ~p~n", [X, Y, R]),
	R;
divide(_, _) ->
	io:format("Error: Divisor cannot be 0.~n"),
	throw({error, divide_by_zero}).

%% Example usage:
%% my_module:add(5, 3).
%% Output: 5 + 3 = 8

%% my_module:subtract(10, 4).
%% Output: 10 - 4 = 6

%% my_module:multiply(2, 5).
%% Output: 2 * 5 = 10

%% my_module:divide(15, 3).
%% Output: 15 / 3 = 5

%% my_module:divide(5, 0).
%% Output: Error: Divisor cannot be 0.
%% {error, divide_by_zero}
-module(counter).
-export([start/0, increment/1, decrement/1, get_count/0]).

%% Defines a counter process with its initial state
start() ->
    spawn(fun() -> loop(0) end).

%% Handles the incrementing of the counter
increment(Count) ->
    Count + 1.

%% Handles the decrementing of the counter
decrement(Count) ->
    Count - 1.

%% Gets the current count of the counter
get_count() ->
    Count.

%% Defines the loop function that continuously handles messages sent to the process
loop(Count) ->
    receive
        {increment} ->
            NewCount = increment(Count),  %% calls the increment function to increment the counter
            loop(NewCount);               %% recursively calls the loop function with the new count
        {decrement} ->
            NewCount = decrement(Count),  %% calls the decrement function to decrement the counter
            loop(NewCount);
        {get_count, Pid} ->
            Pid ! Count,                  %% sends the count to the process that requested it
            loop(Count);                   %% recursively calls the loop function with the same count
        _ ->
            loop(Count)                    %% if the message received is not recognized, recursively calls the loop function with the same count
    end.
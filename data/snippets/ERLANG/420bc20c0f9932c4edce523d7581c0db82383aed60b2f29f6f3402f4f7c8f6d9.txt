%% Module definition
-module(example).

%% Exported functions
-export([init/1, func1/2, func2/2]).

%% Callback functions
-callback init(any()) -> any().
-callback terminate(any(), any()) -> any().
-callback handle_call(any(), any(), any()) -> any().
-callback handle_cast(any(), any()) -> any().
-callback handle_info(any(), any()) -> any().
-callback code_change(any(), any(), any()) -> any().

%% Record definition
-record(state, {
  name :: string(),
  age :: non_neg_integer(),
  email :: string()
}).

%% Module attributes
-compile(export_all).

%% Function definitions
%% Initializes the state record with the given name and age
init(Name, Age) ->
  #state{name = Name, age = Age, email = ""}.

%% Updates the state record with the given email
func1(Email, State) ->
  Stats = State#state{email = Email},
  {ok, Stats, State}.

%% Prints out the state record in a user-friendly format
func2(Info, State) ->
  <<"Name: ", State#state.name/binary,
    "\nAge: ", State#state.age/binary,
    "\nEmail: ", State#state.email/binary,
    "\nInfo: ", Info/binary>>.
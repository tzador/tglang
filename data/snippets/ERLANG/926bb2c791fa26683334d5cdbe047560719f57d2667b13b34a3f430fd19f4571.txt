-module(my_module). % Defines a module in Erlang

-export([add/2, multiply/2, divide/2]). % Specifies exported functions

add(Number1, Number2) -> % Defines an add function with 2 parameters
    Number1 + Number2. % Returns the sum of the two numbers

multiply(Number1, Number2) -> % Defines a multiply function with 2 parameters
    Number1 * Number2. % Returns the product of the two numbers

divide(Number1, Number2) when Number2 =/= 0 -> % Defines a divide function with 2 parameters and a guard statement
    Number1 / Number2. % Returns the quotient of the two numbers as long as Number2 is not equal to 0

divide(_, 0) -> % Handles the case where Number2 is equal to 0
    io:format("Cannot divide by 0"). % Prints an error message

%% Example usage:
%%
%% my_module:add(2, 3). % Returns 5
%% my_module:multiply(4, 5). % Returns 20
%% my_module:divide(10, 0). % Prints "Cannot divide by 0"
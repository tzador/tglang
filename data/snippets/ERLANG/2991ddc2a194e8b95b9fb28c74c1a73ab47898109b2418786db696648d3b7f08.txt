%%% This module implements a function to check if a list is symmetric.
-module(symmetric).

-export([is_symmetric/1]).

%% Function to check if a list is symmetric
%% Input:
%%      List - a list of elements
%% Output:
%%      true if the list is symmetric or an empty list, else false
is_symmetric(List) ->
    is_symmetric(List, []).

%% Helper function with an accumulator variable
%% Input:
%%      List - a list of elements to compare
%%      Acc - accumulator variable which stores the reversed list
%% Output:
%%      true if the list is symmetric or an empty list, else false
is_symmetric([], Acc) ->
    List =:= lists:reverse(Acc);
is_symmetric([X], Acc) ->
    [X] =:= lists:reverse(Acc);
is_symmetric([H|T], Acc) ->
    is_symmetric(T, [H|Acc]).

%% Example:
is_symmetric([1,2,3,2,1]).
%% Output: true
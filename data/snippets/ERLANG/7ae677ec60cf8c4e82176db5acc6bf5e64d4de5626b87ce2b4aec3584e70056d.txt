%% This is a function that takes in a list of integers
%% and returns a new list with all even numbers doubled.
%%
%% Example:
%%
%% Input: [1,2,3,4]
%% Output: [1,4,3,8]

double_evens(List) ->
    double_evens(List, []). % Call the helper function with empty list as accumulator

double_evens([H|T], Acc) -> % Pattern matching on the input list
    case H rem 2 of % Condition to check if number is even
        0 -> % If even
            double_evens(T, [H*2|Acc]); % Add double of even number to accumulator list and continue
        _ -> % If odd
            double_evens(T, [H|Acc]) % Add the odd number as it is to accumulator list and continue
    end;

double_evens([], Acc) -> % Base case when input list is empty
    lists:reverse(Acc). % Return the reversed accumulator list as output
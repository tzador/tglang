-module(currency_converter). % Defines the name of the module

-export([convert/2]). % Defines the function to be exported and its parameters

% Function to convert currencies
convert(Amount, Currency) ->
    case Currency of % Begins a case expression to handle different currencies
        usd -> io:fwrite("Amount in USD: ~p~n", [Amount * 1.17]); % Converts to USD by multiplying by current EUR to USD exchange rate
        gbp -> io:fwrite("Amount in GBP: ~p~n", [Amount * 0.90]); % Converts to GBP by multiplying by current EUR to GBP exchange rate
        cad -> io:fwrite("Amount in CAD: ~p~n", [Amount * 1.49]); % Converts to CAD by multiplying by current EUR to CAD exchange rate
        _ -> "Currency not supported" % Handles the case where an unsupported currency is inputted
    end.
    
% Example usage:
currency_converter:convert(100, usd). % Outputs "Amount in USD: 117.0"
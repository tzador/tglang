-module(my_module). %% defines the module name

-export([my_function/1]). %% exports the function

my_function(Value) -> %% defines the function with one argument
    case Value of %% pattern matching for different values
        0 -> ok; %% if value is 0, return the atom `ok`
        _ -> loop(Value) %% for any other value, call the `loop` function with the value as argument
    end.

loop(Value) ->
    io:format("The current value is: ~p~n", [Value]), %% prints the current value to the console
    NewValue = Value + 1, %% assigns a new value to `NewValue`
    loop(NewValue). %% calls the `loop` function again with the new value as argument
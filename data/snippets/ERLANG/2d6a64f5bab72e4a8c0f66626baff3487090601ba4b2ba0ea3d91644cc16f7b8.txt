%%% This is a comment in the Erlang programming language
-module(example).  %%% Modules are containers for functions and variables

-export([function/1]). %%% Exported functions are accessible outside the module

%%% Defining a recursive function that calculates the factorial of a given number
function(0) ->  %%% Base case when number is 0
    1;
function(N) -> %%% Recursive case
    N * function(N - 1).   %%% Recursive call

%%% Defining a function that takes in a list of numbers and returns the sum of the list
calculate_sum(List) ->
    Sum = 0,    %%% Initializing a variable to hold the sum
    lists:foreach(      %%% Using the lists module to iterate through the list
        fun(X) -> Sum = Sum + X end,   %%% Adding each element to the sum
        List    %%% Passing in the list as an argument
    ),
    Sum.    %%% Returning the final sum
-module(search).
-export([binary_search/2]).

%% The binary_search function takes in a sorted list and a target element
%% and returns the index of the element in the list if found or -1 if not found.
-spec binary_search([any()], any()) -> integer() | -1.
binary_search(List, Element) ->
    binary_search(List, Element, 1, length(List)).

%% Helper function that performs the actual binary search algorithm.
%% Takes in the list, element, start and end index as arguments.
binary_search(List, Element, Start, End) when Start =< End ->
    Mid = (Start + End) div 2,
    case lists:nth(Mid, List) of
        Element -> Mid;
        _ ->
            if lists:nth(Mid, List) < Element ->
                %% If the element is greater than the current middle element,
                %% search in the second half of the list.
                binary_search(List, Element, Mid+1, End);
            true ->
                %% If the element is less than the current middle element,
                %% search in the first half of the list.
                binary_search(List, Element, Start, Mid-1)
            end
    end;
binary_search(_List, _Element, _Start, _End) ->
    %% If the element is not found in the list, return -1.
    -1.
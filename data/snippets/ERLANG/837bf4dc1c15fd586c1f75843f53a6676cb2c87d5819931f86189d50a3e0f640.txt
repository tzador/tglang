-module(simple_server). % creates a module in ERLANG 
-export([start_server/0]). % specifies the functions exported from the module

%% start_server function that spawns a new process for each request
%% and returns a response

start_server() -> 
	{ok, Listen} = gen_tcp:listen(5000, [reuseaddr, {active, false}]), % create a TCP server that listens on port 5000
	loop(Listen).

%% loop function handles incoming client requests and sends back a response

loop(Listen) ->
	{ok, Socket} = gen_tcp:accept(Listen), % accept a client connection
	receive
		{tcp, Socket, Data} -> % when data is received from the client
			gen_tcp:send(Socket, Data),
			loop(Listen) % continue listening for requests
	after 5000 ->
			gen_tcp:close(Socket), % close the socket if no data is received for 5 seconds
			loop(Listen) % continue listening for requests
	end.
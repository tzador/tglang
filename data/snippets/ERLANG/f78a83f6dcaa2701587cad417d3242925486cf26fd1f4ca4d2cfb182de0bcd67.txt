-module(my_module).
-export([my_function/1]).

%% This is a comment
my_function(Arg) ->
    %% A local variable
    Var = Arg * 2,
    {_, _, _} = {1, 2, 3},
    case Var of
        %% Matching patterns
        2 -> match(Var);
        4 -> {Var, Var + 1};
        _ -> default_value
    end.

%% Another function
match(Value) ->
    %% Pattern matching
    {Val1, Val2} = {Value - 1, Value + 1},
    %% A list comprehension
    [X || X <- [1, 2, 3, 4, 5], X < Value],
    %% A guard
    Val1 when Val1 < Value -> Val1;
    _ -> Val2.
%% Implementing a binary search algorithm in Erlang

-module(binary_search).

%% Function that performs the binary search
binary_search(List, Element) ->
    binary_search(List, Element, 1, length(List)).

%% Recursive function that searches for the element
binary_search(List, Element, Low, High) when Low =< High ->
    Middle = (Low + High) div 2, %% Calculating the middle index
    case lists:nth(Middle, List) of %% Checking if the middle element is equal to the element we're searching for
        Element -> Middle; %% If it is, return the index
        _ -> %% If not, check which half the element could potentially be in and recursively call the function again
            if
                lists:nth(Middle, List) < Element ->
                    binary_search(List, Element, Middle + 1, High);
                _ ->
                    binary_search(List, Element, Low, Middle - 1)
            end
    end;
binary_search(_, _, _, _) -> %% If the element is not found, return -1
    -1.
-module(example). % defines a module named 'example'
-export([function/1]). % exports the function 'function' with 1 argument

function(X) -> % creates a function 'function' that takes in a single argument
    case X of % starts a pattern matching statement
        true -> io:format("The argument is true."); % if argument is true, print message
        {error, Reason} -> error_logger:error_msg("An error occurred: ~p~n", [Reason]); % if argument is an error tuple, log error message
        _ -> io:format("Invalid argument.") % if argument is anything else, print invalid argument message
    end. % ends the case statement
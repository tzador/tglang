-module(my_module). % define a module
-export([my_func/2]). % export a function

%% define a function with two parameters
my_func(Param1, Param2) ->
	%% define a local variable
	Var = Param1 + Param2,

	%% call another function
	Result = my_other_func(Var),

	%% use pattern matching to check for specific values
	case Result of
		% base case
		0 ->
			io:format("Result is 0"); % print to console
			
		% another case
		Value when is_integer(Value) ->
			io:format("Result is an integer"); % print to console
			
		% default case
		_ ->
			io:format("Result is not 0 or an integer") % print to console
	end.

% define a second function to be called within first function
my_other_func(Var) ->
	%% calculate the square of a number
	Squared = Var * Var,

	%% return the squared number
	Squared.
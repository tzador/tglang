%% This is a module that performs matrix multiplication
-module(matrix).
%% Export the functions
-export([multiply/2]).
%% Define the multiply function to take in two matrices and return the product
multiply(X, Y) ->
    %% First check if the number of columns in X is equal to the number of rows in Y
    case length(X) == length(hd(Y)) of
        true ->
            %% If they are equal, obtain the number of rows and columns in X and Y
            R1 = length(X),
            C1 = length(hd(X)),
            R2 = length(Y),
            C2 = length(hd(Y)),
            %% Create an empty matrix with R1 rows and C2 columns
            Result = lists:duplicate(R1, lists:duplicate(C2, 0)),
            %% Iterate through each position in the matrix
            foreach(fun(Row) ->
                foreach(fun(Col) ->
                    %% Multiply the corresponding elements in X and Y
                    Result1 = lists:zipwith(fun(A,B) -> A * B end, lists:nth(Row, X), lists:nth(Col, lists:transpose(Y))),
                    %% Sum the elements in the resulting list and assign it to the corresponding position in the result matrix
                    lists:nth(Row, Result, lists:nth(Col, Result1, fun(A,B) -> A + B end)),
                end, lists:seq(1, C2)),
            end, lists:seq(1, R1)),
            %% Return the resulting matrix
            Result;
        false ->
            %% If the number of columns in X is not equal to the number of rows in Y, return an error message
            {"ERROR! Number of columns in X does not match number of rows in Y"}
    end.
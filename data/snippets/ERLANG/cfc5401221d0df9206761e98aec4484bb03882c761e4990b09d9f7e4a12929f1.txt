% Module definition
-module(module_name).

% Exported functions for public use
-export([func/1]).

% Function definition with pattern matching
func(Value) when is_integer(Value) ->
    % Logic to handle integer values
    Result = Value * 2,
    io:format("The result is ~p~n", [Result]);
func(Value) when is_float(Value) ->
    % Logic to handle float values
    Result = Value / 2,
    io:format("The result is ~p~n", [Result]);
func(Value) ->
    % Default case
    io:format("Invalid input: ~p~n", [Value]).

% Function call with different input types
module_name:func(2). % Result: The result is 4
module_name:func(3.5). % Result: The result is 1.75
module_name:func("test"). % Result: Invalid input: "test"
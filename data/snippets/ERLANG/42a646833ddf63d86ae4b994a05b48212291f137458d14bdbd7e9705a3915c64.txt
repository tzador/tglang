-module(math_utils).
%% This module provides functions for various mathematical operations

-export([fibonacci/1, factorial/1, power/2]).
%% List of functions exported by the module

%% Function for calculating the nth Fibonacci number
fibonacci(0) -> 0;
fibonacci(1) -> 1;
fibonacci(N) when N > 1 ->
    fibonacci(N - 1) + fibonacci(N - 2).

%% Function for calculating the factorial of a number
factorial(0) -> 1;
factorial(N) when N > 0->
    N * factorial(N - 1).

%% Function for calculating the power of a number
power(_, 0) -> 1;
power(X, Y) ->
    X * power(X, Y - 1).

%% Tests for the functions
-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").

%% Test for fibonacci function
fibonacci_test() ->
    ?assertEqual(0, fibonacci(0)),
    ?assertEqual(1, fibonacci(1)),
    ?assertEqual(34, fibonacci(9)).

%% Test for factorial function
factorial_test() ->
    ?assertEqual(1, factorial(0)),
    ?assertEqual(120, factorial(5)),
    ?assertEqual(3628800, factorial(10)).

%% Test for power function
power_test() ->
    ?assertEqual(8, power(2, 3)),
    ?assertEqual(16, power(4, 2)),
    ?assertEqual(1024, power(2, 10)).
-endif.
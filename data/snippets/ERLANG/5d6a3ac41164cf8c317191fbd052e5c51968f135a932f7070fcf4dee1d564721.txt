-module(math_ops). %% defining a module

-export([add/2, sub/2, mult/2]). %% exporting functions

-spec add(number(), number()) -> number() | {error, string()}. %% defining the specification for function add
add(A, B) ->
    case is_number(A) of
        true -> case is_number(B) of %% using nested case statements to handle errors
                    true -> A + B;
                    _ -> {error, "B is not a number"}
                end;
        _ -> {error, "A is not a number"}
    end.

-spec sub(number(), number()) -> number() | {error, string()}. %% defining the specification for function sub
sub(A, B) ->
    case is_number(A) of
        true -> case is_number(B) of
                    true -> A - B;
                    _ -> {error, "B is not a number"}
                end;
        _ -> {error, "A is not a number"}
    end.

-spec mult(number(), number()) -> number() | {error, string()}. %% defining the specification for function mult
mult(A, B) ->
    case is_number(A) of
        true -> case is_number(B) of
                    true -> A * B;
                    _ -> {error, "B is not a number"}
                end;
        _ -> {error, "A is not a number"}
    end.
%% This is a function that takes in two integers and returns the sum of their squares.
%% It uses recursion to calculate the squares and then adds them together.

-module(squares).
-export([sum_of_squares/2]).

%% Function to calculate the square of a given integer
square(0) -> 0; 
square(X) -> X * X.

%% Function to calculate the sum of squares using recursion
sum_of_squares(A,B) ->
    % Base case
    % If both integers are 0, return 0
    sum_of_squares(0,0) -> 0;
    % If one integer is 0, return the square of the other integer
    sum_of_squares(0,B) -> square(B);
    sum_of_squares(A,0) -> square(A);
    % If both integers are not 0, calculate the square of each integer and add them together
    sum_of_squares(A,B) -> square(A) + square(B).

%%% Example usage:
%%% squares:sum_of_squares(4,5) --> 41
%%% squares:sum_of_squares(2,3) --> 13
%%% squares:sum_of_squares(0,0) --> 0
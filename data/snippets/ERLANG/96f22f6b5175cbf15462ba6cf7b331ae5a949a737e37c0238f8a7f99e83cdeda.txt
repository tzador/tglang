%% This module defines functions for manipulating queues.
-module(queue).

%% Exports
-export([new/0, push/2, pop/1, is_empty/1, size/1]).

%% Internal state defined as a tuple with elements: Head, Tail, Size
-type queue() :: {list(), list(), non_neg_integer()}.

%% External state defined as a record with fields: head, tail, size
-record(ext_queue, {head :: list(), tail :: list(), size :: non_neg_integer()}).

%% new() -> queue()
%% Returns a new empty queue.
new() -> {[], [], 0}.

%% push(Item, Queue) -> Queue
%% Adds an item to the end of the queue.
push(Item, {Head, Tail, Size}) ->
    {[Item | Head], Tail, Size + 1}.

%% pop(Queue) -> {Item, Queue}
%% Removes the first item from the front of the queue and returns it along with the updated queue.
%% Raises the error "empty_queue" if the queue is empty.
pop({[Item | NewHead], Tail, Size}) ->
    {{ok, Item}, {NewHead, Tail, Size - 1}};
pop({[], _, _}) ->
    {error, empty_queue}.

%% is_empty(Queue) -> boolean()
%% Returns true if the queue is empty, false otherwise.
is_empty({[], _, _}) ->
    true;
is_empty({_, _, _}) ->
    false.

%% size(Queue) -> integer()
%% Returns the size of the queue.
size({_, _, Size}) ->
    Size.
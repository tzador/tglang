-module(math_functions).
-export([factorial/1, square_root/1]).

%% Calculating factorial of a number using recursion
%% @param Num The number whose factorial is to be calculated
%% @return The factorial of Num
factorial(Num) ->
    if
        Num == 0 ->
            1;
        true ->
            Num * factorial(Num - 1)
    end.

%% Calculating square root of a number using Newton's method
%% @param Num The number whose square root is to be calculated
%% @return The square root of Num
square_root(Num) ->
    square_root(Num, Num / 2).

%% Helper function for calculating square root
%% @param Num The number whose square root is to be calculated
%% @param Approx The initial guess for the square root of Num
%% @return The square root of Num
square_root(Num, Approx) ->
    New_Approx = (Approx + Num / Approx) / 2,
    if
        abs(New_Approx - Approx) < 0.0001 ->
            New_Approx;
        true ->
            square_root(Num, New_Approx)
    end.
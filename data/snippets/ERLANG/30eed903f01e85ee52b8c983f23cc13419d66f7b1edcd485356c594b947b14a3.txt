-module(test).
-export([fib/1]).
 
%% fibonacci function that takes in an integer and returns a list of numbers
%% representing the first n fibonacci numbers
fib(N) ->
    %% bind the empty list to the variable 'Result'
   Result = [],
   %% pattern match to check for valid input (positive integer or 0)
   case N of
      0 -> [];
      1 -> [0];
      2 -> [0,1];
      %% recursion to generate fibonacci numbers
      N when N > 2-> 
            %% helper function to perform the recursion
           F = fun(1,0,1) -> [];
                  (Count, A, B) when Count =< N -> [A | F(Count+1, B, A+B)];
                  (Count, _, _) -> [A]
                end,
                %% call the helper function and append the result to the empty list
           Result ++ F(3, 0, 1)
  end.

  %% example call: test:fib(5) would return [0,1,1,2,3]
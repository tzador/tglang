-module(math). % define module

-export([fib/1, fact/1]). % export functions

fib(0) -> 0; % base case
fib(1) -> 1; % base case
fib(N) when N > 1 -> % recursive case
  fib(N - 1) + fib(N - 2).

fact(0) -> 1; % base case
fact(N) when N > 0 -> % recursive case
  N * fact(N - 1).

%% test cases
assertEqual(fib(0), 0).
assertEqual(fib(1), 1).
assertEqual(fib(5), 5).
assertEqual(fib(10), 55).
assertEqual(fact(0), 1).
assertEqual(fact(1), 1).
assertEqual(fact(5), 120).
assertEqual(fact(10), 362880).
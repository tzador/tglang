%% This module creates a car record and defines functions for manipulating its properties

-module(car). %% creates a module named "car"

-export([create_car/3, get_make/1, set_year/2, change_model/2, update_color/2]).

%% define the car record structure with fields "make", "model", "year", and "color"
-record(car, {make, model, year, color}).

%% function that creates a car record with given values for its properties
%% @param Make, a string representing the make of the car
%% @param Model, a string representing the model of the car
%% @param Year, an integer representing the year of the car
%% @returns a record of type car
create_car(Make, Model, Year) ->
    #car{make = Make, model = Model, year = Year, color = undefined}.

%% function that retrieves the make of a given car record
%% @param Car, a record of type car
%% @returns the make of the car as a string
get_make(Car) ->
    Car#car.make.

%% function that sets the year of a given car record
%% @param Car, a record of type car
%% @param Year, an integer representing the new year of the car
%% @returns a new car record with the updated year
set_year(Car, Year) ->
    Car#car{year = Year}.

%% function that changes the model of a given car record
%% @param Car, a record of type car
%% @param Model, a string representing the new model of the car
%% @returns a new car record with the updated model
change_model(Car, Model) ->
    Car#car{model = Model}.

%% function that updates the color of a given car record
%% @param Car, a record of type car
%% @param Color, a string representing the new color of the car
%% @returns a new car record with the updated color
update_color(Car, Color) ->
    Car#car{color = Color}.
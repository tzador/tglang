-module(math_operations). % defines the ERLANG module

-export([add/2, multiply/2]). % exports the add and multiply functions

-spec add(integer(), integer()) -> integer(). % type specification for the add function
add(A, B) -> A + B. % defines the add function which adds two integers and returns an integer

-spec multiply(integer(), integer()) -> integer(). % type specification for the multiply function
multiply(A, B) -> A * B. % defines the multiply function which multiplies two integers and returns an integer

%%% Tests %%%

-ifdef(TEST). % defines a conditional for testing
-include_lib("eunit/include/eunit.hrl"). % includes the EUnit library for testing

add_test() ->
    ?assertEqual(4, add(2, 2)), % asserts that the output of add(2, 2) is equal to 4
    ?assertEqual(10, add(5, 5)). % asserts that the output of add(5, 5) is equal to 10

multiply_test() ->
    ?assertEqual(6, multiply(2, 3)), % asserts that the output of multiply(2, 3) is equal to 6
    ?assertEqual(25, multiply(5, 5)). % asserts that the output of multiply(5, 5) is equal to 25

-endif. % ends the conditional for testing
%% This is a module that implements a simple server and client communication using sockets

-module(socket).

-export([start_server/1, start_client/2]).

%% Start the server and listen for incoming connections 
start_server(Port) ->
    {ok, Listen} = gen_tcp:listen(Port, [{active, false}, {reuseaddr, true}]),
    {ok, Socket} = gen_tcp:accept(Listen),
    loop(Socket).

%% Start the client and connect it to the server
start_client(Host, Port) ->
    {ok, Socket} = gen_tcp:connect(Host, Port, [{active, false}]),
    socket:send(Socket, "Hello server!").

%% Loop through incoming messages from the client
loop(Socket) ->
    receive
        {tcp, Socket, Data} ->
            socket:send(Socket, "Received: " ++ Data),
            loop(Socket);
        {tcp_closed, Socket} ->
            ok
    end.

%% Send data to the client through the socket
send(Socket, Data) ->
    gen_tcp:send(Socket, Data).
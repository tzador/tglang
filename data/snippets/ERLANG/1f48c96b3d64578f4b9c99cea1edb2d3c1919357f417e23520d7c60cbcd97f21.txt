%%% Module Declaration %%%
-module(data_processing).

%%% Exported Functions %%%
-export([process_data/1]).

%%% Imported Libraries %%%
-import(lists, [sort/1, reverse/1]).

%%% Function Definitions %%%

%%% process_data/1 Function %%%
%% This function takes in a list of integers and processes it
%% by sorting the list in descending order and then
%% finding the average of the first and last elements in the list.
process_data(DataList) ->
  SortedList = sort(DataList),
  ReversedList = reverse(SortedList),
  FirstElem = hd(ReversedList),
  LastElem = lists:last(ReversedList),
  Average = (FirstElem + LastElem) / 2,
  io:format("The average of the first and last elements in the list is ~p~n", [Average]).
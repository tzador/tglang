% This code snippet defines a module named 'database'.

-module(database).

% Imports all functions from the 'lists' module.
-import(lists, [keydelete/2, foldl/3]).

% Exports the functions 'get' and 'put' for use in other modules.
-export([get/2, put/2]).

% Defines an internal variable named 'db', which is a list of tuples.
-db() -> [].

% Defines a function to get a value from the database given a key.
get(Key, Db) ->
    % Uses the foldl function to iterate through the database and find the corresponding value.
    foldl(fun ({K, V}, Acc) ->
        % Checks if the current key matches the key we are looking for.
        if K =:= Key ->
            % If it does, we return the value and stop iterating.
            {ok, V};
        true ->
            % If it doesn't, we continue iterating.
            Acc
        end
    end, undefined, Db).

% Defines a function to insert a new key-value pair into the database.
put(Key, Value) ->
    % Uses the keydelete function to make sure the key does not already exist in the database.
    NewDb = keydelete(Key, db()),
    % Adds the new key-value pair to the database.
    [{Key, Value} | NewDb].
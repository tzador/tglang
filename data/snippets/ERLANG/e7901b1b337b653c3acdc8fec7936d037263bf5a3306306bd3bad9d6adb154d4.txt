%% This module implements a function for determining if a given number is prime
-module(check_prime).

%% Exporting the check/1 function for external use
-export([check/1]).

%% Private function for checking if a number is divisible by any number from 2 to n-1
divisible(_, 1) -> false;
divisible(N, X) ->
    %% Check if n mod x is equal to 0 (n is divisible by x)
    if (N rem X) == 0 -> true;
       true -> divisible(N, X-1)
    end.

%% The main function for checking if a number is prime
%% *Note: a number is prime if it is only divisible by 1 and itself
check(N) ->
    %% Use the built-in erlang function 'is_integer' to check if input is an integer
    if is_integer(N) ->
       %% Base cases for 0, 1 (not prime) and 2 (prime)
       case N of
          0 -> false;
          1 -> false;
          2 -> true;
          _ ->
             %% Call the private 'divisible' function with n-1 as input
             divisible(N, N-1)
       end;
       %% If input is not an integer, return false
       true -> false
    end.
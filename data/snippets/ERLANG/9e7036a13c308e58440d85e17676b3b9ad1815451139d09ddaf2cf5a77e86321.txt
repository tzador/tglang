%%% This module defines functions for calculating prime numbers
-module(prime).

%%% Calculates the greatest common divisor of two numbers
%%% Takes in two integers and returns their gcd
%%% @param {Int} a - the first integer
%%% @param {Int} b - the second integer
%%% @returns - the gcd of the two numbers
gcd(a, b) ->
    %% Check if one of the numbers is equal to 0 as that would mean that the other number is the gcd
    if a == 0 -> b;
       b == 0 -> a;
    
    %% Check if both numbers are equal, in which case the gcd is just that number
       a == b -> a;
    
    %% Otherwise, use recursion to find the gcd of two smaller numbers
       true -> gcd(min(a, b), abs(a-b)).
       
%%% Checks if a given number is prime
%%% Takes in a positive integer and returns a boolean
%%% @param {Int} n - the number to check
%%% @returns - true if the number is prime, false otherwise
is_prime(n) ->
    %% Ensure that the number is greater than 1
    if n > 1 -> is_prime_helper(n-1, n);
       true -> false.
       
%%% Helper function for is_prime
%%% Uses recursion to check if a given number is divisible by any number less than it
%%% @param {Int} n - the number to check
%%% @param {Int} divisor - the current divisor
%%% @returns - true if the number is not divisible by any number less than it, false otherwise
is_prime_helper(n, divisor) ->
    %% Check if the current divisor is equal to 1, which would mean that the number is prime
    if divisor == 1 -> true;
    
    %% Check if the current divisor is a factor of the given number, in which case it is not prime
       n rem divisor == 0 -> false;
    
    %% Otherwise, use recursion to check the next smaller divisor
       true -> is_prime_helper(n, divisor-1).
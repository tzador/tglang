-module(barbarian).

%% Behaviour export
-behaviour(gen_server).

%% API exports
-export([start_link/1]).

%% GenServer callbacks
-export([init/1, handle_call/3, handle_cast/2, handle_info/2, terminate/2, code_change/3]).

%% Internal states
-record(state, {hp = 100, attack = 20, defense = 15}).

%% Start link function
start_link(Name) ->
    gen_server:start_link({local, Name}, ?MODULE, [], []).

%% Initalization callback
init([]) ->
    {ok, #state{}}.

%% Call handler callback
handle_call(attack, _From, State) ->
    NewState = attack(State),
    {reply, attack_successful, NewState};
    
handle_call(receive_damage, _From, State) ->
    NewState = receive_damage(State),
    {reply, damage_received, NewState}.

%% Cast handler callback
handle_cast(heal, State) ->
    NewState = heal(State),
    {noreply, NewState}.

%% Info handler callback
handle_info(_Info, State) ->
    {noreply, State}.

%% Termination callback
terminate(_Reason, _State) ->
    ok.

%% Code change callback
code_change(_OldVsn, State, _Extra) ->
    {ok, State}.

%% Internal functions
attack(#state{hp = HP, attack = Attack, defense = Defense} = State) ->
    NewHP = HP - (Attack - Defense),
    State#state{hp = NewHP}.

receive_damage(#state{hp = HP} = State) ->
    NewHP = HP - 10,
    State#state{hp = NewHP}.

heal(#state{hp = HP} = State) ->
    NewHP = HP + 10,
    State#state{hp = NewHP}.
%% This function calculates the sum of the squares of all the even numbers
%% in a list using recursion
-module(sum_of_squares).
-export([sum_of_squares/1]).

%% Helper function to check for even numbers
%% `_check_even(Number)` returns `true` if `Number` is even and `false` otherwise
_check_even(X) ->
  if
    X rem 2 =:= 0 ->
      true;
    true ->
      false
  end.

%% Recursive function to calculate the sum of squares
%% `sum_of_squares(List)` returns the sum of squares of all even numbers in `List`
sum_of_squares([]) ->  %% Base case: empty list
  0;
sum_of_squares([Head | Tail]) ->  %% Recursive case: non-empty list
  if
    _check_even(Head) ->
      (Head * Head) + sum_of_squares(Tail);  %% Include square of current number and recur on remaining list
    true ->
      sum_of_squares(Tail)  %% Ignore current number and recur on remaining list
  end.
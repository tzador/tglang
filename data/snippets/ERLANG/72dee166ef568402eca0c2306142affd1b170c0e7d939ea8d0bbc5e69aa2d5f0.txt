%% This module implements a function for calculating Fibonacci sequence up to N

-module(fibonacci).

%% exports the 'fib' function
-export([fib/1]).

%% the 'fib' function takes in an integer and returns a list of Fibonacci numbers up to that integer
fib(N) ->
    append_nums(lists:seq(1, N), init_list()).

%% helper function for generating the sequence
append_nums([], _Seq) -> [];
append_nums([H|T], []) -> H;
append_nums(List, [_]) -> List;
append_nums([H|T], [Prev1|[Prev2|Acc]]) when is_integer(Prev1) and is_integer(Prev2) ->
    [H + Prev1 + Prev2 | append_nums(T, [Prev2|[Prev1 + Prev2]])].

%% initializes the accumulator with the first two values of the sequence
init_list() -> [1, 1].
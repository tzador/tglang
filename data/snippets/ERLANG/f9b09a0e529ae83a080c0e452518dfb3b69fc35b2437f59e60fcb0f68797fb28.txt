%% Module definition
-module(turtle).
%% Exported functions
-export([init/0, move/2, turn/1, pen_up/0, pen_down/0]).
%% Internal state
-record(state, {x, y, angle, pen}).

%% Function to initialize turtle
init() ->
    #state{x = 0, y = 0, angle = 0, pen = down}.

%% Function to move turtle forward
%% @param State - current state of the turtle
%% @param Distance - distance to move forward
%% @return NewState - new state of the turtle after movement
move(State = #state{x = X, y = Y, angle = Angle, pen = Pen}, Distance) ->
    NewX = X + Distance * math:cos(Angle),
    NewY = Y + Distance * math:sin(Angle),
    NewState = #state{x = NewX, y = NewY, angle = Angle, pen = Pen},
    NewState.

%% Function to turn turtle
%% @param State - current state of the turtle
%% @param Angle - angle to turn the turtle
%% @return NewState - new state of the turtle after turning
turn(State = #state{x = X, y = Y, angle = Angle, pen = Pen}, Angle) ->
    NewAngle = Angle + Angle,
    NewState = #state{x = X, y = Y, angle = NewAngle, pen = Pen},
    NewState.

%% Function to lift pen
%% @return NewState - new state of the turtle with pen up
pen_up() ->
    NewState = #state{pen = up},
    NewState.

%% Function to put pen down
%% @return NewState - new state of the turtle with pen down
pen_down() ->
    NewState = #state{pen = down},
    NewState.
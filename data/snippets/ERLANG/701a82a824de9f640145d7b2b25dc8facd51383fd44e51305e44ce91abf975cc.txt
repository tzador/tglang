-module(example). %creates a module named 'example' 

-export([factorial/1]). %exports the function 'factorial' with one argument 

factorial(N) -> %defines the 'factorial' function with input argument N 
    factorial(N, 1). %calls 'factorial' with two arguments, N and 1 

factorial(N, Acc) when N > 0 -> %pattern match with guard 'when N > 0' 
    factorial(N-1, Acc*N); %recursively calls 'factorial' with new arguments 
factorial(0, Acc) -> Acc. %base case, returns accumulator
%% This is a comment in ERLANG code
-module(example). % defining the module

-export([start/0, add/2]). % exporting the 'start' and 'add' functions

start() -> % function definition for 'start'
    io:format("Hello, enter two numbers: "), % printing a message to console
    Num1 = io:get_line(""), % getting input from user and storing it in variable 'Num1'
    Num2 = io:get_line(""), % getting input from user and storing it in variable 'Num2'
    Sum = add(Num1, Num2), % calling the 'add' function with the two numbers as parameters and storing the result in 'Sum'
    io:format("The sum is ~w~n", [Sum]). % printing the result to console using a format string and the 'Sum' variable

add(Num1, Num2) -> % function definition for 'add', takes two parameters 'Num1' and 'Num2'
    Sum = Num1 + Num2, % adding the two numbers and storing the result in 'Sum'
    Sum. % returning the value of 'Sum' as the output of the function
    
%% Example usage:
%% > c(example). % compiling the module
%% {ok,example} % expected output
%% > example:start(). % calling the 'start' function
%% Hello, enter two numbers: 
%% 5.
%% 10.
%% The sum is 15 % expected output
-module(my_module). %% This is a module declaration in Erlang.
-behaviour(gen_server). %% This directive specifies the behaviour of the module.

%% This function is used to start the server.
start_link(Arg1, Arg2) ->
    gen_server:start_link({local, ?MODULE}, ?MODULE, [Arg1, Arg2], []).
    
%% Callback function for handling incoming requests.
handle_call({request, Arg}, _From, State) ->
    {reply, process_request(Arg, State), State};
    
%% Callback function for handling incoming messages.
handle_info(Message, State) ->
    {noreply, update_state(Message, State)}.

%% Function for processing requests.
process_request(Arg, State) ->
    % Some complex code here using Arg and State variables.
    Result = Arg + State,
    Result * 2.
    
%% Function for updating the state based on incoming messages.
update_state(Message, State) ->
    % Some complex code here using Message and State variables.
    NewState = case Message of
                    {add, Num} ->
                        State + Num;
                    {subtract, Num} ->
                        State - Num
                end,
    NewState.
    
%% Exporting the necessary functions.
-export([start_link/2, handle_call/3, handle_info/2]).
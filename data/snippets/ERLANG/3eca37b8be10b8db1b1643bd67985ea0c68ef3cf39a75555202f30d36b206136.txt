%% This module contains functions for generating Fibonacci series using tail recursion

-module(fibonacci).

%% Export the necessary functions from the module
-export([fib/1]).
-export([fib/2]).

%% The first function takes in the length of the Fibonacci series and prints the series
%% using tail recursion
fib(0) ->
    [];
fib(1) ->
    [0];
fib(2) ->
    [0, 1];
fib(N) when N > 2 ->
    fib(2, [0, 1], N).

%% The second function takes in the current count of the series, a list containing the
%% previous two numbers in the series, and the length of the series
%% Using tail recursion, it generates the series and adds the next number to the list
fib(Cnt, [H1, H2], N) when Cnt < N ->
    fib(Cnt+1, [H2, H1+H2], N, [H1+H2|[H2, H1+H2]]).

%% When the current count reaches the length of the series, the list is returned as the
%% Fibonacci series
fib(N, Series) ->
    Series.
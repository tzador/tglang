-module(my_module).  % Defines the name of the module

-export([my_function/1]).  % Specifies the function to be exported

my_function(Param) ->    % Defines the function, with one parameter
    [Head|Tail] = Param,    % Destructuring assignment
    case is_atom(Head) of   % Conditional statement
        true -> io:format("The head of the list is an atom");
        _ -> io:format("The head of the list is not an atom")
    end,
    NewList = lists:append(Head, Tail),   % Creates a new list by appending Head and Tail
    Result = lists:filter(fun(Elem) -> is_list(Elem) end, NewList),    % Filters the list based on a predicate
    [R1|R2] = Result,     % Destructuring assignment
    case is_list(R1) of   % Conditional statement
        true -> io:format("The first element in the filtered list is a list");
        _ -> io:format("The first element in the filtered list is not a list")
    end,
    io:format("Completed execution").   % Prints a message to the console
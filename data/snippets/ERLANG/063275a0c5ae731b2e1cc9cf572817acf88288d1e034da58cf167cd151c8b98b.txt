-module(user).
-export([
    start/0,
    init/0,
    state/0,
    add_user/2,
    get_user/1,
    delete_user/1]).

-record(user, {
    name = "",
    age = 0,
    height = 0,
    weight = 0
}).

%% Function to start the user module.
start() ->
    init().

%% Function to initialize the state of the user module.
init() ->
    ets:new(users, [ordered_set, named_table]),
    state().

%% Function to retrieve the current state of the user module.
state() ->
    ets:lookup(users, current_state).

%% Function to add a new user to the state.
%% Params:
%%     Name - The name of the user.
%%     Attributes - A list of attributes for the user, in the format [Age, Height, Weight].
add_user(Name, Attributes) ->
    User = #user{
        name = Name,
        age = lists:nth(1, Attributes),
        height = lists:nth(2, Attributes),
        weight = lists:nth(3, Attributes)
    },
    ets:insert(users, {Name, User}),
    state().

%% Function to retrieve a specific user by name.
%% Params:
%%     Name - The name of the user to retrieve.
get_user(Name) ->
    ets:lookup(users, Name).

%% Function to delete a user from the state.
%% Params:
%%     Name - The name of the user to delete.
delete_user(Name) ->
    ets:delete(users, Name),
    state().
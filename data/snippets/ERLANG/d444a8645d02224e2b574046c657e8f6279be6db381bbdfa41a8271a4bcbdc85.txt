%% This function takes in a list and performs a map operation on it
-module(map).
-export([map/2]).

-spec map([term()], [fun((term()) -> term())]) -> [term()].
%% Create a tail-recursive helper function
-spec map_acc([term()], [fun((term()) -> term())], [term()]) -> [term()].

%% If the input list is an empty list, return an empty list
map_acc([], _Mapper, Acc) ->
    Acc;

%% Otherwise, perform the map operation with the first element in the list
map_acc([X|Xs], Mapper, Acc) ->
    map_acc(Xs, Mapper, [Mapper(X)|Acc]).

%% This is the actual map function, using the map_acc helper function
map(List, Mapper) ->
    map_acc(List, Mapper, []).
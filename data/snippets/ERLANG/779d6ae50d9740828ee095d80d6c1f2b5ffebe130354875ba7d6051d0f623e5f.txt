%% This is a function that performs a binary search on a given sorted list
%% Returns the index of the searched item if found, else returns -1
binary_search(List, Item) ->
    % Initialize start and end index variables
    Start = 0,
    End = length(List) - 1,
    % Loop until the start and end index variables converge
    while Start =< End,
        % Calculate the mid index of the list
        Mid = (Start + End) div 2,
        % Check if the item is currently at the mid index
        case lists:nth(Mid, List) of
            Item -> % Item found, return the mid index
                {ok, Mid};
            Value when Value < Item -> % Item is in the second half of the list
                % Update the start index to the next index after mid
                Start = Mid + 1;
            Value when Value > Item -> % Item is in the first half of the list
                % Update the end index to the previous index before mid
                End = Mid - 1
        end
    end,
    % No match found, return -1
    {error, -1}.
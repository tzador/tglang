-module(example).
-compile(export_all).

%% Function to calculate the factorial of a number
factorial(N) ->
    factorial(N, 1).
factorial(0, Acc) ->
    Acc;
factorial(N, Acc) ->
    factorial(N-1, N * Acc).

%% Function to calculate the nth Fibonacci number
fibonacci(N) ->
    fibonacci(N, 0, 1).
fibonacci(0, _, B) ->
    B;
fibonacci(N, A, B) ->
    fibonacci(N-1, B, A + B).

%% Function to reverse a list
reverse(List) ->
    do_reverse(List, []).
do_reverse([], Acc) ->
    Acc;
do_reverse([H|T], Acc) ->
    do_reverse(T, [H|Acc]).

%% Function to check if a number is prime
is_prime(N) ->
    is_prime(N, 2).
is_prime(N, D) when N == D ->
    true;
is_prime(N, D) when N rem D == 0 ->
    false;
is_prime(N, D) ->
    is_prime(N, D + 1).
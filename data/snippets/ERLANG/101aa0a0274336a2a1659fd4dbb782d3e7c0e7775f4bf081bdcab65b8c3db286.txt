-module(math_functions).
-export([factorial/1, fibonacci/1]).
-record(fib, {n = 0, acc = 0, prev = 1}).

%% Factorial function using pattern matching
factorial(0) -> 1;
factorial(N) when N > 0 ->
    N * factorial(N-1).

%% Fibonacci function using record and tail recursion
fibonacci(N) -> fib(N, #fib{}).

%% Private tail-recursive function for calculating fibonacci number
%% Takes in current n and a record containing the previous two numbers
fib(0, #fib{n = N, acc = Acc, prev = Prev}) -> N;
fib(N, #fib{n = _, acc = Acc, prev = Prev}) ->
    #fib{n = N, acc = Acc+N, prev = Acc},
    fib(N-1, #fib{}).
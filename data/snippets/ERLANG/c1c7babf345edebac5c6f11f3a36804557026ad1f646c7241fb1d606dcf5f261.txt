%%% This module provides functions for manipulating and querying a binary search tree.
-module(binary_tree).
-export([empty/0, add/2, contains/2]).

%%% This function returns an empty binary tree.
%%% `ok` is used to represent an empty tree.
empty() ->
    ok.

%%% This function adds a new element to the binary tree.
%%% Parameters:
%%% `Element`: The element to be added.
%%% `Tree`: The binary tree to be updated.
add(Element, Tree) ->
    case Tree of
        ok -> {ok, {Element, ok, ok}};
        {ok, {Node, Left, Right}} ->
            if
                Element < Node ->
                    {ok, {Node, add(Element, Left), Right}};
                Element > Node ->
                    {ok, {Node, Left, add(Element, Right)}};
                true ->
                    Tree
            end
    end.

%%% This function checks if a given element is contained in the binary tree.
%%% Parameters:
%%% `Element`: The element to check for.
%%% `Tree`: The binary tree to search in.
contains(Element, Tree) ->
    case Tree of
        ok -> false;
        {ok, {Node, Left, _Right}} when Element < Node ->
            contains(Element, Left);
        {ok, {_Node, _Left, Right}} when Element > Node ->
            contains(Element, Right);
        {ok, {_Node, _Left, _Right}} when Element == Node ->
            true
    end.
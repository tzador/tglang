-module(banking). %% Defines the banking module

%% External APIs for the banking module
-export([
    initialize/0,
    withdraw/1,
    deposit/1,
    get_balance/0
]).

%% Internal API for storing balance
-export([
    set_balance/1, 
    get_internal_balance/0
]).

%% Initializes the balance to 0 when the banking module is first called
initialize() ->
    set_balance(0).

%% Function for withdrawing money from the account
withdraw(Amount) ->
    CurrentBalance = get_internal_balance(),
    NewBalance = CurrentBalance - Amount,
    set_balance(NewBalance),
    io:format("Withdrawn ~p from account. New balance: ~p~n", [Amount, NewBalance]).

%% Function for depositing money into the account
deposit(Amount) ->
    CurrentBalance = get_internal_balance(),
    NewBalance = CurrentBalance + Amount,
    set_balance(NewBalance),
    io:format("Deposited ~p into account. New balance: ~p~n", [Amount, NewBalance]).

%% Function for retrieving the account balance
get_balance() ->
    Balance = get_internal_balance(),
    io:format("Current balance: ~p~n", [Balance]).

%% Internal function for setting the balance
set_balance(Balance) ->
    erlang:put(balance, Balance).

%% Internal function for retrieving the balance
get_internal_balance() ->
    case erlang:get(balance) of
        undefined -> 0;
        Balance -> Balance
    end.
%% A module that defines a function for calculating the factorial of an integer
-module(factorial).

%% Export the `factorial/1` function
-export([factorial/1]).

%% The `factorial/1` function takes in an integer `N` and returns its factorial
factorial(N) ->

    %% Define an accumulator variable `Acc` to store the running product
	Acc = 1,

	%% The recursive helper function `factorial_helper/2` takes in the current integer `N` and the accumulated product `Acc`
	factorial_helper(N, Acc).

%% The base case for the recursive helper function, returns the accumulated product when `N` reaches 0
factorial_helper(0, Acc) -> Acc;

%% The general case for the recursive helper function, multiplies `N` with the accumulated product and calls itself with `N-1`
factorial_helper(N, Acc) -> factorial_helper(N-1, N*Acc).
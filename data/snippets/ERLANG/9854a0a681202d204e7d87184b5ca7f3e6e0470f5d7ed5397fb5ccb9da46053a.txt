%% The following code snippets demonstrates a function in Erlang that recursively calculates the Fibonacci sequence.
%% The function takes in a positive integer 'n' and returns the nth number in the sequence.
%% It uses pattern matching to handle the base cases of 0 and 1, and uses tail recursion to improve efficiency.
-module(fibonacci). %% Defines the module name
-export([fibonacci/1]). %% Exports the 'fibonacci' function
 
%% This function takes a single parameter 'n' and returns the nth Fibonacci number
fibonacci(0) -> 0; %% Base case for 0
fibonacci(1) -> 1; %% Base case for 1
 
%% If 'n' is greater than 1, the function calls itself with 'n - 1' and 'n - 2'
fibonacci(n) -> fibonacci(n - 1) + fibonacci(n - 2).
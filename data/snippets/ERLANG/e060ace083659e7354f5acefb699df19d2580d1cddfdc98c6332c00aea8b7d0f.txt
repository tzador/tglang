-module(list_operations).

%% Defines and exports a function to check if a list is empty
-spec is_list_empty(List) -> boolean().
is_list_empty([]) -> true;
is_list_empty([_|_]) -> false.

%% Defines and exports a function to concatenate two lists
-spec concat(List1, List2) -> list().
concat([], L) -> L;
concat([H|T], L) -> [H|concat(T,L)].

%% Defines and exports a function to reverse a list
-spec reverse(List) -> list().
reverse(List) -> reverse(List, []).
reverse([], Acc) -> Acc;
reverse([H|T], Acc) -> reverse(T, [H|Acc]).

%% Defines and exports a function to check if a list contains an element
-spec contains(List, Element) -> boolean().
contains([], _) -> false;
contains([H|T], Element) ->
    case H == Element of
        true -> true;
        false -> contains(T, Element)
    end.
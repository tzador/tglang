%%% Set up a module for managing banking transactions
-module(banking_transactions).

%%% Export all functions in the module
-export([create_account/2, deposit/3, withdraw/3, get_balance/1]).

%%% Record definition for bank transactions
%%% Contains details such as account number, customer name, account balance
-record(bank_transaction, {account_no, customer_name, balance}).

%%% Function that creates a new bank account
%%% Takes in account number and customer name as parameters
create_account(AccountNo, CustomerName) ->
  #bank_transaction{account_no = AccountNo, customer_name = CustomerName, balance = 0}.

%%% Function that deposits an amount into a bank account
%%% Takes in account number, deposit amount, and the bank transaction record
%%% Returns the updated bank transaction record
deposit(AccountNo, Amount, BankTransaction) ->
  #bank_transaction{account_no = AccountNo,
                    customer_name = BankTransaction#bank_transaction.customer_name,
                    balance = BankTransaction#bank_transaction.balance + Amount}.

%%% Function that withdraws an amount from a bank account
%%% Takes in account number, withdrawal amount, and the bank transaction record
%%% Returns the updated bank transaction record
withdraw(AccountNo, Amount, BankTransaction) ->
  #bank_transaction{account_no = AccountNo,
                    customer_name = BankTransaction#bank_transaction.customer_name,
                    balance = BankTransaction#bank_transaction.balance - Amount}.

%%% Function that gets the current balance of a bank account
%%% Takes in the bank transaction record
%%% Returns the account balance
get_balance(BankTransaction) ->
  BankTransaction#bank_transaction.balance.

%%% End of module
%% This example shows how to build a module with multiple functions and use recursion to calculate the factorial of a number

-module(factorial).

%% Export the functions so they can be used outside the module
-export([fact/1, fact_helper/2]).

%% Function that calls the helper function to start the recursion
fact(N) ->
  fact_helper(N, 1).

%% Helper function that does the actual recursion
fact_helper(0, Acc) ->
  %% Base case: return the accumulator when N reaches 0
  Acc;
fact_helper(N, Acc) ->
  %% Recursive case: call the function with N-1 and update the accumulator
  fact_helper(N-1, N * Acc).
% This code snippet creates a module named "math" and defines several functions for basic mathematical operations in ERLANG

-module(math). % creates a module named "math"

-export([add/2, subtract/2, multiply/2, divide/2]). % exports the defined functions for use in other modules

add(A, B) -> % defines a function called "add" that takes in two arguments A and B
    A + B. % performs addition on the two arguments and returns the result

subtract(A, B) -> % defines a function called "subtract" that takes in two arguments A and B
    A - B. % performs subtraction on the two arguments and returns the result

multiply(A, B) -> % defines a function called "multiply" that takes in two arguments A and B
    A * B. % performs multiplication on the two arguments and returns the result

divide(A, B) ->
    case B of % starts a case statement with variable B as the input
        0 -> % checks if B is equal to 0
            {error, "Cannot divide by 0"}; % returns an error if B is equal to 0
        _ -> % matches any other value
            A / B % performs division on the two arguments and returns the result
    end. % ends the case statement

%% Example usage:
%% math:add(5, 3). % returns 8
%% math:subtract(10, 2). % returns 8
%% math:multiply(2, 3). % returns 6
%% math:divide(10, 2). % returns 5
%% math:divide(10, 0). % returns {error, "Cannot divide by 0"}
-module(sort).

-export([bubble_sort/1]).

%% Bubble Sort function that takes in a list of integers and returns a sorted list 
%% using the bubble sort algorithm
bubble_sort(List) ->
  case bubble(List, [], true) of
    NewList -> NewList
  end.

%% Helper function for bubble sort
bubble([H|T], Acc, has_swapped) ->
  case sort(H, T, Acc, false) of
    {Sorted, true} -> bubble(Sorted, [H|Acc], true);
    {Sorted, has_swapped} -> bubble(Sorted, [H|Acc], has_swapped);
    {Sorted, _} -> bubble(T, [H|Sorted], has_swapped)
    end;
bubble([], Acc, _) -> lists:reverse(Acc).

%% Helper function for sorting
sort(Next, [H|T], Acc, HasSwapped) when H < Next ->
  {lists:reverse([Next|T]) ++ Acc, true};
sort(Next, [H|T], Acc, HasSwapped) ->
  sort(H, T, [Next|Acc], HasSwapped);
sort(_, [], Acc, HasSwapped) ->
  {lists:reverse(Acc), HasSwapped}.
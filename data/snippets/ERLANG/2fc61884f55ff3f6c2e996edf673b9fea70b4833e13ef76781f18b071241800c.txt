-module(mymodule).
-export([myfunction/1]).
 
%%% This is a comment. %%%

% This function takes in a string and returns the string with each character repeated twice.
myfunction(String) ->
    myfunction_helper(String, 0).

% Helper function that recursively goes through each character in the string and adds it twice to the output string.
myfunction_helper([H|T], Counter) ->
    % Store current character
    Current = H,
    % Increment counter
    NewCounter = Counter + 1,
    % Add current character twice to output string
    [Current, Current|myfunction_helper(T, NewCounter)];
myfunction_helper([], _) ->
    % Base case, return empty string
    "".
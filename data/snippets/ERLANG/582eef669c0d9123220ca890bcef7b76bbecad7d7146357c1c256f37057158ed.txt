-module(math).
%% This module contains various mathematical functions
-export([sum/1, prod/1, factorial/1]).

%% sum/1 function takes a list of numbers and calculates the sum of all numbers in it
%%@param List List of numbers
%%@return Sum of all numbers in the list
sum(List) ->
    sum_helper(List, 0).

%% prod/1 function takes a list of numbers and calculates the product of all numbers in it
%%@param List List of numbers
%%@return Product of all numbers in the list
prod(List) ->
    prod_helper(List, 1).

%% factorial/1 function calculates the factorial of a given number
%%@param Number Number to calculate factorial for
%%@return Factorial of the number
factorial(0) ->
    1;
factorial(N) ->
    N * factorial(N-1).

%% sum_helper/2 function is a helper function for sum/1
%%@param List List of numbers
%%@param Acc Accumulator for storing the sum of numbers
%%@return Sum of all numbers in the list
sum_helper([], Acc) ->
    Acc;
sum_helper([H|T], Acc) ->
    sum_helper(T, Acc + H).

%% prod_helper/2 function is a helper function for prod/1
%%@param List List of numbers
%%@param Acc Accumulator for storing the product of numbers
%%@return Product of all numbers in the list
prod_helper([], Acc) ->
    Acc;
prod_helper([H|T], Acc) ->
    prod_helper(T, Acc * H).
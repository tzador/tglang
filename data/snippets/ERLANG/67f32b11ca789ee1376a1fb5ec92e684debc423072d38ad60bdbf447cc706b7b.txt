%%
%% Example implementation of bubble sort in Erlang
%%

-module(bubble_sort).

%% Exported functions
-export([sort/1]).

%% Helper functions
-export([swap/2, bubble_sort/2]).

%% Description: Implements bubble sort algorithm for list of numbers
%% Arg: List of numbers to be sorted
%% Return: Sorted list of numbers
sort(List) ->
    bubble_sort(List, []).

%% Description: Iterates through the list, swapping adjacent numbers if needed
%% Arg1: Unsorted list
%% Arg2: Accumulator for sorted list
%% Return: Sorted list
bubble_sort([X|Xs], Acc) ->
    case Xs of
        [] -> [X|Acc];
        [X1|_] when X =< X1 -> bubble_sort(Xs, [X|Acc]);
        [X1|Xs1] -> bubble_sort([X|Xs1], [X1|Acc])
    end.

%% Description: Swaps two adjacent numbers in a list
%% Arg1: List of numbers
%% Arg2: Index of first number
%% Return: List with numbers swapped
swap(List, I) ->
    [element(I+1, List)] ++ [element(I, List)] ++ [lists:nthtail(I+2, List)].
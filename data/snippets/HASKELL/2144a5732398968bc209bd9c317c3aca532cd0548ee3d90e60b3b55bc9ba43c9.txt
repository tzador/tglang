import Data.List (groupBy, nub, sort)
import Data.Function (on)

-- | Takes in a list of integers and returns a list of tuples containing each element and its count.
countElements :: [Int] -> [(Int, Int)]
countElements = map (\l -> (head l, length l)) . groupBy (==) . sort

-- | Takes in a list of tuples and returns the tuple with the highest count.
findMax :: [(Int, Int)] -> (Int, Int)
findMax = maximumBy (compare `on` snd)

-- | Takes in a list of integers and returns the most frequent integer.
-- Returns 0 if the list is empty.
mostFrequent :: [Int] -> Int
mostFrequent [] = 0
mostFrequent xs = fst $ findMax $ countElements xs
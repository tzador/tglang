{-# LANGUAGE OverloadedStrings, RecordWildCards #-}

-- Defines a data type for a book with title, author, and year published
data Book = Book { 
  title :: Text, 
  author :: Text, 
  yearPublished :: Int
} deriving (Show)

-- Creates a new book with the specified title, author, and year published
newBook :: Text -> Text -> Int -> Book
newBook title author year = Book title author year

-- A list of books
books :: [Book]
books = [
  newBook "The Hitchhiker's Guide to the Galaxy" "Douglas Adams" 1979,
  newBook "1984" "George Orwell" 1949,
  newBook "To Kill a Mockingbird" "Harper Lee" 1960
]

-- Function to get the titles of all the books in the list
getAllTitles :: [Book] -> [Text]
getAllTitles books = map title books

-- Prints a list of all the book titles
main :: IO ()
main = do
  let titles = getAllTitles books
  putStrLn $ "Book Titles: " ++ (intercalate ", " titles)
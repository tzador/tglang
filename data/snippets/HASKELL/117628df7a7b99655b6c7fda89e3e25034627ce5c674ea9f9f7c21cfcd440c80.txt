-- | A function that converts a list of integers to a list of strings
-- | using recursion and pattern matching
convert :: [Int] -> [String]
convert [] = []      -- if the list is empty, return empty list
convert (x:xs) = (show x) : (convert xs)    -- convert the first element to string and recursively call the function on the remaining list

-- | A function that takes in a list of strings and returns a list of strings
-- | where each element is duplicated
duplicate :: [String] -> [String]
duplicate [] = []      -- if the list is empty, return empty list
duplicate (x:xs) = x : x : (duplicate xs)     -- duplicate the first element and recursively call the function on the remaining list

-- | A function that combines the functions 'convert' and 'duplicate' to first
-- | convert a list of integers to a list of strings and then duplicate each
-- | string in the resulting list
combine :: [Int] -> [String]
combine list = duplicate (convert list)     -- first convert the list to strings and then duplicate each element

-- | A list of integers to be converted and duplicated
myList = [1, 2, 3, 4, 5]

-- | Output: ["1", "1", "2", "2", "3", "3", "4", "4", "5", "5"]
combine myList     -- call the 'combine' function on the list and print the output
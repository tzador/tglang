module Main where

import Data.List

-- | Function that takes in a string and returns the number of vowels in it
countVowels :: String -> Int
countVowels = length . filter (`elem` "aeiou")

-- | Function that takes in a list of integers and returns the sum of the squares of all even numbers in the list
sumSquares :: [Int] -> Int
sumSquares = sum . map (^2) . filter even

-- | Function that takes in a list of tuples and returns the average of the second element in each tuple
average :: [(Int, Int)] -> Double
average xs = (fromIntegral . sum $ map snd xs) / (fromIntegral . length $ xs)

main :: IO ()
main = do
  putStrLn "Enter a string:"
  string <- getLine
  putStrLn $ "Number of vowels in the string: " ++ show (countVowels string)

  let numbers = [1..10]
  putStrLn $ "Sum of squares of even numbers in [1..10]: " ++ show (sumSquares numbers)

  let tuples = [(1, 10), (2, 20), (3, 30)]
  putStrLn $ "Average of second values in [(1, 10), (2, 20), (3, 30)]: " ++ show (average tuples)
-- Defining a custom data type called 'Shape' with three constructors
data Shape = Circle Float
           | Rectangle Float Float
           | Triangle Float Float Float
           
-- Defining a function that calculates the area of a Shape
getArea :: Shape -> Float
getArea (Circle r) = pi * r * r        -- Calculates the area of a circle
getArea (Rectangle l w) = l * w         -- Calculates the area of a rectangle
getArea (Triangle a b c) = sqrt (s * (s - a) * (s - b) * (s - c))   -- Calculates the area of a triangle
    where s = (a + b + c) / 2           -- Calculates the semi-perimeter of the triangle
    
-- Defining a function that checks if a Shape is a square
isSquare :: Shape -> Bool
isSquare (Rectangle l w) = l == w       -- Checks if the length and width are equal
isSquare _ = False                      -- If not a rectangle, then it is not a square

-- Taking a list of Shapes as input and returning the sum of their areas
sumShapes :: [Shape] -> Float
sumShapes shapes = foldl (\acc shape -> acc + getArea shape) 0 shapes    -- Using foldl to add the area of each Shape to the accumulator 'acc'
-- Define a function that takes in a list of integers
-- and returns the sum of the even numbers

-- Type signature for the function
-- Input: [Int]
-- Output: Int
findEvenSum :: [Int] -> Int

-- Base case for an empty list
findEvenSum [] = 0

-- Recursive case for a non-empty list
findEvenSum (x:xs)
  | even x = x + findEvenSum xs -- if current number is even, add it to the sum
  | otherwise = findEvenSum xs -- if current number is odd, skip it

-- Example usage:
-- Input: [1,2,3,4]
-- Output: 6
findEvenSum [1,2,3,4]

-- Example usage:
-- Input: [5,6,7,8,9,10]
-- Output: 24
findEvenSum [5,6,7,8,9,10]
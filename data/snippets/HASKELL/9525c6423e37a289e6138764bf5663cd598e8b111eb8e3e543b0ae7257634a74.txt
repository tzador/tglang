-- This code snippet calculates the square root of a number using the Babylonian method.

sqrt :: (Fractional a) => a -> a  -- defining the square root function, takes in a fractional number and returns a fractional number
sqrt n = iter n 0.5   -- defining the main function which takes in a number and an initial estimate of the square root

iter :: (Fractional a) => a -> a -> a -- defining the helper function, takes in a number and an estimate and returns an updated estimate
iter n x = (x + n/x)/2   -- calculating the new estimate using the Babylonian method

-- Example usage:
-- sqrt 2 yields 1.4142135623730951, which is the square root of 2
-- Define a function called "factorial" that takes in an input "n" of type "Int" and returns an output of type "Int"
factorial :: Int -> Int

-- Base case, when the input is 0, return 1
factorial 0 = 1

-- Recursive case, multiply n with the factorial of n-1
factorial n = n * factorial (n-1)

-- Define a function called "fibonacci" that takes in an input "n" of type "Int" and returns an output of type "Int"
fibonacci :: Int -> Int

-- Base case, when the input is 0, return 0
fibonacci 0 = 0
-- Base case, when the input is 1, return 1
fibonacci 1 = 1

-- Recursive case, add the previous two fibonacci numbers
fibonacci n = fibonacci (n-1) + fibonacci (n-2)
{-# LANGUAGE FlexibleContexts #-}
import Data.Foldable (Foldable(fold))
import Data.Semigroup (Semigroup (..), Min (..))
import Text.Read (readMaybe)
â€‹
-- | A generic function for finding the minimum value in a 'Foldable'
-- container. Returns 'Nothing' if the container is empty.
--
-- >>> minimum' [5, 3, 7, 1]
-- Just 1
--
-- >>> minimum' []
-- Nothing
--
-- >>> minimum' (Left "error")
-- Nothing
--
-- @since 4.5.0
minimum' :: (Foldable f, Ord a) => f a -> Maybe a
minimum' = foldMap (Just . getMin) . fold
  where
    getMin x = Min x
{-# LANGUAGE RecordWildCards #-}
-- This is a code snippet that creates a custom data type and defines functions to work with it.
data Person = Person
    { name :: String
    , age :: Int
    , nationality :: String
    }

-- this function creates a new Person with the given name and age and uses a default value for nationality
createPerson :: String -> Int -> Person
createPerson n a = Person { name = n, age = a, nationality = "unknown" }

-- this function checks if a person is of legal voting age in their country
isVotingAge :: Person -> Bool
isVotingAge Person{..}
    | nationality == "US" || nationality == "Canada" = age >= 18
    | otherwise = age >= 21
    
-- this function prints out all the personal information of a given person
printPersonInfo :: Person -> IO ()
printPersonInfo Person{..} = do
    putStrLn $ "Name: " ++ name
    putStrLn $ "Age: " ++ show age
    putStrLn $ "Nationality: " ++ nationality
    
-- an example use of the code
main :: IO ()
main = do
    let newPerson = createPerson "John Smith" 25
    printPersonInfo newPerson
    putStrLn $ "Is " ++ name newPerson ++ " of legal voting age? " ++ show (isVotingAge newPerson)
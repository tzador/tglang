-- This code snippet calculates the sum of a list of numbers using recursion
-- Define a function that takes in a list of numbers as input
listSum :: [Int] -> Int
-- Define the base case, where the sum of an empty list is 0
listSum [] = 0
-- Define the recursive case, where we add the first element to the sum of the rest of the list
listSum (x:xs) = x + listSum xs
-- Call the function with a sample list
listSum [1,2,3,4,5] -- Output: 15
langageX = Language {
    name = "Haskell",
    paradigm = [Functional, Declarative, Static Typing],
    design_principles = [Immutable Data, Lazy Evaluation, Type Inference],
    features = [Higher Order Functions, Type Classes, Pattern Matching, Algebraic Data Types, Monads, Currying, Recursion],
    examples = ["Factorial function in Haskell:" ++ return
        "fact :: Integer -> Integer" ++ return 
        "fact n = if n == 0" ++ return
        "         then 1" ++ return
        "         else n * fact (n-1)" 
    ]
}
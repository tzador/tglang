-- This function takes in a list of integers and returns the sum of the even numbers in the list.
sumEven :: [Int] -> Int
sumEven [] = 0 -- base case, return 0 if list is empty
sumEven (x:xs) -- pattern matching on the list to extract the head (x) and tail (xs)
  | even x = x + sumEven xs -- if the current number (x) is even, add it to the sum of the rest of the list (xs)
  | otherwise = sumEven xs -- if the current number (x) is odd, ignore it and move on to the rest of the list
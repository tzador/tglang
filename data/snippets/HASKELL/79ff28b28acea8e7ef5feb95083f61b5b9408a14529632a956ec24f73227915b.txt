{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE RankNTypes #-}

-- Example of a type-safe list in Haskell using GADTs
data SafeList (a :: *) :: Nat -> * where
  SLNil :: SafeList a 0
  SLCons :: a -> SafeList a n -> SafeList a (n + 1)

-- Function to append two SafeLists
append :: SafeList a n -> SafeList a m -> SafeList a (n + m)
append SLNil ys = ys
append (SLCons x xs) ys = SLCons x (append xs ys)

-- Example of a type-safe list with three elements
exampleList :: SafeList Int 3
exampleList = SLCons 1 (SLCons 2 (SLCons 3 SLNil))

-- Function to map a function over a SafeList
safeListMap :: (a -> b) -> SafeList a n -> SafeList b n
safeListMap _ SLNil = SLNil
safeListMap f (SLCons x xs) = SLCons (f x) (safeListMap f xs)

-- Example of mapping a function over the example list
mappedList :: SafeList Int 3
mappedList = safeListMap (\x -> x * 2) exampleList
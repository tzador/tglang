import Data.List (intercalate)

recursiveRotate :: [[a]] -> [[a]]
recursiveRotate = transpose . map reverse

sharpTransposer :: (Int, Int) -> [[Int]] -> [[Int]]
sharpTransposer (num1, num2) =
    map (map fun . take num2) . take num1 . group . intercalate [] . map reverse

   where
        fun :: Int -> Int
        fun = subtract 5
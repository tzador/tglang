{- This is a complex code snippet in Haskell that uses higher order functions and recursive functions -}

import Data.List (sort) -- Importing the Data.List module for sorting functionality

{- A function that generates a list of random integers -}
randomList :: Int -> [Int]
randomList n = take n [ x | x <- randomRs (1, 1000) (mkStdGen n)] -- Generates a list of n random integers between 1 and 1000.

{- A function that takes in a list of numbers and sorts it in descending order -}
sortDesc :: [Int] -> [Int]
sortDesc xs = reverse $ sort xs -- Uses the reverse and sort functions from Data.List to sort the list in descending order.

{- A function that takes two lists and merges them into one, sorted in descending order -}
mergeLists :: [Int] -> [Int] -> [Int]
mergeLists xs ys = sortDesc (xs ++ ys) -- Uses the previous sortDesc function to sort the merged list in descending order.

{- A higher order function that takes in a list of lists and merges them all into one, sorted in descending order -}
mergeAllLists :: [[Int]] -> [Int]
mergeAllLists = foldr mergeLists [] -- Uses the foldr function with the previous mergeLists function to merge all lists into one.

{- A recursive function that repeatedly merges the list until it is fully sorted in descending order -}
mergeSort :: [Int] -> [Int]
mergeSort [x] = [x] -- Base case where the list only has one element, already sorted.
mergeSort xs = mergeLists (mergeSort firstHalf) (mergeSort secondHalf) -- Recursively splits the list into two halves and merges them using the previous mergeLists function.
  where 
    halfLen = length xs `div` 2 -- Calculates the half length of the list.
    firstHalf = take halfLen xs -- Splits the list into the first half.
    secondHalf = drop halfLen xs -- Splits the list into the second half.

{- Example usage of the functions -}
main :: IO()
main = do
  let list = randomList 10 -- Generates a list of 10 random integers.
  putStrLn "Unsorted list:"
  print list
  let sortedList = mergeSort list -- Sorts the list using the mergeSort function.
  putStrLn "Sorted list in descending order:"
  print sortedList
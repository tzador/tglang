--First, define the types for three different types of geometrical shapes
data Point = Point Float Float
data Circle = Circle Point Float
data Rectangle = Rectangle Point Point

--Create a function to calculate the perimeter of a given shape
perimeter :: Shape -> Float
perimeter (Circle _ r) = 2 * pi * r
perimeter (Rectangle (Point x1 y1) (Point x2 y2)) = (abs $ x2 - x1) + (abs $ y2 - y1)

--Create a function to calculate the area of a given shape
area :: Shape -> Float
area (Circle _ r) = pi * r * r
area (Rectangle (Point x1 y1) (Point x2 y2)) = (abs $ x2 - x1) * (abs $ y2 - y1)

--Create a function to check if a point lies within a given shape
containsPoint :: Shape -> Point -> Bool
containsPoint (Circle c r) (Point x y) = (distance c (Point x y)) <= r
containsPoint (Rectangle (Point x1 y1) (Point x2 y2)) (Point x y) =
    x >= min x1 x2 && x <= max x1 x2 && y >= min y1 y2 && y <= max y1 y2

--Helper function to calculate the distance between two points
distance :: Point -> Point -> Float
distance (Point x1 y1) (Point x2 y2) = sqrt $ (x2 - x1)^2 + (y2 - y1)^2

--Create an alias for a collection of shapes
type Shape = [Shape]

--Create some shapes and test the functions
circle1 = Circle (Point 0 0) 5
rectangle1 = Rectangle (Point 0 0) (Point 10 10)
point1 = Point 3 3
point2 = Point 6 6
perimeter circle1 -- Returns 31.41593
area rectangle1 -- Returns 100
containsPoint circle1 point1 -- Returns True
containsPoint rectangle1 point2 -- Returns True

--Create a function to translate a shape by a given offset 
translate :: Shape -> Float -> Float -> Shape
translate shape xoffset yoffset = map translateShape shape
    where translateShape (Circle (Point x y) r) = Circle (Point (x+xoffset) (y+yoffset)) r
          translateShape (Rectangle (Point x1 y1) (Point x2 y2)) = Rectangle (Point (x1+xoffset) (y1+yoffset)) (Point (x2+xoffset) (y2+yoffset))

--Check the translation function
translatedCircle = translate [circle1] 5 5
translatedRectangle = translate [rectangle1] 2 2
perimeter translatedCircle -- Returns 31.41593
perimeter translatedRectangle -- Returns 44
area translatedCircle -- Returns 196.34956
area translatedRectangle -- Returns 100
containsPoint translatedCircle point1 -- Returns True
containsPoint translatedRectangle point2 -- Returns True
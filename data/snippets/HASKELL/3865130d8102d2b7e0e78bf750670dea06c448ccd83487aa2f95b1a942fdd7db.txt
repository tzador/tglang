-- | A function that returns the maximum of two Integers
max :: Integer -> Integer -> Integer

-- | Define a variable 'x' with value 10
x :: Integer
x = 10

-- | Define a recursive function to calculate the factorial of a number
factorial :: Integer -> Integer
factorial 0 = 1
factorial n = n * factorial (n - 1)

-- | Define a list containing the first 10 even numbers
evenNumbers :: [Integer]
evenNumbers = [2,4..20]

-- | Define a function to add two numbers using pattern matching
add :: Integer -> Integer -> Integer
add 0 n = n
add m n = 1 + add (m-1) n

-- | Define a type 'Person' with name and age as fields
data Person = Person { name :: String, age :: Integer }

-- | Define a function to check if a person's age is greater than 18
isAdult :: Person -> Bool
isAdult person = if age person > 18 then True else False
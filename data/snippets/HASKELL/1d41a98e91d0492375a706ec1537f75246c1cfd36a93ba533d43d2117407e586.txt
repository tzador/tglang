{- 
This code snippet describes a recursive function in Haskell, which calculates the factorial of a given number.
It takes in an integer as an argument and returns the factorial of that number.
-}

factorial :: Int -> Int               -- function declaration with type constraints
factorial n = if n <= 0 then 1         -- base case: if the number is 0 or less, return 1
              else n * factorial (n-1) -- recursive call with n-1 as the argument, multiplying the number with the factorial of (n-1)

main = do                             -- main function to call the factorial function and display the output
  putStrLn "Enter a number: "         -- ask user for input
  input <- getLine                    -- take user input
  let n = read input :: Int           -- convert input from string to integer
  let result = factorial n            -- call the factorial function with the input
  putStrLn ("Factorial of " ++ show n ++ " is " ++ show result)    -- display the output in a user-friendly format
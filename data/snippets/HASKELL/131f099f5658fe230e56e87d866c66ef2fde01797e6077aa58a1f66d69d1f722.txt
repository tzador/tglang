{-|
    The following function calculates the nth term in the Fibonacci sequence.
    It uses an accumulator to store the previous two terms and calculates the next term by adding them.
    The first two terms in the sequence are 0 and 1.
    
    Example:
    
    fib 3 = 2
    
    Explanation:
    0, 1, 1, 2   -> here, the third term is 2
-}

fib :: Int -> Int
fib n = 
    let
        -- This function takes two parameters, the current term and the accumulator
        -- It recursively calculates the nth term by adding the previous two terms
        fibonacci :: Int -> Int -> Int
        fibonacci 0 acc = acc
        fibonacci 1 acc = acc
        fibonacci n acc = fibonacci (n - 1) (acc + (acc - 1))
    in
        -- Calling the fibonacci function with the initial values of 1 and 0 as the first two terms
        fibonacci n 1
    
 -- Printing the output of the function
print (fib 3)

-- Output: 2
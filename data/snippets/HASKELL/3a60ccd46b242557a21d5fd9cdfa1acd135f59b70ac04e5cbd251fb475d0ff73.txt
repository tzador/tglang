fmap :: Functor f
  => (a -> b)    -- ^ Function to map over the functor
  -> f a         -- ^ Functor containing values of type 'a'
  -> f b         -- ^ Functor containing values of type 'b'
fmap _ Nothing  = Nothing
fmap g (Just x) = Just (g x)

id :: a -> a
id x = x

data Either a b = Left a | Right b

instance Functor (Either a) where
  fmap _ (Left x) = Left x
  fmap g (Right y) = Right (g x)
-- Define a function to check if a given value is a prime number
isPrime :: Int -> Bool
isPrime n 
    | n < 2 = False -- 0 and 1 are not prime numbers
    | otherwise = null [x | x <- [2..isqrt n], n `mod` x == 0] -- checks if any number from 2 to the square root of n divides n evenly, if so, n is not a prime number
 
-- Helper function to calculate the square root of an integer
isqrt :: Int -> Int
isqrt = floor . sqrt . fromIntegral
 
-- Output: False (9 is not a prime number)
isPrime 9
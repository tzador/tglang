-- |The following code implements a monad transformer for
-- |a mathematical calculation that involves the Fibonacci numbers.
import Control.Monad.Trans.State

-- |Represents a computation that involves the fibonacci sequence.
type Fibonacci a = State (Integer, Integer) a

-- |Calculates the nth Fibonacci number using a State monad.
fibonacci :: Integer -> Fibonacci Integer
fibonacci 0 = gets fst
fibonacci 1 = gets snd
fibonacci n = do
  (x, y) <- get
  fibonacci (n-1)
  put (y, x+y)
  gets snd

-- |Runs the fibonacci calculation and prints the resulting value.
main :: IO ()
main = do
  let result = evalState (fibonacci 10) (0,1)
  putStrLn ("The 10th fibonacci number is: " ++ show result)
{-# LANGUAGE OverloadedStrings #-}

module Main where

import qualified Data.Text as T

-- | A function that returns a list of squares, with each item being the result of multiplying
-- | the supplied number with itself
squares :: Int -> [Int]
squares num = [num * num | num <- [1..num]]

main :: IO ()
main = do
    putStrLn "Enter a number to generate a list of squares: "
    input <- T.getLine
    let num = T.unpack input
    case (readMaybe num :: Maybe Int) of
        Nothing -> putStrLn "Invalid input!"
        Just value -> putStrLn $ "The squares of numbers from 1 to " ++ show value ++ " are: " ++ show (squares value)
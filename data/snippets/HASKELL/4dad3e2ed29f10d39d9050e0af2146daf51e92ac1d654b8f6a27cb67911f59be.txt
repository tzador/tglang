-- | Imports Data.Map and creates a new data type `Dictionary` that maps
-- | `Int` to `String`.
import qualified Data.Map as Map
type Dictionary = Map.Map Int String
-- | Function `addEntry` takes in a `Dictionary`, an `Int`, and a `String`
-- | and returns a new `Dictionary` with the added key-value pair.
addEntry :: Dictionary -> Int -> String -> Dictionary
addEntry dictionary key value = Map.insert key value dictionary
-- | Declares a new `Dictionary` with two entries.
myDictionary :: Dictionary
myDictionary = Map.fromList
    [ (1, "Hello"),
      (2, "World") ]
-- | Uses the `addEntry` function to add a new entry to `myDictionary`.
modifiedDictionary :: Dictionary
modifiedDictionary = addEntry myDictionary 3 "!"
-- | Prints out the value associated with the key `2` in `modifiedDictionary`.
main :: IO ()
main = do
    putStrLn $ "The value associated with key 2 is: " ++ (modifiedDictionary Map.! 2)
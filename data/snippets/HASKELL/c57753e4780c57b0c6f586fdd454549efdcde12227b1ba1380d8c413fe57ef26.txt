{-# LANGUAGE MultiWayIf #-}

module Main where

-- This function takes in two integers and returns their sum
add :: Int -> Int -> Int
add x y = x + y

-- This function takes in a list of numbers and returns their average
avg :: [Double] -> Double
avg l =
  let sum = foldl (+) 0 l
      len = length l
  in sum / fromIntegral len

-- This function takes in a list of strings and concatenates them with a space
concatWithSpace :: [String] -> String
concatWithSpace l = foldl (\acc x -> acc ++ " " ++ x) "" l

-- This function checks if two integers are equal, using pattern matching
isEqual :: Int -> Int -> Bool
isEqual x y = case (x, y) of
  (0, 0) -> True
  (_, 0) -> False
  (0, _) -> False
  (a, b) -> a == b

-- This function checks if a list is sorted in ascending order
isSorted :: Ord a => [a] -> Bool
isSorted [] = True
isSorted (x:[]) = True
isSorted (x:y:xs)
  | x <= y = isSorted (y:xs)
  | otherwise = False

-- The main function
main :: IO ()
main = do
  putStrLn "Enter two numbers"
  num1 <- getLine
  num2 <- getLine
  let n1 = read num1 :: Int
      n2 = read num2 :: Int
  let sum = add n1 n2
  putStrLn ("The sum of " ++ show n1 ++ " and " ++ show n2 ++ " is " ++ show sum)
  putStrLn "Enter a list of numbers"
  nums <- getLine
  let list = map read (words nums) :: [Double]
      average = avg list
  putStrLn ("The average of the numbers " ++ show list ++ " is " ++ show average)
  putStrLn "Enter a list of strings"
  strs <- getLine
  let strings = words strs
      concat = concatWithSpace strings
  putStrLn ("The concatenated string is " ++ concat)
  putStrLn "Enter two numbers to check equality"
  num3 <- getLine
  num4 <- getLine
  let n3 = read num3 :: Int
      n4 = read num4 :: Int
  let equal = if isEqual n3 n4 then "equal" else "not equal"
  putStrLn (show n3 ++ " and " ++ show n4 ++ " are " ++ equal)
  putStrLn "Enter a list of numbers to check sorting"
  nums2 <- getLine
  let list2 = map read (words nums2) :: [Int]
      sorted = if isSorted list2 then "sorted" else "not sorted"
  putStrLn ("The list of numbers " ++ show list2 ++ " is " ++ sorted)
-- This is an example of a recursive function in Haskell.

-- Note: this function calculates the factorial of a given integer.

-- Input: n - an integer
-- Output: the factorial of n

fac :: Integer -> Integer  -- function definition with input and output type annotations
fac 0 = 1  -- base case, when n = 0
fac n = n * fac (n-1)  -- recursive case, when n > 0, calls the function again with n-1 as input

-- Example input and output:
-- Input: 5
-- Output: 120   (5! = 5 * 4 * 3 * 2 * 1 = 120)

-- Note: this function can also handle negative integers, returning the factorial of their absolute value
-- This function takes in two integers and returns their sum
add :: Int -> Int -> Int
add x y = x + y

-- This function takes in a list of strings and returns a new list with the first letter of each string capitalized
capitalizeFirst :: [String] -> [String]
capitalizeFirst xs = map (\str -> (toUpper (head str)) : tail str) xs

-- This function creates a Fibonacci sequence up to a given number
fibonacci :: Int -> [Int]
fibonacci n = unfoldr (\(a,b) -> if a < n then Just (a, (b, a+b)) else Nothing) (0, 1)

-- This function merges two sorted lists into a new sorted list
merge :: Ord a => [a] -> [a] -> [a]
merge (x:xs) (y:ys)
    | x <= y = x : merge xs (y:ys)
    | otherwise = y : merge (x:xs) ys
merge xs [] = xs
merge [] ys = ys
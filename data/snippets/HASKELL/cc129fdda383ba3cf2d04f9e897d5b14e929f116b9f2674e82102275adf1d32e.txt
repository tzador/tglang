-- | A custom data type representing an employee
data Employee = Employee {
  name :: String, -- The employee's name
  age :: Int, -- The employee's age
  department :: String, -- The employee's department
  salary :: Int -- The employee's salary
} deriving (Show)

-- | A function that calculates the average salary of a list of employees
avgSalary :: [Employee] -> Int
avgSalary employees =
  let 
    totalSalary = sum (map salary employees) -- Calculate the total salary of all employees
    numEmployees = length employees -- Count the number of employees
  in
    totalSalary `div` numEmployees -- Divide the total salary by the number of employees to get the average

-- | A list of sample employees
employees :: [Employee]
employees = [
  Employee "John Smith" 32 "Marketing" 80000,
  Employee "Jane Doe" 45 "Human Resources" 100000,
  Employee "Bob Johnson" 28 "Finance" 60000
  ]

-- | Print the average salary of the list of employees
main :: IO ()
main = print $ "Average salary: " ++ show (avgSalary employees)
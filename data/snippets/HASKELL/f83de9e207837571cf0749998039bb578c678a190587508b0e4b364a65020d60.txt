-- This is a function that calculates the factorial of a given number
fact :: Int -> Int
fact 0 = 1
fact n = n * fact (n - 1)

-- This is a function that calculates the nth Fibonacci number using pattern matching
fib :: Int -> Int
fib 0 = 0
fib 1 = 1
fib n = fib (n-1) + fib (n-2) 

-- This is a function that takes in a list of strings and concatenates them
concatList :: [String] -> String
concatList [] = ""
concatList (x:xs) = x ++ concatList xs

-- This is a function that takes in a list of numbers and returns the sum of all even numbers in the list
sumEven :: [Int] -> Int
sumEven [] = 0
sumEven (x:xs) 
    | x `mod` 2 == 0 = x + sumEven xs
    | otherwise = sumEven xs

-- This is a function that takes in two numbers and returns the greatest common divisor using Euclid's algorithm
gcd :: Int -> Int -> Int
gcd a 0 = a
gcd a b = gcd b (a `mod` b)

--This is a function that calculates the nth power using recursion
power :: Int -> Int -> Int
power _ 0 = 1
power x n = x * power x (n-1)
{-# LANGUAGE FlexibleInstances #-}

-- Define a typeclass for a binary tree
class BinaryTree tree where
    -- Function for inserting a value into the tree
    insert :: tree a -> a -> tree a
    -- Function for searching for a value in the tree
    search :: tree a -> a -> Maybe a

-- Define a data type for a binary tree
data Tree a = Empty | Node a (Tree a) (Tree a)

-- Implement the BinaryTree typeclass for the Tree data type
instance BinaryTree Tree where
    -- Define insert function
    insert Empty val = Node val Empty Empty
    insert (Node nodeVal left right) val
        | val < nodeVal = Node nodeVal (insert left val) right
        | val > nodeVal = Node nodeVal left (insert right val)
        | otherwise = Node nodeVal left right -- If value already exists, do nothing
    
    -- Define search function
    search Empty _ = Nothing
    search (Node nodeVal left right) val
        | val == nodeVal = Just nodeVal -- If value is found, return it
        | val < nodeVal = search left val -- If value is less than current node, search the left subtree
        | val > nodeVal = search right val -- If value is greater than current node, search the right subtree
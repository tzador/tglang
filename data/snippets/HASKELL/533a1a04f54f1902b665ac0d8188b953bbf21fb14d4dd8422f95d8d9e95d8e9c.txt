-- Function to calculate the factorial of a number
factorial :: Integer -> Integer
factorial n = if n == 0 || n == 1 then 1 else n * factorial(n-1)

-- Function to calculate the sum of the squares of a list of numbers
sumSquares :: [Int] -> Int
sumSquares [] = 0
sumSquares (x:xs) = x^2 + sumSquares xs

-- Function to calculate the nth term in the Fibonacci sequence
fibonacci :: Int -> Int
fibonacci 0 = 1
fibonacci 1 = 1
fibonacci n = fibonacci (n-1) + fibonacci (n-2)

-- Function to calculate the area of a circle given its radius
areaOfCircle :: Float -> Float
areaOfCircle r = pi * r^2

-- Function to calculate the volume of a sphere given its radius
volumeOfSphere :: Float -> Float
volumeOfSphere r = (4/3) * pi * r^3

-- QuickSort function using list comprehensions
quickSort :: Ord a => [a] -> [a]
quickSort [] = []
quickSort (x:xs) = quickSort [y | y <- xs, y <= x] ++ [x] ++ quickSort [y | y <- xs, y > x]
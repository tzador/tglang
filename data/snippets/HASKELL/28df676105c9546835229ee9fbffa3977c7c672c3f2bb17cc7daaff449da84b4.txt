-- Define a recursive function that takes in a list of numbers and returns the sum of all even numbers in the list

-- Define the function
sumEven :: [Int] -> Int
-- Base case: when the list is empty, the sum is 0
sumEven [] = 0
-- Recursive case: if the first element is even, add it to the sum of the rest of the list
sumEven (x:xs)
  | x `mod` 2 == 0 = x + sumEven xs
-- Recursive case: if the first element is odd, skip it and continue with the rest of the list
  | otherwise = sumEven xs
-- | Function to calculate the Fibonacci series up to n terms
-- | Takes in an Integer n and returns a list of n terms in the series
-- | Uses pattern matching and recursion to calculate the series

fib :: Int -> [Int]
fib 0 = []
fib 1 = [0]
fib 2 = [0,1]
fib n = let prevSeries = fib (n-1)
        in (head prevSeries + head (tail prevSeries)) : prevSeries

-- | Example:
-- >>> fib 8
-- [0, 1, 1, 2, 3, 5, 8, 13]
-- >>> fib 2
-- [0, 1]
-- >>> fib 10
-- [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
-- | Function that takes in two integers and returns a list of the first n prime numbers
generatePrimes :: Int -> Int -> [Int]
generatePrimes x n 
    | x <= 1 = []
    | n == 0 = []
    | otherwise = take n [y | y <- [x..], isPrime y]

-- | Function that checks if a number is prime (helper function for
-- | `generatePrimes` function)
isPrime :: Int -> Bool
isPrime n 
    | n <= 1 = False
    | otherwise = all (\d -> n `mod` d /= 0) [2..(floor . sqrt . fromIntegral) n]

-- | Main function that prints the first 10 prime numbers starting at 5
main :: IO ()
main = do
    let primes = generatePrimes 5 10
    putStrLn $ "The first 10 prime numbers starting at 5 are: " ++ show primes
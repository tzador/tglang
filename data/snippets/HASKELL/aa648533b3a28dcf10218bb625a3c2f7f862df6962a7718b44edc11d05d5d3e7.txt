-- Function to recursively compute the nth Fibonacci number
fib :: Int -> Int 
fib 0 = 0
fib 1 = 1
fib n = fib (n - 1) + fib (n - 2)

-- Function to compute the sum of a list of numbers
sumList :: [Int] -> Int
sumList [] = 0
sumList (x:xs) = x + sumList xs

-- Main function that uses the above functions to compute the sum of the first 10 Fibonacci numbers
main :: IO()
main = do
    let fibList = [fib x | x <- [0..9]] -- generates a list of the first 10 Fibonacci numbers
    let result = sumList fibList -- computes the sum of the list
    putStrLn $ "The sum of the first 10 Fibonacci numbers is: " ++ show result -- prints the result
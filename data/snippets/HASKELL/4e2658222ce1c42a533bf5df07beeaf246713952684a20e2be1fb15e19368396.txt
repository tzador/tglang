-- Function to calculate the factorial of a number
factorial :: Integer -> Integer
factorial n
  | n < 0 = error "Can't calculate factorial of negative number"
  | n == 0 = 1
  | otherwise = n * factorial (n - 1)

-- Function to calculate the n-th Fibonacci number
fibonacci :: Integer -> Integer
fibonacci n
  | n < 0 = error "Can't calculate Fibonacci number of negative number"
  | n == 0 = 0
  | n == 1 = 1
  | otherwise = fibonacci (n - 1) + fibonacci (n - 2)

-- Function to check if a list is a palindrome
isPalindrome :: Eq a => [a] -> Bool
isPalindrome xs = xs == reverse xs

-- Function to calculate the sum of squares of first n natural numbers
sumSquares :: Integer -> Integer
sumSquares n = sum [x^2 | x <- [1..n]]

-- An example usage of the functions
main :: IO ()
main = do
  putStrLn "Enter a number to calculate its factorial:"
  n <- readLn :: IO Integer
  putStrLn "The factorial of the number is:"
  print (factorial n)
  putStrLn "Enter a number to calculate its Fibonacci number:"
  m <- readLn :: IO Integer
  putStrLn "The Fibonacci number of the number is:"
  print (fibonacci m)
  putStrLn "Enter a list to check if it's a palindrome:"
  let xs = [1, 2, 3, 4, 5]
  putStrLn "Is the list a palindrome?"
  print (isPalindrome xs)
  putStrLn "Enter a number to calculate the sum of squares of first n natural numbers:"
  p <- readLn :: IO Integer
  print (sumSquares p)
-- This is an example of a custom data type in Haskell
data Employee = Manager String Int | Supervisor String Int Int | Worker String Int

-- Function to calculate total compensation based on Employee type
calculateCompensation :: Employee -> Int
calculateCompensation (Manager _ salary) = salary
calculateCompensation (Supervisor _ salary bonus) = salary + bonus
calculateCompensation (Worker _ hourRate) = hourRate * 40 * 52

-- Example usage
john = Manager "John" 100000
mary = Supervisor "Mary" 80000 20000
jane = Worker "Jane" 20

-- Output of calculateCompensation function for each Employee
calculateCompensation john -- Output: 100000
calculateCompensation mary -- Output: 100000
calculateCompensation jane -- Output: 41600
-- This is a complex function that calculates the Fibonacci sequence up to a given index n

-- This function takes in an Integer n as the index and returns the Fibonacci number at that index
fibonacci :: Integer -> Integer
fibonacci n 
    | n == 0 = 0 -- Base case for index 0
    | n == 1 = 1 -- Base case for index 1
    | otherwise = fibonacci (n-1) + fibonacci (n-2) -- Recursive call to calculate the Fibonacci sequence
    
-- This function creates a list of Fibonacci numbers up to index n
fibonacciList :: Integer -> [Integer]
fibonacciList n = [fibonacci x | x <- [0..n]]

-- Example usage:
-- fibonacciList 10 will return [0,1,1,2,3,5,8,13,21,34,55]
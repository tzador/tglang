-- This function takes in a list of values and returns the sum of all odd values

-- Define the function with the name "sumOddValues", taking in a list of type "Int" and returning type "Int"
sumOddValues :: [Int] -> Int  
-- Start the function definition with the name and input parameter 
sumOddValues lst = 
    -- Use the "foldl" function to iterate through the list, starting with an accumulator of value 0
    -- Use pattern matching to check if the current value is odd
    foldl (\acc x -> if odd x then acc + x else acc) 0 lst
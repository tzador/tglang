module Main where                           -- Indicates that this is the main module
 
import Data.List (sort)                      -- Imports the function 'sort' from the 'Data.List' module
 
-- | Calculates the factorial of a given integer.
fact :: Integer -> Integer
fact 0 = 1                                  -- Base case
fact n = n * fact (n - 1)                    -- Recursive case
 
-- | Calculates the nth Fibonacci number.
fib :: Int -> Int
fib x = fibHelper 0 1 x                      -- Calls the helper function with initial values 0 and 1
 
where
  -- | Helper function for calculating nth Fibonacci number.
  fibHelper :: Int -> Int -> Int -> Int
  fibHelper a b 1 = a                        -- Base case
  fibHelper a b n = fibHelper b (a + b) (n - 1)  -- Recursive case
 
-- | Main function to prompt user for input and call the above functions
main :: IO ()
main = do
  putStrLn "Enter an integer:"
  input <- getLine                            -- Gets input from user
  let n = read input :: Int                   -- Converts input to integer
  putStrLn $ "Factorial: " ++ show (fact n)   -- Prints factorial
  putStrLn $ "Fibonacci: " ++ show (fib n)    -- Prints Fibonacci number
-- This is a function that takes in two lists and
-- returns the cartesian product of those lists.
cartesian :: [a] -> [b] -> [(a,b)]
cartesian xs ys = [(x,y) | x <- xs, y <- ys]

-- This is a function that takes a tuple and returns
-- the product of its two elements.
productTuple :: (Num a, Num b) => (a,b) -> a
productTuple (x,y) = x * y

-- This is a function that takes in a list of tuples
-- and applies the productTuple function to each
-- tuple, returning a new list of products.
tuplesProduct :: (Num a, Num b) => [(a,b)] -> [a]
tuplesProduct xs = [productTuple x | x <- xs]

-- This is a function that takes in two lists and
-- finds the cartesian product of the two lists
-- and then calculates the product of each tuple
-- using the tuplesProduct function, returning
-- a list of products.
cartesianProduct :: (Num a, Num b) => [a] -> [b] -> [a]
cartesianProduct xs ys = tuplesProduct (cartesian xs ys)
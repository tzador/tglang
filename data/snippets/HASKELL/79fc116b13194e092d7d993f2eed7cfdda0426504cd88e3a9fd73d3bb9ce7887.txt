-- Function to compute the nth Fibonacci number
-- Params: n - the index of the Fibonacci number to compute
-- Returns: the nth Fibonacci number
fibonacci :: Int -> Int
fibonacci n = if n < 2
  then n
  else (fibonacci (n-1)) + (fibonacci (n-2))
 
-- Function to compute the factorial of a number
-- Params: n - the number whose factorial is to be computed
-- Returns: the factorial of n
factorial :: Int -> Int
factorial n = if n < 2
  then 1
  else n * (factorial (n-1))
 
-- Function to check if a number is prime
-- Params: n - the number to check for primality
-- Returns: True if n is prime, False otherwise
isPrime :: Int -> Bool
isPrime n = if n < 2
  then False
  else [x | x <- [2..(n-1)], n `mod` x == 0] == []
{-# LANGUAGE DeriveGeneric, RecordWildCards #-}

module Main where

import Data.Aeson
import qualified Data.Vector as V
import Data.Text (Text)
import GHC.Generics (Generic)

data Person = Person
  { name :: Text
  , age  :: Int
  , occupation :: Text
  } deriving (Show, Generic)

instance FromJSON Person

main :: IO ()
main = do
  -- read and parse a JSON file into a list of Person records
  jsonFile <- readFile "people.json"
  let people = decode jsonFile :: Maybe (V.Vector Person)

  -- print the names of all people with the occupation "student"
  case people of
    Just ps -> mapM_ (putStrLn . name) (V.toList $ V.filter (\p -> occupation p == "student") ps)
    Nothing -> putStrLn "Error: Unable to parse JSON file."
import Data.List

-- This function takes in a list of integers and returns the average value of the list
-- It uses the `sum` function from the `Data.List` module to add up all the elements in the list
-- Then divides by the length of the list to get the average
-- The `fromIntegral` function is used to convert the sum to a `Float` for accurate division
average :: [Int] -> Float
average list = (fromIntegral (sum list)) / (fromIntegral (length list))

-- This function takes in a list of strings and returns a concatenated string
-- It uses the `foldr` function to recursively add all the strings together
-- The `++` operator is used to append each string to the previous one
concatenate :: [String] -> String
concatenate list = foldr (++) "" list

-- Example usage:
-- average [1, 2, 3, 4] will return 2.5
-- concatenate ["Hello", " ", "World!"] will return "Hello World!"
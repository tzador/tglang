{-# LANGUAGE GADTs, TypeFamilies #-}

-- Define a type family
type family IntOrBool a where
    IntOrBool Int = Int
    IntOrBool Bool = Bool

-- Define a generalized algebraic data type (GADT)
data Container a where
    Container :: IntOrBool a -> Container a -- GADT constructor

-- Define a function that uses a type family along with the GADT
checkContainer :: Container a -> a
checkContainer (Container x) = case x of
    (int :: Int) -> int + 1
    (bool :: Bool) -> not bool

-- Example usage
container1 = Container (5 :: Int)
container2 = Container True
print (checkContainer container1) -- Output: 6
print (checkContainer container2) -- Output: False
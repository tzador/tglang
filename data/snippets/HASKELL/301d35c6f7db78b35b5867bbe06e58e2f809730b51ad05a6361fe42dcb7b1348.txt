-- This function takes in a list of numbers and returns a list with only odd numbers
filterOdd :: [Integer] -> [Integer]
filterOdd [] = []
filterOdd (x:xs)
 | x `mod` 2 == 1 = x : filterOdd xs   -- If x is odd, prepend it to the filtered list
 | otherwise = filterOdd xs             -- If x is even, ignore it and continue filtering the rest of the list

-- This function takes in a list of strings and returns a list of strings with only the first letter capitalized
capitalize :: [String] -> [String]
capitalize [] = []
capitalize (x:xs) = (toUpper (head x) : tail x) : capitalize xs   -- Capitalize the first letter and append the rest of the string to the capitalized letter, then continue with the rest of the list

-- Example usage:
-- filterOdd [1, 2, 3, 4, 5] would return [1, 3, 5]
-- capitalize ["hello", "world"] would return ["Hello", "World"]
{-# LANGUAGE GADTs, DataKinds, KindSignatures #-}
-- This is a code snippet that defines a custom data type with type-level annotations
-- and implements a function that checks if two values of that type are equal

data Value (a :: Type) where
  IntValue :: Int -> Value Int
  BoolValue :: Bool -> Value Bool
  StringValue :: String -> Value String

-- The type-level annotations specify the types of values that can be stored in the `Value` type

equals :: Value a -> Value a -> Bool
equals (IntValue x) (IntValue y) = x == y
equals (BoolValue x) (BoolValue y) = x == y
equals (StringValue x) (StringValue y) = x == y

-- The `equals` function uses pattern matching to check equality between two values of the same type
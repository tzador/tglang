-- Function to generate all possible combinations of a list
genPossCombs :: [a] -> [[a]]
genPossCombs [] = [[]]   -- Base case, list with no elements has one combination - an empty list
genPossCombs (x:xs) = let combs = genPossCombs xs
                      in combs ++ [x:c | c <- combs]     -- Recursive call to generate combinations with and without current element

-- Usage example
genPossCombs [1,2,3]    -- Output: [[],[3],[2],[2,3],[1],[1,3],[1,2],[1,2,3]]
-- | A function that calculates the factorial of a given number
factorial :: Int -> Int
factorial 0 = 1
factorial n = n * factorial (n-1)

-- | A function that takes in a list and returns the sum of all even numbers in the list
sumEven :: [Int] -> Int
sumEven [] = 0
sumEven (x:xs)
  | even x = x + sumEven xs
  | otherwise = sumEven xs

-- | A function that takes in a string and checks if it is a palindrome
isPalindrome :: String -> Bool
isPalindrome [] = True
isPalindrome (x:xs)
  | length xs == 1 = x == head xs
  | x == last xs = isPalindrome (init xs)
  | otherwise = False

-- | A data type representing a shape
data Shape = Circle Float | Rectangle Float Float

-- | A function that calculates the area of a given shape
area :: Shape -> Float
area (Circle r) = pi * r * r
area (Rectangle x y) = x * y

-- | An infinite list of Fibonacci numbers
fibonacci :: [Int]
fibonacci = 0 : 1 : zipWith (+) fibonacci (tail fibonacci)
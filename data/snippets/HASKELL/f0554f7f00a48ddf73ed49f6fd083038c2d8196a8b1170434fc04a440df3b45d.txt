-- | Function that takes in a list of integers and returns the sum of all even numbers.
-- | Type signature: sumEvens :: [Int] -> Int
sumEvens :: [Int] -> Int
sumEvens [] = 0 -- base case: empty list returns 0
sumEvens (x:xs) -- pattern matching for first element (x) and remaining list (xs)
  | even x = x + sumEvens xs -- if first element is even, add it to the sum of remaining list
  | otherwise = sumEvens xs -- if first element is odd, ignore it and continue recursively
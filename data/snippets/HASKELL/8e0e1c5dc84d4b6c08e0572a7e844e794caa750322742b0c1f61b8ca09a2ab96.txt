module Main where  -- starts the module

-- creates a type alias for custom data structure
type Bag = [(String, Int)] 

-- function to add an item to the bag
addToBag :: Bag -> String -> Bag
addToBag bag item = (item, 1) : bag 

-- main function that creates and manipulates bag
main :: IO ()
main = do
  let groceriesBag = foldl addToBag [] ["apple", "banana", "cereal"] -- uses folds to add items to bag
  let newBag = addToBag groceriesBag "milk"
  let updatedBag = map (\(item, quantity) -> (item, quantity + 1)) newBag -- uses map to update quantity
  print updatedBag -- prints the updated bag to console
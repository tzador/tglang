import System.Random

-- Function to generate a random list of numbers
randomList :: RandomGen g => g -> Int -> Int -> [Int]
randomList gen n range = take n $ randomRs (1, range) gen

-- Function to sort a list in ascending order using quick sort algorithm
quickSort :: Ord a => [a] -> [a]
quickSort [] = []
quickSort (pivot:xs) = (quickSort lesser) ++ [pivot] ++ (quickSort greater)
  where
    lesser = filter (< pivot) xs
    greater = filter (>= pivot) xs

-- Function to print the sorted random list of numbers in a formatted way
main :: IO ()
main = do
    -- Generate random seed using current time
    gen <- newStdGen
    -- Generate a list of 50 random numbers in the range of 1-100
    let inputList = randomList gen 50 100
    -- Print the unsorted list
    putStrLn $ "Unsorted list: " ++ show inputList
    -- Sort the list using quick sort
    let sortedList = quickSort inputList
    -- Print the sorted list
    putStrLn $ "Sorted list: " ++ show sortedList
-- Function to check if a given list is sorted in ascending order
-- Takes in a list of integers and returns a boolean value
-- Checks if each element is less than or equal to the element next to it
isSorted :: [Int] -> Bool
isSorted [] = True -- Empty list is always sorted
isSorted [_] = True -- Single element list is always sorted
isSorted (x:y:xs) = x <= y && isSorted (y:xs) -- Checks if first element is less than second element and recursively checks rest of list

-- Example inputs and outputs
-- isSorted [1,2,3,4,5] = True
-- isSorted [1,3,2,4,5] = False
-- isSorted [-5,0,10] = True
import Data.List

-- This function calculates the nth Fibonacci number using memoization
fib :: Int -> Integer
fib = (map fib' [0 ..] !!)
	where
		fib' 0 = 0
		fib' 1 = 1
		fib' n = fib (n-1) + fib (n-2)

-- This function checks if a string is a palindrome
isPalindrome :: String -> Bool
isPalindrome str = str == reverse str

-- This function takes in a list of numbers and returns only the even numbers
onlyEvens :: [Int] -> [Int]
onlyEvens = filter even

-- This function implements quicksort on a list of numbers
quicksort :: Ord a => [a] -> [a]
quicksort [] = []
quicksort (pivot:rest) =
	quicksort [x | x <- rest, x <= pivot] ++ [pivot] ++ quicksort [x | x <- rest, x > pivot]
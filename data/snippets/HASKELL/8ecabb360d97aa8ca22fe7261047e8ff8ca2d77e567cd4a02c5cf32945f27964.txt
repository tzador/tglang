-- A function that takes in a list of numbers and returns
-- a new list with each number multiplied by its index
multipliedByIndex :: [Int] -> [Int]
multipliedByIndex xs = 
    let indexedList = zip [0..] xs -- creates a list of tuples, with the index as the first element and the number as the second
        multipliedList = map (\(index, num) -> index * num) indexedList -- multiplies each element in the tuple by its index
    in multipliedList -- returns the final list

-- Example input and output:
-- multipliedByIndex [5,2,3] = [0,2,6]
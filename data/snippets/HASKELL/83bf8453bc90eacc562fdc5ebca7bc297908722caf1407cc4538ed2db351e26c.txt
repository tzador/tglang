-- This code snippet creates a function that takes in two lists of integers
-- and returns the sum of the squared differences of each element
-- between the two lists.

import Data.List (sort)

sumSquaredDiffs :: [Int] -> [Int] -> Int
sumSquaredDiffs xs ys = let sortedList = zip (sort xs) (sort ys) -- Sort both lists to ensure same order
                            squareDiff (x,y) = (x-y)^2 -- Function to calculate squared difference
                        in sum (map squareDiff sortedList) -- Take the sum of the squared differences and return result

-- Example usage:
sumSquaredDiffs [1,2,3] [4,5,6] -- Output: 27
sumSquaredDiffs [10,7,3] [8,2,5] -- Output: 41
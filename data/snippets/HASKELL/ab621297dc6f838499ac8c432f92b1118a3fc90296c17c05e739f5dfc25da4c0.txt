{-# LANGUAGE FlexibleInstances #-}

-- | Function that applies a function repeatedly on a value
foo :: (a -> a) -> a -> a
foo f x = f (foo f x)

-- | Data type definition
data MyType a b = MyData a [b]

-- | Type synonym declaration
type FancyInt = Int

-- | Type class instance for MyType
instance Functor (MyType a) where
    fmap f (MyData a bs) = MyData a (map f bs)
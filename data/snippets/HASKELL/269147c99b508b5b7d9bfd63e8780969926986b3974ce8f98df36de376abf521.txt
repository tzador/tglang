let list = [1,2,3,4,5]
let square x = x * x
let mappedList = map square list -- This line maps the function 'square' to each element in the list, resulting in [1,4,9,16,25]
let filteredList = filter even mappedList -- This line filters the mapped list to only include even numbers, resulting in [4,16]
let finalList = zip list filteredList -- This line zips the original list with the filtered list, resulting in [(1,4),(2,16)]

main :: IO () -- This is the main function in Haskell, which has an IO type, indicating that it performs input/output operations.
main = do
  putStrLn "The original list is:" -- Prints the following string to the console
  print list -- Prints the original list to the console
  putStrLn "The squared list is:" -- Prints the following string to the console
  print mappedList -- Prints the mapped list to the console
  putStrLn "The filtered list is:" -- Prints the following string to the console
  print filteredList -- Prints the filtered list to the console
  putStrLn "The final list is:" -- Prints the following string to the console
  print finalList -- Prints the final list to the console

-- Output:
--[1,2,3,4,5]
--[1,4,9,16,25]
--[4,16]
--[(1,4),(2,16)]
import Data.List

-- | Returns the maximum element in a list, using foldl1.
maxElement :: Ord a => [a] -> a
maxElement = foldl1 max

-- | Returns the minimum element in a list, using foldl1.
minElement :: Ord a => [a] -> a
minElement = foldl1 min

-- | Calculates the mean value of a list of numbers.
mean :: Fractional a => [a] -> a
mean xs = sum xs / fromIntegral (length xs)

-- | Returns the first n elements of a list.
take' :: Int -> [a] -> [a]
take' n xs = foldl (\acc x -> if length acc == n then acc else acc ++ [x]) [] xs

-- | Returns the last n elements of a list.
drop' :: Int -> [a] -> [a]
drop' n xs = foldr (\x acc -> if length acc == n then acc else x : acc) [] xs
{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, ScopedTypeVariables #-}

-- Data structure for a binary search tree
data BST k v = Empty | Node k v (BST k v) (BST k v)

-- Type class for a collection that can store key-value pairs
class Collection c k v where
    empty :: c k v                                    -- Returns an empty collection
    insert :: k -> v -> c k v -> c k v                 -- Inserts a key-value pair into the collection
    lookup :: k -> c k v -> Maybe v                    -- Looks up a value given a key in the collection
    size :: c k v -> Int                              -- Returns the size of the collection

-- Implementation of the Collection type class for the BST data structure
instance Ord k => Collection BST k v where
    empty = Empty

    insert k v Empty = Node k v Empty Empty
    insert k v (Node k' v' left right)
        | k < k' = Node k' v' (insert k v left) right
        | k > k' = Node k' v' left (insert k v right)
        | otherwise = Node k v left right

    lookup _ Empty = Nothing
    lookup k (Node k' v' left right)
        | k < k' = lookup k left
        | k > k' = lookup k right
        | otherwise = Just v'

    size Empty = 0
    size (Node _ _ left right) = 1 + size left + size right
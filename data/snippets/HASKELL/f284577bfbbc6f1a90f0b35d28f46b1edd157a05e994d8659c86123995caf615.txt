/// An example of a function in Haskell that calculates the factorial of a number.
factorial :: Int -> Int
## This function takes in an integer as input and returns another integer.
factorial n = if n < 0        -- 'if' statement to check if number is negative
    then error "Number must be non-negative"    -- 'error' function to display error message
    else if n == 0        -- 'if' statement to check if number is zero
        then 1        -- base case - return 1
        else n * factorial (n - 1)    -- recursive call to calculate factorial

main = do    -- 'do' statement to start main function
    putStrLn "Enter a number: "    -- print statement to ask for user input
    number <- getLine    -- 'getLine' function to get user input as a string
    let n = read number :: Int    -- convert string to integer
    putStrLn ("The factorial of " ++ show n ++ " is " ++ show (factorial n))    -- print statement to display factorial
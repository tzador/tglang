-- Function to find the longest common subsequence between two strings
lcs :: String -> String -> [Char]
lcs [] _ = []
lcs _ [] = []
lcs (x:xs) (y:ys)
| x == y = x : lcs xs ys			-- if characters are equal, add to subsequence
| otherwise = longest (lcs (x:xs) ys) (lcs xs (y:ys))		-- otherwise, find longest subsequence without current character
    where
        longest xs ys
        | length xs > length ys = xs		-- helper function to return longest of two subsequences
        | otherwise = ys

-- Example usage
main :: IO ()
main = do
    let str1 = "coding"
    let str2 = "program"
    print (lcs str1 str2)		-- output: 'coing'
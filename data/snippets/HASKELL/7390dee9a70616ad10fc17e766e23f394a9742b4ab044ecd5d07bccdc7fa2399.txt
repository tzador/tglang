-- This function takes in a list of numbers and returns the sum of all even numbers in the list
evenSum :: [Int] -> Int
evenSum nums = foldr (+) 0 (filter even nums)

-- Example input and output:
-- evenSum [1,2,3,4,5] --> 6
-- evenSum [10,20,3,5,7,9] --> 30
--
-- Explanation:
-- The first line declares the function "evenSum" which takes in a list of integers as its argument and returns an integer as its output.
-- The second line uses the "foldr" function to recursively sum all elements of the list. The initial value is set to 0 and the accumulator function is the "+" operator.
-- The third line uses the "filter" function to only include even numbers from the list.
-- The final result is the sum of all even numbers in the list.
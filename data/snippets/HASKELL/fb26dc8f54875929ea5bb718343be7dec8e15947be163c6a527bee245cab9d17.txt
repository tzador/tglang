import Data.List

-- A function that takes in two lists and returns the intersection of the two lists
intersect :: Eq a => [a] -> [a] -> [a]
intersect [] _ = []
intersect (x:xs) ys
    | x `elem` ys = x : intersect xs ys
    | otherwise = intersect xs ys
    
-- A function that takes in a list of numbers and returns the maximum number in the list
maxNumber :: Ord a => [a] -> a
maxNumber [] = error "List empty"
maxNumber [x] = x
maxNumber (x:xs) = max x (maxNumber xs)

-- A function that takes in a list and returns a new list with only the unique elements
unique :: Eq a => [a] -> [a]
unique [] = []
unique (x:xs)
    | x `elem` xs = unique xs
    | otherwise = x : unique xs

-- A function that takes in a string and returns the reverse of the string
reverseString :: [Char] -> [Char]
reverseString = reverse
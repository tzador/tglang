{-# LANGUAGE OverloadedStrings #-}

import Data.List
import Data.Text (Text)
import qualified Data.Text as T
import qualified Data.Text.IO as TIO

data User = User {
  username :: Text,
  email :: Text,
  age :: Int
}

stringToUser :: Text -> User
stringToUser input = User {
  username = extractValue "username" input,
  email = extractValue "email" input,
  age = extractValue "age" input
}

extractValue :: Text -> Text -> Text
extractValue key input = T.takeWhile (/= ',') $ T.drop (T.length key + 2) input

main :: IO ()
main = do
  input <- TIO.readFile "users.txt"
  let users = map stringToUser $ T.lines input
  let olderUsers = filter (\user -> age user > 30) users
  let usernames = map username olderUsers
  let formatted = T.intercalate ", " usernames
  TIO.writeFile "older_users.txt" formatted
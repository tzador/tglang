-- This is a recursive function to calculate the nth Fibonacci number
fib :: Int -> Int
fib n
    | n == 0 = 0
    | n == 1 = 1
    | otherwise = fib (n-1) + fib (n-2)
    
-- This is a higher order function that takes in a function and a value and applies the function to the value n times
applyNTimes :: (a -> a) -> Int -> a -> a
applyNTimes f n x
    | n == 0 = x
    | otherwise = f (applyNTimes f (n-1) x)
{-# LANGUAGE GADTs, DataKinds, KindSignatures, TypeApplications #-}

import Data.Proxy

-- | A type-level list of types with a heterogeneous length
data HList (ts :: [*]) where
  HNil :: HList '[]
  (:>) :: t -> HList ts -> HList (t ': ts)

infixr 5 :>

-- | Function that accepts a heterogeneous list of types and returns a list of Proxies
proxyList :: HList ts -> [Proxy]
proxyList HNil = []
proxyList (x :> xs) = Proxy @x : proxyList xs
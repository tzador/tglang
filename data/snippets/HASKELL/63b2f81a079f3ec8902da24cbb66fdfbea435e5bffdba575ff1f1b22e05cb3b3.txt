{-# LANGUAGE MultiParamTypeClasses #-}
    data Tree a = Empty | Node a (Tree a) (Tree a)
    
    class MonadMatcher m where
        (>>=)    :: m a -> (a -> m b) -> m b
    
    instance MonadMatcher Tree where
        Empty >>= _ = Empty
        (Node c left right) >>= f =
            let newLeft  = left  >>= f
                newRight = right >>= f
            in  Node c newLeft newRight
-- A function to find the maximum element in a given list using recursion

-- Function definition with type declaration, takes a list of integers and returns an integer
maxElement :: [Int] -> Int
maxElement [] = error "Empty list!"         -- Base case: if list is empty, return an error
maxElement [x] = x                          -- Base case: if list contains only one element, return that element
maxElement (x:xs)                           -- Recursive case: take first element and rest of the list
    | x > maxTail = x                       -- If first element is greater than the max element of the rest of the list
    | otherwise = maxTail                   -- Return the max element of the rest of the list
    where maxTail = maxElement xs           -- Calculate max element of rest of the list using recursion
    
-- Example call: maxElement [3,5,2,7,4]
-- Output: 7
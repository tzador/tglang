> {-# LANGUAGE RankNTypes #-}  -- enable rank-n type polymorphism

{-|
    SmallType is a wrapped type that has a function `toStr` and an
    instance of `Show` for easy printing.
-}
newtype SmallType = SmallType { toStr :: String }

{-|
    LargeType is a wrapped type that has a function `toStr` and also
    has an existential type for a type that is showable.
-}
newtype LargeType = LargeType {
    toStr :: forall a. Show a => a -> String  -- functor function
    }

{-| `main` function that creates and prints out both types -}
main :: IO ()
main = do
    let small = SmallType "This is a small type."
        large = LargeType show
    putStrLn $ "Small type: " ++ toStr small
    putStrLn $ "Large type: " ++ toStr large
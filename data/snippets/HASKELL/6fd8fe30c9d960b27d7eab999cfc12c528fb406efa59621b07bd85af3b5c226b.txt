{-# LANGUAGE OverloadedStrings #-}
-- Function to double an integer
double :: Int -> Int
double x = x * 2
-- Function to filter out even numbers from a list
filterEven :: [Int] -> [Int]
filterEven xs = filter even xs

-- List comprehension to generate a list of squares from 1 to 10
squares :: [Int]
squares = [x^2 | x <- [1..10]]

-- An algebraic data type for a binary tree
data BinaryTree a
    = Leaf
    | Node (BinaryTree a) a (BinaryTree a)

-- Function to insert an element into a binary tree
insert :: Ord a => a -> BinaryTree a -> BinaryTree a
insert x Leaf = Node Leaf x Leaf
insert x (Node left root right)
    | x == root = Node left root right
    | x < root = Node (insert x left) root right
    | otherwise = Node left root (insert x right)
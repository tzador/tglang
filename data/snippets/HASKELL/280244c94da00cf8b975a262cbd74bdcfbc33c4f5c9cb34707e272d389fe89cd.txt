--This code snippet uses the `Data.List` module in Haskell to perform mathematical operations on a list of numbers
import Data.List

--A function to calculate the mean of a list of numbers
mean :: [Double] -> Double
mean xs = sum xs / fromIntegral (length xs)

--A function to calculate the median of a list of numbers
median :: [Double] -> Double
median xs = sort xs !! (length xs `div` 2)

--A function to calculate the mode of a list of numbers
mode :: [Double] -> Double
mode xs = head $ maximumBy compareLengths $ group $ sort xs
    where compareLengths xs ys = compare (length xs) (length ys)

--A function to calculate the standard deviation of a list of numbers
stdDeviation :: [Double] -> Double
stdDeviation xs = sqrt (sum [(x - m) ^ 2 | x <- xs]) / fromIntegral (length xs)
    where m = mean xs
    
--An example of using these functions on a list of numbers
exampleList = [5, 10, 3, 8, 5, 9, 2, 7]
exampleMean = mean exampleList
exampleMedian = median exampleList
exampleMode = mode exampleList
exampleStdDeviation = stdDeviation exampleList
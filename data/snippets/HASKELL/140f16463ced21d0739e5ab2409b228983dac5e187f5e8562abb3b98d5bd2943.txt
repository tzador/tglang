elem :: Eq a => a -> [a] -> Bool
elem _ [] = False
elem e (x:xs) = if e == x then True else elem e xs

minimum :: Ord a => [a] -> a
minimum [] = error "empty list"
minimum [x] = x
minimum (x:xs) = min x (minimum xs)

fibanacci :: Int -> Maybe Int
fibanacci n 
  | n < 0 = Nothing
  | n == 0 = Just 0
  | n == 1 = Just 1
  | otherwise = case (fibanacci (n-1), fibanacci (n-2)) of
                    (Just x, Just y) -> Just (x+y)
                    _                -> Nothing
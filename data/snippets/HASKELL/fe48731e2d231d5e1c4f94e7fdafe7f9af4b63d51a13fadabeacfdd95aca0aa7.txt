{-# LANGUAGE FlexibleInstances  #-} 

-- This code snippet demonstrates the use of flexible instances in Haskell. 

data Animal = Dog | Cat | Bird
type Sound = String

-- Defining type classes and instances 
class MakeSound a where 
  createSound :: a -> Sound 

instance MakeSound Animal where  
  createSound Dog = "Woof!" 
  createSound Cat = "Meow!" 
  createSound Bird = "Tweet!" 

-- Defining a new instance using flexible instances
instance MakeSound Char where 
  createSound 'b' = "Bee!"
  createSound 'c' = "Cat!"

-- Using functions to utilize instances 
makeAnimalSound :: Animal -> Sound 
makeAnimalSound x = createSound x 

makeCharSound :: Char -> Sound 
makeCharSound x = createSound x 

main :: IO() 
main = do
  putStrLn $ makeAnimalSound Dog -- should output "Woof!"
  putStrLn $ makeAnimalSound Cat -- should output "Meow!"
  putStrLn $ makeAnimalSound Bird -- should output "Tweet!"
  putStrLn $ makeCharSound 'b' -- should output "Bee!"
  putStrLn $ makeCharSound 'c' -- should output "Cat!"
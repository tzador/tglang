-- Function to recursively merge two lists
merge :: (Ord a) => [a] -> [a] -> [a]
merge [] ys = ys -- Base case
merge xs [] = xs -- Base case
merge (x:xs) (y:ys) -- Recursive case
   | x < y = x : merge xs (y:ys) -- If first element of first list is smaller, add it and recursively merge the rest with the second list
   | otherwise = y : merge (x:xs) ys -- Else, add the first element of second list and recursively merge with first list

main = do
    let list1 = [1, 3, 5, 7, 9]
    let list2 = [2, 4, 6, 8, 10]
    let merged = merge list1 list2 -- Merge the two lists
    putStrLn $ "Merged list: " ++ show(merged) -- Print the merged list
--This is a function that takes in two lists and checks if the first list is a subset of the second list
isSubset :: Eq a => [a] -> [a] -> Bool
isSubset [] _ = True
isSubset (x:xs) ys = x `elem` ys && isSubset xs ys
--This function takes in a list of integers, filters out negative numbers, takes the absolute value of each number, and adds them all together
sumOfPositiveAbs :: [Int] -> Int
sumOfPositiveAbs xs = sum $ map abs $ filter (>0) xs
--This is a function that implements the quicksort algorithm to sort a list of integers
quicksort :: Ord a => [a] -> [a]
quicksort [] = []
quicksort (p:xs) = (quicksort lesser) ++ [p] ++ (quicksort greater)
    where
        lesser = filter (<p) xs
        greater = filter (>=p) xs
--This function takes in a string and reverses the order of the characters
revString :: String -> String
revString [] = []
revString (x:xs) = (revString xs) ++ [x]
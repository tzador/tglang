-- Function to calculate the fibonacci sequence up to a given number
fib :: Integer -> [Integer] -- Annotated type signature for the function
-- Base cases: 0 and 1 have a fibonacci number of 1
fib 0 = [1]
fib 1 = [1, 1]
-- General case: Adding the last two numbers in the sequence
fib n = fib (n-1) ++ [last (fib (n-1)) + last (fib (n-2))]
-- Main function to print the fibonacci sequence for a given number
main :: IO ()
main = do -- do block for IO action
    putStr "Enter a number: "
    numStr <- getLine -- Read input from user
    let num = read numStr -- Convert input string to integer
        sequence = take num (fib num) -- Call fib function and take first num numbers
    putStrLn ("The fibonacci sequence up to " ++ show num ++ " is: ")
    print sequence -- Print the fibonacci sequence
-- Sample output:
-- Enter a number: 10
-- The fibonacci sequence up to 10 is:
-- [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
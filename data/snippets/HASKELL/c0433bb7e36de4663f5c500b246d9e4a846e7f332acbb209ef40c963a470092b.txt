{-# LANGUAGE FunctionalDependencies, ScopedTypeVariables, FlexibleInstances, UndecidableInstances, RankNTypes #-}

module ExampleModule where

import Data.List (groupBy, sortBy)
import Data.Ord (comparing)

class User a b c | a b -> c where
    showUser :: a -> b -> c -- Function to display user information

data UserType = Admin | Guest | RegularUser -- Custom data type for user types

data UserRecord = UserRecord { -- Example data record for a user
    name :: String,
    age :: Int,
    user_type :: UserType
}

instance Show UserType where -- Implementing the Show typeclass for UserType data type
    show Admin = "Admin"
    show Guest = "Guest"
    show RegularUser = "Regular User"

instance Show UserRecord where -- Implementing the Show typeclass for UserRecord data type
    show (UserRecord name age user_type) = -- Pattern match on the UserRecord data type
        "Name: " ++ name ++ "\nAge: " ++ show age ++ "\nUser Type: " ++ show user_type

sortByAge :: [UserRecord] -> [UserRecord]
sortByAge = sortBy (comparing age) -- Function to sort a list of UserRecords by age

groupByUserType :: [UserRecord] -> [(UserType, [UserRecord])] -- Function to group UserRecords by their user type
groupByUserType = groupBy (\x y -> user_type x == user_type y) . sortByAge

displayUsersByType :: [UserRecord] -> String -- Function to display user records grouped by user type
displayUsersByType = concatMap displayGroup . groupByUserType
  where
    displayGroup (user_type, user_records) = -- Pattern match on a tuple of a user type and a list of user records
        "User Type: " ++ show user_type ++ "\n" ++ unlines (map show user_records) ++ "\n" -- Display the user type and list of user records

-- Example usage of the above functions
users :: [UserRecord] -- List of example UserRecords
users = [
    UserRecord "John" 25 RegularUser,
    UserRecord "Alice" 30 Admin,
    UserRecord "Bob" 28 RegularUser,
    UserRecord "Jane" 32 Guest,
    UserRecord "Mike" 24 RegularUser]

main :: IO () -- IO function to display the sorted and grouped user records
main = putStrLn (displayUsersByType users) -- Prints the formatted user records to the console
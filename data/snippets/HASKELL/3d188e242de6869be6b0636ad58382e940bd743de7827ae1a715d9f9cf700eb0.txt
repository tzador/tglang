-- Definition of a Quicksort function in Haskell
quicksort :: (Ord a) => [a] -> [a]  
quicksort [] = [] -- Base case, an empty list is already sorted
quicksort (x:xs) = -- Recursive case, partition the list into two lists and concatenate them
  let smallerSorted = quicksort [a | a <- xs, a <= x] -- List comprehension to get all elements smaller than or equal to the pivot
      biggerSorted = quicksort [a | a <- xs, a > x] -- List comprehension to get all elements bigger than the pivot
  in smallerSorted ++ [x] ++ biggerSorted -- Concatenate the smaller sorted list, pivot, and bigger sorted list
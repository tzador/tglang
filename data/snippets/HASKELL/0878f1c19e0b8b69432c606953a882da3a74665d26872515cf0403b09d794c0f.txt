-- This is a function that checks if a number is prime
isPrime :: Int -> Bool
isPrime n
    | n == 0 = False -- 0 is not a prime number
    | n == 1 = False -- 1 is not a prime number
    | n == 2 = True -- 2 is the only even prime number
    | otherwise = all (\x -> n `mod` x /= 0) [2..intSqrt n]
    where intSqrt n = floor (sqrt (fromIntegral n)) -- computes the integer square root of a number using type conversion and the `floor` function
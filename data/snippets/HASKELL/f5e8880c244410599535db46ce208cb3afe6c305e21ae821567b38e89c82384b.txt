-- This is a function that takes in a list and a function as parameters 
-- and returns a list with the function applied to each element.
applyToEach :: [a] -> (a -> b) -> [b]
applyToEach [] _ = [] -- Base case: if list is empty, return empty list
applyToEach (x:xs) f = f x : applyToEach xs f  -- Recursively apply function to each element and add to list

-- Example usage: applying the function (+1) to each element in the list [1,2,3]
-- Will result in the list [2,3,4]
applyToEach [1,2,3] (+1)
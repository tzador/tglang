--This code snippet creates a fibonacci sequence using recursion and a Haskell-specific function.
--First, we declare a function with two parameters.
fibonacci :: Int -> Int -> [Int]
fibonacci x y = x : fibonacci y (x+y)
--The first two values of the sequence are declared explicitly, while the rest are calculated using the function itself.
--We can then use the built-in function 'take' to specify how many numbers we want in our sequence.
take 10 (fibonacci 0 1) --This will generate the first 10 numbers in the fibonacci sequence.
--Output: [0,1,1,2,3,5,8,13,21,34]
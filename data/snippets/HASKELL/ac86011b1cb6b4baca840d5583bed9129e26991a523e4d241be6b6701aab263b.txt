{- This function implements the quicksort algorithm -}
quicksort :: Ord a => [a] -> [a]
quicksort [] = [] {- base case -}
quicksort (x:xs) =  {- recursive case -}
  let smallerSorted = quicksort [a | a <- xs, a <= x]  {- partition list into smaller elements -}
      biggerSorted = quicksort [a | a <- xs, a > x]  {- partition list into larger elements -}
  in smallerSorted ++ [x] ++ biggerSorted  {- combine smaller and larger elements with pivot element -}
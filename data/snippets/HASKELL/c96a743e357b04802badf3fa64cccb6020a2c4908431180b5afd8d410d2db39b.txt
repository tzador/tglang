-- This code snippet sorts a list using a modified version of quicksort algorithm
-- with a custom pivot selection function
-- Input: unsorted list
-- Output: sorted list
import Data.List (partition)

-- | Function to select pivot for quicksort
-- Takes the first and last element of a list and returns the middle element
pivot :: (Ord a) => [a] -> a
pivot (x:_:y:_) = y
pivot _ = error "Invalid list"

-- | Quick sort with custom pivot selection
quicksort :: (Ord a) => [a] -> [a]
quicksort [] = []
quicksort (x:xs) = quicksort lesser ++ [x] ++ quicksort greater
    where (lesser, greater) = partition (< pivot (x:xs)) xs
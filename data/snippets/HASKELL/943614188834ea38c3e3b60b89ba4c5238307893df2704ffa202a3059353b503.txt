import Data.List
-- Sort a list using insertion sort algorithm
insertionSort :: Ord a => [a] -> [a]
insertionSort [] = []
insertionSort (x:xs) = insert x (insertionSort xs)
  where insert x [] = [x]
        insert x ys@(y:ys')
          | x <= y = x : ys
          | otherwise = y : insert x ys'
-- Find the n-th Fibonacci number using memoization
fibMemo :: Int -> Integer
fibMemo = (map fib [0..] !!)
  where fib 1 = 0
        fib 2 = 1
        fib n = fibMemo (n-1) + fibMemo (n-2)
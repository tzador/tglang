-- Takes in a list of integers and returns a list of all odd numbers multiplied by 3
--Example input: [1,2,3,4,5]
--Example output: [3,9,15]

oddTriple :: [Int] -> [Int]  -- defines a function named 'oddTriple' that takes in a list of Integers and returns a list of Integers
oddTriple [] = []  -- handles the case of an empty list by returning an empty list
oddTriple (x:xs)   -- pattern matching on the list, x represents the head of the list, xs represents the rest of the list
  | odd x = (x * 3) : oddTriple xs   -- checks if x is an odd number, if so, multiplies it by 3 and adds it to the result of recursively calling the function on the rest of the list
  | otherwise = oddTriple xs   -- if x is not odd, simply call the function on the rest of the list
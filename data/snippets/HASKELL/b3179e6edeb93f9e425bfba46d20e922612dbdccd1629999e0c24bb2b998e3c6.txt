{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}

-- Define a typeclass for a binary tree structure
class BinaryTree t where
    -- insert an element into the tree
    insert :: Ord a => a -> t a -> t a
    -- get the minimum element from the tree
    min :: t a -> a

-- Define a data type for a binary tree node
data Tree a = EmptyTree | Node (Tree a) a (Tree a)

-- Implement the BinaryTree typeclass for the Tree data type
instance BinaryTree Tree where
    insert x EmptyTree = Node EmptyTree x EmptyTree
    insert x (Node left y right)
        | x == y = Node left y right
        | x < y = Node (insert x left) y right
        | x > y = Node left y (insert x right)
    
    min (Node EmptyTree x _) = x
    min (Node left _ _) = $ min left

-- Create a sample tree and insert elements into it
sampleTree :: Tree Int
sampleTree = insert 5 (insert 3 (insert 7 (insert 1 (insert 9 EmptyTree))))

-- Get the minimum element from the tree and print it
main :: IO ()
main = do
    print $ min sampleTree
/************************************************************
This is a comment block in Haskell
It displays the use of recursion to perform
a quicksort algorithm on a list of integers
************************************************************/

-- define the quicksort function
quicksort :: [Int] -> [Int]

-- base case: return empty list if input is empty
quicksort [] = []

-- recursive case: partition the list using the first element as pivot
-- and then recursively call quicksort on the left and right partitions
quicksort (x:xs) = quicksort smaller ++ [x] ++ quicksort larger
    where 
        smaller = [a | a <- xs, a <= x]
        larger = [b | b <- xs, b > x]

-- example input and output
-- input: [5,3,6,2,7,5]
-- output: [2,3,5,5,6,7]
-- Function to generate a list of prime numbers up to a given limit
primesUpTo :: Int -> [Int]
primesUpTo limit = sieve [2..limit]
where sieve (x:xs) = x : sieve [x' | x' <- xs, x' `mod` x /= 0]
      sieve [] = []

-- Calculate the fibonacci sequence up to 10 terms
fibonacci :: Int -> [Int]
fibonacci n = take n $ fibList ++ [fibList !! (n - 1) + fibList !! (n - 2)]
where
    fibList = 0 : 1 : fibonacci (n - 1)
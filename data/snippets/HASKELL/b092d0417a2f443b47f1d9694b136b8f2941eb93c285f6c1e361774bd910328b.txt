-- Function to calculate the factorial of a number
factorial :: Integer -> Integer
factorial 0 = 1 -- base case
factorial n = n * factorial (n - 1) -- recursive case

-- Function to calculate the binomial coefficient
binomial :: Integer -> Integer -> Integer
binomial n k = factorial n `div` (factorial k * factorial (n - k))

-- Function to print the Pascal's Triangle up to a given row
pascalTriangle :: Integer -> String
pascalTriangle n = unlines [concatMap (\x -> show (binomial n x) ++ " ") [0..row] | row <- [0..n]]

-- Example output
-- > pascalTriangle 5
-- 1 
-- 1 1 
-- 1 2 1 
-- 1 3 3 1 
-- 1 4 6 4 1 
-- 1 5 10 10 5 1
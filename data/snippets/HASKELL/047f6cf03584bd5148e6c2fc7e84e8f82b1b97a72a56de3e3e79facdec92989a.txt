import Data.List  --importing the Data.List module

-- type synonyms for easier readability
type City = String
type Country = String

-- defining a data type for travel routes with start and end destinations
data Route = Route City Country City Country

-- function to check if two routes overlap by checking if the countries match
overlaps :: Route -> Route -> Bool
overlaps (Route _ country1 _ _) (Route _ country2 _ _) = country1 == country2

-- function to find all overlapping routes in a list of routes
findOverlapping :: [Route] -> [Route]
findOverlapping routes = filter (uncurry overlaps) [(x,y) | x <- routes, y <- routes, x /= y]

-- example list of routes
routeList = [
  Route "Paris" "France" "Amsterdam" "Netherlands",
  Route "Madrid" "Spain" "Lisbon" "Portugal",
  Route "Brussels" "Belgium" "Berlin" "Germany",
  Route "Rome" "Italy" "Vienna" "Austria"
  ]

-- printing the overlapping routes in the list
main = print $ findOverlapping routeList
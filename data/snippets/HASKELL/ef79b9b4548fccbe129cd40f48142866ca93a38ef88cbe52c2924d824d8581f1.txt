-- | Function that calculates the nth Fibonacci number
-- n: Int - the position of the number in the sequence
-- Returns: Int - the nth Fibonacci number
fib :: Int -> Int
fib n | n == 0 = 0                  -- base case
      | n == 1 = 1                  -- base case
      | otherwise = fib (n - 1) + fib (n - 2)  -- recursive case

-- | Function that calculates the sum of the first n Fibonacci numbers
-- n: Int - the number of Fibonacci numbers to sum
-- Returns: Int - the sum of the first n Fibonacci numbers
fibSum :: Int -> Int
fibSum n = helper n 0      -- call helper function with n and initial sum of 0
  where
    helper :: Int -> Int -> Int    -- helper function with two parameters
    helper 0 sum = sum      -- base case
    helper n sum = helper (n - 1) (sum + fib n)  -- recursive case
-- This is a sample program in Haskell
import Data.List

-- Define a function to find the average of a list of numbers
average :: [Int] -> Float
average numbers = (fromIntegral (sum numbers)) / (fromIntegral (length numbers))

-- Define a function to find the standard deviation of a list of numbers
standardDeviation :: [Int] -> Float
standardDeviation numbers = 
    let mean = average numbers       -- Calculate the mean
        squaredDifferences = map (\num -> (fromIntegral num - mean) ** 2) numbers  -- Square the differences from the mean
        sumSquaredDifferences = sum squaredDifferences      -- Sum the squared differences
        variance = sumSquaredDifferences / (fromIntegral (length numbers))  -- Calculate the variance
    in sqrt variance  -- Return the square root of the variance as the standard deviation

-- Input a list of numbers
let numbers = [1,2,3,4,5,6,7,8,9,10]

-- Calculate the standard deviation and print the result
print ("The standard deviation of " ++ show numbers ++ " is: " ++ show (standardDeviation numbers))

-- Output: `The standard deviation of [1,2,3,4,5,6,7,8,9,10] is: 2.8722813`
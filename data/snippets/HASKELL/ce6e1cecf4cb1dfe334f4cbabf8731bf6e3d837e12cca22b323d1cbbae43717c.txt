data User = User
    { name :: String        -- stores name of user
    , age :: Int            -- stores age of user
    , height :: Float       -- stores height of user
    , weight :: Float       -- stores weight of user
    , address :: String     -- stores address of user
    , hobbies :: [String]   -- stores list of user's hobbies
    }
    
  getName :: User -> String  -- function to get user's name
  getName (User name age height weight address hobbies) = name
  
  getBMI :: User -> Float   -- function to calculate BMI of user (height/weight^2)
  getBMI (User name age height weight address hobbies) = weight / (height * height)
  
  addFriend :: User -> String -> User  -- function to add a friend to user's hobbies list
  addFriend (User name age height weight address []) friend = User name age height weight address [friend]
  addFriend (User name age height weight address hobbies) friend = User name age height weight address (hobbies ++ [friend])
  
  main :: IO ()   -- main function 
  main = do
    let user = User "John" 25 1.7 75.0 "123 Main St." ["Playing Soccer", "Reading", "Cooking"]   -- creates user
    putStrLn $ "Name: " ++ getName user   -- prints user's name
    putStrLn $ "BMI: " ++ show (getBMI user)   -- prints user's BMI
    putStrLn "Adding a new friend..." 
    let updatedUser = addFriend user "Hiking"    -- adds a new hobby to user's list
    putStrLn $ "New Hobbies: " ++ show (hobbies updatedUser)   -- prints updated list of hobbies
-- This function merges two sorted lists into one.
-- It takes two sorted lists and returns a new sorted list that contains all elements from both lists.
merge :: Ord a => [a] -> [a] -> [a]
-- If one of the lists is empty, then the other list is the final result.
merge [] ys = ys
merge xs [] = xs
-- If the first element of the first list is smaller or equal to the first element of the second list,
-- then we add the first element of the first list to the final list and recursively call merge with the remaining elements.
merge (x:xs) (y:ys) 
  | x <= y = x : merge xs (y:ys)
-- Otherwise, we add the first element of the second list to the final list and recursively call merge with the remaining elements.
  | otherwise = y : merge (x:xs) ys
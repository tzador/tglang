-- | Function to recursively compute the Fibonacci sequence up to a given number
fibonacci :: Int -> [Int]
fibonacci n =
  let
    -- Helper function to recursively compute the Fibonacci sequence
    fibHelp :: Int -> Int -> [Int] -> [Int]
    fibHelp a b fibSeq
      | a == 0 = fibSeq -- Base case
      | otherwise = fibHelp (a - 1) (a + b) (fibSeq ++ [a + b]) -- Recursive case
  in
    fibHelp n 0 [0, 1] -- Initial call with first two numbers in the sequence

-- | Output the first 10 numbers in the Fibonacci sequence
fibonacci 10
-- Output: [0,1,1,2,3,5,8,13,21,34]
-- This function takes in two integers and returns the sum of their squares
-- Input: a - first integer
--        b - second integer
-- Output: sum of squares
squareSum :: Int -> Int -> Int
squareSum a b = (a^2) + (b^2)

-- This function takes in a list of tuples and checks if each tuple's first element is equal to its second element
-- Input: lst - list of tuples
-- Output: list of booleans, where each boolean represents if the first element of the corresponding tuple is equal to the second element
checkTuples :: [(Int, Int)] -> [Bool]
checkTuples lst = map (\(x,y) -> x == y) lst

-- This function takes in a list of strings and returns a new list with only the strings that are longer than 5 characters
-- Input: lst - list of strings
-- Output: new list with strings longer than 5 characters
filterLongStrings :: [String] -> [String]
filterLongStrings lst = filter (\x -> length x > 5) lst

-- This function checks if a string is a palindrome (same when read backwards)
-- Input: str - string to be checked
-- Output: boolean indicating if the string is a palindrome or not
checkPalindrome :: String -> Bool
checkPalindrome str = str == reverse str
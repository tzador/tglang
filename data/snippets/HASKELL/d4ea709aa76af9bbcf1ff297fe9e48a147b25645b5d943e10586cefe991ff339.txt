-- This is a function that finds the maximum element in a list using recursion

maximumList :: Ord a => [a] -> a       -- This is the type signature of the function, which indicates that it takes in a list of any ordered type and returns an element of that type
maximumList [] = error "Empty list"     -- This is our base case, if the list is empty, we throw an error
maximumList [x] = x                     -- If the list has only one element, then that element must be the maximum, so we return it
maximumList (x:xs) = max x (maximumList xs)       -- Otherwise, we compare the first element of the list with the maximum of the rest of the list, using the built-in max function to find the greater value

-- Example usage
-- maximumList [5, 8, 12, 4, 9] returns 12, which is the maximum element in the list
-- The following function takes in an integer and returns the sum of all its digits
sumDigits :: Int -> Int
sumDigits n
  | n < 10 = n -- Base case, if number is a single digit, return the number itself
  | otherwise = (n `mod` 10) + sumDigits (n `div` 10) -- Recursive case, sum the digit in the ones place and call the function on the remaining digits

-- Example call:
-- sumDigits 123 = 1 + sumDigits 23
--               = 1 + (3 + sumDigits 2)
--               = 1 + 3 + (2 + sumDigits 0)
--               = 1 + 3 + 2 + 0
--               = 6
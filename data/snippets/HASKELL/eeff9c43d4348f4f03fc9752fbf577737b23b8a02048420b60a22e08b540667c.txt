-- Example of a function that checks if a given number is prime

-- Define function `isPrime` that takes in a number `n` of type `Int` and returns a `Bool` value
isPrime :: Int -> Bool
-- Use the built-in function `div` to check if the given number `n` can be divided evenly by any number between 2 and `n - 1`
-- If it can, then the number is not prime
isPrime n = divisors n == [1, n]
  where
    -- Helper function `divisors` takes in a number `m` of type `Int` and returns a list of its divisors
    divisors :: Int -> [Int]
    -- Return the list of divisors from 2 to `m - 1`
    divisors m = [x | x <- [2 .. m - 1], m `mod` x == 0]
-- Declare a recursive function 'fib' that calculates the nth Fibonacci number
fib :: Int -> Int
fib 0 = 0 -- base case, returns 0 if input is 0
fib 1 = 1 -- base case, returns 1 if input is 1
fib n = fib (n-1) + fib (n-2) -- recursive case, calculates the sum of the previous two Fibonacci numbers

-- Declare a function 'printFib' that takes in an integer 'n' and prints the first 'n' Fibonacci numbers
printFib :: Int -> IO ()
printFib n = mapM_ putStrLn $ map show $ map fib [1..n]
-- converts list of integers to list of strings, then prints each element on a new line using mapM_ putStrLn

-- Call the 'printFib' function with n = 10
printFib 10
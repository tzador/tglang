--Function that finds the nth prime number
primes :: [Int]
primes = sieve [2..]
  where
    sieve (p:xs) = p : sieve [x | x <- xs, x `mod` p /= 0]

nthPrime :: Int -> Int
nthPrime n = primes !! (n - 1)

--Example usage:
--nthPrime 5
--Returns: 11

--Function to find the first n prime numbers
firstNPrimes :: Int -> [Int]
firstNPrimes n = take n primes

--Example usage:
--firstNPrimes 5
--Returns: [2, 3, 5, 7, 11]

--Function to calculate the sum of the first n prime numbers
sumOfFirstNPrimes :: Int -> Int
sumOfFirstNPrimes n = sum (firstNPrimes n)

--Example usage:
--sumOfFirstNPrimes 5
--Returns: 28
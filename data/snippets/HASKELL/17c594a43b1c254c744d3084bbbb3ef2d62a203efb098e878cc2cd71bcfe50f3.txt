-- Function to calculate the n-th Fibonacci number
fib :: Int -> Int
-- Pattern matching to handle base cases
fib 0 = 0
fib 1 = 1
fib n =
  -- Recursive call to calculate the (n-1)th and (n-2)th Fibonacci numbers
  let first = fib (n-1)
      second = fib (n-2)
  -- Summing the two numbers to get the n-th Fibonacci number
  in first + second
-- Main function to take input from user
main :: IO ()
main = do
  putStrLn "Enter a number:"
  -- Reading input from user and converting it to integer
  input <- getLine
  let num = read input :: Int
  -- Printing the output by calling the fib function
  putStrLn ("The " ++ show num ++ "th Fibonacci number is " ++ show (fib num))
-- Create a function that takes in a list of numbers and returns the number of odd elements.

getOddCount :: [Int] -> Int -- Function signature

getOddCount [] = 0 -- Base case for empty list
getOddCount (x:xs) -- Pattern matching for head and tail of list
  | x `mod` 2 == 1 = 1 + getOddCount xs -- If head is odd, increment count and call function on tail
  | otherwise = getOddCount xs -- If head is even, simply call function on tail
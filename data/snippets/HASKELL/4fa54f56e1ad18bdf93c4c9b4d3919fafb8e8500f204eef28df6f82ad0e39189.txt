-- This is a function that takes in a list of integers and returns a new list with only even integers
filterEvenInts :: [Int] -> [Int]
filterEvenInts [] = []
filterEvenInts (x:xs)
    | even x = x : filterEvenInts xs
    | otherwise = filterEvenInts xs

-- This is a function that takes in two integers and returns their sum
addInts :: Int -> Int -> Int
addInts x y = x + y

-- This is a function that uses recursion to calculate the factorial of a given integer
factorial :: Int -> Int
factorial 0 = 1
factorial n = n * factorial (n-1)

-- This is a function that takes in three strings and sorts them alphabetically
sortStrings :: String -> String -> String -> (String, String, String)
sortStrings s1 s2 s3 = (minString, middleString, maxString)
    where
        minString = min s1 (min s2 s3)
        maxString = max s1 (max s2 s3)
        middleString
            | s1 == minString && s2 == maxString = s3
            | s2 == minString && s3 == maxString = s1
            | otherwise = s2
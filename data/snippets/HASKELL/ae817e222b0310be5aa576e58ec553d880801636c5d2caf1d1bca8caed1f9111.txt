-- The following code defines a type called 'Tree' which represents a binary tree data structure
data Tree a = Empty | Node a (Tree a) (Tree a)

-- The function 'flattenTree' takes in a binary tree and returns a list of its elements in order
flattenTree :: Tree a -> [a]
flattenTree Empty = []
flattenTree (Node x left right) = [x] ++ flattenTree left ++ flattenTree right
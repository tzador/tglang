import Data.List (intercalate)

data Book = Book
  { title :: String,
    author :: String,
    yearPublished :: Int,
    pages :: Int
  }

"""
The Book data type represents a book with a title, author, year of publication, and number of pages.
"""

main :: IO ()
main =
  let books = [Book "Pride and Prejudice" "Jane Austen" 1813 416,
               Book "To Kill a Mockingbird" "Harper Lee" 1960 281,
               Book "1984" "George Orwell" 1949 328,
               Book "The Great Gatsby" "F. Scott Fitzgerald" 1925 218,
               Book "Animal Farm" "George Orwell" 1945 112,
               Book "The Catcher in the Rye" "J.D. Salinger" 1951 224,
               Book "Brave New World" "Aldous Huxley" 1932 288,
               Book "Little Women" "Louisa May Alcott" 1868 759,
               Book "The Hobbit" "J.R.R. Tolkien" 1937 304,
               Book "Gone with the Wind" "Margaret Mitchell" 1936 1037]
      -- A list of books to work with

      -- Function to filter books by a given year
      filterByYear :: [Book] -> Int -> [Book]
      filterByYear books year =
        filter (\book -> yearPublished book == year) books

      -- Function to find the longest book title
      longestTitle :: [Book] -> String
      longestTitle books =
        let titles = map title books
        in maximumBy (\x y -> length x `compare` length y) titles

      -- Function to calculate the average number of pages
      averagePages :: [Book] -> Int
      averagePages books =
        let total = sum $ map pages books
            count = length books
        in total `div` count

      -- Function to print out the details of a book
      printBook :: Book -> String
      printBook book =
        let bookInfo =
              [ "Title:    " ++ title book,
                "Author:   " ++ author book,
                "Year:     " ++ show (yearPublished book),
                "Pages:    " ++ show (pages book)
              ]
        in intercalate "\n" bookInfo
  in do
    putStrLn "Books published in 1945:"
    let booksFrom1945 = filterByYear books 1945
        numBooks = length booksFrom1945
    putStrLn $ "Number of books: " ++ show numBooks
    putStrLn "Longest book title:"
    putStrLn $ longestTitle booksFrom1945
    putStrLn "Average number of pages:"
    putStrLn $ show $ averagePages books
    putStrLn "Details of the first book:"
    putStrLn $ printBook $ head books
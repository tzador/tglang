-- This is a quicksort function implemented in Haskell

-- Define a function called quicksort that takes in a list of integers and returns a sorted list
quicksort :: [Int] -> [Int]

-- Base case: if the list is empty, return an empty list
quicksort [] = []

-- Recursive case: partition the list into a pivot element, a list of elements smaller than the pivot,
-- and a list of elements larger than the pivot
quicksort (p:xs) = quicksort smaller ++ [p] ++ quicksort larger
                    where smaller = [x | x <- xs, x <= p]
                          larger = [x | x <- xs, x > p]
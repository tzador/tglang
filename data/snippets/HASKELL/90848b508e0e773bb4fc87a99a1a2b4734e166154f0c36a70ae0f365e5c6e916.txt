-- This function takes a list of integers as input and outputs the sum of all the even numbers in the list
sumEven :: [Int] -> Int
sumEven list = 
    foldr (\x acc -> if x `mod` 2 == 0 then acc + x else acc) 0 list

-- This function takes two integers and returns their GCD using Euclid's algorithm
gcd :: Int -> Int -> Int
gcd x y = 
    if y == 0
        then x
    else
        euclid y (x `mod` y)
    where
        euclid a b =
            if b == 0
                then a
            else
                euclid b (a `mod` b)
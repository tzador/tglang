quickSort :: Ord a => [a] -> [a]                         -- Function signature

quickSort [] = []                                         -- QuickSort on empty list
quickSort (x:xs) =                                        -- Sorting non-empty list
    let smallerSorted = quickSort [a | a <- xs, a <= x]   -- Recursively sort smaller elements
        biggerSorted = quickSort [a | a <- xs, a > x]     -- Recursively sort larger elements
    in smallerSorted ++ [x] ++ biggerSorted               -- Combine sorted elements

main = do                                                 -- Main function
    putStrLn "Enter a list of elements:"                  -- Prompt user for input
    input <- getLine                                      -- Read user input
    let numList = read input :: [Int]                     -- Convert input into list of integers
        sortedList = quickSort numList                    -- Sort the list using quickSort function
    putStrLn "Sorted list:"                               -- Print sorted list header
    print sortedList                                      -- Print sorted list
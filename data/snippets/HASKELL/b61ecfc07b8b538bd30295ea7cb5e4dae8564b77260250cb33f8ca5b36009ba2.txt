-- Function to sort a list using quicksort algorithm
quicksort :: (Ord a) => [a] -> [a]
quicksort [] = []                           -- Base case: empty list, return empty list
quicksort (x:xs) =                          -- Recursive case: first element is pivot
    let smallerSorted = quicksort [a | a <- xs, a <= x]       -- List of elements smaller than pivot, sorted
        biggerSorted = quicksort [a | a <- xs, a > x]         -- List of elements bigger than pivot, sorted
    in smallerSorted ++ [x] ++ biggerSorted    -- Concatenate sorted smaller list with pivot and sorted bigger list
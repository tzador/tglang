module Main where

-- | The 'double' function takes in an 'Int' and returns its double value.
double :: Int -> Int
double n = n * 2

-- | The 'sumSquares' function takes in two 'Int' values and returns the sum of their squares.
sumSquares :: Int -> Int -> Int
sumSquares x y = x^2 + y^2

-- | The 'power' function takes in two 'Int' values, 'x' and 'n', and returns the result of 'x' raised to the power of 'n'.
power :: Int -> Int -> Int
power x n = if n == 0 then 1 else x * power x (n-1)

-- | The 'factorial' function takes in an 'Int' value and returns the factorial value of that integer.
factorial :: Int -> Int
factorial n = if n == 0 then 1 else n * factorial (n-1)

-- | The 'fibonacci' function takes in an 'Int' value and returns the 'n'th Fibonacci number.
fibonacci :: Int -> Int
fibonacci n = if n == 0 || n == 1 then n else fibonacci (n-1) + fibonacci (n-2)

-- | The 'main' function prints the results of each function for the values 1 to 5.
main :: IO ()
main = do
  putStrLn "Double of 5 is" 
  print (double 5)
  putStrLn "Sum of squares of 2 and 3 is"
  print (sumSquares 2 3)
  putStrLn "2 raised to the power of 4 is"
  print (power 2 4)
  putStrLn "Factorial of 5 is"
  print (factorial 5)
  putStrLn "The 10th Fibonacci number is"
  print (fibonacci 10)
-- Function that takes in a list of numbers and returns the second highest number
secondHighest :: [Int] -> Int 

-- Sort the list in descending order using the built-in sort function
sortedList = reverse (sort list)

-- Verify if the list contains at least two numbers
verifyLength list = length list >= 2
 
-- Check if the first element of the list is the second highest number
-- If not, recursively call the function with the tail of the list
-- Otherwise, return the second element, which is the second highest number
secondHighest list 
    | verifyLength list == False = error "List must contain at least two numbers!"
    | head sortedList /= sortedList !! 1 = secondHighest (tail sortedList)
    | otherwise = sortedList !! 1
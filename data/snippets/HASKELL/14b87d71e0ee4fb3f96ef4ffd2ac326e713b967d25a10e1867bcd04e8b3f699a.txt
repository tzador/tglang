-- | This is a function called "factorial" that takes in an Integer
-- | and returns an Integer representing the factorial of the input.
factorial :: Integer -> Integer
factorial n 
    | n < 0 = error "Input cannot be negative." 
    | n == 0 = 1 
    | otherwise = n * factorial (n-1) 

-- | This is a function called "fibonacci" that takes in an Integer 
-- | and returns an Integer representing the nth number in the Fibonacci sequence. 
fibonacci :: Integer -> Integer 
fibonacci n 
    | n <= 0 = error "Input must be a positive number." 
    | n == 1 = 0 
    | n == 2 = 1 
    | otherwise = fibonacci (n-1) + fibonacci (n-2) 

-- | This is a function called "doubleFactorial" that takes in an Integer 
-- | and returns an Integer representing the double factorial of the input. 
-- | A double factorial is defined as n!! = n * (n-2) * (n-4) * ... * 1 
doubleFactorial :: Integer -> Integer 
doubleFactorial n 
    | n < 0 = error "Input cannot be negative." 
    | n == 0 = 1 
    | n == 1 = 1 
    | n `mod` 2 == 0 = n * doubleFactorial (n-2) 
    | otherwise = n * doubleFactorial (n-2) * doubleFactorial (n-4) * ... * 1
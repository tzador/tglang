-- Program to find the nth element of a list
-- Using recursion and pattern matching

module Main where

-- Function that takes in a list and an integer as parameters
-- and returns the nth element of the list
nthElement :: [a] -> Int -> a
nthElement [] _ = error "Empty list"
nthElement (x:xs) n
    | n < 1 = error "Index out of range"
    | n == 1 = x
    | otherwise = nthElement xs (n - 1)

-- Main function that prompts user for a list and index
-- and calls the nthElement function to find the element
main :: IO ()
main = do
    putStrLn "Enter a list: "
    input <- getLine
    let list = read input :: [Int]
    putStrLn "Enter the index: "
    index <- getLine
    let element = nthElement list (read index)
    putStrLn ("The nth element of the list is: " ++ show element)
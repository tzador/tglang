-- This function takes in two lists and returns a new list which contains all permutations of the elements of the two lists.
permutations :: [a] -> [a] -> [[a]]
permutations [] ys = []
permutations xs [] = []
permutations (x:xs) ys = 
  (map (\xs' -> x : xs') (permutations xs ys)) ++ (map (\ys' -> x : ys') (permutations ys xs))
  -- This line uses the higher-order function 'map' to apply the given anonymous function to every element in the list of permutations, 
  -- each time adding the current element 'x' to the front of the result. Finally, the two lists are concatenated together.
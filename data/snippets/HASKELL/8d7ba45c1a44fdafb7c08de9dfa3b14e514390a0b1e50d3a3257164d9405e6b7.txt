data BinaryTree a = Empty | Node a (BinaryTree a) (BinaryTree a) -- Defines a new data type which can be either an Empty tree or a Node with a value and two other binary trees

insert :: (Ord a) => BinaryTree a -> a -> BinaryTree a -- Function to insert a value into a binary tree
insert Empty x = Node x Empty Empty -- If the tree is empty, create a new node with the value
insert (Node a left right) x -- If the tree is not empty, compare the value to be inserted with the value at the current node
    | x == a = Node a left right -- If the value is equal, return the same tree
    | x < a = Node a (insert left x) right -- If the value is smaller, insert it into the left subtree
    | otherwise = Node a left (insert right x) -- If the value is larger, insert it into the right subtree

search :: (Ord a) => BinaryTree a -> a -> Bool -- Function to search for a value in a binary tree
search Empty _ = False -- If the tree is empty, the value does not exist
search (Node a left right) x -- If the tree is not empty, compare the value to be searched with the value at the current node
    | x == a = True -- If the value is equal, return True
    | x < a = search left x -- If the value is smaller, search in the left subtree
    | otherwise = search right x -- If the value is larger, search in the right subtree
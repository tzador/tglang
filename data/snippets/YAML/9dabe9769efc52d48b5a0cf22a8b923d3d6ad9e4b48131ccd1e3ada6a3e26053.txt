# Annotation: This code snippet is an example of a complex YAML configuration file 

# Comments can be added in YAML using hashes

# YAML is a hierarchical data format, similar to XML
# It uses indentation to create a tree structure

# An example of a list in YAML, items are preceded by a hyphen
favorite_fruits:
  - apple
  - banana
  - orange

# Using square brackets, we can create an array
colors: [red, green, blue]

# A YAML object starts with a colon and each key-value pair is separated by a colon
settings:
  server:
    host: 127.0.0.1
    port: 8080
  database:
    name: "mydatabase"
    username: "admin"
    password: "1234"

# We can also use double quotes to represent strings
message: "Hello, World!"

# YAML supports various data types including strings, numbers, booleans, and null values
# Here's an example of mapping a list of users with various data types
users:
  - name: John
    age: 25
    active: true
  - name: Jane
    age: 30
    active: false
  - name: Bob
    age: 40
    active: null

# Nested objects in YAML are indicated by indentation
house:
  address: 1234 N Main St
  rooms:
    - living room
    - kitchen
    - bathroom
    - bedroom:
        number: 3
        size: medium

# YAML allows for referencing key-value pairs using "&" and "*" symbols
parent:
  name: Jane
  age: 35
child:
  <<: *parent  # This will inherit the key-value pairs from the "parent" object

# We can also use anchors and aliases to reference key-value pairs in different parts of the document
server: &SERVER
  host: 127.0.0.1
  port: 8080
database:
  <<: *SERVER  # This will inherit the "host" and "port" values from the "SERVER" object
  name: "mydatabase"
  username: "admin"
  password: "1234"
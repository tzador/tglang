> # this is an example of a complex YAML code snippet

*/* Welcome to the YAML world */*

> # declaring variables with different data types
my_string: "Hello, world!" # string data type
my_number: 100 # integer data type
my_float: 3.14 # float data type
my_boolean: True # boolean data type
my_list: # list data type
    - apple
    - banana
    - orange
my_dict: # dictionary data type
    key1: value1
    key2: value2
    key3: value3
    key4:
        - nested1
        - nested2
        - nested3

> # using variables in YAML
my_string: "Welcome to"
my_list: # list data type
    - YAML
    - programming
    - world

> # using variables in string concatenation
final_string: "{{my_string}} the {{my_list[1]}} {{my_list[2]}}!" # output: Welcome to the programming world!

> # using variables in conditional statements
my_name: John
my_age: 25
is_adult: true
is_minor: false

> # if statement
{% if is_adult %}
    my_info: "I am {{my_name}}, {{my_age}} years old, and I am an adult."
{% endif %}

> # if-else statement
{% if is_adult %}
    my_info: "I am {{my_name}}, {{my_age}} years old, and I am an adult."
{% else %}
    my_info: "I am {{my_name}}, {{my_age}} years old, and I am a minor."
{% endif %}

> # using variables in loops
my_list: [1, 2, 3, 4, 5]
my_sum: 0
{% for num in my_list %}
    my_sum: "{{my_sum}} + {{num}}"
{% endfor %}
final_sum: "{{my_sum}}" # output: 0 + 1 + 2 + 3 + 4 + 5 = 15

> # importing external YAML files
my_imported_vars: !import "external_variables.yaml"

> # using anchors and aliases to avoid code repetition
name_template: &name_template
    first_name: "John"
    last_name: "Doe"

my_first_name: *name_template.first_name # output: John
my_last_name: *name_template.last_name # output: Doe
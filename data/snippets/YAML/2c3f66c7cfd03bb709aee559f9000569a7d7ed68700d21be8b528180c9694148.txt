---
# YAML Document

# This is a complex YAML document that contains multiple data types like
# strings, integers, lists, and dictionaries. 

# Lines that start with a '#' are comments and are ignored by the parser.
# Comments are used to provide additional information or explanation within a YAML document.

# The structure of a YAML document is defined by indentation.
# This document represents a collection of fruits and their corresponding quantities.

# First, we define the list of fruits
fruits:
    # each item in the list is a dictionary that contains information about a specific fruit
    - name: apple
      color: red
      quantity: 10
    - name: banana
      color: yellow
      quantity: 5
    - name: orange
      color: orange
      quantity: 8

# Next, we define the total quantity of fruits
total_quantity: 
    # The data type can also be specified explicitly using the 'yaml' tag
    !!yaml/int 23 

# Finally, we define a string that contains the names of all the fruits in the list
fruit_names: "The fruits in the list are: {{fruits | map(attribute='name') | join(', ')}}"

# The string contains a custom template that uses the built-in 'map' and 'join' filters to extract and concatenate the fruit names from the list.

# A YAML document can also contain nested structures.
# Below, we define a 'fruit_basket' dictionary that contains a nested 'apple' dictionary with its respective quantity.
fruit_basket: 
    apple: 
        quantity: 12
        color: red   

# YAML documents can also support anchors and aliases.
# These are used to create references within a document to avoid repetition. 
# Here, we create an alias 'fruit_info' that points to the first item in the 'fruits' list.
- &fruit_info 'An apple is a fruit that is typically red. It is often said that "an apple a day keeps the doctor away."'

# Finally, we can use the alias to reference the information in the 'fruit_info' 
an_apple: *fruit_info

---  # We end the YAML document with three dashes.
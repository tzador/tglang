# Example YAML code snippet
# This is a comment in YAML
# ----------------------------------------------------
# YAML is a human-readable data serialization language
# ----------------------------------------------------

# Define a new object and its properties using a colon followed by a hyphen
# The properties can be of various data types - string, integer, boolean, null, array or object
new_object:
  property1: "This is a string property"
  property2: 123 # This is an integer property
  property3: true # This is a boolean property
  property4:     # This is a null property
  property5:     # This is an array property
    - "Item 1"
    - "Item 2"
    - "Item 3"
  property6:     # This is an object property
    nested_property1: "Nested property 1"
    nested_property2: "Nested property 2"
    nested_property3:
      deeper_nested_property1: "Deeper nested property 1"
      deeper_nested_property2: "Deeper nested property 2" 
      
# Use indentation to define nested objects and arrays
nested_object:
  - property1: "Property 1 in nested object 1"
    property2: 456
    property3: false
  - property1: "Property 1 in nested object 2"
    property2: 789
    property3: true
    
# YAML supports references to avoid repeating data
# The ampersand (&) is used to define an anchor and the asterisk (*) is used to reference it later on
# This can be useful if you have multiple objects with similar properties
# Here, the first nested object is partially used as a reference for the second nested object
nested_object:
  - &reference_object
    property1: "Property 1"
    property2: 123
    property3: true
  - *reference_object
  - *reference_object
  
# YAML also supports multiline strings using the pipe (|) character
multiline_string_prop: |
  This is a multiline string property
  that spans across multiple lines
  and preserves formatting, including line breaks.
  
# You can also use single or double quotes to enclose string values
single_quote_prop: 'This is a single-quoted string property'
double_quote_prop: "This is a double-quoted string property"
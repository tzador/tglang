# This is a YAML code snippet that creates a deployment for a web application
kind: Deployment # specifies the type of resource to be created
apiVersion: apps/v1 # specifies the version of the API to use
metadata: # contains metadata for the deployment
  name: web-app-deployment # specifies the name of the deployment
  labels: # assigns labels to the deployment for easier management
    app: my-web-app
spec: # contains the specification for the deployment
  replicas: 3 # specifies the number of replica pods to create
  selector: # defines the selector to use for the pods
    matchLabels: # specifies which labels to match for the selector
      app: my-web-app
  template: # defines the pod template
    metadata: # contains metadata for the pods in the deployment
      labels: # assigns labels to the pods
        app: my-web-app
    spec: # contains the specification for the pod
      containers: # defines the list of containers in the pod
        - name: web-app-container
          image: my-web-app:latest # specifies the image for the container
          ports: # defines the port mappings for the container
            - containerPort: 80 # specifies the port to expose
          resources: # defines the resource limits for the container
            limits: # defines the maximum resource usage for the container
              cpu: 500m # specifies the amount of CPU to limit to
              memory: 512Mi # specifies the amount of memory to limit to
            requests: # defines the minimum resource requirements for the container
              cpu: 250m # specifies the amount of CPU to request
              memory: 256Mi # specifies the amount of memory to request
          env: # defines the environment variables for the container
            - name: DB_HOST # specifies the name of the environment variable
              value: mydatabase.com # specifies the value of the environment variable
            - name: DB_PASSWORD
              valueFrom: # specifies that the value will be retrieved from a secret
                secretKeyRef: # specifies that the secret will be referenced
                  name: db-credentials # specifies the name of the secret
                  key: password # specifies the name of the key within the secret
          readinessProbe: # defines a readiness probe for the container
            httpGet: # specifies an HTTP GET probe
              path: /api/health # specifies the endpoint to probe
              port: 80 # specifies the port to use
            initialDelaySeconds: 10 # specifies the delay before the first probe
            periodSeconds: 5 # specifies the interval between probes
            successThreshold: 1 # specifies the number of successful probes before the container is considered ready
            timeoutSeconds: 3 # specifies the amount of time to wait for a response to the probe
          livenessProbe: # defines a liveness probe for the container
            httpGet: # specifies an HTTP GET probe
              path: /api/health # specifies the endpoint to probe
              port: 80 # specifies the port to use
            initialDelaySeconds: 15 # specifies the delay before the first probe
            periodSeconds: 10 # specifies the interval between probes
            failureThreshold: 3 # specifies the number of failed probes before the container is considered unhealthy
            timeoutSeconds: 5 # specifies the amount of time to wait for a response to the probe
          securityContext: # defines the security context for the container
            runAsNonRoot: true # specifies that the container will run as a non-root user
      restartPolicy: Always # specifies the restart policy for the pod
# This is a long and complex configuration file in YAML format
 
# Start of file
---
 
# Set variables
variables:
  variable1: value1
  variable2: value2
  variable3: value3
 
# Declare configurations
configs:
  # Config 1
  - key1: value1
    key2: value2
    key3: value3
 
  # Config 2
  - key1: value1
    key2: value2
    key3: value3
 
# Define job stages
stages:
  # Stage 1
  - stage: 'Build' # Stage name
    displayName: 'Build project' # Display name of the stage
 
    # Execute build job
    jobs:
      # Build job
      - job: 'Build' # Job name
        displayName: 'Execute build' # Display name of the job
 
        # Use pool of build agents
        pool:
          vmImage: 'ubuntu-latest' # Name of the agent image
 
        # Define steps to execute
        steps:
          # Step 1
          - script: |
              echo "Hello, world!"
            displayName: 'Print greeting' # Display name of the step

          # Step 2
          - task: Maven@3       # Task to execute
            inputs:
              mavenPomFile: 'pom.xml'   # Path to the Maven pom.xml file
              goals: 'clean package'    # Maven goals to execute
 
        # Define success and failure conditions
        condition: succeededOrFailed() # Job is marked as success or failure if any step fails
        continueOnError: true # Continue to the next step even if this step fails
        timeoutInMinutes: 20 # Kill the job if it runs longer than the defined timeout
 
  # Stage 2
  - stage: 'Deploy'
    displayName: 'Deploy to production'
 
    # Execute deploy job
    jobs:
      # Deploy job
      - job: 'Deploy'
        displayName: 'Execute deployment'
 
        # Use deployment pool
        pool:
          vmImage: 'windows-latest'
 
        # Define steps to execute
        steps:
          # Step 1
          - task: AzureRmWebAppDeployment@3
            displayName: 'Deploy to Azure App Service'
            inputs:
              azureSubscription: 'MyAzureSubscription'
              appType: 'webApp'
              appName: 'MyWebApp'
              package: '$(Build.ArtifactStagingDirectory)/drop/MyWebApp.zip' # Path to the deployment package
 
        # Define success and failure conditions
        condition: succeeded() # Deployment job is marked as success only if all steps pass
 
# End of file
...

example
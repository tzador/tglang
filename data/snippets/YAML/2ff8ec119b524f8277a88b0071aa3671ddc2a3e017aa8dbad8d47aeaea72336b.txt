# YAML code for a Kubernetes Pod configuration

# The Pod defines a set of containers that will run together on a single node.

apiVersion: v1 # Specifies the API version of the object
kind: Pod # Specifies the type of object to create

metadata: # Contains information about the Pod such as name, labels, and annotations
  name: my-pod # Name of the Pod
  labels: # Labels are used to identify and select the Pod
    app: my-app # Label for the application
  annotations: # Annotations provide additional information about the Pod
    description: This is a sample Pod configuration for my-app

spec: # Defines the specification for the Pod
  containers: # List of containers to run in this Pod
    - name: app-container # Name of the container
      image: my-app-image # Image to run in the container
      ports: # List of ports to expose from the container
        - containerPort: 8080 # Port number to expose
          protocol: TCP # Protocol to use (default is TCP)
      env: # List of environment variables to set for the container
        - name: DATABASE_URL # Name of the variable
          value: postgres://user:password@host:port/db # Value of the variable
      resources: # Resource limits for the container
        limits: # Maximum amount of resources the container can use
          cpu: "1" # Number of CPU units (usually cores)
          memory: "256Mi" # Amount of memory in bytes or SI units
        requests: # Minimum amount of resources the container needs
          cpu: "500m" # Number of CPU units (usually cores)
          memory: "128Mi" # Amount of memory in bytes or SI units
      command: ["python", "app.py"] # Command to run in the container
      args: ["--port", "8080"] # Arguments to pass to the command
      imagePullPolicy: IfNotPresent # Policy for when to pull the image
      volumeMounts: # List of volumes to mount in the container
        - name: app-data # Name of the volume
          mountPath: /data # Path where the volume will be mounted
          readOnly: true # Whether the volume is mounted as read-only
  volumes: # List of volumes to be used by the containers in this Pod
    - name: app-data # Name of the volume
      emptyDir: {} # Creates an empty directory for the volume
  restartPolicy: Always # Policy for when to restart the containers in the Pod
  nodeSelector: # Selects which nodes the Pod is allowed to be scheduled on
    disk: ssd # Selects nodes with a specific disk type
  affinity: # Defines rules for how the Pod should be scheduled across nodes
    nodeAffinity: # Specifies affinity for a specific node
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: disk # Selects nodes with a specific disk type
            operator: In # Specifies the value of "disk" should be included in the set
            values:
            - ssd
  tolerations: # Defines tolerations for nodes with certain taints
    - key: node-role # Taint key to tolerate
      operator: Equal # Specifies the comparison operator for the taint key
      value: worker # Specifies the value of the taint key to tolerate
      effect: NoSchedule # Specifies the effect of the taint
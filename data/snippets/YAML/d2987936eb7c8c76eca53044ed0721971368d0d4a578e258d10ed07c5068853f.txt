# This code snippet is a YAML configuration file for a web application
version: '1.2.3'
# This specifies the version of the YAML format to be used

services:
  # This section defines the different services that make up the web app
  web:
    # This is the name of the web service
    build:
      # This specifies the build context
      context: .
      # This specifies the location of the Dockerfile to use for building the image
      dockerfile: Dockerfile-dev
    # This defines environment variables to be used for the web service
    environment:
      - DEBUG=1  # This enables debugging for the service
      - DATABASE_URL=sqlite:///db.sqlite3  # This sets the database URL
    volumes:
      # This defines volumes to be mounted in the web service
      - .:/code  # This mounts the current directory as the project code
      - static_volume:/code/static  # This mounts a volume for static files
      - media_volume:/code/media  # This mounts a volume for media files
    ports:
      - "8000:8000"  # This maps the host port 8000 to the container port 8000
    depends_on:
      - db  # This service depends on the 'db' service
    # This specifies the command to run when starting the container
    command: python manage.py runserver 0.0.0.0:8000

  db:
    # This is the name of the database service
    image: postgres:12  # This specifies the image to use for the service
    volumes:
      # This defines volumes to be mounted in the database service
      - db_volume:/var/lib/postgresql/data  # This mounts a volume for database data
    environment:
      - POSTGRES_USER=postgres  # This sets the database username
      - POSTGRES_PASSWORD=password  # This sets the database password
      - POSTGRES_DB=app_db  # This sets the database name
    ports:
      - "5432:5432"  # This maps the host port 5432 to the container port 5432

volumes:
  # This section defines the volumes to be used by the services
  static_volume:  # This defines the volume for static files
  media_volume:  # This defines the volume for media files
  db_volume:  # This defines the volume for database data
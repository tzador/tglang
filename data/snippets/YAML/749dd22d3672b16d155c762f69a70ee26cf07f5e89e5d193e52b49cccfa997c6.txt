# This YAML code snippet includes a list of tasks and subtasks with various properties

- task: Setup Environment           # main task
  description: Setup the environment for running tests
  variables:
    var1: value1                    # variables used for setup
    var2: value2
  steps:
    - task: Download Dependencies   # subtask 1
      inputs:
        artifact: dependencies.zip # specify artifact to download
  workspace: $(Pipeline.Workspace)  # specify workspace location
  condition: eq(variables['OS'], 'windows')  # specify condition for task to run on windows OS
  
    - task: Install Dependencies    # subtask 2
      inputs:
        package: dependencies.pkg  # specify package to install
  workingDirectory: '$(Pipeline.Workspace)/src' # specify working directory
  continueOnError: true             # continue with pipeline even if this task fails
  timeoutInMinutes: 30              # specify timeout for task
  
    - task: Run Tests                # subtask 3
      inputs:
        tests: tests/allTests.cpp   # specify tests to run
  dependsOn: Download Dependencies   # specify dependency on previous task for task ordering
  displayName: Running Tests         # specify display name for task
  
- task: Publish Test Results         # main task
  inputs:
    testResultsFormat: JUnit         # specify format of test results
  testResultsFiles: '**/testResults.xml'  # specify location of test results
  condition: succeeded()             # specify condition for task to run if previous task succeeded
  displayName: Publishing Test Results # specify display name for task
  continueOnError: true              # continue with pipeline even if this task fails
  timeoutInMinutes: 15               # specify timeout for task
% This is a Prolog program that implements the eight queens problem

safe_queen(0,[]).
safe_queen(N,[Y|Ys]):- N1 is N-1,
                       safe_queen(N1,Ys),
                       safe_row(N,Y,Ys).

safe_row(_, _, []).
safe_row(X, Y, [Y1|Y2]):- X =\= Y1,
                          abs(X-Y1) =\= abs(1-Y2),
                          safe_row(X, Y, Y2).

displays([]).
displays([X/Y|Ys]):- print_row(X/Y),
                     displays(Ys).

print_row(Q/Y):- N is Y-1, write('|'),
                 place_queen(Q, N).

place_queen(0).
place_queen(P):- write('|.'),
                 P1 is P-1,
                 place_queen(P1).

solution(N):- generate(1, N, Ys),
              displays(Ys).

generate(N, N, [N]).
generate(K, N, [K|Ys]):- K<K1,
                         K2 is K+1,
                         generate(K2, N, Ys).

main:- write('Enter the number of queens: '),
       read(N), nl,
       solution(N), halt.
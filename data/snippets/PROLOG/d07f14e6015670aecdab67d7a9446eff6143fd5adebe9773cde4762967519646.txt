% define a predicate to check if a number is prime or not
is_prime(X) :-
    % ensure that X is a positive integer greater than 1
    X > 1,
    % define a helper predicate to check if X is divisible by any number from 2 to X-1
    not_divisible(X, 2).

% base case: if X is not divisible by any number less than or equal to its square root, it is prime
not_divisible(X, N) :-
    % get the square root of X and check if N is equal to it
    sqrt(X, R),
    R =:= N.

% recursive case: if N is not equal to the square root of X, continue checking for divisibility
not_divisible(X, N) :-
    % check if N is not a factor of X
    X mod N =\= 0,
    % calculate the next number to check for divisibility
    NewN is N + 1,
    % recursively call not_divisible with the updated N
    not_divisible(X, NewN).
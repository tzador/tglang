% A rule for finding all possible paths from a given starting node
%
% Parameters:
% - Start: the starting node
% - Path: the path taken so far
% - End: the final node
% - AllPaths: a list of all possible paths from the starting node to the final node
all_paths(Start, End, Path, AllPaths):-
  % Find all possible paths from the starting node to a new node
  findall(NewNode,
          % Get all possible connections from the start node
          (connection(Start, NewNode),
           % Check if the new node is not already in the path
           \+ member(NewNode, Path)),
          % Get the list of all possible paths
          NewNodes),
  % Add the new node to the path
  append(Path, [Start], NewPath),
  % Check if the new node is the final node
  (NewNode = End
    % If it is, add the current path to the list of all paths
    -> append(NewPath, [End], AllPaths);
    % If not, recursively call the rule with the new node as the starting node
    all_paths(NewNode, End, NewPath, AllPaths)).
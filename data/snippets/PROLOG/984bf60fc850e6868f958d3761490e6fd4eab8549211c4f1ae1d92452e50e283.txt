%% This code snippet demonstrates the use of Prolog predicates and rules for solving a logic puzzle.

%% Define the allowed values for each attribute
fruit(apple).
fruit(orange).
fruit(banana).

color(red).
color(orange).
color(yellow).

shape(round).
shape(oblong).
shape(curvy).

%% Create a rule to determine a valid combination of attributes for a fruit
fruit_properties(Fruit, Color, Shape) :-
    fruit(Fruit),   % check if the fruit is allowed
    color(Color),   % check if the color is allowed
	shape(Shape).   % check if the shape is allowed

%% Define the fruits and their corresponding attributes
fruit_properties(apple, red, round).
fruit_properties(banana, yellow, oblong).
fruit_properties(orange, orange, curvy).

%% Create a rule to determine which fruit is next to another fruit in a puzzle
next_to(Fruit1, Fruit2, List) :-
    append(_, [Fruit1, Fruit2|_], List).    % check if Fruit1 and Fruit2 are next to each other in the list

%% Create a rule to solve the logic puzzle, which fruit is in the middle of the row
puzzle(Fruit) :-
    %% Define a list with the possible combinations of fruits in the puzzle
    List = [_, _, _, _, _],

    %% Determine the possible attributes for each fruit in the puzzle
    fruit_properties(First, red, _),    % the first fruit is red
    fruit_properties(Second, _, oblong),% the second fruit is oblong
    fruit_properties(Third, orange, curvy), % the third fruit is orange and curvy
    fruit_properties(Fourth, yellow, _),   % the fourth fruit is yellow
    fruit_properties(Fifth, _, round), % the fifth fruit is round

    %% Determine the order of the fruits in the list
    next_to(First, Second, List),    % the first fruit is next to the second fruit
    next_to(Second, Third, List),    % the second fruit is next to the third fruit
    next_to(Third, Fourth, List),    % the third fruit is next to the fourth fruit
    next_to(Fourth, Fifth, List),    % the fourth fruit is next to the fifth fruit

    %% Determine which fruit is in the middle of the row
    Fruit = Third.    % the third fruit is in the middle of the row

%% Query the puzzle rule to get the solution
?- puzzle(Fruit).
%% Output: Fruit = orange
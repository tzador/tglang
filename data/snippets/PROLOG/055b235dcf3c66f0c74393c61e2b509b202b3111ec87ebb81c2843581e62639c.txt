% This is a prolog code to check if a given list is a permutation of another list
% Input: Two lists
% Output: True if first list is a permutation of second list, False otherwise

check_permutation(List1, List2) :-
    length(List1, Length1),     % find the length of first list
    length(List2, Length2),     % find the length of second list
    Length1 =:= Length2,        % check if the lengths are equal

    permutation(List1, List2).  % helper predicate to check if lists are permutations

permutation([], []).            % base case, empty lists are permutations of each other

permutation([Head|Tail], List) :-
    select(Head, List, Rest),   % select Head from input list and assign Rest as the remaining list
    permutation(Tail, Rest).    % recursively check if remaining lists are permutations of each other
%% Clause for determining whether a given number is a prime number
%% Parameters: 
%%   - Number (input): the number to be checked
%%   - Current (input): a starting point for checking division (will be incremented)
%%   - Limit (input): the highest number to check division against
%%   - CanBePrime (output): a boolean variable indicating whether the number can potentially be prime
%% Number is not prime if it is divisible by any number between 2 and its square root
can_be_prime(Number, Number, Limit, CanBePrime) :-
    Number =< Limit, %% If number is greater than limit, it cannot be prime
    CanBePrime = true. 

can_be_prime(Number, Current, Limit, CanBePrime) :-
    Number > Current, %% Continue recursion until we reach the number (Current = Number)
    Current =< Limit,
    Square is Current * Current, %% Calculate square of current number
    (Number mod Current) =:= 0, %% Check if current number is a divisor of given number
    CanBePrime = false. %% If divisor is found, number cannot be prime
can_be_prime(Number, Current, Limit, CanBePrime) :-
    Number > Current,
    Square is Current * Current,
    (Number mod Current) =\= 0, %% If current number is not divisor, continue recursion with next number
    Next is Current + 1,
    can_be_prime(Number, Next, Limit, CanBePrime).
    
%% Query Example:
%% ?- can_be_prime(11, 2, 4, CanBePrime).

%% Output:
%% CanBePrime = true.
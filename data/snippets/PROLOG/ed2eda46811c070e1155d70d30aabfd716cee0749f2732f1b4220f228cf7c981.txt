% This program demonstrates the use of backtracking in PROLOG

solve_problem :-
    % Define the problem
    problem(Problem),

    % Solve the problem recursively
    solve(Problem).

solve([]).
solve([H|T]) :-
    % Choose an element from the list
    member(H, [1, 2, 3, 4]),

    % Check if the element satisfies the problem
    satisfies(H),

    % Solve the rest of the list
    solve(T).

% Define the problem to solve
problem([A, B, C, D]) :-
    % Constraints
    A + B =:= C,
    A * B =:= D.

% Predicate to check if an element satisfies the problem
satisfies(X) :-
    % Constraints
    X > 0,
    X < 10.
/* This is a Prolog program to find the common ancestor of two nodes in a binary tree.

/* Defining the ancestor relationship */
ancestor(X, Y) :- parent(X, Y).
ancestor(X, Y) :- parent(X, Z), ancestor(Z, Y).

/* Defining the parent relationship */
parent(X, Y) :- left_child(X, Y).
parent(X, Y) :- right_child(X, Y).

/* Defining the tree structure */
left_child(2, 4).
left_child(4, 8).
left_child(8, 16).
left_child(3, 6).
left_child(6, 12).
left_child(12, 24).
right_child(2, 5).
right_child(5, 10).
right_child(10, 20).
right_child(3, 7).
right_child(7, 14).
right_child(14, 28).

/* Querying for the common ancestor of 16 and 28 */
?- ancestor(16, X), ancestor(28, X).

/* Expected Output: */
/* X = 6. */
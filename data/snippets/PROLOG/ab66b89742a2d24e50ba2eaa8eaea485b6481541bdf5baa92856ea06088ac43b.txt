%% File containing various predicates and rules in Prolog

%% Define predicate to determine if a list is empty
empty([]).

%% Define predicate to determine if a list is not empty
nonempty([_|_]).

%% Define predicate to determine if list X and list Y have the same first element
same_first([X|_], [X|_]).

%% Define predicate to determine if list X and list Y have the same last element
same_last(List1, List2) :-
    reverse(List1, [X|_]),
    reverse(List2, [X|_]).

%% Define rule to append two lists together
append([], List, List).
append([Head|Tail], List, [Head|Result]) :-
    append(Tail, List, Result).

%% Define rule to check if a list is a palindrome
palindrome(List) :-
    reverse(List, List).
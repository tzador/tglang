% This is a swimmer database.
% It stores information about swimmers, their personal details, and their performance in various events.

% Define the swimmer predicate with four parameters: name, age, country, and events.
swimmer(Name, Age, Country, Events) :-
    % Check if the age is above 18.
    Age > 18,
    % Check if the country is a valid country from a predefined list.
    valid_country(Country),
    % Check if the events is a list of valid events.
    is_list(Events),
    check_events(Events).

% Define the valid_country predicate with one parameter.
valid_country(Country) :-
    % Define a list of valid countries.
    valid_countries([usa, canada, australia, japan]).
    
% Define the check_events predicate with one parameter.
check_events([]).
check_events([Event|Tail]) :-
    % Check if the event is a valid event.
    valid_event(Event),
    % Recursively call the check_events predicate on the rest of the list.
    check_events(Tail).

% Define the valid_event predicate with one parameter.
valid_event(Event) :-
    % Define a list of valid events.
    valid_events([freestyle, backstroke, breaststroke, butterfly, medley]),
    % Check if the event is a member of the valid events list.
    member(Event, valid_events).

% Define the valid_events predicate with one parameter.
valid_events(Events) :-
    % Define a list of valid events.
    valid_events([freestyle, backstroke, breaststroke, butterfly, medley]).

% Example query:
% swimmer(john, 23, usa, [freestyle, backstroke]).
% A simple program to check if a number is a prime number

% Declare predicate to check if number is prime
is_prime(N) :-
    % First, check if number is equal to 2, since 2 is the only even prime number
    N =:= 2,
    % If it is, then it is a prime number
    true,
    % If not, check if number is divisible by 2, which means it is not a prime number
    !.

is_prime(N) :-
    % If number is not equal to 2, check if it is divisible by any number from 3 to its square root
    N > 2,
    % Get the floor of the square root using built-in predicate, round_down
    round_down(sqrt(N), Square_root),
    % Then check if the number is divisible by any number from 3 to the rounded down square root
    \+(
        % Start with 3
        Divisor = 3,
        % Use a while loop-like recursive predicate to iterate through possible divisors
        while(
            % Loop will run until current divisor exceeds or equals the rounded down square root
            % Checks if current divisor is less than or equal to rounded down square root
            % If it is, the loop will continue, if not, it will stop
            =(Divisor, Square_root),
            % This predicate will be true if number is divisible by current divisor
            % Use =\= predicate to check if number is not equal to current divisor
            N mod Divisor =\= 0,
        % Here, we increment the current divisor by 2 to only check for odd numbers
            Divisor = Divisor + 2
        ) % end of while loop
    ).
% This Prolog code implements a family tree with predicates to find relationships between individuals

% Define the predicates to represent facts about the family tree

parent(john, bob).
parent(john, sally).
parent(jane, bob).
parent(jane, sally).
parent(bob, alice).
parent(bob, david).
parent(sally, carol).
parent(sally, dan).

% Define predicates to find siblings, cousins, grandparents, and great-grandparents

% Siblings
siblings(A, B) :-
    parent(X, A),
    parent(X, B),
    A \= B.

% Cousins
cousins(A, B) :-
    parent(X, A),
    parent(Y, B),
    siblings(X, Y).

% Grandparents
grandparent(A, B) :-
    parent(A, X),
    parent(X, B).

% Great-grandparents
greatgrandparent(A, B) :-
    parent(A, X),
    grandparent(X, B).

% Define predicates to find descendants and ancestors

% Descendants
descendant(A, B) :-
    parent(B, A).

descendant(A, B) :-
    parent(B, X),
    descendant(A, X).

% Ancestors
ancestor(A, B) :-
    parent(A, B).

ancestor(A, B) :-
    parent(X, B),
    ancestor(A, X).

% Example query:
% ancestor(X, sally)

% Output:
% X = john;
% X = jane;
% X = bob;
% X = sally.
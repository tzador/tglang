%This is a Prolog program for finding the minimum element in a list

%Base case: If the list is empty, the minimum element is infinity
minimum([], infinity).

%Recursive case: If the current element is less than the minimum of the rest of the list, then it is the new minimum
%X is the current element, T is the rest of the list, Min is the minimum of T
minimum([X|T], Min) :- minimum(T, NewMin), X < NewMin, Min is X.

%Recursive case: If the current element is not less than the minimum of the rest of the list, then the minimum remains the same
minimum([X|T], Min) :- minimum(T, Min), X >= Min.

%Example query:
%?- minimum([3,5,1,7,2], Min).
%Output: Min = 1
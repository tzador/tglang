/* This is a program that models a maze game, where the player must find the exit from the maze */

/* List of allowed directions in the maze */
allowed_direction(north).
allowed_direction(east).
allowed_direction(south).
allowed_direction(west).

/* The starting position of the player in the maze */
start_position(1, 1).

/* The exit position of the maze */
exit_position(5, 5).

/* The available moves for the player in the maze */
moves(Moves) :- allowed_direction(Moves).

/* Rule to determine if the player is at the exit position */
at_exit(X, Y) :- exit_position(X, Y).

/* Rule to determine if the player can make a move in a certain direction */
can_move(X, Y, Direction) :-
    start_position(X, Y),
    allowed_direction(Direction),
    NewX is X + Direction,
    NewY is Y + Direction.

/* Rule to move the player in a certain direction */
move(X, Y, Direction, NewX, NewY) :-
    can_move(X, Y, Direction),
    NewX is X + Direction,
    NewY is Y + Direction.

/* Prolog query to solve the maze game */
?- at_exit(X, Y), move(1, 1, east, X, Y).
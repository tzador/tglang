/*
 * This is a complex code snippet in PROLOG that calculates the sum of two numbers,
 * using recursion to handle negative numbers and outputting the result in a list.
*/
% define a predicate that takes in two arguments (numbers) and outputs a list containing the sum
sum(Number1, Number2, [Sum]) :-
    % check if both numbers are positive, if so calculate the sum and output it in a list
    Number1 >= 0, Number2 >= 0,
    Sum is Number1 + Number2,
    writeln([Sum]).
% if the first number is negative, use recursion to add the second number to the absolute value of the first number
sum(Number1, Number2, [Sum]) :-
    Number1 < 0,
    AbsValue is -Number1,
    sum(AbsValue, Number2, [Sum]).
% if the second number is negative, use recursion to add the first number to the absolute value of the second number
sum(Number1, Number2, [Sum]) :-
    Number2 < 0,
    AbsValue is -Number2,
    sum(Number1, AbsValue, [Sum]).
% if both numbers are negative, use recursion to add the absolute values of both numbers and output the negative sum in a list
sum(Number1, Number2, [Sum]) :-
    Number1 < 0, Number2 < 0,
    AbsValue1 is -Number1,
    AbsValue2 is -Number2,
    sum(AbsValue1, AbsValue2, [SumNeg]),
    Sum is -SumNeg,
    writeln([Sum]).
    
% Example output: "sum(5, -8, X)." would output "-3" in the list [Sum].
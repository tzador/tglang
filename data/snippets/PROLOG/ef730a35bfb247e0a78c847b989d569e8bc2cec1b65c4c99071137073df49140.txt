% Define a predicate to check if a list is a sublist of another list
sublist([],_). % Base case: An empty list is a sublist of any list
sublist([X|Xs],[Y|Ys]) :- % Start of recursive cases
  sublist([X|Xs], Ys). % Case 1: The first element of the sublist is not in the second list
sublist([X^Xs], [Y|Ys]) :- % Case 2: The first element of the sublist is in the second list
  sublist(Xs, Ys), % Check if the rest of the sublist is in the second list
  prefix([X|Xs], [Y|Ys]). % Check if the prefix of the second list is equal to the sublist
% Define a predicate to check if a list is a prefix of another list
prefix([],_). % Base case: An empty list is a prefix of any list
prefix([X|Xs],[X|Ys]) :- % Recursive case: Check if the first element of both lists are equal
  prefix(Xs, Ys). % Check if the rest of the lists are also equal
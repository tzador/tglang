/***
This code snippet generates a random list of numbers and finds the largest number in the list.
Example input: [3, 6, 2, 8, 4]
Example output: 8
***/

% Define the predicate to generate a list of numbers
generate_list(N, List) :-
    length(List, N),   % length/2 is a built-in predicate that creates a list of N elements
    maplist(random(0, 10), List).   % maplist/2 applies the random/3 predicate to each element in the list

% Define the predicate to find the largest number in a list
find_max(List, Max) :-
    member(Max, List),   % member/2 is a built-in predicate that checks if an element is a member of a list
    findall(X, (member(X, List), X > Max), L),   % findall/3 creates a list of all numbers that are greater than Max
    length(L, N),   % find the length of the list
    N = 0 -> Max is 0    % if the list is empty, then the max is 0
    ;   % OR
    max_list(L, Max).   % max_list/2 is a built-in predicate that finds the maximum element in a list

% Query to generate a list of 5 numbers and find the largest number in the list
?- generate_list(5, X), find_max(X, L).

% Output:
[6, 9, 7, 2, 0] % List generated by generate_list predicate
9 % Largest number in the list found by find_max predicate
% Predicate that checks if a list is a palindrome
palindrome(List) :- reverse_list(List, List).

% Helper predicate that reverses a list
reverse_list([], []).
reverse_list([Head|Tail], Reverse) :-
    reverse_list(Tail, Temp),
    append(Temp, [Head], Reverse).

% Predicate that checks if two trees have the same structure
same_structure(nil, nil).
same_structure(tree(Left1, Right1), tree(Left2, Right2)) :- 
    same_structure(Left1, Left2), same_structure(Right1, Right2).

% Helper predicate that counts the number of nodes in a tree
count_nodes(nil, 0).
count_nodes(tree(Left, Right), Count) :-
    count_nodes(Left, CountLeft),
    count_nodes(Right, CountRight),
    Count is CountLeft + CountRight + 1.
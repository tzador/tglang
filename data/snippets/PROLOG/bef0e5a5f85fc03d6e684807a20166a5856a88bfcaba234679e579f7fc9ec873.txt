% This is a code snippet demonstrating the use of recursion in PROLOG

% Define a predicate to check if a given number is a Fibonacci number
% Takes in the number and the two previous numbers in the Fibonacci sequence
is_fib(0,1,1). % base case: 0 is considered to be the first Fibonacci number
is_fib(1,1,1). % base case: 1 is considered to be the second Fibonacci number
is_fib(N,X,Y) :- % recursive case: N is a Fibonacci number if it is the sum of the two previous numbers
    N > Y, % ensure that N is larger than the previous number
    Z is X + Y, % calculate the next number in the sequence
    is_fib(N,Z,X). % recursive call with updated previous numbers

% Example usage:
% ?- is_fib(13,1,1).
% true.

% ?- is_fib(14,1,1).
% false.
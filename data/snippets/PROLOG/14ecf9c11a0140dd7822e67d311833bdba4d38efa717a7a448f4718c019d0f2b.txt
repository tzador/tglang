% This is a simple Prolog program that checks if a given list is a palindrome
is_palindrome(L) :- reverse(L, L).
% This predicate checks if the given list is the same as its reversed form, which indicates it is a palindrome.

% The following helper predicates are used to reverse a list.
% First, the empty list is its own reverse.
reverse([], []).

% Then, the reverse of a list is obtained by appending the head of the list to its reversed tail.
reverse([H|T], R) :- reverse(T, R1), append(R1, [H], R).

% The following helper predicate is used to append an element to the end of a list.
% It recursively appends the element to the end of the list until an empty list is reached.
append([], X, [X]).
append([H|T], X, [H|L]) :- append(T, X, L).
/* This is a simple program in PROLOG which checks if two lists are equal */

/* Define a predicate 'equal_list' which takes two list parameters and returns true if they are equal */
equal_list([], []). /* Base case: if both lists are empty, they are equal */
equal_list([X|Xs], [X|Ys]) :- equal_list(Xs, Ys). /* Recursive case: if the first element of both lists are equal, continue checking the rest of the lists */
equal_list(_, _) :- false. /* If none of the above cases are satisfied, the lists are not equal */

/* Define two lists L1 and L2 with elements to be checked for equality */
L1 = [1, 2, 3].
L2 = [1, 2, 3].

/* Call 'equal_list' predicate with the two lists as parameters and store the result in variable 'Result' */
equal_list(L1, L2, Result).

/* Print out the result */
write(Result).

/* Output:
true
*/
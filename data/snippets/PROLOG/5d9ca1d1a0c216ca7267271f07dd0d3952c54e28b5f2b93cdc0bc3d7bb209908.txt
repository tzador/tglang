% Knowledge base
human(john).         % john is a human
human(mary).         % mary is a human
human(david).        % david is a human
human(sue).          % sue is a human
animal(dog).         % dog is an animal
animal(cat).         % cat is an animal
animal(rabbit).      % rabbit is an animal
animal(lion).        % lion is an animal
parent(john,mary).   % john is the parent of mary
parent(john,david).  % john is the parent of david
parent(sue,david).   % sue is the parent of david
parent(mary,lion).   % mary is the parent of lion
parent(mary,rabbit). % mary is the parent of rabbit

% Rules
sibling(X,Y) :-       % X is a sibling of Y if:
    parent(Z,X),      % - Z is the parent of X and
    parent(Z,Y),      % - Z is also the parent of Y
    X \= Y.           % - X and Y are different

ancestor(X,Y) :-      % X is an ancestor of Y if:
    parent(X,Y).      % - X is the parent of Y
ancestor(X,Y) :-      % OR X is an ancestor of Y if:
    parent(X,Z),      % - X is a parent of Z and
    ancestor(Z,Y).    % - Z is an ancestor of Y

% Queries
?- human(X).          % returns X = john; X = mary; X = david; X = sue
?- animal(X).         % returns X = dog; X = cat; X = rabbit; X = lion
?- parent(X,Y).       % returns X = john, Y = mary; X = john, Y = david; X = sue, Y = david; Y = lemon, Y = tree
?- sibling(X,Y).      % returns X = mary, Y = david; X = david, Y = mary
?- ancestor(X,Y).     % returns X = john, Y = david; X = sue, Y = david; X = mary, Y = rabbit; X = mary, Y = lion
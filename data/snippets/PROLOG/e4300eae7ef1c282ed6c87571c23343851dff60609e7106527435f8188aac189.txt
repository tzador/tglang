:- dynamic money/1. // Defines a dynamic predicate 'money' with 1 argument.

% Rules

get_money(X) :- // Defines a rule 'get_money' with 1 argument.
    money(X). // X is the argument of the rule and it is equal to the dynamic predicate 'money'.

add_money(X) :- // Defines a rule 'add_money' with 1 argument.
    retract(money(CurrentAmt)), // Retracts the current amount of money from the dynamic predicate 'money'.
    NewAmt is CurrentAmt + X, // Calculates the new amount of money by adding the argument of the rule to the current amount.
    asserta(money(NewAmt)). // Asserts the new amount of money into the dynamic predicate 'money'.

% Queries

?- asserta(money(500)). // Adds 500 to the dynamic predicate 'money'.
?- add_money(200). // Calls the rule 'add_money' with argument 200.
?- get_money(Amt). // Calls the rule 'get_money' and assigns the amount of money to variable 'Amt'.
?- write(Amt). // Prints the value of 'Amt'.
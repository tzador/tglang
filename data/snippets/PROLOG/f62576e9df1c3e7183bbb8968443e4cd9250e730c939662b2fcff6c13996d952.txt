%% This is a predicate that checks if the input number is prime or not
%% Input: X - the number to be checked
%% Output: true if prime, false if not

prime(X):-   %% The predicate takes a number and sends it to the recursive helper predicate
    isprime(X, 2).  

isprime(X, X).  %% The base case, if the number equals X, it is prime
isprime(X, Y):- %% The recursive case, divides the number with all numbers from 2 up to half the number 
    Y < (X/2),  %% Checks if the current divisor is smaller than half the number
    Rem is X mod Y,  %% Gets the remainder of the division
    Rem =\= 0,  %% Checks if the remainder is not equal to 0, meaning it is not divisible
    Y1 is Y + 1,  %% Updates the divisor for the next recursion
    isprime(X, Y1).  %% Recursively checks if the number is divisible by the updated divisor
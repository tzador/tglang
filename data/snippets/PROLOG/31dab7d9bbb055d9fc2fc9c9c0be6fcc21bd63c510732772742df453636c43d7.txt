% Define a predicate to check if a given number is prime or not
% is_prime function takes in a number and recursively checks if it is divisible by any number less than itself
is_prime(0,0).               % Base case: 0 is not a prime number
is_prime(1,0).               % Base case: 1 is not a prime number
is_prime(N,N) :- N > 2, !.   % Base case: If N is greater than 2, it is potentially a prime number
is_prime(N,M) :- N =< 2, M is 1.   % If N is less than or equal to 2, it is not a prime number
is_prime(N,M) :- N > 2, X is N mod M, X \= 0, M_new is M - 1, is_prime(N, M_new).   % Check if N is divisible by M, if not, recursively check with M-1
is_prime(N,M) :- N > 2, X is N mod M, X = 0, M =\= 1.   % If N is divisible by M, but M is not 1, then N is not a prime number
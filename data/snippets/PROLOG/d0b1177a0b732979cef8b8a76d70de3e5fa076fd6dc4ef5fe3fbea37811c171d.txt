% The following code is a simple implementation of reverse in PROLOG.

% Define the base case, where reverse of empty list is an empty list itself.
reverse([],[]).

% Define the recursive case, where reverse of a list is the concatenated reverse 
% of the tail of the list and the head of the list.
reverse([Head|Tail], Reversed) :-
    reverse(Tail, ReversedTail),
    append(ReversedTail, [Head], Reversed).

% Example query and output:
% ?- reverse([1,2,3], Reversed).
% Reversed = [3,2,1].
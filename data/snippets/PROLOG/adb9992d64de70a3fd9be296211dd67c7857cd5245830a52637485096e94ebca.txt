%% Prolog code snippet
%% This snippet defines the predicate `sum_list`, which sums all elements of a given list.
%% Takes in a list of numbers and outputs the sum as a result.

sum_list(List, Sum) :-          % define the predicate `sum_list` that takes in a list and a variable
   sum_list_helper(List, 0, Sum).% call the helper predicate with the list, initial sum as 0, and output variable `Sum`


%% Helper predicate to sum all elements
sum_list_helper([], Sum, Sum).   % base case, when the list is empty, output the current sum variable
sum_list_helper([H|T], Acc, Sum) :- % if the list is not empty, split it into head `H` and tail `T`
    New_acc is Acc + H,          % calculate new accumulator value by adding head `H` to the current accumulator value `Acc`
    sum_list_helper(T, New_acc, Sum). % recursively call helper predicate with updated accumulator and original output variable


%% Example query:
%% ?- sum_list([1, 2, 3, 4, 5], Result).
%% Result = 15.
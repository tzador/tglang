% Knowledge base for family relationships
father(john, alex).
father(john, brian).
father(john, caleb).
mother(jane, alex).
mother(jane, brian).
mother(jane, caleb).
father(alex, david).
father(brian, elena).
father(caleb, felicia).
mother(alex, diana).
mother(brian, eva).
mother(caleb, fiona).

% Rules for finding parent and grandparent relationships
parent(X, Y) :- father(X, Y).
parent(X, Y) :- mother(X, Y).

grandparent(X, Z) :- parent(X, Y), parent(Y, Z).

% Rules for finding sibling relationships
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y.

% Rules for finding cousin relationships
cousin(X, Y) :- parent(Z, X), parent(W, Y), sibling(Z, W), X \= Y.

% Query examples:
% father(john, X) returns X = alex; X = brian; X = caleb.
% grandparent(john, X) returns X = david; X = elena; X = felicia.
% cousin(diana, eva) returns true.

% Explanation:
% This is a knowledge base written in PROLOG, a logic programming language.
% The first section defines the relation between a person and their direct father/mother, based on the facts provided. 
% Next, rules are defined for finding parent relationships and grandparent relationships. The grandparent rule utilizes the parent rule to check for a parent of a person's parent.
% Sibling relationships are defined next, using the parent rule to check for a common parent between two people.
% Finally, the cousin rule uses the sibling rule to check for a connection between two parents, indicating a shared grandparent, and then checks that the two people are not siblings themselves.
% Some example queries are included at the end, along with their expected outputs.
% prompt user for input
?- write('Enter a number: '), read(X).

% determine if input is even or odd
even_odd(X) :- 
	X mod 2 =:= 0,
	write(X), write(' is even').
even_odd(X) :- 
	X mod 2 =:= 1,
	write(X), write(' is odd').

% check if input is prime
prime(X) :- 
	X < 2,
	write(X), write(' is not prime').
prime(X) :-
	X < 4,
	write(X), write(' is prime').
prime(X) :-
	X mod 2 =:= 0,
	write(X), write(' is not prime').
prime(X) :-
	prime_aux(X, 3).

prime_aux(X, I) :- 
	I * I > X,
	write(X), write(' is prime').
prime_aux(X, I) :-
	X mod I =:= 0,
	write(X), write(' is not prime').
prime_aux(X, I) :-
	I * I =< X,
	I2 is I + 2,
	prime_aux(X, I2).

% print all prime numbers less than input
print_primes_less_than(X) :-
	print_primes_less_than_aux(X, 1).

print_primes_less_than_aux(X, X) :-
	!.
print_primes_less_than_aux(X, I) :-
	prime(I),
	write(I), write(' '),
	I2 is I + 1,
	print_primes_less_than_aux(X, I2).
print_primes_less_than_aux(X, I) :-
	I2 is I + 1,
	print_primes_less_than_aux(X, I2).

% generate a list of length X
generate_list(0, []).
generate_list(X, [X|T]) :-
	X > 0,
	X2 is X - 1,
	generate_list(X2, T).

% query user for input
?- write('Enter a number: '), read(Input),
% query if input is even or odd
even_odd(Input),
% query if input is prime
prime(Input),
% generate list of prime numbers less than input
print_primes_less_than(Input),
% generate list of numbers from 1 to input
generate_list(Input, List),
% query if input is in the list
member(Input, List).
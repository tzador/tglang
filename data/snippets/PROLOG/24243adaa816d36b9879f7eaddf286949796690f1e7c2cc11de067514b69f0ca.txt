%% Define a predicate that checks if a list is a palindrome
%% A palindrome is a list that reads the same both ways
%% For example, [a,b,c,b,a] is a palindrome

palindrome(List) :- reverse(List, List).

%% A list is a palindrome if it is the same in reverse order
%% The reverse predicate reverses a list
%% The predicate takes two arguments: the input list and the reversed list
%% The reverse predicate is built-in in Prolog

reverse([],[]).            %% base case: an empty list is the same when reversed
reverse([Head|Tail], Rev) :- reverse(Tail, RevTail),    %% recursive case: reverse the tail
                             append(RevTail, [Head], Rev).  %% append the reversed tail and head to get the reversed list
                             %% Note: the built-in append predicate joins two lists

%% Example query:
%% palindrome([a,b,c,b,a]) will return true
%% palindrome([1,2,3,4]) will return false
/* This is a Prolog program that performs the 
   straightforward and naive implementation of
   the Fibonacci sequence. It takes in an input
   number n and returns the first n numbers of
   the Fibonacci sequence in a list.
*/
   
fib(1,[1]):- !. % Base case, return [1] when n = 1
fib(2,[1,1]):- !. % Base case, return [1,1] when n = 2
fib(N,R):-	
    N1 is N-1, % Calculate previous two numbers
    N2 is N-2,
    fib(N1,R1), % Recursive call to get previous n-1 numbers
    fib(N2,R2), % Recursive call to get previous n-2 numbers
    append(R1,R2,R3), % Concatenate the two lists
    append(R3,[R1+R2],R). % Add the sum of last two numbers to the list
    
/* Examples of input and output:
?- fib(3,R).
R = [1,1,2]
?- fib(6,R).
R = [1,1,2,3,5,8]
?- fib(10,R).
R = [1,1,2,3,5,8,13,21,34,55]
*/
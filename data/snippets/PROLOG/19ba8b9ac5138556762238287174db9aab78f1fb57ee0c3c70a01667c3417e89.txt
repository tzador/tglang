/* A knowledge base for family relationships */
parent(john, lisa).    % John is the parent of Lisa
parent(lisa, sam).     % Lisa is the parent of Sam
parent(sam, sara).     % Sam is the parent of Sara
parent(sara, jake).    % Sara is the parent of Jake

male(john).            % John is male
male(sam).             % Sam is male
male(jake).            % Jake is male

female(lisa).          % Lisa is female
female(sara).          % Sara is female

/* Rules to define the `mother` and `father` relationships */

mother(X,Y) :- parent(X,Y), female(X). % X is the mother of Y if X is a parent of Y and X is female
father(X,Y) :- parent(X,Y), male(X).   % X is the father of Y if X is a parent of Y and X is male

/* Rules to define the `grandparent` and `sibling` relationships */

grandparent(X,Z) :- parent(X,Y), parent(Y,Z).         % X is the grandparent of Z if X is the parent of Y and Y is the parent of Z
sibling(X,Y) :- parent(Z,X), parent(Z,Y), X \= Y.     % X and Y are siblings if they have the same parent and are not the same person

/* Query examples */

% Using the `mother` rule
% ?- mother(lisa,sam).    % Outputs `true` as Lisa is the mother of Sam
% ?- mother(john,sara).   % Outputs `false` as John is not the mother of Sara

% Using the `father` rule
% ?- father(john,lisa).   % Outputs `false` as John is not the father of Lisa
% ?- father(sam,jake).    % Outputs `true` as Sam is the father of Jake

% Using the `grandparent` rule
% ?- grandparent(john,sara).   % Outputs `true` as John is the grandparent of Sara
% ?- grandparent(lisa,jake).   % Outputs `true` as Lisa is the grandparent of Jake

% Using the `sibling` rule
% ?- sibling(lisa,sam).        % Outputs `true` as Lisa and Sam are siblings
% ?- sibling(sam,jake).        % Outputs `false` as Sam and Jake are not siblings
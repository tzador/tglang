% This is a comment in PROLOG
% Defining a factorial predicate
factorial(0,1). % Base case
factorial(N,Result) :- 
    N > 0, % Condition to check if N is greater than 0
    N1 is N-1, % Calculating N-1
    factorial(N1,Result1), % Recursively calling factorial for N-1
    Result is N * Result1. % Calculating the result

% Defining a power predicate
power(_,0,1). % Base case
power(X,N,Result) :- 
    N > 0, % Condition to check if N is greater than 0
    N1 is N-1, % Calculating N-1
    power(X,N1,Result1), % Recursively calling power for N-1
    Result is X * Result1. % Calculating the result

% Defining a fibonacci predicate
fibonacci(1,1). % Base case
fibonacci(2,1). % Base case
fibonacci(N,Result) :- 
    N1 is N-1, % Calculating N-1
    N2 is N-2, % Calculating N-2
    fibonacci(N1,Result1), % Recursively calling fibonacci for N-1
    fibonacci(N2,Result2), % Recursively calling fibonacci for N-2
    Result is Result1 + Result2. % Calculating the result
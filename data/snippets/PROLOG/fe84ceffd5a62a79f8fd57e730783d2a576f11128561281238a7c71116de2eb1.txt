% A representation in PROLOG of a matrix multiplication function
% Takes in two matrices, A and B, and returns the multiplied matrix, C
% Assumes A has dimensions (M x N) and B has dimensions (N x P)
% The result, C, will have dimensions (M x P)

multiply_matrix(A, B, C) :-
    multiply_helper(A, B, C, 1).

multiply_helper(_, [], [], _).
multiply_helper(A, [Row|RestRows], C, RowIndex) :-
    multiply_row(A, Row, CRow),
    update_matrix(C, CRow, RowIndex),
    NewRowIndex is RowIndex + 1,
    multiply_helper(A, RestRows, C, NewRowIndex).

multiply_row(_, [], []).
multiply_row(A, [BElement|BRest], [CElement|CRest]) :-
    dot_product(A, BElement, CElement),
    multiply_row(A, BRest, CRest).

dot_product([], _, 0).
dot_product([AElement|ARest], BElement, C) :-
    dot_product(ARest, BElement, NewC),
    C is NewC + (AElement * BElement).

update_matrix([], _, _).
update_matrix([_|Rest], Row, 1) :- Row = Rest.
update_matrix([Element|Rest], Row, Index) :-
    NewIndex is Index - 1,
    update_matrix(Rest, Row, NewIndex).

% Example use case
% Multiply a 2x3 matrix by a 3x4 matrix
multiply_matrix([[1,2,3], [4,5,6]], [[7,8,9,10], [11,12,13,14], [15,16,17,18]], C).

% Output:
% C = [[74, 80, 86, 92], [167, 182, 197, 212]]
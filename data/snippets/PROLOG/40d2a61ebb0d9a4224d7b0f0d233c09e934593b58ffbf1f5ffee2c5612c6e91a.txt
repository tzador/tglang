%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This is a program that implements a knowledge base for a fantasy world.
% It defines creatures, their abilities and weaknesses, and their relationships.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Define creatures with their abilities and weaknesses
creature(dragon, [fly, breathe_fire, strong, smart], [cold, greedy]).
creature(elf, [archery, intelligence, agility], [short_lifespan, magic_weakness]).
creature(ogre, [strength, durability], [slow, dim_witted]).

% Define relationships between creatures
relationship(dragon, elf, enemies).
relationship(dragon, ogre, allies).
relationship(elf, ogre, neutral).
relationship(elf, human, allies).
relationship(ogre, human, enemies).

% Checks if creature has a certain ability
has_ability(Creature, Ability) :-
    creature(Creature, Abilities, _),
    member(Ability, Abilities).

% Checks if creature has a certain weakness
has_weakness(Creature, Weakness) :-
    creature(Creature, _, Weaknesses),
    member(Weakness, Weaknesses).

% Checks if two creatures have a certain relationship
has_relationship(Creature1, Creature2, Relationship) :-
    relationship(Creature1, Creature2, Relationship).
has_relationship(Creature1, Creature2, Relationship) :-
    relationship(Creature2, Creature1, Relationship).

% Example query: "What creatures are enemies with dragons?"
?- has_relationship(Creature, dragon, enemies).
% Output: Creature = elf.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This is the end of the program.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
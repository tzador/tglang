% define a predicate that checks if a list is sorted in ascending order


sorted_list([]).  % empty list is always sorted

% recursively check if the head of the list is smaller than the next element
sorted_list([Head|Tail]) :-
    check_list(Head, Tail).

% base case: when the list only has two elements left, compare them and check if the first element is smaller than the second element
check_list(X, [Y|Tail]) :-
    X =< Y.

% recursively check if the first element is smaller than the head of the tail, and then call the predicate again on the remaining tail
check_list(X, [Y|Tail]) :-
    X =< Y,
    check_list(Y, Tail).
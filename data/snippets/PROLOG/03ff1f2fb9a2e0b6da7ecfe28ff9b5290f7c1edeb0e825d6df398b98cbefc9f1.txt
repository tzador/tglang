% This is a Prolog program that implements a rule-based expert system.

declaration.
    % clause declaration
    % declares basic facts and predicates

rule1(X, Z) :-
    % rule declaration
    % "if X then Z" logical statement
    % can also include multiple conditions, with logical operators like 'and' (&) and 'or' (;)
    premise(X),
    condition1(X),
    condition2(X),
    conclusion(Z).

premise(X) :-
    % premise definition
    % establishes the condition or fact being tested
    condition(X),
    not(other_condition(X)).

condition1(X) :-
    % additional condition definition
    % can be used to further restrict the premise condition
    fact1(X),
    fact2(X).

condition2(X) :-
    % another additional condition definition
    % can be used in conjunction with condition1 or as a separate premise
    fact3(X),
    not(other_fact(X)).

conclusion(Z) :-
    % conclusion definition
    % establishes the result or action to be taken when all conditions are met
    action(Z).

not(X) :-
    % negation definition
    % negates the result of a given condition or fact
    fact1(X),
    fact2(X),
    fact3(X).

prove(Z) :-
    % query predicate
    % queries the expert system to determine the correct action or result
    rule1(X, Z).

% Example facts in the knowledge base:
fact1(apple).
fact2(red).
fact3(sweet).

% Example query to the expert system:
?- prove(Z).
% output: Z = pie
%% This is a complex code snippet in PROLOG 
% It uses recursion to find the factorial of a number

% A base case where the factorial of 0 is 1 
factorial(0, 1).

% A recursive rule to calculate the factorial of N 
factorial(N, F) :- 
    N > 0, % Check if N is greater than 0 
    N1 is N - 1, % Subtract 1 from N 
    factorial(N1, F1), % Calculate the factorial of N-1 
    F is N * F1. % Multiply N with the factorial of N-1 to get factorial of N 
    
% Predicate to print the list of factorial values 
print_factorial_list([], []).
print_factorial_list([N|T], [F|FT]) :- 
    factorial(N, F), % Calculate the factorial of N 
    print_factorial_list(T, FT). % Recursively print the factorial list 
    
% Example usage
?- print_factorial_list([3, 5, 7], X).
X = [6, 120, 5040] % Expected output for calculating the factorial of 3, 5, and 7 respectively.
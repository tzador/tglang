%This is a Prolog program that checks if a number is prime or not
%The main predicate is prime/1 which takes a number as input and outputs true if the number is prime, false otherwise
%i is used as a counter to keep track of the number of factors of the input number
%prime/1 recursively calls check_factors/3 predicate to check all factors of the input number
%check_factors/3 takes 3 inputs, the number to check, the current factor, and the value of i
%if the current factor is equal to the input number, and i is still 0, the input number is prime
%if i is greater than 0, it means there are more factors and the input number is not prime
%if the current factor is not a factor of the input number, we increment i and recursively call check_factors with the next factor
%otherwise, we recursively call check_factors with the next factor and decrement i
prime(X) :-
  check_factors(X,X,0). %call check_factors with initial values of X and 0
check_factors(_,1,0) :- !. %if the current factor is 1, set i to 0 and stop the recursion
check_factors(N,Factor,I) :-
  Factor>1,
  Mod is N mod Factor,
  (Mod=:=0 -> %if the current factor is a factor of the input number
    I2 is I+1,
    check_factors(N,Factor-1,I2); %decrement i and recursively call check_factors with the next factor
    check_factors(N,Factor-1,I) %otherwise, just recursively call check_factors with the next factor
  ).
% This is a predicate for finding the largest element in a list
% First, we define a base case when the list only has one element

max([X],X).

% Next, we define the recursive case
% We take the first element of the list and compare it to the maximum of the rest of the list
% If the first element is larger, it becomes the new maximum
% Otherwise, the maximum remains the same

max([H|T],Max) :- max(T,Max1), H > Max1, Max is H. % If the max of the rest of the list is smaller than the first element, first element becomes new max 
max([H|T],Max) :- max(T,Max1), H =< Max1, Max is Max1. % Otherwise, max stays the same


% Example query: 
% ?- max([4,2,10,7,5],Max).

% Output: 
% Max = 10
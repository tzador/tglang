/* This is a knowledge base for a medical diagnosis system */

/* Knowledge base of various diseases */
disease(flu).
disease(pneumonia).
disease(heart_disease).
disease(diabetes).
disease(cancer).

/* Symptoms for each disease */
symptom(flu, fever).
symptom(flu, cough).
symptom(flu, sore_throat).
symptom(pneumonia, difficulty_breathing).
symptom(pneumonia, chest_pain).
symptom(pneumonia, fever).
symptom(heart_disease, chest_pain).
symptom(heart_disease, shortness_of_breath).
symptom(heart_disease, irregular_heartbeat).
symptom(diabetes, frequent_urination).
symptom(diabetes, excessive_thirst).
symptom(diabetes, blurred_vision).
symptom(cancer, unexplained_weight_loss).
symptom(cancer, unusual_bleeding).
symptom(cancer, persistent_cough).

/* Rules for diagnosis */
diagnose(Patient, Disease) :-
    symptom(Disease, Symptom),         % get a symptom of the disease
    has_symptom(Patient, Symptom).     % check if patient has that symptom

/* Rules for checking symptoms */
has_symptom(Patient, Symptom) :-
    patient_symptom(Patient, Symptom). % check if patient reported this symptom
has_symptom(Patient, Symptom) :-
    not(patient_symptom(Patient, Symptom)), % check if patient did not explicitly deny this symptom
    ask(Patient, Symptom).            % if they did not deny, ask them if they have the symptom

/* Sample patients */
patient_symptom(john, fever).       
patient_symptom(john, cough).
patient_symptom(mary, chest_pain).
patient_symptom(mary, shortness_of_breath).
patient_symptom(mary, unexplained_weight_loss).

/* Function for asking patient about symptoms */
ask(Patient, Symptom) :-
    format('Do you have ~w? (y/n) ', [Symptom]), % prompt user for input
    read(Choice),                       % read their input
    ((Choice = 'y') ->                  % if they say yes,
        assert(patient_symptom(Patient, Symptom)); % add to patient's symptom list
    (Choice = 'n') ->                  % if they say no,
        assert(not(patient_symptom(Patient, Symptom))), % add to list of denied symptoms
    (Choice = 'q') ->                  % if they say quit,
        write("Exiting..."), nl,
        halt;                           % exit the program
    (write("Invalid input. Please enter 'y', 'n', or 'q'"), nl, ask(Patient, Symptom))). % if invalid input, ask again

/* Sample queries */
diagnose(john, Disease). % returns the disease flu
diagnose(mary, Disease). % returns the disease pneumonia
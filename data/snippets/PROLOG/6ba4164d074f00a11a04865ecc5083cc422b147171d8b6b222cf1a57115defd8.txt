% This is a comment in PROLOG

% Defining a predicate that checks if a list is empty
isEmpty([]).

% Defining a predicate that checks if a list has one element
hasOneElement([_]).

% Defining a predicate that checks if a list has multiple elements
hasMultipleElements([_,_|_]).

% Defining a predicate that checks if a list is sorted in ascending order
isAscending([_]).
isAscending([X,Y|Rest]) :- X =< Y, isAscending([Y|Rest]).

% Defining a predicate that checks if an element is in a list
isMember(X, [X|_]).
isMember(X, [_|Rest]) :- isMember(X, Rest).

% Defining a predicate that checks if all elements in a list are unique
isUnique([]).
isUnique([Head|Tail]) :- \+ isMember(Head, Tail), isUnique(Tail).

% Defining a predicate that finds the minimum element in a list
minimum(X,[X]).
minimum(X, [Head|Tail]) :- minimum(Y,Tail), X is min(Head,Y).
%% Predicate for finding the factorial of a number using tail recursion
factorial(N, Result) :-   
    fact(N, 1, Result).     % calls helper fact predicate with initial accumulator value of 1

%% Helper predicate for factorial calculation
fact(0, Accumulator, Accumulator) :- !. % base case, returns the final result
fact(N, Accumulator, Result) :-
    NewAcc is Accumulator * N,          % calculates the next accumulator value
    NextNum is N - 1,                   % calculates the next number to be multiplied
    fact(NextNum, NewAcc, Result).      % recursively calls itself with updated parameters

?- factorial(5, Result).
%% Output:
%% Result = 120
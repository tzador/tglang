% Defining the predicate 'factorial' with two parameters 'N' and 'Result'

factorial(N, Result) :-
    % Base case: if N is 0, then the factorial is 1
    N = 0,
    Result is 1.

factorial(N, Result) :-
    % Recursive case: if N is greater than 0, compute the factorial
    N > 0,
    % Decrease N by 1 and store it in Temp
    Temp is N - 1,
    % Call the factorial predicate again with Temp and TempResult as parameters
    factorial(Temp, TempResult),
    % Multiply TempResult and N to get the final Result
    Result is TempResult * N.
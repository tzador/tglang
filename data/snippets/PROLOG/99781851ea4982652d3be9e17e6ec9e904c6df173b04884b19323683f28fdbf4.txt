% This is a Prolog program that defines a family tree and checks relationships between family members.

% Defining a dynamic relationship between two parameters
:- dynamic parent/2.

% Defining the family tree using parent relationships
parent(tom, bob).
parent(jane, bob).
parent(tom, liz).
parent(jane, liz).
parent(bob, ann).
parent(liz, joe).

% Defining a rule to check if X is a parent of Y
is_parent(X, Y) :- parent(X, Y).

% Defining a rule to check if X is a grandparent of Y by checking if X is a parent of Z and Z is a parent of Y
is_grandparent(X, Y) :- parent(X, Z), parent(Z, Y).

% Defining a rule to check if X is a sibling of Y by checking if X and Y have the same parent
is_sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y.

% Defining a rule to check if X is a cousin of Y by checking if X and Y have a common grandparent and are not siblings
is_cousin(X, Y) :- parent(Z, X), parent(W, Y), is_grandparent(Z, W), X \= Y, \+is_sibling(X, Y).

% Defining a rule to check if X is an aunt/uncle of Y by checking if X is a sibling of Z and Z is a parent of Y
is_aunt_or_uncle(X, Y) :- is_sibling(X, Z), parent(Z, Y).

% Defining a rule to check if X is a cousin once removed of Y by checking if X is a cousin of Z and Z is a parent of Y
is_cousin_once_removed(X, Y) :- is_cousin(X, Z), parent(Z, Y).
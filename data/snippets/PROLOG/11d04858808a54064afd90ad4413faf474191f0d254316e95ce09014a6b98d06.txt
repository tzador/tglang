/* This is a program in PROLOG */
/* Author: John Doe */
/* Description: This program checks if a number is a perfect square */

/* Define the predicate "perfect_square" that takes a number as input and checks if it is a perfect square */
perfect_square(Number) :-
    /* First, we take the square root of the number and round it to the nearest integer */
    SquareRoot is round(sqrt(Number)),
    /* Next, we check if the square of the rounded square root is equal to the original number */
    SquareRoot * SquareRoot =:= Number.

/* Define the predicate "is_square" that takes a number as input and checks if it is a perfect square or not */
is_square(Number) :-
    /* First, we check if the number is greater than or equal to 0, as negative numbers cannot be perfect squares */
    Number >= 0,
    /* Next, we use the "perfect_square" predicate to check if the number is a perfect square */
    perfect_square(Number).
    
/* Example query: is_square(25). */
/* Output: true */
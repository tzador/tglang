% This is a Prolog program that finds the maximum element in a list of numbers.
% This program uses recursion to go through the list, keeping track of the current maximum element.
% The base case is when the list only has one element, which is automatically the maximum.
% The recursive case compares the current element to the maximum found so far, and updates it if necessary.
% Once the entire list has been traversed, the maximum element is returned.

% Define the predicate for finding maximum of a list
find_max(List, Max) :- 
    % Base case: the list only has one element, which is automatically the maximum
    length(List, 1), 
    List = [Max].

find_max(List, Max) :-
    % Recursive case: get the first two elements of the list
    [First, Second | Rest] = List,
    % Compare the first two elements and save the larger one as the current maximum
    (   First >= Second -> 
        CurrentMax = First
    ;   CurrentMax = Second
    ),
    % Recursively call find_max with the rest of the list and the current maximum
    find_max([CurrentMax | Rest], Max).

% Example query: find_max([5, 10, 3, 15, 2], Max)
% Output: Max = 15
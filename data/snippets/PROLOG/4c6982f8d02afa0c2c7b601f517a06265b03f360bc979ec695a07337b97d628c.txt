%! Integer division
%? Result will always be an integer.
integer_divide(Dividend, Divisor, Result) :-
    Divisor > 0,                   %? Divisor must be greater than 0
    Dividend >= 0,                 %? Dividend must be greater than or equal to 0
    Dividend - Divisor >= 0,        %? Dividend minus Divisor must be greater than or equal to 0
    Dividend - Divisor < Divisor,   %? Dividend minus Divisor must be less than Divisor
    Result is 1.                    %? Result is set to 1
integer_divide(Dividend, Divisor, Result) :-
    Divisor > 0,                   %? Divisor must be greater than 0
    Dividend >= 0,                 %? Dividend must be greater than or equal to 0
    Dividend - Divisor >= 0,        %? Dividend minus Divisor must be greater than or equal to 0
    Dividend - Divisor >= Divisor,  %? Dividend minus Divisor must be greater than or equal to Divisor
    integer_divide(Dividend-Divisor, Divisor, IntermediateResult), %? Recursively call integer_divide on the new dividend and divisor
    Result is IntermediateResult + 1. %? Result is set to the value of IntermediateResult plus 1
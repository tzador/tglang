% Sets up rules for a family tree
parent(john, bob).
parent(john, sarah).
parent(anne, bob).
parent(anne, sarah).
parent(bob, tom).
parent(bob, mary).
parent(sarah, jessica).
parent(sarah, tim).

% This rule defines the relationship of a child to their parent
child(X, Y) :- parent(Y, X).

% This rule defines who is a grandmother
grandmother(X, Z) :- parent(X, Y), parent(Y, Z), female(X).

% This rule defines who is a sister
sister(X, Y) :- parent(Z, X), parent(Z, Y), female(X), X \= Y.

% Returns all grandchildren of a given person
list_of_grandchildren(X) :- findall(GC, (parent(X, Parent), parent(Parent, GC)), List), sort(List).

% This rule defines if two people are cousins
cousin(X, Y) :- parent(Parent1, X), parent(Parent2, Y), sibling(Parent1, Parent2).

% This rule finds all siblings of a person, used for cousin definition
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y.

% Returns the number of elements in a list
list_length([], 0).
list_length([_|Tail], N) :- list_length(Tail, OldN), N is OldN + 1.

% This rule finds the longest list of grandchildren from a list of parents
longest_grandchildren(List, LongestList) :- findall(X, (member(Parent, List), list_of_grandchildren(Parent, X)), Lists),
    list_length(Lists, N),
    (   N > 0
    ->  length(LongestList, N),
        member(LongestList, Lists); LongestList = []).
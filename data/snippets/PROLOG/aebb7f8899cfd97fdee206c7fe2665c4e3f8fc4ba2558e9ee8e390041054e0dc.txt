% This is a comment in PROLOG

/* This is a multi-line comment
in PROLOG */

% Define a predicate 'fibonacci' that takes in two parameters
fibonacci(0, 0).
fibonacci(1, 1).

% Define a recursive rule for the fibonacci predicate
fibonacci(N, F) :- 
    N > 1, % check if N is greater than 1
    N1 is N - 1, % subtract 1 from N
    N2 is N - 2, % subtract 2 from N
    % recursively call the fibonacci predicate with N1 and N2
    fibonacci(N1, F1), 
    fibonacci(N2, F2),
    % add the results of the recursive calls to get the final result
    F is F1 + F2.

% Define a predicate 'factorial' that takes in two parameters
factorial(0, 1).
factorial(1, 1).

% Define a recursive rule for the factorial predicate
factorial(N, F) :- 
    N > 1, % check if N is greater than 1
    N1 is N - 1, % subtract 1 from N
    % recursively call the factorial predicate with N1
    factorial(N1, F1),
    % multiply N by the result of the recursive call to get the final result
    F is N * F1.
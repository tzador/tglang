/* This is a Prolog program that defines and solves the doublet puzzle. */

/* Rules for checking if two words are a doublet */
doublet(Source, Target, Path) :-      /* A doublet can be formed in one step if Source and Target differ by one letter */
    word(Source),                     /* Check if Source is a valid word */
    word(Target),                     /* Check if Target is a valid word */
    one_step(Source, Target),         /* Check if Source and Target differ by one letter */
    append(Source, Target, Path).     /* Append Source and Target to get the path */

doublet(Source, Target, Path) :-      /* A doublet can be formed in multiple steps */
    word(Source),                     /* Check if Source is a valid word */
    word(Target),                     /* Check if Target is a valid word */
    one_step(Source, Intermediate),   /* Check if Source and Intermediate differ by one letter */
    doublet(Intermediate, Target, Path1), /* Recursively call doublet to check if Intermediate and Target are a doublet */
    append(Source, Path1, Path).      /* Append Source and the path from Intermediate to Target to get the final path */

/* Rule for one step difference between two words */
one_step(Source, Target) :-           /* Recursive rule for checking if two words differ by one letter */
    atom_codes(Source, X),            /* Convert Source to a list of character codes */
    atom_codes(Target, Y),            /* Convert Target to a list of character codes */
    different_by_one_letter(X, Y).    /* Call predicate to check if the two lists differ by one letter */

/* Rule for checking if two lists differ by one letter */
different_by_one_letter([X|Xs], [Y|Ys]) :-    /* If the first item of the two lists are different */
    Xs = Ys;                                  /* Check if the remaining items in the lists are the same */
different_by_one_letter([X|Xs], [Y|Ys]) :-    /* If the first item of the two lists are the same */
    different_by_one_letter(Xs, Ys).           /* Recursively call different_by_one_letter on the remaining items */
    
/* List of valid words */
word("cat").
word("dog").
word("cot").
word("cog").
word("log").
word("lag").
word("sit").
word("set").
word("let").
word("lot").

/* Example query */
?- doublet("cat", "dog", Path).
/* Expected output: Path = [cat, cot, cog, dog] */
/* This program generates a list of prime numbers within a given range */
/* The range is defined by the variables 'Start' and 'End' */
/* The variable 'PrimeList' will contain the list of prime numbers */
prime_range(Start, End, PrimeList) :-
  /* The first element of the prime list should be 2 */
  Start =< 2,
  /* Get all prime numbers between 2 and the end of the range */
  prime_range(2, End, [2], PrimeList).

prime_range(Num, End, Primes, PrimeList) :-
  /* Check if the current number is greater than the end of the range, if so, return the list of primes */
  Num > End,
  !,
  PrimeList = Primes.

prime_range(Num, End, Primes, PrimeList) :-
  /* Check if the current number is divisible by any numbers in the list of primes */
  is_divisible_by_list(Num, Primes),
  /* If it is, move on to the next number */
  NewNum is Num + 1,
  prime_range(NewNum, End, Primes, PrimeList).

prime_range(Num, End, Primes, PrimeList) :-
  /* If not, add it to the list of primes and move on to the next number */
  NewNum is Num + 1,
  prime_range(NewNum, End, [Num|Primes], PrimeList).

/* Helper predicate to check if a number is divisible by any number in a list */
is_divisible_by_list(Num, [Head|Tail]) :-
  /* If the number is divisible by the current head of the list, fail */
  0 is Num mod Head,
  !,
  fail.

is_divisible_by_list(Num, [Head|Tail]) :-
  /* Move on to the next number in the list */
  is_divisible_by_list(Num, Tail).
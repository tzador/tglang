/* A simple Prolog program that defines the relationship of being a grandparent */

/* Declaring the fact of having a grandparent relationship */
grandparent(bob, mike).
grandparent(bob, lisa).
grandparent(emily, mike).
grandparent(emily, lisa).

/* Defining the rule for being a grandparent */
/* A person X is a grandparent of Y if Z is the parent of X and Y is the parent of Z */
grandparent(X, Y) :- parent(Z, X), parent(Y, Z).

/* Declaring the fact of having a parent relationship */
parent(mike, john).
parent(lisa, john).
parent(mike, kate).
parent(lisa, kate).

/* Defining the rule for being a parent */
/* A person X is a parent of Y if X is the father of Y */
parent(X, Y) :- father(X, Y).

/* Defining the rule for being a parent */
/* A person X is a parent of Y if X is the mother of Y */
parent(X, Y) :- mother(X, Y).

/* Declaring the fact of having a father relationship */
father(john, bob).
father(john, emily).

/* Defining the rule for being a father */
/* A person X is a father of Y if X is male */
father(X, Y) :- male(X).

/* Declaring the fact of having a mother relationship */
mother(kate, bob).
mother(kate, emily).

/* Defining the rule for being a mother */
/* A person X is a mother of Y if X is female */
mother(X, Y) :- female(X).

/* Declaring the fact of gender */
male(bob).
male(john).
female(emily).
female(lisa).
female(kate).

/* Querying for all possible grandparent relationships */
?- grandparent(X, Y).
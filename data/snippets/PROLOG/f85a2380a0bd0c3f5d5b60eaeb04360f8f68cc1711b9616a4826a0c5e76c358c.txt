% Defining a function that checks if a given list is in ascending order
% Input: List
% Output: Boolean value that indicates whether the list is in ascending order

ascending([]). % Base case, an empty list is always in ascending order
ascending([_]). % Base case, a list with only one element is always in ascending order
ascending([X,Y|Z]) :- X =< Y, % Check if the head of the list is less than or equal to the next element
                      ascending([Y|Z]). % Recursively call the function with the tail of the list

% Defining a function to merge two sorted lists in ascending order
% Input: Two lists in ascending order
% Output: A merged list in ascending order

merge([], List, List). % Base case, when the first list is empty, the merged list is the second list
merge(List, [], List). % Base case, when the second list is empty, the merged list is the first list
merge([X|XS], [Y|YS], [X|MS]) :- X =< Y, % Check if the first element of the first list is less than or equal to the first element of the second list
                                  merge(XS, [Y|YS], MS). % Recursively call the function with the remaining elements of the first list and the whole second list
merge([X|XS], [Y|YS], [Y|MS]) :- X > Y, % If the first element of the first list is greater than the first element of the second list
                                 merge([X|XS], YS, MS). % Recursively call the function with the whole first list and the remaining elements of the second list

% Defining a function to merge multiple sorted lists into one sorted list
% Input: List of lists in ascending order
% Output: A merged list in ascending order

merge_lists([], []). % Base case, when the list of lists is empty, the merged list is also empty
merge_lists([List], List). % Base case, when there is only one list in the list of lists, the merged list is the same list
merge_lists([List1, List2|Rest], Merged) :- merge(List1, List2, Merged1), % Merge the first two lists and store the result as Merged1
                                            merge_lists([Merged1|Rest], Merged). % Recursively call the function with the merged list and the rest of the list of lists as input
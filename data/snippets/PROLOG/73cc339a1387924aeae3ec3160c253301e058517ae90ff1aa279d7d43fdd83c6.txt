parent(child, parent) :- % this is a rule
   father(child, parent). % this is a fact, defining a relationship between child and parent
   
parent(child, parent) :-
   mother(child, parent).
   
ancestor(descendant, ancestor) :- % this is another rule
   parent(descendant, ancestor). % the ancestor is the parent of the descendant
   
ancestor(descendant, ancestor) :-
   parent(descendant, parent), % this is a subgoal, meaning the parent of the descendant is a parent of the ancestor
   ancestor(parent, ancestor). % this is a recursive call, meaning the ancestor is also an ancestor of the descendant's parent
   
% this is an example of how the code would be used
?- ancestor(jack, mary). % this is a query, asking if jack is an ancestor of mary
   father(jack, john).
   mother(john, mary).
   
   % the output would be "true" since jack is the grandfather of mary
%This is a Prolog program that implements a family tree.
%Defining the family tree for the example
parent(anne, bob).
parent(bob, claire).
parent(bob, david).
parent(david, emily).
parent(claire, fred).
parent(claire, george).
parent(george, henry).
parent(emily, isla).

%Defining rules to check if X is the ancestor of Y
ancestor(X, Y) :-
    parent(X, Y).

ancestor(X, Y) :-
    parent(X, Z),
    ancestor(Z, Y).

%Defining rules to check if X is the descendant of Y
descendant(X, Y) :-
    parent(Y, X).

descendant(X, Y) :-
    parent(Z, X),
    descendant(Z, Y).

%Defining a rule to check if X is a sibling of Y
sibling(X, Y) :-
    parent(Z, X),
    parent(Z, Y),
    X \= Y. % X is not the same as Y

%Defining a rule to check if X is the brother of Y
brother(X, Y) :-
    parent(Z, X),
    parent(Z, Y),
    X \= Y, % X is not the same as Y
    male(X). % X is a male

%Defining a rule to check if X is the sister of Y
sister(X, Y) :-
    parent(Z, X),
    parent(Z, Y),
    X \= Y, % X is not the same as Y
    female(X). % X is a female

%Defining a rule to check if X is the uncle of Y
uncle(X, Y) :-
    sibling(X, Z),
    parent(Z, Y),
    male(X). % X is a male

%Defining a rule to check if X is the aunt of Y
aunt(X, Y) :-
    sibling(X, Z),
    parent(Z, Y),
    female(X). % X is a female

%Example queries:
%?- ancestor(anne, emily). %Output: true
%?- descendant(george, david). %Output: true
%?- sibling(fred, george). %Output: true
%?- brother(david, claire). %Output: false
%?- aunt(fred, isla). %Output: true
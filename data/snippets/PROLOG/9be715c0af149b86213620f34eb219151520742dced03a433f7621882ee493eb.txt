% This is a program that models a simple bank account system.
% It allows for deposits, withdrawals, and balance inquiries.
% The user is prompted with menu options.

% Define the account predicate with a balance and account number.
% The balance is initialized to 0.
account(0, 123456789).

% Define predicates for each action: deposit, withdraw, and check balance.
% Each predicate takes in the amount and the account number as parameters.

% Deposit predicate:
% Takes in the current balance and adds the deposit amount to it.
% Outputs the new balance to the user.
deposit(Amount, Account) :-
    account(Current_Balance, Account),
    New_Balance is Current_Balance + Amount,
    write('Your new balance is: '),
    write(New_Balance).

% Withdraw predicate:
% Takes in the current balance and subtracts the withdrawal amount from it.
% Checks if the new balance is less than 0, if so, outputs an error message.
% If the balance is greater than 0, it outputs the new balance to the user.
withdraw(Amount, Account) :-
    account(Current_Balance, Account),
    New_Balance is Current_Balance - Amount,
    (
        New_Balance < 0,
        write('Error: Insufficient funds.')
        ;
        write('Your new balance is: '),
        write(New_Balance)
    ).

% Check balance predicate:
% Outputs the current balance to the user.
check_balance(Account) :-
    account(Current_Balance, Account),
    write('Your current balance is: '),
    write(Current_Balance).

% Prompt the user with menu options.
:- write('Welcome to Simple Bank! Please choose an option: '),
   nl,
   write('1. Deposit'),
   nl,
   write('2. Withdraw'),
   nl,
   write('3. Check Balance'),
   nl,
   write('Enter your choice (1-3): '),
   read(Choice), % Reads the user's input for the menu choice.
   nl,
   write('Enter your account number: '),
   read(Account), % Reads the user's input for their account number.
   nl,
   % Call the appropriate predicate based on the user's choice.
   (
       Choice =:= 1,
       write('Enter the amount to deposit: '),
       read(Amount), % Reads the user's input for the amount to deposit.
       deposit(Amount, Account)
       ;
       Choice =:= 2,
       write('Enter the amount to withdraw: '),
       read(Amount), % Reads the user's input for the amount to withdraw.
       withdraw(Amount, Account)
       ;
       Choice =:= 3,
       check_balance(Account)
   ).

% Sample output:
% Welcome to Simple Bank! Please choose an option:
% 1. Deposit
% 2. Withdraw
% 3. Check Balance
% Enter your choice (1-3): 1.

% Enter your account number: 123456789.
% Enter the amount to deposit: 500.
% Your new balance is: 500.

% Enter your choice (1-3): 3.

% Enter your account number: 123456789.
% Your current balance is: 500.
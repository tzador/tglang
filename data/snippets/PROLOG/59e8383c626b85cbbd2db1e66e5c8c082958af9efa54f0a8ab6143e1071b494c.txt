% This predicates checks if a given list contains all odd numbers.
% The list is provided as an input argument.
all_odd_numbers(List) :-
        check_odd_numbers(List,[]).

% Base case: if the list is empty, return true.
check_odd_numbers([],_).

% Recursive case: if the head of the list is odd, add it to the new list and call check_odd_numbers on the tail.
check_odd_numbers([Head|Tail],NewList) :-
        1 is Head mod 2,
        append(NewList,[Head],NewList2),
        check_odd_numbers(Tail,NewList2).

% Recursive case: if the head of the list is even, continue checking the tail.
check_odd_numbers([Head|Tail],NewList) :-
        0 is Head mod 2,
        check_odd_numbers(Tail,NewList).

% Example query: ?- all_odd_numbers([1,3,5,7]).
% Example output: true.
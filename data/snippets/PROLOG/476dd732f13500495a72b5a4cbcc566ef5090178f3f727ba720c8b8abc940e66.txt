/* This is a Prolog knowledge base that represents a family tree */

/* Facts */

male(john).                  /* john is a male */
female(alice).               /* alice is a female */
female(anna).                /* anna is a female */
female(janet).               /* janet is a female */
male(peter).                 /* peter is a male */
male(jim).                   /* jim is a male */
male(jake).                  /* jake is a male */
female(jill).                /* jill is a female */

parent(john, peter).         /* john is the parent of peter */
parent(john, jim).           /* john is the parent of jim */
parent(john, jake).          /* john is the parent of jake */
parent(alice, peter).        /* alice is the parent of peter */
parent(alice, jim).          /* alice is the parent of jim */
parent(alice, jake).         /* alice is the parent of jake */
parent(anna, janet).         /* anna is the parent of janet */

/* Rules */

father(X, Y) :- male(X), parent(X, Y). /* A person X is the father of person Y if X is male and X is the parent of Y */
mother(X, Y) :- female(X), parent(X, Y). /* A person X is the mother of person Y if X is female and X is the parent of Y */
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y. /* X and Y are siblings if they have the same parent Z and X is not equal to Y */
brother(X, Y) :- male(X), sibling(X, Y). /* A person X is the brother of person Y if X is male and they are siblings */
sister(X, Y) :- female(X), sibling(X, Y). /* A person X is the sister of person Y if X is female and they are siblings */
grandparent(X, Z) :- parent(X, Y), parent(Y, Z). /* X is the grandparent of Z if Y is the parent of Z and X is the parent of Y */
ancestor(X, Z) :- parent(X, Z). /* X is an ancestor of Z if X is the parent of Z */
ancestor(X, Z) :- parent(X, Y), ancestor(Y, Z). /* X is an ancestor of Z if X is the parent of Y and Y is an ancestor of Z */

/* Queries */

father(john, peter).         /* Output: true */
father(peter, john).         /* Output: false */
mother(alice, jim).          /* Output: true */
sibling(peter, jim).         /* Output: true */
brother(peter, jake).        /* Output: true */
sister(alice, janet).        /* Output: true */
grandparent(john, janet).    /* Output: true */
ancestor(john, janet).       /* Output: true */
ancestor(alice, janet).      /* Output: true */
/* This program returns all possible combinations of two lists */
/* Define a predicate for finding combinations */
combination(A, B, [X, Y]) :-
    /* A and B are lists */
    /* X is an element of A */
    /* Y is an element of B */
    /* Find all combinations of X and Y */
    /* Use append predicate to combine elements into a list */
    member(X, A),
    member(Y, B),
    append([X], [Y], [X, Y]).

/* Define a predicate for returning all combinations */
all_combinations(A, B, C) :-
    /* A and B are lists */
    /* C is the output list */
    /* Find all combinations of A and B */
    /* Use findall predicate to collect all combinations into a list */
    findall([X, Y], combination(A, B, [X, Y]), C).
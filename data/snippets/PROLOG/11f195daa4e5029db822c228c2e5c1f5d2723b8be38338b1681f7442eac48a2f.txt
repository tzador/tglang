%----------FACTS----------%
%facts about numbers
number(0).
number(1).
number(2).
number(3).
number(4).
number(5).
number(6).
number(7).
number(8).
number(9).

%facts about expressions
expression(add(X,Y), plus(X,Y)).
expression(sub(X,Y), minus(X,Y)).
expression(mul(X,Y), times(X,Y)).
expression(div(X,Y), divided by(X,Y)).
expression(pow(X,Y), raised to power(X,Y)).

%----------RULES----------%
%rule to determine if two expressions are equivalent
equivalent(Expression1, Expression2) :-
    expression(Expression1, Name1, Arguments1), %get name and arguments of first expression
    expression(Expression2, Name2, Arguments2), %get name and arguments of second expression
    Name1 = Name2, %check if the names are the same
    Arguments1 = Arguments2. %check if the arguments are the same

%rule to evaluate an expression
evaluate(Expression, Result) :-
    Expression = add(X,Y), %check if expression is an addition
    number(X), %check if first argument is a number
    number(Y), %check if second argument is a number
    Result is X + Y. %calculate and assign result

evaluate(Expression, Result) :-
    Expression = sub(X,Y), %check if expression is a subtraction
    number(X), %check if first argument is a number
    number(Y), %check if second argument is a number
    Result is X - Y. %calculate and assign result

evaluate(Expression, Result) :-
    Expression = mul(X,Y), %check if expression is a multiplication
    number(X), %check if first argument is a number
    number(Y), %check if second argument is a number
    Result is X * Y. %calculate and assign result

evaluate(Expression, Result) :-
    Expression = div(X,Y), %check if expression is a division
    number(X), %check if first argument is a number
    number(Y), %check if second argument is a number
    Result is X / Y. %calculate and assign result

evaluate(Expression, Result) :-
    Expression = pow(X,Y), %check if expression is an exponentiation
    number(X), %check if first argument is a number
    number(Y), %check if second argument is a number
    Result is X ** Y. %calculate and assign result

%----------GOAL----------%
%find equivalent expressions
?- equivalent(add(3,4), plus(3,4)). %find if the expressions are equivalent
    %prints "true" because both expressions evaluate to the same result
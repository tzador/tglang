% finding the maximum element in a list
maxList([H|T], Max) :-  % defining the predicate maxList with two parameters, a list and a variable for the maximum element
    maxList(T, H, Max). % calling the helper predicate with the list, the first element as the current maximum, and the variable for the maximum element

% base case - when the list is empty, the maximum element is the current maximum
maxList([], Max, Max).

% helper predicate with three parameters - a list, the current maximum, and the variable for the maximum element
maxList([H|T], CurrentMax, Max) :- % defining the predicate with three parameters
    H > CurrentMax, % checking if the current element is greater than the current maximum
    maxList(T, H, Max). % recursively calling the predicate with the rest of the list and the current element as the new current maximum

maxList([H|T], CurrentMax, Max) :-
    H =< CurrentMax, % if the current element is not greater than the current maximum, we skip it
    maxList(T, CurrentMax, Max). % recursively call the predicate with the rest of the list and the current maximum remaining the same

% example query:
% maxList([8, 3, 9, 5, 1, 2], Max).
% output: Max = 9
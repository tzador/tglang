% This code snippet is a Prolog program for solving a Sudoku puzzle.

% Declaration of possible numbers.
numbers(1).
numbers(2).
numbers(3).
numbers(4).
numbers(5).
numbers(6).
numbers(7).
numbers(8).
numbers(9).

% Rules for determining valid rows, columns, and squares.
valid([]).
valid([H|T]) :- numbers(H), valid(T).

% Rule for determining valid Sudoku rows.
validRow([]).
validRow([H|T]) :- numbers(H), not(member(H, T)), validRow(T).

% Rule for determining valid Sudoku columns.
validColumn([], []).
validColumn([H|T1], [H|T2]) :- numbers(H), validColumn(T1, T2).

% Rule for determining valid Sudoku squares.
validBlock([], []).
validBlock([A,B,C,D,E,F,G,H,I|T], [A,B,C,D,E,F,G,H,I|T]) :- validRow([A,B,C,D,E,F,G,H,I|T]).
validBlock([A,B,C,D,E,F,G,H,I|T], [A,B,C|L]) :- validRow([A,B,C|T]), validBlock([D,E,F,G,H,I|T], L).

% Rule for determining solved Sudoku grids.
sudoku(L) :-
    L = [A,B,C,D,E,F,G,H,I], % Grid is a list of nine elements.
    valid(L),
    validColumn([A,B,C,D,E,F,G,H,I], [A1,B1,C1,D1,E1,F2,G1,H1,I1]), % Grid is a valid column.
    validColumn([A,B,C,D,E,F,G,H,I], [A2,B2,C2,D2,E2,F3,G2,H2,I2]), % Grid is a valid column.
    validRow([A1,B1,C1,D1,E1,F1,G1,H1,I1]), % First three elements of grid is a valid row.
    validRow([A2,B2,C2,D2,E2,F3,G2,H2,I2]), % Second three elements of grid is a valid row.
    validBlock([A1,B1,C1,A,B,C,D,E,F], [A2,B2,C2,A1,B1,C1,A,B,C]), % First block is a valid block.
    validBlock([D1,E1,F1,D,E,F,G,H,I], [D2,E2,F2,D1,E1,F1,D,E,F]), % Second block is a valid block.
    validBlock([G1,H1,I1,G,H,I,D,E,F], [G2,H2,I2,G1,H1,I1,G,H,I]), % Third block is a valid block.
    validBlock([A,B,C,D,E,F,G,H,I], [A1,B1,C1,A,B,C,D,E,F]), % First row of grid is a valid row in block.
    validBlock([A2,B2,C2,D,E,F,G,H,I], [A,B,C,A1,B1,C1,D,E,F]), % Second row of grid is a valid row in block.
    validBlock([A1,B1,C1,D1,E1,F1,G,H,I], [G1,H1,I1,G2,H2,I2,D1,E1,F1]), % Third row of grid is a valid row in block.
    validBlock([D1,E1,F1,G,H,I,A,B,C], [A1,B1,C1,D1,E1,F1,G,H,I]), % First row of grid is a valid row in block.
    validBlock([D2,E2,F2,D1,E1,F1,A,B,C], [G1,H1,I1,G2,H2,I2,D1,E1,F1]), % Second row of grid is a valid row in block.
    validBlock([D1,E1,F1,D2,E2,F2,D,E,F], [G1,H1,I1,G2,H2,I2,D2,E2,F2]), % Third row of grid is a valid row in block.
    printGrid(L). % Print the solved grid.

% Rule for printing Sudoku grids.
printGrid([A,B,C,D,E,F,G,H,I]) :-
    write('[|'), write(A),write('|'), write(B),write('|'), write(C),write('|]'), nl,
    write('[|'), write(D),write('|'), write(E),write('|'), write(F),write('|]'), nl,
    write('[|'), write(G),write('|'), write(H),write('|'), write(I),write('|]'), nl.
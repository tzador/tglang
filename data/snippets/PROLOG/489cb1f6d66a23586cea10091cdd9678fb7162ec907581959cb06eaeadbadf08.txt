%% This is a prolog code snippet that implements a knowledge base for a medical system.

% This is a comment in prolog, denoted by the percentage symbol.

% Knowledge base: person(Name, Age, Gender).
person(john, 35, male). % This is a fact, John is a 35 year old male.
person(mary, 42, female).
person(jane, 28, female).

% Rules can be used to infer information based on the facts.
% For example, if a person is above the age of 40, they are considered to be in the 'older' category.
category(X, older) :- person(X, Age, _), Age >= 40.

% Another rule that categorizes people based on their gender.
category(X, male) :- person(X, _, male).
category(X, female) :- person(X, _, female).

% Queries can be made to the knowledge base to extract information.
% For example, to check if John is classified as male, we can use the query: category(john, male).
% This will return "true" as John is classified as male in the knowledge base.

% To find all the people above the age of 40, we can use the query: category(X, older).
% This will return a list of all the people who are categorized as 'older' in the knowledge base.

% In addition to rules, prolog also supports recursion.
% This rule calculates the factorial of a given number.
factorial(0, 1). % base case, factorial of 0 is 1.
factorial(N, F) :- N > 0, N1 is N-1, factorial(N1, F1), F is N * F1. % recursive case, calculate factorial by multiplying N with (N-1) factorial.

% Queries can be made to test this rule as well.
% For example, to find the factorial of 5, we can use the query: factorial(5, F).
% This will return "F = 120" as 5! = 120.
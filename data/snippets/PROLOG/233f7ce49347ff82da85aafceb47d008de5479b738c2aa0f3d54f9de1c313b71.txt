% Define a predicate that checks if a list is a permutation of another list
permutation([], []).
permutation(L, [H|T]) :- delete(H, L, Rest), permutation(Rest, T).

% Define a predicate that deletes an element from a list
delete(X, [X|L], L).
delete(X, [Y|L], [Y|Result]) :- delete(X, L, Result).

% Define a predicate that finds all possible permutations of a list
all_permutations(L, X) :- setof(Y, permutation(L, Y), X).
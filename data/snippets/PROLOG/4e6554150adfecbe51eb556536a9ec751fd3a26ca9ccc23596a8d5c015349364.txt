:- discontiguous animal/1, eaten_by/2.
animal(cat). % declares cat as an animal
animal(dog). % declares dog as an animal

eaten_by(dog, cat). % declares the fact that dog eats cat
eaten_by(snake, mouse). % declares the fact that snake eats mouse

predator(X) :- % defines a rule for determining if an animal is a predator
    animal(X), % checks if X is an animal
    eaten_by(X, _). % checks if X eats any animal, using anonymous variable

prey(X) :- % defines a rule for determining if an animal is a prey
    animal(X), % checks if X is an animal
    eaten_by(_, X). % checks if any animal eats X, using anonymous variable

carnivore(X) :- % defines a rule for determining if an animal is a carnivore
    animal(X), % checks if X is an animal
    eaten_by(X, _), % checks if X eats any animal, using anonymous variable
    eaten_by(_, X). % checks if any animal eats X, using anonymous variable

% query to find all predators
?- predator(X). % X will be bound to cat and dog

% query to find all prey
?- prey(X). % X will be bound to mouse

% query to find all carnivores
?- carnivore(X). % X will be bound to dog and snake
/* Define a predicate that takes in a list of numbers and returns the maximum number in the list */

max_list([H|T], M):-       // Base Case: If the list contains only one element, it is automatically the maximum number
    T = [],                // Check if the tail of the list is empty
    H = M.                 // Assign the head value to the maximum number

max_list([H|T], M):-       // Recursive case: If the list has multiple elements
    max_list(T, TM),       // Recursively call the predicate with the tail of the list
    H > TM,                // Check if the head value is greater than the maximum number in the tail
    H = M.                 // If yes, the head value is the new maximum number

max_list([H|T], M):-       // Recursive case: If the list has multiple elements
    max_list(T, TM),       // Recursively call the predicate with the tail of the list
    H =< TM,               // Check if the head value is less than or equal to the maximum number in the tail
    TM = M.                // If yes, the tail maximum value is the new maximum number

/* Example query:
?- max_list([5,3,4,8,2], M).
M = 8. */
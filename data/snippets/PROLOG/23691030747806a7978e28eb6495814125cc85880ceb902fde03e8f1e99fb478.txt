%% Declare facts

parent(john, lisa).
parent(john, alex).
parent(samantha, lisa).
parent(samantha, alex).
parent(michael, john).
parent(michael, samantha).

%% Define rules for grandparents (Note: 'grandparent' is a temporary variable)

grandparent(X, Z) :-
    parent(X, Y),
    parent(Y, Z).

%% Define rules for siblings (Note: 'sibling' is a temporary variable)
sibling(X, Y) :-
    parent(Z, X),
    parent(Z, Y),
    X \= Y.

%% Define rules for cousins (Note: 'cousin' is a temporary variable)
cousin(X, Y) :-
    parent(Z, X),
    parent(W, Y),
    sibling(Z, W).

%% Define rules for ancestors (Note: 'ancestor' is a temporary variable)
ancestor(X, Y) :-
    parent(X, Y).

ancestor(X, Y) :-
    parent(X, Z),
    ancestor(Z, Y).

%% Query examples

?- parent(john, lisa).  % Returns 'true'

?- grandparent(michael, alex).  % Returns 'true'

?- ancestor(samantha, lisa).  % Returns 'true'

?- cousin(alex, lisa).  % Returns 'false' since they are siblings, not cousins.
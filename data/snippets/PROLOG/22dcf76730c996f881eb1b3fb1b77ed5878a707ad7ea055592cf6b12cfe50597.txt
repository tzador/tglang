%% Define a predicate to check if a list contains an element N
%% If the element does not exist, append it to the list

contains(N, [N|_]). % check if N is the first element of the list
contains(N, [_|T]) :- contains(N, T). % recursively check the rest of the list

append_unique(N, L, L) :- contains(N, L). % if N already exists in list L, return L
append_unique(N, L, [N|L]). % if N does not exist in list L, append it to the front

% Example usage:
% ?- append_unique(3, [1,2,4,5], L).
% L = [3, 1, 2, 4, 5].
% ?- append_unique(5, [1,2,3,4], L).
% L = [1, 2, 3, 4, 5].
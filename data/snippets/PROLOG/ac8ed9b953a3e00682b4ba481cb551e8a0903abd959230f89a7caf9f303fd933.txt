% This is a comment in PROLOG
% Declare a predicate for finding the maximum of two numbers
max(X, Y, Max) :- X >= Y, Max is X.
max(X, Y, Max) :- Y > X, Max is Y.
% Define a predicate for finding the maximum of three numbers
max_of_three(X, Y, Z, Max) :- max(X, Y, M), max(M, Z, Max).
% Define a predicate for finding the factorial of a number
factorial(0, 1).
factorial(N, Result) :- N > 0, N1 is N-1, factorial(N1, R1), Result is N * R1.
% Define a predicate for checking if a number is prime
is_prime(2) :- true.
is_prime(N) :- N > 2, N mod 2 =\= 0, \+ has_factor(N, 3).
% Helper predicate for checking if a number has a factor
has_factor(N, L) :- N mod L =:= 0.
% Recursive loop to check for more factors
has_factor(N,L) :- L * L < N, L2 is L + 2, has_factor(N, L2).
% Define a predicate for appending two lists
append([], L, L).
append([X|L1], L2, [X|L3]) :- append(L1, L2, L3).
% Define a predicate for computing the length of a list
length([], 0).
length([_|Rest], N) :- length(Rest, N1), N is N1+1.
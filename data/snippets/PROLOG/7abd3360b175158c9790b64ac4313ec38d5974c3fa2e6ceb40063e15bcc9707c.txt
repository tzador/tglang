% This is a prolog program that defines a predicate to check if a list is a permutation of another list.

% Define a predicate to check if two lists are permutations of each other.
check_permutation(List1, List2) :-
    % Use the length predicate to check if the length of both lists are equal.
    length(List1, Length),
    length(List2, Length),
    % Use the permutation predicate to generate all possible permutations of List1.
    permutation(List1, Permutation),
    % Check if the generated permutation is equal to List2.
    Permutation = List2.

% Define the permutation predicate to generate all possible permutations of a list.
permutation([], []).
permutation(List, [Head|Permutation]) :-
    % Split the list into two parts, with Head being the first element of the list.
    select(Head, List, Rest),
    % Use permutation recursively to generate permutations for the rest of the list.
    permutation(Rest, Permutation).
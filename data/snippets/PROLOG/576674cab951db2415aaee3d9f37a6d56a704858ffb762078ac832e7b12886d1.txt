% This code snippet implements a knowledge base for a simple family tree.

% Define predicates for male and female individuals.
male(john).
male(bob).
male(tom).
male(peter).
female(anne).
female(lisa).
female(sarah).
female(jane).

% Define parent-child relationships.
parent(john, bob).
parent(john, tom).
parent(lisa, bob).
parent(lisa, tom).

parent(bob, peter).
parent(anne, peter).

parent(tom, sarah).
parent(jane, sarah).

% Define rules for determining the gender of an individual.
female(X) :- parent(X, _), female(X).
male(X) :- parent(X, _), male(X).

% Define rules for determining if two individuals are siblings.
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X\=Y.

% Define rules for determining if two individuals are brothers.
brother(X, Y) :- parent(Z, X), parent(Z, Y), male(X), X\=Y.

% Define rules for determining if two individuals are sisters.
sister(X, Y) :- parent(Z, X), parent(Z, Y), female(X), X\=Y.

% Define rules for determining if two individuals are married.
married(X, Y) :- parent(X, Z), parent(Y, Z), X\=Y.

% Define rules for determining if an individual is a grandparent.
grandparent(X, Z) :- parent(X, Y), parent(Y, Z).

% Define rules for determining if an individual is an uncle or aunt.
uncle(X, Y) :- sibling(X, Z), parent(Z, Y), male(X).
aunt(X, Y) :- sibling(X, Z), parent(Z, Y), female(X).
% This is a Prolog program that represents a knowledge base for a library system

% Define a predicate to represent the relation between books and their corresponding authors
book_author('Pride and Prejudice', 'Jane Austen').
book_author('Great Expectations', 'Charles Dickens').
book_author('The Picture of Dorian Gray', 'Oscar Wilde').
book_author('Wuthering Heights', 'Emily Bronte').
/* book_author(Title, Author) */

% Define a predicate to represent the relation between books and their corresponding genres
book_genre('Pride and Prejudice', 'Romance').
book_genre('Great Expectations', 'Classic').
book_genre('The Picture of Dorian Gray', 'Gothic Fiction').
book_genre('Wuthering Heights', 'Gothic Fiction').
/* book_genre(Title, Genre) */

% Define a predicate to represent the relation between books and their corresponding availability
book_available('Pride and Prejudice', true).
book_available('Great Expectations', false).
book_available('The Picture of Dorian Gray', true).
book_available('Wuthering Heights', true).
/* book_available(Title, IsAvailable) */

% Define a predicate to check if a book is available
% The book is available if its corresponding availability predicate is true
available_book(Title) :-
    book_available(Title, true).
/* available_book(Title) */

% Define a predicate to display all the books available in a particular genre
% This predicate first finds all the books in the given genre using book_genre predicate
% and then checks if each book is available using available_book predicate
% If yes, it displays the book title
display_available_books_in_genre(Genre) :-
    book_genre(Title, Genre),
    available_book(Title),
    write(Title), nl.
/* display_available_books_in_genre(Genre) */
% Declare a predicate named "employee" with four parameters
employee(Name, Position, Salary, Department) :-
    % Define rules for the Department "Administration"
    Department == 'Administration',
    % Assign salary based on position
    Position == 'Manager',
    Salary is 5000;
    Position == 'Supervisor',
    Salary is 4000;
    Position == 'Staff',
    Salary is 3000.

% Declare a predicate named "employee_details" with two parameters
employee_details(Name, Details) :-
    % Generate a list of employees in the "Administration" department
    findall(Name/Position/Salary, employee(Name, Position, Salary, 'Administration'), EmployeeList),
    % Loop through the list and add details for each employee
    foreach(member(Employee, EmployeeList), (
        Employee = Name/Position/Salary,
        % Create string for employee details
        string_concat('Employee: ', Name, EmployeeName),
        string_concat('Position: ', Position, EmployeePosition),
        % Convert salary to string and add currency symbol
        number_string(Salary, SalaryString),
        string_concat('Salary: $', SalaryString, EmployeeSalary),
        % Concatenate details and add to the Details list
        string_concat('[', EmployeeName, DetailsStart),
        string_concat(DetailsStart, ', ', DetailsName),
        string_concat(DetailsName, EmployeePosition, DetailsPosition),
        string_concat(DetailsPosition, ', ', DetailsPositionComma),
        string_concat(DetailsPositionComma, EmployeeSalary, DetailsPositionSalary),
        string_concat(DetailsPositionSalary, ']', DetailsEnd),
        format(atom(EmployeeDetails), DetailsEnd),
        % Convert atom to string and add to the Details list
        atom_string(EmployeeDetails, EmployeeDetailsString),
        string_concat(EmployeeDetailsString, ', ', DetailsList),
        % Update the Details list
        string_concat(Details, DetailsList, UpdatedDetails)
    )),
    % Remove last comma and extra space from the Details list
    sub_string(UpdatedDetails, _, 2, 0, Output),
    % Output the final string
    string_concat(Details, Output, FinalDetails),
    format(atom(Result), FinalDetails).
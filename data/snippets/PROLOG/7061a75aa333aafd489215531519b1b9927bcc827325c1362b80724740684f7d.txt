% This is a knowledge base that represents a family tree
% Here, facts are clauses of the form parent(X,Y), indicating that X is a parent of Y

parent(alex, bob).
parent(alex, carol).
parent(bob, david).
parent(bob, emily).
parent(carol, frank).
parent(carol, george).
parent(david, jack).
parent(emily, kate).
parent(frank, lily).
parent(george, michael).
parent(jack, nora).
parent(kate, tom).

% The following are rules that can be used to infer relationships between family members

% A person is a grandparent if they have a child who is also a parent
grandparent(X, Y) :- parent(X, Z), parent(Z, Y).

% A person is an ancestor if they are a parent or a grandparent of someone else
ancestor(X, Y) :- parent(X, Y).
ancestor(X, Y) :- grandparent(X, Y).

% A person is a sibling if they share a parent
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y.

% A person is a cousin if they share a grandparent but are not siblings
cousin(X, Y) :- grandparent(Z, X), grandparent(Z, Y), X \= Y, \+(sibling(X, Y)).

% A person is an aunt or uncle if they are a sibling of a parent
aunt_or_uncle(X, Y) :- sibling(X, Z), parent(Z, Y).

% A person is a niece or nephew if they are a child of a sibling
niece_or_nephew(X, Y) :- parent(Z, X), sibling(Z, Y).

% Example queries and their expected outcomes:

% ?- grandparent(alex, emily).
% true.
% ?- ancestor(carol, jack).
% true.
% ?- cousin(george, tom).
% false.
% ?- niece_or_nephew(michael, lily).
% true.
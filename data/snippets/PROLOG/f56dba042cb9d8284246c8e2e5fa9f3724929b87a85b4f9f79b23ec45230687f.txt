% This is a knowledge base that defines the connections between different cities
% travel/3 predicate takes in 3 arguments: starting city, end city, and the route between them

%base case - if the starting and ending cities are the same, then the route is just the starting city
travel(X, X, [X]).

%recursive case - if there is a direct connection between cities X and Y, the route is just X and Y
travel(X, Y, [X,Y]) :- connected(X, Y).

%recursive case - if there is no direct connection between X and Y, then check for other cities Z that are connected to X
%and recursively find the route from Z to Y, add X to the beginning of the route
travel(X, Y, [X | Route]) :- connected(X, Z), travel(Z, Y, Route).

% predicate that defines the connections between different cities
% cities are connected in both directions
connected(c1, c2) .
connected(c2, c1) .
connected(c2, c3) .
connected(c3, c4) .
connected(c4, c5) .
connected(c5, c6) .

% This predicate checks if city X and Y are connected by a direct route
connected(X, Y) :- direct_route(X, Y).

% This predicate checks if city X and Y are connected by a route with one or more stops
connected(X, Y) :- direct_route(X, Z), connected(Z, Y).
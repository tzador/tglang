% A multistage graph is a directed graph in which the vertices can be partitioned into k disjoint subsets, such that the edges only go from one subset to a higher one.
numStages([_], 0). % Base case: single vertex has no stages
numStages(Graph, Stages) :-
    findall(Start-End, (edge(Start, End, Graph), Start \= End), Edges), % find all non-self edges in the graph
    sort(Edges, SortedEdges), % sort edges in ascending order
    generateStages(SortedEdges, Stages). % call helper function

% Helper function to generate stages using dynamic programming
generateStages([], 0). % Base case: no more edges, no more stages
generateStages([(Start-End)|Rest], Stages) :-
    numStages([[Start, End]], SubStages), % find number of stages in subgraph of only Start and End vertices
    generateStages(Rest, RemainingStages), % recursively calculate remaining stages in rest of graph
    Stages is max(SubStages, RemainingStages) + 1. % take the maximum of the subgraph stages and remaining stages, and add 1 for the current edge

% Example query:
% ?- numStages([[a,b],[b,c],[c,d]], Stages). 
% Expected output: 
% Stages = 3.
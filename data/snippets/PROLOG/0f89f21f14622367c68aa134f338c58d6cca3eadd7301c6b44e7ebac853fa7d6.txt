% A custom sorting predicate in Prolog
% Sorts a list of numbers in ascending order
% Input should be in the format: sortList(List,Sorted)

sortList([],[]). % Base case: Empty list is already sorted

sortList([X|Rest],Sorted) :-
    sortList(Rest,RestSorted), % Recursive call to sort the rest of the list
    insert(X,RestSorted,Sorted). % Inserts the first element into the sorted list

insert(X,[],[X]). % Base case: If the list is empty, the element is inserted at the beginning

insert(X,[Y|Rest],[X,Y|Rest]) :- X =< Y. % If X is smaller or equal to Y, insert X before Y
insert(X,[Y|Rest],[Y|InsertRest]) :- X > Y, insert(X,Rest,InsertRest). % If X is larger than Y, continue recursively until the element is inserted at the correct position.

% Example query: sortList([3,1,4,2,5],Sorted). 
% Output: Sorted = [1, 2, 3, 4, 5].
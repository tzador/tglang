%% Define relationship predicates

parent(X, Y) :- 
    father(X, Y); 
    mother(X, Y).

sibling(X, Y) :- 
    parent(Z, X), 
    parent(Z, Y), 
    X \= Y.

cousin(X, Y) :- 
    parent(A, X), 
    parent(B, Y), 
    sibling(A, B).

grandparent(X, Z) :- 
    parent(X, Y),
    parent(Y, Z).

ancestor(X, Z) :- 
    parent(X, Z).

ancestor(X, Z) :-
    parent(X, Y), 
    ancestor(Y, Z).

%% Define facts

father(bob, john).
father(bob, kate).
mother(alice, john).
mother(alice, kate).
father(john, tom).
father(john, mary).
mother(kate, tom).
mother(kate, mary).

%% Query the relationships

?- parent(bob, john).
% Output: TRUE

?- cousin(tom, mary).
% Output: TRUE
/*This is a Prolog program that uses recursion to find the sum of all elements in a list*/
/*This is a helper predicate that takes in a list and a variable to store the sum*/
sum_helper([],0). /*If the list is empty, the sum is 0*/
sum_helper([Head|Tail],Sum) :- /*Takes in the head of the list and the tail of the list*/
    sum_helper(Tail,TailSum), /*Recursively calls the sum_helper predicate on the tail of the list*/
    Sum is Head + TailSum. /*Calculates the sum by adding the head to the sum of the tail*/

/*This is the main predicate that takes in a list and outputs the sum*/
sum_list(List,Sum) :-
    sum_helper(List,Sum). /*Calls the sum_helper predicate on the list to get the sum*/
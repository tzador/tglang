% Define a predicate for checking whether a number is prime or not
prime(2). % Base case: 2 is the first prime number
prime(3). % Base case: 3 is the second prime number
prime(X) :- % Recursive rule
    X > 3, % Make sure X is greater than 3
    X mod 2 =\= 0, % Make sure X is not divisible by 2
    \+ has_divisor(X, 3). % Check if X has a divisor starting from 3

% Define a helper predicate for checking if X has a divisor starting from Y
has_divisor(X, Y) :-
    X mod Y =:= 0. % X is divisible by Y, so Y is a divisor
has_divisor(X, Y) :-
    Y * Y < X, % Make sure Y is not greater than the square root of X
    Y2 is Y + 2, % Increment Y by 2 to only check odd numbers
    has_divisor(X, Y2). % Recursive call to check for the next possible divisor
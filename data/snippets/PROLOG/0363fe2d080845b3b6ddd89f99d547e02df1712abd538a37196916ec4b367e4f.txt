% This is a customizable predicate that combines two lists into one new list, with the first list as the head and the second list as the tail.
% The output list is unified with the given input list.
combine([],List,List). % Base case: When first list is empty, return the second list unchanged.
combine([X|Xs],Ys,[X|Zs]) :- combine(Xs,Ys,Zs). % Recursive case: Add the head of the first list to the output list, then recursively combine the rest of the first list with the second list.
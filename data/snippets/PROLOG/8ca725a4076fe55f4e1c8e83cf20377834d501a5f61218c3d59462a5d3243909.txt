%This code snippet demonstrates a simple predicate that checks if a list is in increasing order.

%The predicate "increasing" takes in a list as its input.
%It checks the elements of the list, comparing each element with the previous one.
%If the current element is greater than the previous one, it continues onto the next element.
%If at any point the current element is less than or equal to the previous one, it fails and returns false.

%The base case for an empty list is true, as it is already sorted.
increasing([]).

%The recursive case checks if the first element of the list is less than the second element.
%If it is, then it recursively calls the predicate on the remaining elements in the list.
%If at any point the recursive call fails, the predicate will fail and return false.
increasing([First, Second | Rest]) :-
    First < Second,
    increasing([Second | Rest]).
%% Given a list of numbers, find the sum of all the even numbers in the list.

% Base case: when the list is empty, the sum is 0.
sum_of_evens([], 0).

% Case 1: the first element in the list is even, add it to the sum of the remaining elements.
sum_of_evens([H|T], Sum) :-
    0 is H mod 2,     % Check if the first element is even.
    sum_of_evens(T, RemainingSum),     % Recursively find the sum of the remaining elements.
    Sum is H + RemainingSum.     % Add the first element to the remaining sum.

% Case 2: the first element in the list is odd, ignore it and find the sum of the remaining elements.
sum_of_evens([H|T], Sum) :-
    1 is H mod 2,     % Check if the first element is odd.
    sum_of_evens(T, Sum).     % Recursively find the sum of the remaining elements.
  
/*
Example usage:

sum_of_evens([1,2,3,4,5], Sum).
Sum = 6     % The sum of 2 and 4, which are the only even elements in the list.
*/
% Parent is a predicate that connects two people as parent and child
parent(john, amy).
parent(john, chris).
parent(john, sara).
parent(mary, amy).
parent(mary, chris).
parent(mary, sara).

% Grandparent is a predicate that connects two people as grandparent and grandchild
grandparent(X, Y) :-
    parent(X, Z),
    parent(Z, Y).

% Sibling is a predicate that connects two people as siblings
sibling(X, Y) :-
    parent(Z, X),
    parent(Z, Y),
    X \= Y.

% Ancestor is a predicate that connects two people as ancestor and descendant
ancestor(X, Y) :-
    parent(X, Y).

ancestor(X, Y) :-
    parent(X, Z),
    ancestor(Z, Y).

% Descendant is a predicate that connects two people as descendant and ancestor
descendant(X, Y) :-
    parent(Y, X).

descendant(X, Y) :-
    parent(Z, X),
    descendant(Z, Y).

% Uncle is a predicate that connects two people as uncle and niece/nephew
uncle(X, Y) :-
    parent(Z, Y),
    sibling(X, Z).

% Aunt is a predicate that connects two people as aunt and niece/nephew
aunt(X, Y) :-
    parent(Z, Y),
    sibling(X, Z).
%% Define a predicate to determine if a number is a prime
%% Number -> Boolean

is_prime(2). %% 2 is a prime number
is_prime(3). %% 3 is a prime number
is_prime(N) :- %% for any other number
   N > 3,    %% greater than 3
   integer(N), %% must be an integer
   P is integer(sqrt(N)), %% get the square root of the number
   \+ ( %% check that none of the numbers between 2 and the square root
          %% evenly divide the number
        between(2, P, X),
        0 is N mod X,
        ! %% cut to prevent backtracking
   ).

between(From, From, _). %% base case, successfully checked all numbers
between(From, To, X) :-
    From =< To,
    Between is From + 1, %% increment counter by 1
    between(Between, To, X). %% recursively check next number
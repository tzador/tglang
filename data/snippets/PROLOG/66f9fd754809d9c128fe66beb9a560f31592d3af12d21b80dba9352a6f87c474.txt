travel(fromCity, toCity) :-	% Define a predicate to check if there is a route between two cities
	route(fromCity, toCity).	% Base case, there is a direct route between the two cities

travel(fromCity, toCity) :-	% Recursive case
	route(fromCity, intermediateCity),	% Check if there is a route from the starting city to an intermediate city
	travel(intermediateCity, toCity).	% Use recursion to check if there is a route from the intermediate city to the destination city

% Define a dynamic predicate to store routes between cities
dynamic(route/2).

% Example routes that can be queried
route(london, paris).
route(paris, nice).
route(london, rome).
route(rome, athens).
route(athens, istanbul).

% Example queries
% ?- travel(london, istanbul).	% Will return true as there is a route from London to Istanbul
% ?- travel(rome, nice).	% Will return false as there is no direct route from Rome to Nice, but there is a route via Athens
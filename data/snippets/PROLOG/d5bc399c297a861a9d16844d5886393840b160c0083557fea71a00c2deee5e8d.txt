% This is a Prolog program
% It defines the relationship between an employee and their manager

% employee(name, title, department, salary)
employee(john, manager, sales, 80000).
employee(sarah, analyst, marketing, 60000).
employee(mike, coordinator, human_resources, 45000).
employee(lisa, coordinator, sales, 50000).
employee(dave, intern, marketing, 20000).

% manager(name, department, manages)
manager(john, sales, [sarah, lisa]).
manager(dave, marketing, [sarah]).

% subordinates(name, manager)
subordinates(Name, Manager) :-
    manager(Manager, _, Subordinates),
    member(Name, Subordinates).

% This rule checks if an employee is under the supervision of a given manager
% `subordinates(Name, Manager)` where `Name` is the name of the employee and `Manager` is the name of the manager.

% Output: `subordinates(sarah, john).` will evaluate to `true` as `sarah` is one of the subordinates of `john`
% Output: `subordinates(dave, john).` will evaluate to `false` as `dave` does not have `john` as their manager

% This rule calculates the total salary of an employee and their subordinates
% `total_salary(Name, Total)` where `Name` is the name of the employee and `Total` is the total salary
% example usage: `total_salary(john, Total).` will evaluate to `Total = 140000` as john's salary is 80000 and his subordinates' salaries are 60000 and 50000

total_salary(Name, Total) :-
    employee(Name, _, _, Salary),
    subordinates(Name, Manager),
    employee(Manager, _, _, ManagerSalary),
    Total is Salary + ManagerSalary.

% This rule checks if an employee is a manager. `is_manager(Name)` where `Name` is the name of the employee.

% Output: `is_manager(john).` will evaluate to `true` as `john` is a manager
% Output: `is_manager(lisa).` will evaluate to `false` as `lisa` is not a manager

is_manager(Name) :-
    manager(Name, _, _).

% This rule checks if an employee is in the same department as their manager
% `same_dept(Name)` where `Name` is the name of the employee.
% example usage: `same_dept(sarah).` will evaluate to `true` as `sarah` and `john` have the same department, `sales`

same_dept(Name) :-
    employee(Name, _, Department, _),
    manager(Manager, Department, _),
    is_manager(Manager).
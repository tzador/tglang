%%% Swish - Annotated Prolog Code %%%
:- use_module(library(lists)).
:- use_module(library(clpfd)).

%%% Data %%%
boys([mike, john, tom]).
girls([ann, lisa, sarah]).
presents([car, doll, game]).

%%% Rules %%%

% Each boy gives a present to a girl
send_present(Boy, Girl, Presents) :-
    boys(Boys), % get list of boys
    member(Boy, Boys), % Boy must be in list of boys
    girls(Girls), % get list of girls 
    member(Girl, Girls), % Girl must be in list of girls
    presents(Presents), % get list of presents
    member(Present, Presents), % Present must be in list of presents
    format('~w gives ~w to ~w.~n', [Boy, Present, Girl]).

% Each boy gives a different present to each girl
send_present_different(Boys, Girls, Presents) :-
    maplist(send_present, Boys, Girls, Presents), % use maplist to apply send_present to each element in lists
    all_distinct(Boys), % all boys must be different
    all_distinct(Girls), % all girls must be different
    all_distinct(Presents), % all presents must be different
    format('~n ~|~w ~w ~w ~w ~n ', [Boys, gives, Presents, to, Girls]). % print result

%%% Query %%%
?- send_present_different(B, G, P).
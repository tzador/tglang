% Define a predicate that checks if a number is prime

% base cases for 0 and 1
is_prime(0) :- false.
is_prime(1) :- false.

% check if number is divisible by 2 or 3
is_prime(N) :- N =\= 2, N =\= 3, 2*3 =< N, R is N mod 2, R is 0, R is N mod 3, R is 0,!, false.

% check if number is divisible by any odd number lesser than its square root
is_prime(N) :- N =\= 2, N =\= 3, N =\= 1, Floor is floor(sqrt(N)), prime_helper(3, N, Floor).

% helper predicate
prime_helper(A, N, Floor) :- A > Floor, !, true.
prime_helper(A, N, Floor) :- R is N mod A, R is 0, !, false.
prime_helper(A, N, Floor) :- A2 is A + 2, prime_helper(A2, N, Floor).

% expected output: true if prime, false if not
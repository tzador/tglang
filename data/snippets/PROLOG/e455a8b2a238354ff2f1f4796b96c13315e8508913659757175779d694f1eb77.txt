/* This is a knowledge base that represents a family tree
of a fictional family */

/*Declaration of relationships*/
male(john).
male(jake).
male(bob).
male(eric).
female(sarah).
female(jane).
female(lisa).
female(samantha).
parent(john, jake).
parent(john, sarah).
parent(jane, bob).
parent(jane, lisa).
parent(sarah, samantha).
parent(eric, samantha).
parent(jake, eric).

/*X is a sibling of Y if they have at least one parent in common*/
sibling(X, Y) :-
    parent(Z, X),
    parent(Z, Y),
    X \== Y. /* X and Y are not the same person*/

/*X is a cousin of Y if their parents are siblings*/
cousin(X, Y) :-
    parent(Z, X),
    parent(W, Y),
    sibling(Z, W).


/*X is an ancestor of Y if X is the parent of Y or if X is an ancestor of Y's parent*/
ancestor(X, Y) :-
    parent(X, Y).

ancestor(X, Y) :-
    parent(X, Z),
    ancestor(Z, Y).

/*X is a descendant of Y if Y is the ancestor of X*/
descendant(X, Y) :-
    ancestor(Y, X).

/* Y is a grandparent if there exists a child of Z who is the parent of Y*/
grandparent(Y, Z) :-
    parent(X, Y),
    parent(Z, X).

/*X is an uncle/aunt of Y if X is the sibling of Z, who is the parent of Y*/
uncle_aunt(X, Y) :-
    parent(Z, Y),
    sibling(X, Z).

/*X is a grandchild if there exists a grandparent of X who is the parent of Z*/
grandchild(X, Z):-
    parent(Y, X),
    parent(Z, Y).

/*Output:
X is a cousin if their parents are siblings*/
?- cousin(X, Y).
/*X = jake,
Y = bob ;
X = jake,
Y = lisa ;
X = bob,
Y = jake ;
X = bob,
Y = lisa ;
X = lisa,
Y = jake ;
X = lisa,
Y = bob ;
X = sarah,
Y = eric ;
X = eric,
Y = sarah ;
X = samantha,
Y = sarah ;
X = samantha,
Y = eric ;
X = sarah,
Y = samantha ;
X = eric,
Y = samantha ;
X = jane,
Y = sarah ;
X = jane,
Y = jake ;
X = bob,
Y = samantha ;
false.
*/
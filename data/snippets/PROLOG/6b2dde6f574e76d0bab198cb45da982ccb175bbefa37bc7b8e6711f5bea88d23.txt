% This is a Prolog program that implements a simple family tree

% Define parent/2, which takes in two arguments: a child and a parent
parent(john, jack).
parent(john, jennie).
parent(pat, jack).
parent(pat, jennie).
parent(jack, julia).
parent(jack, james).
parent(jennie, jules).
parent(jennie, jay).

% Define the predicate male/1
male(john).
male(jack).
male(james).
male(jules).
male(jay).

% Define the predicate female/1
female(pat).
female(jennie).
female(julia).

% Define the predicate sibling/2
sibling(X, Y) :-
    parent(X, Z),
    parent(Y, Z),
    X \= Y.

% Define the predicate father/2
father(X, Y) :-
    parent(X, Y),
    male(X).

% Define the predicate mother/2
mother(X, Y) :-
    parent(X, Y),
    female(X).

% Define the predicate grandparent/2
grandparent(X, Y) :-
    parent(X, Z),
    parent(Z, Y).

% Define the predicate uncle/2
uncle(X, Y) :-
    sibling(X, Z),
    parent(Z, Y),
    male(X).

% Define the predicate aunt/2
aunt(X, Y) :-
    sibling(X, Z),
    parent(Z, Y),
    female(X).

% Define the predicate ancestor/2
ancestor(X, Y) :-
    parent(X, Y).
ancestor(X, Y) :-
    parent(X, Z),
    ancestor(Z, Y).

% Define the predicate cousin/2
cousin(X, Y) :-
    parent(X, Z),
    parent(Y, W),
    sibling(Z, W).
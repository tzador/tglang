% This program finds the smallest element in a list

% Define predicate to find smallest element in a list
smallest([X], X).
smallest([X|Xs], X) :- smallest(Xs, Y), X =< Y.
smallest([X|Xs], Y) :- smallest(Xs, Y), X > Y.

% Define predicate to find the smallest element in a list of lists
smallest_list([X|Xs], L) :- smallest(X, L), smallest_list(Xs, L).
smallest_list([], _).

% Define list of lists
list_of_lists([[2, 5, 3], [4, 1, 2], [10, 6, 8]]).

% Call predicate to find smallest element in the list of lists and store the result in X
list_of_lists(List), smallest_list(List, X).

% Print the result
write(X).
/**
 * This is a Prolog program called "family_tree.pl" that represents a family tree.
 * The program defines facts and rules to represent relationships between family members.
 */

 /**
  * Facts for the "male" relationship
  */
male(john).
male(jim).
male(jack).

/**
 * Facts for the "female" relationship
 */
female(lisa).
female(mary).
female(kate).

/**
 * Facts for the "parent" relationship
 * parent(x, y) means that x is a parent of y
 */
parent(john, jim).
parent(john, lisa).
parent(lisa, mary).
parent(lisa, kate).

/**
 * Rules for the "father" relationship
 * father(x, y) means that x is the father of y
 * For a person to be a father, they must be male and a parent of the child
 */
father(X,Y) :- male(X), parent(X,Y).

/**
 * Rules for the "mother" relationship
 * mother(x, y) means that x is the mother of y
 * For a person to be a mother, they must be female and a parent of the child
 */
mother(X,Y) :- female(X), parent(X,Y).

/**
 * Rules for the "grandparent" relationship
 * grandparent(x, y) means that x is a grandparent of y
 * For a person to be a grandparent, they must be a parent of a parent of the child
 */
grandparent(X,Y) :- parent(X,Z), parent(Z,Y).

/**
 * Rules for the "sibling" relationship
 * sibling(x, y) means that x and y are siblings
 * For two people to be siblings, they must have the same parent
 * Note: this rule also includes half-siblings, i.e. sharing only one parent
 */
sibling(X,Y) :- parent(Z,X), parent(Z,Y), X\==Y.

/**
 * Rules for the "uncle" relationship
 * uncle(x, y) means that x is an uncle of y
 * For a person to be an uncle, they must be male and a sibling of a parent of y
 */
uncle(X,Y) :- male(X), sibling(X,Z), parent(Z,Y).

/**
 * Rules for the "aunt" relationship
 * aunt(x, y) means that x is an aunt of y
 * For a person to be an aunt, they must be female and a sibling of a parent of y
 */
aunt(X,Y) :- female(X), sibling(X,Z), parent(Z,Y).

/**
 * Example queries:
 * father(john, jim). // Output: true
 * mother(lisa, kate). // Output: true
 * grandparent(john, kate). // Output: true
 * sibling(jim, lisa). // Output: false (since Jim is male and Lisa is female)
 * uncle(john, kate). // Output: false (since John is Kate's parent) 
 */
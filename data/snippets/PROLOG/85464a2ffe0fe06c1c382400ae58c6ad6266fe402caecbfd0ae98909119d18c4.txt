% Simple PROLOG code snippet

% Define a predicate for finding the longest list from a list of lists
% Note: empty list is counted as having length 0 and will be the initial longest list

longest_list([List], List). % Base case: if only one list, it is the longest list

longest_list([], []). % If empty list, 0 is the longest length

longest_list([Head | Tail], Longest) :- % Recursive case: find longest list from list of lists
    longest_list(Tail, TempList), % Recursively find longest list
    length(Head, HeadLength), % Find length of current list
    length(TempList, TempLength), % Find length of previous longest list
    (HeadLength > TempLength -> % Compare lengths
        Longest = Head % If current list is longer, it becomes new longest list
        ;
        Longest = TempList % Otherwise, previous longest list remains longest
    ).
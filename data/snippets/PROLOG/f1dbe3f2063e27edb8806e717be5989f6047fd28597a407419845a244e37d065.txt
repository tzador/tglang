%%% This is a Prolog program that implements a simple student database %%%

%%% Define the facts %%%

% Student names and their departments
student(john, computer_science).
student(sarah, mathematics).
student(bob, economics).
student(jane, chemistry).

% Student courses and their grades
grade(john, programming, 90).
grade(john, algorithms, 85).
grade(sarah, calculus, 95).
grade(sarah, algebra, 80).
grade(bob, microeconomics, 75).
grade(bob, macroeconomics, 70).
grade(jane, organic_chemistry, 85).
grade(jane, physical_chemistry, 90).

%%% Define the rules %%%

% Rule to get the average grade of a student
average_grade(Student, AverageGrade) :-
    findall(Grade, grade(Student, _, Grade), Grades), % store all grades for the student in a list
    length(Grades, NumCourses), % get the number of courses the student took
    sum_list(Grades, TotalGrade), % sum all grades in the list
    AverageGrade is TotalGrade / NumCourses. % calculate the average grade

% Rule to print information about a student
print_student_info(Student) :-
    write('Name: '), write(Student), nl, % print student name
    student(Student, Department), % get the student's department
    write('Department: '), write(Department), nl, % print department
    findall(Course-Grade, grade(Student, Course, Grade), CourseGrades), % store all courses and grades in a list
    write('Courses and Grades:'), nl,
    print_courses(CourseGrades). % print each course and grade

% Helper rule to print courses and grades
print_courses([]). % if list is empty, end
print_courses([Course-Grade|T]) :-
    tab(4), % print 4 spaces
    write(Course), write(': '), write(Grade), nl, % print course and grade
    print_courses(T). % print remaining courses and grades

%%% Query the database %%%

% Get the average grade of John
average_grade(john, AverageGrade).
% Output: AverageGrade = 87.5

% Print information about Sarah
print_student_info(sarah).
% Output:
% Name: sarah
% Department: mathematics
% Courses and Grades:
%     calculus: 95
%     algebra: 80
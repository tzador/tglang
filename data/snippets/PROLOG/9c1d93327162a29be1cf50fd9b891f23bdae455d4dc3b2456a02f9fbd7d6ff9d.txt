/* This code snippet is an example of a simple expert system in PROLOG */

/* Define the "knowledge base" for the expert system, which consists of rules and facts */

/* Facts */
country(malaysia, southeast_asia).
country(germany, europe).
country(japan, asia).
country(brazil, south_america).
country(canada, north_america).

/* Rules */
continents(eastern, asia, southeast_asia).
continents(western, europe, north_america, south_america).

/* Define the rules for querying the knowledge base */
/* This rule is used to determine which continent a country belongs to */
continent(X, Y) :- country(X, Z), continents(Y, Z).

/* This rule is used to determine if two countries are in the same continent */
same_continent(X, Y) :- continent(X, Z), continent(Y, Z), X \= Y.

/* This rule is used to determine the countries in a specific continent */
countries_in_continent(Continent, List) :- setof(X, continent(X, Continent), List).

/* This rule is used to determine if a country is in a specific continent */
in_continent(Country, Continent) :- country(Country, X), continents(Continent, X).

/* Query the knowledge base to get the continent of a specific country */
/* For example, querying for the continent of Malaysia will return 'southeast asia' */
continent(malaysia, X).

/* Query the knowledge base to check if two countries are in the same continent */
/* For example, querying if Japan and Canada are in the same continent will return 'false' */
same_continent(japan, canada).

/* Query the knowledge base to get the list of countries in a specific continent */
/* For example, querying the countries in Asia will return [japan, malaysia] */
countries_in_continent(asia, X).

/* Query the knowledge base to check if a country is in a specific continent */
/* For example, querying if Germany is in Europe will return 'true' */
in_continent(germany, europe).
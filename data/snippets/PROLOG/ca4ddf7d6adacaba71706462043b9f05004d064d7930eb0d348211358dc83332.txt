/***************
* FACTS
****************/
likes(tom, mary).
likes(joe, sarah).
likes(john, mary).
likes(mary, jane).

/****************
* RULES
*****************/
likes_both(X, Y, Z) :- likes(X, Z), likes(Y, Z). // Predicate that checks if both X and Y like Z by checking if X and Y like Z using the likes/2 predicate.
loves(X, Y) :- likes(X, Y). // Predicate that checks if X loves Y by checking if X likes Y using the likes/2 predicate.
loves(X, Y) :- loves(Y, X). // Predicate that checks if X loves Y by checking if Y loves X using the loves/2 predicate.

/********************
* QUERIES
********************/
?- likes_both(tom, joe, sarah). // Query that asks if both tom and joe like sarah.
?- loves(mary, john). // Query that asks if mary loves john.
?- loves(X, Y). // Query that asks for all pairs of X and Y where X loves Y. This will return X = tom, Y = mary; X = joe, Y = sarah; X = john, Y = mary; Y = jane.
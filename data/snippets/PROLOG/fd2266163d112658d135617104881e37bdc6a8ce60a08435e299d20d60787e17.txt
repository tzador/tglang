% This is a complex code snippet in PROLOG that defines a family tree

% defining the parent relationships
parent(joe, bob).
parent(joe, lisa).
parent(mary, bob).
parent(mary, lisa).
parent(bob, tom).
parent(lisa, ann).
parent(lisa, ryan).
parent(ann, sarah).
parent(ryan, john).

% defining the rule for ancestor
ancestor(X, Y) :- parent(X, Y). % X is an ancestor of Y if X is a direct parent of Y
ancestor(X, Y) :-parent(X, Z), ancestor(Z, Y). % X is an ancestor of Y if X has a direct parent Z, and Z is an ancestor of Y

% defining the rule for sibling
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y. % X and Y are siblings if they have the same parent but are not the same person

% defining the rule for full sibling
full_sibling(X, Y) :- parent(Z, X), parent(Z, Y), parent(W, X), parent(W, Y), X \= Y, Z \= W. % X and Y are full siblings if they share both parents but are not the same person

% defining the rule for half sibling
half_sibling(X, Y) :- parent(Z, X), parent(Z, Y), parent(W, X), parent(V, Y), X \= Y, Z \= W, Z \= V, W \= V. % X and Y are half siblings if they share one parent but not the other

% defining the rule for cousin
cousin(X, Y) :- parent(Z, X), parent(V, Y), sibling(Z, V). % X and Y are cousins if they have parents who are siblings

% defining the rule for aunt/uncle
aunt_uncle(X, Y) :- parent(Z, Y), sibling(X, Z). % X is an aunt/uncle of Y if X is a sibling of Y's parent

% defining the rule for grandparent
grandparent(X, Y) :- parent(X, Z), parent(Z, Y). % X is a grandparent of Y if X is a parent of Z and Z is a parent of Y

% defining the rule for ancestor by marriage
ancestor_by_marriage(X, Y) :- spouse(X, Z), ancestor(Z, Y). % X is an ancestor by marriage of Y if X is the spouse of a direct ancestor of Y
ancestor_by_marriage(X, Y) :- spouse(X, Z), ancestor_by_marriage(Z, Y). % X is an ancestor by marriage of Y if X is the spouse of an ancestor of Y's ancestor

% defining the rule for in-law
in_law(X, Y) :- spouse(X, Z), sibling(Z, Y). % X is an in-law of Y if X is married to a sibling of Y
in_law(X, Y) :- parent(X, Z), in_law(Z, Y). % X is an in-law of Y if X is the parent of a spouse of Y's relative

% defining the rule for descendant
descendant(X, Y) :- parent(Y, X). % X is a descendant of Y if X is a direct child of Y
descendant(X, Y) :- parent(Y, Z), descendant(Z, X). % X is a descendant of Y if Y is a parent of some ancestor of X

% defining the rule for blood relative
blood_relative(X, Y) :- ancestor(X, Y). % X and Y are blood relatives if X is an ancestor of Y
blood_relative(X, Y) :- ancestor(Y, X). % X and Y are blood relatives if Y is an ancestor of X
blood_relative(X, Y) :- ancestor_by_marriage(X, Y). % X and Y are blood relatives if X is an ancestor by marriage of Y
blood_relative(X, Y) :- ancestor_by_marriage(Y, X). % X and Y are blood relatives if Y is an ancestor by marriage of X
blood_relative(X, Y) :- sibling(X, Z), blood_relative(Z, Y). % X and Y are blood relatives if X is a sibling of an ancestor of Y
blood_relative(X, Y) :- sibling(Z, X), blood_relative(Z, Y). % X and Y are blood relatives if Y is a sibling of an ancestor of X
blood_relative(X, Y) :- half_sibling(X, Z), blood_relative(Z, Y). % X and Y are blood relatives if X is a half sibling of an ancestor of Y
blood_relative(X, Y) :- half_sibling(Z, X), blood_relative(Z, Y). % X and Y are blood relatives if Y is a half sibling of an ancestor of X
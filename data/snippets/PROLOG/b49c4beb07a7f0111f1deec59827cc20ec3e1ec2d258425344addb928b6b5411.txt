/* This is a Prolog program that uses recursion to find the greatest common divisor (GCD) of two numbers. */

/* Base case: If both numbers are equal, then the GCD is that number. */
gcd(X,X,X).

/* Recursive case: If X is larger than Y, then the GCD is the GCD of Y and the remainder of X divided by Y.*/
gcd(X,Y,GCD) :-
    X > Y,
    Z is X mod Y,
    gcd(Y,Z,GCD).

/* Recursive case: If Y is larger than X, then the GCD is the GCD of X and the remainder of Y divided by X.*/
gcd(X,Y,GCD) :-
    Y > X,
    Z is Y mod X,
    gcd(X,Z,GCD).

/* Now, let's test the program with some example inputs. */
gcd(30,12,GCD). % Output: GCD = 6
gcd(17,5,GCD). % Output: GCD = 1
gcd(105,140,GCD). % Output: GCD = 35
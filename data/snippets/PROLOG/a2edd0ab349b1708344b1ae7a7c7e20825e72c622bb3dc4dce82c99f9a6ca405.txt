% This is a knowledge base about students and their courses
% Every student takes a certain number of courses
 
student(tom).
student(john).
student(emma).
 
course(math).
course(science).
course(history).
course(english).
 
takes_course(tom, math).
takes_course(tom, science).
takes_course(tom, english).
takes_course(john, science).
takes_course(john, history).
takes_course(john, english).
takes_course(emma, math).
takes_course(emma, history).
 
% Function to determine if a student is enrolled in a particular course
enrolled(Student, Course) :- takes_course(Student, Course).
 
% Function to retrieve all courses a student is enrolled in
enrolled_courses(Student, Courses) :-
    setof(Course, enrolled(Student, Course), Courses).

% Function to retrieve all students enrolled in a particular course
enrolled_students(Course, Students) :-
    setof(Student, enrolled(Student, Course), Students).
 
% Function to check if a student is taking a course
taking_course(Student, Course) :-
    enrolled(Student, courses) \+ enrolled(Student, Course).
 
% Function to retrieve all students taking a course
taking_students(Course, Students) :-
    setof(Student, taking_course(Student, Course), Students).
 
% Function to check if two students are taking the same course
same_course(Student1, Student2) :-
    enrolled(Student1, Course),
    enrolled(Student2, Course).
 
% Function to check if a student is taking a course they are not enrolled in
not_enrolled(Student, Course) :-
    takes_course(Student, Course) \+ enrolled(Student, Course).
 
% Function to retrieve all students taking courses they are not enrolled in
not_enrolled_students(Courses) :-
    setof(Student, not_enrolled(Student, _), Students),
    enrolled_courses(Courses).
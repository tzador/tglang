%This is a program that generates all possible combinations of three different numbers, with numbers ranging from 1 to 5

%Define the range of numbers from 1 to 5
num_range(1).
num_range(2).
num_range(3).
num_range(4).
num_range(5).

%Define the predicate that generates all possible combinations
combination(X, Y, Z) :- num_range(X), num_range(Y), num_range(Z).

%Define the predicate to check if all numbers in the combination are different
different(X, Y, Z) :- X \= Y, X \= Z, Y \= Z.

/*
Generate a list of all possible combinations using the findall/3 predicate,
which finds all solutions that satisfy a given goal and puts them into a list.
This list will be stored in the variable CombList
*/
findall((X,Y,Z), (combination(X,Y,Z), different(X,Y,Z)), CombList).

/*
Print out all the possible combinations in the format A-B-C.
The write/1 predicate outputs a term to the standard output stream.
*/
print_combinations :-
    print_comb(CombList).

%Define recursive predicate to print the combinations in the list
print_comb([(A,B,C)|Rest]) :-
    write(A), write('-'), write(B), write('-'), write(C), nl, %Formatting with new line
    print_comb(Rest).

/*
Example output:
1-2-3
1-2-4
1-2-5
...
5-4-2
5-4-3
*/

%To run the program, simply call the predicate print_combinations.
% This is a comment line in Prolog, denoted by a percentage symbol.

% Here we define a predicate called "parent" with two arguments.
parent(X, Y) :-
    % We use the "member" predicate to check if X is a member of the list.
    member(X, [mum, dad, stepmum, stepdad, fosterparent]),
    % We use the "member" predicate again to check if Y is a member of the list.
    member(Y, [son, daughter, stepson, stepdaughter, fosterchild]).

% Here we define a predicate called "grandparent" with two arguments.
grandparent(X, Y) :-
    % We use the "parent" predicate to check if X is the parent of Z.
    parent(X, Z),
    % We use the "parent" predicate again to check if Z is the parent of Y.
    parent(Z, Y).

% Here we define a predicate called "ancestor" with two arguments.
ancestor(X, Y) :-
    % We use the "parent" predicate to check if X is the parent of Y.
    parent(X, Y).
    % We then use recursion to check if X is also the ancestor of Y's parent.
    ancestor(X, Z),
    % We use the "parent" predicate again to check if Z is the parent of Y.
    parent(Z, Y).

% Here we define a predicate called "sibling" with two arguments.
sibling(X, Y) :-
    % We use the "parent" predicate to check if X and Y share the same parent.
    parent(Z, X),
    parent(Z, Y),
    % We also make sure that X and Y are not the same person.
    X \= Y.

% Here we define a predicate called "cousin" with two arguments.
cousin(X, Y) :-
    % We use the "grandparent" predicate to check if X and Y have the same grandparent.
    grandparent(Z, X),
    grandparent(Z, Y),
    % We also make sure that X and Y are not siblings.
    \+ sibling(X, Y).

% Here we define a predicate called "related" with two arguments.
related(X, Y) :-
    % We use the "ancestor" predicate to check if X is an ancestor of Y.
    ancestor(X, Y).
    % We use the "ancestor" predicate again to check if Y is an ancestor of X.
    ancestor(Y, X).
    % We use the "cousin" predicate to check if X and Y are cousins.
    cousin(X, Y).
    % We use the "parent" predicate to check if X is the parent of Z.
    parent(X, Z),
    % We use the "parent" predicate again to check if Y is the parent of Z.
    parent(Y, Z).
% Define the "father" predicate with two arguments
father(A, B) :-
    % Check if person A is male
    male(A),
    % Check if person B is a child of person A
    parent(A, B).
    
% Define the "mother" predicate with two arguments
mother(A, B) :-
    % Check if person A is female
    female(A),
    % Check if person B is a child of person A
    parent(A, B).
    
% Define the "grandparent" predicate with two arguments
grandparent(A, B) :-
    % Check if person A is a grandparent of person B
    parent(A, X),
    % Check if X (parent of person B) is a parent of person A
    parent(X, B).

% Define the "sibling" predicate with two arguments
sibling(A, B) :-
    % Check if person A and person B have the same parent
    parent(X, A),
    parent(X, B),
    % Make sure A and B are not the same person
    A \= B.

% Define the "uncle" predicate with two arguments
uncle(A, B) :-
    % Check if person A is male
    male(A),
    % Check if person A is a sibling of person X (parent of person B)
    sibling(A, X),
    % Check if person X is a parent of person B
    parent(X, B).

% Define the "aunt" predicate with two arguments
aunt(A, B) :-
    % Check if person A is female
    female(A),
    % Check if person A is a sibling of person X (parent of person B)
    sibling(A, X),
    % Check if person X is a parent of person B
    parent(X, B).

% Define the "ancestor" predicate with two arguments
ancestor(A, B) :-
    % Check if person A is a parent of person B
    parent(A, B).
    
% Define the "ancestor" predicate with two arguments
ancestor(A, B) :-
    % Recursively check if person A is a ancestor of person B's parent
    parent(A, X),
    ancestor(X, B).
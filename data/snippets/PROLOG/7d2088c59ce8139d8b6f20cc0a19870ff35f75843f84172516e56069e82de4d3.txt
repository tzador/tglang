/* This is a Prolog program that defines a predicate for finding the maximum of a list of numbers.
The maximum predicate takes in two parameters - a list of numbers and a variable for the output. */

maximum([], Max). /* If the list is empty, the maximum is unknown and the predicate fails. */

maximum([X], X). /* Can't have a maximum of a single element. */

maximum([X, Y | Rest], Max) :- /* Rules for finding the maximum */
	X >= Y, /* If the first number is larger than or equal to the second number */
	maximum([X | Rest], Max). /* Call maximum with the rest of the list and the same maximum */
maximum([X, Y | Rest], Max) :-
	X < Y, /* If the first number is smaller than the second number */
	maximum([Y | Rest], Max). /* Call maximum with the rest of the list and the second number as the new maximum */

/* Example queries and outputs:
?- maximum([1,2,3], Max).
Max = 3.

?- maximum([7,4,9,2], Max).
Max = 9.

?- maximum([], Max).
false. */
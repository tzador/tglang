% Declare a predicate named `parent` with 2 arguments
parent(X, Y) :- 
    % Check if X is the parent of Y
    offspring(Y, X).
% Declare a predicate named `spouse` with 2 arguments
spouse(X, Y) :- 
    % Check if X is married to Y
    married(X, Y).
% Declare a predicate named `sibling` with 2 arguments
sibling(X, Y) :- 
    % Check if X and Y have the same parent
    parent(Z, X), 
    parent(Z, Y), 
    % Check if X and Y are not the same person
    X \= Y.
% Declare a predicate named `grandparent` with 2 arguments
grandparent(X, Z) :- 
    % Check if X is the parent of Y
    parent(X, Y), 
    % Check if Y is the parent of Z
    parent(Y, Z).
% Declare a predicate named `ancestor` with 2 arguments
ancestor(X, Z) :- 
    % Check if X is the parent of Z
    parent(X, Z).
% Use recursion to check for ancestors
ancestor(X, Z) :- 
    % Check if X is the parent of Y
    parent(X, Y), 
    % Check if Y is an ancestor of Z
    ancestor(Y, Z).
% Declare a predicate named `descendant` with 2 arguments
descendant(X, Z) :- 
    % Check if X is the parent of Z
    parent(Z, X).
% Use recursion to check for descendants
descendant(X, Z) :- 
    % Check if X is the parent of Y
    parent(Y, X), 
    % Check if Z is a descendant of Y
    descendant(Y, Z).
% Declare a predicate named `male` with 1 argument
male(X) :- 
    % Check if X is a male
    gender(X, male).
% Declare a predicate named `female` with 1 argument
male(X) :- 
    % Check if X is a female
    gender(X, female).
% Declare a predicate named `siblings_in_law` with 2 arguments
siblings_in_law(X, Y) :- 
    % Check if X is the spouse of Y's sibling
    spouse(X, Z), 
    sibling(Z, Y).
% Declare a predicate named `adjacent` with 2 arguments
adjacent(X, Y) :- 
    % Check if X and Y are adjacent numbers
    abs(X - Y) =:= 1.
% Use recursion to check for adjacent numbers
adjacent(X, Y) :- 
    % Increment X by 1 and check if it is adjacent to Y
    X1 is X + 1, 
    adjacent(X1, Y).
% Use recursion to check for adjacent numbers
adjacent(X, Y) :- 
    % Decrement X by 1 and check if it is adjacent to Y
    X1 is X - 1, 
    adjacent(X1, Y).
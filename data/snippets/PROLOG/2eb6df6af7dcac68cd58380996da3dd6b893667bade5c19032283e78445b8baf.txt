% This is a Prolog program that implements the append function

% Defining the base case for appending two lists
append([], List, List).

% Defining the recursive rule for appending two lists
append([Head|Tail], List, [Head|Result]):-
    append(Tail, List, Result).

/*
Explanation:
The append function takes three arguments - two lists, and the result of appending the two lists.
The base case states that if the first list is empty, then the result will be the second list.
The recursive rule states that if the first list is not empty, we take the Head of the first list and append it to the result of appending the Tail of the first list with the second list.
This process continues until the first list becomes empty and the result is the second list.
*/
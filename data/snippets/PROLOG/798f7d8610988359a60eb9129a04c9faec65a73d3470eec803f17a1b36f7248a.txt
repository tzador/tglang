/* This is a program that takes in a list of numbers and checks if there is a triplet that sums to a given target number */
/* First, we define a predicate that checks if our list is empty */
is_empty(List) :-
    length(List, Length), /* Get the length of the list */
    Length =:= 0. /* Check if the length is equal to 0, indicating an empty list */
    
/* Next, we define another predicate that checks if there are exactly 3 elements in our list */
has_three_elements(List) :-
    length(List, Length), /* Get the length of the list */
    Length =:= 3. /* Check if the length is equal to 3, indicating there are exactly 3 elements in the list */
    
/* Now, we define a predicate that checks if a given element is a member of a list */
is_member(Element, List) :-
    member(Element, List). /* Use the built-in member predicate in PROLOG to check if the given element is a member of the list */
    
/* Next, we define a predicate that checks if there exists a triplet in our list that sums to our target number */
find_triplet(Total, List) :-
    has_three_elements(List), /* Check if the list has exactly 3 elements */
    sum_list(List, Sum), /* Use the built-in sum_list predicate in PROLOG to get the sum of all elements in the list */
    Total =:= Sum. /* Check if the sum is equal to our target number */
    
/* Finally, we define a predicate that checks if there is a triplet in our list that sums to our target number */
check_triplet(Total, List) :-
    \+ is_empty(List), /* Check if the list is not empty */
    is_member(First, List), /* Get the first element of the list */
    select(First, List, Rest), /* Use the built-in select predicate in PROLOG to remove the first element from the list and store the remaining elements in Rest */
    is_member(Second, Rest), /* Get the second element of the modified list */
    select(Second, Rest, Rest2), /* Use select again to remove the second element from the modified list and store the remaining elements in Rest2 */
    is_member(Third, Rest2), /* Get the third element of the modified list */
    select(Third, Rest2, Rest3), /* Use select again to remove the third element from the modified list and store the remaining elements in Rest3 */
    find_triplet(Total, [First, Second, Third]). /* Check if there exists a triplet in our modified list that sums to our target number */

/* Example usage:
    ?- check_triplet(10, [1, 2, 3, 4, 5]).
    true.
    
    ?- check_triplet(10, [1, 2, 3, 4, 6]).
    false.
*/
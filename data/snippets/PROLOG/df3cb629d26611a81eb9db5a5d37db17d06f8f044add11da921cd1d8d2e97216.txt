% This code snippet creates a knowledge base for a hotel booking system.

% Defining available room types and their corresponding prices
room(twin_bed, 200).
room(queen_bed, 250).
room(king_bed, 300).

% Defining available amenities and their corresponding fees
amenity(pool, 50).
amenity(gym, 25).
amenity(spa, 100).

% Defining a predicate for checking room availability
is_available(Room, StartDate, EndDate) :- 
    % Checking if room type and dates overlap with existing bookings
    booking(Room, BookedStart, BookedEnd), 
    (StartDate >= BookedEnd ; EndDate =< BookedStart).

% Defining a predicate for calculating total cost of a booking
calculate_cost(Room, StartDate, EndDate, Amenities, TotalCost) :- 
    % Calculating total cost of room based on number of days booked
    room(Room, RoomPrice),
    DaysBooked is EndDate - StartDate + 1,
    RoomCost is RoomPrice * DaysBooked,
    
    % Calculating additional cost for selected amenities
    amenity(Amenity, AmenityFee),
    member(Amenity, Amenities),
    AmenitiesCost is AmenityFee * DaysBooked,
    
    % Adding room and amenity costs to get total cost
    TotalCost is RoomCost + AmenitiesCost.

% Defining a predicate for making a booking
book(Room, StartDate, EndDate, Amenities) :- 
    % Checking if room is available
    is_available(Room, StartDate, EndDate),
    
    % Calculating total cost
    calculate_cost(Room, StartDate, EndDate, Amenities, TotalCost),
    
    % Saving booking details to knowledge base
    assert(booking(Room, StartDate, EndDate)),
    
    % Printing confirmation message to user
    format('Congratulations, you have booked a ~w from ~w to ~w with the following amenities: ~w.\nTotal cost: $~w', [Room, StartDate, EndDate, Amenities, TotalCost]).
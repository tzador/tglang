% This is a Prolog program that defines the relationship between a parent and child.
% The rules state that a parent's child is either their immediate child or their grandchild.
% This program demonstrates the use of complex logical operators and recursion.

% Define the relationship between a parent and child
parent(tom, bob).
parent(bob, ann).
parent(ann, joe).

% Define the recursive rule for checking if someone is a grandchild
grandchild(X, Y) :- parent(X, Z), parent(Z, Y).

% Define the rule for checking if someone is an immediate child
child(X, Y) :- parent(X, Y).

% Define the complex rule for checking if someone is a descendant
descendant(X, Y) :- parent(X, Y).
descendant(X, Y) :- parent(X, Z), descendant(Z, Y).

% Test cases
% To check if Bob is a grandchild of Tom
?- grandchild(bob, tom). % Output: true.

% To check if Joe is a grandchild of Tom
?- grandchild(joe, tom). % Output: true.

% To check if Ann is a child of Tom
?- child(ann, tom). % Output: false.

% To check if Joe is a descendant of Tom
?- descendant(joe, tom). % Output: true.
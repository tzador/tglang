%Predicates for finding a common ancestor in a binary tree
binary_tree(Tree) :- Tree = t(_, _, _).
binary_tree(Tree) :- Tree = nil.

ancestor(Tree, Node, Ancestor) :-
    binary_tree(Tree),
    binary_tree(Ancestor),
    search(Tree, Node),
    search(Tree, Ancestor),
    ancestor_helper(Tree, Node, Ancestor),
    Ancestor \= Node.

ancestor_helper(Tree, Node, Ancestor) :-
    descendant(Tree, Node, Ancestor).

ancestor_helper(Tree, Node, Ancestor) :-
    descendant(Tree, Ancestor, Node).

descendant(Tree, Descendant, Node) :-
    binary_tree(Tree),
    binary_tree(Descendant),
    search(Tree, Node),
    descendant_helper(Tree, Descendant, Node).

descendant_helper(Tree, Descendant, Node) :-
    Tree = t(Descendant, _, _),
    Descendant \= Node.

descendant_helper(Tree, Descendant, Node) :-
    Tree = t(_, LeftChild, _),
    descendant_helper(LeftChild, Descendant, Node).

descendant_helper(Tree, Descendant, Node) :-
    Tree = t(_, _, RightChild),
    descendant_helper(RightChild, Descendant, Node).

search(Tree, Node) :-
    binary_tree(Tree),
    binary_tree(Node),
    (Tree = t(Node, _, _); Tree = t(_, LeftChild, _), search(LeftChild, Node); Tree = t(_, _, RightChild), search(RightChild, Node)).
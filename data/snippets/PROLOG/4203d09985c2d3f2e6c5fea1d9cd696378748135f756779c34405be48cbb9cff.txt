% This is a prolog program that checks if a given list is a palindrome or not

% Defining a predicate that checks if a list is a palindrome
palindrome([]). % an empty list is a palindrome
palindrome([_]). % a list with a single element is a palindrome

% Defining a helper predicate that reverses a list
reverse_list([], Reversed, Reversed).
reverse_list([Head|Tail], Reversed, Acc) :- 
    reverse_list(Tail, Reversed, [Head|Acc]). 

% Defining a predicate that checks if two lists are equal
equal_lists(List1, List2) :- 
    List1 = List2, !.
equal_lists([], []).
equal_lists([Head1|Tail1], [Head2|Tail2]) :- 
    Head1 = Head2, 
    equal_lists(Tail1, Tail2).

% Defining a predicate that checks if a list is a palindrome
% using the helper predicates defined above 
palindrome(List) :- 
    reverse_list(List, Reversed, []), 
    equal_lists(List, Reversed).
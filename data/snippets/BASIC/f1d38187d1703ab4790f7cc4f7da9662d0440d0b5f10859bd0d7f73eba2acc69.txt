'This program searches for the nth prime number
'Input: n (number of prime number to find)
'Output: nth prime number

DEF FN PRIME (N)
DIM PRIME(10^5)
PRIME(1)=2
M=2
NUM=3
WHILE M<N
    IS_PRIME=1
    FOR I=1 TO M
        IF NUM%PRIME(I)=0 THEN
            IS_PRIME=0
            EXIT FOR
        END IF
    NEXT I
    IF IS_PRIME THEN
        M=M+1
        PRIME(M)=NUM
    END IF
    NUM=NUM+2
WEND
PRINT "Nth PRIME NUMBER IS "; PRIME(N)
END

'Example: FINDING 10TH PRIME NUMBER
'Input:
10
'Output:
Nth PRIME NUMBER IS 29
'Explanation:
'In line 1, the DEF FN statement is used to define a user-defined function named PRIME which takes in one parameter N.
'In line 2, the PRIME array is initialized to hold the first 100,000 prime numbers (arbitrary, can be changed based on the needs of the program).
'In line 3, the first value in the PRIME array is set to 2, as it is the first prime number.
'In line 4, the variable M is set to 2, as this will keep track of the number of prime numbers found.
'In line 5, the variable NUM is set to 3, as 3 is the next number to be checked for primality.
'In line 6, a WHILE loop is used to continue the process of finding prime numbers until M reaches N.
'In line 7, the variable IS_PRIME is set to 1, as this will be used to determine if NUM is a prime number.
'In line 8, a FOR loop is used to check if NUM is divisible by any of the prime numbers found so far. If it is, IS_PRIME is set to 0 and the loop is exited.
'In line 11, if IS_PRIME is still 1, then NUM is a prime number and the counter M is increased by 1.
'In line 12, the next element in the PRIME array is set to NUM.
'In line 14, after the loop is exited, NUM is increased by 2 to check the next odd number for primality.
'In line 15, the loop continues until M is equal to N.
'In line 16, the Nth prime number is printed using the parameter N to access the corresponding element in the PRIME array.
'In line 17, END is used to terminate the program.
PRINT "Welcome to the Code Generator!"

FOR gene = 1 TO 10 REM loop to generate 10 code snippets
  LET num = INT(RND * 10) + 1 REM generate a random number between 1 and 10
  
  REM check the number to determine which code snippet to generate
  IF num = 1 THEN
    REM code snippet for generating a Fibonacci sequence
    PRINT "Generating code snippet for Fibonacci sequence:"
    
    LET prev = 0 REM initialize previous number in sequence
    LET curr = 1 REM initialize current number in sequence
    
    REM loop to print the first 10 numbers in the sequence
    FOR i = 1 TO 10
      PRINT prev
      
      LET next = prev + curr REM calculate the next number in sequence
      LET prev = curr REM assign current number to previous number
      LET curr = next REM assign next number to current number
    NEXT i
    
  ELSE IF num = 2 THEN
    REM code snippet for finding the median of a list of numbers
    PRINT "Generating code snippet for finding the median of a list of numbers:"
    
    LET listSize = 10 REM size of the list of numbers
    DIM list(listSize) REM declare an array to store the numbers
    
    REM loop to fill the array with random numbers
    FOR i = 1 TO listSize
      LET list(i) = INT(RND * 100) + 1 REM generate a random number between 1 and 100
    NEXT i
    
    REM sort the array in ascending order
    FOR i = 1 TO listSize - 1
      FOR j = 1 TO listSize - i
        REM compare adjacent numbers and swap if necessary
        IF list(j) > list(j+1) THEN
          LET temp = list(j)
          LET list(j) = list(j+1)
          LET list(j+1) = temp
        END IF
      NEXT j
    NEXT i
    
    REM check if list size is even or odd
    IF listSize MOD 2 = 0 THEN
      REM if even, calculate median by averaging middle two numbers
      LET median = (list(listSize/2) + list(listSize/2 + 1) / 2)
    ELSE
      REM if odd, median is the middle number
      LET median = list((listSize + 1) / 2)
    END IF
    
    PRINT "The median is: ", median
    
  ELSE IF num = 3 THEN
    REM code snippet for checking if a string is a palindrome
    PRINT "Generating code snippet for checking if a string is a palindrome:"
    
    INPUT "Enter a string: ", str$ REM get user input
    
    REM remove white spaces and convert all characters to lowercase
    str$ = LTRIM$(RTRIM$(str$))
    str$ = LCASE$(str$)
    
    LET reverse$ = "" REM reverse the string variable
    
    REM loop to reverse the string
    FOR i = LEN(str$) TO 1 STEP -1
      LET reverse$ = reverse$ + MID$(str$, i, 1) REM append one character at a time
    NEXT i
    
    REM compare the original string and the reversed string
    IF str$ = reverse$ THEN
      PRINT "The string is a palindrome."
    ELSE
      PRINT "The string is not a palindrome."
    END IF
    
  ELSE IF num = 4 THEN
    REM code snippet for finding the maximum number in a list
    PRINT "Generating code snippet for finding the maximum number in a list:"
    
    LET listSize = 10 REM size of the list of numbers
    DIM list(listSize) REM declare an array to store the numbers
    
    REM loop to fill the array with random numbers
    FOR i = 1 TO listSize
      LET list(i) = INT(RND * 100) + 1 REM generate a random number between 1 and 100
    NEXT i
    
    LET max = list(1) REM assume first number is the maximum
    
    REM loop to compare each number with the maximum
    FOR i = 2 TO listSize
      IF list(i) > max THEN
        LET max = list(i) REM if number is greater, assign as new maximum
      END IF
    NEXT i
    
    PRINT "The maximum number is: ", max
    
  ELSE
    REM code snippet for calculating the area of a circle
    PRINT "Generating code snippet for calculating the area of a circle:"
    
    INPUT "Enter the radius of the circle: ", radius REM get user input
    
    LET area = 3.14159 * radius^2 REM calculate area using formula
    
    PRINT "The area of the circle is: ", area
  END IF
NEXT gene
'Initialize two variables
x = 5
y = 10

'Calculate the sum of x and y
sum = x + y

'Print the result
PRINT "The sum of " + x + " and " + y + " is " + sum

'Initialize a loop to print numbers from 1 to 10
FOR i = 1 TO 10
    PRINT i
NEXT i

'Calculate factorial of a given number
INPUT "Enter a number: ", num
fact = 1

'Loop to calculate factorial
FOR i = 1 TO num
    fact = fact * i
NEXT i

'Print the factorial
PRINT "Factorial of " + num + " is " + fact

'Initialize a list of numbers
num_list = [2, 5, 7, 10, 12]

'Loop to check if a number is even or odd
FOR i = 1 TO len(num_list)
    IF num_list[i] % 2 = 0 THEN
        PRINT num_list[i] + " is even"
    ELSE
        PRINT num_list[i] + " is odd"
    END IF
NEXT i

'Initialize a dictionary
fruit_dict = {"apple" => 5, "banana" => 3, "orange" => 7}

'Loop to print the key-value pairs in the dictionary
FOR EACH fruit IN fruit_dict
    PRINT "There are " + fruit_dict[fruit] + " " + fruit + "s"
NEXT fruit

'Initialize a function to calculate area of a circle
DEF FNarea(radius)
    area = 3.14 * radius^2
    RETURN area

'Call the function and print the result
radius = 5
PRINT "The area of a circle with radius " + radius + " is " + FNarea(radius)

'Initialize a subroutine to print a pattern
SUB print_pattern(rows)
    'Loop for rows
    FOR i = 1 TO rows
        'Loop for columns
        FOR j = 1 TO i
            PRINT "*"
        NEXT j
        PRINT
    NEXT i
END SUB

'Call the subroutine
print_pattern(5)

'Initialize an array
animals = ["dog", "cat", "rabbit", "bird"]

'Loop to check if an animal is present in the array
animal = "lion"
FOR EACH a IN animals
    IF a = animal THEN
        PRINT animal + " is present in the array"
        EXIT FOR
    END IF
NEXT a

'Initialize a class for a person
CLASS person
    'Properties
    DIM name$
    DIM age%

    'Constructor
    DEF CONSTRUCTOR(name, age)
        this.name$ = name
        this.age% = age
    END DEF

    'Method to print info
    DEF print_info()
        PRINT "Name: " + this.name$
        PRINT "Age: " + this.age%
    END DEF
END CLASS

'Create an instance and print info
p = person("John", 25)
p.print_info()
REM This is a comment in BASIC that is preceded by the REM keyword. It will not be executed by the program.

' This is also a comment in BASIC that is preceded by the single quote ' and will also not be executed by the program.

DIM num AS INTEGER ' This line declares a variable 'num' as an integer data type.

INPUT "Enter a number: ", num ' This line prompts the user to enter a number and assigns the input to the variable 'num'.
PRINT "The entered number is: "; num ' This line prints out the entered number with a label.

IF num < 0 THEN ' This line starts the if statement and checks if the value of 'num' is less than 0.
    PRINT "The entered number is negative." ' This line will be executed if the condition is met.
ELSE IF num = 0 THEN ' This line starts the else if statement and checks if the value of 'num' is equal to 0.
    PRINT "The entered number is zero." ' This line will be executed if the condition is met.
ELSE ' This line starts the else statement and will be executed if none of the previous conditions are met.
    PRINT "The entered number is positive." ' This line will be executed if the condition is met.
END IF ' This line marks the end of the if statement.

FOR i = 1 TO 10 STEP 2 ' This line starts a for loop from 1 to 10 with a step of 2.
    PRINT i ' This line will print out the current value of 'i' in each iteration.
NEXT ' This line marks the end of the for loop.

GOSUB compute_area ' This line calls a subroutine named 'compute_area'.

compute_area: ' This line marks the beginning of the subroutine.
    INPUT "Enter length: ", length ' This line prompts the user to enter a length and assigns the input to the variable 'length'.
    INPUT "Enter width: ", width ' This line prompts the user to enter a width and assigns the input to the variable 'width'.
    area = length * width ' This line calculates the area and assigns it to the variable 'area'.
    RETURN ' This line marks the end of the subroutine and returns to the line after the 'GOSUB' statement.

REPEAT ' This line starts a repeat-until loop.
    INPUT "Enter a number between 1 and 10: ", num ' This line prompts the user to enter a number and assigns the input to the variable 'num'.
UNTIL num >= 1 AND num <= 10 ' This line checks if the value of 'num' is between 1 and 10, and if not, repeats the loop.

CLOSE #1 ' This line closes a file with the ID 1.

END ' This line marks the end of the program.
'Program to calculate the inverse of a matrix using the Gauss-Jordan elimination method
'Input the dimensions of the matrix
INPUT "Enter the number of rows: "; n
INPUT "Enter the number of columns: "; m

'Define the matrix as a two-dimensional array
DIM mat(n, m)

'Input the matrix elements
FOR i = 1 TO n
    FOR j = 1 TO m
        PRINT "Enter element ["; i; ","; j; "]: ";
        INPUT mat(i, j)
    NEXT j
NEXT i

'Output the original matrix
PRINT "Original matrix:"
FOR i = 1 TO n
    FOR j = 1 TO m
        PRINT mat(i, j);
    NEXT j
    PRINT
NEXT i

'Create an identity matrix of the same dimensions as the original matrix
DIM id(n, m)
FOR i = 1 TO n
    FOR j = 1 TO m
        IF i = j THEN
            id(i, j) = 1
        ELSE
            id(i, j) = 0
        END IF
    NEXT j
NEXT i

'Perform Gauss-Jordan elimination to get the inverse
FOR k = 1 TO n
    'Divide the pivot row by its element
    pivot = mat(k, k)
    FOR j = 1 TO m
        mat(k, j) = mat(k, j) / pivot
        id(k, j) = id(k, j) / pivot
    NEXT j

    'Subtract multiples of the pivot row to create zeros in the columns below the pivot
    FOR i = 1 TO n
        IF i <> k THEN
            factor = mat(i, k)
            FOR j = 1 TO m
                mat(i, j) = mat(i, j) - factor * mat(k, j)
                id(i, j) = id(i, j) - factor * id(k, j)
            NEXT j
        END IF
    NEXT i
NEXT k

'Output the inverse matrix
PRINT "Inverse matrix:"
FOR i = 1 TO n
    FOR j = 1 TO m
        PRINT id(i, j);
    NEXT j
    PRINT
NEXT i
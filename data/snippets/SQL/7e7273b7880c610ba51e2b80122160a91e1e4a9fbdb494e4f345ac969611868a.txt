-- Create table that contains customer information
CREATE TABLE customers(
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_number VARCHAR(12)
);

-- Create table that contains order information
CREATE TABLE orders(
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date DATE NOT NULL,
    total_cost DEC(10,2) NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Create table that contains product information
CREATE TABLE products(
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    price DEC(8,2) NOT NULL,
    description VARCHAR(500),
    quantity_in_stock INT NOT NULL
);

-- Create junction table that connects orders and products
CREATE TABLE order_products(
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity_ordered INT NOT NULL,
    PRIMARY KEY (order_id, product_id),
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Insert customer data into customers table
INSERT INTO customers(first_name, last_name, email, phone_number)
VALUES ('John', 'Smith', 'johnsmith@example.com', '555-123-4567'),
    ('Samantha', 'Johnson', 'samanthajohnson@example.com', '555-987-6543'),
    ('Robert', 'Davis', 'robertdavis@example.com', '555-234-5678');

-- Insert order data into orders table
INSERT INTO orders(customer_id, order_date, total_cost)
VALUES (1, '2020-12-03', 50.00),
    (1, '2020-12-05', 75.00),
    (2, '2020-12-06', 100.00);

-- Insert product data into products table
INSERT INTO products(product_name, price, description, quantity_in_stock)
VALUES ('Shoes', 50.00, 'Comfortable running shoes', 20),
    ('T-shirt', 25.00, 'Soft cotton t-shirt', 30),
    ('Jeans', 75.00, 'Dark wash denim jeans', 10);

-- Insert order and product relationship data into order_products table
INSERT INTO order_products(order_id, product_id, quantity_ordered)
VALUES (1, 1, 2),
    (2, 2, 1),
    (3, 3, 1);
/**
 * This table stores information about employees in a company.
 * Each employee has a unique ID, a first name, last name, and salary.
 */
CREATE TABLE employees (
    employee_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    salary DECIMAL(10,2) NOT NULL
);

/**
 * This table stores information about projects in a company.
 * Each project has a unique ID, a name, a start date, an end date, and a budget.
 */
CREATE TABLE projects (
    project_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    budget DECIMAL(10,2) NOT NULL
);

/**
 * This table maps employees to projects they are assigned to.
 * Each assignment has a unique ID, an employee ID, and a project ID.
 */
CREATE TABLE employee_projects (
    assignment_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    employee_id INT NOT NULL,
    project_id INT NOT NULL,
    CONSTRAINT fk_employee
        FOREIGN KEY (employee_id)
        REFERENCES employees(employee_id),
    CONSTRAINT fk_project
        FOREIGN KEY (project_id)
        REFERENCES projects(project_id)
);

/**
 * Example query to get all employees and their projects
 * Uses INNER JOIN to combine data from employees and projects tables
 * Uses LEFT JOIN to include employees who are not assigned to any project
 */
SELECT e.first_name, e.last_name, p.name
FROM employees e
INNER JOIN employee_projects ep ON e.employee_id = ep.employee_id
INNER JOIN projects p ON ep.project_id = p.project_id
UNION
SELECT e.first_name, e.last_name, 'No Project Assigned'
FROM employees e
LEFT JOIN employee_projects ep ON e.employee_id = ep.employee_id
WHERE ep.project_id IS NULL;
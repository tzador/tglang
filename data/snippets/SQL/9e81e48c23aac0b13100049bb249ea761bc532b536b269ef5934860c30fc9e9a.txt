-- Create a table to store product information
CREATE TABLE products (
	product_id INTEGER PRIMARY KEY,
	product_name VARCHAR(255),
	price DECIMAL(10,2),
	description TEXT,
	stock_quantity INTEGER,
	category VARCHAR(50)
);

-- Insert data into the products table
INSERT INTO products (product_id, product_name, price, description, stock_quantity, category)
VALUES (1, 'Chocolate Bar', 2.50, 'Milk chocolate bar with almonds', 50, 'Candy');
INSERT INTO products (product_id, product_name, price, description, stock_quantity, category)
VALUES (2, 'Bottled Water', 1.00, 'Bottled water from natural springs', 100, 'Drinks');
INSERT INTO products (product_id, product_name, price, description, stock_quantity, category)
VALUES (3, 'Notebook', 5.00, 'Spiral bound notebook with lined paper', 25, 'Office Supplies');
INSERT INTO products (product_id, product_name, price, description, stock_quantity, category)
VALUES (4, 'T-Shirt', 15.00, 'Short-sleeve cotton T-shirt', 75, 'Clothing');

-- Create a table to store customer information
CREATE TABLE customers (
	customer_id INTEGER PRIMARY KEY,
	first_name VARCHAR(50),
	last_name VARCHAR(50),
	email VARCHAR(255),
	address VARCHAR(100),
	phone_number VARCHAR(20),
	loyalty_points INTEGER DEFAULT 0
);

-- Insert data into the customers table
INSERT INTO customers (customer_id, first_name, last_name, email, address, phone_number, loyalty_points)
VALUES (1, 'John', 'Smith', 'jsmith@email.com', '123 Main St', '555-1234', 100);
INSERT INTO customers (customer_id, first_name, last_name, email, address, phone_number, loyalty_points)
VALUES (2, 'Jane', 'Doe', 'jdoe@email.com', '456 Oak St', '555-5678', 50);
INSERT INTO customers (customer_id, first_name, last_name, email, address, phone_number, loyalty_points)
VALUES (3, 'Bob', 'Johnson', 'bjohnson@email.com', '789 Elm St', '555-9123', 75);
INSERT INTO customers (customer_id, first_name, last_name, email, address, phone_number, loyalty_points)
VALUES (4, 'Samantha', 'Williams', 'swilliams@email.com', '987 Maple St', '555-4567', 25);

-- Create a table to store orders
CREATE TABLE orders (
	order_id INTEGER PRIMARY KEY,
	customer_id INTEGER,
	order_date DATETIME,
	total DECIMAL(10,2),
	FOREIGN KEY (customer_id) REFERENCES customers (customer_id)
);

-- Insert data into the orders table
INSERT INTO orders (order_id, customer_id, order_date, total)
VALUES (1, 2, '2020-01-15 14:00:00', 22.50);
INSERT INTO orders (order_id, customer_id, order_date, total)
VALUES (2, 3, '2020-02-10 10:30:00', 5.00);
INSERT INTO orders (order_id, customer_id, order_date, total)
VALUES (3, 4, '2020-03-25 16:45:00', 30.00);

-- Create a table to store order details
CREATE TABLE order_details (
	order_detail_id INTEGER PRIMARY KEY,
	order_id INTEGER,
	product_id INTEGER,
	quantity INTEGER,
	FOREIGN KEY (order_id) REFERENCES orders (order_id),
	FOREIGN KEY (product_id) REFERENCES products (product_id)
);

-- Insert data into the order_details table
INSERT INTO order_details (order_detail_id, order_id, product_id, quantity)
VALUES (1, 1, 1, 3);
INSERT INTO order_details (order_detail_id, order_id, product_id, quantity)
VALUES (2, 1, 2, 1);
INSERT INTO order_details (order_detail_id, order_id, product_id, quantity)
VALUES (3, 2, 4, 2);
INSERT INTO order_details (order_detail_id, order_id, product_id, quantity)
VALUES (4, 3, 3, 1);
-- Create a new table called 'Bookings'
CREATE TABLE Bookings (
    booking_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    room_number INT,
    FOREIGN KEY (room_number) REFERENCES Rooms(room_number)
);

-- Add data to the table
INSERT INTO Bookings (booking_id, customer_name, start_date, end_date, room_number)
VALUES 
  (1, 'John Smith', '2021-08-01', '2021-08-07', 101),
  (2, 'Jane Doe', '2021-09-01', '2021-09-05', 202),
  (3, 'Michael Johnson', '2021-10-15', '2021-10-20', 303);

-- Create a new table called 'Rooms'
CREATE TABLE Rooms (
    room_number INT PRIMARY KEY,
    room_type VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL
);

-- Add data to the table
INSERT INTO Rooms (room_number, room_type, price)
VALUES 
  (101, 'Standard', 99.99),
  (202, 'Deluxe', 149.99),
  (303, 'Suite', 199.99);

-- Query to find all bookings with corresponding room type and price
SELECT b.booking_id, b.customer_name, b.start_date, b.end_date, r.room_type, r.price
FROM Bookings b
INNER JOIN Rooms r ON b.room_number = r.room_number;

-- Output:
/*
| booking_id | customer_name    | start_date | end_date   | room_type | price   |
|------------|------------------|------------|------------|-----------|---------|
| 1          | John Smith       | 2021-08-01 | 2021-08-07 | Standard  | 99.99   |
| 2          | Jane Doe         | 2021-09-01 | 2021-09-05 | Deluxe    | 149.99  |
| 3          | Michael Johnson  | 2021-10-15 | 2021-10-20 | Suite     | 199.99  |
*/
-- Create a table to store customer information
CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    phone_number VARCHAR(20) NULL,
    address VARCHAR(255) NULL,
    city VARCHAR(100) NULL,
    postal_code VARCHAR(20) NULL
);

-- Insert data into the customers table
INSERT INTO customers (customer_id, name, email, phone_number, address, city, postal_code)
VALUES (1, 'John Smith', 'john@example.com', '+1 555 123456', '123 Main St', 'New York', '12345'),
    (2, 'Jane Doe', 'jane@example.com', '+1 555 789012', '456 Park Ave', 'Los Angeles', '45678'),
    (3, 'Bob Johnson', 'bob@example.com', '+1 555 4567890', '789 Broadway', 'Chicago', '78901'),
    (4, 'Sarah Brown', 'sarah@example.com', '+1 555 2345678', '321 Main St', 'Miami', '23456'),
    (5, 'Mike Davis', 'mike@example.com', '+1 555 9012345', '2468 Elm St', 'Dallas', '67890');
    
-- Create a table to store product information
CREATE TABLE products (
    product_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    description VARCHAR(500) NULL,
    category VARCHAR(50) NOT NULL,
    stock_quantity INT NOT NULL
);

-- Insert data into the products table
INSERT INTO products (product_id, name, price, description, category, stock_quantity)
VALUES (1, 'T-shirt', 19.99, 'A plain white t-shirt', 'Clothing', 100),
    (2, 'Jeans', 39.99, 'Blue denim jeans', 'Clothing', 50),
    (3, 'Sneakers', 59.99, 'Black canvas sneakers', 'Shoes', 75),
    (4, 'Watch', 99.99, 'Stainless steel watch', 'Accessories', 25),
    (5, 'Backpack', 49.99, 'Navy blue backpack', 'Bags', 30);

-- Create a table to store orders
CREATE TABLE orders (
	order_id INT PRIMARY KEY,
	customer_id INT NOT NULL,
	product_id INT NOT NULL,
	quantity INT DEFAULT 1,
	order_date DATE NOT NULL,
	FOREIGN KEY(customer_id) REFERENCES customers(customer_id),
	FOREIGN KEY(product_id) REFERENCES products(product_id)
);

-- Insert data into the orders table
INSERT INTO orders (order_id, customer_id, product_id, quantity, order_date)
VALUES (1, 1, 3, 2, '2021-08-22'),
    (2, 2, 1, 1, '2021-08-24'),
    (3, 4, 5, 3, '2021-08-28'),
    (4, 5, 2, 1, '2021-08-31'),
    (5, 3, 4, 1, '2021-09-02');

-- Get information about orders placed by customers in New York
SELECT c.name, p.name AS product_name, o.quantity, o.order_date
FROM orders o
INNER JOIN customers c ON o.customer_id = c.customer_id
INNER JOIN products p ON o.product_id = p.product_id
WHERE c.city = 'New York';

-- Update the price of a product
UPDATE products 
SET price = 29.99 
WHERE product_id = 1;

-- Delete a customer and their related orders
DELETE FROM customers 
WHERE customer_id = 5;

-- Find the total sales for each product category
SELECT category, SUM(price * quantity) AS total_sales 
FROM products p
INNER JOIN orders o ON p.product_id = o.product_id
GROUP BY category;
-- Create a table called Orders
CREATE TABLE Orders (
  OrderID int NOT NULL PRIMARY KEY,
  CustomerName varchar(255) NOT NULL,
  OrderDate date,
  OrderTotal numeric(10,2),
  ShippingAddress varchar(255)
);

-- Insert data into the table
INSERT INTO Orders (OrderID, CustomerName, OrderDate, OrderTotal, ShippingAddress)
VALUES (123, 'John Smith', '2020-01-02', 100.00, '123 Main St');
INSERT INTO Orders (OrderID, CustomerName, OrderDate, OrderTotal, ShippingAddress)
VALUES (456, 'Jane Doe', '2020-01-10', 50.00, '789 Central Ave');
INSERT INTO Orders (OrderID, CustomerName, OrderDate, OrderTotal, ShippingAddress)
VALUES (789, 'Bob Johnson', '2020-01-15', 200.00, '456 Park Ave');

-- Create a table called OrderItems
CREATE TABLE OrderItems (
  ItemID int NOT NULL PRIMARY KEY,
  OrderID int NOT NULL,
  ItemName varchar(255) NOT NULL,
  ItemPrice numeric(10,2),
  Quantity int,
  FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

-- Insert data into the table
INSERT INTO OrderItems (ItemID, OrderID, ItemName, ItemPrice, Quantity)
VALUES (1, 123, 'Shirt', 25.00, 2);
INSERT INTO OrderItems (ItemID, OrderID, ItemName, ItemPrice, Quantity)
VALUES (2, 123, 'Pants', 45.00, 1);
INSERT INTO OrderItems (ItemID, OrderID, ItemName, ItemPrice, Quantity)
VALUES (3, 456, 'Shoes', 50.00, 1);
INSERT INTO OrderItems (ItemID, OrderID, ItemName, ItemPrice, Quantity)
VALUES (4, 789, 'Hat', 20.00, 3);

-- Update OrderTotal in Orders table with the sum of ItemPrice * Quantity from OrderItems table
UPDATE Orders
SET OrderTotal = (SELECT SUM(ItemPrice * Quantity) FROM OrderItems WHERE OrderID = Orders.OrderID);

-- Select all orders with OrderTotal greater than 100
SELECT *
FROM Orders
WHERE OrderTotal > 100;
/* This code snippet generates a table of student grades for a course */
CREATE TABLE student_grades(
    student_id INT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    class VARCHAR(50) NOT NULL,
    midterm_grade INT CHECK (midterm_grade BETWEEN 0 and 100),
    final_grade INT CHECK (midterm_grade BETWEEN 0 and 100),
    attendance_grade INT CHECK (attendance_grade BETWEEN 0 and 10)
);
/*
This table has 7 columns including a primary key for student ID and 3 columns for each grade type.
The midterm and final grades have a check constraint to ensure they are within a valid range, 
while the attendance grade has a constraint to ensure it is within a smaller range to account for 
its different weight in the overall grade. The table is created with the command "CREATE TABLE" 
and the table name "student_grades" is followed by parentheses containing the column names, 
data types, and any constraints. The primary key is designated with the keyword "PRIMARY KEY" 
and the NOT NULL constraint is specified using the keyword "NOT NULL". */
INSERT INTO student_grades (student_id, first_name, last_name, class, midterm_grade, final_grade, attendance_grade)
    VALUES 
    (1, 'John', 'Smith', 'Math', 85, 90, 8),
    (2, 'Jane', 'Doe', 'English', 92, 88, 9),
    (3, 'Tom', 'Johnson', 'Science', 77, 85, 10),
    (4, 'Mary', 'Williams', 'History', 80, 95, 10),
    (5, 'Chris', 'Jones', 'Art', 90, 85, 10),
    (6, 'Samantha', 'Brown', 'Geography', 85, 90, 10),
    (7, 'David', 'Lee', 'Music', 95, 92, 9);
/*
This code inserts sample data into the student_grades table using the command "INSERT INTO".
The values for each column are specified in the parentheses after the "VALUES" keyword, 
with each student having their own row and each value separated by a comma. 
This data can then be used for further analysis or calculations. */
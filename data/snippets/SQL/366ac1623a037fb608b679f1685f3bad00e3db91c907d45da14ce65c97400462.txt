-- Create a temporary table to hold unique customer names and their revenue
CREATE TEMPORARY TABLE customer_revenue (
    customer_name VARCHAR(255), -- Name of customer, maximum length of 255 characters
    total_revenue DECIMAL(10,2) -- Total revenue for customer, maximum of 10 digits with 2 decimal places
);

-- Query to insert unique customer names and their total revenue into the temporary table
-- Subquery calculates the sum of all orders for each customer
INSERT INTO customer_revenue (customer_name, total_revenue)
SELECT DISTINCT customer_name, (SELECT SUM(order_total) AS total FROM orders WHERE orders.customer_id = customers.id)
FROM customers;

-- Create a table to hold customer demographics
CREATE TABLE customer_demographics (
    customer_id INT AUTO_INCREMENT, -- Unique customer ID generated automatically
    customer_name VARCHAR(255), -- Name of customer, maximum length of 255 characters
    age INT, -- Age of customer, integer value
    gender VARCHAR(50), -- Gender of customer, maximum length of 50 characters
    occupation VARCHAR(100), -- Occupation of customer, maximum length of 100 characters
    PRIMARY KEY (customer_id) -- Primary key is the customer ID
);

-- Query to insert customer demographics into the table
INSERT INTO customer_demographics (customer_name, age, gender, occupation)
SELECT DISTINCT customer_name, age, gender, occupation
FROM customers;

-- Query to join the two tables and calculate the revenue per demographic category
SELECT cd.age, cd.gender, cd.occupation, SUM(cr.total_revenue) AS total_revenue, COUNT(cd.customer_id) AS total_customers
FROM customer_revenue AS cr
INNER JOIN customer_demographics AS cd ON cr.customer_name = cd.customer_name
GROUP BY cd.age, cd.gender, cd.occupation;
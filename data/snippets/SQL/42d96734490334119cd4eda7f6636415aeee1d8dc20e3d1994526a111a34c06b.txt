-- Table to store information about employees
CREATE TABLE employees (
    emp_id INT PRIMARY KEY, -- unique employee ID
    first_name VARCHAR(50) NOT NULL, -- employee's first name
    last_name VARCHAR(50) NOT NULL, -- employee's last name
    department VARCHAR(50), -- name of employee's department
    position VARCHAR(50), -- employee's job title
    salary INT, -- employee's salary
    start_date DATE, -- employee's start date
    end_date DATE -- employee's end date, NULL if still employed
);

-- Table to store information about employee projects
CREATE TABLE employee_projects (
    project_id INT PRIMARY KEY, -- unique project ID
    project_name VARCHAR(50) NOT NULL, -- project name
    start_date DATE NOT NULL, -- project start date
    end_date DATE NOT NULL, -- project end date
    emp_id INT, -- employee assigned to project
    FOREIGN KEY (emp_id) REFERENCES employees(emp_id) -- foreign key referencing employee table
);

-- Table to store information about employee tasks
CREATE TABLE employee_tasks (
    task_id INT PRIMARY KEY, -- unique task ID
    task_name VARCHAR(50) NOT NULL, -- task name
    due_date DATE NOT NULL, -- task due date
    emp_id INT, -- employee assigned to task
    FOREIGN KEY (emp_id) REFERENCES employees(emp_id) -- foreign key referencing employee table
);

-- Query to retrieve all employees and their information
SELECT * FROM employees;

-- Query to retrieve all projects and their information
SELECT * FROM employee_projects;

-- Query to retrieve all tasks and their information
SELECT * FROM employee_tasks;

-- Query to retrieve all employees and their assigned projects
SELECT e.first_name, e.last_name, p.project_name
FROM employees e
INNER JOIN employee_projects p ON e.emp_id = p.emp_id;

-- Query to retrieve all employees and their assigned tasks
SELECT e.first_name, e.last_name, t.task_name
FROM employees e
INNER JOIN employee_tasks t ON e.emp_id = t.emp_id;

-- Query to retrieve all departments and their total number of employees
SELECT department, COUNT(*) AS total_employees
FROM employees
GROUP BY department;

-- Query to retrieve all employees in the Sales department with a salary higher than $50,000
SELECT *
FROM employees
WHERE department = 'Sales' AND salary > 50000;

-- Query to update an employee's salary
UPDATE employees
SET salary = 60000
WHERE emp_id = 101;

-- Query to delete an employee
DELETE FROM employees
WHERE emp_id = 101;
-- This code snippet creates a table for storing customer information, including their name, address, and order details
CREATE TABLE Customers (
    CustomerID int NOT NULL PRIMARY KEY,
    Name varchar(255) NOT NULL,
    Address text NOT NULL,
    OrderID int NOT NULL,
    ProductID int,
    Quantity int,
    OrderDate date,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- This code snippet creates a table for storing order information, including the order ID, customer ID, and order total
CREATE TABLE Orders (
    OrderID int NOT NULL PRIMARY KEY,
    CustomerID int NOT NULL,
    OrderTotal decimal(10,2) NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- This code snippet creates a table for storing product information, including the product ID, name, price, and quantity in stock
CREATE TABLE Products (
    ProductID int NOT NULL PRIMARY KEY,
    Name varchar(255) NOT NULL,
    Price decimal(10,2) NOT NULL,
    QuantityInStock int NOT NULL
);

-- This code snippet inserts sample data into the Customers table
INSERT INTO Customers (CustomerID, Name, Address, OrderID, ProductID, Quantity, OrderDate)
VALUES (1, 'John Smith', '123 Main Street', 1, 1, 2, '2020-01-01'),
    (2, 'Jane Doe', '456 Maple Avenue', 2, 3, 1, '2020-02-05'),
    (3, 'Bob Johnson', '789 Oak Road', 1, 2, 3, '2020-03-10');

-- This code snippet inserts sample data into the Orders table
INSERT INTO Orders (OrderID, CustomerID, OrderTotal)
VALUES (1, 1, 50.00),
    (2, 2, 25.00),
    (3, 3, 75.00);

-- This code snippet inserts sample data into the Products table
INSERT INTO Products (ProductID, Name, Price, QuantityInStock)
VALUES (1, 'T-Shirt', 20.00, 50),
    (2, 'Jeans', 40.00, 25),
    (3, 'Sweater', 30.00, 20);
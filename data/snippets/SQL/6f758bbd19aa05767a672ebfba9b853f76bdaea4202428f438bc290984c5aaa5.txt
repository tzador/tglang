CREATE TABLE Customers ( -- creates a new table called 'Customers'
  customer_id INT AUTO_INCREMENT, -- creates a primary key column that automatically increments with each new entry
  first_name VARCHAR(50) NOT NULL, -- creates a column for first names with a maximum length of 50 characters and does not allow null values
  last_name VARCHAR(50) NOT NULL, -- creates a column for last names with a maximum length of 50 characters and does not allow null values
  email VARCHAR(100), -- creates a column for email addresses with a maximum length of 100 characters
  phone_number VARCHAR(20), -- creates a column for phone numbers with a maximum length of 20 characters
  age INT, -- creates a column for age with integer data type
  gender VARCHAR(10), -- creates a column for gender with a maximum length of 10 characters
  address VARCHAR(200), -- creates a column for address with a maximum length of 200 characters
  PRIMARY KEY (customer_id) -- specifies the primary key for the table
);

INSERT INTO Customers (first_name, last_name, email, phone_number, age, gender, address) -- inserts data into the Customers table
VALUES
  ('John', 'Smith', 'johnsmith@gmail.com', '555-555-1234', 25, 'Male', '123 Main St.'),
  ('Jane', 'Doe', 'janedoe@gmail.com', '555-555-5678', 31, 'Female', '456 Park Ave.'),
  ('Bob', 'Jones', 'bjones@yahoo.com', '555-555-9012', 42, 'Male', '789 5th St.');
  -- inserts multiple rows at once, providing values for each column in the same order they were defined in the table

SELECT * FROM Customers; -- selects all rows and columns from the Customers table and displays the results

UPDATE Customers SET age = 28 WHERE first_name = 'John' AND last_name = 'Smith'; 
-- updates the age column to 28 for the specific row where the first and last names match the provided values

DELETE FROM Customers WHERE age > 40; -- deletes all rows from the Customers table where the age is greater than 40

ALTER TABLE Customers ADD COLUMN active BOOLEAN DEFAULT TRUE; 
-- adds a new column called 'active' with boolean data type and sets a default value of true for all existing rows

SELECT COUNT(*) FROM Customers; -- counts the total number of rows in the Customers table and displays the result
--create table to store customer information
CREATE TABLE customers (
    customer_id INTEGER PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    phone_number VARCHAR(12) NOT NULL,
    address VARCHAR(255)
);

--create table to store order information
CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY,
    order_date DATE NOT NULL,
    total_price DECIMAL(10,2) NOT NULL,
    customer_id INTEGER NOT NULL REFERENCES customers(customer_id)
);

--create table to store product information
CREATE TABLE products (
    product_id INTEGER PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    price DECIMAL(8,2) NOT NULL,
    stock_quantity INTEGER NOT NULL
);

--create table to store order details
CREATE TABLE order_details (
    order_id INTEGER NOT NULL REFERENCES orders(order_id),
    product_id INTEGER NOT NULL REFERENCES products(product_id),
    quantity INTEGER NOT NULL,
    PRIMARY KEY(order_id, product_id)
);

--insert data into customers table
INSERT INTO customers (first_name, last_name, email, phone_number, address)
VALUES ('John', 'Smith', 'jsmith@email.com', '123-456-7890', '123 Main Street'),
       ('Jane', 'Doe', 'jdoe@email.com', '987-654-3210', '456 Maple Avenue');

--insert data into products table
INSERT INTO products (product_name, price, stock_quantity)
VALUES ('T-shirt', 20.99, 50),
       ('Jeans', 39.99, 25),
       ('Shoes', 59.99, 15);

--insert data into orders table
INSERT INTO orders (order_date, total_price, customer_id)
VALUES ('2021-01-01', 86.97, 1),
       ('2021-01-03', 129.97, 2);

--insert data into order details table
INSERT INTO order_details (order_id, product_id, quantity)
VALUES (1, 1, 2),
       (1, 3, 1),
       (2, 2, 3);
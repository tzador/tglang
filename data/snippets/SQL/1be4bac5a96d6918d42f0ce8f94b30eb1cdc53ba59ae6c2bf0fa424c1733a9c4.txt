/* Creates a table containing customer information */
CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  first_name VARCHAR(255),
  last_name VARCHAR(255),
  email VARCHAR(255),
  phone_number VARCHAR(15),
  address VARCHAR(255),
  city VARCHAR(255),
  state VARCHAR(50),
  zip_code VARCHAR(10)
);

/* Inserts data into the customers table */
INSERT INTO customers (customer_id, first_name, last_name, email, phone_number, address, city, state, zip_code)
VALUES (1, 'John', 'Smith', 'j.smith@example.com', '555-123-4567', '123 Main St', 'New York', 'NY', '10001'),
       (2, 'Jane', 'Doe', 'j.doe@example.com', '555-567-8901', '456 1st Ave', 'Los Angeles', 'CA', '90001'),
       (3, 'Bob', 'Johnson', 'b.johnson@example.com', '555-246-8013', '789 Oak St', 'Chicago', 'IL', '60601'),
       (4, 'Sarah', 'Williams', 's.williams@example.com', '555-135-7911', '321 Elm St', 'Houston', 'TX', '77001');

/* Creates a table containing product information */
CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(255),
  price DECIMAL(8,2),
  description TEXT,
  category VARCHAR(255)
);

/* Inserts data into the products table */
INSERT INTO products (product_id, product_name, price, description, category)
VALUES (1, 'T-shirt', 19.99, 'Soft and comfortable cotton t-shirt', 'Apparel'),
       (2, 'Jeans', 39.99, 'Stylish and durable denim jeans', 'Apparel'),
       (3, 'Sneakers', 59.99, 'High-quality athletic shoes', 'Footwear'),
       (4, 'Backpack', 49.99, 'Spacious and durable backpack', 'Accessories');

/* Creates a table linking customers and products */
CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  product_id INT,
  order_date DATE,
  quantity INT,
  total_price DECIMAL(8,2),
  FOREIGN KEY (customer_id) REFERENCES customers (customer_id),
  FOREIGN KEY (product_id) REFERENCES products (product_id)
);

/* Inserts data into the orders table */
INSERT INTO orders (order_id, customer_id, product_id, order_date, quantity, total_price)
VALUES (1, 1, 1, '2021-01-05', 2, 39.98),
       (2, 2, 3, '2021-02-10', 1, 59.99),
       (3, 3, 4, '2021-03-15', 3, 149.97),
       (4, 4, 2, '2021-04-20', 2, 79.98);

/* Returns customer names and total amount spent on orders */
SELECT c.first_name || ' ' || c.last_name AS "Customer Name", SUM(o.total_price) AS "Total Spent"
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY "Total Spent" DESC;
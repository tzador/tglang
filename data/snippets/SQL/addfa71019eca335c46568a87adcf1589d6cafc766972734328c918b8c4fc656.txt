-- Create inventory table with columns for item name, quantity, and price
CREATE TABLE inventory(
  item_name VARCHAR(255) NOT NULL,
  quantity INT(11) NOT NULL,
  price DECIMAL(10,2) NOT NULL
);

-- Insert sample data into inventory table
INSERT INTO inventory
VALUES ('Apples', 10, 3.99), ('Bananas', 12, 2.49), ('Oranges', 8, 4.99), ('Pineapple', 5, 7.99);

-- Select all items from inventory table
SELECT * FROM inventory;

-- Update price for apples to 4.99
UPDATE inventory
SET price = 4.99
WHERE item_name = 'Apples';

-- Delete oranges from inventory table
DELETE FROM inventory
WHERE item_name = 'Oranges';

-- Create sales table with columns for item name, quantity sold, and total sales
CREATE TABLE sales(
  item_name VARCHAR(255) NOT NULL,
  quantity_sold INT(11) NOT NULL,
  total_sales DECIMAL(10,2) NOT NULL
);

-- Insert sample data into sales table
INSERT INTO sales
VALUES ('Apples', 5, 24.95), ('Bananas', 7, 17.43), ('Oranges', 2, 9.98);

-- Group sales by item name and display total sales for each item
SELECT item_name, SUM(total_sales) AS total_sales
FROM sales
GROUP BY item_name;

-- Join inventory and sales tables to display remaining quantity and total sales for each item
SELECT i.item_name, i.quantity AS remaining_quantity, s.total_sales
FROM inventory AS i
INNER JOIN sales AS s ON i.item_name = s.item_name;

-- Calculate total revenue by adding up total sales from sales table
SELECT SUM(total_sales) AS total_revenue
FROM sales;
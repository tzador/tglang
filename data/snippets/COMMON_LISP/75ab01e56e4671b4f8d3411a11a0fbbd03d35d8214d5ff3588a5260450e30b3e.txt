(defparameter *prime* '(2 3 5 7 11 13 17 19))

;;Declarations
(setq i 0)
(setq isPrime T)
(setq divisor 0)

;;Function to check if a number is prime
(defun check_prime (x)
  "Checks if the given number is prime, returns true if prime and false otherwise."
  (loop for number in *prime*
        when (and (> x number) (= 0 (mod x number))) do (setf isPrime nil))
  (declare (special i isPrime divisor))
  (loop repeat isPrime
       do (setf divisor (car (cdr (last *prime*))))
       while (< divisor (sqrt x)) do
       (progn
         (if (= 0 (mod x divisor))
             (setf isPrime nil)
             (setq divisor (+ 2 divisor))))))
  isPrime)

;;Prints prime numbers up to 100
(defun print_primes ()
    "Prints all the prime numbers up to 100."
    (loop with i
          for i from 2 to 100 do
          (when (check_prime i) (print i))))

(print_primes) ;;Prints 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 97
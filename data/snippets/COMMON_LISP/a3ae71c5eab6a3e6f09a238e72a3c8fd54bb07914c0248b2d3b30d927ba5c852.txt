;; This is a function that checks if a given number is prime. 
(defun is-prime (n)
  (let ((prime t))
    (when (>= n 2)
      (dotimes (i (1+ (floor (sqrt n))) prime)
        (when (and prime (= (rem n i) 0))
          (setf prime nil))))
    prime))
    
;; Function that generates the nth prime number.
(defun nth-prime (n)
  (let ((count 0)
    (num 2))
    (loop while (< count n) do
      (when (is-prime num)
        (incf count))
      (incf num))
    (decf num)))
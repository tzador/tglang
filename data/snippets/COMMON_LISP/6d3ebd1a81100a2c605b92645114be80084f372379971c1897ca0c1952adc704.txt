;;; My Custom Lisp Program
(defpackage :my-custom-lisp
  (:use :common-lisp :alexandria)
  (:shadow #:length #:frequency))
(in-package :my-custom-lisp)
;;; Custom Structures
(defstruct (person (:constructor create-person (name age sex)))
           name
           age
           sex)
;;; Custom Unary Function
(defparameter *pi* 3.14159)
(defun square (x) (* x x))
(defun circle-area (radius)
  (* *pi* (square radius)))
;;; Custom Binary Function
(defun print-addition (x y)
  (format t "The addition of ~d and ~d is ~d.~%" x y (+ x y)))
(defun get-remainder (a b)
  (mod a b))
;;; Helper Functions
(defun get-nth (lst n)
  (if (equal n 1) (car lst)
    (get-nth (cdr lst) (- n 1))))
(defun get-min (lst)
  (reduce #'min lst))
(defun map-append (lst1 lst2)
  (mapcar (lambda (x y) (append x y)) lst1 lst2)))
(let ((x 5))
  (when (< x 10) ;; `when` evaluates the next expression only if its first argument is true
    (print "x is less than 10") ;; `print` prints its argument to the output
    (multiple-value-bind (y z) ;; `multiple-value-bind` binds multiple return values from a function to variables
        (floor (/ x 2)) ;; `floor` rounds a number down to the nearest integer
      (format t "Half of x is ~A, and the remainder is ~A" y z)))) ;; `format t` prints formatted output to the terminal
(defun bubble-sort (lst) ; This function implements the bubble sort algorithm for sorting a list
    (let ((n (length lst)))
      (do ((a lst (cdr a))
           (swap nil))
          ((null (cdr a)) (if swap (bubble-sort lst) lst))
        (when (> (car a) (cadr a))
          (rotatef (car a) (cadr a))
          (setf swap t))))) ; The do loop iterates through the list and swaps elements if needed, using `setf` to set a flag if a swap occurs. The function will keep sorting the list until there are no more swaps necessary.
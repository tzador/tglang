(defun fibonacci (n) ; defun is used to define a function
    "Returns the fibonacci sequence up to the nth number." ; <-- Function description
    (if (zerop n) ; if statement to check if n is 0
        (list 0)  ; if n is 0, return a list with 0 as the only element
        (let ((a 0) ; let statement to declare local variables
              (b 1)
              (sequence (list 0 1))) ; initializing a list to store the sequence starting with 0 and 1 as the first two elements
            (dotimes (i (- n 2)) ; dotimes loop to iterate n-2 times (since the first two numbers are already in the list)
                (let ((next (+ a b))) ; let statement to declare local variables
                    (setf sequence (append sequence (list next))) ; append the next number to the sequence list
                    (setf a b) ; update the variables a and b to prepare for the next iteration
                    (setf b next)))
             sequence))) ; return the sequence list
;; Output: # <anonymous function> ;; the return value is a function object
(fibonacci 8) ; calling the function with n = 8
;; Output: (0 1 1 2 3 5 8 13) ;; the fibonacci sequence up to the 8th number is returned as a list
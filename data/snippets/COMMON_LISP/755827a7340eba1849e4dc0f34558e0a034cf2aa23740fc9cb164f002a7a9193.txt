;; This is a function that calculates the nth Fibonacci number using recursion
(defun fibonacci (n)
  (if (or (= n 0) (= n 1)) ; Base case: if n is 0 or 1, return n
      n
      (+ (fibonacci (- n 1)) ; Recursive step: add the previous two Fibonacci numbers
         (fibonacci (- n 2)))))

;; This is a loop that prints the first 10 Fibonacci numbers
(loop for i from 0 to 9
      do (format t "Fibonacci ~a: ~a~%" i (fibonacci i)))

;; Output:
;; Fibonacci 0: 0
;; Fibonacci 1: 1
;; Fibonacci 2: 1
;; Fibonacci 3: 2
;; Fibonacci 4: 3
;; Fibonacci 5: 5
;; Fibonacci 6: 8
;; Fibonacci 7: 13
;; Fibonacci 8: 21
;; Fibonacci 9: 34
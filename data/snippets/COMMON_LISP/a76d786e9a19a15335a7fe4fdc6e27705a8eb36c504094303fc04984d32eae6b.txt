;; This function takes in two lists as arguments
(defun merge-lists (list1 list2)
  ;; First, we check if either of the lists is empty
  (if (null list1)
      ;; If list1 is empty, we return list2
      list2
      ;; Otherwise, we check if list2 is empty
      (if (null list2)
          ;; If list2 is empty, we return list1
          list1
          ;; If both lists are non-empty, we compare the first elements
          (if (<= (car list1) (car list2))
              ;; If the first element of list1 is smaller than list2,
              ;; then we add it to the merged list and recursively call
              ;; this function on the rest of list1 and list2
              (cons (car list1) (merge-lists (cdr list1) list2))
              ;; If the first element of list2 is smaller than list1,
              ;; then we add it to the merged list and recursively call
              ;; this function on the rest of list2 and list1
              (cons (car list2) (merge-lists (cdr list2) list1))))))

;; Example of using the function:
(merge-lists '(1 3 5 7) '(2 4 6 8))
;; Output: (1 2 3 4 5 6 7 8)
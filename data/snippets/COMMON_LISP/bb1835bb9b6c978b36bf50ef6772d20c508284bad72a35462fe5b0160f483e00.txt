;; Define a function to calculate the factorial of a number
(defun factorial (n)
  "Calculates the factorial of a given number n."
  (if (<= n 1)
      1
      (* n (factorial (- n 1)))))

;; Define a recursive function to calculate the nth Fibonacci number
(defun fibonacci (n)
  "Calculates the nth Fibonacci number using recursion."
  (if (or (= n 0) (= n 1))
      n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

;; Print out the results of the factorial and Fibonacci functions for n = 5
(format t "The factorial of ~a is ~a." 5 (factorial 5)) ; => The factorial of 5 is 120.
(format t "The ~a~a~a Fibonacci number is ~a." "n" (if (= 5 1) "st" "th") "n" (fibonacci 5)) ; => The 5th Fibonacci number is 5.
(defclass animal ()
  ((name :accessor name :initarg :name)
   (type :accessor type :initarg :type)
   (age :accessor age :initarg :age)
   (diet :accessor diet :initarg :diet)
   (location :accessor location :initarg :location)))

(defmethod move ((animal animal))
  "A method that describes the movement of an animal."
  (format t "~A is moving towards its ~A at ~A." (name animal) (location animal) (age animal)))

(defmethod eat ((animal animal) (food string))
  "A method that describes the eating habits of an animal."
  (if (find food (diet animal)) 
      (format t "~A is enjoying its ~A meal!" (name animal) food)
      (format t "~A does not eat ~A." (name animal) food)))

(let ((dog (make-instance 'animal :name "Buddy" :type "Dog"
                                      :age 5 :diet '("meat" "bones")
                                      :location "backyard"))
      (cat (make-instance 'animal :name "Whiskers" :type "Cat"
                                      :age 3 :diet '("fish" "mice")
                                      :location "kitchen")))
  (move dog)
  (move cat)
  (eat dog "fish")
  (eat cat "cheese"))
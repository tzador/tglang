;; A complex code snippet in COMMON_LISP

(let ((nums (list 1 2 3 4 5)))                             ;; Let binding with nums variable assigned a list of integers
  (dolist (num nums)                                       ;; Dolist loop for iterating through the list of integers
    (let (result)                                          ;; Let binding for result variable
      (dotimes (i num)                                     ;; Dotimes loop for repeating the following code num times
        (setf result num)                                  ;; Set value of result variable to num
        (when (oddp i)                                     ;; When statement with oddp function to check if i is odd
          (setf result (* result num))))                   ;; If i is odd, multiply result by num and set as new value for result
    (format t "The result of multiplying ~d by itself is ~d" num result))) ;; Print statement with formatted output using num and result variables
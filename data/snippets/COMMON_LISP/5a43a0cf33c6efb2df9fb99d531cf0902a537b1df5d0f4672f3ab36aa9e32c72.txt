;; Define a function to calculate the factorial of a given number
(defun factorial (n)
  "Calculates the factorial of a given number"
  (if (<= n 1)
      1
      (* n (factorial (- n 1)))))

;; Define a function to calculate the nth Fibonacci number
(defun fibonacci (n)
  "Calculates the nth Fibonacci number"
  (if (<= n 1)
      1
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

;; Define a function to calculate the sum of a list of numbers
(defun sum (lst)
  "Calculates the sum of a list of numbers"
  (if (null lst)
      0
      (+ (car lst) (sum (cdr lst)))))

;; Define a function to find the largest element in a list
(defun max-element (lst)
  "Finds the largest element in a list"
  (if (null lst)
      nil
      (let ((max (car lst)))
        (dolist (num (cdr lst) max)
          (when (> num max)
            (setf max num))))))

;; Define a list of numbers
(defparameter numbers '(5 2 9 4 8 7))

;; Calculate the factorial of 5
(factorial 5)

;; Calculate the 10th Fibonacci number
(fibonacci 10)

;; Calculate the sum of all numbers in the list
(sum numbers)

;; Find the largest number in the list
(max-element numbers)
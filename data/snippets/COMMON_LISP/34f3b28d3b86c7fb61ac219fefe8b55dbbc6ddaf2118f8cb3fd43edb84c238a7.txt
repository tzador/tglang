(defun nested-functions (x)
  "This function takes in a list of numbers and returns the product of the sum of its inner lists."
  (labels ((sum (lst)
             "This inner function calculates the sum of a list of numbers."
             (cond ((null lst) 0)
                   (t (+ (car lst) (sum (cdr lst)))))) ; recursive call to sum the rest of the list
           (product (lst)
             "This inner function calculates the product of a list of numbers."
             (cond ((null lst) 1)
                   (t (* (car lst) (product (cdr lst)))))) ; recursive call to multiply the rest of the list
           (calculate (lst)
             "This inner function calculates the product of the sum of nested lists."
             (cond ((null lst) 1)
                   ((atom (car lst)) ; checks if first element is a number
                    (calculate (cdr lst))) ; ignores first element, recursively calls calculate on the rest of the list
                   (t (* (sum (car lst)) (product (cdr lst))))))) ; calculates sum and product, and recursively calls calculate on rest of the list
  (calculate x)) ; calls calculate function on the given input list
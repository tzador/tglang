(defclass animal () ; defines a class named "animal"
  ((name :accessor name ; defines a slot named "name"
          :initarg :name) ; specifies how to initialize the slot through the constructor
   (sound :accessor sound ; defines a slot named "sound"
          :initarg :sound))) ; specifies how to initialize the slot through the constructor

(defmethod make-sound ((animal animal)) ; defines a method named "make-sound" that takes an object of class "animal" as an argument
  (format t "The ~a ~a makes a ~a sound." ; uses a format string to print a message
          (class-of animal) ; gets the class of the object passed in
          (slot-value animal 'name) ; gets the value of the "name" slot for the object passed in
          (slot-value animal 'sound))) ; gets the value of the "sound" slot for the object passed in

(defparameter *cat* (make-instance 'animal :name "cat" :sound "meow")) ; creates an instance of the "animal" class named "*cat*" with the "name" slot set to "cat" and the "sound" slot set to "meow"

(defparameter *dog* (make-instance 'animal :name "dog" :sound "woof")) ; creates an instance of the "animal" class named "*dog*" with the "name" slot set to "dog" and the "sound" slot set to "woof"

(make-sound *cat*) ; calls the "make-sound" method on the "*cat*" object, which will print "The animal cat makes a meow sound."
(make-sound *dog*) ; calls the "make-sound" method on the "*dog*" object, which will print "The animal dog makes a woof sound."
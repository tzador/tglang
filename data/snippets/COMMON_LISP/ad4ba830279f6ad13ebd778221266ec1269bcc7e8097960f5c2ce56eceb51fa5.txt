(defparameter *list* '(5 3 6 8 2)) ; Set *list* to a list of integers

(defun insertion-sort (lst) ; Define a function to perform insertion sort on a list
  (let ((l (copy-list lst))) ; Create a copy of the list to avoid mutating the original list
    (loop for i from 1 to (length l) do ; Iterate through each element in the list
      (setf key (nth i l)) ; Set the key element to be the current element in the list
      (setf j (- i 1)) ; Set j to be the index before the current element
      (loop until (or (eq j -1) (<= (nth j l) key)) do ; Loop backwards until the element is in its correct position
        (setf (nth (+ j 1) l) (nth j l)) ; Move the element forward one position
        (setf j (- j 1))) ; Decrement j by one
      (setf (nth (+ j 1) l) key)) ; Place the key element in its correct position in the sorted list
  l)) ; Return the sorted list

(insertion-sort *list*) ; Call the insertion-sort function on *list*
; Output: (2 3 5 6 8)
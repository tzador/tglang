(defparameter *words* '(("apple" . "A type of fruit") ;; This defines a list of word-definition pairs for lookup
						("car" . "A wheeled motor vehicle")
						("dog" . "A domesticated mammal")
						("computer" . "An electronic device")))

(defun definition (word) ;; This function takes in a word and returns its definition
  (cdr (assoc word *words*)))

(defun reverse-string (str) ;; This function takes in a string and returns the reverse of it
  (loop for i from (1- (length str)) downto 0 collect (char str i)))

(defun print-definitions (list) ;; This function takes in a list of words and prints their definitions
  (loop for word in list
        do (format t "~a: ~a~%" word (definition word))))

(let ((input (read-line))) ;; This takes user input and stores it in the variable 'input'
  (assert (not (null input)) () "No input given") ;; This ensures that the input is not null
  (let ((reverse-input (reverse-string input))) ;; This reverses the user input and stores it in a variable
    (print-definitions reverse-input))) ;; This calls the function to print the definitions of the reversed input
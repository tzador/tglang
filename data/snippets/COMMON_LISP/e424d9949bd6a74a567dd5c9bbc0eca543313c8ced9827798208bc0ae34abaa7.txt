;;; This code defines a function that returns the sum of all elements in a nested list
;;;Input: nested list
;;;Output: sum of all elements
(defun sum-all (lst)
  (cond ((null lst) 0)                    ; base case: return 0 when list is empty
        ((atom lst) lst)                  ; base case: return the element when only one element in list
        (t (+ (sum-all (car lst))         ; recursive call on first element of list to get sum of its elements
              (sum-all (cdr lst))))))     ; recursive call on rest of list to get sum of its elements
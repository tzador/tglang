(defclass animal ()         ;Defines a base class named "animal"
  ((name                   ;Declares an instance slot for 'name'
    :initarg :name
    :accessor animal-name)  ;Defines a reader function named "animal-name"
   species                 ;Declares an instance slot for 'species'
   (age                     ;Declares an instance slot for 'age'
    :initarg :age
    :accessor animal-age
    :initform 0)            ;Sets a default initial value of 0 for the slot
   (number-of-legs          ;Declares an instance slot for 'number-of-legs'
    :initarg :legs
    :accessor animal-legs)))
 
(defmethod speak ((animal animal))  ;Defines a method "speak" for the "animal" class
  (format t "Hello, I am ~a the ~a!" (animal-name animal) (animal-species animal)))
 
(defclass dog (animal)     ;Defines a subclass of "animal" named "dog"
  ((breed :initarg :breed   ;Declares an instance slot for 'breed'
          :accessor dog-breed)))  ;Defines a reader function named "dog-breed"
 
(defmethod speak ((dog dog))   ;Redefined "speak" method for the "dog" subclass
  (format t "Woof, woof, I am a ~a ~a!" (dog-breed dog) (animal-name dog))))
(defmethod print ((object person))
  "Prints the details of a person object."
  (print (format nil "Name: ~a, Age: ~d, Occupation: ~a" 
    (slot-value object 'name) (slot-value object 'age) (slot-value object 'occupation))))
 defclass account ()
  ((name
    :initarg :name
    :accessor name
    :documentation "The name of the account holder.")
   (balance
    :initform 0
    :accessor balance
    :documentation "The current balance of the account.")
   (transactions
    :initform ()
    :accessor transactions
    :documentation "A list of all transactions made on the account."))

(defmethod deposit ((account account) amount)
  "Adds the given amount to the account's balance and records the transaction."
  (setf (balance account) (+ (balance account) amount))
  (push (format nil "Deposit of ~d made on ~a" amount (format nil "~a" (get-universal-time))) (transactions account)))

(defmethod withdraw ((account account) amount)
  "Subtracts the given amount from the account's balance and records the transaction."
  (setf (balance account) (- (balance account) amount))
  (push (format nil "Withdrawal of ~d made on ~a" amount (format nil "~a" (get-universal-time))) (transactions account)))

(defun print-transactions (account)
  "Prints a list of all the transactions made on the account."
  (dolist (transaction (transactions account))
    (print transaction)))
;;; A block of code that performs quicksort on a list of numbers

(defun quicksort (list) ; defining the function
  (if (<= (length list) 1) ; base case
      list
      (let ((pivot (car list))) ; set pivot as first element
        (append (quicksort (remove-if-not (lambda (num) (< num pivot)) list)) ; recursive call for elements less than pivot
                (list pivot) ; add pivot to final list
                (quicksort (remove-if-not (lambda (num) (> num pivot)) list)))))) ; recursive call for elements greater than pivot
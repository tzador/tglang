; a recursive function to calculate the factorial of a given number
(defun factorial (n)
  "This function recursively calculates the factorial of n"
  (if (<= n 1)
      1
      (* n (factorial (- n 1)))))

; a function to sort a list of numbers in ascending order using insertion sort
(defun insertion-sort (list)
  "This function sorts a list of numbers in ascending order using insertion sort"
  (let* ((sorted-list (list (first list)))
         (unsorted-list (rest list)))
    ; recursive sorting function
    (labels ((insert (elem sorted-list)
                  (if (null sorted-list)
                      (list elem)
                      (if (<= elem (first sorted-list))
                          (cons elem sorted-list)
                          (cons (first sorted-list)
                                (insert elem
                                        (rest sorted-list)))))))
      (loop while unsorted-list
            do (setf sorted-list
                     (insert (first unsorted-list)
                             sorted-list)
                     unsorted-list (rest unsorted-list))))
    sorted-list))

; an example usage
(insertion-sort '(5 3 1 4 2))
; => (1 2 3 4 5)
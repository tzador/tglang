;;; define function to calculate the factorial of a number
(defun factorial (n)
  "Calculates the factorial of the given number using recursion."
  ;;; check for invalid input
  (when (<= n 0)
    (error "Number must be greater than zero."))
  ;;; define base case
  (if (= n 1)
      1
      ;;; calculate factorial recursively
      (* n (factorial (- n 1)))))
      
;;; call the function and store the result in a variable
(defvar num 5)
(defvar result (factorial num))
;;; print the result
(format t "The factorial of ~a is ~a." num result)
;; Define a function that takes in two lists of integers and returns their cartesian product

(defun cartesian (list1 list2)
  "Takes in two lists of integers and returns their cartesian product"
  (let ((result '()))
    (dolist (element1 list1)
      (dolist (element2 list2)
        (push (cons element1 element2) result)))
    result))

;; Example usage:

(cartesian '(1 2) '(3 4)) ;=> ((1 . 3) (1 . 4) (2 . 3) (2 . 4))

(cartesian '(-1 0 1) '(-2 -1 0 1 2)) ;=> ((-1 . -2) (-1 . -1) (-1 . 0) (-1 . 1) (-1 . 2) (0 . -2) (0 . -1) (0 . 0) (0 . 1) (0 . 2) (1 . -2) (1 . -1) (1 . 0) (1 . 1) (1 . 2))
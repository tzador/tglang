;; This is a function that takes in a list of numbers and returns the sum of all the odd numbers in the list

(defun sum-of-odd (list)
  (let ((sum 0)) ;; initializes sum variable
    (dolist (num list) ;; iterates through list
      (if (oddp num) ;; checks if number is odd
          (incf sum num))) ;; if odd, adds it to sum
    sum)) ;; returns sum

;; Example usage:

(sum-of-odd (list 1 2 3 4 5)) ;; returns 9
(sum-of-odd (list 2 4 6 8)) ;; returns 0
(sum-of-odd (list 1 3 5 7 9)) ;; returns 25
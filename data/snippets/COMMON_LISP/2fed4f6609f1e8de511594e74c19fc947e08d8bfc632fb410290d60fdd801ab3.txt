(defvar *data* '((1 2 3) (4 5 6) (7 8 9)))

;;; Function to flatten nested lists
(defun flatten (list)
  "Returns a flattened list of all elements in the provided nested list.
  Uses a helper function to recursively flatten each nested list element."
  (labels
      ((helper (list)
	 ;; Check if given element is a list, if not return it as a single element list
         (if (listp list)
	     ;; If it is a list, recursively call helper function on each element
	     (loop for element in list
		   collect (helper element))
	   (list list))) ;; Return the element in a list
    ;; Call helper function on the given list
    (apply #'append (helper list))))

;; Call the function on *data* and print the result
(print (flatten *data*))
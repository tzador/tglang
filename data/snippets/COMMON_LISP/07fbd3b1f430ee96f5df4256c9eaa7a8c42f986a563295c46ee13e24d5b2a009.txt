(defun sort-list (lst) ;define a function in COMMON_LISP called sort-list that takes in a list as its parameter
  (if (null lst) ;if the list is empty
      nil ;return nil
      (let ((pivot (car lst))) ;else create a pivot variable that is equal to the first element in the list
      (append (sort-list (remove-if (lambda (x) (< x pivot)) (cdr lst)))
              (list pivot)
              (sort-list (remove-if (lambda (x) (> x pivot)) (cdr lst)))))) ;recursively call the sort-list function on two sublists, one with elements smaller than the pivot and one with elements larger than the pivot, and append them together with the pivot in between
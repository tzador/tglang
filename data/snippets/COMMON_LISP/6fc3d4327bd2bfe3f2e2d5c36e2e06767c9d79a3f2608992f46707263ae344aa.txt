;; Define a function that takes in a list and checks if it contains only numbers
;; and returns the sum of all the numbers in the list
(defun sum-numbers (lst)
    (if (null lst) ;; Base case: If list is empty, return 0
        0
        (if (numberp (car lst)) ;; Check if first element is a number
            (+ (car lst) (sum-numbers (cdr lst))) ;; Add first element to sum, and recursively call function on remaining list
            (sum-numbers (cdr lst))))) ;; If first element is not a number, recursively call function on remaining list
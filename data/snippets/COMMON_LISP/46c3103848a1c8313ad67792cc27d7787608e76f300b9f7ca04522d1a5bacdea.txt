;;; Common Lisp Code Snippet
(let ((list (list 1 2 3))) ;;; creates a list containing numbers 1, 2 and 3
  (format t "The original list is: ~a~%" list) ;;; print the original list
  (let ((mapped-list (mapcar #'(lambda (n) (* n 2)) list))) ;;; creates a new list with each element in the original list multiplied by 2
    (format t "The mapped list is: ~a~%" mapped-list) ;;; print the mapped list
    (let ((reduced-list (reduce #'+ mapped-list))) ;;; adds all the elements in the mapped list together
      (format t "The reduced list is: ~a~%" reduced-list)))) ;;; print the reduced list
; This code snippet defines a function that takes in a list of numbers
; and returns the sum of all the numbers squared

(defun sum-of-squared (numbers)
  "Function to calculate the sum of squared numbers"
  (let ((sum 0))
    (dolist (num numbers)
      (incf sum (* num num)))
    sum))
; `defun` is used to define a function in COMMON_LISP, followed by the name of the function and the parameters it takes in.
; `numbers` is the parameter that represents the list of numbers passed in.
; `let` is used to create local variables, in this case the variable `sum` is initialized to 0.
; `dolist` is a loop that iterates through a list and executes a given code block for each element.
; `incf` is used to increment the value of a variable, in this case `sum`, by the value specified after it.
; `(* num num)` multiplies the number by itself, essentially squaring it.
; The final `sum` variable is returned as the output of the function.
;;; This is a function that calculates the nth Fibonacci number using dynamic programming
;;; (defun fib (n)
      (let ((fib-memo (make-array (1+ n) :initial-contents (list 0 1))))
          (labels ((fib-help (n)
                     (if (= n 0)
                         (aref fib-memo 0)
                         (if (= n 1)
                             (aref fib-memo 1)
                             (let ((result (+ (fib-help (- n 1)) (fib-help (- n 2)))))
                                 (setf (aref fib-memo n) result)
                                 result)))))
             (fib-help n))))

; Example usage:
; (fib 5)
; => 5
; (fib 10)
; => 55
; (fib 20)
; => 6765
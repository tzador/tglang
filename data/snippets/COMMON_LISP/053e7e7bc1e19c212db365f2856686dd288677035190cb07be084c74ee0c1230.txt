;;; This is a code snippet in COMMON_LISP that generates a list of the first 20 triangular numbers

;;; Define a function to generate the nth triangular number
(defun triangular (n)
    
    ;;; Initialize variables
    (let ((sum 0) (count 1))
        
        ;;; Loop through all numbers up to nth
        (loop while (<= count n) do
            
            ;;; Calculate the triangular number and add it to the sum
            (setq sum (+ sum count))
            
            ;;; Increase the count by 1
            (setq count (+ count 1))
        )
        ;;; Return the final sum
        sum
    )
)

;;; Define a function to generate the first 20 triangular numbers
(defun first-20-triangular ()
    
    ;;; Initialize variables
    (let ((triangular-list '()) (count 1))
        
        ;;; Loop through the first 20 numbers
        (loop while (<= count 20) do
            
            ;;; Generate the nth triangular number and add it to the list
            (setq triangular-list (append triangular-list (list (triangular count))))
            
            ;;; Increase the count by 1
            (setq count (+ count 1))
        )
        ;;; Return the final list
        triangular-list
    )
)

;;; Call the function to generate the first 20 triangular numbers and print the result
(print (first-20-triangular))
(defun quicksort (list) 
 "Function to implement quicksort algorithm in Common Lisp. Takes in a list as input"
  (if (null list) 
    nil ; base case, if list is empty, return nil
    (let ((pivot (car list))) ; set the pivot as the first element in the list
      (append 
        (quicksort (remove-if-not (lambda (x) (< x pivot)) (cdr list))) ; recursive call for elements smaller than pivot
        (list pivot) ; add the pivot to the sorted list
        (quicksort (remove-if-not (lambda (x) (> x pivot)) (cdr list))))))) ; recursive call for elements larger than pivot
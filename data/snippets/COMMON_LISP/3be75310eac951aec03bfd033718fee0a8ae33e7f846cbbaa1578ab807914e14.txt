;; Define a function that takes in a list of numbers and returns the sum
(defun sum (numbers)
  "Computes the sum of a list of numbers"
  (let ((total 0)) ; Initialize variable to store the sum
    (dolist (num numbers) ; Loop through each number in the list
      (incf total num)) ; Add current number to total
    total)) ; Return the final sum

;; Example usage
(sum '(1 2 3 4 5)) ; Output: 15

;; Define a function that calculates the average of a list of numbers
(defun average (numbers)
  "Computes the average of a list of numbers"
  (let ((sum (sum numbers))) ; Calculate sum of numbers using previously defined function
    (/ sum (length numbers)))) ; Divide sum by number of numbers in the list to get average

;; Example usage
(average '(6 7 8)) ; Output: 7

;; Define a function that checks if a number is prime
(defun is-prime (num)
  "Checks if a number is prime"
  (cond
    ((= num 2) t) ; 2 is a prime number
    ((<= num 1) nil) ; All numbers <= 1 are not prime
    ((evenp num) nil) ; Even numbers (excluding 2) are not prime
    (t ; For any other number
      (do ((i 3 (+ i 2))) ((> i (isqrt num)) t) ; Check all odd numbers up to the square root
        (when (zerop (rem num i)) (return nil)))))) ; If number is divisible by any of the checked numbers, it is not prime

;; Example usage
(is-prime 7) ; Output: T (7 is prime)
(is-prime 12) ; Output: NIL (12 is not prime)
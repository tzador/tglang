;; This code snippet is a function that sorts a list of numbers in ascending order using the bubble sort algorithm
(defun bubble-sort (parameter) ; Defines the function with a parameter that takes in a list of numbers
  (let ((sorted-parameter nil)) ; Creates a new variable to store the sorted list
    (loop while parameter ; Loops through the list while there are still elements left
      do (setf parameter (remove (car parameter) parameter) ; Removes the first element from the list
        sorted-parameter (append sorted-parameter (list (car parameter))) ; Adds it to the sorted list
        (loop for num in parameter ; Loops through the remaining elements in the list
          do (cond ((null parameter) ; Checks if the list is empty
                   (return (reverse sorted-parameter))) ; If it is empty, returns the sorted list
                  ((< (car num) (car parameter)) ; Compares the first element to the current element in the list
                   (setf parameter (remove num parameter)) ; If the current element is smaller, remove it from list
                   (setf parameter (append parameter (list (car num)))) ; Add it back to the end of the list
                  (t ; If the current element is not smaller, do nothing
                   )))))
    sorted-parameter)) ; Returns the sorted list
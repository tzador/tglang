;;; Logic Programming in Common Lisp
;; Define a predicate to check if a list is a sublist of another list
;; Inputs:
;;  - list1: the candidate list to check
;;  - list2: the list being checked for a sublist
;; Outputs:
;;  - t if list2 is a sublist of list1, nil otherwise
(defun sublistp (list1 list2)
  (if (null list2)
      t
      (if (subsetp list2 list1)
          t
          (if (subsetp list2 (rest list1))
              t
              (sublistp (rest list1) list2)
          )
      ) 
  )
)

;; Define a helper function to check if a list is a subset of another list
;; Inputs:
;;  - list1: the candidate list to check
;;  - list2: the list being checked for a subset
;; Outputs:
;;  - t if list2 is a subset of list1, nil otherwise
(defun subsetp (list1 list2)
  (if (null list2)
      t
      (if (member (first list2) list1)
          (subsetp list1 (rest list2))
          nil
      )
  )
)

;; Example Usage:
(sublistp '(1 2 3 4) '(2 3)) ; Output: t
(sublistp '(1 2 3 4) '(4 5 6)) ; Output: nil
(sublistp '(1 2 3) '(3 4 5)) ; Output: nil
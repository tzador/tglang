;; Define a function that checks if a number is prime

(defun is-prime (num)
"Function that checks if the input number is prime."

  ;; Check if number is less than 2
  (if (< num 2)
      ;; If less than 2, return nil (false)
      nil
      ;; Else, continue with prime check algorithm
      (let ((i 2))
        ;; Set counter variable i to 2
        (while (<= i (/ num 2))
          ;; Iterate while i is less than or equal to half of num
          (if (zerop (mod num i))
              ;; If num is divisible by i, it is not prime
              ;; Return nil (false)
              (return-from is-prime nil)
              ;; Else, increment i by 1
              (incf i)))
        ;; If the function has not returned nil at this point,
        ;; the number is prime, so return t (true)
        t)))
;; Call function with example value
(is-prime 13) ;; Output: T
(defun max-num (x y) ;;Defining a function named 'max-num'
    "This function takes in two numbers and returns the larger of the two." ;;Documentation string
    (if (> x y)      ;;Checking if x is greater than y
        x            ;;If true, return x
        y))          ;;If false, return y

(defun min-num (x y) ;;Defining a function named 'min-num'
    "This function takes in two numbers and returns the smaller of the two." ;;Documentation string
    (if (< x y)      ;;Checking if x is less than y
        x            ;;If true, return x
        y))          ;;If false, return y

(defun sort-list (lst)                                 ;;Defining a function named 'sort-list'
    "This function takes in a list and returns a sorted list." ;;Documentation string
    (if (null lst)                                      ;;Checking if list is empty
        nil                                             ;;If true, return empty list
        (cons (min-num (car lst) (sort-list (cdr lst))) ;;Else, call min-num function to find smallest element and
        (remove (min-num (car lst) (sort-list (cdr lst))) ;;add it to the sorted list while removing it from the original list
        (cons (max-num (car lst) (sort-list (cdr lst))) ;;Call max-num function to find largest element and
        (remove (max-num (car lst) (sort-list (cdr lst))) ;;add it to the sorted list while removing it from the original list
        (sort-list (cdr lst)))))))                       ;;Repeat until the original list is empty
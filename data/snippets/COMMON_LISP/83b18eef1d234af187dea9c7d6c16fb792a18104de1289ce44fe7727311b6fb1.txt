;; Defining a function `sort-array` that takes in an array and sorts it in ascending order using the selection sort algorithm

(defun sort-array (arr)
  (let ((len (length arr))) ;; calculating the length of the array
    (dotimes (i len) ;; loops through each element in the array 
      (let ((min-index i) ;; setting the starting index as the minimum value
            (min-elem (aref arr i))) ;; setting the starting element as the minimum value
        (dotimes (j len i) ;; loops through remaining elements in the array starting from the current index
          (when (< (aref arr j) min-elem) ;; check if current element is smaller than minimum element
            (setf min-index j) ;; update index of minimum value
            (setf min-elem (aref arr j)))) ;; update minimum element
        (rotatef (aref arr i) (aref arr min-index)))) ;; swap current element with minimum element
  arr) ;; return sorted array
(defun search (x lst) ; defines a function named "search" with parameters x and lst 
  (cond ((null lst) nil) ; conditional statement, if lst is null, return nil (null list)
        ((eq x (car lst)) t) ; if x is equal to the first element in lst, return true
        ((listp (car lst)) ; checks if the first element in lst is a list, if it is, recurse and search within it
          (or (search x (car lst)) ; checks if x is in the first element of lst
              (search x (cdr lst)))) ; checks if x is in the rest of the elements in lst
        (t (search x (cdr lst))))) ; if none of the above conditions are met, recurse and search in the rest of lst

;; Example usage:
(search 3 '(1 2 (3 4) 5 6)) ; returns true
(search 7 '(1 2 (3 4) 5 6)) ; returns nil
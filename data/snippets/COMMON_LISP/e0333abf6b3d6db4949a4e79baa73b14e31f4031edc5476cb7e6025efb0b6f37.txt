;;; Declaration of the function prime-number-check which takes in one parameter, n
(defun prime-number-check (n)
  "Checks if the given number is prime or not."
  (let ((is-prime t))
    ;; Checks if the given number is 2 or 3 which are prime by default
    (when (or (= n 2) (= n 3))
      t)
    ;; Checks if the given number is divisible by 2
    (when (or (= (mod n 2) 0))
      (setf is-prime nil))
    ;; Checks if the given number is divisible by any number between 3 and sqrt(n)
    ;; sqrt(n) + 1 is used to include the value of sqrt(n) in the loop
    (dotimes (i (+ (floor (sqrt n)) 1))
      ;; Checks if the value of i is divisible by the given number
      (when (and is-prime (= (mod n i) 0))
        (setf is-prime nil)))
    ;; Returns the final value of is-prime
    is-prime))
(defvar sample-list '(1 2 3)) ; Define a variable 'sample-list' with a list containing the numbers 1, 2, and 3
(format t "The list has ~a elements.~%" (length sample-list)) ; Print a message telling the number of elements in the list using the 'length' function
(setf (nth 2 sample-list) "changed") ; Change the value at the 2nd index of the list to "changed" using the 'setf' function
(format t "The 2nd element of the list is ~a.~%" (nth 2 sample-list)) ; Print a message showing the changed value using the 'nth' function
(let ((reversed-list (reverse sample-list))) ; Declare a new variable 'reversed-list' with the list reversed using the 'reverse' function
  (format t "The reversed list is ~a.~%" reversed-list)) ; Print a message showing the reversed list
(defun add-elements (list) ; Define a function named 'add-elements' that takes in a list as its input
  (reduce #'+ list)) ; Use the 'reduce' function and the '+' operator to sum all the elements in the list
(format t "The sum of all elements in the list is ~a.~%" (add-elements sample-list)) ; Print a message showing the sum of all elements in the list using the 'add-elements' function
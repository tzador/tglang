;; This function accepts an input list and a predicate function
(defun filter-list (input-list predicate)
  "Filters the input list based on the result of the predicate function. 
 Returns a new list with the elements that passed the predicate."
  ;; Define a variable to store the filtered list
  (let ((filtered-list ()))
    ;; Loop through the input list 
    (dolist (i input-list)
      ;; If the predicate function returns true for the element, add it to the filtered list
      (when (funcall predicate i)
        (push i filtered-list)))
    ;; Return the filtered list
    filtered-list)) 

;; Define the input list
(setq numbers '(1 2 3 4 5 6 7 8 9 10))
;; Define the predicate function, checks if the element is even
(defun even? (num)
  (eq 0 (mod num 2)))
;; Call the filter-list function and pass in the input list and predicate function
(filter-list numbers 'even?)
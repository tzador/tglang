(defstruct person
  name
  age
  profession)

(defvar *people* nil)

(defun add-person (name age profession)
  "Adds a new person to the database."
  (push (make-person :name name :age age :profession profession) *people*))

(defun list-people ()
  "Shows a list of all the people in the database."
  (loop for person in *people*
    do (format t "Name: ~a | Age: ~a | Profession: ~a~%" (person-name person) (person-age person) (person-profession person))))

(defun remove-person (name)
  "Removes a person from the database."
  (setf *people* (remove-if #'(lambda (person) (string= (person-name person) name)) *people*)))

(defun find-person (name)
  "Finds and displays a person's information."
  (let ((person (find name *people* :key #'person-name :test #'string=)))
    (when person
      (format t "Name: ~a | Age: ~a | Profession: ~a~%" (person-name person) (person-age person) (person-profession person)))))

(add-person "Jane" 25 "Teacher")
(add-person "John" 30 "Engineer")
(add-person "Sarah" 40 "Lawyer")

(format t "List of people:~%")
(list-people)

(format t "Find Sarah:~%")
(find-person "Sarah")

(format t "Remove John:~%")
(remove-person "John")

(format t "List of people:~%")
(list-people)
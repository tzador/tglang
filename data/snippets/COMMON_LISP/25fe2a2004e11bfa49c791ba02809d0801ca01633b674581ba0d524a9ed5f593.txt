;;; This program creates a list of prime numbers
;;; up to a user-specified limit.

(defun prime-list (limit)                   ; define a function with one parameter 'limit'
  (let ((primes '(2)))                      ; initialize a list 'primes' with first prime number 2
    (loop for i from 3 to limit by 2         ; loop through odd numbers from 3 to limit
          do (when (loop for j in primes    ; for each number, check if it is divisible by any
                              when (zerop (mod i j))     ; prime number before it
                              do (return t))
               (push i primes)))             ; if not divisible, add it to the list of primes
    primes))                                ; return the list of primes

(format t "Enter a limit: ")                ; ask user to enter a limit
(let ((limit (parse-integer (read-line))))  ; read limit entered by user and store it in 'limit'
  (format t "Prime numbers up to ~a: ~a~%" limit (prime-list limit)))   ; print prime numbers up to limit
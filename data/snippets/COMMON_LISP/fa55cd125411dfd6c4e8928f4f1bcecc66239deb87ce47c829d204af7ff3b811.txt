(defclass person ()  ;define a person class
  ((first-name :accessor first-name :initarg :first-name) ;create a first-name property for objects of this class
   (last-name :accessor last-name :initarg :last-name) ;create a last-name property for objects of this class
   (age :accessor age :initarg :age :initform 0) ;create an age property for objects of this class with a default value of 0
   (address :accessor address :initarg :address :initform nil)) ;create an address property for objects of this class with a default value of nil
  (:documentation "A class representing a person")) ;add documentation for this class

(defmethod introduce-yourself ((person person))
  "A method that prints out a friendly introduction for a person object"
  (format t "Hello, my name is ~A ~A and I am ~A years old. Nice to meet you!" 
  (first-name person) (last-name person) (age person))) ;define the introduce-yourself method to print out the person's name and age

(defparameter *bob* (make-instance 'person ;create an object named *bob* of the person class
                      :first-name "Bob"
                      :last-name "Smith"
                      :age 25
                      :address "123 Main St")) ;provide values for the properties of *bob*

(introduce-yourself *bob*) ;call the introduce-yourself method on *bob* to print out his introduction
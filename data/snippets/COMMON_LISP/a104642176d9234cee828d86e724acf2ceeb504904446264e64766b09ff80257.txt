(defun quicksort (lst) ; function to perform quicksort on a list
  "Takes a list and performs the quicksort algorithm on it, returns sorted list."
  (if (null lst)      ; if list is empty, just return it
      lst
      (let ((pivot (first lst)) ; pick the first element as pivot
            (rest (rest lst))) ; set rest of list as remaining elements
        (append             ; concatenate the following lists:
         (quicksort        ; the result of quicksorting elements smaller than pivot
          (remove-if      ; remove from list elements that:
           #'(lambda (x) ; satisfy the following condition:
               (>= x pivot)) ; element is greater than or equal to pivot
           rest))            ; remaining elements
         (list pivot)       ; the pivot element itself
         (quicksort         ; the result of quicksorting elements greater than pivot
          (remove-if       ; remove from list elements that:
           #'(lambda (x)  ; satisfy the following condition:
               (<= x pivot)) ; element is smaller than or equal to pivot
           rest))))))           ; remaining elements
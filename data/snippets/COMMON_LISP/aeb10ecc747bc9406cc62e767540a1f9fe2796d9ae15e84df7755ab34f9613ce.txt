(defun quicksort (lst)
  (if (null lst)
      nil
      (let ((pivot (first lst))) ; assign the first element as the pivot
        (append ; append the results of these three operations to get the final sorted list
          (quicksort (remove-if-not #'(lambda (x) (< x pivot)) (rest lst))) ; recursively call quicksort for values less than pivot
          (list pivot) ; append pivot to the sorted list
          (quicksort (remove-if-not #'(lambda (x) (>= x pivot)) (rest lst)))))) ; recursively call quicksort for values greater than or equal to pivot
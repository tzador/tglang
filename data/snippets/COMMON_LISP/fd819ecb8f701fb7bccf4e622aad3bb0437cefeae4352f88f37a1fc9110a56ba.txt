;;; This is a complex function that implements the Ackermann-Peter function
;;; It takes in two parameters, m and n, and returns an integer
(defun ackermann (m n)
  (cond ((= m 0) (+ n 1)) ; if m=0, return n+1
        ((= n 0) (ackermann (- m 1) 1)) ; if n=0, recurse with m-1 and 1
        (t (ackermann (- m 1) ; recurse with m-1 and recurse again with m and n-1
                      (ackermann m (- n 1))))))

;;; Examples of using the function
(ackermann 0 3) ; returns 4
(ackermann 2 3) ; returns 9
(ackermann 3 4) ; returns 125
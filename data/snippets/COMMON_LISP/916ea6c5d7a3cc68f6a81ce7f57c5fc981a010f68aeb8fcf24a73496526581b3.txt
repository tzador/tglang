;; Define a function 'verify_password' that takes in a password and returns a boolean value indicating if it is strong enough

(defun verify_password (password)
    "Function to verify the strength of a password"
    (let ((lower-case-letters (make-string 26 :initial-element #\a)) ; Initialize a string with all lower-case letters
          (upper-case-letters (make-string 26 :initial-element #\A)) ; Initialize a string with all upper-case letters
          (numbers (make-string 10 :initial-element #\0)) ; Initialize a string with all numbers
          (special-chars "!@#$%^&*?")) ; Initialize a string with special characters
        (let ((contains-lower-case (loop for char across password ; Loop through password and check for lower-case letters
                                        thereis (find char lower-case-letters)))
              (contains-upper-case (loop for char across password ; Loop through password and check for upper-case letters
                                        thereis (find char upper-case-letters)))
              (contains-number (loop for char across password ; Loop through password and check for numbers
                                     thereis (find char numbers)))
              (contains-special-char (loop for char across password ; Loop through password and check for special characters
                                            thereis (find char special-chars))))
            ; Check if password meets all requirements
            (and (>= (length password) 8) contains-lower-case contains-upper-case contains-number contains-special-char)))))
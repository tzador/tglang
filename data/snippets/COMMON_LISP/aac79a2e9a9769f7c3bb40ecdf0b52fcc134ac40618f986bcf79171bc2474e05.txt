(defclass car () ;defines a class named car
  
      ((brand :initarg :brand ;defines an attribute named brand with the ablity to be initialized 
              :accessor brand) ;defines a method to access the brand attribute
    
       (model :initarg :model ;defines an attribute named model with the ability to be initialized 
              :accessor model) ;defines a method to access the model attribute
    
       (year :initarg :year ;defines an attribute named year with the ability to be initialized 
             :accessor year) ;defines a method to access the year attribute
    
       (color :initarg :color ;defines an attribute named color with the ability to be initialized 
              :accessor color) ;defines a method to access the color attribute
    
       (price :initarg :price ;defines an attribute named price with the ability to be initialized 
              :accessor price) ;defines a method to access the price attribute
    
       (mileage :initarg :mileage ;defines an attribute named mileage with the ability to be initialized 
                :accessor mileage) ;defines a method to access the mileage attribute
    
       (condition :initform "used" ;sets a default value for attribute condition 
                  :reader condition))) ;defines a method to read the condition attribute
    
    (defun set-year (car year) ;defines a function named set-year that takes in a car object and a year parameter
    
      (setf (year car) year)) ;sets the year attribute of the car object to the value of the year parameter
    
    (defun increase-mileage (car miles) ;defines a function named increase-mileage that takes in a car object and a miles parameter
    
      (incf (mileage car) miles)) ;increases the value of the mileage attribute of the car object by the value of the miles parameter
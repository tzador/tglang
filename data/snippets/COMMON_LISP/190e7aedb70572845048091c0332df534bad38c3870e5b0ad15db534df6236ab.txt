;; This function calculates the factorial of a given number
(defun factorial (n)
  "Calculates the factorial of a given number"
  (if (< n 2)
    1
    (* n (factorial (- n 1)))))

;; This function prints the first n Fibonacci numbers
(defun fibonacci (n)
  "Prints the first n Fibonacci numbers"
  (when (> n 0)
    (let ((a 0)
          (b 1)
          (count 0))
      (format t "Fibonacci series:~%~%~d~%~%~d" a b)
      (loop while (< count n)
       do
        (let ((next (+ a b)))
          (format t "~%~d" next)
          (setq a b)
          (setq b next)
          (incf count))))))

;; This function checks if a given number is prime or not
(defun is-prime? (n)
  "Checks if a given number is prime or not"
  (loop for i from 2 to (isqrt n)
       if (zerop (mod n i))
       do (return nil)
       finally (return t)))
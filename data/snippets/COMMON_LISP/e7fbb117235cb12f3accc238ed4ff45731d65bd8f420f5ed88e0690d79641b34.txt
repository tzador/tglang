;;This is a function that takes two arguments, a list and a predicate, and returns another list with the elements that satisfy the given predicate
(defun filter (list predicate)
  "Takes a list and a predicate function and returns a new list with the elements that satisfy the predicate"
  (if (null list) ;base case: if list is empty, return empty list
      nil
      (let ((head (car list)) ;else, set head to first element of list
            (tail (cdr list))) ;and tail to rest of list
        (if (funcall predicate head) ;if head satisfies predicate
            (cons head (filter tail predicate)) ;prepend head to filtered list of tail
            (filter tail predicate))))) ;else, filter tail and return it


;;Example of using the filter function to filter out even numbers from a list
(filter '(1 2 3 4 5) #'evenp) ;output: (2 4)
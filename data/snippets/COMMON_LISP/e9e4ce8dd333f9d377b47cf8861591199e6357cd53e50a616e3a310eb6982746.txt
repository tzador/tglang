;; Define a function named factorial that takes in one parameter, n
(defun factorial (n)
  ;; Declare a local variable, result, to store the output
  (let ((result 1))
    ;; Use a loop to calculate the factorial
    (loop for i from 1 to n
          do (setf result (* result i)))
    ;; Return the final result
    result))
 
;; Call the function with a value of 5 and print the result
(print (factorial 5))

;; Output:
 
; Check if the number is 0 or 1, and return 1 if it is
; Otherwise, recursively call the function with n-1 and multiply it by n
; This will calculate the factorial
(defun factorial (n)
  (if (or (= n 0) (= n 1))
      1
      (* n (factorial (- n 1)))))

;; Call the function with a value of 5 and print the result
(print (factorial 5))

;; Output: 120
;; This is a function that takes in two lists as parameters and returns a new list with unique elements from both lists

(defun unique-list (list1 list2)

;; Define an empty list to store unique elements
(let ((uniques ()))

;; Loop through each element in list1
(dolist (elem list1)

;; Check if the element is already present in the uniques list
(if (not (member elem uniques))

;; If not present, add it to the uniques list
(push elem uniques)))

;; Loop through each element in list2
(dolist (elem list2)

;; Check if the element is already present in the uniques list
(if (not (member elem uniques))

;; If not present, add it to the uniques list
(push elem uniques)))

;; Return the list of unique elements
uniques))

;; Example input and output
(unique-list '(1 2 3 4) '(3 4 5 6)) ;; Output: (1 2 3 4 5 6)
(unique-list '(hello world) '(hello common lisp)) ;; Output: (world common lisp)
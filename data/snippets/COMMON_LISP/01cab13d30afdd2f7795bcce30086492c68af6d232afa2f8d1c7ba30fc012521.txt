(IN-PACKAGE :MY-PACKAGE)
;;creates a new package with the name MY-PACKAGE and sets it as the current package

(DEFPACKAGE MY-PACKAGE
  (:USE :COMMON-LISP)
  (:IMPORT-FROM :CL-USER :RANDOM))
  ;;defines a new package MY-PACKAGE, importing symbols from the COMMON-LISP package
  ;;and importing the symbol RANDOM from the CL-USER package

(IN-PACKAGE :MY-PACKAGE)
;;sets the current package to MY-PACKAGE

(DEFUN RANDOM-NUMBERS (N)
  "Generates N random numbers between 1 and 100"
  (LOOP FOR I FROM 1 TO N COLLECT (RANDOM 100)))
  ;;defines a function called RANDOM-NUMBERS that takes in an argument N
  ;;and uses a loop to generate N random numbers between 1 and 100 using the RANDOM function

(DEFCLASS PERSON ()
  ((NAME :ACCESSOR NAME :INITARG :NAME)
   (AGE :ACCESSOR AGE :INITARG :AGE :INITFORM 0))
   (:DOCUMENTATION "A class representing a person with a name and age"))
   ;;defines a class called PERSON with slots for NAME and AGE
   ;;and sets the default value for AGE to 0
   ;;also adds documentation for the class

(DEFGENERIC INTRODUCE (PERSON)
  (:DOCUMENTATION "A generic function to introduce a person"))
  ;;defines a generic function called INTRODUCE that accepts a PERSON as an argument
  ;;also adds documentation for the function

(DEFMETHOD INTRODUCE ((PERSON PERSON))
  (FORMAT T "Hello, my name is ~A and I am ~D years old." (NAME PERSON) (AGE PERSON)))
  ;;defines a method for the INTRODUCE function that is specialized for the PERSON class
  ;;prints out a greeting using the NAME and AGE of the person passed in as an argument

(DEFCLASS STUDENT (PERSON)
  ((MAJOR :ACCESSOR MAJOR :INITARG :MAJOR :INITFORM "Undeclared")))
  ;;defines a class called STUDENT that inherits from the PERSON class
  ;;adds a slot for MAJOR with a default value of "Undeclared"

(DEFGENERIC STUDY (STUDENT)
  (:DOCUMENTATION "A generic function for students to study"))
  ;;defines a generic function called STUDY that accepts a STUDENT as an argument
  ;;also adds documentation for the function

(DEFMETHOD STUDY ((STUDENT STUDENT))
  (FORMAT T "I am currently studying ~A." (MAJOR STUDENT)))
  ;;defines a method for the STUDY function that is specialized for the STUDENT class
  ;;prints out the major of the student passed in as an argument

(LET ((PERSON1 (MAKE-INSTANCE 'PERSON :NAME "John" :AGE 25))
      (STUDENT1 (MAKE-INSTANCE 'STUDENT :NAME "Jane" :AGE 22 :MAJOR "Computer Science")))
  (INTRODUCE PERSON1)
  (INTRODUCE STUDENT1)
  (STUDY STUDENT1))
  ;;uses the MAKE-INSTANCE function to create instances of the PERSON and STUDENT classes
  ;;passes in values for the slots and stores them in variables
  ;;then calls the INTRODUCE function for both instances, as well as the STUDY function for the STUDENT instance
  ;;outputs:
  ;;Hello, my name is John and I am 25 years old.
  ;;Hello, my name is Jane and I am 22 years old.
  ;;I am currently studying Computer Science.
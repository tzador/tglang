(defmacro case (key ((nil) &body body))
            #|
            This is a macro that takes a key and a list of clauses.
            The key is matched against each clause and if there is no match,
            the code in the body is executed.
            If the key is nil, the code in the body will always be executed.
            |#
  (let ((test (gensym))
        (keyval (gensym)))
    `(let ((,test ,key)
           (,keyval nil))
       (cond ,@(mapcar (lambda (clause)
                         (cons `(eql ,keyval)
                               clause))
                       body)))))
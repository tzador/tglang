(defvar *n* 1000) ; Defining a global variable

(defun sum (n) ; Defining a function to calculate sum from 0 to n 
  (if (= n 0) ; Base case, when n is 0
    0 ; Return 0
    (+ n (sum (- n 1))))) ; Otherwise, add n to the sum of (n-1)
  
(defun sum-of-divisibles (n) ; Defining a function to calculate sum of all numbers from 0 to n that are divisible by 3 or 5
  (let ((sum 0)) ; Creating a local variable sum and setting it to 0
    (dotimes (i n) ; Looping from 0 to n-1
      (if (or (= (mod i 3) 0) (= (mod i 5) 0)) ; If i is divisible by 3 or 5, add it to sum
        (setq sum (+ sum i)))) ; Update sum with new value
    sum)) ; Return sum
  
(format t "The sum of all numbers from 0 to ~a that are divisible by 3 or 5 is ~a." *n* (sum-of-divisibles *n*)) ; Print the result
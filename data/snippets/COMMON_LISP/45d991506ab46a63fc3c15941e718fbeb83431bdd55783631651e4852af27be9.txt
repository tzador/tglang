;; Define function to check if input is a prime number
(defun is-prime (num)
  "Function to check if input NUM is a prime number."
  (cond ((<= num 1) nil) ; return nil if the input number is less than or equal to 1
        ((= num 2) t) ; return true if the input number is equal to 2
        ((evenp num) nil) ; return nil if the input number is even
        (t ; if none of the above cases are true
         (loop for i from 3 to (isqrt num) by 2 ; loop through odd numbers from 3 to the square root of input number
               if (= (mod num i) 0) ; check if input number is divisible by current number in loop
               return nil ; if divisible, return nil
               finally (return t))))) ; if not divisible, return true

;; Define function to generate a list of all prime numbers in a given range
(defun primes-in-range (start end)
  "Function to generate a list of all prime numbers between START and END."
  (loop for i from start to end
        if (is-prime i) ; call the is-prime function to check if current number is prime
        collect i)) ; if prime, add to list

(primes-in-range 1 100) ; returns list of all prime numbers between 1 and 100, in this case: (2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)
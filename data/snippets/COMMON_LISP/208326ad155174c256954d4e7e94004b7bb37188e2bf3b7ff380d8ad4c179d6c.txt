;; A function to calculate the area of a circle
(defun area (radius)
  "Function that takes in a radius and calculates the area of a circle"
  (* pi (* radius radius)))

;; A function to calculate the circumference of a circle
(defun circumference (radius)
  "Function that takes in a radius and calculates the circumference of a circle"
  (* 2 pi radius))

;; A function to check if a number is odd or even
(defun odd-or-even (num)
  "Function that checks if a number is odd or even"
  (if (evenp num)
      "The number is even."
      "The number is odd."))

;; A function to calculate the factorial of a number
(defun factorial (num)
  "Function that calculates the factorial of a number"
  (if (= num 1)
      1
      (* num (factorial (- num 1)))))

;; A function to calculate the nth Fibonacci number
(defun fibonacci (n)
  "Function that calculates the nth Fibonacci number"
  (if (<= n 2)
      1
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

;; A function to calculate the sum of a list of numbers
(defun sum (nums)
  "Function that calculates the sum of a list of numbers"
  (if (null nums)
      0
      (+ (car nums) (sum (cdr nums)))))

;; A function for breadth-first search in a graph
(defun bfs (graph start)
  "Function for performing breadth-first search in a graph"
  (let ((visited (list start))
        (queue (list start)))
    (while queue
      (setf current (pop queue))
      (dolist (neighbor (gethash current graph))
        (unless (member neighbor visited)
          (push neighbor visited)
          (push neighbor queue)))
    visited)))

;; A class representing a person with a name and age
(defclass person ()
  ((name :accessor name :initarg :name)
   (age :accessor age :initarg :age)))

;; A method to print out the person's information
(defmethod print-info ((person person))
  "Method that prints out the name and age of a person"
  (format t "Name: ~a, Age: ~d" (name person) (age person)))

;; An example of creating a person object
(let ((john (make-instance 'person :name "John Doe" :age 25)))
  (print-info john))
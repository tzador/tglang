(defun merge-sort (list)
  "Implements the merge-sort algorithm for sorting a list of integers in ascending order.
  Takes in a list, recursively divides and merges it until it is sorted.
  Returns the sorted list."
  (if (<= (length list) 1)
      list
      (let* ((mid (floor (/ (length list) 2))) ; calculates the middle point for splitting
             (left (merge-sort (subseq list 0 mid))) ; recursively calls merge-sort on the left half
             (right (merge-sort (subseq list mid)))) ; recursively calls merge-sort on the right half
        (merge left right)))) ; merges the two sorted halves


;; Example:
(merge-sort '(7 5 2 9 3))
;; Output:
(2 3 5 7 9)
;;;; an example program in COMMON_LISP

;;; define a function that recursively calculates the n factorial
(defun factorial (n)
  "Returns the factorial of n recursively"
  (if (<= n 1)
      1
      (* n (factorial (- n 1)))))

;;; test the function with various inputs
(format t "Factorial of 5 is ~a~%" (factorial 5))  ; prints "Factorial of 5 is 120"
(format t "Factorial of -3 is ~a~%" (factorial -3))  ; prints "Factorial of -3 is 1"

;;; define a class for representing a shape
(defclass shape ()
  ((color :accessor shape-color
          :initarg :color
          :initform 'black)
   (size :accessor shape-size
         :initarg :size
         :initform 1)))

;;; define a method for calculating the area of a shape
(defmethod area ((shape shape))
  "Returns the area of the shape"
  (shape-size shape))

;;; create an instance of the shape class with a specific color and size
(defvar my-shape (make-instance 'shape :color 'red :size 5))

;;; calculate and print the area of the shape
(format t "Area of my shape is ~a~%" (area my-shape))  ; prints "Area of my shape is 5"
;;; recursive function to calculate the nth Fibonacci number

;;; define function with n as a parameter and initialize accumulator variables
(defun fibonacci (n)
  (labels ((fib-aux (n acc1 acc2)
             ;;; base case: return acc1 when n = 0
             (if (= n 0)
               acc1
               ;;; recursive case: call fib-aux with updated accumulator values
               (fib-aux (- n 1) acc2 (+ acc1 acc2)))))
    ;;; call helper function with n, initial acc1 and acc2 values
    (fib-aux n 0 1)))
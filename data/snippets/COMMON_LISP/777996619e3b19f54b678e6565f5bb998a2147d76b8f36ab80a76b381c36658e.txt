(defclass person                   ; Define the new class 'person'
  ((name                             ; Name slot for storing name of person
    :initarg :name                    ; Keyword argument for `initialize-person`
    :initform nil)                    ; Default value set to `nil`
   (age                              ; Age slot for storing age of person
    :initarg :age                     ; Keyword argument for `initialize-person`
    :initform (error "Age must be provided"))   ; Checking for presence of age
   (gender                           ; Gender slot for storing gender
    :initarg :gender                  ; Keyword argument for `initialize-person`
    :initform nil)                    ; Default value set to `nil`
   (height                           ; Height slot for storing height of person
    :initarg :height                  ; Keyword argument for `initialize-person`
    :initform nil))                   ; Default value set to `nil`
  
  (:documentation "A class defining a person and their attributes") ; Documentation string 
  
  (:default-initargs                 ; Default keyword arguments for `initialize-instance`
   :name "John Doe"
   :age 30
   :gender "male"
   :height 180))                    ; Defining default values for keyword arguments for `make-person`
									 ; The following is an example of using the class
(let ((person (make-instance 'person :name "Jane Smith" :age 25 :height 165)))  ; Creating a new instance of `person` class and providing values for the `name`, `age` and `height` slots
  (format t "The person's name is ~a.~%" (slot-value person 'name))  ; Accessing and printing the value of the `name` slot for the `person` instance
  (format t "The person's age is ~a.~%" (slot-value person 'age))    ; Accessing and printing the value of the `age` slot for the `person` instance
  (format t "The person's height is ~a.~%" (slot-value person 'height)))  ; Accessing and printing the value of the `height` slot for the `person` instance
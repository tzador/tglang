#|
This code snippet generates a list of all the prime numbers less than or equal to the given input number
Inputs:
- `n`: integer number
Outputs:
- list of prime numbers less than or equal to `n`

Example:
Input: 10
Output: (2 3 5 7)

|#

(defun prime-list (n)
    (let ((result (list)))
        (do ((i 2 (+ i 1)))
            ((> i n) result)
          (if (is-prime i)
              (setf result (append result (list i)))))))


(defun is-prime (x)
    (do ((j 2 (+ j 1)))
        ((> j (* x x)) t)
        (when (even-dividable x j)
            (return nil))))

(defun even-dividable (x y)
    (= (mod x y) 0))

(prime-list 10)
(defun fibonacci (n) ;defines a function named fibonacci that takes in a parameter n
  (if (or (eql n 0) (eql n 1)) ;if n is 0 or 1
      (return-from fibonacci n) ;return n
      (let ((prev1 0) ;define local variable prev1 and assign value of 0
            (prev2 1) ;define local variable prev2 and assign value of 1
            (curr 1)) ;define local variable curr and assign value of 1 
        (loop for i from 2 to n do ;loop from 2 to n
          (setf curr (+ prev1 prev2)) ;curr equals prev1 + prev2
          (setf prev1 prev2) ;set prev1 to prev2
          (setf prev2 curr) ;set prev2 to curr
        )
        (return-from fibonacci curr) ;return curr
      )
  )
)
(defun insertion-sort (list)
  "Sorts a list in ascending order using the insertion sort algorithm"
  (let ((n (length list)))              ;define n as the length of the list
    (do ((i 1 (+ i 1)))                 ;loop from i=1 to n 
        ((> i n))                       ;when i > n, stop loop
      (let ((key (nth i list)))         ;define key as element at index i
        (do ((j (- i 1) (- j 1)))       ;loop from j=i-1 to 0 
            ((< j 0) list)              ;when j < 0, return the sorted list
          (let ((current (nth j list))) ;define current as element at index j
            (when (> current key)       ;if current > key,
              (setf (nth (+ j 1) list) current)) ;move current to next index in list
            (setf (nth j list) key)))))) ;set key at index j in list
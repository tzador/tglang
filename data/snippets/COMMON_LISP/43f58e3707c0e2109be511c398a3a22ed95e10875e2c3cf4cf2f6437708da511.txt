(defun bubble-sort (list) ; creates a function named "bubble-sort" that takes a list as an argument
  (let ((n (length list))) ; defines an inline variable n as the length of the list
    (do ((i 0 (1+ i))) ; does a loop starting with i = 0, incrementing by 1
        ((= i n)) ; condition to stop the loop when i equals n 
      (do ((j 0 (1+ j))) ; nested loop starting with j = 0, incrementing by 1
          ((= j (- n i 1))) ; condition to stop the loop when j equals n-i-1
        (if (> (nth j list) (nth (1+ j) list)) ; conditional check if element at position j is greater than element at position j+1
          (rotatef (nth j list) (nth (1+ j) list)))) ; if condition is true, swap the elements at positions j and j+1 in the list
    list)) ; returns the sorted list after all iterations are completed
(defpackage #:example-package2
  (:use #:cl)
  (:documentation "An example package for demonstration purposes"))

(in-package #:example-package2)

(defparameter *multiplier* 3
  "A global variable used for multiplication")

(defstruct point
  "A struct representing a point in 2 dimensional space"
  x
  y)

(defun multiply-point (pt)
  "This function multiplies the x and y coordinates of a point by the global multiplier"
  (let* ((x (* (point-x pt) *multiplier*))
         (y (* (point-y pt) *multiplier*)))
    (setf (point-x pt) x)
    (setf (point-y pt) y)
    pt))

;; Example usage:

> (let ((p1 (make-point :x 5 :y 10)))
    (print p1)
    (print (multiply-point p1))
    (print *multiplier*))

#S(POINT :X 5 :Y 10)
#S(POINT :X 15 :Y 30)
3
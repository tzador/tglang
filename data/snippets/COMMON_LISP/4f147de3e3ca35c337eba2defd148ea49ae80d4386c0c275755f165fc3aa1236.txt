;; Define a macro called 'my-helper' which takes in a parameter 'x' and prints the square of 'x'
(defmacro my-helper (x)
	`(print (* ,x ,x))

;; Define a function called 'my-func' which takes in two parameters 'a' and 'b'
(defun my-func (a b)
	;; Set 'total' to 0
	(let ((total 0))
		;; Use 'loop' to iterate from 'a' to 'b'
		(loop for i from a to b do
			;; Call 'my-helper' macro with the current value of 'i'
			(my-helper i)
			;; Add the square of 'i' to 'total'
			(incf total (* i i)))
		;; Return 'total'
		total)))
		
;; Call 'my-func' with parameters 1 and 5 and assign the result to 'output'
(defvar output (my-func 1 5))

;; Print 'output'
(print output)
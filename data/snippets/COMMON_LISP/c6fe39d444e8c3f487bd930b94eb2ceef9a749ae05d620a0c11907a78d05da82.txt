(defpackage #:math
  (:use #:cl)
  (:export #:square-root #:log #:sin))

(in-package #:math)

(defun square-root (num)
  "Finds the square root of a number using Newton's method"
  (if (zerop num)
      0
      (let ((guess (/ num 2)))
    (loop while (/= num (setf guess (/ (+ guess (/ num guess)) 2)))))
  
  "Calculates the natural logarithm of a number using the Taylor series"
(defun log (num)
  (if (<= num 0)
      (error "Number must be greater than 0")
      (let ((result 0)
        (k 2)
        (x (- num 1)))
    (loop while (> (abs x) 0.001)
         do (setf result (+ result (* (/ x k) (expt (- num 1) (- k)))))
         (setf k (+ k 1)))
    (* 2 result)))
  
  "Calculates the sine of a number using the Taylor series"
(defun sin (num)
  (let ((result num)
        (k 1)
        (x num)
        (sign 1))
    (loop for i from 1 upto 10
         do (setf result (+ result (* (/ sign (fact (* 2 i))) (expt x (* 2 i)))))
         (setf sign (- sign))
         (setf k (+ k 1)))
    result)))
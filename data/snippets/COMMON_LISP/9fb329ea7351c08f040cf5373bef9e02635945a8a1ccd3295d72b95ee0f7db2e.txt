(defparameter *numbers* ;; defining a list of numbers
      '(5 10 15 20 25 30 35 40 45 50))

(defun find-multiples (numlist multiple) ;; defining a function to find multiples
      (let (result)
          (loop for num in numlist ;; looping through the list of numbers
               do (if (equal (mod num multiple) 0) ;; checking if the number is a multiple
                     (push num result))) ;; if it is, add it to the result list
          (reverse result))) ;; reversing the list to get the multiples in ascending order
          
(find-multiples *numbers* 5) ;; calling the function with our list of numbers and desired multiple
;;;; Define a recursive function to calculate the factorial of a number

(defun factorial (num) ;;; Function takes one parameter
  (if (<= num 1) ;;; If the number is less than or equal to 1, just return 1
    1
    (* num (factorial (- num 1))) ;;; Otherwise, multiply the current number with the factorial of one less
  )
)

;;;; Note: This function will have an infinite loop if num is a negative number,
;;;; because it will keep subtracting 1 and never reach the base case of 1.
;;;; So it's important to make sure the input is a non-negative integer.

;;;; Example usage:

(factorial 5) ;;; Output: 120
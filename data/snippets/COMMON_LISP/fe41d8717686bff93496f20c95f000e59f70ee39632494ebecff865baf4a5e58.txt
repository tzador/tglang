;;; This is a code snippet in COMMON_LISP that implements the merge sort algorithm

;;; Helper function to merge two sorted lists into one sorted list
(defun merge (left right)
  (if (null left)
      right
    (if (null right)
        left
      (if (<= (car left) (car right))
          (cons (car left) (merge (cdr left) right))
        (cons (car right) (merge left (cdr right))))))

;;; Merge sort function
(defun merge-sort (lst)
  ;; handle edge case
  (if (null lst)
      lst
    (if (> (length lst) 1)
        (let* ((mid (/ (length lst) 2)) ; find midpoint of list
               (left (merge-sort (subseq lst 0 mid))) ; recursively sort left half
               (right (merge-sort (subseq lst mid)))) ; recursively sort right half
          (merge left right))
      lst))
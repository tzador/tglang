;;Define a function to calculate the nth Fibonacci number using dynamic programming

(defun fib (n) ;;Function to take in the input n
  (let ((table (make-array (1+ n) :initial-element 0))) ;;Create an array to store the Fibonacci numbers
    (setf (aref table 0) 0) ;;Set the first element to 0
    (setf (aref table 1) 1) ;;Set the second element to 1

    (dotimes (i n) ;;Loop through all values up to n
      (when (> i 1) ;;For i > 1, calculate the Fibonacci number by adding the two previous numbers
        (setf (aref table i) (+ (aref table (- i 1)) (aref table (- i 2))))))
    (aref table n))) ;;Return the nth Fibonacci number
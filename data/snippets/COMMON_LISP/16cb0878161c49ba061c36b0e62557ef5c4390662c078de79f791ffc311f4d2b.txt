;;;;Example of a complex code snippet in Common Lisp

;;;;Declare a struct named Person with two fields, 'name' and 'age'
(defstruct Person
  name
  age)

;;;;Define a function that takes a list of 'Person' structs as input
;;;;and returns a list of 'Person' structs whose age is greater than 18
(defun get-adults (people-list)
  "Takes a list of Person structs and returns a list of Person structs that are adults."
  (let (results)
    (dolist (person people-list)
      (when (> (person-age person) 18)
        (push person results)))
    (reverse results)))

;;;;Create a list of 'Person' structs
(defvar *people*
  (list
    (make-Person :name "John" :age 21)
    (make-Person :name "Alice" :age 17)
    (make-Person :name "Bob" :age 25)
    (make-Person :name "Mary" :age 34)))

;;;;Call the 'get-adults' function and print the results
(print (get-adults *people*))

;;;;Output:
;((PERSON :NAME "John" :AGE 21)
; (PERSON :NAME "Bob" :AGE 25)
; (PERSON :NAME "Mary" :AGE 34))
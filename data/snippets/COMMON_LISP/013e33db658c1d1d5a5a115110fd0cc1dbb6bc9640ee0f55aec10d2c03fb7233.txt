(defun merge-sort (x)
  "Merge sort using recursive approach"
  (if (< (length x) 2)
      x
      (let* ((mid (/ (length x) 2))
             (left (merge-sort (subseq x 0 mid)))
             (right (merge-sort (subseq x mid))))
        (merge left right))))

(defun merge (left right)
  "Merge two sorted lists"
  (if (null left)
      right
      (if (null right)
          left
          (if (< (car left) (car right))
              (cons (car left) (merge (cdr left) right))
              (cons (car right) (merge left (cdr right)))))))

;; Example:
(merge-sort '(8 3 6 2 9 1 4 5))
;; Output:
(1 2 3 4 5 6 8 9)
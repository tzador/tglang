;;;This is a function that sorts a list in ascending order using the merge sort algorithm.

(defun merge (left right)
    "Auxiliary function to merge two sorted lists."
    (if (null left)
        right
        (if (null right)
            left
            (if (<= (car left) (car right))
                (cons (car left) (merge (cdr left) right))
                (cons (car right) (merge left (cdr right)))))))

(defun merge-sort (list)
    "A recursive function that sorts a list using the merge sort algorithm."
    (if (null (cdr list))
        list
        (let ((midpoint (floor (length list) 2)))
            (merge (merge-sort (subseq list 0 midpoint))
                (merge-sort (subseq list midpoint))))))

;;;Example usage:
(merge-sort '(6 3 2 5 4)) ;;;Output: (2 3 4 5 6)
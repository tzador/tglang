;; Function to calculate the factorial of a number

(defun factorial (num)
  "Calculates the factorial of a given number."
  (if (<= num 1)
      1
      (* num (factorial (- num 1)))))

;; Recursive function to calculate the Fibonacci sequence

(defun fibonacci (n)
  "Calculates the value of the nth term in the Fibonacci sequence."
  (if (or (= n 0) (= n 1))
      n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

;; Function that takes in a list of numbers and returns the sum of the positive numbers

(defun sum-positive (numbers)
  "Sums up all the positive numbers in a given list."
  (if (null numbers)
      0
      (if (> (first numbers) 0)
          (+ (first numbers) (sum-positive (rest numbers)))
          (sum-positive (rest numbers)))))

;; Function to check if a given number is prime or not

(defun is-prime (num)
  "Checks whether a number is prime or not."
  (if (<= num 1)
      nil
      (loop for i from 2 to (/ num 2)
            when (= (mod num i) 0)
            do (return nil)
            finally (return t))))
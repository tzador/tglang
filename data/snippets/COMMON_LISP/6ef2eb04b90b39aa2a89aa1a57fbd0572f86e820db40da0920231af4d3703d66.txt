(defmacro defmethod (name slot-names &body body)
  "Define an instance method for a generic function.
   NAME is the name of the method.
   SLOT-NAMES is a list of names of the arguments.
   BODY is a list of expressions forming the body of the method."
  (let ((method (gensym)))
    `(progn
       (setf (get ',name :methods)
             (append (get ,name :methods) (list ,method)))
       (setf ,method #'(lambda (object ,@slot-names)
                         ,@body))
       ',method)))
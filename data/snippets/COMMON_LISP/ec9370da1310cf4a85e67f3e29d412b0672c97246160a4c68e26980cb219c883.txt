;;; Define class to represent a car
(defclass car ()
  ((make :initarg :make
         :initform 'unknown-make
         :accessor car-make
         :documentation "The make of the car.")
   (model :initarg :model
          :initform 'unknown-model
          :accessor car-model
          :documentation "The model of the car.")
   (year :initarg :year
         :initform 'unknown-year
         :accessor car-year
         :documentation "The year of the car.")
   (color :initarg :color
          :initform 'unknown-color
          :accessor car-color
          :documentation "The color of the car."))
  (:documentation
   "A class representing a car with make, model, year and color attributes."))

;;; Define method to print car information
(defmethod print-car-information ((car car))
  "Prints the make, model, year and color of a given car object."
  (format t "This car is a ~a ~a made in ~a. It is ~a in color."
          (car-make car) (car-model car) (car-year car) (car-color car)))

;;; Create an instance of car class
(defparameter *my-car* (make-instance 'car :make 'toyota :model 'camry
                                      :year 2015 :color 'blue))

;;; Call method to print car information
(print-car-information *my-car*)

;; Output:
This car is a TOYOTA CAMRY made in 2015. It is BLUE in color.
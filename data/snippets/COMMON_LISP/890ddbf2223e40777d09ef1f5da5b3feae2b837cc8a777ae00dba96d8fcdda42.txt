;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This is a snippet of a Common Lisp function that checks if a number is prime

(defun is-prime (number)
  ;; This function takes in a number and returns whether it is a prime number

  (if (<= number 3)                  ; check if number is less than or equal to 3
      (or (= number 2) (= number 3)) ; if yes, check if it is 2 or 3 which are prime numbers
      ;; ELSE
      (let ((i 2))                    ; initialize a counter variable 'i' to start at 2
        (loop                         ; start a loop
          (if (>= (* i i) number)    ; check if i squared is greater than or equal to our number
              (return t)             ; if yes, return true - number is prime
              ;; ELSE
              (progn
                (when (= (mod number i) 0)
                  (return nil))       ; if our number is divisible by i, return false - number is not prime
                (setq i (+ i 1))))))) ; increment i by 1 and continue looping
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
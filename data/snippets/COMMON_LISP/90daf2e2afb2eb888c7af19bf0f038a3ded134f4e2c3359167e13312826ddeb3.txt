(defun quicksort (list)                                         ; Defines a function named "quicksort" that takes in a list as a parameter
  (if (null list)                                               ; Checks if the list is empty
      nil                                                       ; If it is empty, returns nil
      (append                                                   
        (let ((pivot (car list)))                               ; Declares a variable "pivot" and sets it equal to the first element of the list
          (quicksort (remove-if-not #'< (rest list) pivot)))     ; Recursively calls quicksort on the sublist of elements less than the pivot
        (list pivot)                                            ; Appends the pivot element to the result
        (quicksort (remove-if #'< (rest list) pivot)))))         ; Recursively calls quicksort on the sublist of elements greater than or equal to the pivot
(defstruct person
  "A structure defining a person."
  name                         ; the person's name
  age                          ; the person's age
  address                      ; the person's address
  (pets '()))                  ; a list of the person's pets

(defun add-pet (person pet)
  "A function to add a pet to a person's list of pets."
  (setf (person-pets person) (cons pet (person-pets person))))

(defun print-person (person)
  "A function to print out a person's information."
  (format t "Name: ~a~%Age: ~d~%Address: ~a~%Pets: ~a~%"
    (person-name person)
    (person-age person)
    (person-address person)
    (person-pets person)))

(let ((joe (make-person :name "Joe"
                        :age 30
                        :address "123 Main St"
                        :pets '("Dog" "Cat"))))
  (add-pet joe "Goldfish")
  (print-person joe))
;;Set up generic data structure
(defclass animal () 
((species
:accessor species 
:initarg :species
:initform "" 
:type string)
(limbs 
:accessor limbs 
:initarg :limbs 
:initform 0 
:type integer) 
(color 
:accessor color 
:initarg :color 
:initform "" 
:type string)
(is-alive 
:accessor is-alive 
:initarg :is-alive 
:initform t 
:type boolean)))

;;Create instances of animal class
(defvar cat (make-instance 'animal :species "Felis catus" :limbs 4 :color "Black" :is-alive t))
(defvar snake (make-instance 'animal :species "Serpentes" :limbs 0 :color "Green" :is-alive t))
(defvar human (make-instance 'animal :species "Homo sapiens" :limbs 4 :color "Brown" :is-alive t))

;;Create function to check if an animal is alive
(defmethod is-animal-alive ((animal animal)) 
(if (is-alive animal) 
(print "This animal is alive") 
(print "This animal is not alive")))

;;Print information about each animal
;Black cat with 4 limbs
(print (concatenate 'string species " " "cat has " (write-to-string limbs) " limbs and is " (if is-alive "alive" "not alive"))) 
;Green snake with 0 limbs 
(print (concatenate 'string species " " "snake has " (write-to-string limbs) " limbs and is " (if is-alive "alive" "not alive"))) 
;Brown human with 4 limbs 
(print (concatenate 'string species " " "human has " (write-to-string limbs) " limbs and is " (if is-alive "alive" "not alive")))
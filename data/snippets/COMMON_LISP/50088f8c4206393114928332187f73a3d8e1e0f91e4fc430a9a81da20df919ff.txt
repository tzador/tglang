;; sets up a function that takes in two parameters, adds them together, and returns the sum
(defun add-two-numbers (x y)
   (+ x y))
   
;; creates a list of numbers
(setq numbers '(1 2 3 4 5 6 7 8 9))

;; uses the map function to apply the add-two-numbers function to each number in the list
;; and returns a new list with the results
(mapcar #'(lambda (num) (add-two-numbers num 2)) numbers) ; => (3 4 5 6 7 8 9 10 11)
;; Creates a function called "reverse-vector" that takes in a vector parameter 
;; and returns a reversed vector.

(defun reverse-vector (vector)
  "Reverses the elements of the given vector and returns the reversed vector.
  Written in COMMON_LISP."
  
  ;; Initializes a new vector to store the reversed elements.
  (let ((reversed-vector '()))
    
    ;; Iterates through the vector in reverse order.
    (loop for i from (1- (length vector)) downto 0 do
      
      ;; Appends each element to the new vector.
      (setf reversed-vector (append reversed-vector (list (aref vector i)))))
    
    ;; Returns the reversed vector.
    reversed-vector))
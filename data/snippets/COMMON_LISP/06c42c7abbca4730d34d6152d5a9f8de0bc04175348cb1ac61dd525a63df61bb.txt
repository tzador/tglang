;; This function takes in two lists of numbers and returns a list of their pairwise products
(defun pairwise-products (list1 list2)
  "Takes in two lists of numbers and returns a list of their pairwise products"
  (if (or (null list1) (null list2))
      nil
      (let ((first1 (first list1))
            (rest1 (rest list1))
            (first2 (first list2))
            (rest2 (rest list2)))
        (if (and rest1 rest2)
          ;; If both lists have more than one element, recursively call pairwise-products on the rest of both lists
          (cons (* first1 first2) (pairwise-products rest1 rest2))
          ;; If either list has only one element, return the product of the two elements
          (list (* first1 first2))))))

;; Example Input: (pairwise-products (list 1 2 3) (list 4 5 6))
;; Example Output: (4 10 18)
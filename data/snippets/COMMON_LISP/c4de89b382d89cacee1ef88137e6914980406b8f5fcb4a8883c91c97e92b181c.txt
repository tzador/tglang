;; Define a function named 'postorder' that takes in a binary tree as a parameter 
;; and outputs a list of values in postorder traversal.
(defun postorder (tree)
    (if (null tree)	     ;if tree is empty return an empty list
        nil
        (append			;else append the result of (postorder left) and (postorder right) 
            (postorder (car tree))	;append result of (postorder left) to the left subtree
            (postorder (cdr tree))	;append result of (postorder right) to the right subtree
            (list (car tree))		;append the root value
        )
    )
)
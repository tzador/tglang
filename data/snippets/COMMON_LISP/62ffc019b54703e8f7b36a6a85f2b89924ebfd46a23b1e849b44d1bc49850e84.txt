(with-open-file (in "input.txt" :direction :input)
  (with-open-file (out "output.txt" :direction :output)
    (loop for line = (read-line in nil nil)
          while line do
            (let ((words (split-sequence #\Space line)))
              (cond ((equal (first words) "add")
                     (write-string (format nil "The sum is ~A~%" (+ (parse-integer (second words))
                                                                   (parse-integer (third words))))
                                    out))
                    ((equal (first words) "subtract")
                     (write-string (format nil "The difference is ~A~%" (- (parse-integer (second words))
                                                                           (parse-integer (third words))))
                                    out))
                    ((equal (first words) "multiply")
                     (write-string (format nil "The product is ~A~%" (* (parse-integer (second words))
                                                                        (parse-integer (third words))))
                                    out))
                    ((equal (first words) "divide")
                     (write-string (format nil "The quotient is ~A~%" (/ (parse-integer (second words))
                                                                         (parse-integer (third words))))
                                    out))
                    (t (write-string (format nil "Invalid operation~%" out)))))))
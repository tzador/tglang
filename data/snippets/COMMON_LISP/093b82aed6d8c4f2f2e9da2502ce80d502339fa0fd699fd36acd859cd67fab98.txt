;;;;Defining class and methods in Common Lisp
(defclass person ()
  ((name :initarg :name :accessor person-name)
   (age :initarg :age :accessor person-age)
   (gender :initarg :gender :accessor person-gender)))

(defmethod introduce ((person person))
  (format t "Hello, my name is ~a and I am a ~a-year-old ~a." (person-name person) (person-age person) (person-gender person)))

(defmethod celebrate-birthday ((person person))
  (incf (person-age person)))

(defmethod change-name ((person person) new-name)
  (setf (person-name person) new-name))

;;;;Creating instances of the person class and calling methods
;; Creating an instance of the person class with name, age and gender
(defvar alice (make-instance 'person :name "Alice" :age 25 :gender "female"))

;; Introducing Alice
(introduce alice)
;; Output: "Hello, my name is Alice and I am a 25-year-old female."

;; Celebrating Alice's birthday
(celebrate-birthday alice)
(celebrate-birthday alice)
;; Alice's age is now 27

;; Changing Alice's name to Emily
(change-name alice "Emily")
(introduce alice)
;; Output: "Hello, my name is Emily and I am a 27-year-old female."
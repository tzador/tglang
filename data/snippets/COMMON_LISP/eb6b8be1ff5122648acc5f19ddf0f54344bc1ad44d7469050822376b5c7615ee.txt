;;; This function takes in two lists and returns a new list
;;; with elements from both lists alternatingly
(defun interleave (list-a list-b)
  (if (null list-a)
      list-b
      (cons (car list-a) (interleave list-b (cdr list-a)))))

;;; This function calculates the nth Fibonacci number using
;;; a recursive algorithm
(defun fib (n)
  (if (or (= n 0) (= n 1))
      n
      (+ (fib (- n 1)) (fib (- n 2)))))

;;; This function checks if a number is prime
(defun is-prime (n)
  (if (<= n 1)
      nil
      (loop for i from 2 to (isqrt n)
          unless (zerop (mod n i)) do (return nil))
      t))
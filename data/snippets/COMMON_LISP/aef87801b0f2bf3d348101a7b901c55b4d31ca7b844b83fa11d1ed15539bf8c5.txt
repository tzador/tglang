(defun list-multiples (num lst)
  "Takes in a number and a list, and returns a list containing all the elements in the original list that are multiples of the given number."
  (if (null lst)
      nil
      (let ((head (car lst))
            (tail (cdr lst)))
        (if (eql (mod head num) 0)
            (cons head (list-multiples num tail))
            (list-multiples num tail)))))
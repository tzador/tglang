(defun partition (lst partition-fn &optional reld))
  "Partitions the given list into two lists, based on the given partition function."
  (let (left right)
    (dolist (item lst)
      (if (funcall partition-fn item)
          (push item left)
          (push item right)))
    (when reld
      (return (list left right)))
    (list (reverse left) (reverse right))))

(partition '(1 2 3 4 5) #'evenp) 
;=> ((2 4) (1 3 5)) 
(partition '(1 2 3 4 5) #'oddp 1)
;=> ((1 3 5) (2 4))
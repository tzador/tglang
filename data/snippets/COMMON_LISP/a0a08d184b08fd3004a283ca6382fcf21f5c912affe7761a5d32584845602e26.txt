(defun quicksort (list)
  "Implementation of quicksort algorithm that sorts a list of numbers in ascending order"
  (if (<= (length list) 1)  ; Base case: list is already sorted
      list
      (let* ((pivot (first list))        ; Choose first element as pivot
             (less (remove-if-not #'(lambda (x) (<= x pivot)) (rest list)))  ; Partition list into elements less than pivot
             (greater (remove-if-not #'(lambda (x) (>= x pivot)) (rest list))))  ; Partition list into elements greater than pivot
        (append            ; Concatenate the sorted left sub-list, pivot, and sorted right sub-list
         (quicksort less) (list pivot) (quicksort greater)))))
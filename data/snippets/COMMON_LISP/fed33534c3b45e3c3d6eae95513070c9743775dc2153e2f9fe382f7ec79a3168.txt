;;; This is a list of nested functions, with comments to explain each one

; Function to calculate the square of a number
(defun square (x)
  (* x x))

; Function to calculate the sum of two numbers
(defun sum (x y)
  (+ x y))

; Function to calculate the factorial of a number
(defun factorial (n)
  ; Initialize the result to 1
  (let ((result 1))
    ; Loop through all numbers from 1 to n
    (do ((i 1 (+ i 1)))
        ((> i n))
      ; Calculate the product of result and i, and assign it to result
      (setf result (* result i)))
    ; Return the final result
    result))

; Function to calculate the nth Fibonacci number
(defun fibonacci (n)
  ; Initialize the list with the first two Fibonacci numbers
  (let ((fib-list (list 0 1)))
    ; Loop through all numbers from 3 to n
    (dotimes (i (- n 2))
      ; Calculate the sum of the last two Fibonacci numbers and add it to the list
      (push (+ (nth 0 fib-list) (nth 1 fib-list)) fib-list))
    ; Return the nth Fibonacci number
    (nth 0 fib-list)))
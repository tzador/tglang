;;; This is a comment
(defun fibonacci (n &optional (a 0) (b 1)) ;;; This is a function to calculate the nth number in the Fibonacci sequence
    (if (= n 0) ;;; Check if n is 0
        a ;;; If so, return a
        (if (= n 1) ;;; Check if n is 1
            b ;;; If so, return b
            (fibonacci (- n 1) b (+ a b)) ;;; If n is greater than 1, recursively call the function with n-1, b, and a+b as arguments
        )
    )
)

(fibonacci 10) ;;; Call the function with n = 10, should return 55
;;This is a function that takes in a list of numbers and returns the product of all the numbers in the list
(defun list-product (list) ;Defines the function with a parameter named 'list'
  (if (null list) ;Checks if the list is empty
      1 ;If it is, return 1 as the product
      (* (car list) (list-product (cdr list))) ;If not, multiply the first element of the list with the product of the rest of the list (calling the function recursively)
  )
)

`;;Example:
`(list-product '(2 3 4 5)) ;Result: 120
;; Define a function that takes in two lists and returns a new list that contains the elements of both lists
(defun merge-lists (lst1 lst2)
  "Takes in two lists, lst1 and lst2, and returns a new list containing the elements of both lists.
  If lst1 is empty, return lst2. If lst2 is empty, return lst1.
  Otherwise, compare the first element of each list and add the smaller one to the new list.
  Repeat this process until all elements are added to the new list."
  (if (null lst1)
      lst2 ; if lst1 is empty, return lst2
    (if (null lst2)
        lst1 ; if lst2 is empty, return lst1
      (if (< (car lst1) (car lst2))
          (cons (car lst1) (merge-lists (cdr lst1) lst2)) ; if the first element of lst1 is smaller, add it to the new list and call recursively with the rest of lst1
        (cons (car lst2) (merge-lists lst1 (cdr lst2))))))) ; if the first element of lst2 is smaller, add it to the new list and call recursively with the rest of lst2

;; Example usage:
(merge-lists '(1 3 5) '(2 4 6)) ; returns (1 2 3 4 5 6)
(merge-lists '(7 8 9) '(4 5 6)) ; returns (4 5 6 7 8 9)
(merge-lists '() '(1 2 3)) ; returns (1 2 3)
(defparameter *data* '((1 2 3)
                        (4 5 6))
  "This is a nested list of numbers")
(defparameter *sum* 0
  "This is the initial value of the sum")
(loop for sublist in *data*
  ;; `loop` is a looping construct in Common Lisp
  ;; `for` is a keyword that specifies a variable to iterate over
  do (loop for item in sublist
    ;; `do` is a keyword that executes a statement for each item in the list
    ;; `for` is a keyword that specifies a variable to iterate over
    ;; `item` is the current item in the list
    do (setf *sum* (+ *sum* item))
    ;; `setf` is a function that sets a value to a variable
    ;; `*sum*` is the variable that holds the sum
    ;; `+` is an arithmetic function that adds two numbers
    ;; `item` is the current item in the sublist
  )
)
(format t "The sum of *data* is ~a" *sum*)
;; `format` is a function that formats and prints a string
;; `t` is a keyword that indicates printing to standard output
;; `~a` is a specifier that prints the value of the following variable
;; `*sum*` is the variable that holds the sum
;; the output of this code snippet would be:
;; The sum of *data* is 21
;; Define a function that takes in two arguments, a list of numbers and a multiplier.
(defun multiply-list (numbers multiplier)
  ;; Set a local variable 'result' to an empty list.
  (let ((result '()))
    ;; Loop through each number in the list.
    (loop for num in numbers
      ;; If the number is not a number, throw an error message.
      if (not (numberp num))
        do (error "Invalid argument: ~A is not a number" num)
      ;; Otherwise, multiply the number by the multiplier and add it to the result list.
      else do (push (* num multiplier) result))
    ;; Return the result list.
    result))
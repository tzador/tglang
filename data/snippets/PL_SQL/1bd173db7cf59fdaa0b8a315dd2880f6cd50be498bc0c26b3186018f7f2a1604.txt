DECLARE
    v_employee_id INTEGER := 1001; -- Employee ID of the employee to update
    v_department_id INTEGER := 101; -- New department ID to assign to employee
    v_old_department_id INTEGER; -- Variable to store old department ID
  /* Cursor to fetch employee record */
    CURSOR c_employee (p_employee_id INTEGER) IS
        SELECT employee_id, department_id
        FROM employees
        WHERE employee_id = p_employee_id;
BEGIN
    OPEN c_employee(v_employee_id); -- Open cursor
    FETCH c_employee INTO v_employee_id, v_old_department_id; -- Fetch employee record from cursor
    IF c_employee%NOTFOUND THEN -- If no record found, raise error
        RAISE_APPLICATION_ERROR(-20001, 'Employee not found.');
    END IF;
    UPDATE employees
    SET department_id = v_department_id -- Update department ID
    WHERE employee_id = v_employee_id;
    COMMIT; -- Commit changes to database
    DBMS_OUTPUT.PUT_LINE('Employee ' || v_employee_id || ' was moved from department ' || v_old_department_id || ' to department ' || v_department_id || '.');
    CLOSE c_employee; -- Close cursor
EXCEPTION
    WHEN OTHERS THEN -- Catch any other exceptions and rollback changes
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLCODE || ' - ' || SQLERRM);
END;
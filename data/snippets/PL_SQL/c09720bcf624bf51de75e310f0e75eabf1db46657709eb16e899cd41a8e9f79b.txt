CREATE PROCEDURE calculate_salaries AS /*This is a procedure that will calculate the salaries of employees*/

  -- Declaring variables 
  v_employee_id employees.employee_id%TYPE;
  v_employee_name employees.last_name%TYPE;
  v_job_title employees.job_title%TYPE;
  v_salary employees.salary%TYPE;
  v_new_salary employees.salary%TYPE;
  
  -- Cursor to select employee IDs and names
  CURSOR employee_cursor IS
    SELECT employee_id, last_name, job_title, salary FROM employees;
    
  -- Exception handling
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('No employees found');
      
  BEGIN
    -- Open the cursor
    OPEN employee_cursor;
    
    -- Fetching data from cursor into variables
    FETCH employee_cursor INTO v_employee_id, v_employee_name, v_job_title, v_salary;
    
    -- Loop through each employee
    LOOP
    
      -- Calculating new salary based on job title
      IF v_job_title = 'Manager' THEN
        v_new_salary := v_salary * 1.10;
      ELSIF v_job_title = 'Salesperson' THEN
        v_new_salary := v_salary * 1.05;
      ELSE
        v_new_salary := v_salary * 1.03;
      END IF;
      
      -- Updating employee's salary in the database
      UPDATE employees SET salary = v_new_salary WHERE employee_id = v_employee_id;
      
      -- Fetching next employee from cursor
      FETCH employee_cursor INTO v_employee_id, v_employee_name, v_job_title, v_salary;
      
      -- Exit loop when all employees have been processed
      EXIT WHEN employee_cursor%NOTFOUND;
      
    END LOOP;
    
    -- Close the cursor
    CLOSE employee_cursor;
    
    -- Commit changes to the database
    COMMIT;
    
    -- Output a success message
    DBMS_OUTPUT.PUT_LINE('Salaries calculated and updated successfully');
    
END;
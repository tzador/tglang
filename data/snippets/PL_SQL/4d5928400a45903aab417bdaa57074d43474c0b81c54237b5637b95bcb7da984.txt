CREATE PROCEDURE get_sales (p_customer_id NUMBER, p_category VARCHAR2 DEFAULT NULL)  -- This is a procedure to retrieve sales information based on customer ID and category
AS 
  v_sales_amt NUMBER;  -- Declaring a variable for sales amount
BEGIN
  SELECT SUM(total_sales) INTO v_sales_amt  -- Using an SQL query to retrieve the sum of total sales for a specific customer and category
  FROM sales
  WHERE customer_id = p_customer_id; -- Filtering the results by the provided customer ID

  IF (p_category IS NULL) THEN  -- If no category is provided, return the total sales for all categories
    DBMS_OUTPUT.PUT_LINE('Total sales for customer ' || p_customer_id || ': ' || v_sales_amt);
  ELSE  -- If a category is provided, return the total sales for that specific category
    SELECT SUM(total_sales) INTO v_sales_amt
    FROM sales
    WHERE customer_id = p_customer_id
    AND category = p_category; -- Filtering the results by the provided category
    DBMS_OUTPUT.PUT_LINE('Total sales for customer ' || p_customer_id || ' in category ' || p_category || ': ' || v_sales_amt);
  END IF;

EXCEPTION  -- Handling any errors that may occur
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No sales data found for customer ' || p_customer_id);
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error has occurred. Please contact your database administrator.');
END;  -- End of the procedure
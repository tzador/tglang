``CREATE OR REPLACE PROCEDURE update_emp_salary (emp_id NUMBER, new_salary NUMBER) AS
    /* This procedure updates the salary of an employee with the given employee ID
    to the new salary provided. */
    BEGIN
        DECLARE
            emp_name VARCHAR(50);
            salary_diff NUMBER;
            old_salary NUMBER;
        BEGIN
            /* Checking if employee ID exists */
            SELECT employee_name INTO emp_name FROM employees WHERE employee_id = emp_id;
            
            /* Getting the old salary of the employee */
            SELECT salary INTO old_salary FROM employees WHERE employee_id = emp_id;
            
            /* Calculating the difference between old salary and new salary */
            salary_diff := new_salary - old_salary;
            
            /* Updating the employee's salary */
            UPDATE employees SET salary = new_salary WHERE employee_id = emp_id;
            
            /* Printing confirmation message */
            DBMS_OUTPUT.PUT_LINE('Employee ' || emp_name || ' salary has been updated from ' || old_salary || ' to ' || new_salary || '.');
            
            /* Logging the salary change in a separate table */
            INSERT INTO salary_logs (employee_id, old_salary, new_salary, salary_change_date)
            VALUES (emp_id, old_salary, new_salary, SYSDATE);
            
            /* Committing the changes */
            COMMIT;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                DBMS_OUTPUT.PUT_LINE('Employee with ID ' || emp_id || ' does not exist.');
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('An error has occurred: ' || SQLERRM);
    END update_emp_salary;
/
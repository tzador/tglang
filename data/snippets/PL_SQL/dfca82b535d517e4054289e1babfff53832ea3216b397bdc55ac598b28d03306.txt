DECLARE
    -- Declare variables for input values
    v_emp_id NUMBER(6) := 1005;
    v_old_salary NUMBER(8,2);
    v_new_salary NUMBER(8,2);
    v_bonus NUMBER(8,2);
    v_difference NUMBER(8,2);
BEGIN
    -- Retrieve old salary for employee
    SELECT salary INTO v_old_salary
    FROM employees
    WHERE employee_id = v_emp_id;
    
    -- Calculate bonus based on old salary
    IF v_old_salary > 50000 THEN
        v_bonus := v_old_salary * .1;
    ELSIF v_old_salary > 40000 THEN
        v_bonus := v_old_salary * .08;
    ELSE
        v_bonus := v_old_salary * .05;
    END IF;
    
    -- Calculate new salary including bonus
    v_new_salary := v_old_salary + v_bonus;
    
    -- Calculate difference between old and new salary
    v_difference := v_new_salary - v_old_salary;
    
    -- Update employee table with new salary and bonus
    UPDATE employees
    SET salary = v_new_salary,
        bonus = v_bonus
    WHERE employee_id = v_emp_id;
    
    -- Display output
    DBMS_OUTPUT.PUT_LINE('Employee ' || v_emp_id || ' received a salary increase of $' || v_difference);
    DBMS_OUTPUT.PUT_LINE('New salary: $' || v_new_salary || ', Bonus: $' || v_bonus);
    
    -- Commit changes to database
    COMMIT;
EXCEPTION
    -- If employee ID is not found, display error message
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Employee ID ' || v_emp_id || ' not found');
        ROLLBACK;
END;
/
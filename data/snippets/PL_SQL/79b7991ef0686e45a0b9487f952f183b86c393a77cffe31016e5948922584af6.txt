CREATE OR REPLACE PACKAGE my_package AS
    /* This is a demonstration of a PL/SQL package */

    /* First, we declare some constants to be used in our package */
    pi INTEGER CONSTANT := 3.14; -- a constant for the value of pi
    max_len CONSTANT INTEGER := 1000; -- a maximum length for our strings

    /* Next, we declare some variables to be used in our package */
    my_int INTEGER; -- a variable for storing an integer value
    my_str VARCHAR2(256); -- a variable for storing a string value

    /* Next, we define our package procedures */
    
    /* 1. Procedure for calculating the area of a circle */
    PROCEDURE calc_area(radius IN NUMBER, result OUT NUMBER) IS
    BEGIN
        result := pi * radius * radius; -- calculate the area using our constant for pi
    END calc_area;

    /* 2. Procedure for calculating the perimeter of a rectangle */
    PROCEDURE calc_perimeter(length IN NUMBER, width IN NUMBER, result OUT NUMBER) IS
    BEGIN
        result := 2 * (length + width); -- calculate the perimeter using simple formula
    END calc_perimeter;

    /* Next, we define our package functions */
    
    /* 1. Function for calculating the volume of a cube */
    FUNCTION calc_cube_volume(side_length IN NUMBER) RETURN NUMBER IS
        VOLUME NUMBER;
    BEGIN
        VOLUME := side_length * side_length * side_length; -- calculate the volume using simple formula
        RETURN VOLUME;
    END calc_cube_volume;

    /* 2. Function for checking if a string is within the maximum length */
    FUNCTION check_string_length(input_str IN VARCHAR2) RETURN BOOLEAN IS
    BEGIN
        IF LENGTH(input_str) <= max_len THEN -- check if the length is within the maximum
            RETURN TRUE; -- return true if it is
        ELSE
            RETURN FALSE; -- return false if it is not
        END IF;
    END check_string_length;

END my_package;
/
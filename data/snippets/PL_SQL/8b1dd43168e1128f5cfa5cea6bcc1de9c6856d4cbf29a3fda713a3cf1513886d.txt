--we will create a procedure that checks the sales information for a specific product

--create the procedure
CREATE OR REPLACE PROCEDURE check_sales_info (
  p_product_name IN VARCHAR2,
  p_start_date IN DATE,
  p_end_date IN DATE
)
IS
  l_product_id PRODUCTS.PRODUCT_ID%TYPE; --variable to store product id
  l_total_sales NUMBER; --variable to store total sales amount
  l_average_sales NUMBER; --variable to store average sales amount
BEGIN
  --get the product id for the given product name
  SELECT product_id
  INTO l_product_id
  FROM products
  WHERE product_name = p_product_name;

  --calculate total sales for the given product within the given date range
  SELECT SUM(sale_amount)
  INTO l_total_sales
  FROM sales
  WHERE product_id = l_product_id
  AND sale_date BETWEEN p_start_date AND p_end_date;

  --calculate average sales for the given product within the given date range
  SELECT AVG(sale_amount)
  INTO l_average_sales
  FROM sales
  WHERE product_id = l_product_id
  AND sale_date BETWEEN p_start_date AND p_end_date;

  --print the sales information for the given product
  DBMS_OUTPUT.PUT_LINE('Product: ' || p_product_name);
  DBMS_OUTPUT.PUT_LINE('Total Sales: ' || l_total_sales);
  DBMS_OUTPUT.PUT_LINE('Average Sales: ' || l_average_sales);
  DBMS_OUTPUT.PUT_LINE('Start Date: ' || p_start_date);
  DBMS_OUTPUT.PUT_LINE('End Date: ' || p_end_date);
END;
/

--procedure is now created and can be called
--call the procedure with sample input values
BEGIN
  --check sales for product 'Shirt' between 1st February 2020 and 28th February 2020
  check_sales_info('Shirt', TO_DATE('01/02/2020', 'DD/MM/YYYY'), TO_DATE('28/02/2020', 'DD/MM/YYYY'));
END;
/
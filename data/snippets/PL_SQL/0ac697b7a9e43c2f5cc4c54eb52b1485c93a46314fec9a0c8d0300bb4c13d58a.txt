--Creating a table named "employees" with columns for employee information
CREATE TABLE employees (
    employee_id NUMBER(6) PRIMARY KEY,
    first_name VARCHAR2(20),
    last_name VARCHAR2(20),
    email VARCHAR2(30),
    phone_number VARCHAR2(15),
    hire_date DATE,
    job_id VARCHAR2(10),
    salary NUMBER(8,2),
    commission_pct NUMBER(2,2),
    manager_id NUMBER(6),
    department_id NUMBER(4)
    );

--Creating a sequence to generate unique employee IDs
CREATE SEQUENCE employee_seq
    START WITH 1001
    INCREMENT BY 1
    MAXVALUE 9999
    NOCACHE;

--Creating a trigger to automatically set the employee ID using the sequence
CREATE OR REPLACE TRIGGER set_employee_id
BEFORE INSERT ON employees
FOR EACH ROW
BEGIN
    :NEW.employee_id := employee_seq.NEXTVAL;
END;

--Inserting data into the employees table
INSERT INTO employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id) VALUES ('John', 'Smith', 'jsmith@company.com', '555-123-4567', '01-JAN-2021', 'SA_MAN', 5000, 0.2, 1002, 50);
INSERT INTO employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id) VALUES ('Emily', 'Jones', 'ejones@company.com', '555-987-6543', '15-FEB-2021', 'SA_REP', 4000, 0.15, 1001, 50);

--Creating a procedure to calculate total salary for all employees in a given department
CREATE OR REPLACE PROCEDURE get_total_salary (p_department_id IN NUMBER, p_total_salary OUT NUMBER)
AS
BEGIN
    SELECT SUM(salary) INTO p_total_salary
    FROM employees
    WHERE department_id = p_department_id;
END;

--Calling the procedure and printing the result
DECLARE
    total_salary NUMBER(10);
BEGIN
    get_total_salary(50, total_salary);
    DBMS_OUTPUT.PUT_LINE('Total salary for department 50 is: ' || total_salary);
END;
declare 

  l_emp_dept varchar2(20); -- variable to store department name
  l_emp_id number := 200; -- variable with default value for employee ID
  
  -- cursor to fetch department name
  cursor c_dept_name is 
    select dept_name from deparment where dept_id = 1;
    
    -- exception handler for cursor
    dept_not_found exception;
    pragma exception_init(dept_not_found, -1403);
    
  -- record type to store employee information
  type emp_rec_typ is record(
    name varchar2(50),
    salary number,
    hire_date date
  );

  -- nested table type of employee record type
  type emp_tab_typ is table of emp_rec_typ;
  
  -- variable to store employee information
  l_emp_tab emp_tab_typ;
  
  -- nested table type of number
  type num_tab_typ is table of number;
  
  -- variable to store employee IDs
  l_emp_ids num_tab_typ;
  
begin

  -- fetch department name into variable
  open c_dept_name;
  fetch c_dept_name into l_emp_dept;
  close c_dept_name;
  
  -- print department name
  dbms_output.put_line('Department name: ' || l_emp_dept);
  
  -- loop through employee IDs 
  for i in 1..10 loop
  
    -- generate random number between 100 and 1000
    l_emp_id := round(dbms_random.value(1, 10) * 1000);
    
    -- insert employee ID into table
    l_emp_ids.extend;
    l_emp_ids(i) := l_emp_id;
    
    -- insert employee information into record
    l_emp_tab.extend;
    l_emp_tab(i).name := 'Employee ' || to_char(l_emp_id);
    l_emp_tab(i).salary := round(dbms_random.value(1000, 5000) * 100);
    l_emp_tab(i).hire_date := sysdate;
    
  end loop;
  
  -- print employee information
  for j in 1..l_emp_tab.count loop
    dbms_output.put_line('Employee name: ' || l_emp_tab(j).name);
    dbms_output.put_line('Salary: ' || l_emp_tab(j).salary);
    dbms_output.put_line('Hire date: ' || l_emp_tab(j).hire_date);
    dbms_output.put_line('--------------------------');
  end loop;
  
  -- raise exception if department not found
  if l_emp_dept is null then
    raise dept_not_found;
  end if;
  
  -- print employee IDs
  for k in 1..l_emp_ids.count loop
    dbms_output.put_line('Employee ID: ' || l_emp_ids(k));
  end loop;
  
end;
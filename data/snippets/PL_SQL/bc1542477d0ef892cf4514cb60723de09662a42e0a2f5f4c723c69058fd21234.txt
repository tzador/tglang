DECLARE
    -- declaring variables of different data types
    num INTEGER;
    text VARCHAR2(50);
    bool BOOLEAN;
BEGIN
    -- assigning values to variables
    num := 10;
    text := 'Hello world';
    bool := TRUE;

    -- using conditional statements to control flow
    IF num > 5 THEN
        dbms_output.put_line(text); -- printing out the text variable
    END IF;

    -- using loops to iterate through a set of data
    FOR i IN 1..num LOOP
        -- inserting values into a table
        INSERT INTO my_table (column1, column2) VALUES (i, text);

        -- using exception handling to catch and handle errors
        EXCEPTION
            WHEN OTHERS THEN
                dbms_output.put_line('An error occurred: ' || SQLERRM);
    END LOOP;

    -- using queries to retrieve data from a table
    SELECT column1 INTO num FROM my_table WHERE column2 = text;

    -- using cursors to iterate through query results
    FOR cursor IN (SELECT * FROM my_table) LOOP
        -- updating values in a table
        UPDATE my_table SET column1 = cursor.column1 * 2 WHERE column2 = cursor.column2;

        -- deleting rows from a table
        DELETE FROM my_table WHERE column1 = num;
    END LOOP;

    -- using procedures to encapsulate a set of statements
    PROCEDURE my_procedure (p_text VARCHAR2, p_num INTEGER) IS
        -- declaring a local variable
        temp VARCHAR2(50);
    BEGIN
        -- assigning values to local variable
        temp := p_text || ' ' || p_num;
    END;

    -- calling the procedure with parameters
    my_procedure('Hello', 10);
END;
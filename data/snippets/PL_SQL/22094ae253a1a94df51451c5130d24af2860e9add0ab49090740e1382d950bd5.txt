DECLARE
    -- creating a custom type for employee records
    TYPE employee_record IS RECORD (
        employee_id NUMBER(6),
        first_name VARCHAR2(30),
        last_name VARCHAR2(30),
        job_title VARCHAR2(50),
        salary NUMBER(10,2)
    );
    
    -- declare a variable of type employee_record
    emp_details employee_record;
    
    -- cursor to retrieve data from employee table
    CURSOR employee_cursor IS
        SELECT employee_id, first_name, last_name, job_title, salary
        FROM employees;
    
    -- creating a nested table to store employee records
    TYPE employee_table IS TABLE OF employee_record;
    emp_table employee_table;
BEGIN
    -- opening the cursor
    OPEN employee_cursor;
    
    -- loop through the cursor to fetch data and store in emp_table
    FOR emp IN employee_cursor LOOP
        emp_details.employee_id := emp.employee_id;
        emp_details.first_name := emp.first_name;
        emp_details.last_name := emp.last_name;
        emp_details.job_title := emp.job_title;
        emp_details.salary := emp.salary;
        emp_table(emp.employee_id) := emp_details;
    END LOOP;
    
    -- closing the cursor
    CLOSE employee_cursor;
    
    -- print out the employee records stored in emp_table
    FOR i IN emp_table.FIRST..emp_table.LAST LOOP
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || emp_table(i).employee_id);
        DBMS_OUTPUT.PUT_LINE('Name: ' || emp_table(i).first_name || ' ' || emp_table(i).last_name);
        DBMS_OUTPUT.PUT_LINE('Job Title: ' || emp_table(i).job_title);
        DBMS_OUTPUT.PUT_LINE('Salary: $' || TO_CHAR(emp_table(i).salary, '999,999.99'));
        DBMS_OUTPUT.PUT_LINE('-------------------');
    END LOOP;
END;
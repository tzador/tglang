CREATE OR REPLACE PROCEDURE CALCULATE_SALARY (p_employee_id IN NUMBER, p_salary IN NUMBER)
IS
   v_emp_name VARCHAR2(50);
   v_new_salary NUMBER;
BEGIN
   SELECT EMP_NAME INTO v_emp_name FROM EMPLOYEE WHERE EMP_ID = p_employee_id; -- selects employee name based on given ID
   IF v_emp_name = 'John' OR v_emp_name = 'Jane' THEN
      v_new_salary := p_salary*1.10; -- calculates new salary by multiplying current salary by 1.10
   ELSIF v_emp_name = 'James' OR v_emp_name = 'Julia' THEN
      v_new_salary := p_salary*1.15; -- calculates new salary by multiplying current salary by 1.15
   ELSE
      v_new_salary := p_salary*1.05; -- calculates new salary by multiplying current salary by 1.05
   END IF;
   UPDATE EMPLOYEE SET SALARY = v_new_salary WHERE EMP_ID = p_employee_id; -- updates employee's salary with calculated new salary
   COMMIT; -- saves changes to database
   DBMS_OUTPUT.PUT_LINE('Updated salary for employee ' || v_emp_name || ' is: ' || v_new_salary); -- prints new salary for employee
EXCEPTION
   WHEN NO_DATA_FOUND THEN -- handles exception if no employee with given ID exists
      DBMS_OUTPUT.PUT_LINE('Employee with ID ' || p_employee_id || ' does not exist.');
END CALCULATE_SALARY;
/
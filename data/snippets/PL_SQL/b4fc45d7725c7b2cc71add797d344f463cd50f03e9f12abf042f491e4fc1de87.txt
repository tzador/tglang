1. CREATE TABLE user_details
2. (
3.  user_id NUMBER PRIMARY KEY,
4.  user_name VARCHAR(50) NOT NULL,
5.  user_email VARCHAR(50) UNIQUE,
6.  user_password VARCHAR(50) NOT NULL,
7.  user_country VARCHAR(50),
8.  user_birthdate DATE,
9.  user_bio CLOB,
10. user_profile_picture BLOB,
11. user_created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
12. user_updated_at TIMESTAMP
13. );
14.
15. CREATE TRIGGER update_user_modified
16.  BEFORE UPDATE ON user_details
17.  FOR EACH ROW
18.  BEGIN
19.    :NEW.user_updated_at := SYSTIMESTAMP;
20.  END;
21.
22. CREATE INDEX user_country_idx ON user_details (user_country);
23. CREATE INDEX user_birthdate_idx ON user_details (user_birthdate);
24.
25. CREATE OR REPLACE PROCEDURE get_user_by_id (p_user_id IN NUMBER)
26.  IS
27.  v_user user_details%ROWTYPE;
28. BEGIN
29.  SELECT *
30.  INTO v_user
31.  FROM user_details
32.  WHERE user_id = p_user_id;
33.  DBMS_OUTPUT.PUT_LINE(v_user.user_name || ' has been retrieved.');
34. END;
35.
36. CREATE OR REPLACE FUNCTION validate_user (p_user_name IN VARCHAR, p_user_password IN VARCHAR)
37.  RETURN BOOLEAN
38. IS
39.  v_user_exists BOOLEAN;
40. BEGIN
41.  SELECT COUNT(*) INTO v_user_exists
42.  FROM user_details
43.  WHERE user_name = p_user_name
44.  AND user_password = p_user_password;
45.
46.  IF v_user_exists = 1 THEN
47.    RETURN TRUE;
48.  ELSE
49.    RETURN FALSE;
50.  END IF;
51. END;
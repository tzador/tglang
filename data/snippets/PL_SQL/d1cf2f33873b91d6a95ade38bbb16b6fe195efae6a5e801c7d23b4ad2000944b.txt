DECLARE
	v_temp_number NUMBER := 10; -- Declaring a variable and setting its initial value to 10
	c_table_name CONSTANT VARCHAR2(50) := 'SALES'; -- Declaring a constant variable for table name
	v_count NUMBER; -- Declaring a variable to store the count of rows in a table
BEGIN
	-- Creating a cursor to select all rows from the sales table
	FOR cur_sales IN (SELECT * FROM SALES)
	LOOP
		-- Getting the count of rows in the sales table
		SELECT COUNT(*) INTO v_count FROM SALES;
		-- Checking if the current row's sales amount is greater than the average sales amount
		IF cur_sales.sales_amount > (SELECT AVG(sales_amount) FROM SALES) THEN
			-- Updating the sales amount to the average sales amount
			UPDATE SALES SET sales_amount = (SELECT AVG(sales_amount) FROM SALES) WHERE sales_id = cur_sales.sales_id;
		-- Checking if the sales amount is less than the previous year's sales amount
		ELSIF cur_sales.sales_amount < (SELECT sales_amount FROM SALES WHERE year = cur_sales.year - 1) THEN
			-- Deleting the row from the sales table
			DELETE FROM SALES WHERE sales_id = cur_sales.sales_id;
		END IF; -- End of IF statement
	END LOOP; -- End of FOR loop
	-- Committing the changes made in the sales table
	COMMIT;
EXCEPTION
	-- Catching and handling any errors that may occur during the execution of the code
	WHEN OTHERS THEN
		-- Rolling back the changes if an error occurs
		ROLLBACK;
		-- Printing out the error message
		DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END; -- End of code block
/
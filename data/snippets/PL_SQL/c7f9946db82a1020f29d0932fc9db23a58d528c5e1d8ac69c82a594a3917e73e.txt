DECLARE
    -- declare variables
    v_student_id NUMBER(10):=1;
    v_student_name VARCHAR2(50):='John Smith';
    v_course_id NUMBER(10):=100;
BEGIN
    -- insert new row into STUDENT_COURSES table
    INSERT INTO STUDENT_COURSES (student_id, course_id)
    VALUES (v_student_id, v_course_id);
    
    -- update student's name in STUDENTS table
    UPDATE STUDENTS
    SET student_name = v_student_name
    WHERE student_id = v_student_id;
    
    -- calculate total units by joining STUDENT_COURSES and COURSES tables
    SELECT SUM(c.units)
    INTO v_units
    FROM STUDENT_COURSES sc
    JOIN COURSES c ON sc.course_id = c.course_id
    WHERE sc.student_id = v_student_id;
    
    -- check if student has exceeded maximum units allowed
    IF v_units > 20 THEN
        -- raise exception if exceeded
        RAISE_APPLICATION_ERROR(-20001, 'Student has exceeded maximum units allowed.');
    ELSE
        -- otherwise, commit transaction
        COMMIT;
    END IF;
EXCEPTION
    -- handle exceptions
    WHEN NO_DATA_FOUND THEN
        -- rollback transaction if no data is found
        ROLLBACK;
        -- print error message
        DBMS_OUTPUT.PUT_LINE('No data found. Please check student and course IDs.');
    WHEN OTHERS THEN
        -- rollback transaction if any other error occurs
        ROLLBACK;
        -- print error message and error code
        DBMS_OUTPUT.PUT_LINE('Error ' || SQLCODE || ': ' || SQLERRM);
END;
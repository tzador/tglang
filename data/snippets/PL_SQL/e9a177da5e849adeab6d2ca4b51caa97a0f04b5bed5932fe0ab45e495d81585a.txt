CREATE OR REPLACE PACKAGE body create_employee
IS
    /*
    This package contains procedures for creating employee records
    */

    /*
    Procedure to validate new employee data and insert into employee table
    */

    PROCEDURE validate_employee(
        p_first_name IN VARCHAR2,
        p_last_name IN VARCHAR2,
        p_department_id IN NUMBER,
        p_salary IN NUMBER,
        p_hire_date IN DATE,
        p_phone_number IN VARCHAR2 DEFAULT NULL,
        p_email IN VARCHAR2 DEFAULT NULL,
        p_job_id IN VARCHAR2 DEFAULT NULL,
        p_manager_id IN NUMBER DEFAULT NULL)
        IS
            v_employee_id NUMBER;
        BEGIN
            -- Insert new employee record
            INSERT INTO employees(
                first_name,
                last_name,
                department_id,
                salary,
                hire_date,
                phone_number,
                email,
                job_id,
                manager_id)
            VALUES(
                p_first_name,
                p_last_name,
                p_department_id,
                p_salary,
                p_hire_date,
                p_phone_number,
                p_email,
                p_job_id,
                p_manager_id)
            RETURNING employee_id INTO v_employee_id;

            -- Validate employee data
            IF v_employee_id > 0 THEN
                -- Print success message
                DBMS_OUTPUT.PUT_LINE('Employee record inserted with ID: ' || v_employee_id);
            ELSE
                -- Print error message
                DBMS_OUTPUT.PUT_LINE('Error inserting employee record.');
            END IF;
    END validate_employee;


    /*
    Procedure to update existing employee record
    */

    PROCEDURE update_employee(
        p_employee_id IN NUMBER,
        p_first_name IN VARCHAR2 DEFAULT NULL,
        p_last_name IN VARCHAR2 DEFAULT NULL,
        p_department_id IN NUMBER DEFAULT NULL,
        p_salary IN NUMBER DEFAULT NULL,
        p_hire_date IN DATE DEFAULT NULL,
        p_phone_number IN VARCHAR2 DEFAULT NULL,
        p_email IN VARCHAR2 DEFAULT NULL,
        p_job_id IN VARCHAR2 DEFAULT NULL,
        p_manager_id IN NUMBER DEFAULT NULL)
        IS
            v_num_rows_updated NUMBER;
        BEGIN
            -- Update employee record
            UPDATE employees
            SET
                first_name = p_first_name,
                last_name = p_last_name,
                department_id = p_department_id,
                salary = p_salary,
                hire_date = p_hire_date,
                phone_number = p_phone_number,
                email = p_email,
                job_id = p_job_id,
                manager_id = p_manager_id
            WHERE
                employee_id = p_employee_id
            RETURNING COUNT(*) INTO v_num_rows_updated;

            -- Validate update
            IF v_num_rows_updated > 0 THEN
                -- Print success message
                DBMS_OUTPUT.PUT_LINE('Employee record with ID: ' || p_employee_id || ' updated successfully.');
            ELSE
                -- Print error message
                DBMS_OUTPUT.PUT_LINE('Error updating employee record.');
            END IF;
    END update_employee;
END create_employee;
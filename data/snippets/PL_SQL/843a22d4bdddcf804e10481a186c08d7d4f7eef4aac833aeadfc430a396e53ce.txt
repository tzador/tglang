DECLARE
   -- local constant variables
   constant c_max_pets constant NUMBER := 5; -- sets the maximum number of pets to be allowed

   -- local variables
   v_id INTEGER; -- holds the ID of the pet
   v_name VARCHAR2(20); -- holds the name of the pet
   v_age INTEGER; -- holds the age of the pet
   v_count INTEGER := 0; -- holds the current count of pets

   -- exception for exceeding maximum number of pets
   pet_limit_exceeded EXCEPTION;
   PRAGMA exception_init(pet_limit_exceeded, -20001); -- assigns custom error code to exception

BEGIN
   -- loop to retrieve pet details
   FOR i IN 1..c_max_pets LOOP
      -- getting user input for pet details
      v_id := &Enter_Pet_ID;
      v_name := &Enter_Pet_Name;
      v_age := &Enter_Pet_Age;
      
      -- checking if maximum number of pets has been reached
      IF (v_count >= c_max_pets) THEN
         RAISE pet_limit_exceeded; -- raises exception if maximum pets limit is reached
      ELSE
         -- insert pet details into table
         INSERT INTO pets VALUES(v_id, v_name, v_age);
         
         v_count := v_count + 1; -- increment count of pets
      END IF;
      
   END LOOP;
   
   -- output success message
   DBMS_OUTPUT.PUT_LINE('All pet details have been successfully entered!');
   
EXCEPTION
   -- exception handling
   WHEN pet_limit_exceeded THEN
      DBMS_OUTPUT.PUT_LINE('You have reached the maximum number of allowed pets.');
     
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('An error has occurred. Error code: ' || SQLCODE);
END;
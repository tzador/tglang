/* 
This query uses a recursive CTE to create a list of employees and their subordinates, showing the hierarchical relationship between them.
*/

WITH employee_list (name, id, manager_id, level) AS -- creates a recursive CTE called employee_list
(
    SELECT name, employee_id, manager_id, 0 AS level -- selects the columns to be included in the CTE and sets the initial level to 0
    FROM employees -- selects from the employees table
    WHERE name = 'John Smith' -- filters for the employee we want to start with
    UNION ALL
    SELECT e.name, e.employee_id, e.manager_id, el.level + 1 -- recursive part of the CTE, selects the employee and their manager's info and increments the level by 1
    FROM employees e -- selects from the employees table again
    INNER JOIN employee_list el ON e.manager_id = el.id -- joins the employee_list CTE to itself using the manager_id and id columns to connect the employee and their manager
    WHERE e.manager_id = el.id -- ensures that the manager_id is equal to the employee's id, avoiding infinite loop
)
SELECT name, id, LEVEL AS hierarchy_level -- selects the name, id, and current level from the recursive CTE
FROM employee_list -- selects from the CTE
ORDER BY LEVEL DESC; -- orders the results by descending level, showing the hierarchical structure from the top-down
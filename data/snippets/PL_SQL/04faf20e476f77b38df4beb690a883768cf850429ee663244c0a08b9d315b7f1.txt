/***
	This is a complex PL/SQL code snippet that shows how to perform a nested loop and use a cursor to retrieve data from a table.

	First, we declare a variable 'v_employee_count' to store the total number of employees.

	Then, we create a cursor 'c_employee' to select all the employees from the 'employees' table.

	Next, we loop through each employee using a nested loop. Inside the loop, we calculate the total salary for each employee by multiplying their hourly rate with the number of hours they worked.

	We also use a conditional statement to check if the employee's total salary is greater than the company's budget. If it is, we display a message saying the employee's salary cannot be paid.

	After the nested loop, we close the cursor and print the total number of employees who received their salary.

***/

DECLARE
	v_employee_count NUMBER := 0;

CURSOR c_employee IS
	SELECT * FROM employees;

BEGIN
	FOR i IN 1..v_employee_count LOOP
		FOR j IN c_employee LOOP
			DECLARE
				v_total_salary NUMBER := j.hourly_rate * j.hours_worked;
			BEGIN
				IF v_total_salary > 10000 THEN
					RAISE_APPLICATION_ERROR(-20001, 'Employee ' || j.employee_name || ' cannot be paid due to insufficient budget.');
				END IF;
				UPDATE employees SET total_salary = v_total_salary WHERE employee_id = j.employee_id;
				COMMIT;
				v_employee_count := v_employee_count + 1;
			END;
		END LOOP;
	END LOOP;
	CLOSE c_employee;
	DBMS_OUTPUT.PUT_LINE('Total employees paid: ' || v_employee_count);
END;
/
program complexCode;

type 
    // declare a record data type
    User = record
        firstName: string;
        lastName: string;
        age: integer;
        isActive: boolean;
    end;

var
    // declare and initialize a constant of the User record type
    const
        DEFAULT_USER: User = (firstName: 'John'; lastName: 'Doe'; age: 30; isActive: true);

    // declare and initialize an array of User record type
    users: array[1..5] of User = (
        (firstName: 'Lisa'; lastName: 'Smith'; age: 25; isActive: true), 
        (firstName: 'Mark'; lastName: 'Johnson'; age: 32; isActive: false), 
        (firstName: 'Amy'; lastName: 'Jones'; age: 28; isActive: true), 
        (firstName: 'Bob'; lastName: 'Wilson'; age: 40; isActive: false), 
        (firstName: 'Emily'; lastName: 'Brown'; age: 22; isActive: true)
    );

procedure printUserInfo(user: User);
begin 
    // print the user's first name 
    writeln('First Name: ', user.firstName);

    // print the user's last name 
    writeln('Last Name: ', user.lastName);

    // print the user's age 
    writeln('Age: ', user.age);

    // print whether the user is active or not 
    if user.isActive then 
        write('Active: Yes')
    else
        write('Active: No');

    writeln;
end;

begin 
    // call the function to print the DEFAULT_USER's info
    printUserInfo(DEFAULT_USER);

    // print a blank line 
    writeln;

    // use a for loop to iterate through the users array and print each user's info
    for i := 1 to 5 do 
        printUserInfo(users[i]);

    // wait for user input before exiting 
    readln;
end;
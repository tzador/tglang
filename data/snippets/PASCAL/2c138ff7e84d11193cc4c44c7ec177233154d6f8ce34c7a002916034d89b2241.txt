{ This is a code snippet in PASCAL that generates a random password }

program randomPasswordGenerator;

uses sysutils, crt;

var
   numDigits, numSymbols, numLetters, i, randomIndex : integer;
   password: array[1..50] of char;
   numbers: array[1..10] of char = ('0', '1', '2', '3','4', '5', '6', '7', '8', '9');
   symbols: array[1..10] of char = ('!', '@', '#', '$', '%', '^', '&', '*', '(', ')');
   letters: array[1..26] of char = ('A', 'B', 'C', 'D', 'E','F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q','R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');
   random: string;

begin
   { Gets user input for desired password length }
   write('Enter the desired number of digits for your password: ');
   readln(numDigits);

   { Checks if password length is valid }
   if (numDigits < 6) then
      writeln('Password must be at least 6 digits long.')
   else
   begin
      { Gets user input for desired number of symbols and letters }
      write('Enter the desired number of symbols for your password: ');
      readln(numSymbols);
      write('Enter the desired number of letters for your password: ');
      readln(numLetters);

      { Loops through each position in the password array and randomly selects a symbol or letter }
      for i := 1 to numDigits do
      begin
         { Generates a random index to choose a symbol or letter from the respective array }
         randomIndex := random(3);

         { Checks if random index is 0 and if number of symbols has not been met }
         if (randomIndex = 0) and (numSymbols <> 0) then
         begin
            password[i] := symbols[random(10)]; 
            numSymbols := numSymbols - 1; 
         end
         { Checks if random index is 1 and if number of letters has not been met }
         else if (randomIndex = 1) and (numLetters <> 0) then
         begin
            password[i] := letters[random(26)];
            numLetters := numLetters - 1;
         end
         { Otherwise, adds a random number to the password }
         else
         begin
            password[i] := numbers[random(10)];
         end;
      end;

      { Outputs the randomly generated password }
      for i := 1 to numDigits do
         write(password[i]);
   end;
end.
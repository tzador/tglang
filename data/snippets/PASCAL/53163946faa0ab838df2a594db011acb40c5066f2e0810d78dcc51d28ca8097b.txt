program Main;

//Create a record type Customer with specified fields
type
   Customer = record
      Name : string[50];
      Age : integer;
      Email : string[50];
   end;

//Create an array of type Customer with a maximum capacity of 100
var
   Customers: array[1..100] of Customer;

//Define a function to search for a customer by name in the Customers array
function SearchByName(name: string): integer;
var
   i: integer;

begin
   //Iterate through the Customers array to search for the name
   for i := 1 to 100 do
   begin
      //Check if the current Customer's name matches the given name
      if Customers[i].Name = name then
      begin
         //If a match is found, return the index of the Customer in the array
         SearchByName := i;
         //Exit the loop
         Exit;
      end;
   end;
   //If no match is found, return 0
   SearchByName := 0;
end;

//Define a procedure to add a new customer to the Customers array
procedure AddCustomer(name: string; age: integer; email: string);
var
   index: integer;
   newCustomer: Customer;

begin
   //Check if the array is already full
   if Length(Customers) = 100 then
   begin
      //Output an error message if the array is full
      writeln('Error: The array is already full.');
      //Exit the procedure
      Exit;
   end;

   //Check if there is already a customer with the same name in the array
   index := SearchByName(name);
   if index <> 0 then
   begin
      //Output an error message if a customer with the same name is found
      writeln('Error: A customer with the name ', name, ' already exists.');
      //Exit the procedure
      Exit;
   end;

   //Create a new Customer record with the given information
   newCustomer.Name := name;
   newCustomer.Age := age;
   newCustomer.Email := email;

   //Add the new customer to the array at the first available index
   Customers[Length(Customers) + 1] := newCustomer;
end;

//Define a procedure to remove a customer from the Customers array by name
procedure RemoveCustomerByName(name: string);
var
   index, i: integer;

begin
   //Search for the customer in the array by name
   index := SearchByName(name);

   //Check if the customer was found
   if index <> 0 then
   begin
      //Move all the customers after the one to be removed one index back in the array
      for i := index to Length(Customers) - 1 do
      begin
         Customers[i] := Customers[i+1];
      end;
      //Truncate the array to remove the last empty index
      SetLength(Customers, Length(Customers) - 1);
   end
   else
   begin
      //Output an error message if no customer with the given name was found
      writeln('Error: A customer with the name ', name, ' was not found.');
   end;
end;

begin
   //Add a few customers to the array
   AddCustomer('Jane Doe', 35, 'jane.doe@example.com');
   AddCustomer('John Smith', 42, 'john.smith@example.com');
   AddCustomer('Mary Johnson', 28, 'mary.johnson@example.com');

   //Remove a customer from the array by name
   RemoveCustomerByName('John Smith');

end.
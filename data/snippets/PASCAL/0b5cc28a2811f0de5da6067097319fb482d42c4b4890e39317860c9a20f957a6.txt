program complexCalculator;

{This program is a complex calculator that can perform addition, subtraction,
multiplication, and division on two complex numbers.}

var
  complexNum1: record {declaring first complex number variable as a record}
    real_part: real; {declaring real part of complex number 1 as a real variable}
    imag_part: real; {declaring imaginary part of complex number 1 as a real variable}
  end;
  complexNum2: record {declaring second complex number variable as a record}
    real_part: real; {declaring real part of complex number 2 as a real variable}
    imag_part: real; {declaring imaginary part of complex number 2 as a real variable}
  end;
  result: record {declaring variable to store the result of calculations}
    real_part: real; {declaring real part of result as a real variable}
    imag_part: real; {declaring imaginary part of result as a real variable}
  end;

procedure addComplex(complex1, complex2: record) {procedure to add two complex numbers}
begin
    result.real_part := complex1.real_part + complex2.real_part; {adding real parts}
    result.imag_part := complex1.imag_part + complex2.imag_part; {adding imaginary parts}
end;

procedure subtractComplex(complex1, complex2: record) {procedure to subtract two complex numbers}
begin
    result.real_part := complex1.real_part - complex2.real_part; {subtracting real parts}
    result.imag_part := complex1.imag_part - complex2.imag_part; {subtracting imaginary parts}
end;

procedure multiplyComplex(complex1, complex2: record) {procedure to multiply two complex numbers}
begin
    result.real_part := ((complex1.real_part * complex2.real_part) - (complex1.imag_part * complex2.imag_part)); {multiplying real parts}
    result.imag_part := ((complex1.real_part * complex2.imag_part) + (complex1.imag_part * complex2.real_part)); {multiplying and adding imaginary parts}
end;

procedure divideComplex(complex1, complex2: record) {procedure to divide two complex numbers}
var
  denominator: real; {declaring variable to store the denominator}
begin
    denominator := (complex2.real_part * complex2.real_part) + (complex2.imag_part * complex2.imag_part); {finding the denominator using complex conjugate}
    result.real_part := ((complex1.real_part * complex2.real_part) + (complex1.imag_part * complex2.imag_part)) / denominator; {multiplying and dividing real parts}
    result.imag_part := ((complex1.imag_part * complex2.real_part) - (complex1.real_part * complex2.imag_part)) / denominator; {multiplying and dividing imaginary parts}
end;

begin {main program}
    {getting input for complex numbers}
    writeln('Enter the real part of the first complex number: ');
    readln(complexNum1.real_part);
    writeln('Enter the imaginary part of the first complex number: ');
    readln(complexNum1.imag_part);
    writeln('Enter the real part of the second complex number: ');
    readln(complexNum2.real_part);
    writeln('Enter the imaginary part of the second complex number: ');
    readln(complexNum2.imag_part);

    {performing calculations}
    addComplex(complexNum1, complexNum2); {calling addComplex procedure}
    writeln('The sum of the complex numbers is: ', result.real_part:0:2, ' + ', result.imag_part:0:2, 'i'); {displaying result of addition}
    subtractComplex(complexNum1, complexNum2); {calling subtractComplex procedure}
    writeln('The difference of the complex numbers is: ', result.real_part:0:2, ' + ', result.imag_part:0:2, 'i'); {displaying result of subtraction}
    multiplyComplex(complexNum1, complexNum2); {calling multiplyComplex procedure}
    writeln('The product of the complex numbers is: ', result.real_part:0:2, ' + ', result.imag_part:0:2, 'i'); {displaying result of multiplication}
    divideComplex(complexNum1, complexNum2); {calling divideComplex procedure}
    writeln('The quotient of the complex numbers is: ', result.real_part:0:2, ' + ', result.imag_part:0:2, 'i'); {displaying result of division}
end.
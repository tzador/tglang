{ This program generates a random sequence of numbers using the Fisher-Yates shuffle algorithm }

program RandomSequence;

var
   numList: array[1..10] of integer; { declare an array with 10 elements to store the numbers }
   i, j, temp: integer; { declare variables for iteration and swapping }

{ function to generate random numbers between the given range }
function RandomNum(min, max: integer): integer;
begin
   RandomNum := Random(max - min + 1) + min;
end;

begin
   { initialize the array with numbers from 1 to 10 }
   for i := 1 to 10 do
      numList[i] := i;

   { perform the Fisher-Yates shuffle }
   for i := 10 downto 2 do
   begin
      { generate a random index between 1 and i }
      j := RandomNum(1, i);

      { swap the elements at i and j indices }
      temp := numList[i];
      numList[i] := numList[j];
      numList[j] := temp;
   end;

   { print the shuffled array }
   for i := 1 to 10 do
      WriteLn(numList[i]);
end.
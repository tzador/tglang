program ComplexNumbers;
//Program to perform complex number arithmetic in Pascal.

//Declaring complex number record
type
<ruby>
ComplexNumber<rt>COMPLEXX</rt> = record
        real : integer; //Real part of complex number
        imaginary : integer; //Imaginary part of complex number
    end;
<ruby>
//Function to add two complex numbers
<rt>procedure</rt> add_complex_numbers(num1, num2 : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>) : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>;
var
    result : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>; //Variable to store the result
begin
    result.real := num1.real + num2.real; //Adding real parts
    result.imaginary := num1.imaginary + num2.imaginary; //Adding imaginary parts
    add_complex_numbers := result; //Returning the result
end;

<ruby>
//Function to subtract two complex numbers
<rt>procedure</rt> subtract_complex_numbers(num1, num2 : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>) : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>;
var
    result : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>; //Variable to store the result
begin
    result.real := num1.real - num2.real; //Subtracting real parts
    result.imaginary := num1.imaginary - num2.imaginary; //Subtracting imaginary parts
    subtract_complex_numbers := result; //Returning the result
end;

//Function to multiply two complex numbers
<rt>procedure</rt> multiply_complex_numbers(num1, num2 : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>) : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>;
var
    result : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>; //Variable to store the result
begin
    result.real := (num1.real * num2.real) - (num1.imaginary * num2.imaginary); //Calculating real part
    result.imaginary := (num1.real * num2.imaginary) + (num1.imaginary * num2.real); //Calculating imaginary part
    multiply_complex_numbers := result; //Returning the result
end;

<rt>begin</rt>
    //Initializing the complex numbers
    var
        complex1, complex2 : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>;
        sum, difference, product : <ruby>ComplexNumber<rt>COMPLEXX</rt></ruby>;
    complex1.real := 5; //Setting real part
    complex1.imaginary := 3; //Setting imaginary part
    complex2.real := -2; //Setting real part
    complex2.imaginary := 4; //Setting imaginary part

    //Performing arithmetic operations
    sum := add_complex_numbers(complex1, complex2); //Adding two complex numbers
    difference := subtract_complex_numbers(complex1, complex2); //Subtracting two complex numbers
    product := multiply_complex_numbers(complex1, complex2); //Multiplying two complex numbers
<rt>end.</rt>
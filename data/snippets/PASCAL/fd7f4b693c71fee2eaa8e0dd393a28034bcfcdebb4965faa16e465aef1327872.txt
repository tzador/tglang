program ComplexCodeSnippet;
//This program demonstrates complex calculations and data structures in PASCAL.

const
    MAX_ROWS = 10;
    MAX_COLS = 10;

type
    Matrix = array [1..MAX_ROWS, 1..MAX_COLS] of Integer;
    Vector = array [1..MAX_COLS] of Integer;

var
    A: Matrix;
    B: Vector;
    result: Vector;

//Function that calculates the dot product of two vectors.
function DotProduct(vector1, vector2: Vector): Integer;
var
    i, dotProd: Integer;
begin
    dotProd := 0;
    for i := 1 to MAX_COLS do
        dotProd := dotProd + (vector1[i] * vector2[i]);
    DotProduct := dotProd;
end;

//Procedure that multiplies a matrix by a vector.
procedure MatrixVectorMult(matrix: Matrix; vector: Vector; var result: Vector);
var
    i, j: Integer;
begin
    for i := 1 to MAX_ROWS do
    begin
        result[i] := 0;
        for j := 1 to MAX_COLS do
            result[i] := result[i] + (matrix[i,j] * vector[j]);
    end;
end;

//Main program.
begin
    //Initialize matrix A with random numbers.
    for i := 1 to MAX_ROWS do
        for j := 1 to MAX_COLS do
           A[i,j] := Random(10);
    
    //Initialize vector B with random numbers.
    for i := 1 to MAX_COLS do
        B[i] := Random(10);

    //Calculate the dot product of vector B with itself.
    result[1] := DotProduct(B,B);
    
    //Multiply matrix A by vector B and store the result in the result vector.
    MatrixVectorMult(A,B,result);

    //Print the result.
    for i := 1 to MAX_ROWS do
        WriteLn('Result #', i, ': ', result[i]);
end.
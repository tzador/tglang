procedure CountingSort(var arr: array of Integer; arrayLength: Integer);
var
  countArray: array of Integer; // array to store count of elements
  sortedArray: array of Integer; // array to store sorted elements
  i, j, maxElement: Integer; // variables used in the loop
begin
  maxElement := -1; // variable to store the maximum element in the input array
  // loop to find the maximum element in the array
  for i := 0 to arrayLength - 1 do
  begin
    if arr[i] > maxElement then
    begin
      maxElement := arr[i];
    end;
  end;
  
  // initialize countArray with all elements as 0
  SetLength(countArray, maxElement + 1);
  for i := 0 to maxElement do
    countArray[i] := 0;
  // loop to count the number of occurrences of each element in the array
  for i := 0 to arrayLength - 1 do
    countArray[arr[i]] := countArray[arr[i]] + 1;
  // modify countArray to store the actual position of each element in the sorted array
  for i := 1 to maxElement do
    countArray[i] := countArray[i] + countArray[i-1];
    
  SetLength(sortedArray, arrayLength);
  // loop to place each element in its correct position in the sorted array
  for i := arrayLength - 1 downto 0 do
  begin
    j := countArray[arr[i]] - 1;
    sortedArray[j] := arr[i];
    countArray[arr[i]] := countArray[arr[i]] - 1;
  end;
  
  // copy the sorted array to the input array
  for i := 0 to arrayLength - 1 do
    arr[i] := sortedArray[i];
end; { CountingSort }
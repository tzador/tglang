{ This program sorts an array of integers in ascending order using the insertion sort algorithm. }
program InsertionSort;

{ Function to swap two elements in an array. }
procedure Swap(var x: integer; var y: integer);
var
  temp: integer;
begin
  temp := x;
  x := y;
  y := temp;
end;

{ Function to sort the array using the insertion sort algorithm. }
procedure InsertionSort(var arr: array of integer; size: integer);
var
  i, j, key: integer;
begin
  for i := 1 to size-1 do
  begin
    key := arr[i];
    j := i - 1;

    while((j >= 0) and (arr[j] > key)) do
    begin
      arr[j+1] := arr[j];
      j := j - 1;
    end;

    arr[j+1] := key;
  end;
end;

{ Procedure to print the sorted array. }
procedure PrintArray(arr: array of integer; size: integer);
var
  i: integer;
begin
  for i := 0 to size-1 do
    Write(arr[i], ' ');
  
  WriteLn;
end;

{ Main program }
var
  arr: array[1..10] of integer;
  size, i: integer;
begin
  WriteLn('Enter the size of array (should be less than or equal to 10): ');
  ReadLn(size);

  WriteLn('Enter the elements: ');
  for i := 1 to size do
    ReadLn(arr[i]);

  InsertionSort(arr, size);

  WriteLn('Sorted array: ');
  PrintArray(arr, size);
end.
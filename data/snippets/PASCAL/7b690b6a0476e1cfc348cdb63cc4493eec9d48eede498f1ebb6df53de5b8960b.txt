program MergeSort;

//procedure to merge two sorted arrays
procedure merge(var arr: array of integer; left, mid, right : integer);
var
  i, j, k : integer;
  size1 : integer = mid - left + 1;
  size2 : integer = right - mid;
  leftArr : array[1..size1] of integer;
  rightArr : array[1..size2] of integer;
begin
  //copy data from arr to temp arrays
  for i := 1 to size1 do
    leftArr[i] := arr[left + i - 1];
  for j := 1 to size2 do
    rightArr[j] := arr[mid + j];
  
  //initialize counters
  i := 1;
  j := 1;
  k := left;
  
  //merge the two arrays
  while (i <= size1) and (j <= size2) do
  begin
    if leftArr[i] <= rightArr[j] then
    begin
      arr[k] := leftArr[i];
      i := i + 1;
    end
    else
    begin
      arr[k] := rightArr[j];
      j := j + 1;
    end;
    k := k + 1;
  end;
  
  //copy remaining elements in leftArr to arr
  while i <= size1 do
  begin
    arr[k] := leftArr[i];
    i := i + 1;
    k := k + 1;
  end;
  
  //copy remaining elements in rightArr to arr
  while j <= size2 do
  begin
    arr[k] := rightArr[j];
    j := j + 1;
    k := k + 1;
  end;
end;

//recursive function to sort array using merge sort algorithm
procedure mergeSort(var arr: array of integer; left, right : integer);
var
  mid : integer;
begin
  if left < right then
  begin
    //calculate mid point
    mid := (left + right) div 2;
    
    //split array into two halves and recursively call mergeSort
    mergeSort(arr, left, mid);
    mergeSort(arr, mid + 1, right);
    
    //merge the sorted halves
    merge(arr, left, mid, right);
  end;
end;

//testing the program
var
  size, i : integer;
  arr : array of integer;
begin
  //get input from user
  writeln('Enter size of array:');
  readln(size);
  
  //initialize array
  setlength(arr, size);
  
  //get elements from user
  writeln('Enter elements of array:');
  for i := 0 to size - 1 do
    readln(arr[i]);
    
  //sort the array using merge sort
  mergeSort(arr, 0, size - 1);
  
  //print sorted array
  writeln('Sorted array:');
  for i := 0 to size - 1 do
    write(arr[i], ' ');
end.
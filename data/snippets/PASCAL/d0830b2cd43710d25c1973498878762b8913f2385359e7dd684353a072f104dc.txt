{ This is a pascal program that implements the bubble sort algorithm }

program BubbleSort;

const
  MAX = 100; // maximum array size
  INFINITY = 9999; // used for initialization of array

type
  IntArray = array[1..MAX] of Integer; // create an array of integers

var
  A: IntArray; // declare the array
  n, i, j: Integer; // variables for size, and loop indices

procedure BubbleSort(var A: IntArray; n: Integer); // define the bubble sort procedure
var
  i, j, temp: Integer;
begin
  for i := 1 to n - 1 do // loop through the array
  begin
    for j := 1 to n - i do // compare every element with its adjacent element, n-i comparisons per pass
    begin
      if A[j] > A[j + 1] then // if current element is greater than next element, swap them
      begin
        temp := A[j];
        A[j] := A[j + 1];
        A[j + 1] := temp;
      end;
    end;
  end;
end;

procedure InitializeArray(var A: IntArray; n: Integer); // initialize array with random numbers
var
  i: Integer;
begin
  Randomize; // seed random number generator
  for i := 1 to n do
    A[i] := Random(INFINITY); // assign random numbers to array elements
end;

procedure PrintArray(A: IntArray; n: Integer); // print the array elements
var
  i: Integer;
begin
  write('Sorted Array: ');
  for i := 1 to n do
    write(A[i], ' ');
  writeln;
end;

begin
  write('Enter the size of the array: '); // get size of array from user
  readln(n);
  
  InitializeArray(A, n); // call procedure to initialize array
  writeln('Unsorted Array: ');
  PrintArray(A, n); // call procedure to print unsorted array
  
  BubbleSort(A, n); // call procedure to sort the array using bubble sort algorithm
  
  PrintArray(A, n); // print the sorted array

  readln; // wait for user to press enter before exiting program
end. // end of program
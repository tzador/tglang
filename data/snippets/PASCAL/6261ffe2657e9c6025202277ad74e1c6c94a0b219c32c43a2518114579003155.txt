program ComplexCalculator;
{This program performs complex number calculations}

uses
  sysutils;
  
type
  ComplexNumber = record {define a record type for complex numbers}
    real: real;
    imaginary: real;
  end;

function Addition(num1, num2: ComplexNumber): ComplexNumber;
{function to perform addition of two complex numbers and return result}
begin
  Addition.real := num1.real + num2.real; {add real parts of numbers}
  Addition.imaginary := num1.imaginary + num2.imaginary; {add imaginary parts of numbers}
end;

function Subtraction(num1, num2: ComplexNumber): ComplexNumber;
{function to perform subtraction of two complex numbers and return result}
begin
  Subtraction.real := num1.real - num2.real; {subtract real parts of numbers}
  Subtraction.imaginary := num1.imaginary - num2.imaginary; {subtract imaginary parts of numbers}
end;

function Multiplication(num1, num2: ComplexNumber): ComplexNumber;
{function to perform multiplication of two complex numbers and return result}
begin
  Multiplication.real := (num1.real * num2.real) - (num1.imaginary * num2.imaginary); {calculate real part}
  Multiplication.imaginary := (num1.real * num2.imaginary) + (num1.imaginary * num2.real); {calculate imaginary part}
end;

function Division(num1, num2: ComplexNumber): ComplexNumber;
{function to perform division of two complex numbers and return result}
begin
  Division.real := ((num1.real * num2.real) + (num1.imaginary * num2.imaginary)) / (sqr(num2.real) + sqr(num2.imaginary)); {calculate real part}
  Division.imaginary := ((num1.imaginary * num2.real) + (num1.real * num2.imaginary)) / (sqr(num2.real) + sqr(num2.imaginary)); {calculate imaginary part}
end;

procedure DisplayComplexNumber(num: ComplexNumber);
{procedure to display a complex number}
begin
  Write(num.real:0:2); {print real part}
  if num.imaginary >= 0 then {check for positive imaginary part}
    Write(' + ') {print plus sign}
  else
    Write(' - '); {print minus sign}
  Write(Abs(num.imaginary):0:2); {print absolute value of imaginary part}
  Write('i'); {print 'i' for imaginary unit}
end;

var
  num1, num2, result: ComplexNumber; {declare variables}
  operation: char; {declare variable for operation symbol}

begin
  Write('Enter the first complex number (in the format a+bi): ');
  Readln(num1.real, num1.imaginary); {read user input for first number}
  Write('Enter the second complex number (in the format a+bi): ');
  Readln(num2.real, num2.imaginary); {read user input for second number}
  Write('Enter the operation to perform (+, -, *, /): ');
  Readln(operation); {read user input for operation symbol}
  
  //perform corresponding operation and display result
  if operation = '+' then
  begin
    result := Addition(num1, num2);
    Write('The result is: ');
    DisplayComplexNumber(result);
  end
  else if operation = '-' then
  begin
    result := Subtraction(num1, num2);
    Write('The result is: ');
    DisplayComplexNumber(result);
  end
  else if operation = '*' then
  begin
    result := Multiplication(num1, num2);
    Write('The result is: ');
    DisplayComplexNumber(result);
  end
  else if operation = '/' then
  begin
    result := Division(num1, num2);
    Write('The result is: ');
    DisplayComplexNumber(result);
  end
  else
  begin
    Write('Invalid operation.'); {handle invalid input}
  end;

end.
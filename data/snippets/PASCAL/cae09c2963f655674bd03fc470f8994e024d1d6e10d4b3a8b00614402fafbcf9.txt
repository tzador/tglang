function createFibonacciArray(n: integer): array[1..n] of integer;
{Function that creates an array of Fibonacci numbers up to the given limit n}
var
  fibArray: array [1..n] of integer;  {Declare the Fibonacci array}
  i: integer;  {Declare a variable for iteration}

{Set the first and second elements of the array to 1, as per the rules of Fibonacci}
fibArray[1] := 1;
fibArray[2] := 1;

{Loop through the remaining elements and set them to the sum of the previous two elements}
for i := 3 to n do
begin
  fibArray[i] := fibArray[i-1] + fibArray[i-2];
end;

{Return the final Fibonacci array}
createFibonacciArray := fibArray;
end;

{Main program}
begin
  {Declare variables for limit and Fibonacci array}
  var
    limit: integer;
    fibArray: array [1..limit] of integer;
  
  {Ask user for limit and convert input to integer}
  write('Enter the limit for the Fibonacci array: ');
  readln(limit);
  
  {Call the function and assign the returned array to fibArray}
  fibArray := createFibonacciArray(limit);
  
  {Loop through the array and print each element}
  for i := 1 to limit do
  begin
    write(fibArray[i], ' ');
  end;
  
end.
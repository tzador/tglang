{
   This code snippet generates the Fibonacci sequence up to a given integer
   Written by [Your Name]

   This function takes in an integer n and generates the Fibonacci sequence up to n
   Parameters:
   n - the integer to generate the sequence up to
   Returns:
   An array containing the Fibonacci sequence up to n
}

function generateFibonacci(n: integer): array of integer;
var
    sequence: array[0..n] of integer; // create an array to store the sequence
    i: integer; // variable used for iteration
begin
    // check if n is less than 2, which means the sequence will be 0, 1
    if (n < 2) then
    begin
        sequence[0] := 0; // set the first element to 0
        sequence[1] := 1; // set the second element to 1
    end
    else
    begin
        // if n is greater than 2
        sequence[0] := 0; // set the first element to 0
        sequence[1] := 1; // set the second element to 1
        // loop from index 2 to n
        for i := 2 to n do
        begin
            // calculate the next element in the sequence by adding the previous two
            sequence[i] := sequence[i-1] + sequence[i-2];
        end;
    end;
    // return the sequence array
    generateFibonacci := sequence;
end;

{
   Example use:
   result := generateFibonacci(8); // generates the Fibonacci sequence up to 8
   // result will be [0, 1, 1, 2, 3, 5, 8, 13, 21]
}
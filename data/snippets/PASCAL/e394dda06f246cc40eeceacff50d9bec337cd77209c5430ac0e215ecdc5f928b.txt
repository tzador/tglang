program ExampleProgram; // This is the name of the program

// This is a comment in PASCAL

const // Keyword for defining constants
    PI = 3.14159; // Defining the value of PI as a constant

type // Keyword for defining a type
    Point = record // Defining a record type called Point with fields x and y
        x: Integer;
        y: Integer;
    end; // End of record definition

var // Keyword for defining variables
    myNum: Integer; // Defining a variable of type Integer
    myString: String; // Defining a variable of type String

procedure PrintPoint(p: Point); // Defining a procedure with a parameter of type Point
begin
    writeln('The coordinates of the point are x: ', p.x, ' y: ', p.y); // Output the coordinates of the point
end; // End of procedure definition

function CalculateArea(radius: Integer): Real; // Defining a function with a parameter of type Integer and a return type of Real
var // Keyword for defining local variables
    area: Real; // Defining a local variable of type Real to store the area
begin
    area := PI * sqr(radius); // Calculating the area based on the radius and the constant PI
    CalculateArea := area; // Setting the return value of the function to be the calculated area
end; // End of function definition

begin // Begin the main block of the program
    myNum := 7; // Assigning a value to the variable myNum
    myString := 'Hello World!'; // Assigning a value to the variable myString
    writeln(myString); // Output the value of myString
    if myNum > 10 then // Checking if myNum is greater than 10
        writeln('myNum is greater than 10!')
    else // If myNum is not greater than 10, execute the following statement
        writeln('myNum is not greater than 10!');
    PrintPoint(Point(5, 10)); // Calling the procedure PrintPoint with a Point object as the argument
    writeln(CalculateArea(5)); // Output the return value of the function CalculateArea with an argument of 5
end. // End of main block and end of program
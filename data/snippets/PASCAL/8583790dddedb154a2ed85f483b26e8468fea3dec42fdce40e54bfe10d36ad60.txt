Program ComplexCalculator;

{This program performs complex number calculations}

type
  ComplexNumber = record        {define a structure to hold complex number}
    realPart: real;             {real part of complex number}
    imagPart: real;             {imaginary part of complex number}
  end;

  Result = record               {define a structure to hold results}
    realResult: real;           {real part of result}
    imagResult: real;           {imaginary part of result}
  end;

var
  c1, c2: ComplexNumber;       {initialize variables to hold complex numbers}
  addition, subtraction, multiplication: Result;       {initialize variables to hold results}

{begin program execution}
begin
  {get input from user for first complex number}
  WriteLn('Enter the real and imaginary part of the first complex number:');
  ReadLn(c1.realPart);
  ReadLn(c1.imagPart);

  {get input from user for second complex number}
  WriteLn('Enter the real and imaginary part of the second complex number:');
  ReadLn(c2.realPart);
  ReadLn(c2.imagPart);

  {perform addition of complex numbers}
  addition.realResult := c1.realPart + c2.realPart;
  addition.imagResult := c1.imagPart + c2.imagPart;

  {display result of addition}
  WriteLn('Addition of the two complex numbers is: ', addition.realResult:0:2, ' + ', addition.imagResult:0:2, 'i');

  {perform subtraction of complex numbers}
  subtraction.realResult := c1.realPart - c2.realPart;
  subtraction.imagResult := c1.imagPart - c2.imagPart;

  {display result of subtraction}
  WriteLn('Subtraction of the two complex numbers is: ', subtraction.realResult:0:2, ' + ', subtraction.imagResult:0:2, 'i');

  {perform multiplication of complex numbers}
  multiplication.realResult := (c1.realPart * c2.realPart) - (c1.imagPart * c2.imagPart);
  multiplication.imagResult := (c1.realPart * c2.imagPart) + (c2.realPart * c1.imagPart);

  {display result of multiplication}
  WriteLn('Multiplication of the two complex numbers is: ', multiplication.realResult:0:2, ' + ', multiplication.imagResult:0:2, 'i');
end.
{
This program implements a basic text encryption algorithm
by rotating the characters in a string by a given key.
}

program Encryption;

var
  inputString: string; //the string to be encrypted
  outputString: string; //the encrypted string
  key: integer; //the key used for encryption
  i: integer; //loop counter
  c: char; //current character being encrypted
  asciiValue: integer; //the ASCII value of the current character

const
  MIN_KEY = 1; //minimum encryption key value
  MAX_KEY = 26; //maximum encryption key value

begin
  //ask user for input string
  write('Enter a string to be encrypted: ');
  readln(inputString);

  //ask user for encryption key
  write('Enter an integer between 1 and 26 as the encryption key: ');
  readln(key);

  //check if key is valid
  if (key < MIN_KEY) or (key > MAX_KEY) then
  begin
    writeln('Invalid key. Encryption key must be between 1 and 26.');
    exit; //end program if key is invalid
  end;

  //initialize output string
  outputString := '';

  //loop through each character in string
  for i := 1 to length(inputString) do
  begin
    //get current character
    c := inputString[i];

    //convert character to ASCII value
    asciiValue := ord(c);

    //encrypt character by rotating it by the key value
    asciiValue := asciiValue + key;

    //check if character is uppercase
    if c in ['A'..'Z'] then
    begin
      //if the ASCII value is greater than 'Z', wrap back to 'A'
      if asciiValue > ord('Z') then
        asciiValue := asciiValue - 26;
    end
    //check if character is lowercase
    else if c in ['a'..'z'] then
    begin
      //if the ASCII value is greater than 'z', wrap back to 'a'
      if asciiValue > ord('z') then
        asciiValue := asciiValue - 26;
    end;

    //convert back to character and add to output string
    outputString := outputString + chr(asciiValue);
  end;

  //display encrypted string
  write('Encrypted string: ');
  writeln(outputString);
end.
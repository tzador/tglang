program ComplexCode;

type
  // custom record type
  TPerson = record
    Name: String;
    Age: Integer;
    City: String;
  end;

  // custom function type
  TCalculate = function (num1, num2: Integer): Integer;

var
  // custom dynamic array
  people: array of TPerson;

  //custom dynamic array with function type
  calculations: array of TCalculate;

  // variables for storing user input
  inputName: String;
  inputAge: Integer;
  inputCity: String;
  option: Integer;

// procedure to add new person to array
procedure AddPerson(person: TPerson);
begin
  SetLength(people, Length(people) + 1);
  people[High(people)] := person;
end;

// function to calculate the sum of two numbers
function Sum(num1, num2: Integer): Integer;
begin
  Result := num1 + num2;
end;

// function to calculate the difference of two numbers
function Difference(num1, num2: Integer): Integer;
begin
  Result := num1 - num2;
end;

begin

  // prompt user to enter person details
  WriteLn('Enter person details:');
  Write('Name: ');
  ReadLn(inputName);
  Write('Age: ');
  ReadLn(inputAge);
  Write('City: ');
  ReadLn(inputCity);

  // create a new person record with user input
  var newPerson: TPerson;
  newPerson.Name := inputName;
  newPerson.Age := inputAge;
  newPerson.City := inputCity;

  // add the new person to the array
  AddPerson(newPerson);

  // prompt user to perform calculation
  Write('Choose operation (1: Sum, 2: Difference): ');
  ReadLn(option);

  // create a new function variable based on user's choice
  var newCalculation: TCalculate;
  if option = 1 then
    newCalculation := @Sum
  else if option = 2 then
    newCalculation := @Difference;

  // add the new calculation function to the array
  SetLength(calculations, Length(calculations) + 1);
  calculations[High(calculations)] := newCalculation;

  // perform the calculation and display the result
  WriteLn('Result: ', calculations[High(calculations)](10, 5));

end.
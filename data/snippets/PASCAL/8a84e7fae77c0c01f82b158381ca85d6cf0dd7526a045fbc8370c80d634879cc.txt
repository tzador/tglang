{ This is a complex code snippet in PASCAL }
program ComplexSnippet;

{ Importing two units - graph and math }
uses graph, math;

{ Defining a constant PI }
const
  PI = 3.14159;

{ Declaring a type for a point in a 2D plane }
type 
  point = record
    x, y: real;
  end;

{ Creating a function to calculate the distance between two points using Pythagorean theorem }
function distance(p1, p2: point): real;
begin
  { Using the sqrt function from math unit to find the square root of the sum of squares }
  distance := sqrt(sqr(p2.x - p1.x) + sqr(p2.y - p1.y));
end;

{ Declaring an array of 5 points }
var
  points: array[1..5] of point;

{ Initializing the graphics mode and setting the viewport }
var
  gdriver, gmode, errorcode: integer;
begin
  gdriver := detect;
  initgraph(gdriver, gmode, '');
  errorcode := graphresult;
  if errorcode <> grok then
  begin
    writeln('Graphics error: ', grapherrormsg(errorcode));
    writeln('Press any key to halt:');
    readln;
    halt;
  end;
  setviewport(0, 0, 640, 480, clipoff);

  { Creating a loop to generate random coordinates and storing them in the points array }
  for i := 1 to 5 do
  begin
    points[i].x := random(640) + 1; { Adding 1 to avoid a coordinate of 0 }
    points[i].y := random(480) + 1;
    putpixel(round(points[i].x), round(points[i].y), white);
  end;

  { Drawing lines between all the points in the array }
  for i := 1 to 5 do
    for j := 1 to 5 do
      line(round(points[i].x), round(points[i].y), round(points[j].x), round(points[j].y));

  { Calculating and printing the total distance between all the points }
  totalDistance := 0;
  for i := 1 to 5 do
    for j := 1 to 5 do
      begin
        totalDistance := totalDistance + distance(points[i], points[j]);
      end;
  writeln('Total distance between all points: ', totalDistance:2:2);

  { Pausing the program before closing the graphics window }
  readln;

  closegraph;
end.
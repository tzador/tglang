program ComplexCode;

uses
  SysUtils; //uses the system unit for additional functionality

type
  TNumberType = (REAL, INTEGER, COMPLEX); //define a custom enumerated type

var
  num1, num2: TNumberType; //declare two variables of type TNumberType
  realNum: real; //declare a variable of type real
  intNum: integer; //declare a variable of type integer

begin //program entry point
  
  realNum := 5.5; //assign a real number to the realNum variable
  intNum := 10; //assign an integer to the intNum variable
  
  if (realNum > intNum) then //check if realNum is greater than intNum
    num1 := REAL //if true, set num1 variable to REAL
  else
    num1 := INTEGER; //if false, set num1 variable to INTEGER
  
  case num1 of //perform different actions based on the value of num1
    REAL:
      begin
        writeLn('The first number is a real number.'); //output a message to the console
        realNum := realNum * 2; //multiply realNum by 2
      end;
    INTEGER:
      begin
        writeLn('The first number is an integer.'); //output a message to the console
        intNum := intNum + 5; //add 5 to intNum
      end;
  end; //end case statement
  
  num2 := COMPLEX; //set num2 variable to COMPLEX
  
  repeat //repeat until a condition is met
    realNum := realNum + 0.5; //add 0.5 to realNum
    intNum := intNum * 3; //multiply intNum by 3
    num2 := num2 - 1; //decrease num2 by 1
  until num2 = 0; //repeat until num2 = 0
  
  writeLn('The final values are ', realNum:0:2, ' and ', intNum); //output the final values to the console
  
end. //end of program
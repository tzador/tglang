program bubbleSort;

var 
    arr: array[1..10] of integer; // create an array of 10 integers

procedure swap(var x, y: integer); // procedure to swap two values
var
    temp: integer;
begin
    temp := x;
    x := y;
    y := temp;
end;

function randomArray(): array[1..10] of integer; // function to generate a random array of size 10
var
    i: integer;
begin
    for i := 1 to 10 do // loop through the array
        arr[i] := Random(100); // assign a random value between 1 and 100
    randomArray := arr; // return the array
end;

procedure bubbleSort(arr: array of integer); // procedure to perform bubble sort on an array
var
    i, j: integer;
    n: integer = Length(arr); // get length of the array
begin
    for i := 0 to n - 2 do // loop through array
        for j := 0 to n - 2 - i do // loop through unsorted elements
            if arr[j] > arr[j + 1] then // compare adjacent elements
                swap(arr[j], arr[j + 1]); // if first element is larger, swap them
end;

procedure printArray(arr: array of integer); // procedure to print array
var
    i: integer;
begin
    for i := 0 to Length(arr) - 1 do // loop through array
        Write(arr[i], ' '); // print each element followed by a space
end;

begin
    arr := randomArray; // generate a random array
    Write('Original array: ');
    printArray(arr); // print original array
    WriteLn;
    bubbleSort(arr); // perform bubble sort
    WriteLn('Sorted array: ');
    printArray(arr); // print sorted array
end.
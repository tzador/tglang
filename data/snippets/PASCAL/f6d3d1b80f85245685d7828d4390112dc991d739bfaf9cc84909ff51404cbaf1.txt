{ This code snippet implements a recursive function in Pascal to calculate the nth Fibonacci number }

program Fibonacci;

uses sysutils;

const MAX: integer = 50; { maximum number in the Fibonacci sequence }

var
    n: integer; { the input value for which the Fibonacci number is to be calculated }

function Fibonacci(n: integer): integer;
{ This function takes in an integer n and returns the nth Fibonacci number }

begin
    if n < 2 then { base case, for n = 0 or n = 1, the Fibonacci number is n }
        Fibonacci := n
    else { recursive case, for n > 1, the Fibonacci number is the sum of the previous two Fibonacci numbers }
        Fibonacci := Fibonacci(n-1) + Fibonacci(n-2);
end;

begin { main block }

    write('Enter a number between 0 and 50: ');
    readln(n); { input from user }

    if (n < 0) or (n > MAX) then { boundary check }
        writeln('Error: Invalid input. Please enter a number between 0 and 50.')
    else { valid input, calculate and output the Fibonacci number }
        writeln(n, 'th Fibonacci number is: ', Fibonacci(n));

    readln; { pause the program before exiting }
end.
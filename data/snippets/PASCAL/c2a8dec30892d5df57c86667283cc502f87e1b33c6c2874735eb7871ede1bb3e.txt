PROCEDURE Quicksort(N: INTEGER; VAR A: ARRAY OF INTEGER);
VAR
  Pivot, L, R, Temp: INTEGER;
BEGIN
  IF N <= 1 THEN // base case
    EXIT;
  END;
  Pivot := A[1]; // choose pivot element
  L := 2; // initialize left and right marker
  R := N;
  WHILE L <= R DO BEGIN
    WHILE (L <= R) AND (A[L] <= Pivot) DO // find element larger than pivot from the left
      INC(L);
    WHILE (L <= R) AND (A[R] >= Pivot) DO // find element smaller than pivot from the right
      DEC(R);
    IF L < R THEN // swap the elements
    BEGIN
      Temp := A[L];
      A[L] := A[R];
      A[R] := Temp;
      INC(L);
      DEC(R);
    END;
  END;
  A[1] := A[R]; // move pivot to its sorted position
  A[R] := Pivot;
  IF L - 1 > 1 THEN // sort elements smaller than pivot recursively
    Quicksort(L - 1, A);
  IF N - L > 0 THEN // sort elements larger than pivot recursively
    Quicksort(N - L, A);
END;
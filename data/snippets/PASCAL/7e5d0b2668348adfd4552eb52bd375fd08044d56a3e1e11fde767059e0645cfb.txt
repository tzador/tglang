procedure QuickSort(var A: array of Integer; iLo, iHi: Integer);
var
  Lo, Hi, Mid, T: Integer;

begin
  Lo := iLo;
  Hi := iHi;
  Mid := A[(Lo + Hi) div 2];
  
  // Partition for QuickSort
  while Lo <= Hi do
  begin
    // Find the element on left that should be on right
    while A[Lo] < Mid do
      Inc(Lo);
    
    // Find the element on right that should be on left
    while A[Hi] > Mid do
      Dec(Hi);
    
    // Swap elements and move indices
    if Lo <= Hi then
    begin
      T := A[Lo];
      A[Lo] := A[Hi];
      A[Hi] := T;
      Inc(Lo);
      Dec(Hi);
    end;
  end;
  
  // Sort the subarrays
  if Hi > iLo then
    QuickSort(A, iLo, Hi);
  if Lo < iHi then
    QuickSort(A, Lo, iHi);
end;
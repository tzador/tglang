{
  This is a program that calculates fibonacci numbers up to a given input.
  It uses recursion to efficiently calculate each number.
}
PROGRAM Fibonacci;

VAR
  n, i: Integer;

FUNCTION fib(x: Integer): Integer;
{
  This function uses recursion to calculate the fibonacci number of a given input.
  It checks if the input is 0 or 1, as these are the base cases for the fibonacci sequence,
  and returns the input value if it is.
  Otherwise, it recursively calls the function to calculate the fibonacci number.
}
BEGIN
  IF (x = 0) OR (x = 1) THEN
    fib := x
  ELSE
    fib := fib(x-1) + fib(x-2);
END;

BEGIN
  {
    Prompts the user for a number and reads it into the variable n.
    It then uses a for loop to iterate from 1 to n,
    calling the fib function for each iteration and printing the result.
  }
  Write('Enter a positive integer:');
  ReadLn(n);
  FOR i := 1 TO n DO
    WriteLn(fib(i));
END.
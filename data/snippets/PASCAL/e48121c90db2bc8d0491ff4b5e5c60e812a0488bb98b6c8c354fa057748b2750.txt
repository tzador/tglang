program ComplexExample(input, output);
{$A+,B+,D+,E+,F+,I+,L-,N-,O-,P-,Q-,R-,S-,T-,V-,X+}
uses
  math, strutils;  //imports the math and string utility libraries

const
  PI = 3.141592653589793;  //defines the value of pi as a constant
  MAX_LIST_SIZE = 100;  //defines maximum size for a list

type
  Complex = record  //defines a complex number record with real and imaginary parts
    realPart, imaginaryPart: real;
  end;

  List = array[1..MAX_LIST_SIZE] of integer;  //defines a list as an array of integers

var
  num1, num2, result: Complex;  //declares three complex number variables
  numbers: List;  //declares a list variable
  i: integer;  //declares an integer variable for looping

//function to calculate the magnitude of a complex number
function mag(complexNum: Complex): real;
begin
  mag := sqrt(sqr(complexNum.realPart) + sqr(complexNum.imaginaryPart));
end;

begin
  //asks user to input two complex numbers
  writeln('Enter the real and imaginary parts of the first complex number:');
  readln(num1.realPart, num1.imaginaryPart);
  writeln('Enter the real and imaginary parts of the second complex number:');
  readln(num2.realPart, num2.imaginaryPart);

  //performs complex addition
  result.realPart := num1.realPart + num2.realPart;
  result.imaginaryPart := num1.imaginaryPart + num2.imaginaryPart;

  //checks if the result has a negative imaginary part, if so, adds ' - ' before output
  if result.imaginaryPart < 0 then
    writeln('Result of addition:', result.realPart, ' - ', abs(result.imaginaryPart), 'i')
  
  //if result has a positive imaginary part, adds ' + ' before output
  else
    writeln('Result of addition:', result.realPart, ' + ', result.imaginaryPart, 'i');

  //asks user to input numbers for the list
  writeln('Enter', MAX_LIST_SIZE, 'numbers to be added to the list:');
  for i := 1 to MAX_LIST_SIZE do
  begin
    readln(numbers[i]);
  end;

  //calculates and outputs the summation of the numbers in the list
  writeln('Sum of numbers in the list:');
  writeln(sumInt(numbers));

  //calculates and outputs the average of the numbers in the list
  writeln('Average of numbers in the list:');
  writeln(avg(numbers):1:2);

  //calculates and outputs the maximum value in the list
  writeln('Maximum value in the list:');
  writeln(maxValue(numbers));

  //calculates and outputs the minimum value in the list
  writeln('Minimum value in the list:');
  writeln(minValue(numbers));

  //calculates and outputs the magnitude of the first complex number
  writeln('Magnitude of the first complex number: ');
  writeln(mag(num1):1:2);

  //calculates and outputs the magnitude of the second complex number
  writeln('Magnitude of the second complex number: ');
  writeln(mag(num2):1:2);
end.
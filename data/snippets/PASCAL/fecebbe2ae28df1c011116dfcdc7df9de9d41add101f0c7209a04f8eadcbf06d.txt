{
  This program uses binary search to find an element in an array
}

program BinarySearch;

uses crt;
const
  size = 10; {size of the array}
  
var
  arr: array [1..size] of integer; {define the array}
  element, result: integer; {element to be searched and result of the search}
  low, high: integer; {variables to keep track of low and high indices}
begin

{STEP 1: Get input from user and initialize array}
  write('Enter the elements of the array: ');
  for i := 1 to size do
    read(arr[i]);
  
{STEP 2: Sort the array in ascending order using bubble sort}
  for i := 1 to size-1 do
    for j := 1 to size-i do
      if arr[j] > arr[j+1] then
      begin
        temp := arr[j];
        arr[j] := arr[j+1];
        arr[j+1] := temp;
      end;

{STEP 3: Get the element to be searched from user}
  write('Enter the element to be searched: ');
  read(element);

{STEP 4: Initialize low and high indices and search for the element}
  low := 1;
  high := size;
  
  while (low <= high) do
  begin
    mid := (low + high) div 2; {calculate mid index}
    
    if arr[mid] = element then {element is found}
      result := mid
    else if arr[mid] > element then {element is in lower half}
      high := mid - 1
    else {element is in upper half}
      low := mid + 1;
  end;
  
{STEP 5: Display result}
  if result = 0 then
    writeln('Element not found')
  else
    writeln('Element found at position ', result);
end.
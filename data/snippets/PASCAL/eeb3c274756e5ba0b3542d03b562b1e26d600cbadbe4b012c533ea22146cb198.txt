function binarySearch(list: TArray; target: Integer): Integer;
var
  first, last, middle: Integer;
begin
  first := 0; //sets the first index of the array as 0
  last := Length(list) - 1; //sets the last index of the array as the length of the array - 1

  while first <= last do //loop continues as long as the first index is less than or equal to the last index
  begin
    middle := (first + last) div 2; //finds the middle index of the array

    if list[middle] = target then //checks if the middle element is equal to the target
      Exit(middle) //exits the function and returns the index of the middle element
    else if target > list[middle] then //checks if the target is greater than the middle element
      first := middle + 1 //if true, then the first index is set to the next index after the middle element
    else
      last := middle - 1; //if false, then the last index is set to the index before the middle element
  end;

  //if the target is not found in the array, then the function will return -1
  Exit(-1);
end;
procedure QuickSort(var A : array of integer; Low, High : integer);
  var
    Pivot, Temp : integer;
    Left, Right : integer;
  begin
    Pivot := A[(Low + High) div 2];   //select pivot element
    Left := Low;
    Right := High;
    while Left <= Right do
      begin
        while A[Left] < Pivot do     //find elements larger than pivot on left
          Left := Left + 1;
        while A[Right] > Pivot do    //find elements smaller than pivot on right
          Right := Right - 1;
        if Left <= Right then         //swap elements
          begin
            Temp := A[Left];
            A[Left] := A[Right];
            A[Right] := Temp;
            Left := Left + 1;
            Right := Right - 1;
          end;
        end;
      end;
    if Low < Right then              //sort left partition
      QuickSort(A, Low, Right);
    if Left < High then              //sort right partition
      QuickSort(A, Left, High);
  end;
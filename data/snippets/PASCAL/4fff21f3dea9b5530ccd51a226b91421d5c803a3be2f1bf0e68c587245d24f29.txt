// This code snippet uses the Pascal programming language to sort an array of numbers using the QuickSort algorithm

// Declare a function called QuickSort with parameters array, low, and high
procedure QuickSort(array: array of integer; low, high: integer);
// Declare variables i, j, pivot, temp of type integer
var i, j, pivot, temp: integer;
begin
  // Check if the length of the array is greater than 1
  if (high > low) then
  begin
    // Set the pivot as the middle element of the array
    pivot := array[(low + high) div 2];
    // Initialize i and j as the first and last elements of the array
    i := low;
    j := high;
    // Loop until i is greater than or equal to j
    while i <= j do
    begin
      // Increment i until an element greater than the pivot is found
      while array[i] < pivot do
      begin
        i := i + 1;
      end;
      // Decrement j until an element smaller than the pivot is found
      while array[j] > pivot do
      begin
        j := j - 1;
      end;
      // If i is less than or equal to j, swap the elements at positions i and j
      if i <= j then
      begin
        temp := array[i];
        array[i] := array[j];
        array[j] := temp;
        i := i + 1;
        j := j - 1;
      end;
    end;
    // Recursively call QuickSort on the two subarrays, with low as the first element and j as the last element of the left subarray, and i as the first element and high as the last element of the right subarray
    QuickSort(array, low, j);
    QuickSort(array, i, high);
  end;
end;

// Declare an array of integers to be sorted
var numbers: array[1..10] of integer;
// Fill the array with random values
for i := low(numbers) to high(numbers) do
begin
  numbers[i] := Random(100);
end;
// Output the unsorted array
writeln('Unsorted array:');
for i := low(numbers) to high(numbers) do
begin
  write(numbers[i], ' ');
end;
writeln;
// Call QuickSort, with low as the first element and high as the last element of the array
QuickSort(numbers, low(numbers), high(numbers));
// Output the sorted array
writeln('Sorted array:');
for i := low(numbers) to high(numbers) do
begin
  write(numbers[i], ' ');
end;
 writeln;
{This program implements a binary search algorithm in PASCAL.}

program BinarySearch;

// Function to perform the binary search and return the index of the target value
function binarySearch(arr: array of Integer; target: Integer): Integer;
var
  low, high, mid: Integer;
begin
  low := 0;
  high := length(arr) - 1;
  while low <= high do
  begin
    mid := (low + high) div 2;
    if arr[mid] = target then
    begin
      binarySearch := mid; // Target found, return the index
      exit;
    end
    else if arr[mid] < target then
    begin
      // Target is in the upper half of the array
      low := mid + 1;
    end
    else
    begin
      // Target is in the lower half of the array
      high := mid - 1;
    end;
  end;
  binarySearch := -1; // Target not found, return -1
end;

// Main Function
var
  arr: array[1..10] of Integer; // Array to be searched
  target: Integer; // Target value to be searched for
  index: Integer; // Index of the target value
begin
  // Initialize the array with some values (in sorted order)
  arr[1] := 10;
  arr[2] := 20;
  arr[3] := 30;
  arr[4] := 40;
  arr[5] := 50;
  arr[6] := 60;
  arr[7] := 70;
  arr[8] := 80;
  arr[9] := 90;
  arr[10] := 100;

  // Input the target value to be searched for
  writeln('Enter the target value to be searched for: ');
  readln(target);

  // Call the binary search function and store the returned index
  index := binarySearch(arr, target);

  // Check and display the result
  if index = -1 then
    writeln('Target value not found in the array.')
  else
    writeln('Target value found at index ', index);
end.
program SortArray;
// This program takes in an array of numbers and sorts them in ascending order using insertion sort
// Define a function to swap values in an array
function swap(var a, b: integer): integer;
var
   temp: integer;
begin
   temp := a;
   a := b;
   b := temp;
end;

// Define a function to perform insertion sort on an array
function insertionSort(var arr: array of integer; n: integer): array of integer;
var 
   i, j: integer;
   key: integer;
begin
   for i := 1 to n do
   begin
      key := arr[i];
      j := i - 1;
      // Move elements of arr that are greater than key to one position ahead of their current position
      while (j >= 0) and (arr[j] > key) do
      begin
         arr[j + 1] := arr[j];
         j := j - 1;
      end;
      arr[j + 1] := key;
   end;
   
   // Return the sorted array
   insertionSort := arr;
end;

var
   arr: array[1..10] of integer; // Declare an array of size 10
   i: integer;
begin
   // Initialize the array with random numbers
   for i := 1 to 10 do
      arr[i] := Random(100);
   
   // Print the unsorted array
   WriteLn('Unsorted Array: ');
   for i := 1 to 10 do
      Write(arr[i], ' ');

   // Call the insertionSort function to sort the array
   arr := insertionSort(arr, 10);

   // Print the sorted array
   WriteLn('Sorted Array: ');
   for i := 1 to 10 do
      Write(arr[i], ' ');
end.
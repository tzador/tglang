{
This code snippet is an example of binary search in Pascal.
}

// Initializing the array to be searched
var arr: array[1..10] of Integer;

// Populating the array with random numbers
for i := 1 to 10 do
begin
    arr[i] := Random(50);
end;

// Sort the array in ascending order
for i := 2 to 10 do
begin
    num := arr[i];
    j := i - 1;
    while (j > 0) and (arr[j] > num) do
    begin
        arr[j+1] := arr[j];
        j := j - 1;
    end;
    arr[j+1] := num;
end;

// Prompt user for the element to be searched
writeln("Enter the number to be searched:");
readln(key);

// Binary search algorithm
low := 1;
high := 10;
found := false;

while (low <= high) and (not found) do
begin
    mid := (low + high) div 2;
    if arr[mid] = key then
    begin
        found := true;
    end
    else if arr[mid] > key then
    begin
        high := mid - 1;
    end
    else
    begin
        low := mid + 1;
    end;
end;

// Output the result
if found then
begin
    writeln("The number is present in the array.");
end
else
begin
    writeln("The number is not present in the array.");
end.

// Expected output:
The number is present in the array.
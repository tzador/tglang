program binarySearch(input,output);
var
  array: array[1..10] of integer; // declaring an array of size 10
  i, start, end, middle, key, index: integer; // declaring integer variables
begin
  start := 1; // setting the starting index of the array
  end := 10; // setting the ending index of the array
  for i := 1 to 10 do // for loop to fill the array with values
    array[i] := i;

  write('Enter the key to be searched: '); // asking user for input
  read(key); // reading the user input

  while (start <= end) do // while loop to check until starting and ending indices are equal
  begin
    middle := (start + end) div 2; // finding the middle index of the array
    if array[middle] = key then // checking if the middle element is the key
    begin
      index := middle; // storing middle index as the key is found
      break; // exiting the loop
    end
    else if array[middle] < key then // if the middle element is less than the key
    begin
      start := middle + 1; // setting the new starting index as the middle index + 1
    end
    else // if the middle element is greater than the key
    begin
      end := middle - 1; // setting the new ending index as the middle index - 1
    end;
  end;

  writeLn('Key is found at index: ', index); // printing the index of the key
end.
{
  This is a code snippet written in PASCAL.
  It implements a sorting algorithm called "bubble sort".
  Bubble sort repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.
  The pass through the list is repeated until the list is sorted.
}
program bubble_sort;
var
  arr: array[1..10] of integer; {declare an array of size 10}
  i, j, temp: integer; {declare variables to use for iteration and temp storage}
begin
  {populate the array with random integers}
  for i := 1 to 10 do
  begin
    arr[i] := random(100); {generate random integer between 0 and 100}
  end;
  
  {display the unsorted array}
  writeln('Unsorted Array:');
  for i := 1 to 10 do
  begin
    write(arr[i], ' '); {print each element of the array with a space in between}
  end;
  
  {start bubble sort algorithm}
  for i := 1 to 9 do {loop through the array leaving out the last element on each iteration}
  begin
    for j := 1 to 10-i do {loop through the remaining unsorted elements}
    begin
      if arr[j] > arr[j+1] then {if the current element is greater than the next element}
      begin
        {swap the elements}
        temp := arr[j]; {store the current element in temp variable}
        arr[j] := arr[j+1]; {move the next element to the current element's position}
        arr[j+1] := temp; {place the current element in the next element's position (swapped)}
      end;
    end;
  end;
  
  {display the sorted array}
  writeln('Sorted Array:');
  for i := 1 to 10 do
  begin
    write(arr[i], ' '); {print each element of the array with a space in between}
  end;
end.
{This code snippet demonstrates a binary search algorithm in Pascal}

program BinarySearch;

const
  MAX = 100; //maximum size of array

type
  MyArray = array[1..MAX] of integer;

function search(arr: MyArray; n, key: integer): integer;
var
  low, high, mid: integer;
begin
  low := 1; //lowest index of array
  high := n; //highest index of array

  while low <= high do //loop until low index is less than or equal to high index
  begin
    mid := (low +high) div 2;  //calculate middle index
    if arr[mid] = key then  //check if middle element is equal to key
    begin
      search := mid;  //return middle index if element is found
      exit; //exit loop
    end
    else if arr[mid] > key then  //if middle element is greater than key
      high := mid - 1  //set high index to one less than middle index
    else  //if middle element is less than key
      low := mid + 1;  //set low index to one more than middle index
  end;

  search := -1;  //return -1 if element is not found
end;

var
  arr: MyArray;
  n, key, i, index: integer;

begin
  write('Enter size of array (1-100): ');  //prompt user to enter size of array
  readln(n);

  write('Enter elements in sorted order: ');  //prompt user to enter elements in sorted order
  for i := 1 to n do
    read(arr[i]);

  write('Enter key to search: ');  //prompt user to enter key to search
  readln(key);

  index := search(arr, n, key);  //call search function and store returned index
  if index = -1 then  //check if element was not found
    writeln('Element not found!')
  else
    writeln('Element found at index ', index); //display index of element if found
end.
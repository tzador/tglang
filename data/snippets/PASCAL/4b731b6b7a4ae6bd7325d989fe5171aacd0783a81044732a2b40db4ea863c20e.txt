{
    This program checks if a given number is prime using the Sieve of Eratosthenes method
}

program PrimeCheck;

uses math;

var
    num, i, j, check : integer;
    isPrime : boolean;

begin
    write('Enter a number to check: ');
    readln(num);

    check := trunc(sqrt(num)); // using the square root function from the math library to avoid unnecessary iterations
    
    { initializing the array with all indexes as true }
    var primeArr : array[2..num] of boolean;
    for i := 2 to num do
        primeArr[i] := true;
    
    { applying the Sieve of Eratosthenes algorithm }
    for i := 2 to check do
    begin
        { check if the current number is still marked as prime }
        if primeArr[i] then
        begin
            for j := i * 2 to num do
            begin
                { marking all multiples of i as false }
                if j mod i = 0 then
                    primeArr[j] := false;
            end;
        end;
    end;

    { checking if the given number is still marked as true in the array }
    if primeArr[num] then
        isPrime := true
    else
        isPrime := false;

    { printing the result }
    writeln(num, ' is prime: ', isPrime);
end.
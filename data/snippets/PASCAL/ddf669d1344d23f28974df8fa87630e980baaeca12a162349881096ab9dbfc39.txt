PROGRAM complexNumbers;
{This program performs complex arithmetic operations on two complex numbers}

CONST
    PI = 3.14159265;
    
TYPE
    ComplexNumber = RECORD
        RealPart : REAL;
        ImaginaryPart : REAL;
    END;
    
VAR
    NumberA, NumberB, Sum, Product : ComplexNumber;
    
{Function to convert degrees to radians}
FUNCTION DegreesToRadians(Degrees : REAL) : REAL;
BEGIN
    DegreesToRadians := Degrees * (PI / 180);
END;

{Procedure to display complex number in standard form}
PROCEDURE DisplayComplexNumber(Number : ComplexNumber);
BEGIN
    IF Number.ImaginaryPart >= 0 THEN
        {If imaginary part is positive, add a plus sign}
        WRITELN(Number.RealPart : 0 : 6, '+', Number.ImaginaryPart : 0 : 6, 'i')
    ELSE
        WRITELN(Number.RealPart : 0 : 6, Number.ImaginaryPart : 0 : 6, 'i');
        {If imaginary part is negative, minus sign is automatically displayed}
END;

{Function to calculate the conjugate of a complex number}
FUNCTION Conjugate(Number : ComplexNumber) : ComplexNumber;
BEGIN
    Conjugate.RealPart := Number.RealPart;
    Conjugate.ImaginaryPart := -Number.ImaginaryPart;
END;

{Function to calculate the absolute value (modulus) of a complex number}
FUNCTION Abs(Number : ComplexNumber) : REAL;
BEGIN
    Abs := SQRT(SQR(Number.RealPart) + SQR(Number.ImaginaryPart));
END;

{Function to perform addition of two complex numbers}
FUNCTION Add(NumberA, NumberB : ComplexNumber) : ComplexNumber;
BEGIN
    Add.RealPart := NumberA.RealPart + NumberB.RealPart;
    Add.ImaginaryPart := NumberA.ImaginaryPart + NumberB.ImaginaryPart;
END;

{Function to perform subtraction of two complex numbers}
FUNCTION Subtract(NumberA, NumberB : ComplexNumber) : ComplexNumber;
BEGIN
    Subtract.RealPart := NumberA.RealPart - NumberB.RealPart;
    Subtract.ImaginaryPart := NumberA.ImaginaryPart - NumberB.ImaginaryPart;
END;

{Function to perform multiplication of two complex numbers}
FUNCTION Multiply(NumberA, NumberB : ComplexNumber) : ComplexNumber;
BEGIN
    Multiply.RealPart := NumberA.RealPart * NumberB.RealPart - NumberA.ImaginaryPart * NumberB.ImaginaryPart;
    Multiply.ImaginaryPart := NumberA.RealPart * NumberB.ImaginaryPart + NumberA.ImaginaryPart * NumberB.RealPart;
END;

BEGIN
    {Take user input for first complex number}
    WRITELN('Enter the real part of the first complex number:');
    READLN(NumberA.RealPart);
    
    WRITELN('Enter the imaginary part of the first complex number:');
    READLN(NumberA.ImaginaryPart);
    
    {Take user input for second complex number}
    WRITELN('Enter the real part of the second complex number:');
    READLN(NumberB.RealPart);
    
    WRITELN('Enter the imaginary part of the second complex number:');
    READLN(NumberB.ImaginaryPart);
    
    {Perform arithmetic operations on the two complex numbers}
    Sum := Add(NumberA, NumberB);
    Product := Multiply(NumberA, NumberB);
    
    WRITELN();
    WRITELN('The sum of the two complex numbers is:');
    DisplayComplexNumber(Sum);
    
    WRITELN('The product of the two complex numbers is:');
    DisplayComplexNumber(Product);
    
    {Display the conjugate and absolute value of the first complex number}
    WRITELN('The conjugate of the first complex number is:');
    DisplayComplexNumber(Conjugate(NumberA));
    
    WRITELN('The absolute value (modulus) of the first complex number is:');
    WRITELN(Abs(NumberA) : 0 : 6);
    
    {Convert the imaginary part of the second complex number from degrees to radians}
    NumberB.ImaginaryPart := DegreesToRadians(NumberB.ImaginaryPart);
    WRITELN();
    WRITELN('The second complex number with the imaginary part converted to radians is:');
    DisplayComplexNumber(NumberB);
END.
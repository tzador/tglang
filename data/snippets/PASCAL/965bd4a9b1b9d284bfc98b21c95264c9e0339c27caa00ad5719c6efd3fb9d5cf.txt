program ComplexCodeSnippet;
//This program calculates the square root of a given number using the Babylonian method
{$APPTYPE CONSOLE}
//Set the application type to console
uses
  SysUtils;
//Uses the SysUtils library

var
  num, x, root : real;
//Declare variables for our input number, initial guess, and calculated square root

Function calcSquareRoot(n : real) : real;
//Function to calculate the square root, takes in an input number and returns the square root
var
  guess, temp : real;
//Declare variables for our guess and temporary value
begin
  guess := n/2; //Set initial guess to input number divided by 2
  temp := 0; //Set temporary value to 0
  while (guess <> temp) do 
  //Loop until our guess and temporary value are equal
  begin
    temp := guess; //Set temporary value to current guess
    guess := (guess + n/guess)/2; 
    //Update guess using Babylonian method: (guess + number/guess)/2
  end;
  calcSquareRoot := guess; //Return final guess as square root
end;

begin
  writeln('Enter a number:');
  readln(num); //Prompt user to enter a number and read input into num variable
  if (num < 0) then
  //Perform error checking, square root can only be calculated for positive numbers
    writeln('Cannot calculate square root for negative numbers.')
  else
  begin
    x := calcSquareRoot(num); //Calculate square root using our function
    root := Sqrt(num); //Calculate square root using built-in Sqrt function for comparison
    writeln('Calculated square root: ', x:2:2); //Output calculated square root to 2 decimal places
    writeln('Built-in square root function result: ', root:2:2); //Output result of built-in function for comparison
  end;
  readln; //Pause program before exiting
end.
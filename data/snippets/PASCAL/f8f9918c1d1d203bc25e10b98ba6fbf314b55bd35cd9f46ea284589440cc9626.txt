{ Here is a pascal code snippet that generates a magic square of odd order }

program MagicSquare;

var
  n, num, i, j, row, col : integer;
  square : array of array of integer;

begin
  { Prompt user for the order of the magic square }
  write('Enter the order of magic square (odd number): ');
  readln(n);

  { Initialize the square with all zeros }
  SetLength(square, n, n);
  for i := 0 to n-1 do
    for j := 0 to n-1 do
      square[i, j] := 0;

  { Calculate the starting positions for placing numbers }
  { at the bottom left corner of the square }
  row := n - 1;
  col := (n - 1) div 2;
  num := 1;

  { Start filling the square in a clockwise direction }
  while(num <= n*n) do
  begin
    { Place the number at the current position }
    square[row, col] := num;

    { Move up one row and one column to the right }
    row := (row - 1) mod n;
    col := (col + 1) mod n;

    { If the new position is already taken, move down one row instead }
    if square[row, col] <> 0 then
      row := (row + 1) mod n;

    { Increment the number for the next placement }
    num := num + 1;
  end;

  { Print the magic square }
  for i := 0 to n-1 do
  begin
    for j := 0 to n-1 do
      write(square[i, j]:4);
    writeln();
  end;
end.
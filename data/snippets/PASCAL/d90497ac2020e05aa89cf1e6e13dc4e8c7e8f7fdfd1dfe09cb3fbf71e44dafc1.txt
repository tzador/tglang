type
  // This is a record type that defines a complex number
  Complex = record
    real : Double;
    imag : Double;
  end;

// This is a function that adds two complex numbers together and returns the result
function addComplex(num1: Complex; num2: Complex): Complex;
begin
  // Create a new complex number variable to store the resulting sum
  var sum: Complex;
  // Add the real components of the two numbers and store in the sum's real field
  sum.real := num1.real + num2.real;
  // Add the imaginary components of the two numbers and store in the sum's imaginary field
  sum.imag := num1.imag + num2.imag;
  // Return the sum of the two complex numbers
  result := sum;
end;

// This is a procedure that prints out a complex number in a human-readable format
procedure printComplex(num: Complex);
begin
  // Output the real component of the complex number
  write('Real: ', num.real);
  // Output the imaginary component of the complex number
  write(' Imaginary: ', num.imag);
  // Add a new line to separate each complex number when printed
  writeln;
end;

// Create two complex numbers to perform addition on
var num1, num2: Complex;
// Assign values to the real and imaginary fields of the first complex number
num1.real := 5;
num1.imag := 3;
// Assign values to the real and imaginary fields of the second complex number
num2.real := -2;
num2.imag := 7;

// Print out the two complex numbers before addition
write('First Number - ');
printComplex(num1);
write('Second Number - ');
printComplex(num2);

// Perform addition on the two complex numbers and store the result in a new variable
var result: Complex := addComplex(num1, num2);

// Print out the result of the addition
write('Result - ');
printComplex(result);
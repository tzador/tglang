program ComplexSnippet;// program name 
(*
This program demonstrates a complex code snippet in PASCAL language.
It includes multiple data types, conditional statements, loops, procedures and functions.
*)

const
  PI = 3.14159; //value of PI

type
  Coordinate = record //user-defined data type
    x, y, z: Integer;
  end;

var
  num1, num2: Integer;  //variables declaration
  sum, power: Real;

function factorial(n: Integer): Integer; //function declaration and definition
begin
  if n = 0 then
    factorial := 1
  else
    factorial := n * factorial(n - 1); //recursive call
end;

procedure displayCoordinates(coordinates: Coordinate);
begin
  writeln('x-coordinate: ', coordinates.x);
  writeln('y-coordinate: ', coordinates.y);
  writeln('z-coordinate: ', coordinates.z);
end;

begin //main program

  writeln('Enter two numbers: '); //user input
  readln(num1, num2);
  
  if num1 > num2 then //conditional statement
    writeln('num1 is greater than num2')
  else if num1 < num2 then
    writeln('num2 is greater than num1')
  else
    writeln('num1 and num2 are equal');
  
  sum := num1 + num2; //sum calculation
  writeln('The sum is: ', sum);

  power := power(num1, num2); //power calculation using built-in function
  writeln(num1, '^', num2, ' = ', power);

  writeln('Factorial of ', num2, ' is: ', factorial(num2)); //function call

  //nested loop to print numbers in a triangle pattern
  for var i := 1 to num1 do 
  begin
    for var j := 1 to i do
    begin
      write(j);
    end;
    writeln();
  end;

  //repeat-until loop to display coordinate values
  var coordinates: Coordinate; //variable of user-defined data type
  repeat
    writeln('Enter x-coordinate: ');
    readln(coordinates.x);
    writeln('Enter y-coordinate: ');
    readln(coordinates.y);
    writeln('Enter z-coordinate: ');
    readln(coordinates.z);
    displayCoordinates(coordinates); //procedure call
    writeln('Press 1 to enter new coordinates or 0 to exit: ');
    readln(num1);
  until num1 = 0;

end.
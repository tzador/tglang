PROCEDURE MergeSort(VAR arr: ARRAY OF INTEGER; low, high: INTEGER);
//Procedure to perform merge sort on an array
VAR
    mid, i, j, k: INTEGER;
    temp_arr: ARRAY[low..high] OF INTEGER;

BEGIN
    IF low < high THEN //if more than one element in array
        BEGIN
            mid := (low + high) DIV 2; //finding the middle index
            MergeSort(arr, low, mid); //recursive call for left sub-array
            MergeSort(arr, mid + 1, high); //recursive call for right sub-array
            
            //combining the two sub-arrays
            FOR i := low TO mid DO
                temp_arr[i] := arr[i];
            FOR j := (mid + 1) TO high DO
                temp_arr[high + mid + 1 - j] := arr[j];

            //sorting the combined array
            i := low;
            j := high;
            FOR k := low TO high DO
                IF temp_arr[i] < temp_arr[j] THEN
                    BEGIN
                        arr[k] := temp_arr[i];
                        i := i + 1;
                    END
                ELSE
                    BEGIN
                        arr[k] := temp_arr[j];
                        j := j - 1;
                    END;
        END;
END;
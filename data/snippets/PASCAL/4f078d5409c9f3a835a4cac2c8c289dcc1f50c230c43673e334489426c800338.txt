function binarySearch(array: array of Integer; target: Integer): Integer; //This function performs binary search on a sorted array of integers
var
    low, high, mid: Integer; //declaring variables for low, high and mid indexes
begin
    low := 0; //initialize low index to 0
    high := Length(array) - 1; //initialize high index to the last position of the array
    while low <= high do //loop until low and high indexes meet
    begin
        mid := low + (high - low) div 2; //calculate mid index using low and high index
        if array[mid] = target then //if target is found at mid index
        begin
            Result := mid; //return the index where target is found
            exit; //exit the function
        end
        else if array[mid] < target then //if target is greater than the mid element
            low := mid + 1 //update low index to be after mid index
        else //if target is smaller than the mid element
            high := mid - 1; //update high index to be before mid index
    end;
    Result := -1; //if target is not found, return -1
end;
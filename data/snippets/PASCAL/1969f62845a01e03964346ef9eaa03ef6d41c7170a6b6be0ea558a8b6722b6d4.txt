{This code snippet demonstrates how to implement a binary search algorithm 
in PASCAL.}

program Binary_Search;

{The function takes in an array of integers and the target value as parameters,
and returns the index of the target value if found, else returns -1.}
function binarySearch (arr: array of Integer, target: Integer) : Integer;
var
    low, high, mid : Integer;
begin
    low := 0; //initializing the lower bound of the array
    high := Length(arr) - 1; //initializing the upper bound of the array

    while low <= high do //looping until low index is smaller than high index
    begin
        mid := (low + high) div 2; //calculating the middle index
        if arr[mid] = target then //if target value is found at middle index
            exit (mid) //return the index
        else if arr[mid] < target then //if target value is larger than middle index
            low := mid + 1 //update the lower bound to be the next index
        else //if target value is smaller than middle index
            high := mid - 1; //update the upper bound to be the previous index
    end;

    {If the target value is not found, return -1.}
    binarySearch := -1;
end;

var
    arr: array of Integer; //declaring an array of integers
    target, index: Integer;
begin
    SetLength(arr, 10); //setting the size of the array to 10
    arr[0] := 10; //initializing the first element of the array
    arr[1] := 20; //initializing the second element of the array
    arr[2] := 30; //initializing the third element of the array
    arr[3] := 40; //initializing the fourth element of the array
    arr[4] := 50; //initializing the fifth element of the array
    arr[5] := 60; //initializing the sixth element of the array
    arr[6] := 70; //initializing the seventh element of the array
    arr[7] := 80; //initializing the eighth element of the array
    arr[8] := 90; //initializing the ninth element of the array
    arr[9] := 100; //initializing the tenth element of the array

    target := 50; //target value to be searched for
    index := binarySearch(arr, target); //calling the binarySearch function with the array and target value
    {Output: The index of the target value is 4.}
    WriteLn('The index of the target value is ', index);

end.
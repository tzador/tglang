procedure quickSort(var arr: array of Integer; low, high: Integer);
// This procedure implements the quicksort algorithm to sort an array of integers.
begin
  if low < high then
  begin
    // Choosing a pivot element
    pivot := arr[low];
    left := low;
    right := high;

    // Reordering elements
    while left <= right do
    begin
      while arr[left] < pivot do
        left := left + 1;
      while arr[right] > pivot do
        right := right - 1;
      if left <= right then
      begin
        temp := arr[left];
        arr[left] := arr[right];
        arr[right] := temp;
        left := left + 1;
        right := right - 1;
      end;
    end;

    // Recursively sorting sub-arrays
    quickSort(arr, low, right);
    quickSort(arr, left, high);
  end;
end;

// Example usage
var
  arrayToSort: array[1..10] of Integer;
  i: Integer;
begin
  // Initializing array
  arrayToSort[1] := 7;
  arrayToSort[2] := 2;
  arrayToSort[3] := 10;
  arrayToSort[4] := 1;
  arrayToSort[5] := 5;
  arrayToSort[6] := 8;
  arrayToSort[7] := 3;
  arrayToSort[8] := 9;
  arrayToSort[9] := 6;
  arrayToSort[10] := 4;

  // Sorting array using quicksort
  quickSort(arrayToSort, 1, 10);

  // Printing sorted array
  for i := 1 to 10 do
    WriteLn(arrayToSort[i]);
end.
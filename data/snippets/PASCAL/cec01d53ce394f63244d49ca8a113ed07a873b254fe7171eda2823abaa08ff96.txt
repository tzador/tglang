program ComplexCodeSnippet;
// This is a program written in Pascal that demonstrates a complex algorithm
// that finds the nth Fibonacci number using dynamic programming

uses crt; //Import the crt unit for console input/output

var
  n, result: integer; //Declare variables for user input and result
  fibArray: array[0..1000] of integer; //Declare an array to store previously calculated Fibonacci numbers

//Function that takes in a parameter n and calculates the nth Fibonacci number
function Fibonacci(n: integer): integer;
begin
  if n <= 1 then //Base case
    Fibonacci := n
  else if fibArray[n] <> 0 then //If the nth Fibonacci number has already been calculated and stored in the array
    Fibonacci := fibArray[n] //Return the stored value
  else begin
    //Calculate the nth Fibonacci number recursively and store it in the array for future use
    fibArray[n] := Fibonacci(n-1) + Fibonacci(n-2);
    Fibonacci := fibArray[n];
  end;
end;

begin
  //Take in user input for the nth Fibonacci number to be calculated
  write('Enter a positive integer: ');
  readln(n); 
  //Check for invalid input, n should be greater than or equal to 0
  while n < 0 do begin 
    writeln('Invalid input. Please enter a positive integer: ');
    readln(n);
  end;
  //Call the Fibonacci function to calculate the nth Fibonacci number
  result := Fibonacci(n);
  //Print out the result
  writeln('The ', n, 'th Fibonacci number is: ', result);
end.
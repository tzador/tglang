FUNCTION BinarySearch(arr: Array; key: Integer): Integer;                  //Defines the BinarySearch function that takes in an array and a key to search for
VAR                                                                        //Start of variable declaration
    left, right, middle: Integer;                                          //Declares 3 variables of type Integer to track the left, right, and middle indices of the array
BEGIN                                                                      //Start of function body
    left := 0;                                                             //Initializes left index to 0
    right := LENGTH(arr) - 1;                                               //Initializes right index to be the length of the array minus 1 (since arrays start at index 0)
    WHILE (left <= right) DO                                               //Starts a while loop to iterate until the left index is greater than the right index        
    BEGIN                                                                  //Start of loop body
        middle := left + (right - left) DIV 2;                              //Calculates the middle index by adding the left and right indices and dividing by 2
        IF arr[middle] = key THEN                                           //Checks if the element at the middle index is equal to the key we are searching for
        BEGIN                                                              //Start of IF statement body
            RESULT := middle;                                               //If it is, then return the index of the middle element (which is the key we are searching for)
            EXIT;                                                           //Exits out of the loop
        END                                                                //End of IF statement body
        ELSE IF arr[middle] < key THEN                                      //If the element at the middle index is less than the key, then we need to search in the right half of the array
        BEGIN                                                              //Start of ELSE IF statement body
            left := middle + 1;                                             //Sets the left index to be one element to the right of the middle index
        END                                                                //End of ELSE IF statement body
        ELSE                                                               //If the element at the middle index is greater than the key, then we need to search in the left half of the array
        BEGIN                                                              //Start of ELSE statement body
            right := middle - 1;                                            //Sets the right index to be one element to the left of the middle index
        END                                                                //End of ELSE statement body
    END                                                                    //End of loop body
    RESULT := -1;                                                          //If the key is not found in the array, return -1 to indicate that the key is not present
END                                                                        //End of function body
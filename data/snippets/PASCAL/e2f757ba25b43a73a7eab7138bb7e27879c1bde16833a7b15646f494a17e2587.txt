{
This code snippet is a complex mathematical function that uses recursion to calculate the factorial of a given number.
}

{
The `factorial` function takes in a `num` parameter and recursively calls itself until the base case is reached.
}
function factorial(num: integer): integer;
begin
{
Base case: if `num` is 0, return 1.
}
if num = 0 then
factorial := 1
{
Recursive case: if `num` is not 0, return `num` multiplied by the factorial of `num - 1`.
}
else
factorial := num * factorial(num - 1);
end;

{
In order to use the `factorial` function, we define a `main` block and call the function with a given input.
}
var input: integer;
begin
writeln('Enter a number:');
readln(input);
writeln('Factorial of ', input, ' is ', factorial(input)); 
end.
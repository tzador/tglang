program ComplexExample; // Program header

var // Global variables declaration
    A : integer; // variable A of type integer
    B : real; // variable B of type real(number with decimal)
    C : char; // variable C of type char(character)
    D : boolean; // variable D of type boolean(true/false)
    
procedure SimpleProcedures; // Procedure declaration
begin
    // Do something
end;

procedure ComplexProcedure(var X : char; Y : real); // Procedure with parameters
begin
    A := 5; // Assigning value to variable A
    B := 3.5; // Assigning value to variable B 
    
    if (A > B) then // If statement, checks if A is greater than B
    begin
        write('A is greater than B'); // Prints a message to the console
    end
    else // If A is not greater than B
    begin
        write('A is not greater than B'); // Prints a message to the console
    end;
    
    // For loop to iterate through a sequence of numbers
    for i := 1 to 10 do
    begin
        writeln(i); // Prints the current value of i to the console
    end;
    
    while (C <> 'a') do // While loop, checks if C is not equal to the character 'a'
    begin
        X := 'a'; // Assigns the value 'a' to the parameter X
    end;
    
    repeat // Repeat loop, executes at least once before checking the condition
        writeln('Hello World'); // Prints 'Hello World' to the console
        x := x + Y; // Adds the parameter Y to the variable X
    until (x > 10); // Checks if X is greater than 10
    
    // Nested if-else statements
    if (D) then // Checks if D is true
    begin
        write('D is true'); // Prints a message to the console
    end
    else if (A = 5) then // If D is not true, checks if A is equal to 5
    begin
        write('A is equal to 5'); // Prints a message to the console
    end
    else // If both conditions are not met
    begin
        write('Neither D is true, nor A is equal to 5'); // Prints a message to the console
    end;
end;

begin // Main function
    SimpleProcedure; // Calls the SimpleProcedure without any parameters
    
    C := 'b'; // Assigns the character 'b' to the variable C
    
    ComplexProcedure(C, B); // Calls the ComplexProcedure with the parameters C and B
end.
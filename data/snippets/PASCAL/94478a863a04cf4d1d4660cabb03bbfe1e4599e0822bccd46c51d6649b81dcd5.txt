{
    This is a multi-line comment in PASCAL.
    It is used to provide descriptions and explanations 
    for different parts of the code.
    It is enclosed in curly braces and can span multiple lines.
}

program ComplexCodeSnippet;
// This is a single line comment in PASCAL.
// It is used to provide brief descriptions and remarks.

const 
    MAX = 100; // defining a constant variable

type 
    // A record type that stores information about a person.
    Person = record
        name: string; // a string type field for storing person's name
        age: integer; // an integer type field for storing person's age
        occupation: string; // a string type field for storing person's occupation
    end;

var 
    // A variable of type Person.
    person: Person;

    // a two-dimensional array that store integers
    numbers: array[1..5, 1..5] of integer;

    // a procedure to calculate the average of values in the numbers array.
    procedure CalculateAverage(var arr: array of array of integer);
    var
        i, j: integer;
        sum: real;
        average: real;
    // begin block starts the procedure code.
    begin
        sum := 0;
        for i := 1 to 5 do // first loop for rows of the array
            for j := 1 to 5 do // second loop for columns of the array
                sum := sum + arr[i][j]; // adding each value to sum 
        average := sum / 25;
        writeln('Average of numbers array is: ', average); // output the result
    end; // end block marks the end of the procedure.

begin // begin block starts the main program.
    writeln('Enter person''s information: ');
    // read input from the user and store it in the person variable.
    readln(person.name);
    readln(person.age);
    readln(person.occupation);
    writeln('Person''s information: ');
    writeln('Name: ', person.name);
    writeln('Age: ', person.age);
    writeln('Occupation: ', person.occupation);

    // initializing the numbers array with values from 1 to 25.
    for i := 1 to 5 do
        for j := 1 to 5 do
            numbers[i][j] := (i - 1) * 5 + j;

    // calling the CalculateAverage procedure and passing the numbers array as parameter.
    CalculateAverage(numbers);

    // output the values of the numbers array.
    writeln('Numbers array: ');
    for i := 1 to 5 do
    begin
        for j := 1 to 5 do
            write(numbers[i][j], ' ');
        writeln();
    end;
end. // end marks the end of the main program.
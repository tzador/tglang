// This program implements the Sieve of Eratosthenes algorithm
// to find all prime numbers up to a given limit specified by the user.
program SieveOfEratosthenes;

var
    limit, i, j: Integer; // declaring variables for limit, loop iterators
    prime: array [2..limit] of Boolean; // declaring array to keep track of prime numbers

begin
    WriteLn('Enter a limit to find all prime numbers up to:');
    ReadLn(limit); // prompt user for input limit
    // initialize prime array to all true values
    for i:= 2 to limit do
    begin
        prime[i] := true;
    end;
    
    // implementation of Sieve of Eratosthenes algorithm
    for i:= 2 to limit do
    begin
        // if a number is marked true (prime), mark all its multiples as not prime
        if prime[i] then
        begin
            for j:= 2 to limit div i do
            begin
                prime[i*j] := false;
            end;
        end;
    end;
    
    // print out all prime numbers from 2 to the limit
    for i:= 2 to limit do
    begin
        // if number is still marked true, it is a prime number
        if prime[i] then
        begin
            WriteLn(i);
        end;
    end;
end.
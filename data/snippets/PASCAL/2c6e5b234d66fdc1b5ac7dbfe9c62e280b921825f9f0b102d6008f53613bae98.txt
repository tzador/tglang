program ComplexCalc;

uses
  SysUtils, Math;

type
  Complex = record // define complex number structure
    Re: real;
    Im: real;
  end;

var
  c1, c2, c3: Complex; // declare complex number variables

procedure AddComplex(a, b: Complex; var res: Complex); // procedure to add two complex numbers
begin
  res.Re := a.Re + b.Re; // add real parts
  res.Im := a.Im + b.Im; // add imaginary parts
end;

function MultiplyComplex(a, b: Complex): Complex; // function to multiply two complex numbers
begin
  Result.Re := (a.Re * b.Re) - (a.Im * b.Im); // multiply real parts and subtract imaginary parts
  Result.Im := (a.Re * b.Im) + (a.Im * b.Re); // multiply real parts by imaginary parts and add to complex number
end;

begin // main program
  c1.Re := 2.5; // set real part of c1
  c1.Im := 1.3; // set imaginary part of c1
  c2.Re := 1.7; // set real part of c2
  c2.Im := -0.8; // set imaginary part of c2

  AddComplex(c1, c2, c3); // add c1 and c2, store result in c3
  writeln('Adding c1 and c2:');
  writeln(c3.Re:0:2, ' + (', c3.Im:0:2, ')i'); // print result in complex number format

  c3 := MultiplyComplex(c1, c2); // multiply c1 and c2, store result in c3
  writeln('Multiplying c1 and c2:');
  writeln(c3.Re:0:2, ' + (', c3.Im:0:2, ')i'); // print result in complex number format
end.
{This code snippet demonstrates a recursive function to compute the Fibonacci sequence up to a specified number.}
program FibonacciSequence;

{Function to compute the Fibonacci sequence}
function Fibonacci(n: Integer): Integer;
begin
    {Base case: If n is 0 or 1, return n}
    if (n = 0) or (n = 1) then
        Fibonacci := n
    else
        {Recursive call to compute the two previous numbers and add them together}
        Fibonacci := Fibonacci(n-1) + Fibonacci(n-2);
end;

{Variables to store user input and computed Fibonacci number}
var
    num, result: Integer;

begin
    {Prompt user for input}
    Write('Enter a number: ');
    Readln(num);

    {Compute Fibonacci number using the recursive function}
    result := Fibonacci(num);

    {Print the result}
    Write('Fibonacci number at position ', num, ' is ', result);
end.
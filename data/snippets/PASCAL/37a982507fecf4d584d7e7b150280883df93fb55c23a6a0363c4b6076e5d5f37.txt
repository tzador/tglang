procedure QuickSort(var A : array of Integer; low : Integer; high : Integer);
//procedure to perform Quicksort on an array of integers
var 
  pivot, temp : Integer;
  i, j : Integer;

begin
  if high > low then
  //if array has more than one element
    begin
      pivot := A[low + (high - low) div 2];
      //choose pivot as the middle element
      
      i := low;
      j := high;
      
      while i <= j do
      //partitioning step
        begin
          while A[i] < pivot do
          //find element on left that needs to be swapped
            i := i + 1;
          
          while A[j] > pivot do
          //find element on right that needs to be swapped
            j := j - 1;
          
          if i <= j then
          //swap elements if they are not in correct position
            begin
              temp := A[i];
              A[i] := A[j];
              A[j] := temp;
              i := i + 1;
              j := j - 1;
            end;
        end;
      
      if low < j then
      //sort left subarray
        QuickSort(A, low, j);
      
      if i < high then
      //sort right subarray
        QuickSort(A, i, high);
    end;
end;
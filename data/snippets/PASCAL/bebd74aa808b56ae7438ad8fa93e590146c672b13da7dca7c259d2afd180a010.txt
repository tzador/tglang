{
    This is a complex code snippet in PASCAL language.
    It includes multiple functions, procedures, and data types.
    It utilizes loops, conditional statements, and arrays.
    It is meant to demonstrate the versatility of PASCAL as a programming language.
}

program ComplexSnippet;

uses crt;

const 
    SIZE = 10;                               {constant value for array size}
    MESSAGE: string = 'Welcome to PASCAL!';   {constant string message}

type
    ItemType = (Letter, Number, SpecialChar); {custom data type for item identification}

var
    numArray: array[1..SIZE] of integer;      {array of integers with size defined by constant}
    userInput: string;                        {dynamic string variable for user input}
    charType: ItemType;                       {variable of custom data type}

{---------------------------------------------------------------}
{Function for checking if input is a valid integer}
function isInteger(input: string): boolean;
var
    code, value: integer;
begin
    val(input, value, code);                  {convert input to integer and get return code}
    isInteger := (code = 0);                  {if code is 0, input is a valid integer}
end;

{---------------------------------------------------------------}
{Procedure for printing out welcome message}
procedure Welcome;
begin
    writeln(MESSAGE);                         {print out welcome message}
end;

{---------------------------------------------------------------}
{Procedure for populating array with user input}
procedure PopulateArray;
var
    i: integer;                               {loop iteration variable}
begin
    for i := 1 to SIZE do
    begin
        repeat
            write('Enter an integer for element ', i, ': ');
            readln(userInput);                 {get user input}
        until isInteger(userInput);            {repeat until input is a valid integer}
        
        numArray[i] := StrToInt(userInput);     {convert input to integer and assign to array element}
    end;
end;

{---------------------------------------------------------------}
{Procedure for printing out elements in array}
procedure PrintArray;
var
    i: integer;                               {loop iteration variable}
begin
    writeln('The numbers you entered are: ');
    for i := 1 to SIZE do
    begin
        write(numArray[i], ' ');               {print out array element and space}
    end;
end;

{---------------------------------------------------------------}
{Main program execution starts here}
begin
    clrscr;                                    {clear the screen}
    
    Welcome;                                   {call procedure to print welcome message}
    
    PopulateArray;                             {call procedure to populate array}
    
    PrintArray;                                {call procedure to print array elements}
    
    readkey;                                   {wait for user input before exiting}
end.
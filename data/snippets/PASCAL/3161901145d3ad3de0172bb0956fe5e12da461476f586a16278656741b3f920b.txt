function binarySearch(array: array of Integer; target: Integer): Integer;
{This function performs a binary search on a sorted array and returns the index of the target value}

var
    low, high, mid: Integer;

begin
    low := 0;  // initialize low index to 0
    high := length(array) - 1;  // initialize high index to length of array - 1
    
    while low <= high do  // loop until low index is equal to or greater than high index
    begin
        mid := (low + high) div 2;  // calculate middle index using integer division
        
        if array[mid] = target then 
            exit(mid)  // return index if target is found
        
        else if array[mid] < target then
            low := mid + 1  // update low index if target is greater than middle value
        
        else
            high := mid - 1;  // update high index if target is less than middle value
    end;
    
    exit(-1);  // return -1 if target is not found
end;

// Example call:
var 
    arr: array of Integer = (1, 5, 8, 10, 15); // initialize sorted array
    index: Integer;

index := binarySearch(arr, 8); // find index of value 8 in array
writeln("Index of 8 is ", index); // output: "Index of 8 is 2"
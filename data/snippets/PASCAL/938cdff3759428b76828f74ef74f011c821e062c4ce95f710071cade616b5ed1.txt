program QuickSort(input, output);

type
   arr = array[1..10] of integer;

var
   numbers: arr;
   i, j, pivot, temp: integer;

procedure quicksort(var nums: arr; first, last: integer);
begin
   if first < last then
   begin
      pivot := first;
      i := first;
      j := last;
      
      while(i < j) do
      begin
         while (nums[i] <= nums[pivot]) and (i < last) do
            i := i + 1;
         
         while (nums[j] > nums[pivot]) do
            j := j - 1;
         
         if (i < j) then
         begin
            temp := nums[i];
            nums[i] := nums[j];
            nums[j] := temp;
         end;
      end;
      
      temp := nums[j];
      nums[j] := nums[pivot];
      nums[pivot] := temp;
      
      quicksort(nums, first, j-1);
      quicksort(nums, j+1, last);
   end;
end;

begin
   for i := 1 to 10 do
      read(numbers[i]);
   
   quicksort(numbers, 1, 10);
   
   for i := 1 to 10 do
      write(numbers[i], ' ');
end.
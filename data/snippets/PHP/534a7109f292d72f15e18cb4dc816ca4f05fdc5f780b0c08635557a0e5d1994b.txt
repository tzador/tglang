<?php

// Define a function that sorts an array and returns the sorted array
function sortArray($array) {
    // Declare an empty array to store sorted elements
    $sortedArray = array();

    // Loop through the array to get the largest and smallest element
    foreach($array as $element) {
        // Set the initial values to the first element of the array
        $largest = $element;
        $smallest = $element;

        // Loop through the array again to compare elements with the largest and smallest
        foreach($array as $comparedElement) {
            // If the element is larger than the current largest, set it as the new largest
            if ($comparedElement > $largest) {
                $largest = $comparedElement;
            }
            // If the element is smaller than the current smallest, set it as the new smallest
            if ($comparedElement < $smallest) {
                $smallest = $comparedElement;
            }
        }

        // Add the smallest element to the beginning of the sorted array
        array_unshift($sortedArray, $smallest);
        // Remove the smallest element from the original array
        $key = array_search($smallest, $array);
        unset($array[$key]);

        // Add the largest element to the end of the sorted array
        array_push($sortedArray, $largest);
        // Remove the largest element from the original array
        $key = array_search($largest, $array);
        unset($array[$key]);
    }

    // Return the sorted array
    return $sortedArray;
}

// Define an array of numbers
$numbers = array(7, 2, 5, 9, 1, 8, 3);

// Call the sortArray function and store the sorted array in a variable
$sorted = sortArray($numbers);

// Print the sorted array
print_r($sorted);

// Output: Array
// (
//     [0] => 1
//     [1] => 2
//     [2] => 3
//     [3] => 5
//     [4] => 7
//     [5] => 8
//     [6] => 9
// )
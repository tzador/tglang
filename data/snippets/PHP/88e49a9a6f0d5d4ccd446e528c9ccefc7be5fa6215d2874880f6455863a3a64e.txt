class Database{
    private $host;
    private $username;
    private $password;
    private $dbname;
    private $db;

    // Constructor to set database credentials
    public function __construct($host, $username, $password, $dbname){
        $this->host = $host;
        $this->username = $username;
        $this->password = $password;
        $this->dbname = $dbname;
    }

    // Function to connect to database
    public function connect(){
        try {
            $this->db = new PDO("mysql:host=$this->host; dbname=$this->dbname", $this->username, $this->password);
            $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $this->db->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);
            echo "Connected successfully";
        }
        catch(PDOException $e) {
            echo "Connection failed: " . $e->getMessage();
        }
    }

    // Function to insert data into database
    public function insertData($name, $age, $email){
        // Prepare the statement
        $stmt = $this->db->prepare("INSERT INTO users (name, age, email) VALUES (:name, :age, :email)");
        // Bind values to the parameters
        $stmt->bindValue(':name', $name);
        $stmt->bindValue(':age', $age);
        $stmt->bindValue(':email', $email);
        // Execute the statement
        $stmt->execute();
        echo "Data successfully added";
    }

    // Function to get data from database
    public function getData(){
        // Prepare the statement
        $stmt = $this->db->prepare("SELECT * FROM users");
        // Execute the statement
        $stmt->execute();
        // Fetch all rows as an associative array
        $result = $stmt->fetchAll(PDO::FETCH_ASSOC);
        // Return the result
        return $result;
    }
}

// Create a new Database object
$db = new Database("localhost", "username", "password", "test_db");
// Connect to the database
$db->connect();
// Insert data into the database
$db->insertData("John", 25, "john@example.com");
// Get data from the database
$result = $db->getData();
// Print out the data
print_r($result);
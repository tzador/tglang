/**
* Function to recursively calculate the nth Fibonacci number
* @param int $n The position of the Fibonacci number to be calculated
* @return int The resulting Fibonacci number
*/
function fibonacci($n) {

	// Set the base cases
	if ($n == 0) {
		return 0;
	} elseif ($n == 1) {
		return 1;
	}

	/** 
	* Initialize an array to store previously calculated values
	* @var int[] $fib
	*/
	$fib = array(0, 1);

	// Loop through remaining values
	for ($i = 2; $i <= $n; $i++) {
		// Calculate the Fibonacci number at the current position
		$fib[$i] = $fib[$i - 1] + $fib[$i - 2];
	}

	// Return the resulting Fibonacci number
	return $fib[$n];
}

// Call the function and output the result
echo fibonacci(10); // Outputs 55
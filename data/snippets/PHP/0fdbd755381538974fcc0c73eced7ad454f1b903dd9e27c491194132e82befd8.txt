// This code snippet uses a recursive function to sort an array of numbers in ascending order
function bubbleSort(array $arr) {
    // Base case
    if (count($arr) <= 1) {
        return $arr;
    }

    $temp = 0;
    // Loop through the array
    for ($i = 0; $i < count($arr) - 1; $i++) {
        // If current element is greater than the next element, swap them
        if ($arr[$i] > $arr[$i + 1]) {
            $temp = $arr[$i];
            $arr[$i] = $arr[$i + 1];
            $arr[$i + 1] = $temp;
        }
    }

    // Recursive call on the array with the last element removed
    $sorted = bubbleSort(array_slice($arr, 0, -1));

    // Add the last element back into the sorted array
    $sorted[] = array_pop($arr);

    // Return the sorted array
    return $sorted;
}

// Example array to be sorted
$array = [5, 3, 1, 7, 2];

// Call the bubbleSort function and store the sorted array
$sortedArray = bubbleSort($array);

// Output the sorted array
print_r($sortedArray);

/*** Output:
Array
(
    [0] => 1
    [1] => 2
    [2] => 3
    [3] => 5
    [4] => 7
)
***/
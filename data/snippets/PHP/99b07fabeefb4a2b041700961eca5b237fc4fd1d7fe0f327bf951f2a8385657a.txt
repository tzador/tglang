<?php
 // Define a class called "Car"
 class Car {

     // Define public properties of the class
     public $make;
     public $model;
     public $color;
     public $year;

     // Define static method "showImportantInfo()"
     public static function showImportantInfo() {
         echo "This is a " . $this->make . " " . $this->model . " from " . $this->year . ".";
     }

     // Define constructor method to initialize properties
     public function __construct($make, $model, $color, $year) {
         $this->make = $make;
         $this->model = $model;
         $this->color = $color;
         $this->year = $year;
     }

     // Define public method "drive()"
     public function drive() {
         echo "This " . $this->make . " " . $this->model . " is driving.";
     }

     // Define public method "paint()" to change the car's color
     public function paint($newColor) {
         $this->color = $newColor;
         echo "The " . $this->make . " " . $this->model . " has been painted " . $newColor . ".";
     }
 }

 // Instantiate a new Car object with properties
 $myCar = new Car("Ford", "Mustang", "red", 2020);

 // Call the public "drive()" method on the Car object
 $myCar->drive(); // Output: "This Ford Mustang is driving."

 // Call the public "paint()" method on the Car object
 $myCar->paint("blue"); // Output: "The Ford Mustang has been painted blue."

 // Call the static "showImportantInfo()" method on the Car class
 Car::showImportantInfo(); // Output: "This is a Ford Mustang from 2020."

 // We can also access and change the properties directly
 echo "The " . $myCar->make . " " . $myCar->model . " is " . $myCar->color . "."; // Output: "The Ford Mustang is blue."
 
 $myCar->color = "black";
 echo "The " . $myCar->make . " " . $myCar->model . " is now " . $myCar->color . "."; // Output: "The Ford Mustang is now black."
?>
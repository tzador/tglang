<?php
// A complex PHP code snippet that creates a multidimensional array and uses conditional statements for sorting and displaying the data
// First, we declare an array with five sub-arrays
$data = array(
    array("John", "Doe", 25, "Male"),
    array("Jane", "Smith", 30, "Female"),
    array("Bob", "Johnson", 40, "Male"),
    array("Anna", "Williams", 35, "Female"),
    array("Mike", "Brown", 45, "Male")
);

// Next, we create a function that takes in the array and a column name as parameters
function sortByColumn($array, $column) {
    // We use a for loop to iterate through the array
    for ($i = 0; $i < count($array); $i++) {
    // We use a nested for loop to compare the values of the column for each sub-array
        for ($j = 0; $j < count($array)-1; $j++) {
            // If the value of the current column is greater than the next, we swap the positions of the two sub-arrays
            if ($array[$j][$column] > $array[$j+1][$column]) {
                $temp = $array[$j];
                $array[$j] = $array[$j+1];
                $array[$j+1] = $temp;
            }
        }
    }
    // Finally, we return the sorted array
    return $array;
}

// We call the function and pass in the array and the column "age" to sort the data by age
$sortedArray = sortByColumn($data, 2);

// We use a foreach loop to iterate through the sorted array and display the data in a table
echo "<table>
    <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Age</th>
        <th>Gender</th>
    </tr>";
foreach ($sortedArray as $row) {
    echo "<tr>";
    echo "<td>" . $row[0] . "</td>";
    echo "<td>" . $row[1] . "</td>";
    echo "<td>" . $row[2] . "</td>";
    echo "<td>" . $row[3] . "</td>";
    echo "</tr>";
}
echo "</table>";
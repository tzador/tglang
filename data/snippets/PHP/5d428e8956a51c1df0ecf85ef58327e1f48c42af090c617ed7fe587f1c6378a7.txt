<?php

// Define constants
define('PI', 3.14159);
define('COUNTRY', 'Canada');

// Define a class
class Shape {
    // Properties
    private $name;
    private $color;
    protected $area;
    protected $perimeter;

    // Constructor
    public function __construct($name, $color) {
        $this->name = $name;
        $this->color = $color;
    }

    // Getters and setters
    public function getName() {
        return $this->name;
    }

    public function getColor() {
        return $this->color;
    }

    public function setName($name) {
        $this->name = $name;
    }

    public function setColor($color) {
        $this->color = $color;
    }

    // Functions to calculate area and perimeter
    public function calculateArea() {
        return 'Cannot calculate area of a general shape.';
    }

    public function calculatePerimeter() {
        return 'Cannot calculate perimeter of a general shape.';
    }

    // Print information about the shape
    public function printDetails() {
        echo "<h3>Shape Details:</h3>";
        echo "<p>Shape: {$this->name}</p>";
        echo "<p>Color: {$this->color}</p>";
        echo "<p>Area: {$this->area}</p>";
        echo "<p>Perimeter: {$this->perimeter}</p>";
    }
}

// Define a child class, Rectangle
class Rectangle extends Shape {
    // Properties
    private $length;
    private $width;

    // Constructor
    public function __construct($name, $color, $length, $width) {
        parent::__construct($name, $color);
        $this->length = $length;
        $this->width = $width;
    }

    // Getters and setters
    public function getLength() {
        return $this->length;
    }

    public function getWidth() {
        return $this->width;
    }

    public function setLength($length) {
        $this->length = $length;
    }

    public function setWidth($width) {
        $this->width = $width;
    }

    // Override the calculateArea and calculatePerimeter functions
    public function calculateArea() {
        $this->area = $this->length * $this->width;
        return $this->area;
    }

    public function calculatePerimeter() {
        $this->perimeter = 2 * ($this->length + $this->width);
        return $this->perimeter;
    }
}

// Instantiate a new Rectangle object
$rectangle = new Rectangle('Rectangle', 'Red', 5, 3);

// Call the calculateArea and calculatePerimeter functions
echo "<p>Area of Rectangle: " . $rectangle->calculateArea() . "</p>";
echo "<p>Perimeter of Rectangle: " . $rectangle->calculatePerimeter() . "</p>";

// Print details of the Rectangle object
$rectangle->printDetails();

// Define another child class, Circle
class Circle extends Shape {
    // Properties
    private $radius;

    // Constructor
    public function __construct($name, $color, $radius) {
        parent::__construct($name, $color);
        $this->radius = $radius;
    }

    // Getters and setters
    public function getRadius() {
        return $this->radius;
    }

    public function setRadius($radius) {
        $this->radius = $radius;
    }

    // Override the calculateArea and calculatePerimeter functions
    public function calculateArea() {
        $this->area = PI * $this->radius * $this->radius;
        return $this->area;
    }

    public function calculatePerimeter() {
        $this->perimeter = 2 * PI * $this->radius;
        return $this->perimeter;
    }
}

// Instantiate a new Circle object
$circle = new Circle('Circle', 'Blue', 2);

// Call the calculateArea and calculatePerimeter functions
echo "<p>Area of Circle: " . $circle->calculateArea() . "</p>";
echo "<p>Perimeter of Circle: " . $circle->calculatePerimeter() . "</p>";

// Print details of the Circle object
$circle->printDetails();

// Print the country constant
echo "<p>Country: " . COUNTRY . "</p>";
<?php
// This is a simple PHP code snippet
//First, we declare a variable to hold a string
$name = "John";

//Next, we use the string concatenation operator to create a new string
$greeting = "Hello " . $name . "!";

//Now, we can print the greeting using the echo statement
echo $greeting;  // Output: Hello John!

//We can also use conditional statements to create different greetings based on the value of the variable
if($name == "John"){
    echo "Hello, John! How are you?";
}else{
    echo "Hello there! Nice to meet you.";
}

//We can also use loops to repeat the same greeting multiple times
for($i = 0; $i < 5; $i++){
    echo "Hello " . $name . "!";
}
// Output: Hello John!
//         Hello John!
//         Hello John!
//         Hello John!
//         Hello John!

//PHP also has built-in functions that we can use, such as the strlen() function to get the length of a string
$length = strlen($name); //Output: 4 (since the string "John" has 4 characters)
echo "The length of your name is " . $length . ".";

//We can also use arrays to store multiple values, such as names
$names = ["John", "Jane", "Bob"];
//We can then use a loop to print out a different greeting for each name in the array
for($i = 0; $i < count($names); $i++){
    echo "Hello " . $names[$i] . "!";
}
// Output: Hello John!
//         Hello Jane!
//         Hello Bob!

//Lastly, we can use user-defined functions to make our code more organized and reusable
//Here's an example of a function that takes in two parameters and returns the sum of the numbers
function sum($num1, $num2){
    return $num1 + $num2;
}

//We can then use the function to calculate the sum of two numbers and echo the result
$result = sum(5, 10); //Output: 15 (since 5 + 10 = 15)
echo "The sum of 5 and 10 is " . $result . ".";

//There are many more features and functions in PHP, but this code snippet should give you a basic understanding of its syntax and capabilities. Happy coding!
?>
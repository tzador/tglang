<?php
/**
* Function: array_split
* Description: Splits an array into chunks and returns a new array of chunks
*
* Parameters:
*   $array (array) - the array to be split
*   $chunk_size (int) - the size of each chunk
*
* Returns:
*   $result (array) - the array of chunks
**/
function array_split($array, $chunk_size) {
    /** 
    * Check if input array is valid 
    **/
    if(!is_array($array)) {
        throw new InvalidArgumentException('Input must be an array.');
    }

    /**
    * Get the length of the input array
    **/
    $length = count($array);

    /**
    * Check if chunk size is valid
    **/
    if($chunk_size < 1) {
        throw new InvalidArgumentException('Chunk size must be greater than 0.');
    }

    /**
    * Initialize the result array
    **/
    $result = array();

    /**
    * Loop through the input array and split it into chunks
    **/
    for($i = 0; $i < $length; $i += $chunk_size) {
        /**
        * Get the chunk of the input array
        **/
        $chunk = array_slice($array, $i, $chunk_size);

        /**
        * Push the chunk into the result array
        **/
        array_push($result, $chunk);
    }

    /**
    * Return the result array
    **/
    return $result;
}

/**
* Example usage
**/
// Initialize an array with numbers 1-10
$input = range(1, 10);

// Split the array into chunks of size 3
$output = array_split($input, 3);

// Print the result
print_r($output);

/**
* Output:
* Array
* (
*     [0] => Array
*         (
*             [0] => 1
*             [1] => 2
*             [2] => 3
*         )
*
*     [1] => Array
*         (
*             [0] => 4
*             [1] => 5
*             [2] => 6
*         )
*
*     [2] => Array
*         (
*             [0] => 7
*             [1] => 8
*             [2] => 9
*         )
*
*     [3] => Array
*         (
*             [0] => 10
*         )
* )
**/
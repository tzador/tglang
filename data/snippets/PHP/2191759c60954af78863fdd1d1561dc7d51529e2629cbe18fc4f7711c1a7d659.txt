<?php
// Define a constant with a long and complex value
define("LONG_COMPLEX_CONSTANT", sha1("This is a long complex value with numbers 123 and special characters !@#$%^&*()"));

// Create a function that checks if a given input is a number and adds it to an array if it is
function addNumberToArray($input, &$array) {
    if (is_numeric($input)) {
        $array[] = $input;
    }
}

// Create an associative array with complex keys and values
$complex_array = [
    "email" => "john.doe@example.com",
    "password" => md5("This is a complex password with special characters !@#$%^&*()")
];

// Use a loop to generate a long and complex string with a pattern of numbers and special characters
$long_string = "";
for ($i = 0; $i < 10; $i++) {
    $rand_num = rand(0, 9);
    $special_char = chr(rand(33, 47)); // ASCII values for special characters
    $long_string .= "{$rand_num}{$special_char}";
}

// Create a class with a private property and a public method that returns the value of the property
class ComplexClass {
    private $complex_property = md5("This is a complex property with numbers 789 and special characters !@#$%^&*()");

    public function getProperty() {
        return $this->complex_property;
    }
}

// Instantiate an object from the ComplexClass
$complex_object = new ComplexClass();

// Echo out the constant, array, string, and property values
echo LONG_COMPLEX_CONSTANT . "<br>";
print_r($complex_array);
echo "<br>{$long_string}<br>";
echo $complex_object->getProperty();
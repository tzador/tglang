/**
* Function to recursively sort a multidimensional array by a specific key
* @param array $input The input array to be sorted
* @param string $key The key to sort the array by
* @return array The sorted array
*/
function sort_array_by_key_recursive($input, $key) {
    
    // Define an empty array to store the sorted values
    $sorted = [];
        
    // Loop through the input array
    foreach($input as $item) {
        
        // Check if the item is an array
        if(is_array($item)) {
            
            // Recursively call the function to sort the sub-array
            $sorted[] = sort_array_by_key_recursive($item, $key);
            
        } else {
            
            // If the item is not an array, push it to the sorted array
            $sorted[] = $item;
        }
    }
    
    // Sort the array by the specified key using array_multisort()
    array_multisort(array_column($sorted, $key), SORT_ASC, $sorted);
    
    // Return the sorted array
    return $sorted;
}
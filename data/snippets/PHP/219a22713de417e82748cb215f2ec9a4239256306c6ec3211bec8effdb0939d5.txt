<?php
// Define a class for cars
class Car {
    // Declare properties
    public $brand; // Store the car brand
    public $model; // Store the car model
    private $year; // Store the year the car was made
    protected $color; // Store the color of the car
    protected static $totalCars = 0; // Store the total number of cars created

    // Constructor method to set initial values of properties
    public function __construct($brand, $model, $year, $color) {
        $this->brand = $brand;
        $this->model = $model;
        $this->year = $year;
        $this->color = $color;
        self::$totalCars++; // Increment the total number of cars created
    }

    // Getter method to retrieve protected property
    public function getColor() {
        return $this->color;
    }

    // Setter method to update protected property
    public function setColor($newColor) {
        $this->color = $newColor;
    }

    // Static method to retrieve the total number of cars created
    public static function getTotalCars() {
        return self::$totalCars;
    }
}

// Create new objects (cars)
$car1 = new Car("Toyota", "Camry", 2018, "black");
$car2 = new Car("Honda", "Civic", 2019, "blue");
$car3 = new Car("Ford", "Mustang", 2020, "red");

// Print out car details using object properties and methods
echo "Car 1: {$car1->brand} {$car1->model}, {$car1->year} model, {$car1->getColor()} color. <br>";
echo "Car 2: {$car2->brand} {$car2->model}, {$car2->year} model, {$car2->getColor()} color. <br>";
echo "Car 3: {$car3->brand} {$car3->model}, {$car3->year} model, {$car3->getColor()} color. <br>";

// Update the color of car 1 using the setter method
$car1->setColor("white");

// Print out the new color of car 1
echo "Car 1 color is now: {$car1->getColor()} <br>";

// Retrieve and print the total number of cars created using the static method
echo "Total number of cars created: " . Car::getTotalCars();
<?php

class User
{
    private $username;
    private $password;

    public function __construct($username, $password)
    {
        //sets the username and password for the user
        $this->username = $username;
        $this->password = $password;
    }

    /**
     * Checks if the password matches the saved password for the user
     * @param string $password
     * @return bool true if password is correct, false otherwise
     */
    public function verifyPassword($password)
    {
        //compares the given password and the saved password
        if ($this->password === $password) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Changes the password for the user
     * @param string $newPassword
     */
    public function changePassword($newPassword)
    {
        //sets the new password for the user
        $this->password = $newPassword;
    }

    /**
     * Generates a random password of a specified length
     * @param int $length
     * @return string|false A randomly generated string of the specified length, or false if length is invalid
     */
    public static function generatePassword($length)
    {
        //checks if length is valid
        if ($length <= 0) {
            return false;
        }
        //creates an array of characters to use for the password
        $charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
        $charsetLength = strlen($charset);
        //randomly selects characters from the charset to create the password
        $password = '';
        for ($i = 0; $i < $length; $i++) {
            $randomIndex = rand(0, $charsetLength - 1);
            $password .= $charset[$randomIndex];
        }
        
        return $password;
    }
}

//example usage:
$user = new User('JohnDoe', 'helloworld');
$user->changePassword(User::generatePassword(8));
echo "New password: " . $user->password; //output: New password: ga3-Bu8f
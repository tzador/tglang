<?php

// This function takes in two parameters and returns their sum
function addNumbers($num1, $num2) {
    return $num1 + $num2;
}

// This array holds some string values
$colors = array("Red", "Blue", "Green", "Yellow");

// This for loop prints out each color in the colors array
for($i = 0; $i < count($colors); $i++) {
    echo $colors[$i] . "<br>";
}

// This if statement checks if a number is less than 10
if (20 < 10) {
    echo "Wrong!";
} else {
    echo "Correct!";
}

// This class represents a dog with properties and methods
class Dog {
    // These are the properties of the dog class
    public $name;
    public $age;
    public $breed;

    // This is the constructor function that sets the properties of the dog
    function __construct($name, $age, $breed) {
        $this->name = $name;
        $this->age = $age;
        $this->breed = $breed;
    }

    // This method retrieves and outputs the name of the dog
    public function getName() {
        return "My dog's name is " . $this->name . ".";
    }

    // This method retrieves and outputs the age of the dog
    public function getAge() {
        return "My dog is " . $this->age . " years old.";
    }

    // This method retrieves and outputs the breed of the dog
    public function getBreed() {
        return "My dog's breed is " . $this->breed . ".";
    }
}

// This creates a new instance of the Dog class
$myDog = new Dog("Max", 5, "Labrador");

// This calls the methods of the dog class and outputs the results
echo $myDog->getName() . "<br>";
echo $myDog->getAge() . "<br>";
echo $myDog->getBreed() . "<br>";

// This opens the specified file in read-only mode
$file = fopen("myFile.txt", "r");

// This while loop reads and prints the contents of the file line by line
while (!feof($file)) {
    echo fgets($file) . "<br>";
}

// This closes the file
fclose($file);

// This creates an array of numbers
$numbers = array(3, 2, 8, 6, 5, 1);

// This sorts the array in ascending order
sort($numbers);

// This outputs the sorted array
print_r($numbers);

// This outputs the sum of the first and last numbers in the array using the addNumbers function
echo addNumbers($numbers[0], $numbers[count($numbers) - 1]);
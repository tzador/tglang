<?php

// An example of a complex PHP code snippet
// This code snippet performs a binary search algorithm

// Declare an array of sorted numbers
$numbers = array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20);

// Declare a variable for search, in this case we will search for the number 12
$search = 12;

// Set the initial values for low and high indexes
$low = 0;
$high = count($numbers) - 1;

// While loop to perform binary search
while ($low <= $high) {

  // Calculate the midpoint
  $mid = floor(($low + $high) / 2);

  // If the number is found at the midpoint, return the index
  if ($numbers[$mid] == $search) {
    return $mid;
  }

  // If the number is smaller than the number at the midpoint, change the high index
  if ($numbers[$mid] > $search) {
    $high = $mid - 1;
  }

  // If the number is larger than the number at the midpoint, change the low index
  if ($numbers[$mid] < $search) {
    $low = $mid + 1;
  }

  // If the number is not found, return -1
  return -1;
}

// Call the function and store the returned index in a variable
$result = binarySearch($numbers, $search);

// Print the result
print($result);
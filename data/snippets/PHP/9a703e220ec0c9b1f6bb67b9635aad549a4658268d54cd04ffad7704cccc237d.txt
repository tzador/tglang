<?php 

// This is a complex sorting function that uses a recursive approach to sort an array in ascending order
// The function takes in an array and its size as parameters and returns the sorted array
function recursiveSort(&$arr, $size) {

    // base case: if array size is 1, return
    if ($size == 1) {
        return;
    }

    // recursively call the function for the remaining array elements
    recursiveSort($arr, $size-1);

    // store the last element of the array 
    $last = $arr[$size-1];
    $j = $size-2;

    // shift array elements greater than $last to the right 
    while ($j >= 0 && $arr[$j] > $last) {
        $arr[$j+1] = $arr[$j];
        $j--;
    }

     // insert $last at the correct position in the sorted array
    $arr[$j+1] = $last;
}

// example array to be sorted
$arr = array(5, 2, 8, 10, 1);
// get the size of the array
$size = sizeof($arr);
// call the function to sort the array
recursiveSort($arr, $size);

 // print the sorted array
echo "Sorted array: ";
for ($i=0; $i < $size; $i++) {
    echo $arr[$i] . " ";
}

// Output: Sorted array: 1 2 5 8 10

?>
<?php
/**
 * This is a multi-line comment.
 * It can span multiple lines.
 */

/* This is a single-line comment */

// This is also a single-line comment

// Defining a constant with the value 'Pi'
define("Pi", 3.14159);

/**
 * Defining a class called 'Shape'
 * with a constructor function that takes in the properties of the shape
 * and sets them as class variables
 */
class Shape {

    private $name; // Private variable to hold the shape's name
    private $color; // Private variable to hold the shape's color
    protected $area; // Protected variable to hold the shape's area

    /**
     * Constructor function that takes in the shape's name and color
     * and sets them as class variables
     * @param string $name The shape's name
     * @param string $color The shape's color
     */
    public function __construct($name, $color) {
        $this->name = $name;
        $this->color = $color;
    }

    /**
     * Function to calculate the area of the shape
     * NOTE: This is a dummy function, different shapes would have their own logic for area calculation
     * @return float The area of the shape
     */
    public function calculateArea() {
        return $this->area;
    }

    /**
     * Function to print out information about the shape
     * @return string Information about the shape
     */
    public function displayInfo() {
        return "This is a {$this->color} {$this->name} with an area of {$this->calculateArea()} square units.";
    }
}

/**
 * Defining a class 'Circle' that extends the 'Shape' class
 */
class Circle extends Shape {

    private $radius; // Private variable to hold the circle's radius

    /**
     * Constructor function that takes in the circle's name, color, and radius
     * and sets them as class variables
     * @param string $name The circle's name
     * @param string $color The circle's color
     * @param float $radius The circle's radius
     */
    public function __construct($name, $color, $radius) {
        parent::__construct($name, $color); // Calling the parent constructor
        $this->radius = $radius;
    }

    /**
     * Overriding the calculateArea function from the parent class to calculate the area of the circle
     * @return float The area of the circle
     */
    public function calculateArea() {
        return round(Pi * pow($this->radius, 2), 2); // Using the 'Pi' constant to calculate the area
    }
}

// Creating an instance of the 'Circle' class with a name of 'Circle 1', color of 'red' and a radius of 5
$circle = new Circle('Circle 1', 'red', 5);
echo $circle->displayInfo(); // Displaying information about the circle

/**
 * Defining a class called 'Rectangle' that extends the 'Shape' class
 */
class Rectangle extends Shape {

    private $length; // Private variable to hold the rectangle's length
    private $width; // Private variable to hold the rectangle's width

    /**
     * Constructor function that takes in the rectangle's name, color, length, and width
     * and sets them as class variables
     * @param string $name The rectangle's name
     * @param string $color The rectangle's color
     * @param float $length The rectangle's length
     * @param float $width The rectangle's width
     */
    public function __construct($name, $color, $length, $width) {
        parent::__construct($name, $color); // Calling the parent constructor
        $this->length = $length;
        $this->width = $width;
    }

    /**
     * Overriding the calculateArea function from the parent class to calculate the area of the rectangle
     * @return float The area of the rectangle
     */
    public function calculateArea() {
        return $this->length * $this->width;
    }
}

// Creating an instance of the 'Rectangle' class with a name of 'Rectangle 1', color of 'blue', length of 10, and width of 6
$rectangle = new Rectangle('Rectangle 1', 'blue', 10, 6);
echo $rectangle->displayInfo(); // Displaying information about the rectangle
?>
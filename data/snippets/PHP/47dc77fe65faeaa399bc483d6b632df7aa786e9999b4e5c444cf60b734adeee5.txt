<?php
// A complex function that performs a variety of mathematical operations
function complexMath($num1, $num2) {
    // Calculate the square root of the sum of the numbers
    $squareRoot = sqrt($num1 + $num2);

    // Round the square root to the nearest integer
    $rounded = round($squareRoot);

    // Check if the rounded number is prime
    if(isPrime($rounded)) {
        // If prime, multiply it by 2
        $result = $rounded * 2;
    } else {
        // If not prime, divide it by 2
        $result = $rounded / 2;
    }

    // Create an array of Fibonacci numbers
    $fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34];

    // Loop through the array and add each number to the result
    foreach ($fibonacci as $number) {
        $result += $number;
    }

    // Take the sum of the numbers and cube it
    $cubed = pow($result, 3);

    // Convert the result to binary
    $binary = decbin($cubed);

    // Return the final result
    return $binary;
}

// A helper function to check if a number is prime
function isPrime($num) {
    // 1 is not a prime number
    if($num == 1) {
        return false;
    }

    // Loop through all the numbers up to half of the number
    for($i = 2; $i <= $num/2; $i++) {
        // If the number is divisible by any other number, it is not prime
        if($num % $i == 0) {
            return false;
        }
    }

    // If the loop completes without returning false, the number is prime
    return true;
}

// Use the complexMath function with two parameters
$result = complexMath(5, 11);

// Print the result
echo $result;
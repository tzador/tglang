<?php

# This is a comment in PHP

// This is also a comment in PHP

/**
 * This is a multi-line comment in PHP
 * It can span multiple lines
 * and is often used for documentation
 */

// Below is a function definition with a parameter and return statement
function calculateSquare($number) {
  return $number * $number;
}

// Here, we are calling the function with an argument and storing the result in a variable
$square = calculateSquare(5);

// This is a conditional statement using the ternary operator
$evenOrOdd = $square % 2 == 0 ? "even" : "odd";

// Below is an array with a combination of different data types
$myArray = array(1, "two", 3.5, false); 

// Here, we are looping through the array and printing out the values
foreach($myArray as $value) {
  echo $value . "<br>";
}

// This is a class with a constructor, property, and method
class Person {
  private $name;

  function __construct($name) {
    $this->name = $name;
  }

  public function sayHello() {
    echo "Hello, my name is " . $this->name;
  }
}

// Here, we are creating an instance of the Person class and calling the sayHello method
$person = new Person("John");
$person->sayHello();

// This is a try-catch block for error handling
try {
  // Code that may throw an exception
} catch(Exception $e) {
  echo "An error occurred: " . $e->getMessage();
}

// This is a database connection using MySQLi
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

// SQL query to retrieve data from a table
$sql = "SELECT id, name, email FROM users";
$result = $conn->query($sql);

// If the query is successful, loop through the results and print them out
if ($result->num_rows > 0) {
  while($row = $result->fetch_assoc()) {
    echo "ID: " . $row["id"] . ", Name: " . $row["name"] . ", Email: " . $row["email"] . "<br>";
  }
}
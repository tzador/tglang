<?php
//This is a multi-dimensional array with various student information
$students = array(
    array("Name" => "John", "Age" => 23, "Major" => "Computer Science", "GPA" => 3.5),
    array("Name" => "Sarah", "Age" => 21, "Major" => "Business Administration", "GPA" => 3.8),
    array("Name" => "David", "Age" => 22, "Major" => "Mechanical Engineering", "GPA" => 3.2)
);

//This function will sort the students array by their GPA in descending order
function sortStudents($array) {
    //This nested function compares the GPA values of two students and returns the necessary comparison for sorting
    function compareGPA($a, $b) {
        if ($a["GPA"]== $b["GPA"]) {
            return 0;
        }
        return ($a["GPA"] < $b["GPA"]) ? 1 : -1;
    }

    //Sort the array using the compareGPA function
    usort($array, "compareGPA");

    //Return the sorted array
    return $array;
}

//Print the unsorted student information
echo "Unsorted Student Information: </br>";
foreach ($students as $student) {
    echo "Name: " . $student["Name"] . " - Age: " . $student["Age"] . " - Major: " . $student["Major"] . " - GPA: " . $student["GPA"] . "</br>";
}

//Pass the students array into the sortStudents function and store the returned sorted array
$sortedStudents = sortStudents($students);

//Print the sorted student information
echo "</br> Sorted Student Information: </br>";
foreach ($sortedStudents as $student) {
    echo "Name: " . $student["Name"] . " - Age: " . $student["Age"] . " - Major: " . $student["Major"] . " - GPA: " . $student["GPA"] . "</br>";
}
// Declare a record type with a string and int field
type Person = { Name : string; Age : int }

// Define a function that constructs a person record
let createPerson name age =
    { Name = name; Age = age }

// Create a new person record using the function
let person = createPerson "John" 25

// Print out the person's name and age
printfn "Name: %s, Age: %d" person.Name person.Age

// Define a list of person records
let people = [
    { Name = "Emily"; Age = 20 };
    { Name = "Michael"; Age = 35 };
    { Name = "Sarah"; Age = 28 }
]

// Filter the list to only include people over the age of 30
let filteredPeople = people |> List.filter (fun x -> x.Age > 30)

// Print out the names of the filtered people
printfn "%s" (filteredPeople |> List.map (fun x -> x.Name) |> String.concat ", ")
// This is a function that checks if an input number is prime
let rec isPrime n =
    match n with
    | 1 | 0 -> false // 1 and 0 are not prime numbers
    | 2 | 3 -> true // 2 and 3 are prime numbers
    | _ ->
        let limit = int(sqrt(double(n))) // calculate square root of n as limit
        let rec loop i =
            if i > limit then true // if we have checked up to the limit and found no divisibility, n is prime
            else if n % i = 0 then false // if n is divisible by any number below limit, it is not prime
            else loop (i + 1) // recursively check for divisibility with next number
        loop 2
let rec factorial n =                      (*Defines a function named factorial that takes in an integer 'n'*)
    match n with                           (*Starts a pattern matching statement*)
    | n when n <= 0 -> 1                   (*Specifies what to do when n is less than or equal to 0*)
    | _ -> n * factorial(n-1)             (*Specifies what to do when n is greater than 0, which calls the function again with n-1*)
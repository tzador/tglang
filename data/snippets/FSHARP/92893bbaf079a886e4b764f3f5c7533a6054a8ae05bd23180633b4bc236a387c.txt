/// Function that checks if a string is a valid email address
let isValidEmail (email: string) : bool =
    // Pattern match to ensure email contains "@" symbol
    match email with
    | null -> false
    | "" -> false
    | _ when not (email.Contains("@")) -> false
    | _ ->
        // Split email at "@" symbol
        let emailParts = email.Split '@'
        // Check if there are exactly 2 parts
        if emailParts.Length <> 2 then
            false
        else
            // Get left and right parts of email
            let left = emailParts.[0]
            let right = emailParts.[1]

            // Check left part for length and valid characters
            if left.Length > 64 then
                false
            elif left |> containsInvalidCharacters then
                false
            else
                // Check right part for length and valid characters
                if right.Length > 255 then
                    false
                elif right |> containsInvalidCharacters then
                    false
                else
                    // Check if any consecutive dots are present
                    if email.Contains("..") then
                        false
                    else
                        // Check if there is a dot immediately before or after the "@"
                        if email.[(email.IndexOf("@") - 1)] = '.' || email.[email.IndexOf("@") + 1] = '.' then
                            false
                        else
                            // Check if there is a dot immediately after or before the "."
                            let dotFound = Seq.exists (fun c -> c = '.') left in
                            dotFound || left |> String.contains ".."
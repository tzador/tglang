// Example implementation of Quick Sort algorithm in FSharp

let partition pivot list =
    let rec split smaller larger remaining =
        match remaining with
        | [] -> smaller, larger
        | head::tail ->
            if head < pivot then
                split (head::smaller) larger tail
            else
                split smaller (head::larger) tail
    split [] [] list

let quicksort list =
    let rec sort remaining =
        match remaining with
        | [] -> []
        | pivot::tail ->
            let smaller, larger = partition pivot tail
            List.concat [sort smaller; [pivot]; sort larger]
    sort list
	
// Example usage
let myList = [5; 2; 7; 1; 3]
let sortedList = quicksort myList

//sortedList will now be [1; 2; 3; 5; 7]
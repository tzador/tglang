// This is a function that takes in a list of integers and returns the sum of all even numbers in the list
let sumEvenNumbers (numbers: List<int>): int =
    // This is a recursive helper function that keeps track of the sum
    let rec sumHelper (numList: List<int>, sum: int): int =
        match numList with
        | [] -> sum // Base case: no more numbers left to iterate through, return the sum
        | x :: xs when x % 2 = 0 -> sumHelper xs (sum + x) // If current number is even, add it to the sum and continue iterating through the rest of the list
        | _ :: xs -> sumHelper xs sum // If current number is odd, continue iterating through the rest of the list without adding it to the sum
    sumHelper numbers 0 // Call the helper function, starting with an initial sum of 0
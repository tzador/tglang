// A simple function definition
let addFunc num1 num2 = num1 + num2

// A higher-order function that takes in a function as an argument
let doMath operation num1 num2 = operation num1 num2

// Calling the higher-order doMath function with the addFunc function
doMath addFunc 2 3 // Output: 5

// A function that returns a function as its output
let returnFunc baseNum =
    let multiplier = 2
    let innerFunc num = baseNum * multiplier * num
    innerFunc

// Assigning the returnFunc to a variable and calling that function with an argument
let multiplyByFive = returnFunc 5
multiplyByFive 10 // Output: 100 

// A recursive function to calculate the factorial of a number
let rec factorial n =
    match n with
    | 0 -> 1
    | _ -> n * factorial (n-1)

factorial 5 // Output: 120
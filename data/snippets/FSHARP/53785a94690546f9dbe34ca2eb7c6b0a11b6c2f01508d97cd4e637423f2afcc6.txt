//Function to compute factorial
let rec factorial x = 
    match x with 
    | 0 -> 1
    | 1 -> 1 
    | n -> n * factorial (n-1)

//Function to find the sum of even numbers in a list
let rec sumEven list = 
    match list with 
    |[] -> 0 
    | x::xs -> if x % 2 = 0 then x + sumEven xs else sumEven xs

//Function to iterate through list and return new list with squared values
let rec squareList list = 
    match list with 
    |[] -> [] 
    | x::xs -> (x * x)::squareList xs

//Main function to call and test functions
let factorialResult = factorial 5
let sumEvenResult = sumEven [1;2;3;4;5;6;7;8;9;10]
let squaredList = squareList [1;2;3;4;5]
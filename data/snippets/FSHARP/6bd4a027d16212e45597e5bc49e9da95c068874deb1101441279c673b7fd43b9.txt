(* Define a recursive function to calculate the factorial of a number *)
let rec factorial n =
    match n with
    | 0 -> 1 (* Base case: factorial of 0 is 1 *)
    | _ -> n * factorial (n-1) (* Recursive step: multiply n with factorial of n-1 *)

(* Define a function to print the factorial of a number *)
let printFactorial n =
    printfn "The factorial of %i is %i" n (factorial n)

(* Initialize a list of numbers *)
let numbers = [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]

(* Use a higher order function to loop through the list and print the factorial of each number *)
List.iter printFactorial numbers

(* Output:
The factorial of 0 is 1
The factorial of 1 is 1
The factorial of 2 is 2
The factorial of 3 is 6
The factorial of 4 is 24
The factorial of 5 is 120
The factorial of 6 is 720
The factorial of 7 is 5040
The factorial of 8 is 40320
The factorial of 9 is 362880
*)
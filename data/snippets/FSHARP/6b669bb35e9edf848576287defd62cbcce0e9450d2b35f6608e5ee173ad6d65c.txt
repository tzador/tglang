// A function that calculates the nth Fibonacci number
let rec Fibonacci n =
    match n with
    | 0 | 1 -> n
    | _ -> Fibonacci(n-1) + Fibonacci(n-2)

// A list containing the first 10 Fibonacci numbers
let fibList = [for i in 0 .. 9 -> Fibonacci i ]

// A function that takes in a list of integers and returns a new list
// with only the even numbers
let evenList list = 
    List.filter (fun x -> x % 2 = 0) list

// A function that takes in a string and reverses it
let reverseString str = 
    List.rev (str |> List.ofSeq) |> List.toArray |> System.String

// A function that calculates the factorial of a given number
let rec Factorial n =
    match n with
    | 0 -> 1
    | _ -> n * Factorial(n-1)

// Example usage of the functions:
printfn "The 10th Fibonacci number is %i" (Fibonacci 10)
printfn "The even numbers in the list are %A" (evenList [1;2;3;4;5;6;7;8;9;10])
printfn "The reversed string is %s" (reverseString "Hello World!")
printfn "The factorial of 5 is %i" (Factorial 5)
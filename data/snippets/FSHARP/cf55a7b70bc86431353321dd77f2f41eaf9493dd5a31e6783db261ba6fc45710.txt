let rec fib x = 
    match x with
    | 1 -> 0
    | 2 -> 1
    | _ -> fib (x - 1) + fib (x - 2)

let result = fib 10

// The function `fib` takes in an integer `x` and calculates the `x-th` term of the Fibonacci sequence.
// The function uses pattern matching to handle the base cases of 1 and 2, returning 0 and 1 respectively.
// For any other value of `x`, the function recursively calls itself with `x` decreased by 1 and 2,
// and adds the results together to compute the Fibonacci number.
// The final result is stored in the `result` variable.
// Example output for `fib 10` would be `34`.

printfn "The 10th term of the Fibonacci sequence is %i." result
///Defines a function that takes in two parameters: x and y and returns the greater of the two values
let greater x y =
    if x > y then x
    else y

///Defines a function that takes in an integer n and returns a list of n elements, each starting from 0 and incrementing by 2
let getList n =
    [0..2..2*n]

///Defines a recursive function that calculates the factorial of a given number
let rec factorial n =
    if n > 1 then n * factorial (n - 1)
    else 1

///Defines a recursive function that calculates the nth Fibonacci number
let rec fibonacci n =
    if n < 2 then n
    else fibonacci (n-1) + fibonacci (n-2)

///Defines an anonymous function that multiplies its input by 2 and adds 1 to it
(fun x -> 2*x + 1)

///Defines a class called "Person" with properties: name, age, and occupation
type Person =
    | Person of string * int * string

///Defines a mutually recursive function between two functions
let rec even n = if n = 0 then true else odd (n - 1)
and odd n = if n = 0 then false else even (n - 1)
let fibonacci n = 
    let rec loop acc1 acc2 count = 
        if count = n then acc1 
        else loop acc2 (acc1 + acc2) (count + 1)
    loop 0 1 1

let rec mergeSort (arr : int[]) : int[] =
    if arr.Length <= 1 then arr
    else
      let pivotIndex = arr.Length / 2
      let left = mergeSort (arr.[0..pivotIndex-1])
      let right = mergeSort (arr.[pivotIndex..])
      let rec merge left right result =
          match left, right with
          | [], _ -> result @ right
          | _, [] -> result @ left
          | h1::t1, h2::t2 ->
              if h1 < h2 then 
                  merge t1 right (result @ [h1]) 
              else
                  merge t2 right (result @ [h2])
      merge left right []

let result = fibonacci 10
let array = [| 5; 2; 8; 1; 9; 3; 6; 4; 7; 10 |]
let sortedArray = mergeSort array

printfn "10th Fibonacci number is %d" result
printfn "Sorted array is %A" sortedArray
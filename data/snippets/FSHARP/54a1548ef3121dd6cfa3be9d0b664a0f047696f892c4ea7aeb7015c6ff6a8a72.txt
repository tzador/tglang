(* Function to check if a given number is prime or not *)
let isPrime n =
    // Check if n is equal to 2
    match n with
    | 2 -> true
    // Check if n is divisible by any number from 2 to n-1
    | _ -> [2..n-1] |> List.exists (fun x -> n % x = 0) |> not

(* Function to generate a list of prime numbers up to a given number *)
let rec generatePrimes n =
    // Base case, return empty list if n is less than 2
    if n < 2 then [] 
    // Recursive case, check if n is prime and add to list if so
    else if isPrime n then [n] @ generatePrimes (n-1) 
    // If n is not prime, move on to next number
    else generatePrimes (n-1)

// Call function with input of 20
let primeList = generatePrimes 20

// Print out the list of prime numbers
printf "Prime numbers up to 20: %A" primeList
let rec fibonacci (n:int) = // Recursive function to generate the nth number in the Fibonacci sequence
    match n with // Pattern matching to handle different cases
    | 1 -> 0 // Base case for the first number in the sequence
    | 2 -> 1 // Base case for the second number in the sequence
    | _ -> fibonacci (n-1) + fibonacci(n-2) // Recursive step to calculate the nth number by adding the previous two numbers in the sequence

let rec printFibonacci (n:int) = // Recursive function to print the Fibonacci sequence up to the nth number
    match n with
    | 1 -> printf "0" // Base case for printing the first number
    | 2 -> printf "0, 1" // Base case for printing the first two numbers
    | _ -> printf "%d, %d, " (fibonacci(n-2)) (fibonacci(n-1)); printFibonacci(n-1) // Recursive step to print the next number in the sequence and call the function with n-1

printFibonacci 10 // Call the printFibonacci function with input 10 to print the first 10 numbers in the sequence
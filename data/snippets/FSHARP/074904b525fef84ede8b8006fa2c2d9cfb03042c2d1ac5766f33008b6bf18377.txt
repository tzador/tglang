// This is a function that calculates the nth fibonacci number using recursion

let rec nthFibonacci n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | _ -> nthFibonacci (n-1) + nthFibonacci (n-2)

// Print the first 10 fibonacci numbers
for i in 0 .. 9 do
    printfn "The %ith fibonacci number is %i" i (nthFibonacci i)

// Output:
// The 0th fibonacci number is 0
// The 1st fibonacci number is 1
// The 2nd fibonacci number is 1
// The 3rd fibonacci number is 2
// The 4th fibonacci number is 3
// The 5th fibonacci number is 5
// The 6th fibonacci number is 8
// The 7th fibonacci number is 13
// The 8th fibonacci number is 21
// The 9th fibonacci number is 34
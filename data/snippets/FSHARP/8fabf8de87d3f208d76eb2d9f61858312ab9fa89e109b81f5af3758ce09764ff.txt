/// Define a function that checks if a number is prime
let isPrime (num: int) =
    if num < 2 then
        false
    else
        let mutable isPrime = true
        for i in 2 .. num/2 do
            if num % i = 0 then
                isPrime <- false
        isPrime

/// Define a function that adds two numbers and returns the result
let add (num1: int) (num2: int) = num1 + num2

/// Define a recursive function that calculates the factorial of a number
let rec factorial (num: int) =
    if num <= 1 then
        1I
    else
        num * factorial (num - 1)

/// Define a list of numbers
let numbers = [5; 10; 15; 20; 25]

/// Use the isPrime function to filter out prime numbers from the list
let filtered = List.filter isPrime numbers

/// Use the add function to compute the sum of all numbers in the list
let sum = List.fold (+) 0 filtered

/// Print the final result
printfn "The sum of all prime numbers in the list is: %i" sum
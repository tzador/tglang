let rec merge (xs: int list) (ys: int list) : int list =
    match xs, ys with
    | [], _ -> ys
    | _, [] -> xs
    | x::xs', y::ys' ->
        if x <= y then x::(merge xs' ys)
        else y::(merge xs ys')

let rec mergeSort (xs: int list) : int list =
    match xs with
    | [] -> []
    | [x] -> [x]
    | xs ->
        let left = xs |> List.take (List.length xs / 2)
        let right = xs |> List.skip (List.length xs / 2)
        merge (mergeSort left) (mergeSort right)
(** The following function calculates the nth Fibonacci number recursively **)
(** Input: Int representing which Fibonacci number to calculate **)
(** Output: nth Fibonacci number **)

let rec fib n =
    match n with
    | 0 -> 0 // Base case for 0th Fibonacci number
    | 1 -> 1 // Base case for 1st Fibonacci number
    | _ -> (fib(n-1) + fib(n-2)) // Recursive case, sum of previous two Fibonacci numbers

(** The following function calculates the factorial of a given number **)
(** Input: Int representing the number to calculate factorial for **)
(** Output: Factorial of the given number **)

let rec factorial n =
    match n with
    | 0 -> 1 // Base case for factorial of 0
    | 1 -> 1 // Base case for factorial of 1
    | _ -> n * factorial(n-1) // Recursive case, multiply by previous factorial

(** The following code snippet shows an example of pattern matching **)
(** Input: String representing a day of the week **)
(** Output: Message for specific days or a default message for any other day **)

let checkDay (dayOfWeek: string) =
    match dayOfWeek with
    | "Monday" -> printfn "It's the first day of the work week!"
    | "Tuesday" -> printfn "Only 4 more days until the weekend!"
    | "Wednesday" -> printfn "Halfway through the week, keep pushing!"
    | "Thursday" -> printfn "Almost there, just one more day!"
    | "Friday" -> printfn "TGIF, time to relax and recharge"
    | _ -> printfn "Not a known work day, maybe it's a weekend?"
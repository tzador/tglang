type BinaryTree<'a> =
    | Empty
    | Node of 'a * BinaryTree<'a> * BinaryTree<'a>

let rec searchTree (tree: BinaryTree<'a>) (target: 'a) : bool =
    match tree with
     | Empty -> false
     | Node (value, left, right) ->
        if target = value then
            true
        else if target < value then
         searchTree left target
        else
         searchTree right target
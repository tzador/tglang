//Define a function that takes in two lists of integers and returns a list with the sum of each element in the corresponding positions.
let rec listAddition (list1 : int list) (list2 : int list) =
    match list1, list2 with
    | x::xs, y::ys -> (x + y)::(listAddition xs ys) //Recursive call with tail recursion to continue adding elements
    | _, _ -> [] //Base case when lists are empty

//Example usage:
let list1 = [1; 2; 3]
let list2 = [4; 5; 6]
let sumList = listAddition list1 list2
//Output: sumList = [5; 7; 9]
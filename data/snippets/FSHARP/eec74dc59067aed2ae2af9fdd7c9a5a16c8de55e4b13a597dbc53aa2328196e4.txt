// A function to calculate the nth Fibonacci number
let rec fib n =
    match n with
    | 0 | 1 -> n
    | _ -> fib (n-1) + fib (n-2)

// A function to check if a number is prime
let isPrime n =
    let rec checkPrime i =
        i * i > n || ( n % i <> 0 && checkPrime (i + 1) )
    checkPrime 2

// A function to find the first prime number greater than n
let rec findNextPrime n =
    if isPrime (n + 1) then n + 1
    else findNextPrime (n + 1)

// A function to generate a list of the first n prime numbers
let rec generatePrimes n =
    if n = 0 then []
    else
        let nextPrime = findNextPrime (List.head (generatePrimes (n - 1)))
        List.insert 0 nextPrime (generatePrimes (n - 1))

// A function to print the first 10 prime numbers
let firstTenPrimes = generatePrimes 10
printfn "The first 10 prime numbers are: %A" firstTenPrimes
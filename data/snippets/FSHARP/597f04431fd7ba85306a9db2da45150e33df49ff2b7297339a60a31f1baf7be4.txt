// Define a function that checks if a given number is prime
let isPrime n =
    // Use a for loop to check for factors
    for i in 2 .. n-1 do
        // If the remainder is 0, then the number is not prime
        if (n % i) = 0 then
            // Return false
            false

    // If no factors are found, the number is prime
    true

// Define a function to find the nth prime number
let rec nthPrime n =
    // Initialize a counter to keep track of prime numbers found
    let mutable count = 0

    // Initialize a current number to check for primality
    let mutable current = 1

    // Use a while loop to iterate until the nth prime number is found
    while count < n do
        // If the current number is prime, increment the counter
        if isPrime current then
            count <- count + 1

        // Increment the current number by 1
        current <- current + 1

    // Return the nth prime number
    current - 1

// Call the nthPrime function to find the 100th prime number
nthPrime 100
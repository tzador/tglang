let rec mergeLists (xs:List<int>) (ys:List<int>) =
    match xs, ys with
    | [], y::ys -> y::mergeLists [] ys
    | x::xs, [] -> x::mergeLists xs []
    | [], [] -> []
    | x::xs, y::ys -> if x < y then x::mergeLists xs (y::ys) else y::mergeLists (x::xs) ys

let rec mergeSort (xs:List<int>) =
    if List.length xs <= 1 then
        xs
    else
        let mid = List.length xs / 2
        let left = xs |> List.take mid
        let right = xs |> List.skip mid
        mergeLists (mergeSort left) (mergeSort right)
// Define a recursive function to calculate the factorial of a given number
let rec factorial n = 
    if n < 0 then // Check if number is negative
        invalid_arg "n must be nonnegative" // Throw error if negative
    else if n = 0 then // Check if number is 0
        1 // Return 1
    else // Otherwise, calculate factorial
        n * factorial (n - 1) // Multiply n by the factorial of n-1

// Define a list of numbers
let nums = [1 .. 5]

// Use pattern matching to apply the factorial function to each number in the list
// and print the results
let results = List.map (fun n -> 
    match n with
    | 0 -> 1 // Return 1 for 0
    | n -> factorial n // Apply factorial function for all other numbers
) nums

printfn "Factorial results for each number:\nA [1..5] list : %A" results
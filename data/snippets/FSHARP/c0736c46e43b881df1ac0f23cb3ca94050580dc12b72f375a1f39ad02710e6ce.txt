/// Define a generic function that takes in a list of integers
let rec sumList xs = 
    match xs with
    | [] -> 0 // Base case - return 0 if list is empty
    | x::xs' -> x + sumList xs' // Recursive case - add current integer to sum of remaining list

// Create a list of integers
let myList = [2; 5; 8; 11; 14]

// Call the sumList function with the list as input
let result = sumList myList

// Display the result
printfn "The sum of the list is %d" result
let rec factorial n = 
    match n with
    | 0 -> 1
    | n -> n * factorial (n-1)

let rec fibonacci n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | n -> fibonacci(n-1) + fibonacci(n-2)

let sumOfSquares n =
    let rec innerSumOfSquares n acc =
        match n with
        | 0 -> acc
        | n -> innerSumOfSquares (n-1) (acc + n * n)
    innerSumOfSquares n 0

let divideBy n =
    let rec innerDivideBy n counter =
        match n with
        | 0 -> raise (System.DivideByZeroException "Cannot divide by 0")
        | x when x > 0 ->
            match counter with
            | 0 -> raise (System.DivideByZeroException "Cannot divide by 0")
            | x when x < 0 -> -innerDivideBy n (-counter)
            | x -> n + innerDivideBy n (counter-1)
        | x when x < 0 ->
            match counter with
            | 0 -> raise (System.DivideByZeroException "Cannot divide by 0")
            | x when x < 0 -> -innerDivideBy (-n) (-counter)
            | x -> -n + innerDivideBy (-n) (counter-1)
    innerDivideBy n n
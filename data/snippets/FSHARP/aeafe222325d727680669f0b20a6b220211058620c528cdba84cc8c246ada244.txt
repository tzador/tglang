// Define a record type
type Person = {
    Name: string;
    Age: int;
    Occupation: string;
}

// Create a list of Person records
let people = [
    {Name = "John"; Age = 35; Occupation = "Software Engineer"};
    {Name = "Mary"; Age = 29; Occupation = "Project Manager"};
    {Name = "Adam"; Age = 42; Occupation = "Data Analyst"};
    {Name = "Emily"; Age = 26; Occupation = "Web Developer"};
    {Name = "Lisa"; Age = 31; Occupation = "UI/UX Designer"}
]

// Filter the list to only include people who are under 30 years old
let underThirty = List.filter (fun p -> p.Age < 30) people

// Print out the names of these people
List.iter (fun p -> printfn "%s" p.Name) underThirty

// Define a function that returns the average age of a list of Person records
let getAverageAge (people: Person list) = 
    let totalAge = List.fold (fun acc p -> acc + p.Age) 0 people
    let count = List.length people
    totalAge / count

// Use the function to find the average age of the original list
let averageAge = getAverageAge people

// Print out the average age
printfn "The average age of these people is %d" averageAge
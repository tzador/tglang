(* This function takes two lists as input and returns a new list with every possible combination of elements from both lists *)
let rec combine xs ys =
    match xs, ys with
    | [], _ | _, [] -> []
    | x::xs', _ -> List.map (fun y -> (x,y)) ys @ combine xs' ys

(* Example usage *)
let listA = [1; 2; 3]
let listB = ["a"; "b"; "c"]

let combinedList = combine listA listB
// Output: [(1, "a"); (1, "b"); (1, "c"); (2, "a"); (2, "b"); (2, "c"); (3, "a"); (3, "b"); (3, "c")]
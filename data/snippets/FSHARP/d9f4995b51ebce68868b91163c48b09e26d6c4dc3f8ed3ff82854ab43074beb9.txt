// defining a recursive function
let rec fibonacci num =
    match num with
    | 0 -> 0
    | 1 -> 1
    | x -> fibonacci (x-1) + fibonacci (x-2)

// using the function to generate the first 10 Fibonacci numbers
let firstTen = List.init 10 fibonacci

// printing the result
printfn "%A" firstTen

// declaring a record type with three fields
type Book =
    { Title : string
      Author : string
      Year : int }

// defining a function to check if a book is written by a certain author
let isWrittenBy author book =
    book.Author = author

// creating a list of books
let books = 
    [ { Title = "1984"; Author = "George Orwell"; Year = 1949 }
      { Title = "To Kill a Mockingbird"; Author = "Harper Lee"; Year = 1960 }
      { Title = "The Great Gatsby"; Author = "F. Scott Fitzgerald"; Year = 1925 }
    ]

// using the function to filter the list of books by a certain author
let orwellBooks = List.filter (isWrittenBy "George Orwell") books
    
// printing the result
printfn "%A" orwellBooks

// defining a recursive function to calculate the factorial of a number
let rec factorial num =
    match num with
    | 0 -> 1
    | x -> x * factorial (x-1)

// using the function to calculate the factorial of 5
let factorialOf5 = factorial 5
    
// printing the result
printfn "%A" factorialOf5
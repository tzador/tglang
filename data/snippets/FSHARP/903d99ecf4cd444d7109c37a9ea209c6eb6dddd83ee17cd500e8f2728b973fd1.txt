// This is a function that checks if a given number is prime or not
// It uses a simple algorithm of dividing the number by all numbers from 2 to its square root
// If the number is divisible by any number within that range, it is not prime

// Function declaration
let isPrime num = 
    // Create a range of numbers from 2 to the square root of the given number
    let range = [2..(int(System.Math.Sqrt(float(num))))]

    // Check if the given number is divisible by any number within the range
    // If any number evenly divides the given number, it is not prime
    let isDivisible = range |> List.exists (fun x -> num % x = 0)

    // If the number is divisible by any number in the range, it is not prime
    if isDivisible then
        // Print a message indicating the number is not prime
        printfn "%d is not a prime number" num
    else
        // Print a message indicating the number is prime
        printfn "%d is a prime number" num

// Call the function with a given number
isPrime 7
// Define a function that returns the square of a given number
let square number =
  let result = number * number
  result

// Define a record type to represent a person
type Person = {
  Name: string;
  Age: int;
  Occupation: string;
}

// Create a list of people
let people = [
  {Name= "John"; Age= 25; Occupation= "Student"};
  {Name= "Jane"; Age= 32; Occupation= "Teacher"};
  {Name= "Tom"; Age= 40; Occupation= "Engineer"}
]

// Define a function that finds the average age of the people in a given list
let rec averageAge peopleList =
  match peopleList with
  | [] -> 0
  | h::t -> (h.Age + averageAge t) / List.length peopleList

// Define a function that sorts a list of integers in ascending order using the Quicksort algorithm
let rec quicksort list =
  match list with
  | [] -> []
  | [x] -> [x]
  | h::t ->
    let smaller, bigger =
      List.partition (fun x -> x < h) t
    quicksort smaller @ [h] @ quicksort bigger

// Call the functions and print the results
let squaredNumber = square 5
let average = averageAge people
let sortedList = quicksort [8;2;6;3;1]

printfn "Squared number: %d" squaredNumber
printfn "Average age: %d" average
printfn "Sorted list: %A" sortedList
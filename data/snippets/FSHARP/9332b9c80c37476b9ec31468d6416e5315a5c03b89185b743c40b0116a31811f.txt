module Main
// This module contains functions for generating a list of odd Fibonacci numbers

// Function to generate a list of Fibonacci numbers
let rec fibonacciList (n: int) : int list =
    match n with
    | 0 -> []
    | 1 -> [1]
    | _ -> let fibs = fibonacciList (n - 1)
           match fibs with
           | [x] -> [x; 1]
           | list -> let y = List.head list + List.head (List.tail list)
                     [y; list]

// Filter function to return only odd numbers
let oddFilter (n: int) : bool =
    n % 2 = 1

// Function to filter the list of Fibonacci numbers
let filterFibs (n: int) : int list =
    let fibs = fibonacciList n
    List.filter oddFilter fibs

// Main function to print the filtered Fibonacci numbers
let main (n: int) : unit =
    let filteredFibs = filterFibs n
    printfn "Filtered Fibonacci numbers: %A" filteredFibs

main 10 // Prints [1; 1; 3; 5; 13; 21] as the output
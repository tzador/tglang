let rec fibMemoize (n: int) =
    let cache = ResizeArray()

    let rec fib (n: int) =
        match n with
        | 0 -> 0
        | 1 -> 1
        | n ->
            match cache.Length with
            | 0 -> cache.Add(0)
                    cache.Add(1)
            | lastIndex when lastIndex < n ->
                let lastFib = fib (lastIndex)
                let beforeLastFib = fib (lastIndex - 1)
                cache.Add (lastFib + beforeLastFib)

            cache.[n]

    fib (n)
|> fibMemoize
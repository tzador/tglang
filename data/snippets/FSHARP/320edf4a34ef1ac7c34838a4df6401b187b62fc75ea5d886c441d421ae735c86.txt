(* This is a function that takes in a list of integers
and returns a list of the numbers squared *)

let squareList (numbers: int list) : int list =

    // This is an accumulator to hold the squared numbers 
    let mutable squaredNumbers = []

    // A recursive helper function to square each number and add it to the accumulator
    let rec squareHelper (nums: int list) = 
        match nums with
        | [] -> squaredNumbers 
        | x::xs -> 
            //This is where the squaring happens
            let squared = x * x 
            //Adds the squared number to the accumulator
            squaredNumbers <- squared :: squaredNumbers
            squareHelper xs 

    // Calls the helper function with the input list and returns the squared numbers
    squareHelper numbers
let rec sumList (xs:list<int>) = // define a recursive function sumList that takes in a list of integers xs
    match xs with // use pattern matching to handle different cases 
    | [] -> 0 // if the list is empty, return 0
    | x::xs' -> x + sumList xs' // if the list has at least one element, recursively call sumList on the rest of the list and add it to the first element

let myList = [1; 2; 3; 4; 5] // define a list of integers

let sum = sumList myList // call the sumList function on the list and assign the result to the variable sum

printfn $"The sum of the list {myList} is {sum}" // print the result of the sum in a formatted string
// Define an anonymous function that takes in an integer and returns a list 
// containing the squares of numbers from 1 to the input integer
let squares = fun (n:int) -> 
    [1..n] |> List.map(fun x -> x * x)

// Define a recursive function to calculate the factorial of a given number
let rec factorial n = 
    match n with
    | 0 -> 1
    | _ -> n * factorial (n-1)

// Define a record type to represent a person with a name and age field
type Person = {
    Name : string
    Age : int
}

// Define a function to create a list of person records
let createPersonList = fun (names: string list) -> 
    names |> List.map(fun name -> { Name = name; Age = name.Length })

// Define a function to check if a person record is of legal drinking age
let isLegalDrinkingAge = fun (person: Person) -> 
    person.Age >= 21
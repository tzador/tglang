// Define a recursive function to calculate the factorial of a given number
let rec factorial n =
    if n < 1 then 1
    else n * factorial(n - 1)

// Define a list of numbers to calculate factorial for
let numbers = [1; 2; 3; 4; 5]

// Use pattern matching to apply factorial function to list elements
let results = 
    numbers 
    |> List.map (fun n -> 
        match n with 
        | 1 -> { Number = n; Factorial = factorial(n) }
        | _ -> { Number = n; Factorial = factorial(n) })

// Print the results to the console
printfn "Factorial results:\n%A" results // Output: Factorial results: [{Number = 1; Factorial = 1;}; {Number = 2; Factorial = 2;}; {Number = 3; Factorial = 6;}; {Number = 4; Factorial = 24;}; {Number = 5; Factorial = 120;}]
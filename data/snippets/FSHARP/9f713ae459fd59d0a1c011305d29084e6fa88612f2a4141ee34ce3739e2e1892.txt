(* This code snippet generates a list of fibonacci numbers up to a given limit *)
let rec fibs = function
    | 1 -> [1]
    | 2 -> [1; 1]
    | n -> 
        let prevVals = fibs (n - 1)
        let nextVal = prevVals.Head + prevVals.Tail.Head
        nextVal :: prevVals

(* Setting the upper limit for the fibonacci numbers to be generated *)
let limit = 10

(* Creating an empty list to store the generated fibonacci numbers *)
let mutable fibList: List<int> = []

(* Iterating through numbers from 1 to the upper limit *)
for i in 1..limit do
    (* Generating the fibonacci numbers and adding them to the list *)
    fibList <- fibs i

(* Printing out the list of fibonacci numbers *)
printfn "The fibonacci numbers up to %d are: %A" limit fibList
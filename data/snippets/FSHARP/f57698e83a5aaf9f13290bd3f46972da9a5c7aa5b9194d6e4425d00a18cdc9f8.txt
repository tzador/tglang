[<EntryPoint>]
let main argv =
    // Define an empty list of strings
    let mutable list = []

    // Define a function that takes in a list of strings, adds a new string to the list, and returns it
    let addString (list: string list) (newString: string) =
        list @ [newString]  // Use the @ operator to append the new string to the end of the list
        
    // Call the addString function twice, adding two strings to the list
    list <- addString list "Hello" 
    list <- addString list "World"

    // Loop through the list and print each string with its index
    for i, str in list |> Seq.mapi (fun i s -> i, s) do 
        printfn "String at index %d: %s" i str
        
    // Declare a new variable that contains a function which takes in a string and prints its length
    let printLength =
        // Inner function that actually prints the length of the string, using string interpolation
        fun str -> printfn "The length of '%s' is %d" str str.Length 
     
    // Call the printLength function with a string argument  
    printLength "Hello World" 
        
    0 // Return 0 to indicate a successful exit
/// Function that checks if an input number is prime
let isPrime (n:int) : bool =
    match n with
    | x when x <= 1 -> false
    | 2 -> true
    | x ->
        let rec checkDivisor (d:int) : bool =
            match d with
            | 1 -> true
            | _ -> n%d <> 0 && checkDivisor (d-1)
        checkDivisor (n-1)

/// Function that finds the next prime number after a given number
let nextPrime (n:int) : int =
    let rec findPrime (m:int) : int =
        match isPrime m with
        | true -> m
        | false -> findPrime (m+1)
    findPrime (n+1)
        
/// Example usage and output
let inputNum = 20
let nextPrimeNum = nextPrime inputNum
printfn "The next prime number after %d is %d" inputNum nextPrimeNum

// Output: The next prime number after 20 is 23
let rec factorial n = // Define a recursive function called "factorial" with parameter "n"
    match n with // Use pattern matching to handle different cases
    | 0 | 1 -> 1 // If n is 0 or 1, return 1
    | _ -> n * factorial (n - 1) // For any other value of n, multiply n by the factorial of n-1

let result = factorial 5 // Call the factorial function with an input of 5 and store the result in a variable called "result"

printfn "The factorial of 5 is %i" result // Print a string with the result of the factorial calculation
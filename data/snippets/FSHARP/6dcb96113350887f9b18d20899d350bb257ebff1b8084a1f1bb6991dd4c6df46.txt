// creates a record type for a student
type Student = {
    Name : string; // string property for student's name
    ID : int; // int property for student's ID
    Email : string; // string property for student's email
    Major : string option; // optional string property for student's major
}

// creates a list of students
let students = [
    {
        Name = "John Smith";
        ID = 123456;
        Email = "john.smith@email.com";
        Major = Some "Computer Science";
    };
    {
        Name = "Jane Doe";
        ID = 789101;
        Email = "jane.doe@email.com";
        Major = Some "Psychology";
    }
    {
        Name = "Bob Jones";
        ID = 111213;
        Email = "bob.jones@email.com";
        Major = None;
    }
]

// function to print out student information
let printStudentInfo (student: Student) =
    printfn "Name: %s\nID: %d\nEmail: %s\nMajor: %A" student.Name student.ID student.Email student.Major

// applying the function to each student in the list
students
|> List.iter printStudentInfo

// output:
/*
Name: John Smith
ID: 123456
Email: john.smith@email.com
Major: Some "Computer Science"

Name: Jane Doe
ID: 789101
Email: jane.doe@email.com
Major: Some "Psychology"

Name: Bob Jones
ID: 111213
Email: bob.jones@email.com
Major: None
*/
module TestModule

// Define a function to calculate the factorial of a number
let rec factorial n = 
    match n with
    | 0 -> 1
    | _ -> n * factorial (n-1)

// Define a record type to represent a student
type Student = { Name: string; Age: int; GPA: float }

// Define a list of students
let students = [
    { Name = "John"; Age = 23; GPA = 3.5 }
    { Name = "Samantha"; Age = 21; GPA = 3.7 }
    { Name = "Michael"; Age = 20; GPA = 4.0 }
    { Name = "Emily"; Age = 19; GPA = 3.9 }
]

// Filter the list of students by their GPA
let highGpaStudents = students |> List.filter (fun student -> student.GPA >= 3.7)

// Print the names of the high GPA students
highGpaStudents |> List.iter (fun student -> printfn "%s" student.Name)

// Define a function to check if a string is a palindrome
let isPalindrome (input: string) =
    input.ToCharArray()
    |> Array.rev
    |> Array.map (fun c -> string c)
    |> String.concat ""
    = input

// Call the function to check if a given string is a palindrome
let result = isPalindrome "racecar"

// Print the result
printfn "%b" result
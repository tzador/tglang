(* This function takes a list of strings and
returns a sorted list containing only the unique elements *)
let uniqueElements (lst: string list) : string list =
    lst
    |> List.sort
    |> List.filter(fun x -> x |> List.contains && not(List.contains x signaturePattern))
    |> List.map(fun x -> x.ToLower())
    |> List.distinct
    (* Checks if the element contains the string "pattern" and filters it out 
       if it already exists in the signature pattern list *)
    |> List.filter(fun x -> not(List.exists (fun y -> x.Contains signaturePattern) signaturePatternList)) 
    |> List.sortBy(fun x -> x.[0..0]) // Sorts list alphabetically by first letter
    |> List.map(fun x -> x.[..1] + " " + x.[2..]) // Replaces first two letters with a space
    |> List.mapi(fun i x -> "Element " + i.ToString() + ": " + x) // Adds index and label to each element
    |> List.rev // Reverses the final list
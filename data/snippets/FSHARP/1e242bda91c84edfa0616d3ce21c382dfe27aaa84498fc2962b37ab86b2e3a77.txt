// defining a function to calculate the Fibonacci sequence
let rec fib n = 
    match n with
    | 0 -> 0 // if n is equal to 0, return 0
    | 1 -> 1 // if n is equal to 1, return 1
    | _ -> fib (n - 1) + fib (n - 2) // if n is greater than 1, recursively call fib function with n-1 and n-2 and add them together

// printing out the first 10 numbers in the Fibonacci sequence
let rec printFibs n = 
    if n > 10 then () // once n reaches 10, stop the recursion
    else 
        printfn "%d" (fib n) // print out the current Fibonacci number
        printFibs (n + 1) // recursively call printFibs with n+1 to print the next number in the sequence

printFibs 0 // call the printFibs function with a starting index of 0 to print the first 10 numbers in the Fibonacci sequence
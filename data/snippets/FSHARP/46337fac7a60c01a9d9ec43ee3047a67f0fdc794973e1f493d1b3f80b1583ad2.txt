// This is a function that takes in three integers
let getAverage x y z =
    // It first adds the three integers together
    let sum = x + y + z
    // Then it divides the sum by 3 to get the average
    let average = sum / 3
    // Finally, it returns the average
    average

// This is a recursive function that calculates the factorial of a given integer
let rec factorial n =
    // Base case: If n is 0 or 1, then the factorial is 1
    if n = 0 || n = 1 then
        1
    // Otherwise, recursively call factorial on n - 1 and multiply it by n
    else
        (factorial (n - 1)) * n

// This is a function that takes in a list of integers and returns the sum of all even numbers in the list
let sumOfEvens integers =
    // Initialize a variable to hold the sum
    let mutable sum = 0
    // Loop through each integer in the list
    for integer in integers do
        // Check if the integer is even
        if integer % 2 = 0 then
            // If it is, add it to the sum
            sum <- sum + integer
    // Return the sum
    sum

// This is a higher-order function that takes in two functions and applies them in order from left to right
let compose f g =
    // Return a new function that takes in a value 'x' and applies g first, then f on the result
    fun x -> f (g x)
let greeting = "Hello"
let person = "John"
let formattedGreeting = $"{greeting}, {person}! Welcome to my program." // Interpolation
let numbers = [1; 2; 3; 4; 5] // List
let squares = List.map (fun num -> num * num) numbers // Square each number in the list
printfn "The squares of the numbers are: %A" squares // Print the list of squares
let filteredSquares = List.filter (fun num -> num > 10) squares // Filter out numbers less than 10
printfn "The filtered squares are: %A" filteredSquares // Print the filtered list
let rec factorial n = // Recursive function to calculate factorial
    if n <= 1 then 1
    else n * factorial (n-1)
printfn "The factorial of 5 is: %d" (factorial 5) // Print the factorial of 5
let mutable counter = 0 // Mutable variable
for i in 1..10 do // Loops through numbers 1 to 10
    counter <- counter + i // Update counter with incremented value
printfn "The final value of the counter is: %d" counter // Print the final value of the counter
let patternMatch x = // Function with pattern matching
    match x with
    | "apple" -> "fruit"
    | "carrot" -> "vegetable"
    | "chicken" -> "protein"
    | _ -> "unknown food"
printfn "An apple is classified as %s" (patternMatch "apple") // Print the result of pattern matching
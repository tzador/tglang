//Function composition using the pipe operator
let compose (f: 'a -> 'b) (g: 'b -> 'c) (x: 'a): 'c =
  g (f x)
let (|>) x f = f x

//Function for calculating the factorial of a number
let rec factorial n =
  if n = 0 then 1
  else n * factorial (n - 1)

//Function for calculating the sum of factorials of a list of numbers
let sumFactorials lst =
  lst
  |> List.map factorial
  |> List.fold (+) 0

//Example: calculating the sum of factorials of the first 10 natural numbers
let result = sumFactorials [1..10]
printfn "The sum of factorials of the first 10 natural numbers is: %i" result

//Output:
//The sum of factorials of the first 10 natural numbers is: 4037913
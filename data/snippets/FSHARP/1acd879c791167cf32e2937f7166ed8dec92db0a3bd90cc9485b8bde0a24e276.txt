// Define a function that takes in a list of numbers and returns the sum of all odd numbers in the list

let rec sumOfOdd (numbers:List<int>) = 
    match numbers with                 // pattern matching on the list
    | [] -> 0                          // base case - return 0 if list is empty
    | head::tail ->                    // extracting the head and tail of list 
        let oddSum = 
            if head % 2 <> 0 then head // check if head is odd
            else 0                      // if not odd, set to 0
        oddSum + sumOfOdd tail         // recursively call function on remaining list
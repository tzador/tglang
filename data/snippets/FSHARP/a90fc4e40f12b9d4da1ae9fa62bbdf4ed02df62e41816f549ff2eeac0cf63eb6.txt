// Function that checks if number is prime and returns true if prime or false otherwise 
let checkPrime (n : int) : bool = 
    // Base case 
    if (n <= 1) then false 
    else if (n = 2) then true 
    else 
        let rec loop (current : int) : bool = 
            // Check if current is a factor of n 
            if (n % current = 0) then false 
            // Check if all numbers up to current have been checked 
            elif (current * current > n) then true 
            // Recursively call loop with incremented current 
            else loop (current + 1) 
                
        // Start loop with initial current of 2 
        loop 2 
          

// Generate list of prime numbers up to given limit 
let primeList (limit : int) : int list = 
    // List to store prime numbers 
    let primes = List.empty
    // Loop through all numbers up to limit 
    for i in 2 .. limit do 
        // Check if number is prime 
        if (checkPrime i) then 
            // Add to list of primes 
            primes.Add(i) 
    // Return list of primes 
    primes
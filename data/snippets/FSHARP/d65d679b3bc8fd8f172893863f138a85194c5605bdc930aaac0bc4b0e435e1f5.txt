// This is a function that takes in two integers and returns their sum
let add x y =
    let sum = x + y // creating a local variable to store the sum
    printfn "The sum of %d and %d is %d" x y sum // printing the sum to the console
    sum // returning the sum as the output

// This is a list of integers
let numbers = [5; 10; 15; 20; 25]

// Using pattern matching to print out numbers divisible by 5
numbers
|> List.filter (fun num -> num % 5 = 0) // filtering the list to get only numbers divisible by 5
|> List.iter (fun num -> printfn "%d is divisible by 5!" num) // printing out each number divisible by 5

// Using recursion to calculate the factorial of a number
let rec factorial num =
    if num < 0 then
        failwith "Number cannot be negative!"
    else if num = 0 || num = 1 then
        1 // base cases for the factorial function
    else
        num * factorial (num - 1) // recursively calling the factorial function with decrease in num

// Using list comprehension to create a list of even numbers
[ for num in 1..10 do
    if num % 2 = 0 then
        yield num ]
|> List.iter (fun num -> printfn "%d is an even number!" num) // printing out each even number in the list
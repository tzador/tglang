(* This is a function that takes in two parameters, a string and an int
   and recursively counts the number of occurrences of the string in the given int
   and returns the total count as an int 
*)
let rec countOccurrences (str:string) (num:int) : int =
    let rec loop count i = 
        match i with 
        | x when x = num -> count
        | _ -> 
            if (seq {0..str.Length-1} |> Seq.forall (fun y -> y + i < str.Length && str.[y + i] = str.[y])) then 
                loop (count+1) (i+1) 
            else 
                loop count (i+1)

    loop 0 0
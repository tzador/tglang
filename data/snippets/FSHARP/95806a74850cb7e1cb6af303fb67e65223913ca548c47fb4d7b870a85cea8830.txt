/// Function that merges two lists into one
let mergeLists list1 list2 =
    let rec mergeHelper lst1 lst2 acc =
        match lst1, lst2 with
        | [], [] -> List.rev acc // base case: both lists empty
        | [], (x::xs) -> mergeHelper lst2 xs (x :: acc) // lst1 is empty, add elements from lst2 to acc
        | (x::xs), [] -> mergeHelper xs lst2 (x :: acc) // lst2 is empty, add elements from lst1 to acc
        | (x::xs), (y::ys) ->
            if x <= y then mergeHelper xs lst2 (x :: acc) // compare head of lst1 and lst2, add smaller to acc
            else mergeHelper lst1 ys (y :: acc) // otherwise, add smaller element from lst2 to acc
    mergeHelper list1 list2 [] // call mergeHelper with empty accumulator

// sample usage
let list1 = [1;3;5;7]
let list2 = [2;4;6;8]

let mergedList = mergeLists list1 list2 // output: [1;2;3;4;5;6;7;8]
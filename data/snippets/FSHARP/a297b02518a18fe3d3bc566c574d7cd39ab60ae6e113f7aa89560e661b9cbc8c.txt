(* This is a function that takes in two integers
and returns the Greatest Common Divisor *)
let rec gcd num1 num2 =
    // Base case
    if num2 = 0 then num1
    else
        // Recursive call
        gcd num2 (num1 % num2)

(* A list of integers*)
let input = [56; 144; 96; 32; 24]

((* This is a function that takes in a list of integers 
and returns the sum of its elements *)
let rec sum nums =
    match nums with
    | [] -> 0
    | head :: tail -> head + sum tail

// Print the sum of the list using the 'sum' function
printfn "The sum of the list is %d" (sum input)

// Print the GCD of the first and last element in the list
printfn "The GCD of the first and last element is %d" (gcd input.[0] input.[4]))
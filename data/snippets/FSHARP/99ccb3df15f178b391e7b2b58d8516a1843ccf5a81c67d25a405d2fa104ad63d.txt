//Creating and initializing a record type with two fields
type User = {firstName: string; lastName: string}

//Creating a function to update user's last name with currying
let updateUserLastName newName (user: User) =
    {user with lastName = newName}

//Using the function to update the last name of a user and store it in a new variable
let updatedUser = updateUserLastName "Smith" {firstName = "John"; lastName = "Doe"}

//Printing the updated user's last name
printfn "New Last Name: %s" updatedUser.lastName

//Creating a list of users with the updated last name
let userList = [updatedUser; {firstName = "Jane"; lastName = "Smith"}; {firstName = "Emily"; lastName = "Smith"}]

//Using pattern matching to filter and return a list of users with the last name "Smith"
let filteredList = userList |> List.filter (fun (user: User) -> user.lastName = "Smith")

//Printing the filtered list of users
printfn "Filtered List: %A" filteredList
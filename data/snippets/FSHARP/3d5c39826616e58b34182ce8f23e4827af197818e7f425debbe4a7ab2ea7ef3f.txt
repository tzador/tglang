let rec fibonacci n = // declaring a recursive function
    match n with // using pattern matching
    | 0 -> 0 // base case
    | 1 -> 1 // base case
    | _ -> fibonacci (n-1) + fibonacci (n-2) // recursive call with n-1 and n-2 as arguments

[1..10] // create a list of numbers from 1 to 10
|> List.map fibonacci // map the fibonacci function to each element in the list
|> List.filter (fun x -> x % 2 = 0) // filter out all even numbers 
|> List.sort // sort the list
|> List.rev // reverse the list
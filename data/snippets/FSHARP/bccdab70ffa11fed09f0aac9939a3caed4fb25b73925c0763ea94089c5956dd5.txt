let rec fib n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | x -> (fib (x-1)) + (fib (x-2))

let numbers = [1; 2; 3; 4; 5; 6; 7; 8; 9; 10] // Create a list of numbers to test the fib function

// Iterate through the numbers and print out the result of the fib function for each number
numbers
|> List.iter (fun x ->
    printfn "Fibonacci of %d is %d" x (fib x)
)

// Output:
// Fibonacci of 1 is 1
// Fibonacci of 2 is 1
// Fibonacci of 3 is 2
// Fibonacci of 4 is 3
// Fibonacci of 5 is 5
// Fibonacci of 6 is 8
// Fibonacci of 7 is 13
// Fibonacci of 8 is 21
// Fibonacci of 9 is 34
// Fibonacci of 10 is 55
let rec pairwiseList list =              // Recursive function definition
    match list with                       // Pattern matching
    | x::y::xs -> (x, y)::pairwiseList xs // If list has at least two elements, pair them and call function again
    | _ -> []                             // Base case: if list is empty or has only one element, return empty list

let myList = [1; 2; 3; 4; 5; 6; 7]        // Input list of integers
let result = pairwiseList myList          // Call function on input list
printfn "Pairwise list: %A" result        // Print the result list using formatted string

// Output: "Pairwise list: [(1, 2); (3, 4); (5, 6)]"
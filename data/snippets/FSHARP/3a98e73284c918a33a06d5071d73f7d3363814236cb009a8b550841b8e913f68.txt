// Generate a list of Fibonacci numbers

// Define a recursive function to generate Fibonacci numbers
let rec fib n = 
    match n with
    | 0 -> 0
    | 1 -> 1
    | _ -> fib (n-1) + fib (n-2)

// Define a function to generate a list of Fibonacci numbers up to n
let fibList n = 
    if n = 0 then [0]
    else 
        let rec fibList' n acc =
            match n with
            | 0 -> acc
            | n' -> fibList' (n - 1) (fib n' :: acc)
        fibList' (n-1) [0;1]

// Define a function to print the Fibonacci numbers in a list
let printFibList n =
    let fibNumbers = fibList n 
    fibNumbers |> List.iter (fun x -> printfn "%d" x)

// Print the list of Fibonacci numbers up to 10
printFibList 10
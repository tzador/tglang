// Define a recursive function to calculate the factorial of a given number
let rec factorial n =
    match n with
    | 0 -> 1
    | _ -> n * factorial(n-1)

// Define a function to calculate the sum of all numbers in a list
let rec sumList lst =
    match lst with
    | [] -> 0
    | head::tail -> head + sumList(tail)

// Define a function to calculate the mean of a list of numbers
let meanList lst =
    (sumList lst) / List.length lst

// Define a record type for a person with name, age, and gender fields
type Person = {Name: string; Age: int; Gender: string}

// Create a list of Person records
let people = [
    {Name = "John"; Age = 22; Gender = "Male"};
    {Name = "Jane"; Age = 26; Gender = "Female"};
    {Name = "Alex"; Age = 18; Gender = "Non-binary"}
]

// Filter the list to only include people over the age of 25
let filteredPeople = people |> List.filter (fun x -> x.Age > 25)

// Define a function to calculate the average age of a list of people
let averageAge lst =
    lst
    |> List.map (fun x -> x.Age)
    |> meanList

// Print the average age of the filtered list of people
printfn "Average age of filtered people: %d" (averageAge filteredPeople)
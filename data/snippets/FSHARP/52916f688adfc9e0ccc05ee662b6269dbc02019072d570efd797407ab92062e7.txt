//This code snippet shows how to create a function that returns the n-th Fibonacci number
let rec fib n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | _ -> fib (n-1) + fib (n-2)

(* This function uses recursion to calculate the n-th Fibonacci number.
   The match keyword is used to handle different cases, including the base cases of 0 and 1.
   The _ case is used as a catch-all for any other input.
   The function calls itself recursively until it reaches the base case, and then returns the value
   calculated by adding the n-1 and n-2 Fibonacci numbers together. *)
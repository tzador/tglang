let rec fibonacci num = //defines a recursive function named fibonacci that takes in a single parameter, num
    if num = 0 then 0 //checks if num is equal to 0, if so returns 0
    elif num = 1 then 1 //checks if num is equal to 1, if so returns 1
    else fibonacci(num-1) + fibonacci(num-2) //if neither condition is met, calls the fibonacci function recursively with num-1 and num-2 as parameters, then adds the resulting values together
    
let fibSeq = //defines a variable named fibSeq
    seq { //starts creating a sequence
        for i in 0..10 do //loops through numbers 0 to 10 (inclusive)
            yield fibonacci(i) //calls the fibonacci function with the current number as a parameter and adds the result to the sequence
    } //closes the sequence creation

fibSeq //prints the sequence to the console

// Output:
[0; 1; 1; 2; 3; 5; 8; 13; 21; 34; 55] //prints the generated fibonacci sequence, which is a list of the first 11 numbers in the fibonacci sequence.
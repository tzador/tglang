let rec fib n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | n ->
        let prev1 = fib (n - 1)
        let prev2 = fib (n - 2)
        prev1 + prev2

let rec isPrime n =
    match n with
    | 2 -> true
    | n ->
        let rec checkDivisor d n =
            match d with
            | 1 -> true
            | d when n % d = 0 -> false
            | d -> checkDivisor (d - 1) n
        checkDivisor (n - 1) n
(* This is a function that takes in two integer values and returns the sum of their squares. *)
let sumSquares (x : int) (y: int) : int =
    let square z = z * z // helper function to square a number
    square x + square y // sum of squares of x and y

(* This is a recursive function that calculates the factorial of a given number. *)
let rec factorial (n: int) : int =
    if n = 0 then 1 // base case: factorial of 0 is 1
    else n * factorial (n - 1) // recursion: factorial of n is n * factorial of n-1

let num1 = 5 // first number to be squared
let num2 = 3 // second number to be squared
let sum = sumSquares num1 num2 // calculate sum of squares using sumSquares function
printfn "Sum of squares of %d and %d is: %d" num1 num2 sum // print the result

let fact = factorial 6 // calculate factorial of 6 using factorial function
printfn "Factorial of %d is: %d" 6 fact // print the result
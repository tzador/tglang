let rec sumList (l: list<int>) =
    match l with
    | [] -> 0 // base case, return 0 if list is empty
    | head :: tail -> head + sumList tail // recursively call function and add current head to sum of remaining list

let numList = [1; 2; 3; 4; 5] //create a test list

printfn "The sum of the list is %d" (sumList numList) // print the sum of the list using the sumList function
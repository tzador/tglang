// This is a function that takes two lists of integers and returns a list of their sum
let listSum (list1 : int list) (list2 : int list) : int list =
    let rec sumHelper (list1 : int list) (list2 : int list) (result : int list) =
        match list1, list2 with
        | [], _ -> result
        | _, [] -> result
        | head1 :: tail1, head2 :: tail2 ->
            let sum = head1 + head2 // calculate sum of corresponding elements
            let updatedResult = result @ [sum] // append sum to result list
            sumHelper tail1 tail2 updatedResult // recursively call function with remaining lists and updated result
    sumHelper list1 list2 [] // initial call with empty result list
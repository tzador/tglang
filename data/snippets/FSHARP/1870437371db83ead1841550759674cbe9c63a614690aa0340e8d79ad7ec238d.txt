#light

// This function takes in a list of integers and returns a new list
// with only the even numbers from the original list
let filterEvenNumbers (lst: int list) =
    lst
    |> List.filter (fun x -> x % 2 = 0)

// This function takes in an integer and returns its factorial
let rec factorial (n: int) =
    if n <= 1 then 1
    else n * (factorial (n - 1))

// This function takes in a list of integers and returns the sum
// of all the elements in the list
let sumList (lst: int list) =
    lst
    |> List.fold (fun acc x -> acc + x) 0

// This function takes in a string and returns the length of the string
let getStringLength (str: string) =
    str
    |> Seq.toArray
    |> Array.length

// This function takes in two strings and returns true if they are
// anagrams of each other, false otherwise
let checkAnagram (str1: string) (str2: string) =
    str1.ToLower()
    |> Seq.sort
    |> String.concat ""
    |> (=) (str2.ToLower())
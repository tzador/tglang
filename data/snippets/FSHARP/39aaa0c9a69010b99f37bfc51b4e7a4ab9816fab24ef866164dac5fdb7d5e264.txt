// This code snippet calculates the sum of the squares of numbers from 1 to 10

let range = [1..10]                        // create a range of numbers from 1 to 10
let squares = range |> List.map (fun x -> x * x)    // map each number to its square
let sum = squares |> List.sum              // calculate the sum of all squares

// Output: 
(* 
## Explanation:
- `let` keyword is used to declare variables in F#
- `range` variable holds a range of numbers from 1 to 10
- the `List.map` function applies a given function to each element in the list
- the `fun` keyword is used to define a lambda function (anonymous function)
- in this case, the function multiplies each number in the range by itself
- the result is stored in the `squares` variable
- the `List.sum` function sums all the elements in a list
- the `|>` operator is used to pipe the result of one expression to the next expression
- in this case, it pipes the `squares` list to the `List.sum` function, storing the result in the `sum` variable
- the `(* ... *)` syntax is used for commenting in F#
*) *)
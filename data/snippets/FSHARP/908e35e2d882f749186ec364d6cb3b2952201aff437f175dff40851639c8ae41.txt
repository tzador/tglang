let rec fib n = 
    match n with
    | 0 -> 0 //base case
    | 1 -> 1 //base case
    | _ -> fib (n-1) + fib (n-2) //recursive case | 0 -> 0
let inRange n = 
    let prev = ref (fib 0) //initialize reference to 0
    let curr = ref (fib 1) //initialize reference to 1
    let i = ref 2
    while !curr < n do
        let temp = !curr //temporarily store current value
        curr := !prev + !curr //calculate next value
        prev := temp //update previous value
        i := !i + 1
    !i //return number of terms in the Fibonacci sequence before n
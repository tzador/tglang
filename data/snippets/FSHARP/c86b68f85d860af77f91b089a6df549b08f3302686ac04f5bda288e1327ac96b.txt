// Function to calculate the nth Fibonacci number
let rec fibonacci n =
    match n with
    | 0 -> 0 // base case
    | 1 -> 1 // base case
    | n -> fibonacci (n - 1) + fibonacci (n - 2) // recursive call for nth term

// Function to calculate the factorial of a number
let rec factorial n =
    match n with
    | 0 -> 1 // base case
    | n -> n * factorial (n - 1) // recursive call for n-1 term

// Function to find the nth prime number
let rec isPrime n =
    let rec checkPrime k = // helper function to check if a number is prime
        match k with
        | x when x * x > n -> true // all possible factors have been checked
        | x when n % x = 0 -> false // found a factor
        | x -> checkPrime (x + 1) // check next possible factor
    match n with
    | 1 -> false // 1 is not a prime number
    | 2 -> true // 2 is only even prime number
    | n -> checkPrime 2 // start checking from 2, the smallest prime number

// Function to generate a list of prime numbers up to n
let rec generatePrimes n =
    match n with
    | 2 -> [2] // base case for n = 2
    | n when isPrime n -> generatePrimes (n - 1) @ [n] // n is prime, add it to list
    | n -> generatePrimes (n - 1) // n is not prime, continue recursively

// Function to calculate the sum of all prime numbers in a list
let rec sumPrimes n =
    match n with
    | [] -> 0 // base case for empty list
    | [x] -> x // base case for list with just one element
    | head::tail -> head + sumPrimes tail // sum the head and recursively call on tail

// Main function to print output
[<EntryPoint>]
let main argv =
    let n = 10 // set n to desired number for calculations
    let fib = fibonacci n // calculate nth Fibonacci number
    printfn "The %dth Fibonacci number is %d" n fib // print output
    let fact = factorial n // calculate factorial of n
    printfn "The factorial of %d is %d" n fact // print output
    let primes = generatePrimes n // generate a list of prime numbers up to n
    let primeSum = sumPrimes primes // calculate the sum of all prime numbers in the list
    printfn "The sum of all prime numbers up to %d is %d" n primeSum // print output
    0 // return 0 as exit code
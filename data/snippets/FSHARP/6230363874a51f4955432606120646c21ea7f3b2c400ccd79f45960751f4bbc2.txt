// This is a function that computes the n-th Fibonacci number
// using a recursive approach
let rec fibonacci n =
    if n < 0 then invalidArg "n" "n must be a positive integer"
    else if n = 0 then 0
    else if n = 1 then 1
    else fibonacci (n - 1) + fibonacci (n - 2)

// This is a function that takes in a list of numbers and returns
// the sum of all the numbers in the list
let sumList (numbers : List<int>) =
    List.fold (fun acc n -> acc + n) 0 numbers

// This is a function that takes in a list of strings and returns
// a new list containing only the strings that are longer than 5 characters
let filterLongStrings (strings : List<string>) =
    List.filter (fun str -> (String.length str) > 5) strings


// This is an example of how to use the functions defined above
let numbers = [1; 2; 3; 4; 5]
let sum = sumList numbers
let fib = fibonacci sum
let strings = ["apple"; "banana"; "orange"; "strawberry"; "peach"]
let longStrings = filterLongStrings strings
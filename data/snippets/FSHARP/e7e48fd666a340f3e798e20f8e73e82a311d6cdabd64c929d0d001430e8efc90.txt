// This code creates a function that takes in a list of integers and returns the sum of the squares of positive integers in the list

let rec sumOfPositiveSquares (list : int list) : int = 
    match list with
    | [] -> 0
    | head::tail -> 
        if head < 0 then
            sumOfPositiveSquares tail
        else
            head * head + sumOfPositiveSquares tail

// This function takes a list of integers, calls the "sumOfPositiveSquares" function, and then multiplies the result by 2

let doubleSumOfSquares (intList : int list) : int = 
    let sum = sumOfPositiveSquares intList
    sum * 2

// Example usage
let myList = [1; -2; 3; 4; -5]
let result = doubleSumOfSquares myList // result = 20
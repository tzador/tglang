// This is a function that calculates the nth Fibonacci number using recursion
let rec fib n =
  match n with
  | 0 -> 0
  | 1 -> 1
  | _ -> fib (n-1) + fib (n-2)

// This is a function that calculates the factorial of a number using a loop
let fact n =
  let mutable result = 1
  for i in 1..n do
    result <- result * i
  result

// This function converts a string to uppercase and adds an exclamation mark
let shout str = str.ToUpper() + "!"

// This function calculates the sum of a list of numbers
let sum lst =
  lst
  |> List.sum

// This function checks if a given number is even
let isEven n =
  if n % 2 = 0 then
    true
  else
    false

// This function reverses the elements in a list
let rev lst =
  List.fold (fun acc x -> x :: acc) [] lst
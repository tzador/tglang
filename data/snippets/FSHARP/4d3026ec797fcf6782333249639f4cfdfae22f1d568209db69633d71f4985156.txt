#light  //used to specify the level of flsc supports
open System

let names = ["Alex";"Mike";"Sarah";"Emily";"Ethan"]

let printNames () =
    printfn "Printing names:"
    names
    |> List.iter (fun n -> printfn "%s" n)

let getFirstAndLastLetter (str:string) =
    let firstLetter = str.[0]
    let lastLetter = str.[str.Length-1]
    firstLetter, lastLetter

let findNameWithEC () =
    let name = names
               |> List.filter (fun n -> n.[0] = 'E''C')
               |> List.head
    printfn "Found name starting with 'E' and ending with 'C': %s" name


let calculateAverageLength () =
    let averageLength = names
                        |> List.map (fun n -> n.Length)
                        |> List.average
    printfn "Average length of names: %A" averageLength


[<EntryPoint>]
let main args =
    printNames ()
    printfn " "

    let (first,last) = getFirstAndLastLetter "FSharp"

    printfn "First letter: %c" first
    printfn "Last letter: %c" last
    printfn " "

    findNameWithEC ()
    printfn " "

    calculateAverageLength ()
    0
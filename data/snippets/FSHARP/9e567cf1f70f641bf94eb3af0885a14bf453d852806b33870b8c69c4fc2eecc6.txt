// Function to compute the factorial of a number
let rec factorial n =
    match n with
    | 0 -> 1
    | 1 -> 1
    | _ -> n * factorial (n-1)

// Calculate the factorial of 5 and print the result
let result = factorial 5
printfn "The factorial of 5 is %d." result

// Generate a list of numbers and filter out the even numbers
let numbers = [1..10]
let filteredNumbers =
    numbers
    |> List.filter (fun x -> x % 2 = 0)

// Print the filtered list
printfn "The filtered list is %A." filteredNumbers

// Using pattern matching with a custom type
type Shape =
    | Circle of float
    | Rectangle of float * float
    | Triangle of float * float * float

// Function to calculate the area of different shapes
let area shape =
    match shape with
    | Circle radius -> 3.14 * radius * radius
    | Rectangle length width -> length * width
    | Triangle a b c -> 
        let s = (a + b + c) / 2.0 // calculate the semi-perimeter
        Math.Sqrt(s * (s-a) * (s-b) * (s-c)) //Heron's formula for area of a triangle

// Calculate the areas of different shapes and print the results
let circleArea = area (Circle 5.0)
printfn "The area of the circle is %f." circleArea

let rectangleArea = area (Rectangle 3.0 4.0)
printfn "The area of the rectangle is %f." rectangleArea

let triangleArea = area (Triangle 5.0 4.0 6.0)
printfn "The area of the triangle is %f." triangleArea
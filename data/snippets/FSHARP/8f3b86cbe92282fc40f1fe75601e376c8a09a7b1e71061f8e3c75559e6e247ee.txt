// Declare a list with numbers 1 through 5
let numbers = [1; 2; 3; 4; 5]

// Define a function that uses pattern matching and recursion to sum the values in the list
let rec sumList list =
    match list with
    | [] -> 0 // Base case: if the list is empty, return 0
    | head::tail -> head + sumList tail // Recursive case: add the first value to the sum of the rest of the list

// Call the function on the declared list and print the result
printfn "The sum of the list is %i" (sumList numbers)
// create record type to represent a person
type Person = {FirstName: string; LastName: string; Age: int; Occupation: string}

// create list of Person records
let people = [{FirstName = "John"; LastName = "Smith"; Age = 35; Occupation = "Engineer"};
              {FirstName = "Sarah"; LastName = "Johnson"; Age = 42; Occupation = "Teacher"};
              {FirstName = "Adam"; LastName = "Williams"; Age = 28; Occupation = "Accountant"}]
             
// filter the list to only include people over the age of 30
let filteredPeople = people |> List.filter (fun p -> p.Age > 30)

// sort the filtered list by last name in descending order
let sortedPeople = filteredPeople |> List.sortByDescending (fun p -> p.LastName)

// print out each person's full name and occupation
for person in sortedPeople do
    printfn "%s %s is a %s." person.FirstName person.LastName person.Occupation
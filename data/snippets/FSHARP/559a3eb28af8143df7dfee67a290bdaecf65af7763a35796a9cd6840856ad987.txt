// F# code snippet for mergeSort
// This code snippet implements the merge sort algorithm in F#

let rec mergeSort lst =
    match lst with
    | [] -> []
    | [x] -> [x]
    | _ ->
	    let m = lst.Length / 2
        let left = lst |> Seq.take m |> Seq.toList
        let right = lst |> Seq.skip m |> Seq.toList
        let newLeft = mergeSort left
        let newRight = mergeSort right
        let rec merge left right acc =
            match left, right with
            | [], _ -> reverse acc right
            | _, [] -> reverse acc left
            | lh::lt, rh::rt ->
                if lh <= rh then 
                    merge lt right (lh::acc)
                else
                    merge left rt (rh::acc)
        merge newLeft newRight []

// Example usage
let list = [4; 2; 6; 1; 9]
let sortedList = mergeSort list
// Output: [1; 2; 4; 6; 9]
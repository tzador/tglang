// Create a function that checks if a given number is prime
let isPrime (num:int) =
    // Set initial divisor to 2
    let divisor = 2
    // Use a recursive helper function to check if num is divisible by any number less than or equal to its square root
    let rec checkDivisible (divisor: int) (num: int) =
        // Check if num is divisible by divisor
        match num % divisor with
        | 0 -> // If divisible, return false
               false
        | _ when divisor * divisor > num  -> // If divisor is greater than num's square root, return true
                                            true
        | _ -> // Otherwise, recursively check the next divisor
               checkDivisible (divisor + 1) num
    // Call helper function and return the result
    checkDivisible divisor num

// Call function with an input number
isPrime 17
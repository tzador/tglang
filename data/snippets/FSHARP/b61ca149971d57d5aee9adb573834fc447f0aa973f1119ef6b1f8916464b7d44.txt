// Define a recursive function that calculates the nth fibonacci number
let rec fibonacci n : int =
    match n with
    | 0 -> 0
    | 1 -> 1
    | _ -> fibonacci (n-1) + fibonacci (n-2)

// Define a list containing the first 10 fibonacci numbers using a list comprehension
let fibonacciList = [ for i in 0..9 -> fibonacci i ]

// Define a function to calculate the sum of elements in a list using recursion
let rec sumList lst : int =
    match lst with
    | [] -> 0
    | head::tail -> head + sumList tail

// Calculate the sum of the first 10 fibonacci numbers
let sum = sumList fibonacciList

// Print the result
printfn "The sum of the first 10 fibonacci numbers is %i" sum
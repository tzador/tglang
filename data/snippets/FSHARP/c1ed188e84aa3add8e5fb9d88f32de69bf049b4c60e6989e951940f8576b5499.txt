// Define a function that takes in a list of integers and performs a series of operations
// The output will be a new list of modified integers

let modifyList (list: int list) =
    // Use the List.fold function to perform a left-to-right fold operation on the list
    list
    |> List.fold (fun acc num -> 
        // Multiply each integer in the list by 2 and add it to the accumulator
        // Use the List.map function to apply the mapping operation to each element in the list
        acc + (num * 2)) 0 // Set initial accumulator value to 0

    |> List.map (fun num ->
        // Divide each integer in the list by 3 and return it as a floating-point number
        float num / 3.0)

    |> List.filter (fun num -> 
        // Filter out any floating-point numbers that are less than 5
        num >= 5.0)

    |> List.sortByDescending (fun num -> 
        // Sort the floating-point numbers in descending order
        -num)

// Create a list of integers
let numbers = [1; 3; 5; 7; 9]

// Call the modifyList function and store the result in a new list
let modifiedNumbers = modifyList numbers

// Print the result
printfn "%A" modifiedNumbers // Output: [4.666666666666667; 3.333333333333333; 5.0]
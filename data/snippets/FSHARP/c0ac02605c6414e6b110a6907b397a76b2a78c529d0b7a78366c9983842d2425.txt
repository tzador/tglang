#light

// Define a recursive function to calculate the factorial of an input number
let rec factorial n =
    if n < 0 then failwith "Input must be a non-negative integer"
    else if n = 0 then 1
    else n * factorial (n-1)

// Define a function to calculate the nth Fibonacci number using pattern matching
let rec fib n =
    match n with
        | 0 -> 0
        | 1 -> 1
        | _ -> fib (n-1) + fib (n-2)

// Define a function to print out the first n Fibonacci numbers
let printFibs n =
    for i in 0 .. n do
        printfn "%i: %i" i (fib i)
    
// Calculate the factorial of 5 and print the result
let result = factorial 5
printfn "5! = %i" result

// Print out the first 10 Fibonacci numbers
printFibs 10
// Define a recursive function to calculate factorial
let rec factorial n =
    if n < 0 then
        failwith "n cannot be negative"
    else if n = 0 then
        1
    else
        n * factorial (n-1)

// Define a function to calculate the sum of multiples of 3 or 5 below a given number
let sumMultiples num =
    let rec helper n acc =
        if n = 0 then
            acc
        else
            let multipleOf3 = n % 3 = 0
            let multipleOf5 = n % 5 = 0
            if multipleOf3 || multipleOf5 then
                helper (n-1) (acc+n)
            else
                helper (n-1) acc
    helper (num-1) 0

// Define an anonymous function to check if given number is a palindrome
let isPalindrome = (fun x -> string(x) = System.String.Reverse(string(x)))

// Define a record type to represent a rectangle with its length and width
type Rectangle =
    { Length : float
      Width : float }

// Create an instance of the Rectangle type
let myRectangle = { Length = 5.4; Width = 3.2 }
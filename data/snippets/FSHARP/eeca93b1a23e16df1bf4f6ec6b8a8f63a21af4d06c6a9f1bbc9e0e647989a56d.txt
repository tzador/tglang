let rec knapsack weight limit vals =
    let indexedVals = Array.mapi (fun i (_, v) -> i, v) vals
    let n = vals.Length
    let dp = Array2D.create n (limit + 1) 0
    let rec loop i w =
        if i = n || w = 0 then 0
        else
            let weight_i, val_i = vals.[i]
            let ans1 = dp.[i + 1, w]
            let ans2 = if weight_i > w then 0 else val_i + dp.[i + 1, w - weight_i]
            let ans = max ans1 ans2
            let index = if ans = ans1 then i + 1 else i
            let arr = Array.mapi (fun i (i', v) -> if i = index then (i', v - weight_i) else (i', v)) indexedVals
            let res = loop (i + 1) (w - weight_i) + val_i
            let ans3 = res + loop (i + 1) w
            dp.[i, w] <- max ans ans3
            dp.[i + 1, w] <- ans3
            res
    loop 0 limit
// A function to calculate the sum of squares
let sumOfSquares (numbers: int list) : int =
    numbers
    |> Seq.map (fun x -> x * x)
    |> Seq.sum

// An infinite sequence of Fibonacci numbers
open System.Numerics

let rec fibs =
    seq {
        yield! [0I; 1I]
        let rec internal a b =
            yield a+b
            yield! internal b (a+b)
        yield! internal 0I 1I
    }

// A recursive function to calculate the factorial of a number
let rec factorial n =
    match n with
    | 0 -> 1
    | _ -> n * factorial (n - 1)
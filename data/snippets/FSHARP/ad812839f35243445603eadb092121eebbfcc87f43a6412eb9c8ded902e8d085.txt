type Item = {
  Name: string;
  Price: decimal;
  Quantity: int;
}

let updatePrice (item:Item) (newPrice:decimal) =
  {item with Price = newPrice}

let rec calculateTotal (items:Item list) =
  match items with
  | [] -> 0m
  | head::tail -> head.Price * decimal(head.Quantity) + calculateTotal tail 

let updateQuantity (item:Item) (newQuantity:int) =
  {item with Quantity = newQuantity}

let updateItem (item:Item) (newName:string) (newPrice:decimal) (newQuantity:int) =
  let updatedItem = {item with Name = newName}
  updatedItem |> updatePrice newPrice |> updateQuantity newQuantity

let newItem = {Name = "Apples"; Price = 3.99m; Quantity = 5}

let updatedItem = updateItem newItem "Oranges" 2.99m 10
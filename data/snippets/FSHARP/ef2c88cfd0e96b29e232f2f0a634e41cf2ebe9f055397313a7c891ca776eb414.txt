(* Define a function that takes in a list of integers and returns the sum of all even numbers in the list *)
let rec sumOfEvens (list: int list) :int =
    match list with
    | [] -> 0 // if the list is empty, return 0
    | head :: tail -> // otherwise, break the list into head (first element) and tail (rest of the list)
        if head % 2 = 0 then head + sumOfEvens tail // if the head is even, add it to the sum of all even numbers in the tail
        else sumOfEvens tail // otherwise, disregard the head and recursively call the function on the tail to continue summing even numbers
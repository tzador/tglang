/// <summary>
/// Calculates the sum of all elements in a given list.
/// </summary>
/// <param name="lst">The list of integers to calculate the sum from.</param>
/// <returns>The sum of all elements in the list.</returns>
let calculateSum lst =
    lst |> List.fold (+) 0 // Uses the List.fold function to apply the addition operation on each element in the list, starting from an initial value of 0.

/// <summary>
/// Calculates the average of all elements in a given list.
/// </summary>
/// <param name="lst">The list of integers to calculate the average from.</param>
/// <returns>The average of all elements in the list.</returns>
let calculateAverage lst =
    lst
    |> List.map float // Converts the list of integers to a list of floats.
    |> List.sum // Sums all elements in the list.
    |> fun sum -> sum / float (lst.Length) // Divides the sum by the length of the list to get the average.

/// <summary>
/// Calculates the factorial of n.
/// </summary>
/// <param name="n">The integer to calculate the factorial of.</param>
/// <returns>The factorial of n.</returns>
let rec factorial n =
    match n with
    | 0 -> 1 // Base case: 0 factorial is 1.
    | _ -> n * factorial (n-1) // Recursive case: n factorial is equal to n times (n-1) factorial.
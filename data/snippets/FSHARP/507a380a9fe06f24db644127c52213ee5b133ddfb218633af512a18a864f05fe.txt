[* Module Name: Lists

This module provides functions for working with lists in F#

namespace FSharp.Collections

module Lists =

	// Returns the length of a list
	let length (list : 'a list) : int = 
		let rec lengthHelper acc lst = 
			match lst with
			| [] -> acc
			| _::xs -> lengthHelper (acc + 1) xs
		lengthHelper 0 list

	// Reverses a list 
	let reverse (list :'a list) : 'a list = 
		let rec reverseHelper acc lst = 
			match lst with
			|[] -> acc
			|x::xs -> reverseHelper (x::acc) xs
		reverseHelper [] list

	// Maps a function over a list 
	let map (func : 'a -> 'b) (list : 'a list) : 'b list = 
		let rec mapHelper acc lst = 
			match lst with
			| [] -> reverse acc
			| x::xs -> mapHelper (func x::acc) xs
		mapHelper [] list

	// Filters a list 
	let filter (predicate : 'a -> bool) (list : 'a list) : 'a list =
		let rec filterHelper acc lst = 
			match lst with
			| [] -> reverse acc
			| x::xs -> filterHelper (if predicate x then x::acc else acc) xs
		filterHelper [] list

	// Folds a function over a list (left associative)
	let fold (func : 'a -> 'b -> 'a) (initial : 'a) (list : 'b list) : 'a = 
		let rec foldHelper acc lst = 
			match lst with
			| [] -> acc
			| x::xs -> foldHelper (func acc x) xs
		foldHelper initial list
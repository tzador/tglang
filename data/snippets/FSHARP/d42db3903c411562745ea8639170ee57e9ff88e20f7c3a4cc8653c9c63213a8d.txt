// Define a recursive function to compute the factorial of a given number
let rec factorial n =
    match n with
    | 0 -> 1 
    | _ -> n * factorial (n-1)

// Define a list of numbers
let numbers = [5; 3; 7; 2; 9]

// Map the factorial function over the list 
let numbers_factored = List.map factorial numbers

// Filter the list to include only the numbers that are less than or equal to their factorials
let filtered_numbers = List.filter (fun x -> x <= factorial x) numbers_factored

// Sort the filtered list in descending order
let sorted_numbers = List.sortDescending filtered_numbers

// Print the final list of numbers using pattern matching
match sorted_numbers with
| [] -> printfn "No numbers found"
| _::_ -> printfn "Numbers found: %A" sorted_numbers
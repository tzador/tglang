// Define a function that takes in a list of integers and returns a new list 
// with each integer multiplied by 2 
let doubleList (inputList: list<int>) =
  inputList
  |> List.map(fun x -> x*2)
  
// Define a recursive function that calculates the factorial of a given number
let rec factorial (n: int) =
  match n with
  | 0 -> 1 // Base case
  | _ -> n * factorial(n-1) // Recursive case, multiply by n-1 factorial
  
// Define a record type for a person with name, age, and occupation
type Person = {Name: string; Age: int; Occupation: string}

// Define a list of people
let people = [
  {Name = "John"; Age = 25; Occupation = "Engineer"};
  {Name = "Kate"; Age = 30; Occupation = "Teacher"};
  {Name = "Mike"; Age = 40; Occupation = "Doctor"}
]

// Filter the list of people to only include those who are over 30 years old
let filteredPeople = people |> List.filter (fun person -> person.Age > 30)
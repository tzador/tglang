// This function takes in a list of integers and returns the sum of all even numbers in the list
let sumEvenNumbers (numbers : list<int>) =
    let rec loop nums sum = // recursive helper function
        match nums with
        | [] -> sum // base case: if the list is empty, return the sum
        | x::xs -> // pattern match to split list into head and tail
            if x % 2 = 0 then // if current number is even
                loop xs (sum + x) // add it to the sum and continue with the rest of the list
            else // if current number is odd
                loop xs sum // don't add it to the sum, continue with the rest of the list
    loop numbers 0 // start the recursion with the input list and initial sum of 0
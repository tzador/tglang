type Complex = { real: float; imaginary: float}

let add (a: Complex) (b: Complex) =
    {real = a.real + b.real; imaginary = a.imaginary + b.imaginary}

let sub (a: Complex) (b: Complex) =
    {real = a.real - b.real; imaginary = a.imaginary - b.imaginary}

let mult (a: Complex) (b: Complex) =
    {real = (a.real * b.real) - (a.imaginary * b.imaginary); imaginary = (a.real * b.imaginary) + (a.imaginary * b.real)}

let div (a: Complex) (b: Complex) =
    {real = ((a.real * b.real) + (a.imaginary * b.imaginary)) / ((b.real * b.real) + (b.imaginary * b.imaginary)); imaginary = ((a.imaginary * b.real) - (a.real * b.imaginary)) / ((b.real * b.real) + (b.imaginary * b.imaginary))}
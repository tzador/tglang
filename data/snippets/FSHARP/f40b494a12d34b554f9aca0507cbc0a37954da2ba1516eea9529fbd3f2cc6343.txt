//Curried function to calculate Fibonacci numbers
let rec fib = function
    | 0 -> 0
    | 1 -> 1
    | n -> fib (n-2) + fib (n-1)

//Function to calculate the sum of Fibonacci numbers up to a given number n
let fibSum (n :int) =
    let rec sum n acc =
        if n <= 0 then acc
        else sum (n-1) (fib n + acc)
    sum n 0

//Function composition using the "||>" operator
let rec fibComposed n =
    let squared = (fun x -> x * x ||> fibSum)
    let cubed = (fun x -> x * x * x ||> fibSum)
    if n % 2 = 0 then squared n
    else cubed n
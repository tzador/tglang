//Create a function that takes in two lists and returns a new list that contains elements from both lists, without duplicates

let concatWithoutDuplicates list1 list2 =
    //Create a mutable set to keep track of elements already seen
    let mutable seenElements = Set()

    //Create a list to store the result
    let mutable result = List()

    //Loop through elements in first list
    for element1 in list1 do
        //Check if element has already been seen
        if not (seenElements.Contains(element1)) then
            //Add element to set and result list
            seenElements.Add(element1)
            result <- element1 :: result
    
    //Loop through elements in second list
    for element2 in list2 do
        //Check if elements has already been seen
        if not (seenElements.Contains(element2)) then
            //Add element to set and result list
            seenElements.Add(element2)
            result <- element2 :: result
    
    //Return final result list
    result
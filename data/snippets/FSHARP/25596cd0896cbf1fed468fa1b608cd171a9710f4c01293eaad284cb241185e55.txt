// Defines a function that calculates the factorial of a given number
let rec factorial n =
    match n with
    | 0 -> 1
    | _ -> n * factorial (n - 1)

// Calls the factorial function with input value of 5 and prints the result
let result = factorial 5
printfn "The factorial of 5 is %d" result

// Defines a list of numbers
let myNumbers = [2; 5; 8; 1; 4]

// Uses List.map to apply the factorial function to each number in the list
let myFactorials = myNumbers |> List.map factorial

// Prints out the original list and the list of factorials
printfn "My numbers: %A" myNumbers
printfn "My factorials: %A" myFactorials

// Defines a function that checks if a number is prime or not
let isPrime n =
    let rec check i =
        if i > n / 2 then true
        else if n % i = 0 then false
        else check (i + 1)
    check 2

// Uses List.filter to filter out all non-prime numbers from the original list
let myPrimes = myNumbers |> List.filter isPrime

// Prints out the list of prime numbers
printfn "My primes: %A" myPrimes
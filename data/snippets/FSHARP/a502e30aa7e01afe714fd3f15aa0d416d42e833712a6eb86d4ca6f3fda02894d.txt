let rec mergeSort array = 
    let rec merge (arr1:list, arr2:list) = 
        match arr1, arr2 with
        | [], l | l, [] -> l
        | (hf :: rf), (hs :: rs) -> 
            if hf < hs then hf :: (merge (rf, arr2)) 
            else hs :: (merge (arr1, rs))
    let rec split ls = 
        match ls with
        | [] | [_] as l -> l | _::x::rest -> let front, back = split rest in x::front, back 
    let rec MW(ls:list) = 
        match ls with
        | [] -> []
        | [x] -> [x] 
        | l -> let front, back = split l in merge (MW(front), MW(back))
    MW array
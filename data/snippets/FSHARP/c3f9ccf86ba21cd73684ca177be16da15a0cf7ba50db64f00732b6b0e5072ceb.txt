// An example F# function that calculates the nth Fibonacci number

let rec fib n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | _ -> fib (n-1) + fib (n-2)
    
// A function that takes in an int array and returns the sum of its elements
let sumArray (arr: int[]) =
    arr
    |> Array.sum

// A function that takes in a string and an int, and returns a new string repeated n times
let repeatString (str: string) (n: int) =
    let rec helper str n acc = 
        match n with
        | 0 -> acc
        | _ -> helper str (n-1) (str + acc)
    helper str n ""
    
// A mutable record type with two fields
type Person = {
    mutable name : string
    mutable age : int
}

let student = {name = "John"; age = 20}
student.age <- 21
student.name <- "Jane"

// A function that takes in a list of tuples, filters out tuples with even first elements, and returns a new list with the sum of the second elements
let filterAndSum (tuples: (int * int) list) =
    tuples
    |> List.filter (fun (x, _) -> x % 2 <> 0)
    |> List.map (fun (_, y) -> y)
    |> List.sum
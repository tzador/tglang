open System

type Shape =
    | Circle of double
    | Square of double
    | Rectangle of double * double

let area shape =
    match shape with
    | Circle radius -> Math.PI * (radius ** 2.0)
    | Square sideLength -> sideLength ** 2.0
    | Rectangle length width -> length * width

let printShapeInfo shape =
    match shape with
    | Circle radius ->
        printfn "Circle: radius = %f, area = %f" radius (area shape)
    | Square sideLength ->
        printfn "Square: side length = %f, area = %f" sideLength (area shape)
    | Rectangle length width ->
        printfn "Rectangle: length = %f, width = %f, area = %f" length width (area shape)

let circle = Circle(5.0)
let square = Square(4.0)
let rectangle = Rectangle(3.0, 6.0)

printShapeInfo circle
printShapeInfo square
printShapeInfo rectangle
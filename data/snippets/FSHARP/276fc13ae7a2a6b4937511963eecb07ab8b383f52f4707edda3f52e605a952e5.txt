let rec sumList list = 
    match list with
    | [] -> 0 //base case, returns 0 when list is empty
    | head::tail -> head + sumList tail //recursive call, adds head to the sum of the remaining list

let myList = [1;2;3;4;5] //example list
let sum = sumList myList //calling sumList function on myList
printfn "The sum of the list is %d." sum //printing the result
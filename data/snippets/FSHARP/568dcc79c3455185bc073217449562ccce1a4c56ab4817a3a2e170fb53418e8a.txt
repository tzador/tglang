// A function that takes in a list of integers and computes the sum of all prime numbers in the list
let rec sumPrime (lst : int list) =

    // Helper function to check if a number is prime
    let isPrime (num : int) =
        let rec primeHelper (divisor : int) =
            divisor > num / 2 || (num % divisor <> 0 && primeHelper (divisor + 1))
        primeHelper 2

    // Recursively iterate through the list, adding all prime numbers to the sum
    match lst with
    | [] -> 0
    | x::xs when isPrime x -> x + sumPrime xs
    | _::xs -> sumPrime xs
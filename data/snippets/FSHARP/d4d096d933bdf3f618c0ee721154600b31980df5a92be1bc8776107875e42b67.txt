let rec mergeSort lst =
    let rec merge compare l1 l2 =
        match l1, l2 with
        |  <@@ [] @@>, l | [], <@@ [] @@> -> l
        |  x::xs, y::ys when compare x y <= 0 -> x :: merge compare xs l2
        |  x::xs, ys -> y :: merge compare (x::xs) ys

    let rec split lst l1 l2 =
        match lst with
        |  [], [] -> l1, l2
        |  x::xs, [] -> split xs [x] []
        |  x::xs, y::ys -> split xs (y::l1) (x::l2)

    match lst with
    |  _::_ -> let l1, l2 = split lst [] [] in
               merge (mergeSort compare) (mergeSort l1) (mergeSort l2)
    |  _ -> lst
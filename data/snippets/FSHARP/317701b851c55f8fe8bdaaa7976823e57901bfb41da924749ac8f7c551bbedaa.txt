let rec fibonacci n =
    match n with
    | 0 -> 0
    | 1 -> 1
    | _ -> fibonacci (n-1) + fibonacci (n-2)

// A recursive function that calculates the nth number in the Fibonacci sequence

let mutable cache = Map.empty

let memoize f =
    fun x ->
        match Map.tryFind x cache with
        | Some y -> y
        | None ->
            let v = f x
            cache <- Map.add x v cache
            v

// A higher order function that memoizes another function to avoid redundant calculations

let fibonacci' = memoize fibonacci

// Using the memoized function for faster calculation of Fibonacci numbers

fibonacci' 50
// Output: 12586269025
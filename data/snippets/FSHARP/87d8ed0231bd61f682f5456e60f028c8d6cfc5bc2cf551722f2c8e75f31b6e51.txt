/// Function to check if two strings are anagrams
let isAnagram (str1:string) (str2:string) =
    let charList1 = str1.ToCharArray()       // Convert first string to a char list
    let charList2 = str2.ToCharArray()       // Convert second string to a char list

    // If lengths of the strings are not the same, they can't be anagrams
    if charList1.Length <> charList2.Length then
        printfn "%s and %s are not anagrams." str1 str2
        false

    else
        // Sort the char lists in ascending order
        let sorted1 = charList1 |> Array.sort
        let sorted2 = charList2 |> Array.sort

        // Iterate through the sorted lists to check if they are the same
        let mutable i = 0
        let mutable isAnagram = true
        while i < sorted1.Length do
            if sorted1.[i] <> sorted2.[i] then
                printfn "%s and %s are not anagrams." str1 str2
                isAnagram <- false
                break
            i <- i + 1
        
        if isAnagram then
            printfn "%s and %s are anagrams." str1 str2
        isAnagram

// Test cases
isAnagram "listen" "silent"   // Outputs: "listen and silent are anagrams."
isAnagram "cat" "dog"         // Outputs: "cat and dog are not anagrams."
isAnagram "Elvis" "lives"     // Outputs: "Elvis and lives are anagrams."
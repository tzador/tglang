// Define a function that takes in two integers and returns the sum
let add x y =
    x + y

// Define a function that takes in a list of integers and returns the sum
let rec sumList xs =
    match xs with
    | [] -> 0
    | x::xs -> x + sumList xs

// Define a recursive function to calculate the factorial of a number
let rec factorial n =
    match n with
    | 0 -> 1
    | 1 -> 1
    | n -> n * factorial (n-1)

// Define a function that takes in two strings and concatenates them
let concatenateStrings str1 str2 =
    str1 + " " + str2

// Define a function that checks if a number is prime
let isPrime n =
    let rec check div =
        if div*div > n then
            true
        elif n % div = 0 then
            false
        else
            check (div+1)
    check 2

// Define a function that takes in two lists of integers and merges them
let mergeLists list1 list2 =
    List.concat [list1; list2]

// Define a function that converts a list of strings to uppercase
let toUpper stringList =
    List.map String.upper stringList

// Define a function that creates a list of n consecutive integers
let createList n =
    [for i in 1..n -> i]

// Define a function that checks if a list is sorted in ascending order
let isSorted list =
    List.fold (fun acc x -> if x < acc then false else x) true list

// Define a function that calculates the distance between two points
let distance (x1, y1) (x2, y2) =
    let dx = x2 - x1
    let dy = y2 - y1
    sqrt (dx*dx + dy*dy)
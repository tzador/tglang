let rec reverseList list =
    match list with
    | head :: tail -> reverseList tail @ [head] // recursively call function with tail and add head to end
    | [] -> [] // empty list, return empty list

let testList = [1; 2; 3; 4; 5] // create test list

let reversedList = reverseList testList // call reverseList function on test list

printfn "Reversed List: %A" reversedList // print reversed list in console
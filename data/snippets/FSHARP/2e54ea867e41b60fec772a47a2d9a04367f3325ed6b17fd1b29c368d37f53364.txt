let fibonacci num = 
    let rec FibHelper x y count =
        match count with
        | 0 -> x
        | _ -> FibHelper y (x + y) (count - 1)

    FibHelper 0 1 num

#nowarn "26"

let result = fibonacci 10 // 55

let factorials =
    [1; 2; 3; 4; 5]
    |> List.map (fun x ->
        let rec FactHelper factorial n =
            match n with
            | 0 -> factorial
            | _ -> FactHelper (factorial * n) (n - 1)
        
        FactHelper 1 x)
//factorials = [1; 2; 6; 24; 120]
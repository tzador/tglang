// Generate a Fibonacci sequence and find the sum of all even numbers up to a certain limit

/// function to generate Fibonacci sequence up to a certain limit
let rec fibSeq limit =
    seq{
        yield 1L
        yield 2L
        let mutable a = 1L
        let mutable b = 2L
        while a + b <= limit do
            let c = a + b
            yield c
            a <- b
            b <- c
    }

/// function to find the sum of all even numbers in a sequence
let rec sumEvenSeq (seq: seq<bigint>) =
    seq
    |> Seq.filter (fun x -> x % 2L = 0L)
    |> Seq.sum

/// call the functions and print the sum of even numbers in the Fibonacci sequence up to 100
let fibLimit = 100L

/// generate Fibonacci sequence
let fibSequence = fibSeq fibLimit

/// find the sum of even numbers in the sequence
let evenSum = sumEvenSeq fibSequence

printfn "The sum of even numbers in Fibonacci sequence up to %A is %A" fibLimit evenSum
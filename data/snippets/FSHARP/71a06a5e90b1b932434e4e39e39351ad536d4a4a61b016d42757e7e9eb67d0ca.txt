// Function to check if a number is prime
let isPrime n =
    // List of divisors
    let divisors = [2..n/2]
    // Check if number is divisible by any of the divisors
    let result = List.tryFind (fun x -> n % x = 0) divisors
    match result with
    // No divisor found, number is prime
    | None -> true
    // Divisor found, number is not prime
    | Some _ -> false

// Function to generate a list of prime numbers up to a given number
let rec primeList n =
    match n with
    // Base case, stop at 2
    | 2 -> [2]
    // Recursive case, check if number is prime and add to list
    | _ -> if (isPrime n) then n::primeList(n-1) else primeList(n-1)

// Print the list of prime numbers up to 100
printfn "List of prime numbers up to 100: %A" (List.filter isPrime [2..100])
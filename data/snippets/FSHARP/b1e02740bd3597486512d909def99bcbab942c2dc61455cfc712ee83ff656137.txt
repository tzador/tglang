// Function to generate all possible combinations of elements in a list
let rec combinations list =
    match list with
    | [] -> [[]]
    | head :: tail ->
        let rec combi acc x =
            match acc with
            | [] -> []
            | hd :: tl ->
                (x :: hd) :: (combi tl x) @ (combi tl x)
        let rest = combinations tail
        rest @ (combi rest head)
// Define a record type representing a student
type Student = {
    Name: string
    Age: int
    GPA: float
    Major: string
    Courses: string list
}

// Create a list of students
let students = [
    { Name = "John"; Age = 21; GPA = 3.5; Major = "Computer Science"; Courses = ["Intro to Programming"; "Data Structures"; "Algorithms"] }
    { Name = "Emily"; Age = 20; GPA = 3.8; Major = "Mathematics"; Courses = ["Calculus"; "Linear Algebra"; "Probability"] }
    { Name = "Sarah"; Age = 22; GPA = 3.2; Major = "English"; Courses = ["Intro to Literature"; "Creative Writing"; "Shakespeare"] }
]

// Define a function to calculate the average GPA of a list of students
let calculateAverageGPA (students: Student list) =
    let sum = List.fold (fun acc student -> acc + student.GPA) 0.0 students
    sum / float (List.length students)

// Sort the list of students by their GPA
let sortedStudents = List.sortBy (fun student -> student.GPA) students

// Print the name and major of each student with a GPA above 3.5
for student in sortedStudents do
    if student.GPA > 3.5 then
        printfn "%s - %s" student.Name student.Major
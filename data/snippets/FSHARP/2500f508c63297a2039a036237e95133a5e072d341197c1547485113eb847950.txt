// A function that takes in a list of numbers and returns the sum of all the numbers
let sum numbers =
    let rec helper acc lst = // Helper function to recursively add each number to a running total
        match lst with
        | [] -> acc // Return the current total when the list is empty
        | x::xs -> helper (acc + x) xs // Add the current number to the total and recursively call helper on the rest of the list
    helper 0 numbers // Initialize the helper function with an accumulator of 0 and the list of numbers as the input
    
// An example of using the sum function to get the sum of a list of numbers
let numbers = [1; 2; 3; 4; 5] // Create a list of numbers
let result = sum numbers // Call the sum function with the list of numbers
printfn "The sum of the numbers is %i" result // Print the result to the console
// Output: The sum of the numbers is 15
let rec mergeSort list =
    match list with
    | [] -> []
    | [x] -> [x]
    | _ ->
        let rec split list1 list2 list = 
            match list with
            | [] -> (List.rev list1, List.rev list2)
            | [x] -> split (x::list1) list2 []
            | x::y::xs -> split (x::list1) (y::list2) xs
        
        let rec merge east west =
            match east, west with
            | [], _ -> west
            | _, [] -> east
            | x::xs, y::ys ->
                if x < y then x :: merge xs (y::ys)
                else y :: merge (x::xs) ys

        let (left, right) = split [] [] list
        merge (mergeSort left) (mergeSort right)
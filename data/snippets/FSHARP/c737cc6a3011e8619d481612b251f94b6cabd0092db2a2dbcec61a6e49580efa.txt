let rec merge (left_list: int list) (right_list: int list) = 
    match (left_list, right_list) with 
    | ([], []) -> [] 
    | ([], right_tail)  -> right_tail 
    | (left_tail, []) -> left_tail 
    | (left_head :: left_tail, right_head :: right_tail) -> 
        if left_head < right_head then left_head :: merge (left_tail, right_list) 
        else right_head :: merge (left_list, right_tail)

//This function recursively merges two sorted lists in ascending order
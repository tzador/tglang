// This code snippet utilizes the FSharp.Core library
// to sort a list of integers using the quicksort algorithm.

open System // Import the .NET System library
open FSharp.Collections // Import the FSharp.Collections library

// Define a quicksort function that takes in a list
// of integers and returns a sorted list of integers
let rec quicksort (list: int list) =
    match list with
    | [] -> [] // An empty list is already sorted
    | x :: xs ->
        let smaller, bigger = List.partition ((>) x) xs
        // Recursively apply quicksort to the smaller and bigger lists
        quicksort smaller @ [x] @ quicksort bigger

// Define a list of integers to be sorted
let nums = [5; 2; 8; 3; 1; 6; 9; 4; 7]

// Print the original list
printfn "Original list: %A" nums

// Sort the list using the quicksort function
let sortedNums = quicksort nums

// Print the sorted list
printfn "Sorted list: %A" sortedNums
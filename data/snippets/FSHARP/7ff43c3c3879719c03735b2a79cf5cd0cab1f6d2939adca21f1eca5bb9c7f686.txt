// defining a function called 'factorial' with an integer parameter 'n'
let factorial n =
    // using pattern matching to handle base case
    match n with
    | 0 -> 1 // if n is 0, then return 1
    | _ -> n * factorial (n-1) // otherwise, multiply n with recursive call to factorial function with parameter (n-1)

// calling the factorial function with input 5 and storing the result in the 'fact' variable
let fact = factorial 5  

// printing the result
printfn "Factorial of 5: %d" fact
# This snippet creates a class 'Car' with attributes 'make', 'model', and 'year'.
class Car {

    has $!make; # Private attribute to store make of car
    has $!model; # Private attribute to store model of car
    has $!year; # Private attribute to store year of car

    submethod BUILD(:$make, :$model, :$year) { # Constructor method that takes named arguments
        $!make = $make; # Assigns make argument to private attribute
        $!model = $model; # Assigns model argument to private attribute
        $!year = $year; # Assigns year argument to private attribute
    }

    method get_make() { # Getter method to retrieve make attribute
        return $!make;
    }

    method set_make($new_make) { # Setter method to update make attribute
        $!make = $new_make;
    }

    method get_year() { # Getter method to retrieve year attribute
        return $!year;
    }

    method set_year($new_year) { # Setter method to update year attribute
        $!year = $new_year;
    }

    method get_model() { # Getter method to retrieve model attribute
        return $!model;
    }

    method set_model($new_model) { # Setter method to update model attribute
        $!model = $new_model;
    }

    method drive() { # Method to simulate driving the car
        say "Driving the $!year $!make $!model...";
    }
}

my $car = Car.new(make => "Toyota", model => "Prius", year => 2021); # Creates an instance of the Car class
$car.drive(); # Calls the drive method on the car instance, output: "Driving the 2021 Toyota Prius..."
$car.set_year(2020); # Updates the year attribute of the car instance to 2020
say $car.get_year(); # Retrieves the updated year attribute, output: 2020
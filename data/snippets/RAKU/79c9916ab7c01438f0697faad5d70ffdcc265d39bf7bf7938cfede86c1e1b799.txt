# Define a class called 'Person'
class Person {
  has $.name; # attribute of type string
  has $.age; # attribute of type integer
  has %.hobbies; # attribute of type hash
  has @.friends; # attribute of type array

  # Constructor method with default parameters
  method new($name = "John Doe", $age = 25, %hobbies, @friends) {
    my $self = self.bless(*);
    $self.name = $name;
    $self.age = $age;
    $self.hobbies = %hobbies;
    $self.friends = @friends;
    return $self;
  }

  # Method to add a new hobby to the 'hobbies' attribute
  method add_hobby($new_hobby) {
    %!hobbies{$new_hobby} = True;
  }

  # Method to remove a hobby from the 'hobbies' attribute
  method remove_hobby($hobby) {
    %!hobbies{$hobby} = False;
  }

  # Method to add a new friend to the 'friends' attribute
  method add_friend($new_friend) {
    @!friends.push($new_friend);
  }

  # Method to remove a friend from the 'friends' attribute
  method remove_friend($friend) {
    @!friends.splice(@!friends.first($friend), 1);
  }
}

# Instantiate a new Person object with custom attributes
my $person = Person.new($name = "Jane Doe", $age = 30, %hobbies = ("reading" => True, "painting" => True), @friends = ["Alex", "Mike"]);

# Add a new hobby and a new friend
$person.add_hobby("cooking");
$person.add_friend("Sarah");

# Remove a hobby and a friend
$person.remove_hobby("painting");
$person.remove_friend("Alex");

# Print the person's information
say "Name: $person.name, Age: $person.age";
say "Hobbies: " ~ %!hobbies.keys.join(", ");
say "Friends: " ~ @!friends.join(", ");

# Output:
# Name: Jane Doe, Age: 30
# Hobbies: reading, cooking
# Friends: Sarah, Mike
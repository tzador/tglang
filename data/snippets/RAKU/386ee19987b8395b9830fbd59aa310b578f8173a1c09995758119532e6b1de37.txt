# This is a comment in RAKU
my $string = "Hello World"; # Declares and initializes a new string variable
my $number = 123; # Declares and initializes a new integer variable
say "The string is $string and the number is $number"; # Prints the values of the string and number variables
my @list = ($string, $number); # Declares an array variable and populates it with the string and number variables
my %hash = (key1 => "value1", key2 => "value2", key3 => "value3"); # Declares a hash variable and assigns key-value pairs
for @list -> $element { # Starts a for loop to iterate through the list variable
    say "$element is of type { $element.WHAT }" # Prints the element and its data type using the WHAT metaoperator
}
for %hash.kv -> $key, $value { # Starts a for loop to iterate through the hash variable using the kv method
    say "The key '$key' has the value '$value'" # Prints the key and value of each entry in the hash variable
}
if $string eq "Hello World" { # Starts an if statement to check if the string variable is equal to "Hello World"
    say "The string is equal to 'Hello World'" # Prints a message if the condition is true
}
else { # Starts an else statement
    say "The string is not equal to 'Hello World'" # Prints a message if the condition is false
}
sub greet(Str $name) { # Declares a subroutine that takes in a string parameter
    say "Hello, $name!" # Prints a greeting using the parameter
}
greet("John"); # Calls the greet subroutine with the string "John" as an argument
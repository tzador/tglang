# This code snippet creates a sorting subroutine using the builtin .sort method
# It takes in a list and a sorting direction (asc/desc) as inputs

sub sorting-subs (Array $list, Str $direction) {

    # If the direction is asc, use the built-in .sort method to sort the list in ascending order
    if $direction eq 'asc' {
        $list.sort;
    }
    # If the direction is desc, use the built-in .sort method with a custom comparator to sort the list in descending order
    elsif $direction eq 'desc' {
        $list.sort( { $^b cmp $^a } );
    }
    # If the direction is not specified or incorrect, throw an Exception
    else {
        die "Please specify a valid sorting direction (asc/desc).";
    }

    # Return the sorted list
    return $list;
}

# Example usage
my @numbers = (2, 8, 3, 5, 1, 7, 4, 9, 6);
say "Unsorted list: @numbers";
say "Sorted list (ascending): ", sorting-subs(@numbers, 'asc');
say "Sorted list (descending): ", sorting-subs(@numbers, 'desc');

# Output:
# Unsorted list: 2 8 3 5 1 7 4 9 6
# Sorted list (ascending): 1 2 3 4 5 6 7 8 9
# Sorted list (descending): 9 8 7 6 5 4 3 2 1
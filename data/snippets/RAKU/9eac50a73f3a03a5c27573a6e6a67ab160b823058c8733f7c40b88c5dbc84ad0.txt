# Helper method for sorting
method quick_sort(@arr) {
	# Set base case
	if @arr.elems <= 1 {
		return @arr;
	}

	# Choose pivot element
	my $pivot = @arr[ @arr.elems div 2 ];

	# Divide the list into smaller and larger elements
	my @smaller;
	my @larger;
	for @arr {
		if $_ < $pivot {
			@smaller.push($_);
		} elsif $_ > $pivot {
			@larger.push($_);
		}
	}

	# Recursively sort smaller and larger elements
	my @sorted = quick_sort(@smaller);
	@sorted.push($pivot);
	@sorted.push(quick_sort(@larger));

	# Return the sorted list
	return @sorted;
}

# Main program
my @unsorted_numbers = 4, 2, 7, 1, 9, 5, 6, 8, 3;
say quick_sort(@unsorted_numbers);

// The output would be: [1, 2, 3, 4, 5, 6, 7, 8, 9]
#!/usr/bin/env raku

# Declare a subroutine that takes in an array and returns a modified version of it
sub modify-array(@array) { 

    # Initialize a new array to store modified values
    my @modified-array;

    # Loop through each element in the array
    for @array -> $element {

        # If the element is a number
        if $element ~~ Numeric {

            # Multiply it by 2 and push it to the new array
            @modified-array.push($element * 2);

        # If the element is a string
        } elsif $element ~~ Str {

            # Reverse the string and push it to the new array
            @modified-array.push($element.flip());

        # If the element is a boolean
        } elsif $element ~~ Bool {

            # Negate it and push it to the new array
            @modified-array.push(!$element);
        }
    }

    # Return the modified array
    return @modified-array;
}

# Create an array with numbers, strings, and booleans
my @array = (1, 'hello', 0, True, 'world', False);

# Call the subroutine to modify the array and store the returned result in a new variable
my @modified = modify-array(@array);

# Print the modified array
say @modified;
## Creates an object `Dog` with attributes `name`, `age`, and `breed`
class Dog {
    has $.name;
    has $.age;
    has $.breed;
}

## Creates a `new_dog` object of type `Dog` with the specified attribute values
my $new_dog = Dog.new(
    name => "Buddy",
    age => 5,
    breed => "Labrador Retriever"
);

## Checks if the `new_dog` object is an instance of the `Dog` class
if $new_dog ~~ Dog {
    say "New dog object is an instance of Dog class.";
}

## Creates a `Dog::Collar` class that inherits from the `Dog` class
class Dog::Collar is Dog {

    ## Creates an additional attribute `color` for the `Dog::Collar` class
    has $.color;

    ## Updates the string representation of the `Dog::Collar` class to include the `color` attribute
    method Str() {
        return "$.name is a $.color $.breed dog, aged $.age";
    }
}

## Creates a `new_collar` object of type `Dog::Collar` with the specified attribute values
my $new_collar = Dog::Collar.new(
    name => "Max",
    age => 3,
    breed => "Golden Retriever",
    color => "Brown"
);

## Prints the string representation of the `new_collar` object, using the overridden `Str` method
say $new_collar;
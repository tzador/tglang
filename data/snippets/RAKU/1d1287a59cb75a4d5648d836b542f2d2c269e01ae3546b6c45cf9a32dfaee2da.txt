#Define subroutine that takes in one argument 'n'
sub factorial(n) {
    #Create(()) is RAKU's list constructor
    #range creates a list from 1 to n
    #|mi takes a list of parameters (1,2,3,..n) and flattens them
    my $range = |mi (1 .. n);
    #Reduce the list using * operator
    my $factorial = [ * ] $range;
    return $factorial;
}

#Define subroutine that takes in two arguments 'm' and 'n'
sub combination(m, n) {
    #Calculate factorials of m and n using factorial subroutine
    my $m_factorial = factorial(m);
    my $n_factorial = factorial(n);
    #Calculate factorial of m-n using factorial subroutine
    my $m_n_factorial = factorial(m - n);
    #Multiply and divide the factorials as per combination formula
    my $combination = ($m_factorial) / ($n_factorial * $m_n_factorial);
    return $combination;
}

#Call combination subroutine with given arguments and print the output
say(combination(5, 3));
sub insertion-sort (@array) { # Define the insertion-sort subroutine
    loop (my $i = 1; $i < @array.elems; $i++) { # Set up a loop to iterate over the array

        my $key = @array[$i]; # Set a key variable to store the current element being compared
        my $j = $i - 1; # Initialize a variable to keep track of the index being compared to

        while ($j >= 0 && @array[$j] > $key) { # Loop through the elements that have not yet been sorted and compare them to the key
            @array[$j + 1] = @array[$j]; # If the element is greater than the key, shift it to the right
            $j--; # Decrement the comparison index
        }

        @array[$j + 1] = $key; # Insert the key into its proper position in the sorted subarray
    }

    return @array; # Return the sorted array
}

my @unsorted = (5, 2, 8, 3, 10, 1, 6, 9, 4, 7); # Create an unsorted array

insertion-sort(@unsorted); # Call the insertion-sort subroutine on the unsorted array

# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # Print the sorted array
# Creating a hash with complex data structure
my %hash = (
    key => "value",
    1..6 => 100,
    "Hello" => "World",
    [1, 2, 3] => (True, False, True),
    {
        nested_key => "Nested Value",
        nested_array => [4, 5, 6],
        nested_hash => %(
            foo => "bar",
            baz => "qux",
        )
    }
);

# Adding, updating, and accessing elements in the hash
%hash<key> = "another value";  # Updating an existing key-value pair
%hash{"new_key"} = "new value";  # Adding a new key-value pair
say %hash<key>;  # Accessing a value using the key
say %hash[2];  # Accessing a value using an index
say %hash{"Hello"};  # Accessing a value using a string key

# Looping through the hash
for %hash.kv -> $key, $value {
    say "Key: $key, Value: $value";
}

# Deleting elements from the hash
%hash.delete(1..3);  # Deleting elements using a range
%hash.delete("Hello");  # Deleting a single element using a string key
%hash.delete-pos(2);  # Deleting an element at a specific index

# Clearing the hash
%hash = ();

# Printing the final hash
say %hash;
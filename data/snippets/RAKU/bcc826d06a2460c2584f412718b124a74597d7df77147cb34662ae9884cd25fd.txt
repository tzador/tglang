my @numbers = (1, 2, 3, 4, 5);
my %hash = ("A" => 1, "B" => 2, "C" => 3);

# Define a subroutine that takes in two arrays and a hash
substitute(@arr1, @arr2, %hash) {
    # Loop through the first array
    for @arr1 -> $num {
        # If the number is found in the hash, replace it with the corresponding value
        if %hash{$num}:exists {
            $num = %hash{$num};
        }
    }
    # Loop through the second array
    for @arr2 -> $num {
        # If the number is found in the hash, replace it with the corresponding value
        if %hash{$num}:exists {
            $num = %hash{$num};
        }
    }
    return (@arr1, @arr2); # Return the updated arrays
}

# Call the subroutine with our defined arrays and hash
my @new_numbers = substitute(@numbers, ("A", "B"), %hash);
say @new_numbers; # Output: (1, 2, 1, 2, 5)
# This program uses concepts of functional programming to perform a complex task of calculating the sum of all odd numbers in a list of numbers using recursion

my @numbers = (1,2,3,4,5,6,7,8,9); # create a list of numbers
say sum_odd_numbers(@numbers); # call the function to calculate the sum of all odd numbers in the list

# Function to calculate the sum of all odd numbers in a list using recursion
sub sum_odd_numbers(@numbers) {
    if @numbers.elems == 0 { # base case, if list is empty, return 0
        return 0;
    }
    else {
        my $current_number = @numbers.shift; # pop first number from list
        if $current_number % 2 == 1 { # check if number is odd
            return $current_number + sum_odd_numbers(@numbers); # if odd, add it to sum and recurse with remaining list
        }
        else {
            return sum_odd_numbers(@numbers); # if even, recurse with remaining list
        }
    }
}
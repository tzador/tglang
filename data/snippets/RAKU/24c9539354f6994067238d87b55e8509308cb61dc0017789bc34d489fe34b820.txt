my @fibonacci-sequence = 0, 1, *+* ... *;    #creates a lazy sequence using an anonymous code block to calculate next value as sum of previous two 
my @prime-numbers = grep { .is-prime }, ^∞;    #creates an infinite sequence of numbers and filters out only the prime numbers using the is-prime method
my @sieve-of-eratosthenes = my @numbers = 2 .. *;    #creates an infinite list of numbers (starting from 2) and saves it in @numbers
my $prime = @numbers.shift;                        #removes the first number (2) and saves it as prime
while $prime < √@numbers.end {                   #iterates until the square root of the last number in @numbers is reached
    @numbers .= grep: { $_ % $prime };               #filters out all numbers in @numbers that are multiples of $prime
    $prime = @numbers.shift;                        #removes the next number from @numbers and saves it as prime
}
say "Fibonacci sequence: @fibonacci-sequence";    #outputs the fibonacci sequence
say "Prime numbers: @prime-numbers";              #outputs the prime numbers sequence
say "Sieve of Eratosthenes: @sieve-of-eratosthenes";  #outputs the sieve of Eratosthenes sequence
# This code snippet generates the Mandelbrot set
my @Mandelbrot;
my $max_iterations = 50;
my $width = 100;
my $height = 50;
for my $y (0..($height - 1)) {
    for my $x (0..($width - 1)) {
        my $creal_max = 1;
        my $creal_min = -2.5;
        my $cimag_max = 1.25;
        my $cimag_min = -1.25;
        my $creal = $creal_min + (($creal_max - $creal_min) / $width) * $x;
        my $cimag = $cimag_min + (($cimag_max - $cimag_min) / $height) * $y;

        my $zreal = 0;
        my $zimag = 0;
        my $iterations = 0;
        
        # loop until we reach the maximum iterations or the escape limit of 2
        while (($iterations < $max_iterations) && (($zreal**2 + $zimag**2) < 4)) {
            # calculate the complex number's new value
            my $zreal_new = $zreal**2 - $zimag**2 + $creal;
            my $zimag_new = 2 * $zreal * $zimag + $cimag;
            
            # update the complex number's values
            $zreal = $zreal_new;
            $zimag = $zimag_new;

            # increment the number of iterations
            $iterations++;
        }

        # set the appropriate value for the current point in the Mandelbrot set array,
        # based on the number of iterations
        if ($iterations < $max_iterations) {
            @Mandelbrot[$y][$x] = $iterations;     # set value to number of iterations
        }
        else {
            @Mandelbrot[$y][$x] = '#';              # set value to a character
        }
    }
}

# print the Mandelbrot set array as a grid of characters
for my $y (0..($height - 1)) {
    for my $x (0..($width - 1)) {
        print @Mandelbrot[$y][$x] . " ";
    }
    print "\n";
}
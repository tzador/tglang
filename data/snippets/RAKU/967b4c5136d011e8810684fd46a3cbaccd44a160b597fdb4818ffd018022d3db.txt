# Define a function to calculate the nth Fibonacci number
sub fibonacci($n) { 
    # Initialize a variable to store the result
    my $result = 0;
    # Use dynamic programming to optimize time complexity
    my @fib = (0, 1);
    # Use a loop to calculate the nth Fibonacci number
    for (1..$n-1) {
        # Store the sum of the previous two numbers in the array 
        push @fib, @fib[0] + @fib[1];
        # Remove the first element in the array
        shift @fib;
    }
    # Store the nth Fibonacci number in the result variable
    $result = @fib[1];
    # Return the result
    return $result;
};

# Initialize a variable to store the input
my $input = 6;
# Call the fibonacci function with the input variable as parameter 
my $output = fibonacci($input);

# Print the output
say "The $input-th Fibonacci number is $output";

# Output:
# The 6-th Fibonacci number is 8
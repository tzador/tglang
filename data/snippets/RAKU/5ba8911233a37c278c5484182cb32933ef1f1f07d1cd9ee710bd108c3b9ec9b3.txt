# A complex code snippet in RAKU that demonstrates object-oriented programming
class Animal {
    has $.name; # a private attribute to store the animal's name
    has $.sound; # a private attribute to store the animal's sound
    method speak() { # a public method to make the animal speak
        say "The $.name goes $.sound!";
    }
}

class Dog is Animal { # 'Dog' inherits from 'Animal'
    has $.breed; # a private attribute to store the dog's breed
    method speak() { # overrides the speak() method from 'Animal'
        say "The $.name, a $.breed, goes $.sound!";
    }
}

class Cat is Animal { # 'Cat' inherits from 'Animal'
    has $.color; # a private attribute to store the cat's color
    method speak() { # overrides the speak() method from 'Animal'
        say "The $.name, a $.color cat, goes $.sound!";
    }
}

my $dog = Dog.new(name => "Buddy", sound => "Woof", breed => "Labrador Retriever");
my $cat = Cat.new(name => "Smokey", sound => "Meow", color => "Gray");

$dog.speak(); # output: "The Buddy, a Labrador Retriever, goes Woof!"
$cat.speak(); # output: "The Smokey, a Gray cat, goes Meow!"
my @list = <element1 element2 element3>; # declare a list variable with 3 elements

my %hash = (                                  # declare a hash variable with 3 key-value pairs
	"key1" => "value1",
	"key2" => "value2",
	"key3" => "value3"
);

sub print_values {                              # declare a subroutine to print values in list and hash
	my $value = shift;                        # retrieve first argument passed to subroutine
	if $value ~~ @list {                    # check if value is in list
		say "Value $value exists in list.";
	} elsif $value ~~ %hash {               # check if value is a key in hash
		say "Value $value exists in hash with value: {%hash{$value}}.";
	} else {
		say "Value $value does not exist.";
	}
}

print_values("element1");                       # call subroutine with value that exists in list
# Output: Value element1 exists in list.

print_values("key1");                           # call subroutine with value that exists as a key in hash
# Output: Value key1 exists in hash with value: value1.

print_values("value2");                         # call subroutine with value that doesn't exist
# Output: Value value2 does not exist.
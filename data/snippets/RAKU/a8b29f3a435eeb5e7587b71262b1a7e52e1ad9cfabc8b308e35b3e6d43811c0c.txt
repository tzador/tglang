# This is a code snippet in RAKU that uses dynamic scoping and higher-order subroutines to calculate the factorial of a given number.
 
{
    my $num = 5; # defining the number whose factorial we want to calculate
 
    sub factorial($n) {    # defining a subroutine to calculate factorial
        if ($n <= 1) {     # base case
            return 1;
        } else {           # recursively calling the subroutine to multiply the number with the factorial of (number-1)
            return $n * &factorial($n-1);
        }
    }
 
    say "Factorial of $num is: ", factorial($num); # calling the subroutine with the given number as argument
 
    my $sub = $*W.cur_lexpad()[*-1]; # using dynamic scoping to access the last subroutine defined in the current lexical pad
 
    say "The code for this subroutine is:";
    say $sub.?checksum.?fmt("%X"); # using higher-order subroutine to calculate checksum and format the output in hexadecimal
}
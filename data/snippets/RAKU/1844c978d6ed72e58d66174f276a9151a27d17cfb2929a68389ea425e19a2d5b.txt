my $x = 10; # declares a variable $x and assigns it a value of 10

my @arr = ($x, 20, "Raku"); # declares an array @arr containing $x, 20, and "Raku"

for @arr -> $element { # for loop that iterates through each element in array @arr
    say $element; # prints each element in a new line
}

my %hash = ( # declares a hash %hash
    "name" => "John", # assigns key-value pairs
    "age" => 25,
    "occupation" => "Programmer"
);

for %hash.keys -> $key { # for loop that iterates through each key in hash %hash
    say "Key: $key - Value: %hash{$key}"; # prints each key-value pair in a new line
}

sub fibonacci(Int $n) { # subroutine fibonacci that takes in an integer $n
    if $n < 2 { # base case for recursion
        return $n;
    }
    
    else { # recursive case
        return fibonacci($n - 1) + fibonacci($n - 2);
    }
}

say fibonacci(10); # calls the fibonacci subroutine with an input of 10 and prints the result
# This is a code snippet in RAKU that generates the first 100 prime numbers.

my @primes = (); # Creating an empty array to store prime numbers
my $num = 2; # Initializing the first potential prime number

while @primes.elems < 100 { # Looping until we have 100 prime numbers in the array

    my $prime = True; # Setting a flag to check if the number is prime

    for my $d (2..sqrt($num)) { # Looping through possible divisors from 2 to the square root of the number

        if $num % $d == 0 { # Checking if the number is divisible by the divisor
            $prime = False; # If it is divisible, change the flag to False and break out of the loop
            last;
        }
    }

    if $prime { # If the number is still marked as prime, add it to the array
        @primes.push($num);
    }

    $num++; # Incrementing the number to check the next potential prime number
}

say @primes.join(', '); # Printing out the array of prime numbers, separated by commas

=begin
Output:
2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,
73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,
157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,
239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,
331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,
421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499
=end
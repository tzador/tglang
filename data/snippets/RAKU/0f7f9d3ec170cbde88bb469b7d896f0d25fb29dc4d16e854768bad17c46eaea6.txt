# Define a class
class Animal {
  has Str $.species;
  has Int $.age;

  # Constructor
  submethod BUILD(:$species, :$age) {
    if $age < 0 {
      die "Age cannot be negative!";
    }
    $!age = $age;

    # Default species if not specified
    $!species = $species // "Unknown";
  }

  # Method to get age
  method get-age() {
    return $!age;
  }

  # Method to set age
  method set-age(Int $new-age) {
    if $new-age < 0 {
      die "Age cannot be negative!";
    }
    $!age = $new-age;
  }

  # Method to make animal noise
  method make-noise() {
    given $!species {
      when "Dog" {
        say "Woof!";
      }
      when "Cat" {
        say "Meow!";
      }
      default {
        say "Unknown animal sound!";
      }
    }
  }
}

# Inherit from Animal class
class Dog is Animal {
  has Str $.name;

  # Constructor
  submethod BUILD(:$name, :$age) {
    # Use parent's constructor
    super(:species<Dog>, :$age);
    $!name = $name;
  }

  # Method to get name
  method get-name() {
    return $!name;
  }

  # Method to set name
  method set-name(Str $new-name) {
    $!name = $new-name;
  }

  # Override make-noise method from parent class
  method make-noise() {
    say "$!name barks: Woof!";
  }
}

# Create an instance of Dog class
my $dog = Dog.new(:name("Buddy"), :age(5));

# Call make-noise method on instance
$dog.make-noise();
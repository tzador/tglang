multi sub Fibonacci(Int $n where $n >= 0) {
  state @fibonacci-seq = (0, 1, *+* ... Inf); // creates an infinite lazy list of Fibonacci sequence starting from 0 and 1
  return @fibonacci-seq[$n]; // returns the nth Fibonacci number
}

my $n = 10; // any positive integer can be assigned to variable $n
print "The $n th Fibonacci number is " . Fibonacci($n); // calling the Fibonacci function with $n as argument and printing the result

subset Even where * %% 2; // subset declaration for even numbers
my @numbers = (1..10); // array of numbers from 1 to 10
my @even-numbers = @numbers.grep(Even); // filtering the array using the Even subset
say "Even numbers in the array: @even-numbers"; // printing the filtered array

class Animal { // class declaration for Animal
  has Str $.name; // attribute for storing name
  has Int $.age; // attribute for storing age
  method speak() { // method for making the animal speak
    say "Hi, my name is $.name and I am $.age years old.";
  }
}

my $dog = Animal.new(name => "Fido", age => 5); // creating a new instance of Animal class with name and age
$dog.speak(); // calling the speak method on the Animal instance, which prints out the introduction of the animal
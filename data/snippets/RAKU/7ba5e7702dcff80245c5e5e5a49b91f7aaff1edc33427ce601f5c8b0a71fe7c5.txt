my @array = (1, 2, 3, 4, 5); # Define an array with integers from 1 to 5.
my %hash = ( # Define a hash with key-value pairs.
  "apple" => "red",
  "banana" => "yellow",
  "orange" => "orange",
  "grape" => "purple"
);

# Create a subroutine that takes in an array and a hash as parameters.
sub complex_subroutine (@input_array, %input_hash) {
  # Declare variables to store the sum and length of array.
  my $array_sum = 0;
  my $array_length = @input_array.elems;

  # Iterate through the array and calculate the sum.
  for @input_array -> $element {
    $array_sum += $element;
  }

  # Print the sum of the array.
  say "The sum of the array is: $array_sum";

  # Iterate through the hash and print the key-value pairs.
  for %input_hash.kv -> $key, $value {
    say "The $key is $value";
  }

  # Return the length of the array.
  return $array_length;
}

# Call the subroutine and pass in the predefined array and hash.
my $length = complex_subroutine(@array, %hash);
say "The length of the array is: $length";
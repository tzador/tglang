# This is a complex code snippet in RAKU
my $array = [1, 2, 3, 4, 5]; #initialize an array with 5 elements
my $sum = 0; # initialize a variable to store the sum of the array elements

for @($array).list -> $item { # loop through each element in the array
    $sum += $item; # add the current element to the sum
}

say "The sum of the array is $sum"; # print out the sum

if $sum % 2 == 0 { # check if the sum is even
    say "The sum is an even number.";
} elsif $sum % 2 == 1 { # check if the sum is odd
    say "The sum is an odd number.";
}

sub is_prime($number) { # subroutine to check if a number is prime
    for 2..($number - 1) -> $divisor { # loop through all possible divisors of the number
        if $number % $divisor == 0 { # if the number is divisible by the divisor
            return False; # return False indicating it is not a prime number
        }
    }
    return True; # return True indicating the number is prime
}

if is_prime($sum) { # check if the sum is a prime number
    say "The sum is a prime number.";
} else {
    say "The sum is not a prime number.";
}

my $reverse = ''; # initialize a variable to store the reverse of the array elements
for @($array).list.reverse -> $item { # loop through the array in reverse order
    $reverse ~= $item; # concatenate each element to the reverse string
}

say "The reverse of the array is $reverse"; # print out the reverse string

my $max = 0; # initialize a variable to store the maximum value in the array
for @($array).list -> $item { # loop through each element in the array
    if $item > $max { # if the current element is greater than the current maximum
        $max = $item; # update the maximum value
    }
}

say "The maximum value in the array is $max"; # print out the maximum value

my $min = @($array)[0]; # initialize a variable to store the minimum value in the array
for @($array).list -> $item { # loop through each element in the array
    if $item < $min { # if the current element is smaller than the current minimum
        $min = $item; # update the minimum value
    }
}

say "The minimum value in the array is $min"; # print out the minimum value
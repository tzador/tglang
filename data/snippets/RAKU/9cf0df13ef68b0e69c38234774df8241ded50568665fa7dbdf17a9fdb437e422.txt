# Define a class named 'Vehicle'
class Vehicle {
    has $.type; # attribute for type of vehicle
    has $.color; # attribute for color of vehicle

    # Constructor method
    method new($type, $color) {
        my $vehicle = Vehicle.bless(*); # create a new instance of Vehicle class
        $vehicle.type = $type; # set type attribute
        $vehicle.color = $color; # set color attribute
        return $vehicle; # return instance
    }

    # Method to print the type and color of vehicle
    method print_type_color() {
        say "Type: $!type";
        say "Color: $!color";
    }
}

# Define a subclass 'Car' that inherits from Vehicle class
class Car is Vehicle {
    has $.doors; # attribute for number of doors

    # Constructor method with additional parameter for number of doors
    method new($type, $color, $doors) {
        my $car = Car.bless(*); # create a new instance of Car class
        $car.type = $type; # set type attribute
        $car.color = $color; # set color attribute
        $car.doors = $doors; # set doors attribute
        return $car; # return instance
    }

    # Override print_type_color method to print number of doors as well
    method print_type_color() {
        say "Type: $!type";
        say "Color: $!color";
        say "Doors: $!doors";
    }
}

# Create an instance of Vehicle class
my $vehicle = Vehicle.new("truck", "red");
$vehicle.print_type_color(); # output: Type: truck, Color: red

# Create an instance of Car class
my $car = Car.new("sedan", "blue", 4);
$car.print_type_color(); # output: Type: sedan, Color: blue, Doors: 4
# Declare a variable 'list' containing nested lists
my @list = [["Apple", "Orange", "Banana"], [2, 5, 8], ["dog", "cat", "bird"]];

# Access the second element of the first list
say @list[0][1]; # Output: Orange

# Use map and grep to create a new list of even numbers
my @numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
my @even_numbers = @numbers.grep({ $_ % 2 == 0 }).map({ $_ * 2 }); # Output: [4, 8, 12, 16, 20]

# Declare a class 'Animal' with attributes and methods
class Animal {
    has $.name;
    has $.species;

    method make_sound {
        given $!species {
            when "dog" { say "$!name barks" }
            when "cat" { say "$!name meows" }
            when "bird" { say "$!name chirps" }
        }
    }
}

# Create instances of the 'Animal' class
my $dog = Animal.new(name => "Fido", species => "dog");
my $cat = Animal.new(name => "Whiskers", species => "cat");
my $bird = Animal.new(name => "Tweety", species => "bird");

# Call the make_sound method on each animal
$dog.make_sound(); # Output: Fido barks
$cat.make_sound(); # Output: Whiskers meows
$bird.make_sound(); # Output: Tweety chirps
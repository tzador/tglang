# Create a complex class
class Complex {
    has Num $.real; # attribute to hold the real part
    has Num $.imaginary; # attribute to hold the imaginary part

    # Constructor to initialize the class
    submethod BUILD (Num $real, Num $imaginary) {
        $!real = $real;
        $!imaginary = $imaginary;
    }

    # Method to add two complex numbers
    method add (Complex $other) {
        my $sum_real = $!real + $other.real;
        my $sum_imaginary = $!imaginary + $other.imaginary;
        return Complex.new(:$sum_real, :$sum_imaginary);
    }

    # Method to multiply two complex numbers
    method multiply (Complex $other) {
        my $product_real = $!real * $other.real - $!imaginary * $other.imaginary;
        my $product_imaginary = $!real * $other.imaginary + $!imaginary * $other.real;
        return Complex.new(:$product_real, :$product_imaginary);
    }
}

# Create two complex numbers
my $complex1 = Complex.new(2, 3);
my $complex2 = Complex.new(4, 5);

# Add the two complex numbers
my $sum = $complex1.add($complex2);

# Multiply the two complex numbers
my $product = $complex1.multiply($complex2);

# Print the results
say "Sum: $sum.real + i$sum.imaginary";
say "Product: $product.real + i$product.imaginary";
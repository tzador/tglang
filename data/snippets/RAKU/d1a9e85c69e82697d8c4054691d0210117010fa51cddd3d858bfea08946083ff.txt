# This code snippet is a Fibonacci sequence generator using memoization.

# Create a hash to store previously calculated values
my %fibonacci = 0 => 0, 1 => 1;

# Define a function that takes in a number and returns the Fibonacci value at that position,
# checking the hash first to see if the value has already been calculated
sub fibonacci($n) {
    return %fibonacci{$n} if %fibonacci{$n}:exists; # Check if value already exists in hash
    %fibonacci{$n} = fibonacci($n-1) + fibonacci($n-2); # Calculate new value and store in hash
    return %fibonacci{$n}; # Return value
}

# Generate Fibonacci sequence up to value of 10
my @sequence = gather {
    for (0..10) -> $n {
        take fibonacci($n); # Add Fibonacci value to sequence
    }
}

say @sequence; # Output: (0 1 1 2 3 5 8 13 21 34 55)
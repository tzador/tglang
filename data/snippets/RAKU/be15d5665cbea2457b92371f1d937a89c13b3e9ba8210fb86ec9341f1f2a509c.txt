my $string = 'Hello, World!'; # assign string to variable

say $string; # print string to console

my $pattern = /Hello/; # define regex pattern
if $string ~~ $pattern { # check if string matches pattern
    say "The string contains 'Hello'"; # if yes, print this message
} else {
    say "The string does not contain 'Hello'"; # if no, print this message
}

my @numbers = 1, 2, 3, 4, 5; # create an array of numbers

for @numbers -> $num { # loop through the array
    say $num; # print each number to console
}

sub factorial(Int $num) { # define a subroutine to calculate factorial
    if $num == 0 { # base case
        return 1;
    } else {
        return $num * factorial($num - 1); # recursive call
    }
}

say factorial(5); # call the subroutine and print the result

my %hash = ( # create a hash with key value pairs
    'key1' => 'value1',
    'key2' => 'value2',
    'key3' => 'value3',
);

for %hash.kv -> $key, $value { # loop through the hash
    say "$key is mapped to $value"; # print each key-value pair
}

say %hash{'key1'}; # print the value for a specific key

class Person { # define a class
    has $.name; # class attribute
    has $.age;

    method greet() { # define a method
        say "Hello, my name is $.name and I am $.age years old.";
    }
}

my $person = Person.new(name => 'John', age => 30); # create an instance of the Person class
$person.greet(); # call the greet method on the instance
# This code snippet demonstrates the use of object-oriented features
# in Raku
class Person {
    has $!name;
    has Int $!age;
    has $!occupation;
    
    # Constructor method
    method new(Str $name, Int $age, Str $occupation) {
        my $object = self.bless(); # Create new instance of the class
        $object!name = $name; # Set values for object attributes
        $object!age = $age;
        $object!occupation = $occupation;
        return $object; # Return new instance of the class
    }
    
    # Accessor methods
    method name() {
        return $!name;
    }
    
    method age() {
        return $!age;
    }
    
    method occupation() {
        return $!occupation;
    }
    
    # Modifier methods
    method change_name(Str $new_name) {
        $!name = $new_name;
    }
    
    method change_age(Int $new_age) {
        $!age = $new_age;
    }
    
    method change_occupation(Str $new_occupation) {
        $!occupation = $new_occupation;
    }
}

# Create new instance of Person class
my $person = Person.new("John", 32, "Engineer");

# Access and print object attributes
say "Name: {$person.name}"; # Output: "Name: John"
say "Age: {$person.age}"; # Output: "Age: 32"
say "Occupation: {$person.occupation}"; # Output: "Occupation: Engineer"

# Use modifier methods to change object attributes
$person.change_name("Jane");
$person.change_age(28);
$person.change_occupation("Data Analyst");

# Access and print updated object attributes
say "Name: {$person.name}"; # Output: "Name: Jane"
say "Age: {$person.age}"; # Output: "Age: 28"
say "Occupation: {$person.occupation}"; # Output: "Occupation: Data Analyst"
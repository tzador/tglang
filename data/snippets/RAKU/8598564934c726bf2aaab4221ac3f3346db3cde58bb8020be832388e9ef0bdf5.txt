# Function that checks if a given number is prime
# Takes in an integer as input
sub is_prime(Int $n) {
    # Check if number is less than 2
    return False if $n < 2;

    # Check for any factors between 2 and square root of number
    for (2..($n ** 0.5)).any() -> $i {
        if $n % $i == 0 {
            # Not prime if factor is found
            return False;
        }
    }

    # If loop finishes, number is prime
    return True;
}

# Function that generates a list of prime numbers up to a given limit
# Takes in an integer as input
sub prime_list(Int $limit) {
    # Initialize empty list for prime numbers
    my @prime_numbers;

    # Loop through numbers from 2 to the limit
    for (2..$limit).any() -> $num {
        # Check if number is prime using is_prime function
        if is_prime($num) {
            # Add number to prime number list
            push @prime_numbers, $num;
        }
    }

    # Output the list of prime numbers
    @prime_numbers;
}

# Main program
# Get user input for limit
print "Enter a limit to generate prime numbers up to: ";
chomp(my $limit = <STDIN>);

# Call prime_list function with user input limit
my @primes = prime_list($limit);

# Print out the list of prime numbers
say "The prime numbers up to $limit are: ", @primes.join(", ");
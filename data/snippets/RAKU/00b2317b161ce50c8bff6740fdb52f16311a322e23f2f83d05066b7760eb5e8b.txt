multi sub fibonacci(Int $n) {                                 # definition of a multi sub named fibonacci that takes an integer $n as parameter
    return 0 if $n == 0;                                       # base case: returns 0 if $n is equal to 0
    return 1 if $n == 1;                                       # base case: returns 1 if $n is equal to 1
    return fibonacci($n - 1) + fibonacci($n - 2);              # recursive case: returns the sum of the previous 2 fibonacci numbers
}

say 'Enter the number of terms: ';                             # prints a prompt to enter the number of terms
my $terms = Int(readline());                                   # reads user input and converts it to an integer, stored in $terms
my $count = 0;                                                 # initialize a count variable to keep track of how many terms have been printed

for 1..$terms -> $i {                                          # loop from 1 to $terms, with the variable $i holding the current number
    if $i >= 0 {                                               # checks if $i is greater than or equal to 0
        my $fibonacci = fibonacci($count);                     # calls the fibonacci function with $count as argument and stores the result in $fibonacci
        $count++;                                               # increments $count
        say $fibonacci;                                        # prints the current fibonacci number
    }

}
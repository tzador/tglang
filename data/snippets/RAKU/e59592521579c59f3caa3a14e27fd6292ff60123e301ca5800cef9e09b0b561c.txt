unit class Person;

has Str $.name; // creates a public attribute named 'name' of type String
has Int $.age; // creates a public attribute named 'age' of type Integer
has Bool $.gender; // creates a public attribute named 'gender' of type Boolean
has Array $.hobbies; // creates a public attribute named 'hobbies' of type Array

method greet() { // defines a greet method
    my $message = "Hi! My name is $!name."; // creates a local variable
    if $.gender { // checks if the person is female
        $message ~= " I am a girl"; // appends to message if female
    } else {
        $message ~= " I am a boy"; // appends to message if male
    }
    $message ~= " and I am $!age years old."; // appends remaining message
    say $message; // prints out the full message
}

method add_hobby(Str $hobby) { // defines a method to add hobby
    if $.hobbies.elems > 10 { // checks if hobbies list is full
        say "Sorry, maximum number of hobbies reached.";
    } else {
        $.hobbies.push($hobby); // adds new hobby to list
        say "Added $hobby to my hobbies list.";
    }
}

# creating two objects of type Person
my $person1 = Person.new(name => "Jane", age => 25, gender => True, hobbies => ["reading", "hiking"]);
my $person2 = Person.new(name => "John", age => 30, gender => False, hobbies => ["coding", "playing guitar"]);

# calling greet method for both objects
$person1.greet(); # output: "Hi! My name is Jane. I am a girl and I am 25 years old."
$person2.greet(); # output: "Hi! My name is John. I am a boy and I am 30 years old."

# adding a new hobby to first person
$person1.add_hobby("painting"); # output: "Added painting to my hobbies list."
$person1.add_hobby("running"); # output: "Added running to my hobbies list."
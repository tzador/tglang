# This code snippet uses the Rakudo (Raku) programming language
# It generates an array of consecutive prime numbers up to a given limit

# Define a function that checks if a number is prime
sub is-prime($num) {
    return 0 if $num < 2; # 0 and 1 are not prime numbers
    for 2..^$num -> $i {
        return 0 if $num % $i == 0; # If the number is divisible by any number between 2 and itself (excluding itself), it is not prime
    }
    return 1; # If the number is not divisible by any number between 2 and itself, it is prime
}

# Define a function that generates an array of prime numbers up to a given limit
sub prime-numbers($limit) {
    my @primes; # Create an empty array to store the prime numbers
    for 2..$limit -> $num { # Loop through numbers from 2 (first prime number) to the given limit
        push @primes, $num if is-prime($num); # If the number is prime, add it to the array
    }
    return @primes; # Return the array of prime numbers
}

say prime-numbers(100); # Prints the array of prime numbers up to 100
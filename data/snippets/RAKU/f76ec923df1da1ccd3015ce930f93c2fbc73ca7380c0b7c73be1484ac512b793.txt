# This code snippet shows the implementation of a bubble sort algorithm in Raku.

# A bubble sort function that takes in an array as an argument
sub bubble-sort(@array) {

    # Set a flag to keep track of whether elements have been swapped or not
    my $swapped = True;

    # Loop through the array as long as elements have been swapped
    while $swapped {

        # Set the swapped flag to false as default
        $swapped = False;

        # Loop through the array, comparing adjacent elements
        for 0..@array.elems-2 -> $i {

            # If the current element is greater than the next element, swap them
            if @array[$i] > @array[$i+1] {

                # Swap elements using the Raku syntax for swapping variables
                (@array[$i], @array[$i+1]) = (@array[$i+1], @array[$i]);

                # Set the swapped flag to true
                $swapped = True;
            }
        }
    }

    # Return the sorted array
    return @array;
}

# Example array to be sorted
my @numbers = <5 2 9 1 3 6>;

# Call the bubble sort function and print the result
say "Unsorted: @numbers";
say "Sorted: " ~ bubble-sort(@numbers);

# Output:
# Unsorted: 5 2 9 1 3 6
# Sorted: 1 2 3 5 6 9
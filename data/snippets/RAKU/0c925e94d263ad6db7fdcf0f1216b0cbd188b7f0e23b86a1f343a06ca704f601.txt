# Define a class 'Animal'
class Animal {

    # Constructor method
    method new($name, $age) {

        # Creates the object with given attributes
        my $obj = {
            name => $name,
            age  => $age
        };

        # Bless the object with class Animal
        return bless($obj, Animal);
    }

    # Getter method for name attribute
    method get_name() {
        return $.name;
    }

    # Getter method for age attribute
    method get_age() {
        return $.age;
    }

    # Setter method for age attribute
    method set_age($new_age) {
        $.age = $new_age;
    }

    # Abstract method to be implemented in subclass
    # Must be overridden with implementation
    method make_sound() {
        die "Must be overridden in sublcass";
    }
}

# Define subclass 'Dog'
class Dog is Animal {

    # Implement make_sound method
    method make_sound() {
        say "Woof!";
    }
}

# Create an object of class Dog
my $dog = Dog.new("Rex", 5);

# Call getter methods
# Output: "Rex"
say $dog.get_name();

# Output: 5
say $dog.get_age();

# Call setter method
$dog.set_age(6);

# Output: 6
say $dog.get_age();

# Call make_sound method
# Output: "Woof!"
$dog.make_sound();
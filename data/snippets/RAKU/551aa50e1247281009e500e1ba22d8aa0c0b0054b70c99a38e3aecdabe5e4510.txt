# fibonacci function using memoization

sub fib (Int $n) { # define a subroutine called fib that takes an integer argument
    state @cache = 0, 1; # initialize a static array called cache with the first two fibonacci numbers
    return @cache[$n] if $n < 2; # if n is less than 2, return the fibonacci number at index n in the cache array
    return @cache[$n] if @cache[$n]; # if the fibonacci number at index n in the cache array already exists, return it
    @cache[$n] = fib($n - 1) + fib($n - 2); # otherwise, calculate the fibonacci number at index n and store it in the cache array
}

say fib($_) for 0..10; # print the fibonacci numbers from 0 to 10 using the fib subroutine
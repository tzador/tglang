my @numbers = <1 2 3 4 5>;   # create an array of numbers
my @doubled = map { $_ * 2}, @numbers; # use the map function to double each number in the array
say @doubled;   # print the doubled numbers

for @doubled -> $number {   # loop through the doubled numbers
    my $square = $number ** 2;   # calculate the square of each number
    if $square % 2 == 0 {    # check if the square is even
        say "$number squared is even.";  # print a message if the square is even
    } else {
        say "$number squared is odd.";   # print a message if the square is odd
    }
}

sub fizzbuzz ($number) {   # create a sub that takes in a number
    if $number % 3 == 0 and $number % 5 == 0 {   # check if the number is a multiple of both 3 and 5
        return 'FizzBuzz';  # return "FizzBuzz" if it is
    } elsif $number % 3 == 0 {   # check if the number is a multiple of 3
        return 'Fizz';  # return "Fizz" if it is
    } elsif $number % 5 == 0 {   # check if the number is a multiple of 5
        return 'Buzz';  # return "Buzz" if it is
    } else {
        return $number;  # return the number if it is neither a multiple of 3 or 5
    }
}

my @fizzbuzz = map &fizzbuzz, @doubled;   # use the map function to apply the fizzbuzz sub to the doubled numbers array
say @fizzbuzz;   # print the resulting fizzbuzz array
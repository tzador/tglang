class PrimeCount {

    has @!numbers;

    # This method takes in a positive number and returns an array of
    # all prime numbers up to that number
    method get_primes(Int $num) {
        # initialize array with all numbers from 2 up to $num
        @!numbers = (2 .. $num).grep(* %% *);

        # remove non-prime numbers from array
        for @!numbers.kv -> $index, $number {
            my $sqrt = sqrt $number;
            for $index + 1 ..^ @!numbers.elems -> $inner {
                if @!numbers[$inner] %% $number {
                    @!numbers.splice($inner--, 1);
                }
            }
            # check if number is greater than sqrt of current number,
            # if so, break loop
            if $number > $sqrt {
                last;
            }
        }
        return @!numbers;
    }

    # This method takes in an array and returns the number of elements
    # that are prime numbers
    method count_primes(@array) {
        # filter array to only include prime numbers
        my @primes = @array.grep(* %% *);

        # return length of filtered array
        return @primes.elems;
    }
}

# instantiate PrimeCount class
my $count = PrimeCount.new();

# get array of prime numbers up to 100
my @primes = $count.get_primes(100);

# print out number of prime numbers in array
say "There are {$count.count_primes(@primes)} prime numbers up to 100";

# output:
# There are 25 prime numbers up to 100
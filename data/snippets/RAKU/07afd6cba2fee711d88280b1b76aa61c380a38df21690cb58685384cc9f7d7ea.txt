# This code snippet creates a subroutine that generates prime numbers using the Sieve of Eratosthenes algorithm.

sub sieves(num) {
    # initialize all numbers as true except 0 and 1
    my @primes = True xx num;

    # loop through all numbers up to specified limit
    for 2 .. sqrt(num) -> $n {
        # if number is marked as prime
        if @primes[$n] {
            # mark multiples of current prime number as false
            for $n * $n .. num step $n -> $m {
                @primes[$m] = False;
            }
        }
    }
    # return list of prime numbers
    return @primes.keys.grep({ $_ and @primes[$_] });
}

# print first 1000 prime numbers
say sieves(1000);
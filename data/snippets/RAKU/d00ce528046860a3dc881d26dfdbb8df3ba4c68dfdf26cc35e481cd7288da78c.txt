sub find-closest-fibonacci (Int $num) {
    # This sub takes in a number and returns the closest Fibonacci number
    # that is less than or equal to the given number.

    my Int @fib = (1, 1); # initializing the array to store the Fibonacci numbers
    my Int $prev = 0;
    my Int $curr = 1;

    # Using a while loop to generate Fibonacci numbers
    while $curr <= $num {
        @fib.push($curr); # adding the current Fibonacci number to the array
        $curr += $prev; # calculating the next Fibonacci number
        $prev = $curr - $prev; # updating the previous number to the current one
    }

    # Finding the closest Fibonacci number by comparing the difference between
    # each Fibonacci number and the given number
    my Int $closest = @fib[0];
    for @fib -> $fib {
        if abs($num - $fib) < abs($num - $closest) {
            $closest = $fib;
        }
    }

    return $closest; # returning the closest Fibonacci number
}

say find-closest-fibonacci(100); # Output: 89
say find-closest-fibonacci(167); # Output: 144
say find-closest-fibonacci(2000); # Output: 1597
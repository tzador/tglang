# This code snippet uses Rakudo, which is an implementation of the Raku programming language

# Define a function that takes in two parameters
sub add(Int $num1, Int $num2) {
    # Use the ternary operator to check if both parameters are positive numbers
    $num1 > 0 && $num2 > 0
        ?? say "The sum of $num1 and $num2 is " ~ $num1 + $num2
        !! say "Invalid input: parameters must be positive numbers."
}

# Call the function with different sets of arguments
add(2, 3); # Output: The sum of 2 and 3 is 5
add(0, 1); # Output: Invalid input: parameters must be positive numbers.
add(-1, 4); # Output: Invalid input: parameters must be positive numbers.

# Define a class with a private attribute and a public method
class Person {

    has Str $!name; # Private attribute

    # Public method to print the person's name
    method get_name() {
        say "This person's name is $!name";
    }
}

# Create an instance of the Person class and call the get_name method
my $person = Person.new(name => "John Doe");
$person.get_name(); # Output: This person's name is John Doe

# Define a multi method that takes in different types of parameters
multi greet(Str $name) {
    say "Hello, $name!";
}
multi greet(Int $name) {
    say "Hello, Person #$name!";
}
multi greet(Bool $name) {
    say "Hello there, you!";
}

# Call the greet multi method with different types of arguments
greet("John"); # Output: Hello, John!
greet(123); # Output: Hello, Person #123!
greet(True); # Output: Hello there, you!
greet(3.14); # Output: No matching multi method found: Cannot convert Float to any of (Bool, Str, Int)
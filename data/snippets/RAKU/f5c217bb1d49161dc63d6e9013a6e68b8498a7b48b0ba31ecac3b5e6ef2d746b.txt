# This code snippet uses Raku to generate the first 100 prime numbers

sub is-prime(Int $num) {    # subroutine to check if a number is prime
    for 2..$num-1 {
        return Bool::False if $num % $_ == 0;
    }
    return Bool::True;
}

my @primes;    # array to store the prime numbers
my $n = 0;    # initialize a count variable to 0
my $num = 2;    # start checking for prime numbers from 2

while $n < 100 {
    if is-prime($num) {       # check if the current number is prime
        @primes.push($num);   # if yes, add it to the array
        $n++;                # increment the count variable
    }
    $num++;                  # continue checking for next number
}

say "The first 100 prime numbers are:";
say @primes.join(", ");       # output the array elements separated by commas

# Output:
# The first 100 prime numbers are:
# 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499
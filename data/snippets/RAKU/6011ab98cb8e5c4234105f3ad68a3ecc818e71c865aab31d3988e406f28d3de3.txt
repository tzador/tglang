sub convert-radix($num, $from, $to) {

    # Check if input number is valid
    unless $num ~~ /^<[0-9a-z]>$ / {
        say "Invalid input number";
        return;
    }

    # Convert input number to base 10
    my $dec = 0;
    my $idx = 0;
    for $num.flip.comb -> $digit {
        my $value = $digit.ord - 48;
        for ^$idx {
            $value *= $from;
        }
        $dec += $value;
        $idx++;
    }

    # Convert base 10 number to output base
    my $converted = '';
    while $dec > 0 {
        my $remainder = $dec % $to;
        my $digit = $remainder < 10 ?? $remainder !! ($remainder - 10).chr;
        $converted = $digit ~ $converted;
        $dec = $dec div $to;
    }
    say "$num in base $from is $converted in base $to";
}

# Example usage
convert-radix("a3f", 16, 8); # Output: a3f in base 16 is 12057 in base 8
convert-radix("111001", 2, 10); # Output: 111001 in base 2 is 57 in base 10
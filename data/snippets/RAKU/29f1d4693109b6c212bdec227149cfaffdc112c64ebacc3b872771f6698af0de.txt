# This is a comment in Raku.

module RockPaperScissors;

# Defining an enum type to represent the game options.
enum GameOptions <rock paper scissors>;

# Defining a class for the game.
class Game {
    has $.player1;
    has $.player2;
    has $.rounds;
    has GameOptions @.moves;
    has Int $.score1;
    has Int $.score2;

    method play() {
        for ^$!rounds {
            my $move1 = @!moves.pick;
            my $move2 = @!moves.pick;
            my $result = $move1 cmp $move2;

            say "$!player1 chose $move1.";
            say "$!player2 chose $move2.";

            if $result == 0 {
                say "It's a tie!";
            }
            elsif $result == 1 {
                say "$!player1 wins!";
                $!score1++;
            }
            else {
                say "$!player2 wins!";
                $!score2++;
            }
        }
    }

    method display_results() {
        say "----RESULTS----";
        say "$!player1: $!score1 points";
        say "$!player2: $!score2 points";
        if $!score1 == $!score2 {
            say "It's a tie!";
        }
        else {
            say $!score1 > $!score2 ?? "$!player1 won!" !! "$!player2 won!";
        }
    }
}

# Creating two players.
my $player1 = "David";
my $player2 = "Emma";

# Creating a game instance and initializing it.
my $game = Game.new(
    :$player1,
    :$player2,
    rounds => 3,
    moves => GameOptions,
    score1 => 0,
    score2 => 0
);

# Playing the game and displaying the results.
$game.play();
$game.display_results();
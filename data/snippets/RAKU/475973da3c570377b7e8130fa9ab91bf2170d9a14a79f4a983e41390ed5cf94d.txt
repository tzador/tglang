# This code snippet generates a list of prime numbers using the Sieve of Eratosthenes algorithm.

my @primes = ();  # Declare empty array to store prime numbers

# Set range of numbers to check for primes
my $start = 2;
my $end   = 100;

# Initialize an array with values from start to end
my @numbers = ($start..$end);

# Loop through array, starting with the first element
for @numbers {
    my $prime_check = $_;

    # Check if element has been marked as a multiple of a previous number
    next if $prime_check eq "";  # If so, skip to next element in array

    # Add element to list of primes
    push @primes, $prime_check;

    # Mark all multiples of element as ""
    for $prime_check + $prime_check .. @numbers.max {
        @numbers[$_] = "" if ($_ %% $prime_check);  # Multiple of prime is marked as ""
    }
}

say "Prime numbers from $start to $end:";
say @primes.join(", ");  # Output list of primes, separated by commas
# This code snippet generates a Fibonacci sequence using a recursive function in Raku
# Define a recursive function to generate the Fibonacci sequence
sub fib($n is copy) {
    if $n < 2 {
        return $n;
    } else {
        # Recursive call to the function to generate the previous two numbers in the sequence
        return fib($n - 1) + fib($n - 2);
    }
}

# Get user input for how many numbers to generate in the sequence
my $input = prompt("Enter the number of Fibonacci numbers to generate: ");

# Convert user input to integer for use in loop
my $input_int = Int($input);

# Define an empty array to store the generated numbers
my @fib_array;

# Loop through the input number
for 1 .. $input_int -> $i {
    # Call the 'fib' function for each iteration and push the result to the array
    @fib_array.push: fib($i);
}

# Print the generated Fibonacci sequence in a nicely formatted string
say "The first $input numbers in the Fibonacci sequence are: " ~ @fib_array.join(", ");

# Output:
 The first 10 numbers in the Fibonacci sequence are: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
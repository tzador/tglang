sub max-sum(@list) {
# This subroutine takes in an array of integers and returns the maximum sum of 
# any non-adjacent elements in the list.
    my $n = @list.elems;
    my @sums; 
    # Create an array to store the maximum sums for each index 
    # initially all elements are set to 0 
    @sums[0] = 0; 
    # The maximum sum for an array of length 1 is the first element 
    @sums[1] = @list[0]; 
  
    # Loop through the array, starting at index 2 
    for (2..$n) { 
        # The maximum sum at a given index is the maximum of two options: 
        # 1. The sum of the current element and the sum two elements before 
        # 2. The previous maximum sum at the previous index 
        @sums[$_] = max(@list[$_-1] + @sums[$_-2], @sums[$_-1]); 
    } 
    return @sums[$n]; 
} 
  
my @input = (-1, 6, 8, -4, 3, 2); 
print "Maximum sum = ", max-sum(@input);
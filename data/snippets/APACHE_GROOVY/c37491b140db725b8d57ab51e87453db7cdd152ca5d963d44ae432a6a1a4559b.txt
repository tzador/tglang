@Grab('org.spockframework:spock-core:1.3-groovy-3.0') //grabs latest version of Spock testing framework
import spock.lang.*  //imports Spock annotations and classes

class CalculatorSpec extends Specification { //defines a Spock specification class

    @Unroll //enables parametrized testing
    def "should return correct result for #num1 and #num2"(){ //defines a test case with parameters
        given:
        Calculator calculator = new Calculator() //creates an instance of Calculator class
        and:
        int result //declares a variable to store result

        when:
        result = calculator.add(#num1, #num2) //calls add method on calculator with parameters
        then:
        result == #expectedResult //asserts that the result is equal to the expected result

        where:
        num1 | num2 | expectedResult //defines the parameters for the test case
        2    | 3    | 5 //first set of parameters
        10   | 5    | 15 //second set of parameters
        0    | 8    | 8 //third set of parameters
    }

    @Unroll
    def "should throw exception when dividing by zero"(){
        given:
        Calculator calculator = new Calculator()
        and:
        int result

        when:
        result = calculator.divide(#num1, #num2)
        then:
        thrown(ArithmeticException) //asserts that an exception of specified type is thrown

        where:
        num1 | num2 //defines the parameters for the test case
        5    | 0 //first set of parameters
        8    | 0 //second set of parameters
        -3   | 0 //third set of parameters
    }
}

class Calculator{ //defines a Calculator class

    int add(int num1, int num2){ //defines the add method
        return num1 + num2 //returns the sum of num1 and num2
    }

    int divide(int num1, int num2){ //defines the divide method
        if(num2 == 0){ //checks if num2 is 0
            throw new ArithmeticException("Cannot divide by zero") //throws an exception
        }
        return num1 / num2 //returns the quotient of num1 and num2
    }
}
def factorial(n) {
    // this function calculates the factorial of a number using recursion
    if (n == 0) { // base case
        return 1
    } else { // recursive case
        return n * factorial(n - 1)
    }
}

def fib(n) {
    // this function calculates the nth term of the fibonacci sequence using dynamic programming
    def fibArray = new int[n + 1] // array to store previously calculated fibonacci numbers
    fibArray[0] = 0 // first two terms of fibonacci sequence are 0 and 1
    fibArray[1] = 1

    for (int i = 2; i <= n; i++) { // loop through to calculate all fibonacci numbers up to n
        fibArray[i] = fibArray[i - 1] + fibArray[i - 2] // current fibonacci number is sum of previous two numbers
    }

    return fibArray[n] // return nth term of fibonacci sequence
}

def printEvenNumbers(n) {
    // this function prints all even numbers from 0 to n
    for (int i = 0; i <= n; i++) {
        if (i % 2 == 0) {
            println(i) // print even number
        }
    }
}

def isPalindrome(string) {
    // this function checks if a string is a palindrome using recursion
    if (string.size() <= 1) { // base case, string with length <= 1 is automatically a palindrome
        return true
    } else { // recursive case
        if (string[0] == string[-1]) { // compare first and last characters
            return isPalindrome(string.substring(1, string.size() - 1)) // check if inner substring is also a palindrome
        } else {
            return false // string is not a palindrome
        }
    }
}

// example usage of functions
def number = 5
println("The factorial of $number is ${factorial(number)}") // output: The factorial of 5 is 120

def fibonacci = 6
println("The ${fibonacci}th term of the Fibonacci sequence is ${fib(fibonacci)}") // output: The 6th term of the Fibonacci sequence is 8

def palindrome = "level"
println("Is \"$palindrome\" a palindrome? ${isPalindrome(palindrome)}") // output: Is "level" a palindrome? true

println("Printing all even numbers up to 10:")
printEvenNumbers(10) // output: 0, 2, 4, 6, 8, 10
//This code snippet generates a Fibonacci sequence up to a given number using recursion
def fib = { n -> //declare lambda function taking in parameter n to represent the number in the sequence
    if (n == 0 || n == 1) return n //base case for when n is 0 or 1, the function returns n
    return fib(n - 1) + fib(n - 2) //recursive case, return the sum of previous 2 numbers in sequence
}

def numOfTerms = 10 //set the number of terms in the sequence
def fibSequence = [] //create empty array to store sequence
for (int i = 0; i < numOfTerms; i++) { //iterate through n number of terms
    fibSequence << fib(i) //call fib function with current index as argument and add result to array
}

println "Fibonacci sequence up to ${numOfTerms} terms: ${fibSequence.join(', ')}" //print out the sequence in a readable format
// Define a list of names
def names = ["Anna", "Bob", "Cindy", "David", "Emma"]

// Iterate through the list and print out each name
for (name in names) {
  println(name)
}

// Declare a function to check if a name is in the list
def checkName(String name) {
  if (names.contains(name)) {
    println("Name already in list.")
  } else {
    println("Name not found.")
  }
}

// Call the function to check if a name is in the list
checkName("Bob")

// Define a map of names and their corresponding ages
def ages = [
  "Anna"  : 27,
  "Bob"   : 32,
  "Cindy" : 18,
  "David" : 43,
  "Emma"  : 20
]

// Create a class to represent a person
class Person {
  String name
  Integer age

  // Constructor
  Person(String name, Integer age) {
    this.name = name
    this.age = age
  }
}

// Create a list of person objects
def people = names.collect { name ->
  new Person(name, ages[name])
}

// Sort the list of people by age (youngest to oldest)
def sortedPeople = people.sort { a, b -> a.age <=> b.age }

// Print out the sorted list of people
println(sortedPeople)

// Declare a closure to calculate the average age of the people
def calculateAverageAge = {
  // Initialize the sum to 0
  def sum = 0

  // Iterate through the people and add their ages to the sum
  for (p in people) {
    sum += p.age
  }

  // Calculate and return the average age
  sum / people.size()
}

// Call the closure and print the result
println(calculateAverageAge())
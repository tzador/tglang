@groovy.transform.CompileStatic
class Account {
    private String accountNumber
    private String accountType
    private Double balance
    private String customerId

    /**
     * Constructor for creating a new Account object
     */
    Account(String accountNumber, String accountType, Double balance, String customerId) {
        this.accountNumber = accountNumber
        this.accountType = accountType
        this.balance = balance
        this.customerId = customerId
    }

    /**
     * Method to deposit funds into the account
     * @param amount the amount to be deposited
     */
    void deposit(Double amount) {
        this.balance += amount
        println("${amount} successfully deposited into account ${this.accountNumber}")
    }

    /**
     * Method to withdraw funds from the account
     * @param amount the amount to be withdrawn
     */
    void withdraw(Double amount) {
        if (this.balance >= amount) {
            this.balance -= amount
            println("${amount} successfully withdrawn from account ${this.accountNumber}")
        } else {
            println("Insufficient funds!")
        }
    }

    /**
     * Method to transfer funds to another account
     * @param amount the amount to be transferred
     * @param recipient the account number of the recipient
     */
    void transfer(Double amount, String recipient) {
        if (this.balance >= amount) {
            this.balance -= amount
            println("${amount} successfully transferred to account ${recipient}")
        } else {
            println("Insufficient funds!")
        }
    }

    /**
     * Method to get the current balance of the account
     * @return the current balance
     */
    Double getBalance() {
        return this.balance
    }

    /**
     * Method to get the account number of the account
     * @return the account number
     */
    String getAccountNumber() {
        return this.accountNumber
    }

    /**
     * Method to get the account type of the account
     * @return the account type
     */
    String getAccountType() {
        return this.accountType
    }

    /**
     * Method to get the customer id associated with the account
     * @return the customer id
     */
    String getCustomerId() {
        return this.customerId
    }
}
def myClosure = {
  // Defines a closure that takes in two parameters, a string and a closure
  name, closure ->
  
  // Prints out the name passed in as a parameter
  println "Hello, ${name}!"
  
  // Executes the closure passed in as a parameter
  closure()
  
  // Returns a string to be used for later
  return "Closure execution complete"
}

// Defines a new function that takes a closure as a parameter
def myFunction = { closure ->
  
  // Executes the closure passed in as a parameter
  closure()
}

// Calls the myClosure function and passes in a string and another closure
myClosure("World") {
  // Prints out "This is a closure"
  println "This is a closure"
}

// Calls the myFunction function and passes in a closure that takes in no parameters
myFunction({
  // Prints out "This is an anonymous closure"
  println "This is an anonymous closure"
})
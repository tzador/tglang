/* This code snippet uses Apache Groovy to demonstrate a custom script for manipulating data */

// Define a class called DataManipulator that implements the Comparable interface
class DataManipulator implements Comparable {

    // Define a static property called data that will hold the data to be manipulated
    static data = []

    /* Define a method to add data to the data property, 
    it will take in a parameter called newData of type String */
    def static addData(String newData) {
        data << newData
    }

    /* Define a method to sort the data in the data property based on the length of the strings,
    it will return the sorted data as a List */
    def static sortDataByLength() {
        data.sort { a, b -> a.length() <=> b.length() }
    }

    // Define a method to reverse the order of the data in the data property
    def static reverseDataOrder() {
        data.reverse()
    }

    /* Override the compareTo method from the Comparable interface to compare the length of two strings,
    it will take in a parameter called otherObject of type DataManipulator */
    @Override
    def int compareTo(otherObject) {
        this.data.length <=> otherObject.data.length
    }
}

// Add data to the DataManipulator class
DataManipulator.addData("apple")
DataManipulator.addData("banana")
DataManipulator.addData("kiwi")
DataManipulator.addData("orange")
DataManipulator.addData("strawberry")

// Sort the data by length
def sortedData = DataManipulator.sortDataByLength()

// Reverse the order of the data
DataManipulator.reverseDataOrder()

// Print the sorted and reversed data
println "Sorted and Reversed Data: ${sortedData}"
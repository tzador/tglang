// This code snippet demonstrates the use of Groovy's closures and higher-order functions.
// It creates a list of numbers and uses a higher-order function to filter out the even numbers.

def numbers = [1, 2, 3, 4, 5]

// Higher-order function, takes in a closure as a parameter
def filterNumbers = { list, closure ->
    def result = []
    // Iterate through each element in the list
    list.each {
        // Invoke the closure on the current element
        def filtered = closure(it)
        // If the closure returns true, add the element to the result list
        if (filtered) {
            result << it
        }
    }
    return result
}

// Closure to check if a number is even
def isEven = { num -> num % 2 == 0 }

// Use the higher-order function to filter the numbers list and print the result
def result = filterNumbers(numbers, isEven)
println result // [2, 4]
// Groovy program to find the sum of all prime numbers
// below a given number

// Function that checks if a number is prime
def isPrime(number) {
    // If the number is less than or equal to 1, it is not prime
    if (number <= 1) {
        return false
    }
    // If the number is 2, it is prime
    else if (number == 2) {
        return true
    }
    // If the number is even, it is not prime
    else if (number % 2 == 0) {
        return false
    }
    else {
        // Loop through all odd numbers up to the square root of the given number
        for (i in 3..(int)Math.sqrt(number) step 2) {
            // If any number divisible by i, it is not prime
            if (number % i == 0) {
                return false
            }
        }
        // If the loop doesn't find any number divisible by i, it is prime
        return true
    }
}

// Function to find the sum of all prime numbers below a given number
def sumOfPrimes(upperLimit) {
    // Initialize sum variable
    def sum = 0
    // Loop through all numbers from 2 to the upper limit
    for (i in 2..upperLimit) {
        // If the number is prime, add it to the sum
        if (isPrime(i)) {
            sum += i
        }
    }
    // Return the sum
    return sum
}

// Take input from user
def upperLimit = Integer.parseInt(System.console().readLine("Enter the upper limit: "))

// Call the sumOfPrimes function and print the result
println("The sum of all prime numbers below ${upperLimit} is:")
println(sumOfPrimes(upperLimit))
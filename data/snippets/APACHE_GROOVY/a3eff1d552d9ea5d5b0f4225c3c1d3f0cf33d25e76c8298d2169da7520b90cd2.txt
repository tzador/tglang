@Grab(group='org.apache.httpcomponents', module='httpclient', version='4.5.13')
import org.apache.http.impl.client.CloseableHttpClient
import org.apache.http.client.methods.HttpPost
import org.apache.http.client.methods.CloseableHttpResponse
import org.apache.http.client.entity.UrlEncodedFormEntity
import org.apache.http.NameValuePair
import org.apache.http.message.BasicNameValuePair

def httpclient = HttpClients.createDefault()  // create default http client
def httppost = new HttpPost("http://www.example.com")  // create POST request to example.com
List<NameValuePair> params = new ArrayList<>()  // create list of parameters
params.add(new BasicNameValuePair("param1", "value1"))  // add parameters
params.add(new BasicNameValuePair("param2", "value2"))
httppost.setEntity(new UrlEncodedFormEntity(params))  // set request body with parameters
closeableHttpResponse = httpclient.execute(httppost)  // execute request and get response
try {
    println("Response status: " + closeableHttpResponse.getStatusLine().getStatusCode())  // print response status code
    HttpEntity entity = closeableHttpResponse.getEntity()  // get response body
    BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent()))  // create reader to read response body
    StringBuffer result = new StringBuffer() // create string buffer to store response body
    String line = ""
    while ((line = reader.readLine()) != null) {  // loop through response body and append to string buffer
        result.append(line)
    }
    println("Response body: " + result.toString())  // print response body
} finally {
    closeableHttpResponse.close() // close response
}
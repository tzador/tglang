​
// This is a multi-line comment in Groovy
/*
 * This code snippet is written in the Apache Groovy programming language.
 * It demonstrates a complex implementation of the Quicksort algorithm.
 */

// Defining a method to sort an array using the Quicksort algorithm
def quicksort(List<Integer> arr, int low, int high) {
    // Checking if the array has more than one element
    if (low < high) {
        // Choosing a pivot element
        def pivot = arr[(low + high) / 2]
        // Setting up two indices to keep track of elements on either side of the pivot
        def i = low
        def j = high
        // Loop through the array until the two indices meet
        while (i <= j) {
            /*
            * Move the left index towards the right until an element larger than the pivot is found
            * Move the right index towards the left until an element smaller than the pivot is found
            * Swap the two elements if they are on the wrong side of the pivot
            */
            while (arr[i] < pivot) i++
            while (arr[j] > pivot) j--
            if (i <= j) {
                def temp = arr[i]
                arr[i++] = arr[j]
                arr[j--] = temp
            }
        }
        // Recursively call the method on the subarrays left and right of the pivot
        quicksort(arr, low, j)
        quicksort(arr, i, high)
    }
}

// Example usage of the quicksort method
def arr = [5, 3, 8, 2, 1, 9, 6, 4, 7]
quicksort(arr, 0, arr.size() - 1)

// Printing the sorted array
println arr
​
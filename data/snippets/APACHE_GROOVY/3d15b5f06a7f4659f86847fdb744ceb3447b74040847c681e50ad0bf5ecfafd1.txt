// Annotated markdown code snippet
// This code snippet uses the Apache Groovy programming language

// Import necessary libraries
import groovy.json.*
import groovy.sql.*
import groovy.util.*
import java.net.URL

// Define a class named 'Person'
class Person {
    // Constructor with parameters
    Person(String name, int age) {
        this.name = name
        this.age = age
    }
    // Class variables
    String name
    int age

    // Method to print information about the person
    void printInfo() {
        println("Name: ${this.name}")
        println("Age: ${this.age}")
    }
}

// Create a new instance of Person with name and age parameters
Person john = new Person("John", 25)

// Invoke the printInfo() method on the john object
john.printInfo()

// Create a list of strings
def colors = ["red", "green", "blue"]

// Use the eachWithIndex() method to iterate through the list and print each color with its index
colors.eachWithIndex { color, index ->
    println("Color: $color, Index: $index")
}

// Use multiline string to store HTML content in a variable
def html = '''
<html>
<head>
    <title>Apache Groovy Example</title>
</head>
<body>
    <h1>Hello Groovy!</h1>
</body>
</html>
'''

// Use the MarkupBuilder class to generate an HTML file
def writer = new StringWriter()
new groovy.xml.MarkupBuilder(writer).html {
    head {
        title("Apache Groovy Example")
    }
    body {
        h1("Hello Groovy!")
    }
}

// Use the println() method to print the generated HTML
println(writer.toString())

// Use the JsonOutput class to convert a map to a JSON string
def map = ["Greeting": "Hello", "Name": "John"]

// Print the JSON string
println(JsonOutput.toJson(map))

// Use the Sql class to connect to a database
def url = 'jdbc:postgresql://localhost:5432/test'
def username = 'username'
def password = 'password'

// Use the withTransaction method to run a set of SQL statements within a transaction
Sql.withInstance(url, username, password) { sql ->
    sql.withTransaction {
        // Create a new table
        sql.execute("CREATE TABLE IF NOT EXISTS users (id int, name varchar(255))")
        // Insert data into the table
        sql.execute("INSERT INTO users VALUES (1, 'John')")
        sql.execute("INSERT INTO users VALUES (2, 'Jane')")
        // Query the table and print the results
        def result = sql.rows("SELECT * FROM users")
        println("Number of rows: ${result.size()}")
        result.each { row ->
            println("ID: ${row.id}, Name: ${row.name}")
        }
    }
}

// Use the URL class to make an HTTP request
def response = new URL("https://www.example.com").text
// Print the response
println(response)
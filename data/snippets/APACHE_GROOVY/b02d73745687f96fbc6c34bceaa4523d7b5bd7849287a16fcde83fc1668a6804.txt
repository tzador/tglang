/* This is a complex code snippet in APACHE_GROOVY that implements a binary search algorithm */

// Define an array of integers to search through
def arr = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]

// Define the function that implements binary search
def binarySearch(arr, low, high, target){

    // Check for edge cases
    if(high < low){
        return -1 // Target not found
    }
    if(high == low){
        if(arr[low] == target){
            return low // Target found at index low
        }
        else{
            return -1 // Target not found
        }
    }

    // Calculate the middle index of the array
    def mid = (low + high) / 2

    // Check if the middle element is the target
    if(arr[mid] == target){
        return mid
    }
    // If middle element is greater than target, search in the left half
    else if(arr[mid] > target){
        return binarySearch(arr, low, mid - 1, target)
    }
    // If middle element is less than target, search in the right half
    else{
        return binarySearch(arr, mid + 1, high, target)
    }
}

// Set the target number to search for
def target = 7

// Call the binarySearch function and store the returned index in a variable
def result = binarySearch(arr, 0, arr.size() - 1, target)

// Check if the result is -1 (target not found) or a valid index
if(result == -1){
    println("Target not found in array.")
}
else{
    println("Target found at index: " + result)
}

/* Output:
Target found at index: 3 */
import groovy.json.JsonSlurper

// Define a class to represent a Car
class Car {
    String make // field to store the car's make
    String model // field to store the car's model
    int year // field to store the car's year
    boolean isWorking // field to store if the car is in working condition or not

    // Constructor to initialize the car object with given parameters
    Car(String make, String model, int year, boolean isWorking) {
        this.make = make
        this.model = model
        this.year = year
        this.isWorking = isWorking
    }

    // Method to print the car's information
    void getCarInfo() {
        println("Make: $make")
        println("Model: $model")
        println("Year: $year")
        println("Is working: $isWorking")
    }
}

// Create a list to store Car objects
List<Car> carList = []

// Use JsonSlurper to read in a JSON file containing car information
def carJson = new JsonSlurper().parseText('''
[
    {
        "make": "Honda",
        "model": "Civic",
        "year": 2015,
        "isWorking": true
    },
    {
        "make": "Toyota",
        "model": "Camry",
        "year": 2008,
        "isWorking": false
    },
    {
        "make": "Ford",
        "model": "F-150",
        "year": 2020,
        "isWorking": true
    }
]
''')

// Loop through the JSON data and create Car objects to add to the list
carJson.each { car ->
    def newCar = new Car(car.make, car.model, car.year, car.isWorking)
    carList.add(newCar)
}

// Sort the car list by year in descending order
carList.sort { a, b -> b.year <=> a.year }

// Print out the car information for each car in the list
carList.each { car ->
    car.getCarInfo()
}

// Output: 
/* 
Make: Ford
Model: F-150
Year: 2020
Is working: true

Make: Honda
Model: Civic
Year: 2015
Is working: true

Make: Toyota
Model: Camry
Year: 2008
Is working: false 
*/
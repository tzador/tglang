// Define a Class
class Person {
    // Define Class Variables
    String name
    int age

    // Define Constructor
    Person(String name, int age) {
        this.name = name
        this.age = age
    }

    // Define Class Methods
    String getInfo() {
        return "Name: ${this.name}, Age: ${this.age}"
    }
}

// Create an Instance of Person
Person person1 = new Person("John", 25)

// Invoke Class Method
println(person1.getInfo())

// Define Inherited Class
class Employee extends Person {
   // Define Class Variables
   int salary

   // Define Constructor
   Employee(String name, int age, int salary) {
       // Call Parent Class Constructor
       super(name, age)
       this.salary = salary
   }

   // Override Parent Class Method
   @Override
   String getInfo() {
       return super.getInfo() + ", Salary: ${this.salary}"
   }
}

// Create an Instance of Employee
Employee employee1 = new Employee("Jane", 30, 5000)

// Invoke Overridden Method
println(employee1.getInfo())

// Define Abstract Class
abstract class Shape {
    // Define Abstract Method
    abstract double getArea()
}

// Define Concrete Class
class Circle extends Shape {
    // Define Class Variables
    double radius

    // Define Constructor
    Circle(double radius) {
        this.radius = radius
    }

    // Implement Abstract Method
    @Override
    double getArea() {
        return Math.PI * this.radius * this.radius
    }
}

// Create an Instance of Circle
Circle circle1 = new Circle(5.0)

// Invoke Implemented Method
println("Area of Circle: ${circle1.getArea()}")
import groovy.json.JsonSlurper // import the JsonSlurper groovy library

// define a json string
String jsonString = '''
    {
        "name": "John Doe",
        "age": 25,
        "hobbies": [
            "reading",
            "writing",
            "painting"
        ]
    }
'''

// use the JsonSlurper library to parse the json string
def parsedJson = new JsonSlurper().parseText(jsonString)

// print the name and age of the person
println "Name: ${parsedJson.name}"
println "Age: ${parsedJson.age}"

// loop through the hobbies and print each one
parsedJson.hobbies.each { hobby ->
    println "Hobby: $hobby"
}

// define a class with nested properties
class Person {
    String name
    int age
    List<String> hobbies
}

// create an instance of the Person class and assign values from the parsed json
Person person = new Person(name: parsedJson.name, age: parsedJson.age, hobbies: parsedJson.hobbies)

// print out the person's name and age
println "Person's name: ${person.name}"
println "Person's age: ${person.age}"

// loop through the person's hobbies and print each one
person.hobbies.each { hobby ->
    println "Person's hobby: $hobby"
}

// create a new json object using the parsed data
def newJson = [:]
newJson.name = parsedJson.name // assign the name property
newJson.age = parsedJson.age // assign the age property
newJson.hobbies = parsedJson.hobbies // assign the hobbies property

// convert the newJson object back to a json string
def newJsonString = new JsonBuilder(newJson).toString()

// print out the new json string
println "New Json String: ${newJsonString}"
/*
This code snippet is a basic implementation of a binary search algorithm in Apache Groovy.
It takes in a sorted list of integer values and a target value, and returns the index of the target value in the list, or -1 if it is not found.
*/

// Define the binarySearch method
def binarySearch(list, value) {
    def low = 0 // Initial low index
    def high = list.size() - 1 // Initial high index
    while (low <= high) { // Loop until low index is equal to or greater than high index
        def mid = (low + high) / 2 // Find the middle index
        def guess = list[mid] // Get the element at the middle index
        if (guess == value) {
            return mid // Return index of target value if it is found
        } else if (guess > value) {
            high = mid - 1 // Set high index to one less than middle index if the guess is too high
        } else {
            low = mid + 1 // Otherwise, set low index to one more than middle index
        }
    }
    return -1 // Return -1 if target value is not found
}

// Define the list of values
def list = [1, 3, 5, 6, 9, 12, 15, 17, 22, 26, 31]

// Call the binarySearch method with a target value of 6
binarySearch(list, 6)

// Expected output: 3 (index of target value in the list)
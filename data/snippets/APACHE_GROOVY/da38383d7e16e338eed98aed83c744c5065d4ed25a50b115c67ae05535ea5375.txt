import org.apache.commons.codec.binary.Base64
import java.security.SecureRandom
import javax.crypto.Cipher
import javax.crypto.spec.SecretKeySpec

// Generates a random 128-bit key
byte[] key = new byte[16]
SecureRandom.getInstanceStrong().nextBytes(key)

// Specifies the encryption algorithm
String algorithm = "AES"
Cipher aesCipher = Cipher.getInstance(algorithm)

// Creates a SecretKeySpec using the randomly generated key and the specified algorithm
SecretKeySpec keySpec = new SecretKeySpec(key, algorithm)

// Specifies the encoded message to be encrypted
byte[] message = "This is a secret message".bytes

// Encrypts the message using the specified key and algorithm
aesCipher.init(Cipher.ENCRYPT_MODE, keySpec)
byte[] encrypted = aesCipher.doFinal(message)

// Encodes the encrypted message in Base64
String encoded = Base64.encodeBase64String(encrypted)

// Output the encoded message
println(encoded)
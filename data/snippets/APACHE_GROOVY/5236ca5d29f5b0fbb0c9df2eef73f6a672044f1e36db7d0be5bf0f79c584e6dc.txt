//declare a variable 'num' and assign it a value of 5
def num = 5

//declare a list of numbers
List<Integer> numbers = [1, 2, 3, 4]

//iterate over the list using a for loop
for (Integer n : numbers) {
    //multiply each number by the variable 'num'
    int result = n * num
    //print out the result
    println("The result is: ${result}")
}

//create a function to check if a number is prime
boolean isPrime(int num) {
    if (num <= 1) {
        return false
    } else if (num <= 3) {
        return true
    } else if (num % 2 == 0 || num % 3 == 0) {
        return false
    } else {
        int i = 5
        while (i * i <= num) {
            if (num % i == 0 || num % (i + 2) == 0) {
                return false
            }
            i += 6
        }
        return true
    }
}

//call the function and print the result
println("Is 7 a prime number? ${isPrime(7)}")

//create a map of students and their grades
Map<String, Integer> studentGrades = ["John": 95, "Jane": 85, "Bob": 75]

//iterate over the map using a for loop
for (entry in studentGrades) {
    //print out each student's name and their grade
    println("${entry.key} has a grade of ${entry.value}")
}

//create a class for a car with properties and methods
class Car {
    //properties
    String make
    String model
    int year
    //constructor to initialize the properties
    Car(String make, String model, int year) {
        this.make = make
        this.model = model
        this.year = year
    }
    //method to start the car
    void start() {
        println("The ${make} ${model} is starting...")
    }
    //method to drive the car
    void drive(int miles) {
        println("Driving ${miles} miles in the ${make} ${model}")
    }
}

//create an instance of the Car class
Car myCar = new Car("Honda", "Accord", 2015)

//call methods on the instance
myCar.start()
myCar.drive(20)

//create a closure to calculate the square of a number
def square = { num ->
    num * num
}

//call the closure and print the result
println("The square of 10 is ${square(10)}")
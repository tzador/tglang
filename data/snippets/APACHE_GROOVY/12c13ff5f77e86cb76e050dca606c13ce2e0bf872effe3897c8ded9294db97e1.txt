// This is a sample Groovy script that makes use of closures and regular expressions

def fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]

// A function that uses a closure to filter out the even Fibonacci numbers
def filterEven = { num -> num % 2 == 0 }

// A function that uses a closure to filter out the odd Fibonacci numbers
def filterOdd = { num -> num % 2 != 0 }

// An annotated closure that prints out all the Fibonacci numbers that are multiples of 3
def printMultiples = { num ->
    if (num % 3 == 0) {
        println("Multiple of 3: $num")
    }
}

// A regular expression that matches numbers greater than 30
def regex = ~/[3-9][0-9]+/

// A list that will store the matched numbers
List matchingNumbers = []

// Loop through each Fibonacci number and perform the filtering and matching
fibonacci.each {
    if (filterEven(it) && regex.matcher(it.toString()).matches()) {
        matchingNumbers << it
    } else if (filterOdd(it) && regex.matcher(it.toString()).matches()) {
        matchingNumbers << it
    }
}

// Print out the final list of matching numbers
matchingNumbers.each {
    printMultiples(it)
}
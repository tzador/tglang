// Define a list of integers
List<Integer> numbers = [5, 10, 8, 2, 3, 6, 9]

// Define a closure to multiply each number in the list by 2
def multiplyByTwo = { num -> num * 2 }

// Create a new list by mapping the closure to the original list
List<Integer> multipliedNumbers = numbers.collect(multiplyByTwo)

// Print the original list and the multiplied list
println "Original list: $numbers"
println "Multiplied list: $multipliedNumbers"

// Define a function to find the average of a list of numbers
def findAverage = { nums ->
	// Initialize variables for sum and count
	int sum = 0
	int count = 0
	// Loop through each number in the list
	nums.each {
		// Add the number to the sum
		sum += it
		// Increment the count
		count++
	}
	// Calculate and return the average
	sum / count
}

// Find and print the average of the original list
int average = findAverage(numbers)
println "Average of original list: $average"

// Sort the list in descending order
numbers.sort { a, b -> b <=> a }

// Find and print the median of the sorted list
double median = numbers[numbers.size() / 2]
println "Median of sorted list: $median"

// Use the find method to return the first element that satisfies the condition
int firstEven = numbers.find { it % 2 == 0 }
println "First even number in list: $firstEven"

// Use the take method to return the first three elements in the list
List<Integer> firstThree = numbers.take(3)
println "First three numbers in list: $firstThree"
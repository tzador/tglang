// Groovy code to calculate the Fibonacci sequence up to a given number

// Define a method to calculate the Fibonacci sequence
def calculateFibonacciSequence(number) {
    
    // Initialize an empty list to store the sequence
    def sequence = []
    
    // Check if the number is less than 0
    if (number < 0) {
    	throw new Exception("Number must not be negative")
    }
    
    // Check if the number is 0 or 1, and return the appropriate sequence
    if (number <= 1) {
        sequence.add(number)
        return sequence
    } 
    
    // Add the first two numbers of the sequence (0 and 1)
    sequence.add(0)
    sequence.add(1)
    
    // Loop through the rest of the sequence and calculate each number
    for (int i = 2; i <= number; i++) {
        // Calculate the ith number of the sequence by adding the previous two numbers
        def nextNumber = sequence[i-1] + sequence[i-2]
        // Add the calculated number to the sequence
        sequence.add(nextNumber)
    }
    
    // Return the complete sequence
    return sequence
}

// Call the method to calculate the Fibonacci sequence up to a given number
def fibonacciSequence = calculateFibonacciSequence(10)

// Print the sequence using a for loop
for (i in fibonacciSequence) {
    println(i)
}

// Output:
// 0
// 1
// 1
// 2
// 3
// 5
// 8
// 13
// 21
// 34
// 55
/* This program checks if a number is prime or not.
 * It uses the Sieve of Eratosthenes algorithm.
 */

def isPrime = { num ->
    if (num <= 1) {
        // 1 is not a prime number
        return false
    }

    if (num <= 3) {
        // 2 and 3 are prime numbers
        return true
    }

    // First, create an array of booleans with all values set to true
    def primeArray = new boolean[num + 1]
    for (int i = 2; i < primeArray.size(); i++) {
        primeArray[i] = true
    }

    // Then, use the Sieve of Eratosthenes algorithm to mark non-prime numbers as false
    for (int i = 2; i <= Math.sqrt(num); i++) {
        if (primeArray[i]) {
            for (int j = i * i; j <= num; j += i) {
                primeArray[j] = false
            }
        }
    }

    // Finally, check if the input number is prime or not based on the boolean at its index in the array
    return primeArray[num]
}

// Sample usage
println(isPrime(37)) // Output: true
println(isPrime(100)) // Output: false
/*
 * This is a complex code snippet in APACHE_GROOVY.
 * It creates a class with dynamic properties and a method that checks
 * if the properties meet certain conditions.
 */

class User {                         // creates a class 'User'
    private dynamic properties = [:] // creates a dynamic map to store properties
    
    def setProperty(String name, Object value) { // method to set property values
        if (name in ['username', 'email']) {     // checks if property name is valid
            properties[name] = value             // adds property to map
        } else {
            throw new IllegalArgumentException("Invalid property name: ${name}")
        }
    }
    
    def getProperty(String name) {               // method to get property values
        properties[name]                          // returns property value from map
    }
    
    def validateProperties() {                    // method to check property conditions
        if (!properties.containsKey('username')) { // checks if 'username' property exists
            throw new Exception("Username property is missing.")
        }
        
        if (properties['username'].length() < 6) {  // checks if 'username' is at least 6 characters
            throw new Exception("Username must be at least 6 characters long.")
        }
        
        if (!properties.containsKey('email')) {    // checks if 'email' property exists
            throw new Exception("Email property is missing.")
        }
        
        if (!properties['email'].contains('@')) {   // checks if 'email' contains '@' symbol
            throw new Exception("Invalid email address.")
        }
        
        println("All properties are valid.")        // outputs success message
    }
}

// create an instance of the class 'User'
def user = new User()

// set property values
user.username = "johndoe"
user.email = "johndoe@example.com"

// check if properties meet conditions
user.validateProperties()

// output:
// All properties are valid.
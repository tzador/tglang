{
  "format": "markdown",
  "language": "JSON",
  "snippet": {
    "title": "Complex JSON example",
    "description": "This is a complex JSON code snippet example",
    "keywords": ["JSON", "code snippet", "complex", "example"],
    "data": {
      "students": [
        {
          "name": "John",
          "age": 21,
          "major": "Computer Science",
          "gpa": 3.8
        },
        {
          "name": "Emily",
          "age": 20,
          "major": "Biology",
          "gpa": 3.5
        },
        {
          "name": "David",
          "age": 22,
          "major": "Physics",
          "gpa": 3.9
        }
      ],
      "courses": [
        {
          "name": "Introduction to Programming",
          "department": "Computer Science",
          "instructor": "Dr. Smith",
          "credits": 3
        },
        {
          "name": "Biology 101",
          "department": "Biology",
          "instructor": "Dr. Johnson",
          "credits": 4
        },
        {
          "name": "Quantum Mechanics",
          "department": "Physics",
          "instructor": "Dr. Lee",
          "credits": 3
        }
      ]
    },
    "methods": [
      "sort_students": function (students) {
        // Sort students by GPA in descending order
        return students.sort((a, b) => (a.gpa < b.gpa) ? 1 : -1);
      },
      "find_student": function (students, name) {
        // Find student object with given name
        return students.find(student => student.name === name);
      },
      "calculate_gpa": function (courses) {
        // Calculate overall GPA based on grades in each course
        let totalCredits = 0;
        let totalGradePoints = 0;
        for (let i = 0; i < courses.length; i++) {
          totalCredits += courses[i].credits;
          totalGradePoints += courses[i].credits * (4 - courses[i].gpa);
        }
        return totalGradePoints / totalCredits;
      }
    ],
    "output": [
      {
        "name": "John",
        "gpa": 3.8,
        "major": "Computer Science",
        "courses": [
          {
            "name": "Introduction to Programming",
            "instructor": "Dr. Smith",
            "grade": "A-"
          },
          {
            "name": "Quantum Mechanics",
            "instructor": "Dr. Lee",
            "grade": "B+"
          }
        ]
      },
      {
        "name": "Emily",
        "gpa": 3.5,
        "major": "Biology",
        "courses": [
          {
            "name": "Biology 101",
            "instructor": "Dr. Johson",
            "grade": "B"
          }
        ]
      },
      {
        "name": "David",
        "gpa": 3.9,
        "major": "Physics",
        "courses": [
          {
            "name": "Quantum Mechanics",
            "instructor": "Dr. Lee",
            "grade": "A-"
          }
        ]
      }
    ]
  }
}
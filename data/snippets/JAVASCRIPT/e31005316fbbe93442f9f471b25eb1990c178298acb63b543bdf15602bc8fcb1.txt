// This code snippet uses an object constructor to create a customized player class
// The functions within the class allow for character creation, movement, and attack
// This code also showcases the use of conditional statements and loops
class Player {
  constructor(name, race, class, health, strength) {
    this.name = name;
    this.race = race;
    this.class = class;
    this.health = health;
    this.strength = strength;
    this.x = 0;
    this.y = 0;
    this.direction = 'north';
  }
  
  createCharacter() {
    console.log("Welcome to the world of adventure, " + this.name + " the " + this.race + " " + this.class + ".");
    console.log("Your starting health is " + this.health + " and strength is " + this.strength + ".");
  }
  
  move(direction, steps) {
    if(direction === 'north') {
      this.y += steps;
      console.log("You have moved " + steps + " steps north.");
    } else if (direction === 'south') {
      this.y -= steps;
      console.log("You have moved " + steps + " steps south.");
    } else if (direction === 'east') {
      this.x += steps;
      console.log("You have moved " + steps + " steps east.");
    } else if (direction === 'west') {
      this.x -= steps;
      console.log("You have moved " + steps + " steps west.");
    } else {
      console.log("Invalid direction.");
    }
  }
  
  attack(target) {
    if(target.health > 0) {
      target.health -= this.strength;
      console.log(this.name + " attacks " + target.name + " for " + this.strength + " damage.");
      console.log(target.name + " now has " + target.health + " health.");
    } else {
      console.log("Target is already defeated.");
    }
  }
}

// Initializing player and enemy objects
const player = new Player("Adventurer", "Human", "Rogue", 100, 20);
const enemy = new Player("Goblin", "Goblin", "Warrior", 50, 10);

// Creating character and displaying starting stats
player.createCharacter();

// Moving player character and displaying new coordinates
player.move('north', 5);
player.move('east', 3);
console.log("You are now at coordinates (" + player.x + ", " + player.y + ").");

// Attacking enemy and displaying remaining health
player.attack(enemy); // enemy now has 30 health

// Looping through multiple attacks until enemy is defeated
for(let i = 0; i < 3; i++) {
  player.attack(enemy);
} // enemy is now defeated

// Displaying character winning message
console.log("Congrats, " + player.name + " has defeated " + enemy.name + "!");
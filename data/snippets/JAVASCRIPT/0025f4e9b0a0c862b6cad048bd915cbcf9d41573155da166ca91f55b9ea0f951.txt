// This function creates a new array with elements from the old array that match a certain criteria
Array.prototype.filter = function(callback){
    var filteredArr = []; // create a new empty array to store filtered elements

    for(var i=0; i<this.length; i++){ // loop through the original array
        if(callback(this[i], i, this)){ // check if the current element satisfies the condition
            filteredArr.push(this[i]); // if yes, push it onto the new array
        }
    }

    return filteredArr; // return the new array
}

// Example usage
var numbers = [5, 2, 8, 3, 9, 1];

// Create a function to filter out even numbers
function isEven(num){
    return num % 2 === 0;
}

// Use the filter method to filter out even numbers from the numbers array
var evens = numbers.filter(isEven);

// Output
console.log(evens); // [2, 8]

// Alternatively, the filter method can take an anonymous function as an argument
var odds = numbers.filter(function(num){
    return num % 2 !== 0;
});

// Output
console.log(odds); // [5, 3, 9, 1]
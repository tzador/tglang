// This code snippet generates a random password of a given length with both uppercase and lowercase letters, numbers, and special characters.

// Create an array of all possible characters
const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+=';

// Function to generate a random password
const generatePassword = (length) => {
  let password = ''; // store the password
  // loop until desired length is reached
  for (let i = 0; i < length; i++) {
    // generate a random index in the characters array
    const randomIndex = Math.floor(Math.random() * characters.length);
    // add the character at that index to the password
    password += characters[randomIndex];
  }
  return password;
};

// Function to check if a password meets the complexity requirements
const checkPassword = (password) => {
  // declare variables for checking
  let hasUppercase = false; // at least one uppercase character
  let hasLowercase = false; // at least one lowercase character
  let hasNumber = false; // at least one number
  let hasSpecial = false; // at least one special character
  // loop through password characters
  for (let i = 0; i < password.length; i++) {
    const char = password[i]; // current character
    // check for uppercase letters using regex
    if (/[A-Z]/.test(char)) {
      hasUppercase = true;
    }
    // check for lowercase letters using regex
    if (/[a-z]/.test(char)) {
      hasLowercase = true;
    }
    // check for numbers using regex
    if (/[0-9]/.test(char)) {
      hasNumber = true;
    }
    // check for special characters using regex
    if (/[^A-Za-z0-9]/.test(char)) {
      hasSpecial = true;
    }
  }
  // return true if all requirements met, otherwise false
  return hasUppercase && hasLowercase && hasNumber && hasSpecial;
};

// Get user input for password length
const length = parseInt(prompt('Enter desired password length:'));

// Generate a password until it meets complexity requirements
let password = generatePassword(length);
while (!checkPassword(password)) {
  password = generatePassword(length);
}

// Print the final password
console.log(`Your password is: ${password}`);
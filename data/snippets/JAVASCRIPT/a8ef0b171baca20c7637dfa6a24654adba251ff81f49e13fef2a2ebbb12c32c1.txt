// This code snippet generates and prints a chessboard grid of any given size

function createGrid(size) {                  // Function to create grid of given size
  let grid = [];                             // Initialize empty array for grid
  for (let i = 0; i < size; i++) {           // Loop for grid rows
    grid.push([]);                           // Add empty array for each row
    for (let j = 0; j < size; j++) {         // Loop for grid columns
      if ((i + j) % 2 === 0) {               // Check if current square should be black or white
        grid[i].push("[X]");                 // Add black square to grid
      } else {
        grid[i].push("[ ]");                 // Add white square to grid
      }
    }
  }
  return grid;                               // Return generated grid
}

function printGrid(grid) {                   // Function to print grid
  for (let i = 0; i < grid.length; i++) {    // Loop for rows
    let row = "";                            // Initialize empty string for row
    for (let j = 0; j < grid[i].length; j++) {// Loop for columns
      row += grid[i][j] + " ";               // Add current square to row
    }
    console.log(row);                        // Print row to console
  }
}

let gridSize = 8;                            // Set size of grid
let chessboard = createGrid(gridSize);       // Generate grid with given size
printGrid(chessboard);                       // Print grid to console

// Output:
// [X] [ ] [X] [ ] [X] [ ] [X] [ ]
// [ ] [X] [ ] [X] [ ] [X] [ ] [X]
// [X] [ ] [X] [ ] [X] [ ] [X] [ ]
// [ ] [X] [ ] [X] [ ] [X] [ ] [X]
// [X] [ ] [X] [ ] [X] [ ] [X] [ ]
// [ ] [X] [ ] [X] [ ] [X] [ ] [X]
// [X] [ ] [X] [ ] [X] [ ] [X] [ ]
// [ ] [X] [ ] [X] [ ] [X] [ ] [X]
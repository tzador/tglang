/**
 * This is a function that generates a random password.
 * It takes in a length and an options object as parameters.
 * The options object has properties for including or excluding numbers, symbols, and uppercase characters.
 * @param {number} length - The length of the password to be generated.
 * @param {object} options - An object containing options for the password generator.
 * @param {boolean} [options.numbers=true] - Boolean value for including numbers in the password. Defaults to true if not specified.
 * @param {boolean} [options.symbols=true] - Boolean value for including symbols in the password. Defaults to true if not specified.
 * @param {boolean} [options.uppercase=true] - Boolean value for including uppercase characters in the password. Defaults to true if not specified.
 * @returns {string} - The generated password.
 */

function generatePassword(length, options = {numbers: true, symbols: true, uppercase: true}) {
    // Define arrays of characters for each character type
    const numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
    const symbols = ["!", "@", "#", "$", "%", "^", "&", "*", "(", ")"];
    const uppercase = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];

    // Initialize an empty array to store the possible characters for the password
    let possibleChars = [];

    // Add numbers to the possibleChars array if the numbers option is true
    if (options.numbers) {
        possibleChars = possibleChars.concat(numbers);
    }

    // Add symbols to the possibleChars array if the symbols option is true
    if (options.symbols) {
        possibleChars = possibleChars.concat(symbols);
    }

    // Add uppercase characters to the possibleChars array if the uppercase option is true
    if (options.uppercase) {
        possibleChars = possibleChars.concat(uppercase);
    }

    // Check if the possibleChars array is empty, if so, return an error message
    if (possibleChars.length === 0) {
        return "Error: No characters to choose from. Please specify at least one character type to include.";
    }

    // Initialize an empty string to store the password
    let password = "";

    // Loop through the specified length and randomly choose characters from the possibleChars array to create the password
    for (let i = 0; i < length; i++) {
        // Generate a random index number based on the length of the possibleChars array
        let index = Math.floor(Math.random() * possibleChars.length);

        // Add the randomly chosen character to the password string
        password += possibleChars[index];
    }

    // Return the generated password
    return password;
}

// Example usage:
console.log(generatePassword(12, {numbers: true, symbols: true, uppercase: true}));
// Output: e9gS@N8e2$J4R
// Function to check if a number is prime
function checkPrime(num) {
  // Initialize counter
  let count = 0;
  // Loop through numbers from 2 to num-1
  for (let i = 2; i < num; i++) {
    // Check if num is divisible by current number
    if (num % i === 0) {
      // Increment count
      count++;
      // If count is greater than 1, num is not prime
      if (count > 1) {
        // Return false
        return false;
      }
    }
  }
  // Return true if count is 0, meaning num is only divisible by 1 and itself
  return count === 0;
}

// Function to print first n prime numbers
function printPrime(n) {
  // Initialize counter
  let count = 0;
  // Initialize array to store prime numbers
  let primeNumbers = [];
  // Start loop at 2, since 2 is the first prime number
  let i = 2;
  // Keep looping until we have n prime numbers
  while (count < n) {
    // Check if current number is prime
    if (checkPrime(i)) {
      // If so, add it to the primeNumbers array
      primeNumbers.push(i);
      // Increment count
      count++;
    }
    // Increment i to check the next number
    i++;
  }
  // Print the primeNumbers array
  console.log(primeNumbers);
}

// Call the printPrime function and pass in n as the number of prime numbers we want to print
printPrime(10);

// Output:
// [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
/*
This function will sort an array of numbers in ascending order using the bubble sort algorithm

@param {array} arr - the array to be sorted
@return {array} - the sorted array 
*/

function bubbleSort(arr) {
    // swap tracks whether any swaps were made in a pass through the array
    let swap = false;

    // iterate through the array
    for (let i = 0; i < arr.length; i++) {
        // compare each pair of adjacent elements
        for (let j = 0; j < arr.length - i - 1; j++) {
            // if the element on the left is larger than the one on the right, swap them
            if (arr[j] > arr[j + 1]) {
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;

                // set swap to true
                swap = true;
            }
        }
        // if no swaps were made in this pass, the array is already sorted and we can break out of the loop
        if (!swap) {
            break;
        }
    }
    // return the sorted array
    return arr;
}

// example usage
let unsorted = [5, 2, 3, 1, 4];
let sorted = bubbleSort(unsorted);
console.log(sorted); // [1, 2, 3, 4, 5]
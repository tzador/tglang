// Define an object constructor function
function Person(name, age) {
  this.name = name;
  this.age = age;
}

// Define prototype method to calculate birth year
Person.prototype.calcBirthYear = function () {
  const currentDate = new Date();
  return currentDate.getFullYear() - this.age;
}

// Create new object using the constructor function
const person1 = new Person("John", 25);

// Call prototype method to calculate birth year
console.log(person1.calcBirthYear()); // output: 1996

// Define a child object that inherits from the Person object
function Employee(name, age, position) {
  // Call Person constructor function to set name and age properties
  Person.call(this, name, age);
  this.position = position;
}

// Inherit prototype methods from Person to Employee
Employee.prototype = Object.create(Person.prototype);

// Add a new method to the Employee prototype
Employee.prototype.introduce = function () {
  console.log(`Hi, my name is ${this.name} and I am an ${this.position}.`);
};

// Create new Employee object
const employee1 = new Employee("Jane", 30, "Engineer");

// Call method from Employee prototype
employee1.introduce(); // output: Hi, my name is Jane and I am an Engineer.
// Function to calculate and return the nth Fibonacci number
// Takes in a number n as parameter and returns the nth Fibonacci number
const fibonacci = (n) => {
    // Base cases for n = 0 and n = 1
    if (n === 0) return 0;
    if (n === 1) return 1;

    // Variables to store the previous two numbers in the sequence
    let prevPrev = 0; // Previous number to the previous number
    let prev = 1; // Previous number

    // Loop from 2 to n
    for (let i = 2; i < n; i++) {
        // Calculate the current Fibonacci number by adding the previous two numbers
        const current = prev + prevPrev;
        // Update the previous two numbers
        prevPrev = prev;
        prev = current;
    }
    // Return the nth Fibonacci number
    return prev + prevPrev;
}

// Function to print the first n Fibonacci numbers
// Takes in a number n as parameter and prints the first n Fibonacci numbers
const printFibonacci = (n) => {
    // Print "Invalid input" if n is negative
    if (n < 0) {
        console.log("Invalid input");
    } else {
        // Loop from 0 to n
        for (let i = 0; i < n; i++) {
            // Call the fibonacci function and pass in the current iteration value
            const fib = fibonacci(i);
            // Print the current Fibonacci number
            console.log(fib);
        }
    }
}

// Example output for n = 8:
// 0, 1, 1, 2, 3, 5, 8, 13

// Call the printFibonacci function with n = 8
printFibonacci(8);
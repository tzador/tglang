/**
 * Class representing a car
 */
class Car {
    /**
     * Create a car
     * @param {string} make - The make of the car
     * @param {string} model - The model of the car
     * @param {number} year - The year the car was made
     * @param {number} mileage - The mileage of the car in miles
     */
    constructor(make, model, year, mileage) {
        this.make = make;
        this.model = model;
        this.year = year;
        this.mileage = mileage;
    }

    /**
     * Drive the car for a given distance
     * @param {number} distance - The distance to drive in miles
     */
    drive(distance) {
        this.mileage += distance;
    }

    /**
     * Get the car's current mileage
     * @returns {number} - The current mileage in miles
     */
    getMileage() {
        return this.mileage;
    }

    /**
     * Check if the car needs an oil change
     * @returns {boolean} - True if the car's mileage is over 5000 miles, false otherwise
     */
    needsOilChange() {
        if (this.mileage > 5000) {
            return true;
        }
        return false;
    }

    /**
     * Get the remaining life of the car based on mileage
     * @returns {number} - The remaining life of the car in years
     */
    getRemainingLife() {
        let remainingMileage = 100000 - this.mileage;
        const averageMilesPerYear = 12000;
        let remainingYears = remainingMileage / averageMilesPerYear;
        return remainingYears;
    }
}

// Create a new car object
let myCar = new Car("Honda", "Civic", 2015, 40000);

// Drive the car 200 miles
myCar.drive(200);

// Check if the car needs an oil change
if (myCar.needsOilChange()) {
    console.log("My car needs an oil change!");
}

// Get the remaining life of the car
console.log(`My car has ${myCar.getRemainingLife()} years of remaining life.`);

// Output: 
// My car needs an oil change!
// My car has 3 years of remaining life.
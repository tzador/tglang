/*
    This code snippet generates a random password based on user preferences.
    It takes in a length for the password, as well as boolean values for including uppercase,
    lowercase, numbers, and special characters.

    The code first defines an empty array for the password characters to be added to.
    Then, using the Math.random() function, it generates random numbers and uses them to select characters
    from each character type (lowercase letters, uppercase letters, numbers, and special characters).
    It uses if statements to check if the user wants that specific type of character included,
    and if so, adds it to the password array.

    After looping through the password length, the array is converted into a string and returned as the password.

    Example usage:

    generatePassword(10, true, true, true, true);
    // This would generate a 10-character password with uppercase, lowercase, numbers, and special characters.

*/

// Define function to generate the password
function generatePassword(length, uppercase, lowercase, numbers, special) {

    // Define empty array for password characters
    let passwordArr = [];

    // Loop through password length
    for (let i = 0; i < length; i++) {

        // Generate a random number to select character type
        let type = Math.floor(Math.random() * 4);

        // If statements to check which character type to include
        if (uppercase && type === 0) {
            // Generate a random uppercase letter and add it to password array
            passwordArr.push(String.fromCharCode(Math.floor(Math.random() * 26) + 65));
        } else if (lowercase && type === 1) {
            // Generate a random lowercase letter and add it to password array
            passwordArr.push(String.fromCharCode(Math.floor(Math.random() * 26) + 97));
        } else if (numbers && type === 2) {
            // Generate a random number and add it to password array
            passwordArr.push(Math.floor(Math.random() * 10));
        } else if (special && type === 3) {
            // Generate a random special character and add it to password array
            passwordArr.push(String.fromCharCode(Math.floor(Math.random() * 15) + 33));
        } else {
            // If no character type is selected, loop again
            i--;
        }
    }

    // Convert password array to string and return
    return passwordArr.join("");
}

// Example usage:
generatePassword(15, true, false, true, true);
// This would generate a 15-character password with uppercase, numbers, and special characters.
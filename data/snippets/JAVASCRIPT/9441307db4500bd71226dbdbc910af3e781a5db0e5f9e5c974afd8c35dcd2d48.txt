/**
 * This function sorts an array of numbers using the Quick Sort algorithm.
 *
 * @param {Array} numbers - the array of numbers to be sorted.
 * @return {Array} the sorted array of numbers.
 */
const quickSort = (numbers) => {
    if (numbers.length < 2) { // base case
        return numbers;
    } else { // recursive case
        const pivot = numbers[0]; // choose first element as pivot
        const lessThanPivot = numbers.slice(1).filter((number) => number <= pivot); // find all numbers less than pivot
        const greaterThanPivot = numbers.slice(1).filter((number) => number > pivot); // find all numbers greater than pivot
        return [...quickSort(lessThanPivot), pivot, ...quickSort(greaterThanPivot)]; // recursively call quickSort on the lessThanPivot and greaterThanPivot arrays and combine them with the pivot in between
    }
}

// example usage
const numbers = [5, 2, 8, 1, 9, 3];
console.log(quickSort(numbers)); // output: [1, 2, 3, 5, 8, 9]
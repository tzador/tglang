// This snippet generates a random color gradient background

// Initialize a canvas element
const canvas = document.createElement('canvas');
canvas.width = 500;
canvas.height = 500;

// Set the context to 2D
const ctx = canvas.getContext('2d');

// Create an empty array to store the colors
const colorArr = [];

// Loop through the canvas width
for(let x = 0; x < canvas.width; x++) {

  // Create an empty array to store the current row's colors
  const row = [];

  // Loop through the canvas height
  for(let y = 0; y < canvas.height; y++) {

    // Generate random RGB values
    const r = Math.floor(Math.random() * 256);
    const g = Math.floor(Math.random() * 256);
    const b = Math.floor(Math.random() * 256);

    // Push the RGB values as a string into the current row's array
    row.push(`rgb(${r}, ${g}, ${b})`);
  }

  // Push the current row's array into the main color array
  colorArr.push(row);
}

// Loop through the colorArr to draw the gradient
for(let i = 0; i < colorArr.length - 1; i++) {

  // Set the starting color for the gradient as the first color in the current row
  let startColor = colorArr[i][0];

  // Set the ending color for the gradient as the last color in the current row
  let endColor = colorArr[i][colorArr[i].length - 1];

  // Create a gradient object
  let gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);

  // Add the start and end colors to the gradient
  gradient.addColorStop(0, startColor);
  gradient.addColorStop(1, endColor);

  // Set the fill style of the gradient
  ctx.fillStyle = gradient;

  // Draw the gradient rectangle with the appropriate coordinates
  ctx.fillRect(0, i, canvas.width, 1);
}

// Append the canvas to the body of the document
document.body.appendChild(canvas);
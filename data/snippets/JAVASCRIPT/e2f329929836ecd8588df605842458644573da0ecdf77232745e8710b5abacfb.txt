// Function to check if a given number is prime
function isPrime(num) {
    // If given number is less than 2, return false (as no prime numbers below 2)
    if (num < 2) return false; 
    // Loop from 2 up to the square root of given number
    for (let i = 2; i <= Math.sqrt(num); i++) { 
        // If the number is divisible by any number between 2 and its square root, return false
        if (num % i === 0) return false; 
    }
    return true; // If the number is not divisible by any number between 2 and its square root, return true
}

// Function to generate an array of prime numbers up to a given number
function getPrimeNumbers(num) {
    // Initialize empty array to store prime numbers
    let primeNumbers = [];
    // Loop from 2 up to the given number
    for (let i = 2; i <= num; i++) {
        // If the current number is prime, add it to the primeNumbers array using the isPrime function
        if (isPrime(i)) primeNumbers.push(i);  
    }
    return primeNumbers; // Return the array of prime numbers
}

// Sample usage
let num = 100; 
let primeNumbers = getPrimeNumbers(num); // Call the function to generate an array of prime numbers up to 100
console.log(`Prime numbers up to ${num}: `, primeNumbers); // Output: Prime numbers up to 100: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
/**
 * Function that calculates the nth fibonacci number recursively
 * @param {number} n - Number representing which fibonacci number to calculate
 * @returns {number} - The nth fibonacci number
 */
function fib(n) {
    if (n < 0) throw "n must be a positive integer";

    // Memoization table to store previously calculated fibonacci numbers
    const memo = [0, 1];

    // Recursive helper function to calculate fibonacci number
    function fibHelper(n) {
        // Check if fibonacci number is already calculated and return it
        if (memo[n] !== undefined) {
            return memo[n];
        }

        // Calculate the nth fibonacci number using recursion and store it in memo
        memo[n] = fibHelper(n - 1) + fibHelper(n - 2);

        return memo[n];
    }

    return fibHelper(n);
}

// Example usage
console.log(fib(10)); // Output: 55
console.log(fib(20)); // Output: 6765
console.log(fib(30)); // Output: 832040
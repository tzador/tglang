// This code snippet is a function that takes in two arrays and returns a new array with elements from both arrays sorted in ascending order
let arr1 = [5, 8, 2, 1];
let arr2 = [3, 4, 10, 6];

// function to merge two sorted arrays
function mergeArrays(arr1, arr2) {

    // initialize a new empty array to store the sorted elements
    let mergedArray = [];

    // get the lengths of the two input arrays
    let len1 = arr1.length,
        len2 = arr2.length;

    // loop through both arrays, comparing elements and pushing them into the new array
    // this loop will run until one of the arrays is completely iterated through
    while (len1 && len2) {
        // if the first element in arr1 is less than the first element in arr2, push it into the new array
        if (arr1[0] < arr2[0]) {
            mergedArray.push(arr1.shift());
            // decrement the length of arr1
            len1--;
        }
        // if the first element in arr2 is less than the first element in arr1, push it into the new array
        else {
            mergedArray.push(arr2.shift());
            // decrement the length of arr2
            len2--;
        }
    }

    // if there are any remaining elements in arr1, push them into the new array
    while (len1) {
        mergedArray.push(arr1.shift());
        len1--;
    }

    // if there are any remaining elements in arr2, push them into the new array
    while (len2) {
        mergedArray.push(arr2.shift());
        len2--;
    }

    // return the sorted merged array
    return mergedArray;
}

// call the function and print the result
console.log(mergeArrays(arr1, arr2)); // output: [1, 2, 3, 4, 5, 6, 8, 10]
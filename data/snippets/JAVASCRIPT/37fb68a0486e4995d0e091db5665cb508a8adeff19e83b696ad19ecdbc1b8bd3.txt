// This is a complex JavaScript function that takes in two parameters
// and returns a sorted array of numbers
function sortArray(arr, sortBy) {
  // Convert the sortBy parameter into an array if it is a string
  if (typeof sortBy === "string") {
    sortBy = sortBy.split(",");
  }

  // Ensure that the sortBy array contains valid sorting parameters
  for (let i = 0; i < sortBy.length; i++) {
    if (arr[0][sortBy[i]] === undefined) { // Check if the array objects have the sorting parameter
      console.error("Invalid sorting parameter: " + sortBy[i]);
      return;
    }
  }

  // Loop through the array and sort the objects based on the sorting parameters
  for (let i = 0; i < arr.length; i++) {
    for (let j = 0; j < sortBy.length; j++) {
      for (let k = j + 1; k < sortBy.length; k++) {
        // Compare the sorting parameters to determine the sorting order
        if (arr[i][sortBy[j]] > arr[i][sortBy[k]]) {
          [arr[i][sortBy[j]], arr[i][sortBy[k]]] = [arr[i][sortBy[k]], arr[i][sortBy[j]]]; // Swap the objects' positions
        }
      }
    }
  }

  return arr;
}

// Example usage of the sortArray function
const unsortedArray = [
  { name: "John", age: 25, height: 180 },
  { name: "Jane", age: 30, height: 165 },
  { name: "Bob", age: 20, height: 175 }
];

console.log(sortArray(unsortedArray, ["age", "height"])); // Output: [{ name: "Bob", age: 20, height: 175 }, { name: "John", age: 25, height: 180 }, { name: "Jane", age: 30, height: 165 }]

// This code snippet is useful for sorting arrays of objects based on multiple parameters in JavaScript, such as sorting a list of people by their age and then by their height.
/**
 * This function checks if a given number is prime
 * @param {number} num - The number to be checked
 * @returns {boolean} - True if the number is prime, False if the number is not prime
 */
function isPrime(num) {
    // Initialize a flag variable to track if the number is prime or not
    let isPrime = true;

    // Check if the number is not a positive integer
    if (num <= 1) {
        // Set the flag variable to false
        isPrime = false;
    }
    // Check if the number is 2 or 3 which are prime numbers
    else if (num === 2 || num === 3) {
        // Set the flag variable to true
        isPrime = true;
    }
    // Check if the number is divisible by 2 or 3, as they are the only even prime numbers
    else if (num % 2 === 0 || num % 3 === 0) {
        // Set the flag variable to false
        isPrime = false;
    }
    // Check for all numbers from 5 to the square root of the number
    else {
        // Initialize the loop variable to start from 5
        let i = 5;

        // Loop until the square root of the number
        while (i * i <= num) {
            // Check if the number is divisible by the loop variable
            if (num % i === 0) {
                // Set the flag variable to false
                isPrime = false;
                // Break out of the loop
                break;
            }
            // Increment the loop variable by 2 to skip all even numbers
            i += 2;
        }
    }
    // Return the flag variable as the result
    return isPrime;
}

// Call the function with a number to check if it is prime
isPrime(29); // Returns True
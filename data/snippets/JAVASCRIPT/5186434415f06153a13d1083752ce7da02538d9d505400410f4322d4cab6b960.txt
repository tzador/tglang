// This function checks if a given number is a prime number
function checkPrime(num) {
    //Edge cases
    if (num <= 1) {
        return false;
    }
    //The loop will only run till the square root of the number as all factors above that will have already been checked
    for (let i = 2; i <= Math.sqrt(num); i++) {
        //Check if the current number is a factor
        if (num % i === 0) {
            return false;
        }
    }
    //If no factors found, return true
    return true;
}

//This function generates an array of prime numbers up to a given number
function generatePrimes(limit) {
    //Empty array to store prime numbers
    let primes = [];
    //Loop through numbers from 2 (first prime number) up to the given limit
    for (let i = 2; i <= limit; i++) {
        //Use the checkPrime function to determine if the current number is prime
        if (checkPrime(i)) {
            //If prime, add to the array
            primes.push(i);
        }
    }
    //Return the array of prime numbers
    return primes;
}

//Example usage of generatePrimes function with a limit of 20
let myPrimes = generatePrimes(20);

//Output: [2, 3, 5, 7, 11, 13, 17, 19]
/**
 * Checks if a number is prime
 *
 * @param {number} n The number to check
 * @returns {boolean} True if the number is prime, false if not
 */
function isPrime(n) {
  // Prime numbers are greater than 1
  if (n <= 1) {
    return false;
  }

  // Check from 2 to square root of n
  for (let i = 2; i <= Math.sqrt(n); i++) {
    // If a divisor is found, n is not prime
    if (n % i === 0) {
      return false;
    }
  }

  // If no divisor is found, n is prime
  return true;
}

// Example usage
console.log(isPrime(2)); // Output: true
console.log(isPrime(8)); // Output: false

/**
 * Generates an array of prime numbers up to a given number
 *
 * @param {number} n The maximum number to generate primes up to
 * @returns {array} An array of prime numbers up to n
 */
function generatePrimes(n) {
  const primes = [];

  // Loop through numbers from 2 up to n
  for (let i = 2; i <= n; i++) {
    // Check if current number is prime using isPrime function
    if (isPrime(i)) {
      // If prime, add to primes array
      primes.push(i);
    }
  }

  return primes;
}

// Example usage
console.log(generatePrimes(10)); // Output: [2, 3, 5, 7]
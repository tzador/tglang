// Define a variable to hold the current date
const currentDate = new Date();

// Create a function to fetch new data from an API
const fetchData = async (url) => {
  try {
    // Make a GET request to the specified URL
    const response = await fetch(url);

    // Check if the response is successful
    if (response.status !== 200) {
      throw new Error("Error: request unsuccessful");
    }

    // Convert the response to JSON format
    const data = await response.json();

    // Return the data
    return data;
  } catch (error) {
    // Log any errors that occur
    console.log(error);
  }
};

// Define an object to store user information
const user = {
  name: "John Doe",
  age: 25,
  location: "New York",
  profession: "Web Developer",
};

// Create a loop to iterate over the user object
for (let key in user) {
  // Check if the property exists in the object
  if (user.hasOwnProperty(key)) {
    // Print the property and its value
    console.log(`Property: ${key}, Value: ${user[key]}`);
  }
}

// Define a function to add two numbers
const add = (num1, num2) => {
  // Check if both arguments are numbers
  if (typeof num1 === "number" && typeof num2 === "number") {
    // Add the numbers
    const result = num1 + num2;
    
    // Return the sum
    return result;
  } else {
    // Throw an error if any of the arguments is not a number
    throw new Error("Error: arguments must be numbers");
  }
};

// Call the fetchData function with a given URL
fetchData("https://example.com/api")
  .then((data) => {
    // Print the data
    console.log(data);
  })
  .catch((error) => {
    // Handle any errors that occur
    console.log(error);
  });

// Create a class for a car object
class Car {
  constructor(make, model, year) {
    this.make = make;
    this.model = model;
    this.year = year;
  }

  // Create a method to calculate the age of the car
  calcAge() {
    // Get the current year
    const currentYear = currentDate.getFullYear();
    
    // Calculate the age of the car
    const age = currentYear - this.year;
    
    // Return the age
    return age;
  }
}

// Create an instance of the car class
const myCar = new Car("Toyota", "Camry", 2015);

// Call the calcAge method and store the result
const carAge = myCar.calcAge();

// Print the car's age
console.log(`My car is ${carAge} years old.`);
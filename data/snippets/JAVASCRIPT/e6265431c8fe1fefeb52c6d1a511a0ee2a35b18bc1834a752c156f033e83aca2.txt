/*
This is a multi-line comment in JavaScript. 
It can span over multiple lines and is used for documentation and notes. 
*/

// This is a single-line comment in JavaScript. It is used for short comments and is ignored by the compiler.

// Declaring a variable using the "let" keyword:
let myVariable = 5;

// Declaring a constant using the "const" keyword:
const PI = 3.14159;

// Declaring a string:
let greeting = "Hello World!";

// Declaring an array:
let fruits = ["apple", "banana", "orange"];

// Declaring an object with properties and methods:
let car = {
  model: "Tesla",
  year: 2020,
  isElectric: true,
  drive: function() {
    console.log("The " + this.model + " is driving.");
  }
}

// Using a for loop to iterate through an array:
for (let i = 0; i < fruits.length; i++) {
  console.log("I love " + fruits[i] + "s!");
}

// Using conditional statements:
if (car.isElectric) {
  console.log("This car is good for the environment!");
} else {
  console.log("This car is not good for the environment.");
}

// Defining a function:
function calculateArea(radius) {
  let area = PI * radius * radius;
  return area;
}

// Invoking/calling a function:
let circleArea = calculateArea(10);
console.log("The area of a circle with radius 10 is " + circleArea + " square units.");

// Using the "this" keyword to refer to the current object:
let myCar = {
  model: "Honda",
  year: 2015,
  drive: function() {
    console.log("The " + this.model + " is driving.");
  },
  upgradeModel: function(newModel) {
    this.model = newModel;
    console.log("The new model of the car is " + this.model + ".");
  }
}

// Invoking methods of an object:
myCar.drive();
myCar.upgradeModel("Toyota");

// Using classes and inheritance:
class Vehicle {
  constructor(make, model, year) {
    this.make = make;
    this.model = model;
    this.year = year;
  }

  drive() {
    console.log("The " + this.make + " " + this.model + " is driving.");
  }
}

class Car extends Vehicle {
  constructor(make, model, year, isElectric) {
    super(make, model, year);
    this.isElectric = isElectric;
  }

  displayEnvironmentImpact() {
    if (this.isElectric) {
      console.log("This car is good for the environment!");
    } else {
      console.log("This car is not good for the environment.");
    }
  }
}

// Creating an instance of a class:
let myCar = new Car("Tesla", "Model S", 2020, true);
myCar.drive();
myCar.displayEnvironmentImpact();
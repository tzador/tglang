/**
 * Function to merge two arrays into one
 * @param {Array} arr1 - The first array to be merged
 * @param {Array} arr2 - The second array to be merged
 * @param {Number} n - The length of the merged array
 * @returns {Array} - The merged array
 */
function mergeArrays(arr1, arr2, n) {
  // Initialize an empty array to store the merged array
  let mergedArr = [];
  // Create indexes for each array
  let i = 0;
  let j = 0;
  // Loop until one of the arrays reaches its limit
  while (i < arr1.length && j < arr2.length) {
    // Compare the elements at each index in both arrays
    // if the element in the first array is smaller, add it to the merged array and increment the first array index
    // if the element in the second array is smaller, add it to the merged array and increment the second array index
    if (arr1[i] < arr2[j]) {
      mergedArr.push(arr1[i]);
      i++;
    } else {
      mergedArr.push(arr2[j]);
      j++;
    }
  }
  // Once one of the arrays reaches its limit, add the remaining elements from the other array to the merged array
  while (i < arr1.length) {
    mergedArr.push(arr1[i]);
    i++;
  }
  while (j < arr2.length) {
    mergedArr.push(arr2[j]);
    j++;
  }
  // Return the merged array
  return mergedArr;
}

// Example inputs and outputs
console.log(mergeArrays([1, 2, 3], [4, 5, 6], 6)); // output: [1, 2, 3, 4, 5, 6]
console.log(mergeArrays([11, 22], [7, 8, 9], 5)); // output: [7, 8, 9, 11, 22]
console.log(mergeArrays([100, 200], [1, 2, 3], 5)); // output: [1, 2, 3, 100, 200]
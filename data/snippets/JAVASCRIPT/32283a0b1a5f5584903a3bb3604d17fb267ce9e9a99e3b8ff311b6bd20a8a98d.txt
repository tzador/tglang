// Find the largest palindrome made from the product of two 3-digit numbers

function largestPalindrome() {
    let largestPalindrome = 0;

    // Loop through all possible combinations of two 3-digit numbers
    for (let i = 999; i >= 100; i--) {
        for (let j = 999; j >= 100; j--) {

            // Calculate the product of the two numbers
            let product = i * j;

            // Convert the product to a string in order to check for palindrome
            let productString = product.toString();

            // Reverse the string using the split, reverse, and join functions
            let reversedString = productString.split("").reverse().join("");

            // Check if the product is equal to its reversed string
            if (productString === reversedString) {

                // If the product is larger than the current largest palindrome, update the largest palindrome
                if (product > largestPalindrome) {
                    largestPalindrome = product;
                }
            }
        }
    }

    // Return the final result, which is the largest palindrome
    return largestPalindrome;
}

console.log(largestPalindrome()); // Output: 906609
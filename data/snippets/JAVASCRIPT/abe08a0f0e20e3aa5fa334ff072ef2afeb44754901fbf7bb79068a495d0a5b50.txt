/**
 * This function sorts an array of numbers using bubble sort algorithm.
 * @param {Array} arr - The array to be sorted.
 * @return {Array} - The sorted array in ascending order.
 */
function bubbleSort(arr) {

    // flag to check if elements were swapped in inner loop
    let swapped;

    // loop through array n times (n = length of array)
    for (let i = 0; i < arr.length; i++) {

        // set swapped flag to false at the beginning of each iteration
        swapped = false;

        // loop through array from index 0 to (n-i-1)
        // since the largest element is already in place after each iteration
        for (let j = 0; j < arr.length - i - 1; j++) {

            // if current element is greater than next element
            if (arr[j] > arr[j + 1]) {
                // swap the elements
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
                // set swapped flag to true
                swapped = true;
            }
        }

        // if no elements were swapped, break out of the loop
        if (!swapped) {
            break;
        }
    }

    // return sorted array
    return arr;
}

// example usage
const unsortedArr = [4, 2, 6, 1, 7];
const sortedArr = bubbleSort(unsortedArr);
console.log(sortedArr); // output: [1, 2, 4, 6, 7]
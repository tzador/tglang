// This is a function that takes in an array and a callback function and returns a new flattened array.
const flattenArray = (arr, callback) => {
  // If array is empty, return empty array
  if (arr.length === 0) {
    return [];
  }

  // Initialize new flattened array
  let flattenedArray = [];

  // Loop through array
  for (let i = 0; i < arr.length; i++) {
    // If current element is an array, use iteration to add its elements to flattened array
    if (Array.isArray(arr[i])) {
      for (let j = 0; j < arr[i].length; j++) {
        flattenedArray.push(arr[i][j]);
      }
    }
    // Otherwise, pass current element to callback function
    else {
      callback(arr[i]);
    }
  }

  // Return flattened array
  return flattenedArray;
}

// Example usage: Flattening an array of nested arrays
let nestedArray = [1, 2, 3, [4, 5, [6, 7], 8], 9];
flattenArray(nestedArray, (num) => console.log(num));
// Output: 1, 2, 3, 4, 5, 6, 7, 8, 9
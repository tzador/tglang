//This code snippet implements a bubble sort algorithm in JavaScript

//Create a function that takes an array as an argument
function bubbleSort(arr) {

  //Initialize a variable to keep track of the array's size
  var length = arr.length;

  //Create a loop that will iterate through the array
  while (length > 0) {

    //Initialize another variable to keep track of the position of the last swap
    var lastSwapPosition = 0;

    //Create a nested loop that will compare each pair of elements in the array
    for (var i = 1; i < length; i++) {

      //Check if the current element is smaller than the previous element
      if (arr[i - 1] > arr[i]) {

        //Swap the elements
        var temp = arr[i - 1];
        arr[i - 1] = arr[i];
        arr[i] = temp;

        //Update the lastSwapPosition variable to the current position
        lastSwapPosition = i;
      }
    }

    //Update the array's size to exclude the last swapped element
    length = lastSwapPosition;
  }

  //Return the sorted array
  return arr;
}

//Create an array to be sorted
var arrayToSort = [5, 2, 4, 6, 1, 3];

//Print the unsorted array
console.log("Unsorted array: " + arrayToSort);

//Call the bubbleSort function with the array as an argument
var sortedArray = bubbleSort(arrayToSort);

//Print the sorted array
console.log("Sorted array: " + sortedArray);
/*
 * Fibonacci Recursive Function
 * Calculates the n-th number in the Fibonacci sequence
 * Uses memoization for optimized performance
 */

const memo = {}; // object to store already calculated values for memoization

// the recursive function takes in a number n and returns the n-th Fibonacci number
const fibonacci = (n) => {
    // if the value is in the memo object, return it
    if (memo[n]) {
        return memo[n];
    }

    // if n is either 0 or 1, return n
    if (n <= 1) {
        return n;
    }

    // otherwise, recursively call the function to calculate the Fibonacci number
    const result = fibonacci(n - 1) + fibonacci(n - 2);

    // store the result in the memo object for future use
    memo[n] = result;

    return result;
};

// calling the function with n = 10
const fibResult = fibonacci(10);

// print the result to the console
console.log(fibResult); // output -> 55
// Function to calculate the nth fibonacci number
function fibonacci(n) {
    let num1 = 0, num2 = 1, next;
    for(let i = 2; i <= n; i++) {
        next = num1 + num2;
        num1 = num2;
        num2 = next;
    }
    return num2;
}

// Function to check if a number is prime
function isPrime(num) {
    // Base cases
    if (num <= 1) return false;
    if (num <= 3) return true;

    // Check if num is divisible by 2 or 3
    if (num % 2 === 0 || num % 3 === 0) return false;

    // Loop through all numbers from 5 to the square root of num
    for (let i = 5; i * i <= num; i = i + 6) {
        // Check if num is divisible by i or i+2
        if (num % i === 0 || num % (i + 2) === 0) return false;
    }

    // If no factors found, num is prime
    return true;
}

// Function to find the nth prime number
function nthPrime(n) {
    let primeCounter = 0;
    let i = 1;

    while (primeCounter < n) {
        i++;
        if (isPrime(i)) {
            primeCounter++;
        }
    }
    return i;
}

// Calculate the 10th fibonacci number
const fibonacci10 = fibonacci(10);

// Find the 6th prime number
const prime6 = nthPrime(6);

// Print the results
console.log(`The 10th fibonacci number is: ${fibonacci10}`);
console.log(`The 6th prime number is: ${prime6}`);

// Output:

The 10th fibonacci number is: 55
The 6th prime number is: 13
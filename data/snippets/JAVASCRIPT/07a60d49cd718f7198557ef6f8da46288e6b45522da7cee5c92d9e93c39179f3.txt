// This program sorts a given array using the merge sort algorithm
// Function for merging two subarrays of arr[]
// First subarray is arr[l..m]
// Second subarray is arr[m+1..r]
function merge(arr, l, m, r) {
  // Initialize temporary arrays
  let left = new Array(m - l + 1);
  let right = new Array(r - m);

  // Copy data to left and right arrays
  for (let i = 0; i < left.length; i++) {
    left[i] = arr[l + i];
  }
  for (let j = 0; j < right.length; j++) {
    right[j] = arr[m + 1 + j];
  }

  // Merge the temporary arrays
  let i = 0; // Initial index of first subarray
  let j = 0; // Initial index of second subarray
  let k = l; // Initial index of merged subarray
  while (i < left.length && j < right.length) {
    if (left[i] <= right[j]) {
      arr[k] = left[i];
      i++;
    } else {
      arr[k] = right[j];
      j++;
    }
    k++;
  }

  // Copy remaining elements of left array if any
  while (i < left.length) {
    arr[k] = left[i];
    i++;
    k++;
  }

  // Copy remaining elements of right array if any
  while (j < right.length) {
    arr[k] = right[j];
    j++;
    k++;
  }
}

// Main function for merge sort
// arr[] is the array to be sorted, l is the starting index,
// r is the ending index
function mergeSort(arr, l, r) {
  if (l >= r) {
    // Returns recursively
    return;
  }
  let m = l + parseInt((r - l) / 2);
  // Sort first half
  mergeSort(arr, l, m);
  // Sort second half
  mergeSort(arr, m + 1, r);
  // Merge the sorted halves
  merge(arr, l, m, r);
}

// Example array to be sorted
let arr = [83, 45, 98, 23, 12, 37, 62, 5];

// Sort the array using the merge sort function
mergeSort(arr, 0, arr.length - 1);

// Print the sorted array
console.log(arr); // Output: [5, 12, 23, 37, 45, 62, 83, 98]
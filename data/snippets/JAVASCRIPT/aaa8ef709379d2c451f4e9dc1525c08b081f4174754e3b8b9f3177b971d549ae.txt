// This code snippet creates a function that sorts an array of numbers in ascending order using the bubble sort algorithm
function bubbleSort(array) {
    // Set a flag to track if any swaps were made in the current iteration
    let swapped;
    // Loop through the array, starting from the last element
    for (let i = array.length - 1; i > 0; i--) {
        // Set swapped flag to false for each iteration
        swapped = false;
        // Loop through the array up until the current element
        for (let j = 0; j < i; j++) {
            // Compare the current element with the next element
            if (array[j] > array[j + 1]) {
                // Swap the elements if the current element is larger than the next
                let temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
                // Set swapped flag to true to indicate a swap was made
                swapped = true;
            }
        }
        // If no swaps were made in the current iteration, the array is already sorted
        if (!swapped) {
            break;
        }
    }
    // Return the sorted array
    return array;
}

// Example usage:
let numbers = [5, 2, 8, 1, 3];
console.log(bubbleSort(numbers)); // Output: [1, 2, 3, 5, 8]
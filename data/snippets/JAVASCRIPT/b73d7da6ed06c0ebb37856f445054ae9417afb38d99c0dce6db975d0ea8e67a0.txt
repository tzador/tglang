// This function uses a callback to sort an array of numbers in ascending order 

function sortAscending(arr, callback) {	// defining the function with parameters: arr (array) and callback (function)
  let newArr = [...arr];	// creating a copy of the original array
  for (let i = 0; i < newArr.length; i++) {	// looping through the array
    for (let j = 0; j < newArr.length; j++) {	// looping through the array again
      if (callback(newArr[j], newArr[j + 1]) > 0) {	// comparing two adjacent elements using the callback function to determine the sorting order
        [newArr[j], newArr[j + 1]] = [newArr[j+1], newArr[j]];	// swapping the elements if the order is not correct
      }
    }
  }
  return newArr;	// returning the sorted array
}

// Example usage:

let myArray = [5, 2, 8, 3, 1, 9];	// creating an array of numbers
let sortedArray = sortAscending(myArray, function(a, b) { return a - b });	// calling the sortAscending function with the array and a callback function that sorts in ascending order
console.log(sortedArray);	// output: [1, 2, 3, 5, 8, 9]
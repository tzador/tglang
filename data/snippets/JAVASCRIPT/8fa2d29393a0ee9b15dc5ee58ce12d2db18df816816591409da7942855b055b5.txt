// This function calculates the factorial of a given number
function factorial(num) {
  let result = 1; // Initialize a variable to store the result
  for (let i = 2; i <= num; i++) { // Loop through numbers from 2 to the given number
    result *= i; // Multiply the result by each number in the loop
  }
  return result; // Return the final result
}

// This function checks if a number is prime
function isPrime(num) {
  if (num === 1) { // 1 is not a prime number
    return false;
  } else if (num === 2) { // 2 is a prime number
    return true;
  } else {
    for (let i = 2; i < num; i++) { // Loop through numbers from 2 to 1 less than the given number
      if (num % i === 0) { // If the given number is divisible by any number in the loop, it is not prime
        return false;
      }
    }
    return true; // If the loop completes without finding a divisor, the number is prime
  }
}

/*
  This function generates an array of prime numbers up to a given limit
  @param {number} limit - The maximum number in the array
  @returns {array} Array of prime numbers
*/
function generatePrimes(limit) {
  let primes = []; // Initialize an empty array to store the primes
  for (let i = 2; i <= limit; i++) { // Loop through numbers from 2 to the limit
    if (isPrime(i)) { // Call the isPrime function to check if the number is prime
      primes.push(i); // If it is prime, add it to the primes array
    }
  }
  return primes; // Return the array of primes
}

// Test cases:
console.log(factorial(5)); // Output: 120
console.log(factorial(10)); // Output: 3628800
console.log(isPrime(17)); // Output: true
console.log(isPrime(27)); // Output: false
console.log(generatePrimes(20)); // Output: [2, 3, 5, 7, 11, 13, 17, 19]
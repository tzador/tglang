const fetch = require('node-fetch');

// Defining a class
class Person {
  constructor(name, age, city) {
    this.name = name;
    this.age = age;
    this.city = city;
  }

  // Defining a method
  introduce() {
    return `Hello, my name is ${this.name}. I am ${this.age} years old and I live in ${this.city}.`;
  }
}

// Making a POST request
fetch('https://jsonplaceholder.typicode.com/posts', {
  method: 'POST',
  body: JSON.stringify({
    title: 'Lorem ipsum dolor sit amet',
    body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eu sem vel felis hendrerit gravida ut nec lorem.',
    userId: 5
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8'
  }
})
  .then(response => response.json()) // Converting response to JSON
  .then(json => console.log(json)) // Printing response data to console
  .catch(err => console.log(err)); // Catching errors

// Using arrow function
const add = (a, b) => a + b;

// Declaring a variable with let keyword
let num = 5;

// Looping through an array
const fruits = ['apple', 'banana', 'orange'];
for (let i = 0; i < fruits.length; i++) {
  console.log(fruits[i]);
}

// Creating a new array using spread operator
const moreFruits = [...fruits, 'grapes', 'pineapple'];

// Making an AJAX request using XMLHttpRequest
const xhr = new XMLHttpRequest();
xhr.onreadystatechange = function() {
  if (this.readyState == 4 && this.status == 200) {
    console.log(xhr.responseText);
  }
};
xhr.open('GET', 'https://jsonplaceholder.typicode.com/todos/1');
xhr.send();
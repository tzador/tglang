// Function to calculate the factorial of a number
function factorial(n) {
  if (n == 0 || n == 1)
    return 1;
  else
    return n * factorial(n - 1);
}

// Function to calculate the power of a number
function power(x, n) {
  if (n === 0)
    return 1;
  else
    return x * power(x, n - 1);
}

// Function to calculate the nth Fibonacci number
function fibonacci(n) {
  if (n == 0)
    return 0;
  else if (n == 1 || n == 2)
    return 1;
  else
    return fibonacci(n - 1) + fibonacci(n - 2);
}

// Function to find the maximum of two numbers
function max(a, b) {
  if (a > b)
    return a;
  else
    return b;
}

// Function to find the minimum of two numbers
function min(a, b) {
  if (a < b)
    return a;
  else
    return b;
}

// Function to return the absolute value of a number
function abs(num) {
  if (num < 0)
    return num * -1;
  else
    return num;
}

// Function to reverse a string
function reverseString(str) {
  if (str === "")
    return "";
  else
    return reverseString(str.substr(1)) + str.charAt(0);
}

// Function to sort an array in ascending order using bubble sort
function bubbleSort(arr) {
  let len = arr.length;
  for (let i = 0; i < len; i++) {
    for (let j = 0; j < len - i - 1; j++) {
      if (arr[j] > arr[j + 1]) {
        let temp = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
      }
    }
  }
  return arr;
}

// Function to merge two sorted arrays into one sorted array
function mergeArrays(arr1, arr2) {
  let merged = [];
  while (arr1.length && arr2.length) {
    if (arr1[0] < arr2[0]) {
      merged.push(arr1.shift());
    }
    else {
      merged.push(arr2.shift());
    }
  }
  return merged.concat(arr1).concat(arr2);
}

// Function to generate a random number between two given numbers
function randomBetween(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

// Object storing information of a person
let person = {
  name: "John Smith",
  age: 30,
  address: "123 Main Street",
  hobbies: ["hiking", "reading", "cooking"],
  profession: "teacher",
  getPersonInfo() {
    return `Name: ${this.name}\nAge: ${this.age}\nAddress: ${this.address}\nHobbies: ${this.hobbies.join(", ")}\nProfession: ${this.profession}`;
  },
  setAge(newAge) {
    this.age = newAge;
  },
  addHobby(hobby) {
    this.hobbies.push(hobby);
  }
};
// This is a function that takes in an array and sorts it using the bubble sort algorithm
function bubbleSort(array){
  // Set up a variable to keep track of whether a swap has occurred
  let swapped;
  
  // Loop through the array and compare each pair of elements
  for (let i = 0; i < array.length; i++){
    // Reset the swap variable at the beginning of each iteration
    swapped = false;
    for(let j = 0; j < array.length-i-1; j++){
      // If the current element is larger than the next element, swap them and set the swap variable to true
      if(array[j] > array[j+1]){
        [array[j], array[j+1]] = [array[j+1], array[j]];
        swapped = true;
      }
    }
    // If no swaps occurred in this iteration, the array is already sorted and we can break out of the loop
    if(!swapped){
      break;
    }
  }
  // Return the sorted array
  return array;
}
// Example usage:
let arr = [4, 7, 2, 1, 8, 3];

// Call the bubbleSort function to sort the array
bubbleSort(arr);

// Output: [1, 2, 3, 4, 7, 8]
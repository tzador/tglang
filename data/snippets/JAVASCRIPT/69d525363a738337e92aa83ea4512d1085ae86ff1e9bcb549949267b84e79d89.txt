function getFibonacciSeries(limit) {
  // This function calculates and returns the Fibonacci series up to a given limit.
  // It takes in an integer 'limit' to determine the length of the series.
  
  // Initialize an empty array to store the series
  let fibonacciSeries = [];
  
  // Check if the limit is less than 1 and return an error if true
  if (limit < 1) {
    throw new Error("Limit must be a positive integer.");
  }
  
  // Check if the limit is equal to 1 and return [0] if true
  if (limit === 1) {
    fibonacciSeries.push(0);
    return fibonacciSeries;
  }
  
  // Initialize variables for the first two values of the series
  let firstNum = 0;
  let secondNum = 1;
  
  // Add the first two values to the series array
  fibonacciSeries.push(firstNum);
  fibonacciSeries.push(secondNum);
  
  // Loop through the remaining indexes and calculate the Fibonacci sequence
  for (let i = 2; i < limit; i++) {
    // Calculate each new value by adding the previous two values
    let newNum = firstNum + secondNum;
    
    // Update the variables for the next iteration
    firstNum = secondNum;
    secondNum = newNum;
    
    // Add the new value to the series array
    fibonacciSeries.push(newNum);
  }
  
  // Return the completed Fibonacci series array
  return fibonacciSeries;
}

// Call the function and set the limit to 10
getFibonacciSeries(10);
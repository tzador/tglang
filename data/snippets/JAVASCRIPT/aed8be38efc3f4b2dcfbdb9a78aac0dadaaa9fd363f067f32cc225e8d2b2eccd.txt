// Declaring a class called 'Car' with two properties, 'make' and 'model'
class Car {
  constructor(make, model) {
    this.make = make;
    this.model = model;
  }

  // Method to display the make and model of the car
  displayCar() {
    console.log(`This car is a ${this.make} ${this.model}.`);
  }
}

// Creating an instance of the Car class, passing in the make and model as arguments
let myCar = new Car('Honda', 'Civic');

// Calling the displayCar method on the myCar instance to display the information
myCar.displayCar();

// Declaring a child class called 'ElectricCar' that extends the Car class
// It adds a property 'batteryCapacity' and a method 'charge' to display the battery capacity and charge the car
class ElectricCar extends Car {
  constructor(make, model, batteryCapacity) {
    super(make, model);
    this.batteryCapacity = batteryCapacity;
  }

  // Method to display the battery capacity of the electric car
  displayCapacity() {
    console.log(`This electric car has a battery capacity of ${this.batteryCapacity} kWh.`);
  }

  // Method to charge the electric car
  charge() {
    console.log('Charging the electric car...');
    // Simulating the charging process with a for loop
    for (let i = 1; i <= 10; i++) {
      console.log(`Charged ${i*10}%`);
    }
    console.log('Charged 100%!');
  }
}

// Creating an instance of the ElectricCar class, passing in the make, model, and battery capacity as arguments
let myElectricCar = new ElectricCar('Tesla', 'Model S', 100);

// Calling the displayCar method to display the make and model of the electric car
myElectricCar.displayCar();

// Calling the displayCapacity method to display the battery capacity of the electric car
myElectricCar.displayCapacity();

// Calling the charge method to charge the electric car
myElectricCar.charge();
/* This is a function that calculates the nth Fibonacci number using dynamic programming */

// Function to calculate the nth Fibonacci number
function fibonacci(n) {

    // Create a memoization table to store previously calculated Fibonacci numbers
    let memo = {};

    // Base cases for 0th and 1st Fibonacci numbers
    memo[0] = 0;
    memo[1] = 1;

    // Recursive function to calculate the nth Fibonacci number
    function fib(n) {

        // Check if nth Fibonacci number is already calculated and stored in memo table
        if (memo[n] !== undefined) {
            // If yes, return the stored value
            return memo[n];
        } else {
            // If not, recursively calculate the nth Fibonacci number
            memo[n] = fib(n - 1) + fib(n - 2);
            return memo[n];
        }
    }

    // Call the recursive function to calculate the nth Fibonacci number
    return fib(n);
}

// Print the 10th Fibonacci number
console.log(fibonacci(10)); // Output: 55
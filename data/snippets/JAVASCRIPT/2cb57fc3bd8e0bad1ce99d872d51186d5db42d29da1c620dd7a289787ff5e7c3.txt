// This function uses recursion to calculate the nth term in the Fibonacci sequence.

// First, we define the function and its parameters: `n` represents the term we want to calculate.
function fibonacci(n) {

    // Inside the function, we first check if the parameter `n` is either 0 or 1, as these are base cases for the sequence.
    if (n === 0 || n === 1) {

        // If so, we simply return the value of `n` as it represents the first two terms in the sequence.
        return n;
    } else {

        // If `n` is neither 0 nor 1, we use recursion to call the function again, this time with `n-1` and `n-2` as arguments.
        // This will continue until `n` becomes either 0 or 1, at which point the base case will be triggered and the function will return the value of `n`.
        return fibonacci(n-1) + fibonacci(n-2);
    }
}

// Finally, we call the function and pass in the desired term as an argument.
let nthTerm = fibonacci(8); // This will calculate the 8th term in the Fibonacci sequence, which is 21.

// We can now use `console.log()` to print the value of `nthTerm` to the console.
console.log(nthTerm); // Output: 21
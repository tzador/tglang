// Setting up a class
class Person {
  constructor(name, age) { // Constructor method
    this.name = name;
    this.age = age;
  }
  // Getter method
  get info() {
    return `${this.name} is ${this.age} years old.`
  }
  // Setter method
  set info(newInfo) {
    const infoArray = newInfo.split(' ');
    this.name = infoArray[0];
    this.age = Number(infoArray[1]);
  }
  // Method to calculate birth year
  calculateBirthYear() {
    const currentYear = new Date().getFullYear();
    const birthYear = currentYear - this.age;
    return birthYear;
  }
}

// Creating an instance of Person class
const person = new Person('John', 30);
// Using getter method
person.info; // Output: John is 30 years old
// Using setter method
person.info = 'Eva 25';
person.name; // Output: Eva
person.age; // Output: 25
// Calling calculateBirthYear method
person.calculateBirthYear(); // Output: 1996
// Creating a subclass of Person
class FamilyMember extends Person {
  constructor(name, age, relationship) {
    super(name, age);
    this.relationship = relationship;
  }
  // New method for family members
  introduce() {
    return `Hi, I am ${this.name}, ${this.info}. I am your ${this.relationship}.`;
  }
}

// Creating an instance of FamilyMember class
const familyMember = new FamilyMember('Susan', 35, 'sister');
// Using introduce method
familyMember.introduce(); // Output: Hi, I am Susan, 35 years old. I am your sister.
familyMember.calculateBirthYear(); // Output: 1986
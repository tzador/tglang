// Define a function that takes in two arrays and returns the intersection of those arrays
const getIntersection = (arr1, arr2) => {
  // Create a new object to store the unique values from arr1
  let values = {};

  // Loop through arr1 and add each value to the values object
  for (let i = 0; i < arr1.length; i++) {
    // Check if the value already exists in the object
    if (!values[arr1[i]]) {
      // If it doesn't, add it as a key with a value of 1
      values[arr1[i]] = 1;
    } else {
      // If it does, increment the value by 1 to indicate duplicate
      values[arr1[i]]++;
    }
  }

  // Create an empty array to store the intersection
  let intersection = [];

  // Loop through arr2 and check if each value exists in the values object
  for (let i = 0; i < arr2.length; i++) {
    if (values[arr2[i]] && values[arr2[i]] > 0) {
      // If it does, push it to the intersection array
      intersection.push(arr2[i]);
      // Decrement the value in the values object to account for duplicates
      values[arr2[i]]--;
    }
  }

  // Return the intersection array
  return intersection;
};

// Example usage
let array1 = [1, 3, 4, 6, 8];
let array2 = [3, 5, 8, 9, 11];

console.log(getIntersection(array1, array2)); // Output: [3, 8] (the shared values between the two arrays)
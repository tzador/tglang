// This function takes in two numbers and returns the result of their addition
const add = (num1, num2) => {
    return num1 + num2;
}

// This function takes in an array of numbers and returns the sum of all elements in the array
const sumArray = (arr) => {
    let sum = 0;
    for (let i = 0; i < arr.length; i++) {
        sum += arr[i];
    }
    return sum;
}

// An object that holds information about a person
const person = {
    name: "John",
    age: 25,
    profession: "Software Engineer",
    getDetails: function() {
        return `${this.name} is ${this.age} years old and works as a ${this.profession}`;
    }
}

// A class representing a book with properties title, author, and year
class Book {
    constructor(title, author, year) {
        this.title = title;
        this.author = author;
        this.year = year;
    }

    // A method that returns the book's information in a formatted string
    getBookInfo() {
        return `Title: ${this.title}\nAuthor: ${this.author}\nYear: ${this.year}`;
    }
}

// An array of book objects
const books = [
    new Book("The Great Gatsby", "F. Scott Fitzgerald", 1925),
    new Book("Pride and Prejudice", "Jane Austen", 1813),
    new Book("To Kill a Mockingbird", "Harper Lee", 1960)
]

// A higher-order function that takes in an array and a function, and returns a new array with each element transformed by the given function
const map = (arr, func) => {
    const newArr = [];
    for (let i = 0; i < arr.length; i++) {
        newArr.push(func(arr[i]));
    }
    return newArr;
}

// An arrow function that squares a number
const square = num => {
    return num * num;
}

// An array of numbers
const numbers = [1, 2, 3, 4];

// Using the higher-order function to square each number in the array
const squaredNumbers = map(numbers, square);

// Printing the squared numbers
console.log(squaredNumbers); // Output: [1, 4, 9, 16]
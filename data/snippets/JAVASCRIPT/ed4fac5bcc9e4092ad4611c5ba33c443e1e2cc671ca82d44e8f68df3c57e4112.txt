// This code snippet uses the ES6 class syntax to create a class called Animal
class Animal {
  constructor(name, age, species) { // constructor method takes in the animal's name, age, and species
    this.name = name; // assigns the given name to the animal's 'name' property
    this.age = age; // assigns the given age to the animal's 'age' property
    this.species = species; // assigns the given species to the animal's 'species' property
  }

  eat(food) { // method that takes in a food parameter and outputs a string
    console.log(`${this.name} the ${this.species} is eating ${food}!`);
  }

  sleep() { // method that outputs a string
    console.log(`${this.name} the ${this.species} is sleeping now.`);
  }

  static getAverageAge(animals) { // static method that takes in an array of animals and calculates the average age
    let total = 0;
    for (let i = 0; i < animals.length; i++) { // loops through each animal in the array
      total += animals[i].age; // adds each animal's age to the total
    }
    return total / animals.length; // calculates and return the average age
  }

  get description() { // getter method that outputs a string
    return `${this.name} is a ${this.age} year old ${this.species}.`;
  }

  set description(description) { // setter method that takes in a string and updates the animal's description
    this.description = description;
  }
}

// create instances of Animal class with different properties
let lion = new Animal('Simba', 5, 'lion');
let giraffe = new Animal('George', 10, 'giraffe');
let panda = new Animal('Bao Bao', 3, 'panda');

giraffe.eat('leaves'); // outputs "George the giraffe is eating leaves!"
panda.sleep(); // outputs "Bao Bao the panda is sleeping now."

// call static method to calculate the average age of the three animals
console.log(Animal.getAverageAge([lion, giraffe, panda])); // outputs 6 (since (5 + 10 + 3) / 3 = 6)

lion.description = "King of the jungle."; // updates lion's description
console.log(lion.description); // outputs "King of the jungle."
// This is a complex function that sorts an array of numbers in descending order
// Input: numbersArray (array) - an array of numbers to be sorted
// Output: sortedArray (array) - the sorted array of numbers in descending order
const descendingSort = (numbersArray) => {
  // check if the input is an array
  if (!Array.isArray(numbersArray)) throw new Error('Input must be an array')

  // check if the array is empty
  if (numbersArray.length === 0) return numbersArray;

  // initialize the sorted array with the first element of the input array
  let sortedArray = [numbersArray[0]];

  // loop through the input array starting from the second element
  for (let i = 1; i < numbersArray.length; i++) {
    // set a flag variable to keep track of whether the current number has been inserted or not
    let inserted = false;
    // loop through the sorted array in reverse order
    for (let j = sortedArray.length - 1; j >= 0; j--) {
      // if the current number is larger than the number in the sorted array at index j, insert it before that number
      if (numbersArray[i] > sortedArray[j]) {
        sortedArray.splice(j, 0, numbersArray[i]);
        inserted = true;
        break;
      }
    }
    // if the number has not been inserted yet, add it at the end of the sorted array
    if (!inserted) sortedArray.push(numbersArray[i]);
  }
  // return the sorted array in descending order
  return sortedArray;
};

// Example:
descendingSort([5, 2, 7, 1, 9, 3]) // output: [9, 7, 5, 3, 2, 1]
// This function checks if a number is prime
const isPrime = num => {
  // Two is the only even prime number
  if (num === 2) return true;
  // Numbers less than 2 are not prime
  if (num < 2) return false;
  // Check if number is divisible by any number from 2 to its sqrt
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0) {
      return false;
    }
  }
  // If no divisors found, number is prime
  return true;
}

// This function generates an array of prime numbers up to a given limit
const sieveOfEratosthenes = limit => {
  // Create a boolean array with all values set to true
  let primes = new Array(limit + 1).fill(true);
  // Set 0 and 1 to false, these are not prime numbers
  primes[0] = false;
  primes[1] = false;
  // Loop through numbers 2 to sqrt of limit
  for (let i = 2; i <= Math.sqrt(limit); i++) {
    // If the number is prime, set all of its multiples to false in the boolean array
    if (isPrime(i)) {
      for (let j = i * i; j <= limit; j += i) {
        primes[j] = false;
      }
    }
  }
  // Generate an array containing only the prime numbers
  let primeNumbers = [];
  for (let i = 0; i < primes.length; i++) {
    if (primes[i]) {
      primeNumbers.push(i);
    }
  }
  // Return the array of prime numbers
  return primeNumbers;
}

// Generate an array of prime numbers up to a limit of 100
const primeNumbers = sieveOfEratosthenes(100);

// Print the array to the console
console.log(primeNumbers); // Output: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
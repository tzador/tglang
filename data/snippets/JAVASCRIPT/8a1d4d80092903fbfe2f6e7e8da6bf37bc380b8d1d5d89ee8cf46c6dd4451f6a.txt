// Define a class called "Car" with a constructor function that takes in parameters "brand", "model", and "color"
class Car {
    // Constructor function that sets the brand, model, and color properties of the car
    constructor(brand, model, color) {
        // "this" refers to the current instance of the class, allows us to set the properties of the specific car being created
        this.brand = brand;
        this.model = model;
        this.color = color;
    }

    // Method called "drive" that outputs a string stating the car's brand, model, and color, and the action of driving
    drive() {
        // Utilize template literals to dynamically insert the car's properties into the output string
        console.log(`Driving the ${this.color} ${this.brand} ${this.model}...`);
    }

    // Method called "stop" that outputs a string stating the car's brand, model, and color, and the action of stopping
    stop() {
        console.log(`Stopping the ${this.color} ${this.brand} ${this.model}...`);
    }
}

// Create an instance of the "Car" class with the brand "Tesla", model "Model 3", and color "red"
let myCar = new Car("Tesla", "Model 3", "red");

// Call the "drive" method of the car object, which will output the string defined in the "drive" method
myCar.drive(); // Output: Driving the red Tesla Model 3...

// Call the "stop" method of the car object, which will output the string defined in the "stop" method
myCar.stop(); // Output: Stopping the red Tesla Model 3...
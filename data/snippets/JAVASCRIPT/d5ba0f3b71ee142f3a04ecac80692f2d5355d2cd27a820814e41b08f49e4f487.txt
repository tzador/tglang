// Define a recursive function that takes in an array and a function
function recursiveFunc(inputArray, func) {
   // Declare a new array to store the results
   let resultsArray = [];

   // Loop through the input array
   for (let i = 0; i < inputArray.length; i++) {
      // Check if the current element is an array
      if (Array.isArray(inputArray[i])) {
         // If it is, recursively call the function on the current element
         resultsArray.push(recursiveFunc(inputArray[i], func));
      } else {
         // If it's not, apply the function on the element and add it to the results array
         resultsArray.push(func(inputArray[i]));
      }
   }

   // Return the results array
   return resultsArray;
}

// Define a function that squares a number
function square(num) {
   // Return the square of the input number
   return num ** 2;
}

// Define an array with nested arrays
let input = [1, [2, 3], [4, [5, 6, 7]]];

// Call the recursive function on the input array, passing in the square function
let output = recursiveFunc(input, square);

// Console log the output
console.log(output); // Output: [1, [4, 9], [16, [25, 36, 49]]]
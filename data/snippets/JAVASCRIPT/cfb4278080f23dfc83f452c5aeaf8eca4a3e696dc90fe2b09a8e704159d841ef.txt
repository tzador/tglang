// Declaring script variables
let x = 1; // Assigning value 1 to x variable
var y = 2; // Assigning value 2 to y variable
const z = 3; // Assigning value 3 to z variable

// Conditional statement
if (x < y) { // If x is less than y
    console.log("x is less than y"); // Print this message
} else if (y < x) { // If y is less than x 
    console.log("y is less than x"); // Print this message
} else { // If both conditions are false 
    console.log("x and y are equal"); // Print this message
}

// Looping statement
for (let i = 1; i <= 10; i++) { // Starting from 1, looping until i is equal to or less than 10, incrementing i by 1 each time
    console.log(i); // Print the value of i
}

// Function
function add(num1, num2) { // Declaring a function named 'add' with two parameters
    return num1 + num2; // Returning the sum of the two parameters
}

// Calling the function and storing the returned value in a variable
let sum = add(5, 10);

// Object
const person = { // Creating an object named 'person'
    name: "John", // With a 'name' property with the value "John"
    age: 25, // And an 'age' property with the value 25
    hobbies: ["reading", "cooking", "coding"], // And a 'hobbies' property with an array value
    printInfo: function() { // And a method named 'printInfo'
        console.log(`${this.name} is ${this.age} years old. His hobbies include ${this.hobbies.join(', ')}.`); // Printing a message using template literals and the properties of the object
    }
};

person.printInfo(); // Calling the 'printInfo' method of the 'person' object

// Class
class Animal { // Creating a class named 'Animal'
    constructor(name, age) { // With a constructor method that takes in 'name' and 'age' parameters
        this.name = name; // Assigning the 'name' parameter to the 'name' property of the object
        this.age = age; // Assigning the 'age' parameter to the 'age' property of the object
    }

    // Method of the class
    eat() { // Declaring a method named 'eat'
        console.log(`${this.name} is eating.`); // Printing a message using template literals and the 'name' property
    }
}

// Creating an instance of the 'Animal' class
const cat = new Animal("Fluffy", 3); // Creating an object named 'cat' using the 'Animal' class and passing in arguments for the 'name' and 'age' properties

cat.eat(); // Calling the 'eat' method of the 'cat' object
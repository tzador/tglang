// This function checks if a number is prime
function isPrime(num) {
    // Returns true if num is equal to 2, otherwise runs the code inside the block
    if (num === 2) return true;
    // Returns false if num is less than 2 or is an even number
    if (num < 2 || num % 2 === 0) return false;
    
    // Loops through odd numbers from 3 to the square root of num
    for (let i = 3; i <= Math.sqrt(num); i+=2) {
        // If num is divisible by any of the odd numbers, return false
        if (num % i === 0) return false;
    }
    // If the loop finishes without returning false, num is prime so return true
    return true;
}

// This function generates an array of prime numbers up to a given limit
function generatePrimes(limit) {
    // An empty array to store the prime numbers
    const primes = [];
    // A counter for the current number being checked
    let num = 2;

    // Loop until the current number reaches the limit
    while (num <= limit) {
        // If the current number is prime, add it to the primes array
        if (isPrime(num)) primes.push(num);
        // Increment the current number by 1
        num++;
    }

    // Return the array of prime numbers
    return primes;
}

// Example usage of the generatePrimes function
console.log(generatePrimes(50)); // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]
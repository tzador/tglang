// Declaring a class named "Person" with constructor function
class Person {
  constructor(name, age, gender) {
    this.name = name; // Initializing class property "name" with the value passed in the constructor
    this.age = age; // Initializing class property "age" with the value passed in the constructor
    this.gender = gender; // Initializing class property "gender" with the value passed in the constructor
  }

  // Creating a method named "printDetails" 
  // which will print out the person's name, age and gender in a template string
  printDetails() {
    console.log(`Name: ${this.name}, Age: ${this.age}, Gender: ${this.gender}`);
  }

  // Creating a static method named "changeName" 
  // which takes in a new name as a parameter and changes the name property of the class
  static changeName(newName) {
    this.name = newName; // Updating the name property with the new name passed in
    console.log("Name changed successfully!");
  }
}

// Instantiating an instance of the "Person" class with the name "John", age 25, and gender "male"
const john = new Person("John", 25, "male");

// Calling the "printDetails" method on the "john" instance to print out his details
john.printDetails(); // Output: Name: John, Age: 25, Gender: male

// Calling the "changeName" static method on the "Person" class and passing in a new name
Person.changeName("Bob"); // Output: Name changed successfully!

// Calling the "printDetails" method on the "john" instance again to see the updated name
john.printDetails(); // Output: Name: Bob, Age: 25, Gender: male
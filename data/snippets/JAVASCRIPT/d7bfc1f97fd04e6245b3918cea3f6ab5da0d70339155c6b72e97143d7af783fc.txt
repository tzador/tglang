/**
 * This function calculates the nth root of a given number
 * @param {number} num - the number to calculate the root from
 * @param {number} n - the degree of root
 * @returns {number} the calculated nth root of the given number
 */

function nthRoot(num, n) {
  // check if the input is valid
  if (typeof num !== "number" || typeof n !== "number") {
    console.log("Invalid input");
    return null;
  }

  // check if n is greater than 1
  if (n < 2) {
    console.log("n must be greater than 1");
    return null;
  }

  // initial guess for the root using logarithms
  let guess = Math.exp(Math.log(num) / n);

  // improve the guess using the Newton's method
  let error = num - Math.pow(guess, n);
  let tolerance = 1e-15;
  while (error > tolerance) {
    // calculate the derivative at the current guess
    let derivative = n * Math.pow(guess, n - 1);

    // calculate the current error
    error = num - Math.pow(guess, n);

    // update the guess using the Newton's method formula
    guess = guess + error / derivative;
  }

  // return the calculated nth root
  return guess;
}

// example usage
// calculates the 5th root of 32
console.log(nthRoot(32, 5));
/**
 * This function calculates the nth Fibonacci number using dynamic programming
 * @param {number} n - the nth Fibonacci number to calculate
 * @returns {number} - the value of the nth Fibonacci number
 */
function fibonacci(n) {
  if (n < 2) { // base case, return the value of n
    return n;
  } else { // use dynamic programming to improve efficiency
    let fibs = [0, 1]; // initialize array to store values of previous Fibonacci numbers
    for (let i = 2; i <= n; i++) {
      // calculate the value of the current Fibonacci number by adding the values of the previous two
      fibs[i] = fibs[i - 1] + fibs[i - 2]; 
    }
    // return the value of the nth Fibonacci number
    return fibs[n];
  }
}

// example usage
let n = 6;
console.log(`The ${n}th Fibonacci number is ${fibonacci(n)}`); // output: The 6th Fibonacci number is 8
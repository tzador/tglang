// This is a function that sorts an array of numbers in ascending order

const quickSort = (arr) => { // defining the function and passing in the array as an argument
  if (arr.length <= 1) { // base case: if the length of the array is 1 or less, return the array
    return arr;
  }

  const pivot = arr[arr.length - 1]; // setting the pivot as the last element in the array
  const leftArr = []; // creating an empty array for numbers less than the pivot
  const rightArr = []; // creating an empty array for numbers greater than the pivot

  for (let i = 0; i < arr.length - 1; i++) { // iterating through the array
    if (arr[i] < pivot) { // if the current element is less than the pivot, push it to the left array
      leftArr.push(arr[i]);
    } else { // otherwise, push it to the right array
      rightArr.push(arr[i]);
    }
  }

  return [...quickSort(leftArr), pivot, ...quickSort(rightArr)]; // recursively calling the function on the left and right arrays, and combining them with the pivot in between
}

const unsortedArr = [5, 2, 1, 7, 3];
const sortedArr = quickSort(unsortedArr); // calling the quickSort function on an unsorted array
console.log(sortedArr); // output: [1, 2, 3, 5, 7]
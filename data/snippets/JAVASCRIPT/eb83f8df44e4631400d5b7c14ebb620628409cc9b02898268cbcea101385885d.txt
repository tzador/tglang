function model (data) {
  // create a new Map object to store data
  let map = new Map();
  // loop through data
  for (let i = 0; i < data.length; i++) {
    // check if data is an object
    if (typeof data[i] === 'object') {
      // loop through each key-value pair in object
      for (let key in data[i]) {
        // check if key already exists in map
        if (map.has(key)) {
          // increment the value associated with the key by 1
          map.set(key, map.get(key) + 1);
        } else {
          // add key to map and set value to 1
          map.set(key, 1);
        }
      }
    }
  }
  // sort the map by value in descending order
  let sortedMap = new Map([...map.entries()].sort((a, b) => b[1] - a[1]));
  // create an array to store most frequent keys
  let mostFrequentKeys = [];
  // get the first (most frequent) key-value pair from sorted map
  let [key, value] = [...sortedMap.entries()][0];
  // add first key to most frequent keys array
  mostFrequentKeys.push(key);
  // loop through remaining entries in sorted map
  for (let [k, v] of sortedMap) {
    // check if value is equal to first value from sorted map
    if (v === value) {
      // add key to most frequent keys array
      mostFrequentKeys.push(k);
    } else {
      // break out of loop
      break;
    }
  }
  // return array of most frequent keys
  return mostFrequentKeys;
}
PRO decompose, matrix, n_columns, n_rows, column_mean, result

;---PURPOSE:
;   Decompose a matrix into its column mean values and the resulting matrix

;---INPUT:
;   matrix - the input matrix to be decomposed
;   n_columns - the number of columns in the matrix
;   n_rows - the number of rows in the matrix

;---OUTPUT:
;   column_mean - the mean values of each column in the matrix
;   result - the resulting matrix after decomposing

;---ERROR HANDLING:
;   If the input matrix does not have the same number of columns and
;   rows as specified, an error is thrown.

;---EXAMPLE:
;   a = [[1, 2, 3], [4, 5, 6]]
;   n_col = 3
;   n_rows = 2
;   decompose, a, n_col, n_rows, column_mean, result

;---ALGORITHM:
;   1. Check if the input matrix has n_rows and n_columns
;   2. If not, throw an error
;   3. Calculate the mean values of each column and store them in 'column_mean'
;   4. Subtract the mean values from each element in the matrix to get the resulting matrix 'result'
;   5. Return 'column_mean' and 'result'

PRO decompose, matrix, n_columns, n_rows, column_mean, result

; Check if matrix has the same number of columns and rows as specified
IF SIZE(matrix, /COLUMNS) NE n_columns OR SIZE(matrix, /ROWS) NE n_rows THEN BEGIN

    ; Throw an error if sizes do not match
    MESSAGE, 'Input matrix does not have the specified number of columns and rows!', /EXCEPTION
    
ENDIF

; Calculate the mean values of each column
FOR i=0, n_columns-1 DO BEGIN

    ; Initialize column sum to 0
    col_sum = 0
    
    ; Loop through each row in the column
    FOR j=0, n_rows-1 DO BEGIN
        
        ; Add the current element to the column sum
        col_sum = col_sum + matrix[j, i]
        
    ENDFOR
    
    ; Calculate the mean value of the current column
    column_mean[i] = col_sum / n_rows
    
ENDFOR

; Subtract the mean values from each element in the matrix to get the resulting matrix
result = matrix - column_mean

; Return column mean and resulting matrix
RETURN, column_mean, result

END
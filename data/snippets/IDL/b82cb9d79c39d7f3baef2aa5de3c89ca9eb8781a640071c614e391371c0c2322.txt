; This program creates a function that calculates the coefficients of a quadratic equation
; Define function
FUNCTION quadratic_eqn, x_values, coefficients, degree 
  ; x_values: array of x values
  ; coefficients: array of coefficients for quadratic equation
  ; degree: degree of the quadratic equation

  ; number of x values
  nx = N_ELEMENTS(x_values)
  ; check if degree is 2
  IF degree NE 2 THEN ERROR, 'Degree of the quadratic equation must be 2.'
  ; initialize a matrix to store x values with degree as rows and x values as columns
  x_matrix = FLTARR(deg+1, nx)
  ; populate first row of x_matrix with 1's
  x_matrix[0, *] = 1
  ; populate second row of x_matrix with x values
  x_matrix[1, *] = x_values
  ; populate third row of x_matrix with x values squared
  x_matrix[2, *] = x_values^2
  ; initialize a matrix to store y values with degree as rows and y values as columns
  y_matrix = FLTARR(deg+1, nx)
  ; populate matrix with y values
  y_matrix[0, *] = coefficients[0] + coefficients[1]*x_values + coefficients[2]*x_values^2
  ; calculate the inverse of x_matrix
  x_inv = INVERT(x_matrix)
  ; multiply inverse of x_matrix with y_matrix
  x_inv_times_y = MMULT(x_inv, y_matrix)
  ; extract coefficients from the result
  a = x_inv_times_y[2, 0]
  b = x_inv_times_y[1, 0]
  c = x_inv_times_y[0, 0]
  ; return coefficients
  RETURN, [a, b, c]
END
;; This code snippet shows a function in IDL that creates a contour plot from data points given the x and y coordinates.
;; The contour plot is then overlaid with a scatter plot showing the data points.

;; Initialize the function, taking in two arrays of x and y coordinates
FUNCTION create_contour_plot, data_x, data_y
  ;; Create a contour plot using the data points
  contour_plot = CONTOUR(data_x, data_y, /FILL, /NOERASE, XRANGE=[-10,5], YRANGE=[-5,10], NOBORDER=1)
  ;; Set the color levels of the contour to a rainbow scale, starting from blue to red
  contour_plot.COLOR = [9,8,7,6,5,4,3,2,1,0]
  ;; Suppress the X and Y axes, as well as the default plot title
  contour_plot.xaxis.visible = 0
  contour_plot.yaxis.visible = 0
  contour_plot.title.visible = 0

  ;; Plot the data points as a scatter plot on top of the contour
  scatter_plot = PLOT(data_x, data_y, /NODATA, PSYM=8, COLOR=2, SYMSIZE=1.5, YRANGE=[-5,10], /OVERPLOT)

  ;; Add annotations to the plot, including a title and axes labels
  title_text = STRJOIN(['Contour Plot with Data Points', STYLE={BOLD:1,SUBSCRIPT:1,SYMBOLS:1,FONT_SIZE:16}])
  contour_plot_addtext, title_text, 0, 12, /DATA, ALIGNMENT=0.5, BORDER=2, FILL_BACKGROUND=1, COLOR=0
  contour_plot_addtext, 'X Coordinate', -12, 4.5, /DATA, ALIGNMENT=0.5, BOLD=1, COLOR=0
  contour_plot_addtext, 'Y Coordinate', 0, 14, /DATA, ALIGNMENT=0.5, BOLD=1, COLOR=0

  ;; Return the contour plot as the output of the function
  RETURN, contour_plot
END

;; Call the function with an example set of data points
contour_plot = create_contour_plot(FINDGEN(100) - 5, SIN(FINDGEN(100) + 1))
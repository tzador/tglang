pro multitask, func, arg1, arg2
;; This is a procedure called 'multitask' with inputs 'func', 'arg1', and 'arg2'
;; It will execute the function 'func' with the given arguments concurrently

   On Error, err_handler
   ;; Check for any errors and call the 'err_handler' function if needed

   ;; Create a task manager to manage and execute the concurrent tasks
   my_manager = Obj_New("IDLffTaskManager")

   ;; Spawn an instance of the 'func' function with the provided arguments
   my_task = Obj_New("IDLffTask", func, arg1, arg2)

   ;; Add the task to the task manager's task list
   Obj_Add(my_manager->Tasks, my_task)

   ;; Start the task manager to execute the tasks concurrently
   Obj_Put(my_manager, /Start)

   ;; Wait until all tasks are completed
   Obj_Assign, my_manager, /Wait

   ;; Get the status of all tasks
   status = Obj_Get(my_manager, /Status)

   ;; Delete the task manager and tasks
   Obj_Destroy, my_manager

   return, status

;; Define an error handling function
err_handler:
   print, strtrim(!err) + !err_string
   ;; Print the specific error message and code

end
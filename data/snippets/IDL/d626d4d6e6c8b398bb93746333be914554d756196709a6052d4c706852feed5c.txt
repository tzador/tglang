pro bin_avg, data, binsize, avgs, count
; The purpose of this procedure is to bin data into equal-sized bins and calculate
; the average value in each bin and the count of data points in each bin.

; Parameters:
;   data: input, the data to be binned
;   binsize: input, the size of each bin
;   avgs: output, the array containing the average value in each bin
;   count: output, the array containing the count of data points in each bin
; Examples:
;   data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
;   binsize = 2
;   avgs = [1.5, 4.5, 7.5, 10.5]
;   count = [2, 2, 2, 4]

; Initialize variables
n = n_elements(data)   ; Get the number of elements in the data array
n_bins = n/binsize     ; Calculate the number of bins
remainder = n mod binsize   ; Calculate the remainder when dividing data into bins
avgs = fltarr(n_bins)   ; Create an array to store the average values
count = lonarr(n_bins)  ; Create an array to store the count of data points

; Loop through the bins
for i=0L, n_bins-1 do begin
  ; Calculate the starting and ending index for each bin
  start = i*binsize
  end = (i+1)*binsize-1 
  ; Check if the current bin is the last one
  if i == n_bins-1 then end = end + remainder 
  ; Calculate the average value in each bin by summing up the values and dividing by the bin size
  avgs[i] = total(data[start:end+1])/binsize
  ; Count the number of data points in each bin by using the index range
  count[i] = end - start + 1
endfor

; Optional: Print the results
print, 'Average values in each bin:'
print, avgs
print, 'Count of data points in each bin:'
print, count

end
; This code uses the `FOR` loop to generate a 2D array of random numbers and then uses `PRINT` and `TOTAL` functions to calculate the sum of each column.

PRO COL_SUM, ARR ; defining procedure with 2 parameters, a 2D array and the number of columns
  IF (N_PARAMS() NE 2) THEN BEGIN ; checking for correct number of parameters
    MESSAGE, 'Invalid number of parameters. Required parameters: array and number of columns.', /CONTINUE
    RETURN ; exiting procedure
  ENDIF

  ; declaring variables
  COL_TOTAL = FLTARR(N_ELEMENTS(ARR))
  COL_AVG = FLTARR(N_ELEMENTS(ARR))
  COL_MIN = FLTARR(N_ELEMENTS(ARR))
  COL_MAX = FLTARR(N_ELEMENTS(ARR))

  ; loop through columns
  FOR i=0, n_elements(ARR,1)-1 DO BEGIN
    ; loop through rows
    FOR j=0, n_elements(ARR,2)-1 DO BEGIN
      ; generate random number between 0 and 1
      ARR[i,j] = RANDOMU(seed, MAX = 1)
    ENDFOR
    ; print column values
    PRINT, ARR(*,i)
    ; calculate sum of column values
    COL_TOTAL[i] = TOTAL(ARR(*,i))
    ; calculate average of column values
    COL_AVG[i] = MEAN(ARR(*,i))
    ; calculate minimum and maximum of column values
    COL_MIN[i] = MIN(ARR(*,i))
    COL_MAX[i] = MAX(ARR(*,i))
  ENDFOR
  ; returning the calculated values
  RETURN, COL_TOTAL, COL_AVG, COL_MIN, COL_MAX
END

; example usage
RAND_ARR = FLTARR(5,3) ; initializing a 5x3 array
COL_SUM, RAND_ARR ; calling the procedure to calculate column sums, averages, min, and max
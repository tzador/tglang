;; Array function in IDL to calculate polynomial coefficients using least squares fitting method
x = [1, 2, 3, 4, 5] ;; input data points
y = [3, 4, 6, 8, 10] ;; input data points
n = 5 ;; number of data points
m = 2 ;; polynomial order
;; create arrays to store terms and coefficients
mat = fltarr(n,m+1)
coeffs = fltarr(m+1)

;; calculate terms of the design matrix
for i=0, m do begin
	for j=0, m do begin
		if i+j eq 0 then mat(*,i) = float(n)
		else mat(*,i) = mat(*,i) + (x(*))^(i+j)
	endfor
endfor

;; calculate right hand side vector
rhs = fltarr(m+1)
for i=0, m do begin
	rhs(i) = total(y*(x^i))
endfor

;; solve for coefficients using Gauss-Jordan elimination
for j=0, m do begin
	pivot = mat(j,j)
	for i=0, m do begin
		if i ne j then begin
			factor = mat(i,j)/pivot
			for k=0, m do begin
				mat(i,k) = mat(i,k) - factor*mat(j,k)
			endfor
			rhs(i) = rhs(i) - factor*rhs(j)
		endif
	endfor	
endfor

;; normalize coefficients with respect to first term
coeffs = rhs/mat(0,0)

;; print out polynomial equation
equation = ""
for i=0, m do begin
	equation = equation + string(coeffs(i)) + "x^" + string(i) + " + "
endfor

print, "The polynomial equation is: "
print, strmid(equation, 0, strlen(equation)-2)
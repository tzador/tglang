; This is a comment in IDL

; Declare an integer variable
integer :: num

; Assign a value to the variable
num = 5

; Declare a string variable
string :: message

; Concatenate the string variable with the integer variable
message = 'The value of num is: ' + num

; Print the message
print, message

; Create a function that calculates the area of a circle
function getArea, radius

	; Declare a constant pi
	constant :: pi = !dpi

	; Calculate the area using the formula A = Ï€r^2
	area = pi * (radius ^ 2)

	; Return the calculated area
	return, area
end

; Call the function with a radius value of 10
; This will print the area of the circle with radius 10
print, getArea(10)

; Create a structure called 'person' with three fields - name, age, and occupation
struct person, name, age, occupation

; Create an instance of the structure
; Set values for the fields
person1 = person('John Doe', 35, 'Software Engineer')

; Print the values of the fields
print, person1.name
print, person1.age
print, person1.occupation

; Define an array and initialize it with values
array = [1, 2, 3, 4, 5]

; Loop through the array and print the values
for i = 0, 4 do begin

	; Multiply each value by 2
	array[i] = array[i] * 2

	; Print the result
	print, array[i]
endfor

; Create a plot with title and axis labels
; Define the independent and dependent variables
x = findgen(100) ; Independent variable
y = sin(x) ; Dependent variable

; Create a window for the plot
window, title='Sine Plot', xtitle='x', ytitle='sin(x)', /pixmap

; Plot the data
plot, x, y

; Add grids
oplot, x, y, /grid

; Add symbols to the data points
oplot, x, y, /overplot, symbol=2, color=33

; Save the plot as a png file
save_png, 'sine_plot.png'
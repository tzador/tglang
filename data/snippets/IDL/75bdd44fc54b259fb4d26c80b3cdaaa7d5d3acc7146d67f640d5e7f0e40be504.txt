function interpolate1D, x, y, xi, yi, npts
;
; This function uses linear interpolation to calculate values at points
; specified by the vector xi from a set of points (x, y).
; 
; Parameters:
; x - The independent variable, typically a vector.
; y - The dependent variable, typically a vector.
; xi - The set of points at which to interpolate y, typically a vector.
; yi - The output vector of interpolated values.
; npts - The number of points to interpolate.
;
; Example:
; To find the interpolated value at xi = 2, from the points (x,y):
; x = [1, 3, 5, 7, 9]
; y = [2, 6, 10, 14, 18]
; xi = 2
; interpolate1D, x, y, xi, yi, npts

; Error handling:
if (n_elements(x) ne n_elements(y)) then begin
  message, 'x and y must have the same number of elements'
  return
end if
; Ensure that xi is a vector:
xi = [xi]
; Initialize yi:
yi = bytarr(npts)
; Loop over xi to interpolate:
for i=0,npts-1 do begin
  ; Find the two points in x that bracket xi:
  ind = where(x le xi[i] and x ge xi[i-1], ind)
  ; Calculate the slope between those two points:
  slope = (y[ind[1]] - y[ind[0]]) / (x[ind[1]] - x[ind[0]])
  ; Calculate yi:
  yi[i] = y[ind[0]] + slope * (xi[i] - x[ind[0]])
endfor

; Return yi:
return, yi
end
;
; This is an IDL program that performs a linear least squares fit of a linear equation
; to a given set of data points.
;

; Define the number of data points
ndata = 10

; Create empty arrays to store x and y coordinate values
x = fltarr(ndata)
y = fltarr(ndata)

; Populate the arrays with random values
for i=0, ndata-1 do begin
	x[i] = randomu(seed=i)*10
	y[i] = randomu(seed=i*2)*5
endfor

; Define variables for the linear equation coefficients and errors
m = 0 ; slope
b = 0 ; intercept
err_m = 0 ; error in slope
err_b = 0 ; error in intercept

; Define the linear function to be fit to the data
function linfit, x, m, b
	return, m*x + b

; Define the sum of squared residuals function
function ssr, x, y, m, b
	s = 0
	for i=0, ndata-1 do s = s + (y[i]-linfit(x[i],m,b))^2
	return, s

; Set initial values for m and b
m_ini = randomu(seed=1)*10
b_ini = randomu(seed=2)*5

; Use the built-in IDL fitting routine to minimize ssr and find the best fit values of m and b
mpfit, x, y, err_m, err_b, m, b, ssrfunc=ssr, init=m_ini, initb=b_ini

; Print the results
print, "Best fit line: y = ", strtrim(m,2) + "x + " + strtrim(b,2)
print, "Error in slope: ", strtrim(err_m,2)
print, "Error in intercept: ", strtrim(err_b,2)

; Define a function to plot the data and the best fit line
pro plot_linfit, x, y, m, b
    plot, x, y, psym=15, symsize=1.5
    oplot, x, linfit(x,m,b), linestyle=2,color='red'
    xlabel = 'x'
    ylabel = 'y'
    title = 'Linear Least Squares Fit'
end

; Call the plot function
plot_linfit, x, y, m, b
;This code snippet performs data analysis and visualization in IDL programming language.
;It takes in a dataset and performs various statistical analyses and creates plots for visualization.

;Import necessary libraries
!p.import, "mgunit"  ;contains routines for handling datasets
!p.import, "mgplot"  ;contains routines for plotting

;Read in dataset
data = mg_unit_data(/FILTER_REGIONS)  ;filters data by geographical regions
n = N_ELEMENTS(data)

;Calculate mean
mean = TOTAL(data)/N  ;calculates the mean of the dataset

;Calculate standard deviation
stddev = SQRT(TOTAL((data - mean)^2)/(n-1))  ;calculates the standard deviation of the dataset

;Create histogram plot
histogram = mg_histogram(data, /BINS, BINSIZE=1.0, /NOCURRENT, /NOECHO)
mgplot, histogram, /Z, XSTYLE=3, AUTOSCALE=[0, 0, 100, 100], /TITLE, TITLE="Histogram of Dataset", $
  YTITLE="Number of Data Points", XTITLE="Data Values", /XCOLOR=!D.NORM, /YCOLOR=!D.NORM, $
  /NOLINELEGEND, /STEPPED, /FILL

;Create scatter plot
scatter_plot = mg_scatterplot(data, /SYMBOLS, COLOR='blue', /NOCURRENT, /NOECHO)
mgplot, scatter_plot, /Z, XTITLE="X Values", YTITLE="Y Values", /TITLE, $
  /XCOLOR=!D.NORM, /YCOLOR=!D.NORM, /LEGEND, NOCONTENTS, $
  LEGEND_TITLE="Scatter Plot of Dataset", LEGEND_ENTRIES=["Data Points"], XRANGE=[MIN(data), MAX(data)], $
  YRANGE=[MIN(data), MAX(data)], /UNIT, /RESET, /FOCUS, /AUTOMINMAX

;Perform linear regression
stats = MG_POLYFIT(data, 1, X, Y, DV=mean, PV=b, COVAR=covariance)
mglinear_regression = mgplot_regstats(stats)  ;returns statistics of the regression

;Create linear regression plot
lin_reg_plot = mgplot_gauss(data, /NOECHO, /NOGRID, /NOCURRENT)
mgplot_plot, lin_reg_plot, /Z, XTITLE="Data Points", YTITLE="Predicted Values", /TITLE, $
  /XCOLOR=!D.NORM, /YCOLOR=!D.NORM, /LEGEND, /UNIT, /RESET, /FOCUS, $
  LEGEND_TITLE="Linear Regression Plot", LEGEND_ENTRIES=["Line of Best Fit"], /POSTSCRIPT

;Print results
PRINT, "Mean: ", mean
PRINT, "Standard Deviation: ", stddev
PRINT, "Linear Regression:\n"
PRINT, "Slope: ", b[0]
PRINT, "Covariance: ", covariance[0,0]
PRINT, "Correlation: ", sqrt(stats[2])*sgn(b[0])
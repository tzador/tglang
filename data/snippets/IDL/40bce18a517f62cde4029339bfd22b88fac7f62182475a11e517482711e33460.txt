function fft3d(data, xdim, ydim, zdim) {
  ; This function performs 3D Fast Fourier Transform using Cooley-Tukey algorithm
  ; Inputs:
  ;   data: 3D array containing the data to be transformed
  ;   xdim: size of the array in x dimension
  ;   ydim: size of the array in y dimension
  ;   zdim: size of the array in z dimension
  ; Returns:
  ;   cdata: 3D array containing the complex transformed data
  ;   rdata: 3D array containing the real transformed data
  ; Initialize variables
  complex cdata[xdim,ydim,zdim]  ; complex data array
  double rdata[xdim,ydim,zdim]   ; real data array
  double x,y,z                   ; variables for loops
  double u,v,w                   ; variables for temporary calculations
  double pi                      ; approximation of pi value
  pi = 4.0 * atan( 1.0 )         ; initialize pi
  ; Calculate complex transform using nested do-loops
  for z = 0 to zdim - 1 do begin
    w = z * 2 * pi / zdim        ; calculate angular frequency in z dimension
    for y = 0 to ydim - 1 do begin
      v = y * 2 * pi / ydim      ; calculate angular frequency in y dimension
      for x = 0 to xdim - 1 do begin
        u = x * 2 * pi / xdim    ; calculate angular frequency in x dimension
        ; Calculate sum of exponentials for current location in 3D array
        for z1 = 0 to zdim - 1 do begin
          for y1 = 0 to ydim - 1 do begin
            for x1 = 0 to xdim - 1 do begin
              cdata[x,y,z] += data[x1,y1,z1] * exp( -i * (u*x1 + v*y1 + w*z1) ) ; add exponentials to cdata
            endfor
          endfor
        endfor
      endfor
    endfor
  endfor
  rdata = abs( cdata )           ; take absolute value of complex data to get real data
  return, cdata, rdata           ; return both complex and real transformed data
}
;; This is a comment in IDL

PRO test
  ;; This is a procedure definition
  ;; It does not take any input parameters and will output a scalar value

  ;; Define some variables
  a = 5 ;; This is an integer
  b = 3.14 ;; This is a float

  ;; Calculate the value of a^b
  c = a^b
  ;; Print the result
  PRINT, "The result is: ", c

  ;; Now let's try a different calculation
  ;; Define an array
  arr = [1, 2, 3, 4, 5]

  ;; Define a function
  FUNCTION sq(val)

    ;; Calculate the square of a value
    res = val * val

    ;; Return the result
    RETURN, res
  ENDFUNCTION

  ;; Use a FOR loop to iterate through the array and calculate the square of each element
  FOR i=0, (N_ELEMENTS(arr)-1) DO BEGIN
    sq_val = sq(arr[i]) ;; Call the function and pass the current element in the array
    PRINT, "The square of", arr[i], "is:", sq_val
  ENDFOR

  ;; Now let's try an IF statement
  ;; Check if the value of a is greater than the value of b
  IF a > b THEN BEGIN
    ;; If it is, print a message
    PRINT, "a is greater than b"
  ENDIF ELSE BEGIN
    ;; If not, print a different message
    PRINT, "b is greater than a"
  ENDELSE

  ;; Now let's define a complex structure
  STRUCTURE student
    ;; Define some properties
    NAME = "" ;; This will store the student's name
    AGE = 0 ;; This will store the student's age
    COURSES = [] ;; This will store the courses the student is taking
  ENDSTRUCTURE

  ;; Create a student object
  student1 = {NAME: "John", AGE: 20, COURSES: ["Math", "Science", "Literature"]}

  ;; Print out the information
  PRINT, "Student 1's name is", student1.NAME, "and they are", student1.AGE, "years old."
  PRINT, "They are taking the following courses:", student1.COURSES

  ;; Now let's define a subroutine
  SUBROUTINE add(a, b, c, d, e)
    ;; Add the values of a, b, c, d, e and store the result in sum
    sum = a + b + c + d + e

    ;; Print the result
    PRINT, "The sum of all the values is:", sum
  END

  ;; Let's call the subroutine
  add(1, 2, 3, 4, 5)

END
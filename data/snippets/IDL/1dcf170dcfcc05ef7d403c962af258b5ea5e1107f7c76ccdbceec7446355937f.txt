; This code snippet calculates the eigenvalues of a square matrix using the QR algorithm

pro eigenvalues, matrix
; inputs:
;   matrix: the square matrix for which eigenvalues will be calculated

; initialize variables
n = n_elements(matrix)
shift = 0.0
max_iter = 1000
tolerance = 1e-6
j = n - 1
converged = !0

; initialize temporary matrices
q = replicate(0.0, n, n)
r = replicate(0.0, n, n)

; initialize identity matrix
id = replicate(0.0, n, n)
for i = 0, n - 1 do id[i, i] = 1.0

; perform QR iteration loop until convergence or max iterations reached
while(converged && j gt 0) do begin
    ; create shift matrix to aid in finding eigenvalues
    replicate, shift_matrix, shift, n, n
    qrdcmp, matrix - shift_matrix, q, r, /double

    ; calculate new matrix
    matrix = r * q + shift_matrix * id

    ; check for convergence
    converged = (max(abs(matrix[0:j, j])) lt tolerance)

    j = j - 1

; once convergence is reached, extract the eigenvalues from the diagonal of the matrix
eigenvalues = matrix[*, *]
endwhile

; output the calculated eigenvalues
print, 'Eigenvalues: ', eigenvalues
end
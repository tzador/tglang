; This code performs a Fourier transform on a given array of data
; and then applies a Gaussian filter to the transformed data.

; Define the size of the array
size = 10000

; Generate random data
x = randomu(seed, size)
y = randomu(seed, size)

; Define length of the interval
dx = 1.0 / size

; Compute the Fourier transform of the data
fft = fft(x)

; Construct the frequency array
freq = 2.0 * !pi * findgen(size/2) / (size * dx)

; Apply the filter in the frequency domain
gaussian_filter = exp(-freq^2 / (2.0 * sigma^2))
fft_filtered = fft * gaussian_filter

; Inverse Fourier transform to return to the time domain
data_filtered = fft_inverse(fft_filtered)

; Plot results
plot, x, y, psym=2, xtitle='Original Data', ytitle='Random Data', color='blue'
oplot, x, data_filtered, psym=2, color='red', thick=2, legend=['Filtered Data']

; Save the plot as a PNG file
device, /png, 'filtered_data.png'
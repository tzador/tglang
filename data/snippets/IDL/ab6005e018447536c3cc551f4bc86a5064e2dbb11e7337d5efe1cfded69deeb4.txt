pro Exercise1
; This is a procedure that takes two arguments and returns a complex array
; Argument 1: real map array
; Argument 2: real rates array
; Returns: complex yield array
;
; Example: Yield=Exercise1(MAP, RATES)

; Define function arguments
map = argument(0)
rates = argument(1)

; Get dimensions of map array
ndims = size(map, /N_DIMENSIONS)
nrows = size(map, /DIM_ROW)
ncols = size(map, /DIM_COLUMN)

; Create empty complex yield array
yield = complex(0, 0, nrows, ncols)

; Loop through each element in map array
for i=0, nrows-1 do begin
  for j=0, ncols-1 do begin
  
    ; Calculate yield using rates and map values
    yield[i, j] = rates[i, j] ^ map[i, j]
    
  endfor
endfor

; Print yield array
print, yield

; End procedure definition
end
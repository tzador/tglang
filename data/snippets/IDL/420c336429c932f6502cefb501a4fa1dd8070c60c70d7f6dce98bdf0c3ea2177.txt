PRO tree_grow, nlevels
  ; Procedure to generate a tree
  ; in InvertedDiamond shape

  ; Define variables and arrays
  NATOMS = 25
  level = 10
  leaf_colors = [47, 79, 79, 0] ; Burnt Umber Green, RGB
  branch_colors = [127, 255, 212, 0] ; Aquamarine, RGB

  ; Calculate number of leaves in each level
  nleaves = LINDGEN(nlevels) + 2  ; Linear sequence

  ; Initialize tree coordinates
  x = FLTARR(NATOMS)
  y = FLTARR(NATOMS)

  ; Calculate coordinates of top leaf
  y[0] = 0
  x[0] = 0

  ; Loop over levels
  FOR i = 1, nlevels-1 DO BEGIN
    ; Calculate coordinates of left leaf
    y[2*i - 1] = i - 1
    x[2*i - 1] = -i + 1
    ; Calculate coordinates of right leaf
    y[2*i] = y[2*i - 1]
    x[2*i] = -x[2*i - 1]
    ; Add branches between leaves
    FOR j = 1, nleaves[i+1]-2 DO BEGIN
      ; Calculate coordinates of branch
      y[(2*i + 1)*(j-1) + 1] = y[(2*i + 1)*(j-1)] + 1
      x[(2*i + 1)*(j-1) + 1] = x[(2*i + 1)*(j-1)] - 1
      ; Add bend in branch
      y[(2*i + 1)*(j-1) + 2] = y[(2*i + 1)*(j-1) + 1] - 0.5
      x[(2*i + 1)*(j-1) + 2] = x[(2*i + 1)*(j-1) + 1] + 2
      ; Increase branch color intensity towards top
      branch_colors[0] = branch_colors[0] - 10*i
      branch_colors[1] = branch_colors[1] - 5*i
      branch_colors[2] = branch_colors[2] + 2*i
      ; Draw branch
      PLOTS, x[(2*i + 1)*(j-1):(2*i + 1)*j], y[(2*i + 1)*(j-1):(2*i + 1)*j], $
        LINESTYLE=2, COLOR=branch_colors, THICK=2
    ENDFOR
    ; Increase leaf color intensity towards bottom
    leaf_colors[1] = leaf_colors[1] - 5*i
    leaf_colors[2] = leaf_colors[2] + 2*i
    ; Draw left leaf
    PLOTS, x[(2*i - 1):(2*i)], y[(2*i - 1):(2*i)], $
      SYMSIZE=5, SYM=2, COLOR=leaf_colors, THICK=3
    ; Draw right leaf
    PLOTS, x[2*i:(2*i + 2)], y[2*i:(2*i + 2)], $
      SYMSIZE=5, SYM=2, COLOR=leaf_colors, THICK=3
  ENDFOR
END
; This program generates a random matrix and calculates the determinant 

; Define a function to generate a random matrix of a given size
function generate_matrix, nrows, ncols
    ; Create an empty matrix with specified dimensions
    matrix = fltarr(nrows, ncols)
    
    ; Loop through each element of the matrix
    for i=0, nrows-1 do begin
        for j=0, ncols-1 do begin
            ; Assign a random value to each element
            matrix[i,j] = randomu(seed, -10, 10)
        endfor
    endfor
    
    ; Return the generated matrix
    return, matrix
end

; Define a function to calculate the determinant of a given matrix
function determinant, matrix
    ; Get the dimensions of the matrix
    nrows = n_elements(matrix[*,0])
    ncols = n_elements(matrix[0,*])
    
    ; Check if matrix is square
    if nrows ne ncols then begin
        print, 'Error: Matrix must be square'
        return, -1
    endif
    
    ; Initialize determinant value to 0
    det = 0
    
    ; Loop through each column of the matrix
    for i=0, ncols-1 do begin
        ; Calculate the minor matrix that excludes the current column
        minor = matrix[*,0:i-1, i+1:ncols-1]
        minor = [minor, matrix[*,i+1:ncols-1]]
        
        ; Calculate the determinant of the minor matrix
        minor_det = determinant(minor)
        
        ; Add the determinant of the minor matrix to the overall determinant
        det = det + (-1)^i * matrix[*,i] * minor_det
    endfor
    
    ; Return the final determinant value
    return, det
end

; Set the random number seed to the current system time for more randomness
seed = systime(1)

; Generate a random 4x4 matrix
matrix = generate_matrix(4, 4)

; Print the matrix to the console
print, 'Random Matrix:'
print, matrix

; Calculate the determinant of the matrix
det = determinant(matrix)

; Print the determinant to the console
print, 'Determinant:'
print, det
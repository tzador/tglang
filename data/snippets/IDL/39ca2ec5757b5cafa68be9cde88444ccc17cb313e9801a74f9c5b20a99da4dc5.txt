pro examine_data, data, time, error, /verbose
; This is a procedure that takes in three arguments: data, time, and error
; The /verbose switch allows for more detailed output
  n_data_points = n_elements(data) ; Get the number of elements in the data array
  print, 'The data has ', n_data_points, ' data points.'
  time_start = time[0] ; Get the first element of the time array
  time_end = time[n_data_points - 1] ; Get the last element of the time array
  print, 'The data spans a time range from ', time_start, ' to ', time_end, ' seconds.'
  avg = 0.0 ; Initialize average variable to 0
  for i = 0, n_data_points - 1 do begin ; Loop through all data points
    avg = avg + data[i] ; Add the data point to the average
  endfor
  avg = avg / n_data_points ; Calculate the average by dividing by the number of data points
  print, 'The average of the data is ', avg
  std = 0.0 ; Initialize standard deviation variable to 0
  for i = 0, n_data_points - 1 do begin ; Loop through all data points
    std = std + (data[i] - avg)^2 ; Calculate the difference from the average and square it
  endfor
  std = sqrt(std / n_data_points) ; Calculate the square root of the average difference
  print, 'The standard deviation of the data is ', std
  if std gt error then begin ; If the standard deviation is greater than the specified error
    print, 'The data is too noisy. Please check for errors.'
  endif else begin ; If the standard deviation is less than or equal to the specified error
    print, 'The data is within acceptable range.'
  endelse
end
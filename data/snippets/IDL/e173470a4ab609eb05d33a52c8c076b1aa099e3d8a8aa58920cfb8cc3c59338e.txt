pro random_matrix, m, n, output
; This procedure creates a random matrix of size m x n and returns the matrix as an output variable
; INPUT: m - number of rows in the matrix
; n - number of columns in the matrix
; output - name of the output variable where the matrix will be stored
; OUTPUT: none

compile_opt strictarr
; ensures that all undeclared variables are treated as errors

if (m < 1 or n < 1) then begin
    message, "Error: Number of rows and columns must be greater than or equal to 1"
    return
endif

rndseed, 42
; sets the seed for the random number generator to ensure repeatability

matrix = fltarr(m, n)
; creates a 2D floating point array of size m x n (initialized with zeros)

for i=0, m-1 do begin
    for j=0, n-1 do begin
        matrix[i,j] = randomn(seed=100*i+j)
        ; fills the array with random numbers from a normal distribution
    endfor
endfor

output = matrix
; assigns the generated matrix to the output variable

end
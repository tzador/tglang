;** Declare variables **
pro sample, a1, a2, a3

;** Set values of declared variables
a1 = 10
a2 = a1 + 5
a3 = sin(a2)

;** Define function to calculate the nth prime number
function get_primeNumber, index
  ;** Initialize variables **
  local n, num, count, prime
  
  n = 2 ;** Starting number to check **
  count = 0 ;** Number of prime numbers found **
  prime = 0 ;** Prime number to return **
  
  while (count < index) do begin
    ;** Check if the current number is prime **
    if check_prime(n) then begin
      count = count + 1 ;** Increment count if prime number is found **
      prime = n ;** Update prime number with current number **
    endif
    
    n = n + 1 ;** Increment number to check the next one **
  end
  
  ;** Return nth prime number **
  return, prime
end

;** Define function to check if a number is prime **
function check_prime, num
  ;** Base case **
  if (num < 2) then return, 0
  
  ;** Loop to check if num is divisible by numbers < num **
  for i = 2, num - 1, 1 do begin
    ;** If divisible, return 0, not prime **
    if (num mod i eq 0) then return, 0
  end
  
  ;** If not divisible, return 1, prime **
  return, 1
end

;** Call function and print output **
printf, "The 10th prime number is %d", get_primeNumber(10)
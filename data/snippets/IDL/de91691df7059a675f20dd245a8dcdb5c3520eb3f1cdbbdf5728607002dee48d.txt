pro linear_interpolate, x, y, resx, resy
; This procedure linearly interpolates between two sets of data points, given x and y coordinates
; Input:
;     x - array of x coordinates
;     y - array of y coordinates
;     resx - array of x coordinates where interpolation should be performed
;     resy - blank array that will store interpolated y values
; Output:
;     resy - array of interpolated y values

; check if arrays are of equal length
if n_elements(x) ne n_elements(y) then begin
    print, 'Error: Input arrays not of equal length'
    return
endif

; check if resx array is a monotonically increasing sequence
if ~is_monotonic(resx) then begin
    print, 'Error: resx array is not a monotonic sequence'
    return
endif

; perform linear interpolation
for i=0, n_elements(resx)-1 do begin
    ; find nearest index in x array
    index = max(where(x le resx[i], count), 0)
    ; if index is 0, use first and second data points for interpolation
    if index eq 0 then begin
        m = (y[1] - y[0]) / (x[1] - x[0])
        resy[i] = m * (resx[i] - x[0]) + y[0]
    ; if index is n_elements(x), use last two data points
    elseif index eq n_elements(x) then begin
        m = (y[n_elements(y)-1] - y[n_elements(y)-2]) / (x[n_elements(x)-1] - x[n_elements(x)-2])
        resy[i] = m * (resx[i] - x[n_elements(x)-1]) + y[n_elements(y)-1]
    ; otherwise use data points on either side of index for interpolation
    else begin
        m = (y[index+1] - y[index]) / (x[index+1] - x[index])
        resy[i] = m * (resx[i] - x[index]) + y[index]
    endelse
endfor
end
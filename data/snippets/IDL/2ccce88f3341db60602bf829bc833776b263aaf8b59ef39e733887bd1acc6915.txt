;;Declare a structure of type 'employee' with attributes name (string), age (integer), and salary (double).
struct employee {
  string name; //represents the name of the employee
  int age; //represents the age of the employee
  double salary; //represents the salary of the employee
}; 

;;Create an array of employee structures and initialize values for each attribute.
employee[] employee_list = [
  {"John", 25, 50000.00}, 
  {"Sarah", 32, 60000.00}, 
  {"David", 40, 80000.00}
]; 

;;Define a function that calculates the average salary of all employees in the employee_list array.
;;@param employee_list - the array of employee structures
;;@return - the average salary of all employees
function calculateAvgSalary(employee_list) {
  double total_salary = 0.0; //variable to store the total salary of all employees
  int num_employees = n_elements(employee_list); //get the number of employees in the employee_list array
  
  ;;Loop through the employee_list array and add up all the salaries to total_salary variable.
  ;;Also, handle any exceptions that may arise.
  for (i=0; i<num_employees; i++) {
    catch, err
      total_salary += employee_list[i].salary
    endcatch
  }
  
  ;;Calculate the average salary by dividing the total_salary by the number of employees.
  ;;Handle any cases where there are no employees in the array.
  if (num_employees eq 0) then begin
    return 0.0
  endif else begin
    return total_salary/num_employees
  endelse
}

;;Call the function and store the returned value in a variable.
double avg_salary = calculateAvgSalary(employee_list);

;;Print the average salary to the console in a formatted string.
printf, "The average salary of all employees is $%.2f", avg_salary;
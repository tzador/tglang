; initializing variables for a 2-D random walk simulation
Nx = 100 ; number of steps in x direction
Ny = 100 ; number of steps in y direction
step = 1 ; size of each step
x = lonarr(Nx) ; array to store x positions
y = lonarr(Ny) ; array to store y positions
seed = 0 ; seed for random number generation

; generating random walk path using rejection sampling algorithm
x[0] = 0 ; starting x position
y[0] = 0 ; starting y position

; loop over each step
for i=1,Nx-1 do begin
    ; generate random number between 0 and 1
    rand = random(seed)

    ; determine direction of the step
    if (rand lt 0.25) then begin
        x[i] = x[i-1] + step ; move left
        y[i] = y[i-1]
    endif else if (rand ge 0.25 and rand lt 0.5) then begin
        x[i] = x[i-1] - step ; move right
        y[i] = y[i-1]
    endif else if (rand ge 0.5 and rand lt 0.75) then begin
        x[i] = x[i-1] ; move up
        y[i] = y[i-1] + step
    endif else begin
        x[i] = x[i-1] ; move down
        y[i] = y[i-1] - step
    endelse

    ; check if the step overlaps with previous positions
    ; if yes, reject the step and repeat
    for j=0,i-2 do begin
        if (x[i] eq x[j] and y[i] eq y[j]) then begin
            x[i] = x[i-1]
            y[i] = y[i-1]
            i = i-1
            break
        endif
    endfor
endfor
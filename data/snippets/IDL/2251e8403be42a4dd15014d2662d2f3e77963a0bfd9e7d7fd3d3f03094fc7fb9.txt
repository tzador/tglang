PRO linterp, x, fx, xnew, fnew, npts 
;
; Function to perform linear interpolation given a set 
; of x and y values
;
; Inputs:
;   x - array of x values
;   fx - array of y values
;   xnew - new x value for interpolation
;   npts - number of points in x and fx arrays
;
; Output:
;   fnew - interpolated y value
;
; Example:
;   x = [1, 2, 3]
;   fx = [4, 5, 6]
;   xnew = 1.5
;   npts = 3
;   PRINT, linterp(x, fx, xnew, npts)
;

; Define a local variable for storing index
INDEX = 0 

; Check if the input arrays have the same number of points
IF (N_ELEMENTS(x) NE N_ELEMENTS(fx)) THEN BEGIN
  PRINT, "Error: x and fx arrays must have the same number of points"
  RETURN, 0
ENDIF

; Check if the x values are in increasing order
; If not, sort the arrays accordingly
IF (x[0] GT x[npts-1]) THEN BEGIN
  x = REVERSE(x)
  fx = REVERSE(fx)
ENDIF

; Loop through the x values to find the correct index for interpolation
FOR i=0, npts-2 DO BEGIN
  IF (xnew GE x[i] AND xnew LE x[i+1]) THEN BEGIN
    INDEX = i
    BREAK
  ENDIF
ENDFOR

; Calculate the interpolated y value using the formula: 
; fnew = fx[index] + (fx[index+1] - fx[index]) * (xnew - x[index]) / (x[index+1] - x[index])
fnew = fx[INDEX] + (fx[INDEX+1] - fx[INDEX]) * (xnew - x[INDEX]) / (x[INDEX+1] - x[INDEX])

; Return the interpolated y value
RETURN, fnew

END
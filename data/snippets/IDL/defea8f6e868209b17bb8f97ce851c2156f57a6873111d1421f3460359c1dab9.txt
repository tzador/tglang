; This code snippet generates a sequence of prime numbers up to a given limit

; Define a function that checks if a number is prime
function is_prime(num)

  ; Check if the number is equal to 2, return true if so
  if (num == 2) then begin
    return, 1
  endif

  ; Check if the number is less than 2 or divisible by 2, return false if so
  if (num < 2) or (num % 2 == 0) then begin
    return, 0
  endif

  ; Loop through odd numbers from 3 to the square root of the given number
  for i = 3, num^(0.5), 2 do begin
    ; Check if the number is divisible by the current odd number, return false if so
    if (num % i == 0) then begin
      return, 0
    endif
  endfor

  ; If the loop completes without returning false, the number is prime, so return true
  return, 1

end

; Define a function that generates a sequence of prime numbers up to a given limit
function generate_primes(limit)

  ; Create an empty array to store prime numbers
  prime_numbers = []

  ; Loop through numbers from 2 to the limit
  for i = 2, limit do begin
    ; Check if the current number is prime
    if (is_prime(i)) then begin
      ; If so, add it to the array of prime numbers
      prime_numbers = [prime_numbers, i]
    endif
  endfor

  ; Return the array of prime numbers
  return, prime_numbers

end

; Call the function to generate prime numbers up to a limit of 100
prime_numbers = generate_primes(100)

; Print the resulting array of prime numbers
print, prime_numbers
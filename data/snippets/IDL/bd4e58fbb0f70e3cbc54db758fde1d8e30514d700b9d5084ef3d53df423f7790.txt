; This code snippet performs principal component analysis on a set of data
; and plots the results for visualization purposes in an interactive plot
;each row of data in the example dataset represents a different individual
set_data_format, 'F' ; set the data format to floating point
dataset = fltarr(100,10) ; create a 100x10 floating point array for our data
openr, lun, 'example_dataset.txt' ; open the file containing our dataset
readf, lun, dataset ; read the data from the file into our array
close, lun ; close the file

; perform PCA on our dataset
pca_result = pca(dataset)

; create an interactive plot for visualization
device, /window, title='PCA Results'
plot, pca_result, /contour, /inter
oplot, pca_result, /points, xtitle='PC1', ytitle='PC2'

; annotate the plot with marker labels
marker_labels = strarr(100) ; create a string array for our labels
for i=0,99 do begin ; loop through each individual in our dataset
    ; use an alphanumeric label for each individual
    marker_labels[i] = string(i+1, format='(A)') 
endfor

oplot, pca_result, /symbols, /overplot, marker_labels=marker_labels

; add a colorbar to the plot
colorbar, _extra=1, title='Individuals', ytitle='Individual Index'

; save the plot as a PNG file
png_name = 'pca_results.png'
device, /png, xsize=600, ysize=600, file_name=png_name
plot, pca_result, /contour, /inter
oplot, pca_result, /points, xtitle='PC1', ytitle='PC2'
oplot, pca_result, /symbols, /overplot, marker_labels=marker_labels
colorbar, _extra=1, title='Individuals', ytitle='Individual Index'
device, /close

; print out the results
print, 'PCA Results:'
print, pca_result

; save the results as a CSV file
csv_name = 'pca_results.csv'
a = transpose([pca_result, marker_labels])
save_csv, csv_name, a
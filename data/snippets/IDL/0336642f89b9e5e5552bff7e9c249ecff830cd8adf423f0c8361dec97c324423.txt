;This is a comment in IDL, used for explaining code or providing other information.

; Define a function called "fibonacci" that takes in a single argument, "n". 
FUNCTION fibonacci, n

; Declare variables, "a" and "b" to store previous Fibonacci numbers.
; In IDL, declaring variables is not necessary, but it helps with code organization.
a = 0 
b = 1

; Initialize a vector, "fib_array", to store the Fibonacci numbers.
; The size of the vector is equal to "n" and will be dynamically updated as the function executes.
fib_array = LONG(n) 

; Use a for loop to iterate through "fib_array" and calculate Fibonacci numbers.
FOR i=0, n-1 DO BEGIN
    IF i EQ 0 THEN BEGIN
        ; The first number in the sequence is always 0.
        fib_array[i] = 0 
    ENDIF ELSE IF i EQ 1 THEN BEGIN
        ; The second number in the sequence is always 1.
        fib_array[i] = 1 
    ENDIF ELSE BEGIN
        ; Use the formula to calculate the Fibonacci number for each iteration.
        ; The current number is equal to the sum of the two previous numbers.
        fib_array[i] = fib_array[i-1] + fib_array[i-2] 
    ENDELSE
ENDDO

; Return the final Fibonacci number.
RETURN, fib_array[n-1]

; End of function.
END
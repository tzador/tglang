PRO decompose, input_matrix, L, U, P
  ; Author: Jane Smith
  ; Date: 07/15/2021
  ; Description: This procedure performs LU decomposition on a square input matrix and returns the lower, upper, and permutation matrices.

  ; Define variables and arrays
  n = N_ELEMENTS(input_matrix, /DIM)
  p = FINDGEN(n) ; permutation vector
  L = FLTARR(n, n) ; lower triangular matrix
  U = FLTARR(n, n) ; upper triangular matrix

  ; Copy input matrix into U
  U = input_matrix

  ; Perform LU decomposition
  FOR k = 0, n-2 DO begin
    ; Pivot row
    max_index = MAX(MAXINDEX(U[k, *]))
    P[k] = p[max_index]
    IF u[max_index, k] EQ 0 THEN BEGIN
      PRINT, "Matrix is singular"
      RETURN
    ENDIF
    SWAPROWS, U, 0, max_index

    ; Eliminate lower matrix elements
    FOR i = k+1, n-1 DO begin
      factor = U[i,k]/U[k,k]
      L[i,k] = factor
      U[i, k:] -= factor*U[k,k:]
    ENDFOR
  ENDFOR

  ; Set diagonal elements of L to 1
  L[*, *] += EYE(n)

  ; Return matrices
  RETURN, L, U, P
END
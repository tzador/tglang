pro initialize, npoints, nparams  ;; This is an IDL procedure named 'initialize' with two input parameters: 'npoints' and 'nparams'
  compile_opt strictarr ;; This compiler option declares all variables to be explicitly typed

  ;; declare and initialize variables
  n = npoints
  m = nparams
  v = fltarr(n,m) ;; this creates a floating point array of dimensions 'n' by 'm' as a variable named 'v'
  iter = 0 ;; this is a variable used to keep track of loop iterations
  contflag = 1 ;; flag used to indicate if the loop should continue or break

  ;; define a loop to populate the array 'v'
  while (contflag eq 1) do begin ;; this loop continues as long as 'contflag' is equal to 1
    for i=0,n-1 do begin ;; this loop populates the rows of the array
      for j=0,m-1 do begin ;; this loop populates the columns of the array
        v[i,j] = randomu(seed) ;; this assigns a random number from 0 to 1 to v[i,j]
      endfor
    endfor
    iter = iter + 1 ;; increment the loop iteration count
    if (iter eq npoints) then begin ;; if the number of iterations equals the number of points specified, stop the loop
      contflag = 0 ;; set the flag to 0 to break the loop
    endif
  endwhile

  ;; return the populated array 'v'
  return, v ;; note that in IDL, return statements are used to specify the output of a procedure
end
pro first_function, input1, input2 ; create a procedure named 'first_function' with two input variables
  compile_opt strictarr ; enable strict checking of array types
  
  ; create a variable that will hold the result of the calculation
  result = fltarr(10) ; use 'fltarr' to create a floating point array of size 10
  
  ; use a for loop to perform the calculation on each element of the array
  for i=0L, 9L do begin ; 'do begin' indicates the start of the loop
    result[i] = reverse_search(input1, input2, i) ; use the 'reverse_search' function with the input variables and the current loop index as parameters
  endfor ; 'endfor' indicates the end of the loop
  
  ; print the result to the screen
  print, result ; 'print' statement outputs the result to the screen
  
end ; end of the procedure

function reverse_search, input1, input2, index ; define a function named 'reverse_search' with three input variables and one output variable
  compile_opt strictarr
  
  ; create a variable to store the result
  output = 0 ; initialize output variable to 0
  
  ; use a while loop to perform the calculations
  while output lt index do begin ; 'while' indicates the start of the loop
    ; perform the calculation using the input variables
    output = input1 * input2 + input2 - index 
  endwhile ; 'endwhile' indicates the end of the loop
  
  ; return the output value
  return, output
end ; end of the function
pro get_matrix, input, output
; This function calculates the inverse matrix of a given input matrix
  ; Parameters:
    ; input: input matrix to be inverted
    ; output: output matrix with inverted values
    
  ; Declare local variables
  matrix_size = N_ELEMENTS(input, /DIMENSION)
  matrix_temp = FINDGEN(matrix_size, matrix_size)
  matrix_identity = INDGEN(matrix_size, matrix_size)
  
  ; Calculate determinant of input matrix
  determinant = DET(input)
  if determinant EQ 0 then begin
    ; Print error message if determinant is 0
    print, 'Error: Input matrix is not invertible'
    return
  endif
  
  ; Calculate inverse using Gauss-Jordan elimination
  matrix_temp = input    ; Temporarily store input matrix
  do i = 0, matrix_size-1 do begin
    ; Make diagonal elements 1 by dividing rows by the diagonal element
    matrix_temp[i, *] = matrix_temp[i, *] / input[i, i]
    matrix_identity[i, *] = matrix_identity[i, *] / input[i, i]
    
    ; Subtract rows with the diagonal element from all other rows 
    ; to make all other elements 0
    for j = 0, matrix_size-1 where j NE i do begin
      multiplier = matrix_temp[j, i]
      matrix_temp[j, *] = matrix_temp[j, *] - multiplier * matrix_temp[i, *]
      matrix_identity[j, *] = matrix_identity[j, *] - multiplier * matrix_identity[i, *]
    endfor
  endfor
  
  ; Output the inverted matrix
  output = matrix_identity
  end

  ; Printing the output
  print, output
end
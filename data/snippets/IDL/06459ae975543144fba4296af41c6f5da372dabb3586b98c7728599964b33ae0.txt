PRO laguerre, x, n, a, b

;;; Required Parameters:
; x - input vector of values
; n - size of x
; a - lower limit of integral
; b - upper limit of integral

;;; Declare local variables:
; j - index variable for loops
; pcurr - current value of Laguerre polynomial
; pnext - next value of Laguerre polynomial
; px - vector to store calculated polynomial values
; res - resulting vector of integral values

;;; Calculate Laguerre polynomial values for input x
for (j = 0; j < n; j++) do begin
  px[j] = exp(-x[j]/2) * x[j]^2;
endfor

;;; Calculate integral values using Simpson's 1/3 rule
res = a * px[0] + b * px[n-1]; ;;; first and last values multiplied by limit values
for (j = 1; j < n-1; j += 2) do begin
  res += 4 * px[j]; ;;; add 4 * middle values
  pcurr = px[j] + px[j+1] + px[j+2]; ;;; calculate sum of three consecutive values
  res += 2 * pcurr; ;;; add 2 * sum to integral value
endfor
pnext = px[n-1]; ;;; last value assigned for simpsons's 1/3 rule iteration
pcurr = px[n-2] + px[n-1]; ;;; sum of last two values for second last iteration
res += pcurr; ;;; add last sum to integral value
res += pnext; ;;; add last value for simpson's 1/3 rule

;;; Print resulting vector
print, res

END
; This is a code snippet in IDL that calculates the total area under a curve
; created by a set of x and y values using Simpson's rule. 

function simpson_area, x, y
  ; This function takes in two arrays, x and y, and calculates the total area 
  ; under the curve using Simpson's rule. It returns the final area as a value.
  
  ; Initialize variables and arrays
  x_length = n_elements(x)
  y_length = n_elements(y)
  x_sect = 0
  y_sect = 0
  area = 0
  
  ; Ensure that both x and y arrays have an even length 
  if x_length mod 2 ne 0 then begin
    print, 'ERROR: x array length must be even'
    return, -1
  endif elseif y_length mod 2 ne 0 then begin
    print, 'ERROR: y array length must be even'
    return, -1 
  endif
  
  ; Calculate the area for each section of the curve
  for i=0, x_length-3, 2 do begin
    x_sect = 0.5 * (x[i] + x[i+2])
    y_sect = (y[i] + 4*y[i+1] + y[i+2])/6
    area = area + (x_sect * y_sect)
  endfor
  
  ; Calculate the remaining area for the last sections of the curve
  x_last = x[x_length-2]
  y_last = y[y_length-2]
  x_end = x[x_length-1]
  y_end = y[y_length-1]
  
  area = area + ((x_last + x_end) * (y_last + y_end))/8
  
  ; Return the final area value
  return, area
end

; Example usage of simpson_area function
x = [0, 1, 2, 3, 4, 5, 6]
y = [1, 4, 9, 16, 25, 36, 49]
result = simpson_area(x, y)
print, result
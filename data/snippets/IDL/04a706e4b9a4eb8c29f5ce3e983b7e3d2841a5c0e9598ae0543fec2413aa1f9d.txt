; Generate array containing random values 
random_values = randomu(seed, 10, 10)

; Sort the array in ascending order
sorted_values = sort(random_values)

; Filter the array to contain only values between 0.5 and 0.9
filter_values = where(sorted_values, (sorted_values ge 0.5) and (sorted_values le 0.9))

; Calculate the mean of the filtered array
mean = total(filter_values) / n_elements(filter_values)

; Print the mean in the output window
print, 'The mean of the filtered array is: ', mean

; Create a new array containing the squares of the filtered values
squared_values = filter_values * filter_values

; Create a contour plot of the squared values
contour = congrid(squared_values, 50, 50)

; Set the plot title and axis labels
plot_title = 'Squared Values Contour Plot'
x_axis_title = 'X Values'
y_axis_title = 'Y Values'

; Display the contour plot
plot, contour, title=plot_title, xtitle=x_axis_title, ytitle=y_axis_title, /contour

; Save the plot as a PNG file
save_png, 'squared_values_contour_plot.png', /contour

; Calculate the cumulative sum of the filtered values
cumsum = total(filter_values, /cumulative)

; Create a scatter plot of the cumulative sum values
scatter = scatterplot(cumsum, filter_values, xtitle='Cumulative Sum', ytitle='Filtered Values', $
title='Cumulative Sum vs. Filtered Values', /points)

; Save the plot as a EPS file
save_eps, 'cumulative_sum_scatter_plot.eps', /points

; Calculate the standard deviation of the filtered values
stdev = stddev(filter_values)

; Print the standard deviation in the output window
print, 'The standard deviation of the filtered array is: ', stdev
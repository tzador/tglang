IDL> iteration = 100; // initialize variable for number of iterations
IDL> limit = 10.0; // initialize variable for maximum limit
IDL> x = findgen(iteration) * limit / (iteration - 1) // generate evenly spaced values from 0 to 10

// create empty arrays for storing results
IDL> result1 = fltarr(iteration)
IDL> result2 = fltarr(iteration)

// loop through each value of x
IDL> for i = 0, iteration - 1 do begin

// calculate first result
IDL> result1[i] = sin(x[i]) * cos(x[i])

// calculate second result
IDL> result2[i] = cos(x[i]) * sin(x[i]) * exp(x[i])

IDL> endfor

// plot results
IDL> plot, x, result1, color = 'red'
IDL> oplot, x, result2, color = 'blue'

// add legend
IDL> legend = [ 'sin(x) * cos(x)', 'cos(x) * sin(x) * exp(x)' ]
IDL> !p.font = 0 // set font size
IDL> !p.font = 2 // set font to bold
IDL> oplot, [ 5.0 ], [ 0.9 ], color = 'red', psym = 2, text = legend[0]
IDL> oplot, [ 5.0 ], [ 0.8 ], color = 'blue', psym = 2, text = legend[1]

// add axis labels and title
IDL> !x.title = 'x'
IDL> !y.title = 'y'
IDL> !p.title = 'Results of Complex Functions'

// save plot to postscript file
IDL> device, filename = 'complex_functions.ps', dpi = 300, / encapsulated, xsize = 5.0, ysize = 5.0

// create animation of plot
IDL> an = animinit(xsize = 800, ysize = 600, background = 'white')
IDL> for i = 0, iteration - 1 do begin
IDL>     animline, x[0:i], result1[0:i], color = 'red'
IDL>     animline, x[0:i], result2[0:i], color = 'blue'
IDL>     animupdate
IDL> endfor
IDL> animsave, 'complex_functions.gif', /overwrite, loop = 1, delay = 50 // save animation as gif
IDL> animclose // close animation window

// calculate average and standard deviation of results
IDL> avg1 = mean(result1)
IDL> std1 = stddev(result1)
IDL> avg2 = mean(result2)
IDL> std2 = stddev(result2)

// print results to terminal
IDL> print, 'Average of result1: ', avg1
IDL> print, 'Standard deviation of result1: ', std1
IDL> print, 'Average of result2: ', avg2
IDL> print, 'Standard deviation of result2: ', std2

// save results to text file
IDL> save, ['x', 'result1', 'result2'], 'results.txt', /ascii
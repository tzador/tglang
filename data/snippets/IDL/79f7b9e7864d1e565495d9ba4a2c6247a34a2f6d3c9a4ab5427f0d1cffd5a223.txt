pro generate_spectrum, data, x, y, z
; This function generates a visual spectrum from given data
;
; Parameters:
;   data: 2D array of the data values
;   x: 1D array of the x coordinates
;   y: 1D array of the y coordinates
;   z: output 2D array of the spectrum

; Checking input data dimensions
if (size(data, /dimensions) ne 2) then begin
    print, "Input data must be a 2D array."
    return
endif

; Defining the color scheme and setting up the array for the spectrum
color_scheme = bytscl(indgen(256))
z = fltarr(n_elements(x), n_elements(y))

; Calculating the maximum and minimum data values
min_val = min(data)
max_val = max(data)

; Calculating the number of data points for each axis
n_x = n_elements(x)
n_y = n_elements(y)

; Looping through each data point and assigning a color based on data value
for i = 0, n_x-1 do begin
    for j = 0, n_y-1 do begin
        ; Calculating the index of the color scheme array based on data value
        index = round(bytscl(data[i,j], min=min_val, max=max_val, min_out=0, max_out=255))
        ; Assigning the color to the spectrum array
        z[i,j] = color_scheme[index]
    endfor
endfor

; Plotting the spectrum with the x and y coordinates
plot, z, x=x, y=y, xstyle=1, ystyle=1, $
    xtitle='X Coordinate', $
    ytitle='Y Coordinate', $
    title='Visual Spectrum of Input Data', $
    xrange=[min(x), max(x)], $
    yrange=[min(y), max(y)], $
    zrange=[0, 255]

end
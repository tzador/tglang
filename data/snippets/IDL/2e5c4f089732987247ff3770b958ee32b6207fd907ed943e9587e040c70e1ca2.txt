pro cgsfit, xvals, yvals, sigmay, fit_func, params
;; Perform a fit using the Levenberg-Marquardt algorithm.
;; Inputs:
;;   xvals: x-values of data points
;;   yvals: y-values of data points
;;   sigmay: uncertainties in y-values
;;   fit_func: name of function to fit to data, has form `function_name, x, params`
;;   params: vector of initial parameter values for fit_func
;; Outputs:
;;   Print fitted parameter values and uncertainties to terminal
;;   Plot fitted function and data points
  ;; Define fitting function with variable parameter array
  function fit_func, x, params
    ;; Note: f and x must have matching dimensions
    f = params[0] + params[1]*x + params[2]*x^2 + params[3]*sin(x)
    return, f
  end
  
  ;; Define data range and initial guess for parameters
  xmin = 0.0
  xmax = 10.0
  params = [1.0, 2.0, 3.0, 2.0]
  
  ;; Perform fit using Levenberg-Marquardt algorithm
  fit = lmfit(xvals, yvals, sigmay, 'fit_func', params)
  
  ;; Print fitted parameter values and uncertainties to terminal
  print, 'Fitted parameters: ', fit.p
  
  ;; Plot data points and fitted function
  plot, xvals, yvals
  oplot, xvals, fit_func(xvals, fit.p)
end
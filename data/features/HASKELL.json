[
  "!",
  "!!",
  "!=",
  "\"",
  "#",
  "#!",
  "$",
  "%",
  "&",
  "&&",
  "'",
  "(",
  "()",
  "(.)",
  "(>>)",
  "(>>=)",
  ")",
  "*",
  "**",
  "+",
  "++",
  "+++",
  "++=",
  "-",
  "--",
  "-<",
  "->",
  "->>",
  "-}",
  ".",
  ".|.",
  "/",
  "//",
  "/=",
  ":",
  ":-",
  "::",
  ":: IO",
  ":=",
  ":==",
  "<",
  "<$",
  "<$>",
  "<*",
  "<*>",
  "<-",
  "<<",
  "<=",
  "<>",
  "<?>",
  "<|>",
  "=",
  "=<<",
  "==",
  "==>",
  "=>",
  ">",
  ">=",
  ">>",
  ">>=",
  "?",
  "@",
  "Any",
  "Applicative",
  "Bool",
  "Char",
  "Data",
  "Data.List",
  "Double",
  "Either",
  "Eq",
  "False",
  "Float",
  "Functor",
  "Haskell",
  "IO",
  "IO a",
  "IO()",
  "IOError",
  "Infix",
  "Int",
  "Integer",
  "Just",
  "Left",
  "List",
  "Maybe",
  "Module",
  "Monad",
  "Monadic",
  "Newtype",
  "Nothing",
  "Num",
  "Ord",
  "Prelude",
  "Read",
  "Right",
  "Show",
  "String",
  "True",
  "Tuple",
  "Zip",
  "[",
  "[]",
  "\\",
  "\\=",
  "\\\\",
  "\\\\n",
  "\\\\t",
  "\\n",
  "\\r",
  "\\x ->",
  "]",
  "^",
  "_",
  "_signals",
  "`",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "append",
  "as",
  "capi",
  "case",
  "case of",
  "catch",
  "ccall",
  "class",
  "concat",
  "concatMap",
  "const",
  "cycle",
  "data",
  "data family",
  "data instance",
  "decrement",
  "default",
  "deriving",
  "div",
  "divide",
  "do",
  "drop",
  "dropWhile",
  "either",
  "elem",
  "else",
  "emitting",
  "enum",
  "exn",
  "export",
  "fail",
  "false",
  "family",
  "filter",
  "flip",
  "fmap",
  "fold",
  "foldl",
  "foldr",
  "forM",
  "forM_",
  "forall",
  "foreign",
  "foreignexport",
  "foreignimport",
  "from",
  "fromIntegral",
  "fst",
  "func",
  "function",
  "getContents",
  "getLine",
  "ghci",
  "group",
  "guard",
  "haskell",
  "head",
  "hiding",
  "hiding(",
  "id",
  "id'",
  "id_",
  "if",
  "ifthenelse",
  "import",
  "import as",
  "import qualified",
  "in",
  "increment",
  "infix",
  "infixl",
  "infixr",
  "init",
  "instance",
  "instance of",
  "is not",
  "jvm",
  "lambda",
  "last",
  "length",
  "let",
  "let!",
  "letrec",
  "liftIO",
  "liftM",
  "liftM2",
  "lookup",
  "main",
  "map",
  "mapM",
  "mapM_",
  "mappend",
  "maybe",
  "mempty",
  "mod",
  "module",
  "monad",
  "monoid",
  "multiply",
  "new",
  "newtype",
  "not",
  "null",
  "of",
  "or",
  "otherwise",
  "pattern",
  "pattern match",
  "primitive",
  "print",
  "pure",
  "putStrLn",
  "qualified",
  "read",
  "rec",
  "recursion",
  "rename",
  "repeat",
  "replicateM",
  "require",
  "retry",
  "return",
  "reverse",
  "round",
  "runIO",
  "safe",
  "scan",
  "sequence",
  "sequence_",
  "show",
  "signals",
  "snd",
  "stdcall",
  "subtract",
  "sum",
  "synonym",
  "tail",
  "take",
  "takeWhile",
  "then",
  "true",
  "type",
  "type family",
  "type instance",
  "type not",
  "typeclass",
  "typeof",
  "union",
  "unsafe",
  "until",
  "use",
  "var",
  "where",
  "zip",
  "zipWith",
  "{",
  "{-",
  "|",
  "|=",
  "|>",
  "||",
  "}",
  "~"
]
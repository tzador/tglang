[
  "!=",
  "\"",
  "#",
  "#!",
  "#'",
  "#*",
  "#:",
  "#;",
  "#\\",
  "#f",
  "#nil",
  "#t",
  "#|",
  "%",
  "&",
  "&KEY",
  "&OPTIONAL",
  "&REST",
  "&body",
  "&key",
  "&optional",
  "&rest",
  "&whole",
  "'",
  "(",
  "(and",
  "(lambda",
  "(or",
  "(progn",
  ")",
  "*",
  "*#",
  "*=",
  "*features*",
  "+",
  "+=",
  "+=#1",
  ",",
  "-",
  "-&",
  "--",
  "-=",
  "->",
  "->>",
  ".",
  "/",
  "/=",
  "/\\*",
  ":",
  ":=",
  ":after",
  ":around",
  ":as",
  ":before",
  ":documentation",
  ":from",
  ":key",
  ":require",
  ":use",
  ";",
  ";#",
  ";;",
  ";;;",
  "<",
  "<=",
  "=",
  "==",
  ">",
  ">=",
  "@",
  "AND",
  "APPLY",
  "CAR",
  "CASE",
  "CDR",
  "COND",
  "CONS",
  "DEFCLASS",
  "DEFMETHOD",
  "DEFUN",
  "DO",
  "DO*",
  "DOTIMES",
  "ELT",
  "EVAL",
  "FORMAT",
  "FUNCTION",
  "IF",
  "LAMBDA",
  "LET",
  "LISTP",
  "LOOP",
  "MAP",
  "NIL",
  "NOT",
  "NTH",
  "O+",
  "OR",
  "POP",
  "PRINC",
  "PRINT",
  "PUSH",
  "PUSHNEW",
  "QUOTE",
  "READ",
  "REDUCE",
  "REMOVE",
  "SYMBOLP",
  "T",
  "UNLESS",
  "WHEN",
  "[",
  "\\*/",
  "]",
  "`",
  "and",
  "append",
  "apply",
  "array",
  "as",
  "assert",
  "assoc",
  "atom",
  "boolean",
  "break",
  "call-next-method",
  "car",
  "case",
  "catch",
  "cdr",
  "char",
  "class",
  "clear-input",
  "close",
  "closure",
  "collect",
  "comment",
  "common-lisp",
  "concat",
  "concatenate",
  "cond",
  "cons",
  "decf",
  "declare",
  "def",
  "defclass",
  "defconstant",
  "define",
  "define-condition",
  "defmacro",
  "defmethod",
  "defpackage",
  "defparameter",
  "defstruct",
  "deftype",
  "defun",
  "defun*",
  "defvar",
  "delete",
  "delete-duplicates",
  "destructure-bind",
  "destructuring-bind",
  "do",
  "do*",
  "do-all-symbols",
  "do-symbols",
  "dolist",
  "dotimes",
  "dotimesL",
  "dowhen",
  "element",
  "else",
  "elt",
  "empty",
  "eq",
  "eql",
  "equal",
  "equalp",
  "error",
  "eval",
  "eval-when",
  "every",
  "exit",
  "export",
  "find",
  "find-if",
  "find-if-not",
  "first",
  "flet",
  "float",
  "for",
  "foreach",
  "format",
  "format nil",
  "format t",
  "format-a",
  "format-t",
  "format-time",
  "formatting",
  "funcall",
  "function",
  "gensym",
  "gethash",
  "handler-case",
  "hash",
  "hash-table",
  "if",
  "ignore-errors",
  "import",
  "in",
  "in-package",
  "incf",
  "integer",
  "intersection",
  "labels",
  "lambda",
  "lambda-body",
  "lambda-list",
  "lambda-list-keywords",
  "last",
  "length",
  "let",
  "let*",
  "letp",
  "letrec",
  "lisp",
  "list",
  "list*",
  "listp",
  "load",
  "loop",
  "loop for",
  "loop with",
  "loop-finish",
  "macrolet",
  "make-hash-table",
  "map",
  "mapc",
  "mapcan",
  "mapcar",
  "mapl",
  "maplist",
  "max",
  "member",
  "merge",
  "min",
  "mod",
  "multiple-value-bind",
  "multiple-value-call",
  "nil",
  "not",
  "nreverse",
  "nth",
  "nth-value",
  "null",
  "number",
  "numberp",
  "or",
  "output",
  "pop",
  "princ",
  "print",
  "printf",
  "println",
  "prog1",
  "progn",
  "progv",
  "push",
  "quote",
  "read",
  "read-line",
  "reduce",
  "register-object-validation",
  "remove",
  "remove-if",
  "remove-if-not",
  "repeat",
  "require",
  "rest",
  "retain",
  "return",
  "return-from",
  "reverse",
  "rplaca",
  "rplacd",
  "second",
  "set-pprint-dispatch",
  "setf",
  "setq",
  "setqf",
  "some",
  "sort",
  "strcat",
  "string",
  "string=",
  "subseq",
  "symbol",
  "symbol-function",
  "symbol-name",
  "symbol-value",
  "syntax",
  "t",
  "third",
  "throw",
  "truthy",
  "union",
  "unless",
  "until",
  "unwind-protect",
  "use-package",
  "values",
  "vector",
  "when",
  "while",
  "with",
  "with-accessors",
  "with-accessors*",
  "with-input-from-string",
  "with-open-file",
  "with-output-to-string",
  "with-slots",
  "with-slots*",
  "with-standard-io-syntax",
  "write",
  "write-line",
  "xor",
  "z",
  "zerop",
  "{",
  "|#",
  "}",
  "~"
]
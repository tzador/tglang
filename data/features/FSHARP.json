[
  "!!",
  "\"",
  "#",
  "#light",
  "$",
  "&&",
  "''",
  "(",
  "(*",
  "(fun",
  ")",
  "*)",
  "->",
  ".ofSeq",
  ".toArray",
  ".toList",
  "//",
  "::",
  ":=",
  ":>",
  ":?>",
  ";;",
  "<-",
  "<<",
  "<<=",
  "<=",
  "<>",
  "<@|@>",
  "<|",
  "=",
  "=<<",
  "=>",
  ">=",
  ">>",
  ">>=",
  ">\\{>,>\\}",
  "???",
  "@",
  "Array",
  "Array.",
  "Array\\.",
  "Boolean/",
  "Console.",
  "Double/",
  "Exception",
  "IEnumerable",
  "Lambda",
  "List",
  "List.",
  "List.filter",
  "List.map",
  "List\\.",
  "Map",
  "Map.",
  "None",
  "Option",
  "Option.",
  "Seq",
  "Seq.",
  "Seq.compareWith",
  "Seq.countBy",
  "Seq.filter",
  "Seq.map",
  "Seq\\.",
  "Set",
  "Set.",
  "Signal",
  "Some",
  "Some\\(",
  "Subscriber",
  "[",
  "[0-9]+\\.[0-9]+[eE]?[+-]?[0-9]*",
  "[<AutoOpen>",
  "[<Measure>",
  "[<Struct>]",
  "[<param>]",
  "[]",
  "\\*\\*",
  "\\*\\*\\*",
  "\\+\\+",
  "\\.[^S]",
  "\\/\\/\\/",
  "\\/\\/\\\\",
  "\\[->",
  "\\]\\|>",
  "\\n\\n",
  "\\|>|",
  "\\|\\|",
  "]",
  "_",
  "```",
  "```fs",
  "```fsharp",
  "abstract",
  "abstraction",
  "active",
  "and",
  "arg",
  "array",
  "array.",
  "as",
  "as?",
  "asc",
  "ascending",
  "asr",
  "assert",
  "async",
  "async {",
  "async!",
  "asynchronous",
  "asyncronous",
  "await",
  "base",
  "begin",
  "bool",
  "bool\\s*",
  "break",
  "by",
  "case",
  "catch",
  "char",
  "choose",
  "class",
  "classes",
  "collect",
  "concat",
  "cons",
  "const",
  "constructor",
  "database",
  "date",
  "decimal",
  "default",
  "defaultArg",
  "delay",
  "delegate",
  "delimeter",
  "desc",
  "descending",
  "diagram",
  "dispose",
  "do",
  "do!",
  "done",
  "double",
  "downcast",
  "downto",
  "dynamicArg",
  "elif",
  "elifmatches",
  "elifs",
  "elifsstmts",
  "elifsstmtswith",
  "elifsstmtswithmatches",
  "elifswith",
  "elifswithmatches",
  "elifswithstmts",
  "else",
  "elseif",
  "empty",
  "end",
  "enum",
  "eprintf",
  "eq",
  "equal",
  "equals",
  "event",
  "except",
  "exception",
  "exceptions",
  "exists",
  "exn",
  "extern",
  "failwith",
  "false",
  "filter",
  "finally",
  "fixed",
  "float",
  "fn",
  "fold",
  "fold!",
  "for",
  "foreach",
  "format",
  "fprintf",
  "fprintfn",
  "from",
  "fst",
  "fun",
  "fun!",
  "funarg",
  "function",
  "functor",
  "generic",
  "get",
  "global",
  "group",
  "hashed",
  "helpers",
  "here",
  "if",
  "ignore",
  "implements",
  "import",
  "imports",
  "in",
  "include",
  "inherit",
  "inline",
  "int",
  "int8",
  "int\\s*",
  "interface",
  "internal",
  "into",
  "iter",
  "join",
  "lambda",
  "lazy",
  "lerp",
  "let",
  "let inline",
  "let rec",
  "let!",
  "let*",
  "list",
  "map",
  "map!",
  "mapi",
  "match",
  "match!",
  "matchAny",
  "measure",
  "member",
  "module",
  "module!",
  "mutable",
  "mutable!",
  "mutable?",
  "mutable?.Value",
  "mutable?.Value=",
  "namespace",
  "new",
  "none",
  "not",
  "null",
  "object.",
  "of",
  "on",
  "open",
  "open!",
  "option",
  "or",
  "orch",
  "order",
  "orderby",
  "override",
  "parameter",
  "partial",
  "phash",
  "printf",
  "printfn",
  "private",
  "protected",
  "public",
  "raise",
  "read-only",
  "rec",
  "recd",
  "record",
  "reduce",
  "ref",
  "reference",
  "result",
  "return",
  "return!",
  "rev",
  "run",
  "scanf",
  "select",
  "seq",
  "sequence",
  "sequencem",
  "set",
  "shortint",
  "skip",
  "some",
  "sort",
  "source",
  "sprintf",
  "sprintfn",
  "ssize",
  "static",
  "stream",
  "string",
  "string\\s*",
  "struct",
  "switch",
  "take",
  "task",
  "template",
  "then",
  "throw",
  "to",
  "toSeq",
  "trace",
  "traits",
  "true",
  "try",
  "try with",
  "tryWith",
  "tryn",
  "trywith",
  "tuple",
  "type",
  "typeof",
  "uint",
  "unboxed",
  "union",
  "unit",
  "units",
  "until",
  "upcast",
  "use",
  "use!",
  "val",
  "var",
  "virtual",
  "void",
  "volatile",
  "when",
  "where",
  "while",
  "with",
  "yield",
  "yield break",
  "yield return",
  "yield!",
  "yield!!",
  "yieldFrom",
  "yieldM",
  "yieldTo",
  "yieldval",
  "zip",
  "{",
  "|",
  "|>",
  "||",
  "||=",
  "|||",
  "}"
]
[
  "!",
  "!=",
  "#selector",
  "%",
  "&",
  "&&",
  "(",
  ")",
  "*",
  "*/",
  "*=",
  "+",
  "+=",
  ",",
  "-",
  "-=",
  "->",
  ".",
  "/",
  "/*",
  "//",
  "//=",
  "/=",
  ":",
  ":Swift",
  ";",
  "<",
  "<=",
  "=",
  "==",
  "===",
  "=>",
  ">",
  ">=",
  ">=0",
  "@IBAction",
  "@IBOutlet",
  "@autoclosure",
  "@escaping",
  "Any",
  "AnyObject",
  "Array",
  "Bool",
  "Character",
  "Class",
  "Dictionary",
  "Double",
  "Float",
  "Int",
  "Optional",
  "Optionals",
  "Self",
  "Set",
  "String",
  "Swift",
  "Type",
  "Typealias",
  "[",
  "]",
  "^",
  "as",
  "as!",
  "as?",
  "associatedtype",
  "associatedtype protocol",
  "associativity",
  "async",
  "await",
  "break",
  "case",
  "case let",
  "catch",
  "class",
  "class {",
  "closure",
  "closures",
  "compactMap",
  "continue",
  "convenience",
  "convenience init",
  "debugPrint",
  "default",
  "defer",
  "deinit",
  "deinit?",
  "description",
  "description property",
  "do",
  "do-with-resources",
  "dynamic",
  "dynamicType",
  "else",
  "enum",
  "enumerated",
  "extension",
  "extension protocol",
  "fallthrough",
  "false",
  "fileprivate",
  "filter",
  "final",
  "finally",
  "flatMap",
  "for",
  "func",
  "func {",
  "generics",
  "guard",
  "guard let",
  "guard let {",
  "if",
  "if let",
  "if let {",
  "import",
  "import Foundation",
  "in",
  "infix",
  "init",
  "init()",
  "init?",
  "inout",
  "int",
  "internal",
  "is",
  "lazy",
  "let",
  "let .",
  "let self",
  "let unowned",
  "let weak",
  "let*",
  "let:",
  "let?",
  "map",
  "module",
  "mutating",
  "namespace",
  "new",
  "nil",
  "nonmutating",
  "open",
  "optional",
  "override",
  "postfix",
  "prefix",
  "print",
  "print(",
  "private",
  "protocol",
  "public",
  "range",
  "readwrite",
  "reduce",
  "repeat",
  "replaceOccurrences(of:",
  "required",
  "rethrows",
  "return",
  "return type",
  "self",
  "self()",
  "self.",
  "self.dynamicType",
  "self.property",
  "static",
  "strong",
  "struct",
  "subscript",
  "sum",
  "super",
  "super()",
  "super.",
  "super.init",
  "super.property",
  "switch",
  "throw",
  "throws",
  "throws exception",
  "throws?",
  "true",
  "try",
  "try!",
  "try?",
  "type",
  "typealias",
  "typeof",
  "unowned",
  "var",
  "var*",
  "var:",
  "var=",
  "var?",
  "weak",
  "where",
  "while",
  "zip",
  "{",
  "||",
  "}"
]
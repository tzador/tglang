[
  "!",
  "!=",
  "\"",
  "%",
  "%=",
  "&",
  "&&",
  "&=",
  "'",
  "(",
  "()",
  ")",
  "*",
  "*/",
  "*=",
  "+",
  "++",
  "++=",
  "+=",
  "-",
  "--",
  "--=",
  "-=",
  "->",
  ".",
  "/",
  "/*",
  "//",
  "/=",
  ":=",
  "<",
  "<-",
  "<<",
  "<<=",
  "<=",
  "=",
  "==",
  ">",
  ">=",
  ">>",
  ">>=",
  "?",
  "Go",
  "[",
  "[]",
  "[]int",
  "[]{}(func)",
  "]",
  "]string{",
  "^",
  "^=",
  "_,",
  "`",
  "append",
  "append to slice",
  "append(",
  "append()",
  "appendSlice",
  "bool",
  "break",
  "break;",
  "bufio",
  "byte",
  "bytes",
  "cap",
  "case",
  "case:",
  "chan",
  "channel",
  "channel communication",
  "channels",
  "channels {",
  "close",
  "closed",
  "complex",
  "complex128",
  "complex64",
  "const",
  "const=",
  "continue",
  "continue;",
  "copy",
  "default",
  "default:",
  "defer",
  "defer func",
  "defer func()",
  "defer(",
  "defer()",
  "deferred",
  "deferred func",
  "delete",
  "ease",
  "else",
  "else {",
  "elseif",
  "else{",
  "encoding/json",
  "encoding/xml",
  "error",
  "fallthrough",
  "false",
  "file",
  "find",
  "float",
  "float32",
  "float64",
  "fmt",
  "fmt.",
  "fmt.Print",
  "fmt.Printf",
  "for",
  "for i, v := range",
  "for range",
  "for{",
  "func",
  "func main",
  "func(",
  "func()",
  "get",
  "go",
  "go append",
  "go bool",
  "go cap",
  "go channel",
  "go complex",
  "go copy",
  "go defer",
  "go defer func",
  "go delete",
  "go func",
  "go func()",
  "go func(n",
  "go goroutine",
  "go imag",
  "go interface",
  "go iota",
  "go len",
  "go make",
  "go map",
  "go new",
  "go nil",
  "go panic",
  "go real",
  "go recover",
  "go routine",
  "go select",
  "go struct",
  "go type",
  "go:",
  "goroutine",
  "goto",
  "http",
  "http.",
  "http.HandlerFunc",
  "http.method",
  "if",
  "if(",
  "import",
  "import (",
  "import()",
  "in",
  "init",
  "int",
  "int16",
  "int32",
  "int64",
  "int8",
  "interface",
  "interface interface",
  "interface{",
  "interface{}",
  "io",
  "io/ioutil",
  "iota",
  "json",
  "json.Marshal",
  "len",
  "len()",
  "let",
  "lock",
  "log",
  "lower",
  "main",
  "main()",
  "main.go",
  "make",
  "make(",
  "make()",
  "make(chan",
  "map",
  "map()",
  "map[",
  "map{}",
  "math",
  "math.Cos",
  "net/http",
  "new",
  "nil",
  "os",
  "os/exec",
  "package",
  "package cmd",
  "package main",
  "panic",
  "panic(",
  "pointer",
  "post",
  "print",
  "println",
  "ptr",
  "range",
  "range []",
  "range ch",
  "range over channel",
  "range()",
  "recover",
  "recover(",
  "recovers",
  "regexp",
  "regexp.MustCompile",
  "return",
  "rune",
  "select",
  "select statement",
  "select {",
  "select{",
  "slice",
  "sort",
  "start",
  "step",
  "stop",
  "strconv",
  "string",
  "strings",
  "strings.ToUpper",
  "struct",
  "struct{",
  "struct{}",
  "sum",
  "switch",
  "switch (",
  "sync",
  "syscall",
  "text",
  "time",
  "true",
  "type",
  "type MyStruct",
  "type struct",
  "type=",
  "typecasting",
  "uint",
  "uint16",
  "uint32",
  "uint64",
  "uint8",
  "uintptr",
  "unsafe",
  "upper",
  "url.Values",
  "var",
  "var=",
  "void",
  "while",
  "{",
  "{}",
  "|",
  "|=",
  "||",
  "}"
]